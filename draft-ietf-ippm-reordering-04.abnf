NextExp = s + 1;
Type-P-Reordered = False;
Type-P-Reordered = True


NextExp = SrcByte + PayloadSize + 1;


r = 0; /* r is the run counter */
n = 0; /* n is the number of runs */
a = 0; /* a is the accumulator of in order packets */
p = 0; /* p is the number of packets */
q = 0; /* q is the squared sum of the run counters */


r = 1;


s={1,2,3,7,8,9,4,5,6}, packets 4, 5, and 6 are reordered, but only 4
IPDV = Delay(SrcNum)-Delay(SrcNum-1)
s = 1, 2, 3, 5, 6, 7, 8, 4, 9, 10
i = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                            /\
s = 1, 2, 3, 4, 7, 5, 6, 8, 9, 10
i = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                      /\ /\


s = 1, 2, 3, 7, 8, 9,10, 4, 5, 6, 11
i = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11



s = 1, 2, 3, 6, 7, 4, 5, 8, 9, 10, 12, 13, 11, 14, 15, 16
i = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16


r = 1, 2, 3, 4, 5, 1, 1, 2, 3,  4,  5,  6,  1,  2,  3,  4, ...
n =                1  2                     3
e=2. There are two different reordering discontinuities, one at
rc = scanf("%d\n", &res);
NextExp = seqnum+1;
iReturn = 1;
r = (r+1) % MAX_N;
           for (j=0; j<min(l, MAX_N) && seqnum<ring[loop(r-j-1)]; j++)
iReturn = 1;
packet = atoi(argv[i]);
