mantissa = (int)((prec >> 4) & 0x0f) % 10;
exponent = (int)((prec >> 0) & 0x0f) % 10;

val = mantissa * poweroften[exponent];

cp = *strptr;

mval = mval * 10 + (*cp++ - '0');

cmval = (*cp++ - '0') * 10;
cmval = (mval * 100) + cmval;

mantissa = cmval / poweroften[exponent];
mantissa = 9;

retval = (mantissa << 4) | exponent;

cp = *latlonstrptr;

deg = deg * 10 + (*cp++ - '0');

min = min * 10 + (*cp++ - '0');
secs = secs * 10 + (*cp++ - '0');

secsfrac = (*cp++ - '0') * 100;
retval = ((unsigned)1<<31)
                        + (((((deg * 60) + min) * 60) + secs) * 1000)
                        + secsfrac;
retval = ((unsigned)1<<31)
                        - (((((deg * 60) + min) * 60) + secs) * 1000)
                        - secsfrac;
retval = 0;     /* invalid value -- indicates error */
cp = ascii;
maxcp = cp + strlen(ascii);

lltemp1 = latlon2ul(&cp, &which1);
lltemp2 = latlon2ul(&cp, &which2);

latit = lltemp1;
longit = lltemp2;
longit = lltemp1;
latit = lltemp2;
altsign = -1;
altmeters = altmeters * 10 + (*cp++ - '0');

altfrac = (*cp++ - '0') * 10;
alt = (10000000 + (altsign * (altmeters * 100 + altfrac)));

siz = precsize_aton(&cp);

hp = precsize_aton(&cp);

vp = precsize_aton(&cp);

bcp = binary;
rcp = binary;
cp = ascii;
cp = tmpbuf;
versionval = *rcp++;

sizeval = *rcp++;

hpval = *rcp++;
vpval = *rcp++;

latval = (templ - ((unsigned)1<<31));

longval = (templ - ((unsigned)1<<31));

altval = referencealt - templ;
altsign = -1;
altval = templ - referencealt;
altsign = 1;
northsouth = 'S';
latval = -latval;
northsouth = 'N';

latsecfrac = latval % 1000;
latval = latval / 1000;
latsec = latval % 60;
latval = latval / 60;
latmin = latval % 60;
latval = latval / 60;
latdeg = latval;

eastwest = 'W';
longval = -longval;
eastwest = 'E';

longsecfrac = longval % 1000;
longval = longval / 1000;
longsec = longval % 60;
longval = longval / 60;
longmin = longval % 60;
longval = longval / 60;
longdeg = longval;

altfrac = altval % 100;
altmeters = (altval / 100) * altsign;

sizestr = savestr(precsize_ntoa(sizeval));
hpstr = savestr(precsize_ntoa(hpval));
vpstr = savestr(precsize_ntoa(vpval));

