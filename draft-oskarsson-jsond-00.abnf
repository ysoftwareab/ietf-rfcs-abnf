value = object / array / string

value = object                           ; e.g. { "a": "string" }

value = array                            ; e.g. [ "string" ]

value = %x22.62.6f.6f.6c.65.61.6e.22     ; "boolean"
value = %x22.73.74.72.69.6e.67.22        ; "string"

value = %x22 regular-expression %x22     ; e.g. "[a-z]"

value = %x22.6e.75.6d.62.65.72.22        ; "number"

value = %x22.69.6e.74.65.67.65.72.22     ; "integer"

begin-exclusive = %x28                   ; (

end-exclusive = %x29                     ; )

integer = [ minus ] zero / ( digit1-9 *DIGIT )

number = integer [ frac ] [ exp ]

set = begin-object number *( value-separator number ) end-object

interval = begin-array / begin-exclusive ( ( number
value = %x22 1*( set / interval ) %x22   ; e.g. "[1.0,2.0)"

value = %x22 [ scheme ] path %x22           ; e.g. "file.jsond"


name = %x22 *char [ %x3f ] %x22          ; e.g. "name?"

