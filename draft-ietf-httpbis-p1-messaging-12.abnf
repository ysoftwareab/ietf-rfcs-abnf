example-list      = 1#example-list-elmt
example-list-elmt = token ; see Section 1.2.2

OWS            = *( [ obs-fold ] WSP )
                    ; "optional" whitespace
RWS            = 1*( [ obs-fold ] WSP )
                    ; "required" whitespace
BWS            = OWS
                    ; "bad" whitespace
obs-fold       = CRLF
                    ; see Section 3.2

word           = token / quoted-string

token          = 1*tchar

tchar          = "!" / "#" / "$" / "%" / "&" / "'" / "*"
                    / "+" / "-" / "." / "^" / "_" / "`" / "|" / "~"
                    / DIGIT / ALPHA
                    ; any VCHAR, except special

special        = "(" / ")" / "<" / ">" / "@" / ","
                    / ";" / ":" / "\" / DQUOTE / "/" / "["





                    / "]" / "?" / "=" / "{" / "}"

quoted-string  = DQUOTE *( qdtext / quoted-pair ) DQUOTE
qdtext         = OWS / %x21 / %x23-5B / %x5D-7E / obs-text
                    ; OWS / <VCHAR except DQUOTE and "\"> / obs-text
obs-text       = %x80-FF

quoted-pair    = "\" ( WSP / VCHAR / obs-text )

request-header  = <request-header, defined in [Part2], Section 3>
response-header = <response-header, defined in [Part2], Section 5>


MIME-Version    = <MIME-Version, defined in [Part3], Appendix A.1>


Cache-Control   = <Cache-Control, defined in [Part6], Section 3.4>
Pragma          = <Pragma, defined in [Part6], Section 3.4>
Warning         = <Warning, defined in [Part6], Section 3.6>

UA ======================================= O
                                   <   response

UA =========== A =========== B =========== C =========== O
                  <             <             <             <

UA =========== A =========== B - - - - - - C - - - - - - O
                     <             <






HTTP-Version   = HTTP-Prot-Name "/" 1*DIGIT "." 1*DIGIT
HTTP-Prot-Name = %x48.54.54.50 ; "HTTP", case-sensitive

URI-reference = <URI-reference, defined in [RFC3986], Section 4.1>
absolute-URI  = <absolute-URI, defined in [RFC3986], Section 4.3>
relative-part = <relative-part, defined in [RFC3986], Section 4.2>
authority     = <authority, defined in [RFC3986], Section 3.2>
path-abempty  = <path-abempty, defined in [RFC3986], Section 3.3>
path-absolute = <path-absolute, defined in [RFC3986], Section 3.3>
port          = <port, defined in [RFC3986], Section 3.2.3>
query         = <query, defined in [RFC3986], Section 3.4>
uri-host      = <host, defined in [RFC3986], Section 3.2.2>

partial-URI   = relative-part [ "?" query ]

http-URI = "http:" "//" authority path-abempty [ "?" query ]





https-URI = "https:" "//" authority path-abempty [ "?" query ]

HTTP-message    = start-line
                       *( header-field CRLF )
                       CRLF
                       [ message-body ]
start-line      = Request-Line / Status-Line

header-field   = field-name ":" OWS [ field-value ] OWS
field-name     = token
field-value    = *( field-content / OWS )
field-content  = *( WSP / VCHAR / obs-text )

comment        = "(" *( ctext / quoted-cpair / comment ) ")"
ctext          = OWS / %x21-27 / %x2A-5B / %x5D-7E / obs-text
                    ; OWS / <VCHAR except "(", ")", and "\"> / obs-text

quoted-cpair    = "\" ( WSP / VCHAR / obs-text )

message-body = *OCTET

general-header = Cache-Control            ; [Part6], Section 3.2
                    / Connection               ; Section 9.1
                    / Date                     ; Section 9.3
                    / Pragma                   ; [Part6], Section 3.4
                    / Trailer                  ; Section 9.6
                    / Transfer-Encoding        ; Section 9.7
                    / Upgrade                  ; Section 9.8
                    / Via                      ; Section 9.9
                    / Warning                  ; [Part6], Section 3.6
                    / MIME-Version             ; [Part3], Appendix A.1

Request       = Request-Line              ; Section 4.1
                     *( header-field CRLF )    ; Section 3.2
                     CRLF
                     [ message-body ]          ; Section 3.3

Request-Line   = Method SP request-target SP HTTP-Version CRLF

Method         = token










request-target = "*"
                    / absolute-URI
                    / ( path-absolute [ "?" query ] )
                    / authority

Response      = Status-Line               ; Section 5.1
                     *( header-field CRLF )    ; Section 3.2
                     CRLF
                     [ message-body ]          ; Section 3.3

Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF

Status-Code    = 3DIGIT
Reason-Phrase  = *( WSP / VCHAR / obs-text )

HTTP-date    = rfc1123-date / obs-date

rfc1123-date = day-name "," SP date1 SP time-of-day SP GMT
day-name     = %x4D.6F.6E ; "Mon", case-sensitive
                  / %x54.75.65 ; "Tue", case-sensitive
                  / %x57.65.64 ; "Wed", case-sensitive
                  / %x54.68.75 ; "Thu", case-sensitive
                  / %x46.72.69 ; "Fri", case-sensitive
                  / %x53.61.74 ; "Sat", case-sensitive
                  / %x53.75.6E ; "Sun", case-sensitive

date1        = day SP month SP year
                  ; e.g., 02 Jun 1982

day          = 2DIGIT
month        = %x4A.61.6E ; "Jan", case-sensitive
                  / %x46.65.62 ; "Feb", case-sensitive
                  / %x4D.61.72 ; "Mar", case-sensitive
                  / %x41.70.72 ; "Apr", case-sensitive
                  / %x4D.61.79 ; "May", case-sensitive
                  / %x4A.75.6E ; "Jun", case-sensitive
                  / %x4A.75.6C ; "Jul", case-sensitive
                  / %x41.75.67 ; "Aug", case-sensitive
                  / %x53.65.70 ; "Sep", case-sensitive
                  / %x4F.63.74 ; "Oct", case-sensitive
                  / %x4E.6F.76 ; "Nov", case-sensitive
                  / %x44.65.63 ; "Dec", case-sensitive
year         = 4DIGIT

GMT   = %x47.4D.54 ; "GMT", case-sensitive

time-of-day  = hour ":" minute ":" second
                    ; 00:00:00 - 23:59:59

hour         = 2DIGIT
minute       = 2DIGIT
second       = 2DIGIT

obs-date     = rfc850-date / asctime-date







rfc850-date  = day-name-l "," SP date2 SP time-of-day SP GMT
date2        = day "-" month "-" 2DIGIT
                    ; day-month-year (e.g., 02-Jun-82)

day-name-l   = %x4D.6F.6E.64.61.79 ; "Monday", case-sensitive
            / %x54.75.65.73.64.61.79 ; "Tuesday", case-sensitive
            / %x57.65.64.6E.65.73.64.61.79 ; "Wednesday", case-sensitive
            / %x54.68.75.72.73.64.61.79 ; "Thursday", case-sensitive
            / %x46.72.69.64.61.79 ; "Friday", case-sensitive
            / %x53.61.74.75.72.64.61.79 ; "Saturday", case-sensitive
            / %x53.75.6E.64.61.79 ; "Sunday", case-sensitive


asctime-date = day-name SP date3 SP time-of-day SP year
date3        = month SP ( 2DIGIT / ( SP 1DIGIT ))
                    ; month day (e.g., Jun  2)

      Note: Recipients of date values are encouraged to be robust in
      accepting date values that might have been sent by non-HTTP
      applications, as is sometimes the case when retrieving or posting
      messages via proxies/gateways to SMTP or NNTP.

      Note: HTTP requirements for the date/time stamp format apply only
      to their usage within the protocol stream.  Clients and servers
      are not required to use these formats for user presentation,
      request logging, etc.

transfer-coding         = "chunked" ; Section 6.2.1
                             / "compress" ; Section 6.2.2.1
                             / "deflate" ; Section 6.2.2.2
                             / "gzip" ; Section 6.2.2.3
                             / transfer-extension
transfer-extension      = token *( OWS ";" OWS transfer-parameter )

transfer-parameter      = attribute BWS "=" BWS value
attribute               = token
value                   = word





Chunked-Body   = *chunk
                      last-chunk
                      trailer-part
                      CRLF

chunk          = chunk-size *WSP [ chunk-ext ] CRLF
                      chunk-data CRLF
chunk-size     = 1*HEXDIG
last-chunk     = 1*("0") *WSP [ chunk-ext ] CRLF

chunk-ext      = *( ";" *WSP chunk-ext-name
                         [ "=" chunk-ext-val ] *WSP )
chunk-ext-name = token
chunk-ext-val  = token / quoted-str-nf
chunk-data     = 1*OCTET ; a sequence of chunk-size octets
trailer-part   = *( header-field CRLF )

quoted-str-nf  = DQUOTE *( qdtext-nf / quoted-pair ) DQUOTE
                    ; like quoted-string, but disallowing line folding
qdtext-nf      = WSP / %x21 / %x23-5B / %x5D-7E / obs-text
                    ; WSP / <VCHAR except DQUOTE and "\"> / obs-text





product         = token ["/" product-version]
product-version = token

qvalue         = ( "0" [ "." 0*3DIGIT ] )
                    / ( "1" [ "." 0*3("0") ] )

      Note: "Quality values" is a misnomer, since these values merely
      represent relative degradation in desired quality.

Connection       = "Connection" ":" OWS Connection-v
Connection-v     = 1#connection-token
connection-token = token

Content-Length   = "Content-Length" ":" OWS 1*Content-Length-v





Content-Length-v = 1*DIGIT

Date   = "Date" ":" OWS Date-v
Date-v = HTTP-date

Host   = "Host" ":" OWS Host-v
Host-v = uri-host [ ":" port ] ; Section 2.6.1

TE        = "TE" ":" OWS TE-v
TE-v      = #t-codings
t-codings = "trailers" / ( transfer-extension [ te-params ] )
te-params = OWS ";" OWS "q=" qvalue *( te-ext )
te-ext    = OWS ";" OWS token [ "=" word ]

Trailer   = "Trailer" ":" OWS Trailer-v
Trailer-v = 1#field-name

Transfer-Encoding   = "Transfer-Encoding" ":" OWS
                           Transfer-Encoding-v
Transfer-Encoding-v = 1#transfer-coding

Upgrade   = "Upgrade" ":" OWS Upgrade-v
Upgrade-v = 1#product

Via               = "Via" ":" OWS Via-v
Via-v             = 1#( received-protocol RWS received-by
                             [ RWS comment ] )
received-protocol = [ protocol-name "/" ] protocol-version
protocol-name     = token
protocol-version  = token
received-by       = ( uri-host [ ":" port ] ) / pseudonym
pseudonym         = token

BWS = OWS

Cache-Control = <Cache-Control, defined in [Part6], Section 3.4>
Chunked-Body = *chunk last-chunk trailer-part CRLF
Connection = "Connection:" OWS Connection-v
Connection-v = *( "," OWS ) connection-token *( OWS "," [ OWS
    connection-token ] )
Content-Length = "Content-Length:" OWS 1*Content-Length-v
Content-Length-v = 1*DIGIT

Date = "Date:" OWS Date-v
Date-v = HTTP-date

GMT = %x47.4D.54 ; GMT

HTTP-Prot-Name = %x48.54.54.50 ; HTTP
HTTP-Version = HTTP-Prot-Name "/" 1*DIGIT "." 1*DIGIT
HTTP-date = rfc1123-date / obs-date
HTTP-message = start-line *( header-field CRLF ) CRLF [ message-body
    ]
Host = "Host:" OWS Host-v
Host-v = uri-host [ ":" port ]

MIME-Version = <MIME-Version, defined in [Part3], Appendix A.1>
Method = token

OWS = *( [ obs-fold ] WSP )

Pragma = <Pragma, defined in [Part6], Section 3.4>

RWS = 1*( [ obs-fold ] WSP )
Reason-Phrase = *( WSP / VCHAR / obs-text )
Request = Request-Line *( header-field CRLF ) CRLF [ message-body ]
Request-Line = Method SP request-target SP HTTP-Version CRLF
Response = Status-Line *( header-field CRLF ) CRLF [ message-body ]

Status-Code = 3DIGIT
Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF

TE = "TE:" OWS TE-v
TE-v = [ ( "," / t-codings ) *( OWS "," [ OWS t-codings ] ) ]
Trailer = "Trailer:" OWS Trailer-v
Trailer-v = *( "," OWS ) field-name *( OWS "," [ OWS field-name ] )





Transfer-Encoding = "Transfer-Encoding:" OWS Transfer-Encoding-v
Transfer-Encoding-v = *( "," OWS ) transfer-coding *( OWS "," [ OWS
    transfer-coding ] )

URI-reference = <URI-reference, defined in [RFC3986], Section 4.1>
Upgrade = "Upgrade:" OWS Upgrade-v
Upgrade-v = *( "," OWS ) product *( OWS "," [ OWS product ] )

Via = "Via:" OWS Via-v
Via-v = *( "," OWS ) received-protocol RWS received-by [ RWS comment
    ] *( OWS "," [ OWS received-protocol RWS received-by [ RWS comment ]
    ] )

Warning = <Warning, defined in [Part6], Section 3.6>

absolute-URI = <absolute-URI, defined in [RFC3986], Section 4.3>
asctime-date = day-name SP date3 SP time-of-day SP year
attribute = token
authority = <authority, defined in [RFC3986], Section 3.2>

chunk = chunk-size *WSP [ chunk-ext ] CRLF chunk-data CRLF
chunk-data = 1*OCTET
chunk-ext = *( ";" *WSP chunk-ext-name [ "=" chunk-ext-val ] *WSP )
chunk-ext-name = token
chunk-ext-val = token / quoted-str-nf
chunk-size = 1*HEXDIG
comment = "(" *( ctext / quoted-cpair / comment ) ")"
connection-token = token
ctext = OWS / %x21-27 ; '!'-'''
    / %x2A-5B ; '*'-'['
    / %x5D-7E ; ']'-'~'
    / obs-text

date1 = day SP month SP year
date2 = day "-" month "-" 2DIGIT
date3 = month SP ( 2DIGIT / ( SP DIGIT ) )
day = 2DIGIT
day-name = %x4D.6F.6E ; Mon
    / %x54.75.65 ; Tue
    / %x57.65.64 ; Wed
    / %x54.68.75 ; Thu
    / %x46.72.69 ; Fri
    / %x53.61.74 ; Sat
    / %x53.75.6E ; Sun









day-name-l = %x4D.6F.6E.64.61.79 ; Monday
    / %x54.75.65.73.64.61.79 ; Tuesday
    / %x57.65.64.6E.65.73.64.61.79 ; Wednesday
    / %x54.68.75.72.73.64.61.79 ; Thursday
    / %x46.72.69.64.61.79 ; Friday
    / %x53.61.74.75.72.64.61.79 ; Saturday
    / %x53.75.6E.64.61.79 ; Sunday

field-content = *( WSP / VCHAR / obs-text )
field-name = token
field-value = *( field-content / OWS )

general-header = Cache-Control / Connection / Date / Pragma / Trailer
    / Transfer-Encoding / Upgrade / Via / Warning / MIME-Version

header-field = field-name ":" OWS [ field-value ] OWS
hour = 2DIGIT
http-URI = "http://" authority path-abempty [ "?" query ]
https-URI = "https://" authority path-abempty [ "?" query ]

last-chunk = 1*"0" *WSP [ chunk-ext ] CRLF

message-body = *OCTET
minute = 2DIGIT
month = %x4A.61.6E ; Jan
    / %x46.65.62 ; Feb
    / %x4D.61.72 ; Mar
    / %x41.70.72 ; Apr
    / %x4D.61.79 ; May
    / %x4A.75.6E ; Jun
    / %x4A.75.6C ; Jul
    / %x41.75.67 ; Aug
    / %x53.65.70 ; Sep
    / %x4F.63.74 ; Oct
    / %x4E.6F.76 ; Nov
    / %x44.65.63 ; Dec

obs-date = rfc850-date / asctime-date
obs-fold = CRLF
obs-text = %x80-FF

partial-URI = relative-part [ "?" query ]
path-abempty = <path-abempty, defined in [RFC3986], Section 3.3>
path-absolute = <path-absolute, defined in [RFC3986], Section 3.3>
port = <port, defined in [RFC3986], Section 3.2.3>
product = token [ "/" product-version ]
product-version = token
protocol-name = token





protocol-version = token
pseudonym = token

qdtext = OWS / "!" / %x23-5B ; '#'-'['
    / %x5D-7E ; ']'-'~'
    / obs-text
qdtext-nf = WSP / "!" / %x23-5B ; '#'-'['
    / %x5D-7E ; ']'-'~'
    / obs-text
query = <query, defined in [RFC3986], Section 3.4>
quoted-cpair = "\" ( WSP / VCHAR / obs-text )
quoted-pair = "\" ( WSP / VCHAR / obs-text )
quoted-str-nf = DQUOTE *( qdtext-nf / quoted-pair ) DQUOTE
quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE
qvalue = ( "0" [ "." *3DIGIT ] ) / ( "1" [ "." *3"0" ] )

received-by = ( uri-host [ ":" port ] ) / pseudonym
received-protocol = [ protocol-name "/" ] protocol-version
relative-part = <relative-part, defined in [RFC3986], Section 4.2>
request-header = <request-header, defined in [Part2], Section 3>
request-target = "*" / absolute-URI / ( path-absolute [ "?" query ] )
    / authority
response-header = <response-header, defined in [Part2], Section 5>
rfc1123-date = day-name "," SP date1 SP time-of-day SP GMT
rfc850-date = day-name-l "," SP date2 SP time-of-day SP GMT

second = 2DIGIT
special = "(" / ")" / "<" / ">" / "@" / "," / ";" / ":" / "\" /
    DQUOTE / "/" / "[" / "]" / "?" / "=" / "{" / "}"
start-line = Request-Line / Status-Line

t-codings = "trailers" / ( transfer-extension [ te-params ] )
tchar = "!" / "#" / "$" / "%" / "&" / "'" / "*" / "+" / "-" / "." /
    "^" / "_" / "`" / "|" / "~" / DIGIT / ALPHA
te-ext = OWS ";" OWS token [ "=" word ]
te-params = OWS ";" OWS "q=" qvalue *te-ext
time-of-day = hour ":" minute ":" second
token = 1*tchar
trailer-part = *( header-field CRLF )
transfer-coding = "chunked" / "compress" / "deflate" / "gzip" /
    transfer-extension
transfer-extension = token *( OWS ";" OWS transfer-parameter )
transfer-parameter = attribute BWS "=" BWS value

uri-host = <host, defined in [RFC3986], Section 3.2.2>

value = word






word = token / quoted-string

year = 4DIGIT

