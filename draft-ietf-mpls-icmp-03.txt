


MPLS Working Group                                             R. Bonica
Internet-Draft                                                    D. Gan
Expires: February 3, 2006                               Juniper Networks
                                                               D. Tappan
                                                     Cisco Systems, Inc.
                                                          August 2, 2005


           ICMP Extensions for MultiProtocol Label Switching
                        draft-ietf-mpls-icmp-03

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on February 3, 2006.

Copyright Notice

   Copyright (C) The Internet Society (2005).

Abstract

   This memo proposes extensions to ICMP that permit Label Switching
   Routers to append MPLS information to ICMP messages.







Bonica, et al.          Expires February 3, 2006                [Page 1]

Internet-Draft                  ICMP MPLS                    August 2005


Table of Contents

   1.  Conventions Used In This Document  . . . . . . . . . . . . . .  3
   2.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  4
   3.  Application to TRACEROUTE  . . . . . . . . . . . . . . . . . .  5
   4.  Disclaimer . . . . . . . . . . . . . . . . . . . . . . . . . .  6
   5.  Syntax . . . . . . . . . . . . . . . . . . . . . . . . . . . .  7
     5.1   Common Header  . . . . . . . . . . . . . . . . . . . . . .  8
     5.2   Object Header  . . . . . . . . . . . . . . . . . . . . . .  8
     5.3   MPLS Stack Entry Object Class  . . . . . . . . . . . . . .  9
     5.4   Extended Payload Object Class  . . . . . . . . . . . . . . 10
   6.  Backward Compatibility . . . . . . . . . . . . . . . . . . . . 11
   7.  Security Considerations  . . . . . . . . . . . . . . . . . . . 12
   8.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 13
   9.  Normative References . . . . . . . . . . . . . . . . . . . . . 13
       Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . 13
       Intellectual Property and Copyright Statements . . . . . . . . 15


































Bonica, et al.          Expires February 3, 2006                [Page 2]

Internet-Draft                  ICMP MPLS                    August 2005


1.   Conventions Used In This Document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC2119 [1].














































Bonica, et al.          Expires February 3, 2006                [Page 3]

Internet-Draft                  ICMP MPLS                    August 2005


2.  Introduction

   IP routers use the Internet Control Message Protocol (ICMP) [2] to
   convey control information to source hosts.  Network operators use
   this information to diagnose routing problems.

   When a router receives an undeliverable IP datagram, it can send an
   ICMP message to the host that originated the datagram.  The ICMP
   message indicates why the datagram could not be delivered.  It also
   contains the IP header and leading payload octets of the "original
   datagram".

   In this document, the term "original datagram" refers to the datagram
   to which the ICMP message is a response.

   MPLS Label Switching Routers (LSR) also use ICMP to convey control
   information to source hosts.  Sections 2.3 and 2.4 of RFC 3032 [3]
   describe the interaction between MPLS and ICMP.

   When an LSR receives an undeliverable MPLS encapsulated datagram, it
   removes the entire MPLS label stack, exposing the previously
   encapsulated IP datagram.  The LSR then submits the IP datagram to an
   error processing module.  Error processing can include ICMP message
   generation.

   The ICMP message indicates why the original datagram could not be
   delivered.  It also contains the IP header and leading octets of the
   original datagram.

   The ICMP message, however, contains no information regarding the MPLS
   label stack that encapsulated the original datagram when it arrived
   at the LSR.  This omission is significant because the LSR would have
   routed the original datagram based upon information contained by the
   MPLS label stack.

   This memo proposes extensions to ICMP that permit an LSR to append
   MPLS label stack information to ICMP messages.  ICMP messages
   regarding MPLS encapsulated datagrams SHOULD include the MPLS label
   stack, as it arrived at the router that is sending the ICMP message.
   The ICMP message MUST also include the IP header and leading payload
   octets of the original datagram.










Bonica, et al.          Expires February 3, 2006                [Page 4]

Internet-Draft                  ICMP MPLS                    August 2005


3.  Application to TRACEROUTE

   ICMP extensions defined in this memo support enhancements to
   TRACEROUTE.  The enhanced TRACEROUTE, like older implementations,
   indicates which nodes the original datagram visited en route to its
   destination.  It differs from older implementations in that it also
   indicates the original datagrams MPLS encapsulation status as it
   arrived at each node.

   Figure 1 contains sample output from an enhanced TRACEROUTE
   implementation.



     > traceroute 100.100.6.1

     traceroute to 100.100.6.1 (100.100.6.1), 30 hops max, 40 byte packets

      1  10.1.1.2 (10.1.1.2)  0.661 ms  0.618 ms  0.579 ms

      2  10.1.12.2 (10.1.12.2)  0.861 ms  0.718 ms  0.679 ms

        MPLS Label=100048 Exp=0 TTL=1 S=1

      3  10.1.24.2 (10.1.24.2)  0.822 ms  0.731 ms  0.708 ms

        MPLS Label=100016 Exp=0 TTL=1 S=1

      4  10.100.6.1 (10.100.6.1)  0.961 ms  8.676 ms  0.875 ms


                Figure 1: Enhanced TRACEROUTE Sample Output



















Bonica, et al.          Expires February 3, 2006                [Page 5]

Internet-Draft                  ICMP MPLS                    August 2005


4.  Disclaimer

   This memo does not define the general relationship between ICMP and
   MPLS.  Sections 2.3 and 2.4 of RFC3032 define this relationship.

   Specifically, this document defers to RFC3032 with respect to the
   following issues:

      - conditions upon which an LSR emits ICMP messages

      - handling of ICMP messages bound for hosts that are identified by
      private addresses

   The current memo does not define encapsulation specific TTL
   manipulation procedures.  It defers to Section 5.4 of RFC 3034 [4]
   and Section 10 of RFC 3035 [5] in this matter.

   When encapsulation specific TTL manipulation procedures defeat the
   basic TRACEROUTE mechanism, they will also defeat enhanced TRACEROUTE
   implementations.

   The current memo does not address extensions to ICMPv6.  These should
   be addressed in a separate draft.




























Bonica, et al.          Expires February 3, 2006                [Page 6]

Internet-Draft                  ICMP MPLS                    August 2005


5.  Syntax

   This section defines a data structure that an LSR can append to
   selected ICMP messages.  The data structure contains the MPLS label
   stack that encapsulated the original datagram when it arrived at the
   LSR.

   In theory, the data structure defined herein can be appended to the
   following ICMP message types:

      Destination Unreachable

      Time Exceeded

      Parameter Problem

      Source Quench

      Redirect

   However, in practice, it would only be useful when appended to the
   Destination Unreachable and Time Exceeded messages.

   According to RFC-792, bytes 0 through 19 of any ICMP message contain
   a header whose format is analogous to that of the IP datagram.  Bytes
   20 through 23 contain an ICMP message type, code and checksum.  Bytes
   24 through 27 contain message specific data.

   Also according to RFC-792, the final field contained by each of the
   ICMP message types listed above begins at byte 28.  It reflects the
   IP header and leading 64 bits of the original datagram.  RFC 1812 [6]
   recommends that this final field be extended to include as much of
   the original datagram as possible.

   When an LSR appends the data structure defined herein to an ICMP
   message, the final field of the ICMP message body MUST contain the
   first 128 octets of the original datagram.  At least 20 of these 128
   octets represent the IP header of the original datagram.

   If the original datagram was shorter than 128 octets, the final field
   MUST be padded with 0's.

   When an LSR appends the data structure defined herein to an ICMP
   message, the ICMP "total length" MUST be adjusted appropriately to
   include the data structure.

   The data structure defined in this section consists of a common
   header followed by object instances.  Each object instance consists



Bonica, et al.          Expires February 3, 2006                [Page 7]

Internet-Draft                  ICMP MPLS                    August 2005


   of an object header plus contents.

   Currently, two object classes are defined.  One object class contains
   an entire MPLS label stack, formatted exactly as it was when it
   arrived at the LSR that sends the ICMP message.  The other contains
   some portion of the original datagram that could not be included in
   the final field of the ICMP message body (i.e., the octet 129 and
   beyond).

   Both object classes are optional.

   In the future, additional object classes may be defined.

5.1  Common Header


             0             1            2              3
      +-------------+-------------+-------------+-------------+
      | Vers |     (Reserved)     |          Checksum         |
      +-------------+-------------+-------------+-------------+

                          Figure 2: Common Header

   The fields in the common header are as follows:

   Vers: 4 bits

      ICMP extension version number.  This is version 2.

   Checksum: 16 bits

      The one's complement of the one's complement sum of the data
      structure, with the checksum field replaced by zero for the
      purpose of computing the checksum.  An all-zero value means that
      no checksum was transmitted.

      If the checksum field contains a value other than described above,
      the ICMP message does not include the extensions described in this
      memo.  This, however, does not imply that the ICMP message is
      malformed.  It may be in strict compliance with RFC-1812.

   Reserved: Must be set to 0.

5.2  Object Header

   Every object consists of one or more 32-bit words with a one-word
   header.  The following is the format of the one-word header:




Bonica, et al.          Expires February 3, 2006                [Page 8]

Internet-Draft                  ICMP MPLS                    August 2005


      +-------------+-------------+-------------+-------------+
      |           Length          | Class-Num   | C-Type      |
      +-------------+-------------+-------------+-------------+
      |                                                       |
      |               // (Object contents) //                 |
      |                                                       |
      +-------------+-------------+-------------+-------------+

                          Figure 3: Object Header

   An object header has the following fields:

   Length: 16 bits

      Length of the object, measured in octets, including the object
      header and object contents.

   Class-Num: 8 bits

      Identifies object class.

   C-Type: 8 bits

      Identifies object sub-type.


5.3  MPLS Stack Entry Object Class

   A single instance of the MPLS Entry Object class represents the
   entire MPLS label stack, formatted exactly as it was when it arrived
   at the LSR that sends the ICMP message

   In the illustration below, octets 0-3 depict the first member of the
   MPLS label stack.  Each remaining member of the MPLS label stack is
   represented by another 4 octets that share the same format.

   Syntax follows:

   MPLS Stack Entry Class = 1, C-Type = 1.












Bonica, et al.          Expires February 3, 2006                [Page 9]

Internet-Draft                  ICMP MPLS                    August 2005


              0             1             2            3
      +-------------+-------------+-------------+-------------+
      |              Label               |EXP |S|     TTL     |
      +-------------+-------------+-------------+-------------+
      |                                                       |
      |       // Remaining MPLS Stack Entries //              |
      |                                                       |
      +-------------+-------------+-------------+-------------+

                  Figure 4: MPLS Stack Entry Object Class

   Label: 20 bits

   Exp: Experimental Use, 3 bits

   S: Bottom of Stack, 1 bit

   TTL: Time to Live, 8 bits

5.4  Extended Payload Object Class

   An instance of the Extended Payload Object class represents some
   portion of the original datagram that could not be fit in the final
   field of the ICMP message body (i.e., octets beyond 128).

   Syntax follows:

   MPLS Stack Entry Class = 2, C-Type = 1.



              0             1             2            3
      +-------------+-------------+-------------+-------------+
      |                                                       |
      |       // Additional bytes of original datagram //     |
      |                                                       |
      +-------------+-------------+-------------+-------------+

                  Figure 5: Extended Payload Object Class












Bonica, et al.          Expires February 3, 2006               [Page 10]

Internet-Draft                  ICMP MPLS                    August 2005


6.  Backward Compatibility

   ICMP extensions proposed in this document MUST be backward compatible
   with the syntax described in RFC-792.  Extensions proposed in this
   memo MUST NOT change or deprecate any field defined in RFC-792.

   The extensions defined herein are in keeping with the spirit, if not
   the letter of RFC-1812.  In order to support IP-in-IP tunneling, RFC-
   1812 extends the final field of selected ICMP messages to include a
   greater portion of the original datagram.  Unfortunately, it extends
   this field to a variable length without adding a length attribute.

   This memo binds the length of that final field to an arbitrarily
   large value (128 octets).  Fixing the length of that field
   facilitates extension of the ICMP message.  An additional object is
   provided through which octets 129 and beyond can be appended to the
   ICMP message.

   As few datagrams contain L3 or L4 header information beyond octet
   128, it is unlikely that the extensions described herein will disable
   any applications that rely upon RFC-1812 style ICMP messages.






























Bonica, et al.          Expires February 3, 2006               [Page 11]

Internet-Draft                  ICMP MPLS                    August 2005


7.  Security Considerations

   This memo presents no security considerations beyond those already
   presented by current ICMP applications (e.g., traceroute).















































Bonica, et al.          Expires February 3, 2006               [Page 12]

Internet-Draft                  ICMP MPLS                    August 2005


8.  IANA Considerations

   IANA should establish a registry of ICMP extention classes and class-
   sub-types.

9.  Normative References

   [1]  Bradner, S., "Key words for use in RFCs to Indicate Requirement
        Levels", BCP 14, RFC 2119, March 1997.

   [2]  Postel, J., "Internet Control Message Protocol", STD 5, RFC 792,
        September 1981.

   [3]  Rosen, E., Tappan, D., Fedorkow, G., Rekhter, Y., Farinacci, D.,
        Li, T., and A. Conta, "MPLS Label Stack Encoding", RFC 3032,
        January 2001.

   [4]  Conta, A., Doolan, P., and A. Malis, "Use of Label Switching on
        Frame Relay Networks Specification", RFC 3034, January 2001.

   [5]  Davie, B., Lawrence, J., McCloghrie, K., Rosen, E., Swallow, G.,
        Rekhter, Y., and P. Doolan, "MPLS using LDP and ATM VC
        Switching", RFC 3035, January 2001.

   [6]  Baker, F., "Requirements for IP Version 4 Routers", RFC 1812,
        June 1995.


Authors' Addresses

   Ronald P. Bonica
   Juniper Networks
   2251 Corporate Park Drive
   Herndon, VA  20171
   US

   Email: rbonica@juniper.net


   Der-Hwa Gan
   Juniper Networks
   1194 N. Mathilda Ave.
   Sunnyvale, CA  94089
   US

   Email: dhg@juniper.net





Bonica, et al.          Expires February 3, 2006               [Page 13]

Internet-Draft                  ICMP MPLS                    August 2005


   Daniel C. Tappan
   Cisco Systems, Inc.
   250 Apollo Drive
   Chelmsford, MA  01824
   US

   Email: tappan@cisco.com












































Bonica, et al.          Expires February 3, 2006               [Page 14]

Internet-Draft                  ICMP MPLS                    August 2005


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Disclaimer of Validity

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Copyright Statement

   Copyright (C) The Internet Society (2005).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.




Bonica, et al.          Expires February 3, 2006               [Page 15]


