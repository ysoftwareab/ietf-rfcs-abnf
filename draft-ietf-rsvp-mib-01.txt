



Internet Draft             RSVP MIB              February 1996


               RSVP Management Information Base
                  draft-ietf-rsvp-mib-01.txt

                 Tue Feb 13 16:07:47 PST 1996


                          Fred Baker

                        Cisco Systems
                        519 Lado Drive
               Santa Barbara, California 93111

                        fred@cisco.com


                        John Krawczyk

                      Bay Networks, Inc
                       2 Federal Street
                Billerica, Massachusetts 01821

                      jj@BayNetworks.com






1.  Status of this Memo

This document is an Internet Draft.  Internet Drafts are
working documents of the Internet Engineering Task Force
(IETF), its Areas, and its Working Groups. Note that other
groups may also distribute working documents as Internet
Drafts.

Internet Drafts are draft documents valid for a maximum of six
months. Internet Drafts may be updated, replaced, or obsoleted
by other documents at any time.  It is not appropriate to use
Internet Drafts as reference material or to cite them other
than as a "working draft" or "work in progress."

Please check the I-D abstract listing contained in each
Internet Draft directory to learn the current status of this
or any other Internet Draft.





Baker and Krawczyk   Expires August 1996              [Page 1]




Internet Draft             RSVP MIB              February 1996


2.  Abstract

This memo defines a portion of the Management Information Base
(MIB) for use with network management protocols in TCP/IP-
based internets.  In particular, it defines objects for
managing the Resource Reservation Protocol (RSVP) within the
interface attributes defined in the Integrated Services Model.
Thus, the Integrated Services MIB is directly relevant to and
cross-referenced by this MIB.  Comments should be made to the
RSVP Working Group, rsvp@isi.edu.

This memo does not, in its draft form, specify a standard for
the Internet community.





































Baker and Krawczyk   Expires August 1996              [Page 2]




Internet Draft             RSVP MIB              February 1996


3.  The SNMPv2 Network Management Framework

The SNMPv2 Network Management Framework consists of four major
components.  They are:

o    RFC 1441 which defines the SMI, the mechanisms used for
     describing and naming objects for the purpose of
     management.

o    RFC 1213 defines MIB-II, the core set of managed objects
     for the Internet suite of protocols.

o    RFC 1445 which defines the administrative and other
     architectural aspects of the framework.

o    RFC 1448 which defines the protocol used for network
     access to managed objects.

The Framework permits new objects to be defined for the
purpose of experimentation and evaluation.


3.1.  Object Definitions

Managed objects are accessed via a virtual information store,
termed the Management Information Base or MIB.  Objects in the
MIB are defined using the subset of Abstract Syntax Notation
One (ASN.1) defined in the SMI.  In particular, each object
type is named by an OBJECT IDENTIFIER, an administratively
assigned name.  The object type together with an object
instance serves to uniquely identify a specific instantiation
of the object.  For human convenience, we often use a textual
string, termed the descriptor, to refer to the object type.


4.  Overview

4.1.  Textual Conventions

Several new data types are introduced as a textual convention
in this MIB document.  These textual conventions enhance the
readability of the specification and can ease comparison with
other specifications if appropriate.  It should be noted that
the introduction of the these textual conventions has no
effect on either the syntax nor the semantics of any managed





Baker and Krawczyk   Expires August 1996              [Page 3]




Internet Draft             RSVP MIB              February 1996


objects.  The use of these is merely an artifact of the
explanatory method used.  Objects defined in terms of one of
these methods are always encoded by means of the rules that
define the primitive type.  Hence, no changes to the SMI or
the SNMP are necessary to accommodate these textual
conventions which are adopted merely for the convenience of
readers and writers in pursuit of the elusive goal of clear,
concise, and unambiguous MIB documents.

The new data types are ...

4.2.  Structure of MIB

The MIB is composed of the following sections:
     RSVP
          Session Statistics Table
          Session Sender Table
          Reservation Requests Received Table
          Reservation Requests Forwarded Table
          RSVP Active Flows Table
          RSVP Interface Attributes Table
          RSVP Neighbor Table

5.  Definitions

RSVP-MIB DEFINITIONS ::= BEGIN

        IMPORTS
                MODULE-IDENTITY, OBJECT-TYPE, Gauge32,
                Integer32, IpAddress, experimental   FROM SNMPv2-SMI
                TEXTUAL-CONVENTION, TruthValue, RowStatus,
                TimeStamp                            FROM SNMPv2-TC
                MODULE-COMPLIANCE, OBJECT-GROUP      FROM SNMPv2-CONF
                BitRate, BurstSize                   FROM INTEGRATED-SERVICES-MIB
                ifIndex, InterfaceIndex              FROM IF-MIB;

--  This MIB module uses the extended OBJECT-TYPE macro as
--  defined in [9].












Baker and Krawczyk   Expires August 1996              [Page 4]




Internet Draft             RSVP MIB              February 1996


    rsvp MODULE-IDENTITY
            LAST-UPDATED "9602131607Z" -- Tue Feb 13 16:07:47 PST 1996
            ORGANIZATION "IETF RSVP Working Group"
            CONTACT-INFO
           "       Fred Baker
           Postal: Cisco Systems
                   519 Lado Drive
                   Santa Barbara, California 93111
           Tel:    +1 805 681 0115
           E-Mail: fred@cisco.com

                   John Krawczyk
           Postal: Bay Networks, Inc
                   2 Federal Street
                   Billerica, Massachusetts 01821
           Tel:    +1 508 436 3811
           E-Mail: jj@BayNetworks.com"
       DESCRIPTION
          "The MIB module to describe  the  RSVP  and  In-
          tegrated Services Protocol"
      ::= { experimental 71 }

  rsvpObjects         OBJECT IDENTIFIER ::= { rsvp 1 }
  rsvpNotifications   OBJECT IDENTIFIER ::= { rsvp 2 }
  rsvpConformance     OBJECT IDENTIFIER ::= { rsvp 3 }


    Protocol ::= TEXTUAL-CONVENTION
        DISPLAY-HINT "d"
        STATUS   current
        DESCRIPTION
           "The value of the IP Protocol field  of  an  IP
           Datagram  Header.  This identifies the protocol
           layer above IP.  For example, the  value  6  is
           used  for TCP and the value 17 is used for UDP.
           The values of this field are defined in the As-
           signed Numbers RFC."
       SYNTAX   INTEGER (1..255)












Baker and Krawczyk   Expires August 1996              [Page 5]




Internet Draft             RSVP MIB              February 1996


    Port ::= TEXTUAL-CONVENTION
        DISPLAY-HINT "d"
        STATUS   current
        DESCRIPTION
           "The value of the UDP or TCP Source or Destina-
           tion  Port field.  This pair, when coupled with
           the IP Addresses of the source and  destination
           system  and  the  IP  protocol  field, uniquely
           identifies a data stream.

           Zero is used as a fill value when the  protocol
           indicated  by  IP  Protocol  does not have port
           numbers in the  place  that  UDP  and  TCP  put
           them."
       SYNTAX   INTEGER (0..'FFFF'h)


    RsvpEncapsulation ::= TEXTUAL-CONVENTION
         STATUS   current
         DESCRIPTION
           "This indicates the encapsulation that an  RSVP
           Neighbor is perceived to be using."
        SYNTAX   INTEGER {
                   ip (1),   -- IP Protocol 46
                   udp (2),  -- UDP Encapsulation
                   both (3)  -- neighbor is using both encapsulations
                 }


    RefreshInterval ::= TEXTUAL-CONVENTION
         DISPLAY-HINT "d"
         STATUS   current
         DESCRIPTION
           "The number of milliseconds that  are  expected
           to elapse between refreshes of path or reserva-
           tion state.  Unrefreshed  Path  or  reservation
           state is removed after a small multiple of this
           period."
        SYNTAX   INTEGER (0..'7FFFFFFF'h)











Baker and Krawczyk   Expires August 1996              [Page 6]




Internet Draft             RSVP MIB              February 1996


    QosService ::= TEXTUAL-CONVENTION
         STATUS   current
         DESCRIPTION
           "The class of service in use by a flow."
        SYNTAX   INTEGER {
                   controlledDelay (1),    -- Controlled Delay
                   guaranteedDelay (2),    -- Guaranteed Delay
                   predictiveDelay (3),    -- Predictive Delay
                   controlledLoad (5)      -- Controlled Load
                 }


    DelayClass ::= TEXTUAL-CONVENTION
         DISPLAY-HINT "d"
         STATUS   current
         DESCRIPTION
           "The class of delay used by the Controlled  De-
           lay Service."
        SYNTAX   INTEGER (1..3)


    IpAddressString ::= TEXTUAL-CONVENTION
         DISPLAY-HINT "3d.3d.3d.3d " -- repeat for each IP address
         STATUS   current
         DESCRIPTION
           "A list of IP Addresses as found  in  the  RSVP
           Scope Object."
        SYNTAX   OCTET STRING


    MessageSize ::= TEXTUAL-CONVENTION
        DISPLAY-HINT "d"
        STATUS   current
        DESCRIPTION
           "The size of a message in bytes. This  is  used
           to  specify  the  minimum and maximum size of a
           message along an integrated services route."
       SYNTAX   INTEGER (0..'7FFFFFFF'h)












Baker and Krawczyk   Expires August 1996              [Page 7]




Internet Draft             RSVP MIB              February 1996


--      The RSVP Session Statistics Database displays statistics
--      relating to the number of senders and receivers in each
--      session.


    rsvpSessionTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF RsvpSessionEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Statistics concerning the sessions seen  by  a
           given system."
       ::= { rsvpObjects 7 }


    rsvpSessionEntry OBJECT-TYPE
        SYNTAX      RsvpSessionEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Statistics concerning a  single  RSVP  session
           seen by a given system."
       INDEX { rsvpSessionAddress, rsvpSessionProtocol, rsvpSessionPort }
       ::= { rsvpSessionTable 1 }


    RsvpSessionEntry ::=
        SEQUENCE {
        rsvpSessionAddress          IpAddress,
        rsvpSessionProtocol         Protocol,
        rsvpSessionPort             Port,
        rsvpSessionSenders          Gauge32,
        rsvpSessionReceivers        Gauge32,
        rsvpSessionRequests         Gauge32
        }















Baker and Krawczyk   Expires August 1996              [Page 8]




Internet Draft             RSVP MIB              February 1996


    rsvpSessionAddress OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Address used as a  destination  address
           for all senders in this session."
       ::= { rsvpSessionEntry 1 }


    rsvpSessionProtocol OBJECT-TYPE
        SYNTAX      Protocol
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Protocol used by a session."
       ::= { rsvpSessionEntry 2 }


    rsvpSessionPort OBJECT-TYPE
        SYNTAX      Port
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The UDP or TCP port number used as a  destina-
           tion  port  for  all senders in this session. A
           value of zero indicates that the IP protocol in
           use, specified by rsvpSessionProtocol, does not
           have ports."
       ::= { rsvpSessionEntry 3 }


    rsvpSessionSenders OBJECT-TYPE
        SYNTAX      Gauge32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The number of senders currently  known  to  be
           part of this session."
       ::= { rsvpSessionEntry 4 }










Baker and Krawczyk   Expires August 1996              [Page 9]




Internet Draft             RSVP MIB              February 1996


    rsvpSessionReceivers OBJECT-TYPE
        SYNTAX      Gauge32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The number of reservations being requested  of
           this system for this session."
       ::= { rsvpSessionEntry 5 }


    rsvpSessionRequests OBJECT-TYPE
        SYNTAX      Gauge32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The number of reservation requests this system
           is sending upstream for this session."
       ::= { rsvpSessionEntry 6 }


-- Note that this is a read only table. If the corresponding
-- rsvpSenderTable, rsvpResvTable, and rsvpReqTable entries all
-- are removed, this entry goes away also.



























Baker and Krawczyk   Expires August 1996             [Page 10]




Internet Draft             RSVP MIB              February 1996


--      The RSVP Session Sender Database contains the information
--      displayed by senders regarding their potential contribution
--      to session data content. It is in essence a list of the
--      valid PATH messages that the RSVP Router or Host is receiving.


    rsvpSenderTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF RsvpSenderEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the  state  information
           displayed by senders in PATH messages."
       ::= { rsvpObjects 1 }


    rsvpSenderEntry OBJECT-TYPE
        SYNTAX      RsvpSenderEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the  state  information
           displayed by a single sender's PATH message."
       INDEX { rsvpSenderSession, rsvpSenderSessionProtocol,
               rsvpSenderSessionPort,
               rsvpSenderSource, rsvpSenderSourcePort }
       ::= { rsvpSenderTable 1 }

RsvpSenderEntry ::=
    SEQUENCE {
        rsvpSenderSession               IpAddress,
        rsvpSenderSessionProtocol       Protocol,
        rsvpSenderSessionPort           Port,
        rsvpSenderSource                IpAddress,
        rsvpSenderSourcePort            Port,
        rsvpSenderTSpecRate             BitRate,
        rsvpSenderTSpecPeakRate         BitRate,
        rsvpSenderTSpecBurst            BurstSize,
        rsvpSenderTSpecMinTU            MessageSize,
        rsvpSenderTSpecMaxTU            MessageSize,
        rsvpSenderIf                    InterfaceIndex,
        rsvpSenderPreviousHop           IpAddress,
        rsvpSenderInterval              RefreshInterval,
        rsvpSenderRSVPHop               TruthValue,
        -- place holder for Policy information





Baker and Krawczyk   Expires August 1996             [Page 11]




Internet Draft             RSVP MIB              February 1996


        -- place holder for OPWA Advertisement
        rsvpSenderLastChange            TimeStamp,
        rsvpSenderStatus                RowStatus
    }

    rsvpSenderSession OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Address used as a  destination  address
           for all senders in this session."
       ::= { rsvpSenderEntry 1 }


    rsvpSenderSessionProtocol OBJECT-TYPE
        SYNTAX      Protocol
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The value of the IP  Protocol  field  in  this
           session, typically UDP or TCP."
       ::= { rsvpSenderEntry 2 }


    rsvpSenderSessionPort OBJECT-TYPE
        SYNTAX      Port
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The port number used as a destination port for
           all senders in this session. This will be a UDP
           or TCP port, or a 16 bit number located in  the
           same  position as the UDP/TCP Destination Port.
           When zero, it indicates that the protocol  does
           not use ports."
       ::= { rsvpSenderEntry 3 }













Baker and Krawczyk   Expires August 1996             [Page 12]




Internet Draft             RSVP MIB              February 1996


    rsvpSenderSource OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Address used as  a  source  address  by
           this sender in this session."
       ::= { rsvpSenderEntry 4 }


    rsvpSenderSourcePort OBJECT-TYPE
        SYNTAX      Port
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The port number used as a source port by  this
           sender  in  this session. This will be a UDP or
           TCP port, or a 16 bit  number  located  in  the
           same position as the UDP/TCP Source Port.  When
           zero, it indicates that the protocol  does  not
           use ports."
       ::= { rsvpSenderEntry 5 }


    rsvpSenderTSpecRate OBJECT-TYPE
        SYNTAX      BitRate
        UNITS       "kilobits per second"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The Average Bit  Rate  of  the  sender's  data
           stream, in kilobits/second.  Within a transmis-
           sion burst, the arrival rate may be as fast  as
           rsvpSenderTSpecPeakRate  (if  supported  by the
           service model); however, averaged across two or
           more  burst  intervals,  the  rate  should  not
           exceed rsvpSenderTSpecRate.

           Note that this is a prediction, often based  on
           the  general  capability  of a type of codec or
           particular encoding; the measured average  rate
           may be significantly lower."
       ::= { rsvpSenderEntry 6 }







Baker and Krawczyk   Expires August 1996             [Page 13]




Internet Draft             RSVP MIB              February 1996


    rsvpSenderTSpecPeakRate OBJECT-TYPE
        SYNTAX      BitRate
        UNITS       "kilobits per second"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The Peak Bit Rate of the sender's data stream,
           in  kilobits/second. Traffic arrival is not ex-
           pected to exceed this rate at any  time,  apart
           from  the effects of jitter in the network.  If
           not specified in the TSpec, this  returns  zero
           or noSuchValue."
       ::= { rsvpSenderEntry 7 }


    rsvpSenderTSpecBurst OBJECT-TYPE
        SYNTAX      BurstSize
        UNITS       "bits"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The size of the largest  burst  expected  from
           the sender at a time."
       ::= { rsvpSenderEntry 8 }


    rsvpSenderTSpecMinTU OBJECT-TYPE
        SYNTAX      MessageSize
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The minimum message size for  this  flow.  The
           policing  algorithm will treat smaller messages
           as though they are this size."
       ::= { rsvpSenderEntry 9 }















Baker and Krawczyk   Expires August 1996             [Page 14]




Internet Draft             RSVP MIB              February 1996


    rsvpSenderTSpecMaxTU OBJECT-TYPE
        SYNTAX      MessageSize
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The maximum message size for  this  flow.  The
           admission  algorithm  will  reject TSpecs whose
           Maximum Transmission Unit, plus  the  interface
           headers, exceed the interface MTU."
       ::= { rsvpSenderEntry 10 }


    rsvpSenderIf OBJECT-TYPE
        SYNTAX      InterfaceIndex
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The value of  ifIndex  for  the  interface  on
           which  the  PATH  message was most recently re-
           ceived."
       ::= { rsvpSenderEntry 11 }


    rsvpSenderPreviousHop OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The IP Address of the sender,  or  the  router
           next  closer to the sender, from which the PATH
           message was most recently received."
       ::= { rsvpSenderEntry 12 }


    rsvpSenderInterval OBJECT-TYPE
        SYNTAX      RefreshInterval
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The interval between PATH receipt  of  refresh
           messages as advertised by the Previous Hop."
       ::= { rsvpSenderEntry 13 }








Baker and Krawczyk   Expires August 1996             [Page 15]




Internet Draft             RSVP MIB              February 1996


    rsvpSenderRSVPHop OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "If TRUE, the node believes that  the  previous
           hop  is  an  RSVP  hop.  If FALSE, the node be-
           lieves that the previous hop may not be an RSVP
           hop."
       ::= { rsvpSenderEntry 14 }


    rsvpSenderLastChange OBJECT-TYPE
        SYNTAX      TimeStamp
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The time of the last change in this PATH  mes-
           sage; This includes the first time it was sent,
           or time of the most recent  change  in  parame-
           ters."
       ::= { rsvpSenderEntry 15 }


    rsvpSenderStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "'valid' for all active  PATH  messages.   This
           object  may  be used to install static PATH in-
           formation or delete PATH information."
       ::= { rsvpSenderEntry 16 }

















Baker and Krawczyk   Expires August 1996             [Page 16]




Internet Draft             RSVP MIB              February 1996


--      The RSVP Reservation Requests Received Table contains the
--      information displayed by receivers regarding their needs with
--      respect to sessions and senders. It is in essence a list of the
--      valid RESV messages that the RSVP Router or Host is receiving.


    rsvpResvTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF RsvpResvEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the  state  information
           displayed by receivers in RESV messages."
       ::= { rsvpObjects 2 }


    rsvpResvEntry OBJECT-TYPE
        SYNTAX      RsvpResvEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the  state  information
           displayed  by  a single receiver's RESV message
           concerning a single sender."
       INDEX { rsvpResvSession, rsvpResvSessionProtocol, rsvpResvSessionPort,
               rsvpResvAddress, rsvpResvSourcePort, rsvpResvIf, rsvpResvNextHop}
       ::= { rsvpResvTable 1 }























Baker and Krawczyk   Expires August 1996             [Page 17]




Internet Draft             RSVP MIB              February 1996


    RsvpResvEntry ::=
        SEQUENCE {
            rsvpResvSession         IpAddress,
            rsvpResvSessionPort     Port,
            rsvpResvAddress         IpAddress,
            rsvpResvSessionProtocol Protocol,
            rsvpResvSourcePort      Port,
            rsvpResvService         QosService,
            rsvpResvTSpecRate       BitRate,
            rsvpResvTSpecPeakRate   BitRate,
            rsvpResvTSpecBurst      BurstSize,
            rsvpResvTSpecLevel      DelayClass,
            rsvpResvTSpecMinTU      MessageSize,
            rsvpResvTSpecMaxTU      MessageSize,
            rsvpResvIf              InterfaceIndex,
            rsvpResvNextHop         IpAddress,
            rsvpResvInterval        RefreshInterval,
            rsvpResvScope           IpAddressString,
            rsvpResvShared          TruthValue,
            rsvpResvExplicit        TruthValue,
            rsvpResvRSVPHop         TruthValue,
            -- place holder for Policy information
            rsvpResvLastChange      TimeStamp,
            rsvpResvStatus          RowStatus
        }


    rsvpResvSession OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Address used as a  destination  address
           for all senders in this session."
       ::= { rsvpResvEntry 1 }















Baker and Krawczyk   Expires August 1996             [Page 18]




Internet Draft             RSVP MIB              February 1996


    rsvpResvSessionProtocol OBJECT-TYPE
        SYNTAX      Protocol
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The value of the IP  Protocol  field  in  this
           session, typically UDP or TCP."
       ::= { rsvpResvEntry 2 }


    rsvpResvSessionPort OBJECT-TYPE
        SYNTAX      Port
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The port number used as a destination port for
           all senders in this session. This will be a UDP
           or TCP port, or a 16 bit number located in  the
           same  position as the UDP/TCP Destination Port.
           When zero, it indicates that the protocol  does
           not use ports."
       ::= { rsvpResvEntry 3 }


    rsvpResvAddress OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Address used as  a  source  address  by
           this  sender  in  this  session.   If zero, all
           senders are included in the flow."
       ::= { rsvpResvEntry 4 }

















Baker and Krawczyk   Expires August 1996             [Page 19]




Internet Draft             RSVP MIB              February 1996


    rsvpResvSourcePort OBJECT-TYPE
        SYNTAX      Port
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The port number used as a source port by  this
           sender  in  this session. This will be a UDP or
           TCP port, or a 16 bit  number  located  in  the
           same position as the UDP/TCP Source Port.  When
           zero, it indicates that the protocol  does  not
           use  ports or (when rsvpResvSessionPort is non-
           zero) that the request applies to all  relevant
           flows in this session."
       ::= { rsvpResvEntry 5 }


    rsvpResvIf OBJECT-TYPE
        SYNTAX      InterfaceIndex
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The value of  ifIndex  for  the  interface  on
           which  the  RESV  message was most recently re-
           ceived."
       ::= { rsvpResvEntry 6 }


    rsvpResvNextHop OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Address of the sender,  or  the  router
           next  closer to the sender, from which the RESV
           message was most recently received."
       ::= { rsvpResvEntry 7 }














Baker and Krawczyk   Expires August 1996             [Page 20]




Internet Draft             RSVP MIB              February 1996


    rsvpResvService OBJECT-TYPE
        SYNTAX      QosService
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The QoS Service  classification  requested  by
           the receiver."
       ::= { rsvpResvEntry 8 }


    rsvpResvTSpecRate OBJECT-TYPE
        SYNTAX      BitRate
        UNITS       "kilobits per second"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The Average Bit  Rate  of  the  sender's  data
           stream, in kilobits/second.  Within a transmis-
           sion burst, the arrival rate may be as fast  as
           rsvpResvTSpecPeakRate (if supported by the ser-
           vice model); however, averaged  across  two  or
           more  burst  intervals,  the  rate  should  not
           exceed rsvpResvTSpecRate.

           Note that this is a prediction, often based  on
           the  general  capability  of a type of codec or
           particular encoding; the measured average  rate
           may be significantly lower."
       ::= { rsvpResvEntry 9 }


    rsvpResvTSpecPeakRate OBJECT-TYPE
        SYNTAX      BitRate
        UNITS       "kilobits per second"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The Peak Bit Rate of the sender's data stream,
           in  kilobits/second. Traffic arrival is not ex-
           pected to exceed this rate at any  time,  apart
           from  the effects of jitter in the network.  If
           not specified in the TSpec, this  returns  zero
           or noSuchValue."
       ::= { rsvpResvEntry 10 }






Baker and Krawczyk   Expires August 1996             [Page 21]




Internet Draft             RSVP MIB              February 1996


    rsvpResvTSpecBurst OBJECT-TYPE
        SYNTAX      BurstSize
        UNITS       "bits"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The size of the largest  burst  expected  from
           the sender at a time.

           If this is less than  the  sender's  advertised
           burst  size, the receiver is asking the network
           to provide flow pacing  beyond  what  would  be
           provided  under normal circumstances. Such pac-
           ing is at the network's option."
       ::= { rsvpResvEntry 11 }


    rsvpResvTSpecLevel OBJECT-TYPE
        SYNTAX      DelayClass
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "If the service is  predictive  or  controlled-
           delay,  this is the service level that is being
           requested.  Otherwise, it is zero, or the agent
           may return noSuchValue."
       ::= { rsvpResvEntry 12 }


    rsvpResvTSpecMinTU OBJECT-TYPE
        SYNTAX      MessageSize
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The minimum message size for  this  flow.  The
           policing  algorithm will treat smaller messages
           as though they are this size."
       ::= { rsvpResvEntry 13 }












Baker and Krawczyk   Expires August 1996             [Page 22]




Internet Draft             RSVP MIB              February 1996


    rsvpResvTSpecMaxTU OBJECT-TYPE
        SYNTAX      MessageSize
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The maximum message size for  this  flow.  The
           admission  algorithm  will  reject TSpecs whose
           Maximum Transmission Unit, plus  the  interface
           headers, exceed the interface MTU."
       ::= { rsvpResvEntry 14 }


    rsvpResvInterval OBJECT-TYPE
        SYNTAX      RefreshInterval
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The interval between RESV receipt  of  refresh
           messages as advertised by the Next Hop."
       ::= { rsvpResvEntry 15 }


    rsvpResvScope OBJECT-TYPE
        SYNTAX      IpAddressString
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "A list of zero or more  Sender  IP  Addresses,
           indicating  to  which  senders a Wildcard Style
           Filter applies."
       ::= { rsvpResvEntry 16 }


    rsvpResvShared OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "If TRUE, a reservation shared among senders is
           requested.  If FALSE, a reservation specific to
           this sender is requested."
       ::= { rsvpResvEntry 17 }








Baker and Krawczyk   Expires August 1996             [Page 23]




Internet Draft             RSVP MIB              February 1996


    rsvpResvExplicit OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "If TRUE, individual senders are  listed  using
           Filter  Specifications.   If FALSE, senders are
           listed in the Scope Object."
       ::= { rsvpResvEntry 18 }


    rsvpResvRSVPHop OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "If TRUE, the node believes that the  next  hop
           is  an  RSVP  hop.  If FALSE, the node believes
           that the next hop may not be an RSVP hop."
       ::= { rsvpResvEntry 19 }


    rsvpResvLastChange OBJECT-TYPE
        SYNTAX      TimeStamp
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The time of the last change in  this  reserva-
           tion  request;  This includes the first time it
           was received, or time of the most recent change
           in parameters."
       ::= { rsvpResvEntry 20 }


    rsvpResvStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "'valid' for all active  RESV  messages.   This
           object  may  be used to install static RESV in-
           formation or delete RESV information."
       ::= { rsvpResvEntry 21 }







Baker and Krawczyk   Expires August 1996             [Page 24]




Internet Draft             RSVP MIB              February 1996


--      The RSVP Reservation Requests Forwarded Table contains the
--      information displayed by receivers regarding their needs with
--      respect to sessions and senders. It is in essence a list of the
--      valid RESV messages that the RSVP Router or Host is sending
--      to its upstream neighbors.


    rsvpResvFwdTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF RsvpResvFwdEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the  state  information
           displayed upstream in RESV messages."
       ::= { rsvpObjects 3 }


    rsvpResvFwdEntry OBJECT-TYPE
        SYNTAX      RsvpResvFwdEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the  state  information
           displayed  upstream in an RESV message concern-
           ing a single sender."
       INDEX { rsvpResvFwdSession, rsvpResvFwdSessionProtocol,
               rsvpResvFwdSessionPort, rsvpResvFwdAddress,
               rsvpResvFwdSourcePort, rsvpResvFwdIf,
               rsvpResvFwdPreviousHop}
       ::= { rsvpResvFwdTable 1 }




















Baker and Krawczyk   Expires August 1996             [Page 25]




Internet Draft             RSVP MIB              February 1996


    RsvpResvFwdEntry ::=
        SEQUENCE {
            rsvpResvFwdSession              IpAddress,
            rsvpResvFwdSessionProtocol      Protocol,
            rsvpResvFwdSessionPort          Port,
            rsvpResvFwdAddress              IpAddress,
            rsvpResvFwdSourcePort           Port,
            rsvpResvFwdService              QosService,
            rsvpResvFwdTSpecRate            BitRate,
            rsvpResvFwdTSpecPeakRate        BitRate,
            rsvpResvFwdTSpecBurst           BurstSize,
            rsvpResvFwdTSpecLevel           DelayClass,
            rsvpResvFwdTSpecMinTU           MessageSize,
            rsvpResvFwdTSpecMaxTU           MessageSize,
            rsvpResvFwdIf                   InterfaceIndex,
            rsvpResvFwdPreviousHop          IpAddress,
            rsvpResvFwdInterval             RefreshInterval,
            rsvpResvFwdScope                IpAddressString,
            rsvpResvFwdShared               TruthValue,
            rsvpResvFwdExplicit             TruthValue,
            rsvpResvFwdRSVPHop              TruthValue,
            -- place holder for Policy information
            rsvpResvFwdLastChange           TimeStamp,
            rsvpResvFwdStatus               RowStatus
        }


    rsvpResvFwdSession OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Address used as a  destination  address
           for all senders in this session."
       ::= { rsvpResvFwdEntry 1 }















Baker and Krawczyk   Expires August 1996             [Page 26]




Internet Draft             RSVP MIB              February 1996


    rsvpResvFwdSessionProtocol OBJECT-TYPE
        SYNTAX      Protocol
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The value of the IP  Protocol  field  in  this
           session, typically UDP or TCP."
       ::= { rsvpResvFwdEntry 2 }


    rsvpResvFwdSessionPort OBJECT-TYPE
        SYNTAX      Port
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The port number used as a destination port for
           all senders in this session. This will be a UDP
           or TCP port, or a 16 bit number located in  the
           same  position as the UDP/TCP Destination Port.
           When zero, it indicates that the protocol  does
           not use ports."
       ::= { rsvpResvFwdEntry 3 }


    rsvpResvFwdAddress OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Address used as  a  source  address  by
           this  sender in this session.  For sessions for
           which rsvpResvFwdExplicit is FALSE, this  value
           will be 0.0.0.0"
       ::= { rsvpResvFwdEntry 4 }
















Baker and Krawczyk   Expires August 1996             [Page 27]




Internet Draft             RSVP MIB              February 1996


    rsvpResvFwdSourcePort OBJECT-TYPE
        SYNTAX      Port
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The port number used as a source port by  this
           sender  in  this session. This will be a UDP or
           TCP port, or a 16 bit  number  located  in  the
           same position as the UDP/TCP Source Port.  When
           zero, it indicates that the protocol  does  not
           use  ports  or  (when rsvpResvFwdSessionPort is
           non-zero)  that  the  request  applies  to  all
           relevant flows in this session."
       ::= { rsvpResvFwdEntry 5 }


    rsvpResvFwdService OBJECT-TYPE
        SYNTAX      QosService
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The QoS Service classification requested."
       ::= { rsvpResvFwdEntry 6 }


    rsvpResvFwdTSpecRate OBJECT-TYPE
        SYNTAX      BitRate
        UNITS       "kilobits per second"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The Average Bit  Rate  of  the  sender's  data
           stream, in kilobits/second.  Within a transmis-
           sion burst, the arrival rate may be as fast  as
           rsvpResvFwdTSpecPeakRate  (if  supported by the
           service model); however, averaged across two or
           more  burst  intervals,  the  rate  should  not
           exceed rsvpResvFwdTSpecRate.

           Note that this is a prediction, often based  on
           the  general  capability  of a type of codec or
           particular encoding; the measured average  rate
           may be significantly lower."
       ::= { rsvpResvFwdEntry 7 }






Baker and Krawczyk   Expires August 1996             [Page 28]




Internet Draft             RSVP MIB              February 1996


    rsvpResvFwdTSpecPeakRate OBJECT-TYPE
        SYNTAX      BitRate
        UNITS       "kilobits per second"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The Peak Bit Rate of the sender's data stream,
           in  kilobits/second. Traffic arrival is not ex-
           pected to exceed this rate at any  time,  apart
           from  the effects of jitter in the network.  If
           not specified in the TSpec, this  returns  zero
           or noSuchValue."
       ::= { rsvpResvFwdEntry 8 }


    rsvpResvFwdTSpecBurst OBJECT-TYPE
        SYNTAX      BurstSize
        UNITS       "bits"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The size of the largest  burst  expected  from
           the sender at a time.

           If this is less than  the  sender's  advertised
           burst  size, the receiver is asking the network
           to provide flow pacing  beyond  what  would  be
           provided  under normal circumstances. Such pac-
           ing is at the network's option."
       ::= { rsvpResvFwdEntry 9 }


    rsvpResvFwdTSpecLevel OBJECT-TYPE
        SYNTAX      DelayClass
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "If the service is  predictive  or  controlled-
           delay,  this is the service level that is being
           requested.  Otherwise, it is zero, or the agent
           may return noSuchValue."
       ::= { rsvpResvFwdEntry 10 }








Baker and Krawczyk   Expires August 1996             [Page 29]




Internet Draft             RSVP MIB              February 1996


    rsvpResvFwdTSpecMinTU OBJECT-TYPE
        SYNTAX      MessageSize
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The minimum message size for  this  flow.  The
           policing  algorithm will treat smaller messages
           as though they are this size."
       ::= { rsvpResvFwdEntry 11 }


    rsvpResvFwdTSpecMaxTU OBJECT-TYPE
        SYNTAX      MessageSize
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The maximum message size for  this  flow.  The
           admission  algorithm  will  reject TSpecs whose
           Maximum Transmission Unit, plus  the  interface
           headers, exceed the interface MTU."
       ::= { rsvpResvFwdEntry 12 }


    rsvpResvFwdIf OBJECT-TYPE
        SYNTAX      InterfaceIndex
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The value of  ifIndex  for  the  interface  on
           which  the  RESV  message  is being sent, which
           should correspond to the interface  from  which
           the PATH message was most recently received."
       ::= { rsvpResvFwdEntry 13 }


    rsvpResvFwdPreviousHop OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Address of the sender,  or  the  router
           next  closer  to  the sender, to which the RESV
           message is being sent."
       ::= { rsvpResvFwdEntry 14 }






Baker and Krawczyk   Expires August 1996             [Page 30]




Internet Draft             RSVP MIB              February 1996


    rsvpResvFwdInterval OBJECT-TYPE
        SYNTAX      RefreshInterval
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The interval between RESV receipt  of  refresh
           messages advertised to the Previous Hop."
       ::= { rsvpResvFwdEntry 15 }


    rsvpResvFwdScope OBJECT-TYPE
        SYNTAX      IpAddressString
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "A list of zero or more  Sender  IP  Addresses,
           indicating  to  which  senders  a  non-explicit
           reservation applies."
       ::= { rsvpResvFwdEntry 16 }


    rsvpResvFwdShared OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "If TRUE, a reservation shared among senders is
           requested.  If FALSE, a reservation specific to
           this sender is requested."
       ::= { rsvpResvFwdEntry 17 }


    rsvpResvFwdExplicit OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "If TRUE, individual senders are  listed  using
           Filter  Specifications.   If FALSE, senders are
           listed in the Scope Object."
       ::= { rsvpResvFwdEntry 18 }









Baker and Krawczyk   Expires August 1996             [Page 31]




Internet Draft             RSVP MIB              February 1996


    rsvpResvFwdRSVPHop OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "If TRUE, the node believes that  the  previous
           hop  is  an  RSVP  hop.  If FALSE, the node be-
           lieves that the previous hop may not be an RSVP
           hop."
       ::= { rsvpResvFwdEntry 19 }


    rsvpResvFwdLastChange OBJECT-TYPE
        SYNTAX      TimeStamp
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The time of the last change in  this  request;
           This  includes the first time it was requested,
           or time of the most recent change in parameters
           requested."
       ::= { rsvpResvFwdEntry 20 }


    rsvpResvFwdStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
           "'valid' for all active  RESV  messages.   This
           object  may  be used to install static RESV in-
           formation or delete RESV information."
       ::= { rsvpResvFwdEntry 21 }

















Baker and Krawczyk   Expires August 1996             [Page 32]




Internet Draft             RSVP MIB              February 1996


--      The RSVP Active Flows Database
--      lists all flows active on an outgoing interface, including
--      relevant attributes.


    rsvpFlowTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF RsvpFlowEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the reserved flows  us-
           ing the system's interfaces."
       ::= { rsvpObjects 6 }


    rsvpFlowEntry OBJECT-TYPE
        SYNTAX      RsvpFlowEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing the use of a given  in-
           terface by a given flow."
       INDEX { rsvpFlowDestination, rsvpFlowDestinationProtocol,
               rsvpFlowDestinationPort, rsvpFlowSource,
               rsvpFlowSourcePort, ifIndex }
       ::= { rsvpFlowTable 1 }


    RsvpFlowEntry ::=
        SEQUENCE {
            rsvpFlowDestination             IpAddress,
            rsvpFlowDestinationProtocol     Protocol,
            rsvpFlowDestinationPort         Port,
            rsvpFlowSource                  IpAddress,
            rsvpFlowSourcePort              Port,
            rsvpFlowRate                    BitRate,
            rsvpFlowBurst                   BurstSize,
            rsvpFlowWeight                  Integer32,
            rsvpFlowQueue                   Integer32,
            rsvpFlowMinTU                   MessageSize
        }









Baker and Krawczyk   Expires August 1996             [Page 33]




Internet Draft             RSVP MIB              February 1996


    rsvpFlowDestination OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Address used as a  destination  address
           for all senders in this flow."
       ::= { rsvpFlowEntry 1 }


    rsvpFlowDestinationProtocol OBJECT-TYPE
        SYNTAX      Protocol
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The value of the IP  Protocol  field  in  this
           flow, typically UDP or TCP."
       ::= { rsvpFlowEntry 2 }


    rsvpFlowDestinationPort OBJECT-TYPE
        SYNTAX      Port
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The UDP or TCP port number used as a  destina-
           tion port for all senders in this flow. A value
           of zero indicates that the IP protocol in  use,
           specified  by rsvpFlowDestinationProtocol, does
           not use ports."
       ::= { rsvpFlowEntry 3 }


    rsvpFlowSource OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Address used as  a  source  address  by
           this sender in this flow.  If zero, all senders
           are included in the flow."
       ::= { rsvpFlowEntry 4 }








Baker and Krawczyk   Expires August 1996             [Page 34]




Internet Draft             RSVP MIB              February 1996


    rsvpFlowSourcePort OBJECT-TYPE
        SYNTAX      Port
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The UDP or TCP port number used  as  a  source
           port  by  this  sender in this flow. A value of
           zero indicates that the  IP  protocol  in  use,
           specified  by rsvpFlowDestinationProtocol, does
           not use ports, or (when rsvpFlowDestinationPort
           is  non-zero) that data from all senders is in-
           cluded in this class of flows."
       ::= { rsvpFlowEntry 5 }


    rsvpFlowRate OBJECT-TYPE
        SYNTAX      BitRate
        UNITS       "kilobits per second"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The Average Bit  Rate  of  the  sender's  data
           stream,  in  Kilobits.   The  rate may be arbi-
           trarily fast during a short  interval  such  as
           the  duration  of a video frame.  However, over
           any two such intervals it will not average fas-
           ter than the average rate as transmitted by the
           sender."
       ::= { rsvpFlowEntry 6 }





















Baker and Krawczyk   Expires August 1996             [Page 35]




Internet Draft             RSVP MIB              February 1996


    rsvpFlowBurst OBJECT-TYPE
        SYNTAX      BurstSize
        UNITS       "bits"
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The size of the largest  burst  expected  from
           the sender at a time.

           If this is less than  the  sender's  advertised
           burst  size, the receiver is asking the network
           to provide flow pacing  beyond  what  would  be
           provided  under normal circumstances. Such pac-
           ing is at the network's option."
       ::= { rsvpFlowEntry 7 }


    rsvpFlowWeight OBJECT-TYPE
        SYNTAX      Integer32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The weight used  to  prioritize  the  traffic.
           Note  that the interpretation of this object is
           implementation-specific,   as   implementations
           vary in their use of weighting procedures."
       ::= { rsvpFlowEntry 8 }


    rsvpFlowQueue OBJECT-TYPE
        SYNTAX      Integer32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The number of the queue used by this  traffic.
           Note  that the interpretation of this object is
           implementation-specific,   as   implementations
           vary in their use of queue identifiers."
       ::= { rsvpFlowEntry 9 }











Baker and Krawczyk   Expires August 1996             [Page 36]




Internet Draft             RSVP MIB              February 1996


    rsvpFlowMinTU OBJECT-TYPE
        SYNTAX      MessageSize
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The minimum message size for  this  flow.  The
           policing  algorithm will treat smaller messages
           as though they are this size."
       ::= { rsvpFlowEntry 10 }









































Baker and Krawczyk   Expires August 1996             [Page 37]




Internet Draft             RSVP MIB              February 1996


--      The RSVP Interface Attributes Database contains the
--      RSVP-specific information for an interface. Information
--      that is shared with other reservation procedures such
--      as ST-II is in the Integrated Interface Attributes
--      Database.


    rsvpIfAttribTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF RsvpIfAttribEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The RSVP-specific attributes of  the  system's
           interfaces."
       ::= { rsvpObjects 4 }


    rsvpIfAttribEntry OBJECT-TYPE
        SYNTAX      RsvpIfAttribEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The RSVP-specific attributes of  the  a  given
           interface."
       INDEX { ifIndex }

       ::= { rsvpIfAttribTable 1 }

RsvpIfAttribEntry ::=
    SEQUENCE {
    rsvpIfAttribUdpNbrs         Gauge32,
    rsvpIfAttribIpNbrs          Gauge32,
    rsvpIfAttribNbrs            Gauge32,
    rsvpIfAttribEnabled         TruthValue,
    rsvpIfAttribUdpRequired     TruthValue,
    rsvpIfAttribStatus          RowStatus
    }













Baker and Krawczyk   Expires August 1996             [Page 38]




Internet Draft             RSVP MIB              February 1996


    rsvpIfAttribUdpNbrs OBJECT-TYPE
        SYNTAX      Gauge32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The number of neighbors perceived to be  using
           only the RSVP UDP Encapsulation."
       ::= { rsvpIfAttribEntry 1 }


    rsvpIfAttribIpNbrs OBJECT-TYPE
        SYNTAX      Gauge32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The number of neighbors perceived to be  using
           only the RSVP IP Encapsulation."
       ::= { rsvpIfAttribEntry 2 }


    rsvpIfAttribNbrs OBJECT-TYPE
        SYNTAX      Gauge32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
           "The number of neighbors  currently  perceived;
           this will exceed rsvpIfAttribIpNbrs + rsvpIfAt-
           tribUdpNbrs by the number  of  neighbors  using
           both encapsulations."
       ::= { rsvpIfAttribEntry 3 }


    rsvpIfAttribEnabled OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "If TRUE, RSVP is enabled  on  this  Interface.
           If  FALSE,  RSVP  is not enabled on this inter-
           face."
       ::= { rsvpIfAttribEntry 4 }









Baker and Krawczyk   Expires August 1996             [Page 39]




Internet Draft             RSVP MIB              February 1996


    rsvpIfAttribUdpRequired OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "If TRUE, manual configuration forces  the  use
           of  UDP  encapsulation  on  the  interface.  If
           FALSE, UDP encapsulation is only used if rsvpI-
           fAttribUdpNbrs is not zero."

       ::= { rsvpIfAttribEntry 5 }


    rsvpIfAttribStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "'valid' on interfaces that are configured  for
           RSVP."
       ::= { rsvpIfAttribEntry 6 }





























Baker and Krawczyk   Expires August 1996             [Page 40]




Internet Draft             RSVP MIB              February 1996


--      The RSVP Neighbor Database lists the neighbors the RSVP
--      process currently is receiving messages from.


    rsvpNbrTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF RsvpNbrEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing  the  Neighbors  of  an
           RSVP system."
       ::= { rsvpObjects 5 }


    rsvpNbrEntry OBJECT-TYPE
        SYNTAX      RsvpNbrEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "Information describing a  single  RSVP  Neigh-
           bor."
       INDEX { ifIndex, rsvpNbrAddress }
       ::= { rsvpNbrTable 1 }

RsvpNbrEntry ::=
    SEQUENCE {
    rsvpNbrAddress      IpAddress,
    rsvpNbrProtocol     RsvpEncapsulation,
    rsvpNbrStatus       RowStatus
    }

    rsvpNbrAddress OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "The IP Address used by this neighbor."
       ::= { rsvpNbrEntry 1 }












Baker and Krawczyk   Expires August 1996             [Page 41]




Internet Draft             RSVP MIB              February 1996


    rsvpNbrProtocol OBJECT-TYPE
        SYNTAX      RsvpEncapsulation
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "The encapsulation being used  by  this  neigh-
           bor."
       ::= { rsvpNbrEntry 2 }


    rsvpNbrStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
           "'valid' for all neighbors.  This object may be
           used  to  configure neighbors.  In the presence
           of configured neighbors, the implementation may
           (but is not required to) limit the set of valid
           neighbors to those configured."
       ::= { rsvpNbrEntry 3 }





























Baker and Krawczyk   Expires August 1996             [Page 42]




Internet Draft             RSVP MIB              February 1996


-- conformance information


rsvpGroups      OBJECT IDENTIFIER ::= { rsvpConformance 1 }
rsvpCompliances OBJECT IDENTIFIER ::= { rsvpConformance 2 }

-- compliance statements

    rsvpCompliance MODULE-COMPLIANCE
        STATUS  current
        DESCRIPTION
           "The compliance statement.  Note that  the  im-
           plementation  of this module requires implemen-
           tation of the Integrated Services MIB as well."
       MODULE  -- this module
       MANDATORY-GROUPS {
           rsvpSessionGroup, rsvpSenderGroup, rsvpResvGroup,
           rsvpResvFwdGroup, rsvpFlowGroup, rsvpIfAttribGroup,
           rsvpNbrGroup
           }
       ::= { rsvpCompliances 1 }


    rsvpSessionGroup OBJECT-GROUP
         OBJECTS {
            rsvpSessionSenders,
            rsvpSessionReceivers,
            rsvpSessionRequests
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for RSVP Systems."
       ::= { rsvpGroups 1 }

















Baker and Krawczyk   Expires August 1996             [Page 43]




Internet Draft             RSVP MIB              February 1996


    rsvpSenderGroup OBJECT-GROUP
         OBJECTS {
            rsvpSenderTSpecRate, rsvpSenderTSpecPeakRate,
            rsvpSenderTSpecBurst, rsvpSenderTSpecMinTU,
            rsvpSenderIf, rsvpSenderPreviousHop, rsvpSenderTSpecMaxTU,
            rsvpSenderInterval, rsvpSenderLastChange, rsvpSenderStatus,
            rsvpSenderRSVPHop
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for RSVP Systems."
       ::= { rsvpGroups 2 }


    rsvpResvGroup OBJECT-GROUP
         OBJECTS {
            rsvpResvService, rsvpResvTSpecRate, rsvpResvTSpecBurst,
            rsvpResvTSpecPeakRate, rsvpResvTSpecMinTU, rsvpResvTSpecMaxTU,
            rsvpResvTSpecLevel, rsvpResvInterval, rsvpResvScope,
            rsvpResvShared, rsvpResvExplicit, rsvpResvRSVPHop,
            rsvpResvLastChange, rsvpResvStatus
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for RSVP Systems."
       ::= { rsvpGroups 3 }


    rsvpResvFwdGroup OBJECT-GROUP
         OBJECTS {
            rsvpResvFwdService, rsvpResvFwdTSpecPeakRate,
            rsvpResvFwdTSpecMinTU,  rsvpResvFwdTSpecMaxTU,
            rsvpResvFwdTSpecRate, rsvpResvFwdTSpecBurst,
            rsvpResvFwdTSpecLevel, rsvpResvFwdInterval, rsvpResvFwdScope,
            rsvpResvFwdShared, rsvpResvFwdExplicit, rsvpResvFwdRSVPHop,
            rsvpResvFwdLastChange, rsvpResvFwdStatus
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for RSVP Systems."
       ::= { rsvpGroups 4 }









Baker and Krawczyk   Expires August 1996             [Page 44]




Internet Draft             RSVP MIB              February 1996


    rsvpFlowGroup OBJECT-GROUP
         OBJECTS {
            rsvpFlowRate, rsvpFlowBurst, rsvpFlowWeight,
            rsvpFlowQueue, rsvpFlowMinTU
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for RSVP Systems."
       ::= { rsvpGroups 5 }


    rsvpIfAttribGroup OBJECT-GROUP
         OBJECTS {
            rsvpIfAttribUdpNbrs, rsvpIfAttribIpNbrs,
            rsvpIfAttribNbrs, rsvpIfAttribEnabled,
            rsvpIfAttribUdpRequired, rsvpIfAttribStatus
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for RSVP Systems."
       ::= { rsvpGroups 6 }


    rsvpNbrGroup OBJECT-GROUP
         OBJECTS {
            rsvpNbrProtocol, rsvpNbrStatus
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for RSVP Systems."
       ::= { rsvpGroups 7 }


END
















Baker and Krawczyk   Expires August 1996             [Page 45]




Internet Draft             RSVP MIB              February 1996


6.  Acknowledgements

This document was produced by the RSVP Working Group.















































Baker and Krawczyk   Expires August 1996             [Page 46]




Internet Draft             RSVP MIB              February 1996


7.  References

[1]  M.T. Rose (editor), Management Information Base for
     Network Management of TCP/IP-based internets, Internet
     Working Group Request for Comments 1213.  Network
     Information Center, SRI International, Menlo Park,
     California, (May, 1990).

[2]  Information processing systems - Open Systems
     Interconnection - Specification of Abstract Syntax
     Notation One (ASN.1), International Organization for
     Standardization.  International Standard 8824, (December,
     1987).

[3]  Information processing systems - Open Systems
     Interconnection - Specification of Basic Encoding Rules
     for Abstract Notation One (ASN.1), International
     Organization for Standardization.  International Standard
     8825, (December, 1987).































Baker and Krawczyk   Expires August 1996             [Page 47]




Internet Draft             RSVP MIB              February 1996


Table of Contents


1 Status of this Memo ...................................    1
2 Abstract ..............................................    2
3 The SNMPv2 Network Management Framework ...............    3
3.1 Object Definitions ..................................    3
4 Overview ..............................................    3
4.1 Textual Conventions .................................    3
4.2 Structure of MIB ....................................    4
5 Definitions ...........................................    4
5.1 RSVP Session Statistics Database ....................    7
5.1 RSVP Session Sender Database ........................   10
5.2 RSVP Reservations Requested Database ................   16
5.3 RSVP Reservation Requests Database ..................   24
5.3 RSVP Interface Flows Database .......................   32
5.4 RSVP Interface Attributes Database ..................   37
5.5 RSVP Neighbor Database ..............................   40
6 Acknowledgements ......................................   46
7 References ............................................   47






























Baker and Krawczyk   Expires August 1996             [Page 48]
