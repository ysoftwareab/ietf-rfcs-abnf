name = definition

       The name of a rule is simply the name itself (without any 
       enclosing "<" and ">") and is separated from its definition by 
       the equal character "=". Whitespace is only significant in that 
       indentation of continuation lines is used to indicate a rule 
       definition that spans more than one line. Certain basic rules 
       are in uppercase, such as SP, LWS, HT, CRLF, DIGIT, ALPHA, etc. 
       Angle brackets are used within definitions whenever their 
       presence will facilitate discerning the use of rule names.

OCTET          = <any 8-bit sequence of data>
CHAR           = <any US-ASCII character (octets 0 - 127)>
UPALPHA        = <any US-ASCII uppercase letter "A".."Z">
LOALPHA        = <any US-ASCII lowercase letter "a".."z">
ALPHA          = UPALPHA | LOALPHA
DIGIT          = <any US-ASCII digit "0".."9">
CTL            = <any US-ASCII control character
                        (octets 0 - 31) and DEL (127)>
CR             = <US-ASCII CR, carriage return (13)>
LF             = <US-ASCII LF, linefeed (10)>
SP             = <US-ASCII SP, space (32)>
HT             = <US-ASCII HT, horizontal-tab (9)>
CRLF           = CR LF

LWS            = [CRLF] 1*( SP | HT )

word           = token | quoted-string

token          = 1*<any CHAR except CTLs or tspecials>

tspecials      = "(" | ")" | "<" | ">" | "@"
                      | "," | ";" | ":" | "\" | <">
                      | "/" | "[" | "]" | "?" | "="
                      | SP | HT

comment        = "(" *( ctext | comment ) ")"
ctext          = <any text excluding "(" and ")">

quoted-string  = ( <"> *(qdtext) <"> )

qdtext         = <any CHAR except <"> and CTLs,
                        but including LWS>

quoted-pair    = "\" CHAR

addr-string    = ( "<" *(qatext) ">" )

qatext         = <any CHAR except "<", ">", and CTLs,
                        but including LWS>

text           = <any OCTET except CTLs,
                        but including LWS>

HTTP-Version   = "HTTP" "/" 1*DIGIT "." 1*DIGIT

URI            = ( absoluteURI | relativeURI ) [ "#" fragment ]

absoluteURI    = scheme ":" *( uchar | reserved )

relativeURI    = net_path | abs_path | rel_path

net_path       = "//" net_loc [ abs_path ]
abs_path       = "/" rel_path
rel_path       = [ path ] [ ";" params ] [ "?" query ]

path           = fsegment *( "/" segment )
fsegment       = 1*pchar
segment        = *pchar

params         = param *( ";" param )
param          = *( pchar | "/" )

scheme         = 1*( ALPHA | DIGIT | "+" | "-" | "." )
net_loc        = *( pchar | ";" | "?" )
query          = *( uchar | reserved )
fragment       = *( uchar | reserved )

pchar          = uchar | ":" | "@" | "&" | "="
uchar          = unreserved | escape
unreserved     = ALPHA | DIGIT | safe | extra | national

escape         = "%" hex hex
hex            = "A" | "B" | "C" | "D" | "E" | "F"
                      | "a" | "b" | "c" | "d" | "e" | "f" | DIGIT

reserved       = ";" | "/" | "?" | ":" | "@" | "&" | "="
safe           = "$" | "-" | "_" | "." | "+"
extra          = "!" | "*" | "'" | "(" | ")" | ","
national       = <any OCTET excluding CTLs, SP,
                         ALPHA, DIGIT, reserved, safe, and extra>

http_URL       = "http:" "//" host [ ":" port ] abs_path

host           = <FQDN or IP address, as defined in RFC 1738>
port           = *DIGIT

HTTP-date      = rfc1123-date | rfc850-date | asctime-date

rfc1123-date   = wkday "," SP date1 SP time SP "GMT"
rfc850-date    = weekday "," SP date2 SP time SP "GMT"
asctime-date   = wkday SP date3 SP time SP 4DIGIT

date1          = 2DIGIT SP month SP 4DIGIT
                        ; day month year (e.g., 02 Jun 1982)
date2          = 2DIGIT "-" month "-" 2DIGIT
                        ; day-month-year (e.g., 02-Jun-82)
date3          = month SP ( 2DIGIT | ( SP 1DIGIT ))
                        ; month day (e.g., Jun  2)

time           = 2DIGIT ":" 2DIGIT ":" 2DIGIT
                        ; 00:00:00 - 23:59:59

wkday          = "Mon" | "Tue" | "Wed"
                      | "Thu" | "Fri" | "Sat" | "Sun"

weekday        = "Monday" | "Tuesday" | "Wednesday"
                      | "Thursday" | "Friday" | "Saturday" | "Sunday"

month          = "Jan" | "Feb" | "Mar" | "Apr"
                      | "May" | "Jun" | "Jul" | "Aug"
                      | "Sep" | "Oct" | "Nov" | "Dec"

delta-seconds  = 1*DIGIT

media-type     = type "/" subtype *( ";" parameter )
type           = token
subtype        = token

parameter      = attribute "=" value
attribute      = token
value          = token | quoted-string

charset = "US-ASCII"
               | "ISO-8859-1" | "ISO-8859-2" | "ISO-8859-3"
               | "ISO-8859-4" | "ISO-8859-5" | "ISO-8859-6"
               | "ISO-8859-7" | "ISO-8859-8" | "ISO-8859-9"
               | "ISO-2022-JP" | "ISO-2022-JP-2" | "ISO-2022-KR"
               | "UNICODE-1-1" | "UNICODE-1-1-UTF-7" | "UNICODE-1-1-UTF-8"
               | token

encoding-mechanism      = "gzip" | "compress" | token

transfer-encoding       = "binary" | "8bit" | "7bit"
                               | "quoted-printable" | "base64"
                               | token

language-tag  = primary-tag *( "-" subtag )

primary-tag   = 1*8ALPHA
subtag        = 1*8ALPHA

qvalue         = ( "0" [ "." 0*3DIGIT ] )
                      | ( "." 0*3DIGIT )
                      | ( "1" [ "." 0*3("0") ] )

product         = token ["/" product-version]
product-version = token

HTTP-message   = Simple-Request           ; HTTP/0.9 messages
                      | Simple-Response
                      | Full-Request             ; HTTP/1.0 messages
                      | Full-Response

Full-Request   = Request-Line             ; Section 5.1
                        *( General-Header        ; Section 4.3
                        |  Request-Header        ; Section 5.4
                        |  Entity-Header )       ; Section 7.1
                        CRLF
                        [ Entity-Body ]          ; Section 7.2

Full-Response  = Status-Line              ; Section 6.1
                        *( General-Header        ; Section 4.3
                        |  Response-Header       ; Section 6.3
                        |  Entity-Header )       ; Section 7.1
                        CRLF
                        [ Entity-Body ]          ; Section 7.2

Simple-Request  = "GET" SP Request-URI CRLF

Simple-Response = [ Entity-Body ]

HTTP-header    = field-name ":" [ field-value ] CRLF

field-name     = 1*<any CHAR, excluding CTLs, SP, and ":">
field-value    = *( field-content | comment | LWS )

field-content  = <the OCTETs making up the field-value
                        and consisting of either *text or combinations
                        of token, tspecials, and quoted-string>

General-Header = Date                     ; Section 8.12
                      | Forwarded                ; Section 8.14
                      | MIME-Version             ; Section 8.20
                      | Pragma                   ; Section 8.22

Request        = Simple-Request | Full-Request

Simple-Request = "GET" SP Request-URI CRLF

Full-Request   = Request-Line             ; Section 5.1
                        *( General-Header        ; Section 4.3
                        |  Request-Header        ; Section 5.4
                        |  Entity-Header )       ; Section 7.1
                        CRLF
                        [ Entity-Body ]          ; Section 7.2

Request-Line   = Method SP Request-URI SP HTTP-Version CRLF

Method           = "GET" | "HEAD" | "PUT" | "POST"
                        | "DELETE" | "LINK" | "UNLINK"
                        | extension-method

extension-method = token

Request-URI    = "*" | absoluteURI | abs_path

Request-Header = Accept                   ; Section 8.1
                      | Accept-Charset           ; Section 8.2
                      | Accept-Encoding          ; Section 8.3
                      | Accept-Language          ; Section 8.4
                      | Authorization            ; Section 8.6
                      | From                     ; Section 8.15
                      | If-Modified-Since        ; Section 8.16
                      | Orig-URI                 ; Section 8.21
                      | Referer                  ; Section 8.24
                      | User-Agent               ; Section 8.29

Response        = Simple-Response | Full-Response

Simple-Response = [ Entity-Body ]

Full-Response   = Status-Line             ; Section 6.1
                        *( General-Header        ; Section 4.3
                        |  Response-Header       ; Section 6.3
                        |  Entity-Header )       ; Section 7.1
                        CRLF
                        [ Entity-Body ]          ; Section 7.2

Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF

Status-Code    = "200"   ; OK
                      | "201"   ; Created
                      | "202"   ; Accepted
                      | "203"   ; Non-Authoritative Information
                      | "204"   ; No Content
                      | "300"   ; Multiple Choices
                      | "301"   ; Moved Permanently
                      | "302"   ; Moved Temporarily
                      | "303"   ; See Other
                      | "304"   ; Not Modified
                      | "400"   ; Bad Request
                      | "401"   ; Unauthorized
                      | "402"   ; Payment Required
                      | "403"   ; Forbidden
                      | "404"   ; Not Found
                      | "405"   ; Method Not Allowed
                      | "406"   ; None Acceptable
                      | "407"   ; Proxy Authentication Required
                      | "408"   ; Request Timeout
                      | "409"   ; Conflict
                      | "410"   ; Gone
                      | "411"   ; Authorization Refused
                      | "500"   ; Internal Server Error
                      | "501"   ; Not Implemented
                      | "502"   ; Bad Gateway
                      | "503"   ; Service Unavailable
                      | "504"   ; Gateway Timeout
                      | extension-code

extension-code = 3DIGIT

Reason-Phrase  = *<text, excluding CR, LF>

Response-Header= Location                 ; Section 8.19
                      | Public                   ; Section 8.23
                      | Retry-After              ; Section 8.25
                      | Server                   ; Section 8.26
                      | WWW-Authenticate         ; Section 8.30

Entity-Header  = Allow                     ; Section 8.5
                      | Content-Encoding          ; Section 8.7
                      | Content-Language          ; Section 8.8
                      | Content-Length            ; Section 8.9
                      | Content-Transfer-Encoding ; Section 8.10
                      | Content-Type              ; Section 8.11
                      | Expires                   ; Section 8.13
                      | Last-Modified             ; Section 8.17
                      | Link                      ; Section 8.18
                      | Title                     ; Section 8.27
                      | URI-header                ; Section 8.28
                      | extension-header

extension-header=HTTP-header

Entity-Body    = *OCTET

Accept         = "Accept" ":" #(
                             media-range
                             [ ";" "q" "=" qvalue ]
                             [ ";" "mxb" "=" 1*DIGIT ] )

media-range    = ( "*/*"
                      |   ( type "/" "*" )
                      |   ( type "/" subtype )
                        ) *( ";" parameter )

Accept-Charset = "Accept-Charset" ":" #charset

Accept-Encoding         = "Accept-Encoding" ":" 
                                 #( encoding-mechanism )

Accept-Language         = "Accept-Language" ":"
                                 #( language-tag [ ";" "ql" "=" qvalue ] )

Allow          = "Allow" ":" #method

Authorization  = "Authorization" ":" 1#credentials

Content-Encoding = "Content-Encoding" ":" 1#encoding-mechanism

Content-Language = "Content-Language" ":" #language-tag

Content-Length = "Content-Length" ":" 1*DIGIT

Content-Transfer-Encoding = "Content-Transfer-Encoding" ":" 
                                   transfer-encoding

Content-Type   = "Content-Type" ":" media-type

Date           = "Date" ":" HTTP-date

Expires        = "Expires" ":" HTTP-date

Forwarded      = "Forwarded" ":" #( "by" URI [ "(" product ")" ]
                        [ "for" FQDN ] )

FQDN           = <Fully-Qualified Domain Name>

From           = "From" ":" mailbox

If-Modified-Since = "If-Modified-Since" ":" HTTP-date

Last-Modified  = "Last-Modified" ":" HTTP-date

Link           = "Link" ":" #("<" URI ">"
                        [ ";" "rel" "=" relationship ]
                        [ ";" "rev" "=" relationship ]
                        [ ";" "title" "=" quoted-string ] )

relationship   = sgml-name
                      | ( <"> sgml-name *( SP sgml-name) <"> )

sgml-name      = ALPHA *( ALPHA | DIGIT | "." | "-" )

Location       = "Location" ":" absoluteURI

MIME-Version   = "MIME-Version" ":" 1*DIGIT "." 1*DIGIT

Orig-URI       = "Orig-URI" ":" absoluteURI [ "#" fragment ]

Pragma           = "Pragma" ":" #pragma-directive

pragma-directive = "no-cache"
                        | "max-age" "=" delta-seconds
                        | extension-pragma
extension-pragma = token [ "=" word ]

Public         = "Public" ":" #method

Referer        = "Referer" ":" ( absoluteURI | relativeURI )

Retry-After    = "Retry-After" ":" ( HTTP-date | delta-seconds )

Server         = "Server" ":" 1*( product )

Title          = "Title" ":" *text

URI-header     = "URI" ":" #( "<" ( absoluteURI | relativeURI ) ">"
                        [ ";" vary ] *( ";" characteristic) )

vary           = "vary" "="
                        ( vary-dimension | ( <"> 1#vary-dimension <"> ) )

vary-dimension = "type" | "charset" | "language" | "encoding"
                      | "user-agent" | "version" | token

characteristic = ( "type={" media-type "}" )
                      | ( "language={" 1#language-tag "}" )
                      | ( "encoding={" 1#encoding-mechanism "}" )
                      | ( "length=" 1*DIGIT )
                      | ( "qs=" qvalue )

vary="type,language"

type={application/postscript},
type={text/html},
User-Agent     = "User-Agent" ":" 1*( product )

WWW-Authenticate        = "WWW-Authenticate" ":" challenge

auth-scheme    = "basic" | token

auth-param     = token "=" quoted-string

challenge      = auth-scheme 1*SP realm *( ";" auth-param )

realm          = "realm" "=" quoted-string

credentials    = auth-scheme [ 1*LWS encoded-cookie ]
                        *(";" auth-param )

encoded-cookie = <any valid base64 [6] encoded string,
                         except not limited to 76 char/line>

basic-challenge= "Basic" SP realm

basic-credentials="Basic" SP basic-cookie
basic-cookie   = <base64 encoding of userid-password>
userid-password= [ token ] ":" *text

