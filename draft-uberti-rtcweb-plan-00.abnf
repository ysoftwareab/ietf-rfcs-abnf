m= lines still remains manageable.

a=ssrc attributes.  Each provider of MSTs (i.e.  endpoint) indicates
m=audio 49170 RTP/AVP 101       // main audio
a=ssrc:1 msid:left-mic          // declare 3 outgoing audio sources
a=ssrc:2 msid:center-mic
a=ssrc:3 msid:right-mic


m=audio 39170 RTP/AVP 101       // main audio
a=remote-ssrc:1 recv:on         // just turn on the center mic


m=video 62537 RTP/SAVPF 96      // main video
a=ssrc:5 msid:center-cam        // one source is simulcasting at two resolutions
a=ssrc:5 imageattr:* [1280, 720]
a=ssrc:51 msid:center-cam       // different SSRC, same MSID for simulcasts
a=ssrc:51 imageattr:* [640, 360]
a=ssrc-group:SIMULCAST 5 51
a=ssrc:8 msid:slides
a=ssrc:9 msid:slides            // RTX SSRC
a=ssrc-group:FID 8 9


a=msid-semantics:WMS            // I understand SSRCs and MSTs

m=audio 49170 RTP/AVP 101       // main audio
a=ssrc:1 msid:left-mic          // declare 3 outgoing audio sources, each with unique MSID
a=ssrc:2 msid:center-mic
a=ssrc:3 msid:right-mic
m=video 62537 RTP/SAVPF 96      // main video
a=ssrc:4 msid:left-cam          // declare 3 outgoing video sources
a=ssrc:5 msid:center-cam        // one source is simulcasting at two resolutions, same codec
a=ssrc:5 imageattr:* [1280, 720]
a=ssrc:51 msid:center-cam       // different SSRC, same MSID for simulcasts
a=ssrc:51 imageattr:* [640, 360]
a=ssrc:6 msid:right-cam
a=ssrc-group:SIMULCAST 5 51
m=video 62538 RTP/SAVPF 96      // presentation
a=content:slides                // [media, content] tuples must be unique in m= lines
a=ssrc:8 msid:slides            // app decision to do this; could have been put in the m=video line above
a=ssrc:9 msid:slides            // RTX SSRC
a=ssrc-group:FID 8 9            // declaration that SSRC 9 is a repair flow for 8
a=msid-semantics:WMS            // I understand SSRCs and MSTs

m=audio 39170 RTP/AVP 101       // main audio
a=remote-ssrc:1 recv:on         // just turn on the center mic
m=video 52537 RTP/SAVPF 96      // main video
a=remote-ssrc:5 recv:off        // explicitly turn off the 720p feed
a=remote-ssrc:51 recv:on        // explicitly turn on the 360p feed
a=remote-ssrc:51 priority:1     // lower priority than slides (in this application)
m=video 52538 RTP/SAVPF 96      // presentation
a=content:slides
a=remote-ssrc:8 recv:on         // turn on the slides feed with higher priority
                                   // FID is sent implicitly, unless explicitly rejected
a=remote-ssrc:8 priority:2      // (sender uses priority when making BW decisions)
a=msid-semantics:WMS            // I understand SSRCs and MSTs

m=audio 39170 RTP/AVP 101       // main audio
a=ssrc:101 msid:center-mic
a=remote-ssrc:1 recv:on         // just turn on the center mic
m=video 52537 RTP/SAVPF 96      // main video
a=ssrc:105 msid:center-cam
a=remote-ssrc:5 recv:off        // explicitly turn off the 720p feed
a=remote-ssrc:51 recv:on        // explicitly turn on the 360p feed
a=remote-ssrc:51 priority:1     // lower priority than slides (in this application)
m=video 52538 RTP/SAVPF 96      // presentation
a=content:slides
a=remote-ssrc:8 recv:on         // turn on the slides feed with higher priority
                                   // FID is sent implicitly (unless explicitly rejected)
a=remote-ssrc:8 priority:2      // (sender uses priority when making BW decisions)
a=msid-semantics:WMS            // I understand SSRCs and MSTs

m=audio 49170 RTP/AVP 101       // main audio
a=ssrc:1 msid:left-mic          // declare 3 outgoing audio sources, each with unique MSID
a=ssrc:2 msid:center-mic
a=ssrc:3 msid:right-mic
a=remote-ssrc:101 on
m=video 62537 RTP/SAVPF 96      // main video
a=ssrc:4 msid:left-cam          // declare 3 outgoing video sources
a=ssrc:5 msid:center-cam        // one source is simulcasting at two resolutions, same codec
a=ssrc:5 imageattr:* [1280, 720]
a=ssrc:51 msid:center-cam       // different SSRC, same MSID for simulcasts
a=ssrc:51 imageattr:* [640, 360]
a=ssrc:6 msid:right-cam
a=ssrc-group:SIMULCAST 5 51
a=remote-ssrc:105 on
m=video 62538 RTP/SAVPF 96      // presentation
a=content:slides                // [media, content] tuples must be unique in m= lines
a=ssrc:8 msid:slides            // app decision to do this; could have been put in the m=video line above
a=ssrc:9 msid:slides            // RTX SSRC
a=ssrc-group:FID 8 9            // declaration that SSRC 9 is a repair flow for 8
a=msid-semantics:WMS            // I understand SSRCs and MSTs

m=audio 49170 RTP/AVP 101       // main audio
a=ssrc:1 msid:left-mic          // declare 3 outgoing audio sources, each
                                   // with unique MSID
a=ssrc:2 msid:center-mic
a=ssrc:3 msid:right-mic
m=video 62537 RTP/SAVPF 96      // main video
a=ssrc:4 msid:left-cam          // declare 3 outgoing video sources
a=ssrc:5 msid:center-cam        // one source is simulcasting at two
                                   // resolutions, same codec
a=ssrc:5 imageattr:* [1280, 720]
a=ssrc:51 msid:center-cam       // different SSRC, same MSID for simulcasts
a=ssrc:51 imageattr:* [640, 360]
a=ssrc:6 msid:right-cam
a=ssrc-group:SIMULCAST 5 51
m=video 62538 RTP/SAVPF 96      // presentation
a=content:slides                // [media, content] tuples must be unique
                                   // in m= lines
a=ssrc:8 msid:slides            // app decision to do this; could have been
                                   // put in the m=video line above
a=ssrc:9 msid:slides            // RTX SSRC
a=ssrc-group:FID 8 9            // declaration that SSRC 9 is a repair
                                   // flow for 8
m=audio 39170 RTP/AVP 101       // main audio
m=video 52537 RTP/SAVPF 96     // main video
m=video 52538 RTP/SAVPF 96     // presentation
a=content:slides
