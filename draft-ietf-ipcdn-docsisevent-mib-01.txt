Internet Draft                                                  J. Gao
IPCDN Working Group                                      Cisco Systems
draft-ietf-ipcdn-docsisevent-mib-01.txt                  P. Siripunkaw
                                                        AT&T Broadband
                                                    Expires: Sept 2001


             Event Notification Management Information Base
for DOCSIS 1.1 Compliant Cable Modems and Cable Modem Termination
Systems

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

Copyright Notice

   Copyright (C) The Internet Society (2000). All Rights Reserved.

Abstract

   This memo defines a portion of the Management Information Base (MIB)
   for use with network management protocols in the Internet community.
   In particular, it defines a basic set of managed objects for SNMP-
   based event notification management of DOCSIS 1.1 compliant Cable
   Modems and Cable Modem Termination Systems. This MIB is defined as an
   extension to the DOCSIS Cable Device MIB, RFC 2669.

   This memo specifies a MIB module in a manner that is compliant to the
   SMIv2.  The set of objects is consistent with the SNMP framework and
   existing SNMP standards.

   CableLabs requires the implementation of this MIB (is this true?
   qualify)

   This memo is a product of the IPCDN working group within the Internet
   Engineering Task Force.  Comments are solicited and should be
   addressed to the working group's mailing list at ipcdn@ietf.org
   and/or the author.

Table of Contents

      1 The SNMP Management Framework ................................... 2
      2 Glossary ........................................................ 3
      2.1 BPI ........................................................... 3
      2.2 BPI+ .......................................................... 4
      2.3 CATV .......................................................... 4
      2.4 CM ............................................................ 4
      2.5 CMTS .......................................................... 4
      2.6 DOCSIS ........................................................ 4
      2.7 Downstream .................................................... 4
      2.8 Head-end ...................................................... 4
      2.9 MAC Packet .................................................... 4
      2.10 RF ........................................................... 4
      2.11 SID .......................................................... 5
      2.12 Upstream ..................................................... 5
      3 Overview ........................................................ 5
      3.1 Structure of the MIB .......................................... 5
      3.2 Management requirements ....................................... 5
      4 Definitions ..................................................... 5
      5 Acknowledgments ................................................ 17
      6 References ..................................................... 17
      7 Security Considerations ........................................ 19
      8 Intellectual Property .......................................... 20
      9 Authors' Addresses ............................................. 20
      10 Full Copyright Statement ...................................... 21

1.  The SNMP Management Framework

   The SNMP Management Framework presently consists of five major
   components:

   o   An overall architecture, described in RFC 2571 [RFC2571].

   o   Mechanisms for describing and naming objects and events for the
       purpose of management.  The first version of this Structure of
       Management Information (SMI) is called SMIv1 and described in
       STD 16, RFC 1155 [RFC1155], STD 16, RFC 1212 [RFC1212] and RFC
       1215 [RFC1215].  The second version, called SMIv2, is described
       in STD 58, RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and
       STD 58, RFC 2580 [RFC2580].

   o   Message protocols for transferring management information.  The
       first version of the SNMP message protocol is called SNMPv1 and
       described in STD 15, RFC 1157 [RFC1157].  A second version of
       the SNMP message protocol, which is not an Internet standards
       track protocol, is called SNMPv2c and described in RFC 1901
       [RFC1901] and RFC 1906 [RFC1906].  The third version of the
       message protocol is called SNMPv3 and described in RFC 1906
       [RFC1906], RFC 2572 [RFC2572] and RFC 2574 [RFC2574].

   o   Protocol operations for accessing management information.  The
       first set of protocol operations and associated PDU formats is
       described in STD 15, RFC 1157 [RFC1157].  A second set of
       protocol operations and associated PDU formats is described in
       RFC 1905 [RFC1905].

   o   A set of fundamental applications described in RFC 2573
       [RFC2573] and the view-based access control mechanism described
       in RFC 2575 [RFC2575].

   A more detailed introduction to the current SNMP Management Framework
   can be found in RFC 2570 [RFC2570].

   Managed objects are accessed via a virtual information store, termed
   the Management Information Base or MIB.  Objects in the MIB are
   defined using the mechanisms defined in the SMI.

   This memo specifies a MIB module that is compliant to the SMIv2.  A
   MIB conforming to the SMIv1 can be produced through the appropriate
   translations.  The resulting translated MIB must be semantically
   equivalent, except where objects or events are omitted because no
   translation is possible (use of Counter64).  Some machine readable
   information in SMIv2 will be converted into textual descriptions in
   SMIv1 during the translation process.  However, this loss of machine
   readable information is not considered to change the semantics of the
   MIB.

2.  Glossary

   The terms in this document are derived either from normal cable
   system usage, or from the documents associated with the Data Over
   Cable Service Interface Specification process.

2.1.  BPI - Baseline Privacy Interface

   A term referring to the DOCSIS specification [BPI] for enabling
   simple data privacy in the DOCSIS 1.0 system.

2.2.  BPI+ - Baseline Privacy Plus Interface

   A term referring to the DOCSIS specification [BPI+] for enabling CM
   authentication and data privacy in the DOCSIS 1.1 system.

2.3.  CATV

   Originally "Community Antenna Television", now used to refer to any
   cable or hybrid fiber and cable system used to deliver video signals
   to a community.

2.4.  CM - Cable Modem

   A CM acts as a "slave" station in a DOCSIS compliant cable data
   system.

2.5.  CMTS - Cable Modem Termination System

   A generic term covering a cable bridge or cable router in a head-end.
   A CMTS acts as the master station in a DOCSIS compliant cable data
   system.  It is the only station that transmits downstream, and it
   controls the scheduling of upstream transmissions by its associated
   CMs.

2.6.  DOCSIS

   "Data-Over-Cable Service Interface Specifications".  A term referring
   to the ITU-T J.112 Annex B standard for cable modem systems [RFI1.0],
   commonly known as DOCSIS 1.0.  The DOCSIS 1.1 specification is an
   extension of DOCSIS 1.0, with new features to support quality of
   service, fragmentation, and requirements for European cable plants
   [RFI1.1].

2.7.  Downstream

   The direction from the head-end towards the subscriber.

2.8.  Head-end

   The origination point in most cable systems of the subscriber video
   signals. Generally also the location of the CMTS equipment.

2.9.  MAC Packet

   A DOCSIS PDU.

2.10.  RF

   Radio Frequency.

2.11  SID

   Service ID. The SID identifies a particular upstream bandwidth
   allocation and class-of-service management for DOCSIS, and identifies
   a particular bidirectional security association for BPI.

2.12.  Upstream

   The direction from the subscriber towards the head-end.

3.  Overview

   High Speed Internet Service offering in cable industry has become
   extremely successful. DOCSIS devices including CM and CMTS are being
   deployed at a rate of multiple thousands per day. Although operators
   are enjoyinging successful deployment, they are also facing a
   challenge to properly manage deployed devices.  Operators are using
   Simple Network Management Protocol, a set of Management Information
   Base (MIB) required by DOCSIS, and SNMP Traps to manage deployed
   DOCSIS devices.  The usage of SNMP Trap for event reporting is
   becoming more popular as an effective and efficient method for
   network monitoring.

   Unfortunately, only a minimal set of SNMP Traps is currently
   available. This notification MIB in conjunction with [OSS1.1] provide
   a minimum set of standard DOCSIS Traps that DOCSIS devices will
   support to enable successful management of DOCSIS devices and
   network.

   This document definess a set of objects required for the event
   notification management of DOCSIS 1.1 compliant Cable Modems (CMs)
   and Cable Modem Termination Systems (CMTSs). The specification is
   derived from the DOCSIS 1.1 Operations Support System Interface
   Specification [OSS1.1].

   The Appendix F of [OSS1.1] defines all DOCSIS 1.1 required events.
   The notifications specified in this document are used to notify these
   events via SNMP.

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

3.1.  Structure of the MIB

   There two MIBs are proposed in this document.

   The main part of the proposal is the DOCS-CABLE-DEVICE-TRAP-MIB.  The
   notification part of DOCS-CABLE-DEVICE-MIB of RFC2669 is left empty
   for further enhancement. The DOCS-CABLE-DEVICE-TRAP-MIB is designed
   to fulfill this role and therefore completes RFC2669.

   To provide additional neccessary information for the notifications
   defined in the DOCS-CABLE-DEVICE-TRAP-MIB, a MIB extension DOCS-IF-
   EXT-MIB is proposed to enhance the DOCS-IF-MIB defined in RFC2670.

3.1.1  DOCS-IF-EXT-MIB

   Three objects are proposed to provide DOCSIS version information.

   o docsIfDocsisCapability

   is used to indicate the highest level of DOCSIS version a cable
   device can support, i.e., whether it is DOCSIS 1.1 capable or DOCSIS
   1.0 capable.

   o docsIfDocsisOperMode

   is used to indicate whether a cable device is registered as a DOCSIS
   1.1 device or DOCSIS 1.0 device. For a CMTS, its value is always the
   same as that of docsIfDevDocsisCapability.

   o docsIfCmtsCmStatusDocsisMode

   is used to indicate whether a cable modem connected to a CMTS cable
   interface, is registered as a DOCSIS 1.1 device or DOCSIS 1.0 device.

3.1.2  DOCS-CABLE-DEVICE-TRAP-MIB


   There are two groups of SNMP notification objects are defined. One
   group is for notifying cable modem events and one group for notifying
   cable modem termination system events.

   Common to all CM notification objects (traps) is that in their
   OBJECTS statements, a CM trap contains information about the event
   priority, the event Id, the event message body, the CM DOCSIS
   capability, the CM DOCSIS register status, the cable interface MAC
   address of the cable modem and the CMTS cable card MAC address to
   which the cable modem is connected to.

   Common to all CMTS notification objects (traps) is that in their
   OBJECTS statements, a CMTS trap contains information about the event
   priority, the event Id, the event message body,  the connected CM
   DOCSIS register status, the CM cable interface MAC address, the CMTS
   DOCSIS register status and the CMTS cable card MAC address.

3.1.3  Event Throttling

   Snmp event throttling is controlled and described in RFC 2669.

4.  Definitions



   DOCS-IF-EXT-MIB DEFINITIONS ::= BEGIN

     IMPORTS
           MODULE-IDENTITY,
           OBJECT-TYPE
                   FROM SNMPv2-SMI
           OBJECT-GROUP,
           MODULE-COMPLIANCE
                   FROM SNMPv2-CONF
           TEXTUAL-CONVENTION
                   FROM SNMPv2-TC
           docsIfMib,
           docsIfCmtsCmStatusEntry
                   FROM DOCS-IF-MIB;

   docsIfExtMib MODULE-IDENTITY
           LAST-UPDATED    "0101160000Z" -- January 16, 2001
           ORGANIZATION    "IETF IPCDN Working Group"
           CONTACT-INFO
               "
                         Junming Gao
                         Cisco Systems Inc
                         <jgao@cisco.com>
                                 "
           DESCRIPTION
               "This is the extension Module to rfc2670 DOCS-IF-MIB."
           REVISION "0010080000Z"
           DESCRIPTION
               "Initial Version. "
           ::= { docsIfMib 21 }

   -- Textual Conventions
   DocsisVersion ::= TEXTUAL-CONVENTION
       STATUS          current
       DESCRIPTION     "Indicates the docsis version number."
       SYNTAX          INTEGER {
                           docsis10 (1),
                           docsis11 (2)
                       }

   docsIfDocsisCapability OBJECT-TYPE
           SYNTAX      DocsisVersion
           MAX-ACCESS  read-only
           STATUS      current
           DESCRIPTION
                "Indication of the DOCSIS capability of the device.

                "
           ::= { docsIfExtMib 1 }

   docsIfDocsisOperMode OBJECT-TYPE
           SYNTAX      DocsisVersion
           MAX-ACCESS  read-only
           STATUS      current
           DESCRIPTION
                "Indication whether the device has registered as a 1.0 or 1.1.

                 For CMTS and unregistered CM, it is always the same as docsDevDocsisCapability.

                "
           ::= { docsIfExtMib 2 }


   --
   -- CM status table (within CMTS).
   -- This table is implemented only at the CMTS.
   -- It contains per CM status information available in the CMTS.
   --

   docsIfCmtsCmStatusExtTable OBJECT-TYPE
           SYNTAX      SEQUENCE OF DocsIfCmtsCmStatusExtEntry
           MAX-ACCESS  not-accessible
           STATUS      current
           DESCRIPTION
               "A set of objects in the CMTS, maintained for each
                Cable Modem connected to this CMTS."
           ::= { docsIfExtMib 3 }

   docsIfCmtsCmStatusExtEntry OBJECT-TYPE
           SYNTAX      DocsIfCmtsCmStatusExtEntry
           MAX-ACCESS  not-accessible
           STATUS      current
           DESCRIPTION
               "Status information for a single Cable Modem.
                An entry in this table exists for each Cable Modem
                which is connected to the CMTS."
           AUGMENTS { docsIfCmtsCmStatusEntry }
           ::= { docsIfCmtsCmStatusExtTable 1 }

   DocsIfCmtsCmStatusExtEntry ::= SEQUENCE {
               docsIfCmtsCmStatusDocsisMode       DocsisVersion
           }

   docsIfCmtsCmStatusDocsisMode OBJECT-TYPE
           SYNTAX      DocsisVersion
           MAX-ACCESS  read-only
           STATUS      current
           DESCRIPTION
               "Indication whether the CM has registered as a 1.0 or 1.1 modem               "
           ::= { docsIfCmtsCmStatusExtEntry 1 }

   docsIfExtConformance  OBJECT IDENTIFIER     ::= { docsIfExtMib 4 }
   docsIfExtCompliances  OBJECT IDENTIFIER     ::= { docsIfExtConformance 1 }
   docsIfExtGroups       OBJECT IDENTIFIER     ::= { docsIfExtConformance 2 }

   -- compliance statements

   docsIfExtCmCompliance MODULE-COMPLIANCE
           STATUS      current
           DESCRIPTION
               "The compliance statement."

   MODULE  -- docsIfExtMib

   -- unconditionally mandatory groups for CM
   MANDATORY-GROUPS {
    docsIfDocsisVersionGroup
           }
           ::= { docsIfExtCompliances 1 }


   docsIfDocsisVersionGroup OBJECT-GROUP
           OBJECTS {
                docsIfDocsisCapability,
                docsIfDocsisOperMode
           }
           STATUS      current
           DESCRIPTION
               "Object group to indicates DOCSIS version."
           ::= { docsIfExtGroups 1 }

   docsIfExtCmtsCompliance MODULE-COMPLIANCE
           STATUS      current
           DESCRIPTION
               "The compliance statement."

   MODULE  -- docsIfExtMib

   -- unconditionally mandatory groups for CMTS

   MANDATORY-GROUPS {
           docsIfExtGroup,
           docsIfDocsisVersionGroup
           }
           ::= { docsIfExtCompliances 2 }
   docsIfExtGroup OBJECT-GROUP
           OBJECTS {
               docsIfCmtsCmStatusDocsisMode
           }
           STATUS      current
           DESCRIPTION
               "Mandatory implementation group for CMTS."
           ::= { docsIfExtGroups 2 }

   END


   DOCS-CABLE-DEVICE-TRAP-MIB DEFINITIONS ::= BEGIN

   IMPORTS
           MODULE-IDENTITY,
           NOTIFICATION-TYPE
                   FROM SNMPv2-SMI
           MODULE-COMPLIANCE,
           NOTIFICATION-GROUP
                   FROM SNMPv2-CONF
           docsDev,
   --      docsDevBase,
           docsDevEvLevel,
           docsDevEvId,
           docsDevEvText,
           docsDevSwFilename,
           docsDevSwServer,
           docsDevServerDhcp,
           docsDevServerTime,
           docsDevNotification
                   FROM DOCS-CABLE-DEVICE-MIB  -- RFC2669
           docsIfCmCmtsAddress,
           docsIfCmtsCmStatusMacAddress
                   FROM DOCS-IF-MIB            -- RFC2670
           docsIfDocsisCapability,
           docsIfDocsisOperMode,
           docsIfCmtsCmStatusDocsisMode
                   FROM DOCS-IF-EXT-MIB
           ifPhysAddress
                   FROM IF-MIB;
   docsDevTrapMIB MODULE-IDENTITY
           LAST-UPDATED        "0101160000Z" -- January 16, 2001
           ORGANIZATION        "IETF IPCDN Working Group"
           CONTACT-INFO        "
                         Junming Gao
                         Cisco Systems Inc
                         <jgao@cisco.com>
                                 "
           DESCRIPTION
                   "CABLE DEVICE TRAP MIB is an extension of the
                    CABLE DEVICE MIB defined in RFC2669.
                     It defines various trap objects for both cable
                    modem and cable modem termination system.
                     There are two groups of SNMP notification objects are defined.
                    One group is for notifying cable modem events and one group
                    for notifying cable modem termination system events.
                     Common to all CM notification objects (traps) is that
                    in their OBJECTS statements, A CM trap contains information
                    about the event priority, the event Id, the event message
                    body, the CM DOCSIS capability, the CM DOCSIS register registration status,
                    the cable interface MAC address of the cable modem and
                    the cable card MAC address of the CMTS to which the modem is
                    connected to.
                     These objects are docsDevEvLevel, docsDevId, docsDevEvText,
                    docsIfDocsisCapability, docsIfDocsisOperMode,
                    ifPhysAddress and docsIfCmCmtsAddress. The values of
                    docsDevEvLevel, docsDevId, and docsDevEvText are from
                    the entry which logs this event in the
                    docsDevEventTable, which is defined in
                    DOCS-CABLE-DEVICE-MIB of RFC2669. The docsIfDocsisCapability
                    and docsIfDocsisOperMode are defined in DOCS-IF-EXT-MIB.
                    The ifPhysAddress value is the MAC address of the cable
                    interface of this cable modem. The docsIfCmCmtsAddress
                    specifies the MAC address of the CMTS (if there is a cable
                    card/interface in the CMTS, then it is actually the
                    cable interface interface MAC address to which the CM is connected).
                     Individual CM trap may contain additional objects to
                    provide necessary information.
                     Common to all CMTS notification objects (traps) is that
                    in their OBJECTS statements, A CMTS trap contains information
                    about the event priority, the event Id, the event message
                    body,  the connected CM DOCSIS register status, the CM cable
                    interface MAC address, the CMTS DOCSIS register status and
                    the CMTS MAC address.
                     These objects are docsDevEvLevel, docsDevId, docsDevEvText,
                    docsIfCmtsCmStatusDocsisMode, docsIfCmtsCmStatusMacAddress,
                    docsIfDocsisCapability, and ifPhysAddress. The values of
                    docsDevEvLevel, docsDevId, and docsDevEvText are
                    similar to what in CM traps. The values of
                    docsIfCmtsCmStatusDocsisMode and
                    docsIfCmtsCmStatusMacAddress are from the
                    docsIfCmtsCmStatusEntry (defined in DOCS-IF-MIB)
                    corresponding to a conneced CM. The docsIfDocsisCapability
                    indicates the CMTS DOCSIS capability.
                    The ifPhysAddress value is the CMTS MAC address (if there
                    is a cable card/interface in the CMTS, then it is actually
                    the MAC address of the cable interface which connected to the CM).
                   "
           REVISION "0010080000Z"
           DESCRIPTION
               "Initial Version. "
           ::= { docsDev 10 }
   --
   -- docsDevNotification OBJECT IDENTIFIER   ::= { docsDev 2 }
   --
   docsDevTraps OBJECT IDENTIFIER   ::= { docsDevNotification 1 }
   docsDevTrapControl OBJECT IDENTIFIER   ::= { docsDevTraps 1}
   docsDevCmTraps OBJECT IDENTIFIER   ::= { docsDevTraps 2 0 }
   docsDevCmtsTraps OBJECT IDENTIFIER   ::= { docsDevTraps 3 0 }

   docsDevCmTrapControl    OBJECT-TYPE
                SYNTAX     BITS {
                 cmInitTLVUnknownTrap(0),
                cmDynServReqFailTrap(1),
                cmDynServRspFailTrap(2),
                cmDynServAckFailTrap(3),
                cmBpiInitTrap(4),
                cmBPKMTrap(5),
                cmDynamicSATrap(6),
                cmDHCPFailTrap(7),
                cmSwUpgradeInitTrap(8),
                cmSwUpgradeFailTrap(9),
                cmSwUpgradeSuccessTrap(10),
                cmSwUpgradeCVCTrap(11),
                cmTODFailTrap(12),
                cmDCCReqFailTrap(13),
                cmDCCRspFailTrap(14),
                cmDCCAckFailTrap(15)
                }
                 MAX-ACCESS read-write
                STATUS  current
                DESCRIPTION
                    "The object is used to enable CM traps. From left to right,
                     the set bit indicates the corresponding CM trap is enabled.
                     For example, if the first bit is set, then
                     docsDevCmInitTLVUnknownTrap is enabled. If it is zero,
                     the trap is disabled.
                    "
            ::= { docsDevTrapControl 1 }

   docsDevCmtsTrapControl     OBJECT-TYPE
             SYNTAX     BITS {
                cmtsInitRegReqFailTrap(0),
                cmtsInitRegRspFailTrap(1),
                cmtsInitRegAckFailTrap(2),
                cmtsDynServReqFailTrap(3),
                cmtsDynServRspFailTrap(4),
                cmtsDynServAckFailTrap(5),
                cmtsBpiInitTrap(6),
                cmtsBPKMTrap(7),
                cmtsDynamicSATrap(8),
                cmtsDCCReqFailTrap(9),
                cmtsDCCRspFailTrap(10),
                cmtsDCCAckFailTrap(11)
                }
                MAX-ACCESS read-write
                STATUS  current
                DESCRIPTION
                    "The object is used to enable CMTS traps. From right to left,
                     the set bit indicates the corresponding CMTS trap is enabled.
                     For example, if the first bit is set, then
                     docsDevCmtsInitRegRspFailTrap is enabled. If it is zero,
                     the trap is disabled.
                    "
            ::= { docsDevTrapControl 2 }

   docsDevCmInitTLVUnknownTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress }
                STATUS  current
                DESCRIPTION
                    "Event due to detection of unknown TLV during
                     the TLV parsing process.
                      The values of docsDevEvLevel, docsDevId, and
                     DocsDevEvText are from the entry which logs this event
                     in the docsDevEventTable. The docsIfDocsisCapability
                     and docsIfDocsisOperMode indicate the DOCSIS version
                     information. The ifPhysAddress value is the MAC
                     address of the cable interface of this cable modem.
                     The docsIfCmCmtsAddress specifies the MAC address of
                     the CMTS to which the CM is connected (if there is a cable
                     card/interface in the CMTS, then it is actually the MAC
                     address of the cable interface which connected to the CM).
                     This part of information is uniformed across all CM traps.
                    "
            ::= { docsDevCmTraps 1 }


   docsDevCmDynServReqFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a dynamic service
                     request happened during the dynamic services process.
                    "
            ::= { docsDevCmTraps 2 }

   docsDevCmDynServRspFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a dynamic service
                     response happened during the dynamic services process.
                    "
            ::= { docsDevCmTraps 3}

   docsDevCmDynServAckFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a dynamic service
                     acknowledgement happened during the dynamic services process.
                    "
            ::= { docsDevCmTraps 4}

   docsDevCmBpiInitTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a BPI initialization
                     attempt happened during the registration process.
                    "
            ::= { docsDevCmTraps 5 }


   docsDevCmBPKMTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress  }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a BPKM operation.
                    "
            ::= { docsDevCmTraps 6 }


   docsDevCmDynamicSATrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a dynamic security
                     association operation.
                    "
            ::= { docsDevCmTraps 7 }

   docsDevCmDHCPFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress,
                          docsDevServerDhcp }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a DHCP server.
                     The value of docsDevServerDhcp is the IP address
                     of the DHCP server.
                    "
            ::= { docsDevCmTraps 8 }

   docsDevCmSwUpgradeInitTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress,
                          docsDevSwFilename,
                          docsDevSwServer }
                STATUS  current
                DESCRIPTION
                    "An event to report a software upgrade initiated
                     event. The values of docsDevSwFilename, and
                     docsDevSwServer indicate the software image name
                     and the server IP address the image is from.
                    "
            ::= { docsDevCmTraps 9 }

   docsDevCmSwUpgradeFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress,
                          docsDevSwFilename,
                          docsDevSwServer }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a software upgrade
                     attempt. The values of docsDevSwFilename, and
                     docsDevSwServer indicate the software image name
                     and the server IP address the image is from.
                    "
            ::= { docsDevCmTraps 10 }

   docsDevCmSwUpgradeSuccessTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress,
                          docsDevSwFilename,
                          docsDevSwServer }
                STATUS  current
                DESCRIPTION
                    "An event to report the Software upgrade success event.
                     The values of docsDevSwFilename, and
                     docsDevSwServer indicate the software image name
                     and the server IP address the image is from.
                    "
            ::= { docsDevCmTraps 11 }

   docsDevCmSwUpgradeCVCFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of the verification
                     of code file happened during a secure software upgrade
                     attempt.
                    "
            ::= { docsDevCmTraps 12 }

   docsDevCmTODFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress,
                          docsDevServerTime }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a time of day server.
                     The value of docsDevServerTime indicates the server IP
                     address.
                    "
            ::= { docsDevCmTraps 13 }


   docsDevCmDCCReqFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a dynamic channel
                     change request happened during the dynamic channel
                     change process in the CM side.
                    "
            ::= { docsDevCmTraps 14 }


   docsDevCmDCCRspFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                         docsIfCmCmtsAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a dynamic channel
                     change response happened during the dynamic channel
                     change process in the CM side.
                    "
            ::= { docsDevCmTraps 15 }


   docsDevCmDCCAckFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfDocsisCapability,
                          docsIfDocsisOperMode,
                          ifPhysAddress,
                          docsIfCmCmtsAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a dynamic channel
                     change acknowledgement happened during the dynamic channel
                     change process in the CM side.
                    "
            ::= { docsDevCmTraps 16}

   docsDevCmtsInitRegReqFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfCmtsCmStatusDocsisMode,
                          docsIfCmtsCmStatusMacAddress,
                          docsIfDocsisCapability,
                          ifPhysAddress }
                STATUS  current
                DESCRIPTION
                       "An event to report the failure of a registration
                        request from CM happened during the CM initialization
                        process and detected in the CMTS side.

                        The values of docsDevEvLevel, docsDevId, and
                        docsDevEvText are from the entry which logs this event
                        in the docsDevEventTable. DocsIfCmtsCmStatusDocsisMode
                        and docsIfCmtsCmStatusMacAddress indicate the docsis
                        version and the MAC address of the requesting CM.
                        docsIfDocsisCapability and ifPhysAddress indicate
                        the docsis version of the CMTS and the MAC address
                        of the CMTS (if there is a cable card/interface in the
                        CMTS, then it is actually the MAC address of the cable
                        interface which connected to the CM)cable card connected
                        to the CM.

                        This part of information is uniformed across all CMTS traps.
                       "
            ::= { docsDevCmtsTraps 1 }

   docsDevCmtsInitRegRspFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfCmtsCmStatusDocsisMode,
                          docsIfCmtsCmStatusMacAddress,
                          docsIfDocsisCapability,
                          ifPhysAddress }
                STATUS  current
                DESCRIPTION
                       "An event to report the failure of a registration
                        response happened during the CM initialization
                        process and detected in the CMTS side.
                       "
            ::= { docsDevCmtsTraps 2 }

   docsDevCmtsInitRegAckFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfCmtsCmStatusDocsisMode,
                          docsIfCmtsCmStatusMacAddress,
                          docsIfDocsisCapability,
                          ifPhysAddress }
                STATUS  current
                DESCRIPTION
                       "An event to report the failure of a registration
                        acknowledgement from CM happened during the CM
                        initialization process and detected in the CMTS side.
                       "
           ::= { docsDevCmtsTraps 3 }


   docsDevCmtsDynServReqFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfCmtsCmStatusDocsisMode,
                          docsIfCmtsCmStatusMacAddress,
                          docsIfDocsisCapability,
                          ifPhysAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a dynamic service
                     request happened during the dynamic services process
                     and detected in the CMTS side.
                    "
            ::= { docsDevCmtsTraps 4 }


   docsDevCmtsDynServRspFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfCmtsCmStatusDocsisMode,
                          docsIfCmtsCmStatusMacAddress,
                          docsIfDocsisCapability,
                          ifPhysAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a dynamic service
                     response happened during the dynamic services process
                     and detected in the CMTS side.
                    "
            ::= { docsDevCmtsTraps 5 }

   docsDevCmtsDynServAckFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfCmtsCmStatusDocsisMode,
                          docsIfCmtsCmStatusMacAddress,
                          docsIfDocsisCapability,
                          ifPhysAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a dynamic service
                     acknowledgement happened during the dynamic services
                     process and detected in the CMTS side.
                    "
            ::= { docsDevCmtsTraps 6 }

   docsDevCmtsBpiInitTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfCmtsCmStatusDocsisMode,
                          docsIfCmtsCmStatusMacAddress,
                          docsIfDocsisCapability,
                          ifPhysAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a BPI initialization
                     attempt happened during the CM registration process
                     and detected in the CMTS side.
                    "
            ::= { docsDevCmtsTraps 7 }


   docsDevCmtsBPKMTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfCmtsCmStatusDocsisMode,
                          docsIfCmtsCmStatusMacAddress,
                          docsIfDocsisCapability,
                          ifPhysAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a BPKM operation
                     which is detected in the CMTS side.
                    "
            ::= { docsDevCmtsTraps 8 }


   docsDevCmtsDynamicSATrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfCmtsCmStatusDocsisMode,
                          docsIfCmtsCmStatusMacAddress,
                          docsIfDocsisCapability,
                          ifPhysAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a dynamic security
                     association operation which is detected in the CMTS side.
                    "
            ::= { docsDevCmtsTraps 9 }

   docsDevCmtsDCCReqFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfCmtsCmStatusDocsisMode,
                          docsIfCmtsCmStatusMacAddress,
                          docsIfDocsisCapability,
                          ifPhysAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a dynamic channel
                     change request happened during the dynamic channel
                     change process in the CM side and detected in the
                     CMTS side.
                    "
            ::= { docsDevCmtsTraps 10 }


   docsDevCmtsDCCRspFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfCmtsCmStatusDocsisMode,
                          docsIfCmtsCmStatusMacAddress,
                          docsIfDocsisCapability,
                          ifPhysAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a dynamic channel
                     change response happened during the dynamic channel
                     change process in the CMTS side.
                    "
            ::= { docsDevCmtsTraps 11 }


   docsDevCmtsDCCAckFailTrap    NOTIFICATION-TYPE
                OBJECTS { docsDevEvLevel,
                          docsDevEvId,
                          docsDevEvText,
                          docsIfCmtsCmStatusDocsisMode,
                          docsIfCmtsCmStatusMacAddress,
                          docsIfDocsisCapability,
                          ifPhysAddress }
                STATUS  current
                DESCRIPTION
                    "An event to report the failure of a dynamic channel
                     change acknowledgement happened during the dynamic channel
                     change process in the CMTS side.
                    "
            ::= { docsDevCmtsTraps 12}


   --
   -- Conformance definitions
   --
   docsDevTrapConformance  OBJECT IDENTIFIER   ::= { docsDevTraps 2 }
   docsDevTrapGroups       OBJECT IDENTIFIER   ::= { docsDevTrapConformance 1 }
   docsDevTrapCompliances  OBJECT IDENTIFIER   ::= { docsDevTrapConformance 2 }

   docsDevCmTrapCompliance MODULE-COMPLIANCE
           STATUS  current
           DESCRIPTION
               "The compliance statement for Cable Modem Traps and Control
                "

   MODULE  -- docsDevTrap

   -- mandatory groups

   GROUP docsDevCmTrapControlGroup
           DESCRIPTION
               "Mandatory in CM."

   GROUP docsDevCmNotificationGroup
           DESCRIPTION
               "Mandatory in Cable Modem."
            ::= { docsDevTrapCompliances 1 }

   docsDevCmTrapControlGroup OBJECT-GROUP
           OBJECTS {
                docsDevCmTrapControl
                        }
           STATUS      current
           DESCRIPTION
               "CM must support docsDevCmTrapControl."
           ::= { docsDevTrapGroups 1 }


   docsDevCmNotificationGroup NOTIFICATION-GROUP
           NOTIFICATIONS {
                docsDevCmInitTLVUnknownTrap,
                docsDevCmDynServReqFailTrap,
                docsDevCmDynServRspFailTrap,
                docsDevCmDynServAckFailTrap,
                docsDevCmBpiInitTrap,
                docsDevCmBPKMTrap,
                docsDevCmDynamicSATrap,
                docsDevCmDHCPFailTrap,
                docsDevCmSwUpgradeInitTrap,
                docsDevCmSwUpgradeFailTrap,
                docsDevCmSwUpgradeSuccessTrap,
                docsDevCmSwUpgradeCVCTrap,
                docsDevCmTODFailTrap,
                docsDevCmDCCReqFailTrap,
                docsDevCmDCCRspFailTrap,
                docsDevCmDCCAckFailTrap
                        }
           STATUS      current
           DESCRIPTION
               "A collection of CM notifications providing device status and
                control."
           ::= { docsDevTrapGroups 2 }



   docsDevCmtsTrapCompliance MODULE-COMPLIANCE
              STATUS  current
              DESCRIPTION
                  "The compliance statement for MCNS Cable Modems and
                   Cable Modem Termination Systems."

      MODULE  -- docsDevTrap

   -- mandatory groups

   GROUP docsDevCmtsTrapControlGroup
           DESCRIPTION
               "Mandatory in CMTS."

   GROUP docsDevCmtsNotificationGroup
           DESCRIPTION
               "Mandatory in Cable Modem Termination Systems."

            ::= { docsDevTrapCompliances 2 }

   docsDevCmtsTrapControlGroup OBJECT-GROUP
           OBJECTS {
                docsDevCmtsTrapControl
                        }
           STATUS      current
           DESCRIPTION
               "CMTS must support docsDevCmtsTrapControl."
           ::= { docsDevTrapGroups 3 }


   docsDevCmtsNotificationGroup NOTIFICATION-GROUP
           NOTIFICATIONS {
                docsDevCmtsInitRegReqFailTrap,
                docsDevCmtsInitRegRspFailTrap,
                docsDevCmtsInitRegAckFailTrap ,
                docsDevCmtsDynServReqFailTrap,
                docsDevCmtsDynServRspFailTrap,
                docsDevCmtsDynServAckFailTrap,
                docsDevCmtsBpiInitTrap,
                docsDevCmtsBPKMTrap,
                docsDevCmtsDynamicSATrap,
                docsDevCmtsDCCReqFailTrap,
                docsDevCmtsDCCRspFailTrap,
                docsDevCmtsDCCAckFailTrap
              }
           STATUS      current
           DESCRIPTION
               "A collection of CMTS notifications providing device status and
                control."
           ::= { docsDevTrapGroups 4 }

   END





5.  Acknowledgments

   This document was produced by the IPCDN Working Group.

   Special thanks to Rich Woundy of Cisco Systems Inc who made several
   valuable suggestions to improve the traps.



6.  References

   [RFC2571]   Harrington, D., Presuhn, R., and B. Wijnen, "An Architecture
               for Describing SNMP Management Frameworks", RFC 2571, April
               1999.

   [RFC1155]   Rose, M., and K. McCloghrie, "Structure and Identification
               of Management Information for TCP/IP-based Internets", STD
               16, RFC 1155, May 1990.

   [RFC1212]   Rose, M., and K. McCloghrie, "Concise MIB Definitions", STD
               16, RFC 1212, March 1991.

   [RFC1215]   M. Rose, "A Convention for Defining Traps for use with the
               SNMP", RFC 1215, March 1991.

   [RFC2578]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
               Rose, M., and S. Waldbusser, "Structure of Management
               Information Version 2 (SMIv2)", STD 58, RFC 2578, April
               1999.

   [RFC2579]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
               Rose, M., and S. Waldbusser, "Textual Conventions for
               SMIv2", STD 58, RFC 2579, April 1999.

   [RFC2580]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
               Rose, M., and S. Waldbusser, "Conformance Statements for
               SMIv2", STD 58, RFC 2580, April 1999.

   [RFC1157]   Case, J., Fedor, M., Schoffstall, M., and J. Davin, "Simple
               Network Management Protocol", STD 15, RFC 1157, May 1990.

   [RFC1901]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
               "Introduction to Community-based SNMPv2", RFC 1901, January
               1996.

   [RFC1906]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
               "Transport Mappings for Version 2 of the Simple Network
               Management Protocol (SNMPv2)", RFC 1906, January 1996.

   [RFC2572]   Case, J., Harrington D., Presuhn R., and B. Wijnen, "Message
               Processing and Dispatching for the Simple Network Management
               Protocol (SNMP)", RFC 2572, April 1999.

   [RFC2574]   Blumenthal, U., and B. Wijnen, "User-based Security Model
               (USM) for version 3 of the Simple Network Management
               Protocol (SNMPv3)", RFC 2574, April 1999.

   [RFC1905]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
               "Protocol Operations for Version 2 of the Simple Network
               Management Protocol (SNMPv2)", RFC 1905, January 1996.

   [RFC2573]   Levi, D., Meyer, P., and B. Stewart, "SNMPv3 Applications",
               RFC 2573, April 1999.

   [RFC2575]   Wijnen, B., Presuhn, R., and K. McCloghrie, "View-based
               Access Control Model (VACM) for the Simple Network
               Management Protocol (SNMP)", RFC 2575, April 1999.

   [RFC2570]   Case, J., Mundy, R., Partain, D., and B. Stewart,
               "Introduction to Version 3 of the Internet-standard Network
               Management Framework", RFC 2570, April 1999.

   [RFC2119]   Bradner, S., "Key words for use in RFCs to Indicate
               Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2670]   St. Johns, M., editor, "Radio Frequency (RF) Interface
               Management Information Base for MCNS/DOCSIS compliant RF
               interfaces", RFC 2670, August 1999.

   [RFC2669]   St. Johns, M., editor, "DOCSIS Cable Device MIB, Cable
               Device Management Information Base for DOCSIS compliant
               Cable Modems and Cable Modem Termination Systems", RFC
               2669, August 1999.

   [BPI]       "Data-Over-Cable Service Interface Specifications:
               Baseline Privacy Interface Specification SP-BPI-I02-990319",
               DOCSIS, March 1999, http://www.cablemodem.com/.

   [BPI+]      "Data-Over-Cable Service Interface Specifications: Baseline
               Privacy Plus Interface Specification SP-BPI+-I05-000714",
               DOCSIS, July 2000, http://www.cablemodem.com/.

   [OSS1.0]    "Data-Over-Cable Service Interface Specifications:
               Operations Support System Interface Specification
               SP-OSSI-RF-I02-990113", DOCSIS, January 1999,
               http://www.cablemodem.com/.

   [OSS1.1]    "Data-Over-Cable Service Interface Specifications:
               Operations Support System Interface Specification
               SP-OSSIv1.1-I02-000714", DOCSIS, July 2000,
               http://www.cablemodem.com/.

   [RFI1.0]    "Data-Over-Cable Service Interface Specifications: Radio
               Frequency Interface Specification SP-RFI-I05-991105",
               DOCSIS, November 1999, http://www.cablemodem.com/.

   [RFI1.1]    "Data-Over-Cable Service Interface Specifications: Radio
               Frequency Interface Specification SP-RFIv1.1-I05-000714",
               DOCSIS, July 2000, http://www.cablemodem.com/.

7.  Security Considerations

   There are no management objects defined in this MIB that have a MAX-
   ACCESS clause of read-write and/or read-create.  So, if this MIB is
   implemented correctly, then there is no risk that an intruder can
   alter or create any management objects of this MIB via direct SNMP
   SET operations.

   SNMPv1 by itself is not a secure environment.  Even if the network
   itself is secure (for example by using IPSec), even then, there is no
   control as to who on the secure network is allowed to access and
   GET/SET (read/change/create/delete) the objects in this MIB.

   It is recommended that the implementers consider the security
   features as provided by the SNMPv3 framework.  Specifically, the use
   of the User-based Security Model RFC 2574 [RFC2574] and the View-
   based Access Control Model RFC 2575 [RFC2575] is recommended.

   It is then a customer/user responsibility to ensure that the SNMP
   entity giving access to an instance of this MIB, is properly
   configured to give access to the objects only to those principals
   (users) that have legitimate rights to indeed GET or SET
   (change/create/delete) them.

8.  Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights.  Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11.  Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard.  Please address the information to the IETF Executive
   Director.

9.  Authors' Addresses

      Junming Gao
      Cisco Systems
      250 Apollo Drive
      Chelmsford, MA 01824 U.S.A.
      Phone: +1 978 244 8000
      Email: jgao@cisco.com

      Pak Siripunkaw
      AT&T Broadband
      10355 Westmoore Drive
      Westminster, CO 80031 U.S.A.
      Phone: +1 303 404 8084
      Email: psiripunkaw@broadband.att.com

10.  Full Copyright Statement

   Copyright (C) The Internet Society (2000). All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the  purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.















