Z=h("Alice", pwd) and having that node calculate, for Bob,
X=h(Z,"Bob"). It is easy for Alice to compute the X for Bob using her
U     = SHA1(Username)

P     = SHA1(Password)

V     = SHA1 ("Strong Password Authentication - Version 1.0 dated
             26JUN2000")

Pseed = SHA1(U || P || V)

A     = Randomly chosen 160 bit integer

p = 3 mod 8, neither p nor (p-1)/2 has prime factors less than
p  = the 512 bit safe prime derived from Alice's name and password

S  = SHA1(Servername)

X  = SHA1(Pseed || S)

K1 = SHA1(Pseed || "0") - First 128 bits only used as a two key
          triple-DES key

Y  = ({Y*} 3DES encrypted with K1) || SHA1(Y* || K1)

AP = 1024 bit RSA modulus (same as in Y*) - public exponent is
          fixed at 3

B     = 160 bit random integer

Kseed = SHA1(X || 2**AB mod p) - Numeric result fixed at 512 bits
             in big endian order

K2    = SHA1(Kseed || "1") - First 128 bits only used as two key
             triple-DES key

ENCY  = {Y} 3DES encrypted with K2 (IV=0; CBC mode)

Msg2  = V || 2**B mod p || ENCY || Servername


K3 = SHA1(Kseed || "2")

