ATOM-CHAR        = "!" / %x23-27 / %x2A-5B / %x5D-7A / %x7C-7E
                         ; Any CHAR except ATOM-SPECIALS

ATOM-SPECIALS    = "(" / ")" / "{" / SPACE / CTL / QUOTED-SPECIALS

QUOTED-CHAR      = SAFE-CHAR / "\" QUOTED-SPECIALS

QUOTED-SPECIALS  = <"> / "\"

SAFE-CHAR        = %x01-09 / %x0B-0C / %x0E-21 /
                         %x23-5B / %x5D-7F
                         ; Any CHAR except CR, LF, or QUOTED-SPECIALS

TAG-CHAR         = %x21 / %x23-27 / %x2C-39 /
                         %x3B-5B / %x5D-7A / %x7C-7E
                         ; Any ATOM-CHAR except "*", "+", or ":"

atom            = 1*1024 ATOM-CHAR

literal          = *literal-partial literal-terminal

literal-partial  = "{>" number "}" CRLF *OCTET
                         ; The number represents the number of octets

literal-terminal = "{" number "}" CRLF *OCTET
                         ; The number represents the number of octets

number           = 1*DIGIT

quoted           = "

response-tag     = ":" tag

update-tag       = "*"

continuation-tag = "+" tag

string           = quoted / literal

tag              = 1*32 TAG-CHAR



session         = *line

line            = command / response / update / continuation

command         = tag SP atom [data] CRLF

response        = response-tag [data] CRLF

update          = update-tag SP atom [data] CRLF

continuation    = continuation-tag SP string CRLF

data            = 1*(SP datum)

datum           = atom / number / string / sexpr

sexpr           = "(" [datum [data]] ")"



noop            = tag SP "NOOP" CRLF

logout          = tag SP "LOGOUT" CRLF

authenticate    = tag SP "AUTHENTICATE" [string] CRLF
                  *("+" SP string CRLF)

resp-bad        = response-tag SP "BAD" *resp-code SP string CRLF

resp-ok         = response-tag SP "OK" *resp-code SP string CRLF

resp-no         = response-tag SP "NO" *resp-code SP string CRLF

resp-code       = SP atom [SP sexpr]

resp-code-authtooweak   = SP "AUTH-TOO-WEAK"

resp-code-encryptneeded = SP "ENCRYPT-NEEDED"

resp-code-sasl          = SP "SASL" SP "(" string ")"

resp-code-transition    = SP "TRANSITION-NEEDED"

resp-code-trylater      = SP "TRYLATER"

capabilities    = "*" SP "CAPABILITY" *capability CRLF

capability      = SP atom [SP sexpr]

bye             = "*" SP "BYE" *resp-code SP string CRLF

capability-impl = SP "IMPL" SP "(" string ")"

capability-sasl = SP "SASL" SP "(" [string *(SP string)] ")"



