targetNamespace="urn:ietf:params:xml:ns:common-conference-schema" elementFormDefault="qualified" attributeFormDefault="unqualified">
      <xs:import namespace="urn:ietf:params:xml:ns:conference-info" schemaLocation="C:\DOCUME~1\eoscdia\Desktop\conference-info.xsd" />
      <xs:import namespace="urn:ietf:params:xml:ns:common-policy" schemaLocation="C:\DOCUME~1\eoscdia\Desktop\common-policy.xsd" />
      <xs:import namespace="urn:ietf:params:xml:ns:role-schema" schemaLocation="C:\DOCUME~1\eoscdia\Desktop\role-schema.xsd" />

      <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>
      <!--
       CONFERENCE INFO
      -->
      <xs:element name="conference-info" type="conference-type"/>
      <!--
       CONFERENCE TYPE
      -->
      <xs:complexType name="conference-type">
         <xs:sequence>
           <xs:element name="conference-description" type="conference-description-type"/>
           <xs:element name="host-info" type="host-type"/>
           <xs:element name="conference-state" type="conference-state-type"/>
           <xs:element name="security-mechanism" type="security-mechanisms-type" minOccurs="0"/>
           <xs:element name="floor-information" type="floor-information-type" minOccurs="0"/>
           <xs:element name="users" type="users-type"/>
           <xs:element name="sidebars-by-ref" type="sidebars-by-ref-type" minOccurs="0"/>
           <xs:element name="sidebars-by-val" type="sidebars-by-val-type" minOccurs="0"/>
           <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
         </xs:sequence>
      </xs:complexType>
      <!--
        CONFERENCE DESCRIPTION TYPE
      -->
      <xs:complexType name="conference-description-type">
         <xs:sequence>
           <xs:element name="display-text" type="xs:string" minOccurs="0"/>
           <xs:element name="subject" type="xs:string" minOccurs="0"/>
           <xs:element name="free-text" type="xs:string" minOccurs="0"/>
           <xs:element name="keywords" type="info:keywords-type" minOccurs="0"/>
           <xs:element name="webpage" type="xs:anyURI" minOccurs="0"/>
           <xs:element name="security-level" type="SecurityLevel" minOccurs="0"/>
           <xs:element name="allow-sidebars" type="xs:boolean" default="true" minOccurs="0"/>
           <xs:element name="conference-stage" type="conference-stage-type"/>
           <xs:element name="conference-time" type="conferencetime-type" minOccurs="0"/>
           <xs:element name="conf-uris" type="uris-type" minOccurs="0"/>
           <xs:element name="service-uris" type="uris-type" minOccurs="0"/>
           <xs:element name="maximum-user-count" type="maximum-user-count-type" minOccurs="0"/>
           <xs:element name="available-media" type="conference-media-type"/>
           <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
         </xs:sequence>
         <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:complexType>
      <!--
        SECURITY LEVEL
      -->
      <xs:simpleType name="SecurityLevel">
         <xs:restriction base="xs:string">
           <xs:enumeration value="none"/>
           <xs:enumeration value="low"/>
           <xs:enumeration value="medium"/>
           <xs:enumeration value="high"/>
         </xs:restriction>
      </xs:simpleType>
      <!--
        CONFERENCE STAGE
      -->
      <xs:simpleType name="conference-stage-type">
         <xs:restriction base="xs:string">
           <xs:enumeration value="reserved"/>
           <xs:enumeration value="started"/>
           <xs:enumeration value="running"/>
           <xs:enumeration value="ended"/>
         </xs:restriction>
      </xs:simpleType>
      <!--
        CONFERENCE TIME
      -->
      <xs:complexType name="conferencetime-type">
         <xs:sequence>
           <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
             <xs:complexType>
                <xs:sequence>
                   <xs:element name="base" type="xs:string"/>
                   <xs:element name="mixing-start-offset" type="xs:integer" minOccurs="0"/>
                   <xs:element name="mixing-stop-offset" type="xs:integer" minOccurs="0"/>
                   <xs:element name="can-join-after-offset" type="xs:integer" minOccurs="0"/>
                   <xs:element name="must-join-before-offset" type="xs:integer" minOccurs="0"/>
                   <xs:element name="request-users" type="xs:integer" minOccurs="0"/>
                   <xs:element name="notify-end-of-conference" type="xs:integer" minOccurs="0"/>
                   <xs:element name="allowed-extend-mixing-end-offset" type="xs:boolean" default="true" minOccurs="0"/>
                   <xs:any namespace="##other" processContents="lax" minOccurs="0"/>
                </xs:sequence>
             </xs:complexType>
           </xs:element>
         </xs:sequence>
        </xs:complexType>
        <!--
         URIS TYPE
        -->
        <xs:complexType name="uris-type">
           <xs:sequence>
              <xs:element name="SIP" type="uri-type" maxOccurs="unbounded"/>
              <xs:element name="H323" type="H323-type" maxOccurs="unbounded"/>
              <xs:element name="PSTN-ISDN" type="PSTN-type" maxOccurs="unbounded"/>
              <xs:element name="BFCP" type="BFCP-type" maxOccurs="unbounded"/>
           </xs:sequence>
        </xs:complexType>
        <!--
          SIP TYPE
        -->
        <xs:complexType name="uri-type">
           <xs:sequence>
              <xs:element name="uri" type="xs:anyURI"/>
              <xs:element name="display-text" type="xs:string" minOccurs="0"/>
              <xs:element name="purpose" type="xs:string" minOccurs="0"/>
              <xs:element name="PIN-code" type="xs:integer" minOccurs="0"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
          H323 TYPE
        -->
        <xs:complexType name="H323-type">
           <xs:sequence>
              <xs:element name="H.323-alias" type="xs:string" minOccurs="0"/>
              <xs:element name="H.323-URI" type="xs:anyURI"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           PSTN TYPE
        -->
        <xs:complexType name="PSTN-type">
           <xs:sequence>
              <xs:element name="phone-number" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="rate" type="xs:unsignedInt" minOccurs="0"/>
           </xs:sequence>
           <xs:attribute name="PIN-code" type="xs:string" use="required"/>
           <xs:attribute name="purpose" type="xs:string"/>
        </xs:complexType>
        <!--
           BFCP TYPE
        -->
        <xs:complexType name="BFCP-type">
           <xs:sequence>
              <xs:element name="conference-id" type="xs:unsignedInt" minOccurs="0"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           MAXIMUM USER TYPE
        -->
        <xs:complexType name="maximum-user-count-type">
           <xs:sequence>
              <xs:element name="entry" type="xs:unsignedInt" minOccurs="0"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="role" type="role:role-type" use="required"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           CONFERENCE MEDIA TYPE
        -->
        <xs:complexType name="conference-media-type">
           <xs:sequence>
              <xs:element name="entry" type="conference-medium-type" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="label" type="xs:string" use="required"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           CONFERENCE MEDIUM TYPE
        -->
        <xs:complexType name="conference-medium-type">
           <xs:sequence>
              <xs:element name="type" type="xs:string"/>
              <xs:element name="display-text" type="xs:string" minOccurs="0"/>
              <xs:element name="status" type="info:media-status-type" minOccurs="0"/>
              <xs:element name="mixing-mode" type="mix-mode-type" minOccurs="0"/>
              <xs:element name="mix level" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="codecs" type="codecs-type" minOccurs="0"/>
           <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="label" type="xs:string" use="required"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           MIX MODE TYPE
        -->
        <xs:simpleType name="mix-mode-type">
           <xs:restriction base="xs:string">
              <xs:enumeration value="Moderator-controlled"/>
              <xs:enumeration value="FCFS"/>
              <xs:enumeration value="Automatic"/>
           </xs:restriction>
        </xs:simpleType>
        <!--
           CODECS TYPE
        -->
        <xs:complexType name="codecs-type">
           <xs:sequence>
              <xs:element name="entry" type="codec-type" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="decision" type="decision-type" use="required"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           CODEC TYPE
        -->
        <xs:complexType name="codec-type">
           <xs:attribute name="name" type="xs:string" use="required"/>
           <xs:attribute name="policy" type="policy-type" use="required"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           DECISION TYPE
        -->
        <xs:simpleType name="decision-type">
           <xs:restriction base="xs:string">
              <xs:enumeration value="Automatic"/>
              <xs:enumeration value="Moderator-controlled"/>
           </xs:restriction>
        </xs:simpleType>
        <!--
           POLICY TYPE
        -->
        <xs:simpleType name="policy-type">
           <xs:restriction base="xs:string">
              <xs:enumeration value="Allowed"/>
              <xs:enumeration value="Disallowed"/>
           </xs:restriction>
        </xs:simpleType>
        <!--
           HOST TYPE
        -->
        <xs:complexType name="host-type">
           <xs:sequence>
              <xs:element name="display-text" type="xs:string" minOccurs="0"/>
              <xs:element name="web-page" type="xs:anyURI" minOccurs="0"/>
              <xs:element name="uris" type="uris-type" minOccurs="0"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
         </xs:complexType>
        <!--
           CONFERENCE STATE TYPE
        -->
        <xs:complexType name="conference-state-type">
           <xs:sequence>
              <xs:element name="allow-conference-state" type="xs:boolean" minOccurs="0"/>
              <xs:element name="user-count" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="active" type="xs:boolean" minOccurs="0"/>
              <xs:element name="locked" type="xs:boolean" minOccurs="0"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           SECURITY MECHANISMS TYPE
        -->
        <xs:complexType name="security-mechanisms-type">
           <xs:sequence>
               <xs:element name="entry-protocol" type="security-mechanism-type" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           SECURITY MECHANISM TYPE
        -->
        <xs:complexType name="security-mechanism-type">
           <xs:sequence>
           <xs:element name="methods" type="methods-type" minOccurs="0"/>
              <xs:element name="option-tags" type="option-tags-type" minOccurs="0"/>
              <xs:element name="feature-tags" type="feature-tags-type" minOccurs="0"/>
              <xs:element name="bodies" type="bodies-type" minOccurs="0"/>
              <xs:element name="version" type="xs:unsignedInt" minOccurs="0"/>
              <xs:element name="supported" type="xs:boolean" minOccurs="0"/>
           <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="name" type="xs:string" use="required"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
         </xs:complexType>
        <!--
           METHODS TYPE
        -->
        <xs:complexType name="methods-type">
           <xs:sequence>
              <xs:element name="method" type="codec-type" minOccurs="0"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="default-policy" type="policy-type" use="required"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           OPTION TAGS TYPE
        -->
        <xs:complexType name="option-tags-type">
           <xs:sequence>
              <xs:element name="option-tag" type="codec-type" minOccurs="0"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="default-policy" type="default-policy-type" use="required"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           DEFAULT POLICY TYPE
        -->
        <xs:simpleType name="default-policy-type">
           <xs:restriction base="xs:string">
              <xs:enumeration value="Allowed"/>
              <xs:enumeration value="Disallowed"/>
              <xs:enumeration value="Mandatory"/>
           </xs:restriction>
        </xs:simpleType>
        <!--
           FEATURE TAGS TYPE
        -->
        <xs:complexType name="feature-tags-type">
           <xs:sequence>
              <xs:element name="feature-tag" type="codec-type" minOccurs="0"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="default-policy" type="policy-type" use="required"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           BODIES TYPE
        -->
        <xs:complexType name="bodies-type">
           <xs:sequence>
              <xs:element name="body-disposition" type="body-type" minOccurs="0"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="default-policy" type="policy-type" use="required"/>
           <xs:attribute name="default-encryption" type="policy-type" use="required"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           BODY TYPE
        -->
        <xs:complexType name="body-type">
           <xs:sequence>
              <xs:element name="body-format" type="codec-type" minOccurs="0"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="name" type="xs:string" use="required"/>
           <xs:attribute name="policy" type="policy-type" use="required"/>
           <xs:attribute name="default-policy" type="policy-type" use="required"/>
           <xs:attribute name="encryption" type="policy-type" use="required"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           FLOOR INFORMATION TYPE
        -->
        <xs:complexType name="floor-information-type">
           <xs:sequence>
              <xs:element name="allow-floor-events" type="xs:boolean" maxOccurs="unbounded"/>
              <xs:element name="floor-request-handling" type="floor-request-type" maxOccurs="unbounded"/>
              <xs:element name="conference-floor-policy" type="Conference-floor-policy" maxOccurs="unbounded"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           FLOOR REQUEST TYPE
        -->
        <xs:simpleType name="floor-request-type">
           <xs:restriction base="xs:string">
              <xs:enumeration value="block"/>
              <xs:enumeration value="confirm"/>
           </xs:restriction>
        </xs:simpleType>
        <!--
           CONFERENCE FLOOR POLICY
        -->
        <xs:complexType name="Conference-floor-policy">
           <xs:sequence>
              <xs:element name="Floor" maxOccurs="unbounded">
                 <xs:complexType>
                    <xs:sequence>
                       <xs:element name="Media-types">
                          <xs:complexType>
                             <xs:sequence>
                                <xs:element name="Video" minOccurs="0"/>
                                <xs:element name="Audio" minOccurs="0"/>
                                <xs:element name="Application" minOccurs="0"/>
                                <xs:element name="Data" minOccurs="0"/>
                                <xs:element name="Control" minOccurs="0"/>
                                <xs:element name="Message" minOccurs="0"/>
                                <xs:element name="Text" minOccurs="0"/>
                                <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
                             </xs:sequence>
                          </xs:complexType>
                       </xs:element>
                    <xs:element name="Algorithm">
                       <xs:complexType>
                          <xs:sequence>
                             <xs:element name="Moderator-controlled" minOccurs="0"/>
                             <xs:element name="FCFS" minOccurs="0"/>
                             <xs:element name="Random" minOccurs="0"/>
                             <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
                          </xs:sequence>
                       </xs:complexType>
                    </xs:element>
                    <xs:element name="Max-floor-users" type="xs:nonNegativeInteger" minOccurs="0"/>
                    <xs:element name="Moderator-URI" type="xs:anyURI" minOccurs="0"/>
                 </xs:sequence>
                 <xs:attribute name="moderator-controlled" type="xs:boolean" default="false"/>
                 <xs:attribute name="label" type="xs:string" use="required"/>
                 </xs:complexType>
              </xs:element>
           </xs:sequence>
        </xs:complexType>
        <!--
           USERS TYPE
        -->
        <xs:complexType name="users-type">
           <xs:sequence>
              <xs:element name="join-handling" type="join-handling-type" minOccurs="0"/>
              <xs:element name="user-admission-policy" type="user-admission-policy-type"/>
              <xs:element name="user-must-be-specified" type="xs:boolean" minOccurs="0"/>
              <xs:element name="allowed-users-list" type="UserList" minOccurs="0"/>
              <xs:element name="privileges-control-list" type="privileges-control-list-type" minOccurs="0"/>
              <xs:element name="user" type="user-type" minOccurs="0"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           USERS ADMISSION POLICY
        -->
        <xs:simpleType name="user-admission-policy-type">
           <xs:restriction base="xs:string">
              <xs:enumeration value="closedAuthenticated"/>
              <xs:enumeration value="openAuthenticated"/>
              <xs:enumeration value="anonymous"/>
           </xs:restriction>
        </xs:simpleType>
        <!--
           JOIN HANDLING TYPE
        -->
        <xs:simpleType name="join-handling-type">
           <xs:restriction base="xs:string">
              <xs:enumeration value="block"/>
              <xs:enumeration value="allow"/>
              <xs:enumeration value="confirm"/>
              <xs:enumeration value="IVR"/>
              <xs:enumeration value="directed-operator"/>
           </xs:restriction>
         </xs:simpleType>
         <!--
           USERLIST
         -->
         <xs:complexType name="UserList">
           <xs:sequence>
              <xs:element name="target" type="Target" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
         </xs:complexType>
         <!--
           TARGET
         -->
          <xs:complexType name="Target">
           <xs:complexContent>
              <xs:restriction base="xs:anyType">
                 <xs:sequence>
                     <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
                 </xs:sequence>
                 <xs:attribute name="uri" type="xs:anyURI" use="required"/>
                 <xs:attribute name="method" type="xs:methodType" use="required"/>
               </xs:restriction>
           </xs:complexContent>
         </xs:complexType>
        <!--
           METHOD TYPE
        -->
        <xs:complexType name="methodType">
           <xs:complexContent>
              <xs:restriction base="xs:anyType">
                 <xs:choice minOccurs="0">
                    <xs:element name="dial-in" type="xs:string"/>
                    <xs:element name="dial-out" type="xs:string"/>
                    <xs:element name="refer" type="xs:string"/>
                    <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
                 </xs:choice>
              </xs:restriction>
           </xs:complexContent>
        </xs:complexType>
         <!--
          PRIVILEGES CONTROL LIST TYPE
         -->
         <xs:complexType name="privileges-control-list-type">
           <xs:sequence>
              <xs:element name="data-access-rights" type="data-access-rights-type" maxOccurs="unbounded"/>
              <xs:element name="conference-rules" type="conference-rules-type" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
         </xs:complexType>
         <!--
           DATA ACCESS RIGHTS TYPE
         -->
         <xs:complexType name="data-access-rights-type">
           <xs:sequence>
              <xs:element name="entry" type="entry-rights-type" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
         </xs:complexType>
        <!--
           ENTRY RIGHTS TYPE
        -->
        <xs:complexType name="entry-rights-type">
           <xs:attribute name="name" type="xs:string" use="required"/>
           <xs:attribute name="read-only" type="role:role-type" use="required"/>
           <xs:attribute name="read-write" type="role:role-type" use="required"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           CONFERENCE RULES TYPE
        -->
        <xs:complexType name="conference-rules-type">
           <xs:sequence>
              <xs:element name="entry" type="conference-rule-type" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="id" type="xs:string" use="required"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           CONFERENCE RULE TYPE
        -->
        <xs:complexType name="conference-rule-type">
           <xs:sequence>
              <xs:element name="condition" type="condition-type" maxOccurs="unbounded"/>
              <xs:element name="action" type="action-type" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           CONDITION TYPE
        -->
        <xs:complexType name="condition-type">
           <xs:sequence>
              <xs:element name="identity" type="identity-type"/>
              <xs:element name="validity" type="compol:validityType"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           IDENTITY TYPE
        -->
        <xs:complexType name="identity-type">
           <xs:sequence>
              <xs:element name="identity" type="identityType" maxOccurs="unbounded"/>
              <xs:element name="validity" type="compol:validityType" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           ROLES IDENTITY TYPE
        -->
        <xs:complexType name="identityType">
           <xs:complexContent>
              <xs:restriction base="xs:anyType">
                 <xs:choice minOccurs="0">
                    <xs:element name="one" type="compol:oneType"/>
                    <xs:element name="many" type="compol:manyType"/>
                    <xs:element name="external-list" type="xs:string"/>
                    <xs:element name="pseudonymous" type="xs:string"/>
                    <xs:element name="has-been-referred" type="xs:string"/>
                    <xs:element name="has-been-invited" type="xs:string"/>
                    <xs:element name="has-been-in-conference" type="xs:string"/>
                    <xs:element name="is-in-conference" type="xs:string"/>
                    <xs:element name="administrator" type="xs:string"/>
                    <xs:element name="is-on-allowed-users-list-dial-out" type="xs:string"/>
                    <xs:element name="is-on-allowed-users-list-refer" type="xs:string"/>
                    <xs:element name="participant-passcode" type="xs:string"/>
                    <xs:element name="administrator-passcode" type="xs:string"/>
                    <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
                 </xs:choice>
              </xs:restriction>
           </xs:complexContent>
        </xs:complexType>
        <!--
           ACTION TYPE
        -->
        <xs:complexType name="action-type">
           <xs:complexContent>
              <xs:restriction base="xs:anyType">
                 <xs:choice minOccurs="0" maxOccurs="unbounded">
                   <xs:element name="allow-refer-users-dynamically" type="xs:boolean"/>
                   <xs:element name="allow-invite-users-dynamically" type="xs:boolean"/>
                   <xs:element name="allow-remove-users-dynamically" type="xs:boolean"/>
                   <xs:element name="show-floor-holder" type="floor-request-type"/>
                   <xs:element name="show-floor-request" type="xs:boolean"/>
                   <xs:element name="provide-anonymity" type="xs:boolean"/>
                   <xs:element name="read-only" type="role:role-type"/>
                   <xs:element name="read-write" type="role:role-type"/>
                 </xs:choice>
              </xs:restriction>
           </xs:complexContent>
         </xs:complexType>
        <!--
           USER TYPE
        -->
        <xs:complexType name="user-type">
           <xs:sequence>
              <xs:element name="user" type="one-user-type" minOccurs="0" maxOccurs="unbounded"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="state" type="info:state-type" use="optional" default="full"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           ONE USER TYPE
        -->
        <xs:complexType name="one-user-type">
           <xs:sequence>
              <xs:element name="display-text" type="xs:string" minOccurs="0"/>
              <xs:element name="associated-aors" type="info:uris-type" minOccurs="0"/>
              <xs:element name="provide-anonymity" type="xs:boolean" minOccurs="0"/>
              <xs:element name="roles" type="role:role-type" minOccurs="0"/>
              <xs:element name="languages" type="info:user-languages-type" minOccurs="0"/>
              <xs:element name="cascaded-focus" type="xs:anyURI" minOccurs="0"/>
              <xs:element name="sphere" type="compol:sphereType" minOccurs="0"/>
              <xs:element name="allow-refer-users-dynamically" type="xs:boolean"/>
              <xs:element name="allow-invite-users-dynamically" type="xs:boolean"/>
              <xs:element name="allow-remove-users-dynamically" type="xs:boolean"/>
              <xs:element name="floors" type="show-floors-type"/>
              <xs:element name="endpoint" type="info:endpoint-type" minOccurs="0" maxOccurs="unbounded"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="entity" type="xs:anyURI"/>
           <xs:attribute name="state" type="info:state-type" use="optional" default="full"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           SHOW FLOORS TYPE
        -->
        <xs:complexType name="show-floors-type">
           <xs:sequence>
              <xs:element name="entry" type="show-floor-type" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           SHOW FLOOR TYPE
        -->
        <xs:complexType name="show-floor-type">
           <xs:sequence>
              <xs:element name="show-floor-holder" type="xs:boolean" minOccurs="0"/>
              <xs:element name="show-floor-request" type="xs:boolean"/>
              <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:attribute name="id" type="xs:string" use="required"/>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           SIDEBARS-BY-REF TYPE
        -->
        <xs:complexType name="sidebars-by-ref-type">
           <xs:sequence>
              <xs:element name="entry" type="info:uri-type" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
        <!--
           SIDEBARS-BY-VAL TYPE
        -->
        <xs:complexType name="sidebars-by-val-type">
           <xs:sequence>
              <xs:element name="entry" type="conference-type" minOccurs="0" maxOccurs="unbounded"/>
           </xs:sequence>
           <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
namespace="##other"> construct.

xmlns="urn:ietf:params:xml:ns:common-conference-schema"
entity="sips:conference@example.com">
default-encryption="allowed">
           <sesspol:body-disposition name="session" policy="allowed" \\
encryption="disallowed" default-policy="disallowed">
            <sesspol:body-format name="application/sdp" \\
policy="allowed"/>
          </sesspol:body-disposition>
          </sesspol:bodies>
        </entry-protocol>
      </security-mechanism>
      <!--
        FLOOR INFORMATION
      -->
      <floor-information>
      <allow-floor-events>true</allow-floor-events>
      <floor-request-handling>1 </floor-request-handling>
      <conference-floor-policy>
       <floor moderator-controlled="true" label="10234">
        <media-types>audio</media-types>
        <algorithm>Moderator-controlled</algorithm>
        <max-floor-users>1</max-floor-users>
        <moderator-uri>sip:alice@example.com \\
read-write= "creator"/>
          <conference-time read-only= "administrator"/>
          <maximum-user-count read-write= "creator"/>
          <codecs read-only= "creator" read-write= "creator"/>
          <host-info read-write= "creator"/>
          <conference-state read-write= "creator"/>
          <security-mechanism read-only= "creator"/>
          <floor-information read-only= "administrator"/>
          <allowed-users-list read-only= "administrator"/>
          <privileges-control-list read-only= "creator"/>
          <conditions read-only= "creator"/>
          <validity read-only= "creator"/>
          <allow-conference-state read-only= "observer"/>
          <sidebars-by-ref read-only= "observer"\\
read-write= "creator"/>
          <sidebars-by-val read-only= "observer"\\
read-write= "creator"/>
         </data-access-rights>
         <conference-rules>
          <entry id="1">
           <conditions>
            <compol:identity>
             <compol:domain>example.com</compol:domain>
            </compol:identity>
            <compol:validity>
             <compol:from>20061017T143000Z</compol:from>
             <compol:to>20061017T163000Z</compol:to>
            </compol:validity>
           </conditions>
           <compol:actions>
            <compol:allow-conference-state>true\\
