



Network Working Group                                       I. Learmonth
Internet-Draft                                                    HamBSD
Obsoletes: 1226 (if approved)                               May 18, 2020
Intended status: Experimental
Expires: November 19, 2020


            Internet Protocol Encapsulation of AX.25 Frames
                     draft-learmonth-rfc1226-bis-00

Abstract

   This document describes a method for the encapsulation of AX.25 Link
   Access Protocol for Amateur Packet Radio frames within IP version 4
   and version 6 packets.  Obsoletes RFC1226.

Note

   Comments are solicited and should be addressed to the author(s).

   The sources for this draft are at:

   https://github.com/irl/draft-rfc1226-bis

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on November 19, 2020.

Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents



Learmonth               Expires November 19, 2020               [Page 1]

Internet-Draft                AX.25 over IP                     May 2020


   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.

1.  Introduction

   This document describes a method for the encapsulation of AX.25 (the
   AX.25 Link Access Protocol for Amateur Packet Radio [AX.25]) frames
   within IP version 4 and version 6 packets.  It obsoletes [RFC1226].

   This document explicitly states that it applies both to Internet
   Protocol version 4 and version 6 and now mentions negotiation of
   larger frame sizes possible in AX.25 version 2.2.  Additionally, it
   gives recommendations for DiffServ codepoint marking of the
   encapsulating headers based on the AX.25 frame content and provides
   security considerations for the use of this encapsulation method.

2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

3.  Internet Protocol Encapsulation

   Each AX.25 frame is encapsulated in one IP version 4 or version 6
   datagram.  For AX.25 version 2.0, the maximum frame size expected is
   330 bytes and implementations MUST be prepared to handle frames of
   this size.  Higher frame sizes can be negotiated by AX.25 version 2.2
   and so this is a minimum requirement and not a limit.

   HDLC framing elements (flags and zero-stuffing) are omitted, as the
   IP datagram adequately delimits the beginning and end of each AX.25
   frame.  The CRC-16-CCITT frame check sequence (normally generated by
   the HDLC transmission hardware) is included trailing the information
   field.  In all other respects, AX.25 frames are encapsulated
   unaltered.

3.1.  Priority Frames

   In normal operation, the DiffServ codepoint field [RFC2474] in the
   encapsulating IP header SHOULD be set to best effort (BE).  The
   exception to this is "priority frames" as specified for AX.25 version
   2.2, including acknowledgement and digipeat frames, which SHOULD have
   the DiffServ codepoint set to AF21 [RFC2597].  A slot is reserved on
   the radio channel for the transmission of these frames and the use of




Learmonth               Expires November 19, 2020               [Page 2]

Internet-Draft                AX.25 over IP                     May 2020


   this codepoint will permit the frames to arrive promptly at the
   station for transmission.

   For the avoidance of doubt: on decapsulation the AX.25 frame MUST NOT
   be modified regardless of the DiffServ codepoint on the received
   encapsulating IP header.

3.2.  Automatic Packet Reporting System

   As a special case, when used with the Automatic Packet Reporting
   System [APRS], priority frames will not occur.  If a tunnel is
   configured as carrying APRS data, the DiffServ codepoint SHOULD by
   default be set to AF11 [RFC2597].  Where the "Precedence Bit"
   [RR-bits] is set (i.e. it is zero) in an APRS packet, the DiffServ
   codepoint should be set to BE.  Where the "Operator Present Bit"
   [RR-bits] is set (i.e. it is zero), the DiffServ codepoint MAY be set
   to AF21 [RFC2597].

   Again, for the avoidance of doubt: on decapsulation the AX.25 frame
   MUST NOT be modified regardless of the DiffServ codepoint on the
   received encapsulating IP header.

4.  IANA Considerations

   Protocol number 93 is assigned in [protocol-numbers] and should be
   updated to point to this document.

5.  Security Considerations

   XXX Left the hard part for last, but the basics of it:

      You should use something to guarantee integrity

      My advice is to use IPsec

      Use ESP on the Internet, use AH on amateur radio links

      Use AH if possibility that packet will go via amateur radio

      Tunnels will be configured statically (can't think of other use
      cases) so certificates are good

      Routing via IPsec is not required, transport mode suffices, tunnel
      mode for cases where there is NAT







Learmonth               Expires November 19, 2020               [Page 3]

Internet-Draft                AX.25 over IP                     May 2020


6.  Acknowledgements

   The author would like to acknowledge the work of Brian Kantor who
   authored the original specification [RFC1226] that this document
   updates.

7.  References

7.1.  Normative References

   [AX.25]    Tucson Amateur Packet Radio Corporation, "AX.25 Link
              Access Protocol for Amateur Packet Radio Version 2.2",
              July 1998, <https://www.tapr.org/pdf/AX25.2.2.pdf>.

   [protocol-numbers]
              IANA, "Assigned Internet Protocol Numbers",
              <http://www.iana.org/assignments/protocol-numbers/
              protocol-numbers.xhtml>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC2474]  Nichols, K., Blake, S., Baker, F., and D. Black,
              "Definition of the Differentiated Services Field (DS
              Field) in the IPv4 and IPv6 Headers", RFC 2474,
              DOI 10.17487/RFC2474, December 1998,
              <https://www.rfc-editor.org/info/rfc2474>.

   [RFC2597]  Heinanen, J., Baker, F., Weiss, W., and J. Wroclawski,
              "Assured Forwarding PHB Group", RFC 2597,
              DOI 10.17487/RFC2597, June 1999,
              <https://www.rfc-editor.org/info/rfc2597>.

   [RR-bits]  Bruninga, B., "APRS Future Use of AX.25 SSID RR Bits",
              December 2012, <http://aprs.org/aprs12/RR-bits.txt>.

7.2.  Informative References

   [APRS]     Wade, I., Ed., "APRS Protocol Reference", August 2000,
              <http://www.aprs.org/doc/APRS101.PDF>.

   [RFC1226]  Kantor, B., "Internet protocol encapsulation of AX.25
              frames", RFC 1226, DOI 10.17487/RFC1226, May 1991,
              <https://www.rfc-editor.org/info/rfc1226>.





Learmonth               Expires November 19, 2020               [Page 4]

Internet-Draft                AX.25 over IP                     May 2020


Author's Address

   Iain R. Learmonth
   HamBSD

   Email: irl@hambsd.org













































Learmonth               Expires November 19, 2020               [Page 5]
