skicalparameters  =

           / item             ; specifies a specific aspect or resource
                              ; as the subject of a property
           / nsref            ; points to a NAMESPACE property declaration
                              ; containing the URI of a list of values

           / opref            ; points to an OPTIMESET qualifying
                              ; the subject of a property

           / skirole          ; qualifies the role of the subject
                              ; of a property


itemparam  = (
                    ( "ITEM" "=" ) / ( "PRXITEM" "=" prefix ":" ) text
                    )

prefix     = 1*( ) ; one or more characters xxx matching the declared
                            prefix of a NAMESPACE property value

nsrefparam  =  NSREF "=" prefix

prefix      = 1*( ) ;  one or more letters matching the declared
                          ;  prefix of a NAMESPACE property value

oprefparam  =   OPREF "=" id

id      = 1*( )     ;  one or more characters matching the declared

                          ;  id of an OPTIMESET property value

Skiroleparam  = (
                      (( "SKIROLE" "="  ) /
                       ( "PRXSKIROLE" "=" prefix ":" ))
                      DQUOTE text DQUOTE )

                     ; It is RECOMMENDED that the text value be
                     ; chosen from a list, as described
                     ; in this memo. Some examples of such lists are
                     ; given here:


                     ; as used with the PERSONS property

sampleskirolelist1 = (  "PERFORMER"      /     "HOST"          /
                              "COMPOSER"       /     "CONDUCTOR"     /
                              "SALES MANAGER"  /     "SPECIALIST"    /
                              "EDITOR"         /     "PRODUCER"      /
                              "GUIDE"          /     "SPEAKER"       /
                              "CHAIR"          /     "PRESENT"       /
                              "REFERENCED"     /     "INVITED"       )

                     ; as used with the THINGS property

sampleskirolelist2 = (   "PRESENT"       /     "EXHIBITED"     /
                               "FOR-SALE"      /     "FOR-AUCTION"   /
                               "FOR-HIRE"      /     "APPRAISED"     /
                               "PREMIERED"     /     "DEMONSTRATED"  )

                     ; as used with the THINKS property

sampleskirolelist3 = (   "STUDIED"       /     "REFERENCED"    /
                               "SUPPORTED"     /     "DEBATED"       /
                               "CRITICIZED"    )

                               )

OPTIMESET         =  "<OPTIME"  OPTIMESETattlist ">"
                            OPTIMESETcontents "</OPTIMESET>"

OPTIMESETattlist  =  OPTIMESETid

OPTIMESETid       =  "ID="    idvalue
idvalue           =  text


OPTIMESETcontents    =  1*( "OPTERM" / "OPSEASONS" / "OPDAYS" /
                            "OPHOURS" / "OPMINUTES" / "OPSECONDS" )



opterm         =  "<OPTERM"  optermattlist ">"
                          optermcontents "</OPTERM>"

optermattlist  =   range [id] [idref] state  rangevaluetype

range          =  "range=" DQUOTE optermvalue
                         *[ "," optermvalue ] DQUOTE
id             =  "ID="    idvalue
idref          =  "IDREF=" idrefvalue
state          =  "state=" ("NOT-OPEN" / "OPEN" / "UNDETERMINED")
rangevaluetype =  "rangevaluetype=" ("Gregorian" / "JDN" / "MJD" / "TP")

optermvalue       =   optermper_explvalue  / optermdur_explvalue

optermper_explvalue  =    (

                              (date / date-time) "/" ["/"]
                              ((date / date-time) / term-text ) /

                              jdn  "/" ["/"]
                              ( jdn / term-text ) /

                              mjd  "/" ["/"]
                              ( mjd / term-text ) /

                              tp  "/" ["/"]
                              ( tp / term-text )
                              )

date-time      =   date "T" time
date           =   date-value

date-value     =   date-fullyear date-month date-mday
date-fullyear  =   4DIGIT
date-month     =   2DIGIT    ; 01- 12
date-mday      =   2DIGIT    ; O1-28, 01-29, 01-30, 01-31

time           =   time-hour time-minute time-second [time-utc]

time-hour      = 2DIGIT        ;00-23
time-minute    = 2DIGIT        ;00-59
time-second    = 2DIGIT        ;00-60 [time-fraction]
                                      ; The "60" value is used to
                                      ; account for "leap" seconds.
time-fraction  = 1*DIGIT
                                      ; as many digits as desired may
                                      ; may be used.
time-utc       = ( "Z" ) / (( "+" / "-") time-hour
                        [ ":" time-minute] ))
term-text      =     "THISANDFUTURE" / "THISANDPRIOR" / "POINT"

jdn   =        float
                      ; a number of days and fractions of days
                      ; Julian Day Number JDN 0.0
                        corresponds to 12h (noon) on the first
                        day of the Julian Era, 1 January 4713 BC.

mjd   =        float
                      ; Modified Julian Date. The last five digits of
                      ; the Julian Date (jdn - 2,400,000.5)

tp   =         float
                      ; Network Time Protocol representing the number
                      ; of standard seconds since 19000101T000000
                      ;(MJD 15,020.0).

optermdur_explvalue =   (date / date-time) "/" rangeperiod
rangeperiod         = (["+"] / "-") "P"
                          (dur-week / dur-day / dur-time )

dur-week   = 1*DIGIT "W"
dur-day    = 1*DIGIT "D"
dur-time   = "T" (dur-hour / dur-minute / dur-second)
dur-hour   = 1*DIGIT "H" [dur-minute]
dur-minute = 1*DIGIT "M" [dur-second]
dur-second = 1*DIGIT "S"



optermcontents =  *( "OPSEASONS" / "OPDAYS" / "OPHOURS" / "OPMINUTES" / "OPSECONDS" )


opseasons  =  "<OPSEASONS"  opseasonsattlist ">"
                     opseasonscontents "</OPSEASONS>"

opseasonsattlist  =   range [id] [idref] state [cycle]

range      =    "range=" DQUOTE opseasonsvalue
                      *[ "," opseasonsvalue ] DQUOTE
id         =    "ID=" idvalue
idref      =    "IDREF=" idrefvalue
state      =    "state=" ("NOT-OPEN" / "OPEN" / "UNDETERMINED")
cycle      =    "cycle="  cycleperiod

opseasonsvalue =  opseasonsper_explvalue  / opseasonsdur_explvalue

opseasonsper_explvalue  = impliedyeardate  "/" ["/"]
                            ( impliedyeardate / seasons-text )

opseasondur_explvalue   = impliedyeardate "/"
                            rangeperiod

impliedyeardate         = date-month  date-mday [ "T" time ]

seasons-text           =

date-month             =   2DIGIT    ; 01- 12
date-mday              =   2DIGIT    ; O1-28, 01-29, 01-30, 01-31

cycleperiod   = "P" (dur-year / dur-month / dur-week /
                   dur-day / dur-time )

dur-year   = 1*DIGIT "Y"
dur-month  = 1*DIGIT "M"

opseasonscontents =  *( "OPDAYS" / "OPHOURS" / "OPMINUTES" / "OPSECONDS" )



opdays      =  "<OPDAYS"  opdaysattlist ">"
                     opdayscontents "</OPDAYS>"

opdaysattlist  =   range [id] [idref] [cycle] state rangevaluetype

range      =    "range=" opdaysvalue
id         =    "ID=" idvalue
idref      =    "IDREF=" idrefvalue
cycle      =    "cycle="  cycleperiod
state      =    "state=" ("NOT-OPEN" / "OPEN" / "UNDETERMINED")
rangevaluetype    =    "daytype=" ("WEEK" / "MONTH" / "YEAR" /
                             "NUMBERED" / "NAMED" )

opdaysvalue   =   ( opwkdayvalue / opmodayvalue / opyrdayvalue )

opwkdayvalue  =   DQUOTE ( ordweekday / weekdayperiod )
                     *[ "," ( ordweekday / weekdayperiod ) ] DQUOTE

opmodayvalue  =   DQUOTE ( ordmoday  / modayperiod )
                     *[ "," ( ordmoday / modayperiod ) ] DQUOTE
opyrdayvalue  =   DQUOTE ( ordyrday  / ordyrdayperiod  )
                     *[ "," ( yrday / yrdayperiod ) ] DQUOTE

ordweekday    =   [(["+"] ordwk / "-" ordwk)] weekday

ordwk         =   1DIGIT               ;1 to 5

weekday       =   "SU" / "MO" / "TU" / "WE" / "TH" / "FR" / "SA"
        ;Corresponding to SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY,
        ;FRIDAY, and SATURDAY days of the week.

ordmoday      =  ["-" ordmo] moday

ordmo         =  2DIGIT               ;01 to 31
moday         =  2DIGIT               ;01 to 31

ordyrday      =  ["-" ordyr] yrday

ordyr         =  3DIGIT               ;01 to 366
yrday         =  3DIGIT               ;01 to 366


weekdayperiod = weekdayperexplicit / weekdaydurexplicit

weekdayperexplicet = ordweekday "/" ["/"] ordweekday
           ; weekdayperexplicet can be used to define an interval of ordinal days
           ; of the week such as "MO/SA" - from Monday until Saturday

weekdaydurexplicet = ordweekday "/" ["/"] rangeperiod

modayperiod = modayperexplicit / modaydurexplicit

modayperexplicet = ordmoday "/" ["/"] ordmoday
modaydurexplicet = ordmoday "/" ["/"] rangeperiod

yrdayperiod = yrdayperexplicit / yrdaydurexplicit
yrdayperexplicet = ordyrday "/" ["/"] ordyrday

           ; yrdayperiod can be used to define an interval of ordinal days
           ; of the year such as "055/095" - from the 55th
           ; to the 95th day of the year

opdayscontents =  *( "OPHOURS" / "OPMINUTES" / "OPSECONDS" )



ophours      =  "<OPHOURS"  ophoursattlist ">"
                       ophourscontents "</OPHOURS>"

ophourssattlist  =   range [id] [idref] state [cycle]

range      =    "range=" ophoursvalue
id         =    "ID=" idvalue
idref      =    "IDREF=" idrefvalue
state      =    "state=" ("OPEN" / "NOT-OPEN" / "UNDETERMINED")
cycle      =    "cycle="  cycleperiod

ophoursvalue =  DQUOTE (ophourper_explvalue  /
                          ophourdur_explvalue )
                          *[ "," ( ophourper_explvalue /
                          ophourdur_explvalue ) ]
                   DQUOTE

ophourper_explvalue  = time "/" ["/"] ( time / hour-text )


ophourdur_explvalue  = time "/" ["/"] rangeperiod

ophourscontents =  *( "OPMINUTES" / "OPSECONDS" )




opminutes      =  "<OPMINUTES"  opminutesattlist ">"
                         opminutescontents "</OPMINUTES>"

opminutessattlist  =   range [id] [idref] state [cycle]

range      =    "range=" DQUOTE opminutesvalue
                      *[ "," opminutesvale]DQUOTE
id         =    "ID=" idvalue
idref      =    "IDREF=" idrefvalue
state      =    "state=" ("NOT-OPEN" / "OPEN" / "UNDETERMINED")
cycle      =    "cycle="  cycleperiod

opminutesvalue = opminutesper_explvalue  / opminutesdur_explvalue

opminutesper_explvalue  =    time "/"
                              ( time / minute-text )

opminutesdur_explvalue    =  time "/" rangeperiod

opminutesscontents =  *( "OPSECONDS" )



opseconds      =  "<OPSECONDS" opsecondsattlist ">"
                        "</OPSECONDS>"

opsecondsattlist  =   range [id] [idref] state [cycle]


range      =    "range=" DQUOTE opsecondsvalue
                      *[ "," opsecondsvalue]DQUOTE
id         =    "ID=" idvalue
idref       =    "IDREF=" idrefvalue
state       =    "state=" ("NOT-OPEN" / "OPEN" / "UNDETERMINED")
cycle      =    "cycle="  cycleperiod

opsecondsvalue = opsecondsper_explvalue  / opsecondsdur_explvalue

opsecondsper_explvalue  =    time "/"
                              ( time / seconds-text )

opsecondsdur_explvalue  =   time "/" rangeperiod
                           ; the seconds value-type has no contents

component  =  (
                      / optimec
                      )



optimec     = "BEGIN" ":" "OPTIME" CRLF
                     optimeprop *alarmc
                     "END" ":" "OPTIME" CRLF

optimeprop  = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   ; the following are properties
                   ; defined in RFC2445

                   class / created / description /  geo /
                   last-mod / location / organizer / priority /
                   dtstamp / seq / status / summary / transp /
                   uid / url / recurid /

                   ; the following are properties

                   ; defined in this memo

                   skicalver / publisher / skuid /
                   whurl


                   ; the following are optional,
                   ; and MAY occur more than once

                   ; the following are properties
                   ; defined in RFC2445

                   attach / attendee / categories / comment /
                   contact / related / resources /
                   x-prop /

                   ; the following are properties
                   ; defined in this memo

                   access / actions / bookings / control /
                   directions / dtopen /optimes /namespace /
                   orientation / partrel / paymethod /
                   persons / placename / price /

                   prohibited / promo / recommended
                   required / skicalver / skilang
                   things / thinks / title

                   )

state="OPEN" daytype="WEEK"><OPHOURS state="OPEN" range=
range="0915/1220,0110/0522"><OPDAYS range="TU,TH"
state="OPEN" daytype="WEEK"><OPHOURS state="OPEN"
range="190000/210000"/></OPDAYS></OPSEASONS></OPTERM></OPTIMESET>
state="OPEN" range="20030225/THISANDFUTURE"/>
state="OPEN" range="20030225T15300Z/20030225T16300Z"/>
eventprop  =    /  *(

                          ; the following are optional,
                          ; but MUST NOT occur more than once

                          publisher / skuid / whurl

                          ; the following are optional,
                          ; and MAY occur more than once

                          access / actions / bookings / control /
                          directions / optimes /namespace /
                          orientation / partrel / paymethod /
                          persons / placename / price /
                          prohibited / promo / recommended
                          required / skicalver / skilang
                          things / thinks / title

                         )

title       =    "TITLE" titleparam ":" text CRLF

                        ; It is RECOMMENDED, when feasible, that the
                        ; text value be chosen from a list,
                        ; as described in this memo.

titleparam  =    *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once

                        (";" languageparam ) / (";" nsrefparam ) /
                        ( oprefparam ) /

                        ; the following is optional,
                        ; and MAY occur more than once

                        (";" xparam)

                        )

persons    =       "PERSONS" personsparam ":" text CRLF

                     ; It is RECOMMENDED that the text value be
                     ; chosen from a list, as described
                     ; in this memo.

personsparam  =    *(
                          ; the following is optional,
                          ; but MUST NOT occur more than once

                        (";" languageparam ) /(";" skiroleparam ) /
                        (";" nsrefparam ) / (";" oprefparam ) /

                          ; the following is optional,
                          ; and MAY occur more than once

                          (";" xparam)

                        )

thinks       =       "THINKS" thinksparam ":" text CRLF

                           ; It is RECOMMENDED that the text value be
                           ; chosen from a list, as described in
                           ; this memo.
thinksparam  =       *(


                           ; the following is optional,
                           ; but MUST NOT occur more than once

                           (";" languageparam ) /(";" skiroleparam ) /
                           (";" nsrefparam )    /(";" oprefparam ) /

                             ; the following is optional,
                             ; and MAY occur more than once

                           (";" xparam)

                        )

things             = "THINGS" thingsparam ":" text CRLF
                       ; It is RECOMMENDED that the text value be
                        ; chosen from a list, as described in
                        ; this memo.

thingsparam      = *(


                     ; the following is optional,
                     ; but MUST NOT occur more than once


                       (";" languageparam ) / (";" skiroleparam ) /
                       (";" nsrefparam )    / (";" oprefparam ) /

                       ; the following is optional,
                       ; and MAY occur more than once


                       (";" xparam)

                     )

actions         =    "ACTIONS" actionsparam ":" text CRLF

                     ; It is RECOMMENDED that the text value be
                     ; chosen from a list, as described in
                     ; this memo.

actionsparam      = *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once


                     (";" languageparam )  / (";" nsrefparam ) /
                     (";" oprefparam ) /

                     ; the following is optional,
                     ; and MAY occur more than once

                      (";" xparam)

                     )

partrel            =   "PARTREL" partrelparam ":" text CRLF

partrelparam       =    *(

                     ; the following is optional,
                     ; but MUST NOT occur more than once

                     (";" languageparam ) / (";" cnparam )    /
                     (";" reltypeparam)   / (";" nsrefparam ) /
                     (";" oprefparam ) /

                     ; the following is optional,
                     ; and MAY occur more than once

                     (";" xparam)

                     )

skilang            =   "SKILANG" skilangparam ":" language CRLF

skilangparam       =    *(

                         ; the following is optional,
                         ; but MUST NOT occur more than once

                         (";" oprefparam ) / (";" itemparam) /

                         ; the following is optional,
                         ; and MAY occur more than once

                         (";" xparam)

                         )

language          =    <Text identifying a language, as defined in RFC-1766>

orientation       =    "ORIENTATION" orientationparam ":" text CRLF

                        ; It is RECOMMENDED that the text value be
                        ; chosen from a list, as described in
                        ; this memo.

orientationparam  = *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once

                        (";" orienttypeparam ) /

orienttypeparam   = (( "ORIENTTYPE" "=" text) /
                           ( "PRXORIENTTYPE" "=" prefix ":" text )  /

                          (";" languageparam )  / (";" nsrefparam ) /
                          (";" oprefparam ) / (";" itemparam) /

                     ; It is RECOMMENDED that the text value be
                     ; chosen from a list, as described in
                     ; this memo.
                     ; the following is optional,
                     ; and MAY occur more than once

                        (";" xparam)
                        )

whurl         =   "WHURL" whurlparam ":" uri CRLF

whurlparam    =   *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once
                        (";" languageparam ) / (";" nsrefparam )

                        ; the following is optional,
                        ; and MAY occur more than once

                        (";" xparam)
                        )

skuid         =   "SKUID"  skuidparam ":" text CRLF


skuidparam    =   *(

                       ; the following is optional,
                       ; but MUST NOT occur more than once
                       (";" languageparam ) / (";" nsrefparam )

                       ; the following is optional,
                       ; and MAY occur more than once

                       (";" xparam)
                       )

dtopen       = "DTOPEN" opentimeparam ":" TEXT CRLF

opentimeparm = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   ( opref / (";" languageparam ) /
                   (";" nsrefparam ) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   *(";" xparam)

                   )

venue        =    "VENUE" venueparam ":" venuetype CRLF

venueparam   =    *(

                        ; the following is optional,
                        ; and MAY occur more than once

                        (";" xparam)
                        )

venuetype      =   "Internet"      /
                         "Radio"         /
                         "TV"            /
                         "Outdoors"      /
                         "Indoors"       /
                         "Travel-transit"

directions       = "DIRECTIONS" directionsparam ":" text CRLF

directionsparam  = *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once

                        (";" languageparam ) / (";" altrepparam ) /
                        (";" travelbyparam) / (";" geo-path) /
                        (";" nsrefparam ) /
                        ; the following is optional,
                        ; and MAY occur more than once

                        (";" xparam)
                        )

travelbyparam    = "TRAVELBY" "="

                        ("walk" / "bicycle" / "boat" / "car" / "rail" /
                         "air" / "public"transportation" /
                         "frequency" / "uri" )

        ; Implementers who do not intend to have a complex GUI for
        ; various types of directions could concatenate all DIRECTIONS
        ; fields which have a TRAVELBY parameter into one DIRECTIONS field
        ; without a TRAVELBY parameter

geo-path          =    "GEO-PATH" "=" 1*(float "," float ",")
                             (float "," float)

                     ; machine readable directions
                     ; coordinate pair sequence approaching destination

placename       =    "PLACENAME" placeparam ":" text CRLF

                           ; It is RECOMMENDED that the text value be

                           ; chosen from a list, as described in
                           ; this memo.

placeparam      =    *(

                           ; the following is optional,
                           ; but MUST NOT occur more than once

                           (";" languageparam ) / (";" nsrefparam ) /

                           ; the following is optional,
                           ; and MAY occur more than once

                           (";" xparam)
                           )

requirements       =    "REQUIRED" requireparam ":" text CRLF

                     ; It is RECOMMENDED that the text value be
                        ; chosen from a list, as described in
                        ; this memo.

requireparam = *(

                     ; the following is optional,
                        ; but MUST NOT occur more than once

                     (";" languageparam ) / (";" altrepparam )
                     (";" nsrefparam ) /
                     ; the following is optional,
                        ; and MAY occur more than once

                     (";" xparam)
                         )

Recommended       =    "RECOMMENDED" recommendedparam ":" text CRLF

                        ; It is RECOMMENDED that the text value be
                        ; chosen from a list, as described in
                        ; this memo.

recommendedparam =    *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once

                        (";" languageparam ) / (";" altrepparam )
                        (";" nsrefparam ) /
                        ; the following is optional,
                           ; and MAY occur more than once

                        (";" xparam)
                        )

prohibited       =    "PROHIBITED" prohibitedparam ":" text CRLF

                        ; It is RECOMMENDED that the text value be
                           ; chosen from a list, as described in
                           ; this memo.

prohibitedparam       =    *(

                        ; the following is optional,
                           ; but MUST NOT occur more than once

                        (";" languageparam ) / (";" altrepparam ) /
                        (";" nsrefparam ) /

                        ; the following is optional,
                           ; and MAY occur more than once

                        (";" xparam)
                            )

price             =    "PRICE" priceparam ":" price CRLF

priceparam        = *(

                             ; the following is optional,
                             ; but MUST NOT occur more than once

                        (";" languageparam ) / (";" altrepparam ) /
                        (";" itemparam) / (";" currencyparam)
                        (";" nsrefparam ) /

                         )



                        ; The text value COULD be
                        ; chosen from a list, as described in
                        ; this memo. Such a list could
                        ; contain words such as:
                        ; Admission
                        ; Breakfast
                        ; Starting Fee
                        ; Room

                        ; Happy hour
                        ; Monthly fee

price             =    float

currencyparam     =   "CURRENCY" "=" <currency code as
                           defined in ISO4217

                           ; the following is optional,
                           ; and MAY occur more than once

                           (";" xparam

                           )

bookings        =    "BOOKINGS" bookingsparam ":" text CRLF

bookingsparam   =    *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once

                        (";" languageparam ) / (";" altrepparam ) /
                        (";" opref) / (";" nsrefparam ) /
                        (";"  itemparam )  /

                        ; the following is optional,
                        ; and MAY occur more than once

                        (";" xparam)


access  =  "ACCESS" itemparam ":" boolean CRLF

                      ; It is RECOMMENDED that the text value be
                      ; chosen from a list, as described in
                      ; this memo.

                      ; the following is optional,
                      ; but MUST NOT occur more than once

                     (";" languageparam ) / (";"  opref )    /
                     (";" altrepparam)    / (";"  itemparam )    /
                     (";" nsrefparam )    /

              ; as soon as there is a standardized way of expressing
              ; special facilities for accessibility digitally

              ; it is RECOMMENDED that SkiCal
              ; files refer to such a file through the ALTREP mechanism.

                      *(

                       ; the following is optional,
                       ; and MAY occur more than once

                       (";" xparam)

                       )

paymethod    =    "PAYMETHOD" paymethodparam ":" text CRLF

                        ; It is RECOMMENDED that the text value be
                        ; chosen from a list, as described in
                        ; this memo.

paymethodparam      =   *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once

                        (";" altrepparam ) / (";" nsrefparam ) /
                        (";" itemparam )   / (";" opref )  /
                        ; the following is optional,
                        ; and MAY occur more than once

                        (";" xparam)

                        )

promo          =    "PROMO" promoparam ":" [ TEXT ] CRLF

promoparam     =    *(

                     ; the following is optional,
                     ; but MUST NOT occur more than once

                     (";" altrepparam) / (";" languageparam)  /
                     (";" nsrefparam) /  (";" itemparam) /
                     ; the following is optional,
                     ; and MAY occur more than once

                     (";" xparam)

                     )

control          =    "CONTROL" controlparam ":"   uri CRLF

                       ; the value MAY be a MAILTO URI, as defined
                       ; by RFC-1738.

controlparam     =    *(

                     ; the following is optional,
                     ; but MUST NOT occur more than once


                     (";" languageparam ) / (";" cnparam )    /
                     (";" skiroleparam)   / (";" altrepparam) /
                     (";" nsrefparam )    / (";"  itemparam ) /
                     (";"  opref )    /
                       ; It is highly RECOMMENDED that SkiCal
                       ; objects actually
                       ; use the cnparam since some applications will not
                       ; bother to read the altrep'ed vCard.
                       ; the following is optional,

                       ; and MAY occur more than once
                       (";" xparam)

                       )

publisher       = "PUBLISHER" publisherparam ":" mailto CRLF

publisherparam  =    *(

                     ; the following is optional,
                     ; but MUST NOT occur more than once

                     (";" cnparam ) / (";" nsrefparam )  /
                     (";" skiroleparam)   / (";" altrepparam) /


                     ; the following is optional,
                     ; and MAY occur more than once

                     (";" xparam)

                     )

SkiCalver    = "SKICALVER" SkiCalverparam ":" vervalue CRLF

SkiCalverparam   = *(";" xparam)

vervalue   = "1.0"         ;This memo
                   / maxver
                   / (minver ";" maxver)

minver     = <A IANA registered SkiCal version identifier>

maxver     = <A IANA registered SkiCal version identifier>

namespace       =  "NAMESPACE" namespaceparam ":" uri CRLF

namespaceparam  =  ";" "PREFIX" "=" prefix

prefix          =  text

                         ; the following is optional,
                         ; but MUST NOT occur more than once

                         (";" languageparam ) /

                         ; the following is optional,
                         ; and MAY occur more than once

                         (";" xparam)

                         )

optimes       =  "OPTIMES" optimesparam ":" OPTIMESET CRLF

optimesparam  =  ";" "ID" "=" text

state="OPEN" range="20030225T15300Z/20030225T16300Z"/>
