b = H(a)
       A binary string a is given as input to a secure one-way hash
       function H (e.g., SHA-2 family [FIPS180-3]) which produces a
       fixed-length output b.  The hash function H maps {0,1}^* to
       {0,1}^k where {0,1}^k indicates a set of binary strings of length
       k and k is a security parameter.

b = H'(a)
       A binary string a is given as input to a secure one-way hash
       function H' which maps the input a in {0,1}^* to the output b in
       Z_q^* where Z_q^* is a set of positive integers modulo prime q.

X = g^x mod p
       The g^x indicates a multiplication computation of g by x times.
       The resultant value modulo prime p is assigned to X. The discrete
       logarithm problem says that it is computationally hard to compute
       the discrete logarithm x from X, g and p.







X =     g^x mod p and

Y =     (X * (W^r))^y = X^y * W^(r * y) = X^y * (g^y)^t = X^y * K^t

Y =     (X * (W'^r))^y = X^y * W'^(r * y) = X^y * (g^y)^t'

X =     (g^c) * (W^d) mod p

AUTH = prf(bn2bin(K), <MessageOctects>)

