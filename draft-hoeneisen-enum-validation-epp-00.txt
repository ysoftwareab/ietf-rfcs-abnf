

ENUM -- Telephone Number Mapping                            B. Hoeneisen
Working Group                                                     Switch
Internet-Draft                                        September 24, 2004
Expires: March 25, 2005


  ENUM Validation Information Mapping for the Extensible Provisioning
                                Protocol
                 draft-hoeneisen-enum-validation-epp-00

Status of this Memo

   This document is an Internet-Draft and is subject to all provisions
   of section 3 of RFC 3667.  By submitting this Internet-Draft, each
   author represents that any applicable patent or other IPR claims of
   which he or she is aware have been or will be disclosed, and any of
   which he or she become aware will be disclosed, in accordance with
   RFC 3668.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as
   Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on March 25, 2005.

Copyright Notice

   Copyright (C) The Internet Society (2004).

Abstract

   This document describes an EPP extension for mapping information
   about the validation process the ENUM Registrar has applied for the
   E.164 number (or number range), which the ENUM domain name is based
   on.  Specified in XML, this mapping extends the EPP domain name
   mapping to provide an additional feature required for the
   provisioning of E.164 numbers.



Hoeneisen                Expires March 25, 2005                 [Page 1]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


Table of Contents

   1.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  3

   2.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3

   3.  Object Attributes  . . . . . . . . . . . . . . . . . . . . . .  4
     3.1   E.164 Domain Names . . . . . . . . . . . . . . . . . . . .  4
     3.2   Validation Fields  . . . . . . . . . . . . . . . . . . . .  4
       3.2.1   Serial . . . . . . . . . . . . . . . . . . . . . . . .  4
       3.2.2   Method Identifier  . . . . . . . . . . . . . . . . . .  4
       3.2.3   Validation Entity Identifier . . . . . . . . . . . . .  4
       3.2.4   Registrar Identifier . . . . . . . . . . . . . . . . .  4
       3.2.5   E.164 Number . . . . . . . . . . . . . . . . . . . . .  5
       3.2.6   Execution Date . . . . . . . . . . . . . . . . . . . .  5
       3.2.7   Expire Date  . . . . . . . . . . . . . . . . . . . . .  5

   4.  EPP Command Mapping  . . . . . . . . . . . . . . . . . . . . .  5
     4.1   EPP Query Commands . . . . . . . . . . . . . . . . . . . .  5
       4.1.1   EPP <check> Command  . . . . . . . . . . . . . . . . .  5
       4.1.2   EPP <info> Command . . . . . . . . . . . . . . . . . .  5
       4.1.3   EPP <transfer> Command . . . . . . . . . . . . . . . .  7
     4.2   EPP Transform Commands . . . . . . . . . . . . . . . . . .  7
       4.2.1   EPP <create> Command . . . . . . . . . . . . . . . . .  8
       4.2.2   EPP <delete> Command . . . . . . . . . . . . . . . . .  9
       4.2.3   EPP <renew> Command  . . . . . . . . . . . . . . . . .  9
       4.2.4   EPP <transfer> Command . . . . . . . . . . . . . . . . 10
       4.2.5   EPP <update> Command . . . . . . . . . . . . . . . . . 10

   5.  Formal Syntax  . . . . . . . . . . . . . . . . . . . . . . . . 11

   6.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 14

   7.  Security Considerations  . . . . . . . . . . . . . . . . . . . 15

   8.  Normative References . . . . . . . . . . . . . . . . . . . . . 15

       Author's Address . . . . . . . . . . . . . . . . . . . . . . . 16

       Intellectual Property and Copyright Statements . . . . . . . . 17











Hoeneisen                Expires March 25, 2005                 [Page 2]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


1.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [2].

   In examples, "C:" represents lines sent by a protocol client and "S:"
   represents lines returned by a protocol server.  Indentation and
   white space in examples is provided only to illustrate element
   relationships and is not a REQUIRED feature of this specification.

   XML is case sensitive.  Unless stated otherwise, XML specifications
   and examples provided in this document MUST be interpreted in the
   character case presented to develop a conforming implementation.

2.  Introduction

   This document describes an E.164 Number Mapping (ENUM) validation
   information mapping for version 1.0 of the Extensible Provisioning
   Protocol (EPP).  This mapping, an extension of the domain name
   mapping described in [3], is specified using the Extensible Markup
   Language (XML) 1.0 as described in [4] and XML Schema notation as
   described in [5] and [6].

   The EPP core protocol specification [7] provides a complete
   description of EPP command and response structures.  A thorough
   understanding of the base protocol specification is necessary to
   understand the mapping described in this document.

   ENUM [8] describes how the Domain Name System (DNS) can be used to
   identify services associated with an E.164 number.

   Usually only the holder of the E.164 number (or number range) has the
   right to register the corresponding ENUM domain name.  Therefore an
   ENUM validation process has to be applied before the ENUM domain name
   can be inserted into the DNS.  The validation process shall ensure,
   that the applicant of the registration is the holder of the E.164
   number (or number range), and the applicant of an ENUM registration
   needs to be authenticated.

   Several validation methods come into question; e.g.  a confirmation
   of the number assignment entity, which is often the Telephony Service
   Provider (TSP) of the E.164 number holder.  In cases where an E.164
   number is assigned together with the corresponding ENUM domain name,
   the validation process is rather simple.  However, the details of the
   ENUM validation methods are beyond the scope of this document.

   The EPP extension described in this document specifies a mechanism



Hoeneisen                Expires March 25, 2005                 [Page 3]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


   for the mapping of information about the validation process an ENUM
   Registrar has applied for the E.164 number (or number range) the ENUM
   domain name is based on.

3.  Object Attributes

   This extension adds additional elements to the EPP domain name
   mapping [3].  Only new element descriptions are described here.

3.1  E.164 Domain Names

   An E.164 domain name is a representation of an E.164 number that has
   been translated to conform to domain name syntax as described in the
   ENUM specification [8].  The labels used to describe the name space
   of an E.164 domain name are a policy matter that is beyond the scope
   of this document.

3.2  Validation Fields

   As described above, the validation process shall ensure, that the
   applicant of the registration for an ENUM Domain is the holder of the
   corresponding E.164 number (or number range), and the applicant of an
   ENUM registration needs to be authenticated.  The details of the ENUM
   validation methods are beyond the scope of this document.

3.2.1  Serial

   The "serial" attribute, used to identify the validation, is
   represented in this mapping using a character string with a maximum
   length of 31 characters.  It MUST be unique within the Validation
   Entity.

3.2.2  Method Identifier

   The Validation methodID field is represented in this mapping using a
   character string with a maximum length of 63 characters.  It contains
   an Identifier for the method used for the validation.

3.2.3  Validation Entity Identifier

   The Validation validationEntityID field is represented in this
   mapping using a character string with a length of 3 to 16 characters.
   It contains an identifier assigned to the Validation Entity e.g.  by
   the Registry.

3.2.4  Registrar Identifier

   The Validation registrarID field is represented in this mapping using



Hoeneisen                Expires March 25, 2005                 [Page 4]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


   a character string with a length of 3 to 16 characters.  It contains
   an identifier assigned to the Registrar by the Registry.

3.2.5  E.164 Number

   The Validation e164Number field, the telephone number that has been
   validated, is represented in this mapping using a character string
   with a maximum length of 31 characters.

3.2.6  Execution Date

   The Validation execDate field, the execution date of the validation,
   is represented in this mapping using the XML Schema "dateTime" data
   type.

3.2.7  Expire Date

   The Validation expireDate field, the expire date of the validation,
   is represented in this mapping using the XML Schema "dateTime" data
   type.

4.  EPP Command Mapping

   A detailed description of the EPP syntax and semantics can be found
   in the EPP core protocol specification [7].  The command mappings
   described here are specifically for use in implementing ENUM
   provisioning processes via EPP.

4.1  EPP Query Commands

   EPP provides three commands to retrieve object information: <check>
   to determine if an object is known to the server, <info> to retrieve
   detailed information associated with an object, and <transfer> to
   retrieve object transfer status information.

4.1.1  EPP <check> Command

   This extension does not add any elements to the EPP <check> command
   or <check> response described in the EPP domain mapping [3].

4.1.2  EPP <info> Command

   This extension does not add any elements to the EPP <info> command
   described in the EPP domain mapping [3].  Additional elements are
   defined for the <info> response.

   When an <info> command has been processed successfully, the EPP
   <resData> element MUST contain child elements as described in the EPP



Hoeneisen                Expires March 25, 2005                 [Page 5]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


   domain mapping [3].  In addition, the EPP <extension> element MUST
   contain a child <e164val:infData> element that identifies the
   extension namespace and the location of the extension schema.  The
   <e164val:infData> element contains one or more <e164val:validation>
   elements each with a "serial" attribute to identify the validation.
   Each <e164val:validation> element contains the following child
   elements:
   o  An <e164val:methodID> element that contains the Identifier of the
      validation method.
   o  An OPTIONAL <e164val:validationEntityID> element that contains an
      identifier assigned to the Validation Entity.
   o  An OPTIONAL <e164val:registrarID> element that contains an
      identifier assigned to the Registrar by the Registry.
   o  An OPTIONAL <e164val:e164Number> element that contains the
      validated E.164 number.
   o  An OPTIONAL <e164val:execDate> element that contains the date,
      when the validation has been performed.
   o  An OPTIONAL <e164val:expireDate> element that contains the date,
      when the validation expires.

   Example for <info> response:

   S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
   S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
   S:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   S:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
   S:     epp-1.0.xsd">
   S: <response>
   S:  <result code="1000">
   S:   <msg>Command completed successfully</msg>
   S:  </result>
   S:  <resData>
   S:   <domain:infData
   S:    xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
   S:    xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
   S:    domain-1.0.xsd">
   S:    <domain:name>5.1.5.1.8.6.2.4.4.1.4.e164.arpa</domain:name>
   S:    <domain:roid>EXAMPLE1-REP</domain:roid>
   S:    <domain:status s="ok"/>
   S:    <domain:registrant>jd1234</domain:registrant>
   S:    <domain:contact type="admin">sh8013</domain:contact>
   S:    <domain:contact type="tech">sh8013</domain:contact>
   S:    <domain:ns>
   S:     <domain:hostObj>ns1.example.com</domain:hostObj>
   S:     <domain:hostObj>ns2.example.com</domain:hostObj>
   S:    </domain:ns>
   S:    <domain:host>ns1.example.com</domain:host>
   S:    <domain:host>ns2.example.com</domain:host>



Hoeneisen                Expires March 25, 2005                 [Page 6]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


   S:    <domain:clID>ClientX</domain:clID>
   S:    <domain:crID>ClientY</domain:crID>
   S:    <domain:crDate>1999-04-03T22:00:00.0Z</domain:crDate>
   S:    <domain:upID>ClientX</domain:upID>
   S:    <domain:upDate>1999-12-03T09:00:00.0Z</domain:upDate>
   S:    <domain:exDate>2005-04-03T22:00:00.0Z</domain:exDate>
   S:    <domain:trDate>2000-04-08T09:00:00.0Z</domain:trDate>
   S:    <domain:authInfo>
   S:     <domain:pw>2fooBAR</domain:pw>
   S:    </domain:authInfo>
   S:   </domain:infData>
   S:  </resData>
   S:  <extension>
   S:   <e164val:infData xmlns:e164val="urn:ietf:params:xml:ns:e164val-1.0"
   S:    xsi:schemaLocation="urn:ietf:params:xml:ns:e164val-1.0
   S:    e164val-1.0.xsd">
   S:    <e164val:validation serial="VE09-54321">
   S:     <e164val:methodID>Validation-X</e164val:methodID>
   S:     <e164val:validationEntityID>VE09-NMQ</e164val:validationEntityID>
   S:     <e164val:registrarID>Client-X</e164val:registrarID>
   S:     <e164val:e164Number>+41442681515</e164val:e164Number>
   S:     <e164val:execDate>2000-04-08T09:10:54.0Z</e164val:execDate>
   S:     <e164val:expireDate>2000-10-08T09:10:54.0Z</e164val:expireDate>
   S:    </e164val:validation>
   S:   </e164val:infData>
   S:  </extension>
   S:  <trID>
   S:   <clTRID>ABC-12345</clTRID>
   S:   <svTRID>54322-XYZ</svTRID>
   S:  </trID>
   S: </response>
   S:</epp>


                                Figure 1


4.1.3  EPP <transfer> Command

   This extension does not add any elements to the EPP <transfer>
   command or <transfer> response described in the EPP domain mapping
   [3].

4.2  EPP Transform Commands

   EPP provides five commands to transform objects: <create> to create
   an instance of an object, <delete> to delete an instance of an
   object, <renew> to extend the validity period of an object,



Hoeneisen                Expires March 25, 2005                 [Page 7]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


   <transfer> to manage object sponsorship changes, and <update> to
   change information associated with an object.

4.2.1  EPP <create> Command

   This extension defines additional elements for the EPP <create>
   command described in the EPP domain mapping [3].  No additional
   elements are defined for the EPP <create> response.

   The EPP <create> command provides a transform operation that allows a
   client to create a domain object.  In addition to the EPP command
   elements described in the EPP domain mapping [3], the command MUST
   contain an <extension> element.  The <extension> element MUST contain
   a child <e164val:create> element that identifies the extension
   namespace and the location of the extension schema.  The
   <e164val:create> element contains one or more <e164val:validation>
   elements each with a "serial" attribute to identify the validation.
   Each <e164val:validation> element contains the following child
   elements:
   o  An <e164val:methodID> element that contains the Identifier of the
      validation method.
   o  An OPTIONAL <e164val:validationEntityID> element that contains an
      identifier assigned to the Validation Entity.
   o  An OPTIONAL <e164val:registrarID> element that contains an
      identifier assigned to the Registrar by the Registry.
   o  An OPTIONAL <e164val:e164Number> element that contains the
      validated E.164 number.
   o  An OPTIONAL <e164val:execDate> element that contains the date,
      when the validation has been performed.
   o  An OPTIONAL <e164val:expireDate> element that contains the date,
      when the validation expires.

   Example for <create> command:


   C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
   C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
   C:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   C:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
   C:     epp-1.0.xsd">
   C: <command>
   C:  <create>
   C:   <domain:create
   C:    xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
   C:    xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
   C:    domain-1.0.xsd">
   C:     <domain:name>5.1.5.1.8.6.2.4.4.1.4.e164.arpa</domain:name>
   C:     <domain:period unit="y">2</domain:period>



Hoeneisen                Expires March 25, 2005                 [Page 8]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


   C:     <domain:ns>
   C:      <domain:hostObj>ns1.example.com</domain:hostObj>
   C:      <domain:hostObj>ns2.example.com</domain:hostObj>
   C:     </domain:ns>
   C:     <domain:registrant>jd1234</domain:registrant>
   C:     <domain:contact type="admin">sh8013</domain:contact>
   C:     <domain:contact type="tech">sh8013</domain:contact>
   C:     <domain:authInfo>
   C:      <domain:pw>2fooBAR</domain:pw>
   C:     </domain:authInfo>
   C:   </domain:create>
   C:  </create>
   C:  <extension>
   C:   <e164val:create
   C:    xmlns:e164val="urn:ietf:params:xml:ns:e164val-1.0"
   C:    xsi:schemaLocation="urn:ietf:params:xml:ns:e164val-1.0
   C:    e164val-1.0.xsd">
   C:     <e164val:validation serial="VE09-54321">
   C:      <e164val:methodID>Validation-X</e164val:methodID>
   C:      <e164val:validationEntityID>VE09-NMQ</e164val:validationEntityID>
   C:      <e164val:registrarID>Client-X</e164val:registrarID>
   C:      <e164val:e164Number>+41442681515</e164val:e164Number>
   C:      <e164val:execDate>2000-04-08T09:10:54.0Z</e164val:execDate>
   C:      <e164val:expireDate>2000-10-08T09:10:54.0Z</e164val:expireDate>
   C:     </e164val:validation>
   C:   </e164val:create>
   C:  </extension>
   C:  <clTRID>ABC-12345</clTRID>
   C: </command>
   C:</epp>


                                Figure 2

   When an extended <create> command has been processed successfully,
   the EPP response is as described in the EPP domain mapping [3].

4.2.2  EPP <delete> Command

   This extension does not add any elements to the EPP <delete> command
   or <delete> response described in the EPP domain mapping [3].

4.2.3  EPP <renew> Command

   This extension does not add any elements to the EPP <renew> command
   or <renew> response described in the EPP domain mapping [3].





Hoeneisen                Expires March 25, 2005                 [Page 9]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


4.2.4  EPP <transfer> Command

   This extension does not add any elements to the EPP <transfer>
   command or <transfer> response described in the EPP domain mapping
   [3].

4.2.5  EPP <update> Command

   This extension defines additional elements for the EPP <update>
   command described in the EPP domain mapping [3].  No additional
   elements are defined for the EPP <update> response.

   The EPP <update> command provides a transform operation that allows a
   client to change the state of a domain object.  In addition to the
   EPP command elements described in the EPP domain mapping [3], the
   <update> command MUST contain an <extension> element.  The
   <extension> element MUST contain a child <e164val:update> element
   that identifies the extension namespace and the location of the
   extension schema.  The <e164val:update> element contains one or more
   <e164val:add>, <e164val:rem> or <e164val:chg> elements.  Each
   <e164val:add>, <e164val:rem> and <e164val:chg> element contains an
   <e164val:validation> element with a "serial" attribute to identify
   the validation.  Each <e164val:validation> element contains the
   following child elements:
   o  An <e164val:methodID> element that contains the Identifier of the
      validation method.
   o  An OPTIONAL <e164val:validationEntityID> element that contains an
      identifier assigned to the Validation Entity.
   o  An OPTIONAL <e164val:registrarID> element that contains an
      identifier assigned to the Registrar by the Registry.
   o  An OPTIONAL <e164val:e164Number> element that contains the
      validated E.164 number.
   o  An OPTIONAL <e164val:execDate> element that contains the date,
      when the validation has been performed.
   o  An OPTIONAL <e164val:expireDate> element that contains the date,
      when the validation expires.















Hoeneisen                Expires March 25, 2005                [Page 10]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


   Example for <update> command:


   C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
   C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
   C:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   C:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
   C:     epp-1.0.xsd">
   C: <command>
   C:  <update>
   C:   <domain:update
   C:    xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
   C:    xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
   C:    domain-1.0.xsd">
   C:    <domain:name>5.1.5.1.8.6.2.4.4.1.4.e164.arpa</domain:name>
   C:     </domain:update>
   C:   </update>
   C:   <extension>
   C:    <e164val:update xmlns:e164val="urn:ietf:params:xml:ns:e164val-1.0"
   C:     xsi:schemaLocation="urn:ietf:params:xml:ns:e164val-1.0
   C:     e164val-1.0.xsd">
   C:     <e164val:chg>
   C:      <e164val:validation serial="VE09-65432">
   C:       <e164val:methodID>Validation-X</e164val:methodID>
   C:       <e164val:validationEntityID>VE09-NMQ</e164val:validationEntityID>
   C:       <e164val:registrarID>Client-X</e164val:registrarID>
   C:       <e164val:e164Number>+41442681515</e164val:e164Number>
   C:       <e164val:execDate>2000-10-01T11:45:22.0Z</e164val:execDate>
   C:       <e164val:expireDate>2001-04-01T11:45:22.0Z</e164val:expireDate>
   C:      </e164val:validation>
   C:     </e164val:chg>
   C:    </e164val:update>
   C:   </extension>
   C:  <clTRID>ABC-12345</clTRID>
   C: </command>
   C:</epp>


                                Figure 3

   When an extended <update> command has been processed successfully,
   the EPP response is as described in the EPP domain mapping [3].

5.  Formal Syntax

   An EPP object mapping is specified in XML Schema notation.  The
   formal syntax presented here is a complete schema representation of
   the object mapping suitable for automated validation of EPP XML



Hoeneisen                Expires March 25, 2005                [Page 11]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


   instances.  The BEGIN and END tags are not part of the schema; they
   are used to note the beginning and ending of the schema for URI
   registration purposes.

   Formal syntax:


   BEGIN
   <?xml version="1.0" encoding="UTF-8"?>
   <schema targetNamespace="urn:ietf:params:xml:ns:e164val-1.0"
           xmlns:e164val="urn:ietf:params:xml:ns:e164val-1.0"
           xmlns:eppcom="urn:ietf:params:xml:ns:eppcom-1.0"
           xmlns="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified">

   <!--
   Import common element types.
   -->
     <import namespace="urn:ietf:params:xml:ns:eppcom-1.0"
             schemaLocation="eppcom-1.0.xsd"/>

     <annotation>
       <documentation>
         Extensible Provisioning Protocol v1.0
         domain name extension schema for E.164 number validation.
       </documentation>
     </annotation>

   <!--
   Child elements found in EPP commands.
   -->
     <element name="create" type="e164val:createType"/>
     <element name="update" type="e164val:updateType"/>

   <!--
   Global elements.
   -->
     <element name="validation" type="e164val:validationType"/>

   <!--
   Child elements of the <create> command.
   -->
     <complexType name="createType">
       <sequence>
         <element ref="e164val:validation" maxOccurs="unbounded"/>
       </sequence>
     </complexType>




Hoeneisen                Expires March 25, 2005                [Page 12]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


     <complexType name="validationType">
       <sequence>
         <element name="methodID" type="e164val:methodIdType"/>
         <element name="validationEntityID" type="eppcom:clIDType"
          minOccurs="0"/>
         <element name="registrarID" type="eppcom:clIDType"
          minOccurs="0"/>
         <element name="e164Number" type="e164val:e164NumberType"
          minOccurs="0"/>
         <element name="execDate" type="dateTime"
          minOccurs="0"/>
         <element name="expireDate" type="dateTime"
          minOccurs="0"/>
       </sequence>
       <attribute name="serial" type="e164val:serialAttrType"/>
     </complexType>

     <simpleType name="methodIdType">
       <restriction base="token">
         <minLength value="1"/>
         <maxLength value="63"/>
       </restriction>
     </simpleType>

     <simpleType name="e164NumberType">
       <restriction base="token">
         <maxLength value="31"/>
       </restriction>
     </simpleType>

     <simpleType name="serialAttrType">
       <restriction base="token">
         <minLength value="1"/>
         <maxLength value="31"/>
       </restriction>
     </simpleType>

   <!--
   Child elements of the <update> command.
   -->
     <complexType name="updateType">
       <sequence>
         <element name="add" type="e164val:modType"
          minOccurs="0"/>
         <element name="rem" type="e164val:modType"
          minOccurs="0"/>
         <element name="chg" type="e164val:modType"
          minOccurs="0"/>



Hoeneisen                Expires March 25, 2005                [Page 13]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


       </sequence>
     </complexType>

   <!--
   Data elements that can be added, removed or changed.
   -->
     <complexType name="modType">
       <sequence>
         <element ref="e164val:validation" maxOccurs="unbounded"/>
       </sequence>
     </complexType>

   <!--
   Child response elements.
   -->
     <element name="infData" type="e164val:infDataType"/>

   <!--
   <info> response elements.
   -->
     <complexType name="infDataType">
       <sequence>
         <element ref="e164val:validation" maxOccurs="unbounded"/>
       </sequence>
     </complexType>

   <!--
   End of schema.
   -->
   </schema>
   END


                                Figure 4


6.  IANA Considerations

   This document uses URNs to describe XML namespaces and XML schemas
   conforming to a registry mechanism described in RFC 3688 [10].  Two
   URI assignments are requested.
   1.  Registration request for the extension namespace:
       *  URI: urn:ietf:params:xml:ns:e164val-1.0
       *  Registrant Contact: See the "Author's Address" section of this
          document.
       *  XML: None.  Namespace URIs do not represent an XML
          specification.




Hoeneisen                Expires March 25, 2005                [Page 14]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


   2.  Registration request for the extension XML schema:
       *  URI: urn:ietf:params:xml:schema:e164val-1.0
       *  Registrant Contact: See the "Author's Address" section of this
          document.
       *  XML: See the "Formal Syntax" section of this document.

7.  Security Considerations

   The mapping extensions described in this document do not provide any
   security services beyond those described by EPP [7], the EPP domain
   name mapping [3], and protocol layers used by EPP.  Security
   considerations related to ENUM are described in the "Security
   Considerations" section of the ENUM specification [8].  The security
   considerations described in these other specifications apply to this
   specification as well.

   As with other domain object transforms, the EPP transform operations
   described in this document MUST be restricted to the sponsoring
   client as authenticated using the mechanisms described in sections
   2.9.1.1 and 7 of RFC 3730 [7].  Any attempt to perform a transform
   operation on a domain object by any client other than the sponsoring
   client MUST be rejected with an appropriate EPP authorization error.

8  Normative References

   [1]   Bradner, S., "The Internet Standards Process -- Revision 3",
         BCP 9, RFC 2026, October 1996.

   [2]   Bradner, S., "Key words for use in RFCs to Indicate Requirement
         Levels", BCP 14, RFC 2119, March 1997.

   [3]   Hollenbeck, S., "Extensible Provisioning Protocol (EPP) Domain
         Name Mapping", RFC 3731, March 2004.

   [4]   Paoli, J., Maler, E., Bray, T. and C. Sperberg-McQueen,
         "Extensible Markup Language (XML) 1.0 (Second Edition)", W3C
         FirstEdition REC-xml-20001006, October 2000.

   [5]   Beech, D., Mendelsohn, N., Thompson, H. and M. Maloney, "XML
         Schema Part 1: Structures", W3C REC REC-xmlschema-1-20010502,
         May 2001.

   [6]   Malhotra, A. and P. Biron, "XML Schema Part 2: Datatypes", W3C
         REC REC-xmlschema-2-20010502, May 2001.

   [7]   Hollenbeck, S., "Extensible Provisioning Protocol (EPP)", RFC
         3730, March 2004.




Hoeneisen                Expires March 25, 2005                [Page 15]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


   [8]   Faltstrom, P. and M. Mealling, "The E.164 to Uniform Resource
         Identifiers (URI) Dynamic Delegation Discovery System (DDDS)
         Application (ENUM)", RFC 3761, April 2004.

   [9]   Mealling, M., "Dynamic Delegation Discovery System (DDDS) Part
         Three: The Domain Name System (DNS) Database", RFC 3403,
         October 2002.

   [10]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688,
         January 2004.


Author's Address

   Bernie Hoeneisen
   Switch
   Neumuehlequai 6
   CH-8001 Zuerich
   Switzerland

   Phone: +41 44 268 1515
   EMail: hoeneisen@switch.ch, b.hoeneisen@ieee.org
   URI:   http://www.switch.ch/




























Hoeneisen                Expires March 25, 2005                [Page 16]

Internet-Draft      ENUM Validation Mapping for EPP       September 2004


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Disclaimer of Validity

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Copyright Statement

   Copyright (C) The Internet Society (2004).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.




Hoeneisen                Expires March 25, 2005                [Page 17]


