

Network Working Group                                     P. Saint-Andre
Internet-Draft                                Jabber Software Foundation
Expires: August 8, 2004                                         A. Houri
                                                                     IBM
                                                           J. Hildebrand
                                                            Jabber, Inc.
                                                        February 8, 2004


     Interoperability between the Extensible Messaging and Presence
 Protocol (XMPP) and SIP for Instant Messaging and Presence Leveraging
                          Extensions (SIMPLE)
                    draft-saintandre-xmpp-simple-00

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups. Note that other
   groups may also distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on August 8, 2004.

Copyright Notice

   Copyright (C) The Internet Society (2004). All Rights Reserved.

Abstract

   This document defines a bi-directional protocol mapping for use by
   gateways that enable the exchange of instant messages and presence
   information between systems that implement the Extensible Messaging
   and Presence Protocol (XMPP) and those that implement SIP for Instant
   Messaging and Presence Leveraging Extensions (SIMPLE).





Saint-Andre, et al.      Expires August 8, 2004                 [Page 1]

Internet-Draft            XMPP SIMPLE Interop              February 2004


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   1.1 Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Addresses  . . . . . . . . . . . . . . . . . . . . . . . . . .  4
   2.1 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .  4
   2.2 XMPP to SIMPLE . . . . . . . . . . . . . . . . . . . . . . . .  5
   2.3 SIMPLE to XMPP . . . . . . . . . . . . . . . . . . . . . . . .  6
   3.  Instant Messages . . . . . . . . . . . . . . . . . . . . . . .  6
   3.1 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .  6
   3.2 XMPP to SIMPLE . . . . . . . . . . . . . . . . . . . . . . . .  7
   3.3 SIMPLE to XMPP . . . . . . . . . . . . . . . . . . . . . . . .  9
   4.  Presence Information . . . . . . . . . . . . . . . . . . . . . 10
   4.1 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . 10
   4.2 XMPP to SIMPLE . . . . . . . . . . . . . . . . . . . . . . . . 10
   4.3 SIMPLE to XMPP . . . . . . . . . . . . . . . . . . . . . . . . 12
   5.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 13
   6.  Security Considerations  . . . . . . . . . . . . . . . . . . . 13
   7.  Open Issues  . . . . . . . . . . . . . . . . . . . . . . . . . 14
   8.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 14
       Normative References . . . . . . . . . . . . . . . . . . . . . 14
       Informative References . . . . . . . . . . . . . . . . . . . . 15
       Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . 16
       Intellectual Property and Copyright Statements . . . . . . . . 17



























Saint-Andre, et al.      Expires August 8, 2004                 [Page 2]

Internet-Draft            XMPP SIMPLE Interop              February 2004


1. Introduction

   In order to help ensure interoperability between instant messaging
   and presence systems that conform to the requirements of RFC 2779
   [IMP-REQS], it is important to clearly define mappings between such
   protocols.  Within the IETF, work has proceeded on two such
   protocols: SIP for Instant Messaging and Presence Leveraging
   Extensions (SIMPLE), which consists of extensions to the Session
   Initiation Protocol ([SIP]), and the Extensible Messaging and
   Presence Protocol (XMPP), which consists of a formalization of the
   core XML streaming protocols developed originally by the Jabber
   open-source community.  One approach to helping ensure
   interoperability between such protocols is to map each protocol to
   the abstract semantics described in [CPIM] and [CPP]; that is the
   approach taken by [SIMPLE-CPIM] and [XMPP-CPIM].  Another approach is
   that taken by [DRAFT-UMPP].  The approach taken in this document is
   to directly map semantics from one protocol to another (i.e., from
   SIMPLE to XMPP and vice-versa), mainly for use by gateways between
   systems that implement one or the other of these protocols.  (These
   approaches describe concepts that are complementary in many ways, and
   a future draft may provide a more substantive merger between them.)

   The mappings specified in this document cover three main areas:

   o  Mapping of addresses

   o  Mapping of instant messages

   o  Mapping of presence information

   It is important to note that an underlying architectural assumption
   for this document is that the mapping between protocols will most
   likely occur by means of a gateway between an XMPP network and a
   SIMPLE network.  Such a gateway is a dedicated translator between the
   XMPP and SIMPLE protocols, which naturally may be co-resident with an
   XMPP server or a SIMPLE server.  Although such a gateway could use
   the [CPIM] and [CPP] specifications to define the common formats into
   which the protocols are translated for purposes of interworking (as
   specified in [SIMPLE-CPIM] and [XMPP-CPIM].), this document assumes
   that a SIMPLE-XMPP gateway will translate directly from one protocol
   to the other.

1.1 Terminology

   The capitalized key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
   "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in RFC
   2119 [TERMS].



Saint-Andre, et al.      Expires August 8, 2004                 [Page 3]

Internet-Draft            XMPP SIMPLE Interop              February 2004


2. Addresses

2.1 Overview

   The address formats used to identify XMPP entities are different from
   those used to identify SIP/SIMPLE entities.  The XMPP address format
   is specified in [XMPP-CORE]; as specified in [XMPP-IM], instant
   messaging and presence applications of XMPP MUST also support 'im:'
   and 'pres:' URIs as specified in [CPIM] and [CPP] respectively.  The
   SIP/SIMPLE address format for instant messaging is specified in
   [SIP-IM]; it may use either 'sip:' or 'sips:' URIs as specified in
   [SIP] or an 'im:' URI as specified in [CPIM].  The SIP/SIMPLE address
   format for presence is specified in [SIP-PRES]; it may use either
   'sip:' or 'sips:' URIs as specified in [SIP] or a 'pres:' URI as
   specified in [CPP].

   In this document we describe mappings for addresses of the form
   <user@domain> only, ignoring any protocol-specific extensions such as
   XMPP resource identifiers or SIP telephone numbers and passwords.
   However, we have ruled the mapping of domain names as out of scope
   for the initial version of this document, since it is a matter for
   the Domain Name System and the translation of fully internationalized
   domain names (which the SIP address format does not allow, but which
   the XMPP address format does allow via [IDNA]) into
   non-internationalized domain names.  Therefore in the following
   sections we treat local-part addresses only (these are called
   variously "usernames", "instant inboxes", "presentities", and "node
   identifiers" in the protocols at issue).

   The sip:/sips:, im:/pres:, and XMPP address schemes allow different
   sets of characters.  In some cases, characters allowed in one scheme
   are disallowed in others; these characters must be mapped
   appropriately in order to ensure interoperable communications across
   systems.  The table below summarizes our findings regarding the
   complement of allowable US-ASCII characters in each addressing scheme
   when compared individually to the other schemes.

   Table 1: Partial complements of allowable US-ASCII characters

      +----------+----------+-----------+-------+
      |          | SIP/SIPS |  IM/PRES  |  XMPP |
      +----------+----------+-----------+-------+
      | SIP/SIPS |  N/A     |  (),;     |  &'/  |
      +----------+----------+-----------+-------+
      | IM/PRES  | #%^`{|}  |  N/A      |  &'/  |
      +----------+----------+-----------+-------+
      | XMPP     |  none    |  none     |  N/A  |
      +----------+----------+-----------+-------+



Saint-Andre, et al.      Expires August 8, 2004                 [Page 4]

Internet-Draft            XMPP SIMPLE Interop              February 2004


   Note: Each cell shows US-ASCII characters that are disallowed in the
   column protocol but allowed in the row protocol; e.g., the last cell
   of the third row shows that the characters &'/ are allowed in sip:/
   sips: URIs but disallowed in XMPP addresses.

   The table below is another way of looking at the same issue, since it
   shows the intersection of allowable US-ASCII characters in each
   addressing scheme when compared individually to the other schemes.

   Table 2: Partial intersections of allowable US-ASCII characters

      +-------------------+------------------+----------------------+
      |  SIP/SIPS & XMPP  |  IM/PRES & XMPP  |  SIP/SIPS & IM/PRES  |
      +-------------------+------------------+----------------------+
      |  a-z  A-Z  0-9    |  a-z  A-Z  0-9   |  a-z  A-Z  0-9       |
      |  !$()*+,-.;=?_~   |  !#$%*+-.=?^_`   |  !$*+-.=?_~          |
      |  %hexhex          |  {|}~            |                      |
      +-------------------+------------------+----------------------+

   Therefore the following US-ASCII characters are allowed in all three
   addressing schemes (i.e., the intersection of all three sets of
   allowable characters):

      a-z  A-Z  0-9  ! $ * + - . = ?

   In addition to the US-ASCII characters described above, many
   non-US-ASCII (specifically, UTF-8) characters are allowed in XMPP
   addresses but not allowed in sip:/sips: or im:/pres: URIs, since XMPP
   allows internationalized local-part addresses.  A straightforward
   mapping of these characters to US-ASCII characters is provided in
   Section 2.2.5 of [URL-GUIDE], namely to encode unsafe octets using
   the %hexhex encoding.

2.2 XMPP to SIMPLE

   The following is a high-level algorithm for mapping an XMPP address
   to a sip:, sips:, im:, or pres: URI:

   1.  Split XMPP address into node identifier (local-part; mapping
       described in remaining steps), domain identifier (hostname;
       mapping is out of scope), and resource identifier (specifier for
       particular device or connection; discard this for cross-system
       interoperability)

   2.  Apply Nodeprep profile of [STRINGPREP] (as specified in
       [XMPP-CORE]) for canonicalization (OPTIONAL)

   3.  Translate #26; to &, #27; to ', and #2f; to / respectively



Saint-Andre, et al.      Expires August 8, 2004                 [Page 5]

Internet-Draft            XMPP SIMPLE Interop              February 2004


   4.  For each byte, if the byte is not in the set -A-Za-z0-9!$*.?_~+=
       then change to %hexhex

   5.  Combine resulting local-part with mapped hostname to form
       local@domain address

   6.  Prepend with 'im:' scheme (for XMPP <message/> stanzas) or
       'pres:' scheme (for XMPP <presence/> stanzas) if foreign domain
       supports these (discovered via [SRV] lookup as specified in
       [XMPP-IM]), else prepend with 'sip:' or 'sips:' scheme according
       to local service policy


2.3 SIMPLE to XMPP

   The following is a high-level algorithm for mapping a sip:, sips:,
   im:, or pres: URI to an XMPP address:

   1.  Remove URI scheme

   2.  Split at the first '@' character into local-part and hostname
       (mapping the latter is out of scope)

   3.  Translate %hexhex to equivalent octets

   4.  Treat result as a UTF-8 string

   5.  Translate & to #26;, ' to #27;, and / to @2f respectively

   6.  Apply Nodeprep profile of [STRINGPREP] (as specified in
       [XMPP-CORE]) for canonicalization (OPTIONAL)

   7.  Recombine local-part with mapped hostname to form local@domain
       address


3. Instant Messages

3.1 Overview

   Both XMPP and SIMPLE systems enable entities (often but not
   necessarily human users) to send "instant messages" to other
   entities.  The term "instant message" usually refers to messages sent
   between two entities for delivery in close to real time (rather than
   messages that are stored and forwarded to the intended recipient upon
   request).  Generally there are three kinds of instant message:





Saint-Andre, et al.      Expires August 8, 2004                 [Page 6]

Internet-Draft            XMPP SIMPLE Interop              February 2004


   o  Single messages, which are sent from the sender to the recipient
      outside the context of any one-to-one chat session or multi-user
      text conference.

   o  Chat messages, which are sent from the sender to the recipient in
      the context of a "message session" between the two entities.

   o  Groupchat messages, which are sent from a sender to multiple
      recipients in the context of a text conference (along the lines of
      [IRC]).

   This document addresses single messages only, since they form the
   "lowest common denominator" for instant messaging on the Internet.
   It is likely that future versions of this document will address chat
   messages as well, especially once the SIMPLE WG completes its work on
   one-to-one message sessions (a likely candidate for finalization is
   [SIMPLE-MSRP]).

   Instant messaging using XMPP message stanzas of type "normal" is
   specified in [XMPP-IM].  SIP/SIMPLE instant messaging using SIP
   requests of type MESSAGE (often called "pager-model" messaging) is
   specified in [SIP-IM].

   As described in [XMPP-IM], a single instant message is an XML
   <message/> stanza of type "normal" sent over an XML stream (since
   "normal" is the default for the 'type' attribute of the <message/>
   stanza, the attribute is often omitted).  In this document we will
   assume that such a message is sent from an XMPP client to an XMPP
   server over an XML stream negotiated between the client and the
   server, and that the client is controlled by a human user (this is a
   simplifying assumption introduced for explanatory purposes only; the
   XMPP sender could be a bot-controlled client, a component such as a
   workflow application, a server, etc.).  Continuing the tradition of
   Shakespeare examples in XMPP documentation, we will say that the XMPP
   user has an XMPP address of <juliet@example.com>.

   As described in [SIP-IM], a single instant message is a SIP MESSAGE
   request sent from a SIP user agent to an intended recipient who is
   most generally referenced by an Instant Message URI of the form
   "im:user@domain" but who may be referenced by a SIP or SIPS URI of
   the form "sip:user@domain" or "sips:user@domain".  Here again we
   introduce the simplifying assumption that the user agent is
   controlled by a human user, whom we shall dub <romeo@example.net>.

3.2 XMPP to SIMPLE

   When Juliet wants to send an instant message to Romeo, she interacts
   with her XMPP client, which generates an XMPP <message/> stanza.  The



Saint-Andre, et al.      Expires August 8, 2004                 [Page 7]

Internet-Draft            XMPP SIMPLE Interop              February 2004


   syntax of the <message/> stanza, including required and optional
   elements and attributes, is defined in [XMPP-IM].  The following is
   an example of such a stanza:

   Example: An XMPP message stanza:

     <message from='juliet@example.com/balcony'
              to='romeo@example.net'>
       <body>Art thou not Romeo, and a Montague?</body>
     </message>

   Upon receiving such a stanza, the XMPP server to which Juliet has
   connected either delivers it to a local recipient (if the hostname in
   the 'to' attribute matches one of the hostnames serviced by the XMPP
   server) or attempts to route it to the foreign domain that services
   the hostname in the 'to' attribute.  Naturally, in this document we
   assume that the hostname in the 'to' attribute is a SIMPLE instant
   messaging service hosted by a separate server.  As specified in
   [XMPP-IM], the XMPP server needs to determine the identity of the
   foreign domain, which it does by performing one or more [SRV]
   lookups.  For message stanzas, the order of lookups recommended by
   [XMPP-IM] is to first try the "_xmpp-server" service as specified in
   [XMPP-CORE] and to then try the "_im" service as specified in
   [IMP-SRV].  Here we assume that the first lookup will fail but that
   the second lookup will succeed and return a resolution
   "_im._simple.example.net.", since we have already assumed that the
   example.net hostname is running a SIMPLE instant messaging service.
   (Note: The XMPP server may have previously determined that the
   foreign domain is a SIMPLE server, in which case it would not need to
   perform the SRV lookups; the caching of such information is a matter
   of implementation and local service policy, and is therefore out of
   scope for this document.)

   Once the XMPP server has determined that the foreign domain is
   serviced by a SIMPLE server, it must determine how to proceed.  We
   here assume that the XMPP server contains or has available to it an
   XMPP-SIMPLE gateway.  The XMPP server would then deliver the message
   stanza to the XMPP-SIMPLE gateway.

   The XMPP-SIMPLE gateway is then responsible for translating the XMPP
   message stanza into a SIP MESSAGE request from the XMPP user to the
   SIMPLE user:

   Example: A SIP MESSAGE request:

     MESSAGE sip:romeo@example.net SIP/2.0
     Via: SIP/2.0/TCP julietpc.example.com;branch=z9hG4bK776sgdkse
     Max-Forwards: 70



Saint-Andre, et al.      Expires August 8, 2004                 [Page 8]

Internet-Draft            XMPP SIMPLE Interop              February 2004


     From: sip:juliet@example.com;tag=49583
     To: sip:romeo@example.net
     Call-ID: Hr0zny9l3@example.com
     CSeq: 1 MESSAGE
     Content-Type: text/plain
     Content-Length: 37

     Art thou not Romeo, and a Montague?

   Detailed recommendations regarding mapping or generation of SIP
   MESSAGE header fields by an XMPP-SIMPLE gateway will be provided in a
   future revision of this document.

3.3 SIMPLE to XMPP

   When Romeo wants to send an instant message to Juliet, he interacts
   with his SIP user agent, which generates a SIP MESSAGE request.  The
   syntax of the MESSAGE request is defined in [SIP-IM].  The following
   is an example of such a request:

   Example: Another SIP MESSAGE request:

     MESSAGE sip:juliet@example.com SIP/2.0
     Via: SIP/2.0/TCP romeopc.example.com;branch=eskdgs677Kb4Ghz9
     Max-Forwards: 70
     From: sip:romeo@example.net;tag=38594
     To: sip:juliet@example.com
     Call-ID: M4spr4vdu@example.net
     CSeq: 1 MESSAGE
     Content-Type: text/plain
     Content-Length: 26

     Neither, fair saint, if either thee dislike.

   Upon receiving such a request, a SIMPLE-XMPP gateway is responsible
   for translating it into an XMPP message stanza from the SIP user to
   the XMPP user:

   Example: Another XMPP message stanza:

     <message from='romeo@example.net'
              to='juliet@example.com'>
       <body>Neither, fair saint, if either thee dislike.</body>
     </message>

   Detailed recommendations regarding mapping or generation of XMPP
   message stanza elements and attributes by a SIMPLE-XMPP gateway will
   be provided in a future revision of this document.



Saint-Andre, et al.      Expires August 8, 2004                 [Page 9]

Internet-Draft            XMPP SIMPLE Interop              February 2004


4. Presence Information

4.1 Overview

   Both XMPP and SIMPLE systems enable entities (often but not
   necessarily human users) to send presence to other entities.  At a
   minimum, the term "presence" refers to information about an entity's
   availability for communication on a network (on/off), often
   supplemented by information that further specifies the entity's
   communications context (e.g., "do not disturb").  Some systems and
   protocols extend this notion even further and refer to any relatively
   ephemeral information about an entity as a kind of presence;
   categories of such "extended presence" include geographical location
   (e.g., GPS coordinates), user mood (e.g., grumpy), user activity
   (e.g., walking), and ambient environment (e.g., noisy).  In this
   document, we focus on the "least common denominator" of network
   availability only, although future revisions of this document may
   address broader notions of presence.  In addition, we address
   presence notifications only, not presence subscriptions.

   Presence using XMPP presence stanzas of type "available" or
   "unavailable" is specified in [XMPP-IM].  SIP/SIMPLE presence using a
   SIP event package for presence is specified in [SIP-PRES].

   As described in [XMPP-IM], presence information about an entity is
   communicated by means of an XML <presence/> stanza sent over an XML
   stream.  In this document we will assume that such a presence stanza
   is sent from an XMPP client to an XMPP server over an XML stream
   negotiated between the client and the server, and that the client is
   controlled by a human user (again, this is a simplifying assumption
   introduced for explanatory purposes only).  In general, XMPP presence
   is sent by the user to the user's server and then broadcasted to all
   entities who are subscribed to the user's presence information.

   As described in [SIP-PRES], presence information about an entity is
   communicated by means of a SIP NOTIFY event sent from a SIP user
   agent to an intended recipient who is most generally referenced by an
   Instant Message URI of the form "pres:user@domain" but who may be
   referenced by a SIP or SIPS URI of the form "sip:user@domain" or
   "sips:user@domain".  Here again we introduce the simplifying
   assumption that the user agent is controlled by a human user.

4.2 XMPP to SIMPLE

   When Juliet interacts with her XMPP client to modify her presence
   information (or when her client automatically updates her presence
   information, e.g. via an "auto-away" feature), her client generates
   an XMPP <presence/> stanza.  The syntax of the <presence/> stanza,



Saint-Andre, et al.      Expires August 8, 2004                [Page 10]

Internet-Draft            XMPP SIMPLE Interop              February 2004


   including required and optional elements and attributes, is defined
   in [XMPP-IM].  The following is an example of such a stanza:

   Example: An XMPP presence stanza:

     <presence from='juliet@example.com/balcony'/>

   Upon receiving such a stanza, the XMPP server to which Juliet has
   connected broadcasts it to all subscribers who are authorized to
   receive presence notifications from Juliet.  For each subscriber,
   broadcasting the presence notification involves either delivering it
   to a local recipient (if the hostname in the subscriber's address
   matches one of the hostnames serviced by the XMPP server) or
   attempting to route it to the foreign domain that services the
   hostname in the subscriber's address.  Naturally, in this document we
   assume that the hostname is a SIMPLE presence service hosted by a
   separate server.  As specified in [XMPP-IM], the XMPP server needs to
   determine the identity of the foreign domain, which it does by
   performing one or more [SRV] lookups.  For presence stanzas, the
   order of lookups recommended by [XMPP-IM] is to first try the
   "_xmpp-server" service as specified in [XMPP-CORE] and to then try
   the "_pres" service as specified in [IMP-SRV].  Here we assume that
   the first lookup will fail but that the second lookup will succeed
   and return a resolution "_pres._simple.example.net.", since we have
   already assumed that the example.net hostname is running a SIMPLE
   presence service.  (Note: The XMPP server may have previously
   determined that the foreign domain is a SIMPLE server, in which case
   it would not need to perform the SRV lookups; the caching of such
   information is a matter of implementation and local service policy,
   and is therefore out of scope for this document.)

   Once the XMPP server has determined that the foreign domain is
   serviced by a SIMPLE server, it must determine how to proceed.  We
   here assume that the XMPP server contains or has available to it an
   XMPP-SIMPLE gateway.  The XMPP server would then deliver the presence
   stanza to the XMPP-SIMPLE gateway.

   The XMPP-SIMPLE gateway is then responsible for translating the XMPP
   presence stanza into a SIP NOTIFY request and included PIDF document
   from the XMPP user to the SIMPLE user:

   Example: A SIP NOTIFY request:

     NOTIFY sip:romeo@example.net SIP/2.0
     Via: SIP/2.0/TCP simple.example.net;branch=z9hG4bKna998sk
     From: <sip:juliet@example.com>;tag=ffd2
     To: <sip:romeo@example.net>;tag=xfg9
     Call-ID: j4s0h4vny@example.com



Saint-Andre, et al.      Expires August 8, 2004                [Page 11]

Internet-Draft            XMPP SIMPLE Interop              February 2004


     Event: presence
     Subscription-State: active;expires=599
     Max-Forwards: 70
     CSeq: 8775 NOTIFY
     Contact: sip:simple.example.net
     Content-Type: application/cpim-pidf+xml
     Content-Length: 192

     <?xml version='1.0' encoding='UTF-8'?>
     <presence xmlns='urn:ietf:params:xml:ns:pidf'
               entity='pres:juliet@example.com'>
       <tuple id='balcony'>
         <status>
           <basic>open</basic>
         </status>
       </tuple>
     </presence>

   Detailed recommendations regarding mapping or generation of SIP
   NOTIFY header fields and PIDF document elements and attributes by an
   XMPP-SIMPLE gateway will be provided in a future revision of this
   document.

4.3 SIMPLE to XMPP

   When Romeo changes his presence, his SIP user agent generates a SIP
   NOTIFY request.  The syntax of the NOTIFY request is defined in
   [SIP-PRES].  The following is an example of such a request:

   Example: Another SIP NOTIFY request:

     NOTIFY sip:juliet@example.com SIP/2.0
     Via: SIP/2.0/TCP simple.example.net;branch=z9hG4bKna998sk
     From: <sip:romeo@example.net>;tag=ffd2
     To: <sip:juliet@example.com>;tag=xfg9
     Call-ID: j0sj4sv1m@example.net
     Event: presence
     Subscription-State: active;expires=599
     Max-Forwards: 70
     CSeq: 8775 NOTIFY
     Contact: sip:simple.example.net
     Content-Type: application/cpim-pidf+xml
     Content-Length: 193

     <?xml version='1.0' encoding='UTF-8'?>
     <presence xmlns='urn:ietf:params:xml:ns:pidf'
               entity='pres:romeo@example.net'>
       <tuple id='orchard'>



Saint-Andre, et al.      Expires August 8, 2004                [Page 12]

Internet-Draft            XMPP SIMPLE Interop              February 2004


         <status>
           <basic>closed</basic>
         </status>
       </tuple>
     </presence>

   Upon receiving such a request, a SIMPLE-XMPP gateway is responsible
   for translating it into an XMPP presence stanza from the SIP user to
   the XMPP user:

   Example: Another XMPP presence stanza:

     <presence from='romeo@example.net'
               to='juliet@example.com/balcony'
               type='unavailable'/>

   Detailed recommendations regarding mapping or generation of XMPP
   presnce stanza elements and attributes by a SIMPLE-XMPP gateway will
   be provided in a future revision of this document.

5. IANA Considerations

   This document requires no action on the part of the IANA.

6. Security Considerations

   Detailed security considerations for instant messaging and presence
   protocols are given in [IMP-REQS], specifically in Sections 5.1
   through 5.4.  Detailed security considerations for XMPP are given in
   XMPP Core [XMPP-CORE].  Detailed security considerations for SIMPLE
   messaging are given in [SIP-IM] and for SIMPLE presence are given in
   [SIP-PRES] (see also the security considerations for the Session
   Initiation Protocol given in [SIP]).

   This document specifies methods for exchanging instant messages and
   presence information through a gateway that translates between SIMPLE
   and XMPP.  Such a gateway MUST be compliant with the minimum security
   requirements of the instant messaging and presence protocols for
   which it translates (i.e., SIMPLE and XMPP).  The introduction of
   gateways to the security model of instant messaging and presence
   specified in [IMP-REQS] introduces some new risks.  In particular,
   end-to-end security properties (especially confidentiality and
   integrity) between instant messaging and presence user agents that
   interface through a SIMPLE-XMPP gateway can be provided only if
   common formats are supported.  Specification of those common formats
   is out of scope for this document, although it is recommended to use
   [MSGFMT] for instant messages and [PIDF] for presence.




Saint-Andre, et al.      Expires August 8, 2004                [Page 13]

Internet-Draft            XMPP SIMPLE Interop              February 2004


7. Open Issues

   This document has made certain simplifying assumptions and has ruled
   a number of problematic issues out of scope for now.  However, future
   revisions of this document will attempt to address these issues,
   which include:

   o  Internationalized domain names

   o  Chat messages / instant messaging sessions

   o  Presence subscriptions

   o  More detailed syntax mappings

   o  Error handling and specific conditions

   o  Address resolution (including SRV lookups) from SIMPLE to XMPP

   o  End-to-end object encryption using common formats (e.g., PIDF for
      presence)

   o  Ensuring end-to-end channel encryption using TLS

   o  Blocking communications (whitelisting/blacklisting) across systems


8. Acknowledgements

   The authors wish to thank Nathaniel Borenstein and Rohan Mahy for
   suggestions and encouragement.

Normative References

   [IMP-SRV]  Peterson, J., "Address Resolution for Instant Messaging
              and Presence", draft-ietf-impp-srv-04 (work in progress),
              October 2003.

   [PIDF]     Fujimoto, S., Sugano, H., Klyne, G., Bateman, A., Carr, W.
              and J. Peterson, "CPIM Presence Information Data Format",
              draft-ietf-impp-cpim-pidf-08 (work in progress), May 2003.

   [SIP]      Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,
              A., Peterson, J., Sparks, R., Handley, M. and E. Schooler,
              "SIP: Session Initiation Protocol", RFC 3261, June 2002.

   [SIP-IM]   Campbell, B., Rosenberg, J., Schulzrinne, H., Huitema, C.
              and D. Gurle, "Session Initiation Protocol (SIP) Extension



Saint-Andre, et al.      Expires August 8, 2004                [Page 14]

Internet-Draft            XMPP SIMPLE Interop              February 2004


              for Instant Messaging", RFC 3428, December 2002.

   [SIP-PRES]
              Rosenberg, J., "A Presence Event Package for the Session
              Initiation Protocol (SIP)", draft-ietf-simple-presence-10
              (work in progress), January 2003.

   [SRV]      Gulbrandsen, A., Vixie, P. and L. Esibov, "A DNS RR for
              specifying the location of services (DNS SRV)", RFC 2782,
              February 2000.

   [STRINGPREP]
              Hoffman, P. and M. Blanchet, "Preparation of
              Internationalized Strings ("STRINGPREP")", RFC 3454,
              December 2002.

   [TERMS]    Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [URL-GUIDE]
              Masinter, L., Alvestrand, H., Zigmond, D. and R. Petke,
              "Guidelines for new URL Schemes", RFC 2718, November 1999.

   [XMPP-CORE]
              Saint-Andre, P., "Extensible Messaging and Presence
              Protocol (XMPP): Core", draft-ietf-xmpp-core-22 (work in
              progress), January 2004.

   [XMPP-IM]  Saint-Andre, P., "Extensible Messaging and Presence
              Protocol (XMPP): Instant Messaging and Presence",
              draft-ietf-xmpp-im-21 (work in progress), January 2004.

Informative References

   [CPIM]     Peterson, J., "Common Profile for Instant Messaging
              (CPIM)", draft-ietf-impp-im-04 (work in progress), August
              2003.

   [CPP]      Peterson, J., "Common Profile for Presence (CPP)",
              draft-ietf-impp-pres-04 (work in progress), August 2003.

   [DRAFT-UMPP]
              Mahy, R., "A Unified Proposal for Server-to-Server
              Presence and Instant Messaging",
              draft-mahy-impp-unified-proposal-00 (work in progress),
              February 2004.

   [IDNA]     Faltstrom, P., Hoffman, P. and A. Costello,



Saint-Andre, et al.      Expires August 8, 2004                [Page 15]

Internet-Draft            XMPP SIMPLE Interop              February 2004


              "Internationalizing Domain Names in Applications (IDNA)",
              RFC 3490, March 2003.

   [IMP-MODEL]
              Day, M., Rosenberg, J. and H. Sugano, "A Model for
              Presence and Instant Messaging", RFC 2778, February 2000.

   [IMP-REQS]
              Day, M., Aggarwal, S. and J. Vincent, "Instant Messaging /
              Presence Protocol Requirements", RFC 2779, February 2000.

   [IRC]      Oikarinen, J. and D. Reed, "Internet Relay Chat Protocol",
              RFC 1459, May 1993.

   [MSGFMT]   Atkins, D. and G. Klyne, "Common Presence and Instant
              Messaging: Message Format", draft-ietf-impp-cpim-msgfmt-08
              (work in progress), January 2003.

   [SIMPLE-CPIM]
              Rosenberg, J. and B. Campbell, "CPIM Mapping of SIMPLE
              Presence and Instant Messaging",
              draft-ietf-simple-cpim-mapping-01 (work in progress), June
              2002.

   [SIMPLE-MSRP]
              Campbell, B., Rosenberg, J., Sparks, R. and P. Kyzivat,
              "The Message Session Relay Protocol",
              draft-ietf-simple-message-sessions-03 (work in progress),
              January 2004.

   [XMPP-CPIM]
              Saint-Andre, P., "XMPP CPIM Mapping",
              draft-ietf-xmpp-cpim-03 (work in progress), November 2003.


Authors' Addresses

   Peter Saint-Andre
   Jabber Software Foundation


   Avshalom Houri
   IBM


   Joe Hildebrand
   Jabber, Inc.




Saint-Andre, et al.      Expires August 8, 2004                [Page 16]

Internet-Draft            XMPP SIMPLE Interop              February 2004


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights. Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11. Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard. Please address the information to the IETF Executive
   Director.


Full Copyright Statement

   Copyright (C) The Internet Society (2004). All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works. However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assignees.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION



Saint-Andre, et al.      Expires August 8, 2004                [Page 17]

Internet-Draft            XMPP SIMPLE Interop              February 2004


   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.











































Saint-Andre, et al.      Expires August 8, 2004                [Page 18]

