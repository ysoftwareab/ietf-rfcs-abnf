d = 0x00000000000000e40000000000000142 +
       0x5e472f846657e0fcb3821488f1fc0c8d * i

x3 = ---------------------------, y3 = ---------------------------
         1 + d * x1 * y1 * x2 * y2         1 - d * x1 * y1 * x2 * y2

N = 0x29cbc14e5e0a72f05397829cbc14e5dfbd004dfe0f79992fb2540ec7768ce7

A = X1^2
B = Y1^2
C = 2 * Z1^2
D = A + B
E = (X1 + Y1)^2 - D
F = B - A
G = C - F
X3 = E * G
Y3 = D * F
Z3 = F * G
Ta3 = E
Tb3 = D
A = D1 * D2
B = N1 * N2
C = T2 * F1
D = Z2 * E1
E = B - A
F = D - C
G = D + C
H = B + A
X3 = E * F
Y3 = G * H
Z3 = F * G
Ta3 = E
Tb3 = H
Q = DBL(P)
m = (m - d[i]) / 16
Q = sign * T[ind]
Q = DBL(Q)
Q = DBL(Q)
Q = DBL(Q)
Q = DBL(Q)
ind = (abs(d[i]) - 1) / 2
sign = sgn(d[i])
S = sign * T[ind]
Q = ADD(Q, S)
A = X1^2
B = Y1^2
C = A + B
D = A - B
X2 = ctau * X1 * Y1 * D
Y2 = -(2 * Z1^2 + D) * C
Z2 = C * D
A = X1^2
B = Y1^2
C = A + B
Ta2 = B - A
D = 2 * Z1^2 - Ta2
Tb2 = ctaudual * X1 * Y1
X2 = C * Tb2
Y2 = D * Ta2
Z2 = C * D
A = cphi0 * X1 * Y1
B = Y1 * Z1
C = Y1^2
D = Z1^2
F = D^2
G = B^2
H = C^2
I = cphi1 * B
J = C + cphi2 * D
K = cphi8 * G + H + cphi9 * F
X2 = conj(A * K * (I + J) * (I - J))
L = C + cphi4 * D
M = cphi3 * B
N = (L + M) * (L - M)
Y2 = conj(cphi5 * D * N * (H + cphi6 * G + cphi7 * F))
Z2 = conj(B * K * N)
A = conj(X1)
B = conj(Y1)
C = conj(Z1)^2
D = A^2
F = B^2
G = B * (D + cpsi2 * C)
H = -(D + cpsi4 * C)
X2 = cpsi1 * A * C * H
Y2 = G * (D + cpsi3 * C)
Z2 = G * H
b1 = bit(v1, i+1)
bj = bit(vj, 0)
c = (b1 or bj) xor b1
vj = vj / 2 + c
Q = s[64] * T[d[64]]
Q = DBL(Q)
Q = ADD(Q, s[i] * T[di])
P1 = DBL(P)                 # [2]P
P2 = ADD(P1, P)             # [3]P
P3 = DBL(DBL(DBL(DBL(P2)))) # [48]P
Q = ADD(P3, P)              # [49]P
Q = DBL(DBL(DBL(Q))         # [392]P

Gx = 0x1A3472237C2FB305286592AD7B3833AA +
        0x1E1F553F2878AA9C96869FB360AC77F6\*i
Gy = 0x0E3FEE9BA120785AB924A2462BCBB287 +
        0x6E1C4AF8630E024249A7C344844C8B5C\*i
G = (X, Y)

KAB = KBA.  The y coordinate of K, represented as a 32 byte string as
ctau = 0x1964de2c3afad20c74dcd57cebce74c3 +
          0x000000000000000c0000000000000012 * i

ctaudual = 0x4aa740eb230586529ecaa6d9decdf034 +
              0x7ffffffffffffff40000000000000011 * i

cphi0 = 0x0000000000000005fffffffffffffff7 +
           0x2553a0759182c3294f65536cef66f81a * i
cphi1 = 0x00000000000000050000000000000007 +
           0x62c8caa0c50c62cf334d90e9e28296f9 * i
cphi2 = 0x000000000000000f0000000000000015 +
           0x78df262b6c9b5c982c2cb7154f1df391 * i
cphi3 = 0x00000000000000020000000000000003 +
           0x5084c6491d76342a92440457a7962ea4 * i
cphi4 = 0x00000000000000030000000000000003 +
           0x12440457a7962ea4a1098c923aec6855 * i
cphi5 = 0x000000000000000a000000000000000f +
           0x459195418a18c59e669b21d3c5052df3 * i
cphi6 = 0x00000000000000120000000000000018 +
           0x0b232a8314318b3ccd3643a78a0a5be7 * i
cphi7 = 0x00000000000000180000000000000023 +
           0x3963bc1c99e2ea1a66c183035f48781a * i
cphi8 = 0x00000000000000aa00000000000000f0 +
           0x1f529f860316cbe544e251582b5d0ef0 * i
cphi9 = 0x00000000000008700000000000000bef +
           0x0fd52e9cfe00375b014d3e48976e2505 * i

cpsi1 = 0x2af99e9a83d54a02edf07f4767e346ef +
           0x00000000000000de000000000000013a * i
cpsi2 = 0x00000000000000e40000000000000143 +
           0x21b8d07b99a81f034c7deb770e03f372 * i
cpsi3 = 0x00000000000000060000000000000009 +
           0x4cb26f161d7d69063a6e6abe75e73a61 * i
cpsi4 = 0x7ffffffffffffff9fffffffffffffff6 +
           0x334d90e9e28296f9c59195418a18c59e * i

L1 = 0x7fc5bb5c5ea2be5dff75682ace6a6bd66259686e09d1a7d4f
L2 = 0x38fd4b04caa6c0f8a2bd235580f468d8dd1ba1d84dd627afb
L3 = 0x0d038bf8d0bffbaf6c42bd6c965dca9029b291a33678c203c
L4 = 0x31b073877a22d841081cbdc3714983d8212e5666b77e7fdc0
b1 = [ 0x0906ff27e0a0a196, -0x1363e862c22a2da0,
          0x07426031ecc8030f, -0x084f739986b9e651]
b2 = [ 0x1d495bea84fcc2d4, -0x0000000000000001,
          0x0000000000000001,  0x25dbc5bc8dd167d0]
b3 = [ 0x17abad1d231f0302,  0x02c4211ae388da51,
         -0x2e4d21c98927c49f,  0x0a9e6f44c02ecd97]
b4 = [ 0x136e340a9108c83f,  0x3122df2dc3e0ff32,
         -0x068a49f02aa8a9b5, -0x18d5087896de0aea]

s0 = X[0] >> 126
s1 = X[1] >> 126
B = Y encoded following {{representation-of-curve-points}}
u = y^2 - 1             # Set u = u0 + u1 * i
v = d*y^2 + 1           # Set v = v0 + v1 * i

t0 = u0*v0 + u1*v1;
t1 = u1*v0 - u0*v1;
t2 = v0^2 + v1^2
t3 = (t0^2 + t1^2)^(2^125)

t = 2*(t0 + t3)
t = 2*(t0 - t3)

a = (t * t2^3)^(2^125-1)
b = (a * t2) * t
x0 = b/2
x1 = (a * t2) * t1
x = x0 + x1 * i
x = -x

x = conj(x)
