



Network Working Group                                         B. Wu, Ed.
Internet-Draft                                             D. Dhody, Ed.
Intended status: Standards Track                     Huawei Technologies
Expires: September 9, 2020                                        L. Han
                                                            China Mobile
                                                           March 8, 2020


                 A Yang Data Model for Transport Slice
                 draft-wd-teas-transport-slice-yang-00

Abstract

   This document provides a YANG data model for the transport slice
   service.  The model can be used by a client management system of the
   transport slice controller to request, configure, and manage the
   components of an transport slice service.

   The YANG modules in this document conforms to the Network Management
   Datastore Architecture (NMDA) defined in RFC 8342.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 9, 2020.

Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect



Wu, et al.              Expires September 9, 2020               [Page 1]

Internet-Draft         Transport Slice YANG model             March 2020


   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Conventions used in this document . . . . . . . . . . . . . .   3
     2.1.  Tree Diagrams . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Design of the Data Model  . . . . . . . . . . . . . . . . . .   4
   4.  Transport Slice SLO Policy  . . . . . . . . . . . . . . . . .   7
   5.  Transport Slice Monitoring  . . . . . . . . . . . . . . . . .   8
   6.  Transport Slice Module  . . . . . . . . . . . . . . . . . . .   8
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .  21
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  22
   9.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  22
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  23
     10.1.  Normative References . . . . . . . . . . . . . . . . . .  23
     10.2.  Informative References . . . . . . . . . . . . . . . . .  25
   Appendix A.  Appendix A Comparison with Other Possible Transport
                Slice Models . . . . . . . . . . . . . . . . . . . .  25
   Appendix B.  Appendix B Transporst Slice Traffic Criteria . . . .  26
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  27

1.  Introduction

   This document provides a YANG[RFC7950] data model for transport Slice
   Service.

   The YANG model discussed in this document is defined based on the
   description of the transport slice
   in[I-D.nsdt-teas-transport-slice-definition] and is used to operate
   customer-driven transport Slice during the transport Slice Network
   instantiation, and the operations includes service creation,
   modification, deletion, and monitoring.

   The YANG model discussed in this document suggests an abstract,
   technology independent model, which includes three major constructs:

   o  Transport Slice(TS): that describe a logical network that
      interconnects Transport Slice End Points.

   o  Ts-Endpoint: is a logical point at an external interface of a
      Transport slice network, to which a particular subset of traffic
      that traverse the external interface, and the traffic is mapped to
      a specific transport slice.




Wu, et al.              Expires September 9, 2020               [Page 2]

Internet-Draft         Transport Slice YANG model             March 2020


   o  TS-Member: that describe how each link association between any
      slice endpoint, it uses to collect the performance data of this
      unidirectional link.

   The YANG models can be used with network management protocols such as
   NETCONF[RFC6241] or RESTCONF to install, manipulate, and delete the
   configuration of network devices.

   The transport Slice Network operational state is included in the same
   tree as the configuration consistent with Network Management
   Datastore Architecture[RFC8342].

2.  Conventions used in this document

   The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP14, [RFC2119], [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   The following terms are defined in [RFC6241] and are used in this
   specification:

   o  client

   o  configuration data

   o  server

   o  state data

   The following terms are defined in [RFC7950] and are used in this
   specification:

   o  augment

   o  data model

   o  data node

   The terminology for describing YANG data models is found in
   [RFC7950].

2.1.  Tree Diagrams

   Tree diagrams used in this document follow the notation defined in
   [RFC8340].




Wu, et al.              Expires September 9, 2020               [Page 3]

Internet-Draft         Transport Slice YANG model             March 2020


3.  Design of the Data Model

   The model presented in this document has the following transport
   network slicing and ACTN framework context.

             +----------------------------------------+
             |     A higher level system              |
             |  (e.g. E2E network slice orchestrator) |
             +----------------+-----------------------+
                              |
                              | transport slice YANG
                              |
                              |
        +---------------------+--------------------------+
        |        Transport Slice Controller              |
        +------------------------------------------------+

                       transport slice yang context

   In the use case of 5G transport application, E2E network slice
   orchestrator provides service request to the transport slice
   controller (i.e., CNC).  The interface between the higher level
   system and transport networks is used to facilitate dynamic transport
   slice creation and its lifecycle management with proper feedback loop
   for monitoring.

                 +--------------------------+
                 |                          |
  +-----+  /--\  |                          |  /--\   +-------+
  |     +-+ EP1+-+                          +-+ EP3+--+ Site2 |
  |Site1|  \--/  |                          |  \--/   +-------+
  |     |        |                          |
  |     |  /--\  |                          |  /--\   +-------+
  |     +-+ EP2|-+                          +-+ EP4+--+ Site3 |
  +-----+  \--/  |                          |  \--/   +-------+
                 |        Transport         |
                 |        Network           |
                 +--------------------------+
            |                                    |
            |<-----Transport Slice n------------>|
            |                                    |


      TS-Member 1      EP1-EP2
      TS-Member 2      EP1-EP3
      TS-Member 3      EP2-EP3
      TS-Member 4      EP2-EP4
 Figure 1: An example of TS-Endpoints and TS-Members of a transport slice



Wu, et al.              Expires September 9, 2020               [Page 4]

Internet-Draft         Transport Slice YANG model             March 2020


   As shown in Figure 1, a Transport Slice(TS) links together End Points
   at external Interfaces to the sites, which are customer endpoints
   that request a transport slicing service.

   For a particular TS service, a SLO profile needs to be specified.
   Either a standard profile or a custom profile could be chosen.  The
   "slo-profile" container defines the transport slice SLO policy to be
   used.

   The type of TS topology is required for configuration.  The model
   supports any-to-any, Hub and Spoke (where Hubs can exchange traffic),
   and the different combinations, which are supported through the
   order-list of topology.  New topologies could be added via
   augmentation.  By default, the any-to-any VPN service topology is
   used.

   In addition, "ep-role" also needs to be defined, which specifies the
   role of the end point in a particular TS topology.  In the any-to-any
   VPN service topology, all end points MUST have the same role, which
   will be "any-to-any-role".  In the Hub-and-Spoke topology, end points
   MUST have a Hub role or a Spoke role.

   At each external site, one or multiple TS End points could be connect
   to the Transport Slice.  In the example above, when a site is
   connected to two transport network edge devices in one Transport
   Slice, two End Points are created.

   A site could connect with transport network edge device with the
   following ways:

   o  a distinct physical connection

   o  a logical Layer 2 connection

   o  An IP tunnel(e.g. using GRE Tunnel)

   These connection could be shared with different Transport Slices or
   be separated for each Transport Slice.

   A TS End Point is a logical entity at an external Interface to a
   customer site.  A number of slice specific configuration must be
   agreed with a customer site and the transport slice, and one TS End
   Point's attributes may not be same with anotherTS End Point's.  The
   attributes may include some technology specific parameters, such as
   connections, encapsulation, and routing protocols, etc.  This model
   can be augmented by referring to the parameters of L3SM [RFC8299] or
   L2SM [RFC8466] .




Wu, et al.              Expires September 9, 2020               [Page 5]

Internet-Draft         Transport Slice YANG model             March 2020


   At the external Interface, the particular subset of the transport is
   identified either by a separate interface or by the combination of
   interface and fields in the packet.  The container 'ts-traffic-match'
   is defined under "endpoint" list to specify the mapping of slice
   traffic in case of mapping slice traffic by packet fields through
   interface shared between multiple transport slices.

   A TS Member is an abstract entity which represents transport
   resources mapped to this particular Transport Slice.  A TS Member may
   encompass customer site links, edge points of the PE, intra-domain
   paths, and inter-domain logical links.

   module: ietf-transport-slice
     +--rw transport-slices
        +--rw slice-profiles
        |  +--rw slo-profile* [id]
        |     +--rw id                     string
        |     +--rw profile-description?   string
        +--rw transport-slice* [ts-id]
           +--rw ts-id          uint32
           +--rw ts-name?       string
           +--rw ts-topology*   identityref
           +--rw slo-profile
           |  +--rw (slo-profile)?
           |     +--:(standard)
           |     |  +--rw profile?         leafref
           |     +--:(custom)
           |        +--rw ts-slo-policy
           |           +--rw isolation-type?      identityref
           |           +--rw latency
           |           |  +--rw one-way-latency?   uint32
           |           |  +--rw two-way-latency?   uint32
           |           +--rw jitter
           |           |  +--rw one-way-jitter?   uint32
           |           |  +--rw two-way-jitter?   uint32
           |           +--rw loss
           |           |  +--rw one-way-loss?   decimal64
           |           |  +--rw two-way-loss?   decimal64
           |           +--rw availability-type?   identityref
           +--rw status
           |  +--rw admin-enabled?   boolean
           |  +--ro oper-status?     operational-type
           +--rw ts-endpoint* [ep-id]
           |  +--rw ep-id                     uint32
           |  +--rw ep-name?                  string
           |  +--rw ep-role*                  identityref
           |  +--rw site-access-parameters
           |  |  +--rw site-name?               string



Wu, et al.              Expires September 9, 2020               [Page 6]

Internet-Draft         Transport Slice YANG model             March 2020


           |  |  +--rw availability-priority?   uint32
           |  +--rw node-id?                  string
           |  +--rw tp-id?                    string
           |  +--rw bandwidth-slo
           |  |  +--rw incoming-bandwidth
           |  |  |  +--rw guaranteed-bandwidth?   te-types:te-bandwidth
           |  |  |  +--rw max-bandwidth?          te-types:te-bandwidth
           |  |  +--rw outgoing-bandwidth
           |  |     +--rw guaranteed-bandwidth?   te-types:te-bandwidth
           |  |     +--rw max-bandwidth?          te-types:te-bandwidth
           |  +--rw mtu                       uint16
           |  +--rw ts-traffic-criteria
           |  |  +--rw vlan?            uint8
           |  |  +--rw dscp?            inet:dscp
           |  |  +--rw src-ip-prefix?   inet:ip-prefix
           |  +--rw status
           |  |  +--rw admin-enabled?   boolean
           |  |  +--ro oper-status?     operational-type
           |  +--ro ep-monitoring
           |     +--ro incoming-utilized-bandwidth?
           |     |       te-types:te-bandwidth
           |     +--ro incoming-bw-utilization        decimal64
           |     +--ro outgoing-utilized-bandwidth?
           |     |       te-types:te-bandwidth
           |     +--ro outgoing-bw-utilization        decimal64
           +--rw ts-member* [ts-member-id]
              +--rw ts-member-id            uint32
              +--rw src
              |  +--rw src-ts-ep-id?   leafref
              +--rw dest
              |  +--rw dest-ts-ep-id?   leafref
              +--rw metric-type?            ts-metric-type
              +--ro ts-member-monitoring
                 +--ro latency?   uint32
                 +--ro jitter?    uint32
                 +--ro loss?      decimal64

4.  Transport Slice SLO Policy

   Transport slice slo is specified with two parts.  One part is per-
   slice SLO defined in container 'slo-profile', the other part is
   described in container 'incoming-bandwidth' and container 'outgoing-
   bandwidth' under 'end-point'.

   The Transport Slice common attributes are as follows:

   o  Isolation: indicates that a transport slice can be enforced as
      physical resource isolation or logical resource allocations.  For



Wu, et al.              Expires September 9, 2020               [Page 7]

Internet-Draft         Transport Slice YANG model             March 2020


      physical resource isolation, it implies that the forwarding,
      policy and address spaces are local with in a transport slice and
      instantiation of one slice does not conflict with another slice.
      For logical isolation, only policy and address spaces are isolated
      from another slice.

   o  latency: indicates the latency constraint of the slice.

   o  Jitter: indicates the jitter constraint of the slice.

   o  Packet loss: indicates reliability constraint.

   o  Availability: Availability is a probabilistic measure of the
      length of time that a slice instance functions without a network
      failure.  The availability level will need to be translated into
      network specific policies such as the protection policy associated
      with the slice.

   o  MTU: Specifies the maximum packet length that the slice gurantee
      to be able to carry across.

   The Bandwidth constraint is applied at each End Point of a Transport
   Slice.  The bandwidth container is used to define a guaranteed amount
   of bandwidth and also a maximum bandwidth for the transport slice.

5.  Transport Slice Monitoring

   This model also describes performance status of a transport slice.
   The statistics are described in individual TS link, 'ts-member-
   monitoring', and an End Point, 'ep-monitoring'.

   This model does not define monitoring enabling nodes.  The mechanism
   defined in [RFC8640] and [RFC8641] can be used for either periodic or
   on-demand subscription.

   By specifying subtree filters or xpath filters to 'ts-member' or
   'endpoint' ,so that only interested contents will be sent.  These two
   mechanism can be used for monitoring the transport slice performance
   status so that the client management system could initiate
   modification based on the transport running status.

6.  Transport Slice Module

   <CODE BEGINS> file "ietf-transport-slice@2020-03-03.yang"

module ietf-transport-slice {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-transport-slice";



Wu, et al.              Expires September 9, 2020               [Page 8]

Internet-Draft         Transport Slice YANG model             March 2020


  prefix ts;

  import ietf-inet-types {
    prefix inet;
  }
  import ietf-te-types {
    prefix te-types;
  }

  organization
    "IETF Traffic Engineering Architecture and Signaling (TEAS)
     Working Group";
  contact
    "WG Web:  <https://tools.ietf.org/wg/teas/>
     WG List:  <mailto:teas@ietf.org>
     Editor: Bo Wu <lana.wubo@huawei.com>
           : Dhruv Dhody <dhruv.ietf@gmail.com>";
  description
    "This module contains a YANG module for the Transport Slice.";

  revision 2020-03-03 {
    description
      "initial version.";
    reference
      "RFC XXXX: A Yang Data Model for Transport Slice Operation";
  }

  /* Features */
  /* Identities */

  identity ts-topology {
    description
      "Base identity for vpn topology.";
  }

  identity any-to-any {
    base ts-topology;
    description
      "Identity for any-to-any VPN topology.";
  }

  identity hub-spoke {
    base ts-topology;
    description
      "Identity for Hub-and-Spoke VPN topology.";
  }

  identity ep-role {



Wu, et al.              Expires September 9, 2020               [Page 9]

Internet-Draft         Transport Slice YANG model             March 2020


    description
      "Site Role in a transport slice topology ";
  }

  identity any-to-any-role {
    base ep-role;
    description
      "Site in an any-to-any transport slice.";
  }

  identity hub {
    base ep-role;
    description
      "Hub Role in a Hub-and-Spoke transport slice.";
  }

  identity spoke {
    base ep-role;
    description
      "Spoke Role in a Hub-and-Spoke transport slice.";
  }

  identity isolation-type {
    description
      "Base identity from which specific isolation types are derived.";
  }

  identity physical-isolation {
    base isolation-type;
    description
      "physical isolation.";
  }

  identity logical-isolation {
    base isolation-type;
    description
      "logical-isolation.";
  }

  /*
   * Identity for availability-type
   */

  identity availability-type {
    description
      "Base identity from which specific map types are derived.";
  }




Wu, et al.              Expires September 9, 2020              [Page 10]

Internet-Draft         Transport Slice YANG model             March 2020


  identity level-1 {
    base availability-type;
    description
      "level 1: 99.9999%";
  }

  identity level-2 {
    base availability-type;
    description
      "level 2: 99.999%";
  }

  identity level-3 {
    base availability-type;
    description
      "level 3: 99.99%";
  }

  identity level-4 {
    base availability-type;
    description
      "level 4: 99.9%";
  }

  identity level-5 {
    base availability-type;
    description
      "level 5: 99%";
  }

  /* typedef */

  typedef operational-type {
    type enumeration {
      enum up {
        value 0;
        description
          "Operational status UP.";
      }
      enum down {
        value 1;
        description
          "Operational status DOWN";
      }
      enum unknown {
        value 2;
        description
          "Operational status UNKNOWN";



Wu, et al.              Expires September 9, 2020              [Page 11]

Internet-Draft         Transport Slice YANG model             March 2020


      }
    }
    description
      "This is a read-only attribute used to determine the
       status of a particular element";
  }

  typedef ts-metric-type {
    type enumeration {
      enum one-way {
        description
          "represents one-way monitoring type";
      }
      enum two-way {
        description
          "represents two-way monitoring type";
      }
    }
    description
      "enumerated type of monitoring on a ts-member ";
  }

  /* Groupings */

  grouping status-params {
    container status {
      leaf admin-enabled {
        type boolean;
        description
          "Administrative Status UP/DOWN";
      }
      leaf oper-status {
        type operational-type;
        config false;
        description
          "Operations status";
      }
      description
        "";
    }
    description
      "Grouping used to join operational and administrative status
       is re used in the Site Network Acess and in the VPN-Node";
  }

  grouping ts-traffic-classifier {
    container ts-traffic-criteria {
      leaf vlan {



Wu, et al.              Expires September 9, 2020              [Page 12]

Internet-Draft         Transport Slice YANG model             March 2020


        type uint8 {
          range "0..7";
        }
        description
          "802.1Q matching.";
      }
      leaf dscp {
        type inet:dscp;
        description
          "DSCP value.";
      }
      leaf src-ip-prefix {
        type inet:ip-prefix;
        description
          "Match on IPv4 src or IPv6 src address.";
      }
      description
        "Describes traffic-matching criteria.";
    }
    description
      "Grouping for traffic definition.";
  }

  grouping ep-monitoring-parameters {
    container ep-monitoring {
      leaf incoming-utilized-bandwidth {
        type te-types:te-bandwidth;
        description
          "Bandwidth utilization that represents the actual
           utilization of the incoming endpoint.";
      }
      leaf incoming-bw-utilization {
        type decimal64 {
          fraction-digits 5;
          range "0..100";
        }
        units "percent";
        mandatory true;
        description
          "To be used to define the bandwidth utilization
           as a percentage of the available service bandwidth.";
      }
      leaf outgoing-utilized-bandwidth {
        type te-types:te-bandwidth;
        description
          "Bandwidth utilization that represents the actual
           utilization of the incoming endpoint.";
      }



Wu, et al.              Expires September 9, 2020              [Page 13]

Internet-Draft         Transport Slice YANG model             March 2020


      leaf outgoing-bw-utilization {
        type decimal64 {
          fraction-digits 5;
          range "0..100";
        }
        units "percent";
        mandatory true;
        description
          "To be used to define the bandwidth utilization
           as a percentage of the available service bandwidth.";
      }
      config false;
      description
        "Grouping for ep-monitoring-parameters.";
    }
  }

  grouping common-monitoring-parameters {
    description
      "Grouping for link-monitoring-parameters.";
    leaf latency {
      type uint32;
      units "usec";
      description
        "The latency statistics per TS member.";
    }
    leaf jitter {
      type uint32 {
        range "0..16777215";
      }
      description
        "The jitter statistics per TS member.";
    }
    leaf loss {
      type decimal64 {
        fraction-digits 6;
        range "0 .. 50.331642";
      }
      description
        "Packet loss as a percentage of the total traffic
         sent over a configurable interval. The finest precision is
         0.000003%. where the maximum 50.331642%.";
      reference
        "RFC 7810, section-4.4";
    }
  }

  grouping endpoint {



Wu, et al.              Expires September 9, 2020              [Page 14]

Internet-Draft         Transport Slice YANG model             March 2020


    description
      "Transport Slice endpoint related information";
    leaf ep-id {
      type uint32;
      description
        "unique identifier for the referred Transport Slice endpoint";
    }
    leaf ep-name {
      type string;
      description
        "ep name";
    }
    leaf-list ep-role {
      type identityref {
        base ep-role;
      }
      default "any-to-any-role";
      description
        "Role of the endpoint in the Transport Slice.";
    }
    container site-access-parameters {
      leaf site-name {
        type string;
        description
          "The Site that the endpoint is attached with";
      }
      leaf availability-priority {
        type uint32;
        default "100";
        description
          "In multihoming access of one site, the priority for
           this Endpoint is specified . The higher the value, the higher
           the preference of the Endpoint will be.";
      }
      description
        "Site specific parameters.";
    }
    leaf node-id {
      type string;
      description
        "Uniquely identifies an edge node within the transport
         network.";
    }
    leaf tp-id {
      type string;
      description
        "Termination point identifier of an edge node.";
    }



Wu, et al.              Expires September 9, 2020              [Page 15]

Internet-Draft         Transport Slice YANG model             March 2020


    container bandwidth-slo {
      container incoming-bandwidth {
        leaf guaranteed-bandwidth {
          type te-types:te-bandwidth;
          description
            "If guaranteed-bandwidth is 0, it means best effort, no
             minimum throughput is guaranteed.";
        }
        leaf max-bandwidth {
          type te-types:te-bandwidth;
          description
            "max bandwidth ";
        }
        description
          "Container for the incoming bandwidth policy";
      }
      container outgoing-bandwidth {
        leaf guaranteed-bandwidth {
          type te-types:te-bandwidth;
          description
            "If guaranteed-bandwidth is 0, it means best effort, no
             minimum throughput is guaranteed.";
        }
        leaf max-bandwidth {
          type te-types:te-bandwidth;
          description
            "max bandwidth ";
        }
        description
          "Container for the bandwidth policy";
      }
      description
        "Container for the bandwidth SLO policy";
    }
    leaf mtu {
      type uint16;
      units "bytes";
      mandatory true;
      description
        "MTU at service level. If the service is IP,
         it refers to the IP MTU. If the service is Ethertype,
         will refer to the Ethernet MTU. ";
    }
    uses ts-traffic-classifier;
    uses status-params;
    uses ep-monitoring-parameters;
  }




Wu, et al.              Expires September 9, 2020              [Page 16]

Internet-Draft         Transport Slice YANG model             March 2020


  //ts-ep

  grouping ts-member {
    description
      "ts-member is described by this container";
    leaf ts-member-id {
      type uint32;
      description
        "ts-member identifier";
    }
    container src {
      description
        "the source of TS link";
      leaf src-ts-ep-id {
        type leafref {
          path "/transport-slices/transport-slice/ts-endpoint/ep-id";
        }
        description
          "reference to source TS endpoint";
      }
    }
    container dest {
      description
        "the destination of TS link ";
      leaf dest-ts-ep-id {
        type leafref {
          path "/transport-slices/transport-slice/ts-endpoint/ep-id";
        }
        description
          "reference to dest TS endpoint";
      }
    }
    leaf metric-type {
      type ts-metric-type;
      description
        "One way or two way monitoring type.";
    }
    container ts-member-monitoring {
      description
        "SLO status Per ts endpoint to endpoint ";
      config false;
      uses common-monitoring-parameters;
    }
  }

  //ts-member

  grouping transport-slice-slo-policy {



Wu, et al.              Expires September 9, 2020              [Page 17]

Internet-Draft         Transport Slice YANG model             March 2020


    description
      "policy for transport-slice-slo-level";
    container slo-profile {
      description
        "SLO profile.";
      choice slo-profile {
        description
          "Choice for SLO profile.
           Can be standard profile or customized profile.";
        case standard {
          description
            "Standard SLO profile.";
          leaf profile {
            type leafref {
              path "/transport-slices/slice-profiles/slo-profile/id";
            }
            description
              "QoS profile to be used.";
          }
        }
        case custom {
          description
            "Customized SLO profile.";
          container ts-slo-policy {
            leaf isolation-type {
              type identityref {
                base isolation-type;
              }
              default "logical-isolation";
              description
                "TS service isolation-level.";
            }
            container latency {
              leaf one-way-latency {
                type uint32 {
                  range "0..16777215";
                }
                units "usec";
                description
                  "lowest latency in micro seconds.";
              }
              leaf two-way-latency {
                type uint32 {
                  range "0..16777215";
                }
                description
                  "lowest-way delay or latency in micro seconds.";
              }



Wu, et al.              Expires September 9, 2020              [Page 18]

Internet-Draft         Transport Slice YANG model             March 2020


              description
                "Latency constraint on the traffic class.";
            }
            container jitter {
              leaf one-way-jitter {
                type uint32 {
                  range "0..16777215";
                }
                description
                  "lowest  latency in micro seconds.";
              }
              leaf two-way-jitter {
                type uint32 {
                  range "0..16777215";
                }
                description
                  "lowest-way delay or latency in micro seconds.";
              }
              description
                "Jitter constraint on the traffic class.";
            }
            container loss {
              leaf one-way-loss {
                type decimal64 {
                  fraction-digits 6;
                  range "0 .. 50.331642";
                }
                description
                  "Packet loss as a percentage of the total traffic
                   sent over a configurable interval. The finest precision is
                   0.000003%. where the maximum 50.331642%.";
                reference
                  "RFC 7810, section-4.4";
              }
              leaf two-way-loss {
                type decimal64 {
                  fraction-digits 6;
                  range "0 .. 50.331642";
                }
                description
                  "Packet loss as a percentage of the total traffic
                   sent over a configurable interval. The finest precision is
                   0.000003%. where the maximum 50.331642%.";
                reference
                  "RFC 7810, section-4.4";
              }
              description
                "Loss constraint on the traffic class.";



Wu, et al.              Expires September 9, 2020              [Page 19]

Internet-Draft         Transport Slice YANG model             March 2020


            }
            leaf availability-type {
              type identityref {
                base availability-type;
              }
              description
                "Availability Requirement for the Service";
            }
            description
              "container for customized policy constraint on the slice traffic.";
          }
        }
      }
    }
  }

  grouping slice-profile {
    container slice-profiles {
      list slo-profile {
        key "id";
        leaf id {
          type string;
          description
            "Identification of the SLO Profile to be used.
             Local administration meaning.";
        }
        leaf profile-description {
          type string;
          description
            "Description of the SLO Profile.";
        }
        description
          "List for SLO Profile Identifiers.";
      }
      description
        "Container for slice-profiles.";
    }
    description
      "Grouping for slice-profiles.";
  }

  /* Configuration data nodes */

  container transport-slices {
    description
      "transport-slice configurations";
    uses slice-profile;
    list transport-slice {



Wu, et al.              Expires September 9, 2020              [Page 20]

Internet-Draft         Transport Slice YANG model             March 2020


      key "ts-id";
      description
        "a transport-slice is identified by a ts-id";
      leaf ts-id {
        type uint32;
        description
          "a unique transport-slice identifier";
      }
      leaf ts-name {
        type string;
        description
          "ts name";
      }
      leaf-list ts-topology {
        type identityref {
          base ts-topology;
        }
        default "any-to-any";
        description
          "TS service topology.";
      }
      uses transport-slice-slo-policy;
      uses status-params;
      list ts-endpoint {
        key "ep-id";
        uses endpoint;
        description
          "list of endpoints in this slice";
      }
      list ts-member {
        key "ts-member-id";
        description
          "List of ts-member in a slice";
        uses ts-member;
      }
    }
    //ts-list
  }
}

   <CODE ENDS>

7.  Security Considerations

   The YANG module defined in this document is designed to be accessed
   via network management protocols such as NETCONF [RFC6241] or
   RESTCONF [RFC8040].  The lowest NETCONF layer is the secure transport
   layer, and the mandatory-to-implement secure transport is Secure



Wu, et al.              Expires September 9, 2020              [Page 21]

Internet-Draft         Transport Slice YANG model             March 2020


   Shell (SSH) [RFC6242].  The lowest RESTCONF layer is HTTPS, and the
   mandatory-to-implement secure transport is TLS [RFC8446].

   The NETCONF access control model [RFC8341] provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.

   There are a number of data nodes defined in this YANG module that are
   writable/creatable/deletable (i.e., config true, which is the
   default).  These data nodes may be considered sensitive or vulnerable
   in some network environments.  Write operations (e.g., edit-config)
   to these data nodes without proper protection can have a negative
   effect on network operations.

   o /ietf-transport-slice/transport-slices/transport-slice

   The entries in the list above include the whole transport network
   configurations corresponding with the slice which the higher
   management system requests, and indirectly create or modify the PE or
   P device configurations.  Unexpected changes to these entries could
   lead to service disruption and/or network misbehavior.

8.  IANA Considerations

   This document registers a URI in the IETF XML registry [RFC3688].
   Following the format in [RFC3688], the following registration is
   requested to be made:

      URI: urn:ietf:params:xml:ns:yang:ietf-transport-slice
      Registrant Contact: The IESG.
      XML: N/A, the requested URI is an XML namespace.



   This document requests to register a YANG module in the YANG Module
   Names registry [RFC7950].

             Name: ietf-transport-slice
             Namespace: urn:ietf:params:xml:ns:yang:ietf-transport-slice
             Prefix: ts
             Reference: RFC XXXX

9.  Acknowledgments

   The authors wish to thank Qin Wu, and many others for their helpful
   comments and suggestions.




Wu, et al.              Expires September 9, 2020              [Page 22]

Internet-Draft         Transport Slice YANG model             March 2020


10.  References

10.1.  Normative References

   [I-D.ietf-teas-actn-vn-yang]
              Lee, Y., Dhody, D., Ceccarelli, D., Bryskin, I., and B.
              Yoon, "A Yang Data Model for VN Operation", draft-ietf-
              teas-actn-vn-yang-07 (work in progress), October 2019.

   [I-D.liu-teas-transport-network-slice-yang]
              Liu, X., Tantsura, J., Bryskin, I., Contreras, L., and Q.
              WU, "Transport Network Slice YANG Data Model", draft-liu-
              teas-transport-network-slice-yang-00 (work in progress),
              November 2019.

   [I-D.nsdt-teas-transport-slice-definition]
              Rokui, R., Homma, S., and K. Makhijani, "IETF Definition
              of Transport Slice", draft-nsdt-teas-transport-slice-
              definition-00 (work in progress), November 2019.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,
              and A. Bierman, Ed., "Network Configuration Protocol
              (NETCONF)", RFC 6241, DOI 10.17487/RFC6241, June 2011,
              <https://www.rfc-editor.org/info/rfc6241>.

   [RFC6242]  Wasserman, M., "Using the NETCONF Protocol over Secure
              Shell (SSH)", RFC 6242, DOI 10.17487/RFC6242, June 2011,
              <https://www.rfc-editor.org/info/rfc6242>.

   [RFC6991]  Schoenwaelder, J., Ed., "Common YANG Data Types",
              RFC 6991, DOI 10.17487/RFC6991, July 2013,
              <https://www.rfc-editor.org/info/rfc6991>.

   [RFC7317]  Bierman, A. and M. Bjorklund, "A YANG Data Model for
              System Management", RFC 7317, DOI 10.17487/RFC7317, August
              2014, <https://www.rfc-editor.org/info/rfc7317>.

   [RFC7950]  Bjorklund, M., Ed., "The YANG 1.1 Data Modeling Language",
              RFC 7950, DOI 10.17487/RFC7950, August 2016,
              <https://www.rfc-editor.org/info/rfc7950>.






Wu, et al.              Expires September 9, 2020              [Page 23]

Internet-Draft         Transport Slice YANG model             March 2020


   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF
              Protocol", RFC 8040, DOI 10.17487/RFC8040, January 2017,
              <https://www.rfc-editor.org/info/rfc8040>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8299]  Wu, Q., Ed., Litkowski, S., Tomotaki, L., and K. Ogaki,
              "YANG Data Model for L3VPN Service Delivery", RFC 8299,
              DOI 10.17487/RFC8299, January 2018,
              <https://www.rfc-editor.org/info/rfc8299>.

   [RFC8340]  Bjorklund, M. and L. Berger, Ed., "YANG Tree Diagrams",
              BCP 215, RFC 8340, DOI 10.17487/RFC8340, March 2018,
              <https://www.rfc-editor.org/info/rfc8340>.

   [RFC8341]  Bierman, A. and M. Bjorklund, "Network Configuration
              Access Control Model", STD 91, RFC 8341,
              DOI 10.17487/RFC8341, March 2018,
              <https://www.rfc-editor.org/info/rfc8341>.

   [RFC8342]  Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K.,
              and R. Wilton, "Network Management Datastore Architecture
              (NMDA)", RFC 8342, DOI 10.17487/RFC8342, March 2018,
              <https://www.rfc-editor.org/info/rfc8342>.

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/info/rfc8446>.

   [RFC8466]  Wen, B., Fioccola, G., Ed., Xie, C., and L. Jalil, "A YANG
              Data Model for Layer 2 Virtual Private Network (L2VPN)
              Service Delivery", RFC 8466, DOI 10.17487/RFC8466, October
              2018, <https://www.rfc-editor.org/info/rfc8466>.

   [RFC8640]  Voit, E., Clemm, A., Gonzalez Prieto, A., Nilsen-Nygaard,
              E., and A. Tripathy, "Dynamic Subscription to YANG Events
              and Datastores over NETCONF", RFC 8640,
              DOI 10.17487/RFC8640, September 2019,
              <https://www.rfc-editor.org/info/rfc8640>.

   [RFC8641]  Clemm, A. and E. Voit, "Subscription to YANG Notifications
              for Datastore Updates", RFC 8641, DOI 10.17487/RFC8641,
              September 2019, <https://www.rfc-editor.org/info/rfc8641>.






Wu, et al.              Expires September 9, 2020              [Page 24]

Internet-Draft         Transport Slice YANG model             March 2020


10.2.  Informative References

   [RFC3688]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688,
              DOI 10.17487/RFC3688, January 2004,
              <https://www.rfc-editor.org/info/rfc3688>.

Appendix A.  Appendix A Comparison with Other Possible Transport Slice
             Models

   1.Transport Slice model based on IETF ACTN VN model

   The ACTN VN(Virtual Network) model introduced
   in[I-D.ietf-teas-actn-vn-yang]

   is the abstract customer view of the TE network.  Its YANG structure
   includes four components: .

   o  VN: The VN can be seen as a set of edge-to-edge abstract links (a
      Type 1 VN).

   o  AP"links" list and "termination points" list describe how nodes in
      a network are connected to each other

   o  VN-AP:vertical layering relationships between transport slice
      networks and underlay networks

   o  VN member: Each abstract link is referred to as a VN member and is
      formed as an E2E tunnel across the underlying networks

   The main concern with this model is TE specific, which does not
   comply with the technology agnostic characteristic specified in
   [I-D.nsdt-teas-transport-slice-definition].

   2.Transport Slice model based on IETF Network Topologies YANG data
   model extension

   IETF Network Topologies YANG data model extension introduced in
   Transport Network Slice YANG Data Model
   [I-D.liu-teas-transport-network-slice-yang]has the similar goal, but
   with different modelling design.  Its YANG structure includes three
   parts:

   o  Transport network: a transport network list and an list of nodes
      contained in the transport network

   o  Link: "links" list and "termination points" list describe how
      nodes in a network are connected to each other




Wu, et al.              Expires September 9, 2020              [Page 25]

Internet-Draft         Transport Slice YANG model             March 2020


   o  Support network: vertical layering relationships between transport
      slice networks and underlay networks

   Based on this structure, the transport slice-specific SLO attributes
   nodes are augmented on the Network Topologies model,, e.g.  isolation
   etc.  However, this modeling design requires the transport network to
   expose a lot of details of the network, such as the actual topology
   including nodes interconnection and different network layers
   interconnection.

Appendix B.  Appendix B Transporst Slice Traffic Criteria

   In some scenarios, some sites supports the customer service traffic
   of multiple slices.  The transport network connected to the sites
   needs to identify the traffic of' different slices to provide
   different SLO guarantees.  But the transport network does not have
   prior knowledge of these information.  Therefore, the transport slice
   model needs to carry these slice traffic classification information.
   'ts-traffic-criteria' container is used to specify the TS traffic-
   related parameters, including IP addresses, VLAN information, and
   etc.






























Wu, et al.              Expires September 9, 2020              [Page 26]

Internet-Draft         Transport Slice YANG model             March 2020


       +-------------------------------------------------------+
       |            Higher Layer  System                       |
       +-------------------------------------------------------+
         |                       |                         |
         |             Transport Slice Model               |
    +----------+                 |                   +-----------+
    |          |                 |                   |           |
    |RAN Slice |         +----------------+          |Core Slice |
    |controlle |         | TS  controller |          | controller|
    +----+-----+         +-------+--------+          +-----+-----+
         |                       |                         |
         |                       |                         |
     +---+--+       +------------+----------------+       ++-----+
     |      |       |                             |       |      |
     |      |       |                             |       |      |
     |+----+|TS1-EP1|                             |       |      |
     ||    ||   |   |         TS1                 |       |+----+|
     ||gNB1|+---+---+-----+-----------------------+---+---+|UPF1||
     ||    |+***+******  /                        |   |   |+----+|
     |+----+|TS2-EP1|  */                         |TS1-EP3|      |
     |      |       |  /*                         |       |      |
     |+----+|TS1-EP2| /  *                        |       |      |
     ||    |+---+----     *    TS2                |       |+----+|
     ||gNB2|+***+*************************************+****|UPF2||
     ||    ||   |   |                             |   |   |+----+|
     |+----+|TS2-EP2|                             |TS2-EP3|      |
     |      |       |                             |       |      |
     |      |       |                             |       |      |
     +------+       +-----------------------------+       +------+

   As shown in the figure, gNodeB 1 and gNodeB 2 use IP gNB1 and IP gNB2
   to communicate with the transport network, respectively.  In
   addition, the traffic of TS1 and TS2 on gNodeB 1 and gNodeB 2 is
   transmitted through the same links to the transport network.
   Therefore, edge devices of the transport network cannot use IP
   addresses to distinguish a specific slice traffic.  Other information
   is therefore needed to identity it.

Authors' Addresses

   Bo Wu (editor)
   Huawei Technologies
   101 Software Avenue, Yuhua District
   Nanjing, Jiangsu  210012
   China

   Email: lana.wubo@huawei.com




Wu, et al.              Expires September 9, 2020              [Page 27]

Internet-Draft         Transport Slice YANG model             March 2020


   Dhruv Dhody (editor)
   Huawei Technologies
   Divyashree Techno Park
   Bangalore, Karnataka  560066
   India

   Email: dhruv.ietf@gmail.com


   Liuyan Han
   China Mobile

   Email: hanliuyan@chinamobile.com






































Wu, et al.              Expires September 9, 2020              [Page 28]
