


Network Working Group                                      S. St.Laurent
Internet-Draft                                     O'Reilly & Associates
Expires: April 28, 2003                                 October 28, 2002


                    The XPointer xinclude1() Scheme
                  draft-stlaurent-xinclude-frag-00.txt

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on April 28, 2003.

Copyright Notice

   Copyright (C) The Internet Society (2002).  All Rights Reserved.

Abstract

   This document specifies an xinclude1() scheme for use in XPointer-
   based fragment identifiers.  This scheme, like other XPointer
   Framework [12] schemes, is designed primarily for use with the XML
   Media Types defined in RFC 3023 [5], to identify locations within a
   given XML representation of a resource.  The xinclude() scheme
   notifies an XPointer processor whether the creator of the XPointer
   intended for XInclude 1.0 [9] processing to take place.








St.Laurent               Expires April 28, 2003                 [Page 1]

Internet-Draft             xinclude() scheme                October 2002


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Justification  . . . . . . . . . . . . . . . . . . . . . . . .  4
   3.  Syntax . . . . . . . . . . . . . . . . . . . . . . . . . . . .  5
   4.  Processing . . . . . . . . . . . . . . . . . . . . . . . . . .  6
   5.  Relation to MIME Media Types . . . . . . . . . . . . . . . . .  7
   6.  XInclude Versions  . . . . . . . . . . . . . . . . . . . . . .  8
   7.  Considerations for Streaming Processing  . . . . . . . . . . .  9
   8.  Conformance  . . . . . . . . . . . . . . . . . . . . . . . . . 10
   9.  Security Considerations  . . . . . . . . . . . . . . . . . . . 11
   10. IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 12
       References . . . . . . . . . . . . . . . . . . . . . . . . . . 13
       Author's Address . . . . . . . . . . . . . . . . . . . . . . . 14
   A.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 15
   B.  Revision History . . . . . . . . . . . . . . . . . . . . . . . 16
       Full Copyright Statement . . . . . . . . . . . . . . . . . . . 17


































St.Laurent               Expires April 28, 2003                 [Page 2]

Internet-Draft             xinclude() scheme                October 2002


1. Introduction

   The XInclude 1.0-based xinclude1() scheme is intended to be used
   within the XPointer Framework [12] to support the addressing of nodes
   within XML documents.  Pointer parts using the xinclude1() scheme
   will always fail, as they do not identify portions of an XML
   document, but they can communicate (though not enforce) expectations
   for processing of later parts of an XPointer.











































St.Laurent               Expires April 28, 2003                 [Page 3]

Internet-Draft             xinclude() scheme                October 2002


2. Justification

   While the XInclude 1.0 [9] specification clearly identifes the nature
   of the processing that it describes, it does not prescribe a
   particular time at which processing should take place.  This is very
   different from XML 1.0 [6] parsed entities, where processing
   explicitly (though optionally) takes place at the time of parsing.

   As XInclude is effectively a transformation that adds content to a
   document from external resources, the result of that transformation
   may affect the document's structure.  That impact will vary with the
   nature of the XIncluded content, but it may cause various schemes
   used within the XPointer Framework [12] (including xpointer() [15],
   element() [14], and xpath1() [16]) to return different answers if
   XInclude processing happens.

   While xinclude1() pointer parts can never provide more than a
   suggestion, they may be helpful in coordinating program behavior or
   at least giving a human reader a clue as to why fragment identifiers
   are behaving differently than expected.































St.Laurent               Expires April 28, 2003                 [Page 4]

Internet-Draft             xinclude() scheme                October 2002


3. Syntax

   The scheme name is "xinclude1".  The scheme data syntax is as
   follows; if scheme data in a pointer part with the xinclude1() scheme
   does not conform to the syntax defined in this section, it is an
   error and the pointer part fails.

   xinclude1() Scheme Syntax:

     ptrpart             ::=    xinclude1( xinclude1schemedata )
     xinclude1schemedata    ::=    yes | no | noFallback

   Expr is as defined in the XPath 1.0 Recommendation [7].  To support
   identifiers operating on external parsed entities with multiple root
   elements or text nodes, the xpath1() scheme extends the XPath data
   model to permit the root node to contain any sequence of nodes that
   an element node may contain.  (XSLT provides the same extension.)


































St.Laurent               Expires April 28, 2003                 [Page 5]

Internet-Draft             xinclude() scheme                October 2002


4. Processing

   The XPointer Framework provides limited support for specifying XML
   processing context.  The xmlns() [13] scheme provides support for
   identifying mappings between prefixes used in pointer parts and
   namespace URIs, changing the processing context of later pointer
   parts.  By definition, the xmlns() scheme "never identifies a
   subresource and thus always fails".  The xinclude() scheme relies on
   a similar mechanism, but because of the XPointer framework's
   consumption of failures inside an XPointer expression, there is no
   way for xinclude() generally to signal an error.

   In the event that an XPointer processor provides explicit support for
   the xinclude1() scheme, it should do its best to provide the context
   requested by each xinclude1() part.  For example, if an XPointer
   using xinclude1() looked like:

   #xinclude(yes) element(/1/7) xinclude(noFallback) element(/1/4) xinclude(no) element(/1/3)

   then the processor should first attempt to process the document with
   XInclude's full facilities, then find the seventh child of the first
   element in the document.  If that didn't return a node, it would do
   XInclude processing with fallback suppressed, then find the fourth
   child of the first element in the document.  If that didn't return a
   node, it would examine the document with XInclude completely
   suppressed, and return the the third child of the first element in
   the document.
























St.Laurent               Expires April 28, 2003                 [Page 6]

Internet-Draft             xinclude() scheme                October 2002


5. Relation to MIME Media Types

   MIME Media type registrations should indicate whether or not the
   xinclude1() scheme is applicable to their contents.  While this
   scheme is obviously most directly connected to XML registrations made
   in accordance with RFC 3023 [5], it could conceivably be used with
   any registration made in accordance with RFC 2046 [1] and RFC 2048
   [2], provided that the registration provides an explicit mapping
   between an XInclude-aware XML structure and the contents of the type.










































St.Laurent               Expires April 28, 2003                 [Page 7]

Internet-Draft             xinclude() scheme                October 2002


6. XInclude Versions

   At the time of writing, the W3C is still developing Version 1.0 of
   XPath [9].  While there is no clear path beyond version 1.0, this
   draft has opted to include the version number in the scheme name in
   the event of substantial future change.













































St.Laurent               Expires April 28, 2003                 [Page 8]

Internet-Draft             xinclude() scheme                October 2002


7. Considerations for Streaming Processing

   XPointers that include more than one xinclude1() part may require
   multiple parses of the original document, which may make it
   incompatible with some streaming processing approaches.














































St.Laurent               Expires April 28, 2003                 [Page 9]

Internet-Draft             xinclude() scheme                October 2002


8. Conformance

   This specification normatively depends on the XPointer Framework
   [12], except insofar as it rejects the claim in Section 3.3 that
   "this specification reserves all scheme names for definition in
   additional W3C XPointer scheme specifications".

   While XPointer processors may simply ignore xinclude1() pointer parts
   with little damage, those explicitly claiming support for the
   xinclude1() scheme should support XInclude processing and attempt to
   supply the context requested by the xinclude1() pointer part.








































St.Laurent               Expires April 28, 2003                [Page 10]

Internet-Draft             xinclude() scheme                October 2002


9. Security Considerations

   XInclude processing by its very nature relies on the inclusion of
   foreign content and its fallback mechanisms provide an opportunity
   for servers to learn of processing results on clients.  To the extent
   that XInclude itself may be a security risk, use of and support for
   the xinclude1() scheme may heighten that risk.












































St.Laurent               Expires April 28, 2003                [Page 11]

Internet-Draft             xinclude() scheme                October 2002


10. IANA Considerations

   None.
















































St.Laurent               Expires April 28, 2003                [Page 12]

Internet-Draft             xinclude() scheme                October 2002


References

   [1]   Freed, N. and N. Borenstein, "Multipurpose Internet Mail
         Extensions (MIME) Part Two: Media Types", RFC 2046, November
         1996.

   [2]   Freed, N., Klensin, J. and J. Postel, "Multipurpose Internet
         Mail Extensions (MIME) Part Four: Registration Procedures", RFC
         2048, November 1996.

   [3]   Berners-Lee, T., Fielding, R. and L. Masinter, "Uniform
         Resource Identifiers (URI): Generic Syntax", RFC 2396, August
         1998.

   [4]   Rose, M., "Writing I-Ds and RFCs using XML", RFC 2629, June
         1999.

   [5]   Murata, M., St.Laurent, S. and D. Kohn, "XML Media Types", RFC
         3023, January 2001.

   [6]   Bray, T., Paoli, J. and C. Sperberg-McQueen, "Extensible Markup
         Language (XML) 1.0", World Wide Web Consortium Recommendation
         REC-xml, February 1998, <http://www.w3.org/TR/REC-xml>.

   [7]   DeRose, S. and J. Clark, "XML Path Language (XPath) Version
         1.0", World Wide Web Consortium Recommendation REC-xpath-
         19991116, November 1999, <http://www.w3.org/TR/1999/REC-xpath-
         19991116>.

   [8]   Berglund, A., Boag, S., Chamberlin, D., Fernandez, M., Kay, M.,
         Robie, J. and J. Simeon, "XML Path Language (XPath) 2.0", World
         Wide Web Consortium Working Draft WD-xpath20-20020816, November
         1999, <http://www.w3.org/TR/xpath20/>.

   [9]   Marsh, J. and D. Orchard, "XML Inclusions (XInclude) Version
         1.0", World Wide Web Consortium Candidate Recommendation CR-
         xinclude-20020221/, September 2002, <http://www.w3.org/TR/
         xinclude/>.

   [10]  Bray, T., Hollander, D. and A. Layman, "Namespaces in XML",
         World Wide Web Consortium Recommendation REC-xml-names, January
         1999, <http://www.w3.org/TR/REC-xml-names/>.

   [11]  DeRose, S., Maler, E. and D. Orchard, "XML Linking Language
         (XLink)", World Wide Web Consortium Recommendation XLink, June
         2001, <http://www.w3.org/TR/xlink/>.

   [12]  Grosso, P., Maler, E., Marsh, J. and N. Walsh, "XPointer



St.Laurent               Expires April 28, 2003                [Page 13]

Internet-Draft             xinclude() scheme                October 2002


         Framework", World Wide Web Consortium Working Draft XPointer
         Framework, July 2002, <http://www.w3.org/TR/xptr-framework/>.

   [13]  DeRose, S., Daniel Jr., R. and E. Maler, "XPointer xmlns()
         Scheme", World Wide Web Consortium Working Draft XPointer
         xmlns() Scheme, July 2002, <http://www.w3.org/TR/xptr-xmlns/>.

   [14]  Grosso, P., Maler, E., Marsh, J. and N. Walsh, "XPointer
         element() Scheme", World Wide Web Consortium Working Draft
         XPointer element() Scheme, July 2002, <http://www.w3.org/TR/
         xptr-element/>.

   [15]  DeRose, S., Daniel Jr., R. and E. Maler, "XPointer xpointer()
         Scheme", World Wide Web Consortium Working Draft XPointer
         xpointer() Scheme, July 2002, <http://www.w3.org/TR/xptr-
         xpointer/>.

   [16]  St.Laurent, S., "The XPointer xpath1() Scheme", I-D draft-
         stlaurent-xpath-frag-00.txt, October 2002.


Author's Address

   Simon St.Laurent
   O'Reilly & Associates
   1259 Dryden Road
   Ithaca, New York  14850
   USA

   EMail: simonstl@simonstl.com
   URI:   http://www.simonstl.com/




















St.Laurent               Expires April 28, 2003                [Page 14]

Internet-Draft             xinclude() scheme                October 2002


Appendix A. Acknowledgements

   Thanks to discussion on xml-dev for inspiration.
















































St.Laurent               Expires April 28, 2003                [Page 15]

Internet-Draft             xinclude() scheme                October 2002


Appendix B. Revision History

   00 - First version.

   [To be deleted before publication.]














































St.Laurent               Expires April 28, 2003                [Page 16]

Internet-Draft             xinclude() scheme                October 2002


Full Copyright Statement

   Copyright (C) The Internet Society (2002).  All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.



















St.Laurent               Expires April 28, 2003                [Page 17]


