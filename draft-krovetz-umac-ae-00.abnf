m = max(1,ceil(bitlength(M) / BLOCKLEN))
UMACKey = ENCIPHER(K,zeros(BLOCKLEN))
ctr = 0

ctr = ctr + 1
Temp = ENCIPHER(K, N || num2str(ctr, 48))
C_i = M_i xor Temp[1..bitlength(M_i)]
C = C_1 || C_2 || ... || C_m

hpadlength = (256 - (bitlength(H) mod 256)) mod 256
cpadlength = (256 - (bitlength(C) mod 256)) mod 256
UMACData = H || zeros(hpadlen) || C || zeros(cpadlen) ||
                num2str(bitlength(H), 64) || num2str(bitlength(C), 64)
T = UMAC(UMACKey, UMACData, N, taglen/8)



m = max(1,ceil(bitlength(C) / BLOCKLEN))
UMACKey = ENCIPHER(K,zeros(BLOCKLEN))
ctr = 0

hpadlength = (256 - (bitlength(H) mod 256)) mod 256
cpadlength = (256 - (bitlength(C) mod 256)) mod 256
UMACData = H || zeros(hpadlen) || C || zeros(cpadlen) ||
                num2str(bitlength(H), 64) || num2str(bitlength(C), 64)
ValidTag = UMAC(UMACKey, UMACData, N, bitlength(T)/8)

ctr = ctr + 1
Temp = ENCIPHER(K, N || num2str(ctr, 48))
M_i = C_i xor Temp[1..bitlength(C_i)]
M = M_1 || M_2 || ... || M_m

V = true
V = false
