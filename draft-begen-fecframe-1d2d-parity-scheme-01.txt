


FEC Framework                                                   A. Begen
Internet-Draft                                             Cisco Systems
Intended status:  Standards Track                     September 11, 2008
Expires:  March 15, 2009


   RTP Payload Format for Non-Interleaved and Interleaved Parity FEC
               draft-begen-fecframe-1d2d-parity-scheme-01

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on March 15, 2009.

Copyright Notice

   Copyright (C) The IETF Trust (2008).

Abstract

   This document defines new RTP payload formats for the Forward Error
   Correction (FEC) that is generated by the non-interleaved and
   interleaved parity codes from a source media encapsulated in RTP.
   These parity codes are systematic codes, where a number of repair
   symbols are generated from a set of source symbols and sent in a
   repair flow separate from the source flow that carries the source
   symbols.  The non-interleaved and interleaved parity codes offer a
   good protection against random and bursty packet losses,



Begen                    Expires March 15, 2009                 [Page 1]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   respectively, at a cost of decent complexity.  The RTP payload
   formats that are defined in this document address the scalability
   issues experienced with the earlier specifications including RFC
   2733, RFC 5109 and SMPTE 2022-1, and offer several improvements.  Due
   to these changes, the new payload formats are not backward compatible
   with the earlier specifications.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  4
     1.1.  Use Cases for 1-D FEC Protection . . . . . . . . . . . . .  6
     1.2.  Use Cases for 2-D Parity FEC Protection  . . . . . . . . .  8
     1.3.  Overhead Computation . . . . . . . . . . . . . . . . . . . 10
   2.  Requirements Notation  . . . . . . . . . . . . . . . . . . . . 10
   3.  Definitions, Notations and Abbreviations . . . . . . . . . . . 10
     3.1.  Definitions  . . . . . . . . . . . . . . . . . . . . . . . 10
     3.2.  Notations  . . . . . . . . . . . . . . . . . . . . . . . . 11
     3.3.  Abbreviations  . . . . . . . . . . . . . . . . . . . . . . 11
   4.  Packet Formats . . . . . . . . . . . . . . . . . . . . . . . . 11
     4.1.  Source Packets . . . . . . . . . . . . . . . . . . . . . . 11
     4.2.  Repair Packets . . . . . . . . . . . . . . . . . . . . . . 12
   5.  Payload Format Parameters  . . . . . . . . . . . . . . . . . . 14
     5.1.  Media Type Registration  . . . . . . . . . . . . . . . . . 14
       5.1.1.  Registration of audio/non-interleaved-parityfec  . . . 14
       5.1.2.  Registration of video/non-interleaved-parityfec  . . . 16
       5.1.3.  Registration of text/non-interleaved-parityfec . . . . 17
       5.1.4.  Registration of
               application/non-interleaved-parityfec  . . . . . . . . 18
       5.1.5.  Registration of audio/interleaved-parityfec  . . . . . 19
       5.1.6.  Registration of video/interleaved-parityfec  . . . . . 20
       5.1.7.  Registration of text/interleaved-parityfec . . . . . . 21
       5.1.8.  Registration of application/interleaved-parityfec  . . 23
     5.2.  Mapping to SDP Parameters  . . . . . . . . . . . . . . . . 24
       5.2.1.  Offer-Answer Model Considerations  . . . . . . . . . . 24
       5.2.2.  Declarative Considerations . . . . . . . . . . . . . . 24
   6.  Protection and Recovery Procedures . . . . . . . . . . . . . . 24
     6.1.  Overview . . . . . . . . . . . . . . . . . . . . . . . . . 25
     6.2.  Repair Packet Construction . . . . . . . . . . . . . . . . 25
     6.3.  Source Packet Reconstruction . . . . . . . . . . . . . . . 26
       6.3.1.  Associating the Source and Repair Packets  . . . . . . 27
       6.3.2.  Recovering the RTP Header  . . . . . . . . . . . . . . 28
       6.3.3.  Recovering the RTP Payload . . . . . . . . . . . . . . 29
       6.3.4.  Iterative Decoding Algorithm for the 2-D Parity
               FEC Protection . . . . . . . . . . . . . . . . . . . . 29
   7.  SDP Examples . . . . . . . . . . . . . . . . . . . . . . . . . 32
     7.1.  Example SDP for 1-D Parity FEC Protection  . . . . . . . . 32
     7.2.  Example SDP for 2-D Parity FEC Protection  . . . . . . . . 33



Begen                    Expires March 15, 2009                 [Page 2]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   8.  Congestion Control Considerations  . . . . . . . . . . . . . . 34
   9.  Security Considerations  . . . . . . . . . . . . . . . . . . . 34
   10. IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 34
   11. Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 35
   12. Change Log . . . . . . . . . . . . . . . . . . . . . . . . . . 35
     12.1. draft-begen-fecframe-1d2d-parity-scheme-01 . . . . . . . . 35
   13. References . . . . . . . . . . . . . . . . . . . . . . . . . . 36
     13.1. Normative References . . . . . . . . . . . . . . . . . . . 36
     13.2. Informative References . . . . . . . . . . . . . . . . . . 36
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 36
   Intellectual Property and Copyright Statements . . . . . . . . . . 38








































Begen                    Expires March 15, 2009                 [Page 3]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


1.  Introduction

   This document defines new RTP payload formats for the FEC that is
   generated by the non-interleaved and interleaved parity codes from a
   source media encapsulated in RTP [RFC3550].  The type of the source
   media protected by these parity codes can be audio, video, text or
   application.  The FEC data are generated according to the media type
   parameters that are communicated through out-of-band means.  The
   associations/relationships between the source and repair flows are
   also communicated through out-of-band means.

   Both the non-interleaved and interleaved parity codes use the
   exclusive OR (XOR) operation to generate the repair symbols.  In a
   nutshell, the following steps take place:

   1.  The sender determines a set of source packets to be protected
       together based on the media type parameters.

   2.  The sender applies the XOR operation on the source symbols to
       generate the required number of repair symbols.

   3.  The sender packetizes the repair symbols and sends the repair
       packet(s) along with the source packets to the receiver(s) (in
       different flows).  The repair packets MAY be sent proactively or
       on-demand.

   Note that the sender MUST transmit the source and repair packets in
   different source and repair flows, respectively to accommodate the
   receivers that do not support FEC (See Section 4).  At the receiver
   side, if all of the source packets are successfully received, there
   is no need for FEC recovery and the repair packets are discarded.
   However, if there are missing source packets, the repair packets can
   be used to recover the missing information.  Block diagrams for the
   systematic parity FEC encoder and decoder are sketched in Figure 1
   and Figure 2, respectively.
















Begen                    Expires March 15, 2009                 [Page 4]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


                               +------------+
    +--+  +--+  +--+  +--+ --> | Systematic | --> +--+  +--+  +--+  +--+
    +--+  +--+  +--+  +--+     | Parity FEC |     +--+  +--+  +--+  +--+
                               |  Encoder   |
                               |  (Sender)  | --> +==+  +==+
                               +------------+     +==+  +==+

    Source Packet: +--+    Repair Packet: +==+
                   +--+                   +==+

         Figure 1: Block diagram for systematic parity FEC encoder

                               +------------+
    +--+    X    X    +--+ --> | Systematic | --> +--+  +--+  +--+  +--+
    +--+              +--+     | Parity FEC |     +--+  +--+  +--+  +--+
                               |  Decoder   |
                +==+  +==+ --> | (Receiver) |
                +==+  +==+     +------------+

    Source Packet: +--+    Repair Packet: +==+    Lost Packet: X
                   +--+                   +==+

         Figure 2: Block diagram for systematic parity FEC decoder

   In Figure 2, it is clear that the FEC packets have to be received by
   the receiver within a certain time to be useful in the FEC recovery
   process.  In this document, we refer to the time that spans the
   source packets and the corresponding repair packets as the repair
   window.  Assuming that there is no issue of delay variation, the FEC
   decoder SHOULD NOT wait longer than the repair window since
   additional waiting would not help the recovery process.  The size of
   the repair window depends on the source block size and the regime
   adopted for sending the repair packets.

   Suppose that we have a group of D x L source packets that have
   sequence numbers starting from 1 running to D x L, and a repair
   packet is generated by applying the XOR operation to every L
   consecutive packets as sketched in Figure 3.  This process is
   referred to as 1-D non-interleaved FEC protection.  As a result of
   this process, D repair packets are generated, which we refer to as
   non-interleaved (or row) FEC packets.










Begen                    Expires March 15, 2009                 [Page 5]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


    +--------------------------------------------------+    ---    +===+
    | S_1          S_2          S3          ...  S_L   | + |XOR| = |R_1|
    +--------------------------------------------------+    ---    +===+
    +--------------------------------------------------+    ---    +===+
    | S_L+1        S_L+2        S_L+3       ...  S_2xL | + |XOR| = |R_2|
    +--------------------------------------------------+    ---    +===+
      .            .            .                .           .       .
      .            .            .                .           .       .
      .            .            .                .           .       .
    +--------------------------------------------------+    ---    +===+
    | S_(D-1)xL+1  S_(D-1)xL+2  S_(D-1)xL+3 ...  S_DxL | + |XOR| = |R_D|
    +--------------------------------------------------+    ---    +===+

          Figure 3: Generating non-interleaved (row) FEC packets

   If we apply the XOR operation to the group of the source packets
   whose sequence numbers are L apart from each other as sketched in
   Figure 4, we generate L repair packets.  This process is referred to
   as 1-D interleaved FEC protection, and the resulting L repair packets
   are referred to as interleaved (or column) FEC packets.

       +-------------+ +-------------+ +-------------+     +-------+
       | S_1         | | S_2         | | S3          | ... | S_L   |
       | S_L+1       | | S_L+2       | | S_L+3       | ... | S_2xL |
       | .           | | .           | |             |     |       |
       | .           | | .           | |             |     |       |
       | .           | | .           | |             |     |       |
       | S_(D-1)xL+1 | | S_(D-1)xL+2 | | S_(D-1)xL+3 | ... | S_DxL |
       +-------------+ +-------------+ +-------------+     +-------+
              +               +               +                +
        -------------   -------------   -------------       -------
       |     XOR     | |     XOR     | |     XOR     | ... |  XOR  |
        -------------   -------------   -------------       -------
              =               =               =                =
            +===+           +===+           +===+            +===+
            |C_1|           |C_2|           |C_3|      ...   |C_L|
            +===+           +===+           +===+            +===+

           Figure 4: Generating interleaved (column) FEC packets

1.1.  Use Cases for 1-D FEC Protection

   We generate one non-interleaved repair packet out of L consecutive
   source packets and one interleaved repair packet out of D non-
   consecutive source packets.  Regardless of whether the repair packet
   is a non-interleaved or an interleaved one, it can provide a full
   recovery of the missing information if there is only one packet
   missing among the corresponding source packets.  This implies that



Begen                    Expires March 15, 2009                 [Page 6]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   1-D non-interleaved FEC protection performs better when the source
   packets are randomly lost.  However, if the packet losses occur in
   bursts, 1-D interleaved FEC protection performs better provided that
   L is chosen large enough, i.e., L-packet duration SHOULD NOT be
   shorter than the observed burst duration.  The sender SHOULD monitor
   the occurrences of the loss events on the source packets and generate
   non-interleaved and interleaved FEC packets when the losses occur
   randomly and in bursts, respectively.

   If the sender generates non-interleaved FEC packets and a burst loss
   hits the source packets, the repair operation fails.  This is
   illustrated in Figure 5.

                     +---+                +---+  +===+
                     | 1 |    X      X    | 4 |  |R_1|
                     +---+                +---+  +===+

                     +---+  +---+  +---+  +---+  +===+
                     | 5 |  | 6 |  | 7 |  | 8 |  |R_2|
                     +---+  +---+  +---+  +---+  +===+

                     +---+  +---+  +---+  +---+  +===+
                     | 9 |  | 10|  | 11|  | 12|  |R_3|
                     +---+  +---+  +---+  +---+  +===+

    Figure 5: Example scenario where 1-D non-interleaved FEC protection
                           fails error recovery

   The sender may generate interleaved FEC packets to combat with the
   bursty packet losses.  However, two or more random packet losses may
   hit the source and repair packets in the same column.  In that case,
   the repair operation fails.  This is illustrated in Figure 6.  Note
   that it is possible that two burst losses may occur back-to-back, in
   which case interleaved FEC packets may still fail to recover the lost
   data.
















Begen                    Expires March 15, 2009                 [Page 7]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


                         +---+         +---+  +---+
                         | 1 |    X    | 3 |  | 4 |
                         +---+         +---+  +---+

                         +---+         +---+  +---+
                         | 5 |    X    | 7 |  | 8 |
                         +---+         +---+  +---+

                         +---+  +---+  +---+  +---+
                         | 9 |  | 10|  | 11|  | 12|
                         +---+  +---+  +---+  +---+

                         +===+  +===+  +===+  +===+
                         |C_1|  |C_2|  |C_3|  |C_4|
                         +===+  +===+  +===+  +===+

   Figure 6: Example scenario where 1-D interleaved FEC protection fails
                              error recovery

1.2.  Use Cases for 2-D Parity FEC Protection

   In networks where the source packets are lost both randomly and in
   bursts, the sender may generate both non-interleaved and interleaved
   FEC packets.  This type of FEC protection is known as 2-D parity FEC
   protection.  At the expense of generating more FEC packets, thus
   increasing the FEC overhead, 2-D FEC provides a superior protection
   against mixed loss patterns.  However, 2-D parity FEC protection is
   still not hitless and may fail to recover all of the lost source
   packets if a particular loss pattern hits the source packets.  An
   example scenario is illustrated in Figure 7.





















Begen                    Expires March 15, 2009                 [Page 8]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


                     +---+                +---+  +===+
                     | 1 |    X      X    | 4 |  |R_1|
                     +---+                +---+  +===+

                     +---+  +---+  +---+  +---+  +===+
                     | 5 |  | 6 |  | 7 |  | 8 |  |R_2|
                     +---+  +---+  +---+  +---+  +===+

                     +---+                +---+  +===+
                     | 9 |    X      X    | 12|  |R_3|
                     +---+                +---+  +===+

                     +===+  +===+  +===+  +===+
                     |C_1|  |C_2|  |C_3|  |C_4|
                     +===+  +===+  +===+  +===+

    Figure 7: Example scenario #1 where 2-D parity FEC protection fails
                              error recovery

   2-D parity FEC protection also fails when at least two rows are
   missing a source and the FEC packet and the missing source packets
   (in at least two rows) are aligned in the same column.  An example
   loss pattern is sketched in Figure 8.  Similarly, 2-D parity FEC
   protection cannot repair all missing source packets when at least two
   columns are missing a source and the FEC packet and the missing
   source packets (in at least two columns) are aligned in the same row.

                     +---+  +---+         +---+
                     | 1 |  | 2 |    X    | 4 |    X
                     +---+  +---+         +---+

                     +---+  +---+  +---+  +---+  +===+
                     | 5 |  | 6 |  | 7 |  | 8 |  |R_2|
                     +---+  +---+  +---+  +---+  +===+

                     +---+  +---+         +---+
                     | 9 |  | 10|    X    | 12|    X
                     +---+  +---+         +---+

                     +===+  +===+  +===+  +===+
                     |C_1|  |C_2|  |C_3|  |C_4|
                     +===+  +===+  +===+  +===+

    Figure 8: Example scenario #2 where 2-D parity FEC protection fails
                              error recovery






Begen                    Expires March 15, 2009                 [Page 9]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


1.3.  Overhead Computation

   The overhead is defined as the ratio of the number of bytes belonging
   to the repair packets to the number of bytes belonging to the
   protected source packets.

   Generally, repair packets are larger in size compared to the source
   packets.  Also, not all the source packets are necessarily equal in
   size.  However, if we assume that each repair packet carries an equal
   number of bytes carried by a source packet, we can compute the
   overhead for different FEC protection methods as follows:

   o  1-D Non-interleaved FEC Protection:  Overhead = 1/L

   o  1-D Interleaved FEC Protection:  Overhead = 1/D

   o  2-D Parity FEC Protection:  Overhead = 1/L + 1/D

   where L and D are the number of columns and rows in the source block,
   respectively.


2.  Requirements Notation

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].


3.  Definitions, Notations and Abbreviations

   The definitions, notations and abbreviations commonly used in this
   document are summarized in this section.

3.1.  Definitions

   This document uses the following definitions:

   Source Flow:  The packet flow(s) carrying the source data and to
   which FEC protection is to be applied.

   Repair Flow:  The packet flow(s) carrying the repair data.

   Symbol:  A unit of data.  Its size, in bytes, is referred to as the
   symbol size.

   Source Symbol:  The smallest unit of data used during the encoding
   process.



Begen                    Expires March 15, 2009                [Page 10]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   Repair Symbol:  Repair symbols are generated from the source symbols.

   Source Packet:  Data packets that contain only source symbols.

   Repair Packet:  Data packets that contain only repair symbols.

   Source Block:  A block of source symbols that are considered together
   in the encoding process.

3.2.  Notations

   o  L:  Number of columns of the source block.

   o  D:  Number of rows of the source block.

   o  ToP:  Type of protection.

3.3.  Abbreviations

   o  XOR:  Bitwise exclusive OR operation.
      0 XOR 0 = 0
      0 XOR 1 = 1
      1 XOR 0 = 1
      1 XOR 1 = 0


4.  Packet Formats

   This section defines the formats of the source and repair packets.

4.1.  Source Packets

   The source packets MUST contain the information that identifies the
   source block and the position within the source block occupied by the
   packet.  Since the source packets that are carried within an RTP
   stream already contain unique sequence numbers in their RTP headers
   [RFC3550], we can identify the source packets in a straightforward
   manner and there is no need to append additional field(s).  The
   primary advantage of not modifying the source packets in any way is
   that it provides backward compatibility for the receivers that do not
   support FEC at all.  In multicast scenarios, this backward
   compatibility becomes quite useful as it allows the non-FEC-capable
   and FEC-capable receivers to receive and interpret the same source
   packets sent in the same multicast session.







Begen                    Expires March 15, 2009                [Page 11]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


4.2.  Repair Packets

   The repair packets MUST contain information that identifies the
   source block they pertain to and the relationship between the
   contained repair symbols and the original source block.  For this
   purpose, we use the RTP header of the repair packets as well as
   another header within the RTP payload, which we refer to as the FEC
   header, as shown in Figure 9.

             +------------------------------+
             |          IP Header           |
             +------------------------------+
             |       Transport Header       |
             +------------------------------+
             |          RTP Header          | __
             +------------------------------+   |
             |          FEC Header          |    \
             +------------------------------+     > RTP Payload
             |        Repair Symbols        |    /
             +------------------------------+ __|

                    Figure 9: Format of repair packets

   The RTP header is formatted according to [RFC3550] with some further
   clarifications listed below:

   o  Marker (M) Bit:  This bit is not used for this payload type, and
      SHALL be set to 0.

   o  Payload Type:  The (dynamic) payload type for the repair packets
      is determined through out-of-band means.  Note that this document
      registers new payload formats for the repair packets (Refer to
      Section 5 for details).  According to [RFC3550], an RTP receiver
      that cannot recognize a payload type must discard it.  This
      provides backward compatibility.  The FEC mechanisms can then be
      used in a multicast group with mixed FEC-capable and non-FEC-
      capable receivers.  If a non-FEC-capable receiver receives a
      repair packet, it will not recognize the payload type, and hence,
      will discard the repair packet.

   o  Sequence Number (SN):  The sequence number has the standard
      definition.  It MUST be one higher than the sequence number in the
      previously transmitted repair packet.

   o  Timestamp (TS):  The timestamp MUST be set to the timestamp of the
      source packet whose sequence number is the lowest among the source
      packets protected by this repair packet.




Begen                    Expires March 15, 2009                [Page 12]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   o  Synchronization Source (SSRC):  The SSRC value SHALL be randomly
      assigned as suggested by [RFC3550].  This allows the sender to
      multiplex the source and repair flows on the same port, or
      multiplex multiple repair flows on a single port.  The repair
      flows SHOULD use the RTCP CNAME field to associate themselves with
      the source flow.  Note that due to the randomness of the SSRC
      assignments, there is a possibility of SSRC collision.  In such
      cases, the collisions MUST be resolved as described in [RFC3550].

   The FEC header is 12 octets (or 16 octets when the optional padding
   is used).  The format of the FEC header is shown in Figure 10.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |E|I|P|X|  CC   |M| PT recovery |            SN base            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          TS recovery                          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Length recovery        |            Padding            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                       Padding (optional)                      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                    Figure 10: Format of the FEC header

   The FEC header consists of the following fields:

   o  The E bit is the extension flag reserved to indicate any future
      extension to this specification.

   o  The I bit is used to indicate the length of padding in the FEC
      header.  The padding length SHOULD be selected based on the
      platform architecture and the impact of header length on the
      header processing performance.

   o  The P, X, CC, M and PT recovery fields are used to determine the
      corresponding fields of the recovered packets.

   o  The SN base field is used to indicate the lowest sequence number,
      taking wrap around into account, of those source packets protected
      by this repair packet.

   o  The TS recovery field is used to determine the timestamp of the
      recovered packets.

   o  The Length recovery field is used to determine the length of the
      recovered packets.



Begen                    Expires March 15, 2009                [Page 13]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   o  The Padding field is used to pad the FEC header to 12 bytes
      (integer multiples of 32 bits).

   o  The second (optional) Padding field is used to pad the FEC header
      to 16 bytes (integer multiples of 64 bits).

   The details on setting the fields in the FEC header are provided in
   Section 6.2.

   It should be noted that a mask-based approach (similar to the ones
   specified in [RFC2733] and [RFC5109]) may not be very efficient to
   indicate which source packets in the current source block are
   associated with a given repair packet.  In particular, for the
   applications that would like to use large source block sizes, the
   size of the mask that is required to describe the source-repair
   packet associations may be prohibitively large.  Instead, a
   systematic approach similar to the one proposed in [SMPTE2022-1] is
   inherently more efficient.  Yet, [SMPTE2022-1] carries the values of
   D and L in 8-bit fields.  While this approach can support larger
   blocks compared to the mask-based approaches, 8-bit fields may still
   be limiting when a high-bitrate source flow (e.g., a flow carrying
   Ultra HD video) is to be protected or when network outages/lossy
   periods span more than 255 packets.


5.  Payload Format Parameters

   This section provides the media subtype registration for the non-
   interleaved and interleaved parity FEC.  The parameters that are
   required to configure the FEC encoding and decoding operations are
   also defined in this section.

5.1.  Media Type Registration

   This registration is done using the template defined in [RFC4288] and
   following the guidance provided in [RFC3555].

5.1.1.  Registration of audio/non-interleaved-parityfec

   Type name:  audio

   Subtype name:  non-interleaved-parityfec

   Required parameters:

   o  rate:  The RTP timestamp (clock) rate.  The rate SHALL be larger
      than 1000 Hz to provide sufficient resolution to RTCP operations.
      However, it is RECOMMENDED to select the rate that matches the



Begen                    Expires March 15, 2009                [Page 14]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


      rate of the protected source RTP stream.

   o  L:  Number of columns of the source block.  L is a positive
      integer.

   o  D:  Number of rows of the source block.  D is a positive integer.

   o  ToP:  Type of the protection applied by the sender:  0 for 1-D
      interleaved FEC protection, 1 for 1-D non-interleaved FEC
      protection, and 2 for 2-D parity FEC protection.  The ToP value of
      3 is reserved for future uses.

   o  repair-window:  The time that spans the source packets and the
      corresponding repair packets.  The size of the repair window is
      specified in microseconds.

   Optional parameters:  None.

   Encoding considerations:  This media type is framed (See Section 4.8
   in the template document [RFC4288]) and contains binary data.

   Security considerations:  See Section 9 of this document.

   Interoperability considerations:  None.

   Published specification:  This document.

   Applications that use this media type:  Multimedia applications that
   want to improve resiliency against packet loss by sending redundant
   data in addition to the source media.

   Additional information:  None.

   Person & email address to contact for further information:  Ali Begen
   <abegen@cisco.com> and IETF Audio/Video Transport Working Group.

   Intended usage:  COMMON.

   Restriction on usage:  None.

   Author:  Ali Begen <abegen@cisco.com>.

   Change controller:  IETF Audio/Video Transport Working Group
   delegated from the IESG.







Begen                    Expires March 15, 2009                [Page 15]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


5.1.2.  Registration of video/non-interleaved-parityfec

   Type name:  video

   Subtype name:  non-interleaved-parityfec

   Required parameters:

   o  rate:  The RTP timestamp (clock) rate.  The rate SHALL be larger
      than 1000 Hz to provide sufficient resolution to RTCP operations.
      However, it is RECOMMENDED to select the rate that matches the
      rate of the protected source RTP stream.

   o  L:  Number of columns of the source block.  L is a positive
      integer.

   o  D:  Number of rows of the source block.  D is a positive integer.

   o  ToP:  Type of the protection applied by the sender:  0 for 1-D
      interleaved FEC protection, 1 for 1-D non-interleaved FEC
      protection, and 2 for 2-D parity FEC protection.  The ToP value of
      3 is reserved for future uses.

   o  repair-window:  The time that spans the source packets and the
      corresponding repair packets.  The size of the repair window is
      specified in microseconds.

   Optional parameters:  None.

   Encoding considerations:  This media type is framed (See Section 4.8
   in the template document [RFC4288]) and contains binary data.

   Security considerations:  See Section 9 of this document.

   Interoperability considerations:  None.

   Published specification:  This document.

   Applications that use this media type:  Multimedia applications that
   want to improve resiliency against packet loss by sending redundant
   data in addition to the source media.

   Additional information:  None.

   Person & email address to contact for further information:  Ali Begen
   <abegen@cisco.com> and IETF Audio/Video Transport Working Group.

   Intended usage:  COMMON.



Begen                    Expires March 15, 2009                [Page 16]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   Restriction on usage:  None.

   Author:  Ali Begen <abegen@cisco.com>.

   Change controller:  IETF Audio/Video Transport Working Group
   delegated from the IESG.

5.1.3.  Registration of text/non-interleaved-parityfec

   Type name:  text

   Subtype name:  non-interleaved-parityfec

   Required parameters:

   o  rate:  The RTP timestamp (clock) rate.  The rate SHALL be larger
      than 1000 Hz to provide sufficient resolution to RTCP operations.
      However, it is RECOMMENDED to select the rate that matches the
      rate of the protected source RTP stream.

   o  L:  Number of columns of the source block.  L is a positive
      integer.

   o  D:  Number of rows of the source block.  D is a positive integer.

   o  ToP:  Type of the protection applied by the sender:  0 for 1-D
      interleaved FEC protection, 1 for 1-D non-interleaved FEC
      protection, and 2 for 2-D parity FEC protection.  The ToP value of
      3 is reserved for future uses.

   o  repair-window:  The time that spans the source packets and the
      corresponding repair packets.  The size of the repair window is
      specified in microseconds.

   Optional parameters:  None.

   Encoding considerations:  This media type is framed (See Section 4.8
   in the template document [RFC4288]) and contains binary data.

   Security considerations:  See Section 9 of this document.

   Interoperability considerations:  None.

   Published specification:  This document.

   Applications that use this media type:  Multimedia applications that
   want to improve resiliency against packet loss by sending redundant
   data in addition to the source media.



Begen                    Expires March 15, 2009                [Page 17]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   Additional information:  None.

   Person & email address to contact for further information:  Ali Begen
   <abegen@cisco.com> and IETF Audio/Video Transport Working Group.

   Intended usage:  COMMON.

   Restriction on usage:  None.

   Author:  Ali Begen <abegen@cisco.com>.

   Change controller:  IETF Audio/Video Transport Working Group
   delegated from the IESG.

5.1.4.  Registration of application/non-interleaved-parityfec

   Type name:  application

   Subtype name:  non-interleaved-parityfec

   Required parameters:

   o  rate:  The RTP timestamp (clock) rate.  The rate SHALL be larger
      than 1000 Hz to provide sufficient resolution to RTCP operations.
      However, it is RECOMMENDED to select the rate that matches the
      rate of the protected source RTP stream.

   o  L:  Number of columns of the source block.  L is a positive
      integer.

   o  D:  Number of rows of the source block.  D is a positive integer.

   o  ToP:  Type of the protection applied by the sender:  0 for 1-D
      interleaved FEC protection, 1 for 1-D non-interleaved FEC
      protection, and 2 for 2-D parity FEC protection.  The ToP value of
      3 is reserved for future uses.

   o  repair-window:  The time that spans the source packets and the
      corresponding repair packets.  The size of the repair window is
      specified in microseconds.

   Optional parameters:  None.

   Encoding considerations:  This media type is framed (See Section 4.8
   in the template document [RFC4288]) and contains binary data.

   Security considerations:  See Section 9 of this document.




Begen                    Expires March 15, 2009                [Page 18]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   Interoperability considerations:  None.

   Published specification:  This document.

   Applications that use this media type:  Multimedia applications that
   want to improve resiliency against packet loss by sending redundant
   data in addition to the source media.

   Additional information:  None.

   Person & email address to contact for further information:  Ali Begen
   <abegen@cisco.com> and IETF Audio/Video Transport Working Group.

   Intended usage:  COMMON.

   Restriction on usage:  None.

   Author:  Ali Begen <abegen@cisco.com>.

   Change controller:  IETF Audio/Video Transport Working Group
   delegated from the IESG.

5.1.5.  Registration of audio/interleaved-parityfec

   Type name:  audio

   Subtype name:  interleaved-parityfec

   Required parameters:

   o  rate:  The RTP timestamp (clock) rate.  The rate SHALL be larger
      than 1000 Hz to provide sufficient resolution to RTCP operations.
      However, it is RECOMMENDED to select the rate that matches the
      rate of the protected source RTP stream.

   o  L:  Number of columns of the source block.  L is a positive
      integer.

   o  D:  Number of rows of the source block.  D is a positive integer.

   o  ToP:  Type of the protection applied by the sender:  0 for 1-D
      interleaved FEC protection, 1 for 1-D non-interleaved FEC
      protection, and 2 for 2-D parity FEC protection.  The ToP value of
      3 is reserved for future uses.

   o  repair-window:  The time that spans the source packets and the
      corresponding repair packets.  The size of the repair window is
      specified in microseconds.



Begen                    Expires March 15, 2009                [Page 19]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   Optional parameters:  None.

   Encoding considerations:  This media type is framed (See Section 4.8
   in the template document [RFC4288]) and contains binary data.

   Security considerations:  See Section 9 of this document.

   Interoperability considerations:  None.

   Published specification:  This document.

   Applications that use this media type:  Multimedia applications that
   want to improve resiliency against packet loss by sending redundant
   data in addition to the source media.

   Additional information:  None.

   Person & email address to contact for further information:  Ali Begen
   <abegen@cisco.com> and IETF Audio/Video Transport Working Group.

   Intended usage:  COMMON.

   Restriction on usage:  None.

   Author:  Ali Begen <abegen@cisco.com>.

   Change controller:  IETF Audio/Video Transport Working Group
   delegated from the IESG.

5.1.6.  Registration of video/interleaved-parityfec

   Type name:  video

   Subtype name:  interleaved-parityfec

   Required parameters:

   o  rate:  The RTP timestamp (clock) rate.  The rate SHALL be larger
      than 1000 Hz to provide sufficient resolution to RTCP operations.
      However, it is RECOMMENDED to select the rate that matches the
      rate of the protected source RTP stream.

   o  L:  Number of columns of the source block.  L is a positive
      integer.

   o  D:  Number of rows of the source block.  D is a positive integer.





Begen                    Expires March 15, 2009                [Page 20]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   o  ToP:  Type of the protection applied by the sender:  0 for 1-D
      interleaved FEC protection, 1 for 1-D non-interleaved FEC
      protection, and 2 for 2-D parity FEC protection.  The ToP value of
      3 is reserved for future uses.

   o  repair-window:  The time that spans the source packets and the
      corresponding repair packets.  The size of the repair window is
      specified in microseconds.

   Optional parameters:  None.

   Encoding considerations:  This media type is framed (See Section 4.8
   in the template document [RFC4288]) and contains binary data.

   Security considerations:  See Section 9 of this document.

   Interoperability considerations:  None.

   Published specification:  This document.

   Applications that use this media type:  Multimedia applications that
   want to improve resiliency against packet loss by sending redundant
   data in addition to the source media.

   Additional information:  None.

   Person & email address to contact for further information:  Ali Begen
   <abegen@cisco.com> and IETF Audio/Video Transport Working Group.

   Intended usage:  COMMON.

   Restriction on usage:  None.

   Author:  Ali Begen <abegen@cisco.com>.

   Change controller:  IETF Audio/Video Transport Working Group
   delegated from the IESG.

5.1.7.  Registration of text/interleaved-parityfec

   Type name:  text

   Subtype name:  interleaved-parityfec

   Required parameters:






Begen                    Expires March 15, 2009                [Page 21]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   o  rate:  The RTP timestamp (clock) rate.  The rate SHALL be larger
      than 1000 Hz to provide sufficient resolution to RTCP operations.
      However, it is RECOMMENDED to select the rate that matches the
      rate of the protected source RTP stream.

   o  L:  Number of columns of the source block.  L is a positive
      integer.

   o  D:  Number of rows of the source block.  D is a positive integer.

   o  ToP:  Type of the protection applied by the sender:  0 for 1-D
      interleaved FEC protection, 1 for 1-D non-interleaved FEC
      protection, and 2 for 2-D parity FEC protection.  The ToP value of
      3 is reserved for future uses.

   o  repair-window:  The time that spans the source packets and the
      corresponding repair packets.  The size of the repair window is
      specified in microseconds.

   Optional parameters:  None.

   Encoding considerations:  This media type is framed (See Section 4.8
   in the template document [RFC4288]) and contains binary data.

   Security considerations:  See Section 9 of this document.

   Interoperability considerations:  None.

   Published specification:  This document.

   Applications that use this media type:  Multimedia applications that
   want to improve resiliency against packet loss by sending redundant
   data in addition to the source media.

   Additional information:  None.

   Person & email address to contact for further information:  Ali Begen
   <abegen@cisco.com> and IETF Audio/Video Transport Working Group.

   Intended usage:  COMMON.

   Restriction on usage:  None.

   Author:  Ali Begen <abegen@cisco.com>.

   Change controller:  IETF Audio/Video Transport Working Group
   delegated from the IESG.




Begen                    Expires March 15, 2009                [Page 22]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


5.1.8.  Registration of application/interleaved-parityfec

   Type name:  application

   Subtype name:  interleaved-parityfec

   Required parameters:

   o  rate:  The RTP timestamp (clock) rate.  The rate SHALL be larger
      than 1000 Hz to provide sufficient resolution to RTCP operations.
      However, it is RECOMMENDED to select the rate that matches the
      rate of the protected source RTP stream.

   o  L:  Number of columns of the source block.  L is a positive
      integer.

   o  D:  Number of rows of the source block.  D is a positive integer.

   o  ToP:  Type of the protection applied by the sender:  0 for 1-D
      interleaved FEC protection, 1 for 1-D non-interleaved FEC
      protection, and 2 for 2-D parity FEC protection.  The ToP value of
      3 is reserved for future uses.

   o  repair-window:  The time that spans the source packets and the
      corresponding repair packets.  The size of the repair window is
      specified in microseconds.

   Optional parameters:  None.

   Encoding considerations:  This media type is framed (See Section 4.8
   in the template document [RFC4288]) and contains binary data.

   Security considerations:  See Section 9 of this document.

   Interoperability considerations:  None.

   Published specification:  This document.

   Applications that use this media type:  Multimedia applications that
   want to improve resiliency against packet loss by sending redundant
   data in addition to the source media.

   Additional information:  None.

   Person & email address to contact for further information:  Ali Begen
   <abegen@cisco.com> and IETF Audio/Video Transport Working Group.

   Intended usage:  COMMON.



Begen                    Expires March 15, 2009                [Page 23]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   Restriction on usage:  None.

   Author:  Ali Begen <abegen@cisco.com>.

   Change controller:  IETF Audio/Video Transport Working Group
   delegated from the IESG.

5.2.  Mapping to SDP Parameters

   Applications that are using RTP transport commonly use Session
   Description Protocol (SDP) [RFC4566] to describe their RTP sessions.
   The information that is used to specify the media types in an RTP
   session has specific mappings to the fields in an SDP description.
   In this section, we provide these mappings for the media subtypes
   registered by this document.  Note that if an application does not
   use SDP to describe the RTP sessions, an appropriate mapping must be
   defined and used to specify the media types and their parameters for
   the control/description protocol employed by the application.

   The mapping of the media type specification for "non-interleaved-
   parityfec" and "interleaved-parityfec" and their parameters in SDP is
   as follows:

   o  The media type (e.g., "application") goes into the "m=" line as
      the media name.

   o  The media subtype goes into the "a=rtpmap" line as the encoding
      name.  The RTP clock rate parameter ("rate") also goes into the
      "a=rtpmap" line as the clock rate.

   o  The remaining required payload-format-specific parameters go into
      the "a=fmtp" line by copying them directly from the media type
      string as a semicolon-separated list of parameter=value pairs.

   SDP examples are provided in Section 7.

5.2.1.  Offer-Answer Model Considerations

   TBC.

5.2.2.  Declarative Considerations

   TBC.


6.  Protection and Recovery Procedures

   This section provides a complete specification of the 1-D and 2-D



Begen                    Expires March 15, 2009                [Page 24]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   parity codes.

6.1.  Overview

   The following sections specify the steps involved in generating the
   repair packets and reconstructing the missing source packets from the
   repair packets.

6.2.  Repair Packet Construction

   The RTP header of a repair packet is formed based on the guidelines
   given in Section 4.2.

   The FEC header includes 12 octets (or 16 octets when the optional
   padding is used).  It is constructed by applying the XOR operation on
   the bit strings that are generated from the individual source packets
   protected by this particular repair packet.  The set of the source
   packets that are associated with a given repair packet can be
   computed by the formula given in Section 6.3.1.

   The bit string is formed for each source packet by concatenating the
   following fields together in the order specified:

   o  The first 64 bits of the RTP header (64 bits).

   o  Unsigned network-ordered 16-bit representation of the source
      packet length in bytes minus 12 (for the fixed RTP header), i.e.,
      the sum of the lengths of all the following if present:  the CSRC
      list, extension header, RTP payload and RTP padding (16 bits).

   By applying the parity operation on the bit strings produced from the
   source packets, we generate the FEC bit string.  The FEC header is
   generated from the FEC bit string as follows:

   o  The first (most significant) 2 bits in the FEC bit string are
      skipped.  The E bit in the FEC header is set to 0.  The I bit in
      the FEC header is set to 0 if only 2-byte padding is used, or to 1
      if 6-byte padding is used.

   o  The next bit in the FEC bit string is written into the P recovery
      bit in the FEC header.

   o  The next bit in the FEC bit string is written into the X recovery
      bit in the FEC header.

   o  The next 4 bits of the FEC bit string are written into the CC
      recovery field in the FEC header.




Begen                    Expires March 15, 2009                [Page 25]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   o  The next bit is written into the M recovery bit in the FEC header.

   o  The next 7 bits of the FEC bit string are written into the PT
      recovery field in the FEC header.

   o  The next 16 bits are skipped.

   o  The next 32 bits of the FEC bit string are written into the TS
      recovery field in the FEC header.

   o  The next 16 bits are written into the length recovery field in the
      FEC header.

   o  The 2-byte padding field of the FEC header SHALL be set to 0.

   o  If the I bit is set to 1, indicating that 6-byte padding is used,
      four more bytes SHALL be added to the FEC header and these bytes
      SHALL be set to 0.

   As described in Section 4.2, the SN base field of the FEC header MUST
   be set to the lowest sequence number of the source packets protected
   by this repair packet.  For the interleaved FEC packets, this
   corresponds to the lowest sequence number of the source packets that
   form the column.  For the non-interleaved FEC packets, the SN base
   field MUST be set to the lowest sequence number of the source packets
   that form the row.

   The repair packet payload consists of the bits that are generated by
   applying the XOR operation on the payloads of the source RTP packets.
   If the payload lengths of the source packets are not equal, each
   shorter packet MUST be padded to the length of the longest packet by
   adding octet 0's at the end.

   Due to this possible padding and mandatory FEC header, a repair
   packet usually has a larger size than the source packets it protects.
   This may cause problems if the resulting repair packet size exceeds
   the Maximum Transmission Unit (MTU) size of the path over which the
   repair flow is sent.

6.3.  Source Packet Reconstruction

   This section describes the recovery procedures that are required to
   reconstruct the missing packets.  The recovery process has two steps.
   In the first step, the FEC decoder determines which source and repair
   packets should be used in order to recover a missing packet.  In the
   second step, the decoder recovers the missing packet, which consists
   of an RTP header and RTP payload.




Begen                    Expires March 15, 2009                [Page 26]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   In the following, we describe the RECOMMENDED algorithms for the
   first and second steps.  Based on the implementation, different
   algorithms MAY be adopted.  However, the end result MUST be identical
   to the one produced by the algorithms described below.

   Note that the same algorithms are used by the 1-D parity codes,
   regardless of whether the FEC protection is applied over a column or
   a row.  The 2-D parity codes, on the other hand, usually require
   multiple iterations of the procedures described here.  This iterative
   decoding algorithm is further explained in Section 6.3.4.

6.3.1.  Associating the Source and Repair Packets

   The first step is associating the source and repair packets.  By
   virtue of the payload type field in the RTP header, each repair
   packet is indicated whether it is an interleaved or non-interleaved
   FEC packet.  In addition, the SN base field in the FEC header shows
   the lowest sequence number of the source packets that form the
   particular column or row.  Finally, the information of how many
   source packets are included in each column or row is available from
   the media type parameters specified in the SDP description.  This set
   of information uniquely identifies all of the source packets
   associated with a given repair packet.

   Mathematically, for any received repair packet, p*, we can determine
   the sequence numbers of the source packets that are protected by this
   repair packet as follows:

                              p*_snb + i * X_1

   where p*_snb denotes the value in the SN base field of p*'s FEC
   header, X_1 is set to L and 1 for the interleaved and non-interleaved
   FEC packets, respectively, and

                                0 <= i < X_2

   where X_2 is set to D and L for the interleaved and non-interleaved
   FEC packets, respectively.

   We denote the set of the source packets associated with repair packet
   p* by set T(p*).  Note that in a source block whose size is L columns
   by D rows, set T includes D source packets plus one repair packet for
   the FEC protection applied over a column, and L source packets plus
   one repair packet for the FEC protection applied over a row.  Recall
   that 1-D interleaved and non-interleaved FEC protection can fully
   recover the missing information if there is only source packet is
   missing in set T. If there are more than one source packets missing
   in set T, 1-D FEC protection will not work.



Begen                    Expires March 15, 2009                [Page 27]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


6.3.2.  Recovering the RTP Header

   For a given set T, the procedure for the recovery of the RTP header
   of the missing packet, whose sequence number is denoted by SEQNUM, is
   as follows:

   1.   For each of the source packets that are successfully received in
        T, compute the 80-bit string by concatenating the first 64 bits
        of their RTP header and the unsigned network-ordered 16-bit
        representation of their length in bytes minus 12.

   2.   For the repair packet in T, compute the FEC bit string from the
        first 80 bits of the FEC header.

   3.   Calculate the recovered bit string as the XOR of the bit strings
        generated from all source packets in T and the FEC bit string
        generated from the repair packet in T.

   4.   Create a new packet with the standard 12-byte RTP header and no
        payload.

   5.   Set the version of the new packet to 2.  Skip the first 2 bits
        in the recovered bit string.

   6.   Set the Padding bit in the new packet to the next bit in the
        recovered bit string.

   7.   Set the Extension bit in the new packet to the next bit in the
        recovered bit string.

   8.   Set the CC field to the next 4 bits in the recovered bit string.

   9.   Set the Marker bit in the new packet to the next bit in the
        recovered bit string.

   10.  Set the Payload type in the new packet to the next 7 bits in the
        recovered bit string.

   11.  Set the SN field in the new packet to SEQNUM.  Skip the next 16
        bits in the recovered bit string.

   12.  Set the TS field in the new packet to the next 32 bits in the
        recovered bit string.

   13.  Take the next 16 bits of the recovered bit string and set Y to
        whatever unsigned integer this represents (assuming network-
        order).  Y represents the length of the new packet in bytes
        minus 12 (for the fixed RTP header), i.e., the sum of the



Begen                    Expires March 15, 2009                [Page 28]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


        lengths of all the following if present:  the CSRC list,
        extension header, RTP payload and RTP padding.

   14.  Set the SSRC of the new packet to the SSRC of the source RTP
        stream.

   This procedure recovers the header of an RTP packet up to (and
   including) the SSRC field.

6.3.3.  Recovering the RTP Payload

   Following the recovery of the RTP header, the procedure for the
   recovery of the RTP payload is as follows:

   1.  Append Y bytes to the new packet.

   2.  For each of the source packets that are successfully received in
       T, compute the bit string from the Y octets of data starting with
       the 13th octet of the packet.  If any of the bit strings
       generated from the source packets has a length shorter than Y,
       pad them to that length.  The padding of octet 0 MUST be added at
       the end of the bit string.  Note that the information of the
       first 8 octets are protected by the FEC header.

   3.  For the repair packet in T, compute the FEC bit string from the
       repair packet payload, i.e., the Y octets of data following the
       FEC header.  Note that the FEC header may be 12 octets or 16
       octets depending on whether the optional padding is used or not.

   4.  Calculate the recovered bit string as the XOR of the bit strings
       generated from all source packets in T and the FEC bit string
       generated from the repair packet in T.

   5.  Append the recovered bit string (Y octets) to the new packet
       generated in Section 6.3.2.

6.3.4.  Iterative Decoding Algorithm for the 2-D Parity FEC Protection

   In 2-D parity FEC protection, the sender generates both non-
   interleaved and interleaved FEC packets to combat with the mixed loss
   patterns (random and bursty).  At the receiver side, these FEC
   packets are used iteratively to overcome the shortcomings of the 1-D
   non-interleaved/interleaved FEC protection and improve the chances of
   full error recovery.

   The iterative decoding algorithm runs as follows:





Begen                    Expires March 15, 2009                [Page 29]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   1.  Set num_recovered_until_this_iteration to zero

   2.  Set num_recovered_so_far to zero

   3.  Recover as many source packets as possible by using the non-
       interleaved FEC packets as outlined in Section 6.3.2 and
       Section 6.3.3, and increase the value of num_recovered_so_far by
       the number of recovered source packets.

   4.  Recover as many source packets as possible by using the
       interleaved FEC packets as outlined in Section 6.3.2 and
       Section 6.3.3, and increase the value of num_recovered_so_far by
       the number of recovered source packets.

   5.  If num_recovered_so_far > num_recovered_until_this_iteration
       ---num_recovered_until_this_iteration = num_recovered_so_far
       ---Go to step 3
       Else
       ---Terminate

   The algorithm terminates either when all missing source packets are
   fully recovered or when there are still remaining missing source
   packets but the FEC packets are not able to recover any more source
   packets.  For the example scenarios when the 2-D parity FEC
   protection fails full recovery, refer to Section 1.2.  Upon
   termination, variable num_recovered_so_far has a value equal to the
   total number of recovered source packets.

   Example:

   Suppose that the receiver experienced the loss pattern sketched in
   Figure 13.



















Begen                    Expires March 15, 2009                [Page 30]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


                                   +---+  +---+  +===+
                       X      X    | 3 |  | 4 |  |R_1|
                                   +---+  +---+  +===+

                     +---+  +---+  +---+  +---+  +===+
                     | 5 |  | 6 |  | 7 |  | 8 |  |R_2|
                     +---+  +---+  +---+  +---+  +===+

                     +---+                +---+  +===+
                     | 9 |    X      X    | 12|  |R_3|
                     +---+                +---+  +===+

                     +===+  +===+  +===+  +===+
                     |C_1|  |C_2|  |C_3|  |C_4|
                     +===+  +===+  +===+  +===+

   Figure 13: Example loss pattern for the iterative decoding algorithm

   The receiver executes the iterative decoding algorithm and recovers
   source packets #1 and #11 in the first iteration.  The resulting
   pattern is sketched in Figure 14.

                     +---+         +---+  +---+  +===+
                     | 1 |    X    | 3 |  | 4 |  |R_1|
                     +---+         +---+  +---+  +===+

                     +---+  +---+  +---+  +---+  +===+
                     | 5 |  | 6 |  | 7 |  | 8 |  |R_2|
                     +---+  +---+  +---+  +---+  +===+

                     +---+         +---+  +---+  +===+
                     | 9 |    X    | 11|  | 12|  |R_3|
                     +---+         +---+  +---+  +===+

                     +===+  +===+  +===+  +===+
                     |C_1|  |C_2|  |C_3|  |C_4|
                     +===+  +===+  +===+  +===+

        Figure 14: The resulting pattern after the first iteration

   Since the if condition holds true, the receiver runs a new iteration.
   In the second iteration, source packets #2 and #10 are recovered,
   resulting in a full recovery as sketched in Figure 15.








Begen                    Expires March 15, 2009                [Page 31]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


                     +---+  +---+  +---+  +---+  +===+
                     | 1 |  | 2 |  | 3 |  | 4 |  |R_1|
                     +---+  +---+  +---+  +---+  +===+

                     +---+  +---+  +---+  +---+  +===+
                     | 5 |  | 6 |  | 7 |  | 8 |  |R_2|
                     +---+  +---+  +---+  +---+  +===+

                     +---+  +---+  +---+  +---+  +===+
                     | 9 |  | 10|  | 11|  | 12|  |R_3|
                     +---+  +---+  +---+  +---+  +===+

                     +===+  +===+  +===+  +===+
                     |C_1|  |C_2|  |C_3|  |C_4|
                     +===+  +===+  +===+  +===+

        Figure 15: The resulting pattern after the second iteration


7.  SDP Examples

   This section provides two SDP [RFC4566] examples.  The examples use
   the FEC grouping semantics defined in [RFC4756].

   Editor's note:  MMUSIC WG is currently working on new grouping
   semantics (See [I-D.begen-mmusic-fec-grouping-issues] for details).
   The examples provided here can be updated once and if new semantics
   are introduced.

7.1.  Example SDP for 1-D Parity FEC Protection

   In this example, we have one source video stream (mid:S1) and one FEC
   repair stream (mid:R1).  We form one FEC group with the "a=group:FEC
   S1 R1" line.  The source and repair streams are sent to the same port
   on different multicast groups.  The repair window is set to 200 ms.
















Begen                    Expires March 15, 2009                [Page 32]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


        v=0
        o=ali 1122334455 1122334466 IN IP4 fec.example.com
        s=1-D Interleaved Parity FEC Example
        t=0 0
        a=group:FEC S1 R1
        m=video 30000 RTP/AVP 100
        c=IN IP4 224.1.1.1/127
        a=rtpmap:100 MP2T/90000
        a=mid:S1
        m=application 30000 RTP/AVP 110
        c=IN IP4 224.1.2.1/127
        a=rtpmap:110 interleaved-parityfec/90000
        a=fmtp:110 L:5; D:10; ToP:0; repair-window: 200000
        a=mid:R1

7.2.  Example SDP for 2-D Parity FEC Protection

   In this example, we have one source video stream (mid:S1) and two FEC
   repair streams (mid:R1 and mid:R2).  We form one FEC group with the
   "a=group:FEC S1 R1 R2" line.  The source and repair streams are sent
   to the same port on different multicast groups.  The repair window is
   set to 200 ms.

        v=0
        o=ali 1122334455 1122334466 IN IP4 fec.example.com
        s=2-D Parity FEC Example
        t=0 0
        a=group:FEC S1 R1 R2
        m=video 30000 RTP/AVP 100
        c=IN IP4 224.1.1.1/127
        a=rtpmap:100 MP2T/90000
        a=mid:S1
        m=application 30000 RTP/AVP 110
        c=IN IP4 224.1.2.1/127
        a=rtpmap:110 interleaved-parityfec/90000
        a=fmtp:110 L:5; D:10; ToP:2; repair-window: 200000
        a=mid:R1
        m=application 30000 RTP/AVP 111
        c=IN IP4 224.1.2.2/127
        a=rtpmap:111 non-interleaved-parityfec/90000
        a=fmtp:111 L:5; D:10; ToP:2; repair-window: 200000
        a=mid:R2

   Note that the sender might be generating two repair flows carrying
   non-interleaved and interleaved FEC packets, however the receiver
   might be interested only in the interleaved FEC packets.  The
   receiver can identify the repair flow carrying the desired repair
   data by checking the payload types associated with each repair flow



Begen                    Expires March 15, 2009                [Page 33]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


   described in the SDP description.


8.  Congestion Control Considerations

   FEC is an effective approach to provide applications resiliency
   against packet losses.  However, in networks where the congestion is
   a major contributor to the packet loss, the potential impacts of
   using FEC SHOULD be considered carefully before injecting the repair
   flows into the network.  In particular, in bandwidth-limited
   networks, FEC repair flows may consume most or all of the available
   bandwidth and consequently may congest the network.  In such cases,
   the applications MUST NOT arbitrarily increase the amount of FEC
   protection since doing so may lead to a congestion collapse.  If
   desired, stronger FEC protection MAY be applied only after the source
   rate has been reduced.

   In a network-friendly implementation, an application SHOULD NOT send/
   receive FEC repair flows if it knows that sending/receiving those FEC
   repair flows would not help at all in recovering the missing packets.
   Such a practice helps reduce the amount of wasted bandwidth.  It is
   RECOMMENDED that the amount of FEC protection is adjusted dynamically
   based on the packet loss rate observed by the applications.

   In multicast scenarios, it may be difficult to optimize the FEC
   protection per receiver.  If there is a large variation among the
   levels of FEC protection needed by different receivers, it is
   RECOMMENDED that the sender offers multiple repair flows with
   different levels of FEC protection and the receivers join the
   corresponding multicast sessions to receive the repair flow(s) that
   is best for them.

   Editor's note:  Additional congestion control considerations
   regarding the use of 2-D parity codes should be added here.


9.  Security Considerations

   TBC.


10.  IANA Considerations

   New media subtypes are subject to IANA registration.  For the
   registration of the payload formats and their parameters introduced
   in this document, refer to Section 5.





Begen                    Expires March 15, 2009                [Page 34]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


11.  Acknowledgments

   A major part of this document is borrowed from [RFC5109].  Thus, the
   author would like to thank the editor of [RFC5109] and those who
   contributed to [RFC5109].

   The author would also like to thank the FEC Framework Design Team for
   their inputs, suggestions and contributions.


12.  Change Log

12.1.  draft-begen-fecframe-1d2d-parity-scheme-01

   The following are the major changes compared to version -00 document:

   o  Missing parts in the introduction section are completed and the
      section is extended with the examples for 1-D and 2-D parity
      codes.

   o  Per the discussion in the WG, references to the FEC Framework have
      been removed and the document has been turned into a pure RTP
      payload format specification.

   o  The document now uses two different payload types for non-
      interleaved (row) and interleaved (column) FEC packets.  The
      timestamp field is also now set in a slightly different way.

   o  The L and D parameters are now omitted from the FEC header.
      Padding fields are added to the FEC header.

   o  It is no more required for the SSRC of the repair flow to be the
      same as the SSRC of the protected RTP stream.  SSRCs of the repair
      flows are now randomly assigned (with collision detection).

   o  The iterative decoding algorithm for the 2-D parity codes has been
      added.

   o  SDP examples have been added.

   o  A new section has been added for congestion control
      considerations.

   o  Some other editorial changes.


13.  References




Begen                    Expires March 15, 2009                [Page 35]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


13.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and V.
              Jacobson, "RTP: A Transport Protocol for Real-Time
              Applications", STD 64, RFC 3550, July 2003.

   [RFC4566]  Handley, M., Jacobson, V., and C. Perkins, "SDP: Session
              Description Protocol", RFC 4566, July 2006.

   [RFC4756]  Li, A., "Forward Error Correction Grouping Semantics in
              Session Description Protocol", RFC 4756, November 2006.

13.2.  Informative References

   [RFC2733]  Rosenberg, J. and H. Schulzrinne, "An RTP Payload Format
              for Generic Forward Error Correction", RFC 2733,
              December 1999.

   [RFC5109]  Li, A., "RTP Payload Format for Generic Forward Error
              Correction", RFC 5109, December 2007.

   [SMPTE2022-1]
              SMPTE 2022-1-2007, "Forward Error Correction for Real-Time
              Video/Audio Transport over IP Networks", 2007.

   [RFC4288]  Freed, N. and J. Klensin, "Media Type Specifications and
              Registration Procedures", BCP 13, RFC 4288, December 2005.

   [RFC3555]  Casner, S. and P. Hoschka, "MIME Type Registration of RTP
              Payload Formats", RFC 3555, July 2003.

   [I-D.begen-mmusic-fec-grouping-issues]
              Begen, A., "FEC Grouping Issues in Session Description
              Protocol", draft-begen-mmusic-fec-grouping-issues-00 (work
              in progress), February 2008.













Begen                    Expires March 15, 2009                [Page 36]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


Author's Address

   Ali Begen
   Cisco Systems
   170 West Tasman Drive
   San Jose, CA  95134
   USA

   Email:  abegen@cisco.com










































Begen                    Expires March 15, 2009                [Page 37]

Internet-Draft      RTP Payload Format for Parity FEC     September 2008


Full Copyright Statement

   Copyright (C) The IETF Trust (2008).

   This document is subject to the rights, licenses and restrictions
   contained in BCP 78, and except as set forth therein, the authors
   retain all their rights.

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND
   THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Acknowledgment

   Funding for the RFC Editor function is provided by the IETF
   Administrative Support Activity (IASA).





Begen                    Expires March 15, 2009                [Page 38]

