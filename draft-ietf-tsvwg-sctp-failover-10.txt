



Network Working Group                                         Y. Nishida
Internet-Draft                                        GE Global Research
Intended status: Standards Track                            P. Natarajan
Expires: September 10, 2015                                Cisco Systems
                                                                 A. Caro
                                                        BBN Technologies
                                                                 P. Amer
                                                  University of Delaware
                                                              K. Nielsen
                                                                Ericsson
                                                           March 9, 2015


               SCTP-PF: Quick Failover Algorithm in SCTP
                 draft-ietf-tsvwg-sctp-failover-10.txt

Abstract

   One of the major advantages of SCTP is the support of multi-homed
   communication.  A multi-homed SCTP end-point has the ability to
   withstand network failures by migrating the traffic from an inactive
   network to an active one.  However, if the failover operation as
   specified in RFC4960 is followed, there can be a significant delay in
   the migration to the active destination addresses, thus severely
   reducing the effectiveness of the SCTP failover operation.

   This document complements RFC4960 by the introduction of a new path
   state, the Potentially Failed (PF) path state, and an associated new
   failover operation to apply during a network failure.  The algorithm
   defined is called SCTP Potentially Failed Algorithm, SCTP-PF for
   short.  In addition, the document complements RFC4960 by introducing
   alternative switchover operation modes for the data transfer path
   management after the recovery of a failed primary path.  These modes
   can allow improvements in the performance of the operation in some
   network environments.  The implementation of the additional
   switchover operation modes is an optional part of SCTP-PF.

   The procedures defined in the document require only minimal
   modifications to the current specification.  The procedures are
   sender-side only and do not impact the SCTP receiver.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute



Nishida, et al.        Expires September 10, 2015               [Page 1]


Internet-Draft                   SCTP-PF                      March 2015


   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 10, 2015.

Copyright Notice

   Copyright (c) 2015 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Conventions and Terminology . . . . . . . . . . . . . . . . .   4
   3.  Issues with the SCTP Path Management  . . . . . . . . . . . .   4
   4.  SCTP with Potentially-Failed Destination State (SCTP-PF)  . .   5
     4.1.  SCTP-PF Concept . . . . . . . . . . . . . . . . . . . . .   5
     4.2.  Specification of the SCTP-PF Algorithm  . . . . . . . . .   6
       4.2.1.  Dormant State Operation . . . . . . . . . . . . . . .  10
     4.3.  Permanent Failover  . . . . . . . . . . . . . . . . . . .  12
       4.3.1.  Background  . . . . . . . . . . . . . . . . . . . . .  12
       4.3.2.  Permanent Failover Algorithm  . . . . . . . . . . . .  12
   5.  Socket API Considerations . . . . . . . . . . . . . . . . . .  13
     5.1.  Support for the Potentially Failed Path State . . . . . .  14
     5.2.  Peer Address Thresholds (SCTP_PEER_ADDR_THLDS) Socket
           Option  . . . . . . . . . . . . . . . . . . . . . . . . .  15
     5.3.  Exposing the Potentially Failed Path State
           (SCTP_EXPOSE_POTENTIALLY_FAILED_STATE) Socket Option  . .  16
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .  16
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  17
   8.  Proposed Change of Status (to be Deleted before Publication)   17
   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  17
     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  17



Nishida, et al.        Expires September 10, 2015               [Page 2]


Internet-Draft                   SCTP-PF                      March 2015


     9.2.  Informative References  . . . . . . . . . . . . . . . . .  17
   Appendix A.  Discussions of Alternative Approaches  . . . . . . .  18
     A.1.  Reduce Path.Max.Retrans (PMR) . . . . . . . . . . . . . .  18
     A.2.  Adjust RTO related parameters . . . . . . . . . . . . . .  19
   Appendix B.  Discussions for Path Bouncing Effect . . . . . . . .  20
   Appendix C.  SCTP-PF for SCTP Single-homed Operation  . . . . . .  20
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  20

1.  Introduction

   The Stream Control Transmission Protocol (SCTP) as specified in
   [RFC4960] supports multihoming at the transport layer -- an SCTP
   endpoint can bind to multiple IP addresses.  SCTP's multihoming
   features include failure detection and failover procedures to provide
   network interface redundancy and improved end-to-end fault tolerance.

   In SCTP's current failure detection procedure, the sender must
   experience Path.Max.Retrans (PMR) number of consecutive failed timer-
   based retransmissions on a destination address before detecting a
   path failure.  The sender fails over to an alternate active
   destination address only after failure detection.  Until detecting
   the failover, the sender continues to transmit data on the failed
   path, which degrades the SCTP performance.  Concurrent Multipath
   Transfer (CMT) [IYENGAR06] is an proposed extension to SCTP that
   allows the sender to transmit data on multiple paths simultaneously.
   Research [NATARAJAN09] shows that the current failure detection
   procedure worsens CMT performance during failover and can be
   significantly improved by employing a better failover algorithm.

   This document specifies an alternative failure detection and failover
   procedure, the SCTP Potentially Failed algorithm, that improves the
   performance of SCTP multi-homed operation during a failover.

   For multi-homed SCTP the operation after the recovery of a failed
   path equally well impacts the performance of the protocol.  With the
   procedures specified in [RFC4960], SCTP will, after a failover from
   the primary path, switch back to the primary path for data transfer
   as soon as this path becomes available again.  From a performance
   perspective, as confirmed in research [CARO02], such a switchback of
   the data transmission path is not optimal in general.  As an optional
   alternative to the switchback operation of [RFC4960], this document
   specifies the Permanent Failover procedures proposed by [CARO02].

   Additional discussion for alternative approaches that do not require
   modifications to [RFC4960], as well as discussion of path bouncing
   effects that might be caused by frequent switchover, are provided in
   the Appendices.




Nishida, et al.        Expires September 10, 2015               [Page 3]


Internet-Draft                   SCTP-PF                      March 2015


   While the Potentially Failed algorithm primarily is motivated for
   improvement of the SCTP multi-homed operation, the feature applies
   also to SCTP single-homed operation.  Here the algorithm serves to
   provide increased failure detection on idle associations, whereas the
   failover or switchback aspects of the algorithm will not be
   activated.  This is discussed in more detail in Appendix C.

2.  Conventions and Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

3.  Issues with the SCTP Path Management

   This section describes issues in the SCTP as specified in [RFC4960]
   to be fixed by the approach described in this document.

   An SCTP endpoint can support multiple IP addresses.  Each SCTP
   endpoint exchanges the list of its usable addresses during the
   initial negotiation with its peer.  Then the endpoints select one
   address from the peer's list and use this as the primary destination
   address.  During normal transmission, an SCTP endpoint sends all user
   data to the primary destination address.  Also, it sends packets
   containing a HEARTBEAT chunk to all idle destination addresses at a
   certain interval to check the reachability of these destination
   addresses.  Idle destination addresses normally include all non-
   primary destination addresses.

   If a sender has multiple active destination addresses, it can
   retransmit data to an non-primary destination address, if the
   transmission to the primary times out.

   When a sender receives an acknowledgment for DATA or HEARTBEAT chunks
   sent to one of the destination addresses, it considers that
   destination address to be active and clears the error counter for the
   destination address.  If it fails to receive acknowledgments, the
   error count for the destination address is increased.  If the error
   counter exceeds the tunable protocol parameter Path.Max.Retrans
   (PMR), the SCTP endpoint considers the destination address to be
   inactive.

   The failover process of SCTP is initiated when the primary path
   becomes inactive (the error counter for the primary path exceeds
   Path.Max.Retrans).  If the primary path is marked inactive, SCTP
   chooses a new destination address from one of the active destinations
   and starts using this as the destination address for sending data.
   If the primary path becomes active again, SCTP reverts to using the



Nishida, et al.        Expires September 10, 2015               [Page 4]


Internet-Draft                   SCTP-PF                      March 2015


   primary destination address for subsequent data transmissions and
   stop using the non-primary one.

   One issue with this failover process defined in [RFC4960] is that it
   usually takes a significant amount of time before SCTP switches to
   the new destination address.  Let's say the primary path on a multi-
   homed host becomes unavailable and the RTO value for the primary path
   at that time is around 1 second, it usually takes over 60 seconds
   before SCTP starts to use the non-primary path for initial data
   transmission.  This is because the recommended value for
   Path.Max.Retrans in the [RFC4960] is 5, which requires 6 consecutive
   timeouts before the failover takes place.  Before SCTP switches to
   the non-primary address, SCTP keeps trying to send packets to the
   primary address and only retransmitted packets are sent to the non-
   primary address and thus can be received by the receiver.  This slow
   failover process can cause significant performance degradation and is
   not acceptable in some situations.

   Another issue with RFC4960 failover and switchback operation is that
   once the primary path becomes active again, the traffic is
   unconditionally switched back to use this path.  This is not optimal
   in some situations.  This is further discussed in Section 4.3.

4.  SCTP with Potentially-Failed Destination State (SCTP-PF)

   To address the issues described in Section 3, this document extends
   SCTP path management scheme by adding the Potentially Failed state
   and associated protocol operation.  The algorithm is called SCTP
   Potentially Failed algorithm.  SCTP-PF for short.  The resulting SCTP
   path management operation is called SCTP Potentially Failed
   operation.

4.1.  SCTP-PF Concept

   The introduction of the Potentially Failed state stems from the
   following two observations about SCTP's failure detection procedure:

   o  To minimize the performance impact during failover, the sender
      should avoid transmitting data to the failed destination address
      as early as possible.  In the current SCTP path management scheme,
      the sender stops transmitting data to a destination address only
      after the destination address is marked Failed (inactive).  Thus,
      a smaller PMR value is better because the sender can transition a
      destination address to the Failed (inactive) state quicker.

   o  Smaller PMR values increase the chances of spurious failure
      detection where the sender incorrectly marks a destination address
      as Failed (inactive) during periods of temporary congestion.  As



Nishida, et al.        Expires September 10, 2015               [Page 5]


Internet-Draft                   SCTP-PF                      March 2015


      [RFC4960] recommends for a coupling of the PMR value and the
      protocol parameter Association.Max.Retrans (AMR) value such
      spurious failure detection risks to carry over to spurious
      association failure detection and closure.  Larger PMR values are
      preferable to avoid spurious failure detection.

   From the above observations it is clear that tuning the PMR value
   involves the following trade off -- a lower value improves
   performance but increases the chances of spurious failure detection,
   whereas a higher value degrades performance and reduces spurious
   failure detection in a wide range of path conditions.  Thus, tuning
   the association's PMR value is an incomplete solution to address the
   performance impact during failure.

   SCTP-PF defined in this document introduces the new Potentially
   Failed (PF) destination address state in SCTP's path management
   procedure.  The new Potentially Failed (PF) destination address state
   applies to SCTP single-homed operation as well as to SCTP multi-homed
   operation.  The PF state was originally proposed to improve CMT
   performance [NATARAJAN09].  The PF state is an intermediate state
   between the Active and Failed states.  SCTP's failure detection
   procedure is modified to include the PF state.  The new failure
   detection algorithm assumes that loss detected by a timeout implies
   either severe congestion or failure en-route.  After a number of
   consecutive timeouts on a path, the sender is unsure, and marks the
   corresponding destination address as in the PF state.  A PF
   destination address is not used for data transmission except when it
   is the only destination address available (e.g., for single-homed
   SCTP) or in other special cases (discussed below).  The new failure
   detection algorithm requires only sender-side changes.

4.2.  Specification of the SCTP-PF Algorithm

   The SCTP-PF operation is specified as follows:

   1.   The sender maintains a new tunable parameter called
        PotentiallyFailed.Max.Retrans (PFMR).  The RECOMMENDED value of
        PFMR is 0 when SCTP-PF is used.  The PFMR defines a new
        intermediate PF threshold on the destination address error
        counter at exceed of which the destination address is classified
        as PF and related PF state actions are to be taken.  By standard
        RFC4960 semantics a destination address is classified as
        Inactive once the error counter exceeds PMR.  Setting PFMR
        larger to or equal to PMR does not result in definition of a PF
        threshold for the destination address.  I.e., PFMR set larger to
        or equal to PMR means that the destination address never will be
        classified as PF.




Nishida, et al.        Expires September 10, 2015               [Page 6]


Internet-Draft                   SCTP-PF                      March 2015


   2.   The error counter of an active destination address is
        incremented as specified in [RFC4960].  This means that the
        error counter of the destination address will be incremented
        each time the T3-rtx timer expires, or each time a HEARTBEAT
        chunk is sent when idle and not acknowledged within an RTO.
        When the value in the destination address error counter exceeds
        PFMR, the endpoint MUST mark the destination address as in the
        PF state.

   3.   The PFMR threshold defines the point the destination address no
        longer is considered a good candidate for data transmission and
        a SCTP-PF sender SHOULD NOT send data to destination addresses
        in PF state when alternative destination addresses in active
        state are available.  Specifically this means that:

        i  When there is outbound data to send and the destination
           address presently used for data transmission is in PF state,
           the sender SHOULD choose a destination address in active
           state, if one exists, and failover to deploy this destination
           address for data transmission.

        ii When retransmitting data that has timed out and the sender
           thus by [RFC4960], section 6.4.1, should attempt to pick a
           new destination address for data retransmission, the sender
           SHOULD choose an alternate destination transport address in
           active state if one exists.

        iii  When there is outbound data to send and the SCTP user
           explicitly requests to send data to a destination address in
           PF state, the sender SHOULD send the data to an alternate
           destination address in active state if one exists.

        When choosing among multiple destination address in active state
        the following considerations are given:

        A.  An SCTP sender should comply with [RFC4960], section 6.4.1,
            principles of choosing most divergent source-destination
            pairs compared with, for i.: the destination address in PF
            state that it performs a failover from, and for ii.: the
            destination address towards which the data timed out.  Rules
            for picking the most divergent source-destination pair are
            an implementation decision and are not specified within this
            document.

        B.  A SCTP-PF sender MAY choose to send data to a destination
            address in PF state, even if destination addresses in active
            state exist, have the SCTP-PF sender other means of
            information available that disqualifies the destination



Nishida, et al.        Expires September 10, 2015               [Page 7]


Internet-Draft                   SCTP-PF                      March 2015


            address in active state from being preferred.  However, the
            discussion of such mechanisms is outside of the scope of the
            SCTP_PF operation specified in this document.

        In all cases, the sender MUST NOT change the state of chosen
        destination address, whether this state be active or PF, and it
        MUST NOT clear the error counter of the destination address as a
        result of choosing the destination address for data
        transmission.

   4.   When the destination addresses are all in PF state or some in PF
        state and some in inactive state, the sender MUST choose one
        destination address in PF state and transmit or retransmit data
        to this destination address using the following rules:

        A.  The sender SHOULD choose the destination in PF state with
            the lowest error count (fewest consecutive timeouts) for
            data transmission and transmit or retransmit data to this
            destination.

        B.  When there are multiple PF destinations with same error
            count, the sender should let the choice among the multiple
            PF destination with equal error count be based on the
            [RFC4960], section 6.4.1, principles of choosing most
            divergent source-destination pairs when executing
            (potentially consecutive) retransmission.  Rules for picking
            the most divergent source-destination pair are an
            implementation decision and are not specified within this
            document.

        C.  A sender MAY choose to deploy other strategies than the
            above when choosing among multiple PF destinations have the
            SCTP-PF sender other means of information available that
            qualifies a particular destination address for being used.
            The SCTP-PF protocol operation specified in this document
            makes no assumption of the existence of such other means of
            information and specifies for the above as the default
            operation of an SCTP-PF sender.

        The sender MUST NOT change the state and the error counter of
        any destination address regardless of whether it has been chosen
        for transmission or not.

   5.   HEARTBEAT chunks MUST be send to PF destination addresses
        regardless of whether the Path Heartbeat function (Section 8.3
        of [RFC4960]) is enabled for the destination address or not.
        The HB.interval of the Path Heartbeat function of [RFC4960] MUST
        be ignored for destination addresses in PF state, instead



Nishida, et al.        Expires September 10, 2015               [Page 8]


Internet-Draft                   SCTP-PF                      March 2015


        HEARTBEAT chunks are sent to destination addresses in PF state
        once per RTO.  The HEARTBEAT sending begins upon that a
        destination address reaches the PF state.  When a HEARTBEAT
        chunk is not acknowledged within the RTO, the sender increments
        the error counter and exponentially back off the RTO value.  If
        the error counter is less than PMR, the sender transmits another
        packet containing the HEARTBEAT chunk immediately after timeout
        expiration on the previous HEARTBEAT.  When data is being
        transmitted to a destination address in the PF state, the
        transmission of a HEARTBEAT chunk MAY be omitted in case receipt
        of a SACK of or a T3-rtx timer expiration on the outstanding
        data can provide equivalent information.  Likewise the timeout
        of a HEARTBEAT chunk MAY be ignored if data is outstanding
        towards the destination address.

   6.   When the sender receives a HEARTBEAT ACK from a destination
        address in PF state, the sender MUST clear the error counter of
        the destination address and transition the destination address
        back to active state.  When the sender resumes data transmission
        on the destination address, it MUST do this following the
        prescriptions of Section 7.2 of [RFC4960].

   7.   Additional (PMR - PFMR) consecutive timeouts on a destination
        address in PF state confirm the path failure, upon which the
        destination address transitions to the inactive state.  As
        described in [RFC4960], the sender (i) SHOULD notify the ULP
        about this state transition, and (ii) transmit HEARTBEAT chunks
        to the inactive destination address at a lower frequency as
        described in Section 8.3 of [RFC4960] (when this function is
        enabled for the destination address).

   8.   Acknowledgments for chunks that have been transmitted to
        multiple destinations (i.e., a chunk which has been
        retransmitted to a different destination address than the
        destination address to which the chunk was first transmitted)
        MUST NOT clear the error count for an inactive destination
        address and MUST NOT transition a PF destination address back to
        active state, since a sender cannot disambiguate whether the ACK
        was for the original transmission or the retransmission(s).  The
        same ambiguity concerns the related congestion window growth.
        The bytes of a newly acknowledged chunk which has been
        transmitted to multiple destination addresses SHOULD be
        considered for contribution to the congestion window growth
        towards the destination address where the chunk was last sent.
        The contribution of the ACKed bytes to the window growth is
        subject to the prescriptions described in Section 7.2 of
        [RFC4960] is fulfilled.  A SCTP sender MAY apply a different
        approach for both the error count handling and the congestion



Nishida, et al.        Expires September 10, 2015               [Page 9]


Internet-Draft                   SCTP-PF                      March 2015


        control growth handling based on unequivocally information on
        which destination (including multiple destination addresses) the
        chunk reached.  This document makes no reference to what such
        unequivocally information could consist of, neither how such
        unequivocally information could be obtained.  The design of such
        an alternative approach is left to implementations.

   9.   Acknowledgments for chunks that has been transmitted to one
        destination address only MUST clear the error counter for the
        destination address and MUST transition a PF destination address
        back to Active state.  This situation can happen when new data
        is sent to a destination address in the PF state.  It can also
        happen in situations where the destination address is in the PF
        state due to the occurrence of a spurious T3-rtx timer and
        Acknowledgments start to arrive for data sent prior to
        occurrence of the spurious T3-rtx and data has not yet been
        retransmitted towards other destinations.  This document does
        not specify special handling for detection of or reaction to
        spurious T3-rtx timeouts, e.g., for special operation vis-a-vis
        the congestion control handling or data retransmission operation
        towards a destination address which undergoes a transition from
        active to PF to active state due to a spurious T3-rtx timeout.
        But it is noted that this is an area which would benefit from
        additional attention, experimentation and specification for
        Single Homed SCTP as well as for Multi Homed SCTP protocol
        operation.

   10.  The SCTP stack SHOULD provide the ULP with the means to expose
        the PF state of its destinations as well as the means to notify
        the state transitions from Active to PF, and vice-versa.  When
        doing this, such an SCTP stack MUST provide the ULP with the
        means to suppress exposure of PF state and associated state
        transitions as well.

4.2.1.  Dormant State Operation

   In a situation with complete disruption of the communication in
   between the SCTP Endpoints, the aggressive HEARTBEAT transmissions of
   SCTP-PF on destination addresses in PF state may make the association
   enter dormant state faster than a standard [RFC4960] SCTP
   implementation given the same setting of Path.Max.Retrans (PMR) and
   Association.Max.Retrans (AMR).  For example, an SCTP association with
   two destination addresses typically would reach dormant state in half
   the time of an [RFC4960] SCTP implementation in such situations.
   This is because a SCTP PF sender will send HEARTBEATS and data
   retransmissions in parallel with RTO intervals when there are
   multiple destinations addresses in PF state.  This argument pressumes
   that RTO << HB.interval of [RFC4960].  One could use higher values of



Nishida, et al.        Expires September 10, 2015              [Page 10]


Internet-Draft                   SCTP-PF                      March 2015


   PMR, which makes the dormant state situations less likely to happen.
   The downside of increasing the PMR value is that destination address
   failure detections and notifications of such events to ULP is
   weakened.

   A design goal of SCTP-PF is that it should provide the same level of
   disruption tolerance as an [RFC4960] SCTP implementation with the
   same Path.Max.Retrans (PMR) and Association.Max.Retrans (AMR)
   setting.  For this reason, SCTP-PF SHOULD perform the following
   operations during dormant state, while this is an implementation
   decision in [RFC4960].

   a.  When the destination addresses are all in inactive state, the
       sender MUST choose one destination when data is transmitted.  The
       sender MUST NOT change the state and the error counter of any
       destination address regardless of whether it has been chosen for
       transmission or not.

   b.  The sender SHOULD choose the destination in inactive state with
       the lowest error count (fewest consecutive timeouts) for data
       transmission.  When there are multiple destinations with same
       error count in inactive state, the sender SHOULD attempt to pick
       the most divergent source - destination pair from the last source
       - destination pair where failure was observed.  Rules for picking
       the most divergent source-destination pair are an implementation
       decision and are not specified within this document.  To support
       differentiation of inactive destination addresses based on their
       error count SCTP will need to allow for increment of the
       destination address error counters up to some reasonable limit
       above PMR+1, thus changing the prescriptions of [RFC4960],
       section 8.3, in this respect.  The exact limit to apply is not
       specified in this document but it is considered reasonable to
       require for such to be an order of magnitude higher than the PMR
       value.  A sender MAY choose to deploy other strategies that the
       strategy defined by here.  The strategy to prioritize the last
       active destination address,i.e., the destination address with the
       fewest error counts is optimal when some paths are permanently
       inactive, but suboptimal when a path instability is transient.

   An SCTP-PF implementation MAY keep the operation during dormant state
   an implementation decision, but it should be careful not to
   compromise the fault tolerance of the SCTP operation.

   The above prescriptions for SCTP-PF dormant state handling SHOULD NOT
   be coupled to the value of the PFMR, but solely to the activation of
   SCTP-PF logic in an SCTP implementation.  It is further noted that
   also a standard [RFC4960] SCTP implementation can use this mode of




Nishida, et al.        Expires September 10, 2015              [Page 11]


Internet-Draft                   SCTP-PF                      March 2015


   operation to improve the fault tolerance (which some implementations
   already do).

4.3.  Permanent Failover

   This section describes an OPTIONAL switchback feature called
   Permanent Failover which is beneficiary to deploy in certain
   situations.

4.3.1.  Background

   In [RFC4960], an SCTP sender migrates the traffic back to the
   original primary destination address once this address becomes active
   again.  As the CWND towards the original primary destination address
   has to be rebuilt once data transfer resumes, the switch back to use
   the original primary address is not always optimal.  Indeed [CARO02]
   shows that the switch back to the original primary may degrade SCTP
   performance compared to continuing data transmission on the same
   path, especially, but not only, in scenarios where this path's
   characteristics are better.  In order to mitigate this performance
   degradation, the Permanent Failover operation was proposed in
   [CARO02].  When SCTP changes the destination address due to failover,
   Permanent Failover operation allows SCTP sender to continue data
   transmission on the new working path even when the old primary
   destination address becomes active again.  This is achieved by having
   SCTP perform a switch over of the primary path to the alternative
   working path rather than having SCTP switch back data transfer to the
   (previous) primary path.

   The manner of switch over operation that is most optimal in a given
   scenario depends on the relative quality of a set primary path versus
   the quality of alternative paths available as well as it depends on
   the extent to which it is desired for the mode of operation to
   enforce traffic distribution over a number of network paths.  I.e.,
   load distribution of traffic from multiple SCTP associations may be
   sought to be enforced by distribution of the set primary paths with
   [RFC4960] switchback operation.  However as [RFC4960] switchback
   behavior is suboptimal in certain situations, especially in scenarios
   where a number of equally good paths are available, it is recommended
   for SCTP to support also, as alternative behavior, the Permanent
   Failover switch over modes of operation.

4.3.2.  Permanent Failover Algorithm

   The Permanent Failover operation requires only sender side changes.
   The details are:





Nishida, et al.        Expires September 10, 2015              [Page 12]


Internet-Draft                   SCTP-PF                      March 2015


   1.  The sender maintains a new tunable parameter, called
       Primary.Switchover.Max.Retrans (PSMR).  The PSMR MUST be set
       greater or equal to the PFMR value.  Implementations MUST reject
       any other values of PSMR.

   2.  When the path error counter on a set primary path exceeds PSMR,
       the SCTP implementation MUST autonomously select and set a new
       primary path.

   3.  The primary path selected by the SCTP implementation MUST be the
       path which at the given time would be chosen for data transfer.
       A previously failed primary path can be used as data transfer
       path as per normal path selection when the present data transfer
       path fails.

   4.  The recommended value of PSMR is PFMR when Permanent Failover is
       used.  This means that no forced switchback to a previously
       failed primary path is performed.  An implementation of Permanent
       Failover MUST support the setting of PSMR = PFMR.  An
       implementation of Permanent Failover MAY support setting of PSMR
       > PFMR.

   5.  It MUST be possible to disable the Permanent Failover and obtain
       the standard switchback operation of [RFC4960].

   To support optimal operation in a wider range of network scenarios,
   it it proposed for an SCTP-PF implementation to implement Permanent
   Failover operation as an optional feature.  The implementation of the
   Permanent Failover feature is optional for an SCTP-PF implementation.
   For an SCTP implementation that implements Permanent Failover, this
   specification RECOMMENDS that the standard RFC4960 switchback
   operation is retained as the default operation.

5.  Socket API Considerations

   This section describes how the socket API defined in [RFC6458] is
   extended to provide a way for the application to control and observe
   the SCTP-PF behavior.

   Please note that this section is informational only.

   A socket API implementation based on [RFC6458] is, by means of the
   existing SCTP_PEER_ADDR_CHANGE event, extended to provide the event
   notification when a peer address enters or leaves the potentially
   failed state as well as the socket API implementation is extended to
   expose the potentially failed state of a peer address in the existing
   SCTP_GET_PEER_ADDR_INFO structure.




Nishida, et al.        Expires September 10, 2015              [Page 13]


Internet-Draft                   SCTP-PF                      March 2015


   Furthermore, two new read/write socket options for the level
   IPPROTO_SCTP and the name SCTP_PEER_ADDR_THLDS and
   SCTP_EXPOSE_POTENTIALLY_FAILED_STATE are defined as described below.
   The first socket option is used to control the values of the PFMR and
   PSMR parameters described in Section 4.  The second one controls the
   exposition of the potentially failed path state.

   Support for the SCTP_PEER_ADDR_THLDS and
   SCTP_EXPOSE_POTENTIALLY_FAILED_STATE socket options need also to be
   added to the function sctp_opt_info().

5.1.  Support for the Potentially Failed Path State

   As defined in [RFC6458], the SCTP_PEER_ADDR_CHANGE event is provided
   if the status of a peer address changes.  In addition to the state
   changes described in [RFC6458], this event is also provided, if a
   peer address enters or leaves the potentially failed state.  The
   notification as defined in [RFC6458] uses the following structure:

   struct sctp_paddr_change {
     uint16_t spc_type;
     uint16_t spc_flags;
     uint32_t spc_length;
     struct sockaddr_storage spc_aaddr;
     uint32_t spc_state;
     uint32_t spc_error;
     sctp_assoc_t spc_assoc_id;
   }

   [RFC6458] defines the constants SCTP_ADDR_AVAILABLE,
   SCTP_ADDR_UNREACHABLE, SCTP_ADDR_REMOVED, SCTP_ADDR_ADDED, and
   SCTP_ADDR_MADE_PRIM to be provided in the spc_state field.  This
   document defines in addition to that the new constant
   SCTP_ADDR_POTENTIALLY_FAILED, which is reported if the affected
   address becomes potentially failed.

   The SCTP_GET_PEER_ADDR_INFO socket option defined in [RFC6458] can be
   used to query the state of a peer address.  It uses the following
   structure:












Nishida, et al.        Expires September 10, 2015              [Page 14]


Internet-Draft                   SCTP-PF                      March 2015


   struct sctp_paddrinfo {
     sctp_assoc_t spinfo_assoc_id;
     struct sockaddr_storage spinfo_address;
     int32_t spinfo_state;
     uint32_t spinfo_cwnd;
     uint32_t spinfo_srtt;
     uint32_t spinfo_rto;
     uint32_t spinfo_mtu;
   };

   [RFC6458] defines the constants SCTP_UNCONFIRMED, SCTP_ACTIVE, and
   SCTP_INACTIVE to be provided in the spinfo_state field.  This
   document defines in addition to that the new constant
   SCTP_POTENTIALLY_FAILED, which is reported if the peer address is
   potentially failed.

5.2.  Peer Address Thresholds (SCTP_PEER_ADDR_THLDS) Socket Option

   Applications can control the SCTP-PF behavior by getting or setting
   the number of consecutive timeouts before a peer address is
   considered potentially failed or unreachable and before the primary
   path is changed automatically.  This socket option uses the level
   IPPROTO_SCTP and the name SCTP_PEER_ADDR_THLDS.

   The following structure is used to access and modify the thresholds:

   struct sctp_paddrthlds {
     sctp_assoc_t spt_assoc_id;
     struct sockaddr_storage spt_address;
     uint16_t spt_pathmaxrxt;
     uint16_t spt_pathpfthld;
     uint16_t spt_pathcpthld;
   };

   spt_assoc_id:  This parameter is ignored for one-to-one style
      sockets.  For one-to-many style sockets the application may fill
      in an association identifier or SCTP_FUTURE_ASSOC.  It is an error
      to use SCTP_{CURRENT|ALL}_ASSOC in spt_assoc_id.

   spt_address:  This specifies which peer address is of interest.  If a
      wild card address is provided, this socket option applies to all
      current and future peer addresses.

   spt_pathmaxrxt:  Each peer address of interest is considered
      unreachable, if its path error counter exceeds spt_pathmaxrxt.






Nishida, et al.        Expires September 10, 2015              [Page 15]


Internet-Draft                   SCTP-PF                      March 2015


   spt_pathpfthld:  Each peer address of interest is considered
      potentially failed, if its path error counter exceeds
      spt_pathpfthld.

   spt_pathcpthld:  Each peer address of interest is not considered the
      primary remote address anymore, if its path error counter exceeds
      spt_pathcpthld.  Using a value of 0xffff disables the selection of
      a new primary peer address.  If an implementation does not support
      the automatically selection of a new primary address, it should
      indicate an error with errno set to EINVAL if a value different
      from 0xffff is used in spt_pathcpthld.  Setting of spt_pathcpthld
      < spt_pathpfthld should be rejected with errno set to EINVAL.  An
      implementation MAY support only setting of spt_pathcpthld =
      spt_pathpfthld and spt_pathcpthld = 0xffff.  In this case it shall
      reject setting of other values with errno set to EINVAL.

5.3.  Exposing the Potentially Failed Path State
      (SCTP_EXPOSE_POTENTIALLY_FAILED_STATE) Socket Option

   Applications can control the exposure of the potentially failed path
   state in the SCTP_PEER_ADDR_CHANGE event and the
   SCTP_GET_PEER_ADDR_INFO as described in Section 5.1.  The default
   value is implementation specific.

   This socket option uses the level IPPROTO_SCTP and the name
   SCTP_EXPOSE_POTENTIALLY_FAILED_STATE.

   The following structure is used to control the exposition of the
   potentially failed path state:

   struct sctp_assoc_value {
     sctp_assoc_t assoc_id;
     uint32_t assoc_value;
   };

   assoc_id:  This parameter is ignored for one-to-one style sockets.
      For one-to-many style sockets the application may fill in an
      association identifier or SCTP_FUTURE_ASSOC.  It is an error to
      use SCTP_{CURRENT|ALL}_ASSOC in assoc_id.

   assoc_value:  The potentially failed path state is exposed if and
      only if this parameter is non-zero.

6.  Security Considerations

   Security considerations for the use of SCTP and its APIs are
   discussed in [RFC4960] and [RFC6458].  The logic described here is
   for sender-side only enabled by configuration and does not have any



Nishida, et al.        Expires September 10, 2015              [Page 16]


Internet-Draft                   SCTP-PF                      March 2015


   impacts on protocol messages on the wire.  No new chunk type or new
   field parameter is not required in this document.

7.  IANA Considerations

   This document does not create any new registries or modify the rules
   for any existing registries managed by IANA.

8.  Proposed Change of Status (to be Deleted before Publication)

   Initially this work looked to entail some changes of the Congestion
   Control (CC) operation of SCTP and for this reason the work was
   proposed as Experimental.  These intended changes of the CC operation
   have since been judged to be irrelevant and are no longer part of the
   specification.  As the specification entails no other potential
   harmful features, consensus exists in the WG to bring the work
   forward as PS.

   Initially concerns have been expressed about the possibility for the
   mechanism to introduce path bouncing with potential harmful network
   impacts.  These concerns are believed to be unfounded.  This issue is
   addressed in Appendix B.

   It is noted that the feature specified by this document is
   implemented by multiple SCTP SW implementations and furthermore that
   various variants of the solution have been deployed in Telco
   signaling environments for several years with good results.

9.  References

9.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC4960]  Stewart, R., "Stream Control Transmission Protocol", RFC
              4960, September 2007.

9.2.  Informative References

   [CARO02]   Caro Jr., A., Iyengar, J., Amer, P., Heinz, G., and R.
              Stewart, "A Two-level Threshold Recovery Mechanism for
              SCTP", Tech report, CIS Dept, University of Delaware , 7
              2002.

   [CARO04]   Caro Jr., A., Amer, P., and R. Stewart, "End-to-End
              Failover Thresholds for Transport Layer Multihoming",
              MILCOM 2004 , 11 2004.



Nishida, et al.        Expires September 10, 2015              [Page 17]


Internet-Draft                   SCTP-PF                      March 2015


   [CARO05]   Caro Jr., A., "End-to-End Fault Tolerance using Transport
              Layer Multihoming", Ph.D Thesis, University of Delaware ,
              1 2005.

   [FALLON08]
              Fallon, S., Jacob, P., Qiao, Y., Murphy, L., Fallon, E.,
              and A. Hanley, "SCTP Switchover Performance Issues in WLAN
              Environments", IEEE CCNC 2008, 1 2008.

   [GRINNEMO04]
              Grinnemo, K-J. and A. Brunstrom, "Performance of SCTP-
              controlled failovers in M3UA-based SIGTRAN networks",
              Advanced Simulation Technologies Conference , 4 2004.

   [IYENGAR06]
              Iyengar, J., Amer, P., and R. Stewart, "Concurrent
              Multipath Transfer using SCTP Multihoming over Independent
              End-to-end Paths.", IEEE/ACM Trans on Networking 14(5), 10
              2006.

   [JUNGMAIER02]
              Jungmaier, A., Rathgeb, E., and M. Tuexen, "On the use of
              SCTP in failover scenarios", World Multiconference on
              Systemics, Cybernetics and Informatics , 7 2002.

   [NATARAJAN09]
              Natarajan, P., Ekiz, N., Amer, P., and R. Stewart,
              "Concurrent Multipath Transfer during Path Failure",
              Computer Communications , 5 2009.

   [RFC6458]  Stewart, R., Tuexen, M., Poon, K., Lei, P., and V.
              Yasevich, "Sockets API Extensions for the Stream Control
              Transmission Protocol (SCTP)", RFC 6458, December 2011.

Appendix A.  Discussions of Alternative Approaches

   This section lists alternative approaches for the issues described in
   this document.  Although these approaches do not require to update
   RFC4960, we do not recommend them from the reasons described below.

A.1.  Reduce Path.Max.Retrans (PMR)

   Smaller values for Path.Max.Retrans shorten the failover duration.
   In fact, this is recommended in some research results [JUNGMAIER02]
   [GRINNEMO04] [FALLON08].  For example, if when Path.Max.Retrans=0,
   SCTP switches to another destination address on a single timeout.
   This smaller value for Path.Max.Retrans can results in spurious
   failover, which might be a problem.



Nishida, et al.        Expires September 10, 2015              [Page 18]


Internet-Draft                   SCTP-PF                      March 2015


   Unlike SCTP-PF, the interval for heartbeat packets is governed by
   'HB.interval' even during failover process.  'HB.interval' is usually
   set in the order of seconds (recommended value is 30 seconds).  When
   the primary path becomes inactive, the next HEARTBEAT can be
   transmitted only seconds later.  Meanwhile, the primary path may have
   recovered.  In such situations, post failover, an endpoint is forced
   to wait on the order of seconds before the endpoint can resume
   transmission on the primary path.  However, using smaller value for
   'HB.interval' might help this situation, but it will be the waste of
   bandwidth in most cases.

   In addition, smaller Path.Max.Retrans values also affect
   'Association.Max.Retrans' values.  When the SCTP association's error
   count (sum of error counts on all ACTIVE paths) exceeds
   Association.Max.Retrans threshold, the SCTP sender considers the peer
   endpoint unreachable and terminates the association.  Therefore,
   Section 8.2 in [RFC4960] recommends that Association.Max.Retrans
   value should not be larger than the summation of the Path.Max.Retrans
   of each of the destination addresses, else the SCTP sender considers
   its peer reachable even when all destinations are INACTIVE.  To avoid
   such inconsistent behavior an SCTP implementation SHOULD reduce
   Association.Max.Retrans accordingly whenever it reduces
   Path.Max.Retrans.  However, smaller Association.Max.Retrans value
   increases chances of association termination during minor congestion
   events.

A.2.  Adjust RTO related parameters

   As several research results indicate, we can also shorten the
   duration of failover process by adjusting RTO related parameters
   [JUNGMAIER02] [FALLON08].  During failover process, RTO keeps being
   doubled.  However, if we can choose smaller value for RTO.max, we can
   stop the exponential growth of RTO at some point.  Also, choosing
   smaller values for RTO.initial or RTO.min can contribute to keep RTO
   value small.

   Similar to reducing Path.Max.Retrans, the advantage of this approach
   is that it requires no modification to the current specification,
   although it needs to ignore several recommendations described in the
   Section 15 of [RFC4960].  However, this approach requires to have
   enough knowledge about the network characteristics between end
   points.  Otherwise, it can introduce adverse side-effects such as
   spurious timeouts.








Nishida, et al.        Expires September 10, 2015              [Page 19]


Internet-Draft                   SCTP-PF                      March 2015


Appendix B.  Discussions for Path Bouncing Effect

   The methods described in the document can accelerate the failover
   process.  Hence, they might introduce the path bouncing effect where
   the sender keeps changing the data transmission path frequently.
   This sounds harmful to the data transfer, however several research
   results indicate that there is no serious problem with SCTP in terms
   of path bouncing effect [CARO04] [CARO05].

   There are two main reasons for this.  First, SCTP is basically
   designed for multipath communication, which means SCTP maintains all
   path related parameters (CWND, ssthresh, RTT, error count, etc) per
   each destination address.  These parameters cannot be affected by
   path bouncing.  In addition, when SCTP migrates the data transfer to
   another path, it starts with the minimal or the initial CWND.  Hence,
   there is little chance for packet reordering or duplicating.

   Second, even if all communication paths between the end-nodes share
   the same bottleneck, the SCTP-PF results in a behavior already
   allowed by [RFC4960].

Appendix C.  SCTP-PF for SCTP Single-homed Operation

   For a single-homed SCTP association the only tangible effect of the
   activation of SCTP-PF operation is enhanced failure detection in
   terms of potential notification of the PF state of the sole
   destination address as well as, for idle associations, more rapid
   entering, and notification, of inactive state of the destination
   address and more rapid end-point failure detection.  It is believed
   that neither of these effects are harmful, provided adequate dormant
   state operation is implemented, and furthermore that they may be
   particularly useful for applications that deploys multiple SCTP
   associations for load balancing purposes.  The early notification of
   the PF state may be used for preventive measures as the entering of
   the PF state can be used as a warning of potential congestion.
   Depending on the PMR value, the aggressive HEARTBEAT transmission in
   PF state may speed up the end-point failure detection (exceed of AMR
   threshold on the sole path error counter) on idle associations in
   case where relatively large HB.interval value compared to RTO (e.g.
   30secs) is used.

Authors' Addresses









Nishida, et al.        Expires September 10, 2015              [Page 20]


Internet-Draft                   SCTP-PF                      March 2015


   Yoshifumi Nishida
   GE Global Research
   2623 Camino Ramon
   San Ramon, CA  94583
   USA

   Email: nishida@wide.ad.jp


   Preethi Natarajan
   Cisco Systems
   510 McCarthy Blvd
   Milpitas, CA  95035
   USA

   Email: prenatar@cisco.com


   Armando Caro
   BBN Technologies
   10 Moulton St.
   Cambridge, MA  02138
   USA

   Email: acaro@bbn.com


   Paul D. Amer
   University of Delaware
   Computer Science Department - 434 Smith Hall
   Newark, DE  19716-2586
   USA

   Email: amer@udel.edu


   Karen E. E. Nielsen
   Ericsson
   Kistavaegen 25
   Stockholm  164 80
   Sweden

   Email: karen.nielsen@tieto.com








Nishida, et al.        Expires September 10, 2015              [Page 21]

