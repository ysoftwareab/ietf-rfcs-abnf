
PANA Working Group                                           D. Forsberg
Internet-Draft                                                     Nokia
Expires: April 20, 2005                                    Y. Ohba (Ed.)
                                                                 Toshiba
                                                                B. Patil
                                                                   Nokia
                                                           H. Tschofenig
                                                                 Siemens
                                                                A. Yegin
                                                                 Samsung
                                                        October 20, 2004


     Protocol for Carrying Authentication for Network Access (PANA)
                        draft-ietf-pana-pana-06

Status of this Memo

   By submitting this Internet-Draft, I certify that any applicable
   patent or other IPR claims of which I am aware have been disclosed,
   and any of which I become aware will be disclosed, in accordance with
   RFC 3668.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as
   Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on April 20, 2005.

Copyright Notice

   Copyright (C) The Internet Society (2004).  All Rights Reserved.

Abstract

   Extensible Authentication Protocol (EAP) defines a number of
   authentication schemes.  Network access authentication requires a



Forsberg, et al.         Expires April 20, 2005                 [Page 1]

Internet-Draft                    PANA                      October 2004


   host to authenticate itself before being authorized for sending and
   receiving packets.  The Protocol for Carrying Authentication for
   Network Access (PANA) is defined in this document.  PANA is a
   link-layer agnostic carrier for EAP.  PANA specifies the
   client-to-network access authentication within the scope of an
   overall secure network access framework.

Table of Contents

   1.   Introduction . . . . . . . . . . . . . . . . . . . . . . . .   5
     1.1  Specification of Requirements  . . . . . . . . . . . . . .   5
   2.   Terminology  . . . . . . . . . . . . . . . . . . . . . . . .   6
   3.   Protocol Overview  . . . . . . . . . . . . . . . . . . . . .   8
   4.   Protocol Details . . . . . . . . . . . . . . . . . . . . . .  10
     4.1  Discovery and Handshake Phase  . . . . . . . . . . . . . .  10
     4.2  Authentication Phase . . . . . . . . . . . . . . . . . . .  13
     4.3  Authorization Phase  . . . . . . . . . . . . . . . . . . .  15
     4.4  Re-authentication Phase  . . . . . . . . . . . . . . . . .  15
     4.5  Termination Phase  . . . . . . . . . . . . . . . . . . . .  17
   5.   Protocol Design Details and Processing Rules . . . . . . . .  19
     5.1  Payload Encoding . . . . . . . . . . . . . . . . . . . . .  19
     5.2  Transport Layer  . . . . . . . . . . . . . . . . . . . . .  20
       5.2.1  Fragmentation  . . . . . . . . . . . . . . . . . . . .  20
     5.3  Sequence Number and Retransmission . . . . . . . . . . . .  20
     5.4  Message Authentication Code  . . . . . . . . . . . . . . .  21
     5.5  Message Validity Check . . . . . . . . . . . . . . . . . .  21
     5.6  PANA Security Association  . . . . . . . . . . . . . . . .  23
     5.7  Error Handling . . . . . . . . . . . . . . . . . . . . . .  25
     5.8  Device ID Choice . . . . . . . . . . . . . . . . . . . . .  25
     5.9  Updating PaC' Address  . . . . . . . . . . . . . . . . . .  26
     5.10   Session Lifetime . . . . . . . . . . . . . . . . . . . .  26
     5.11   Network Selection  . . . . . . . . . . . . . . . . . . .  27
     5.12   Separate NAP and ISP Authentication  . . . . . . . . . .  27
       5.12.1   Negotiating Separate NAP and ISP Authentication  . .  28
       5.12.2   Execution of Separate NAP and ISP Authentication . .  28
       5.12.3   AAA-Key Calculation  . . . . . . . . . . . . . . . .  29
       5.12.4   Re-authentication  . . . . . . . . . . . . . . . . .  30
       5.12.5   Example Sequence . . . . . . . . . . . . . . . . . .  30
   6.   Security and Mobility  . . . . . . . . . . . . . . . . . . .  32
     6.1  PANA Security Association Establishment  . . . . . . . . .  32
     6.2  Mobility . . . . . . . . . . . . . . . . . . . . . . . . .  32
   7.   PANA Headers and Formats . . . . . . . . . . . . . . . . . .  35
     7.1  IP and UDP Headers . . . . . . . . . . . . . . . . . . . .  35
     7.2  PANA Header  . . . . . . . . . . . . . . . . . . . . . . .  35
     7.3  AVP Header . . . . . . . . . . . . . . . . . . . . . . . .  37
   8.   PANA Messages, Message Specifications and AVPs . . . . . . .  40
     8.1  PANA Messages  . . . . . . . . . . . . . . . . . . . . . .  40
     8.2  Message Specifications . . . . . . . . . . . . . . . . . .  40



Forsberg, et al.         Expires April 20, 2005                 [Page 2]

Internet-Draft                    PANA                      October 2004


       8.2.1  PANA-PAA-Discover (PDI)  . . . . . . . . . . . . . . .  41
       8.2.2  PANA-Start-Request (PSR) . . . . . . . . . . . . . . .  41
       8.2.3  PANA-Start-Answer (PSA)  . . . . . . . . . . . . . . .  41
       8.2.4  PANA-Auth-Request (PAR)  . . . . . . . . . . . . . . .  41
       8.2.5  PANA-Auth-Answer (PAN) . . . . . . . . . . . . . . . .  42
       8.2.6  PANA-Reauth-Request (PRAR) . . . . . . . . . . . . . .  42
       8.2.7  PANA-Reauth-Answer (PRAA)  . . . . . . . . . . . . . .  42
       8.2.8  PANA-Bind-Request (PBR)  . . . . . . . . . . . . . . .  42
       8.2.9  PANA-Bind-Answer (PBA) . . . . . . . . . . . . . . . .  43
       8.2.10   PANA-Ping-Request (PPR)  . . . . . . . . . . . . . .  43
       8.2.11   PANA-Ping-Answer (PPA) . . . . . . . . . . . . . . .  43
       8.2.12   PANA-Termination-Request (PTR) . . . . . . . . . . .  43
       8.2.13   PANA-Termination-Answer (PTA)  . . . . . . . . . . .  44
       8.2.14   PANA-Error-Request (PER) . . . . . . . . . . . . . .  44
       8.2.15   PANA-Error-Answer (PEA)  . . . . . . . . . . . . . .  44
       8.2.16   PANA-FirstAuth-End-Request (PFER)  . . . . . . . . .  44
       8.2.17   PANA-FirstAuth-End-Answer (PFEA) . . . . . . . . . .  45
       8.2.18   PANA-Update-Request (PUR)  . . . . . . . . . . . . .  45
       8.2.19   PANA-Update-Answer (PUA) . . . . . . . . . . . . . .  45
     8.3  AVPs in PANA . . . . . . . . . . . . . . . . . . . . . . .  45
       8.3.1  MAC AVP  . . . . . . . . . . . . . . . . . . . . . . .  48
       8.3.2  Device-Id AVP  . . . . . . . . . . . . . . . . . . . .  49
       8.3.3  Session-Id AVP . . . . . . . . . . . . . . . . . . . .  49
       8.3.4  Cookie AVP . . . . . . . . . . . . . . . . . . . . . .  49
       8.3.5  Protection-Capability AVP  . . . . . . . . . . . . . .  49
       8.3.6  Termination-Cause AVP  . . . . . . . . . . . . . . . .  49
       8.3.7  Result-Code AVP  . . . . . . . . . . . . . . . . . . .  50
       8.3.8  EAP-Payload AVP  . . . . . . . . . . . . . . . . . . .  54
       8.3.9  Session-Lifetime AVP . . . . . . . . . . . . . . . . .  54
       8.3.10   Failed-AVP AVP . . . . . . . . . . . . . . . . . . .  54
       8.3.11   NAP-Information AVP  . . . . . . . . . . . . . . . .  54
       8.3.12   ISP-Information AVP  . . . . . . . . . . . . . . . .  54
       8.3.13   Provider-Identifier AVP  . . . . . . . . . . . . . .  54
       8.3.14   Provider-Name AVP  . . . . . . . . . . . . . . . . .  55
       8.3.15   Key-Id AVP . . . . . . . . . . . . . . . . . . . . .  55
       8.3.16   Post-PANA-Address-Configuration (PPAC) AVP . . . . .  55
       8.3.17   Nonce AVP  . . . . . . . . . . . . . . . . . . . . .  56
       8.3.18   IP-Address AVP . . . . . . . . . . . . . . . . . . .  56
   9.   PANA Protocol Message Retransmissions  . . . . . . . . . . .  57
     9.1  Transmission and Retransmission Parameters . . . . . . . .  58
   10.  IANA Considerations  . . . . . . . . . . . . . . . . . . . .  60
     10.1   PANA UDP Port Number . . . . . . . . . . . . . . . . . .  60
     10.2   PANA Multicast Address . . . . . . . . . . . . . . . . .  60
     10.3   PANA Header  . . . . . . . . . . . . . . . . . . . . . .  60
       10.3.1   Message Type . . . . . . . . . . . . . . . . . . . .  60
       10.3.2   Flags  . . . . . . . . . . . . . . . . . . . . . . .  61
     10.4   AVP Header . . . . . . . . . . . . . . . . . . . . . . .  61
       10.4.1   AVP Code . . . . . . . . . . . . . . . . . . . . . .  61



Forsberg, et al.         Expires April 20, 2005                 [Page 3]

Internet-Draft                    PANA                      October 2004


       10.4.2   Flags  . . . . . . . . . . . . . . . . . . . . . . .  62
     10.5   AVP Values . . . . . . . . . . . . . . . . . . . . . . .  62
       10.5.1   Algorithm Values of MAC AVP  . . . . . . . . . . . .  62
       10.5.2   Protection-Capability AVP Values . . . . . . . . . .  62
       10.5.3   Termination-Cause AVP Values . . . . . . . . . . . .  62
       10.5.4   Result-Code AVP Values . . . . . . . . . . . . . . .  62
       10.5.5   Post-PANA-Address-Configuration AVP Values . . . . .  63
   11.  Security Considerations  . . . . . . . . . . . . . . . . . .  64
     11.1   General Security Measures  . . . . . . . . . . . . . . .  64
     11.2   Discovery  . . . . . . . . . . . . . . . . . . . . . . .  65
     11.3   EAP Methods  . . . . . . . . . . . . . . . . . . . . . .  66
     11.4   Separate NAP and ISP Authentication  . . . . . . . . . .  66
     11.5   Cryptographic Keys . . . . . . . . . . . . . . . . . . .  66
     11.6   Per-packet Ciphering . . . . . . . . . . . . . . . . . .  67
     11.7   PAA-to-EP Communication  . . . . . . . . . . . . . . . .  67
     11.8   Livenes Test . . . . . . . . . . . . . . . . . . . . . .  68
     11.9   Mobility Optimization  . . . . . . . . . . . . . . . . .  68
     11.10  Updating PaC's IP Address  . . . . . . . . . . . . . . .  68
     11.11  Early Termination of a Session . . . . . . . . . . . . .  69
   12.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . . .  70
   13.  References . . . . . . . . . . . . . . . . . . . . . . . . .  71
   13.1   Normative References . . . . . . . . . . . . . . . . . . .  71
   13.2   Informative References . . . . . . . . . . . . . . . . . .  72
        Authors' Addresses . . . . . . . . . . . . . . . . . . . . .  73
        Intellectual Property and Copyright Statements . . . . . . .  75


























Forsberg, et al.         Expires April 20, 2005                 [Page 4]

Internet-Draft                    PANA                      October 2004


1.  Introduction

   Network access authentication has traditionally been a layer 2
   function.  This document specifies a protocol that enables EAP to be
   transported above the IP layer.  As a result, network access
   authentication can be made a function of the network layer thereby
   achieving link-layer independence for the process of authenticating a
   client seeking access to a network.  At the present time, there are
   no standardized solutions for authenticating a host for network
   access at the network layer.  The problem statement for which the
   PANA protocol is a solution can be found in Appendix A of
   [I-D.ietf-pana-requirements].

   PANA relies on EAP for the actual authentication of a client.  It
   does not define any new authentication protocols or schemes.  It
   enables EAP messages to be carried between the client and the
   network.  The actual choice of a specific EAP method to be run over
   PANA is dependent on the underlying access network technology.  The
   key factor in the choice of the EAP method is the determination of
   whether the lower layer (link/physical) provides security for the
   PANA messages.

   A secure network access authentication framework goes beyond just
   authenticating the client to the network.  Other aspects such as
   address configuration, data traffic security, access control filters
   and separation of the enforcement point from the protocol end-point
   are documented in [I-D.ietf-pana-framework] and [I-D.ietf-pana-snmp].

   This document specifies the client-network interaction and the
   messages defined for this purpose.

1.1  Specification of Requirements

   In this document, several words are used to signify the requirements
   of the specification.  These words are often capitalized.  The key
   words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
   "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document
   are to be interpreted as described in [RFC2119].













Forsberg, et al.         Expires April 20, 2005                 [Page 5]

Internet-Draft                    PANA                      October 2004


2.  Terminology

   PANA Client (PaC):

      The client side of the protocol that resides in the host device.
      It is responsible for providing the credentials in order to prove
      its identity for network access authorization.

   PANA Authentication Agent (PAA):

      The protocol entity in the access network whose responsibility is
      to verify the credentials provided by a PANA client (PaC) and
      authorize network access to the device associated with the client
      and identified by a Device Identifier (DI).  Note the
      authentication and authorization procedure can, according to the
      EAP model, be also offloaded to the backend AAA infrastructure.

   PANA Session:

      A PANA session begins with the handshake between the PANA Client
      (PaC) and the PANA Authentication Agent (PAA), and terminates as a
      result of an authentication failure, a timeout, or an explicit
      termination message.  A fixed session identifier is maintained
      throughout a session.  A session cannot be shared across multiple
      network interfaces.

   Session Identifier:

      This identifier is used to uniquely identify a PANA session on the
      PAA and PaC.  It includes an identifier of the PAA, therefore it
      cannot be shared across multiple PAAs.  It is included in PANA
      messages to bind the message to a specific PANA session.  This
      bidirectional identifier is allocated by the PAA following the
      handshake and freed when the session terminates.

   PANA Security Association (PANA SA):

      A PANA security association is a relationship between the PaC and
      PAA, formed by the sharing of cryptographic keying material and
      associated context.  Security associations are duplex.  That is,
      one security association is needed to protect the bidirectional
      traffic between the PaC and the PAA.

   Device Identifier (DI):







Forsberg, et al.         Expires April 20, 2005                 [Page 6]

Internet-Draft                    PANA                      October 2004


      The identifier used by the network as a handle to control and
      police the network access of a client.  Depending on the access
      technology, this identifier may contain an address that is carried
      in protocol headers (e.g., IP or link-layer address), or a locally
      significant identifier that is made available by the local
      protocol stack (e.g., circuit id, PPP interface id) of a connected
      device.

   Enforcement Point (EP):

      A node on the access network where per-packet enforcement policies
      (i.e., filters) are applied on the inbound and outbound traffic of
      client devices.  Information such as the DI and (optionally)
      cryptographic keys are provided by the PAA per client for
      generating filters on the EP.

   Network Access Provider (NAP):

      A service provider that provides physical and link-layer
      connectivity to an access network it manages.

   AAA-Key:

      A key derived by the EAP peer and EAP server and transported to
      the authenticator [I-D.ietf-eap-keying].


























Forsberg, et al.         Expires April 20, 2005                 [Page 7]

Internet-Draft                    PANA                      October 2004


3.  Protocol Overview

   The PANA protocol is run between a client (PaC) and a server (PAA) in
   order to perform authentication and authorization for the network
   access service.

   The protocol messaging consists of a series of request and responses,
   some of which may be initiated by either ends.  Each message can
   carry zero or more AVPs as payload.  The main payload of PANA is EAP
   which performs authentication.  PANA helps PaC and PAA establish an
   EAP session.

   PANA is a UDP-based protocol.  It has its own retransmission
   mechanism to reliably deliver messages.

   PANA messages are sent between a PaC and PAA as part of a PANA
   session.  A PANA session consists of distinct phases:

   o  Discovery and handshake phase: This is the phase that initiates a
      new PANA session.  The PaC discovers the PAA(s) by either
      explicitly soliciting advertisements for them or receiving
      unsolicited advertisements.  The PaC's answer sent in response to
      an advertisement starts a new session.

   o  Authentication phase: Immediately following the handshake phase is
      the EAP execution between the PAA and PaC.  The EAP payloads
      (which carry an EAP method inside) is what is used for
      authentication.  Authentication phase may involve execution of two
      EAP sessions back-to-back, one for the NAP and one for the ISP.

   o  Authorization phase: Following a successful PANA authentication
      phase, the PaC gains access to the network and can send and
      receive IP data traffic through EP.  During this phase, the PaC
      and PAA may optionally ping each other to test liveness of the
      PANA session on each end.

   o  Re-authentication phase: Following an authorization phase, the PAA
      must initiate re-authentication before the PANA session lifetime
      expires.  Again EAP is carried by PANA to perform authentication.
      This phase may be optionally triggered by both the PaC and the PAA
      without any respect to the session lifetime.  The session moves to
      this phase from authorized phase, and returns back there upon
      successful re-authentication.

   o  Termination phase: The PaC or PAA may choose to discontinue the
      access service at any time.  An explicit disconnect message can be
      sent by either end.  If either the PaC or the PAA disconnects
      without engaging in termination messaging, it is expected that



Forsberg, et al.         Expires April 20, 2005                 [Page 8]

Internet-Draft                    PANA                      October 2004


      either the expiration of a finite session lifetime or failed
      liveness tests would do the job.

     PaC  PAA    Message[AVPs]
   -----------------------------------------------------
   // Discovery and handshake phase
      ----->     PANA-PAA-Discover
      <-----     PANA-Start-Request
      ----->     PANA-Start-Answer

   // Authentication phase
      <-----     PANA-Auth-Request /* EAP Request */
      ----->     PANA-Auth-Answer
      ----->     PANA-Auth-Request /* EAP Response */
      <-----     PANA-Auth-Answer
      <-----     PANA-Bind-Request /* EAP Success */
      ----->     PANA-Bind-Answer

   // Authorization phase (IP data traffic allowed)
      <-----     PANA-Ping-Request
      ----->     PANA-Ping-Answer

   // Termination phase
      ----->     PANA-Termination-Request
      <-----     PANA-Termination-Answer

          Figure 1: Illustration of PANA Messages in a Session

   Cryptographic protection of messages between the PaC and PAA is
   possible as soon as EAP in conjunction with the EAP method exports a
   shared key.  That shared key is used to create a PANA SA.  The PANA
   SA helps generating per-message authentication codes that provide
   integrity protection and authentication.

   PANA also allows creation of a new PANA session with a new PAA out of
   an existing session with another PAA.  This optimization allows PaC
   achieve quicker authorization without having to run EAP upon movement
   (changing PAAs).

   Throughout the lifetime of a session, various problems found with the
   incoming messages can generate a PANA error message sent in response.










Forsberg, et al.         Expires April 20, 2005                 [Page 9]

Internet-Draft                    PANA                      October 2004


4.  Protocol Details

   The following sections explain in detail the various phases of a PANA
   session.

4.1  Discovery and Handshake Phase

   When a PaC attaches to a network, and knows that it has to discover a
   PAA, it SHOULD send a PANA-PAA-Discover message to a well-known link
   local multicast address (TBD) and UDP port (TBD).  The PANA PAA
   discovery assumes that the PaC and the PAA are one hop away from each
   other.  If the PaC knows the IP address of the PAA (based on
   pre-configuration), it MAY unicast the PANA-PAA-Discover message to
   that address.

   When the PAA receives a PANA-PAA-Discover message from a PaC, the PAA
   SHOULD unicast a PANA-Start-Request message to the PaC.

   The PaC MAY also choose to start sending packets before getting
   authenticated.  In that case, the network may detect this and the PAA
   MAY send an unsolicited PANA-Start-Request message to the PaC in
   addition to filtering the unauthorized traffic.  The EP is the node
   that can detect such activity.  The PAA-to-EP protocol MAY be used
   for this purpose.

   When a PaC receives a PANA-Start-Request message from a PAA, it
   responds with a PANA-Start-Answer message if it wishes to enter an
   authentication phase.  The answer message copies the sequence number.

   There can be multiple PAAs on the link and a PaC may receive multiple
   PANA-Start-Request messages from those PAAs.  The authentication and
   authorization result does not depend on which PAA is chosen by the
   PaC.  By default the PaC MAY choose the PAA that sent the first
   response.

   A PANA-Start-Request message MAY carry a Cookie AVP that contains a
   cookie.  The sequence number is set to a randomly picked initial
   sequence number.  The cookie is used for preventing the PAA from
   resource consumption DoS attacks by blind attackers.  The cookie is
   computed in such a way that it does not require any per-session state
   maintenance on the PAA in order to verify the cookie returned in a
   PANA-Start-Answer message.  The exact algorithms and syntax used for
   generating cookies does not affect interoperability and hence is not
   specified here.  An example algorithm is described below.

      Cookie =
        <secret-version> | HMAC_SHA1( <Device-Id of PaC> , <secret> )




Forsberg, et al.         Expires April 20, 2005                [Page 10]

Internet-Draft                    PANA                      October 2004


   where <secret> is a randomly generated secret known only to the PAA,
   <secret-version> is an index used for choosing the secret for
   generating the cookie and '|' indicates concatenation.  The
   secret-version should be changed frequently enough to prevent replay
   attacks.  The secret key is valid for a certain time frame.

   When the PaC sends a PANA-Start-Answer message in response to a
   PANA-Start-Request containing a Cookie AVP, the answer MUST contain a
   Cookie AVP with the cookie value copied from the request.

   When the PAA receives the PANA-Start-Answer message from the PaC, it
   verifies the cookie.  The cookie is considered as valid if the
   received cookie has the expected value.  If the computed cookie is
   valid, the protocol enters an authentication phase.  Otherwise, it
   MUST silently discard the received message.

   Initial EAP Request MAY be optionally carried by the
   PANA-Start-Request (as opposed to by a later PANA-Auth-Request)
   message in order to reduce the number of round-trips.  This
   optimization SHOULD NOT be used if the PAA discovery is desired to be
   stateless.

   A Protection-Capability AVP and a Post-PANA-Address-Configuration
   (PPAC) AVP MAY be included in the PANA-Start-Request in order to
   indicate required and available capabilities for the network access.
   These AVPs MAY be used by the PaC for assessing the capability match
   even before the authentication takes place.  But these AVPs are
   provided during the insecure discovery and handshake phase, there are
   certain security risks involved in using the provided information.
   See Section 11 for further discussion on this.

   If the initial EAP Request message is carried in the
   PANA-Start-Request message, an EAP Response message MUST be carried
   in the PANA-Start-Answer message returned to the PAA.

   In any case, PANA MUST NOT generate an EAP message on behalf of EAP
   peer or EAP (pass-through) authenticator.

   The PANA-Start-Request/Answer exchange is needed before entering an
   authentication phase even when the PaC is pre-configured with PAAs IP
   address and the PANA-PAA-Discover message is unicast.

   A Nonce AVP MUST be included in PANA-Start-Request and
   PANA-Start-Answer messages.  The nonces are used to establish a PANA
   SA.

   A PANA-Start-Request message that carries a Cookie AVP is never
   retransmitted.  A PANA-Start-Request message that does not carry a



Forsberg, et al.         Expires April 20, 2005                [Page 11]

Internet-Draft                    PANA                      October 2004


   Cookie AVP is retransmitted based on timer.  A PANA-Start-Answer
   message that carries a Cookie AVP is retransmitted based on timer.  A
   PANA-Start-Answer message that does not carry a Cookie AVP is never
   retransmitted based on timer.

   It is possible that both the PAA and the PaC initiate the discovery
   and handshake procedure at the same time, i.e., the PAA sends a
   PANA-Start-Request message while the PaC sends a PANA-PAA-Discover
   message.  To resolve the race condition, the PAA SHOULD silently
   discard the PANA-PAA-Discover message received from the PaC after it
   has sent a PANA-Start-Request message with creating a state (i.e., no
   Cookie AVP is included in the message) for the PaC.  In this case PAA
   will retransmit PANA-Start-Request based on a timer, if PaC doesn't
   respond in time (message was lost for example).  If the PAA had sent
   a PANA-Start-Request message without creating a state for the PaC
   (i.e., a Cookie AVP was included in the message), then it SHOULD
   answer to the PANA-PAA-Discover message.

   Figure 2 shows an example sequence for the discovery and handshake
   phase when a PANA-PAA-Discover message is sent by the PaC.  Figure 3
   shows an example sequence for the discovery and handshake phase that
   is triggered by data traffic.

      PaC      PAA         Message(seqno)[AVPs]
      ------------------------------------------------------
         ----->            PANA-PAA-Discover(0)
         <-----            PANA-Start-Request(x)[Nonce, Cookie]
         ----->            PANA-Start-Answer(x)[Nonce, Cookie]
                           (continued to authentication phase)


   Figure 2: Example Sequence for Discovery and Handshake Phase  when
                    PANA-PAA-Discover is sent by PaC


      PaC   EP      PAA    Message(seqno)[AVPs]
      ------------------------------------------------------
       ---->o              (Data packet arrival or L2 trigger)
             ------>       PAA-to-EP protocol, or another mechanism
       <------------       PANA-Start-Request(x)[Nonce, Cookie]
       ------------>       PANA-Start-Answer(x)[Nonce, Cookie]
                           (continued to authentication phase)


 Figure 3: Example Sequence for Discovery and Handshake when discovery
                      is triggered by data traffic





Forsberg, et al.         Expires April 20, 2005                [Page 12]

Internet-Draft                    PANA                      October 2004


4.2  Authentication Phase

   The main task in authentication phase is to carry EAP messages
   between the PaC and the PAA.  EAP Request and Response messages are
   carried in PANA-Auth-Request messages.  PANA-Auth-Answer messages are
   simply used to acknowledge receipt of the requests.  As an
   optimization, a PANA-Auth-Answer message MAY include the EAP
   Response.  Another optimization allows optionally carrying the first
   EAP Request/Response in PANA-Start-Request/Answer message as
   described in Section 4.1

   When an EAP Success/Failure message is sent from a PAA, the message
   is carried in a PANA-Bind-Request (PBR) message.  The
   PANA-Bind-Request messages MUST be acknowledged with a
   PANA-Bind-Answer (PBA) message.  Figure 4 shows an example sequence
   in an authentication phase.

      PaC      PAA  Message(seqno)[AVPs]
      --------------------------------------------------------------------
                    (continued from discovery and handshake phase)
         <-----     PANA-Auth-Request(x+1)
                       [Session-Id, EAP{Request}]
         ----->     PANA-Auth-Answer(x+1)      // No piggybacking EAP-Response
                       [Session-Id]
         ----->     PANA-Auth-Request(y)
                       [Session-Id, EAP{Response}]
         <-----     PANA-Auth-Answer(y)
                       [Session-Id]
         <-----     PANA-Auth-Request(x+2)
                       [Session-Id, EAP{Request}]
         ----->     PANA-Auth-Answer(x+2)      // Piggybacking EAP-Response
                       [Session-Id, EAP{Response}]
         <-----     PANA-Bind-Request(x+3)
                       [Session-Id, EAP{Success}, Device-Id, IP-Address,
                        Lifetime, Protection-Cap., PPAC, MAC]
         ----->     PANA-Bind-Answer(x+3)
                       [Session-Id, Device-Id, PPAC, MAC]

           Figure 4: Example Sequence in Authentication Phase

   When an EAP method that is capable of deriving keys is used during
   the authentication phase and the keys are successfully derived, the
   PANA-FirstAuth-End-Request and PANA-FirstAuth-End-Answer and/or
   PANA-Bind-Request and PANA-Bind-Answer messages, and all subsequent
   PANA messages MUST contain a MAC AVP.

   The PANA-Bind-Request and the PANA-Bind-Answer message exchange is
   also used for binding device identifiers of the PaC and EP(s), and



Forsberg, et al.         Expires April 20, 2005                [Page 13]

Internet-Draft                    PANA                      October 2004


   the IP address of the PAA to the PANA SA.  To achieve this, the
   PANA-Bind-Request SHOULD contain the device identifier(s) of the
   EP(s) in Device-Id AVP(s) when they are either MAC or IP address(es),
   and the IP address of the PAA in an IP-Address AVP.  PANA-Bind-Answer
   SHOULD contain PaC's device identifier in a Device-Id AVP when it is
   already presented with that of EP(s).  The PaC MUST use the same type
   of device identifier as contained in the PANA-Bind-Request message.
   This exchange when protected by a MAC AVP prevents man-in-the-middle
   attacks.  The PANA-Bind-Request message MAY also contain a
   Protection-Capability AVP to indicate if link-layer or network-layer
   ciphering should be initiated after PANA.  No link layer or network
   layer specific information is included in the Protection-Capability
   AVP.  When the information is preconfigured on the PaC and the PAA
   this AVP can be omitted.  It is assumed that at least PAA is aware of
   the security capabilities of the access network.  The PANA protocol
   does not specify how the PANA SA and the Protection-Capability AVP
   will be used to provide per-packet protection for data traffic.

   Additionally, PANA-Bind-Request MUST include a
   Post-PANA-Address-Configuration AVP, which helps PAA to inform PaC
   about whether a new IP address MUST be configured and the available
   methods to do so.  PaC MUST include a PPAC AVP in order to indicate
   its choice of method when there is a match between the methods
   offered by the PAA and the methods available on the PaC.  When there
   is no match, a PPAC AVP MUST NOT be included and the Result-Code AVP
   MUST be set to PANA_PPAC_CAPABILITY_UNSUPPORTED in the
   PANA-Bind-Answer message.

   PANA-Bind-Request and PANA-Bind-Answer messages MUST be retransmitted
   based on the retransmission rule described in Section 5.3.

   EAP authentication can fail at a pass-through authenticator without
   sending an EAP-Failure message [I-D.ietf-eap-statemachine].  When
   this occurs, the PAA SHOULD send a PANA-Error-Request message to the
   PaC with using PANA_UNABLE_TO_COMPLY result code.  The PaC SHOULD not
   change its state unless the error message is secured by PANA or lower
   layer.  In any case, a more appropriate way is to rely on a timeout
   on the PaC.

   There is a case where EAP authentication succeeds with producing an
   EAP-Success message but network access authorization fails due to,
   e.g., authorization rejected by a AAA proxy or authorization locally
   rejected by the PAA.  When this occurs, the PAA MUST send
   PANA-Bind-Request with a result code PANA_AUTHORIZATION_REJECTED.  If
   a AAA-Key is established between PaC and PAA by the time when the
   EAP-Success is generated by the EAP server (this is the case when the
   EAP method provides protected success indication), this PANA-Bind
   message exchange MUST be protected with a MAC AVP and with carrying a



Forsberg, et al.         Expires April 20, 2005                [Page 14]

Internet-Draft                    PANA                      October 2004


   Key-Id AVP.  The AAA-Key and the PANA session MUST be deleted after
   the PANA-Bind message exchange.

4.3  Authorization Phase

   Once an authentication phase or a re-authentication phase
   successfully completes, the PaC gains access to the network and can
   send and receive IP data traffic through EP and the PANA session
   enters an authorization phase.  In this phase, PANA-Ping-Request and
   PANA-Ping-Answer messages are used for testing the liveness of the
   PANA session on the PANA peer.  Both the PaC and the PAA are allowed
   to send a PANA-Ping-Request message to the communicating peer
   whenever they need to make sure the availability of the session on
   the peer and expect the peer to return a PANA-Ping-Answer message.
   Both PANA-Ping-Request and PANA-Ping-Answer messages MUST be
   protected with a MAC AVP when a PANA SA is available.

   Implementations MUST limit the rate of performing this test.  The PaC
   and the PAA can handle rate limitation on their own, they do not have
   to perform any coordination with each other.  There is no negotiation
   of timers for this purpose.

   Figure 5 and Figure 6 show liveness tests as they are initiated by
   the PaC and the PAA respectively.

      PaC      PAA     Message(seqno)[AVPs]
      ------------------------------------------------------
         ----->        PANA-Ping-Request(q)[Session-Id, MAC]
         <-----        PANA-Ping-Answer(q)[Session-Id, MAC]


       Figure 5: Example Sequence for PaC-initiated liveness test


      PaC      PAA     Message(seqno)[AVPs]
      ------------------------------------------------------
         <-----        PANA-Ping-Request(p)[Session-Id, MAC]
         ----->        PANA-Ping-Answer(p)[Session-Id, MAC]

       Figure 6: Example Sequence for PAA-initiated liveness test


4.4  Re-authentication Phase

   A PANA session in an authorization phase can enter a
   re-authentication phase to extend the current session lifetime by
   re-executing EAP.  Once the re-authentication phase successfully
   completes, the session re-enters the authorization phase.  Otherwise,



Forsberg, et al.         Expires April 20, 2005                [Page 15]

Internet-Draft                    PANA                      October 2004


   the session is deleted.

   When a PaC wants to initiate re-authentication, it sends a
   PANA-Reauth-Request message to the PAA.  This message MUST contain a
   Session-Id AVP which is used for identifying the PANA session on the
   PAA.  If the PAA already has an established PANA session for the PaC
   with the matching identifier, it MUST first respond with a
   PANA-Reauth-Answer, followed by a PANA-Auth-Request that starts a new
   EAP authentication.  If PAA cannot identify the session, it MUST
   respond with a PANA-Error-Request with the error code
   PANA_UNKNOWN_SESSION_ID.  PANA-Reauth-Request/Answer messages MUST
   contain a MAC AVP when PANA SA is available.

   PaC may receive a PANA-Auth-Request before receiving the answer to
   its outstanding PANA-Reauth-Request.  This condition can arise due to
   packet re-ordering or a race condition between the PaC and PAA when
   they both attempt to engage in re-authentication.  PaC MUST keep
   discarding the received PANA-Auth-Requests until it receives the
   answer to its request.

   When the PAA initiates re-authentication, it sends a
   PANA-Auth-Request message containing the session identifier for the
   PaC to enter an authentication phase.  PAA SHOULD initiate EAP
   authentication before the current session lifetime expires.

   Re-authentication of an on-going PANA session MUST maintain the
   existing sequence numbers.

   For any re-authentication, if there is an established PANA SA,
   PANA-Auth-Request and PANA-Auth-Answer messages MUST be protected by
   adding a MAC AVP to each message.  Any subsequent EAP-based
   authentication MUST be performed with the same ISP and NAP that was
   selected during the initial authentication.  An example sequence for
   a re-authentication initiated by a PaC is shown in Figure 7.

















Forsberg, et al.         Expires April 20, 2005                [Page 16]

Internet-Draft                    PANA                      October 2004


      PaC      PAA  Message(seqno)[AVPs]
      ------------------------------------------------------
         ----->     PANA-Reauth-Request(q)
                       [Session-Id, MAC]
         <-----     PANA-Reauth-Answer(q)
                       [Session-Id, MAC]
         <-----     PANA-Auth-Request(p)
                       [Session-Id, EAP{Request}, MAC]
         ----->     PANA-Auth-Answer(p)        // No piggybacking EAP-Response
                       [Session-Id, MAC]
         ----->     PANA-Auth-Request(q+1)
                       [Session-Id, EAP{Response}, MAC]
         <-----     PANA-Auth-Answer(q+1)      // No piggybacking EAP-Response
                       [Session-Id, MAC]
         <-----     PANA-Auth-Request(p+1)
                       [Session-Id, EAP{Request}, MAC]
         ----->     PANA-Auth-Answer(p+1)      // Piggybacking EAP-Response
                       [Session-Id, EAP{Response}, MAC]
         <-----     PANA-Bind-Request(p+2)
                       [Session-Id, EAP{Success}, Device-Id,
                        IP-Address, Key-Id, Lifetime,
                        Protection-Cap., PPAC, MAC]
         ----->     PANA-Bind-Answer(p+2)
                       [Session-Id, Device-Id, Key-Id, PPAC, MAC]

   Figure 7: Example Sequence for re-authentication initiated by PaC


4.5  Termination Phase

   A procedure for explicitly terminating a PANA session can be
   initiated either from the PaC (i.e., disconnect indication) or from
   the PAA (i.e., session revocation).  The PANA-Termination-Request and
   the PANA-Termination-Answer message exchanges are used for disconnect
   indication and session revocation procedures.

   The reason for termination is indicated in the Termination-Cause AVP.
   When there is an established PANA SA established between the PaC and
   the PAA, all messages exchanged during the termination phase MUST be
   protected with a MAC AVP.  When the sender of the
   PANA-Termination-Request receives a valid acknowledgment, all states
   maintained for the PANA session MUST be deleted immediately.









Forsberg, et al.         Expires April 20, 2005                [Page 17]

Internet-Draft                    PANA                      October 2004


      PaC      PAA     Message(seqno)[AVPs]
      ------------------------------------------------------
         ----->        PANA-Termination-Request(q)[Session-Id, MAC]
         <-----        PANA-Termination-Answer(q)[Session-Id, MAC]


           Figure 8: Example Sequence for Session Termination












































Forsberg, et al.         Expires April 20, 2005                [Page 18]

Internet-Draft                    PANA                      October 2004


5.  Protocol Design Details and Processing Rules

5.1  Payload Encoding

   The payload of any PANA message consists of zero or more AVPs
   (Attribute Value Pairs).  A brief description of the AVPs defined in
   this document is listed below:

   o  Cookie AVP: contains a random value that is used for making
      handshake robust against blind resource consumption DoS attacks.

   o  Protection-Capability AVP: contains information which protection
      should be initiated after the PANA exchange (e.g., link-layer or
      network layer protection).

   o  Device-Id AVP: contains a device identifier of the PaC or an EP.
      A device identifier is represented as a pair of device identifier
      type and device identifier value.  Either a layer-2 address or an
      IP address is used for the device identifier value when this AVP
      is present.

   o  EAP AVP: contains an EAP PDU.

   o  MAC AVP: contains a Message Authentication Code that protects a
      PANA message PDU.

   o  Termination-Cause AVP: contains the reason of session termination.

   o  Result-Code AVP: contains information about the protocol execution
      results.

   o  Session-Id AVP: contains the session identifier value.

   o  Session-Lifetime AVP: contains the duration of authorized access.

   o  Failed-AVP: contains the offending AVP that caused a failure.

   o  NAP-Information AVP, ISP-Information AVP: contains the information
      on a NAP and an ISP, respectively.

   o  Key-Id AVP: contains a AAA-Key identifier.

   o  PPAC AVP: Post-PANA-Address-Configuration AVP.  Conveys the list
      of IP address configuration methods available when sent by the
      PAA, and the chosen method when sent by the PaC.

   o  Nonce AVP: contains a randomly chosen value.




Forsberg, et al.         Expires April 20, 2005                [Page 19]

Internet-Draft                    PANA                      October 2004


   o  IP-Address AVP: contains an IP Address of a PaC.

5.2  Transport Layer

   PANA uses UDP as its transport layer protocol.  The UDP port number
   is TBD.  All messages except for PANA-PAA-Discover are always
   unicast.  PANA-PAA-Discover MAY be unicast when the PaC knows the IP
   address of the PAA.

5.2.1  Fragmentation

   PANA does not provide fragmentation of PANA messages.  Instead, it
   relies on fragmentation provided by EAP methods and IP layer when
   needed.

5.3  Sequence Number and Retransmission

   PANA uses sequence numbers to provide ordered and reliable delivery
   of messages.

   PaC and PAA maintain two sequence numbers: the next one to be used
   for a request it initiates and the next one it expects to see in a
   request from the other end.  These sequence numbers are 32-bit
   unsigned numbers.  They are monotonically incremented by 1 as new
   requests are generated and received, and wrapped to zero on the next
   message after 2^32-1.  Answers always contain the same sequence
   number as the corresponding request.  Retransmissions maintain the
   same sequence number.

   The initial sequence numbers (ISN) are randomly picked by PaC and PAA
   as they send their very first request messages.  PANA-PAA-Discover
   message carries sequence number 0.

   When a request message is received, it is considered valid in terms
   of sequence numbers if and only if its sequence number matches the
   expected value.  This check does not apply to PANA-PAA-Discover, and
   the very first request messages.

   When an answer message is received, it is considered valid in terms
   of sequence numbers if and only if its sequence number matches that
   of the currently outstanding request.  A peer can only have one
   outstanding request at a time.

   PANA messages are retransmitted based on timer at until a response is
   received (in which case the retransmission timer is stopped) or the
   number of retransmission reaches the maximum value (in which case the
   PANA session MUST be deleted immediately).  The retransmission timer
   SHOULD be calculated as described in [RFC2988] to provide congestion



Forsberg, et al.         Expires April 20, 2005                [Page 20]

Internet-Draft                    PANA                      October 2004


   control.  See Section 9 for default timer and maximum retransmission
   count parameters.

   PaC and PAA MUST respond to duplicate requests.  Last transmitted
   PANA answer MAY be cached in case it is not received by the peer and
   that generates a retransmission of the last request.  When available,
   a cached answer can be used instead of fully processing the
   retransmitted request and forming a new answer from scratch.

   PANA MUST NOT generate EAP message duplication.  EAP payload of a
   retransmitted PANA message MUST NOT be passed to the EAP layer.

5.4  Message Authentication Code

   A PANA message can contain a MAC (Message Authentication Code) AVP
   for cryptographically protecting the message.

   When a MAC AVP is included in a PANA message, the value field of the
   MAC AVP is calculated by using the PANA_MAC_KEY in the following way:

      MAC AVP value = PANA_MAC_PRF(PANA_MAC_KEY, PANA_PDU)

   where PANA_PDU is the PANA message including the PANA header, with
   the MAC AVP value field first initialized to 0.  PANA_MAC_PRF
   represents the pseudo random function corresponding to the MAC
   algorithm specified in the MAC AVP.  In this version of draft,
   PANA_MAC_PRF is HMAC-SHA1.  The PaC and PAA MUST use the same
   algorithm to calculate a MAC AVP they originate and receive.  The
   algorithm is determined by the PAA when a PANA-Bind-Request with a
   MAC AVP is sent.  When the PaC does not support the MAC algorithm
   specified in the PANA-Bind-Request message, it MUST silently discard
   the message.  The PAA MUST NOT change the MAC algorithm throughout
   the continuation of the PANA session.

5.5  Message Validity Check

   When a PANA message is received, the message is considered to be
   invalid at least when one of the following conditions are not met:

   o  The IP Hop Limit (or TTL) field has a value of 255, i.e., the
      packet could not possibly have been forwarded by a router.

   o  Each field in the message header contains a valid value including
      sequence number, message length, message type, version number,
      flags, etc.

   o  When a device identifier of the PaC is bound to the PANA session,
      it matches the device identifier carried in MAC or or IP header,



Forsberg, et al.         Expires April 20, 2005                [Page 21]

Internet-Draft                    PANA                      October 2004


      or other locally-significant identifier provided by the
      lower-layers (e.g., circuit ID) unless the message is a
      PANA-Update-Request with an IP-Address AVP.

   o  The message type is one of the expected types in the current
      state.  Specifically the following messages are unexpected and
      invalid:

      *  In discovery and handshake phase:

         +  PANA-Termination-Request and PANA-Ping-Request.

         +  PANA-Bind-Request.

         +  PANA-Update-Request.

      *  In authentication phase:

         +  PANA-PAA-Discover.

         +  PANA-Update-Request.

         +  PANA-Start-Request after a PaC receives the first valid
            PANA-Auth-Request.

         +  PANA-Termination-Request before the PaC receives the first
            successful PANA-Bind-Request.

      *  After successful PANA authentication:

         +  PANA-Start-Request as well as a non-duplicate
            PANA-Bind-Request.

         +  PANA-PAA-Discover.

      *  In termination phase:

         +  PANA-PAA-Discover.

         +  All requests but PANA-Termination-Request.


   o  The message payload contains a valid set of AVPs allowed for the
      message type and there is no missing AVP that needs to be included
      in the payload.

   o  Each AVP is decoded correctly.




Forsberg, et al.         Expires April 20, 2005                [Page 22]

Internet-Draft                    PANA                      October 2004


   o  When a MAC AVP is included, the AVP value matches the MAC value
      computed against the received message.

   o  When a Device-Id AVP is included, the AVP is valid if the device
      identifier type contained in the AVP is supported (check performed
      by both PaC and PAA) and is the requested one (check performed by
      PAA only) and the device identifier value contained in the AVP
      matches the value extracted from the lower-layer encapsulation
      header corresponding to the device identifier type contained in
      the AVP (check performed by PAA only).  Note that a Device-Id AVP
      carries the PaC's device identifier in messages from PaC to PAA
      and EP(s)' device identifier in messages from PAA to PaC.

   o  When an IP-Address AVP is received in a message, the AVP is valid
      if the IP address matches the source address in the IP header.

   Invalid messages MUST be discarded in order to provide robustness
   against DoS attacks.  In addition, an error notification message MAY
   be returned to the sender.  See Section 5.7 for details.

5.6  PANA Security Association

   A PANA SA is created as an attribute of a PANA session when EAP
   authentication succeeds with a creation of a AAA-Key.  A PANA SA is
   not created when the PANA authentication fails or no AAA-Key is
   produced by any EAP authentication method.  In the case where two EAP
   authentications are performed in sequence in a single PANA
   authentication phase, it is possible that two AAA-Keys are derived.
   If this happens, the PANA SA MUST be generated from both AAA-Keys.
   When a new AAA-Key is derived as a result of EAP-based
   re-authentication, any key derived from the old AAA-Key MUST be
   updated to a new one that is derived from the new AAA-Key.  In order
   to distinguish the new AAA-Key from old ones, one Key-Id AVP MUST be
   carried in PANA-Bind-Request and PANA-Bind-Answer messages or
   PANA-FirstAuth-End-Request and PANA-FirstAuth-End-Answer messages at
   the end of the EAP authentication which resulted in deriving a new
   AAA-Key.  The Key-Id AVP is of type Unsigned32 and MUST contain a
   value that uniquely identifies the AAA-Key within the PANA session.
   The PANA-Bind-Answer message (or the PANA-FirstAuth-End-Answer
   message) sent in response to a PANA-Bind-Request message (or a
   PANA-FirstAuth-End-Request message) with a Key-Id AVP MUST contain a
   Key-Id AVP with the same AAA-Key identifier carried in the request.
   PANA-Bind-Request, PANA-Bind-Answer, PANA-FirstAuth-End-Request and
   PANA-FirstAuth-End-Answer messages with a Key-Id AVP MUST also carry
   a MAC AVP whose value is computed by using the new PANA-MAC-KEY
   derived from the new AAA-Key (or the new pair of AAA-Keys when the
   PANA_MAC_KEY is derived from two AAA-Keys).  Although the
   specification does not mandate a particular method for calculation of



Forsberg, et al.         Expires April 20, 2005                [Page 23]

Internet-Draft                    PANA                      October 2004


   Key-Id AVP value, a simple method is to use monotonically increasing
   numbers.

   The created PANA SA is deleted when the corresponding PANA session is
   deleted.  The lifetime of the PANA SA is the same as the lifetime of
   the PANA session for simplicity.

   PANA SA attributes as well as PANA session attributes are listed
   below:

   PANA Session attributes:

      *  Session-Id

      *  Device-Id of PaC

      *  IP address of PaC (may be the same as the Device-Id of PaC)

      *  IP address of PAA

      *  List of device identifiers of EPs

      *  Sequence number of the last transmitted request

      *  Sequence number of the last received request

      *  Last transmitted message payload

      *  Retransmission interval

      *  Session lifetime

      *  Protection-Capability

      *  PANA SA attributes:

         +  Nonce generated by PaC (PaC_nonce)

         +  Nonce generated by PAA (PAA_nonce)

         +  AAA-Key

         +  AAA-Key Identifier

         +  PANA_MAC_KEY

   The PANA_MAC_KEY is used to integrity protect PANA messages and
   derived from AAA-Key(s).  When two AAA-Keys (AAA-Key1 and AAA-Key2)



Forsberg, et al.         Expires April 20, 2005                [Page 24]

Internet-Draft                    PANA                      October 2004


   are generated as a result of double EAP authentication (see Section
   4.2) the compound AAA-Key can be computed as follows ('|' indicates
   concatenation):

      AAA-Key = AAA-Key1 | AAA-Key2

    The PANA_MAC_KEY is computed in the following way:


      PANA_MAC_KEY = The first N bits of
                     HMAC_SHA1(AAA-Key, PaC_nonce | PAA_nonce | Session-ID)

   where the value of N depends on the integrity protection algorithm in
   use, i.e., N=160 for HMAC-SHA1.  The length of AAA-Key MUST be N bits
   or longer.  See Section Section 5.4 for the detailed usage of the
   PANA_MAC_KEY.

5.7  Error Handling

   A PANA-Error-Request message MAY be sent by either the PaC or the PAA
   when a badly formed PANA message is received or in case of other
   errors.  The receiver of this request MUST respond with a
   PANA-Error-Answer message.  If the cause of this error message was a
   request message (e.g., PANA-PAA-Discover or *-Request), then the
   request MAY be retransmitted immediately without waiting for its
   retransmission timer to go off.  If the cause of the error was a
   response message, the receiver of the PANA-Error-Request message
   SHOULD NOT resend the same response until it receives the next
   request.

   To defend against DoS attacks a timer MAY be used.  One (1) error
   notification is sent to each different sender each N seconds.  N is a
   configurable parameter.

   When an error message is sent unprotected with a MAC AVP and the
   lower-layer is insecure, the error message is treated as an
   informational message.  The receiver of such an error message MUST
   NOT change its state unless the error persists and the PANA session
   is not making any progress.

5.8  Device ID Choice

   The device identifier used in the context of PANA can be an IP
   address, a MAC address, or an identifier that is not carried in data
   packets but has local significance in identifying a connected host
   (e.g., circuit id, PPP interface id).  The last type of identifiers
   are commonly used in point-to-point links where MAC addresses are not
   available and lower-layers are already physically or



Forsberg, et al.         Expires April 20, 2005                [Page 25]

Internet-Draft                    PANA                      October 2004


   cryptographically secured.

   It is assumed that the PAA knows the link type and the security
   mechanisms being provided or required on the access network (e.g.,
   based on physical security, link-layer ciphers enabled before or
   after PANA, or IPsec).  Based on that information, the PAA can decide
   what type of EP device id will be used when running PANA with the
   client.  When IPsec-based security [I-D.ietf-pana-ipsec] is the
   choice of access control, the PAA SHOULD provide IP address(es) as
   EP(s)' device ID, and expect the PaC to provide its IP address in
   return.  In case IPsec is not used, MAC addresses are used as device
   IDs when available.  If non-IPsec access control is enabled, and a
   MAC address is not available, device ID exchange does not occur
   within PANA.  Instead, peers rely on lower-layers to provide
   locally-significant identifiers along with received PANA packets.

5.9  Updating PaC' Address

   A PaC's IP address can change in certain situations.  For example,
   the PANA framework [I-D.ietf-pana-framework] describes a case in
   which a PaC replaces a pre-PANA address (PRPA) with a post-PANA
   address (POPA), and the PaC and PAA create host routes to each other
   in order to maintain on-link communication based on the POPA.  The
   PAA needs to be notified about the change of PaC address.

   After the PaC has changed its address, it MUST send a
   PANA-Update-Request message to the PAA.  The message MUST carry the
   new PaC address in an IP-Address AVP.  If the address contained in
   the request is invalid, the PAA MUST send a PANA-Error message with
   the result code PANA_INVALID_IP_ADDRESS.  Otherwise, the PAA MUST
   update the PANA session with the new PaC address and return a
   PANA-Update-Answer message.  If there is an established PANA SA, both
   PANA-Update-Request and PANA-Update-Answer messages MUST be protected
   with a MAC AVP.

5.10  Session Lifetime

   The authentication phase determines the PANA session lifetime when
   the network access authorization succeeds.  The Session-Lifetime AVP
   MAY be optionally included in the PANA-Bind-Request message to inform
   PaC about the valid lifetime of the PANA session.  It MUST be ignored
   when included in other PANA messages.  When there are multiple EAP
   authentication taking place, this AVP SHOULD be included after the
   final authentication.

   The lifetime is a non-negotiable parameter that can be used by PaC to
   manage PANA-related state.  PaC does not have to perform any actions
   when the lifetime expires, other than optionally purging local state.



Forsberg, et al.         Expires April 20, 2005                [Page 26]

Internet-Draft                    PANA                      October 2004


   PAA SHOULD initiate EAP authentication before the current session
   lifetime expires.

   PaC and PAA MAY optionally rely on lower-layer indications to
   expedite the detection of a disconnected peer.  Availability and
   reliability of such indications depend on the specific access
   technologies.  PANA peer can use PANA-Ping-Request message to verify
   the disconnection before taking an action.

   The session lifetime parameter is not related to the transmission of
   PANA-Ping-Request messages.  These messages can be used for
   asynchronously verifying the liveness of the peer.  The decision to
   send PANA-Ping-Request message is taken locally and does not require
   coordination between the peers.

5.11  Network Selection

   In a discovery and handshake phase, a PANA-Start-Request message sent
   from the PAA MAY contain zero or one NAP-Information AVP and zero or
   more ISP-Information AVPs to advertise the information on the NAP
   and/or ISPs.  The PaC MAY indicate its choice of ISP by including an
   ISP-Information AVP in the PANA-Start-Answer message.  When a AAA
   backend is used, the identity of the destination AAA server or realm
   MUST be determined based on the explicitly chosen ISP.  When the
   ISP-Information AVP is not present, the access network MAY rely on
   the client identifier carried in the EAP authentication method to
   make this determination.  The PaC can choose an ISP and contain an
   ISP-Information AVP for the chosen ISP in a PANA-Start-Answer message
   even when there is no ISP-Information AVP contained in the
   PANA-Start-Request message.

5.12  Separate NAP and ISP Authentication

   PANA allows running at most two EAP sessions in sequence in an
   authentication phase to support separate NAP and ISP authentication
   as described in next sections.  Currently, running multiple EAP
   sessions in sequence in an authentication phase is designed only for
   separate NAP and ISP authentication.  It is not for running arbitrary
   number of EAP sessions in sequence, or giving the PaC another chance
   to try another EAP authentication method within an integrated NAP and
   ISP authentication when an EAP authentication method fails.  Within
   separate NAP and ISP authentication, the NAP authentication and the
   ISP authentication are considered completely independent.  Presence
   or success of one should not effect the other.  Making a network
   access authorization decision based on the success or failure of each
   authentication is a network policy issue.





Forsberg, et al.         Expires April 20, 2005                [Page 27]

Internet-Draft                    PANA                      October 2004


5.12.1  Negotiating Separate NAP and ISP Authentication

   When the PaC and PAA negotiates in the discovery and handshake phase
   to perform separate NAP and ISP authentication, the PaC and the PAA
   operate in the following way in addition to the behavior defined in
   Section 4.1

   In the discovery and handshake phase, the PAA MAY enable separate NAP
   and ISP authentication ([I-D.ietf-pana-framework]) by setting the
   S-flag of the message header of the PANA-Start-Request.

   If the S-flag of the received PANA-Start-Request message is not set,
   the PaC MUST NOT set the S-flag in the PANA-Start-Answer message sent
   back to the PAA.

   If the S-flag of the received PANA-Start-Request message is set, the
   PaC can indicate its desire to perform separate NAP and ISP
   authentication by setting the S-flag in the PANA-Start-Answer
   message.  If the S-flag in the PANA-Start-Answer message is not set,
   only one authentication is performed and the processing occurs as
   described in Section 4.1.  If the S-flag in the PANA-Start-Answer
   message is set, the determination of the destination AAA server or
   realm for ISP authentication is performed as described in Section
   5.11.  In addition, where backend AAA servers are used for NAP
   authentication, the NAP is considered the ultimate AAA realm, and the
   destination AAA server for this authentication is determined entirely
   by the local configuration on the access server hosting the PAA
   (NAS).

   When the S-flag is set in a PANA-Start-Request message, the initial
   EAP Request MUST NOT be carried in the PANA-Start-Request message.
   (If the initial EAP Request were contained in the PANA-Start-Request
   message during the S-flag negotiation, the PaC cannot tell whether
   the EAP Request is for NAP authentication or ISP authentication.)

5.12.2  Execution of Separate NAP and ISP Authentication

   When the PaC and PAA have negotiated in the discovery and handshake
   phase to perform separate NAP and ISP authentication, the PaC and the
   PAA operate in the following way in addition to the behavior defined
   in Section 4.2


   o  The S-flag of PANA-Auth-Request and PANA-Auth-Answer messages MUST
      be set.

   o  An EAP Success/Failure message is carried in a
      PANA-FirstAuth-End-Request (PFER) message as well as a



Forsberg, et al.         Expires April 20, 2005                [Page 28]

Internet-Draft                    PANA                      October 2004


      PANA-Bind-Request (PBR) message.  The PANA-FirstAuth-End-Request
      message MUST be used at the end of the first EAP authentication
      and the PANA-Bind-Request MUST be used for the second EAP
      authentication.  The PANA-FirstAuth-End-Request messages MUST be
      acknowledged with a PANA-FirstAuth-End-Answer (PFEA) message.

   o  If the first EAP authentication has failed, the PAA can choose not
      to perform the second EAP authentication by clearing the S-flag of
      the PANA-FirstAuth-End-Request message.  In this case, the S-flag
      of the PANA-FirstAuth-End-Answer message sent by the PaC MUST be
      cleared.  If the S-flag of the PANA-FirstAuth-End-Request message
      is set when the first EAP authentication has failed, the PaC can
      choose not to perform the second EAP authentication by clearing
      the S-flag of the PANA-FirstAuth-End-Answer message.  If the first
      EAP authentication failed and the S-flag is not set in the
      PANA-FirstAuth-End-Answer message as a result of those operations,
      the PANA session MUST be immediately deleted.  Otherwise, the
      second EAP authentication MUST be performed.

   o  The PAA determines the execution order of NAP authentication and
      ISP authentication.  In this case, the PAA can indicate which
      authentication (NAP authentication or ISP authentication) is
      currently occurring by using N-flag in the PANA message header.
      When NAP authentication is being performed, the N-flag MUST be
      set.  When ISP authentication is being performed, the N-flag MUST
      NOT be set.  The N-flag MUST NOT be set when S-flag is not set.

5.12.3  AAA-Key Calculation

   When the PaC and PAA have negotiated in the discovery and handshake
   phase to perform separate NAP and ISP authentication, if the
   lower-layer is insecure, the two EAP authentication methods used in
   the separate authentication MUST be capable of deriving keys.  In
   this case, if the first EAP authentication is successful, the
   PANA-FirstAuth-End-Request and PANA-FirstAuth-End-Answer messages as
   well as PANA-Auth-Request and PANA-Auth-Answer messages in the second
   EAP authentication MUST be protected with the key derived from the
   AAA-Key for the first EAP authentication.  The PANA-Bind-Request and
   PANA-Bind-Answer messages and all subsequent PANA messages exchanged
   in authorized phase, re-authentication phase and termination phase
   MUST be protected either with the AAA-Key for the first EAP
   authentication if the first EAP authentication succeeds and the
   second EAP authentication fails, or with the AAA-Key for the second
   EAP authentication if the first EAP authentication fails and the
   second EAP authentication succeeds, or with the compound AAA-Key
   derived from the two AAA-Keys, one for the first EAP authentication
   and the other from the second EAP authentication, if both the first
   and second EAP authentications succeed.



Forsberg, et al.         Expires April 20, 2005                [Page 29]

Internet-Draft                    PANA                      October 2004


5.12.4  Re-authentication

   When separate ISP and NAP authentication is performed, it is possible
   that different authorization lifetime values are associated with the
   two authentications.  In this case, the smaller authorization
   lifetime value MUST be used for calculating the PANA Session-Lifetime
   value.  As a result, when entering a re-authentication phase, both
   NAP and ISP authentication will be performed in the same
   re-authentication phase.

5.12.5  Example Sequence

   A PANA message sequence with separate NAP and ISP authentication is
   illustrated in Figure 9.  The example assumes the following scenario:


   o  The PaC initiates the discovery and handshake phase.

   o  The PAA offers separate NAP and ISP authentication, as well as a
      choice of ISP from "ISP1" and "ISP2".  The PaC accepts the offer
      from PAA, with choosing "ISP1" as the ISP.

   o  NAP authentication and ISP authentication is performed in this
      order in authentication phase.

   o  An EAP authentication method with a single round trip is used in
      each EAP sequence.

   o  After a PANA SA is established, all messages are integrity and
      replay protected with MAC AVPs.

   o  Authorization, re-authentication and termination phases are not
      shown.

      PaC      PAA  Message(seqno)[AVPs]
      -----------------------------------------------------
      // Discovery and handshake phase
         ----->     PANA-PAA-Discover(0)
         <-----     PANA-Start-Request(x)               // S-flag set
                       [Nonce, Cookie,
                        ISP-Information("ISP1"),
                        ISP-Information("ISP2"),
                        NAP-Information("MyNAP")]
         ----->     PANA-Start-Answer(x)                // S-flag set
                       [Nonce, Cookie,                  // PaC chooses "ISP1"
                        ISP-Information("ISP1")]

      // Authentication phase



Forsberg, et al.         Expires April 20, 2005                [Page 30]

Internet-Draft                    PANA                      October 2004


         <-----     PANA-Auth-Request(x+1)              // NAP authentication
                       [Session-Id, EAP{Request}]       // S- and N-flags set
         ----->     PANA-Auth-Answer(x+1)               // S- and N-flags set
                       [Session-Id]                     // No piggybacking
         ----->     PANA-Auth-Request(y)                // S- and N-flags set
                       [Session-Id, EAP{Response}]
         <-----     PANA-Auth-Answer(y)[Session-Id]     // S- and N-flags set
         <-----     PANA-Auth-Request(x+2)              // S- and N-flags set
                       [Session-Id, EAP{Request}]
         ----->     PANA-Auth-Answer(x+2)               // S- and N-flags set
                       [Session-Id, EAP{Response}]      // Piggybacking
         <-----     PANA-FirstAuth-End-Request(x+3)     // S- and N-flags set
                       [Session-Id, EAP{Success}, Key-Id, MAC]
         ----->     PANA-FirstAuth-End-Answer(x+3)      // S- and N-flags set
                       [Session-Id, Key-Id, MAC]
         <-----     PANA-Auth-Request(x+4)              // ISP authentication
                       [Session-Id, EAP{Request}, MAC]  // S-flag set
         ----->     PANA-Auth-Answer(x+4)               // S-flag set
                       [Session-Id, MAC]                // No piggybacking
         ----->     PANA-Auth-Request(y+1)              // S-flag set
                       [Session-Id, EAP{Response}, MAC]
         <-----     PANA-Auth-Answer(y+1)               // S-flag set
                       [Session-Id, MAC]
         <-----     PANA-Auth-Request(x+5)              // S-flag set
                       [Session-Id, EAP{Request}, MAC]
         ----->     PANA-Auth-Answer(x+5)               // S-flag set
                       [Session-Id, EAP{Response}, MAC] // Piggybacking
         <-----     PANA-Bind-Request(x+6)              // S-flag set
                       [Session-Id, EAP{Success}, Device-Id,
                       IP-Address, Key-Id, Lifetime,
                       Protection-Cap., PPAC, MAC]
         ----->     PANA-Bind-Answer(x+6)               // S-flag set
                       [Session-Id, Device-Id, Key-Id,
                        PPAC, MAC]

     Figure 9: A Complete Message Sequence for Separate NAP and ISP
                             Authentication














Forsberg, et al.         Expires April 20, 2005                [Page 31]

Internet-Draft                    PANA                      October 2004


6.  Security and Mobility

6.1  PANA Security Association Establishment

   When PANA is used over an already established secure channel, such as
   physically secured wires or ciphered link-layers, we can reasonably
   assume that man-in-the-middle attacks or service theft is not
   possible.  See [I-D.ietf-pana-threats-eval] for a detailed
   discussion.

   In environments where no secure channel prior to the PANA execution
   is available, PANA needs to protect itself against a number of
   attacks.  The device identifier that is used during the
   authentication needs to be verified at the end of the authentication
   to prevent service theft and DoS attacks.  Additionally, a free
   loader should be prevented from spoofing data packets by using the
   device identifier of an already authorized legitimate client.  Both
   of these requirements necessitate generation of a security
   association between the PaC and the PAA at the end of the
   authentication.  This can only be done when the authentication method
   used can generate session keys.  Use of session keys can prevent
   attacks which would otherwise be very easy to launch by eavesdropping
   on and spoofing traffic over an insecure link.

   The EAP method provided session key is transported to the PAA (if
   necessary) and is subsequently input to the creation of the PANA SA.
   Applying the PANA SA to the messages exchanged during the final PANA
   handshake provides implicit key confirmation to both the PAA and the
   PaC.  Implicit key confirmation shows both, the PaC and the PAA, that
   they possess the unique and fresh session key.

   Protecting the final PANA handshake also ensures that the device
   identifier (and other information) cannot be modified by an
   adversary.  Further usage of the keying material is discussed in
   [I-D.ietf-pana-framework].

6.2  Mobility

   A mobile PaC's network access authentication performance can be
   enhanced by deploying a context-transfer-based mechanism, where some
   session attributes are transferred from the previous PAA to the new
   one in order to avoid performing a full EAP authentication (reactive
   approach).  Additional mechanisms that are based on the proactive AAA
   state establishment at one or more candidate PAAs may be developed in
   the future [I-D.irtf-aaaarch-handoff].  The details of a
   context-transfer-based mechanism is provided in this section.

   Upon changing its point of attachment, a PaC that wants to quickly



Forsberg, et al.         Expires April 20, 2005                [Page 32]

Internet-Draft                    PANA                      October 2004


   resume its ongoing PANA session without running EAP MAY send its
   unexpired PANA session identifier in its PANA-Start-Answer message.
   Along with the Session-Id AVP, a MAC AVP MUST be included in this
   message.  The MAC AVP is computed by using the PANA_MAC_KEY shared
   between the PaC and its previous PAA that has an unexpired PANA
   session with the PaC.  This action signals PaC's desire to perform
   the mobility optimization.  In the absence of a Session-Id AVP in
   this message, the PANA session takes its usual course (i.e.,
   EAP-based authentication is performed).

   If a PAA receives a session identifier in the PANA-Start-Answer
   message, and it is configured to enable this optimization, it SHOULD
   retrieve the PANA session attributes from the previous PAA.  Current
   PAA determines the identity of the previous PAA by looking at the
   DiameterIdentity part of the PANA session identifier.  The MAC AVP
   can only be verified by the previous PAA, therefore a copy of the
   PANA message SHOULD be provided to the previous PAA.  The mechanism
   required to send a copy of the PANA-Start-Answer message from current
   PAA to the previous PAA, and retrieve the session attributes is
   outside the scope of PANA protocol.  The Context Transfer Protocol
   [I-D.ietf-seamoby-ctp] might be useful for this purpose.

   When the previous or current PAA is not configured to enable this
   optimization, the current PAA can not retrieve the PANA session
   attributes, or the PANA session has already expired (i.e., session
   lifetime is zero), the PAA MUST send the PANA-Auth-Request message
   with a new session identifier and let the PANA exchange take its
   usual course.  This action will engage EAP-based authentication and
   create a fresh PANA session from scratch.

   In case the current PAA can retrieve the on-going PANA session
   attributes from the previous PAA, the PANA session continues with a
   PANA-Bind exchange.

   As part of the context transfer, an intermediate AAA-Key material is
   provided by the previous PAA to the current PAA.

      AAA-Key-int = The first N bits of
                    HMAC-SHA1(AAA-Key, DiameterIdentity | Session-ID)

   The value of N depends on the integrity protection algorithm in use,
   i.e., N=160 for HMAC-SHA1.  DiameterIdentity is the identifier of the
   current PAA.  Session-ID is the identifier of the PaC's PANA session
   with the previous PAA.

   The current PAA and PaC compute the new AAA-Key by using the nonce
   values and the AAA-Key-int.




Forsberg, et al.         Expires April 20, 2005                [Page 33]

Internet-Draft                    PANA                      October 2004


      AAA-Key-new = The first N bits of
                    HMAC-SHA1(AAA-Key-int, PaC_nonce | PAA_nonce)

   New PANA_MAC_KEY is computed based on the algorithm described in
   Section 5.6, by using the new AAA-Key and the new Session-ID assigned
   by the current PAA.  The MAC AVP contained in the PANA-Bind-Request
   and PANA-Bind-Answer messages MUST be generated and verified by using
   the new PANA_MAC_KEY.  The Session-ID AVP MUST include a new session
   identifier assigned by the current PAA.  A new PANA session is
   created upon successful completion of this exchange.

   Note that correct operation of this optimization relies on many
   factors, including applicability of authorization state from one
   network attachment to another.  [I-D.ietf-eap-keying] identifies this
   operation as "fast handoff" and provides deployment considerations.
   Operators are recommended to take those guidelines into account when
   using this optimization in their networks.


































Forsberg, et al.         Expires April 20, 2005                [Page 34]

Internet-Draft                    PANA                      October 2004


7.  PANA Headers and Formats

   This section defines message formats for PANA protocol.

7.1  IP and UDP Headers

   The Hop Limit (or TTL) field of the IP header MUST be set to 255.
   When a PANA-PAA-Discover message is multicast, IP destination address
   of the message is set to a well-known link-local multicast address
   (TBD).  A PANA-PAA-Discover message MAY be unicast in some cases as
   specified in Section 4.1.  Any other PANA packet is unicast between
   the PaC and the PAA.  The source and destination addresses SHOULD be
   set to the addresses on the interfaces from which the message will be
   sent and received, respectively.

   When the PANA packet is sent in response to a request, the UDP source
   and destination ports of the response packet MUST be copied from the
   destination and source ports of the request packet, respectively.
   The destination port of an unsolicited PANA packet MUST be set to an
   assigned value (TBD), and the source port MUST be set to a value
   chosen by the sender.

7.2  PANA Header

   A summary of the PANA header format is shown below.  The fields are
   transmitted in network byte order.


          0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |    Version    |   Reserved    |        Message Length         |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |            Flags              |         Message Type          |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |                      Sequence Number                          |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |  AVPs ...
      +-+-+-+-+-+-+-+-+-+-+-+-+-


   Version

      This Version field MUST be set to 1 to indicate PANA Version 1.







Forsberg, et al.         Expires April 20, 2005                [Page 35]

Internet-Draft                    PANA                      October 2004


   Reserved

      This 8-bit field is reserved for future use, and MUST be set to
      zero, and ignored by the receiver.

   Message Length

      The Message Length field is three octets and indicates the length
      of the PANA message including the header fields.

   Flags

      The Flags field is eight bits.  The following bits are assigned:

       0                   1
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |R S N r r r r r r r r r r r r r|
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


      R(equest)

         If set, the message is a request.  If cleared, the message is
         an answer.

      S(eparate)

         When the S-flag is set in a PANA-Start-Request message it
         indicates that PAA is willing to offer separate NAP and ISP
         authentication.  When the S-flag is set in a PANA-Start-Answer
         message it indicates that the PaC accepts on performing
         separate NAP and ISP authentication.  When the S-flag is set in
         a PANA-Auth-Request/Answer, PANA-FirstAuth-End-Request/Answer
         and PANA-Bind-Request/Answer messages it indicates that
         separate NAP and ISP authentication is being performed in the
         authentication phase.  For other cases, S-flag MUST NOT be set.

      N(AP authentication)

         When the N-flag is set in a PANA-Auth-Request message, it
         indicates that the current EAP authentication is for NAP
         authentication.  When the N-flag is unset in a
         PANA-Auth-Request message, it indicates that the current EAP
         authentication is for ISP authentication.  The PaC MUST copy
         the value of the flag in its requests from the last received
         request of the PAA.  The value of the flag on an answer MUST be
         copied from the request.  The N-flag MUST NOT be set when



Forsberg, et al.         Expires April 20, 2005                [Page 36]

Internet-Draft                    PANA                      October 2004


         S-flag is not set.

      r(eserved)

         these flag bits are reserved for future use, and MUST be set to
         zero, and ignored by the receiver.

   Message Type

      The Message Type field is two octets, and is used in order to
      communicate the message type with the message.  The 16-bit address
      space is managed by IANA [ianaweb].  PANA uses its own address
      space for this field.

   Sequence Number

      The Sequence Number field contains a 32 bit value.

   AVPs

      AVPs are a method of encapsulating information relevant to the
      PANA message.  See section Section 7.3 for more information on
      AVPs.

7.3  AVP Header

   Each AVP of type OctetString MUST be padded to align on a 32-bit
   boundary, while other AVP types align naturally.  A number of
   zero-valued bytes are added to the end of the AVP Data field till a
   word boundary is reached.  The length of the padding is not reflected
   in the AVP Length field [RFC3588].

   The fields in the AVP header MUST be sent in network byte order.  The
   format of the header is:

          0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |           AVP Code            |           AVP Flags           |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |          AVP Length           |            Reserved           |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |                         Vendor-Id (opt)                       |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |    Data ...
      +-+-+-+-+-+-+-+-+





Forsberg, et al.         Expires April 20, 2005                [Page 37]

Internet-Draft                    PANA                      October 2004


   AVP Code

      The AVP Code, combined with the Vendor-Id field, identifies the
      attribute uniquely.  AVP numbers are allocated by IANA [ianaweb].
      PANA uses its own address space for this field although some of
      the AVP formats are borrowed from Diameter protocol [RFC3588].

   AVP Flags

      The AVP Flags field is two octets.  The following bits are
      assigned:

       0                   1
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |V M r r r r r r r r r r r r r r|
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


      M(andatory)

         The 'M' Bit, known as the Mandatory bit, indicates whether
         support of the AVP is required.

      V(endor)

         The 'V' bit, known as the Vendor-Specific bit, indicates
         whether the optional Vendor-Id field is present in the AVP
         header.

      r(eserved)

         These flag bits are reserved for future use, and MUST be set to
         zero, and ignored by the receiver.

   AVP Length

      The AVP Length field is four octets, and indicates the number of
      octets in this AVP including the AVP Code, AVP Length, AVP Flags,
      and the AVP data.

   Reserved

      This two-octet field is reserved for future use, and MUST be set
      to zero, and ignored by the receiver.






Forsberg, et al.         Expires April 20, 2005                [Page 38]

Internet-Draft                    PANA                      October 2004


   Vendor-Id

      The Vendor-Id field is present if the 'V' bit is set in the AVP
      Flags field.  The optional four-octet Vendor-Id field contains the
      IANA assigned "SMI Network Management Private Enterprise Codes"
      [ianaweb] value, encoded in network byte order.  Any vendor
      wishing to implement a vendor-specific PANA AVP MUST use their own
      Vendor-Id along with their privately managed AVP address space,
      guaranteeing that they will not collide with any other vendor's
      vendor-specific AVP(s), nor with future IETF applications.

   Data

      The Data field is zero or more octets and contains information
      specific to the Attribute.  The format and length of the Data
      field is determined by the AVP Code and AVP Length fields.



































Forsberg, et al.         Expires April 20, 2005                [Page 39]

Internet-Draft                    PANA                      October 2004


8.  PANA Messages, Message Specifications and AVPs

8.1  PANA Messages

   Figure 10 lists all PANA messages defined in this document.

                 Message          Direction: PaC---PAA
                 ----------------------------------------
                 PANA-PAA-Discover           -------->

                 PANA-Start-Request          <--------
                 PANA-Start-Answer           -------->

                 PANA-Auth-Request           <------->
                 PANA-Auth-Answer            <------->

                 PANA-Reauth-Request         -------->
                 PANA-Reauth-Answer          <--------

                 PANA-FirstAuth-End-Request  <--------
                 PANA-FirstAuth-End-Answer   -------->

                 PANA-Bind-Request           <--------
                 PANA-Bind-Answer            -------->

                 PANA-Ping-Request           <------->
                 PANA-Ping-Answer            <------->

                 PANA-Termination-Request    <------->
                 PANA-Termination-Answer     <------->

                 PANA-Update-Request         -------->
                 PANA-Update-Answer          <--------

                 PANA-Error-Request          <------->
                 PANA-Error-Answer           <------->

                    Figure 10: PANA Message Overview


8.2  Message Specifications

   Every PANA message MUST include a corresponding ABNF [RFC2234]
   specification found in [RFC3588].

   Example:

      message ::= < PANA-Header: <Message type>, [REQ] [SEP] >



Forsberg, et al.         Expires April 20, 2005                [Page 40]

Internet-Draft                    PANA                      October 2004


                * [ AVP ]


8.2.1  PANA-PAA-Discover (PDI)

   The PANA-PAA-Discover (PDI) message is used to discover the address
   of PAA(s).  Both sequence numbers in this message are set to zero
   (0).

         PANA-PAA-Discover ::= < PANA-Header: 1 >
                    *  [ AVP ]


8.2.2  PANA-Start-Request (PSR)

   PANA-Start-Request (PSR) is sent by the PAA to the PaC.  The PAA sets
   the sequence number to an initial random value.

         PANA-Start-Request ::= < PANA-Header: 2, REQ [SEP] >
                       { Nonce }
                       [ Cookie ]
                       [ EAP-Payload ]
                       [ NAP-Information ]
                    *  [ ISP-Information ]
                       [ Protection-Capability]
                       [ PPAC ]
                    *  [ AVP ]


8.2.3  PANA-Start-Answer (PSA)

   PANA-Start-Answer (PSA) is sent by the PaC to the PAA in response to
   a PANA-Start-Request message.

         PANA-Start-Answer ::= < PANA-Header: 2 [SEP] >
                       { Nonce }
                       [ Session-Id ]
                       [ Cookie ]
                       [ EAP-Payload ]
                       [ ISP-Information ]
                    *  [ AVP ]
                   0*1 < MAC >


8.2.4  PANA-Auth-Request (PAR)

   PANA-Auth-Request (PAR) is sent by the PAA to the PaC.




Forsberg, et al.         Expires April 20, 2005                [Page 41]

Internet-Draft                    PANA                      October 2004


         PANA-Auth-Request ::= < PANA-Header: 3, REQ [SEP] [NAP] >
                       < Session-Id >
                       < EAP-Payload >
                    *  [ AVP ]
                   0*1 < MAC >


8.2.5  PANA-Auth-Answer (PAN)

   PANA-Auth-Answer (PAN) is sent by the PaC to the PAA in response to a
   PANA-Auth-Request message.

         PANA-Auth-Answer ::= < PANA-Header: 3 [SEP] [NAP] >
                       < Session-Id >
                       < EAP-Payload >
                    *  [ AVP ]
                   0*1 < MAC >


8.2.6  PANA-Reauth-Request (PRAR)

   PANA-Reauth-Request (PRAR) is sent by the PaC to the PAA.

         PANA-Reauth-Request ::= < PANA-Header: 4, REQ >
                       < Session-Id >
                    *  [ AVP ]
                   0*1 < MAC >


8.2.7  PANA-Reauth-Answer (PRAA)

   PANA-Reauth-Answer (PRAA) is sent by the PAA to the PaC in response
   to a PANA-Reauth-Request message.

         PANA-Reauth-Answer ::= < PANA-Header: 4 >
                       < Session-Id >
                    *  [ AVP ]
                   0*1 < MAC >


8.2.8  PANA-Bind-Request (PBR)

   PANA-Bind-Request (PBR) is sent by the PAA to the PaC.

         PANA-Bind-Request ::= < PANA-Header: 5, REQ [SEP] [NAP] >
                       < Session-Id >
                       { Result-Code }
                       { PPAC }



Forsberg, et al.         Expires April 20, 2005                [Page 42]

Internet-Draft                    PANA                      October 2004


                       { IP-Address }
                       [ EAP-Payload ]
                       [ Session-Lifetime ]
                       [ Protection-Capability ]
                       [ Key-Id ]
                    *  [ Device-Id ]
                    *  [ AVP ]
                   0*1 < MAC >


8.2.9  PANA-Bind-Answer (PBA)

   PANA-Bind-Answer (PBA) is sent by the PaC to the PAA in response to a
   PANA-Result-Request message.

         PANA-Bind-Answer ::= < PANA-Header: 5 [,SEP] [NAP] >
                       < Session-Id >
                       { Result-Code }
                       [ PPAC ]
                       [ Device-Id ]
                       [ Key-Id ]
                    *  [ AVP ]
                   0*1 < MAC >


8.2.10  PANA-Ping-Request (PPR)

   PANA-Ping-Request (PPR) is either sent by the PaC or the PAA.

         PANA-Ping-Request ::= < PANA-Header: 6, REQ >
                       < Session-Id >
                    *  [ AVP ]
                   0*1 < MAC >


8.2.11  PANA-Ping-Answer (PPA)

   PANA-Ping-Answer (PPA) is sent in response to a PANA-Ping-Request.

         PANA-Ping-Answer ::= < PANA-Header: 6 >
                       < Session-Id >
                    *  [ AVP ]
                   0*1 < MAC >


8.2.12  PANA-Termination-Request (PTR)

   PANA-Termination-Request (PTR) is sent either by the PaC or the PAA.



Forsberg, et al.         Expires April 20, 2005                [Page 43]

Internet-Draft                    PANA                      October 2004


         PANA-Termination-Request ::= < PANA-Header: 7, REQ >
                       < Session-Id >
                       < Termination-Cause >
                    *  [ AVP ]
                   0*1 < MAC >


8.2.13  PANA-Termination-Answer (PTA)

   PANA-Termination-Answer (PTA) is sent either by the PaC or the PAA in
   response to PANA-Termination-Request.

         PANA-Termination-Answer ::= < PANA-Header: 7 >
                       < Session-Id >
                    *  [ AVP ]
                   0*1 < MAC >


8.2.14  PANA-Error-Request (PER)

   PANA-Error is sent either by the PaC or the PAA.

         PANA-Error-Request ::= < PANA-Header: 8 REQ >
                        < Session-Id >
                        < Result-Code >
                        { Failed-AVP }
                     *  [ AVP ]
                    0*1 < MAC >


8.2.15  PANA-Error-Answer (PEA)

   PANA-Error-Answer is sent in response to a PANA-Error-Request.

         PANA-Error-Answer ::= < PANA-Header: 8 >
                        < Session-Id >
                     *  [ AVP ]
                    0*1 < MAC >


8.2.16  PANA-FirstAuth-End-Request (PFER)

   PANA-FirstAuth-End-Request (PFER) is sent by the PAA to the PaC.

         PANA-FirstAuth-End-Request ::= < PANA-Header: 9, REQ [SEP] [NAP] >
                       < Session-Id >
                       { EAP-Payload }
                       { Result-Code }



Forsberg, et al.         Expires April 20, 2005                [Page 44]

Internet-Draft                    PANA                      October 2004


                       [ Key-Id ]
                    *  [ AVP ]
                   0*1 < MAC >


8.2.17  PANA-FirstAuth-End-Answer (PFEA)

   PANA-FirstAuth-End-Answer (PFEA) is sent by the PaC to the PAA in
   response to a PANA-FirstAuth-End-Request message.

         PANA-FirstAuth-End-Answer ::= < PANA-Header: 9, REQ [SEP] [NAP] >
                       < Session-Id >
                       [ Key-Id ]
                    *  [ AVP ]
                   0*1 < MAC >


8.2.18  PANA-Update-Request (PUR)

   PANA-Update-Request (PUR) is sent by the PaC to the PAA.

         PANA-Update-Request ::= < PANA-Header: 10, REQ >
                       < Session-Id >
                       < IP-Address >
                    *  [ AVP ]
                   0*1 < MAC >


8.2.19  PANA-Update-Answer (PUA)

   PANA-Update-Answer (PUA) is sent by the PAA to the PaC in response to
   a PANA-Update-Request.

         PANA-Update-Answer ::= < PANA-Header: 10 >
                       < Session-Id >
                    *  [ AVP ]
                   0*1 < MAC >


8.3  AVPs in PANA

   PANA defines several AVPs that are specific to the protocol.  A
   number of others AVPs are reused.  These are specified in other
   documents such as [RFC3588].

   The following tables lists the AVPs used in this document, and
   specifies in which PANA messages they MAY, or MAY NOT be present.




Forsberg, et al.         Expires April 20, 2005                [Page 45]

Internet-Draft                    PANA                      October 2004


   The table uses the following symbols:

   0     The AVP MUST NOT be present in the message.

   0+    Zero or more instances of the AVP MAY be present in the
         message.

   0-1   Zero or one instance of the AVP MAY be present in the message.
         It is considered an error if there are more than one instance
         of the AVP.

   1     One instance of the AVP MUST be present in the message.

   1+    At least one instance of the AVP MUST be present in the
         message.

                          +-----------------------------------------+
                          |                 Message                 |
                          |                   Type                  |
                          +-----+-----+-----+-----+-----+-----+-----+
      Attribute Name      | PSR | PSA | PAR | PAN | PBR | PBA | PDI |
      --------------------+-----+-----+-----+-----+-----+-----+-----+
      Result-Code         |  0  |  0  |  0  |  0  |  1  |  1  |  0  |
      Session-Id          |  0  | 0-1 |  1  |  1  |  1  |  1  |  0  |
      Termination-Cause   |  0  |  0  |  0  |  0  |  0  |  0  |  0  |
      EAP-Payload         | 0-1 | 0-1 |  1  | 0-1 | 0-1 |  0  |  0  |
      MAC                 |  0  | 0-1 | 0-1 | 0-1 | 0-1 | 0-1 |  0  |
      Nonce               |  1  |  1  |  0  |  0  |  0  |  0  |  0  |
      Device-Id           |  0  |  0  |  0  |  0  |  0+ | 0-1 |  0  |
      Cookie              | 0-1 | 0-1 |  0  |  0  |  0  |  0  |  0  |
      Protection-Cap.     | 0-1 |  0  |  0  |  0  | 0-1 |  0  |  0  |
      PPAC                | 0-1 |  0  |  0  |  0  |  1  | 0-1 |  0  |
      Session-Lifetime    |  0  |  0  |  0  |  0  | 0-1 |  0  |  0  |
      Failed-AVP          |  0  |  0  |  0  |  0  |  0  |  0  |  0  |
      ISP-Information     |  0+ | 0-1 |  0  |  0  |  0  |  0  |  0  |
      NAP-Information     | 0-1 |  0  |  0  |  0  |  0  |  0  |  0  |
      Key-Id              |  0  |  0  |  0  |  0  | 0-1 | 0-1 |  0  |
      IP-Address          |  0  |  0  |  0  |  0  |  0  |  0  |  0  |
      --------------------+-----+-----+-----+-----+-----+-----+-----+

                 Figure 11: AVP Occurrence Table (1/3)










Forsberg, et al.         Expires April 20, 2005                [Page 46]

Internet-Draft                    PANA                      October 2004


                          +-------------------------------------+
                          |              Message                |
                          |               Type                  |
                          +-----+-----+-----+-----+------+------+
      Attribute Name      | PPR | PPA | PTR | PTA | PFER | PFEA |
      --------------------+-----+-----+-----+-----+------+------+
      Result-Code         |  0  |  0  |  0  |  0  |  1   |  0   |
      Session-Id          |  1  |  1  |  1  |  1  |  1   |  1   |
      Termination-Cause   |  0  |  0  |  1  |  0  |  0   |  0   |
      EAP-Payload         |  0  |  0  |  0  |  0  |  1   |  0   |
      MAC                 | 0-1 | 0-1 | 0-1 | 0-1 | 0-1  | 0-1  |
      Nonce               |  0  |  0  |  0  |  0  |  0   |  0   |
      Device-Id           |  0  |  0  |  0  |  0  |  0   |  0   |
      Cookie              |  0  |  0  |  0  |  0  |  0   |  0   |
      Protection-Cap.     |  0  |  0  |  0  |  0  |  0   |  0   |
      PPAC                |  0  |  0  |  0  |  0  |  0   |  0   |
      Session-Lifetime    |  0  |  0  |  0  |  0  |  0   |  0   |
      Failed-AVP          |  0  |  0  |  0  |  0  |  0   |  0   |
      ISP-Information     |  0  |  0  |  0  |  0  |  0   |  0   |
      NAP-Information     |  0  |  0  |  0  |  0  |  0   |  0   |
      Key-Id              |  0  |  0  |  0  |  0  | 0-1  | 0-1  |
      IP-Address          |  0  |  0  |  0  |  0  |  0   |  0   |
      --------------------+-----+-----+-----+-----+------+------+

                 Figure 12: AVP Occurrence Table (2/3)


























Forsberg, et al.         Expires April 20, 2005                [Page 47]

Internet-Draft                    PANA                      October 2004


                          +-------------------------------------+
                          |               Message               |
                          |                Type                 |
                          +-----+-----+-----+-----+------+------+
      Attribute Name      | PUR | PUA | PER | PEA | PRAR | PRAA |
      --------------------+-----+-----+-----+-----+------+------+
      Result-Code         |  0  |  0  |  1  |  0  |  0   |  0   |
      Session-Id          |  1  |  1  |  1  |  1  |  1   |  1   |
      Termination-Cause   |  0  |  0  |  0  |  0  |  0   |  0   |
      EAP-Payload         |  0  |  0  |  0  |  0  |  0   |  0   |
      MAC                 | 0-1 | 0-1 | 0-1 | 0-1 | 0-1  | 0-1  |
      Nonce               |  0  |  0  |  0  |  0  |  0   |  0   |
      Device-Id           |  0  |  0  |  0  |  0  |  0   |  0   |
      Cookie              |  0  |  0  |  0  |  0  |  0   |  0   |
      Protection-Cap.     |  0  |  0  |  0  |  0  |  0   |  0   |
      PPAC                |  0  |  0  |  0  |  0  |  0   |  0   |
      Session-Lifetime    |  0  |  0  |  0  |  0  |  0   |  0   |
      Failed-AVP          |  0  |  0  |  1  |  0  |  0   |  0   |
      ISP-Information     |  0  |  0  |  0  |  0  |  0   |  0   |
      NAP-Information     |  0  |  0  |  0  |  0  |  0   |  0   |
      Key-Id              |  0  |  0  |  0  |  0  |  0   |  0   |
      IP-Address          |  1  |  0  |  0  |  0  |  0   |  0   |
      --------------------+-----+-----+-----+-----+------+------+

                 Figure 13: AVP Occurrence Table (3/3)


8.3.1  MAC AVP

   The first octet (8 bits) of the MAC (AVP Code 1) AVP data contains
   the MAC algorithm type.  Rest of the AVP data payload contains the
   MAC encoded in network byte order.  The 8-bit Algorithm name space is
   managed by IANA [ianaweb].  The AVP length varies depending on the
   used algorithm.

       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |   Algorithm   |           MAC...
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Algorithm

         1           HMAC-SHA1 (20 bytes)







Forsberg, et al.         Expires April 20, 2005                [Page 48]

Internet-Draft                    PANA                      October 2004


   MAC

      The Message Authentication Code is encoded in network byte order.

8.3.2  Device-Id AVP

   The Device-Id AVP (AVP Code 2) is of Address type [RFC3588].  IPv4
   and IPv6 addresses are encoded as specified in [RFC3588].  The
   content and format of data (including byte and bit ordering) for
   link-layer addresses is expected to be specified in specific
   documents that describe how IP operates over different link-layers.
   For instance, [RFC2464].  Address families other than that are
   defined for link-layer or IP addresses MUST NOT be used for this AVP.

8.3.3  Session-Id AVP

   All messages pertaining to a specific PANA session MUST include a
   Session-Id AVP (AVP Code 3) which carries a PAA-assigned fix value
   throughout the lifetime of a session.  When present, the Session-Id
   SHOULD appear immediately following the PANA header.

   The Session-Id MUST be globally and eternally unique, as it is meant
   to identify a PANA Session without reference to any other
   information, and may be needed to correlate historical authentication
   information with accounting information.  The PANA Session-Id AVP has
   the same format as the Diameter Session-Id AVP [RFC3588].

8.3.4  Cookie AVP

   The Cookie AVP (AVP Code 4) is of type OctetString.  The data is
   opaque and the exact content is outside the scope of this protocol.

8.3.5  Protection-Capability AVP

   The Protection-Capability AVP (AVP Code 5) is of type Unsigned32.
   The AVP data indicates the cryptographic data protection capability
   supported by the EPs.  Below is a list of specified data protection
   capabilities:

         0          L2_PROTECTION
         1          IPSEC_PROTECTION


8.3.6  Termination-Cause AVP

   The Termination-Cause AVP (AVP Code 6) is of type of type Enumerated,
   and is used to indicate the reason why a session was terminated on
   the access device.  The AVP data is used as a collection of flags The



Forsberg, et al.         Expires April 20, 2005                [Page 49]

Internet-Draft                    PANA                      October 2004


   following Termination-Cause AVP defined in [RFC3588] are used for
   PANA.

   LOGOUT                   1  (PaC -> PAA)

      The client initiated a disconnect

   ADMINISTRATIVE           4  (PAA -> PaC)

      The client was not granted access, or was disconnected, due to
      administrative reasons, such as the receipt of a
      Abort-Session-Request message.

   SESSION_TIMEOUT          8  (PAA -> PaC)

      The session has timed out, and service has been terminated.

8.3.7  Result-Code AVP

   The Result-Code AVP (AVP Code 7) is of type Unsigned32 and indicates
   whether an EAP authentication was completed successfully or whether
   an error occurred.  Here are Result-Code AVP values taken from
   [RFC3588] and adapted for PANA.

8.3.7.1  Authentication Results Codes

   These result code values inform the PaC about the authentication and
   authorization result.  The authentication result and authorization
   result can be different as described below, but only one result that
   corresponds to the one detected first is returned.

   PANA_SUCCESS                            2001

      Both the authentication and authorization processes are
      successful.

   PANA_AUTHENTICATION_REJECTED            4001

      The authentication process failed.  When this error is returned,
      the authorization process also fails.

   PANA_AUTHORIZATION_REJECTED             5003

      The authorization process failed.  This error could occur when
      authorization is rejected by a AAA proxy or rejected locally by a
      PAA, even if the authentication procedure succeeds.





Forsberg, et al.         Expires April 20, 2005                [Page 50]

Internet-Draft                    PANA                      October 2004


8.3.7.2  Protocol Error Result Codes

   Protocol error result code values.

   PANA_MESSAGE_UNSUPPORTED                3001

      Error code from PAA to PaC or from PaC to PAA.  Message type not
      recognized or supported.

   PANA_UNABLE_TO_DELIVER                  3002

      Error code from PAA to PaC.  PAA was unable to deliver the EAP
      payload to the authentication server.

   PANA_INVALID_HDR_BITS                   3008

      Error code from PAA to PaC or from PaC to PAA.  A message was
      received whose bits in the PANA header were either set to an
      invalid combination, or to a value that is inconsistent with the
      message type's definition.

   PANA_INVALID_AVP_BITS                   3009

      Error code from PAA to PaC or from PaC to PAA.  A message was
      received that included an AVP whose flag bits are set to an
      unrecognized value, or that is inconsistent with the AVP's
      definition.

   PANA_AVP_UNSUPPORTED                    5001

      Error code from PAA to PaC or from PaC to PAA.  The received
      message contained an AVP that is not recognized or supported and
      was marked with the Mandatory bit.  A PANA message with this error
      MUST contain one or more Failed-AVP AVP containing the AVPs that
      caused the failure.

   PANA_UNKNOWN_SESSION_ID                 5002

      Error code from PAA to PaC or from PaC to PAA.  The message
      contained an unknown Session-Id.  PAA MUST NOT send this error
      result code value to PaC if PaC sent an unknown Session-Id in the
      PANA-Start-Answer message (session resumption).

   PANA_INVALID_AVP_VALUE                  5004







Forsberg, et al.         Expires April 20, 2005                [Page 51]

Internet-Draft                    PANA                      October 2004


      Error code from PAA to PaC or from PaC to PAA.  The message
      contained an AVP with an invalid value in its data portion.  A
      PANA message indicating this error MUST include the offending AVPs
      within a Failed-AVP AVP.

   PANA_MISSING_AVP                        5005

      Error code from PAA to PaC or from PaC to PAA.  The message did
      not contain an AVP that is required by the message type
      definition.  If this value is sent in the Result-Code AVP, a
      Failed-AVP AVP SHOULD be included in the message.  The Failed-AVP
      AVP MUST contain an example of the missing AVP complete with the
      Vendor-Id if applicable.  The value field of the missing AVP
      should be of correct minimum length and contain zeroes.

   PANA_RESOURCES_EXCEEDED                 5006

      Error code from PAA to PaC.  A message was received that cannot be
      authorized because the client has already expended allowed
      resources.  An example of this error condition is a client that is
      restricted to one PANA session and attempts to establish a second
      session.

   PANA_CONTRADICTING_AVPS                 5007

      Error code from PAA to PaC.  The PAA has detected AVPs in the
      message that contradicted each other, and is not willing to
      provide service to the client.  One or more Failed-AVP AVPs MUST
      be present, containing the AVPs that contradicted each other.

   PANA_AVP_NOT_ALLOWED                    5008

      Error code from PAA to PaC or from PaC to PAA.  A message was
      received with an AVP that MUST NOT be present.  The Failed-AVP AVP
      MUST be included and contain a copy of the offending AVP.

   PANA_AVP_OCCURS_TOO_MANY_TIMES          5009

      Error code from PAA to PaC or from PaC to PAA.  A message was
      received that included an AVP that appeared more often than
      permitted in the message definition.  The Failed-AVP AVP MUST be
      included and contain a copy of the first instance of the offending
      AVP that exceeded the maximum number of occurrences.

   PANA_UNSUPPORTED_VERSION                5011






Forsberg, et al.         Expires April 20, 2005                [Page 52]

Internet-Draft                    PANA                      October 2004


      Error code from PAA to PaC or from PaC to PAA.  This error is
      returned when a message was received, whose version number is
      unsupported.

   PANA_UNABLE_TO_COMPLY                   5012

      This error is returned when a request is rejected for unspecified
      reasons.  For example, when an EAP authentication fails at an EAP
      pass-through authenticator without passing an EAP-Failure message
      to the PAA, a Result-Code AVP with this error code is carried in
      PANA-Error-Request message.

   PANA_INVALID_AVP_LENGTH                 5014

      Error code from PAA to PaC or from PaC to PAA.  The message
      contained an AVP with an invalid length.  The PANA-Error message
      indicating this error MUST include the offending AVPs within a
      Failed-AVP AVP.

   PANA_INVALID_MESSAGE_LENGTH             5015

      Error code from PAA to PaC or from PaC to PAA.  This error is
      returned when a message is received with an invalid message
      length.

   PANA_PROTECTION_CAPABILITY_UNSUPPORTED  5016

      Error code from PaC to PAA.  This error is returned when the PaC
      receives a PANA-Bind-Request with a Protection-Capability AVP and
      a valid MAC AVP but does not support the protection capability
      specified in the Protection-Capability AVP.

   PANA_PPAC_CAPABILITY_UNSUPPORTED  5017

      Error code from PaC to PAA.  This error is returned in a
      PANA-Bind-Answer message when there is no match between the list
      of PPAC methods offered by the PAA and the ones available on the
      PaC.

   PANA_INVALID_IP_ADDRESS  5018

      Error code from PAA to PaC.  This error is returned in a
      PANA-Error-Request message when the IP-Address AVP in the received
      PANA-Update-Request message is invalid (e.g., a non-unicast
      address).






Forsberg, et al.         Expires April 20, 2005                [Page 53]

Internet-Draft                    PANA                      October 2004


8.3.8  EAP-Payload AVP

   The EAP-Payload AVP (AVP Code 8) is of type OctetString and is used
   to encapsulate the actual EAP packet that is being exchanged between
   the EAP peer and the EAP authenticator.

8.3.9  Session-Lifetime AVP

   The Session-Lifetime AVP (AVP Code 9) data is of type Unsigned32.  It
   contains the number of seconds remaining before the current session
   is considered expired.

8.3.10  Failed-AVP AVP

   The Failed-AVP AVP (AVP Code 10) is of type Grouped and provides
   debugging information in cases where a request is rejected or not
   fully processed due to erroneous information in a specific AVP.  The
   format of the Failed-AVP AVP is defined in [RFC3588].

8.3.11  NAP-Information AVP

   The NAP-Information AVP (AVP Code 11) is of type Grouped, and
   contains zero or one Provider-Identifier AVP which carries the
   identifier of the NAP and one Provider-Name AVP which carries the
   name of the NAP.  Its Data field has the following ABNF grammar:

         NAP-Information ::= < AVP Header: 11 >
                    0*1 { Provider-Identifier }
                        { Provider-Name }
                     *  [ AVP ]


8.3.12  ISP-Information AVP

   The ISP-Information AVP (AVP Code 12) is of type Grouped, and
   contains zero or one Provider-Identifier AVP which carries the
   identifier of the ISP and one Provider-Name AVP which carries the
   name of the ISP.  Its Data field has the following ABNF grammar:

         ISP-Information ::= < AVP Header: 12 >
                    0*1 { Provider-Identifier }
                        { Provider-Name }
                     *  [ AVP ]


8.3.13  Provider-Identifier AVP

   The Provider-Identifier AVP (AVP Code 13) is of type Unsigned32, and



Forsberg, et al.         Expires April 20, 2005                [Page 54]

Internet-Draft                    PANA                      October 2004


   contains an IANA assigned "SMI Network Management Private Enterprise
   Codes" [ianaweb] value, encoded in network byte order.

8.3.14  Provider-Name AVP

   The Provider-Name AVP (AVP Code 14) is of type UTF8String, and
   contains the UTF8-encoded name of the provider.

8.3.15  Key-Id AVP

   The Key-Id AVP (AVP Code 15) is of type Integer32, and contains an
   AAA-Key identifier.  The AAA-Key identifier is assigned by PAA and
   MUST be unique within the PANA session.

8.3.16  Post-PANA-Address-Configuration (PPAC) AVP

   The data field of PPAC AVP (AVP Code 16) is of type Unsigned32.  The
   AVP data is used to carry a set of flags which maps to various IP
   address configuration methods.  When sent by the PAA, the AVP MUST
   have at least one of the flags set, and MAY have more than one set.
   When sent by the PaC, only one of the flags MUST be set.

   The format of the AVP data is as follows:

       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |N|D|A|T|I|                   Reserved                          |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   PPAC Flags

      N (No configuration)

         The PaC does not have to (if sent by PAA) or will not (if sent
         by PaC) configure a new IP address after PANA.

      D (DHCP)

         The PaC can (if sent by PAA) or will (if sent by PaC) use DHCP
         [RFC2131][RFC3315] to configure a new IP address after PANA.

      A (stateless autoconfiguration)

         The PaC can/will use stateless IPv6 address autoconfiguration
         [RFC2462] to configure a new IP address after PANA.





Forsberg, et al.         Expires April 20, 2005                [Page 55]

Internet-Draft                    PANA                      October 2004


      T (DHCP with IPsec tunnel mode)

         The PaC can/will use [RFC3456] to configure a new IP address
         after PANA.

      I (IKEv2)

         The PaC can/will use [I-D.ietf-ipsec-ikev2] to configure a new
         IP address after PANA.

      Reserved

         These flag bits are reserved for future use, and MUST be set to
         zero, and ignored by the receiver.

   Unless the N-flag is set, the PaC MUST configure a new IP address
   using one of the methods indicated by the other flags.  Refer to
   [I-D.ietf-pana-framework] for a detailed discussion on when these
   methods can be used.

8.3.17  Nonce AVP

   The Nonce AVP (AVP Code 17) is of type OctetString.  The data
   contains a randomly generated value in opaque format.  The data
   length MUST be between 8 and 256 bytes inclusive.

8.3.18  IP-Address AVP

   The IP-Address (AVP Code 18) contains an IP address of n a PaC or
   PAA.  The payload format of the IP-Address AVP is the same as that of
   the Device-Id AVP (see See Section 8.3.2).  Address families for IPv4
   or IPv6 MUST be used for this AVP.  Address families for IPv4 or IPv6
   MUST be used for this AVP.


















Forsberg, et al.         Expires April 20, 2005                [Page 56]

Internet-Draft                    PANA                      October 2004


9.  PANA Protocol Message Retransmissions

   The PANA protocol provides retransmissions for the PANA-PAA-Discover
   and request messages.

   The rule is that the sender of the request message retransmits the
   request if the corresponding answer is not received in time.  Answer
   messages are sent as answers to the request messages, not based on a
   timer.

   PaC MUST retransmit PANA-PAA-Discover if a subsequent
   PANA-Start-Request is not received in time.  Even though a
   PANA-Start-Request is received, PANA-PAA-Discover may still have to
   be retransmitted.  This is because a stateless PANA handshake
   requires one time transmission of a PANA-Start-Request.  PAA MUST NOT
   start a timer and retransmit the request if it wants to avoid state
   creation.  If the received PANA-Start-Request included a Cookie AVP
   (an indication of stateless handshake), PaC MUST retransmit
   PANA-PAA-Discover until the first PANA-Auth-Request is received.

   PANA retransmission timers are based on the model used in DHCPv6
   [RFC3315].  Variables used here are also borrowed from this
   specification.  PANA is a request response like protocol.  The
   message exchange terminates when either the request sender
   successfully receives the appropriate answer, or when the message
   exchange is considered to have failed according to the retransmission
   mechanism described below.

   The retransmission behavior is controlled and described by the
   following variables:

         RT     Retransmission timeout

         IRT    Initial retransmission time

         MRC    Maximum retransmission count

         MRT    Maximum retransmission time

         MRD    Maximum retransmission duration

         RAND   Randomization factor

   With each message transmission or retransmission, the sender sets RT
   according to the rules given below.  If RT expires before the message
   exchange terminates, the sender recomputes RT and retransmits the
   message.




Forsberg, et al.         Expires April 20, 2005                [Page 57]

Internet-Draft                    PANA                      October 2004


   Each of the computations of a new RT include a randomization factor
   (RAND), which is a random number chosen with a uniform distribution
   between -0.1 and +0.1.  The randomization factor is included to
   minimize synchronization of messages.

   The algorithm for choosing a random number does not need to be
   cryptographically sound.  The algorithm SHOULD produce a different
   sequence of random numbers from each invocation.

   RT for the first message transmission is based on IRT:

         RT = IRT + RAND*IRT

   RT for each subsequent message transmission is based on the previous
   value of RT:

         RT = 2*RTprev + RAND*RTprev

   MRT specifies an upper bound on the value of RT (disregarding the
   randomization added by the use of RAND).  If MRT has a value of 0,
   there is no upper limit on the value of RT.  Otherwise:

         if (RT > MRT)
            RT = MRT + RAND*MRT

   MRC specifies an upper bound on the number of times a sender may
   retransmit a message.  Unless MRC is zero, the message exchange fails
   once the sender has transmitted the message MRC times.

   MRD specifies an upper bound on the length of time a sender may
   retransmit a message.  Unless MRD is zero, the message exchange fails
   once MRD seconds have elapsed since the client first transmitted the
   message.

   If both MRC and MRD are non-zero, the message exchange fails whenever
   either of the conditions specified in the previous two paragraphs are
   met.

   If both MRC and MRD are zero, the client continues to transmit the
   message until it receives a response.

9.1  Transmission and Retransmission Parameters

   This section presents a table of values used to describe the message
   retransmission behavior of PANA requests (REQ_*) and
   PANA-PAA-Discover message (PDI_*).  The table shows default values.

           Parameter       Default   Description



Forsberg, et al.         Expires April 20, 2005                [Page 58]

Internet-Draft                    PANA                      October 2004


           ------------------------------------------------
           PDI_IRT           1 sec   Initial PDI timeout.
           PDI_MRT         120 secs  Max PDI timeout value.
           PDI_MRC           0       Configurable.
           PDI_MRD           0       Configurable.

           REQ_IRT           1 sec   Initial Request timeout.
           REQ_MRT          30 secs  Max Request timeout value.
           REQ_MRC          10       Max Request retry attempts.
           REQ_MRD           0       Configurable.

   So for example the first RT for the PBR message is calculated using
   REQ_IRT as the IRT:

           RT = REQ_IRT + RAND*REQ_IRT




































Forsberg, et al.         Expires April 20, 2005                [Page 59]

Internet-Draft                    PANA                      October 2004


10.  IANA Considerations

   This section provides guidance to the Internet Assigned Numbers
   Authority (IANA) regarding registration of values related to the PANA
   protocol, in accordance with BCP 26 [IANA].  The following policies
   are used here with the meanings defined in BCP 26: "Private Use",
   "First Come First Served", "Expert Review", "Specification Required",
   "IETF Consensus", "Standards Action".

   This section explains the criteria to be used by the IANA for
   assignment of numbers within namespaces defined within this document.

   For registration requests where a Designated Expert should be
   consulted, the responsible IESG area director should appoint the
   Designated Expert.  For Designated Expert with Specification
   Required, the request is posted to the PANA WG mailing list (or, if
   it has been disbanded, a successor designated by the Area Director)
   for comment and review, and MUST include a pointer to a public
   specification.  Before a period of 30 days has passed, the Designated
   Expert will either approve or deny the registration request and
   publish a notice of the decision to the PANA WG mailing list or its
   successor.  A denial notice must be justified by an explanation and,
   in the cases where it is possible, concrete suggestions on how the
   request can be modified so as to become acceptable.

10.1  PANA UDP Port Number

   PANA uses one well-known UDP port number (Section 5.2, Section 4.1
   and Section 7.1, which needs to be assigned by the IANA.

10.2  PANA Multicast Address

   PANA uses one well-known IPv4 multicast address for which the scope
   is limited to be link-local by setting the TTL field to 255, and one
   well-known IPv6 link-local scoped multicast address (Section 4.1 and
   Section 7.1), which need to be assigned by the IANA.

10.3  PANA Header

   As defined in Section 7.2, the PANA header contains two fields that
   requires IANA namespace management; the Message Type and Flags field.

10.3.1  Message Type

   The Message Type namespace is used to identify PANA messages.  Values
   0-65,533 are for permanent, standard message types, allocated by IETF
   Consensus [IANA].  This document defines the Message Types 1-10.  See
   Section 8.2.1 through Section 8.2.19 for the assignment of the



Forsberg, et al.         Expires April 20, 2005                [Page 60]

Internet-Draft                    PANA                      October 2004


   namespace in this specification.

   The values 65,534 and 65,535 (hexadecimal values 0xfffe - 0xffff) are
   reserved for experimental messages.  As these codes are only for
   experimental and testing purposes, no guarantee is made for
   interoperability between communicating PaC and PAA using experimental
   commands, as outlined in [IANA-EXP].

10.3.2  Flags

   There are 16 bits in the Flags field of the PANA header.  This
   document assigns bit 0 ('R'equest), bit 1 ('S'eparate) and bit 2
   ('N'AP Authentication).  The remaining bits MUST only be assigned via
   a Standards Action [IANA].

10.4  AVP Header

   As defined in Section 7.3, the AVP header contains three fields that
   requires IANA namespace management; the AVP Code, AVP Flags and
   Vendor-Id fields where only the AVP Code and AVP Flags create new
   namespaces.

10.4.1  AVP Code

   The AVP Code namespace is used to identify attributes.  There are
   multiple namespaces.  Vendors can have their own AVP Codes namespace
   which will be identified by their Vendor-ID (also known as
   Enterprise-Number) and they control the assignments of their
   vendor-specific AVP codes within their own namespace.  The absence of
   a Vendor-ID or a Vendor-ID value of zero (0) identifies the IETF IANA
   controlled AVP Codes namespace.  The AVP Codes and sometimes also
   possible values in an AVP are controlled and maintained by IANA.

   AVP Code 0 is not used.  This document defines the AVP Codes 1-18.
   See Section 8.3.1 through Section 8.3.18 for the assignment of the
   namespace in this specification.

   AVPs may be allocated following Designated Expert with Specification
   Required [IANA].  Release of blocks of AVPs (more than 3 at a time
   for a given purpose) should require IETF Consensus.

   Note that PANA defines a mechanism for Vendor-Specific AVPs, where
   the Vendor-Id field in the AVP header is set to a non-zero value.
   Vendor-Specific AVPs codes are for Private Use and should be
   encouraged instead of allocation of global attribute types, for
   functions specific only to one vendor's implementation of PANA, where
   no interoperability is deemed useful.  Where a Vendor-Specific AVP is
   implemented by more than one vendor, allocation of global AVPs should



Forsberg, et al.         Expires April 20, 2005                [Page 61]

Internet-Draft                    PANA                      October 2004


   be encouraged instead.

10.4.2  Flags

   There are 16 bits in the AVP Flags field of the AVP header, defined
   in Section 7.3.  This document assigns bit 0 ('V'endor Specific) and
   bit 1 ('M'andatory).  The remaining bits should only be assigned via
   a Standards Action .

10.5  AVP Values

   Certain AVPs in PANA define a list of values with various meanings.
   For attributes other than those specified in this section, adding
   additional values to the list can be done on a First Come, First
   Served basis by IANA [IANA].

10.5.1  Algorithm Values of MAC AVP

   As defined in Section 8.3.1, the Algorithm field of MAC AVP (AVP Code
   1) defines the value of 1 (one) for HMAC-SHA1.

   All remaining values are available for assignment via IETF Consensus
   [IANA].

10.5.2  Protection-Capability AVP Values

   As defined in Section 8.3.5, the Protection-Capability AVP (AVP Code
   5) defines the values 0 and 1.

   All remaining values are available for assignment via a Standards
   Action [IANA].

10.5.3  Termination-Cause AVP Values

   As defined in Section 8.3.6, the Termination-Cause AVP (AVP Code 6)
   defines the values 1, 4 and 8.

   All remaining values are available for assignment via IETF Consensus
   [IANA].

10.5.4  Result-Code AVP Values

   As defined in Section 8.3.7.1 and Section 8.3.7.2 the Result-Code AVP
   (AVP Code 7) defines the values 2001, 3001-3002, 3008-3009, 4001,
   5001-5009 and 5011-5019.

   All remaining values are available for assignment via IETF Consensus
   [IANA].



Forsberg, et al.         Expires April 20, 2005                [Page 62]

Internet-Draft                    PANA                      October 2004


10.5.5  Post-PANA-Address-Configuration AVP Values

   As defined in Section 8.3.16, the Post-PANA-Address-Configuration AVP
   (AVP Code 17) defines the bits 0 ('N': no configuration), 1 ('D':
   DHCP), 2 ('A' stateless autoconfiguration), 3 ('T': DHCP with IPsec
   tunnel mode) and 4 ('I': IKEv2).

   All remaining values are available for assignment via a Standards
   Action [IANA].










































Forsberg, et al.         Expires April 20, 2005                [Page 63]

Internet-Draft                    PANA                      October 2004


11.  Security Considerations

   The PANA protocol defines a UDP-based EAP encapsulation that runs
   between two IP-enabled nodes on the same IP link.  Various security
   threats that are relevant to a protocol of this nature are outlined
   in [I-D.ietf-pana-threats-eval].  Security considerations stemming
   from the use of EAP and EAP methods are discussed in [RFC3748].  This
   section provides a discussion on the security-related issues that are
   related to PANA framework and protocol design.

   An important element in assessing security of PANA design and
   deployment in a network is the presence of lower-layer (physical and
   link-layer) security.  In the context of this document, lower-layers
   are said to be secure if they can prevent eavesdropping and spoofing
   of packets.  Examples of such networks are physically-secured DSL
   networks and 3GPP2 networks with crytographically-secured cdma2000
   link-layer.

   In these examples, the lower-layer security is enabled even before
   running the first PANA-based authentication.  In the absence of such
   a pre-established secure channel, one needs to be created in
   conjunction with PANA using a link-layer or network-layer
   cryptographic mechanism (e.g., IPsec).

11.1  General Security Measures

   PANA provides multiple mechanisms to secure a PANA session.

   Since PaC and PAA are on the same IP link, a simple TTL check on the
   received PANA messages prevents off-link attacks.

   PANA messages carry sequence numbers, which are monotonically
   incremented by 1 with every new request message.  These numbers are
   randomly initialized at the beginning of the session, and verified
   against expected numbers upon receipt.  A message whose sequence
   number is different than the expected one is silently discarded.  In
   addition to accomplishing orderly delivery of EAP messages and
   duplicate elimination, this scheme also helps prevent an adversary
   spoof messages to disturb ongoing PANA and EAP sessions unless it can
   also eavesdrop to synchronize on the expected sequence number.

   The PANA framework defines EP which is ideally located on a network
   device that can filter traffic from the PaCs before the traffic
   enters the Internet.  A set of filters can be used to discard
   unauthorized packets, such as a PANA-Start-Request message that is
   received from the segment of the access network where only PaCs are
   supposed to be connected.




Forsberg, et al.         Expires April 20, 2005                [Page 64]

Internet-Draft                    PANA                      October 2004


   The protocol also provides authentication and integrity protection to
   PANA messages when the used EAP method can generate cryptographic
   session keys.  A PANA SA is generated based on the AAA-Key exported
   by the EAP method.  This SA is used for generating per-packet MAC to
   protect the PANA header and payload (including the complete EAP
   message).

   The cryptographic protection prevents an adversary from acting as a
   man-in-the-middle, injecting messages, replaying messages and
   modifying the content of the exchanged messages.  Any packet that
   fails to pass the MAC verification is silently discarded.  The
   earliest this protection can be enabled is when the very first
   PANA-Bind-Request that signals a successful authentication is
   generated.  Starting with the PANA-Bind-Request and PANA-Bind-Answer,
   any subsequent PANA message until the session gets torn down can be
   cryptographically protected.

   The PANA SA enables authenticated and integrity protected exchange of
   the device ID information between the PaC and PAA.  This ensures
   there were no man-in-the-middle during the PANA authentication.

   The lifetime of the PANA SA is bounded by the AAA-authorized session
   lifetime with an additional tolerance period.  Unless PANA state is
   updated by executing another EAP authentication, the PANA SA is
   removed when the current session expires.

   The ability to use cryptographic protection within PANA is determined
   by the used EAP method, which is generally dictated by the deployment
   environment.  Insecure lower-layers necessitate use of key-generating
   EAP methods.  In networks where lower-layers are already secured,
   cryptographic protection of PANA messages is not necessary.

11.2  Discovery

   The discovery and handshake phase is vulnerable to spoofing attacks
   as these messages are not authenticated and integrity protected.  In
   order to prevent very basic denial-of service attacks an adversary
   should not be able to cause state creation by sending discovery
   messages to the PAA.  This protection is achieved by using a
   cookie-based scheme (similar to [RFC2522] which allows the responder
   (PAA) to be stateless in the first round of message exchange.  A
   return-routability test does not provide additional protection as
   PANA traffic is not routed but simply forwarded on-link.  It is
   difficult to prevent this threat entirely.

   In networks where lower-layers are not secured prior to running PANA,
   the capability discovery enabled through inclusion of
   Protection-Capability and Post-PANA-Address-Configuration AVPs in a



Forsberg, et al.         Expires April 20, 2005                [Page 65]

Internet-Draft                    PANA                      October 2004


   PANA-Start-Request message is susceptible to spoofing leading to
   denial-of service attacks.  Therefore, usage of these AVPs during the
   discovery and handshake phase in such insecure networks is NOT
   RECOMMENDED.  The same AVPs are delivered via an integrity-protected
   PANA-Bind-Request upon successful authentication.

11.3  EAP Methods

   Eavesdropping EAP packets might cause problems when the EAP method is
   weak and enables dictionary or replay attacks or even allows an
   adversary to learn the long-term password directly.  Furthermore, if
   the optional EAP Identity payload is used then it allows the
   adversary to learn the identity of the PaC.  In such a case a privacy
   problem is prevalent.

   To prevent these threats, [I-D.ietf-pana-framework] suggests using
   proper EAP methods for particular environments.  Depending on the
   deployment environment an EAP authentication which supports user
   identity confidentiality, protection against dictionary attacks and
   session key establishment must be used.  It is therefore the
   responsibility of the network operators and users to choose a proper
   EAP method.

11.4  Separate NAP and ISP Authentication

   The PANA design allows running two separate EAP sessions for the same
   PaC in a single authentication phase: one with the NAP, and one with
   the ISP.  The process of arriving at the resultant authorization,
   which is a combination of the individual authorizations obtained from
   respective service providers, is outside the scope of this protocol.
   In the absence of lower-layer security, both authentications MUST be
   able to generate a AAA-Key, leading to generation of a PANA SA.  The
   resultant PANA SA cryptographically binds the two AAA-Keys together,
   hence it prevents man-in-the-middle attacks.

11.5  Cryptographic Keys

   When the EAP method exports a AAA-Key, this key is used to produce a
   PANA SA with PANA_MAC_KEY with a distinct key ID.  The PANA_MAC_KEY
   is unique to the PANA session, and takes PANA-based nonce values into
   computation to cryptographically separate itself from the AAA-Key.

   The PANA_MAC_KEY is solely used for authentication and integrity
   protection of the PANA messages within the designated session.

   Two AAA-Keys may be generated as a result of separate NAP and ISP
   authentication.  In that case, the AAA-Key used with the PANA SA is
   the combination of both keys.



Forsberg, et al.         Expires April 20, 2005                [Page 66]

Internet-Draft                    PANA                      October 2004


   The PANA SA lifetime is bounded by the AAA-Key lifetime.  Another
   execution of EAP method yields in a new AAA-Key, and updates the PANA
   SA, PANA_MAC_KEY and key ID.

   Upon PaC's movement to a another PAA (new PAA) and request to perform
   a context transfer based optimization, the current PAA computes a
   AAA-Key-int based on the AAA-Key, ID of new PAA, and the session ID.
   This AAA-Key-int is delivered to the new PAA, and used in the
   computation of AAA-Key-new, which further takes a pair of nonce
   values into account.  After this point on, the AAA-Key-new becomes
   the AAA-Key between the PaC and the new PAA.

   When link-layer or network-layer ciphering [I-D.ietf-pana-ipsec] is
   enabled as a result of successful PANA authentication, a separate
   master key is generated based on the AAA-Key, session ID, key ID, and
   EP ID.

   The lifetime of this key is bounded by the lifetime of the PANA SA.
   This key may be used with a secure association protocol
   [I-D.ietf-ipsec-ikev2] to produce further cipher-specific and
   transient keys.

11.6  Per-packet Ciphering

   Networks that are not secured at the lower-layers prior to running
   PANA can rely on enabling per-packet data traffic ciphering upon
   successful PANA session establishment.  The PANA framework allows
   generation of a master key from AAA-Key for using with a per-packet
   protection mechanism, such as link-layer or IPsec-based ciphering
   [I-D.ietf-pana-ipsec].  In case the master key is not readily useful
   to the ciphering mechanism, an additional secure association protocol
   [I-D.ietf-ipsec-ikev2] may be needed to produce the required keying
   material.  These mechanisms ultimately establish a cryptographic
   binding between the data traffic generated by and for a client and
   the authenticated identity of the client.  Data traffic must be
   minimally data origin authenticated, replay and integrity protected,
   and optionally encrypted.

11.7  PAA-to-EP Communication

   The PANA framework allows separation of PAA from EP(s).  SNMPv3
   [I-D.ietf-pana-snmp] is used between the the PAA and EP for
   provisioning authorized PaC information on the EP.  This exchange
   MUST be always physically or cryptographically protected for
   authentication, integrity and replay protection.  It MUST also be
   privacy-protected when per-PaC master key for per-packet ciphering is
   transmitted to the EP.




Forsberg, et al.         Expires April 20, 2005                [Page 67]

Internet-Draft                    PANA                      October 2004


   The per-packet ciphering master key MUST be unique to the PaC and EP
   pair.  The session ID and EP's device ID are taken into computation
   for achieving this effect [I-D.ietf-pana-ipsec].  Compromise of an EP
   does not automatically lead to compromise of another EP or the PAA.

11.8  Livenes Test

   A PANA session is associated with a session lifetime.  The session is
   terminated unless it is refreshed by a new round of EAP
   authentication before it expires.  Therefore, at the latest a
   disconnected client can be detected when its lifetime expires.  A
   disconnect may also be detected earlier by using PANA ping messages.
   A request message can be generated by either PaC or PAA at any time
   and the peer must respond with an answer message.  A successful
   round-trip of this exchange is a simple verification that the peer is
   alive.  This test can be engaged when there is a possibility that the
   peer might have disconnected (e.g., after discontinuation of data
   traffic).  Periodic use of this exchange as a keep-alive requires
   additional care as it might result in congestion and hence false
   alarms.  This exchange is cryptographically protected when a PANA SA
   is available in order to prevent threats associated with the abuse of
   this functionality.

11.9  Mobility Optimization

   The mobility optimization described in Section 4.12 involves the
   previous PAA providing a AAA-Key to the current PAA of the PaC.
   There are security risks stemming from potential compromise of PAAs.
   Compromise of the current PAA does not yield compromise of the
   previous PAA, as AAA-Key cannot be computed from a compromised
   AAA-Key-new.  But a compromised previous PAA along with the
   intercepted nonce values on the current link leads to the compromise
   of AAA-Key-new.  Operators should be aware of the potential risk of
   using this optimization.  An operator can reduce the risk exposure by
   forcing the PaC to perform an EAP-based authentication immediately
   after the PaC gains access to new link via the optimized PANA
   execution.

11.10  Updating PaC's IP Address

   Even though the IP-Address AVP in a PANA-Update-Request can be
   cryptographically protected by the MAC AVP, there is not way to prove
   the ownership of the IP address presented by the PaC.  Hence an
   authorized PaC can launch a redirect attack by spoofing a victim's IP
   address.






Forsberg, et al.         Expires April 20, 2005                [Page 68]

Internet-Draft                    PANA                      October 2004


11.11  Early Termination of a Session

   The PANA protocol supports the ability for both the PaC and the PAA
   to transmit a tear-down message before the session lifetime expires.
   This message causes state removal, a stop of the accounting procedure
   and removes the installed per-PaC state on the EP(s).  This message
   is cryptographically protected when PANA SA is present.












































Forsberg, et al.         Expires April 20, 2005                [Page 69]

Internet-Draft                    PANA                      October 2004


12.  Acknowledgments

   We would like to thank Jari Arkko, Mohan Parthasarathy, Julien
   Bournelle, Rafael Marin Lopez, Pasi Eronen, Randy Turner, Erik
   Nordmark and all members of the PANA working group for their valuable
   comments to this document.













































Forsberg, et al.         Expires April 20, 2005                [Page 70]

Internet-Draft                    PANA                      October 2004


13.  References

13.1  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2131]  Droms, R., "Dynamic Host Configuration Protocol", RFC
              2131, March 1997.

   [RFC2988]  Paxson, V. and M. Allman, "Computing TCP's Retransmission
              Timer", RFC 2988, November 2000.

   [RFC2234]  Crocker, D. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", RFC 2234, November 1997.

   [RFC3588]  Calhoun, P., Loughney, J., Guttman, E., Zorn, G. and J.
              Arkko, "Diameter Base Protocol", RFC 3588, September 2003.

   [RFC2462]  Thomson, S. and T. Narten, "IPv6 Stateless Address
              Autoconfiguration", RFC 2462, December 1998.

   [RFC2464]  Crawford, M., "Transmission of IPv6 Packets over Ethernet
              Networks", RFC 2464, December 1998.

   [RFC3315]  Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C. and
              M. Carney, "Dynamic Host Configuration Protocol for IPv6
              (DHCPv6)", RFC 3315, July 2003.

   [RFC3456]  Patel, B., Aboba, B., Kelly, S. and V. Gupta, "Dynamic
              Host Configuration Protocol (DHCPv4) Configuration of
              IPsec Tunnel Mode", RFC 3456, January 2003.

   [RFC3748]  Aboba, B., Blunk, L., Vollbrecht, J., Carlson, J. and H.
              Levkowetz, "Extensible Authentication Protocol (EAP)", RFC
              3748, June 2004.

   [I-D.ietf-eap-keying]
              Aboba, B., "Extensible Authentication Protocol (EAP) Key
              Management Framework", draft-ietf-eap-keying-03 (work in
              progress), July 2004.

   [IANA]     Narten, T. and H. Alvestrand, "Guidelines for Writing an
              IANA Considerations Section in RFCs",  BCP 26, RFC 2434,
              October 1998.






Forsberg, et al.         Expires April 20, 2005                [Page 71]

Internet-Draft                    PANA                      October 2004


13.2  Informative References

   [I-D.ietf-pana-requirements]
              Yegin, A. and Y. Ohba, "Protocol for Carrying
              Authentication for Network Access (PANA)Requirements",
              draft-ietf-pana-requirements-09 (work in progress), August
              2004.

   [RFC2522]  Karn, P. and W. Simpson, "Photuris: Session-Key Management
              Protocol", RFC 2522, March 1999.

   [I-D.ietf-pana-threats-eval]
              Parthasarathy, M., "Protocol for Carrying Authentication
              and Network Access Threat Analysis and  Security
              Requirements", draft-ietf-pana-threats-eval-07 (work in
              progress), August 2004.

   [I-D.ietf-pana-ipsec]
              Parthasarathy, M., "PANA enabling IPsec based Access
              Control", draft-ietf-pana-ipsec-04 (work in progress),
              September 2004.

   [I-D.ietf-pana-framework]
              Jayaraman, P., "PANA Framework",
              draft-ietf-pana-framework-02 (work in progress), September
              2004.

   [I-D.ietf-pana-snmp]
              Mghazli, Y., Ohba, Y. and J. Bournelle, "SNMP usage for
              PAA-2-EP interface", draft-ietf-pana-snmp-01 (work in
              progress), July 2004.

   [I-D.irtf-aaaarch-handoff]
              Arbaugh, W. and B. Aboba, "Experimental Handoff Extension
              to RADIUS", draft-irtf-aaaarch-handoff-04 (work in
              progress), November 2003.

   [I-D.ietf-eap-statemachine]
              Vollbrecht, J., Eronen, P., Petroni, N. and Y. Ohba,
              "State Machines for Extensible Authentication Protocol
              (EAP) Peer and  Authenticator",
              draft-ietf-eap-statemachine-05 (work in progress),
              September 2004.

   [I-D.ietf-seamoby-ctp]
              Loughney, J., "Context Transfer Protocol",
              draft-ietf-seamoby-ctp-11 (work in progress), August 2004.




Forsberg, et al.         Expires April 20, 2005                [Page 72]

Internet-Draft                    PANA                      October 2004


   [I-D.ietf-ipsec-ikev2]
              Kaufman, C., "Internet Key Exchange (IKEv2) Protocol",
              draft-ietf-ipsec-ikev2-17 (work in progress), October
              2004.

   [ianaweb]  IANA, "Number assignment",  http://www.iana.org.

   [IANA-EXP]
              Narten, T., "Assigning Experimental and Testing Numbers
              Considered Useful",  BCP 82, RFC 3692, January 2004.


Authors' Addresses

   Dan Forsberg
   Nokia Research Center
   P.O. Box 407
   FIN-00045 NOKIA GROUP
   Finland

   Phone: +358 50 4839470
   EMail: dan.forsberg@nokia.com


   Yoshihiro Ohba
   Toshiba America Research, Inc.
   1 Telcordia Drive
   Piscataway, NJ  08854
   USA

   Phone: +1 732 699 5305
   EMail: yohba@tari.toshiba.com


   Basavaraj Patil
   Nokia
   6000 Connection Dr.
   Irving, TX  75039
   USA

   Phone: +1 972-894-6709
   EMail: Basavaraj.Patil@nokia.com









Forsberg, et al.         Expires April 20, 2005                [Page 73]

Internet-Draft                    PANA                      October 2004


   Hannes Tschofenig
   Siemens Corporate Technology
   Otto-Hahn-Ring 6
   81739 Munich
   Germany

   EMail: Hannes.Tschofenig@siemens.com


   Alper E. Yegin
   Samsung Advanced Institute of Technology
   75 West Plumeria Drive
   San Jose, CA  95134
   USA

   Phone: +1 408 544 5656
   EMail: alper.yegin@samsung.com


































Forsberg, et al.         Expires April 20, 2005                [Page 74]

Internet-Draft                    PANA                      October 2004


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Disclaimer of Validity

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Copyright Statement

   Copyright (C) The Internet Society (2004).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.




Forsberg, et al.         Expires April 20, 2005                [Page 75]


