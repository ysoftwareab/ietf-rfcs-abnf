
Network Working Group                                        Keith Moore
Internet Draft                                   University of Tennessee


                         SMTP Service Extension
                      for Message Size Declaration

                            24 October 1992


1.  Status of this Memo

   This document is an Internet Draft.  Internet Drafts are working
documents of the Internet Engineering Task Force (IETF), its Areas, and
its Working Groups.  Note that other groups may also distribute working
documents as Internet Drafts.

   Internet Drafts are valid for a maximum of six months and may be
updated, replaced, or obsoleted by other documents at any time.  (The
file 1id-abstracts.txt, available via anonymous ftp from nic.ddn.mil,
describes the current status of each Internet Draft.)  It is not
appropriate to use Internet Drafts as reference material or to cite them
other than as a "work in progress".


2.  Abstract

   This memo defines an extension to the SMTP service whereby an SMTP
client and server may interact to give the server an opportunity to
decline to accept a message (perhaps temporarily) based on the client's
estimate of the message size.


3.  Introduction

   The Simple Mail Transfer Protocol (SMTP) [1] has provided a stable,
effective basis for the relay function of message transfer agents.
Although a decade old, SMTP has proven remarkably resilient.


4.  Framework for SMTP Extensions

   For the purpose of service extensions to the SMTP, SMTP relays a mail
object containing an envelope and a content.

(1) The SMTP envelope is straight-forward, and is sent as a series of
    SMTP protocol units: it consists of an originator address (to which
    error reports should be directed); a delivery mode (e.g., deliver to
    recipient mailboxes); and, one or more recipient addresses.

(2) The SMTP content is sent in the SMTP DATA protocol unit and has two
    parts: the headers and the body.  The headers form a collection of
    field/value pairs structured according to RFC 822 [2], whilst the
    body, if structured, is defined according to MIME [3].  The content
    is textual in nature, expressed using the US ASCII repertoire (ISO



K. Moore                  Expires 24 April 1993                 [Page 1]







Internet Draft                                           24 October 1992



    registered character set number 6).  Although extensions (such as
    MIME) may relax this restriction for the content body, the content
    headers are always encoded using the US ASCII repertoire.  The
    algorithm defined in [4] is used to represent header values outside
    the US ASCII repertoire, whilst still encoding them using the US
    ASCII repertoire.

Although SMTP is widely and robustly deployed, some parts of the
Internet community might wish to extend the SMTP service.

   The MIME extensions to the Internet message protocol provide for the
transmission of many kinds of data which were previously unsupported in
Internet mail.  One expected result of the use of MIME is that SMTP will
be expected to carry a much wider range of message sizes than was
previously the case.  This has an impact on the amount of resources
(e.g. disk space) required by a system acting as a server.

   This memo uses the mechanism defined in [5] to define an extension to
the SMTP service whereby a client ("sender-SMTP") may declare the size
of a particular message to a server ("receiver-SMTP"), after which the
server may indicate to the client that it is or is not willing to accept
the message based on the declared message size:

(1) the name of the SMTP service extension is "Message Size
    Declaration";

(2) the EHLO keyword value associated with this extension is "SIZE";

(3) one optional parameter is allowed with this EHLO keyword value, a
    decmial number indicating the fixed maximum message size that the
    server will accept.  The syntax of the parameter is as follows,
    using the augmented BNF notation of [2]:

        size-param ::= *DIGIT

    A parameter value of 0 (zero) indicates that no fixed maximum
    message size is in force.  A null parameter conveys no information
    about a server's fixed maximum message size.

The remainder of this memo specifies how support for the extension
affects the behavior of an SMTP client and server.


4.  The Message Size Declaration service extension

   An SMTP server may have a fixed upper limit on message size.  Any
attempt by a client to transfer a message which is larger than this
fixed upper limit will fail.  In addition, a server normally has limited
space with which to store incoming messages.  Transfer of a message may
therefore also fail due to a lack of storage space, but might succeed at
a later time.



K. Moore                  Expires 24 April 1993                 [Page 2]







Internet Draft                                           24 October 1992



   A client using the unextended SMTP protocol defined in [1], can only
be informed of such failures after transmitting the entire message to
the server (which discards the transferred message).  If, however, both
client and server support the Message Size Declaration service
extension, such conditions may be detected before any transfer is
attemped.

   An SMTP client wishing to relay a large content may issue the EHLO
command to start an SMTP session, to determine if the server supports
any of several service extensions.  If the server responds with code 250
to the EHLO command, and the response includes the EHLO keyword value
SIZE, the Message Size Declaration extension is supported.

   If a numeric parameter follows the SIZE keyword value of the EHLO
response, it indicates the size of the largest message that the server
is willing to accept.  Any attempt by a client to transfer a message
which is larger than this limit will be rejected with a permanent
failure (552) reply code.

   A server that supports the Message Size Declaration extension will
accept the extended version of the MAIL command described below.  When
supported by the server, a client may use the extended MAIL command
(instead of the MAIL command as defined in [1]) to declare an estimate
of the size of a message it wishes to transfer.  The server may then
return an appropriate error code if it determines that an attempt to
transfer a message of that size would fail.


5.  Definitions

   The message size is defined as the number of octets, including CR-LF
pairs, up to, but not including, the final dot, to be transmitted by the
SMTP client after receiving reply code 354 to the DATA command.

   The fixed maximum message size is defined as the message size of the
largest message that a server is ever willing to accept.  An attempt to
transfer any message larger than the fixed maximum message size will
always fail.  The fixed maximum message size may be an implementation
artifact of the SMTP server, or it may be chosen by the administrator of
the server.

   The declared message size is defined as a client's estimate of the
message size for a particular message.


6.  The extended MAIL command

   The extended MAIL command is issued by a client when it wishes to
inform a server of the size of the message to be sent.  The extended
MAIL command is identical to the MAIL command as defined in [1], except
that a SIZE parameter appears after the address.



K. Moore                  Expires 24 April 1993                 [Page 3]







Internet Draft                                           24 October 1992



The syntax for this command, using the augmented BNF notation defined in
[2], is as follows:

extended-mail-cmd =
    "MAIL FROM:<" reverse-path ">" SPACE "SIZE=" 1*DIGIT CRLF

The value associated with the SIZE parameter is a decimal representation
of the declared message size in octets.  Ideally, the declared message
size is equal to the message size.  However, since exact computation of
the message size may be infeasable, the client may use a heuristically-
derived estimate.  Such heuristics should be chosen so that the declared
message size is usually larger than the actual message size.

   NOTE: Servers MUST NOT use the SIZE parameter to determine end of
content in the DATA command.


6.1  Server action on receipt of the extended MAIL command

   Upon receipt of an extended MAIL command containing a SIZE parameter,
a server should determine whether the declared message size exceeds its
fixed maximum message size.  If the declared message size is smaller
than the fixed maximum message size, the server may also wish to
determine whether sufficient resources are available to buffer a message
of the declared message size and to maintain it in stable storage, until
the message can be delivered or relayed to each of its recipients.

   A server may respond to the extended MAIL command with any of the
error codes defined in [1] for the MAIL command.  In addition, the
following error codes are returned:

(1) If the server currently lacks sufficient resources to accept a
    message of the indicated size, but may be able to accept the message
    at a later time, it responds with code "452 insufficient system
    storage".

(2) If the indicated size is larger than the server's fixed maximum
    message size, the server responds with code "552 message size
    exceeds fixed maximium message size".

A server is permitted, but not required, to accept a message which is,
in fact, larger than declared in the extended MAIL command, such as
might occur if the client employed a size-estimation heuristic which was
inaccurate.


6.2  Client action on receiving response to extended MAIL command

   The client, upon receiving the server's response to the extended MAIL
command, acts as follows:




K. Moore                  Expires 24 April 1993                 [Page 4]







Internet Draft                                           24 October 1992



(1) If the code "452 insufficient system storage" is returned, the
    client should next send either a RSET command (if it wishes to
    attempt to send other messages) or a QUIT command.  If a particular
    message is too large to be sent, a client may attempt to relay the
    message via a different path, (as described in [6]), or to relay the
    message to the same server at a later time.

(2) If the code "552 message exceeds fixed maximum message size" is
    received, the client should immediately send either a RSET command
    (if it wishes to attempt to send additional messages), or a QUIT
    command.  If a particular message exceeds the server's message size
    limit, the client may either (a) attempt to relay the message by
    another path, as described in [6], or (b) declare the message
    undeliverable and return appropriate notification to the sender (if
    a sender address was present in the MAIL command).

A successful (250) reply code in response to the extended MAIL command
does not constitute an absolute guarantee that the message transfer will
succeed.  SMTP clients using the extended MAIL command must still be
prepared to handle both temporary and permanent error reply codes
(including codes 452 and 552), either immediately after issuing the DATA
command, or after transfer of the message.


6.3  Messages larger than the declared size.

   Once a server has agreed (via the extended MAIL command) to accept a
message of a particular size, it should not return a 552 reply code
after the transfer phase of the DATA command, unless the actual size of
the message transferred is greater than the declared message size.  A
server may also choose to accept a message which is somewhat larger than
the declared message size.

   A client is permitted to declare a message to be smaller than its
actual size.  However, in this case, a successful (250) reply code is no
assurance that the server will accept the message or has sufficient
resources to do so.  The server may reject such a message after its DATA
transfer.


6.4  Per-recipient rejection based on message size.

   A server that implements this extension may return a 452 or 552 reply
code in response to a RCPT command, based on its unwillingness to accept
a message of the declared size for a particular recipient.

(1) If a 452 code is returned, the client may requeue the message for
    later delivery to the same recipient to the same server.

(2) If a 552 code is returned, the client may not requeue the message
    for later delivery to the same recipient at the same server.



K. Moore                  Expires 24 April 1993                 [Page 5]







Internet Draft                                           24 October 1992



(3) In either case, the client may attempt to deliver the message by
    another path, as defined in [6].


7.  Minimal usage

   A "minimal" client may use this extension to simply compare its
(perhaps estimated) size of the message that it wishes to relay, with
the server's fixed maximum message size (from the parameter to the SIZE
keyword in the EHLO response), to determine whether the server will ever
accept the message.  Such an implementation need not declare message
sizes via the extended MAIL command.  However, neither will it be able
to discover temporary limits on message size due to server resource
limitations, nor per-recipient limitations on message size.

   A minimal server that employs this service extension may simply use
the SIZE keyword value to inform the client of the size of the largest
message it will accept, or to inform the client that there is no fixed
limit on message size.  Such a server must accept the extended MAIL
command and return a 552 reply code if the client's declared size
exceeds its fixed size limit (if any), but it need not detect
"temporary" limitations on message size.

   The numeric parameter to the EHLO SIZE keyword is optional.  A null
parameter indicates that the server does not advertise a fixed maximum
message size.  A server that returns the SIZE keyword with a null
parameter in response to the EHLO command may not issue a positive (250)
response to an extended MAIL command without first checking to see if
sufficient resources are available to transfer a message of the declared
size, and to retain it in stable storage until it can be relayed or
delivered to its recipients.  If possible, the server should actually
reserve sufficient storage space to transfer the message.


8.  Acknowldegements

   Dave Crocker, Marshall T. Rose, and Einar Stefferud provided
   extensive comments in response to earlier drafts of this memo.


9.  References

[1] J. B. Postel.  Simple Mail Transfer Protocol.  Request for Comments
    821, August 1982.

[2] D. H. Crocker.  Standard for the Format of ARPA Internet Text
    Messages.  Request for Comments 822, August 1982.

[3] N. S. Borenstein, N. Freed.  Multipurpose Internet Mail Extensions.
    Request for Comments 1341, June 1992.




K. Moore                  Expires 24 April 1993                 [Page 6]







Internet Draft                                           24 October 1992



[4] K. Moore. Representation of Non-ASCII Text in Internet Message
    Headers.  Request for Comments 1342, June 1992.

[5] M. T. Rose, E. A. Stefferud, D. H. Crocker.  SMTP Service
    Extensions.  Internet-draft, 21 October 1992.

[6] C. Partridge.  Mail Routing and the Domain System.  Request for
    Comments 974, January 1986.


10.  Author's address

Keith Moore
Computer Science Dept.
University of Tennessee
107 Ayres Hall
Knoxville, TN 37996-1301

Internet: moore@cs.utk.edu



































K. Moore                  Expires 24 April 1993                 [Page 7]



