



draft                       NETMODE ISDN MIB               February 1995


               SNMP MIB Extension for an ISDN  Controller
                  draft-ietf-snmp-isdn-netmode-00.txt

                      Thu Jan 12 20:56:08 PST 1995


                            Tryphon Chiotis
                             NETMODE Group
                        tchiotis@phgasos.ntua.gr





                          Status of this Memo

This document is an Internet Draft.  Internet Drafts are working
documents of the Internet Engineering Task Force (IETF), its Areas, and
its Working Groups.  Note that other groups may also distribute working
documents as Internet Drafts.

Internet Drafts are valid for a maximum of six months and may be
updated, replaced, or obsoleted by other documents at any time.  It is
inappropriate to use Internet Drafts as reference material or to cite
them other than as a "work in progress".

























Expires August 1995                                             [Page 1]




draft                       NETMODE ISDN MIB               February 1995


1.  Introduction

This memo defines a portion of the Management Information Base (MIB) for
use with network management protocols in TCP/IP-based internets. In
particular, it defines objects for managing an ISDN Controller (card).













































Expires August 1995                                             [Page 2]




draft                       NETMODE ISDN MIB               February 1995


1.  The Network Management Framework

The Internet-standard Network Management Framework consists of
three components. These components give the rules for defining
objects, the definitions of objects, and the protocol for
manipulating objects.

The network management framework structures objects in an abstract
information tree. The branches of the tree name objects and the
leaves of the tree contain the values manipulated to effect
management. This tree is called the Management Information Base or
MIB. The concepts of this tree are given in STD 16/RFC 1155, "The
Structure of Management Information" or SMI [1]. The SMI defines
the trunk of the tree and the types of objects used when defining
the leaves. STD 16/RFC 1212, "Towards Concise MIB Definitions"
[4], defines a more concise description mechanism that preserves
all the principals of the SMI.

The core MIB definitions for the Internet suite of protocols can be
found in RFC 1156 [2] "Management Information Base for Network
Management of TCP/IP-based internets". STD 17/RFC 1213 [5] defines
MIB-II, an evolution of MIB-I with changes to incorporate
implementation experience and new operational requirements.

STD 15/RFC 1157 [3] defines the SNMP protocol itself. The protocol
defines how to manipulate the objects in a remote MIB.

The tree structure of the MIB allows new objects to be defined for
the purpose of experimentation and evaluation.

2.  Objects

The definition of an object in the MIB requires an object name and
type.  Object names and types are defined using the subset of
Abstract Syntax Notation One (ASN.1) [6] defined in the SMI [1].
Objects are named using ASN.1 object identifiers, administratively
assigned names, to specify object types.  The object name, together
with an optional object instance, uniquely identifies a specific
instance of an object.  For human convenience, we often use a
textual string, termed the OBJECT DESCRIPTOR, to also refer to
objects.

Objects also have a syntax that defines the abstract data structure
corresponding to that object type.  The ASN.1 language [6] provides
the primitives used for this purpose.  The SMI [1] purposely





Expires August 1995                                             [Page 3]




draft                       NETMODE ISDN MIB               February 1995


restricts the ASN.1 constructs which may be used for simplicity and
ease of implementation.  The encoding of an object type simply
describes how to represent an object using ASN.1 encoding rules
[7], for purposes of dealing with the SNMP protocol.

2.1.  Format of Definitions

Section 4 contains the specification of all object types defined in
this MIB module.  The object types are defined using the
conventions defined in the SMI, as amended by the extensions specified
in "Towards Concise MIB Definitions" [4].







































Expires August 1995                                             [Page 4]




draft                       NETMODE ISDN MIB               February 1995


3.  Overview

3.1.  Informal Overview

This section describes how the objects defined below relate with
other MIBs.  This section is only informational to help understand
how the pieces fit together.

The objects defined below are used in conjunction with MIB-II.

This ISDN  Controller MIB keeps mainly objects that control the
ISDN physical connection over a single or a dual B Channel. The
manager can control both the ISDN Controller (ISDN  Card) and the
individual connections on this Controller.

The objects concerning packets exchanged over D Channel, over B
Channels and over individual connections are kept in the Interface
group of MIB II.

Each Controller is using a D Channel for exchanging signalling and
data packets. The D Channel has an entry in the ifTable, with the
conventional value basicISDN or primaryISDN (actually a Controller
is unlike to support a Primary Rate Interface) used for the
instance of ifType object of MIB II. In this entry, information
about packets exchanged over D Channel is kept. The ISDN  MIB
object, defined below, isdnCtrlDChProtocol specifies an instance
of the ifIndex for MIB II.

Each B Channel is used to establish connections which may use
various protocols. Each B Channel has an entry in the ifTable,
where overall information about packets exchanged over all
connection over this B Channel is kept. If a connection uses two B
Channels (so as to have a rate of more than 64 kbps), then two
entries of the ifTable are used. If a single protocol is used, the
instance of the ifType object has the corresponding value. If
various protocols are used or the single protocol in use cannot be
an instance of the ifType, the conventional value basicISDN or
primaryISDN is used for the instance of ifType. The ISDN  MIB
object, defined below, isdnPrtBChProtocol specifies an instance of
the ifIndex for MIB II.

Each connection, uses a single or a dual B Channel (that is two B
Channels) so as to exchange packets between the two parties. Each
connection has an entry in the ifTable, where overall information
about packets exchanged over this connection is kept. If the





Expires August 1995                                             [Page 5]




draft                       NETMODE ISDN MIB               February 1995


protocol used cannot be an instance of the ifType, the conventional
value basicISDN or primaryISDN is used for the instance of ifType.
The ISDN  MIB object, defined below, isdnCnProtocol specifies an
instance of the ifIndex for MIB II.

Since the objects defined here are extensions to the Internet
Standard MIB [2] and thus also an extension of the second version,
MIB-II [5], the objects defined here explicitly do not duplicate
objects defined in existing standards.

This document discuses nothing about traps and tests.

3.2 Tables

The objects below form several tables. These tables are:

                        isdnCtrlTable
                        isdnCtrlStTable
                        isdnPrtTable
                        isdnCnTable
                        isdnFclTable

Also, pointers to the
                        ifTable
of MIB II are used.

The isdnCtrlTable defines objects for the static parameters of the
Controller, objects to control the availability of D Channel to the
controller, objects to define the parties with which the
Controller will communicate and an object pointing to ifTable for
information about packets over D Channel.

The isdnCtrlStTable defines objects that report statistical
information about the number of connection requests made and
objects that report on the latest connection request rejection.

The isdnPrtTable defines objects that report on the circuit-
switched and packet-switched connections over a B Channel and an
object pointing to ifTable for information about packets over B
Channel.

The isdnCnTable defines objects that return information about
existing and, possibly, closed connections and an object pointing
to ifTable for information about packets over a connection.






Expires August 1995                                             [Page 6]




draft                       NETMODE ISDN MIB               February 1995


The isdnFclTable defines objects that report the supplementary
services engaged by a connection.

3.3 Conformance

All the objects defined here are mandatory. To claim conformance
with this MIB an implementation must support all objects.  However
some objects pertain to features that are optional. There are
values defined for those objects that indicate the implementation
does not support the optional feature. The agent for such an
implementation must support reading the object and return the
value that indicates the optional feature isn't supported and
reject set requests to change the object.

Some optional features have more than one object that pertain to it
(the call transfer facility has an enable / disable object and two
objects defining the ISDN address where the call is to be
transferred). In such case, any object which indicates the
optional feature isn't supported is sufficient to indicate the feature
isn't supported and the values of the other objects relative to that
feature are undefined.





























Expires August 1995                                             [Page 7]




draft                       NETMODE ISDN MIB               February 1995


4. Object Definitions
ISDNMIB DEFINITIONS ::= BEGIN

IMPORTS
        experimental, Counter, TimeTicks
                         FROM RFC1155-SMI
        OBJECT-TYPE
                 FROM RFC1212-SMI
        DisplayString
                FROM RFC1213-MIB;

        --   ifIndexType
                --  FROM RFC1381-MIB
IfIndexType  ::=  INTEGER (1..2147483647)

netmode      OBJECT IDENTIFIER ::= {experimental 696}

isdnMib   OBJECT IDENTIFIER ::=   {netmode 2}

isdnController     OBJECT IDENTIFIER ::={isdnMib 1}






























Expires August 1995                                             [Page 8]




draft                       NETMODE ISDN MIB               February 1995


--####################################################################
--                              Controller Table
--####################################################################
    isdnCtrlTable OBJECT-TYPE
         SYNTAX   SEQUENCE OF IsdnCtrlEntry
         ACCESS   not-accessible
         STATUS   mandatory
         DESCRIPTION
"The isdnCtrlTable contains information about controllers."
          ::= { isdnController 1 }

    isdnCtrlEntry  OBJECT-TYPE
         SYNTAX   IsdnCtrlEntry
         ACCESS   not-accessible
         STATUS   mandatory
         DESCRIPTION
             "Information on a single Controller Entry."
         INDEX { isdnCtrlIndex }
         ::= { isdnCtrlTable 1 }

IsdnCtrlEntry ::=
           SEQUENCE {

        isdnCtrlIndex
                IfIndexType,
        isdnCtrlBoardName
                DisplayString,
        isdnCtrlSerialNumber
                DisplayString,
        isdnCtrlInterface
                INTEGER,
        isdnCtrlManufacturer
                DisplayString,
        isdnCtrlDChProtocol
                DisplayString,
        isdnCtrlStatisticsPointer
                IfIndexType,
        isdnCtrlIOAddress
                INTEGER,
        isdnCtrlIOSubaddress
                INTEGER,
        isdnCtrlUpTime
                TimeTicks,
        isdnCtrlState
                INTEGER,





Expires August 1995                                             [Page 9]




draft                       NETMODE ISDN MIB               February 1995


        isdnCtrlNPriorForSign
                INTEGER,
        isdnCtrlLPriorForSign
                INTEGER,
        isdnCtrlNPriorForPkts
                INTEGER,
        isdnCtrlLPriorForPkts
                INTEGER,
        isdnCtrlIntResetCtr
                Counter,
        isdnCtrlDestinationCalls
                INTEGER,
        isdnCtrlIncomingCalls
                INTEGER,
        isdnCtrlReverseCharging
                INTEGER,
        isdnCtrlCallForw
                INTEGER,
        isdnCtrlCallForwAddress
                INTEGER,
        isdnCtrlCallForwSubaddress
                INTEGER,
        isdnCtrlDChPointer
                IfIndexType
}

    isdnCtrlIndex  OBJECT-TYPE
                  SYNTAX IfIndexType
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
                     "An unique index for this ISDN-Controller."
                  ::= { isdnCtrlEntry 1 }

    isdnCtrlBoardName  OBJECT-TYPE
                  SYNTAX  DisplayString
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
                      "The logical  board name of this ISDN-Controller."
                  ::= { isdnCtrlEntry 2 }

    isdnCtrlSerialNumber  OBJECT-TYPE
                  SYNTAX DisplayString
                  ACCESS read-only





Expires August 1995                                            [Page 10]




draft                       NETMODE ISDN MIB               February 1995


                  STATUS mandatory
                  DESCRIPTION
                       "The serial number of this ISDN-Controller."
                  ::= { isdnCtrlEntry 3 }

    isdnCtrlInterface   OBJECT-TYPE
                  SYNTAX  INTEGER {
                  bri1  (1),   -- Basic Rate Access   2x64 Kbps B + 16 Kbps D
                  pri1  (2),   -- Primary Rate Access at 1.544 Mbps
                  pri2  (3),   -- Primary Rate Abbess at 2.048 Mbps
                  other (4)
                }
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The Rate Access (Interface Type) of this ISDN-Controller. One Rate
Access per Controller is implied (e.g. one BRI per Controller)."
                  ::= { isdnCtrlEntry 4 }

    isdnCtrlManufacturer  OBJECT-TYPE
                  SYNTAX DisplayString
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The manufacturer name of this ISDN-Controller Card."
                  ::= { isdnCtrlEntry 5 }

    isdnCtrlDChProtocol  OBJECT-TYPE
                  SYNTAX  DisplayString
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The protocol stack used over D Channel. This object is for human
convenience."
                 ::= { isdnCtrlEntry 6 }

    isdnCtrlStatisticsPointer  OBJECT-TYPE
                  SYNTAX IfIndexType
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"A unique index for the corresponding Entry in the isdnCtrlStTable.
Since there is one to one correspondence between the records of these
two tables (isdnCtrlTable and isdnCtrlStTable), the use of the same
index number in isdnCtrlIndex and isdnCtrlStIndex is recommended





Expires August 1995                                            [Page 11]




draft                       NETMODE ISDN MIB               February 1995


but is not obligatory."
                  ::= { isdnCtrlEntry 7 }

    isdnCtrlIOAddress  OBJECT-TYPE
                  SYNTAX INTEGER
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The Input / Output Address for this ISDN-Controller. This is the
ISDN number of the Controller."
                  ::= { isdnCtrlEntry 8 }

    isdnCtrlIOSubaddress  OBJECT-TYPE
                  SYNTAX INTEGER
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The Input / Output Port Subaddress for this ISDN-Controller. This is
the internal number when a PABX is present When no PABX is
present, it holds the conventional value -1"
                  ::= { isdnCtrlEntry 9 }

    isdnCtrlUpTime  OBJECT-TYPE
                  SYNTAX TimeTicks
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The instance (value) of sysUpTime of MIB II (in hundredths of a
second) when the ISDN-Card was last re-initialised."
                  ::= { isdnCtrlEntry 10 }

    isdnCtrlState  OBJECT-TYPE
                  SYNTAX INTEGER {
                        inUse (1),
                        outOfUse (2)
                  }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"The state of this ISDN-Controller. 'inUse' indicates normal state
and 'outOfUse' indicates no use of this card."
                  ::= { isdnCtrlEntry 11 }

    isdnCtrlNPriorForSign  OBJECT-TYPE
                  SYNTAX  INTEGER





Expires August 1995                                            [Page 12]




draft                       NETMODE ISDN MIB               February 1995


                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"The normal priority level (in bits) for Signalling information over D
Channel for this ISDN-Controller."
                 ::= { isdnCtrlEntry 12 }

    isdnCtrlLPriorForSign  OBJECT-TYPE
                  SYNTAX  INTEGER
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"The lower priority level (in bits) for Signalling information over D
Channel for this ISDN-Controller."
                 ::= { isdnCtrlEntry 13 }

    isdnCtrlNPriorForPkts  OBJECT-TYPE
                  SYNTAX  INTEGER
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"The normal priority level (in bits) for Packets over D Channel for
this ISDN-Controller."
                 ::= { isdnCtrlEntry 14 }

       isdnCtrlLPriorForPkts  OBJECT-TYPE
                  SYNTAX  INTEGER
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"The lower priority level (in bits) for Packets over D Channel for
this ISDN-Controller."
                 ::= { isdnCtrlEntry 15 }

    isdnCtrlIntResetCtr  OBJECT-TYPE
                  SYNTAX  Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
" The total number of times the ISDN-Controller detected an error in
physical layer coding rule."
                 ::= { isdnCtrlEntry  16 }

    isdnCtrlDestinationCalls  OBJECT-TYPE
        SYNTAX  INTEGER {





Expires August 1995                                            [Page 13]




draft                       NETMODE ISDN MIB               February 1995


                  all (1),
                  none (2),
                  noLong-distanceabr (3),
                  noLong-distance (4),
                  specialList (5)
                }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
 "  The calls the Controller is permitted to make. 'noLong-
distanceabr' implies that no long-distance calls to foreign countries are
permitted. 'noLong-distance' implies that no long-distance calls (at all)
are permitted. 'specialList' means that only a call from a special list
with destination call numbers is permitted."
                 ::= { isdnCtrlEntry 17 }

    isdnCtrlIncomingCalls  OBJECT-TYPE
                  SYNTAX  INTEGER {
                  all (1),
                  none (2),
                  specialList (3)
                }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
 "  The calls the Controller is permitted to answer. 'specialList'
means that only a call from a special list with destination call numbers
is permitted to be answered."
                 ::= { isdnCtrlEntry 18 }

    isdnCtrlReverseCharging  OBJECT-TYPE
                  SYNTAX  INTEGER {
                neverPermitted (1),
                uponRequest (2),
                alwaysInvoked (3),
                undefined (4)
                }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
 "  Indicates whether the ISDN-Controller will accept reverse
charging. It can either never accept reverse charging
('neverPermitted') or accept if the other side proposes so ('uponRequest')
or always accepting the charging ('alwaysInvoked') possibly after special
agreement with the Telephone Company. If in 'undefined' state, the





Expires August 1995                                            [Page 14]




draft                       NETMODE ISDN MIB               February 1995


agent takes its decision upon each individual request."
                 ::= { isdnCtrlEntry 19 }

    isdnCtrlCallForw  OBJECT-TYPE
                  SYNTAX  INTEGER {
                  unconditional (1),
                  whenBusy (2),
                  whenNoReply (3),
                  notEngaged (4)
                }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
 "  Indicates whether the ISDN-Controller will forward a call to
another destination. This destination is indicated by
isdnCtrlCallForwAddress and isdnCtrlCallForwSubaddress objects.
The following cases are possible: (1) always, (2) when the local
Controller is busy, (3) when the local Controller doesn't answer (out
of use). If this facility is not engaged, then this object has the value
notEngaged. If this object is set to a value but the Controller is
unable to engage this facility, then the value notEngaged is maintained."
                 ::= { isdnCtrlEntry 20 }

    isdnCtrlCallForwAddress  OBJECT-TYPE
                  SYNTAX  INTEGER
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
 "  The address to forward a call, if such a facility is engaged. This
is shown by the value of isdnCtrlCallForw object. If the facility is not
engaged, it has no meaning."
                 ::= { isdnCtrlEntry 21 }

    isdnCtrlCallForwSubaddress  OBJECT-TYPE
                  SYNTAX  INTEGER
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
 "  The subaddress, in the case of the existence of a PABX, to forward
a call, if such a facility is engaged. This is shown by the value of
isdnCtrlCallForw object. If the facility is not engaged, the value is
undefined."
                 ::= { isdnCtrlEntry 22 }

    isdnCtrlDChPointer    OBJECT-TYPE





Expires August 1995                                            [Page 15]




draft                       NETMODE ISDN MIB               February 1995


                  SYNTAX  IfIndexType
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"A pointer to the Interface group of MIB II where information about
packets exchanged over the D Channel of this Controller is
maintained. The ifType object of MIB II has the value of the D
Channel layer 2 protocol in use, if this value is permitted. If the
protocol used is not supported by the ifType syntax, then, by
convention, the value 'basicISDN' or 'primaryISDN' can be used or the
legal value 'other'."
                 ::= { isdnCtrlEntry 23 }






































Expires August 1995                                            [Page 16]




draft                       NETMODE ISDN MIB               February 1995


--###################################################################
--             Controller Statistics Table
--###################################################################

        isdnCtrlStTable OBJECT-TYPE
        SYNTAX   SEQUENCE OF IsdnCtrlStEntry
        ACCESS   not-accessible
        STATUS   mandatory
        DESCRIPTION
"The isdnCtrlStTable contains statistical information for a
Controller. This information is mainly retrieved from D Channel of the
Controller."
          ::= { isdnController 2 }

isdnCtrlStEntry  OBJECT-TYPE
             SYNTAX   IsdnCtrlStEntry
             ACCESS   not-accessible
             STATUS   mandatory
             DESCRIPTION
"Information on a single D Channel of a Controller."

            INDEX { isdnCtrlStIndex }
            ::= { isdnCtrlStTable 1 }

IsdnCtrlStEntry ::=

               SEQUENCE {
        isdnCtrlStIndex
                IfIndexType,
        isdnCtrlStOutCnReqsRejBusyEnd
                Counter,
        isdnCtrlStOutCnReqsRejNonCompatible
                Counter,
        isdnCtrlStOutCnReqsRejOtherCause
                Counter,
        isdnCtrlStInCnReqsRejBusyEnd
                Counter,
        isdnCtrlStInCnReqsRejNonCompatible
                Counter,
        isdnCtrlStInCnReqsRejOtherCause
                Counter,
        isdnCtrlStLastFailedOutCnAddress
                INTEGER,
        isdnCtrlStLastFailedOutCnCause
                OCTET STRING,





Expires August 1995                                            [Page 17]




draft                       NETMODE ISDN MIB               February 1995


        isdnCtrlStLastFailedOutCnTime
                TimeTicks,
        isdnCtrlStLastFailedInCnAddress
                INTEGER,
        isdnCtrlStLastFailedInCnCause
                OCTET STRING,
        isdnCtrlStLastFailedInCnTime
                TimeTicks,
        isdnCtrlStAvrgWaitingBits
                INTEGER
}

    isdnCtrlStIndex  OBJECT-TYPE
                  SYNTAX  IfIndexType
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"A unique index for this D Channel of this ISDN-Controller. This
Index is identified with the index of Controller Table, so  it is also
used to refer to the corresponding entry in the Controller's Table."

                 ::= { isdnCtrlStEntry  1 }

    isdnCtrlStOutCnReqsRejBusyEnd  OBJECT-TYPE
                  SYNTAX  Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The number of outgoing connection requests that have been rejected
because the end user was busy, since the last reinitialization of the
ISDN-Controller. "
                 ::= { isdnCtrlStEntry  2 }

    isdnCtrlStOutCnReqsRejNonCompatible  OBJECT-TYPE
                  SYNTAX  Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The number of outgoing connection requests that have been rejected
because the end user card protocol used over B Channel was not
compatible with the protocol over this controller. An actual
connection is established but as soon as both ends realise that their B
Channels protocol are not compatible with each other, the connection
is closed and is counted in this object as rejected although established and
charged from PTT for a short time."





Expires August 1995                                            [Page 18]




draft                       NETMODE ISDN MIB               February 1995


                 ::= { isdnCtrlStEntry  3 }

    isdnCtrlStOutCnReqsRejOtherCause  OBJECT-TYPE
                  SYNTAX  Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The number of outgoing connection requests that have been rejected
because of other than busy end user or non compatible protocols over
B Channel cause, since the last reinitialization of the ISDN-
Controller. When a connection request gets no response and therefore
abandoned by the local Controller, then is not counted in this object."
                 ::= { isdnCtrlStEntry  4 }

    isdnCtrlStInCnReqsRejBusyEnd  OBJECT-TYPE
                  SYNTAX  Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The number of incoming connection requests that have been rejected
because this Controller's ports were busy, since the last


reinitialization of the ISDN-Controller. "
                 ::= { isdnCtrlStEntry  5 }

    isdnCtrlStInCnReqsRejNonCompatible  OBJECT-TYPE
                  SYNTAX  Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The number of incoming connection requests that have been rejected
because the end user card protocol used over B Channel was not
compatible with the protocol over this controller. An actual
connection is established but as soon as both ends realise that their
B Channels protocol are not compatible with each other, the connection
is closed and is counted in this object as rejected although established
and charged from PTT for a short time."
                 ::= { isdnCtrlStEntry  6 }

     isdnCtrlStInCnReqsRejOtherCause  OBJECT-TYPE
                  SYNTAX  Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION





Expires August 1995                                            [Page 19]




draft                       NETMODE ISDN MIB               February 1995


"The number of incoming connection requests that have been rejected
because of other than busy Controller or non compatible protocols
over B Channel cause, since the last reinitialization of the ISDN-
Controller. "
                 ::= { isdnCtrlStEntry  7 }

    isdnCtrlStLastFailedOutCnAddress  OBJECT-TYPE
                  SYNTAX   INTEGER
                  ACCESS read-only
                  STATUS mandatory
               DESCRIPTION
"The destination address of the latest outgoing connection request
that has been rejected . "
                 ::= { isdnCtrlStEntry  8 }

        isdnCtrlStLastFailedOutCnCause  OBJECT-TYPE
                  SYNTAX   OCTET STRING
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The cause for the rejection of the latest outgoing connection
request. By convention, the value 'nonComp' is used in the case of two non-
compatible protocols over B Channels. Otherwise, the data field of the


rejection packet that comes over d Channel is the value of this
object. Since the protocol over D Channel is known to the manager, the
manager can process the value and determine the rejection cause."
                  ::= { isdnCtrlStEntry  9 }

    isdnCtrlStLastFailedOutCnTime  OBJECT-TYPE
                  SYNTAX   TimeTicks
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The most recent value of isdnCtrlUpTime when  the latest call
rejection packet was received."
                 ::= { isdnCtrlStEntry  10 }

    isdnCtrlStLastFailedInCnAddress OBJECT-TYPE
                  SYNTAX   INTEGER
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The source (of the other end) address of the latest incoming





Expires August 1995                                            [Page 20]




draft                       NETMODE ISDN MIB               February 1995


connection request that has been rejected . "
                 ::= { isdnCtrlStEntry  11 }

    isdnCtrlStLastFailedInCnCause  OBJECT-TYPE
                  SYNTAX   OCTET STRING
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The cause for the rejection of the latest incoming connection
request. By convention, the value 'nonComp' is used in the case of two non-
compatible protocols over B Channels. Otherwise, the data field of the
rejection packet that comes over d Channel is the value of this
object. Since the protocol over D Channel is known to the manager, the
manager can process the value and determine the rejection cause."
          ::= { isdnCtrlStEntry  12 }

    isdnCtrlStLastFailedInCnTime  OBJECT-TYPE
                  SYNTAX   TimeTicks
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The most recent value of isdnCtrlUpTime when  the transmission of
the latest call rejection packet was completed."
                 ::= { isdnCtrlStEntry  13 }


       isdnCtrlStAvrgWaitingBits  OBJECT-TYPE
                  SYNTAX   INTEGER
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The average bits the card had to wait before obtaining the D Channel
so as to transmit a packet (average bits per transmission). This
packet can be any kind of packet - signalling or data packet."
                 ::= { isdnCtrlStEntry  14 }















Expires August 1995                                            [Page 21]




draft                       NETMODE ISDN MIB               February 1995


isdnPort      OBJECT IDENTIFIER ::={ isdnMib 2 }

--###################################################################
--            Port Table
--###################################################################

    isdnPrtTable OBJECT-TYPE
        SYNTAX   SEQUENCE OF IsdnPrtEntry
        ACCESS   not-accessible
        STATUS   mandatory
        DESCRIPTION
    "The isdnPrtTable contains information about Ports. A
    Port is a B Channel."
          ::= { isdnPort 1 }

    isdnPrtEntry  OBJECT-TYPE
        SYNTAX   IsdnPrtEntry
             ACCESS   not-accessible
             STATUS   mandatory
             DESCRIPTION
                "Information on a single Port."
            INDEX { isdnPrtIndex }
            ::= { isdnPrtTable 1 }

         IsdnPrtEntry ::=
           SEQUENCE {

        isdnPrtIndex
                IfIndexType,
        isdnPrtCtrlPointer
                IfIndexType,
        isdnPrtInCircCnNumber
                Counter,
        isdnPrtInPktCnNumber
                Counter,
        isdnPrtOutCircCnNumber
                Counter,
        isdnPrtOutPktCnNumber
                Counter,
        isdnPrtInTime
                TimeTicks,
        isdnPrtOutTime
                TimeTicks,
        isdnPrtInChargeUnits
                Counter,





Expires August 1995                                            [Page 22]




draft                       NETMODE ISDN MIB               February 1995


        isdnPrtOutChargeUnits
                Counter,
        isdnPrtInactivityTimer
                TimeTicks,
        isdnPrtPointer
                IfIndexType,
        isdnPrtBChProtocol
                INTEGER,
        isdnPrtBChPointer
                IfIndexType

        }

    isdnPrtIndex  OBJECT-TYPE
          SYNTAX   IfIndexType
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"A unique value for this port of the ISDN-Controller. The table
records are referenced with use of this index."
                 ::= { isdnPrtEntry  1 }

    isdnPrtCtrlPointer  OBJECT-TYPE
                  SYNTAX   IfIndexType
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"A pointer to the Controller this port belongs to. With this pointer
the entry in the controller table can be referred ."
                 ::= { isdnPrtEntry  2 }

    isdnPrtInCircCnNumber  OBJECT-TYPE
                  SYNTAX   Counter
                  ACCESS read-only


                  STATUS mandatory
                  DESCRIPTION
"The total number of circuit switched connections accepted by this
port since last reinitialization of the Controller."
                 ::= { isdnPrtEntry  3 }

    isdnPrtInPktCnNumber  OBJECT-TYPE
                  SYNTAX   Counter
                  ACCESS read-only





Expires August 1995                                            [Page 23]




draft                       NETMODE ISDN MIB               February 1995


                  STATUS mandatory
                  DESCRIPTION
"The total number of incoming packet switched connections accepted
by this port since last reinitialization of the Controller."
                 ::= { isdnPrtEntry  4 }

    isdnPrtOutCircCnNumber  OBJECT-TYPE
                  SYNTAX   Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"  The total number of outgoing circuit switched connections
established through this port since last reinitialization of the
Controller."
                 ::= { isdnPrtEntry  5 }

    isdnPrtOutPktCnNumber  OBJECT-TYPE
                  SYNTAX   Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The total number of outgoing packet switched connections established
through this port since last reinitialization of the Controller."
                 ::= { isdnPrtEntry  6 }

    isdnPrtInTime  OBJECT-TYPE
                  SYNTAX   TimeTicks
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The total duration of the incoming connections in this port. When a
connection uses two B Channels, its duration is counted into both port
entries."
                 ::= { isdnPrtEntry  7 }

    isdnPrtOutTime  OBJECT-TYPE
                  SYNTAX   TimeTicks
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The total duration of the outgoing connections in this port. When a
connection uses two B Channels, its duration is counted into both port
entries."
                 ::= { isdnPrtEntry  8 }






Expires August 1995                                            [Page 24]




draft                       NETMODE ISDN MIB               February 1995


    isdnPrtInChargeUnits  OBJECT-TYPE
                  SYNTAX   Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The approximate total number of charging units due to incoming
connections with reverse charging facility engaged. This object is
strongly related with the availability of Advice Of Charge
Supplementary Service."
                 ::= { isdnPrtEntry  9 }

    isdnPrtOutChargeUnits  OBJECT-TYPE
                  SYNTAX   Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
" The approximate total number of charging units due to outgoing
connections without reverse charging facility engaged."
                 ::= { isdnPrtEntry  10 }

    isdnPrtInactivityTimer  OBJECT-TYPE
                  SYNTAX   TimeTicks
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The period of time (in hundredths of a second) the active connection
over B Channel can remain idle (without packet exchange). When this
period elapses, the agent must close the physical connection."
                 ::= { isdnPrtEntry  11 }

    isdnPrtPointer  OBJECT-TYPE
                  SYNTAX   IfIndexType
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"A pointer to an entry of the isdnFclTable. There, the facilities that


the a user may or is obliged to invoke (and engage if possible) for all
connections over this port."
                 ::= { isdnPrtEntry  12 }

    isdnPrtBChProtocol  OBJECT-TYPE
                  SYNTAX   INTEGER {
                        other (1),





Expires August 1995                                            [Page 25]




draft                       NETMODE ISDN MIB               February 1995


                        bitTransparent (2),  -- no protocol in use
                        x75SLP (3),  -- X.25 LAP-B
                        transparentHdlc (4),
                        ppp (5)
                        }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"The protocol used in layer 2 of over this B Channel."
                 ::= { isdnPrtEntry  13 }

    isdnPrtBChPointer  OBJECT-TYPE
                  SYNTAX   IfIndexType
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"A pointer to the Interface group of MIB II where information about
packets exchanged over this B Channel is maintained. The ifType
object of MIB II has the value of the B Channel protocol in use if a
single protocol is used for all connections over this port since
latest initialisation of the Controller. If more than one protocols
has been used for the connections or the protocol used is not
supported by the ifType syntax, then, by convention, the value 'basicISDN'
or 'primaryISDN' or the legal value 'other' is used."

                 ::= { isdnPrtEntry  14 }
























Expires August 1995                                            [Page 26]




draft                       NETMODE ISDN MIB               February 1995


isdnConnection      OBJECT IDENTIFIER ::= { isdnMib 3 }

isdnCnNumber OBJECT-TYPE
             SYNTAX   INTEGER
             ACCESS   read-only
             STATUS   mandatory
             DESCRIPTION
                "The number of entries in the isdnCnTable."
            ::= { isdnConnection 1 }

--###################################################################
--                              Connection Table


--###################################################################

isdnCnTable OBJECT-TYPE
         SYNTAX   SEQUENCE OF IsdnCnEntry
         ACCESS   not-accessible
         STATUS   mandatory
         DESCRIPTION
"The isdnCnTable contains information about Connections. A
connection is between two end-points through a port or two ports when
more than 64 kbps (up to 128 kbps) is required. A connection may be
Circuit-switched or Packet-switched. A connection using two B
Channels has a single entry in this table but its statistical
information is maintained in two entries of isdnPrtTable. This table
can maintain information about closed connections. The agent can maintain
information about closed connection but is not obliged to. Also, the
number of closed connections to maintain if any is up to the agent to
define."
          ::= { isdnConnection 2 }

isdnCnEntry  OBJECT-TYPE
             SYNTAX   IsdnCnEntry
             ACCESS   not-accessible
             STATUS   mandatory
             DESCRIPTION
"Information on a single Connection."
            INDEX { isdnCnIndex }
            ::= { isdnCnTable 1 }

IsdnCnEntry ::=
           SEQUENCE {
        isdnCnIndex





Expires August 1995                                            [Page 27]




draft                       NETMODE ISDN MIB               February 1995


                IfIndexType,
        isdnCnPortPointer
                IfIndexType,
        isdnCnSecondBChannel
                IfIndexType,
        isdnCnCtrlBoardName
                DisplayString,
        isdnCnDestinationAddress
                INTEGER,
        isdnCnDestinationSubaddress
                INTEGER,
        isdnCnType
                INTEGER,
        isdnCnStateOrder
                INTEGER,
        isdnCnState
                INTEGER,
        isdnCnStateTimeStamp
                TimeTicks,
        isdnCnConnectionTimeStamp
                TimeTicks,
        isdnCnDisconnectionCause
                OCTET STRING,
        isdnCnChargingUnits
                Counter,
        isdnCnProtocolPointer
                IfIndexType,
        isdnCnFacilitiesPointer
                IfIndexType
        }

    isdnCnIndex  OBJECT-TYPE
                  SYNTAX   IfIndexType
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"A unique index for this connection between two end subscribers."
                 ::= { isdnCnEntry  1 }

      isdnCnPortPointer  OBJECT-TYPE
                  SYNTAX   IfIndexType
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The pointer to the corresponding port, over which the connection is





Expires August 1995                                            [Page 28]




draft                       NETMODE ISDN MIB               February 1995


established."
                 ::= { isdnCnEntry  2 }

      isdnCnSecondBChannel    OBJECT-TYPE
                  SYNTAX   IfIndexType
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"A pointer to the second B Channel for this connection, if a second B
Channel is in use. The use of the second B Channel is indicated by
isdnCnBearerServiceEngaged. If there is not a second B Channel
engaged, this Index object will have the value of zero."
                 ::= { isdnCnEntry  3 }


    isdnCnCtrlBoardName  OBJECT-TYPE
                  SYNTAX   DisplayString
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"A quick reference, through this DisplayString, to the Controller,
which this connection pertains to. The index of this Controller can be
retrieved via the use of isdnCnPortPointer; with this pointer the
isdnPrtCtrlPointer can be retrieved, which exactly points to the
right controller entry."
                 ::= { isdnCnEntry  4 }

    isdnCnDestinationAddress  OBJECT-TYPE
                  SYNTAX   INTEGER
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The complete ISDN Address of the remote end as retrieved from the
Call Request packet (issued or accepted)."
                 ::= { isdnCnEntry  5 }

    isdnCnDestinationSubaddress  OBJECT-TYPE
                  SYNTAX   INTEGER
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The ISDN Subaddress of the remote end as retrieved from the Call
Request packet (issued or accepted). If the connection is 'internal'
(that is in-between the clients of a PABX) then the
isdnCnDestinationAddress is the same with the address of the





Expires August 1995                                            [Page 29]




draft                       NETMODE ISDN MIB               February 1995


Controller and the isdnCnDestinationSubaddress is the one really used
to define the destination end."
                 ::= { isdnCnEntry  6 }

      isdnCnType  OBJECT-TYPE
                  SYNTAX   INTEGER {
                outpktSwX-25 (1),
                inpktSwX-25 (2),
                outcircSwOverBCh (3),
                incircSwOverBCh (4)
                }
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The type of the connection. These alternatives are possible:  (a)


connections to ISDN X.25 network, over which connections packets
exchanged over B Channel with use of X.25, (b) 'inCircSwOverBCh'
or 'outCircSwOverBCh', which means outgoing or incoming circuit
switched B Channel connection."
                 ::= { isdnCnEntry  7 }

      isdnCnStateOrder  OBJECT-TYPE
                  SYNTAX   INTEGER {
                        normal(1),
                        suspend (2),
                        resume (3),
                        close (4)
                        }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"The initial value of this object is normal. When the manager wants to
suspend an active connection or resume a suspended connection or
close an active or suspended connection sets the value of this object
correspondingly to suspend, resume or close. The agent, according to
the present state of the connection, executes or ignores the order and
sets the value of isdnCnStateOrder back to normal."
                 ::= { isdnCnEntry  8 }

      isdnCnState  OBJECT-TYPE
                  SYNTAX   INTEGER {
                connecting (1),
                connected (2),





Expires August 1995                                            [Page 30]




draft                       NETMODE ISDN MIB               February 1995


                suspending (3),
                suspended (4),
                resuming (5),
                resumed (6),
                closed (7)
                }
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The present state of the connection. When in 'connecting' state, the
connection is not yet assigned a B Channel; only a 'call request' or a
will have a value with no meaning (the use of zero pointer is
encouraged). If the connection request is rejected, this entry will
not be maintained in this table any more. If the connection is established
but soon disconnected due to non-compatible B Channel protocols, this table
will maintain an entry. If the connection is active, the value 'connected'
is used. If is suspended, the value 'suspended' is used. If the suspension


job is in process, the value 'suspending' is used. If the resumption job
for a suspended connection is in process, the value 'resuming' is used.
If the connection is active but has been suspended and resumed in the
past, the value 'resumed' is used. If the connection is closed, the value
either be maintained or not - it is up to the agent's implementation.

The value of this object for packet switched X.25 over B Channel
refers to the circuit-switched connection to the first ISDN Packet
Handler Point and has nothing to do with X.25 layer 3 virtual calls."
                 ::= { isdnCnEntry  9 }

      isdnCnStateTimeStamp OBJECT-TYPE
                  SYNTAX   TimeTicks
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The value of sysUpTime when the isdnCnState took the value it has
at the moment. That is, the time when the transmission or the
acceptance of the corresponding to the state packet was completed.
When the connection is in 'connected' state, it will have the same
value as isdnCnConnectionTimeStamp."
                 ::= { isdnCnEntry  10 }

      isdnCnConnectionTimeStamp OBJECT-TYPE
                  SYNTAX   TimeTicks
                  ACCESS read-only





Expires August 1995                                            [Page 31]




draft                       NETMODE ISDN MIB               February 1995


                  STATUS mandatory
                  DESCRIPTION
"The value of sysUpTime when the Call Acceptance Q.931 packet was
accepted or transmitted. When the connection is in 'connected' state,
it will have the same value as isdnCnStateTimeStamp."
                 ::= { isdnCnEntry  11 }

      isdnCnDisconnectionCause OBJECT-TYPE
                  SYNTAX   OCTET STRING
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The data field of the disconnection packet carrying the cause for the
disconnection. If the connection is not closed yet, this object will
have no meaning - nevertheless, the use of the empty string '' is
encouraged. If the connection was closed due to non-compatible B Channel
protocols, the value 'nonComp' is used, although the disconnection
cause carried in the data field of the disconnection packet will be
other."
                 ::= { isdnCnEntry  12 }

    isdnCnChargingUnits OBJECT-TYPE
                  SYNTAX   Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The units this connection is charged until present. If the ISDN
Network does not provide the agent with such information, the agent
can estimate the approximate number of units, if it has enough
information. Otherwise, the value -1 is used to indicate no available
information."
                 ::= { isdnCnEntry  13 }

    isdnCnProtocolPointer   OBJECT-TYPE
                  SYNTAX   IfIndexType
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"A pointer to the Interface group of MIB II where information about
packets exchanged over this connection is maintained. The ifType
object of MIB II has the value of the LAP-B, when the connection is
packet-switched. For a circuit-switched connection, the value of the
layer 2 protocol is used for the ifType object. If the protocol used is
not a member of the ifType list, then, by convention, the value
 'basicISDN' or 'primaryISDN' or the legal value 'other' is used."





Expires August 1995                                            [Page 32]




draft                       NETMODE ISDN MIB               February 1995


                ::= { isdnCnEntry  14 }

      isdnCnFacilitiesPointer OBJECT-TYPE
                  SYNTAX   IfIndexType
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"A pointer to the Facilities Table, where the connection can point, so
as to indicate the facilities engaged (not just invoked but also
engaged)."
                 ::= { isdnCnEntry  15 }







































Expires August 1995                                            [Page 33]




draft                       NETMODE ISDN MIB               February 1995


--###################################################################
--                              Facilities Table
--###################################################################

isdnFclTable OBJECT-TYPE
         SYNTAX   SEQUENCE OF IsdnFclEntry
         ACCESS   not-accessible
         STATUS   mandatory
         DESCRIPTION
"The isdnFclTable contains information about Supplementary Services
that can be engaged by connections. The entries in this table are
independent of other tables. There exists only one of this table for
the entire system. Other tables reference entries in this table.  Entries
in this table can be used for default connection parameters, for
parameters to use to place/answer a connection, for the parameters
currently in use for a connection, or parameters that were used by a
connection. The number of references to a given set of parameters can
be found in the isdnFclRefCount object."
                  ::= {isdnMib 4 }

        isdnFclEntry  OBJECT-TYPE
             SYNTAX   IsdnFclEntry
             ACCESS   not-accessible
             STATUS   mandatory
             DESCRIPTION
"A single set of Supplementary services."
            INDEX { isdnFclIndex }
            ::= { isdnFclTable 1 }

        IsdnFclEntry ::=
                SEQUENCE {
        isdnFclIndex
                IfIndexType,
        isdnFclRefCount
                INTEGER,
        isdnFclDirectDialingIn
                INTEGER,
        isdnFclCallTransfer
                INTEGER,
        isdnFclCallingIdPres
                INTEGER,
        isdnFclCallingIdRestr
                INTEGER,
        isdnFclConnectedIdPres
                INTEGER,





Expires August 1995                                            [Page 34]




draft                       NETMODE ISDN MIB               February 1995


        isdnFclConnectedIdRestr
                INTEGER,
        isdnFclCallForwarding
                INTEGER,
        isdnFclNextAddress
                INTEGER,
        isdnFclNextSubaddress
                INTEGER,
        isdnFclAdviceOfCharge
                INTEGER,
        isdnFclReverseCharging
                INTEGER
        }

      isdnFclIndex OBJECT-TYPE
                  SYNTAX   IfIndexType
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"A value that distinguishes this entry from another entry.  Entries in
this table are referenced from other objects which identify
supplementary services. It is impossible to know which other objects
in the MIB reference entries in the table by looking at this table.
Because of this, changes to parameters must be accomplished by
creating a new entry in this table and then changing the referencing
table to  identify the new entry.

 Note that an agent will only use the values  in this table when another
table is changed  to reference those values.  The number of  other
tables that reference an index object  in this table can be found in
isdnFclRefCount.  The value of the reference count will affect the
writability of the objects as explained above.

Entries in this table which have a reference  count of zero maybe
deleted at the convenience  of the agent.  Care should be taken by the
agent to give the agent sufficient time to  create a reference to newly
created entries.

 Should a Management Station not find a free  index with which to
create a new entry, it  may feel free to delete entries with a
reference count of zero. "
                  ::= {isdnFclEntry 1 }

  isdnFclRefCount OBJECT-TYPE
                  SYNTAX   INTEGER





Expires August 1995                                            [Page 35]




draft                       NETMODE ISDN MIB               February 1995


                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
"The number of references known by a management station to exist to
this set of services. It is the number of isdnCnFacilitiesPointer
object that have the value of isdnFclIndex of this entry."
                  ::= {isdnFclEntry 2 }


  isdnFclDirectDialingIn OBJECT-TYPE
                  SYNTAX   INTEGER {
                engaged (1),
                notEngaged (2),
                uponRequest (3),
                neverPermitted (4),
                alwaysInvoked (5)
                }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"If this service is engaged, this object has the value 'engaged';
otherwise it has the value 'notEngaged'. This service enables a user
to call directly another user on an ISDN-compatible PABX. The values
indicate if this facility can or cannot or must be invoked for all
connections over a B Channel."
                  ::= {isdnFclEntry 3 }

    isdnFclCallTransfer   OBJECT-TYPE
                  SYNTAX   INTEGER {
                engaged (1),
                notEngaged (2),
                uponRequest (3),
                neverPermitted (4),
                alwaysInvoked (5)
                }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"If this service is engaged, this object has the value 'engaged';
otherwise it has the value 'notEngaged'. This service enables the
transfer of an established call to a third party. The manager with the
use of this object in combination with the objects isdnFclNextAddress
and isdnFclNextSubaddress can transfer an established connection.
The values 'uponRequest', 'neverPermitted' and 'alwaysInvoked' are
used to indicate if this facility can or cannot or must be invoked for





Expires August 1995                                            [Page 36]




draft                       NETMODE ISDN MIB               February 1995


all connections over a B Channel."
                  ::= {isdnFclEntry 4 }

  isdnFclCallingIdPres OBJECT-TYPE
                  SYNTAX   INTEGER {
                engaged (1),
                notEngaged (2),
                uponRequest (3),


                neverPermitted (4),
                alwaysInvoked (5)

                }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"If this service is engaged, this object has the value 'engaged';
otherwise it has the value 'notEngaged'. This service provides the
called party with the address of the calling party. The values
indicate if this facility can or cannot or must be invoked for all
connections over a B Channel."
                  ::= {isdnFclEntry 5 }

    isdnFclCallingIdRestr OBJECT-TYPE
                  SYNTAX   INTEGER {
                engaged (1),
                notEngaged (2),
                uponRequest (3),
                neverPermitted (4),
                alwaysInvoked (5)
                }
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
 "If this service is engaged, this object has the value 'engaged';
otherwise it has the value 'notEngaged'. The service is the Calling
line identification presentation. The values 'uponRequest',
can or cannot or must be invoked for all connections over a B Channel."
                  ::= {isdnFclEntry 6 }

    isdnFclConnectedIdPres OBJECT-TYPE
                  SYNTAX   INTEGER {
                engaged (1),
                notEngaged (2),





Expires August 1995                                            [Page 37]




draft                       NETMODE ISDN MIB               February 1995


                uponRequest (3),
                neverPermitted (4),
                alwaysInvoked (5)
                }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"If this service is engaged, this object has the value 'engaged';
otherwise it has the value 'notEngaged'. The service is the Connected
line identification presentation. The values 'uponRequest',


facility can or cannot or must be invoked for all connections over a
B Channel."
                  ::= {isdnFclEntry 7 }

    isdnFclConnectedIdRestr OBJECT-TYPE
                  SYNTAX   INTEGER {
                engaged (1),
                notEngaged (2),
                uponRequest (3),
                neverPermitted (4),
                alwaysInvoked (5)
                }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"If this service is engaged, this object has the value 'engaged';
otherwise it has the value 'notEngaged'. The service is the Connected
line identification restriction. The values 'uponRequest',
facility can or cannot or must be invoked for all connections over a B
Channel."
                  ::= {isdnFclEntry 8 }

    isdnFclCallForwarding OBJECT-TYPE
                  SYNTAX   INTEGER {
                busyEnd (1),
                noReply (2),
                unconditional (3),
                engaged (4),
                notEngaged (5),
                noInfo (6),
                uponRequest (7),
                neverPermitted (8),
                alwaysInvoked (9)





Expires August 1995                                            [Page 38]




draft                       NETMODE ISDN MIB               February 1995


                }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"If this service is not engaged, this object has the value
no reply or Call forwarding unconditional. If for an outgoing connection,
the final address and subaddress where the call is forwarded are maintained
in the objects isdnFclNextAddress and isdnFclNextSubaddress. If for
an incoming conection, the intermediate address and subaddress from
 where the call is forwarded are maintained in the objects
isdnFclNextAddress and isdnFclNextSubaddress. If the agent does not
 know whether the connection it answers or the one it has placed has
been forwarded, the value 'noInfo' is used. If the agent knows that
the connection it answers or the one it has placed has been forwarded but
it does not know the exact service it engaged, this object has the
value 'engaged'. The values 'uponRequest', 'neverPermitted' and
must be invoked for all connections over a B Channel."
                  ::= {isdnFclEntry 9 }

  isdnFclNextAddress   OBJECT-TYPE
                  SYNTAX   INTEGER
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"This object is used in combination with the objects
isdnFclCallTransfer or isdnFclCallForwarding. If the values of these
objects do not suppose use of isdnFclNextAddress object, the value of
this object has no meaning."
                  ::= {isdnFclEntry 10 }

  isdnFclNextSubaddress   OBJECT-TYPE
                  SYNTAX   INTEGER
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"This object is used in combination with the objects isdnFclCallTransfer
or isdnFclCallForwarding. If the values of these objects do not suppose
use of isdnFclNextsSubaddress object, the value of this object has
no meaning."
                  ::= {isdnFclEntry 11 }

  isdnFclAdviceOfCharge   OBJECT-TYPE
                  SYNTAX   INTEGER {
                engaged (1),
                notEngaged (2),





Expires August 1995                                            [Page 39]




draft                       NETMODE ISDN MIB               February 1995


                uponRequest (3),
                neverPermitted (4),
                alwaysInvoked (5)
                }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"If this service is engaged, this object has the value 'engaged';
otherwise it has the value 'notEngaged'. The service is Advise of
charge. This service provides the agent with charging information for
a connection. If this service is not enabled, then the objects counting
charging units may not 'work' or may have very rough estimations -


accordingly to the agent's implementation. The values 'uponRequest',
facility can or cannot or must be invoked for all connections over a
B Channel."
                  ::= {isdnFclEntry 12 }

  isdnFclReverseCharging  OBJECT-TYPE
                  SYNTAX   INTEGER {
                engaged (1),
                notEngaged (2),
                uponRequest (3),
                neverPermitted (4),
                alwaysInvoked (5)
                }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
"If this service is engaged, this object has the value 'engaged';
otherwise it has the value 'notEngaged'. The service is the Reverse
Charging. If this object is set to a value during an active
connection, the network must permit the change of the charging status
in the middle of a connection. The values 'uponRequest', 'neverPermitted'
 and 'alwaysInvoked' are used to indicate if this facility can or
cannot or must be invoked for all connections over a B Channel."
                  ::= {isdnFclEntry 13 }

-- No traps are defined in this document

-- No tests are defined in this document

END






Expires August 1995                                            [Page 40]




draft                       NETMODE ISDN MIB               February 1995


5. Appendix: Revision History

An ISDN  Controller MIB has not been assigned a Draft Standard
status yet.

The AVM company has issued a preliminary code defining a MIB
controlling the Multiprotocol Router, which AVM company
manufactures. This AVM MIB has some relation to an ISDN MIB but is
oriented to control the router. This AVM Multiprotocol Router MIB
has the Object Identifier { enterprises 872 10 }.

The Australian University has also given a very draft outline of an
ISDN-MIB (not a complete MIB document) in the Internet discussion
group.

NETCS Company (imib@netcs.com) has given a very rough outline of an
ISDN-MIB.

6. Acknowledgements


This document was produced in the National Technical University of
Athens, department of Electrical Engineering and Computer Science,
Network Management & Optimal Design Laboratory (NETMODE) laboratory.

It was produced by Mr. K. Berdekas under the supervision of
Professor B. Maglaris, with the acknowledged contribution of Mr.
T. Karounos. Mr. T. Chiotis and Mr. G. Kapelios.






















Expires August 1995                                            [Page 41]




draft                       NETMODE ISDN MIB               February 1995


7.  References

[1] Rose M., and K. McCloghrie, "Structure and Identification of
    Management Information for TCP/IP-based internets", STD 16, RFC 1155,
    Performance Systems International, Hughes LAN Systems, May
    1990.

[2] McCloghrie K., and M. Rose, "Management Information Base for
    Network Management of TCP/IP-based internets", RFC 1156, Hughes
    LAN Systems, Performance Systems International, May 1990.

[3] Case, J., Fedor, M., Schoffstall, M., and J. Davin, "Simple
    Network Management Protocol", STD 15, RFC 1157, SNMP Research,
    Performance Systems International, Performance Systems
    International, MIT Laboratory for Computer Science, May 1990.

[4] Rose, M., and K. McCloghrie, Editors, "Concise MIB
    Definitions", STD 16, RFC 1212, Performance Systems International,
    Hughes LAN Systems, March 1991.

[5] Rose M., Editor, "Management Information Base for Network
    Management of TCP/IP-based internets: MIB-II", STD 17, RFC 1213,
    Performance Systems International, March 1991.

[6] Information processing systems - Open Systems Interconnection -
    Specification of Abstract Syntax Notation One (ASN.1),
    International Organization for Standardization, International
    Standard 8824, December 1987.

[7] Information processing systems - Open Systems Interconnection -
    Specification of Basic Encoding Rules for Abstract Notation One
    (ASN.1), International Organization for Standardization,
    International Standard 8825, December 1987.

[8] "Information Technology - Telecommunications and information
    exchange between systems - Elements of Management Information
    Related to OSI network Layer Standards", Committee Draft
    International Standard 10733, November 1990.

8.  Security Considerations

Security issues are not discussed in this memo.

9. Author's Address






Expires August 1995                                            [Page 42]




draft                       NETMODE ISDN MIB               February 1995


Please use the following e-mail address: tchiotis@phgasos.ntua.gr

Klearchos Berdekas
National Technical University of Athens (NTUA)
Dep. of Electrical and Computer Engineering
Division of Computer Science
NETMODE laboratory - Pr. B. Maglaris
Zografou   157 80
Athens
Greece

Tel: (+301) 7484922

Tryfon Chiotis
National Technical University of Athens (NTUA)
Dep. of Electrical and Computer Engineering
Division of Computer Science
NETMODE laboratory - Pr. B. Maglaris
Zografou   157 80
Athens
Greece

Tel: (+301) 7484922



























Expires August 1995                                            [Page 43]
