ComponentPath = *( sp Step sp "/" ) sp (Step / CountStep)

Step = ChildAxisStep /
             AttributeAxisStep /
             SimpleContentStep /
             ItemStep /
             MemberStep /
             MemberTypeStep /
             ContentStep /
             RestrictByStep

ChildAxisStep     = ElementName [ sp PositionPredicate ]
AttributeAxisStep = AttributeName

SimpleContentStep = fn-simpleContent sp "(" sp ")"

ItemStep  = ItemValue [ sp PositionPredicate ]
ItemValue = fn-itemType sp "(" sp ")"

MemberStep = fn-member sp
                      "(" sp ( positive-number / MemberName ) sp ")"
MemberName = QName

MemberTypeStep = fn-memberType sp "(" sp TypeName ) sp ")"
TypeName       = QName

ContentStep = fn-content sp "(" sp ")"

RestrictByStep = fn-restrictBy sp "(" [ sp ValueList ] sp ")"
ValueList      = XMLValue *( sp "," sp XMLValue )
XMLValue       = 1*UTF8-Char ; a Standalone RXER Encoding

CountStep  = ChildCount / ItemCount
ChildCount = fn-count sp "(" sp ElementName sp ")"
ItemCount  = fn-count sp "(" sp ItemValue sp ")"

ElementName   = QName
AttributeName = "@" sp QName
fn-simpleContent = %x73.69.6D.70.6C.65.43.6F.6E.74.65.6E.74
                                                      ; "simpleContent"
fn-itemType      = %x69.74.65.6D.54.79.70.65 ; "itemType"
fn-member        = %x6D.65.6D.62.65.72  ; "member"
fn-memberType    = %x6D.65.6D.62.65.72.54.79.70.65 ; "memberType"
fn-count         = %x63.6F.75.6E.74  ; "count"
fn-content       = %x63.6F.6E.74.65.6E.74 ; "content"
fn-restrictBy    = %x72.65.73.74.72.69.63.74.42.79 ; "restrictBy"
fn-last          = %x6C.61.73.74 ; "last"

PositionPredicate = "[" sp Position sp "]"
Position          = positive-number /
                          ( fn-last sp "(" sp ")"
                             [ sp "-" sp positive-number ] )

QName     = [ Prefix ":" ] LocalPart
                     ; the XML representation of a qualified name
Prefix    = NCName
LocalPart = NCName

NCName        = (Letter / "_" ) *NCNameChar
NCNameChar    = Letter / Digit / "." / "-" / "_" /
                      CombiningChar / Extender

Letter        = UTF8-Char ; the UTF-8 encoding of any character
                                ; permitted by the Letter production
                                ; of XML [XML]
Digit         = UTF8-Char ; the UTF-8 encoding of any character
                                ; permitted by the Digit production
                                ; of XML [XML]
CombiningChar = UTF8-Char ; the UTF-8 encoding of any character
                                ; permitted by the CombiningChar
                                ; production of XML [XML]
Extender      = UTF8-Char ; the UTF-8 encoding of any character
                                ; permitted by the Extender production
                                ; of XML [XML]

UTF8-Char = %x2D-7A /             ; 1 octet UTF-8 character
                  %xC0-DF %x80-BF /     ; 2 octet UTF-8 character
                  %xE0-EF 2(%x80-BF) /  ; 3 octet UTF-8 character
                  %xF0-F7 3(%x80-BF)    ; 4 octet UTF-8 character

minOccurs="0" maxOccurs="unbounded">
minOccurs="0" maxOccurs="unbounded">
schemaIdentity="http://xmled.info/id/XED/1/ComponentMatching"
targetNamespace="http://xmled.info/ns/XED/1/ComponentMatching"
name="ComponentMatching"
identifier="1.3.6.1.4.1.21472.5.1.1"
tagDefault="EXPLICIT"
extensibilityImplied="true">

namespace="http://xmled.info/ns/X.500/4/InformationFramework"
schemaLocation="InformationFramework.asd"/>

schemaLocation="AdditionalBasicDefinitions.asd"/>

class="if:MATCHING-RULE">
targetNamespace="http://xmled.info/ns/XED/1/ComponentMatching">

schemaLocation="builtInTypes.xsd"/>

minOccurs="0"/>
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
minOccurs="0" maxOccurs="unbounded"/>
