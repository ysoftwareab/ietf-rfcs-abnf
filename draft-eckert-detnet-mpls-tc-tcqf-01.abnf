iif = pak.context.iif
tc = pak.mpls_header.lse[tos].tc
oif = pak.context.oif = forward_process(pak)

cycle = pak.context.tcqf_cycle
             = map_cycle(cycle,
               tcqf.if_config[oif].cycle_map[[iif])

cycle = 1
cc =  tcqf.cycle_time *
           tcqf.cycle_time
o =   tcqf.cycle_clock_offset
nextcyclestart = floor(tnow / cc) * cc + cc + o

cycle = (cycle + 1) mod tcqf.cycles + 1
CT  = cycle_time
C   = cycles
CC  = CT * C
O1  = cycle_clock_offset router R1, interface towards R2
O2  = cycle_clock_offset router R2, output interface of interest
A = ( ceil( ( O1' - O2 ) / CT) + C + 1) mod CC
