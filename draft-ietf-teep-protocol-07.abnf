teep-message                => (query-request /
                                       query-response /
                                       update /
                                       teep-success /
                                       teep-error ),
query-request = [
     type: TEEP-TYPE-query-request,
     options: {
       ? token => bstr .size (8..64),
       ? supported-cipher-suites => [ + suite ],
       ? supported-freshness-mechanisms => [ + freshness-mechanism ],
       ? challenge => bstr .size (8..512),
       ? versions => [ + version ],
       * $$query-request-extensions
       * $$teep-option-extensions
     },
     data-item-requested: data-item-requested
query-response = [
     type: TEEP-TYPE-query-response,
     options: {
       ? token => bstr .size (8..64),
       ? selected-cipher-suite => suite,
       ? selected-version => version,
       ? evidence-format => text,
       ? evidence => bstr,
       ? tc-list => [ + tc-info ],
       ? requested-tc-list => [ + requested-tc-info ],
       ? unneeded-tc-list => [ + SUIT_Component_Identifier ],
       ? ext-list => [ + ext-info ],
       * $$query-response-extensions,
       * $$teep-option-extensions
     }
tc-info = {
component-id => SUIT_Component_Identifier,
requested-tc-info = {
component-id => SUIT_Component_Identifier,
update = [
     type: TEEP-TYPE-update,
     options: {
       ? token => bstr .size (8..64),
       ? manifest-list => [ + bstr .cbor SUIT_Envelope ],
       * $$update-extensions,
       * $$teep-option-extensions
     }
teep-success = [
     type: TEEP-TYPE-teep-success,
     options: {
       ? token => bstr .size (8..64),
       ? msg => text .size (1..128),
       ? suit-reports => [ + suit-report ],
       * $$teep-success-extensions,
       * $$teep-option-extensions
     }
teep-error = [
     type: TEEP-TYPE-teep-error,
     options: {
        ? token => bstr .size (8..64),
        ? err-msg => text .size (1..128),
        ? supported-cipher-suites => [ + suite ],
        ? supported-freshness-mechanisms => [ + freshness-mechanism ],
        ? versions => [ + version ],
        ? suit-reports => [ + suit-report ],
        * $$teep-error-extensions,
        * $$teep-option-extensions
     },
     err-code: uint (0..23)
teep-message = $teep-message-type .within teep-message-framework

SUIT_Envelope = any

teep-message-framework = [
     type: uint (0..23) / $teep-type-extension,
     options: { * teep-option },
     * uint; further integers, e.g., for data-item-requested
teep-option = (uint => any)

TEEP-TYPE-query-request = 1
TEEP-TYPE-query-response = 2
TEEP-TYPE-update = 3
TEEP-TYPE-teep-success = 5
TEEP-TYPE-teep-error = 6

version = .within uint .size 4
ext-info = .within uint .size 4
data-item-requested = $data-item-requested .within uint .size 8
attestation = 1
trusted-components = 2
extensions = 4
query-request = [
     type: TEEP-TYPE-query-request,
     options: {
       ? token => bstr .size (8..64),
       ? supported-cipher-suites => [ + suite ],
       ? supported-freshness-mechanisms => [ + freshness-mechanism ],
       ? challenge => bstr .size (8..512),
       ? versions => [ + version ],
       * $$query-request-extensions
       * $$teep-option-extensions
     },
     data-item-requested: data-item-requested
suite = $TEEP-suite .within uint .size 4

TEEP-AES-CCM-16-64-128-HMAC256--256-X25519-EdDSA = 1
TEEP-AES-CCM-16-64-128-HMAC256--256-P-256-ES256  = 2

freshness-mechanism = $TEEP-freshness-mechanism .within uint .size 4

FRESHNESS_NONCE = 0
FRESHNESS_TIMESTAMP = 1
FRESHNESS_EPOCH_ID = 2

query-response = [
     type: TEEP-TYPE-query-response,
     options: {
       ? token => bstr .size (8..64),
       ? selected-cipher-suite => suite,
       ? selected-version => version,
       ? evidence-format => text,
       ? evidence => bstr,
       ? tc-list => [ + tc-info ],
       ? requested-tc-list => [ + requested-tc-info ],
       ? unneeded-tc-list => [ + SUIT_Component_Identifier ],
       ? ext-list => [ + ext-info ],
       * $$query-response-extensions,
       * $$teep-option-extensions
     }
tc-info = {
component-id => SUIT_Component_Identifier,
requested-tc-info = {
component-id => SUIT_Component_Identifier,
update = [
     type: TEEP-TYPE-update,
     options: {
       ? token => bstr .size (8..64),
       ? manifest-list => [ + bstr .cbor SUIT_Envelope ],
       * $$update-extensions,
       * $$teep-option-extensions
     }
teep-success = [
     type: TEEP-TYPE-teep-success,
     options: {
       ? token => bstr .size (8..64),
       ? msg => text .size (1..128),
       ? suit-reports => [ + suit-report ],
       * $$teep-success-extensions,
       * $$teep-option-extensions
     }
teep-error = [
     type: TEEP-TYPE-teep-error,
     options: {
        ? token => bstr .size (8..64),
        ? err-msg => text .size (1..128),
        ? supported-cipher-suites => [ + suite ],
        ? supported-freshness-mechanisms => [ + freshness-mechanism ],
        ? versions => [ + version ],
        ? suit-reports => [ + suit-report ],
        * $$teep-error-extensions,
        * $$teep-option-extensions
     },
     err-code: uint (0..23)
ERR_PERMANENT_ERROR = 1
ERR_UNSUPPORTED_EXTENSION = 2
ERR_UNSUPPORTED_FRESHNESS_MECHANISMS = 3
ERR_UNSUPPORTED_MSG_VERSION = 4
ERR_UNSUPPORTED_CIPHER_SUITES = 5
ERR_BAD_CERTIFICATE = 6
ERR_CERTIFICATE_EXPIRED = 9
ERR_TEMPORARY_ERROR = 10
ERR_MANIFEST_PROCESSING_FAILED = 17

supported-cipher-suites = 1
challenge = 2
versions = 3
selected-cipher-suite = 5
selected-version = 6
evidence = 7
tc-list = 8
ext-list = 9
manifest-list = 10
msg = 11
err-msg = 12
evidence-format = 13
requested-tc-list = 14
unneeded-tc-list = 15
component-id = 16
tc-manifest-sequence-number = 17
have-binary = 18
suit-reports = 19
token = 20
supported-freshness-mechanisms = 21
TEEP-AES-CCM-16-64-128-HMAC256--256-X25519-EdDSA =
TEEP-AES-CCM-16-64-128-HMAC256--256-X25519-EdDSA =
