config-file   =  line-list
line-list     =  line / line line-list
line          =  property-line / comment-line
comment-line  =  ( "#" / ";" ) 1*allchar newline
property-line =  property newline
property      =  tag "=" value-list
tag           =  prop / prop "." tag
prop          =  1*tagchar
value-list    =  value / value "," value-list
value         =  int / bool /
                       "(" value-list ")" / string
int           =  1*DIGIT
bool          =  "true" / "false" / "TRUE" / "FALSE"
newline       =  CR / ( CRLF )
string        =  1*stringchar
tagchar       =  DIGIT / ALPHA / tother / escape
tother        =  %x21-%x2d / %x2f /
                       %x3a / %x3c-%x40 /
                       %x5b-%x60 / %7b-%7e
                       ; i.e., all characters except `.',
                       ; and `='.
stringchar    =  DIGIT / ALPHA / sother / escape
sother        =  %x21-%x27 / %x2a-%x2b /
                       %x2d-%x2f / %x3a-%x40 /
                       %x5b-%x60 / %7b-%7e
                       ; i.e., all characters except `,',
                       ; `(', and `)' except for scope names.
allchar       =  DIGIT / ALPHA / HTAB / SP
escape        =  "\" HEXDIG HEXDIG
                       ; Used for reserved characters


addr-list     =  addr / addr "," addr-list
addr          =  fqdn / hostnumber
fqdn          =  ALPHA / ALPHA *[ anum / "-" ] anum
anum          =  ALPHA / DIGIT
hostnumber    =  1*3DIGIT 3("." 1*3DIGIT)


addr-list     =  hostnumber / hostnumber "," addr-list
hostnumber    =  1*3DIGIT 3("." 1*3DIGIT)


ser-file      =  reg-list
reg-list      =  reg / reg reg-list
reg           =  creg / ser-reg
creg          =  comment-line ser-reg
comment-line  =  ( "#" / ";" ) 1*allchar newline
ser-reg       =  url-props [slist] [attr-list] newline newline
url-props     =  surl "," lang "," ltime [ "," type ] newline
surl          =  ;The registration's URL. See
                       ; [10] for syntax.
lang          =  1*8ALPHA [ "-" 1*8ALPHA ]
                       ;RFC 1766 Language Tag see [8].
ltime         =  1*5DIGIT
                       ; A positive 16-bit integer
                       ; giving the lifetime
                       ; of the registration.
type          =  ; The service type name, see [9]
                       ; and [10] for syntax.
slist         =  "scopes" "=" scope-list newline
scope-list    =  scope-name / scope-name "," scope-list
scope         =  ; See grammar of [9] for
                       ; scope-name syntax.
attr-list     =  attr-def / attr-def attr-list
attr-def      =  ( attr / keyword ) newline
keyword       =  attr-id
attr          =  attr-id "=" attr-val-list
attr-id       =  ;Attribute id, see [9] for syntax.
attr-val-list =  attr-val / attr-val "," attr-val-list
attr-val      =  ;Attribute value, see [9] for syntax.
allchar       =  char / WSP
char          =  DIGIT / ALPHA / other
other         =  %x21-%x2f / %x3a-%x40 /
                       %x5b-%x60 / %7b-%7e
                       ; All printable, nonwhitespace US-ASCII
                       ; characters.
newline       =  CR / ( CRLF )


lifetime = max(2).  Suppose, further, that the following
SLP_LIFETIME_DEFAULT = 10800,
SLP_LIFETIME_MAXIMUM = 65535
SLP_LAST_CALL                    = 1,
SLP_OK                           = 0,
SLP_LANGUAGE_NOT_SUPPORTED       = -1,
SLP_PARSE_ERROR                  = -2,
SLP_INVALID_REGISTRATION         = -3,
SLP_SCOPE_NOT_SUPPORTED          = -4,
SLP_AUTHENTICATION_ABSENT        = -6,
SLP_AUTHENTICATION_FAILED        = -7,
SLP_INVALID_UPDATE               = -13,
SLP_INVALID_LIFETIME             = -15,
SLP_NOT_IMPLEMENTED              = -17,
SLP_BUFFER_OVERFLOW              = -18,
SLP_NETWORK_TIMED_OUT            = -19,
SLP_NETWORK_INIT_FAILED          = -20,
SLP_MEMORY_ALLOC_FAILED          = -21,
SLP_PARAMETER_BAD                = -22,
SLP_NETWORK_ERROR                = -23,
SLP_INTERNAL_SYSTEM_ERROR        = -24,
SLP_HANDLE_IN_USE                = -25,
SLP_TYPE_ERROR                   = -26

SLP_FALSE = 0,
SLP_TRUE = 1

err = SLPReg(slph,
                surl,
                SLP_LIFETIME_DEFAULT,
                ppcAttrs,
                errCallback,
                NULL);

err = SLPFindSrvs(slph,
                     pcSrvType, pcScopeList, pcFilter,
                     srvCallback, NULL);

errCode = SLPParseSrvURL(pcSrvURL, &pSrvURL);

err =
     SLPFindAttrs(slph,
                  surl,
                  pcScopeList, pcAttrFilter,
                  attrCallBack, NULL);

adv = ServiceLocationManager.getAdvertiser("en");

tr = TemplateRegistry.getTemplateRegistry();

loc = ServiceLocationManager.getLocator("en");

services =
      loc.findServices(new ServiceType("service:printer"),scopes,query);

