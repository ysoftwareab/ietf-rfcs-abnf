Network Working Group                                        P. Nikander
Internet-Draft                             Ericsson Research Nomadic Lab
Expires: October 30, 2004                                    J. Laganier
                                                  LIP / Sun Microsystems
                                                                May 2004



    Host Identity Protocol (HIP) Domain Name System (DNS) Extensions
                       draft-nikander-hip-dns-00


Status of this Memo


   By submitting this Internet-Draft, I certify that any applicable
   patent or other IPR claims of which I am aware have been disclosed,
   and any of which I become aware will be disclosed, in accordance with
   RFC 3668.


   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups. Note that other
   groups may also distribute working documents as Internet-Drafts.


   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."


   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.


   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.


   This Internet-Draft will expire on October 30, 2004.


Copyright Notice


   Copyright (C) The Internet Society (2004). All Rights Reserved.


Abstract


   This document specifies two new resource records for the Domain Name
   System, and how to use them with the Host Identity Protocol. These
   records allow a HIP node to store in the DNS its Host Identity (i.e.,
   its public key), Host Identity Tag (i.e., a truncated hash of its
   public key), and Rendezvous Servers (RVS).








Nikander & Laganier     Expires October 30, 2004                [Page 1]
Internet-Draft             HIP DNS Extensions                   May 2004



Table of Contents


   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Conventions used in this document  . . . . . . . . . . . . . .  5
   3.  Usage scenarios  . . . . . . . . . . . . . . . . . . . . . . .  6
     3.1   Simple static singly homed end-host  . . . . . . . . . . .  7
     3.2   Mobile end-host  . . . . . . . . . . . . . . . . . . . . .  7
     3.3   Multi-homed end-host . . . . . . . . . . . . . . . . . . .  7
     3.4   Multi-homed site . . . . . . . . . . . . . . . . . . . . .  7
     3.5   Site with a HAA  . . . . . . . . . . . . . . . . . . . . .  7
   4.  Overview of using the DNS with HIP . . . . . . . . . . . . . .  8
     4.1   Different types of HITs  . . . . . . . . . . . . . . . . .  8
       4.1.1   Host Assigning Authority (HAA) field . . . . . . . . .  8
       4.1.2   Reverse lookup based on Type 2 (HAA-based) HITs  . . .  9
     4.2   Storing HI and HIT in DNS  . . . . . . . . . . . . . . . .  9
     4.3   Storing HAA in DNS . . . . . . . . . . . . . . . . . . . .  9
     4.4   Providing multiple IP addresses  . . . . . . . . . . . . .  9
       4.4.1   Storing Rendezvous Servers in the DNS  . . . . . . . . 10
     4.5   Initiating connections based on DNS names  . . . . . . . . 10
     4.6   Address verification . . . . . . . . . . . . . . . . . . . 10
   5.  Storage Format . . . . . . . . . . . . . . . . . . . . . . . . 11
     5.1   HIPHI RDATA format . . . . . . . . . . . . . . . . . . . . 11
       5.1.1   RDATA format HIT type  . . . . . . . . . . . . . . . . 11
       5.1.2   RDATA format algorithm type  . . . . . . . . . . . . . 11
       5.1.3   RDATA format HIT . . . . . . . . . . . . . . . . . . . 11
       5.1.4   RDATA format public key  . . . . . . . . . . . . . . . 12
     5.2   HIPRVS RDATA format  . . . . . . . . . . . . . . . . . . . 12
       5.2.1   RDATA format precedence  . . . . . . . . . . . . . . . 13
       5.2.2   RDATA format Rendezvous server type  . . . . . . . . . 13
       5.2.3   RDATA format Rendezvous server . . . . . . . . . . . . 13
   6.  Policy considerations  . . . . . . . . . . . . . . . . . . . . 14
   7.  Conjunction of multiple HIs with mutiple IPs . . . . . . . . . 15
   8.  Security Considerations  . . . . . . . . . . . . . . . . . . . 16
   9.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 17
   10.   Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . 18
   11.   References . . . . . . . . . . . . . . . . . . . . . . . . . 19
   11.1  Normative references . . . . . . . . . . . . . . . . . . . . 19
   11.2  Informative references . . . . . . . . . . . . . . . . . . . 20
       Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . 20
       Intellectual Property and Copyright Statements . . . . . . . . 21












Nikander & Laganier     Expires October 30, 2004                [Page 2]
Internet-Draft             HIP DNS Extensions                   May 2004



1.  Introduction


   This document specifies two new resource records (RRs) for the Domain
   Name System (DNS) [8], and how to use them with the Host Identity
   Protocol (HIP) [10].  These records allow a HIP node to store in the
   DNS its Host Identity (i.e., its public key), Host Identity Tag
   (i.e., a truncated hash of its public key), and Rendezvous Servers
   (RVS) [13].


   The current Internet architecture defines two global namespaces: IP
   addresses and domain names. The Domain Name System provides a two way
   lookup between these two namespaces.


   The HIP architecture [11] defines a new third namespace called Host
   Identity Namespace. This namespace is composed of the Host Identity
   (HI) of HIP nodes. The Host Identity Tag (HIT) is one local
   representation of a HI (the others being the IPv4-compatible and
   IPv6-compatible Local Scope Identifiers - LSIs). This local
   representation is obtained by taking the output of a secure hash
   function applied to the HI, truncated to the IPv6 address size. HITs
   are supposed to be used instead of IP addresses in some ULPs and
   applications.


   The Host Identity Protocol [10] allows two HIP nodes to establish a
   pair of unidirectional IPsec Security Association. These SAs are
   bound to HI instead of regular IP addresses.


   The proposed HIP multi-homing mechanisms [12] allow a node to
   dynamically change its set of underlying IP addresses while
   maintaining transport layer session survivability.


   The HIP rendezvous extensions [13] proposal allows a HIP node to
   maintain HIP reachability while not relying on dynamic DNS updates to
   make its peers aware of its current location (i.e., its set of IP
   address(es)).


   Although a HIP node can initiate a HIP communication
   "opportunistically" (i.e., without a priori knowledge of its peer's
   HI), doing so expose both endpoints to Man-in-the-Middle attacks on
   the HIP handshake. Hence, there is a desire to gain knowledge of
   peers' HI before applications and ULPs initiate communication.


   Currently, most of the Internet applications which need to
   communicate with a remote host first translate a domain name (often
   obtained via user input) into one or more IP address(es). This step
   occurs prior to communication with the remote host, and relies on a
   DNS lookup.





Nikander & Laganier     Expires October 30, 2004                [Page 3]
Internet-Draft             HIP DNS Extensions                   May 2004



   With HIP, IP addresses are expected to be used mostly for on-the-wire
   communication between end hosts, while most ULPs and applications
   uses HIs or HITs instead (ICMP might be an example of an ULP not
   using them). Consequently, we need a means to translate a domain name
   into an HI. Using the DNS for this translation is pretty
   straightforward: We define a new HIPHI (HIP HI) resource record. Upon
   query by an application or ULP for a FQDN -> IP lookup, the resolver
   would then additionaly perform an FQDN -> HI lookup, and use it to
   construct the resulting HI -> IP mapping (which is internal to the
   HIP layer). The HIP layer uses the HI -> IP mapping to translate HIs
   and their local representations (HITs, IPv4 and IPv6-compatible LSIs)
   into IP addresses and vice versa.








































Nikander & Laganier     Expires October 30, 2004                [Page 4]
Internet-Draft             HIP DNS Extensions                   May 2004



2.  Conventions used in this document


   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC2119 [2].















































Nikander & Laganier     Expires October 30, 2004                [Page 5]
Internet-Draft             HIP DNS Extensions                   May 2004



3.  Usage scenarios


   In this section we briefly introduce a number of usage scenarios
   where the DNS is useful with the Host Identity Protocol.


   With HIP, most application and ULPs are unaware of the IP addresses
   used to carry packets on the wire.  Consequently, a HIP node could
   take advantage of having multiple IP addresses for fail-over,
   redundancy, mobility or renumbering, in a manner which is transparent
   to most ULPs and applications (because they are bound to HIs, hence
   they are agnostic to these IP address(es) changes).


   In these situations, a node wishing to be reachable by reference to
   its FQDN MAY store the following informations in the DNS:


   o  Its set of IP address(es).
   o  Its Host Identity (HI) and/or Host Identity Tag (HIT).
   o  Its Host Assigning Authority (HAA).
   o  The IP address(es) or DNS name(s) of its Rendezvous Server(s)
      (RVS).


   When a HIP node wants to initiate a communication with another HIP
   node, it first needs to perform a HIP base exchange to set-up a HIP
   association towards its peer. Although such an exchange can be
   initiated opportunistically, i.e., without a priori knowledge of the
   responder's HI, by doing so both nodes knowingly risk
   man-in-the-middle attacks on the HIP exchange. To prevent these
   attacks, it is recommended that the initiator first obtain the HI of
   the responder, and then initiate the exchange. This can be done
   through manual configuration, or DNS lookups, hence the introduction
   of the new HIPHI RR.


   When a HIP node is frequently changing its IP address(es), the
   dynamic DNS update latency may prevent it from publishing globally
   its new IP address(es). For solving this problem, the HIP
   architecture introduce Rendezvous Servers (RVS). A HIP responder uses
   a Rendezvous Server as a Rendezvous point, to maintain reachability
   with possible HIP initiators. Such a HIP node would publish in the
   DNS its RVS' IP address or DNS name in a HIPRVS RR, while keeping its
   RVS up-to-date with its current set of IP addresses.


   Then, when some HIP node wants to initiate an HIP exchange with such
   a responder, it retrieves its RVS IP address by looking up a HIPRVS
   RR at the FQDN of the responder, and sends an I1 to this IP address.
   The I1 will then be relayed by the RVS to the responder, which will
   then complete the HIP exchange, either directly or via the RVS [13].


   Note that storing HIP RR informations in the DNS at a FQDN which is




Nikander & Laganier     Expires October 30, 2004                [Page 6]
Internet-Draft             HIP DNS Extensions                   May 2004



   assigned to a non-HIP node might have very bad effects on its
   reachability by HIP nodes.


3.1  Simple static singly homed end-host


   A HIP node having a single static network attachment, wishing to be
   reachable by reference to its FQDN, would store in the DNS, in
   addition to its IP address(es), its Host Identity (HI) in a HIPHI
   resource record.


3.2  Mobile end-host


   A mobile HIP node wishing to be reachable by reference to its FQDN
   would store in the DNS, instead of its IP address(es), its HI in a
   HIPHI RR, and the IP address(es) of its Rendezvous Server(s) in
   HIPRVS resource record(s). The mobile HIP node also need to notify
   its Rendezvous Servers of any change in its set of IP address(es).


   A host wanting to reach this mobile host would then send an I1 to one
   of its RVS. Following, the RVS will relay the I1 up to the mobile
   node, which will complete the HIP exchange.


3.3  Multi-homed end-host


   A HIP node having several distinct network attachments is
   multi-homed. Such a HIP node might also be reachable via several
   distinct Rendezvous Servers. In addition to its set of IP
   address(es), a multi-homed end-host would store in the DNS its HI in
   a HIPHI RR, and possibly the IP address(es) of its RVS(s) in HIPRVS
   RRs.


3.4  Multi-homed site


   A HIP node being attached to the network of a multi-homed site will
   possibly have multiple prefixes and addresses. This site might also
   be reachable via several distinct Rendezvous Servers. In addition to
   its set of IP address(es), a multi-homed end-host would store in the
   DNS its HI in a HIPHI RR, and possibly the IP address(es) of its site
   RVS(s) in HIPRVS RRs.


3.5  Site with a HAA


   A site which has an assigned HAA might store this HAA in a HIPHI RR.
   This might be useful to verify that a HIP node with a given "Type 2"
   HIT belongs to a site referenced by a given HAA.







Nikander & Laganier     Expires October 30, 2004                [Page 7]
Internet-Draft             HIP DNS Extensions                   May 2004



4.  Overview of using the DNS with HIP


4.1  Different types of HITs


   There are _currently_ two types of HITs. HITs of the first type
   consists just of the SHA-1 hash of the public key. HITs of the second
   type consist of a 63 bits Host Assigning Authority (HAA) field, and
   only the last 64 bits come from a SHA-1 hash of the Host Identity.
   This latter format for HIT is recommended for 'well known' systems.
   It is possible to support a resolution mechanism for these names in
   directories like DNS. Another use of HAA is in policy controls, see
   Section 6.


   The first bit of a HIT is used to differentiate between Type 1 and
   Type 2 format. If the first bit is 0 then the rest of a HIT is the
   127 upper bits of a SHA-1 hash of the Host Identity. If the first bit
   is 1 then the next 63 bits is the HAA field, and only the last 64
   bits come from the hash of the Host Identity.


   Additionnaly, this document defines an internal IPv6-compatible LSI
   representation format, to be used within the legacy IPv6-compatible
   API (e.g., socket over AF_INET6). The format of these IPv6-compatible
   LSIs is designed to avoid the most commonly occurring IPv6 addresses
   in RFC3596 [9]. An IPv6-compatible LSI representation is easily
   computed by replacing in the corresponding HIT the Bit 1 with NOT(Bit
   0). That way if Bit 0 is zero and Bit 1 is one, then the rest of the
   LSI is a 126 bits of a SHA-1 hash of the Host Identity. If Bit 0 is
   one and Bit 1 is zero, then the next 62 bits come from the HAA field,
   and only the last 64 bits come from the hash of the Host Identity.
   The figure belows shows how the specified IPv6-compatible LSI format
   tries to avoid collision:


      Allocation                   Prefix          Fraction of IPv6
                                   (binary)        Address Space
      ------------------------     --------        -------------


      IPv6 Address space           00              1/4
      Type 1 IPv6-compatible LSI   01              1/4
      Type 2 IPv6-compatible LSI   10              1/4
      IPv6 Address space           11              1/4



4.1.1  Host Assigning Authority (HAA) field


   The 63 bits of HAA supports two levels of delegation. The first is a
   registered assigning authority (RAA). The second is a registered
   identity (RI, commonly a company). The RAA is 23 bits with values
   assign sequentially by ICANN. The RI is 40 bits, also assigned




Nikander & Laganier     Expires October 30, 2004                [Page 8]
Internet-Draft             HIP DNS Extensions                   May 2004



   sequentially but by the RAA.


   As IPv6 "global site-local" addresses were proposed in the IPv6 WG to
   replace IPv6 site-local address, it is questionable if HIP needs a
   kind of "global site-local" HAA, which would be generated by a given
   site by setting the RAA field to 0 while the RI field is filled by
   either random or EUI-48 bits.


4.1.2  Reverse lookup based on Type 2 (HAA-based) HITs


   This can be used to create a resolution mechanism in the DNS. For
   example if FOO is RAA number 100 and BAR is FOO's 50th registered
   identity, and if 1385D17FC63961F5 is the hash of the Host Identity
   for www.bar.com, then by using DNS Binary Labels [5] there could be a
   reverse lookup record like:


      \[x1385D17FC63961F5/64].\[x32/40].\[x64/23].HIT.int   IN PTR
      www.bar.com.


    (Note that RFC2673 [5] is Experimental, and that there are some bad
   experiences with binary DNS labels. [7])


4.2  Storing HI and HIT in DNS


   Any conforming implementation might store Host Identifiers in a DNS
   HIPHI RDATA format. An implementation may also store a HIT along with
   its associated HI. If a particular form of a HI or HIT does not
   already have a specified RDATA format, a new RDATA-like format SHOULD
   be defined for the HI or HIT.


   During a transition period, instead of storing the HI or HIT in a
   HIPHI RR, the HIT MAY be stored in an AAAA RR. If a HIT is stored in
   an AAAA RR, it MUST be returned as the last item in the set of AAAA
   RRs returned to avoid as most as possible conflicts with non-HIP IPv6
   nodes.


4.3  Storing HAA in DNS


   Any conforming implementation might store a site's Host Assigning
   Authority in a DNS HIPHI RDATA format. A HAA MUST be stored similarly
   to a Type 2 HIT, while the least significant 64-bit are set to 0. If
   a particular form of a HAA does not already have an associated HIT
   specified RDATA format, a new RDATA-like format SHOULD be defined for
   the HIT/HAA.


4.4  Providing multiple IP addresses






Nikander & Laganier     Expires October 30, 2004                [Page 9]
Internet-Draft             HIP DNS Extensions                   May 2004



4.4.1  Storing Rendezvous Servers in the DNS


   The Rendezvous server (RVS) resource record indicates an address (or
   a FQDN resolvable into an address) towards which a HIP I1 packet
   might be sent to trigger the establishment of an association with the
   entity named by this resource record.


   An RVS receiving such an I1 would then forward it to the appropriate
   responder (i.e., the owner of the destination HIT in this I1). The
   responder will then complete the exchange with the initiator,
   possibly without ongoing help from the RVS.


   Any conforming implementation may store Rendezvous Server's IP
   address(es) or DNS name in a DNS HIPRVS RDATA format. If a particular
   form of a RVS reference does not already have a specified RDATA
   format, a new RDATA-like format SHOULD be defined for the RVS.


   During a transition period, similarly to what may happen with HITs,
   the RVS's IP address might be stored in an A or AAAA RR instead of a
   HIPRVS RR. If a RVS IP address is stored in an A or AAAA RR, it MUST
   be returned as the last item in the set of returned RRs to avoid as
   most as possible conflicts with non-HIP IPv6 nodes.


4.5  Initiating connections based on DNS names


   A Host Identity Protocol exchange SHOULD be initiated whenever the
   DNS lookup returns HIPHI resource records. Furthermore, if the DNS
   lookups also returns HIPRVS resource records, the addresses of these
   RVS SHOULD be put in the destination IP addresses list while
   initiating the afore mentioned HIP exchange. Since some hosts may
   choose not to have HIPHI information in DNS, hosts MAY implement
   support opportunistic HIP.


4.6  Address verification


   Upon return of an HIPHI RR, a host MUST always calculate the
   HI-derivative HIT to be used in the HIP exchange, as specified in the
   HIP architecture [11], while the HIT possibly embedded along SHOULD
   only be used as an optimisation (e.g., table lookup).













Nikander & Laganier     Expires October 30, 2004               [Page 10]
Internet-Draft             HIP DNS Extensions                   May 2004



5.  Storage Format


5.1  HIPHI RDATA format


   The RDATA for a HIPHI RR consists of a HIT type, an algorithm type, a
   HIT and a public key.


           0                   1                   2                   3
           0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
          |   HIT type    |   algorithm   |                               |
          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+      HIT                      |
          ~                                                               ~
          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
          |                                                               /
          /                          public key                           /
          /                                                               /
          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-|




5.1.1  RDATA format HIT type


   The algorithm type indicates the Host Identity Tag (HIT) type and the
   implied HIT format.


   The following values are defined:


      0 No HIT is present.
      1 A 128-bit Type 1 HIT is present.
      2 A 128-bit Type 2 HIT is present.
      3 A 128-bit HAA is present.


5.1.2  RDATA format algorithm type


   The algorithm type indicates the public key cryptographic algorithm
   and the implied public key field format.


   The following values are defined:


      0 No key is present.
      1 A DSA key is present, in the format defined in RFC2536 [4].
      2 A RSA key is present, in the format defined in RFC3110 [6].


5.1.3  RDATA format HIT


   There's currently two types of HITs, both 128-bit long, and a single
   type of HAA. Both of them are stored within a a single RDATA format.




Nikander & Laganier     Expires October 30, 2004               [Page 11]
Internet-Draft             HIP DNS Extensions                   May 2004



   This Field contain either:


   o  A *Type 1* HIT: binary prefix 0 concatenated with least
      significant 127-bit of the hash (e.g., SHA1) of the public key
      (Host Identity), which is possibly following in the HIPHI RR.
   o  A *Type 2* HIT: binary prefix 1 concatenated with a 63-bit HAA,
      and the least significant 64-bit of the hash (e.g., SHA1) of the
      public key (Host Identity), which is possibly following in the
      HIPHI RR.
   o  A HAA: binary prefix 1 concatenated with a 63-bit HAA, and the
      remaining 64-bit are set to 0.


5.1.4  RDATA format public key


   Both of the public key types defined in this document (RSA and DSA)
   inherit their public key formats from the corresponding KEY RR
   formats. The public key field contains the algorithm-specific portion
   of the KEY RR RDATA (i.e., all of the KEY RR DATA after the first
   four octets, corresponding to the same portion of the KEY RR that
   must be specified by documents that define a DNSSEC algorithm).


   In the future, if a new algorithm is to be used both by DNSSEC's KEY
   RR and HIPHI RR, it would probably use the same public key encodings
   for both RRs. Unless specified otherwise, the HIPHI public key field
   would contain the algorithm-specific portion of the KEY RR RDATA for
   the corresponding algorithm. Such an algorithm must still be
   designated for use with the HIP protocol and an algorithm type number
   must be assigned to it. Similarly to what happened with public key
   encodings, this algorithm type number is likely to be the same than
   the one used in DNSSEC, though it might not always be the case.


   The DSA key format is defined in RFC2536 [4].


   The RSA key format is defined in RFC3110 [6].


5.2  HIPRVS RDATA format


   The RDATA for a HIPRVS RR consists of a preference value, a
   Rendezvous server type and a Rendezvous server address.


           0                   1                   2                   3
        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
          |  preference   |     type      |                               |
          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+      Rendezvous server        |
          ~                                                               ~
          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+





Nikander & Laganier     Expires October 30, 2004               [Page 12]
Internet-Draft             HIP DNS Extensions                   May 2004



5.2.1  RDATA format precedence


   This is an 8-bit preference order for this record. This used to
   specify the preference given to this RR amongst others at the same
   owner. Lower values are preferred, and if there is a tie with some
   RRs, the order should be non-deterministic (e.g., round-robin).


5.2.2  RDATA format Rendezvous server type


   The Rendezvous server type indicates the format of the information
   stored in the Rendezvous server field.


   The following values are defined:


      0 Reserved.
      1 A 4-byte IPv4 address in network byte order is present.
      2 A 16-byte IPv6 address in network byte order is present.
      3 A variable length wire-encoded domain name as described in
      section 3.3 of RFC1035 [1]. The domain name MUST NOT be
      compressed.


5.2.3  RDATA format Rendezvous server


   The Rendezvous server field indicates an address (or a FQDN
   resolvable into an address) towards which a HIP I1 packet might be
   send in order to reach the entity named by this resource record.


   There are three different formats for the data portion of the
   Rendezvous server field:


   o  A 32-bit IPv4 address in network byte order.
   o  A 128-bit IPv6 address in network byte order.
   o  A variable length wire-encoded domain name as described in section
      3.3 of RFC1035 [1]. The domain name MUST NOT be compressed.


















Nikander & Laganier     Expires October 30, 2004               [Page 13]
Internet-Draft             HIP DNS Extensions                   May 2004



6.  Policy considerations


   There are a number of variables that will influence the HIP exchanges
   that each host must support. All HIP implementations MUST support at
   least 2 HIs, one to publish in the DNS and one for anonymous usage.
   Although anonymous HIs will be rarely used as responder HIs, they
   will be common for initiators. Support for multiple HIs is
   RECOMMENDED.












































Nikander & Laganier     Expires October 30, 2004               [Page 14]
Internet-Draft             HIP DNS Extensions                   May 2004



7.  Conjunction of multiple HIs with mutiple IPs


   The RRs defined in this document are "flat", in the sense that the IP
   addresses and HIs are associated to an FQDN on an equality basis. In
   the case where an FQDN is resolved into multiple HIs (HIPHI RRs) and
   IP addresses (A, AAAA or HIPRVS RRs), the requester cannot associate
   an IP address with a specific HI, nor the opposite.


   Considering the following DNS-IP load balancing model: Multiple
   initiators are querying a DNS server with A or AAAA RRs at a given
   FQDN. The DNS server replies with a round-robin ordered set of IP
   addresses, causing each initiator to connect to a different address
   (the first address of the set they received from the DNS). This model
   can be extended to HIP by having the DNS returning a round-robin
   ordered set of HIs, and IP addresses. But then the problem is that
   the initiator would need to map each of these HIs to a subset of the
   returned set of IP addresses. Hence, perhaps there is a need for
   having a "hierarchical" model for these RRs, which will allows to tie
   an HI to a specific subset of IP addresses, as illustrated in the
   figure below:



            FQDN                                  FQDN
             |                                    /  \
       +-----+-----+-----+                     HI1    HI2
      /     / \     \     \                    / \      \
   IP1   IP2   IP3   HI1   HI2              IP1   IP2    IP3



          "Flat" model          Vs.       "Hierarchical" model


   However, as HIs and Type 1 HITs are not yet resolvable using the DNS,
   implementing such a model would certainly prove to be difficult. The
   use of Distributed Hash Tables (DHTs) might help to resolve HIs, but
   at this point the whole story isn't known. In the absence of HI
   resolvability, a solution might be to index each IP addresses and HIs
   with a descriptor. This descriptor might be the HIT, or more
   efficiently, an additional 8-bit field. That way each HIPHI, HIPRVS,
   and HIPLOC (a new to-be-defined RR carrying the IP address of a HIP
   node) would contain an additionnal HI index field allowing to link a
   HI with a subset of IP addresses and vice versa.











Nikander & Laganier     Expires October 30, 2004               [Page 15]
Internet-Draft             HIP DNS Extensions                   May 2004



8.  Security Considerations


   The security considerations of the HIP DNS extensions still need to
   be investigated and documented.


   Man-in-the-middle attacks are difficult to defend against, without
   third-party authentication. A skillful MitM could easily handle all
   parts of HIP; but HIP indirectly provides the following protection
   from a MitM attack. If the responder's HI is retrieved from a signed
   DNS zone by the initiator, the initiator can use this to validate the
   R1 HIP packet.


   Likewise, if the initiator's HI is in a secure DNS zone, the
   responder can retrieve it after it gets the I2 HIP packet and
   validate that. However, since an initiator may choose to use an
   anonymous HI, it knowingly risks a MitM attack. The responder may
   choose not to accept a HIP exchange with an anonymous initiator.



































Nikander & Laganier     Expires October 30, 2004               [Page 16]
Internet-Draft             HIP DNS Extensions                   May 2004



9.  IANA Considerations


   IANA needs to allocate two new RR type code for HIPHI and HIPRVS from
   the standard RR type space.


   IANA needs to open a new registry for the HIPHI RR type for public
   key algorithms. Defined types are:


      0 is reserved
      1 is RSA
      2 is DSA


   Adding new reservations requires IETF consensus RFC2434 [1].


   IANA needs to open a new registry for the HIPHI RR HIT type. Defined
   types are:


      0 No HIT is present
      1 A 128-bit Type 1 HIT is present
      2 A 128-bit Type 2 HIT is present
      3 A 128-bit HAA is present


   Adding new reservations requires IETF consensus RFC2434 [1].


   IANA needs to open a new registry for the HIPRVS RR Rendezvous server
   type. Defined types are:


      0 is reserved
      1 is IPv4
      2 is IPv6
      3 is a wire-encoded uncompressed domain name


   Adding new reservations requires IETF consensus RFC2434 [1].



















Nikander & Laganier     Expires October 30, 2004               [Page 17]
Internet-Draft             HIP DNS Extensions                   May 2004



10.  Acknowledgments


   Some parts of this draft stem from [10]. This work is heavily
   influenced by [15], which serves as a model for this document.


   The authors would like to thanks the following people, who have
   provided thoughtful and helpful discussions and/or suggestions, that
   have improved this document: Rob Austein, Hannu Flinck, Miika Komu,
   Gabriel Montenegro.











































Nikander & Laganier     Expires October 30, 2004               [Page 18]
Internet-Draft             HIP DNS Extensions                   May 2004



11.  References


11.1  Normative references


   [1]   Mockapetris, P., "Domain names - implementation and
         specification", STD 13, RFC 1035, November 1987.


   [2]   Bradner, S., "Key words for use in RFCs to Indicate Requirement
         Levels", BCP 14, RFC 2119, March 1997.


   [3]   Narten, T. and H. Alvestrand, "Guidelines for Writing an IANA
         Considerations Section in RFCs", BCP 26, RFC 2434, October
         1998.


   [4]   Eastlake, D., "DSA KEYs and SIGs in the Domain Name System
         (DNS)", RFC 2536, March 1999.


   [5]   Crawford, M., "Binary Labels in the Domain Name System", RFC
         2673, August 1999.


   [6]   Eastlake, D., "RSA/SHA-1 SIGs and RSA KEYs in the Domain Name
         System (DNS)", RFC 3110, May 2001.


   [7]   Bush, R., Durand, A., Fink, B., Gudmundsson, O. and T. Hain,
         "Representing Internet Protocol version 6 (IPv6) Addresses in
         the Domain Name System (DNS)", RFC 3363, August 2002.


   [8]   Klensin, J., "Role of the Domain Name System (DNS)", RFC 3467,
         February 2003.


   [9]   Thomson, S., Huitema, C., Ksinant, V. and M. Souissi, "DNS
         Extensions to Support IP Version 6", RFC 3596, October 2003.


   [10]  Moskowitz, R., Nikander, P. and P. Jokela, "Host Identity
         Protocol", draft-moskowitz-hip-09 (work in progress), February
         2004.


   [11]  Moskowitz, R., "Host Identity Protocol Architecture",
         draft-moskowitz-hip-arch-05 (work in progress), October 2003.


   [12]  Nikander, P., "End-Host Mobility and Multi-Homing with Host
         Identity Protocol", draft-nikander-hip-mm-01 (work in
         progress), January 2004.


   [13]  Eggert, L. and J. Laganier, "Host Identity Protocol (HIP)
         Rendezvous Extensions", draft-eggert-hip-rvs-00 (work in
         progress), July 2004.





Nikander & Laganier     Expires October 30, 2004               [Page 19]
Internet-Draft             HIP DNS Extensions                   May 2004



11.2  Informative references


   [14]  Rescorla, E. and B. Korver, "Guidelines for Writing RFC Text on
         Security Considerations", draft-iab-sec-cons-00 (work in
         progress), August 2002.


   [15]  Richardson, M., "A method for storing IPsec keying material in
         DNS", draft-ietf-ipseckey-rr-09 (work in progress), February
         2004.



Authors' Addresses


   Pekka Nikander
   Ericsson Research Nomadic Lab


   JORVAS  FIN-02420
   FINLAND


   Phone: +358 9 299 1
   EMail: pekka.nikander@nomadiclab.com



   Julien Laganier
   LIP (CNRS-INRIA-ENSL-UCBL) & Sun Labs (Sun Microsystems)
   180, Avenue de l'Europe
   Saint Ismier CEDEX  38334
   France


   Phone: +33 476 188 815
   EMail: ju@sun.com





















Nikander & Laganier     Expires October 30, 2004               [Page 20]
Internet-Draft             HIP DNS Extensions                   May 2004



Intellectual Property Statement


   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights. Information
   on the IETF's procedures with respect to rights in IETF Documents can
   be found in BCP 78 and BCP 79.


   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.


   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard. Please address the information to the IETF at
   ietf-ipr@ietf.org.



Disclaimer of Validity


   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.



Copyright Statement


   Copyright (C) The Internet Society (2004). This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.



Acknowledgment


   Funding for the RFC Editor function is currently provided by the
   Internet Society.





Nikander & Laganier     Expires October 30, 2004               [Page 21]
