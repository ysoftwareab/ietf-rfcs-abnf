

   IPS                                                    Kevin Gibbons 
   Internet Draft                                            Josh Tseng 
   <draft-ietf-ips-isns-mib-07.txt>                  McDATA Corporation 
   Category: standards-track                                            
   Expires: January 2006                                  Tom McSweeney 
                                                                    IBM 
                                                                        
                                                                        
                                                          July 15, 2005 
 
    
    
                  Definitions of Managed Objects for iSNS 
                      (Internet Storage Name Service) 
    
Status of this Memo 
    
   By submitting this Internet-Draft, each author represents that any 
   applicable patent or other IPR claims of which he or she is aware 
   have been or will be disclosed, and any of which he or she becomes 
   aware will be disclosed, in accordance with Section 6 of BCP 79. 
    
   Internet-Drafts are working documents of the Internet Engineering 
   Task Force (IETF), its areas, and its working groups.  Note that 
   other groups may also distribute working documents as Internet-
   Drafts. 
    
   Internet-Drafts are draft documents valid for a maximum of six 
   months and may be updated, replaced, or obsoleted by other documents 
   at any time.  It is inappropriate to use Internet-Drafts as 
   reference material or to cite them other than as "work in progress". 
    
   The list of current Internet-Drafts can be accessed at 
   http://www.ietf.org/ietf/1id-abstracts.txt . 
    
   The list of Internet-Draft Shadow Directories can be accessed at 
   http://www.ietf.org/shadow.html . 
    
   This Internet-Draft will expire on January 2006. 
    
Copyright Notice 
    
   Copyright (C) The Internet Society (2005). All Rights Reserved. 
    
Abstract 
    
   The iSNS protocol provides storage name service functionality on an 
   IP network that is being used for iSCSI or iFCP storage. This draft 
   provides a mechanism to monitor and control multiple iSNS Client and 
   Servers, including information about registered objects in an iSNS 
   Server. 
    
    
   Gibbons               Expires January 2006                        1 

   Internet Draft              iSNS MIB                      July 2005 

   This memo is a product of the IP Storage (IPS) working group within 
   the Internet Engineering Task Force.  Comments are solicited and 
   should be addressed to the working group's mailing list at 
   ips@ece.cmu.edu and/or the authors. 
















































    
   Gibbons               Expires January 2006                        2 

   Internet Draft              iSNS MIB                      July 2005 

Table of Contents 
    
   Status of this Memo................................................1 
   Copyright Notice...................................................1 
   Abstract...........................................................1 
   Table of Contents..................................................3 
   1.  The Internet-Standard Management Framework.....................4 
   2.  Introduction...................................................4 
   3.  Technical Description..........................................4 
   3.1  iSNS Registered Objects.......................................4 
   3.2  iSNS MIB Structure............................................5 
   3.3  iSNS Server Info..............................................6 
   3.3.1 Control Node Information.....................................6 
   3.3.2  Discovery Domain Set (DDS)..................................6 
   3.3.3  Discovery Domain (DD).......................................6 
   3.3.4  Registered Storage Objects..................................6 
   3.3.4.1  Registered Entities.......................................7 
   3.3.4.2  Registered Portals........................................7 
   3.3.4.3  Registered Portal Groups..................................7 
   3.3.4.4  Registered iSCSI Nodes....................................7 
   3.3.4.5  Registered FC Ports.......................................7 
   3.3.4.6  Registered FC Nodes.......................................7 
   3.4  iSNS Client Info..............................................7 
   3.5  Multiple Client and Server Instances..........................8 
   3.5.1  Multiple iSNS Client Instances..............................8 
   3.5.2  Multiple iSNS Server Instances..............................8 
   3.6  iSNS Notifications............................................8 
   4.  Draft History..................................................8 
   5.  MIB Definition................................................10 
   6. IANA Considerations............................................82 
   7.  Security Considerations.......................................82 
   8.  Normative References..........................................82 
   9.  Informative References........................................83 
   10.  Authors' Addresses...........................................83 
   11.  Intellectual Property Statement..............................84 
   12.  Disclaimer of Validity.......................................84 
   13.  Copyright Statement..........................................84 
   14.  Acknowledgment...............................................84 
         









    
   Gibbons               Expires January 2006                        3 

   Internet Draft              iSNS MIB                      July 2005 

    
1.  The Internet-Standard Management Framework 
    
   For a detailed overview of the documents that describe the current 
   Internet-Standard Management Framework, please refer to section 7 of 
   RFC 3410 [RFC3410]. 
    
   Managed objects are accessed via a virtual information store, termed 
   the Management Information Base or MIB.  MIB objects are generally 
   accessed through the Simple Network Management Protocol (SNMP).  
   Objects in the MIB are defined using the mechanisms defined in the 
   Structure of Management Information (SMI).  This memo specifies a 
   MIB module that is compliant to the SMIv2, which is described in STD 
   58, RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 
   2580 [RFC2580]. 
    
2.  Introduction 
    
   The iSNS protocol can be used by IP based storage devices for 
   dynamic registration and discovery of storage devices in the network 
   [iSNS].  It has the capability to group devices into storage 
   Discovery Domains.  The iSNS MIB is designed to allow SNMP to be 
   used to monitor and manage iSNS servers and Clients to provide iSNS 
   capabilities. 
    
3.  Technical Description 
    
3.1  iSNS Registered Objects 
    
   The following entity relationship figure indicates the objects that 
   can be registered in the iSNS, and their relationship to each other. 
    
                    +--------------+    +-----------+ 
                    |    NETWORK   |1  *|           | 
                    |    ENTITY    |----|  PORTAL   | 
                    |              |    |           | 
                    +--------------+    +-----------+ 
                            |1            |1  |* 
                            |             |   | 
                            |             |*  | 
                            |   +----------+  | 
                            |   |  PORTAL  |  | 
                            |   |  GROUP   |  | 
                            |   +----------+  | 
                            |    |*           | 
                            |    |            | 
                            |*   |1           |* 
   +-----------+    +--------------+    +-----------+    +-----------+ 
   |    FC     |1  *|   STORAGE    |*  *| DISCOVERY |*  *| DISCOVERY | 
   |  DEVICE   |----|    NODE      |----|  DOMAIN   |----|  DOMAIN   | 
   |           |    |              |    |           |    |    SET    | 
   +-----------+    +--------------+    +-----------+    +-----------+ 
    
   Gibbons               Expires January 2006                        4 

   Internet Draft              iSNS MIB                      July 2005 

    
                * represents 0 to many possible relationships 
    
3.2  iSNS MIB Structure 
    
   The MIB is divided into sections for iSNS server information, iSNS 
   server registered objects information, iSNS client information, and 
   iSNS notifications. 
    
   +--------------+    +--------------+ 
   | MANAGED iSNS |1  *| CONTROL NODE | 
   |    SERVER    |----|    INFO      | 
   |     INFO     |    +--------------+ 
   +--------------+ 
          |1    |1 
          |     |      +--------------+ 
          |     |     *|  DDS AND DD  | 
          |     +------|     INFO     | 
          |            |              | 
          |            +--------------+ 
          | 
          |            +-------------+ 
          |           *| REGISTERED  | 
          +------------|  ENTITIES   | 
                       |    INFO     | 
                       +-------------+ 
    
   +--------------+    +-------------+ 
   | MANAGED iSNS |1  *| CONFIGURED  | 
   |    CLIENT(S) |----|  SERVERS    | 
   |     INFO     |    | FOR CLIENT  | 
   +--------------+    +-------------+ 
          |1    |1 
          |     |      +-------------+ 
          |     |     *| DISCOVERED  | 
          |     +------|  SERVERS    | 
          |            | BY CLIENT   | 
          |            +-------------+ 
          | 
          |            +-------------+ 
          |           *| REGISTERED  | 
          +------------|  ENTITIES   | 
                       | FROM CLIENT | 
                       +-------------+ 
    
   +-----------------+ 
   |     iSNS        | 
   |  NOTIFICATION   | 
   |     INFO        | 
   +-----------------+ 
    

    
   Gibbons               Expires January 2006                        5 

   Internet Draft              iSNS MIB                      July 2005 

   The sections that are required to implement for an iSNS Server and 
   iSNS Client are listed in the MIB compliance section. 
    
3.3  iSNS Server Info 
    
   The isnsSrvrInfo section provides the ability to monitor and manage 
   multiple iSNS Server instances.   The isnsSrvrInstTable table 
   provides information on each server instance.  This table is indexed 
   by the variable isnsSrvrInstIndex.  The table shows the current 
   settings for each iSNS server being managed.  The network address, 
   TCP and UDP ports being used by a server for iSNSP registrations and 
   queries can be modified. 
    
   The count of objects registered in each iSNS server instance is 
   shown in the table isnsNumObjTable.  The provides a summary of the 
   number DDs, DDSs, Entities, Portals, Portal Groups, iSCSI Nodes, and 
   iFCP FC Nodes and Ports. 
    
3.3.1  Control Node Information 
    
   As defined in the iSNS specification, control nodes are objects that 
   have been registered with the server and are allowed to manage the 
   iSNS server.  These control nodes are identified by their iSCSI Node 
   Name or FC Port Name.  This section of the MIB provides the ability 
   to view and update the currently registered set of control nodes. 
    
3.3.2  Discovery Domain Set (DDS) 
    
   The isnsDdsInfo section provides information on the registered 
   Discovery Domain Sets, and their DDS members, for a specific iSNS 
   Server instance.  DDSs provide a method to group registered 
   Discovery Domains.  As described in the iSNS Specification [iSNS], a 
   DDS can be enabled or disabled.  Discovery Domains that are 
   contained in an enabled DDS are enforced by an iSNS Server.  If the 
   server has enabled SNMP control, this section allows DDSs to be 
   created, modified, and deleted. 
    
3.3.3  Discovery Domain (DD) 
    
   The isnsDdInfo section provides information on the registered 
   Discovery Domains, and their DD members, for a specific iSNS Server 
   instance.  Discovery Domains are collections of storage nodes and 
   portals that are allowed to discover one another.  DD members can be 
   iSCSI nodes, Entity Portals, or iFCP nodes. If the server has 
   enabled SNMP control, this section allows DDs to be created, 
   modified, and deleted. 
    
3.3.4  Registered Storage Objects 
    
   The isnsReg section provides information on the registered storage 
   objects for a specific iSNS Server instance.  This section is 

    
   Gibbons               Expires January 2006                        6 

   Internet Draft              iSNS MIB                      July 2005 

   divided into subsections for Entities, Portals, iSCSI Nodes, as well 
   as iFCP Port and Node information. 
    
3.3.4.1  Registered Entities 
    
   The isnsRegEntityInfo section provides information on the registered 
   entities.  Entities are collections of storage nodes and portals. 
    
3.3.4.2  Registered Portals 
    
   The isnsRegPortalInfo section provides information on the registered 
   portals for a specific iSNS Server instance.  Portals are logical 
   IP-Address, TCP/UDP Port pairs that provide access to storage nodes 
   contained in the associated Entity. 
    
3.3.4.3  Registered Portal Groups 
    
   The isnsRegPortalGroupInfo section provides information on the 
   registered portal groups for a specific iSNS Server instance.  As 
   described in iSCSI [iSCSI], Portal Groups provide a mapping between 
   Portals and iSCSI Storage Nodes contained in an Entity. 
    
3.3.4.4  Registered iSCSI Nodes 
    
   The isnsRegIsciNodeInfo section provides information on the 
   registered iSCSI Nodes for a specific iSNS Server instance. The 
   iSCSI nodes are individual storage targets or initiators. 
    
3.3.4.5  Registered FC Ports 
    
   The isnsRegFcPortInfo section provides information on the registered 
   FC Ports for a specific iSNS Server instance. The FC Ports are ports 
   associated with an iFCP gateway. 
    
3.3.4.6  Registered FC Nodes 
    
   The isnsRegFcNodeInfo section provides information on the registered 
   FC Nodes for a specific iSNS Server instance. The FC nodes are 
   individual storage devices associated with an iFCP gateway. 
    
3.4  iSNS Client Info 
    
   The isnsClntInfo section provides information about each managed 
   iSNS client instance.  The isnsClntInstTable table contains 
   information about each managed iSNS Client.  The network address, 
   TCP and UDP port used for iSNSP can be modified.  The type of method 
   being used for iSNS server discovery, supporting the methods 
   described in the iSNS specification, is indicated for each client 
   instance being managed.  The specified options are DHCP, SLP, 
   multicast iSNS heartbeat, broadcast iSNS heartbeat, configured list 
   of iSNS servers, and other.  If used, the multicast group is 

    
   Gibbons               Expires January 2006                        7 

   Internet Draft              iSNS MIB                      July 2005 

   specified in the isnsClntInstDiscMcGrp variable of the 
   isnsClntInstTable table. 
    
   If a client instance uses the discovery option "configured server 
   list", then the list of configured servers the client may use are in 
   the table isnsClntCfgSrvrTable.  This is the user specified list of 
   iSNS servers, specified for each iSNS client instance, that the 
   client may establish a connection with. 
    
   When a client discovers an iSNS server, it is listed in the table 
   isnsClntDscvrdSrvrTable.  This is the list of iSNS servers, for each 
   iSNS client instance, that have been discovered.  The method used to 
   discover the server is indicated in isnsClntDscvrdSrvrDiscMthd. 
    
   The table isnsClntRegEntityTable indicates the Entities, for each 
   iSNS Client, that have been registered in discovered servers. 
    
3.5  Multiple Client and Server Instances 
    
   The management of multiple instances of iSNS clients and servers by 
   the agent is supported. 
    
3.5.1  Multiple iSNS Client Instances 
    
   A single SNMP management agent may manage multiple iSNS client 
   instances.  As described in Section 3.4, each managed iSNS client 
   instance has an entry in the table isnsClntInstTable. 
    
3.5.2  Multiple iSNS Server Instances 
    
   A single SNMP management agent may manage multiple iSNS server 
   instances.  As described in Section 3.3, each managed iSNS server 
   instance has an entry in the table isnsSrvrInstTable.   
    
3.6  iSNS Notifications 
    
   The isnsNotification section provides SNMP notifications for both 
   iSNS Client and iSNS Server state changes. 
    
4.  Draft History 
    
   This section describes the changes to the MIB that have occurred 
   during the standards process, and will be removed prior to 
   completion. 
    
         -- Revision History 
         REVISION "200507150000Z" 
         DESCRIPTION " v1.11 (7/15/05) changes: 
               Removed Inet Address from isnsClntInstTable 
               Added Inet Address to isnsClntRegEntityTable 
    
         REVISION "200406210000Z" 
    
   Gibbons               Expires January 2006                        8 

   Internet Draft              iSNS MIB                      July 2005 

         DESCRIPTION " v1.10 (5/23/04) changes: 
               Updated descriptions to use proper SNMP context 
                 wording 
               Clarified wording for multiple client and server 
                 instance 
                     " 
         REVISION "200307220000Z" 
         DESCRIPTION " v1.9 (7/22/03) changes: 
               Added Portal Group objects for iSCSI and iSNS drft 
                 20 
               Added support for multiple server and client 
                 instances 
               Updated reference versions 
                     " 
         REVISION "200301100000Z" 
         DESCRIPTION " v1.8 (1/10/03) changes: 
               added PPN attribute for support of iSNS draft 16 
               Updated reference versions 
                     " 
         REVISION "200212100000Z" 
         DESCRIPTION " v1.7 (12/10/02) changes: 
               Changed unicastCfg name to addrCfg 
               Corrected typographical errors 
               Updated reference versions 
                     " 
         REVISION "200210010000Z" 
         DESCRIPTION " v1.6 (10/01/02) changes: 
               Added support for portals that are explicitly 
                  added to a discovery domain. 
               Made all revision dates snmp compliant. 
                     " 
         REVISION "200205150000Z" 
         DESCRIPTION " v1.5 (05/15/02) changes: 
               Modified based on feedback from Keith McCloghrie 
                  and others. 
               Aligned design and included new FC Mgt MIB. 
               Added support for attributes in iSNS Spec v10. 
               Added REFERENCES and clarified object value 
                  ranges. 
               Added Notification/Traps to the MIB. 
               Used BITS construct for all bitmaps. 
               Modifed FC Port table - was iFCP Node table 
               Moved Id Next variables above table it is used 
                  for. 
               Removed vendor specific options for iSNS control. 
                     " 
         REVISION "200111200000Z" 
         DESCRIPTION " v1.4 (11/15/01) changes: 
               Modified structures based on feedback from Keith 
               McCloghrie and others in the IPS working group. 
               We would like to thank Keith McCloghrie for his 
               extensive feedback. 
    
   Gibbons               Expires January 2006                        9 

   Internet Draft              iSNS MIB                      July 2005 

                     " 
         REVISION "200110100000Z" 
         DESCRIPTION " v1.3 (10/10/01) changes: 
               added attributes to be consistent with the latest 
               iSNS Specification. 
                     " 
         REVISION "200108140000Z" 
         DESCRIPTION " v1.2 (8/14/01) changes: 
               corrected format issues detected by SMICNG. 
                     " 
         REVISION "200108100000Z" 
         DESCRIPTION " v1.1 (8/10/01) changes: 
               removed unused isnsObjInfo branch. 
               removed table indexes that are available in other 
                 tables. 
               moved DD Member Status to the control branch. 
               reversed the order of the Portal indexes. 
               placed range limitations on EidId and 
                 IscsiNameId. 
               updated variable descriptions. 
               removed table entries that were redundant with 
                 table indexes. 
                     " 
         REVISION "200107100000Z" 
         DESCRIPTION " v1.0 (7/10/01) The initial revision of 
                this module." 
    
5.  MIB Definition  
        
ISNS-MGMT-MIB DEFINITIONS ::= BEGIN 
 
-- 
-- Copyright (C) The Internet Society 2005.  The initial 
-- version of this MIB module was published in RFC XXXX; for 
-- full legal notices see the RFC itself.  Supplementary 
-- information may be available on 
-- http://www.ietf.org/copyrights/ianamib.html. 
-- 
 
IMPORTS 
    Unsigned32, 
    Integer32, 
    MODULE-IDENTITY, 
    OBJECT-TYPE, 
    NOTIFICATION-TYPE, 
    TimeTicks, 
-- some compilers want BITS imported 
--    BITS, 
    experimental 
         FROM SNMPv2-SMI 
 
    OBJECT-GROUP, 
    NOTIFICATION-GROUP, 
    MODULE-COMPLIANCE 
    
   Gibbons               Expires January 2006                       10 

   Internet Draft              iSNS MIB                      July 2005 

         FROM SNMPv2-CONF 
 
    TEXTUAL-CONVENTION, 
    DateAndTime, 
    TruthValue, 
    RowStatus 
         FROM SNMPv2-TC 
 
--  From RFC 2571 
    SnmpAdminString 
         FROM SNMP-FRAMEWORK-MIB 
 
--  From RFC 3291 
    InetAddressType, 
    InetAddress 
         FROM INET-ADDRESS-MIB 
 
--  From IETF Fibre Channel Management MIB, RFC 4044 
    FcNameIdOrZero, 
    FcAddressIdOrZero 
         FROM FC-MGMT-MIB 
      ; 
 
isnsMgmtMIB  MODULE-IDENTITY 
      LAST-UPDATED "200507150000Z" 
      ORGANIZATION "IETF IPS Working Group" 
      CONTACT-INFO " 
        Attn: Kevin Gibbons 
              McDATA Corporation 
              4555 Great America Pkwy 
              Santa Clara, CA 95054-1208 
              USA 
              Tel: +1 408 567-5765 
              Fax: +1 408 567-0063 
              Email: kevin.gibbons@mcdata.com 
 
              Josh Tseng 
              McDATA Corporation 
              4555 Great America Pkwy 
              Santa Clara, CA 95054-1208 
              USA 
              Tel: +1 408 519-3700 
              Fax: +1 408 519-3705 
              Email: joshtseng@yahoo.com 
 
              Tom McSweeney 
              IBM Corporation 
              600 Park Offices Drive 
              Research Triangle Park, NC 27709 
              USA  
              Tel: +1 919 855-5169 
              Email: tommcs@us.ibm.com 
                    " 
      DESCRIPTION "The MIB for internet Storage Name Service 
                   (iSNS) Management." 
    
   Gibbons               Expires January 2006                       11 

   Internet Draft              iSNS MIB                      July 2005 

 
      -- Revision History 
      REVISION "200507150000Z" 
      DESCRIPTION "v1.0 (7/15/05) The initial revision of 
             this module." 
        -- no IETF branch yet assigned 
              ::=  { experimental 4370 } 
 
DiscoveryDomainSetId ::= TEXTUAL-CONVENTION 
    DISPLAY-HINT   "d" 
    STATUS         current 
    DESCRIPTION 
"The unique Discovery Domain Set Identifier associated with a 
 Discovery Domain Set (DDS)." 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         Unsigned32 ( 1 .. 4294967295 ) 
 
IsnsDdsStatusId ::= TEXTUAL-CONVENTION 
    STATUS         current 
    DESCRIPTION 
"The bitmap indicating the status of a Discovery Domain 
 Set (DDS) registered in the iSNS. 
              Bit           Status 
           ---------       --------- 
               0            enabled 
 
 If bit(0) is set to true then the DDS is Enabled.  Otherwise 
 the DDS is disabled." 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         BITS {  
                      enabled(0) 
                        } 
 
DiscoveryDomainId ::= TEXTUAL-CONVENTION 
    DISPLAY-HINT   "d" 
    STATUS         current 
    DESCRIPTION 
"The unique Discovery Domain Identifier (DD_ID) associated 
 with each Discovery Domain (DD).  This can be used to 
 uniquely index and reference a DD.  New storage nodes  
 are automatically added to the default DD if 
 isnsSrvrInstDfltDdDdsStatus is set to inDefaultDdAndDds." 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         Unsigned32 ( 1 .. 4294967295 ) 
 
DdFeatureBitmapId ::= TEXTUAL-CONVENTION 
    STATUS         current 
    DESCRIPTION 
"The bitmap indicating the types of features 
 each Discovery Domain (DD) has. 
              Bit           Status 
           ---------       --------- 
               0            Boot List 
  
 Boot List: this feature indicates that the targets 
    
   Gibbons               Expires January 2006                       12 

   Internet Draft              iSNS MIB                      July 2005 

 in this DD provide boot capabilities for the member 
 initiators.  Setting the bit to true (1) indicates 
 the feature is enabled.  Otherwise it is disabled." 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         BITS {  
                      bootlist(0) 
                        } 
 
DdDdsModificationBitmap ::= TEXTUAL-CONVENTION 
    STATUS         current 
    DESCRIPTION 
"The methods that can be used to modify the Discovery 
 Domain and Discovery Domain Sets in the iSNS Server 
 instance. 
     Bit Field            Flag Description 
     ---------   ------------------------------------ 
         0       SNMP protocol is allowed to modify DD's/DDS's 
         1       Control Nodes are allowed 
         2       Target iSCSI Nodes are allowed 
         3       Initiator iSCSI Nodes are allowed 
         4       Target iFCP Ports are allowed 
         5       Initiator iFCP Ports are allowed 
 
 Setting a bit to true (1) indicates the feature is 
 enabled.  Otherwise it is disabled." 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 3" 
    SYNTAX         BITS {  
                      snmpEnabled(0), 
                      controlNode(1), 
                      targetIscsiNode(2), 
                      initiatorIscsiNode(3), 
                      targetIfcpNode(4), 
                      initiatorIfcpNode(5) 
                        } 
 
EntityIndexId ::= TEXTUAL-CONVENTION 
    DISPLAY-HINT   "d" 
    STATUS         current 
    DESCRIPTION 
"This textual convention is used as an identifier for 
 the unique integer Entity Index associated with a storage 
 entity that is registered in an iSNS Server.  The index 
 is unique within an iSNS Server instance." 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         Unsigned32 ( 1 .. 4294967295 ) 
 
EntityProtocolId ::= TEXTUAL-CONVENTION 
    STATUS         current 
    DESCRIPTION 
"The type of protocol that is supported by this entity. 
 
           Type Value       Entity Type 
           ----------       ----------- 
              1             No Protocol 
              2             iSCSI 
    
   Gibbons               Expires January 2006                       13 

   Internet Draft              iSNS MIB                      July 2005 

              3             iFCP 
            All Others      As in the iSNS Specification 
" 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         INTEGER { noProtocol(1), 
                             iSCSI(2), 
                             iFCP(3) } 
 
PortalGroupIndexId ::= TEXTUAL-CONVENTION 
    DISPLAY-HINT   "d" 
    STATUS         current 
    DESCRIPTION 
"The identifier for the unique integer Portal Group Index 
 associated with a iSNS registered Portal Group object." 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         Unsigned32 ( 1 .. 4294967295 ) 
 
PortalIndexId ::= TEXTUAL-CONVENTION 
    DISPLAY-HINT   "d" 
    STATUS         current 
    DESCRIPTION 
"The identifier for the unique integer Portal Index 
 associated with a storage portal." 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         Unsigned32 ( 1 .. 4294967295 ) 
 
PortalPortId ::= TEXTUAL-CONVENTION 
    DISPLAY-HINT   "d" 
    STATUS         current 
    DESCRIPTION 
"The UDP or TCP port number being used by a Portal for an 
 Entity." 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX             Integer32 ( 0 .. 65535 ) 
 
PortalPortTypeId ::= TEXTUAL-CONVENTION 
    STATUS         current 
    DESCRIPTION 
"The UDP or TCP port type being used by a Portal for an 
 Entity." 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         INTEGER { udp(1), tcp(2) } 
 
PortalGroupTagIdOrZero ::= TEXTUAL-CONVENTION 
    DISPLAY-HINT   "d" 
    STATUS         current 
    DESCRIPTION 
"The Portal Group Tag (PGT) TC for iSCSI Portal Group 
 objects registered in the iSNS.  The value of zero 
 indicates a NULL value, or no association, between the 
 associated Portal and iSCSI Node." 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         Integer32 ( 0 .. 65535 ) 
 
PortalSecurityBitmapId ::= TEXTUAL-CONVENTION 
    
   Gibbons               Expires January 2006                       14 

   Internet Draft              iSNS MIB                      July 2005 

    STATUS         current 
    DESCRIPTION 
"Indicates security attribute settings for the Portal as 
 registered in the Portal Security Bitmap attribute.  The 
 valid bit must be set in order for this attribute to contain 
 valid information.  The definition of the bitmap is based on 
 the iSNS Specification [iSNS].  The representation of each 
 bit setting (0 or 1) is indicated below. 
 
     Bit Field            Flag Description 
     ---------   ------------------------------------ 
        0        1 = Tunnel Mode Preferred; 0 = No Preference 
        1        1 = Transport Mode Preferred; 0 = No Preference 
        2        1 = PFS Enabled; 0 = PFS Disabled 
        3        1 = Aggressive Mode Enabled; 0 = Disabled 
        4        1 = Main Mode Enabled; 0 = MM Disabled 
        5        1 = IKE/IPSec Enabled; 0 = IKE/IPSec Disabled 
        6        1 = Bitmap VALID; 0 = INVALID 
 
" 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX        BITS {  
                      tunnelModePreferred(0), 
                      transportModePreferred(1), 
                      pfsEnabled(2), 
                      agressiveModeEnabled(3), 
                      mainModeEnabled(4), 
                      ikeIpsecEnabled(5), 
                      bitmapVALID(6) 
                       } 
 
NodeIndexId ::= TEXTUAL-CONVENTION 
    DISPLAY-HINT   "d" 
    STATUS         current 
    DESCRIPTION 
"The identifier for the unique integer Node Index associated 
 with a storage node." 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         Unsigned32 ( 1 .. 4294967295 ) 
 
NodeIndexIdOrZero ::= TEXTUAL-CONVENTION 
    DISPLAY-HINT   "d" 
    STATUS         current 
    DESCRIPTION 
"The identifier for the unique integer Node Index associated 
 with a storage node, or the value zero. The additional value 
 of zero is specific to each managed object, and must be 
 defined as part of the description of any managed object 
 which uses this syntax" 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         Unsigned32 ( 0 .. 4294967295 ) 
 
NodeTypeId ::= TEXTUAL-CONVENTION 
    STATUS         current 
    DESCRIPTION 
    
   Gibbons               Expires January 2006                       15 

   Internet Draft              iSNS MIB                      July 2005 

"The Node Type bit-map defines the functions of this node.  
 The definitiions of each setting are defined in the iSNS 
 Specification [iSNS]. 
              Bit          Node Type 
           ---------       --------- 
              0            Control 
              1            Initiator 
              2            Target 
" 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         BITS {  
                      control(0), 
                      initiator(1), 
                      target(2) 
                        } 
 
CosBitmapId ::= TEXTUAL-CONVENTION 
    STATUS         current 
    DESCRIPTION 
"This bit-map indicates the Fibre Channel Class of Service 
 types that are supported by the registered port. 
 
     Bit Field          Flag Description 
     ---------          ---------------- 
        0             Fibre Channel Class 3 Supported   
        1             Fibre Channel Class 2 Supported 
 
 Setting a bit to true (1) indicates the class of service is 
 supported." 
    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         BITS {  
                      class3(0), 
                      class2(1) 
                        } 
 
ScnBitmapId ::= TEXTUAL-CONVENTION 
    STATUS         current 
    DESCRIPTION 
"The State Change Notification (SCN) bitmap for a node as 
 defined in the iSNS Specification [iSNS].  A set bit (1) 
 indicates the type of SCN for the bitmap as follows: 
 
     Bit Field          Flag Description 
     ---------          ---------------- 
        0               INITIATOR AND SELF INFORMATION ONLY 
        1               TARGET AND SELF INFORMATION ONLY  
        2               MANAGEMENT REGISTRATION/SCN 
        3               REGISTERED OBJECT REMOVED 
        4               REGISTERED OBJECT ADDED 
        5               REGISTERED OBJECT UPDATED 
        6               DD/DDS MEMBER REMOVED (MGT REG/SCN 
                          ONLY) 
        7               DD/DDS MEMBER ADDED (MGT REG/SCN 
                          ONLY) 
" 
    
   Gibbons               Expires January 2006                       16 

   Internet Draft              iSNS MIB                      July 2005 

    REFERENCE      "draft-ietf-ips-iSNS-22.txt, Section 6" 
    SYNTAX         BITS {  
                      initiatorAndSelfOnly(0), 
                      targetAndSelfOnly(1), 
                      managementRegistrationScn(2), 
                      registeredObjectRemoved(3), 
                      registeredObjectAdded(4), 
                      registeredObjectUpdated(5), 
                      ddOrDdsMemberRemoved(6), 
                      ddOrDdsMemberAdded(7) 
                        } 
 
SrvrDscvryMthdId ::= TEXTUAL-CONVENTION 
    STATUS         current 
    DESCRIPTION 
"This bitamp is used to indicate the iSNS Server discovery 
 methods that are supported and enabled on an iSNS Server.  
 The options are DHCP, SLP, multicast group iSNS heartbeat, 
 broadcast group iSNS heartbeat, configured server list, and 
 other.  The iSNS Server may also support additional discovery 
 methods not indicated.  The bitmap also is used to indicate 
 the type of discovery being used by an iSNS Client instance.  
 If being used, the configured server list for a specific iSNS 
 client is specified in isnsClntCfgSrvrTable table.  If used, 
 the multicast group is specified in isnsClntInstDiscMcGrp." 
    SYNTAX         BITS { 
                 dhcp(0), 
                 slp(1), 
                 multicastGroupHb(2), 
                 broadcastHb(3), 
                 cfgdServerList(4), 
                 other(5) 
                            } 
 
-- 
-- Internet Storage Name Service Management 
-- 
 
isnsObj                     OBJECT IDENTIFIER ::= 
                                { isnsMgmtMIB 1 } 
isnsConformance             OBJECT IDENTIFIER ::= 
                                { isnsMgmtMIB 2 } 
 
-- 
-- iSNS Server instance managed objects -------------------- 
-- 
 
isnsSrvrInfo OBJECT IDENTIFIER ::= { isnsObj 1 } 
 
isnsSrvrInstTable           OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsSrvrInstEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"This table provides a list of the iSNS Server instances 
    
   Gibbons               Expires January 2006                       17 

   Internet Draft              iSNS MIB                      July 2005 

 that are managed through the same SNMP context." 
    ::= { isnsSrvrInfo 1 } 
 
isnsSrvrInstEntry           OBJECT-TYPE 
    SYNTAX                  IsnsSrvrInstEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"This is a row in the iSNS Server instance table.  The number 
 of rows is dependent on the number of iSNS Server instances 
 that are being managed through same SNMP context." 
    INDEX   { isnsSrvrInstIndex } 
    ::= { isnsSrvrInstTable 1 } 
 
IsnsSrvrInstEntry ::= 
    SEQUENCE {  
       isnsSrvrInstIndex              Unsigned32, 
       isnsSrvrInstName               SnmpAdminString, 
       isnsSrvrInstIsnsVersion        Integer32, 
       isnsSrvrInstDescription        SnmpAdminString, 
       isnsSrvrInstAddressType        InetAddressType, 
       isnsSrvrInstAddress            InetAddress, 
       isnsSrvrInstTcpPort            Integer32, 
       isnsSrvrInstUdpPort            Integer32, 
       isnsSrvrInstUptime             TimeTicks, 
       isnsSrvrInstRole               INTEGER, 
       isnsSrvrInstDiscMthdsEnbld     SrvrDscvryMthdId, 
       isnsSrvrInstDiscMcGrpType      InetAddressType, 
       isnsSrvrInstDiscMcGrp          InetAddress, 
       isnsSrvrInstEsiNonRespThrshld  Integer32, 
       isnsSrvrInstCntrlNodeAuth      INTEGER, 
       isnsSrvrInstEnblCntrlNdeMgtScn TruthValue, 
       isnsSrvrInstDfltDdDdsStatus    INTEGER,  
       isnsSrvrInstUpdateDdDdsSpprtd  DdDdsModificationBitmap, 
       isnsSrvrInstUpdateDdDdsEnbld   DdDdsModificationBitmap 
             } 
 
isnsSrvrInstIndex           OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 1 .. 4294967295 ) 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"This managed object uniquely identifies the iSNS Server being 
 managed by the SNMP context, and is the key for this table.  
 This is an instance index for each iSNS Server being managed.  
 The value of this managed object is used elsewhere in the MIB 
 to reference specific iSNS Servers." 
    ::= { isnsSrvrInstEntry 1 } 
 
isnsSrvrInstName            OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..255)) 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION 
"A name that can be assigned to the iSNS Server instance.  
    
   Gibbons               Expires January 2006                       18 

   Internet Draft              iSNS MIB                      July 2005 

 If not configured, the value is an empty string." 
    ::= { isnsSrvrInstEntry 2 } 
 
isnsSrvrInstIsnsVersion     OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION  
"The iSNS version value as contained in messages received 
 from the current primary server.  The header of each iSNSP 
 message contains the iSNS version of the sender.  If 
 unknown the reported value is 0." 
    REFERENCE               "draft-ietf-ips-iSNS-22.txt" 
    DEFVAL                  { 1 } 
    ::= { isnsSrvrInstEntry 3 } 
 
isnsSrvrInstDescription     OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..255)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"This provides a description and detail information 
 about this server.  If this server instance is utilizing 
 the product of a particular 'vendor' or 'open source', then 
 this managed object contains that vendor's name and version, 
 or open source name and version.  Otherwise, it contains 
 the empty string.  The format of the string 
 is as follows: 'Vendor/Open Source Name, Vendor/Open Source 
 Version, Vendor/Open Source Defined Information'. 
 
       Field            Description 
     ---------        ---------------- 
    Vendor/OS Name    The name of the vendor or open 
                      source (if one exists) 
    Vendor/OS Version The version of the vendor or 
                      open source product 
    Vendor/OS Defined This follows the second comma in the 
                      string, if one exists, and is vendor 
                      or open source developer defined 
" 
    ::= { isnsSrvrInstEntry 4 } 
 
isnsSrvrInstAddressType     OBJECT-TYPE 
    SYNTAX                  InetAddressType 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION 
"The type of Inet address in isnsSrvrInstAddress. If not 
 set, then the value is unknown(0)." 
    ::= { isnsSrvrInstEntry 5 } 
 
isnsSrvrInstAddress         OBJECT-TYPE 
    SYNTAX                  InetAddress 
    MAX-ACCESS              read-write 
    STATUS                  current 
    
   Gibbons               Expires January 2006                       19 

   Internet Draft              iSNS MIB                      July 2005 

    DESCRIPTION 
"The address that this iSNS server instance is receiving 
 iSNSP registrations and queries on.  If currently not 
 configured, then the value is an empty string." 
    ::= { isnsSrvrInstEntry 6 } 
 
isnsSrvrInstTcpPort         OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION 
"Indicates the TCP port this iSNS instance is accepting 
 iSNSP messages on, generally the iSNS well known port.  
 The well known TCP port for iSNSP is 3205.  If TCP is 
 not supported by this server instance, then the value 
 is 0." 
    ::= { isnsSrvrInstEntry 7 } 
 
isnsSrvrInstUdpPort         OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION 
"Indicates the UDP port this iSNS instance is accepting 
 iSNSP messages on, generally the iSNS well known port.  
 The well known UDP port for iSNSP is 3205.  If UDP is 
 not supported by this server instance, then the value 
 is 0." 
    ::= { isnsSrvrInstEntry 8 } 
 
isnsSrvrInstUptime          OBJECT-TYPE 
    SYNTAX                  TimeTicks 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION  
"The time that this iSNS Server instance has been active.  In 
 otherwords, the time since last reinitialization." 
    ::= { isnsSrvrInstEntry 9 } 
 
isnsSrvrInstRole            OBJECT-TYPE 
    SYNTAX                  INTEGER { notSet(0), 
                                      server(1),  
                                      serverNotPrimary(2) } 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION  
"Indicates the current operational role of this iSNS Server 
 instance.  If an iSNS implementation has the ability to have 
 a server instance take on different roles, then this managed 
 object indicates the current role. 
       Value             Description 
     ---------         ---------------- 
      notSet           The iSNS Server role is not configured. 
      server           The iSNS Server instance is operating 
                       as a primary iSNS Server. 
    
   Gibbons               Expires January 2006                       20 

   Internet Draft              iSNS MIB                      July 2005 

      serverNotPrimary The iSNS Server instance can be a 
                       primary iSNS Server, but is not 
                       currently acting as a primary." 
    DEFVAL                  { server } 
    ::= { isnsSrvrInstEntry 10 } 
 
isnsSrvrInstDiscMthdsEnbld  OBJECT-TYPE 
    SYNTAX                  SrvrDscvryMthdId 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION  
"Indicates the discovery methods currently supported and 
 enabled on this iSNS Server instance.  This bitmap can be 
 used by a client to determine what discovery methods should 
 be used for this iSNS Server.  Additional methods of 
 discovery may also be supported." 
    ::= { isnsSrvrInstEntry 11 } 
 
isnsSrvrInstDiscMcGrpType   OBJECT-TYPE 
    SYNTAX                  InetAddressType 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION 
"The type of Inet address in isnsSrvrInstDiscMcGrp. If not 
 set, then the value is unknown(0)." 
    ::= { isnsSrvrInstEntry 12 } 
 
isnsSrvrInstDiscMcGrp       OBJECT-TYPE 
    SYNTAX                  InetAddress 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION 
"The multicast group that iSNS Heartbeat messages are 
 sent to if multicast based discovery has been enabled 
 for this server instance.  If not configured, then 
 the value is an empty string." 
    ::= { isnsSrvrInstEntry 13 } 
 
isnsSrvrInstEsiNonRespThrshld OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION  
"ESI Non-Response Threshold - determines the number of ESI 
 messages that will be sent without receiving a response 
 before an entity is deregistered from the iSNS database.  
 If set to 0 then Entities will never be deregistered due to 
 non-receipt of ESI messages." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 3.4" 
    DEFVAL                  { 3 } 
    ::= { isnsSrvrInstEntry 14 } 
 
isnsSrvrInstCntrlNodeAuth   OBJECT-TYPE 
    SYNTAX                  INTEGER { anyNode(1),  
                                      viewNodes(2), 
    
   Gibbons               Expires January 2006                       21 

   Internet Draft              iSNS MIB                      July 2005 

                                      modifyNodes(3), 
                                      noSnmpAccess(4) } 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"Control Nodes can be configured to receive management SCNs 
 indicating network updates, including information on 
 modification to DDs and DDSs.  This managed object indicates 
 if SNMP has access to control node information and, if it 
 does, which type of storage nodes can register with the 
 server instance as a control node.  Possible values for this 
 managed object are: 
       Value              Description 
     ---------          ---------------- 
     anyNode      Any storage node MAY register as a control 
                  node 
     viewNodes    Specified nodes MAY register as control 
                  nodes, SNMP view only 
     modifyNodes  Specified nodes MAY register as control 
                  nodes, SNMP CAN modify list of nodes 
     noSnmpAccess Control node information is not accessible 
                  via SNMP 
 If only specified nodes are allowed to register as control 
 nodes, and SNMP is allowed to modify the list of control 
 nodes, then they SHALL be listed in the 
 isnsCntlNodeIscsiTable and isnsCntlNodeFcPortTable. 
 If SNMP is not allowed to view or modify the list of control 
 nodes, then this managed object SHALL be set to 
 noSnmpAccess." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 3.4" 
    ::= { isnsSrvrInstEntry 15 } 
 
isnsSrvrInstEnblCntrlNdeMgtScn OBJECT-TYPE 
    SYNTAX                  TruthValue 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION  
"Enable Management SCN for Control Node - enable the option 
 for a control node to register for and receive Management 
 SCNs sent by this server." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 3.4" 
    DEFVAL                  { true } 
    ::= { isnsSrvrInstEntry 16 } 
 
isnsSrvrInstDfltDdDdsStatus OBJECT-TYPE 
    SYNTAX                  INTEGER { inNoDomain(1),  
                                      inDefaultDdAndDds(2) } 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION 
"Default DD/DDS Status - This indicates the Discovery Domain 
 (DD) and Discovery Domain Set (DDS) membership status for a 
 new device when registerd in the iSNS Server instance. 
 Either the new device will not be in a DD/DDS, or will be 
 placed into a default DD and default DDS.  The default 
    
   Gibbons               Expires January 2006                       22 

   Internet Draft              iSNS MIB                      July 2005 

 setting is inNoDomain." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 3.4" 
    DEFVAL                  { inNoDomain } 
    ::= { isnsSrvrInstEntry 17 } 
 
isnsSrvrInstUpdateDdDdsSpprtd OBJECT-TYPE 
    SYNTAX                  DdDdsModificationBitmap 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION  
"The methods that this iSNS Server instance supports 
 to modify Discovery Domains and Discovery Domain Sets. 
     Bit Field            Flag Description 
     ---------   ------------------------------------ 
         0       SNMP protocol is allowed to modify 
                 DD's/DDS's 
         1       Control Nodes are allowed 
         2       Target iSCSI Nodes are allowed 
         3       Initiator iSCSI Nodes are allowed 
         4       Target iFCP Ports are allowed 
         5       Initiator iFCP Ports are allowed 
 
 If a bit is true (1) then the flag is enabled.  If no 
 method to change a DD is supported, then the bitmap 
 is set to 0.  Two methods generally supported are SNMP 
 and Control Nodes." 
    REFERENCE  "draft-ietf-ips-iSNS-22.txt, Section 3.4" 
    ::= { isnsSrvrInstEntry 18 } 
 
isnsSrvrInstUpdateDdDdsEnbld OBJECT-TYPE 
    SYNTAX                  DdDdsModificationBitmap 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION  
"This indicates the methods this server instance allows 
 for modifying Discovery Domains and Discovery Domain Sets. 
     Bit Field            Flag Description 
     ---------   ------------------------------------ 
         0       SNMP protocol is allowed to modify DD's/DDS's 
         1       Control Nodes are allowed 
         2       Target iSCSI Nodes are allowed 
         3       Initiator iSCSI Nodes are allowed 
         4       Target iFCP Ports are allowed 
         5       Initiator iFCP Ports are allowed 
 
 If a bit is true (1) then the mode is enabled.  If no 
 methods to change a DD are enabled, then the bitmap 
 is set to 0." 
    REFERENCE  "draft-ietf-ips-iSNS-22.txt, Sec 2.2.2 and 3.4" 
    ::= { isnsSrvrInstEntry 19 } 
 
-- 
-- Count of objects currently registered in a server instance 
-- 
 
    
   Gibbons               Expires January 2006                       23 

   Internet Draft              iSNS MIB                      July 2005 

isnsNumObjTable             OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF 
                              IsnsNumObjEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"Table providing the number of registered objects of each 
 type in the iSNS Server instance.  This table is optional 
 to implement.  The number of entries is dependent upon the 
 number of iSNS Server instances being managed." 
    ::= { isnsSrvrInfo 2 } 
 
isnsNumObjEntry             OBJECT-TYPE 
    SYNTAX                  IsnsNumObjEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"Entry of an iSNS Server instance." 
    AUGMENTS { isnsSrvrInstEntry } 
     ::= { isnsNumObjTable 1 } 
 
IsnsNumObjEntry ::= SEQUENCE      {  
     isnsNumDds             Unsigned32, 
     isnsNumDd              Unsigned32, 
     isnsNumEntities        Unsigned32, 
     isnsNumPortals         Unsigned32, 
     isnsNumPortalGroups    Unsigned32, 
     isnsNumIscsiNodes      Unsigned32, 
     isnsNumFcPorts         Unsigned32, 
     isnsNumFcNodes         Unsigned32 
                                   } 
 
isnsNumDds                  OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The current total number of Discovery Domain Sets 
 in this iSNS instance.  This is the number of rows 
 in the isnsSrvrDdsTable." 
    ::= { isnsNumObjEntry 1 } 
 
isnsNumDd                   OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The current total number of Discovery Domains  
 in this iSNS instance.  This is the number of rows in the 
 isnsSrvrDdTable." 
    ::= { isnsNumObjEntry 2 } 
 
isnsNumEntities             OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    
   Gibbons               Expires January 2006                       24 

   Internet Draft              iSNS MIB                      July 2005 

    STATUS                  current 
    DESCRIPTION 
"The current number of Entities registered in this 
 iSNS Server instance.  This is the number of rows in 
 the isnsRegEntityTable for this instance." 
    ::= { isnsNumObjEntry 3 } 
 
isnsNumPortals              OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The current total number of Portals registered in iSNS. 
 This is the number of rows in isnsRegPortalTable." 
    ::= { isnsNumObjEntry 4 } 
 
isnsNumPortalGroups         OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The current total number of Portal Groups registered in 
 iSNS.  This is the number of rows in 
 isnsRegPortalGroupTable." 
    ::= { isnsNumObjEntry 5 } 
 
isnsNumIscsiNodes           OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The current total number of iSCSI node entries registered in 
 the iSNS.  This is the number rows in isnsRegIscsiNodeTable." 
    ::= { isnsNumObjEntry 6 } 
 
isnsNumFcPorts              OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The current total number of FC Port entries registered in the 
 iSNS.  This is the number of rows in isnsRegFcPortTable." 
    ::= { isnsNumObjEntry 7 } 
 
isnsNumFcNodes              OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The current total number of FC node entries registered in the 
 iSNS. This is the number of rows in isnsRegFcNodeTable." 
    ::= { isnsNumObjEntry 8 } 
 
-- 
-- Next available registered object index in each iSNS Server 
    
   Gibbons               Expires January 2006                       25 

   Internet Draft              iSNS MIB                      July 2005 

-- instance 
-- 
 
isnsNextIdxTable            OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF 
                              IsnsNextIdxEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"The next available Discovery Domain Set Identifier, 
 Discovery Domain Identifier, iSCSI Index, Portal Group Index,  
 and Portal Index for the specified iSNS Server instance.  
 This is used for registered object creation through SNMP 
 for the respective registered object types that support 
 this.  Indexes are used for registered objects that have 
 unique names that are too long or unwieldy for use as 
 an SNMP index.  The number of entries is dependent upon 
 the number of iSNS Server instances being managed." 
    ::= { isnsSrvrInfo 3 } 
 
isnsNextIdxEntry            OBJECT-TYPE 
    SYNTAX                  IsnsNextIdxEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"Entry of an iSNS Server instance." 
    AUGMENTS { isnsSrvrInstEntry } 
    ::= { isnsNextIdxTable 1 } 
 
IsnsNextIdxEntry ::= SEQUENCE   {  
       isnsNextIdxDds                DiscoveryDomainSetId, 
       isnsNextIdxDd                 DiscoveryDomainId, 
       isnsNextIdxUnregIscsiNodeInDd NodeIndexIdOrZero, 
       isnsNextIdxUnregPortalInDd    PortalIndexId 
                                } 
 
isnsNextIdxDds              OBJECT-TYPE 
    SYNTAX                  DiscoveryDomainSetId  
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"This managed object returns the next available DDS ID that 
 MAY be used for DDS creation for this iSNS Server instance. 
 The user should read and use the value of isnsNextIdxDds 
 before performing a isnsDdsTable row creation.  The 
 isnsNextIdxDds value returned MAY be used as the index 
 value when creating a new row in the isnsDdsTable.  Use 
 of this managed object reduces the chance for an index 
 conflict." 
    ::= { isnsNextIdxEntry 1 } 
 
isnsNextIdxDd               OBJECT-TYPE 
    SYNTAX                  DiscoveryDomainId  
    MAX-ACCESS              read-only 
    STATUS                  current 
    
   Gibbons               Expires January 2006                       26 

   Internet Draft              iSNS MIB                      July 2005 

    DESCRIPTION 
"This managed object returns the next available DD ID that 
 MAY be used for DD creation for this iSNS Server instance. 
 The user should read and use the value of isnsNextIdxDd 
 before performing a isnsDdTable row creation.  The 
 isnsNextIdxDd value returned MAY be used as the index 
 value when creating a new row in the isnsDdTable.  Use 
 of this managed object reduces the chance for an index 
 conflict." 
    ::= { isnsNextIdxEntry 2 } 
 
isnsNextIdxUnregIscsiNodeInDd OBJECT-TYPE 
    SYNTAX                  NodeIndexIdOrZero 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The next available iSCSI node index for adding an 
 unregistered iSCSI node to a Discovery Domain or as a 
 control node. The iSCSI node index is associated to a 
 specific iSCSI node name.  The association is persistent 
 across server reinitializations when the iSCSI node is a 
 member of a Discovery Domain (DD) or is a control node. 
 This managed object is used when an unregistered iSCSI 
 node is to be added to a Discovery Domain or as a control 
 node prior to it being registered in the server using 
 the iSNS protocol.  Registered iSCSI nodes have an entry 
 in the isnsRegIscsiNodeTable.  If an iSCSI node is 
 already registered in the server or is already a member 
 of a Discovery Domain, then it already has an associated 
 iSCSI node index.  The associated index MUST be used for 
 any additional DD membership or control node 
 registrations.  If iSCSI is not supported by this iSNS 
 Server instance, and this managed object is implemented, 
 then this managed object SHALL return zero." 
    ::= { isnsNextIdxEntry 3 } 
 
isnsNextIdxUnregPortalInDd OBJECT-TYPE 
    SYNTAX                 PortalIndexId 
    MAX-ACCESS             read-only 
    STATUS                 current 
    DESCRIPTION 
"The next available portal index for adding an unregistered 
 portal to a discovery domain. The portal index used for a 
 specific portal is persistent across server reinitializations 
 only when the portal is an explicit member of a Discovery 
 Domain (DD). This managed object is used when an unregistered 
 portal is to be explicitly added to a Discovery Domain prior 
 to it being registered in the server using the iSNS protocol.  
 Registered portals have an entry in the isnsRegPortalTable.  
 If a portal is already registered in the server, or is 
 already a member of a Discovery Domain, then it will already 
 have a portal index, and the use of this managed object is not 
 required.  The same portal index MUST be used for any 
 additional DD membership registrations for the same portal." 
    ::= { isnsNextIdxEntry 4 } 
    
   Gibbons               Expires January 2006                       27 

   Internet Draft              iSNS MIB                      July 2005 

 
-- 
-- Control node information 
-- 
 
isnsCntlNodeInfo     OBJECT IDENTIFIER ::= { isnsSrvrInfo 4 } 
 
-- 
-- Specific iSCSI Nodes authorized to register as Control Nodes 
-- 
 
isnsCntlNodeIscsiTable      OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF 
                              IsnsCntlNodeIscsiEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"Specified iSCSI Nodes that can register as control nodes.  
 The number of rows is dependent on the number of possible 
 iSCSI Control Nodes, and if SNMP is enabled to view control 
 node information, as indicated by isnsSrvrInstCntrlNodeAuth. 
 This table is accesible and usable to view and/or modify the 
 set of control nodes if isnsSrvrInstCntrlNodeAuth is set to 
 the viewNodes or modifyNodes value." 
    ::= { isnsCntlNodeInfo 1 } 
 
isnsCntlNodeIscsiEntry      OBJECT-TYPE 
    SYNTAX                  IsnsCntlNodeIscsiEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"This is an iSCSI Control Node entry for a specific iSNS 
 server instance." 
     INDEX          { isnsSrvrInstIndex, 
                      isnsCntlNodeIscsiNodeIdx } 
     ::= { isnsCntlNodeIscsiTable 1 } 
 
IsnsCntlNodeIscsiEntry ::= SEQUENCE {  
     isnsCntlNodeIscsiNodeIdx       NodeIndexId, 
     isnsCntlNodeIscsiNodeName      SnmpAdminString, 
     isnsCntlNodeIscsiRowStatus     RowStatus 
                                    } 
 
isnsCntlNodeIscsiNodeIdx    OBJECT-TYPE 
    SYNTAX                  NodeIndexId 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"The iSCSI Index for the storage node authorized to act 
 as a control node.  This managed object is part of the 
 key to this table.  This index provides a 1 to 1 mapping 
 to the node name in isnsCntlNodeIscsiNodeName. The 
 iSCSI node name is too long to be used for an index 
 directly. The iSCSI node index used for a specific 
 iSCSI node name MUST be indentical in all DDs and 
    
   Gibbons               Expires January 2006                       28 

   Internet Draft              iSNS MIB                      July 2005 

 control node registrations.  The mapping is persistent 
 across server reinitializations when the iSCSI node is 
 a member of a Discovery Domain (DD) or is a control 
 node. The managed object isnsNextIdxUnregIscsiNodeInDd 
 is used to determine an available index when an 
 unregistered iSCSI node is to be registered as a control 
 node prior to it being registered in the server using 
 the iSNS protocol." 
     ::= { isnsCntlNodeIscsiEntry 1 } 
 
isnsCntlNodeIscsiNodeName   OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..223)) 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION      
"The iSCSI Name of the initiator or target associated with 
 the storage node.  The iSCSI Name can not be longer then 
 223 bytes.  The iSNS Server internal maximum size is 224 
 bytes to provide NULL termination.  This is the iSCSI Node 
 Name for the storage node authorized to act as a control 
 node." 
     ::= { isnsCntlNodeIscsiEntry 2 } 
 
isnsCntlNodeIscsiRowStatus  OBJECT-TYPE 
     SYNTAX                 RowStatus 
     MAX-ACCESS             read-create 
     STATUS                 current 
     DESCRIPTION 
"This indicates the status of this entry in the 
 table." 
     ::= { isnsCntlNodeIscsiEntry 3 } 
 
-- 
-- Specific FC Ports authorized to register as Control Nodes 
-- 
 
isnsCntlNodeFcPortTable     OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF 
                              IsnsCntlNodeFcPortEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"Specified FC Ports that can register as control nodes.  The 
 number of rows is dependent on the number of possible FC 
 Port Control Nodes, and if SNMP is enabled to view control 
 node information, as indicated by isnsSrvrInstCntrlNodeAuth. 
 This table is accesible and usable to view and/or modify the 
 set of control nodes if isnsSrvrInstCntrlNodeAuth is set to 
 the viewNodes or modifyNodes value." 
    ::= { isnsCntlNodeInfo 2 } 
 
isnsCntlNodeFcPortEntry     OBJECT-TYPE 
    SYNTAX                  IsnsCntlNodeFcPortEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    
   Gibbons               Expires January 2006                       29 

   Internet Draft              iSNS MIB                      July 2005 

    DESCRIPTION      
"FC Port control node entry." 
     INDEX          { isnsSrvrInstIndex, 
                      isnsCntlNodeFcPortName } 
     ::= { isnsCntlNodeFcPortTable 1 } 
 
IsnsCntlNodeFcPortEntry ::= SEQUENCE     {  
     isnsCntlNodeFcPortName          FcNameIdOrZero, 
     isnsCntlNodeFcPortRowStatus     RowStatus 
                                         } 
 
isnsCntlNodeFcPortName      OBJECT-TYPE 
    SYNTAX                  FcNameIdOrZero 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"The FC Port WWN that can be a control node for the specified 
 iSNS Server.  Zero is not a valid value for this managed 
 object.  This managed object, combined with the 
 isnsSrvrInstIndex, is the key for this table." 
     ::= { isnsCntlNodeFcPortEntry 1 } 
 
isnsCntlNodeFcPortRowStatus OBJECT-TYPE 
    SYNTAX                  RowStatus 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"This indicates the status of this entry in the 
 table." 
     ::= { isnsCntlNodeFcPortEntry 2 } 
 
-- 
-- Discovery Domain Set information 
-- 
 
isnsDdsInfo     OBJECT IDENTIFIER ::= { isnsSrvrInfo 5 } 
 
-- 
-- Discovery Domain Set Registrations -------------------- 
-- 
 
isnsDdsTable                OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsDdsEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"A table containing configuration information for each 
 Discovery Domain Set (DDS) registered in the iSNS Server 
 instance. The number of rows in the table is dependent 
 on the number of DDSs registered in the specified iSNS 
 server instance.  A DDS can be created in the iSNS Server 
 by creating a row in this table.  The index value should 
 be determined by using isnsNextIdxDds managed object to 
 determine the next available index." 
    ::= { isnsDdsInfo 1 } 
    
   Gibbons               Expires January 2006                       30 

   Internet Draft              iSNS MIB                      July 2005 

 
isnsDdsEntry                OBJECT-TYPE 
    SYNTAX                  IsnsDdsEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"Information on one Discovery Domain Set (DDS) registered 
 in the iSNS Server instance.  The isnsNextIdxDds managed 
 object is used to determine an available isnsDdsId that 
 should be used for row creation.  During creation of a 
 row, if a symbolic name is not provided in 
 isnsDdsSymbolicName, then a unique symbolic name will be 
 provided by the iSNS Server.  If a DDS is deleted, then 
 each entry associating the DDS with a DD in the table 
 isnsDdsMemberTable is removed.  The creation and deletion 
 of DDS's should be carefully handled so as to not disrupt 
 a DDS created by a storage entity through the iSNS 
 protocol directly." 
    INDEX   { isnsSrvrInstIndex, isnsDdsId} 
    ::= { isnsDdsTable 1 } 
 
IsnsDdsEntry ::= 
    SEQUENCE {  
       isnsDdsId             DiscoveryDomainSetId, 
       isnsDdsSymbolicName   SnmpAdminString, 
       isnsDdsStatus         IsnsDdsStatusId, 
       isnsDdsRowStatus      RowStatus 
             } 
 
isnsDdsId                   OBJECT-TYPE 
    SYNTAX                  DiscoveryDomainSetId 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"The ID that refers to this Discovery Domain Set and 
 index to the table." 
    ::= { isnsDdsEntry 1 } 
 
isnsDdsSymbolicName         OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..255)) 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"The Discovery Domain Set Symbolic Name field contains 
 a unique variable-length description (up to 255 bytes) 
 that is associated with the DDS.  If a Symbolic Name is 
 not provided, then one will be generated by the iSNS 
 server." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsDdsEntry 2 } 
 
isnsDdsStatus               OBJECT-TYPE 
    SYNTAX                  IsnsDdsStatusId 
    MAX-ACCESS              read-create 
    STATUS                  current 
    
   Gibbons               Expires January 2006                       31 

   Internet Draft              iSNS MIB                      July 2005 

    DESCRIPTION 
"The bitmap indicating the status of a Discovery Domain 
 Set (DDS) registered in the iSNS. 
              Bit           Status 
           ---------       --------- 
               0            enabled 
 
 If bit(0) is set to true then the DDS is Enabled.  If set 
 to false then the DDS is disabled." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    DEFVAL                  { { enabled } } 
    ::= { isnsDdsEntry 3 } 
 
isnsDdsRowStatus            OBJECT-TYPE 
    SYNTAX                  RowStatus 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"This managed object indicates the status of this Discovery 
 Domain Set row.  The normal state for a DDS is active." 
    ::= { isnsDdsEntry 4 } 
 
-- 
-- Discovery Domain Set Members -------------------- 
-- 
 
-- 
-- DDS Membership Assignment 
-- 
 
isnsDdsMemberTable          OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsDdsMemberEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"A table containing Discovery Domains (DDs) that have 
 been assigned to specific Discovery Domain Sets (DDSs). 
 The number of rows in the table is dependent on the 
 number of DD to DDS relationships in the iSNS instance." 
    ::= { isnsDdsInfo 2 } 
 
isnsDdsMemberEntry          OBJECT-TYPE 
    SYNTAX                  IsnsDdsMemberEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"The mapping of one Discovery Domain (DD) to a Discovery 
 Domain Set (DDS).  This indicates the DD is a member of 
 the DDS.  To create a row, isnsDdsId contains the 
 DDS ID of the DDS, and isnsDdId contains the DD ID 
 of the DD which will be a member of the DDS.  If a DDS is 
 deleted, then each entry associating the DDS with a DD is 
 removed.  The addition/deletion of DD's in a DDS should be 
 carefully handled so as to not disrupt a DDS created by a 
 storage entity through the iSNS protocol directly." 
    
   Gibbons               Expires January 2006                       32 

   Internet Draft              iSNS MIB                      July 2005 

    INDEX   { isnsSrvrInstIndex, 
              isnsDdsId, 
              isnsDdId } 
    ::= { isnsDdsMemberTable 1 } 
 
IsnsDdsMemberEntry ::= 
    SEQUENCE {  
       isnsDdsMemberRowStatus  RowStatus 
             } 
 
isnsDdsMemberRowStatus      OBJECT-TYPE 
    SYNTAX                  RowStatus 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"This managed object indicates the status of this entry." 
    ::= { isnsDdsMemberEntry 1 } 
 
-- 
-- Discovery Domain information 
-- 
 
isnsDdInfo     OBJECT IDENTIFIER ::= { isnsSrvrInfo 6 } 
 
-- 
-- Discovery Domain Registrations ---------------------------- 
-- 
 
isnsDdTable                 OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsDdEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"A table containing configuration information for each 
 Discovery Domain (DD) registered in the iSNS.  The number 
 of rows in the table is dependent on the number of DDs 
 registered in the iSNS instance.  A DD can be created 
 in the iSNS Server by creating a row in this table.  
 The index value should be determined by using 
 isnsNextIdxDd managed object to determine the next available 
 index." 
    ::= { isnsDdInfo 1 } 
 
isnsDdEntry                 OBJECT-TYPE 
    SYNTAX                  IsnsDdEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"Information on a Discovery Domain (DD) registered in 
 the iSNS Server instance.  The isnsNextIdxDd managed object 
 is used to determine an available isnsDdId value that can be 
 used for row creation.  During creation of a row, if a 
 symbolic name is not provided in isnsDdSymbolicName, then 
 a unique symbolic name will be provided by the iSNS Server. 
 If a DD is deleted, then all entries associating the DD with 
    
   Gibbons               Expires January 2006                       33 

   Internet Draft              iSNS MIB                      July 2005 

 nodes and portals in the tables isnsDdIscsiMemberTable, 
 isnsDdPortalMemberTable, and isnsDdFcPortMemberTable are 
 removed.  The creation and deletion of DD's should be 
 carefully handled so as to not disrupt a DD created by a 
 storage entity through the iSNS protocol directly." 
    INDEX   { isnsSrvrInstIndex, isnsDdId } 
    ::= { isnsDdTable 1 } 
 
IsnsDdEntry::= 
    SEQUENCE {  
       isnsDdId             DiscoveryDomainId, 
       isnsDdSymbolicName   SnmpAdminString, 
       isnsDdFeatures       DdFeatureBitmapId, 
       isnsDdRowStatus      RowStatus 
             } 
 
isnsDdId                    OBJECT-TYPE 
    SYNTAX                  DiscoveryDomainId 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"The ID that refers to this Discovery Domain, and the 
 index to the table." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsDdEntry 1 } 
 
isnsDdSymbolicName          OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..255)) 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"The Discovery Domain Symbolic Name field contains a 
 unique variable-length description (up to 255 bytes)  
 that is associated with the DD." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsDdEntry 2 } 
 
isnsDdFeatures              OBJECT-TYPE 
    SYNTAX                  DdFeatureBitmapId 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"The Discovery Domain Features field contains a bitmap 
 indicating the features of this DD.   
     Bit            DD Feature 
    ---------       --------- 
      0             Boot List 
 
 Boot List: this feature indicates that the targets 
 in this DD provide boot capabilities for the member 
 initiators. 
 
 Setting the bit to true (1) indicates the feature is 
 enabled.  By default no DD features are enabled." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    
   Gibbons               Expires January 2006                       34 

   Internet Draft              iSNS MIB                      July 2005 

    ::= { isnsDdEntry 3 } 
 
isnsDdRowStatus             OBJECT-TYPE 
    SYNTAX                  RowStatus 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"This managed object indicates the status of this entry." 
    ::= { isnsDdEntry 4 } 
 
-- 
-- Discovery Domain Members -------------------- 
--  
 
-- 
-- DD iSCSI Node Membership Assignment 
-- 
 
isnsDdIscsiMemberTable      OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsDdIscsiMemberEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"A table containing iSCSI node indexes that have been 
 assigned to specific DDs in this iSNS Server instance.  The 
 number of rows in the table is dependent on the number of 
 relationships between iSCSI Nodes and DDs registered in the 
 iSNS instance." 
    ::= { isnsDdInfo 2 } 
 
isnsDdIscsiMemberEntry      OBJECT-TYPE 
    SYNTAX                  IsnsDdIscsiMemberEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"The mapping of one iSCSI Node to a Discovery Domain to 
 indicate membership in the DD.  The indexes of the table 
 are the iSNS server instance, the DD ID of the Discovery 
 Domain, and the iSCSI Node Index of the  iSCSI Node. 
 
 For iSCSI nodes already registered in the server, the 
 isnsDdMemberIscsiIdx for a specific isnsDdIscsiNodeName is 
 obtained from the isnsRegIscsiNodeTable. 
 
 For unregistered iSCSI nodes, if they are already a member of 
 other Discovery Domains, then the same isnsDdMemberIscsiIdx 
 value MUST be used in this DD.  If the unregistered iSCSI 
 node is not already a member of another Discovery Domain, 
 then the managed object isnsNextIdxUnregIscsiNodeInDd is used 
 to obtain a valid isnsDdMemberIscsiIdx value. 
 
 If a DD is removed from the iSNS, then all entries associating 
 nodes with the DD are removed." 
    INDEX   { isnsSrvrInstIndex, 
              isnsDdId,  
    
   Gibbons               Expires January 2006                       35 

   Internet Draft              iSNS MIB                      July 2005 

              isnsDdMemberIscsiIdx } 
    ::= { isnsDdIscsiMemberTable 1 } 
 
IsnsDdIscsiMemberEntry::= 
    SEQUENCE {  
       isnsDdMemberIscsiIdx     NodeIndexId, 
       isnsDdMemberIscsiName    SnmpAdminString, 
       isnsDdMemberIsRegistered TruthValue, 
       isnsDdMemberRowStatus    RowStatus 
             } 
 
isnsDdMemberIscsiIdx        OBJECT-TYPE 
    SYNTAX                  NodeIndexId 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"The iSCSI node index for this member node entry.  This 
 index is used to uniquely indicate this table entry, 
 and provides a 1 to 1 mapping to the node name in 
 isnsDdMemberIscsiName.  The iSCSI node name is too long 
 to be used for an index directly.  The iSCSI node index 
 used for a specific iSCSI node name MUST be indentical 
 in all DDs and control node registrations, and is 
 persistent across server reinitializations when the 
 iSCSI node is a member of a Discovery Domain (DD) or is 
 registered as a control node. The managed object 
 isnsNextIdxUnregIscsiNodeInDd is used to determine an 
 available index when an unregistered iSCSI node is to be 
 added to a Discovery Domain prior to it being registered 
 in the server using the iSNS protocol." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsDdIscsiMemberEntry 1 } 
 
isnsDdMemberIscsiName       OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..223)) 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"The iSCSI Name associated with the storage node.  The 
 iSCSI Name can not be longer then 223 bytes.  The iSNS 
 server internal maximum size is 224 bytes to provide 
 NULL termination.  This is the iSCSI Name for the storage 
 node that is a member of the DD.  This value maps 1 to 1 
 to the isnsDdMemberIscsiIdx node index.  The iSCSI Name 
 field is too long to be easily used for an index directly.  
 The node index used for a specific node name is only 
 persistent across iSNS Server reinitializations for nodes 
 that are in a Discovery Domain (DD) or are registered 
 control nodes.  This value is only required during row 
 creation if the storage node is not yet registered in the 
 iSNS Server instance.  If the storage node is not yet 
 registered, then the iSCSI Name MUST be provided with the 
 iSCSI node index during row creation in order to create the 
 1 to 1 mapping." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    
   Gibbons               Expires January 2006                       36 

   Internet Draft              iSNS MIB                      July 2005 

    ::= { isnsDdIscsiMemberEntry 2 } 
 
isnsDdMemberIsRegistered    OBJECT-TYPE 
    SYNTAX                  TruthValue 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION  
"This indicates whether this member of the DD is currently 
 registered in the iSNS Server instance.  iSCSI Storage 
 Node members do not need to be currently registered in 
 order for their iSCSI Name and Index to be added to 
 a DD." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6.11" 
    ::= { isnsDdIscsiMemberEntry 3 } 
 
isnsDdMemberRowStatus       OBJECT-TYPE 
    SYNTAX                  RowStatus 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"This managed object indicates the status of this entry." 
    ::= { isnsDdIscsiMemberEntry 4 } 
 
-- 
-- DD Portal Membership Assignment 
-- 
 
isnsDdPortalMemberTable     OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsDdPortalMemberEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"A table containing currently registered and unregistered 
 portal objects that have been explicitly assigned to specific 
 DDs.  Explicit assignment of a portal to a DD is only done 
 when a specific set of portals are prefered for use within a 
 DD.  Otherwise, for iSCSI, the Portal Group Object should be 
 used for identifying which portals provide access to which 
 storage nodes. The number of rows in the table is dependent 
 on the number of explicit relationships between portals and 
 DDs registered in the iSNS." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsDdInfo 3 } 
 
isnsDdPortalMemberEntry     OBJECT-TYPE 
    SYNTAX                  IsnsDdPortalMemberEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"Each entry indicates an explicit addition of a portal to a 
 discovery domain.  The explicit addition of an entity portal 
 to a discovery domain indicates the portal is preferred for 
 access to nodes of the entity for this discovery domain.  
 Registered Portal Group objects are used in iSCSI to indicate 
 mapping of portals to nodes across all discovery domains. 
    
   Gibbons               Expires January 2006                       37 

   Internet Draft              iSNS MIB                      July 2005 

 Portals that have been explicitly mapped a discovery domain 
 will be returned as part of a query that is scoped to that 
 discovery domain.  If no portal of an entity has been 
 explicitly mapped to a discovery domain, then all portals of 
 the entity that provide access to a storage node are returned 
 as part of a query.  The table indexes are the server 
 instance, the DD ID of the Discovery Domain, and the Portal 
 Index of the portal. 
 
 For registered portals, the isnsDdMemberPortalIdx for a 
 specific isnsDdMemberPortalAddr and isnsDdMemberPortalPort 
 pair is obtained from the isnsRegPortalTable table. 
 
 For unregistered portals, if they are already a member of 
 other Discovery Domains, the same isnsDdMemberPortalIdx MUST 
 be used.  For unregistered portals, if they are not already 
 a member of other Discovery Domains, then the managed object 
 isnsNextIdxUnregPortalInDd is used to obtain a valid 
 isnsDdMemberPortalIdx. 
 
 If a DD is removed from the iSNS, then all entries 
 associating portals with the DD are removed." 
    INDEX   { isnsSrvrInstIndex, 
              isnsDdId, 
              isnsDdMemberPortalIdx } 
    ::= { isnsDdPortalMemberTable 1 } 
 
IsnsDdPortalMemberEntry ::= 
    SEQUENCE {  
       isnsDdMemberPortalIdx        PortalIndexId, 
       isnsDdMemberPortalAddrType   InetAddressType, 
       isnsDdMemberPortalAddr       InetAddress, 
       isnsDdMemberPortalPortType   PortalPortTypeId, 
       isnsDdMemberPortalPort       PortalPortId, 
       isnsDdMemberPortalIsRegistered TruthValue, 
       isnsDdMemberPortalRowStatus  RowStatus 
             } 
 
isnsDdMemberPortalIdx       OBJECT-TYPE 
    SYNTAX                  PortalIndexId 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"The index for a portal explicitly contained in the discovery 
 domain.  The Portal Index used for a specific portal 
 IP-address and port number pair is only persistent across 
 reboots for portals that have been explicitly added to a 
 Discovery Domain (DD).  If a portal is not explicitly 
 registered in any DD, then the index used for a portal can 
 change after a server reinitialization." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsDdPortalMemberEntry 1 } 
 
isnsDdMemberPortalAddrType  OBJECT-TYPE 
    SYNTAX                  InetAddressType 
    
   Gibbons               Expires January 2006                       38 

   Internet Draft              iSNS MIB                      July 2005 

    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"The type of Inet address in isnsDdMemberPortalAddr." 
    ::= { isnsDdPortalMemberEntry 2 } 
 
isnsDdMemberPortalAddr      OBJECT-TYPE 
    SYNTAX                  InetAddress 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"The Inet Address for the portal as defined in 
 the iSNS Specification [iSNS]." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsDdPortalMemberEntry 3 } 
 
isnsDdMemberPortalPortType  OBJECT-TYPE 
    SYNTAX                  PortalPortTypeId 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"The port type for the portal, either UDP or TCP, as 
 defined in the iSNS Specification [iSNS]." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsDdPortalMemberEntry 4 } 
 
isnsDdMemberPortalPort      OBJECT-TYPE 
    SYNTAX                  PortalPortId 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"The port number for the portal as defined in the 
 iSNS Specification [iSNS].  Whether the portal type is TCP 
 or UDP is indicated by isnsDdMemberPortalPortType." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsDdPortalMemberEntry 5 } 
 
isnsDdMemberPortalIsRegistered OBJECT-TYPE 
    SYNTAX                  TruthValue 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION  
"This indicates whether this member of the DD is currently 
 registered in the iSNS Server instance.  Portals that are 
 DD members do not need to be currently registered in 
 order for them to be added to a DD." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6.11" 
    ::= { isnsDdPortalMemberEntry 6 } 
 
isnsDdMemberPortalRowStatus OBJECT-TYPE 
    SYNTAX                  RowStatus 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"This managed object indicates the status of this entry." 
    
   Gibbons               Expires January 2006                       39 

   Internet Draft              iSNS MIB                      July 2005 

    ::= { isnsDdPortalMemberEntry 7 } 
 
-- 
-- DD FC Port Membership Assignment 
-- 
 
isnsDdFcPortMemberTable     OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsDdFcPortMemberEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"A table containing FC Port World Wide Names (WWN) that 
 have been assigned to specific DDs.  The number of rows 
 in the table is dependent on the number of relationships 
 between FC Ports and DDs registered in the iSNS." 
    ::= { isnsDdInfo 4 } 
 
isnsDdFcPortMemberEntry     OBJECT-TYPE 
    SYNTAX                  IsnsDdFcPortMemberEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"The association of one FC Port with a Discovery Domain. 
 Membership of an FC Port in a Discovery Domain is 
 indicated by creating a row for the appropriate DD ID 
 and FC Port WWN.  If a DD is removed from the iSNS, then 
 entries associating nodes with the DD are removed." 
    INDEX   { isnsSrvrInstIndex, 
              isnsDdId, 
              isnsDdMemberFcPortName } 
    ::= { isnsDdFcPortMemberTable 1 } 
 
IsnsDdFcPortMemberEntry ::= 
    SEQUENCE {  
       isnsDdMemberFcPortName     FcNameIdOrZero, 
       isnsDdMemberFcIsRegistered TruthValue, 
       isnsDdMemberFcRowStatus    RowStatus 
    } 
 
isnsDdMemberFcPortName      OBJECT-TYPE 
    SYNTAX                  FcNameIdOrZero 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"The Port WWN the FC Port that is a member of the DD. The 
 value MUST be a valid FC WWN, as per the FC-GS standard.  
 This managed object, combined with the isnsSrvrInstIndex 
 and isnsDdId are the key for this table.  Zero is not a 
 valid value for this managed object." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsDdFcPortMemberEntry 1 } 
 
isnsDdMemberFcIsRegistered  OBJECT-TYPE 
    SYNTAX                  TruthValue 
    MAX-ACCESS              read-only 
    
   Gibbons               Expires January 2006                       40 

   Internet Draft              iSNS MIB                      July 2005 

    STATUS                  current 
    DESCRIPTION  
"This indicates whether this member of the DD is currently 
 registered in the iSNS Server instance.  FC Ports that are 
 DD members do not need to be currently registered in 
 order for them to be added to a DD." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6.11" 
    ::= { isnsDdFcPortMemberEntry 2 } 
 
isnsDdMemberFcRowStatus     OBJECT-TYPE 
    SYNTAX                  RowStatus 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"This managed object indicates the status of this entry." 
    ::= { isnsDdFcPortMemberEntry 3 } 
 
-- 
--  Registered Device Information 
-- 
 
isnsReg    OBJECT IDENTIFIER ::= { isnsSrvrInfo 7 } 
 
isnsRegEntityInfo           OBJECT IDENTIFIER 
                               ::= { isnsReg    1 } 
 
-- 
-- iSNS Registered Entities Table 
-- 
 
isnsRegEntityTable          OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsRegEntityEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"A table containing registered Entity objects in each iSNS 
 server instance.  The number of entries in the table is 
 dependent on the number of Entity objects registered in the 
 iSNS Server instances.  All Entity objects are registered in 
 the iSNS using the iSNS protocol." 
    ::= { isnsRegEntityInfo 1 } 
 
isnsRegEntityEntry          OBJECT-TYPE 
    SYNTAX                  IsnsRegEntityEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"Information on one registered Entity object in an iSNS 
 server instance." 
    INDEX   { isnsSrvrInstIndex, 
              isnsRegEntityIdx } 
    ::= { isnsRegEntityTable 1 } 
 
IsnsRegEntityEntry ::= 
    SEQUENCE {  
    
   Gibbons               Expires January 2006                       41 

   Internet Draft              iSNS MIB                      July 2005 

       isnsRegEntityIdx            EntityIndexId, 
       isnsRegEntityEID            SnmpAdminString, 
       isnsRegEntityProtocol       EntityProtocolId, 
       isnsRegEntityMgtAddrType    InetAddressType, 
       isnsRegEntityMgtAddr        InetAddress, 
       isnsRegEntityTimestamp      DateAndTime, 
       isnsRegEntityVersionMin     Integer32, 
       isnsRegEntityVersionMax     Integer32, 
       isnsRegEntityRegPeriod      Unsigned32 
            } 
 
isnsRegEntityIdx            OBJECT-TYPE 
    SYNTAX                  EntityIndexId 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"The Entity Index for this entity.  This integer based index 
 is assigned by the iSNS Server when an Entity is initially 
 registered. The Entity Index can be used to represent a 
 registered Entity object in situations where the Entity EID 
 would be too long/unwieldy." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegEntityEntry 1 } 
 
isnsRegEntityEID            OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..255)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The EID is a unique registered Entity object identifier, as 
 specified in the iSNS Specification.  This is the iSNS 
 Entity Identifier for the registered Entity object." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegEntityEntry 2 } 
 
isnsRegEntityProtocol       OBJECT-TYPE 
    SYNTAX                  EntityProtocolId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The iSNS Entity Protocol is an enumerated value which 
 indicates the type of nodes that are contained within it. 
 
           Type Value       Entity Type 
           ----------       ----------- 
              1             No Protocol 
              2             iSCSI 
              3             iFCP 
            All Others      As in the iSNS Specification 
 
 The No Protocol value is used to indicate that the Network 
 Entity does not support an IP block storage protocol." 
    REFERENCE  "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegEntityEntry 3 } 
 
    
   Gibbons               Expires January 2006                       42 

   Internet Draft              iSNS MIB                      July 2005 

isnsRegEntityMgtAddrType    OBJECT-TYPE 
    SYNTAX                  InetAddressType 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The type of Inet address in isnsRegEntityMgtAddr." 
    ::= { isnsRegEntityEntry 4 } 
 
isnsRegEntityMgtAddr        OBJECT-TYPE 
    SYNTAX                  InetAddress 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The iSNS Management IP Address for the registred Entity 
 object." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegEntityEntry 5 } 
 
isnsRegEntityTimestamp      OBJECT-TYPE 
    SYNTAX                  DateAndTime 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The iSNS Entity Registration Timestamp for the registred 
 Entity object.  This is the most recent date and time that 
 the registered Entity object, and associated registered 
 objects contained in the Entity, were registered or 
 updated." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegEntityEntry 6 } 
 
isnsRegEntityVersionMin     OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The iSNS Entity Protocol Version Range minimum value.  A 
 value of x'FF' is a wildcard value indicating no minimum to 
 the protocol versions supported by this Entity.  Entity 
 registrations with isnsRegEntityProtocol set to No Protocol 
 always have a minimum version of 0." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegEntityEntry 7 } 
 
isnsRegEntityVersionMax     OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The iSNS Entity Protocol Version Range maximum value.  A 
 value of x'FF' is a wildcard value indicating no maximum to 
 the protocol versions supported by this Entity.  Entity 
 registrations with isnsRegEntityProtocol set to No Protocol 
 always have a maximum version of 0." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    
   Gibbons               Expires January 2006                       43 

   Internet Draft              iSNS MIB                      July 2005 

    ::= { isnsRegEntityEntry 8 } 
 
isnsRegEntityRegPeriod      OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The iSNS Entity Status Inquiry (ESI) registration period 
 which indicates the maximum time, in seconds, that the 
 registration will be maintained without receipt of an iSNSP 
 message from the entity.  If the Registration Period is set 
 to 0, then the Entity SHALL NOT be deregistered due to no 
 contact with the entity." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegEntityEntry 9 } 
 
-- 
-- Registered Objects Associated With an Entity Information 
-- 
 
isnsRegEntityNumObjTable    OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF  
                              IsnsRegEntityNumObjEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"A table containing information on the number of registered 
 objects associated with a registered Entity in the iSNS 
 server instance.  This table is optional to implement.  The 
 number of entries in the table is dependent on the number 
 of registered Entity objects in the iSNS." 
    ::= { isnsRegEntityInfo 2 } 
 
isnsRegEntityNumObjEntry    OBJECT-TYPE 
    SYNTAX                  IsnsRegEntityNumObjEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"Information on the number of registered objects associated 
 with a registered Entity object in an iSNS Server instance." 
    AUGMENTS { isnsRegEntityEntry } 
    ::= { isnsRegEntityNumObjTable 1 } 
 
IsnsRegEntityNumObjEntry ::= 
    SEQUENCE {  
       isnsRegEntityInfoNumPortals      Unsigned32, 
       isnsRegEntityInfoNumPortalGroups Unsigned32, 
       isnsRegEntityInfoNumIscsiNodes   Unsigned32, 
       isnsRegEntityInfoNumFcPorts      Unsigned32, 
       isnsRegEntityInfoNumFcNodes      Unsigned32 
            } 
 
isnsRegEntityInfoNumPortals OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    
   Gibbons               Expires January 2006                       44 

   Internet Draft              iSNS MIB                      July 2005 

    STATUS                  current 
    DESCRIPTION 
"The number of Portals associated with this Entity." 
    ::= { isnsRegEntityNumObjEntry 1 } 
 
isnsRegEntityInfoNumPortalGroups OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The number of Portal Groups associated with this Entity." 
    ::= { isnsRegEntityNumObjEntry 2 } 
 
isnsRegEntityInfoNumIscsiNodes OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The number of iSCSI Storage Nodes associated with this 
 Entity." 
    ::= { isnsRegEntityNumObjEntry 3 } 
 
isnsRegEntityInfoNumFcPorts OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The number of FC Ports associated with this Entity." 
    ::= { isnsRegEntityNumObjEntry 4 } 
 
isnsRegEntityInfoNumFcNodes OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The number of FC Nodes associated with this Entity." 
    ::= { isnsRegEntityNumObjEntry 5 } 
 
-- 
-- iSNS Registered Portal Information 
-- 
 
isnsRegPortalInfo           OBJECT IDENTIFIER 
                               ::= { isnsReg  2 } 
 
-- 
-- iSNS Registered Portal Table 
-- 
 
isnsRegPortalTable          OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsRegPortalEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"A table containing the registered Portals in the iSNS. 
    
   Gibbons               Expires January 2006                       45 

   Internet Draft              iSNS MIB                      July 2005 

 The number of entries is dependent on the number of 
 Portals registered in the iSNS." 
    ::= { isnsRegPortalInfo 1 } 
 
isnsRegPortalEntry          OBJECT-TYPE 
    SYNTAX                  IsnsRegPortalEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"Information on one registered Entity Portal in the iSNS.  
 The Entity Index is part of the table index to quickly 
 find Portals that support a specific Entity." 
    INDEX   { isnsSrvrInstIndex, 
              isnsRegEntityIdx, 
              isnsRegPortalPrtlIdx } 
    ::= { isnsRegPortalTable 1 } 
 
IsnsRegPortalEntry ::= 
    SEQUENCE {  
       isnsRegPortalPrtlIdx        PortalIndexId, 
       isnsRegPortalAddrType       InetAddressType, 
       isnsRegPortalAddr           InetAddress, 
       isnsRegPortalPortType       PortalPortTypeId, 
       isnsRegPortalPort           PortalPortId, 
       isnsRegPortalSymName        SnmpAdminString, 
       isnsRegPortalEsiInterval    Unsigned32, 
       isnsRegPortalEsiPortType    PortalPortTypeId, 
       isnsRegPortalEsiPort        PortalPortId, 
       isnsRegPortalScnPortType    PortalPortTypeId, 
       isnsRegPortalScnPort        PortalPortId, 
       isnsRegPortalSecurityInfo   PortalSecurityBitmapId 
            } 
 
isnsRegPortalPrtlIdx        OBJECT-TYPE 
    SYNTAX                  PortalIndexId 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"The Portal Index for this node.  The index is created by the 
 iSNS Server for mapping between registered objects.  The 
 Portal Index used for a specific portal IP-address and port 
 number pair is only persistent across reboots for portals 
 that have been explicitly added to a Discovery Domain (DD).  
 If a portal is not explicitly registered in any DD, then the 
 index used for a portal can change after a server 
 reinitialization." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPortalEntry 1 } 
 
isnsRegPortalAddrType       OBJECT-TYPE 
    SYNTAX                  InetAddressType 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The type of Inet address in isnsRegPortalAddr." 
    
   Gibbons               Expires January 2006                       46 

   Internet Draft              iSNS MIB                      July 2005 

    ::= { isnsRegPortalEntry 2 } 
 
isnsRegPortalAddr           OBJECT-TYPE 
    SYNTAX                  InetAddress 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The Inet Address for this Portal as defined in 
 the iSNS Specification [iSNS]." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPortalEntry 3 } 
 
isnsRegPortalPortType       OBJECT-TYPE 
    SYNTAX                  PortalPortTypeId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The port type for this Portal, either UDP or TCP, as 
 defined in the iSNS Specification [iSNS]." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPortalEntry 4 } 
 
isnsRegPortalPort           OBJECT-TYPE 
    SYNTAX                  PortalPortId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The port number for this Portal as defined in the 
 iSNS Specification [iSNS].  Whether the Portal type is TCP 
 or UDP is indicated by isnsRegPortalPortType." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPortalEntry 5 } 
 
isnsRegPortalSymName        OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..255)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The optional Symbolic Name for this Portal as defined in 
 the iSNS Specification [iSNS].  If not provided then the 
 string SHALL be zero length." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPortalEntry 6 } 
 
isnsRegPortalEsiInterval    OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The Entity Status Inquiry (ESI) Interval for this Portal 
 as defined in the iSNS Specification [iSNS]." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPortalEntry 7 } 
 
isnsRegPortalEsiPortType    OBJECT-TYPE 
    
   Gibbons               Expires January 2006                       47 

   Internet Draft              iSNS MIB                      July 2005 

    SYNTAX                  PortalPortTypeId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The port type for the ESI Port, either UDP or TCP, as 
 defined in the iSNS Specification [iSNS]." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPortalEntry 8 } 
 
isnsRegPortalEsiPort        OBJECT-TYPE 
    SYNTAX                  PortalPortId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The TCP or UDP port number used for ESI monitoring.  Whether 
 the port type is TCP or UDP is indicated by 
 isnsRegPortalEsiPortType." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPortalEntry 9 } 
 
isnsRegPortalScnPortType    OBJECT-TYPE 
    SYNTAX                  PortalPortTypeId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The port type for the SCN Port, either UDP or TCP, as 
 defined in the iSNS Specification [iSNS]." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPortalEntry 10 } 
 
isnsRegPortalScnPort        OBJECT-TYPE 
    SYNTAX                  PortalPortId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The TCP or UDP port used to receive SCN messages from the 
 iSNS Server.  Whether the port type is TCP or UDP is 
 indicated by isnsRegPortalScnPortType." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPortalEntry 11 } 
 
isnsRegPortalSecurityInfo   OBJECT-TYPE 
    SYNTAX                  PortalSecurityBitmapId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"Indicates security attribute settings for the Portal as 
 registered in the Portal Security Bitmap attribute.  The bit 
 for bitmapVALID must be set in order for this attribute to 
 contain valid information. 
 
 Setting a bit to true (1) indicates the feature is 
 enabled." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPortalEntry 12 } 
    
   Gibbons               Expires January 2006                       48 

   Internet Draft              iSNS MIB                      July 2005 

 
-- 
-- iSNS Registered Portal Group Information 
-- 
 
isnsRegPortalGroupInfo      OBJECT IDENTIFIER 
                               ::= { isnsReg  3 } 
 
-- 
-- iSNS Registered Portal Group (PG) Table 
-- 
 
isnsRegPgTable              OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsRegPgEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"A table containing the registered Portal Groups (PGs) in 
 the iSNS Server instance.  The number of entries is 
 dependent on the number of Portal Groups registered in 
 the iSNS." 
    ::= { isnsRegPortalGroupInfo 1 } 
 
isnsRegPgEntry              OBJECT-TYPE 
    SYNTAX                  IsnsRegPgEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"Information on one registered Portal Group in the iSNS 
 server instance.  The Entity Index is part of the table 
 index to quickly find Portal Groups that support Portals 
 and iSCSI Storage Nodes in a specific Entity." 
    INDEX   { isnsSrvrInstIndex, 
              isnsRegEntityIdx, 
              isnsRegPgIdx } 
    ::= { isnsRegPgTable 1 } 
 
IsnsRegPgEntry ::= 
    SEQUENCE {  
       isnsRegPgIdx                PortalGroupIndexId, 
       isnsRegPgIscsiNodeIdx       NodeIndexId, 
       isnsRegPgIscsiName          SnmpAdminString, 
       isnsRegPgPortalPrtlIdx      PortalIndexId, 
       isnsRegPgPortalAddrType     InetAddressType, 
       isnsRegPgPortalAddr         InetAddress, 
       isnsRegPgPortalPortType     PortalPortTypeId, 
       isnsRegPgPortalPort         PortalPortId, 
       isnsRegPgPGT                PortalGroupTagIdOrZero 
             } 
 
isnsRegPgIdx                OBJECT-TYPE 
    SYNTAX                  PortalGroupIndexId 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
    
   Gibbons               Expires January 2006                       49 

   Internet Draft              iSNS MIB                      July 2005 

"The PG Index for this node.  The index is created by the 
 iSNS Server instance for uniquely identifying registered 
 objects.  The PG object is registered at the same time a 
 Portal or Storage Node is registered using the iSNS 
 protocol." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPgEntry 1 } 
 
isnsRegPgIscsiNodeIdx       OBJECT-TYPE 
    SYNTAX                  NodeIndexId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The iSCSI Node Index for the node associated with this PG.  
 This index can be used to reference the 
 isnsRegIscsiNodeTable." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPgEntry 2 } 
 
isnsRegPgIscsiName          OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..223)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The iSCSI Name of the initiator or target associated with 
 the storage node.  The iSCSI Name can not be longer then 
 223 bytes.  The iSNS Server internal maximum size is 224 
 bytes to provide NULL termination.  This is the PG iSCSI Name 
 that uniquely identifies the iSCSI Storage Node that is 
 associated with this PG." 
    ::= { isnsRegPgEntry 3 } 
 
isnsRegPgPortalPrtlIdx      OBJECT-TYPE 
    SYNTAX                  PortalIndexId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The Portal Index for the Portal associated with this PG.  
 This index can be used to reference the isnsRegPortalTable." 
    ::= { isnsRegPgEntry 4 } 
 
isnsRegPgPortalAddrType     OBJECT-TYPE 
    SYNTAX                  InetAddressType 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The type of Inet address in isnsRegPgPortalAddr." 
    ::= { isnsRegPgEntry 5 } 
 
isnsRegPgPortalAddr         OBJECT-TYPE 
    SYNTAX                  InetAddress 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The Inet Address for the Portal that is associated with  
    
   Gibbons               Expires January 2006                       50 

   Internet Draft              iSNS MIB                      July 2005 

 the PG." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPgEntry 6 } 
 
isnsRegPgPortalPortType     OBJECT-TYPE 
    SYNTAX                  PortalPortTypeId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The port type, either UDP or TCP, for the Portal that 
 is associated with this registered PG object." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPgEntry 7 } 
 
isnsRegPgPortalPort         OBJECT-TYPE 
    SYNTAX                  PortalPortId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The port number for the Portal that is associated with 
 this registered PG object.  Whether the Portal type is 
 TCP or UDP is indicated by isnsRegPgPortalPortType." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPgEntry 8 } 
 
isnsRegPgPGT                OBJECT-TYPE 
    SYNTAX                  PortalGroupTagIdOrZero 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The Portal Group Tag (PGT) for the registered iSCSI Portal 
 Group object in an iSNS Server instance.  This indicates 
 the tag value that the Portal uses for access to the iSCSI 
 Storage Node.  The PGT is used for coordinated access between 
 multiple Portals, as described in the iSCSI Specification 
 [iSCSI].  The value of zero indicates a NULL value, or no 
 association." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegPgEntry 9 } 
 
-- 
-- iSNS Registered iSCSI Node Information 
-- 
 
isnsRegIscsiNodeInfo  OBJECT IDENTIFIER ::= { isnsReg  4 } 
 
-- 
-- iSNS Registered iSCSI Node Table 
-- 
 
isnsRegIscsiNodeTable       OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsRegIscsiNodeEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
    
   Gibbons               Expires January 2006                       51 

   Internet Draft              iSNS MIB                      July 2005 

"A table containing the registered iSCSI Nodes in the iSNS 
 server instance.  Storage devices register using the iSNS 
 protocol.  While a device cannot be registered in an iSNS 
 server using SNMP, an entry can be deleted in order to 
 remove 'stale' entries. The number of entries is related 
 to the number of iSCSI nodes registered in the iSNS." 
    ::= { isnsRegIscsiNodeInfo 1 } 
 
isnsRegIscsiNodeEntry       OBJECT-TYPE 
    SYNTAX                  IsnsRegIscsiNodeEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"Information on one iSCSI node that has been registered in 
 the iSNS Server instance.  The RowStatus managed object 
 provides a method to delete registered nodes that were not 
 properly deregistered / removed through iSNSP.  New rows 
 cannot be added using SNMP." 
    INDEX { isnsSrvrInstIndex, 
            isnsRegEntityIdx, 
            isnsRegIscsiNodeIdx } 
    ::= { isnsRegIscsiNodeTable 1 } 
 
IsnsRegIscsiNodeEntry ::= SEQUENCE {  
    isnsRegIscsiNodeIdx            NodeIndexId, 
    isnsRegIscsiNodeName           SnmpAdminString, 
    isnsRegIscsiNodeType           NodeTypeId, 
    isnsRegIscsiNodeAlias          SnmpAdminString, 
    isnsRegIscsiNodeScnBitmap      ScnBitmapId, 
    isnsRegIscsiNodeWwnToken       FcNameIdOrZero, 
    isnsRegIscsiNodeAuthMethod     SnmpAdminString 
                                 } 
 
isnsRegIscsiNodeIdx         OBJECT-TYPE 
    SYNTAX                  NodeIndexId 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"The Node Index for this node.  The index is created by the 
 iSNS Server for mapping between registered objects.  The 
 index used for a specific node name is only persistent 
 across reboots for nodes that have been registered in a 
 Discovery Domain (DD) or as a control node.  If a node is 
 not registered in any DD or as a control node, then the 
 index used for a node can change after a server 
 reinitialization." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegIscsiNodeEntry 1 } 
 
isnsRegIscsiNodeName        OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..223)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The iSCSI Name of the initiator or target associated with 
    
   Gibbons               Expires January 2006                       52 

   Internet Draft              iSNS MIB                      July 2005 

 the storage node.  The iSCSI Name can not be longer then 
 223 bytes.  The iSNS Server internal maximum size is 224 
 bytes to provide NULL termination.  This is the iSCSI Name 
 that uniquely identifies the initiator, initiator/target, 
 target, or control node in the network." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegIscsiNodeEntry 2 } 
 
isnsRegIscsiNodeType        OBJECT-TYPE 
    SYNTAX                  NodeTypeId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The Node Type bit-map defining the functions of this 
 iSCSI node. 
               Bit         Node Type 
           ---------       --------- 
           All Others       RESERVED 
              29            Control 
              30            Initiator 
              31            Target 
" 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegIscsiNodeEntry 3 } 
 
isnsRegIscsiNodeAlias       OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..255)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The Alias name of the iSCSI node.  This is a variable-length 
 text-based description of up to 255 bytes." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegIscsiNodeEntry 4 } 
 
isnsRegIscsiNodeScnBitmap   OBJECT-TYPE 
    SYNTAX                  ScnBitmapId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The State Change Notification (SCN) bitmap for a node. 
     Bit Field          Flag Description 
     ---------          ---------------- 
        0               INITIATOR AND SELF INFORMATION ONLY 
        1               TARGET AND SELF INFORMATION ONLY  
        2               MANAGEMENT REGISTRATION/SCN 
        3               REGISTERED OBJECT REMOVED 
        4               REGISTERED OBJECT ADDED 
        5               REGISTERED OBJECT UPDATED 
        6               DD/DDS MEMBER REMOVED (MGT REG/SCN 
                          ONLY) 
        7               DD/DDS MEMBER ADDED (MGT REG/SCN 
                          ONLY) 
 
 Setting a bit to true (1) indicates the flag is 
    
   Gibbons               Expires January 2006                       53 

   Internet Draft              iSNS MIB                      July 2005 

 enabled." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegIscsiNodeEntry 5 } 
 
isnsRegIscsiNodeWwnToken    OBJECT-TYPE 
    SYNTAX                  FcNameIdOrZero 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"This contains an optional globally unique 64-bit integer 
 value that can be used to represent the World Wide Node 
 Name of the iSCSI device in a Fibre Channel fabric. This 
 identifier is used during the device registration process, 
 and MUST conform to the requirements in [FC-FS].  The 
 value of zero for this managed object indicates that a 
 Node WWN token has not been assigned." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegIscsiNodeEntry 6 } 
 
isnsRegIscsiNodeAuthMethod  OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..255)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"This attribute contains a null-terminated string containing 
 UTF-8 text listing the iSCSI authentication methods enabled 
 for this iSCSI Node, in order of preference.  The text values 
 used to identify iSCSI authentication methods are embedded in 
 this string attribute and delineated by a comma.  The text 
 values are identical to those found in the main iSCSI draft; 
 additional vendor-specific text values are also possible." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegIscsiNodeEntry 7 } 
 
-- 
-- iSNS Registered FC Port Information 
-- 
 
isnsRegFcPortInfo           OBJECT IDENTIFIER 
                                   ::= { isnsReg  5 } 
 
-- 
-- iSNS Registered FC Port Table 
-- 
 
isnsRegFcPortTable          OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsRegFcPortEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"Information on registered FC Ports in the iSNS." 
    ::= { isnsRegFcPortInfo 1 } 
 
isnsRegFcPortEntry          OBJECT-TYPE 
    SYNTAX                       IsnsRegFcPortEntry 
    
   Gibbons               Expires January 2006                       54 

   Internet Draft              iSNS MIB                      July 2005 

    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"Information on one FC Port that has been registered in 
 iSNS." 
    INDEX { isnsSrvrInstIndex, 
            isnsRegEntityIdx, 
            isnsRegFcPortWwpn } 
    ::= { isnsRegFcPortTable 1 } 
 
IsnsRegFcPortEntry ::= SEQUENCE {  
    isnsRegFcPortWwpn              FcNameIdOrZero, 
    isnsRegFcPortID                FcAddressIdOrZero, 
    isnsRegFcPortType              Integer32, 
    isnsRegFcPortSymName           SnmpAdminString, 
    isnsRegFcPortFabricPortWwn     FcNameIdOrZero, 
    isnsRegFcPortHA                FcAddressIdOrZero, 
    isnsRegFcPortAddrType          InetAddressType, 
    isnsRegFcPortAddr              InetAddress, 
    isnsRegFcPortFcCos             CosBitmapId, 
    isnsRegFcPortFc4Types          OCTET STRING, 
    isnsRegFcPortFc4Descr          OCTET STRING, 
    isnsRegFcPortFc4Features       OCTET STRING, 
    isnsRegFcPortScnBitmap         ScnBitmapId, 
    isnsRegFcPortRole              NodeTypeId, 
    isnsRegFcPortFcNodeWwn         FcNameIdOrZero, 
    isnsRegFcPortPpnWwn            FcNameIdOrZero 
                                } 
 
isnsRegFcPortWwpn           OBJECT-TYPE 
    SYNTAX                  FcNameIdOrZero 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"The FC Port's World Wide Port Name as defined in the iSNS 
 Specification [iSNS].  The value of zero is not valid for 
 this managed object." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcPortEntry 1 } 
 
isnsRegFcPortID             OBJECT-TYPE 
    SYNTAX                  FcAddressIdOrZero 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION    
"The FC Port's Port ID as defined in the iSNS Specification 
 [iSNS]." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcPortEntry 2 } 
 
isnsRegFcPortType           OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
    
   Gibbons               Expires January 2006                       55 

   Internet Draft              iSNS MIB                      July 2005 

"The FC Port Port Type as defined in the iSNS Specification 
 [iSNS] and the Fibre Channel Generic Services [FC-GS] 
 Specification. Current values are as shown below: 
        unknown      (0), 
        nPort        (1), 
        nlPort       (2), 
        fNlPort      (3), 
        fPort        (129),     -- x'81' 
        flPort       (130),     -- x'82' 
        ePort        (132),     -- x'84' 
        bPort        (133),     -- x'85' 
        mFcpPort     (65297),   -- x'FF11' 
        iFcpPort     (65298),   -- x'FF12' 
        unknownEnd   (65535) 
 ." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcPortEntry 3 } 
 
isnsRegFcPortSymName      OBJECT-TYPE 
    SYNTAX                SnmpAdminString (SIZE (0..255)) 
    MAX-ACCESS            read-only 
    STATUS                current 
    DESCRIPTION 
"The optional FC Port Port Symbolic Name as defined in the 
 iSNS Specification [iSNS].  If not provided then the string 
 SHALL be zero length." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcPortEntry 4 } 
 
isnsRegFcPortFabricPortWwn  OBJECT-TYPE 
    SYNTAX                  FcNameIdOrZero 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The Fabric Port WWN for this entry as defined in the iSNS 
 Specification [iSNS].  The value of zero for this managed 
 object indicates that the Fabric Port WWN is not known, 
 or has not yet been registered with the iSNS Server." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
   ::= { isnsRegFcPortEntry 5 } 
 
isnsRegFcPortHA             OBJECT-TYPE 
    SYNTAX                  FcAddressIdOrZero 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION    
"The FC Port Hard Address as defined in the iSNS 
 Specification [iSNS]." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcPortEntry 6 } 
 
isnsRegFcPortAddrType       OBJECT-TYPE 
    SYNTAX                  InetAddressType 
    MAX-ACCESS              read-only 
    STATUS                  current 
    
   Gibbons               Expires January 2006                       56 

   Internet Draft              iSNS MIB                      July 2005 

    DESCRIPTION 
"The type of Inet address in the isnsRegFcPortAddr." 
    ::= { isnsRegFcPortEntry 7 } 
 
isnsRegFcPortAddr           OBJECT-TYPE 
    SYNTAX                  InetAddress 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The FC Port Inet Address as defined in the iSNS 
 Specification [iSNS]." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcPortEntry 8 } 
 
isnsRegFcPortFcCos          OBJECT-TYPE 
    SYNTAX                  CosBitmapId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The FC Port Class of Service as defined in the iSNS 
 Specification [iSNS]." 
    REFERENCE  "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcPortEntry 9 } 
 
isnsRegFcPortFc4Types       OBJECT-TYPE 
    SYNTAX                  OCTET STRING (SIZE (32)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The FC Port FC-4 Types as defined in the iSNS 
 Specification [iSNS]." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcPortEntry 10 } 
 
isnsRegFcPortFc4Descr       OBJECT-TYPE 
    SYNTAX                  OCTET STRING(SIZE(0..255)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The FC Port FC-4 Descriptors as defined in the iSNS 
 Specification [iSNS]." 
     REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
   ::= { isnsRegFcPortEntry 11 } 
 
isnsRegFcPortFc4Features    OBJECT-TYPE 
    SYNTAX                  OCTET STRING (SIZE (128)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The FC Port FC-4 Features as defined in the iSNS 
 Specification [iSNS]." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcPortEntry 12 } 
 
isnsRegFcPortScnBitmap      OBJECT-TYPE 
    
   Gibbons               Expires January 2006                       57 

   Internet Draft              iSNS MIB                      July 2005 

    SYNTAX                  ScnBitmapId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The State Change Notification (SCN) bitmap for a FC Port. 
     Bit Field          Flag Description 
     ---------          ---------------- 
        0               INITIATOR AND SELF INFORMATION ONLY 
        1               TARGET AND SELF INFORMATION ONLY  
        2               MANAGEMENT REGISTRATION/SCN 
        3               REGISTERED OBJECT REMOVED 
        4               REGISTERED OBJECT ADDED 
        5               REGISTERED OBJECT UPDATED 
        6               DD/DDS MEMBER REMOVED (MGT REG/SCN 
                          ONLY) 
        7               DD/DDS MEMBER ADDED (MGT REG/SCN 
                          ONLY) 
 
 Setting a bit to true (1) indicates the flag is 
 enabled." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcPortEntry 13 } 
 
isnsRegFcPortRole           OBJECT-TYPE 
    SYNTAX                  NodeTypeId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The Node Type bit-map defining the functions of this FC Port. 
               Bit         Node Type 
           ---------       --------- 
           All Others       RESERVED 
              29            Control 
              30            Initiator 
              31            Target 
" 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcPortEntry 14 } 
 
isnsRegFcPortFcNodeWwn      OBJECT-TYPE 
    SYNTAX                  FcNameIdOrZero 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The FC Node WWN of the FC Node that has been associated with 
 this FC Port as defined in the iSNS Specification [iSNS].  
 This managed object may contain the value of zero prior to 
 a device registering this value with the iSNS Server." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcPortEntry 15 } 
 
isnsRegFcPortPpnWwn         OBJECT-TYPE 
    SYNTAX                  FcNameIdOrZero 
    MAX-ACCESS              read-only 
    STATUS                  current 
    
   Gibbons               Expires January 2006                       58 

   Internet Draft              iSNS MIB                      July 2005 

    DESCRIPTION 
"The Permanent Port Name attribute is the FC Port Name WWPN of 
 the first Storage Node registered in the iSNS Database that is 
 associated with a particular FC Device (FC Node).  The PPN of 
 all subsequent Storage Node registrations that are associated 
 with that FC Device (FC Node) SHALL be set to the FC Port Name 
 WWPN of the first Storage Node, as defined in the iSNS 
 Specification [iSNS].  This managed object may contain the 
 value of zero prior to a device registering this value with 
 the iSNS Server" 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcPortEntry 16 } 
 
-- 
-- iSNS Registered FC Node Information 
-- 
 
isnsRegFcNodeInfo     OBJECT IDENTIFIER ::= { isnsReg  6 } 
 
-- 
-- iSNS Registered FC Node Table 
-- 
 
isnsRegFcNodeTable          OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsRegFcNodeEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"A table containing the registered FC Nodes in the iSNS." 
    ::= { isnsRegFcNodeInfo 1 } 
 
isnsRegFcNodeEntry          OBJECT-TYPE 
    SYNTAX                  IsnsRegFcNodeEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"Information on one registered FC node that has been regisered 
 in the iSNS." 
    INDEX { isnsSrvrInstIndex, 
             isnsRegFcNodeWwn } 
    ::= { isnsRegFcNodeTable 1 } 
 
IsnsRegFcNodeEntry ::= SEQUENCE {  
    isnsRegFcNodeWwn            FcNameIdOrZero, 
    isnsRegFcNodeSymName        SnmpAdminString, 
    isnsRegFcNodeAddrType       InetAddressType, 
    isnsRegFcNodeAddr           InetAddress, 
    isnsRegFcNodeIPA            OCTET STRING, 
    isnsRegFcNodeProxyIscsiName SnmpAdminString 
                                } 
 
isnsRegFcNodeWwn            OBJECT-TYPE 
    SYNTAX                  FcNameIdOrZero 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    
   Gibbons               Expires January 2006                       59 

   Internet Draft              iSNS MIB                      July 2005 

    DESCRIPTION 
"The FC Node World Wide Node Name as defined in the iSNS 
 Specification [iSNS].  The value of zero is not valid for 
 this managed object." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcNodeEntry 1 } 
 
isnsRegFcNodeSymName        OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..255)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The optional FC Node Symbolic Name of the node as 
 defined in the iSNS Specification [iSNS].  This is a 
 variable-length text-based description.  If not 
 provided then the string SHALL be zero length." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcNodeEntry 2 } 
 
isnsRegFcNodeAddrType       OBJECT-TYPE 
    SYNTAX                  InetAddressType 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The type of Inet address in isnsRegFcNodeAddr." 
    ::= { isnsRegFcNodeEntry 3 } 
 
isnsRegFcNodeAddr           OBJECT-TYPE 
    SYNTAX                  InetAddress 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The FC Node Inet address of the node as defined in the 
 iSNS Specification [iSNS]." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcNodeEntry 4 } 
  
isnsRegFcNodeIPA            OBJECT-TYPE 
    SYNTAX                  OCTET STRING (SIZE(8)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"This managed object identifies the FC Initial Process 
 Associator of the node as defined in the iSNS 
 Specification [iSNS]." 
    REFERENCE "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcNodeEntry 5 } 
 
isnsRegFcNodeProxyIscsiName OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..223)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The iSCSI Name used to represent the FC Node in the IP 
 network. It is used as a pointer to the matching iSCSI Name 
    
   Gibbons               Expires January 2006                       60 

   Internet Draft              iSNS MIB                      July 2005 

 entry in the iSNS Server.  Its value is usually registered 
 by an FC-iSCSI gateway connecting the IP network to the 
 fabric containing the FC device." 
    REFERENCE  "draft-ietf-ips-iSNS-22.txt, Section 6" 
    ::= { isnsRegFcNodeEntry 6 } 
 
-- 
-- Basic information for the registered FC Node object 
-- 
 
isnsRegFcNodeInfoTable      OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsRegFcNodeInfoEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"A table containing basic information on registered FC Nodes 
 in the iSNS.  The number of entries in the table is dependent 
 on the number of FC Nodes registered in the iSNS." 
    ::= { isnsRegFcNodeInfo 2 } 
 
isnsRegFcNodeInfoEntry      OBJECT-TYPE 
    SYNTAX                  IsnsRegFcNodeInfoEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"Information on one FC Node that has been registered in the 
 iSNS." 
    AUGMENTS { isnsRegFcNodeEntry } 
    ::= { isnsRegFcNodeInfoTable 1 } 
 
IsnsRegFcNodeInfoEntry ::= 
    SEQUENCE {  
       isnsRegFcNodeInfoNumFcPorts   Unsigned32 
           } 
 
isnsRegFcNodeInfoNumFcPorts OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 0 .. 4294967295 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The number of FC Ports associated with this FC Node." 
    ::= { isnsRegFcNodeInfoEntry 1 } 
 
-- 
--  Mapping from FC Node to Entity - FC Port 
-- 
 
isnsRegFcNodeFcPortTable    OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsRegFcNodeFcPortEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"A table containing the mapping of registered FC Nodes to 
 associated registered iFCP/FC Ports and registered Entity 
 objects in the iSNS Server instance." 
    
   Gibbons               Expires January 2006                       61 

   Internet Draft              iSNS MIB                      July 2005 

    ::= { isnsRegFcNodeInfo 3 } 
 
isnsRegFcNodeFcPortEntry    OBJECT-TYPE 
    SYNTAX                  IsnsRegFcNodeFcPortEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"Information on one mapping from an FC Port and Entity to an 
 FC node registered in the iSNS." 
    INDEX { isnsSrvrInstIndex, 
            isnsRegFcNodeWwn, 
            isnsRegFcPortWwpn } 
    ::= { isnsRegFcNodeFcPortTable 1 } 
 
IsnsRegFcNodeFcPortEntry ::= SEQUENCE {  
        isnsRegFcNodeFcPortEntityEIdx EntityIndexId 
                                    } 
 
isnsRegFcNodeFcPortEntityEIdx OBJECT-TYPE 
    SYNTAX                  EntityIndexId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The Entity Index for the registered Entity object associated 
 with the FC Port and FC Node." 
    ::= { isnsRegFcNodeFcPortEntry 1 } 
 
-- 
-- iSNS Client instance managed objects -------------------- 
-- 
 
isnsClntInfo OBJECT IDENTIFIER ::= { isnsObj 2 } 
 
isnsClntInstTable           OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsClntInstEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"This table list the iSNS Client instances managed through 
 the same SNMP context." 
    ::= { isnsClntInfo 1 } 
 
isnsClntInstEntry           OBJECT-TYPE 
    SYNTAX                  IsnsClntInstEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"An entry in the iSNS Client table.  The number or rows in 
 the table is dependent on the number of iSNS Client instances 
 managed through the same SNMP context." 
    INDEX   { isnsClntInstIndex } 
    ::= { isnsClntInstTable 1 } 
 
IsnsClntInstEntry ::= 
    SEQUENCE {  
    
   Gibbons               Expires January 2006                       62 

   Internet Draft              iSNS MIB                      July 2005 

       isnsClntInstIndex           Unsigned32, 
       isnsClntInstName            SnmpAdminString, 
       isnsClntInstIsnspVersion    Integer32, 
       isnsClntInstDescription     SnmpAdminString, 
       isnsClntInstUptime          TimeTicks, 
       isnsClntInstAvailDiscMthd   SrvrDscvryMthdId, 
       isnsClntInstPrmryDiscMthd   SrvrDscvryMthdId, 
       isnsClntInstScndryDiscMthd  SrvrDscvryMthdId, 
       isnsClntInstDiscMcGrpType   InetAddressType, 
       isnsClntInstDiscMcGrp       InetAddress 
             } 
 
isnsClntInstIndex           OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 1 .. 4294967295 ) 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"The instance of this iSNS Client being managed.  Each 
 managed client is uniquely identified by the instance index 
 in the MIB." 
    ::= { isnsClntInstEntry 1 } 
 
isnsClntInstName            OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..255)) 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION 
"A name that can be assigned to the iSNS client instance.  
 If not configured, the value is an empty string." 
    ::= { isnsClntInstEntry 2 } 
 
isnsClntInstIsnspVersion    OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION  
"The iSNSP version that this client will support.  If all 
 versions of iSNSP are supported, then the returned 
 value can be 0." 
    REFERENCE               "draft-ietf-ips-iSNS-22.txt" 
    ::= { isnsClntInstEntry 3 } 
 
isnsClntInstDescription     OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..255)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"This provides a description and detail information 
 about this client.  If this client instance is utilizing 
 the product of a particular 'vendor' or 'open source', then 
 this managed object contains that vendor's name and version, 
 or open source name and version.  Otherwise, it contains 
 the empty string.  The format of the string 
 is as follows: 'Vendor/Open Source Name, Vendor/Open Source 
 Version, Vendor/Open Source Defined Information'. 
    
   Gibbons               Expires January 2006                       63 

   Internet Draft              iSNS MIB                      July 2005 

 
       Field            Description 
     ---------        ---------------- 
    Vendor/OS Name    The name of the vendor or open 
                      source (if one exists) 
    Vendor/OS Version The version of the vendor or 
                      open source product 
    Vendor/OS Defined This follows the second comma in the 
                      string, if one exists, and is vendor 
                      or open source developer defined 
" 
    ::= { isnsClntInstEntry 4 } 
 
 
isnsClntInstUptime          OBJECT-TYPE 
     SYNTAX                 TimeTicks 
     MAX-ACCESS             read-only 
     STATUS                 current 
     DESCRIPTION  
"The time that this iSNS client instance has been active.  In 
 otherwords, the time since last reinitialization." 
    ::= { isnsClntInstEntry 5 } 
 
isnsClntInstAvailDiscMthd   OBJECT-TYPE 
    SYNTAX                  SrvrDscvryMthdId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION  
"Indicates the available discovery methods for this client 
 These are the discovery methods that can be configured in 
 isnsClntInstPrmryDiscMthd and isnsClntInstScndryDiscMthd." 
    ::= { isnsClntInstEntry 6 } 
 
isnsClntInstPrmryDiscMthd   OBJECT-TYPE 
    SYNTAX                  SrvrDscvryMthdId 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION  
"Indicates the primary discovery process currently enabled 
 on this iSNS Client instance.  This allows the discovery 
 process used by a client to be configured.  Only one 
 discovery method in the bitmap is allowed to be designated 
 as the primary discovery method at any given time.  If the 
 primary discovery process is successful, then secondary 
 discovery methods are not used." 
    ::= { isnsClntInstEntry 7 } 
 
isnsClntInstScndryDiscMthd  OBJECT-TYPE 
    SYNTAX                  SrvrDscvryMthdId 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION  
"Indicates the secondary discovery methods enabled on this 
 iSNS Client instance.  This allows secondary discovery 
 methods, which are used by a client only if the primary method 
    
   Gibbons               Expires January 2006                       64 

   Internet Draft              iSNS MIB                      July 2005 

 does not locate an iSNS Server, to be configured.  For 
 example, DHCP may be the primary discovery method, and 
 configured-server-list may be a secondary discovery method. 
 Multiple discovery methods in the bitmap may be designated 
 as secondary discovery methods.  If this is the case, then 
 the order they are used is determined by the client.  The 
 primary discovery method should not be listed as a secondary 
 discovery method.  If no secondary discovery methods have 
 been configured, then no bits are enabled.  All secondary 
 server methods will be attempted." 
    ::= { isnsClntInstEntry 8 } 
 
isnsClntInstDiscMcGrpType   OBJECT-TYPE 
    SYNTAX                  InetAddressType 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION 
"The type of Inet address in isnsClntInstDiscMcGrp. If not 
 set, then the value is unknown(0)." 
    ::= { isnsClntInstEntry 9 } 
 
isnsClntInstDiscMcGrp       OBJECT-TYPE 
    SYNTAX                  InetAddress 
    MAX-ACCESS              read-write 
    STATUS                  current 
    DESCRIPTION 
"The multicast group that iSNS Heartbeat messages are 
 listened for, if multicast based discovery has been enabled 
 for this client instance.  If not configured, then 
 the value is an empty string." 
    ::= { isnsClntInstEntry 10 } 
 
-- 
-- iSNS primary address table for user configured 
-- addresses 
-- 
 
isnsClntCfgSrvrTable        OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsClntCfgSrvrEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"iSNS Address table for direct user configuration.  If 
 configured address server discovery is being used, defined 
 as isnsClntInstPrmryDiscMthd or isnsClntInstScndryDiscMthd 
 being set to 'cfgdServerList', this table provides the 
 list of addresses to check for an iSNS Server. The number 
 of rows is dependent on the number of adresses that the user 
 configures. The active/backup role of the configured server  
 is not within the scope of this MIB and hence not included 
 in this table. " 
    ::= { isnsClntInfo 2 } 
 
isnsClntCfgSrvrEntry        OBJECT-TYPE 
    SYNTAX                  IsnsClntCfgSrvrEntry 
    
   Gibbons               Expires January 2006                       65 

   Internet Draft              iSNS MIB                      July 2005 

    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"An entry in the configured server table.  Entries can be 
 added by specifying a configuration address, adddress 
 type, and row status." 
     INDEX          { isnsClntInstIndex, 
                      isnsClntCfgSrvrIndex } 
     ::= { isnsClntCfgSrvrTable 1 } 
 
IsnsClntCfgSrvrEntry ::= SEQUENCE   {  
     isnsClntCfgSrvrIndex          Unsigned32, 
     isnsClntCfgSrvrAddrType       InetAddressType, 
     isnsClntCfgSrvrAddr           InetAddress, 
     isnsClntCfgSrvrTcpPort        Integer32, 
     isnsClntCfgSrvrUdpPort        Integer32, 
     isnsClntCfgSrvrPriority       Integer32, 
     isnsClntCfgSrvrTimeout        Integer32, 
     isnsClntCfgSrvrRetries        Integer32, 
     isnsClntCfgSrvrRowStatus      RowStatus 
                                    } 
 
isnsClntCfgSrvrIndex        OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 1 .. 255 ) 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"This managed object identifies an iSNS server that 
 has been configured for possible use by an iSNS client in 
 the network.  When the option for configured address server 
 discovery is being used, each iSNS server for the configured 
 network is placed in this table.  The number of configured 
 servers is limited to a maximum of 255.  This managed object 
 is not directly related to the managed object 
 isnsSrvrInstIndex, which is the index for the table 
 isnsSrvrInstTable." 
     ::= { isnsClntCfgSrvrEntry 1 } 
 
isnsClntCfgSrvrAddrType     OBJECT-TYPE 
    SYNTAX                  InetAddressType 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"The type of Inet address in isnsClntCfgSrvrAddr." 
     ::= { isnsClntCfgSrvrEntry 2 } 
 
isnsClntCfgSrvrAddr         OBJECT-TYPE 
    SYNTAX                  InetAddress 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"Identifies the IP address of the configured iSNS server." 
    ::= { isnsClntCfgSrvrEntry 3 } 
 
isnsClntCfgSrvrTcpPort      OBJECT-TYPE 
    
   Gibbons               Expires January 2006                       66 

   Internet Draft              iSNS MIB                      July 2005 

    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"Indicates the TCP port the configured iSNS server uses. 
 The well known TCP port for iSNSP is 3205.  If the 
 value is 0 then TCP is not supported by the server." 
    DEFVAL                  { 3205 } 
    ::= { isnsClntCfgSrvrEntry 4 } 
 
isnsClntCfgSrvrUdpPort      OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"Indicates the UDP port the configured iSNS server uses. 
 The well known UDP port for iSNSP is 3205.  If the 
 value is 0 then UDP is not supported by the server." 
    DEFVAL                  { 3205 } 
    ::= { isnsClntCfgSrvrEntry 5 } 
 
isnsClntCfgSrvrPriority     OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 100 ) 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"The priority of this entry in the table.  The client should 
 attempt to locate/register the highest priority entry first." 
    DEFVAL                  { 50 } 
    ::= { isnsClntCfgSrvrEntry 6 } 
 
isnsClntCfgSrvrTimeout      OBJECT-TYPE 
    SYNTAX                  Integer32 ( 1 .. 300 ) 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"The timeout value, in seconds, for attempting to register 
 with this entry in the table.  After a timeout, another 
 retry is attempted until the number of retries as listed 
 in the managed object isnsClntCfgSrvrRetries have been 
 attempted." 
    DEFVAL                  { 5 } 
    ::= { isnsClntCfgSrvrEntry 7 } 
 
isnsClntCfgSrvrRetries      OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 10 ) 
    MAX-ACCESS              read-create 
    STATUS                  current 
    DESCRIPTION 
"The number of retries that should be used for attempting 
 to register with this entry in the table." 
    DEFVAL                  { 3 } 
    ::= { isnsClntCfgSrvrEntry 8 } 
 
isnsClntCfgSrvrRowStatus    OBJECT-TYPE 
    
   Gibbons               Expires January 2006                       67 

   Internet Draft              iSNS MIB                      July 2005 

     SYNTAX                 RowStatus 
     MAX-ACCESS             read-create 
    STATUS                  current 
     DESCRIPTION 
"This indicates the status of this entry in the 
 table. This item can be used to determine if the 
 entry is a valid value." 
    ::= { isnsClntCfgSrvrEntry 9 } 
 
-- 
-- iSNS primary address table listing discovered 
-- servers for each instance. 
-- 
 
isnsClntDscvrdSrvrTable     OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsClntDscvrdSrvrEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION 
"This table lists the iSNS servers which have been discovered 
 for a client instance.  The discovery methods used for a 
 client are specified using isnsClntInstPrmryDiscMthd and 
 isnsClntInstScndryDiscMthd.  If the primary discovery method is 
 successful, then the secondary methods are not used.  The 
 discovery method used to find a specific entry is indicated in 
 the isnsClntDscvrdSrvrDiscMthd managed object.  Normally an 
 iSNS Client will register storage nodes in one discovered iSNS 
 server.  However, it may sometimes be desired to register 
 storage nodes in multiple iSNS servers.  This table is 
 read-only.  The number of rows is dependent on the number of 
 iSNS servers that are discovered for the managed iSNS clients. 
 The entries in this table are updated after a discovery 
 process is completed. The active/backup role of the discovered 
 server is not within the scope of this MIB and hence not  
 included in this table. " 
    ::= { isnsClntInfo 3 } 
 
isnsClntDscvrdSrvrEntry     OBJECT-TYPE 
    SYNTAX                  IsnsClntDscvrdSrvrEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"An entry in the isnsClntDscvrdSrvrTable table providing 
 information on a discovered iSNS server for a specified 
 client." 
     INDEX          { isnsClntInstIndex, 
                      isnsClntDscvrdSrvrIndex } 
     ::= { isnsClntDscvrdSrvrTable 1 } 
 
IsnsClntDscvrdSrvrEntry ::= SEQUENCE   {  
     isnsClntDscvrdSrvrIndex         Unsigned32, 
     isnsClntDscvrdSrvrAddrType      InetAddressType, 
     isnsClntDscvrdSrvrAddr          InetAddress, 
     isnsClntDscvrdSrvrTcpPort       Integer32, 
     isnsClntDscvrdSrvrUdpPort       Integer32, 
    
   Gibbons               Expires January 2006                       68 

   Internet Draft              iSNS MIB                      July 2005 

     isnsClntDscvrdSrvrIsnsVersion   Integer32, 
     isnsClntDscvrdSrvrDiscMthd      SrvrDscvryMthdId 
                                       } 
 
isnsClntDscvrdSrvrIndex     OBJECT-TYPE 
    SYNTAX                  Unsigned32 ( 1 .. 4294967295 ) 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"This managed object, in conjunction with isnsClntInstIndex, 
 is the key that uniquely identifies each entry in this 
 table." 
     ::= { isnsClntDscvrdSrvrEntry 1 } 
 
isnsClntDscvrdSrvrAddrType  OBJECT-TYPE 
    SYNTAX                  InetAddressType 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The type of Inet address in isnsClntDscvrdSrvrAddr." 
    ::= { isnsClntDscvrdSrvrEntry 2 } 
 
isnsClntDscvrdSrvrAddr      OBJECT-TYPE 
    SYNTAX                  InetAddress 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The address of the discovered iSNS server." 
    ::= { isnsClntDscvrdSrvrEntry 3 } 
 
isnsClntDscvrdSrvrTcpPort   OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The TCP port of the discovered iSNS server.  The well known 
 TCP port for iSNSP is 3205." 
    DEFVAL                  { 3205 } 
    ::= { isnsClntDscvrdSrvrEntry 4 } 
 
isnsClntDscvrdSrvrUdpPort   OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The UDP port of the discovered iSNS server.  The well known 
 UDP port for iSNSP is 3205." 
    DEFVAL                  { 3205 } 
    ::= { isnsClntDscvrdSrvrEntry 5 } 
 
isnsClntDscvrdSrvrIsnsVersion OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 100 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
    
   Gibbons               Expires January 2006                       69 

   Internet Draft              iSNS MIB                      July 2005 

"The iSNS version of the discovered version." 
    ::= { isnsClntDscvrdSrvrEntry 6 } 
 
isnsClntDscvrdSrvrDiscMthd  OBJECT-TYPE 
    SYNTAX                  SrvrDscvryMthdId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The discovery method used to find this iSNS server." 
    ::= { isnsClntDscvrdSrvrEntry 7 } 
 
-- 
-- iSNS Client registered Entity information 
-- 
 
isnsClntRegEntityTable      OBJECT-TYPE 
    SYNTAX                  SEQUENCE OF IsnsClntRegEntityEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"This table contains an entry for each Entity that has been 
 registered by an iSNS Client instance managed by this SNMP 
 agent.  This provides a method to map between the iSNS 
 Client and iSNS Server registration information." 
    ::= { isnsClntInfo 4 } 
 
isnsClntRegEntityEntry      OBJECT-TYPE 
    SYNTAX                  IsnsClntRegEntityEntry 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"This represents an Entity supported by an iSNS Client 
 instance managed by this SNMP agent.  The number of rows 
 in the table is dependent on the number of Entities 
 supported by managed iSNS Client instances." 
     INDEX          { isnsClntInstIndex, 
                      isnsClntRegEntityIdx } 
     ::= { isnsClntRegEntityTable 1 } 
 
IsnsClntRegEntityEntry ::= SEQUENCE   {  
     isnsClntRegEntityIdx            EntityIndexId, 
     isnsClntRegEntityEID            SnmpAdminString, 
     isnsClntRegEntityProtocol       EntityProtocolId, 
     isnsClntRegEntityAddrType       InetAddressType, 
     isnsClntRegEntityAddr           InetAddress, 
     isnsClntRegEntityTcpPort        Integer32, 
     isnsClntRegEntityUdpPort        Integer32 
                                       } 
 
isnsClntRegEntityIdx        OBJECT-TYPE 
    SYNTAX                  EntityIndexId 
    MAX-ACCESS              not-accessible 
    STATUS                  current 
    DESCRIPTION      
"This is a unique indentifier to represent an Entity 
    
   Gibbons               Expires January 2006                       70 

   Internet Draft              iSNS MIB                      July 2005 

 registered in an iSNS server.  This is part of the index for 
 the table." 
     ::= { isnsClntRegEntityEntry 1 } 
 
isnsClntRegEntityEID        OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..255)) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The EID is a unique registered Entity object identifier, as 
 specified in the iSNS Specification.  This is the iSNS 
 Entity Identifier for the Entity." 
     ::= { isnsClntRegEntityEntry 2 } 
 
isnsClntRegEntityProtocol   OBJECT-TYPE 
    SYNTAX                  EntityProtocolId 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION      
"The type of protocol that is supported by the Entity." 
     ::= { isnsClntRegEntityEntry 3 } 
 
isnsClntRegEntityAddrType   OBJECT-TYPE 
    SYNTAX                  InetAddressType 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The type of Inet address in isnsClntRegEntityAddr." 
    ::= { isnsClntRegEntityEntry 4 } 
 
isnsClntRegEntityAddr       OBJECT-TYPE 
    SYNTAX                  InetAddress 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The address of the registered entity." 
    ::= { isnsClntRegEntityEntry 5 } 
 
isnsClntRegEntityTcpPort    OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The TCP port of the registered entity.  The well  
known TCP port for iSNSP is 3205." 
    DEFVAL                  { 3205 } 
    ::= { isnsClntRegEntityEntry 6 } 
 
isnsClntRegEntityUdpPort    OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              read-only 
    STATUS                  current 
    DESCRIPTION 
"The UDP port of the registered entity.  The well  
known UDP port for iSNSP is 3205." 
    
   Gibbons               Expires January 2006                       71 

   Internet Draft              iSNS MIB                      July 2005 

    DEFVAL                  { 3205 } 
    ::= { isnsClntRegEntityEntry 7 } 
 
-- 
-- iSNS Notification Block -------------------------------- 
-- 
 
isnsNotification            OBJECT IDENTIFIER 
                                  ::= { isnsObj 3 } 
 
isnsNotificationInfo        OBJECT IDENTIFIER 
                                  ::= { isnsNotification 1 } 
 
isnsInstInfo                OBJECT-TYPE 
    SYNTAX                  SnmpAdminString (SIZE (0..80)) 
    MAX-ACCESS              accessible-for-notify 
    STATUS                  current 
    DESCRIPTION 
"Textual information about the iSNS server or client 
 notification.  An example is: iSNS client started, or iSNS 
 server started.  This is information that would be included 
 in the appropriate notification." 
    ::= { isnsNotificationInfo 1 } 
 
isnsAddrTypeNotifctn        OBJECT-TYPE 
    SYNTAX                  InetAddressType 
    MAX-ACCESS              accessible-for-notify 
    STATUS                  current 
    DESCRIPTION 
"The type of Inet address in isnsSrvrAddrNotifctn." 
    ::= { isnsNotificationInfo 2 } 
 
isnsAddrNotifctn            OBJECT-TYPE 
    SYNTAX                  InetAddress 
    MAX-ACCESS              accessible-for-notify 
    STATUS                  current 
    DESCRIPTION 
"Identifies the address of the iSNS server." 
    ::= { isnsNotificationInfo 3 } 
 
isnsTcpPortNotifctn         OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              accessible-for-notify 
    STATUS                  current 
    DESCRIPTION 
"Indicates the TCP port the iSNS server is using, 
 or 0 if TCP based registrations are not supported." 
    ::= { isnsNotificationInfo 4 } 
 
isnsUdpPortNotifctn         OBJECT-TYPE 
    SYNTAX                  Integer32 ( 0 .. 65535 ) 
    MAX-ACCESS              accessible-for-notify 
    STATUS                  current 
    DESCRIPTION 
"Indicates the UDP port the iSNS server is using, 
    
   Gibbons               Expires January 2006                       72 

   Internet Draft              iSNS MIB                      July 2005 

 or 0 if UDP based registrations are not supported." 
    ::= { isnsNotificationInfo 5 } 
 
isnsNotificationPrefix OBJECT IDENTIFIER 
                           ::= { isnsNotification 0 } 
 
isnsServerStart             NOTIFICATION-TYPE 
    OBJECTS {  
        isnsInstInfo, 
        isnsAddrTypeNotifctn, 
        isnsAddrNotifctn, 
        isnsTcpPortNotifctn, 
        isnsUdpPortNotifctn 
            } 
    STATUS                  current 
    DESCRIPTION 
"This notification is sent when an iSNS Server begins 
 operation.  The notification provides the following: 
        isnsInstInfo         : iSNS Server textual information 
        isnsAddrTypeNotifctn : iSNS Server address type 
        isnsAddrNotifctn     : iSNS Server address 
        isnsTcpPortNotifctn  : iSNS Server TCP Port 
        isnsUdpPortNotifctn  : iSNS Server UDP Port 
" 
    ::= { isnsNotificationPrefix 1 } 
 
isnsServerShutdown          NOTIFICATION-TYPE 
    OBJECTS {  
        isnsInstInfo, 
        isnsAddrTypeNotifctn, 
        isnsAddrNotifctn, 
        isnsTcpPortNotifctn, 
        isnsUdpPortNotifctn 
            } 
    STATUS                  current 
    DESCRIPTION 
"This notification is sent when an iSNS Server is 
 shutdown.  The notification provides the following: 
        isnsInstInfo         : iSNS Server textual information 
        isnsAddrTypeNotifctn : iSNS Server address type 
        isnsAddrNotifctn     : iSNS Server address 
        isnsTcpPortNotifctn  : iSNS Server TCP Port 
        isnsUdpPortNotifctn  : iSNS Server UDP Port 
" 
    ::= { isnsNotificationPrefix 2 } 
 
isnsClientStart             NOTIFICATION-TYPE 
    OBJECTS {  
        isnsInstInfo, 
        isnsAddrTypeNotifctn, 
        isnsAddrNotifctn, 
        isnsTcpPortNotifctn, 
        isnsUdpPortNotifctn 
            } 
    STATUS                  current 
    
   Gibbons               Expires January 2006                       73 

   Internet Draft              iSNS MIB                      July 2005 

    DESCRIPTION 
"This notification is sent when an iSNS Client begins 
 operation.  The notification provides the following: 
        isnsInstInfo         : iSNS Client textual information 
        isnsAddrTypeNotifctn : iSNS Client address type 
        isnsAddrNotifctn     : iSNS Client address 
        isnsTcpPortNotifctn  : iSNS Client TCP Port 
        isnsUdpPortNotifctn  : iSNS Client UDP Port 
" 
    ::= { isnsNotificationPrefix 3 } 
 
isnsClientInitalRegistration  NOTIFICATION-TYPE 
    OBJECTS {  
        isnsInstInfo, 
        isnsAddrTypeNotifctn, 
        isnsAddrNotifctn, 
        isnsTcpPortNotifctn, 
        isnsUdpPortNotifctn 
            } 
    STATUS                  current 
    DESCRIPTION 
"This notification is sent when an iSNS Client initially 
 registers with a server.  The notification provides the 
 following: 
        isnsInstInfo         : iSNS Client textual information 
        isnsAddrTypeNotifctn : iSNS Server address type 
        isnsAddrNotifctn     : iSNS Server address 
        isnsTcpPortNotifctn  : iSNS Server TCP Port (if used) 
        isnsUdpPortNotifctn  : iSNS Server UDP Port (if used) 
" 
    ::= { isnsNotificationPrefix 4 } 
 
isnsClientLostConnection    NOTIFICATION-TYPE 
    OBJECTS {  
        isnsInstInfo, 
        isnsAddrTypeNotifctn, 
        isnsAddrNotifctn, 
        isnsTcpPortNotifctn, 
        isnsUdpPortNotifctn 
            } 
    STATUS                  current 
    DESCRIPTION 
"This notification is sent when an iSNS Client loses 
 connection with an iSNS Server.  The notification provides 
 the following: 
        isnsInstInfo         : iSNS Client textual information 
        isnsAddrTypeNotifctn : iSNS Server address type 
        isnsAddrNotifctn     : iSNS Server address 
        isnsTcpPortNotifctn  : iSNS Server TCP Port (if used) 
        isnsUdpPortNotifctn  : iSNS Server UDP Port (if used) 
" 
    ::= { isnsNotificationPrefix 5 } 
 
isnsClientNoServerDiscovered NOTIFICATION-TYPE 
    OBJECTS {  
    
   Gibbons               Expires January 2006                       74 

   Internet Draft              iSNS MIB                      July 2005 

        isnsInstInfo 
            } 
    STATUS                  current 
    DESCRIPTION 
"This notification is sent when a server discovery process 
 completes and no iSNS servers were found.  The notification 
 provides the following: 
        isnsInstInfo         : iSNS Client textual information 
" 
    ::= { isnsNotificationPrefix 6 } 
 
------------------------------------------------------------ 
 
isnsGroups OBJECT IDENTIFIER ::= { isnsConformance 1 } 
 
isnsServerAttributesGroup      OBJECT-GROUP 
    OBJECTS { 
       isnsSrvrInstName, 
       isnsSrvrInstIsnsVersion, 
       isnsSrvrInstDescription, 
       isnsSrvrInstAddressType, 
       isnsSrvrInstAddress, 
       isnsSrvrInstTcpPort, 
       isnsSrvrInstUdpPort, 
       isnsSrvrInstUptime, 
       isnsSrvrInstRole, 
       isnsSrvrInstDiscMthdsEnbld, 
       isnsSrvrInstDiscMcGrpType, 
       isnsSrvrInstDiscMcGrp, 
       isnsSrvrInstCntrlNodeAuth, 
       isnsSrvrInstEsiNonRespThrshld, 
       isnsSrvrInstEnblCntrlNdeMgtScn, 
       isnsSrvrInstDfltDdDdsStatus,  
       isnsSrvrInstUpdateDdDdsSpprtd, 
       isnsSrvrInstUpdateDdDdsEnbld 
            } 
    STATUS                  current 
    DESCRIPTION 
"iSNS Server attributes." 
       ::= { isnsGroups 1 } 
 
isnsServerNumObjGroup      OBJECT-GROUP 
    OBJECTS { 
       isnsNumDds, 
       isnsNumDd, 
       isnsNumEntities, 
       isnsNumPortals, 
       isnsNumPortalGroups, 
       isnsNumIscsiNodes, 
       isnsNumFcPorts, 
       isnsNumFcNodes, 
       isnsRegEntityInfoNumPortals, 
       isnsRegEntityInfoNumPortalGroups, 
       isnsRegEntityInfoNumIscsiNodes, 
       isnsRegEntityInfoNumFcPorts, 
    
   Gibbons               Expires January 2006                       75 

   Internet Draft              iSNS MIB                      July 2005 

       isnsRegEntityInfoNumFcNodes, 
       isnsRegFcNodeInfoNumFcPorts 
            } 
    STATUS                  current 
    DESCRIPTION 
"Managed objects indicating the number of registered objects 
 in an iSNS Server or the number of registered objects 
 associated with a registered Entity.  These managed objects 
 are optional to implement." 
       ::= { isnsGroups 2 } 
 
isnsServerNextIdxGroup      OBJECT-GROUP 
    OBJECTS { 
       isnsNextIdxDds, 
       isnsNextIdxDd, 
       isnsNextIdxUnregIscsiNodeInDd, 
       isnsNextIdxUnregPortalInDd 
            } 
    STATUS                  current 
    DESCRIPTION 
"Managed objects indicating the next available index for object 
 types using indexes in iSNS Server instances." 
       ::= { isnsGroups 3 } 
 
isnsServerIscsiCntlNodeGroup    OBJECT-GROUP 
    OBJECTS { 
       isnsCntlNodeIscsiNodeName, 
       isnsCntlNodeIscsiRowStatus 
            } 
    STATUS                  current 
    DESCRIPTION 
"iSNS Server iSCSI control node managed objects." 
       ::= { isnsGroups 4 } 
 
isnsServerIfcpCntlNodeGroup    OBJECT-GROUP 
    OBJECTS { 
       isnsCntlNodeFcPortRowStatus 
            } 
    STATUS                  current 
    DESCRIPTION 
"iSNS Server iFCP control node managed objects." 
       ::= { isnsGroups 5 } 
 
isnsServerIscsiDdsDdObjGroup   OBJECT-GROUP 
    OBJECTS { 
       isnsDdsSymbolicName, 
       isnsDdsStatus, 
       isnsDdsRowStatus, 
       isnsDdsMemberRowStatus, 
       isnsDdSymbolicName, 
       isnsDdFeatures, 
       isnsDdRowStatus, 
       isnsDdMemberIscsiName, 
       isnsDdMemberIsRegistered, 
       isnsDdMemberRowStatus, 
    
   Gibbons               Expires January 2006                       76 

   Internet Draft              iSNS MIB                      July 2005 

       isnsDdMemberPortalAddrType, 
       isnsDdMemberPortalAddr, 
       isnsDdMemberPortalPortType, 
       isnsDdMemberPortalPort, 
       isnsDdMemberPortalRowStatus, 
       isnsDdMemberPortalIsRegistered 
            } 
    STATUS                  current 
    DESCRIPTION 
"iSNS Server DDS and DD managed objects for iSCSI." 
       ::= { isnsGroups 6 } 
 
isnsServerIfcpDdsDdObjGroup    OBJECT-GROUP 
    OBJECTS { 
       isnsDdsSymbolicName, 
       isnsDdsStatus, 
       isnsDdsRowStatus, 
       isnsDdsMemberRowStatus, 
       isnsDdSymbolicName, 
       isnsDdFeatures, 
       isnsDdRowStatus, 
       isnsDdMemberPortalAddrType, 
       isnsDdMemberPortalAddr, 
       isnsDdMemberPortalPortType, 
       isnsDdMemberPortalPort, 
       isnsDdMemberPortalRowStatus, 
       isnsDdMemberPortalIsRegistered, 
       isnsDdMemberFcIsRegistered, 
       isnsDdMemberFcRowStatus 
            } 
    STATUS                  current 
    DESCRIPTION 
"iSNS Server DDS and DD managed objects for iFCP." 
       ::= { isnsGroups 7 } 
 
isnsServerRegIscsiObjGroup   OBJECT-GROUP 
    OBJECTS { 
       isnsRegEntityEID, 
       isnsRegEntityProtocol, 
       isnsRegEntityMgtAddrType, 
       isnsRegEntityMgtAddr, 
       isnsRegEntityTimestamp, 
       isnsRegEntityVersionMin, 
       isnsRegEntityVersionMax, 
       isnsRegEntityRegPeriod, 
       isnsRegEntityInfoNumPortals, 
       isnsRegEntityInfoNumPortalGroups, 
       isnsRegEntityInfoNumIscsiNodes, 
       isnsRegEntityInfoNumFcPorts, 
       isnsRegEntityInfoNumFcNodes, 
       isnsRegPortalAddrType, 
       isnsRegPortalAddr, 
       isnsRegPortalPortType, 
       isnsRegPortalPort, 
       isnsRegPortalSymName, 
    
   Gibbons               Expires January 2006                       77 

   Internet Draft              iSNS MIB                      July 2005 

       isnsRegPortalEsiInterval, 
       isnsRegPortalEsiPortType, 
       isnsRegPortalEsiPort, 
       isnsRegPortalScnPortType, 
       isnsRegPortalScnPort, 
       isnsRegPortalSecurityInfo, 
       isnsRegPgIscsiNodeIdx, 
       isnsRegPgIscsiName, 
       isnsRegPgPortalPrtlIdx, 
       isnsRegPgPortalAddrType, 
       isnsRegPgPortalAddr, 
       isnsRegPgPortalPortType, 
       isnsRegPgPortalPort, 
       isnsRegPgPGT, 
       isnsRegIscsiNodeName, 
       isnsRegIscsiNodeType, 
       isnsRegIscsiNodeAlias, 
       isnsRegIscsiNodeScnBitmap, 
       isnsRegIscsiNodeWwnToken, 
       isnsRegIscsiNodeAuthMethod 
            } 
    STATUS                  current 
    DESCRIPTION 
"iSNS Server registered iSCSI managed objects." 
       ::= { isnsGroups 8 } 
 
isnsServerRegIfcpObjGroup    OBJECT-GROUP 
    OBJECTS { 
       isnsRegEntityEID, 
       isnsRegEntityProtocol, 
       isnsRegEntityMgtAddrType, 
       isnsRegEntityMgtAddr, 
       isnsRegEntityTimestamp, 
       isnsRegEntityVersionMin, 
       isnsRegEntityVersionMax, 
       isnsRegEntityRegPeriod, 
       isnsRegEntityInfoNumPortals, 
       isnsRegEntityInfoNumPortalGroups, 
       isnsRegEntityInfoNumIscsiNodes, 
       isnsRegEntityInfoNumFcPorts, 
       isnsRegEntityInfoNumFcNodes, 
       isnsRegPortalAddrType, 
       isnsRegPortalAddr, 
       isnsRegPortalPortType, 
       isnsRegPortalPort, 
       isnsRegPortalSymName, 
       isnsRegPortalEsiInterval, 
       isnsRegPortalEsiPortType, 
       isnsRegPortalEsiPort, 
       isnsRegPortalScnPortType, 
       isnsRegPortalScnPort, 
       isnsRegPortalSecurityInfo, 
       isnsRegFcPortID, 
       isnsRegFcPortType, 
       isnsRegFcPortSymName, 
    
   Gibbons               Expires January 2006                       78 

   Internet Draft              iSNS MIB                      July 2005 

       isnsRegFcPortFabricPortWwn, 
       isnsRegFcPortHA, 
       isnsRegFcPortAddrType, 
       isnsRegFcPortAddr, 
       isnsRegFcPortFcCos, 
       isnsRegFcPortFc4Types, 
       isnsRegFcPortFc4Descr, 
       isnsRegFcPortFc4Features, 
       isnsRegFcPortScnBitmap, 
       isnsRegFcPortRole, 
       isnsRegFcPortFcNodeWwn, 
       isnsRegFcPortPpnWwn, 
       isnsRegFcNodeSymName, 
       isnsRegFcNodeAddrType, 
       isnsRegFcNodeAddr, 
       isnsRegFcNodeIPA, 
       isnsRegFcNodeProxyIscsiName, 
       isnsRegFcNodeFcPortEntityEIdx 
            } 
    STATUS                  current 
    DESCRIPTION 
"iSNS Server registered iFCP managed objects." 
       ::= { isnsGroups 9 } 
 
isnsClientAttributesGroup      OBJECT-GROUP 
    OBJECTS { 
       isnsClntInstName, 
       isnsClntInstIsnspVersion, 
       isnsClntInstDescription, 
       isnsClntInstUptime, 
       isnsClntInstAvailDiscMthd, 
       isnsClntInstPrmryDiscMthd, 
       isnsClntInstScndryDiscMthd, 
       isnsClntInstDiscMcGrpType, 
       isnsClntInstDiscMcGrp, 
       isnsClntCfgSrvrAddrType, 
       isnsClntCfgSrvrAddr, 
       isnsClntCfgSrvrTcpPort, 
       isnsClntCfgSrvrUdpPort, 
       isnsClntCfgSrvrPriority, 
       isnsClntCfgSrvrTimeout, 
       isnsClntCfgSrvrRetries, 
       isnsClntCfgSrvrRowStatus, 
       isnsClntDscvrdSrvrAddrType, 
       isnsClntDscvrdSrvrAddr, 
       isnsClntDscvrdSrvrTcpPort, 
       isnsClntDscvrdSrvrUdpPort, 
       isnsClntDscvrdSrvrIsnsVersion, 
       isnsClntDscvrdSrvrDiscMthd, 
       isnsClntRegEntityEID, 
       isnsClntRegEntityProtocol, 
       isnsClntRegEntityAddrType, 
       isnsClntRegEntityAddr, 
       isnsClntRegEntityTcpPort, 
       isnsClntRegEntityUdpPort 
    
   Gibbons               Expires January 2006                       79 

   Internet Draft              iSNS MIB                      July 2005 

            } 
    STATUS                  current 
    DESCRIPTION 
"iSNS Client attributes." 
       ::= { isnsGroups 10 } 
 
isnsNotificationObjGroup    OBJECT-GROUP 
    OBJECTS { 
       isnsInstInfo, 
       isnsAddrTypeNotifctn, 
       isnsAddrNotifctn, 
       isnsTcpPortNotifctn, 
       isnsUdpPortNotifctn 
            } 
    STATUS                  current 
    DESCRIPTION 
"iSNS Notification managed objects." 
       ::= { isnsGroups 11 } 
 
isnsServerNotificationGroup  NOTIFICATION-GROUP 
    NOTIFICATIONS { 
       isnsServerStart, 
       isnsServerShutdown 
                  } 
    STATUS                  current 
    DESCRIPTION 
"iSNS Server Notification managed objects." 
       ::= { isnsGroups 12 } 
 
isnsClientNotificationGroup  NOTIFICATION-GROUP 
    NOTIFICATIONS { 
       isnsClientStart, 
       isnsClientInitalRegistration, 
       isnsClientLostConnection, 
       isnsClientNoServerDiscovered 
            } 
    STATUS                  current 
    DESCRIPTION 
"iSNS Client Notification managed objects." 
       ::= { isnsGroups 13 } 
 
-- 
-- Compliance Information 
-- 
 
isnsCompliances OBJECT IDENTIFIER ::= { isnsConformance 2 } 
 
isnsIscsiServerComplianceV1 MODULE-COMPLIANCE 
    STATUS                  current 
    DESCRIPTION 
"Initial compliance statement for an iSNS Server 
 providing support to iSCSI clients." 
    MODULE       -- this module 
    MANDATORY-GROUPS { 
        isnsServerAttributesGroup, 
    
   Gibbons               Expires January 2006                       80 

   Internet Draft              iSNS MIB                      July 2005 

        isnsServerNextIdxGroup, 
        isnsServerIscsiCntlNodeGroup, 
        isnsServerIscsiDdsDdObjGroup, 
        isnsServerRegIscsiObjGroup, 
        isnsNotificationObjGroup, 
        isnsServerNotificationGroup 
                     } 
    ::= { isnsCompliances 1 } 
 
isnsIscsiClientComplianceV1 MODULE-COMPLIANCE 
    STATUS                  current 
    DESCRIPTION 
"Initial compliance statement for an iSNS Client 
 supporting iSCSI devices." 
    MODULE       -- this module 
    MANDATORY-GROUPS { 
        isnsClientAttributesGroup, 
        isnsNotificationObjGroup, 
        isnsClientNotificationGroup 
                     } 
    ::= { isnsCompliances 2 } 
 
isnsIfcpServerComplianceV1 MODULE-COMPLIANCE 
    STATUS                  current 
    DESCRIPTION 
"Initial compliance statement for an iSNS Server 
 providing support to iFCP Clients." 
    MODULE       -- this module 
    MANDATORY-GROUPS { 
        isnsServerAttributesGroup, 
        isnsServerNextIdxGroup, 
        isnsServerIfcpCntlNodeGroup, 
        isnsServerIfcpDdsDdObjGroup, 
        isnsServerRegIfcpObjGroup, 
        isnsNotificationObjGroup, 
        isnsServerNotificationGroup 
                     } 
    ::= { isnsCompliances 3 } 
 
isnsIfcpClientComplianceV1 MODULE-COMPLIANCE 
    STATUS                  current 
    DESCRIPTION 
"Initial compliance statement for an iSNS Client 
 suporting iFCP gateways." 
    MODULE       -- this module 
    MANDATORY-GROUPS { 
        isnsClientAttributesGroup, 
        isnsNotificationObjGroup, 
        isnsClientNotificationGroup 
                     } 
    ::= { isnsCompliances 4 } 
 
isnsServerCountStatsCompliance MODULE-COMPLIANCE 
    STATUS                  current 
    DESCRIPTION 
    
   Gibbons               Expires January 2006                       81 

   Internet Draft              iSNS MIB                      July 2005 

"This set of groups is required for an implementation 
 if it is desired to indicate that it keeps track of 
 the number of registered objects in the iSNS Server 
 instances over time." 
    MODULE       -- this module 
    MANDATORY-GROUPS { 
        isnsServerNumObjGroup 
                     } 
    ::= { isnsCompliances 5 } 
 
   END 
    
6.      IANA Considerations 
 
   This RFC utilizes the IANA registry of Block Storage Protocols 
   supported by iSNS.  This registry was created for the iSNS 
   Specification [iSNS].  The registry values comprise the valid values 
   for objects using the TC EntityProtocolId. 
    
7.  Security Considerations 
    
   There are a number of management objects defined in this MIB that 
   have a MAX-ACCESS clause of read-write and/or read-create.  Such 
   objects may be considered sensitive or vulnerable in some network 
   environments.  The support for SET operations in a non-secure 
   environment without proper protection can have a negative effect on 
   network operations. 
    
   SNMPv1 by itself is not a secure environment.  Even if the network 
   itself is secure (for example by using IPSec), even then, there is 
   no control as to who on the secure network is allowed to access and 
   GET/SET (read/change/create/delete) the objects in this MIB. 
    
   It is recommended that the implementers consider the security 
   features as provided by the SNMPv3 framework.  Specifically, the use 
   of the User-based Security Model RFC 2574 [RFC2574] and the View-
   based Access Control Model RFC 2575 [RFC2575] is recommended. 
    
   It is then a customer/user responsibility to ensure that the SNMP 
   entity giving access to an instance of this MIB, is properly 
   configured to give access to the objects only to those principals 
   (users) that have legitimate rights to indeed GET or SET 
   (change/create/delete) them. 
    
8.  Normative References 
    
   [iSNS]      Josh Tseng, Kevin Gibbons, Franco Travostino, Curt Du 
               Laney, Joe Souza "iSNS Internet Storage Name Service", 
               <draft-ietf-ips-isns-22.txt>, Expires July 2004 
    
   [FCMGT01]   K. McCloghrie, "Fibre Channel Management MIB", 
               <draft-ietf-ips-fcmgmt-mib-04.txt>, Expires August 
               2003. 
    
   Gibbons               Expires January 2006                       82 

   Internet Draft              iSNS MIB                      July 2005 

    
   [iSCSI]     Julian Satran, Kalman Meth, Costa Sapuntzakis, 
               Mallikarjun Chadalapaka, Efri Zeidner, "iSCSI", RFC 
               3270, April 2004 
    
   [RFC3291]   M. Daniele, B. Haberman, S. Routhier, J. Schoenwaelder 
               "Textual Conventions for Internet Network Addresses", 
               RFC 3291, May 2002. 
    
   [RFC2578]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, 
               J., Rose, M., and S. Waldbusser, "Structure of 
               Management Information Version 2 (SMIv2)", STD 58, RFC 
               2578, April 1999. 
    
   [RFC2579]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, 
               J., Rose, M., and S. Waldbusser, "Textual Conventions 
               for SMIv2", STD 58, RFC 2579, April 1999. 
    
   [RFC2580]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, 
               J., Rose, M., and S. Waldbusser, "Conformance 
               Statements for SMIv2", STD 58, RFC 2580, April 1999. 
    
9.  Informative References 
    
   [RFC3410]   Case, J., Mundy, R., Partain, D. and B. Stewart, 
               "Introduction and Applicability Statements for 
               Internet-Standard Management Framework", RFC 3410, 
               December 2002.  
    
   [FC-FS]     Fibre Channel Framing and Signaling Interface, 
               ANSI/INCITS 373:2003. 
    
   [FC-GS]     Fibre Channel - Generic Services, NCITS 348-2000. 
     
10.  Authors' Addresses 
    
          Kevin Gibbons 
          E-mail: kevin.gibbons@mcdata.com, 
          Josh Tseng 
          E-mail: joshtseng@yahoo.com, 
          Postal: McDATA Corporation 
          4555 Great America Pkwy 
          Santa Clara, CA 95054-1208 
          USA 
    
          Tel: (408) 567-5765 
          Fax: (408) 567-0063 
    
    
          Tom McSweeney 
          E-mail: tommcs@us.ibm.com 
          Postal: IBM Corporation 
    
   Gibbons               Expires January 2006                       83 

   Internet Draft              iSNS MIB                      July 2005 

          600 Park Offices Drive 
          Research Triangle Park, NC 27709 
          USA 
    
          Tel: (919) 855-5169 
    
11.  Intellectual Property Statement 
    
   The IETF takes no position regarding the validity or scope of any 
   Intellectual Property Rights or other rights that might be claimed 
   to pertain to the implementation or use of the technology described 
   in this document or the extent to which any license under such 
   rights might or might not be available; nor does it represent that 
   it has made any independent effort to identify any such rights.  
   Information on the procedures with respect to rights in RFC 
   documents can be found in BCP 78 and BCP 79. 
    
   Copies of IPR disclosures made to the IETF Secretariat and any 
   assurances of licenses to be made available, or the result of an 
   attempt made to obtain a general license or permission for the use 
   of such proprietary rights by implementers or users of this 
   specification can be obtained from the IETF on-line IPR repository 
   at http://www.ietf.org/ipr. 
    
   The IETF invites any interested party to bring to its attention any 
   copyrights, patents or patent applications, or other proprietary 
   rights that may cover technology that may be required to implement 
   this standard.  Please address the information to the IETF at  
   ietf-ipr@ietf.org. 
    
12.  Disclaimer of Validity 
    
   This document and the information contained herein are provided on 
   an "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE 
   REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE 
   INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR 
   IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF 
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED 
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 
    
13.  Copyright Statement 
    
   Copyright (C) The Internet Society (2005).  
    
   This document is subject to the rights, licenses and restrictions 
   contained in BCP 78, and except as set forth therein, the authors 
   retain all their rights. 
    
14.  Acknowledgment 
    
   Funding for the RFC Editor function is currently provided by the 
   Internet Society. 
    
   Gibbons               Expires January 2006                       84 

   Internet Draft              iSNS MIB                      July 2005 

    



















































    
   Gibbons               Expires January 2006                       85 
