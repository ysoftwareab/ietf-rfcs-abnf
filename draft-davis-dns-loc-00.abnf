cp = *latlonstrptr;

deg = deg * 10 + (*cp++ - '0');

min = min * 10 + (*cp++ - '0');

secs = secs * 10 + (*cp++ - '0');

secsfrac = (*cp++ - '0') * 100;
retval = (1<<31)
                        + (((((deg * 60) + min) * 60) + secs) * 1000)
                        + secsfrac;
retval = (1<<31)
                        - (((((deg * 60) + min) * 60) + secs) * 1000)
                        - secsfrac);
cp = ascii;
maxcp = cp + strlen(ascii);

latit = latlon2ul(&cp);
longit = latlon2ul(&cp);

altsign = -1;
altmeters = altmeters * 10 + (*cp++ - '0');

altfrac = (*cp++ - '0') * 10;
alt = (10000000 + (altsign * (altmeters * 100 + altfrac)));

siz = 0;

hp = 0;

vp = 0;

bcp = binary;
rcp = binary;
cp = ascii;
ascii = tmpbuf;
cp = tmpbuf;
tempc = *rcp++;

versionval = tempc & 0xF0;
sizeval = (tempc & 0x0F) - 8;
tempc = *rcp++;

hpval = ((tempc & 0xF0) >> 4) - 8;
vpval = (tempc & 0x0F) - 8;

latval = ntohls(templ);

longval = ntohls(templ);

altval = ntohl(templ) - 10000000; /* XXX might need long long */

northsouth = 'S';
latval = -latval;
northsouth = 'N';

latsecfrac = latval % 1000;
latval = latval / 1000;
latsec = latval % 60;
latval = latval / 60;
latmin = latval % 60;
latval = latval / 60;
latdeg = latval;

eastwest = 'W';
longval = -longval;
eastwest = 'E';

longsecfrac = longval % 1000;
longval = longval / 1000;
longsec = longval % 60;
longval = longval / 60;
longmin = longval % 60;
longval = longval / 60;
longdeg = longval;
altfrac = altval % 100;
altmeters = altval / 100;  /* XXX might truncate wrong way if neg? */

sizestr = strdup(precision2string(sizeval));
hpstr = strdup(precision2string(hpval));
vpstr = strdup(precision2string(vpval));

