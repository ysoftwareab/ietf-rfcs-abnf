id_range = max_id - min_id + 1;
next_id = min_id + (random() % id_range);
count = next_id;

next_id = min_id;
id_range = max_id - min_id + 1;
next_id = min_id + (random() % id_range);
count = id_range;

next_id = min_id + (random() % id_range);
id_range = max_id - min_id + 1;

counter = 0;

offset = F(CONTEXT, counter, secret_key);
next_id = min_id + (offset % id_range);

count = max_id - min_id + 1;
id_inc = increment() % count;

next_id = lookup_counter(CONTEXT);

next_id = next_id + id_inc;
next_id = min_id + id_inc - (max_id - next_id + 1);
count = count - id_inc;

counter = 0;

id_range = max_id - min_id + 1;
offset = F(CONTEXT, secret_key);
count = id_range;

next_id = min_id + (offset + counter) % id_range;
id_inc = increment();
counter = counter + id_inc;

count = count - id_inc;

id_range = max_id - min_id + 1;
offset = F(CONTEXT, secret_key1);
index = G(CONTEXT, secret_key2) % TABLE_LENGTH;
count = id_range;

next_id = min_id + (offset + table[index]) % id_range;
id_inc = increment();
count = count - id_inc;

ID = offset(CONTEXT_1) + mono(CONTEXT_2);

ephemeral_port = offset(Dest_IP) + mono()

Frag_ID = offset(Srd_IP, Dst_IP) + mono()

count = max_id - min_id + 1;

id_inc = increment();
next_id = offset(CONTEXT_1) + mono(CONTEXT_2);

count = count - id_inc;
next_id = min_id;
id_inc= 1;


count = max_id - min_id + 1;

next_id = min_id;
next_id = next_id + id_inc;
next_id = random();        /* Initialization value */
id_inc = 500;            /* Determines the trade-off */


id_range = max_id - min_id + 1;

count = id_range;

next_id = next_id + (random() % id_inc) + 1;

next_id = min_id + (next_id % id_range);

