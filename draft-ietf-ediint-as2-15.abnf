AS2-text = "!" /           ; printable ASCII characters

                %d35-91 /       ; except double-quote (%d34)

                %d93-126        ; or backslash (%d92)

 

AS2-qtext = AS2-text / SP  ; allow space only in quoted

AS2-quoted-pair = "\" DQUOTE /  ; \" or

                       "\" "\"       ; \\

 

AS2-quoted-name = DQUOTE 1*128( AS2-qtext /

                                     AS2-quoted-pair) DQUOTE

 

AS2-atomic-name = 1*128AS2-text

 

AS2-name = AS2-atomic-name / AS2-quoted-name

 

report-type = disposition-notification.

MDN-request-header = "Disposition-notification-to"

signed-receipt-protocol=optional, pkcs7-signature;

signed-receipt-micalg=optional, sha1, md5

Disposition-notification-options =

              "Disposition-Notification-Options" ":"

              disposition-notification-parameters

     

disposition-notification-parameters =

                            parameter *(";" parameter)

     

parameter = attribute "=" importance ", " 1#value"

     

importance = "required" | "optional"

 

 

signed-receipt-protocol=optional, <protocol symbol>;

signed-receipt-micalg=optional, <micalg1>,<micalg2>,...;

 

AS2-MDN = AS2-sync-MDN | AS2-async-http-MDN |

    AS2-async-smtp-MDN

 

AS2-sync-MDN =

    Status-Line

    *(( general-header | response-header | entity-header )

    CRLF )

    CRLF

    AS2-MDN-body

 

Status-Line =

    HTTP-Version SP Status-Code SP Reason-Phrase CRLF

 

AS2-async-http-MDN =

    Request-Line

    *(( general-header | request-header | entity-header )

    CRLF )

    CRLF

    AS2-MDN-body

 

Request-Line =

    Method SP Request-URI SP HTTP-Version CRLF

 

AS2-async-smtp-MDN =

    *(( general-header | request-header | entity-header )

    CRLF )

    CRLF

    AS2-MDN-body

 

AS2-MDN-body =

    AS2-signed-MDN-body | AS2-unsigned-MDN-body

 

AS2-disposition-notification-content =

    [ reporting-ua-field CRLF ]

    [ mdn-gateway-field CRLF ]

    final-recipient-field CRLF

    [ original-message-id-field CRLF ]

    AS2-disposition-field CRLF

    *( failure-field CRLF )

    *( error-field CRLF )

    *( warning-field CRLF )

    *( extension-field CRLF )

    [ AS2-received-content-MIC-field CRLF ]

 

 

AS2-disposition-field =

    "Disposition" ":" disposition-mode ";"

    AS2-disposition-type [ '/' AS2-disposition-modifier ]

 

disposition-mode =

    action-mode "/" sending-mode

 

action-mode =

    "manual-action" | "automatic-action"

 

sending-mode =

    "MDN-sent-manually" | "MDN-sent-automatically"

 

AS2-disposition-type =

    "processed" | "failed"

 

AS2-disposition-modifier =

    ( "error" | "warning" ) | AS2-disposition-modifier-

AS2-disposition-modifier-extension =

    "error: authentication-failed" |

    "error: decompression-failed" |

    "error: decryption-failed" |

    "error: insufficient-message-security" |

    "error: integrity-check-failed" |

    "error: unexpected-processing-error" |

    "warning: " AS2-MDN-warning-description |

    "failure: " AS2-MDN-failure-description

 

AS2-MDN-warning-description = *( TEXT )

 

AS2-MDN-failure-description = *( TEXT )

 

AS2-received-content-MIC-field =

    "Received-content-MIC" ":" encoded-message-digest ","

    digest-alg-id CRLF

 

encoded-message-digest =

    1*( 'A'-Z' | 'a'-'z' | '0'-'9' | '/' | '+' | '=' )  (

    i.e. base64( message-digest ) )

 

digest-alg-id = "sha1" | "md5"

 

protocol=optional,pkcs7-signature;

signed-receipt-micalg=optional,sha1

protocol="application/pkcs7-signature"; micalg=sha1

path=/;

protocol="application/pkcs7-signature";

boundary="----=_Part_57_648441049.1028122454671"

protocol = "application/pkcs7-signature" see the "S/MIME

protocol=optional, pkcs7-signature; signed-receipt-

micalg=optional, sha1

protocol="application/pkcs7-signature"; boundary="----

boundary="----=_Part_336_6069110.1040310218718"

 

UxCUga8BVdVB9kH0Geexytyt0KvWQXfaEEcgZGUAAAAAAAA=

 

