EOPacket = address of last data in packet;
here = address of the EOBasePacket;
more_efs = 1;
p = emalloc(pkt_parse);                 // *p is zeroed
candidate = 1;
ef_len = (the length of the EF);
more_efs = 0;
candidate = 1;
more_efs = 0;
pkt_parse_chain = p;
ef_ok = 1;                              // An EF is allowed here
legacy_mac_ok = 1;                      // Legacy MAC allowed here
req_mac = 0;                            // A MAC is not required
saw_mac = 0;                            // We haven't seen a MAC yet
authlen = LEN_PKT_NOMAC;                // Length of a base packet
leg_mac = rbufp->recv_length - authlen; // # bytes after base

skeyid = ntohl(pkt[authlen / 4]);
opcode = skeyid >> 16;
len = skeyid & 0xffff;

ef_ok = 0;
legacy_mac_ok = 1;
ksize = auth_findkeysize(skeyid);
saw_mac = 1;
saw_mac = 1;            // Just a hint
req_mac = 1;    // MAC required
legacy_mac_ok = 1;
legacy_mac_ok = 0;
