Individual Submission                                      Bill Manning 
draft-ymbk-opcode-discover-00.txt                                   ISI 
                                                            18 Jan 2001


                         The DISCOVER opcode 

This document is an Internet-Draft and is NOT offered in accordance with 
Section 10 of RFC2026, and the author does not provide the IETF with any 
rights other than to publish as an Internet-Draft.

Internet-Drafts are working documents of the Internet Engineering Task 
Force (IETF), its areas, and its working groups.  Note that other groups 
may also distribute working documents as Internet-Drafts.

Internet-Drafts are draft documents valid for a maximum of six months and 
may be updated, replaced, or obsoleted by other documents at any time.  It 
is inappropriate to use Internet-Drafts as reference material or to cite 
them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

0. Abstract

   The QUERY opcode in the DNS is designed for unicast. With the 
   development of multicast capabilities in the DNS, it is desireable
   to have a more robust opcode for server interactions.

1. DISCOVER works like QUERY except:

        1. it can be sent to a broadcast or multicast destination (QUERY
           isn't defined for non-unicast, and i don't think it should be.)

        2. the Question section, if present, has <QNAME=zname,QTYPE=SOA>
           tuples.

        3. if QDCOUNT==0 then only servers willing to do recursion should
           answer.

        4. if QDCOUNT<>0 then only servers who are authoritative for the
           zones named by some QNAME should answer.

        5. responses may echo the request's Question section or leave it blank.

        6. responses have "normal" Answer, Authority, and Additional sections.

Usage for gethostby{name,addr}-style requestors:

        Compute the zone name of the enclosing in-addr.arpa or ip6.int domain.

        DISCOVER whether anyone in-scope is authoritative for this zone.

                If so, query these authoritative servers for local
                in-addr/ip6 names.

        If not, DISCOVER whether there are recursive servers available.

                If so, query these recursive servers for local
                in-addr/ip6 names.

        Once one learns a host's FQDN by the above means, repeat the process
        for discovering the closest enclosing authoritative server of such
        local name.

        Cache all NS and A data learned in this process, respecting TTL's.

Usage for SRV requestors:

        Do the gethostbyaddr() and gethostbyname() on one's own LAN-local
        address, using the above process.

        Assume that the closest enclosing zone for which an authority server
        answers an in-scope DISCOVER packet is "this host's parent domain".

        Compute the SRV name as _service._transport.*.parentdomain.

        Send SRV query for this name to discovered local authority servers.

Usage for disconnected networks with no authority servers:

        Hosts should run a "stub server" which acts as though its FQDN is a
        zone name.  Computed SOA gives the host's FQDN as MNAME, "." as the
        ANAME, seconds-since-1Jan2000 as the SERIAL, low constants for EXPIRE
        and the other timers.  Computed NS gives the host's FQDN.  Computed
        glue gives the host's LAN-local address.

        Such stub servers should answer DISCOVER packets for its zone, and
        will be found by the iterative "discover closest enclosing authority
        server" by DISCOVER clients, either in the gethostbyname() or SRV
        cases described above.  Note that stub servers only answer with
        zone names which match QNAME's, not with zone names which are owned
        by QNAME's.

The only deviation from the DNS model is that a host (like, say, a printer
offering LPD services) has a DNS server which answers authoritatively for
something which hasn't been delegated to it.  However, the only way that
such DNS servers can be discovered is with a new opcode, DISCOVER, which
is explicitly defined to discover undelegated zones for tightly scoped
purposes.  Therefore this isn't officially a violation of DNS's coherency
principles.

3. IANA Considerations

	As a new opcode, the IANA will need to assign a numeric value
	for the memnonic. 
	

4. Security Considerations

         No new security considerations are known to be introduced. Using
	multicast for service discovery has the potential for denial of 
	service.

5. Attribution:
	
	This material was generated in discussions on the mdns mailing list
hosted by Zocalo in March 2000. Paul Vixie crystalized the concepts... 
Stuart Cheshire and Bill Woodcock were active contributors.

6. Author's Address

   Bill Manning
   PO 12317
   Marina del Rey, CA. 90295
   +1.310.322.8102
   bmanning@karoshi.com


-- 
--bill
