Len=1

Len=1 (8 octets).  If Len = 1, the fields in the last 4-octet
code_ptr = ptr;
code = 0x0001;
code = *ptr;
SYN=1:  The sender uses the structure in Figure 9a) on the SYN.  The
      sender right-aligns the 12-octet InSpace Option at the end of the
      segment.  Then it right-aligns the Inner Options against the
      InSpace Option, all after the end of the TCP Payload and any
      padding necessary to align the options on a 4-octet word boundary.

      Magic Number A starts 4*3=12 octets from the end of the segment
      {ToDo: Magic Number A could be placed at the end of the segment
      instead.}. A receiver implementation of this optional extension
      MUST check whether Magic Number A is present within the InSpace
      option if it does not first find it at the start of the segment.

      The start of the Inner Options is therefore 4 * (InOO +3) octets
      before the end of the segment, where InOO is read from within the
      InSpace Option.  Although the InnerOptions are located at the end
      of the TCP Payload, they are considered to be applied before the
      first octet of the TCP Payload.

SYN=0:  The structure of the first non-SYN segment that contains any
      TCP Data is shown in Figure 9b).

      The receiver will find the second InSpace Option (InSpace#2)
      located SDS#1 octets from the start of the segment (plus possible
      padding), where SDS#1 is the value of Sent Data Size that was read
      from the InSpace Option in the previous (SYN=1) segment that
      started the half-connection.  Although the Inner Options are
      shifted, they are still considered to be applied at the start of
      the TCP Data in this second segment.

SYN=0.

