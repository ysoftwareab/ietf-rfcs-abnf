Network Working Group                                      Bernard Aboba
INTERNET-DRAFT                                     Microsoft Corporation
Category: Informational                                       Jari Arkko
<draft-aboba-acct-01.txt>                                       Ericsson
8 June 1999

                 Introduction to Accounting Management

1.  Status of this Memo

This document is an Internet-Draft and is in full conformance with all
provisions of Section 10 of RFC2026.

Internet-Drafts are working documents of the Internet Engineering Task
Force (IETF), its areas, and its working groups.  Note that other groups
may also distribute working documents as Internet-Drafts.  Internet-
Drafts are draft documents valid for a maximum of six months and may be
updated, replaced, or obsoleted by other documents at any time.  It is
inappropriate to use Internet-Drafts as reference material or to cite
them other than as "work in progress."

The list of current Internet-Drafts can be accessed at
http://www.ietf.org/ietf/1id-abstracts.txt.

To view the list Internet-Draft Shadow Directories, see
http://www.ietf.org/shadow.html.

The distribution of this memo is unlimited.  It is filed as <draft-
aboba-acct-01.txt>, and expires December 1, 1999. Please send comments
to the authors.

2.  Copyright Notice

Copyright (C) The Internet Society (1999).  All Rights Reserved.

3.  Abstract

The field of Accounting Management is concerned with the collection of
resource consumption data for the purposes of capacity and trend
analysis, cost allocation, auditing, and billing. This document
describes each of these problems, and discusses the issues involved in
design of modern accounting systems.

Aboba & Arkko                 Informational                     [Page 1]

INTERNET-DRAFT           Accounting Management               8 June 1999

Since accounting applications do not have uniform security and
reliability requirements, it is not possible to devise a single
accounting protocol and set of security services that will meet all
needs. Thus the goal of accounting management is to provide a set of
tools that can be used to meet the requirements of each application.
This document describes the currently available tools as well as the
state of the art in accounting protocol design. A companion document,
draft-brownlee-accounting-attributes-00.txt, reviews the state of the
art in accounting attributes and record formats.

4.  Table of Contents

     1.  Status of this Memo
     2.  Copyright notice
     3.  Abstract
     4.  Table of Contents
     5.  Introduction
         5.1   Terminology
         5.2   Accounting management architecture
         5.3   Accounting management objectives
         5.4   Intra-domain and inter-domain accounting
         5.5   Requirements summary
     6.  Scaling and reliability properties of accounting systems
         6.1   Fault resilience
         6.2   Resource consumption
         6.3   Data collection models
     7.  Review of existing accounting protocols
         7.1 Accounting protocols
         7.2 Accounting data transfer
     8.  Security issues
     9.  Acknowledgements
     10. References
     11. Authors' Addresses
     12. Copyright Statement
     13. Expiration date

Aboba & Arkko                 Informational                     [Page 2]

INTERNET-DRAFT           Accounting Management               8 June 1999

5.  Introduction

The field of Accounting Management is concerned with the collection of
resource consumption data for the purposes of capacity and trend
analysis, cost allocation, auditing, and billing. This document
describes each of these problems, and discusses the issues involved in
design of modern accounting systems.

Since accounting applications do not have uniform security and
reliability requirements, it is not possible to devise a single
accounting protocol and set of security services that will meet all
needs. Thus the goal of accounting management is to provide a set of
tools that can be used to meet the requirements of each application.
This document describes the currently available tools as well as the
state of the art in accounting protocol design. A companion document,
draft-brownlee-accounting-attributes-00.txt, reviews the state of the
art in accounting attributes and record formats.

5.1.  Terminology

This document frequently uses the following terms:

Accounting
          The collection of resource consumption data for the purposes
          of capacity and trend analysis, cost allocation, auditing, and
          billing.  Accounting management requires that resource
          consumption be  measured, rated, assigned, and communicated
          between appropriate parties.

Archival accounting
          In archival accounting, the goal is to collect all accounting
          data, to reconstruct missing entries as best as possible in
          the event of data loss, and to archive data for a mandated
          time period.  Legal or financial requirements frequently
          mandate archival accounting practices, and may often dictate
          that data be kept confidential, regardless of whether it is to
          be used for billing purposes or not.

Rating    The act of determining the price to be charged for use of a
          resource.

Billing   The act of preparing an invoice.

Usage sensitive billing
          A billing process that depends on usage information to prepare
          an invoice can be said to be usage-sensitive. In contrast, a
          process that is independent of usage information is said to be

Aboba & Arkko                 Informational                     [Page 3]

INTERNET-DRAFT           Accounting Management               8 June 1999

          non-usage-sensitive.

Auditing  The act of verifying the correctness of a procedure.

Cost Allocation
          The act of allocating costs between entities. Note that cost
          allocation and rating are fundamentally different processes.
          In cost allocation the objective is typically to allocate a
          known cost among several entities.  In rating the objective is
          to determine the amount owed. In cost allocation, the cost per
          unit of resource may need to be determined; in rating, this is
          typically a given.

Interim accounting
          An interim accounting packet provides a snapshot of usage
          during a user's session. It is typically implemented in order
          to provide for partial accounting of a user's session in the
          event of a device reboot or other network problem that
          prevents the reception of a session summary packet or session
          record.

Session record
          A session record represents a summary of the resource
          consumption of a user over the entire session. Accounting
          gateways creating the session record may do so by processing
          interim accounting events or accounting events from several
          devices serving the same user.

Accounting Protocol
          A protocol used to convey data for accounting purposes.

Intra-domain accounting
          Intra-domain accounting involves the collection of information
          on resource within an administrative domain, for use within
          that domain. In intra-domain accounting, accounting packets
          and session records typically do not cross administrative
          boundaries.

Inter-domain accounting
          Inter-domain accounting involves the collection of information
          on resource usage of an entity with an administrative domain,
          for use within another administrative domain. In inter-domain
          accounting, accounting packets and session records will
          typically cross administrative boundaries.

Real-time accounting
          Real-time accounting involves the processing of information on
          resource usage within a defined time window. Time constraints

Aboba & Arkko                 Informational                     [Page 4]

INTERNET-DRAFT           Accounting Management               8 June 1999

          are typically imposed in order to limit financial risk.

Accounting server
          The accounting server receives accounting data from devices
          and translates it into session records. The accounting server
          may also take responsibility for the routing of session
          records to interested parties.

5.2.  Accounting management architecture

The accounting management architecture involves interactions between
network devices, accounting servers, and billing servers.  The network
device collects resource consumption data in the form of accounting
metrics.  This information is then transferred to an accounting server.
Typically this is accomplished via an accounting protocol, although it
is also possible for devices to generate session records.

The accounting server then processes the accounting data received from
the network device. This processing may include summarization of interim
accounting information, elimination of duplicate data, or generation of
session records.

The processed accounting data is then submitted to a billing server,
which typically handles rating and invoice generation, but may also
carry out auditing, cost allocation, trend analysis or capacity planning
functions.  Session records may be batched and compressed by the
accounting server prior to submission to the billing server in order to
reduce the volume of accounting data and the bandwidth required to
accomplish the transfer.

One of the functions of the accounting server is to distinguish between
the inter and intra-domain accounting events and to route them
appropriately.  Intra-domain accounting events are typically routed to
the local billing server, while inter-domain accounting events will be
routed to accounting servers operating within other administrative
domains.  While it is not required that session record formats used in
inter and intra-domain accounting be the same, such rationalization is
desirable, since it eliminates translations that would otherwise be
required.

Aboba & Arkko                 Informational                     [Page 5]

INTERNET-DRAFT           Accounting Management               8 June 1999

The diagram below illustrates the accounting management architecture:

     +------------+
     |            |
     |   Network  |
     |   Device   |
     |            |
     +------------+
           |
Accounting |
Protocol   |
           |
           |
           V
     +------------+                               +------------+
     |            |                               |            |
     |   Org B    |      Inter-domain             |  Org A     |
     |   Acctg.   |<----------------------------->|  Acctg.    |
     |   Server   |      session records          |  Server    |
     |            |                               |            |
     +------------+                               +------------+
           |                                            |
           |  Intra-domain                              |
Transfer   |  session records                           |
Protocol   |                                            |
           |                                            |
           V                                            V
     +------------+                               +------------+
     |            |                               |            |
     |  Org B     |                               |  Org A     |
     |  Billing   |                               |  Billing   |
     |  Server    |                               |  Server    |
     |            |                               |            |
     +------------+                               +------------+

5.3.  Accounting management objectives

Accounting Management involves the collection of resource consumption
data for the purposes of capacity and trend analysis, cost allocation,
auditing, and billing. Since each of these tasks have different
requirements, we will discuss each task in detail.

5.3.1.  Trend analysis and capacity planning

In trend analysis and capacity planning, the goal is typically a
forecast of future usage.  Since such forecasts are inherently

Aboba & Arkko                 Informational                     [Page 6]

INTERNET-DRAFT           Accounting Management               8 June 1999

imperfect, high reliability is typically not required, and moderate data
loss can typically be tolerated.

In certain cases, it may be desirable to use statistical sampling
techniques to reduce data collection requirements while still providing
the forecast with the desired statistical accuracy.  Such a sampling
process may be insensitive even to large amounts of packet loss as long
as bias is not introduced.

The security requirements for trend analysis and capacity planning
depend on the circumstances of data collection and the sensitivity of
the data.  Additional security services may be required when data is
being transferred between administrative domains.  For example, when
information is being collected and analyzed within the same
administrative domain, integrity protection and authentication may be
used in order to guard against collection of invalid data.  In inter-
domain applications confidentiality may be desirable to guard against
snooping by third parties.

5.3.2.  Billing

When accounting data is used for billing purposes, the requirements
depend on whether the billing process is usage-sensitive or not.

5.3.2.1.  Non-usage sensitive billing

Since by definition, non-usage-sensitive billing does not require usage
information, in theory all accounting data can be lost without affecting
the billing process. Of course wholesale data loss will affect other
tasks such as trend analysis or auditing, so that this would still cause
problems.

5.3.2.2.  Usage-sensitive billing

Since usage-sensitive billing processes depend on usage information,
packet loss may translate directly to revenue loss. As a result, the
billing process may need to meet requirements arising from financial
reporting standards, or legal requirements, and therefore an archival
accounting approach may be required.

Usage-sensitive systems may also have additional requirements relating
to processing delay. Today credit risk is commonly managed by
computerized fraud detection systems that are designed to detect unusual
activity. While efficiency concerns might otherwise dictate batched
transmission of accounting data, where it is desirable to minimize

Aboba & Arkko                 Informational                     [Page 7]

INTERNET-DRAFT           Accounting Management               8 June 1999

financial risk, a different approach may be required.

Since financial exposure increases with processing delay, it may be
necessary to transmit each event individually or to minimize batch size,
to require positive acknowledgment before providing service, or even to
utilize quality of service techniques to minimize queuing delays.

The degree of financial exposure is application-dependent. For dialup
Internet access from a local provider, charges are low and therefore the
risk of loss is small. However, in the case of dialup roaming or voice
over IP, time-based charges may be substantial and therefore the risk of
fraud is larger. In such situations it is highly desirable to quickly
detect unusual account activity, and it may be desirable for
authorization to depend on ability to pay. In situations where valuable
resources can be reserved, or where charges can be high, very large
bills may be rung up quickly, and therefore real-time processing may be
required.

In usage-sensitive systems, accounting data may result in monetary
transfers, and as a result, the security and reliability requirements
are greater. Thus security services such as authentication and integrity
protection are frequently used, and confidentiality and non-repudiation
may also be desirable.

5.3.3.  Auditing

With enterprise networking expenditures on the rise, interest in
auditing is increasing.  Auditing, which is the act of verifying the
correctness of a procedure, commonly relies on accounting data. Auditing
tasks include verifying correctness of an invoice submitted by a service
provider, or verification that usage is conforming to usage policy,
service level agreements, or security guidelines.

To permit a credible audit, the accounting data collection methods put
in place must be at least as reliable as those used by the invoicing
service provider. Similarly, security policies involved in auditing of
an invoice should be at least as stringent as those used in preparation
of the original invoice. Due to financial and legal requirements,
archival accounting practices are frequently required in this
application.

Where auditing procedures are used to verify conformance to usage or
security policies, security services may be desired. This typically will
include integrity protection and authentication of accounting data, as
well as confidentiality and possibly data object security. In order to
permit response to security incidents in progress, auditing applications
frequently are built to operate with low processing delay.

Aboba & Arkko                 Informational                     [Page 8]

INTERNET-DRAFT           Accounting Management               8 June 1999

5.3.4.  Cost allocation

The application of cost allocation and billback methods by enterprise
customers is not yet widespread. However, with the convergence of
telephony and data communications, there is increasing interest in
applying cost allocation and billback procedures to networking costs, as
is now commonly practiced with telecommunications costs.

Cost allocation models, including traditional costing mechanisms
described in [21]-[23] and activity-based costing techniques described
in [24] are typically based on detailed analysis of usage data, and as a
result they are almost always usage-sensitive. Whether cost allocation
models are applied to allocation of costs between partners in a venture
or to allocation of costs between departments in a single firm, cost
allocation models often have profound behavioral and financial impacts.
As a result, systems developed for this purposes are typically as
concerned with reliable data collection and security as are billing
applications. Due to financial and legal requirements, archival
accounting practices are frequently required in this application.

5.4.  Intra-domain and inter-domain accounting

Much of the early work on accounting management focused on intra-domain
accounting applications. However, with the increasing deployment of
services such as dialup roaming, Internet fax, Internet telephony and
QoS, applications requiring inter-domain accounting are becoming
increasingly common.

Inter-domain accounting differs from intra-domain accounting in several
important ways. Intra-domain accounting involves the collection of
information on resource consumption within an administrative domain, for
use within that domain. In intra-domain accounting, accounting packets
and session records typically do not cross administrative boundaries. As
a result, intra-domain accounting applications typically experience low
rates of packet loss and involve transfer of data between trusted
entities.

In contrast, inter-domain accounting involves the collection of
information on resource consumption within an administrative domain, for
use within another administrative domain. In inter-domain accounting,
accounting packets and session records will typically cross
administrative boundaries. As a result, inter-domain accounting
applications may experience substantial packet loss. In addition, the
entitities involved in the transfers cannot be assumed to trust each
other.

Aboba & Arkko                 Informational                     [Page 9]

INTERNET-DRAFT           Accounting Management               8 June 1999

Since inter-domain accounting applications involve transfers of
accounting data between domains, additional security measures may be
desirable. In addition to authentication and integrity protection, it
may be desirable to deploy security services such as confidentiality,
replay protection, data object integrity, or non-repudiation. In inter-
domain accounting each involved party also typically requires a copy of
each accounting event for invoice generation and auditing.

Aboba & Arkko                 Informational                    [Page 10]

INTERNET-DRAFT           Accounting Management               8 June 1999

5.5.  Requirements summary

   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                    |                  |
   |  Usage          |   Intra-domain     | Inter-domain     |
   |                 |                    |                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                    |                  |
   |  Capacity       | Robustness         | Robustness       |
   |  Planning       | against moderate   | against high     |
   |                 | packet loss        | packet loss      |
   |                 |                    |                  |
   |                 | Integrity,         | Integrity,       |
   |                 | authentication,    | authentication,  |
   |                 | replay protection  | replay protection|
   |                 | [confidentiality]  | confidentiality  |
   |                 |                    |                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                    |                  |
   |  Non-Usage      | Robustness against | Robustness       |
   |  Sensitive      | packet loss not    | against packet   |
   |  Billing        | required           | loss not         |
   |                 |                    | required         |
   |                 |                    |                  |
   |                 | Integrity,         | Integrity,       |
   |                 | authentication,    | authentication,  |
   |                 | replay protection  | replay protection|
   |                 | [confidentiality]  | confidentiality  |
   |                 |                    |                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                    |                  |
   |                 |  Archival          | Archival         |
   |  Usage          |  accounting        | accounting       |
   |  Sensitive      |                    |                  |
   |  Billing,       | Integrity,         | Integrity,       |
   |  Cost           | authentication,    | authentication,  |
   |  Allocation &   | replay protection  | replay protection|
   |  Auditing       | [confidentiality]  | confidentiality  |
   |                 |                    | [non-repudiation]|
   |                 |                    |                  |
   |                 |                    | [Bounds on       |
   |                 |                    | processing delay]|
   |                 |                    |                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Key
   [] = optional

Aboba & Arkko                 Informational                    [Page 11]

INTERNET-DRAFT           Accounting Management               8 June 1999

6.  Scaling and reliability characteristics of accounting systems

With the continuing growth of the Internet, it is important that
accounting management systems be scalable and reliable. This section
discusses the resources consumed by accounting management systems as
well as the scalability and reliability properties exhibited by various
data collection models.

6.1.  Fault resilience

As noted earlier, in applications such as usage-sensitive billing, cost
allocation and auditing, an archival approach to accounting is
frequently mandated, due to financial and legal requirements. Since in
such situations loss of accounting data can translate directly into
revenue loss, financial incentives exist to engineer a high degree of
fault resilience. Faults which may be encountered include:

   Packet loss
   Accounting server failures
   Network failures
   Device reboots

To date, much of the debate on accounting reliability has focussed on
resilience against packet loss and the differences between UDP and TCP-
based transport. However, it should be understood that resilience
against packet loss is only one aspect of the program required to meet
archival accounting requirements.

As noted in [43], "once the cable is cut you don't need more
retransmissions, you need a *lot* nore voltage."  Thus, the choice of
UDP or TCP transport has no impact on resilience against faults such as
network partition, accounting server failures or device reboots. What
does provide resilience against these faults is non-volatile storage.

The importance of non-volatile storage in design of reliable accounting
systems cannot be over-emphasized. Without such storage, event-driven
systems will lose data once the transmission timeout has been exceeded,
and polling or event-driven batching designs will experience data loss
once the internal memory used for event storage has been exceeded.

Thus, it may be plausibly argued that non-volatile storage is more
important to accounting reliability than network connectivity, since for
many years reliable accounting systems were implemented based solely on
physical storage, without any network connectivity. For example, phone
usage data used to be stored on paper, film, or magnetic media and
carried from the place of collection to a central location for bill
processing.

Aboba & Arkko                 Informational                    [Page 12]

INTERNET-DRAFT           Accounting Management               8 June 1999

6.1.1.  Interim accounting

Interim accounting provides protection against loss of session summary
data by providing checkpoint information that can be used to reconstruct
the session record in the event that the session summary information is
lost. This technique may be applied to any data collection model (i.e.
event-driven or polling) and is supported in both RADIUS [25] and in
TACACS+ [26].

While interim accounting can provide resilience against packet loss,
server failures, short-duration network failures, or device reboot, its
applicability is limited. Since most packet loss on the Internet is due
to congestion, sending interim accounting data over the wire can
actually make the problem worse by increasing bandwidth usage.  As a
result, on-the-wire interim accounting is best restricted to use with
high-value accounting data such as information on long-lived sessions.
To protect against loss of data on such sessions, the interim reporting
interval is typically set several standard deviations larger than the
average session duration. This ensures that most sessions will not
result in generation of interim accounting events and the additional
bandwidth consumed by interim accounting will be moderate.

However, as the interim accounting interval decreases toward the the
average session time, the additional bandwidth consumed by interim
accounting increases markedly, and as a result, the interval must be set
with caution. This practice is particularly suspect since it increases
use of network bandwidth in normal operation, while providing benefits
only in the event of a fault.

Where non-volatile storage is unavailable, interim accounting can also
result in excessive consumption of memory that could be better allocated
to storage of session data. As a result, implementors should be careful
to ensure that new interim accounting data overwrites previous data
rather than accumulating additional interim records thereby worsening
the buffer exhaustion problem.

Given the decreasing cost of non-volatile memory, it may be preferable
to store interim accounting data in non-volatile storage. Stored interim
events are then replaced by session data when the session completes, and
the session data can itself be erased once the data has been
transmitted. This approach avoids interim data being transmitted over
the wire, except in the case of a device reboot.

6.1.2.  Packet loss

As packet loss is a fact of life on the Internet, accounting protocols
need to be resilient against such losses. This is particularly important

Aboba & Arkko                 Informational                    [Page 13]

INTERNET-DRAFT           Accounting Management               8 June 1999

in inter-domain accounting, where packets often pass through Network
Access Points (NAPs) where packet loss may be substantial. Resilience
against packet loss can be accomplished via implementation of a retry
mechanism on top of UDP, or use of TCP. On-the-wire interim accounting
provides only limited benefits in mitigating the effects of packet loss.

When implementing UDP retransmission, there are a number of issues to
keep in mind:

   Retry behavior
   Congestion control
   Timeout behavior

In designing a UDP retry mechanism, it is important that the retry
timers relate to the round-trip time, so that retransmissions will not
typically occur within the period in which acknowledgements may be
expected to arrive.  Accounting bandwidth may be significant in some
circumstances, so that the added traffic due to unnecessary
retransmissions may increase congestion levels.

Congestion control in accounting data transfer is a somewhat
controversial issue. Since accounting traffic is often considered
mission-critical, it has been argued that congestion control is not a
requirement; better to let other less-critical traffic back off in
response to congestion. Moreover, without non-volatile storage,
congestive backoff in accounting applications can result in data loss
due to buffer exhaustion.

However, there are very persuasive arguments that in modern accounting
implementations, it is possible to implement congestion control while
improving throughput and maintaining high reliability.

In circumstances where there is sustained packet loss, there simply is
not sufficient capacity to maintain existing transmission rates. Thus,
aggregate throughput will actually improve if congestive backoff is
implemented. This is due to elimination of retransmissions and ability
to utilize techniques such as RED to desynchronize flows. In addition,
with QoS mechanisms such as differentiated services, it is possible to
mark accounting packets for preferential handling so as to provide for
lower packet loss if desired. Thus such choices need not be hard coded
within the application, but can be left to the network administrator.
Furthermore, systems implementing non-volatile storage allow for
backlogged accounting data to be placed in permanent storage pending
transmission so that buffer exhaustion resulting from congestive backoff
is not a concern.

Since UDP is not really a transport protocol, UDP-based accounting
protocols such as [4] often do not prescribe timeout behavior. Thus one

Aboba & Arkko                 Informational                    [Page 14]

INTERNET-DRAFT           Accounting Management               8 June 1999

implementation may throw the accounting data away after 3 constant
duration retries to the same server, while another may implement
exponential backoff to a given server, then switch to another server, up
to a total timeout interval of 12 hours, while storing the untransmitted
data on non-volatile storage. The difference between these behaviors may
be of intense concern, since the former approach will not satisfy
archival accounting requirements while the latter may.

6.1.3.  Accounting server failures

In the event of an accounting server failure, it may not be possible for
a device to transmit accounting data to its primary accounting server.
For protocols using TCP, opening of a connection to the secondary
accounting server can occur after a timeout or loss of the primary
connection, or it can occur on expiration of a timer. For protocols
using UDP, transmission to the secondary server can occur after a number
of retries or timer expiration. In either case, it is possible for the
primary and secondary accounting servers to receive the same record, so
that elimination of duplicates is required.

Since accounting server failures can result in data accumulation on
accounting clients, use of non-volatile storage can ensure against the
loss of such data due to transmission timeouts or buffer exhaustion.

On-the-wire interim accounting provides only limited benefits in
mitigating the effects of accounting server failures.

6.1.4.  Network failures

Network failures may result in partial or complete loss of connectivity
for the accounting client. In the event of partial connectivity loss, it
may not be possible to reach the primary accounting server, in which
case switchover to the secondary accounting server is necessary.  In the
event of a network partition, it may be necessary to store accounting
events in device memory or non-volatile storage until connectivity can
be re-established.

As with accounting server failures, on-the-wire interim accounting
provides only limited benefits in mitigating the effects of network
failures.

6.1.5.  Device reboots

In the event of a device reboot, it is desirable to minimize the loss of
data on sessions in progress. Such losses may be significant even if the

Aboba & Arkko                 Informational                    [Page 15]

INTERNET-DRAFT           Accounting Management               8 June 1999

devices themselves are very reliable, due to long-lived sessions, which
can comprise a significant fraction of total resource consumption.
Sending interim accounting data over the wire is typically implemented
to guard against loss of these high-value sessions. When interim
accounting is combined with non-volatile storage it becomes possible to
guard against data loss in much shorter sessions. This is possible since
interim accounting data need only be stored in non-volatile memory until
the session completes, at which time the interim data may be replaced by
the session record. As a result, interim accounting data need never be
sent over the wire, and it is possible to decrease the interim interval
so as to provide a very high degree of protection against data loss.

Aboba & Arkko                 Informational                    [Page 16]

INTERNET-DRAFT           Accounting Management               8 June 1999

6.1.6.  Fault resilience summary

   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                                       |
   |  Fault          |             Counter-measures          |
   |                 |                                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                                       |
   |  Packet         |   Retransmission based on RTT         |
   |  loss           |   Congestion control                  |
   |                 |   Well-defined timeout behavior       |
   |                 |   Duplicate elimination               |
   |                 |   Interim accounting*                 |
   |                 |   Non-volatile storage                |
   |                 |                                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                                       |
   |  Accounting     |   Primary-secondary servers           |
   |  server & net   |   Duplicate elimination               |
   |  failures       |   Interim accounting*                 |
   |                 |   Non-volatile storage                |
   |                 |                                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                                       |
   |  Device         |   Interim accounting*                 |
   |  reboots        |   Non-volatile storage                |
   |                 |                                       |
   |                 |                                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Key
   * = limited usefulness without non-volatile storage

6.2.  Resource consumption

In the process of growing to meet the needs of providers and customers,
accounting management systems consume a variety of resources, including:

   Network bandwidth
   Memory
   Non-volatile storage
   State on the accounting management system
   CPU on the management system and managed devices

In order to understand the limits to scaling of accounting management
systems, we examine each of these resources in turn.

Aboba & Arkko                 Informational                    [Page 17]

INTERNET-DRAFT           Accounting Management               8 June 1999

6.2.1.  Network bandwidth

Accounting management systems consume network bandwidth in the
transferring of accounting data. The network bandwidth consumed is
proportional to the amount of data transferred, as well as required
network overhead.  Since accounting data for a given event may be 100
octets or less, if each event is transferred individually, overhead can
represent a considerable proportion of total bandwidth consumption.  As
a result, it is often desirable to transfer accounting data in batches,
enabling network overhead to be spread over a larger payload, and
enabling efficient use of compression.

6.2.2.  Memory

In accounting systems without non-volatile storage, accounting data must
be stored in volatile memory during the period between when it is
generated and when it is transferred. The resulting memory consumption
will depend on retry and retransmission algorithms. Since systems
designed for high reliability will typically wish to retry for long
periods, or may store interim accounting data, the resulting memory
consumption can be considerable. As a result, if non-volatile storage is
unavailable, it may be desirable to compress accounting data awaiting
transmission.

As noted earlier, implementors of interim accounting should take care to
ensure against excessive memory usage by overwriting older interim
accounting data with newer data for the same session rather than
accumulating interim data in the buffer.

6.2.3.  Non-volatile storage

Since accounting data stored in memory will typically be lost in the
event of a device reboot or a timeout, it may be desirable to provide
non-volatile storage for undelivered accounting data. With the costs of
flash RAM declining rapidly, it is likely that network devices will be
capable of incorporating non-volatile storage within the next few years.

As described in [11], non-volatile storage may be used to store interim
or session records in a standard ASCII format. As with memory
utilization, interim accounting overwrite is desirable so as to prevent
excessive storage consumption. Note that the use of ASCII data
representation enables use of highly efficient text compression
algorithms that can minimize storage requirements. Such compression
algorithms are only typically applied to session records so as to enable
implementation of interim data overwrite.

Aboba & Arkko                 Informational                    [Page 18]

INTERNET-DRAFT           Accounting Management               8 June 1999

6.2.4.  State on the accounting management system

In order to keep track of received accounting data, accounting
management systems may need to keep state on managed devices or
concurrent sessions.  Since the number of devices is typically much
smaller than the number of concurrent sessions, it is desirable to keep
only per-device state if possible.

6.2.5.  CPU requirements

CPU consumption of the managed and managing nodes will be proportional
to the complexity of the required accounting processing. Operations such
as ASN.1 encoding and decoding, compression/decompression, and
encryption/decryption can consume considerable resources, both on
accounting clients and servers.

The effect of these operations on accounting system reliability should
not be under-estimated, particularly in the case of devices with
moderate CPU resources. In the event that devices are over-taxed by
accounting tasks, it is likely that overall device reliability will
suffer.

Aboba & Arkko                 Informational                    [Page 19]

INTERNET-DRAFT           Accounting Management               8 June 1999

6.2.6.  Efficiency measures

   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                                       |
   |  Resource       |        Efficiency measures            |
   |                 |                                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                                       |
   |  Network        |   Batching                            |
   |  Bandwidth      |   Compression                         |
   |                 |                                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                                       |
   |  Memory         |   Compression                         |
   |                 |   Interim accounting overwrite        |
   |                 |                                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                                       |
   |  Non-volatile   |   Compression                         |
   |  Storage        |   Interim accounting overwrite        |
   |                 |                                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                                       |
   |  System         |   Per-device state                    |
   |  state          |                                       |
   |                 |                                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                                       |
   |  CPU            |   Hardware assisted                   |
   |  requirements   |     compression/encryption            |
   |                 |                                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

6.3.  Data collection models

Several data collection models are currently in use today for the
purposes of accounting data collection. These include:

   Polling model
   Event-driven model
   Event-driven polling model

6.3.1.  Polling model

In the polling model, an accounting manager will poll devices for
accounting information at regular intervals. In order to ensure against

Aboba & Arkko                 Informational                    [Page 20]

INTERNET-DRAFT           Accounting Management               8 June 1999

loss of data, the polling interval will need to be shorter than the
maximum time that accounting data can be stored on the polled device.
For devices without non-volatile stage, this is typically determined by
available memory; for devices with non-volatile storage the maximum
polling interval is determined by the size of non-volatile storage.

The polling model results in an accumulation of data within individual
devices, and as a result, data is typically transferred to the
accounting manager in a batch, resulting in an efficient transfer
process. In terms of Accounting Manager state, polling systems scale
with the number of managed devices, and system bandwidth usage scales
with the amount of data transferred.

Without non-volatile storage, the polling model results in loss of
accounting data due to device reboots, but not due to packet loss or
network failures of sufficiently short duration to be handled within
available memory. This is because the Accounting Manager will continue
to poll until the data is received. In situations where operational
difficulties are encountered, the volume of accounting data will
frequently increase so as to make data loss more likely. However, in
this case the polling model will detect the problem since attempts to
reach the managed devices will fail.

The polling model is typically not appropriate for implementation of
roaming services, including wireless data, internet telephony, QoS
provisioning or Internet access. This is because in order to retrieve
accounting data on roaming users, the Accounting Management station
would need to periodically poll the devices of all potential roaming
partners, most of which would not hold any relevant data.

Per-device state is typical of polling-based network management systems,
which often also carry out accounting management functions, since
network management systems need to  keep track of the state of network
devices for operational purposes.

6.3.2.  Event-driven model

In the event-driven model, a device will contact the accounting server
or manager when it is ready to transfer accounting data. Most event-
driven accounting systems, such as those based on RADIUS accounting,
described in [4], transfer only one accounting event per packet, which
is inefficient.

Without non-volatile storage, a pure event-driven model only stores
individual accounting events that have not yet been delivered and as a
result it has the smallest memory requirements of any of the models.
However, the event-driven model is also the least reliable, since

Aboba & Arkko                 Informational                    [Page 21]

INTERNET-DRAFT           Accounting Management               8 June 1999

accounting data loss will occur due to device reboots, sustained packet
loss, or network failures of duration greater than the timeout interval.
Since accounting servers will not receive events if operational
difficulties are encountered, event-driven accounting systems are not
very useful in monitoring of device health.

The event-driven model is frequently used for implementation of roaming
services, since this model allows accounting data to be sent to the
roaming partners with low processing delay. This permits application of
fraud prevention techniques. However, because roaming accounting events
are frequently of high value, the poor reliability of this model is an
issue. As a result, the event-driven polling model may be more
appropriate.

Per-session state is typical of event-driven systems without batching,
and as a result,  a pure event-driven approach is to be avoided wherever
possible.

6.3.3.  Event-driven polling model

In the event-driven polling model an accounting manager will poll the
device for accounting data only when it receives an event. The
accounting client can generate an event when a batch of a given size has
been gathered, when data of a certain type is available or after a
minimum time period has elapsed. Note that while transfer efficiency
will increase with batch size, without non-volatile storage, the
potential data loss from a device reboot will also increase.

Without non-volatile storage, an event-driven polling model will lose
data due to device reboots, but not due to packet loss, or network
partitions of short-duration. Unless a minimum delivery interval is set,
event-driven polling systems are not useful in monitoring of device
health.

The event-driven polling model can be highly suitable for use in roaming
since it permits accounting data to be sent to the roaming partners with
low processing delay. At the same time non-roaming accounting can be
handled via more efficient polling techniques, thereby providing the
best of both worlds.

Where batching can be implemented the state required in event-driven
polling can be reduced to scale with the number of active devices.  If
portions of the network vary widely in usage, then this state may
actually be less than that of the polling approach.

Aboba & Arkko                 Informational                    [Page 22]

INTERNET-DRAFT           Accounting Management               8 June 1999

6.3.4.  Data collection summary

   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                    |                  |
   |  Model          |   Pros             |    Cons          |
   |                 |                    |                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                    |                  |
   |  Polling        | Per-device state   | Not robust       |
   |                 | Robust against     |  against device  |
   |                 |   packet loss      |  reboot, server  |
   |                 | Batch transfers    |  or network      |
   |                 |                    |  failures*       |
   |                 |                    | Polling interval |
   |                 |                    |  determined by   |
   |                 |                    |  storage limit   |
   |                 |                    | High processing  |
   |                 |                    |  delay           |
   |                 |                    | Unsuitable for   |
   |                 |                    |  use in roaming  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                    |                  |
   |  Event-driven   | Low processing     | Not robust       |
   |                 |  delay             |  against packet  |
   |                 | Suitable for       |  loss, device    |
   |                 |  use in roaming    |  reboot, or      |
   |                 |                    |  network         |
   |                 |                    |  failures*       |
   |                 |                    | Low efficiency   |
   |                 |                    | Per-session state|
   |                 |                    |                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                    |                  |
   |  Event-driven   | Low processing     | Not robust       |
   |  polling        |  delay             |  against device  |
   |                 | Suitable for use   |  reboot, network |
   |                 |  in roaming        |  failures*       |
   |                 | Batch transfers    |                  |
   |                 |                    |                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Key
   * = non-volatile storage needed to address this

Aboba & Arkko                 Informational                    [Page 23]

INTERNET-DRAFT           Accounting Management               8 June 1999

7.  Review of existing accounting protocols

Accounting systems have been successfully implemented using protocols
such as RADIUS, TACACS+, and SNMP. This section  describes the
characteristic of each of these protocols, as well as transfer protocols
such as HTTP, FTP, and SMTP.  For a review of accounting attributes and
record formats, see [45].

7.1.  Accounting protocols

7.1.1.  RADIUS

RADIUS accounting, described in [4], was developed as an add-on to the
RADIUS authentication protocol, described in [3]. As a result, RADIUS
accounting shares the event-driven approach of RADIUS authentication,
without support for batching or polling. As a result, RADIUS accounting
scales with the number of accounting events instead of the number of
devices, and accounting transfers are inefficient. In addition, since
RADIUS accounting is based on UDP and timeout and retry parameters are
not specified, implementations vary widely in their approach to
reliability, with some implementations retrying until delivery or buffer
exhaustion, and others losing accounting data after a few retries.

As a result, RADIUS accounting implementations are vulnerable to packet
loss as well as network failures and device reboots. These deficiencies
are magnified when RADIUS accounting is applied in inter-domain
accounting as is required in roaming, as noted in [1] and [2]. On the
other hand, the event-driven approach of RADIUS accounting is well
suited to handling of accounting events which require low processing
delay, such as is required for credit risk management or fraud
detection.

While RADIUS accounting does provide hop-by-hop authentication and
integrity protection, and IPSEC can be employed to provide hop-by-hop
confidentiality, data object security is not supported, and thus systems
based on RADIUS accounting are not capable of being deployed with
untrusted proxies, or in situations requiring non-repudiation, as noted
in [2].

While in principle extensible with the definition of new attributes,
RADIUS suffers from the very small standard attribute space (256
attributes).

Aboba & Arkko                 Informational                    [Page 24]

INTERNET-DRAFT           Accounting Management               8 June 1999

7.1.2.  TACACS+

TACACS+ as defined in [26] offers an accounting model with start, stop,
and interim update messages. Since TACACS+ is based on TCP,
implementations are typically resilient against packet loss and short-
lived network partitions, and TACACS+ scales with the number of devices.
TACACS+ does not support batching, and as a result, is suitable for
handling of accounting events that require moderate though not the
lowest processing delay, since it runs over TCP.

TACACS+ provides for hop-by-hop authentication and integrity protection
as well as hop-by-hop confidentiality. Data object security is not
supported, and therefore systems based on TACACS+ accounting are not
deployable in the presence of untrusted proxies. TACACS+ does not
support non-repudiation.

7.1.3.  SNMP

SNMP, described in [27]-[41], has been widely deployed in a wide variety
of intra-domain accounting applications, typically using the polling
data collection model. Since polling allows data to be collected on
multiple accounting events simultaneously, this model results in per-
device state, and supports batch transfers for high efficiency, thus
improving scaling properties and enabling efficient transfers. Since the
management agent is able to retry requests when a response is not
received, such systems are resilient against packet loss or even short-
lived network partitions.  While polling implementations without non-
volatile storage can only store accounting events up to the limits of
their memory, and thus are not robust against device reboots or network
failures, when combined with non-volatile storage, they can be made
highly reliable. Thus, addition of support for file-based storage and
subsequent transfer of SNMP-based accounting data is highly desirable.
File-based storage of SNMP data is described in [43], and an FTP MIB is
described in [44].

Although with SNMP v2 it is also possible support confirmed
notifications, so as to implement an event-driven polling model, we are
not aware of any SNMP-based accounting systems that make use of this
facility. With SNMPv3, it is possible to incorporate view-based access
controls, described in [40], as well as user-based security, described
in [38]. As a result, SNMP v3-based accounting implementations can
provide for hop-by-hop authentication, integrity and replay protection,
confidentiality and access-control. They cannot however provide data-
object based security required for deployment with untrusted proxies,
nor does SNMPv3 support non-repudiation.

Aboba & Arkko                 Informational                    [Page 25]

INTERNET-DRAFT           Accounting Management               8 June 1999

Where multiple administrative domains are involved, such as in the
shared use networks and roaming associations described in [1], more
sophisticated access controls are often required. Since in shared use
networks the same device may be accessed by multiple organizations, it
is often necessary to control access to accounting data according to the
user's organization.  This ensures that organizations may be given
access to accounting data relating to their users, but not to data
relating to users of other organizations. This implies that access
rights will depend not only on the element being collected, but on the
identity of the user to whom that data relates. Through use of the
contextName, it is possible to run multiple copies of an SNMP MIB, one
for each accessing organization or context. This permits access to be
controlled using the view-based access control model described in [40].

However, as the number of network devices within the shared use or
roaming network grows, the polling model of data collection becomes
increasingly impractical since most devices will not carry data relating
to the polling organization. As a result, shared-use networks or roaming
associations relying on SNMP-based accounting have generally collected
data for all organizations and then sorted the resulting session records
for delivery to each organization. While functional, this approach will
typically result in increased processing delay as the number of
organizations and data records grows.

7.2.  Accounting data transfer

In order for session records to be transmitted between accounting
servers, a transfer protocol is required. Transfer protocols in use
today include SMTP, FTP, and HTTP.

7.2.1.  SMTP-based accounting record transfer

To date, few accounting management systems have been built on SMTP since
the implementation of a store-and-forward message system has
traditionally required access to non-volatile storage which has to date
not been widely available on network devices.  However, an examination
of the characteristics of SMTP-based implementations reveals that they
possess many desirable characteristics.

Accounting management systems using SMTP for accounting transfer will
typically support batching so that message processing overhead will be
spread over multiple accounting records. As a result, these systems
result in per-active device state. Since accounting systems using SMTP
as a transfer mechanism have access to substantial non-volatile storage,
they can generate, compress if necessary, and store accounting records
until they are transferred to the collection site. As a result,

Aboba & Arkko                 Informational                    [Page 26]

INTERNET-DRAFT           Accounting Management               8 June 1999

accounting systems implemented using SMTP can be highly efficient and
scalable.  Using IPSEC, TLS or Kerberos, hop-by-hop security services
such as authentication, integrity protection and confidentiality can be
provided.

As described in [13] and [15], data object security is available for
SMTP, and in addition, the facilities described in [12] make it possible
to request and receive signed receipts, which enables non-repudiation as
described in [12]-[18]. As a result, accounting systems utilizing SMTP
for accounting data transfer are capable of satisfying the most
demanding security requirements. However, such systems are not typically
capable of providing low processing delay, although this may be
addressed by the enhancements described in [20].

7.2.2.  Other transfer mechanisms

File transfer protocols such as FTP and HTTP have been used for transfer
of accounting data. For example, Reference [9] describes a means for
representing ASN.1-based accounting data for storage on archival media.
Through the use of the Bulk File MIB, described in [43], accounting data
from an SNMP MIB can be stored in ASN.1, bulk binary or Bulk ascii
format, and then subsequently retrieved as required using the FTP Client
MIB described in [44].

Given access to sufficient non-volatile storage, accounting systems
based on record formats and transfer protocols can avoid loss of data
due to long-duration network partitions, server failures or device
reboots.  Since it is possible for the transfer to be driven from the
collection site, the collector can retry transfers until successful, or
with HTTP may even be able to restart partially completed transfers. As
a result, file transfer-based systems can be made highly reliable, and
the batching of accounting records makes possible efficient transfers
and application of required security services with lessened overhead.

8.  Security issues

As noted previously in this document, accounting applications vary in
their security and reliability requirements. Some uses such as capacity
planning may only require authentication, integrity and replay
protection, and modest reliability while other applications such as
inter-domain usage-sensitive billing may require the highest degree of
security and reliability, since in these cases the transfer of
accounting data will lead directly to the transfer of funds.

Since accounting applications do not have uniform security and
reliability requirements, it is not possible to devise a single

Aboba & Arkko                 Informational                    [Page 27]

INTERNET-DRAFT           Accounting Management               8 June 1999

accounting protocol and set of security services that will meet all
needs. Rather, the goal of accounting management should be to provide a
set of tools that can be used to construct accounting systems meeting
the requirements of an individual application.

As a result, it is important to analyze a given accounting application
to ensure that the methods chosen meet the security and reliability
requirements of the application. Based on the analysis given previously,
it appears that existing   protocols are capable of meeting the security
requirements for capacity planning and non-usage sensitive billing
applications. For usage sensitive billing, as well as cost allocation
and auditing applications, new work is required to support the file-
based storage and transfer of bulk data needed to ensure high
reliability. For time sensitive applications such as those supporting
fraud detection or roaming, no existing protocol simultaneously meets
the requirements for high security and reliability, as well as low
processing delay. A summary is given below:

Aboba & Arkko                 Informational                    [Page 28]

INTERNET-DRAFT           Accounting Management               8 June 1999

   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                    |                  |
   |  Usage          |   Intra-domain     |  Inter-domain    |
   |                 |                    |                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                    |                  |
   |  Capacity       | SNMP v3            | SNMP v3 w/       |
   |  Planning       | TACACS+ accounting |  contextName     |
   |                 |                    |                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                    |                  |
   |  Non-Usage      | SNMP v3            | SNMP v3 w/       |
   |  Sensitive      | RADIUS accounting  |  contextName     |
   |  Billing        | DIAMETER accounting|                  |
   |                 | TACACS+ accounting |                  |
   |                 |                    |                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                    |                  |
   |                 |  Session record    | Session record   |
   |  Usage          |  storage and       | storage          |
   |  Sensitive      |  file transfer     | and file transfer|
   |  Billing,       |  via secure        | via ultra-       |
   |  cost           |  protocol          | secure protocol  |
   |  allocation &   |  (i.e. FTP or HTTP | (i.e. S/MIME-    |
   |  auditing       |  over TLS)         | based EDI with   |
   |  (no time       |                    | receipts)        |
   |  sensitivity or |                    |                  |
   |  roaming)       |                    |                  |
   |                 |                    |                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 |                    |                  |
   |                 |  Low overhead,     | Low overhead,    |
   |  Time           |  event driven      | event driven     |
   |  Sensitive      |  polling with      | polling with     |
   |  Billing,       |  authenticity      | data object      |
   |  fraud          |  and privacy       | security and     |
   |  detection,     |  support           | receipt support  |
   |  roaming        |                    |                  |
   |                 |  No existing       | No existing      |
   |                 |  protocol          | protocol         |
   |                 |                    |                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

9.  Acknowledgements

The authors would like to thank Jan Melen (Ericsson), Jarmo Savolainen
(Ericsson), and Glen Zorn (Microsoft) for many useful discussions of

Aboba & Arkko                 Informational                    [Page 29]

INTERNET-DRAFT           Accounting Management               8 June 1999

this problem space.

10.  References

[1]  Aboba, B., Lu J., Alsop J., Ding J., and W. Wang, "Review of
     Roaming Implementations", RFC 2194, September 1997.

[2]  Aboba, B., and G. Zorn, "Criteria for Evaluating Roaming
     Protocols", RFC 2477, January 1999.

[3]  Rigney, C., Rubens, A., Simpson, W., Willens, S., "Remote
     Authentication Dial In User Service (RADIUS)", RFC  2138, April,
     1997.

[4]  Rigney, C., "RADIUS  Accounting", RFC 2139, April 1997.

[5]  Gray, J., Reuter, A., Transaction Processing: Concepts and
     Techniques, Morgan Kaufmann Publishers, San Francisco, California,
     1993.

[6]  Bradner, S., "Key words for use in RFCs to Indicate Requirement
     Levels", BCP 14, RFC 2119, March 1997.

[7]  Crocker, D., Overrell, P., "Augmented BNF for Syntax
     Specifications: ABNF", RFC 2234, November 1997.

[8]  Aboba,  B.,  and  M.  Beadles,  "The Network Access Identifier",
     RFC 2486, January 1999.

[9]  McCloghrie, K., Heinanen, J., Greene, W., Prasad, A., "Accounting
     Information for ATM Networks",  RFC 2512, February 1999.

[10] McCloghrie, K., Heinanen, J., Greene, W., Prasad, A., "Managed
     Objects for Controlling the Collection and Storage of Accounting
     Information for Connection-Oriented Networks", RFC 2513, February
     1999.

[11] Aboba, B., Lidyard, D., "The Accounting Data Interchange Format
     (ADIF)", Internet draft (work in progress), draft-ietf-roamops-
     actng-05.txt, November 1998.

[12] Fajman, R., "An Extensible Message Format for Message Disposition
     Notifications", RFC 2298, March 1998.

[13] Elkins, M., "MIME  Security with Pretty Good Privacy (PGP)", RFC
     2015, October 1996.

Aboba & Arkko                 Informational                    [Page 30]

INTERNET-DRAFT           Accounting Management               8 June 1999

[14] Vaudreuil, G., "The Multipart/Report Content Type for the Reporting
     of  Mail System Administrative Messages", RFC 1892, January 1996.

[15] Galvin, J.,  et  al.  "Security  Multiparts  for  MIME:  Multi-
     part/Signed and  Multipart/Encrypted",  RFC 1847, October 1995.

[16] Crocker, D., "MIME Encapsulation of EDI Objects", RFC 1767, March
     1995.

[17] Shih, C., Jansson, M., Drummond,R., "MIME-based Secure EDI",
     Internet  draft   (work   in   progress),   draft-ietf-ediint-
     as1-09.txt, December 1998.

[18] Shih, C., Jansson, M., Drummond, R., Yarbrough, L. "Requirements
     for Inter-operable Internet EDI",   Internet  draft  (work  in
     progress), draft-ietf-ediint-req-06.txt, December 1998.

[19] Borenstein, N.,  Freed,  N, "MIME  (Multipurpose  Internet  Mail
     Extensions)  Part  One:  Mechanisms  for Specifying and Describing
     the Format of Internet Message  Bodies",  RFC  1521, December 1993.

[20] Joffe, N., Wing, D., Masinter, L., "SMTP Service Extension for
     Immediate Delivery", Internet draft (work in progress), draft-ietf-
     fax-smtp-session-04.txt, August 1998.

[21] Johnson, H. T., Kaplan, R. S., Relevance Lost: The Rise and Fall of
     Management Accounting, Harvard Business School Press, Boston,
     Massachusetts, 1987.

[22] Horngren, C. T., Foster, G., Cost Accounting: A Managerial
     Emphasis.  Prentice Hall, Englewood Cliffs, New Jersey, 1991.

[23] Kaplan, R. S., Atkinson, Anthony A., Advanced Management
     Accounting, Prentice Hall, Englewood Cliffs, New Jersey, 1989.

[24] Cooper, R., Kaplan, R. S., The Design of Cost Management Systems.
     Prentice Hall, Englewood Cliffs, New Jersey, 1991.

[25] Rigney, C., Willens, S., Calhoun, P., "RADIUS Extensions", draft-
     ietf-radius-ext-03.txt, Internet Draft (work in progress), January
     1999.

[26] Carrel, D., Grant, L., "The TACACS+ Protocol Version 1.78",
     Internet draft (work in progress), draft-grant-tacacs-02.txt,
     January 1997.

[27] Harrington, D., Presuhn, R., and B. Wijnen, "An Architecture for
     Describing SNMP Management Frameworks", RFC 2571, April 1999.

Aboba & Arkko                 Informational                    [Page 31]

INTERNET-DRAFT           Accounting Management               8 June 1999

[28] Rose, M., and K. McCloghrie, "Structure and Identification of
     Management Information for TCP/IP-based Internets", RFC 1155, May
     1990.

[29] Rose, M., and K. McCloghrie, "Concise MIB Definitions", RFC 1212,
     March 1991.

[30] M. Rose, "A Convention for Defining Traps for use with the SNMP",
     RFC 1215, March 1991.

[31] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Structure
     of Management Information for Version 2 of the Simple Network
     Management Protocol (SNMPv2)", RFC 1902, January 1996.

[32] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Textual
     Conventions for Version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1903, January 1996.

[33] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Conformance
     Statements for Version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1904, January 1996.

[34] Case, J., Fedor, M., Schoffstall, M., and J. Davin, "Simple Network
     Management Protocol", RFC 1157, May 1990.

[35] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
     "Introduction to Community-based SNMPv2", RFC 1901, January 1996.

[36] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Transport
     Mappings for Version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1906, January 1996.

[37] Case, J., Harrington D., Presuhn R., and B. Wijnen, "Message
     Processing and Dispatching for the Simple Network Management
     Protocol (SNMP)", RFC 2572, April 1999.

[38] Blumenthal, U., and B. Wijnen, "User-based Security Model (USM) for
     version 3 of the Simple Network Management Protocol (SNMPv3)", RFC
     2574, April 1999.

[39] Levi, D., Meyer, P., and B. Stewart, "SNMPv3 Applications", RFC
     2573, April 1999.

[40] Wijnen, B., Presuhn, R., and K. McCloghrie, "View-based Access
     Control Model (VACM) for the Simple Network Management Protocol
     (SNMP)", RFC 2575, April 1999.

Aboba & Arkko                 Informational                    [Page 32]

INTERNET-DRAFT           Accounting Management               8 June 1999

[41] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Protocol
     Operations for Version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1905, January 1996.

[42] Rose, M.T., The Simple Book, Second Edition, Prentice Hall, Upper
     Saddle River, NJ, 1996.

[43] Stewart, B., "Bulk File MIB", Internet draft (work in progress),
     draft-stewart-bulk-file-mib-00.txt, November 1998.

[44] Stewart, B., "FTP Client MIB", Internet draft (work in progress),
     draft-stewart-ftp-client-mib-00.txt, November 1998.

[45] Brownlee, N., "Accounting Attributes and Record Formats", Internet
     draft (work in progress), draft-brownlee-accounting-
     attributes-00.txt, May 1999.

11.  Author's Addresses

Bernard Aboba
Microsoft Corporation
One Microsoft Way
Redmond, WA 98052

Phone: 425-936-6605
EMail: bernarda@microsoft.com

Jari Arkko
Oy LM Ericsson Ab
02420 Jorvas
Finland

Phone: +358 40 5079256
EMail: Jari.Arkko@ericsson.com

12.  Full Copyright Statement

Copyright (C) The Internet Society (1999).  All Rights Reserved.
This document and translations of it may be copied and furnished to
others, and derivative works that comment on or otherwise explain it or
assist in its implmentation may be prepared, copied, published and
distributed, in whole or in part, without restriction of any kind,
provided that the above copyright notice and this paragraph are included
on all such copies and derivative works.  However, this document itself
may not be modified in any way, such as by removing the copyright notice
or references to the Internet Society or other Internet organizations,

Aboba & Arkko                 Informational                    [Page 33]

INTERNET-DRAFT           Accounting Management               8 June 1999

except as needed for the purpose of developing Internet standards in
which case the procedures for copyrights defined in the Internet
Standards process must be followed, or as required to translate it into
languages other than English.  The limited permissions granted above are
perpetual and will not be revoked by the Internet Society or its
successors or assigns.  This document and the information contained
herein is provided on an "AS IS" basis and THE INTERNET SOCIETY AND THE
INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE."

13.  Expiration Date

This memo is filed as <draft-aboba-acct-01.txt>, and  expires December
1, 1999.

Aboba & Arkko                 Informational                    [Page 34]
