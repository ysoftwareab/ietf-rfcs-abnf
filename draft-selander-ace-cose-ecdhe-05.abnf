message_1 = [
     MSG_TYPE : int,
     S_U : bstr,
     N_U : bstr,
     E_U : serialized_COSE_Key,
     HKDFs_U : alg_array,
     AEADs_U : alg_array,
     SIGs_V : alg_array,
     SIGs_U : alg_array,
     ? EXT_1 : bstr
serialized_COSE_Key = bstr .cbor COSE_Key

alg_array = [ + alg : int / tstr ]

message_2 = [
     data_2,
     COSE_ENC_2 : COSE_Encrypt0
data_2 = (
     MSG_TYPE : int,
     S_U : bstr,
     S_V : bstr,
     N_V : bstr,
     E_V : serialized_COSE_Key,
     HKDF_V : int / tstr,
     AEAD_V : int / tstr,
     SIG_V : int / tstr,
     SIG_U : int / tstr
aad_2 = H(message_1) | [ data_2 ] | ? Cert_V

message_3 = [
     data_3,
     COSE_ENC_3 : COSE_Encrypt0
data_3 = (
     MSG_TYPE : int,
     S_V : bstr
aad_3 = H( H(message_1) | message_2 ) | [ data_3 ] | ? Cert_U

message_1 = [
     data_1,
     COSE_ENC_1 : COSE_Encrypt0
data_1 = (
     MSG_TYPE : int,
     S_U : bstr,
     N_U : bstr,
     E_U : serialized_COSE_Key,
     HKDFs_U : alg_array,
     AEADs_U : alg_array,
     KID : bstr
aad_1 = [ data_1 ]

serialized_COSE_Key = bstr .cbor COSE_Key

alg_array = [ + alg : int / tstr ]

message_2 = [
     data_2,
     COSE_ENC_2 : COSE_Encrypt0
data_2 = (
     MSG_TYPE : int,
     S_U : bstr,
     S_V : bstr,
     N_V : bstr,
     E_V : serialized_COSE_Key,
     HKDF_V : int / tstr,
     AEAD_V : int / tstr
aad_2 = H(message_1) | [ data_2 ]

message_3 = [
     data_3,
     COSE_ENC_3 : COSE_Encrypt0
data_3 = (
     MSG_TYPE : int,
     S_V : bstr
aad_3 = H( H(message_1) | message_2 ) | [ data_3 ]

