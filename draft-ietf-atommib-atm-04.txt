




          Internet Draft      ATM Management Objects    February 4, 1994


                          Definitions of Managed Objects
                                for ATM Management
                                   Version 5.0
                          draft-ietf-atommib-atm-04.txt

                                 February 4, 1994


                              Masuma Ahmed (editor)
                               Kaj Tesink (editor)
                           Bell Communications Research
                             331 Newman Springs Road
                               Red Bank, NJ  07701

                              mxa@mail.bellcore.com
                               kaj@cc.bellcore.com






          1.  Status of this Memo

          This document is an Internet Draft.  Internet Drafts are
          working documents of the Internet Engineering Task Force
          (IETF), its Areas, and its Working Groups.  Note that other
          groups may also distribute working documents as Internet
          Drafts.

          Internet Drafts are valid for a maximum of six months and may
          be updated, replaced, or obsoleted by other documents at any
          time.  It is inappropriate to use Internet Drafts as reference
          material or to cite them other than as a "working draft" or
          "work in progress".

          Please check the I-D abstract listing contained in each
          Internet Draft directory to learn the current status of this
          or any other Internet Draft.

          Distribution of this document is unlimited.









          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94  [Page 1]





          Internet Draft      ATM Management Objects    February 4, 1994


          2.  Abstract

          This memo defines an experimental portion of the Management
          Information Base (MIB) for use with network management
          protocols in TCP/IP-based internets.  In particular, it
          defines objects for managing ATM-based interfaces, devices,
          networks and services.

          This memo specifies a MIB module in a manner that is both
          compliant to the SNMPv2 SMI, and semantically identical to the
          peer SNMPv1 definitions.

          [Temporary Note:  Upon progression of this specification as a
          Proposed Standard, an SNMPv2 and an SNMPv1 version of this MIB
          module will be made available to ease migration.]

          This memo does not specify a standard for the Internet
          community.

          3.  Change Log

          This section tracks changes made to the revisions of the
          Internet Drafts of this document.  It will be deleted when the
          document is published as an RFC.

          The following changes were made for the version of the
          document dated February 4, 1994.  These changes were made as a
          result of the comments provided by the AToM MIB Working Group
          on the 12/22/93 AToM MIB draft.

            - ATM address type has been added to the ATM interface
              configuratoin group.

            - The type of AAL that will be terminated by
              the virtual connection and the AAL5 related
              configuration parameters have been added
              to the VC link group.


          The following changes were made for the version of the
          document dated December 22, 1993.  These changes were made as
          a result of the comments provided by the AToM MIB Working
          Group on the 11/29/93 AToM MIB draft.

            - Minor modifications to the mapping of the AAL5





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94  [Page 2]





          Internet Draft      ATM Management Objects    February 4, 1994


              sublayer to the Interface Group have been made.

            - Modifications have been made to align the ATM MIB
              with the ILMI MIB.

            - The ATM traffic parameters have been taken out of
              the VP and VC link tables and are included
              in a separate table.  Texts describing the
              step-wise setting up of virtual links and
              cross-connects and the errors which can occur
              at each step have been added.



          The following changes were made for the version of the
          document dated November 29, 1993.  These changes were made as
          a result of the AToM MIB Working Group's meeting in Houston
          IETF meeting.

            - A minor modification to the mapping of the ATM
              layer to the Interface Group has been made.

            - The VP and VC connection tables have been deleted and
              new VP and VC cross-connect tables and
              VP and VC link tables are added for setting up
              and managing ATM cross-connect and virtual
              link configurations in ATM networks, switches, routers,
              and hosts.  Appropriate editorial changes are made
              to reflect this.  Texts describing stepwise
              procedures to set-up ATM virtual links and
              cross-connects have been added.

            - The scope of this document is broadened to model
              AAL5 entity which is an internal resource in an ATM switch.
              Appropriate editorial changes are made to reflect this.
              A new approach has been adopted to model the AAL5
              entity in an ATM switch using the Interface Group
              through a proprietary, internal virtual interface.
              In an ATM host or router, the AAL5 entity is modeled
              using the Interface Group by directly stacking
              AAL5 sublayer over ATM sublayer.  In addition, a new
              VC link table specific to AAL5 is added in the
              ATM MIB for performance monitoring of the AAL5
              connections that are terminated at an ATM switch.






          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94  [Page 3]





          Internet Draft      ATM Management Objects    February 4, 1994


            - To be consistent with the ATM Forum UNI specification,
              the name of the ATM traffic enforcement type has been
              changed to ATM traffic descriptor type and the
              policing and shaping traffic parameters
              have been changed respectively to
              receive and transmit traffic parameters.

            - Minor editorial changes.


          The following changes were made for the version of the
          document dated October 19, 1993.

            - Representation of the ATM layer in the Interface
              Group has been modified as follows:
              The ATM layer objects are now represented using
              the fixedLengthGroup in the ifTable.  The objects
              supported are ifIndex, ifDescr, ifType, ifSpeed,
              ifPhyAddress, ifAdminStatus, ifOperStatus, ifLastChange,
              ifInOctets, ifInErrors, ifInUnknownProtos, ifSpecific,
              ifName, ifLinkUpDownTrapEnable, ifHighSpeed, ifHCInOctets,
              and ifHCOutOctets.   The ifPacketGroup does not apply
              to ATM layer.

            - The performance parameter group per virtual link has been removed.

            - The object atmInterfaceSpecific
              has been deleted from the atmInterfaceConfTable.

            - There was an error in the atmInterfaceTrafficEnforcementTypes
              which was corrected.

            - AAL3/4 and AAL5 are now represented as
              separate entries in the ifTable.
              The value of the ifType for AAL3/4 Common Part
              Convergence Sublayer (CPCS) is the
              ifType of the SMDS Interface Protocol (SIP).  The
              AAL3/4 CPCS layer objects are represented
              using the SIP MIB, RFC 1304.

            - The value of the ifType for AAL5 is 49.  The
              representation of AAL5 using ifTable and in the
              ATM MIB is currently under study and will be
              included in the future.






          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94  [Page 4]





          Internet Draft      ATM Management Objects    February 4, 1994


            - The SONET Transmission Convergence (TC) sublayer is renamed
              as TC sublayer.  This is because TC sublayer can be used for
              carrying ATM directly over SONET as well as directly
              over DS3 or DS1 physical layers.


          The following changes were made for the version of the
          document dated August 9, 1993.

            - This MIB module is made compliant with SNMPv2 SMI.

            - This MIB module incorporates the changes agreed upon at the
              AToM MIB WG meeting in Amsterdam.

            - The objects atmInterfacePortIdentifier,
              atmInterfaceTransmissionType and
              atmInterfaceMediaType have been deleted from the
              atmInterfaceConfTable.  The object atmInterfaceIlmiVpiVci
              has been clarified.

            - Entries in the ifTable have been updated for ATM interface,
              and AAL level interfaces.

            - Representations of the AAL level interfaces in the Interface Group
              have been modified as follows:
              The AAL level is now represented per ATM interface and
              not per virtual connection. Therefore, the AAL
              pointer group is deleted.
              AAL3/4 and AAL5 CPCS layers are now combined and represented as
              a single entry in the Interface Group.
              AAl1 SAR layer is also now represented in the Interface Group.

            - Formal conformance statements have beed added.


          4.  The SNMPv2 Network Management Framework

          The SNMPv2 Network Management Framework consists of four major
          components.  They are:


                 RFC 1442 which defines the SMI, the mechanisms used for
                 describing and naming objects for the purpose of
                 management.






          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94  [Page 5]





          Internet Draft      ATM Management Objects    February 4, 1994


                 RFC 1213 defines MIB-II, the core set of managed objects
                 for the Internet suite of protocols.

                 RFC 1445 which defines the administrative and other
                 architectural aspects of the framework.

                 RFC 1448 which defines the protocol used for network
                 access to managed objects.

          The Framework permits new objects to be defined for the
          purpose of experimentation and evaluation.







































          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94  [Page 6]





          Internet Draft      ATM Management Objects    February 4, 1994


          5.  Objects

          Managed objects are accessed via a virtual information store,
          termed the Management Information Base or MIB.  Objects in the
          MIB are defined using the subset of Abstract Syntax Notation
          One (ASN.1) [3] defined in the SMI.  In particular, each
          object has a name, a syntax, and an encoding.  The name is an
          OBJECT IDENTIFIER, an administratively assigned name, which
          specifies an object type.  The object type together with an
          object instance serves to uniquely identify a specific
          instantiation of the object.  For human convenience, we often
          use a textual string, termed the descriptor, to also refer to
          the object type.

          The syntax of an object type defines the abstract data
          structure corresponding to that object type.  The ASN.1
          language is used for this purpose.  However, the SMI RFC 1442
          purposely restricts the ASN.1 constructs which may be used.
          These restrictions are explicitly made for simplicity.

          The encoding of an object type is simply how that object type
          is represented using the object type's syntax.  Implicitly
          tied to the notion of an object type's syntax and encoding is
          how the object type is represented when being transmitted on
          the network.  The SMI specifies the use of the basic encoding
          rules of ASN.1 [4], subject to the additional requirements
          imposed by the SNMPv2.

          5.1.  Format of Definitions

          Section 12 contains the specification of all object types
          contained in this MIB module.  The object types are defined
          using the conventions defined in the SNMPv2 SMI.

















          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94  [Page 7]





          Internet Draft      ATM Management Objects    February 4, 1994


          6.  ATM Terminology

          Some basic ATM terminologies are described in this section to
          facilitate defining the ATM managed objects.


          6.1.  VCL/VPL and VCC/VPC

          There are two distinct types of ATM virtual connections:
          Virtual Channel Connections (VCCs) and Virtual Path Connection
          (VPCs).  As shown in Figures 1 and 2, ATM virtual connections
          consist of concatenated series of virtual links which forms a
          path between two end points, with each concatenation occurring
          at an ATM switch.  Virtual links of VCCs are called Virtual
          Channel Links (VCLs). Virtual links of VPCs are called Virtual
          Path Links (VPLs). The VCI and VPI fields in the ATM cell
          header associate each cell of a VCC with a particular VCL over
          a given physical link.  The VPI field in the ATM cell header
          associates each cell of a VPC with a particular VPL over a
          given physical link.  Switches route cells between VCLs (or
          VPLs) via a cross-connect function according to the cells'
          VCI/VPI (or VPI) values.




                    <-----------------------VCC----------------------------->
                              ------------                -----------
                              |ATM       |                |ATM       |
                              |X-Connect |                |X-Connect |
                       VCL1   |Point     |    VCL2        |Point     |  VCL3
                    O---------|----X-----|-------|--------|----X-----|-------O
                              |          |                |          |
                              ------------                ------------
                               ATM Switch                  ATM Switch




               Figure 1: Virtual Channel Links and Virtual Channel Connection










          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94  [Page 8]





          Internet Draft      ATM Management Objects    February 4, 1994




                    <-----------------------VPC----------------------------->
                              ------------                -----------
                              |ATM       |                |ATM       |
                              |X-Connect |                |X-Connect |
                       VPL1   |Point     |    VPL2        |Point     |  VPL3
                    O---------|----X-----|-------|--------|----X-----|-------O
                              |          |                |          |
                              ------------                ------------
                               ATM Switch                  ATM Switch



               Figure 2: Virtual Path Links and Virtual Path Connection


          A single ATM end-system or switch does not support the whole
          end-to-end span of a VCC (or VPC).  Rather, multiple ATM end-
          systems and/or switches each support one piece of the VCC (or
          VPC).   That is, each ATM end-system at one end of the VCC/VPC
          supports its end of the VCC/VPPC  plus the VCLs or VPLs on its
          external interfaces, and each switch through which the VCC/VPC
          passes, supports the multiple VCLs/VPLs on that switch's
          external interfaces and the cross-connection of those
          VCLs/VPLs through that switch.  Thus, the end-to-end
          management of a VCC or VPC is achieved only by appropriate
          management of its individual pieces in combination.

          Note that for management purposes, an ATM network may be
          viewed as a large distributed switch by hiding all the
          network's internal connectivity as being internal to the
          distributed switch (as shown in Figure 2a).  This model may
          for example be used for Customer Network Management (CNM)
          purposes.















          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94  [Page 9]





          Internet Draft      ATM Management Objects    February 4, 1994


                    <-----------------------VCC----------------------------->
                              ----------------------------------------
                              |                                      |
                              | ----------                ---------- |
                              | | ATM    |                | ATM    | |
                       VCL1   | | Switch |                | Switch | |  VCL3
                    O---------|-|--------|------/---------|--------|-|-------O
                              | |        |                |        | |
                              | ----------                ---------- |
                              |                                      |
                              |             ATM Network              |
                              ----------------------------------------



                 Figure 2a: ATM Network modeled as a Large distributed switch


          A VCC has a set of traffic characteristics (i.e., bandwidth
          parameters, QoS Class parameters, etc.).  VCLs inherit their
          traffic characteristics from the VCC of which they are a part.
          VCCs are bi-directional by definition.  However, the traffic
          parameters in the two directions of a connection can be
          symmetric or asymmetric, i.e., the two directions can have the
          same or different traffic flows.  A uni-directional traffic
          flow across a VCC is achieved by assigning a zero bandwidth in
          one direction.  Note that even when there is no bandwidth
          assigned to the opposite direction of a uni-directional user
          traffic flow, to allow OAM cell flow, the bandwidth is set to
          some nominal value.  These same principles apply to VPCs.


          6.2.  PVC and SVC

          A Permanent Virtual Connection (PVC) is a provisioned VCC or
          VPC.  A Switched Virtual Connection (SVC) is a switched VCC or
          VPC that is set up in real-time via call set-up signaling
          procedures.  A PVC (or an SVC) can be a point-to-point,
          point-to-multipoint, or multipoint-to-multipoint VCC or VPC.


          6.3.  Traffic Management Parameters








          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 10]





          Internet Draft      ATM Management Objects    February 4, 1994


          6.3.1.  Traffic Policing and Traffic Shaping Parameters

          In order to allocate resources fairly among different users,
          some networks police traffic at resource access points.  The
          traffic enforcement or policing taken at a UNI is called Usage
          Parameter Control (UPC) and is activated on an incoming VCL or
          VPL as shown in Figure 3.  The use of the traffic enforcer at
          the ingress of the connection is to make sure that the user
          traffic does not exceed the negotiated traffic parameters such
          as the peak cell rate associated with a specific traffic
          descriptor type.


                     ----------                   ----------
              UNI    |  ATM   |       NNI         |  ATM   |      UNI
               |     | switch |        |          | switch |       |
          O<---|---->X(UPC)   |<-------|--------->|   (UPC)X<------|--->O
               | VCL |        |        | VCL      |        |   VCL |
                     ----------                   ----------


                         Figure 3: An Example of a UPC

          In addition, traffic shaping may be performed on an outgoing
          VPL or VCL at a given ATM interface.  The function of the ATM
          traffic shaper either at the source or an egress point of the
          connection is to smooth the outgoing cell traffic inter-
          arrival time.  If policing or shaping is not performed then
          the policing or shaping algorithm is not activated.  ATM Forum
          has specified seven traffic descriptor types including one for
          the best effort traffic [12].


          6.3.2.  Cell Loss Priority

          To prioritize traffic during resource congestion, ATM cells
          are assigned one of the two types of Cell Loss Priority (CLP),
          CLP=0 and CLP=1.  ATM cells with CLP=0 have a higher priority
          in regard to cell loss than ATM cells with CLP=1.  Therefore,
          during resource congestions, CLP=1 cells are dropped before
          any CLP=0 cell is dropped.









          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 11]





          Internet Draft      ATM Management Objects    February 4, 1994


          6.3.3.  QoS Class

          A VCC or VPC is associated with one of a number of Quality of
          Service (QoS) classes.  The following service classes have
          been specified:

              Service Class A: Constant bit rate video and Circuit emulation
              Service Class B: Variable bit rate video/audio
              Service Class C: Connection-oriented data
              Service Class D: Connectionless data

          Four QoS classes numbered 1, 2, 3, and 4 have been specified
          with the aim of supporting service classes A, B, C, and D
          respectively.  The VCLs (or VPLs) concatenated to form a VCC
          (or VPC) will all have the same QoS class as that of the VCC
          (or VPC).  The Cell Loss Ratio (CLR), Cell Delay Variation
          (CDV), and end-to-end Cell Delay (CD) parameters are defined
          as part of QoS Class definition.  In addition, an unspecified
          QoS Class numbered 0 is specified for best effort traffic.


          7.  Overview

          ATM management objects are used to manage ATM interfaces, ATM
          virtual links,  ATM cross-connects, AAL5 entities and AAL5
          connections supported by ATM hosts, ATM switches and ATM
          networks.  This section provides an overview and background of
          how to use this MIB and other potential MIBs for this purpose.

          The purpose of this memo is primarily to manage ATM PVCs.  ATM
          SVCs are also represented by the management information in
          this MIB.  However, full management of SVCs may require
          additional capabilities which are beyond the scope of this
          memo.


          7.1.  Background

          In addition to the MIB module defined in this memo, other MIB
          modules are necessary to manage ATM interfaces, links and
          cross-connects.  Examples include MIB II for general system
          and interface management, the DS3 or SONET MIBs for management
          of physical interfaces, and, as appropriate, MIB modules for
          applications that make use of ATM, such as SMDS.  These MIB
          modules are outside the scope of this specification.





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 12]





          Internet Draft      ATM Management Objects    February 4, 1994


          The current specification of this ATM MIB is based on SNMPv2.

          7.2.  Structure of the MIB

          The managed ATM objects are arranged into the following
          groups:
                (1) ATM interface configuration group
                (2) ATM interface DS3 PLCP group
                (3) ATM interface TC Sublayer group
                (4) ATM interface virtual link (VPL/VCL) configuration groups
                (5) ATM VP/VC cross-connect groups
                (6) AAL5 connection performance statistics group

          Note that, managed objects for activation/deactivation of OAM
          cell flows and ATM traps notifying virtual connection or
          virtual link failures are outside the scope of this memo.


          7.3.  ATM Interface Configuration Group

          This group contains information on ATM cell layer
          configuration of local ATM interfaces on an ATM device in
          addition to the information on such interfaces contained in
          the ifTable.


          7.4.  ATM Interface DS3 PLCP and TC Layer Groups

          These groups provide performance statistics of the DS3 PLCP
          and TC sublayer of local ATM interfaces on a managed ATM
          device.  DS3 PLCP and TC sublayer are currently used to carry
          ATM cells respectively over DS3 and SONET transmission paths.

          7.5.  ATM Virtual Link and Cross-Connect Groups

          ATM virtual link and cross-connect groups model bi-directional
          ATM virtual links and ATM cross-connects.  The ATM VP/VC link
          groups are implemented in an ATM host, ATM switch and ATM
          network.  The ATM switch and ATM network also implement the
          ATM VP/VC cross-connect groups.  Both link and cross-connect
          groups are implemented in a carrier's network for Customer
          Network Management (CNM) purposes.

          The ATM virtual link groups are used to create, delete or
          modify ATM virtual links in an ATM host, ATM switch and ATM





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 13]





          Internet Draft      ATM Management Objects    February 4, 1994


          network.  ATM virtual link groups along with the cross-connect
          groups are used to create, delete or modify ATM cross-connects
          in an ATM switch or ATM network (e.g., for CNM purposes).

          8.  Application of MIB II to ATM

          8.1.  The System Group

          For the purposes of the sysServices object in the System Group
          of MIB II [2], ATM is a data link layer protocol.  Thus, for
          ATM switches and ATM networks, sysServices will have the value
          "2".


          8.2.  The Interface Group

          The Interfaces Group of MIB II defines generic managed objects
          for managing interfaces.  This memo contains the media-
          specific extensions to the Interfaces Group for managing ATM
          interfaces.

          This memo assumes the interpretation of the Interfaces Group
          to be in accordance with [5] which states that the interfaces
          table (ifTable) contains information on the managed resource's
          interfaces and that each sub-layer below the internetwork
          layer of a network interface is considered an interface.
          Thus, the ATM cell layer interface is represented as an entry
          in the ifTable.  This entry is concerned with the ATM cell
          layer as a whole, and not with individual virtual connections
          which are managed via the ATM-specific managed objects
          specified in this memo.  The inter-relation of entries in the
          ifTable is defined by Interfaces Stack Group defined in [5].


          8.2.1.  Support of the ATM Cell Layer by ifTable

          Some specific interpretations of ifTable for the ATM cell
          layer follow.

          Object            Use for the generic ATM layer
          ======            =============================

          ifIndex           Each ATM port is represented by an ifEntry.

          ifDescr           Description of the ATM interface.





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 14]





          Internet Draft      ATM Management Objects    February 4, 1994


          ifType            The value that is allocated for ATM is 37.

          ifSpeed           The total bandwidth in bits per second
                            for use by the ATM layer.

          ifPhysAddress     The address for this interface. If an interface has
                            multiple addresses, then this is its primary
                            address.  If an interface has no addresses, then
                            this is an octet string of zero length.

          ifAdminStatus     See [5].

          ifOperStatus      Assumes the value down(2) if the ATM cell layer or
                            any layer below that layer is down.

          ifLastChange      See [5].

          ifInOctets        The number of received octets over the
                            interface, i.e., the number of received,
                            assigned cells multiplied by 53.

          ifOutOctets       The number of transmitted octets over the
                            interface, i.e., the number of transmitted,
                            assigned cells multiplied by 53.

          ifInErrors        The number of cells dropped due to
                            uncorrectable HEC errors.

          ifInUnknownProtos The number of received cells discarded
                            during cell header validation, including
                            cells with unrecognized VPI/VCI values,
                            and cells with invalid cell header patterns.
                            If cells with undefined PTI values are discarded,
                            they are also counted here.

          ifOutErrors       See [5].

          ifName            Textual name of the interface or an octet string
                            of zero length.

          ifLinkUpDownTrapEnable    Default is disabled (2).

          ifConnectorPresent   Set to false (2).

          ifPromiscuousMode Set to false(2).





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 15]





          Internet Draft      ATM Management Objects    February 4, 1994


          ifHighSpeed       See [5].

          ifHCInOctets      The 64-bit version of ifInOctets; supported
                            if required by the compliance statements in [5].

          ifHCOutOctets     The 64-bit version of ifOutOctets; supported
                            if required by the compliance statements in [5].


          9.  Support of the AAL3/4 by RFC 1304

          For the management of AAL3/4 CPCS layer, see RFC1304. [Note:
          RFC1304 is expected to be updated on this matter.]


          10.  Support of the AAL5 Managed Objects

          Support of AAL5 managed objects in an ATM switch and ATM host
          are described below.


          10.1.  Managing AAL5 in a Switch

          Managing AAL5 in a switch involves:

               (1) performance management of an AAL5 entity as
                   an internal resource in a switch

               (2) performance management of AAL5 per virtual connection

          AAL5 in a switch is modeled as shown in Figures 4 and 5.  AAL5
          will be managed in a switch for only those virtual connections
          that carry AAL5 and are terminated at the AAL5 entity in the
          switch.  Note that, the virtual channels within the ATM UNIs
          carrying AAL5 will be switched by the ATM switching fabric
          (termed as ATM Entity in the figure) to the virtual channels
          on a proprietary internal interface associated with the AAL5
          process (termed as AAL5 Entity in the figure). Therefore,
          performance management of the AAL5 resource in the switch will
          be modeled using the ifTable through an internal (pseudo-ATM)
          virtual interface and the AAL5 performance management per
          virtual connection will be supported using an additional AAL5
          connection table in the ATM MIB.  The association between the
          AAL5 virtual link at the proprietary virtual, internal
          interface and the ATM virtual link at the ATM interface will





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 16]





          Internet Draft      ATM Management Objects    February 4, 1994


          be derived from the virtual channel cross-connect table and
          the virtual channel link table in the ATM MIB.


                        ___________________________
                        |                         |
                        |     =============       |
                        |     |    AAL5   |       |
                        |     |   Entity  |       |
                        |     =============       |
                        |           |             |
                        |         -----Prop. Virtual Interface
                        |           |             |
                        |     =============       |
                        |     |   ATM     |       |
                        |     |  Entity   |       |
                        |     =============       |
                        |_____|__|__|__|__|_______|
                              |  |  |  |  |
                             ---------------- ATM UNIs
                              |  |  |  |  |
                              |  |  |  |  |
                              v  v  v  v  v

                Figure 4 : Model of an AAL5 Entity in a Switch




                            __________________
                            |                |
                            |   AAL5         |
                            |________________|
                            |                |
                            | Prop. Virtual  |
                            |  Interface     |
                            |________________|

               Figure 5 : AAL5 Entity's Interface Stack in a Switch











          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 17]





          Internet Draft      ATM Management Objects    February 4, 1994


          10.2.  Managing AAL5 in a Host

          Managing AAL5 in a host involves managing the AAL5 sublayer
          interface as shown in Figures 6 and 7.  The AAL5 sublayer is
          stacked directly over the ATM sublayer.  The ifTable is
          applied to the AAL5 sublayer as defined in Section 10.3.
                        ___________________________
                        |                         |
                        |     =============       |
                        |     |    AAL5   |       |
                        |     |   Entity  |       |
                        |     =============       |
                        |     |   ATM     |       |
                        |     |  Entity   |       |
                        |     =============       |
                        |___________|_____________|
                                    |
                                  __|__ ATM UNI
                                    |
                                    |
                                    v

                Figure 6 : Model of an AAL5 Entity in a Host


                            __________________
                            |                |
                            |   AAL5         |
                            |________________|
                            |                |
                            |   ATM Layer    |
                            |________________|
                            |                |
                            |  Physical Layer|
                            |________________|

                 Figure 7 : AAL5 Entity's Interface Stack in a Host













          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 18]





          Internet Draft      ATM Management Objects    February 4, 1994


          10.3.  Support of AAL5 by ifTable

          The AAL5 entity in an ATM device (e.g., switch or host) is
          managed using the ifTable.  There are additional counters
          specified for AAL5 than those specified in the ATM B-ICI
          document [13].  Specific interpretations of ifTable for the
          AAL5 CPCS layer are as follows.

          Object          Use for AAL5 CPCS layer entity
          ======          ==============================

          ifIndex         Each AAL5 entity is represented by an ifEntry.

          ifDescr         Description of the AAL5 entity.

          ifType          The value that is allocated for AAL5 is 49.

          ifMtu           Set to the largest PDU size for the
                          AAL5 CPCS layer that can be processed
                          by the AAL5 entity.

          ifSpeed         Set to 0.

          ifPhysAddress   An octet string of zero length.

          ifAdminStatus   See [5].

          ifOperStatus    Assumes the value down(2) if the AAL5 or
                          any layer below that layer is down.

          ifLastChange    See [5].

          ifInOctets      The number of received AAL5 CPCS PDU octets.

          ifOutOctets     The number of AAL5 CPCS PDU octets transmitted.

          ifInUcastPkts   The number of received AAL5 CPCS PDUs passed
                          to a higher-layer.

          ifOutUcastPkts  The number of AAL5 CPCS PDUs received from a
                          higher-layer for transmission.
                          [Note:  The number of AAL5 PDUs actually
                          transmitted is the number received from a
                          higher-layer for transmission minus any which
                          are counted by ifOutErrors and ifOutDiscards.]





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 19]





          Internet Draft      ATM Management Objects    February 4, 1994


          ifInErrors      Number of errored AAL5 CPCS PDUs received.
                          The types of errors counted include  CRC-32 errors,
                          SAR time-out errors, and oversized SDU errors.

          ifInUnknownProtos Set to 0.

          ifInDiscards      Number of received AAL5 CPCS PDUs discarded.
                            Possible reason may be input buffer overflow.

          ifOutErrors       Number of AAL5 CPCS PDUs that could not
                            be transmitted due to errors.

          ifOutDiscards     Number of AAL5 CPCS PDUs received for
                            transmission that are discarded.
                            Possible reason may be output buffer
                            overflow.

          ifInMulticastPkts  Set to 0.

          ifInBroadcastPkts  Set to 0.

          ifOutMulticastPkts Set to 0.

          ifOutBroadcastPkts Set to 0.

          ifName            Textual name of the AAL5 entity or an
                            octet string of zero length.

          ifHighSpeed       Set to 0.

          ifConnectorPresent Set to false (2).

          ifPromiscuousMode Set to false(2).

          ifLinkUpDownTrapEnable     Default is disabled (2).



          10.4.  Support of Proprietary Virtual Interface by ifTable

          Specific interpretations of ifTable for the proprietary
          virtual, internal interface associated with an AAL5 entity in
          an ATM switch are as follows.







          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 20]





          Internet Draft      ATM Management Objects    February 4, 1994


          Object          Use for proprietary virtual, internal interface
                          associated with AAL entities
          ======          ===============================================

          ifIndex         Each proprietary virtual, internal interface associated
                          with AAL entities is represented by an ifEntry.

          ifDescr         Description of the proprietary virtual, internal
                          interface associated with AAL entities.

          ifType          The value that is allocated for proprietary
                          virtual, internal interface is 53.

          ifSpeed         See [5].  Set to 0 if the speed is not
                          known.

          ifPhysAddress   See [5]. An octet string of zero length
                          if no address is used for this interface.

          ifAdminStatus   See [5].

          ifOperStatus    See [5].

          ifLastChange    See [5].

          ifName          Textual name of the interface or an octet
                          string of zero length.

          ifHighSpeed     See [5].  Set to 0 if the speed is not known.

          ifConnectorPresent  Set to false (2).

          ifLinkUpDownTrapEnable     Default is disabled (2).



          10.5.  AAL5 Connection Performance Statistics Group

          An AAL5 connection table is used to provide AAL5 performance
          information for each AAL5 virtual connection that is
          terminated at the AAL5 entity contained within an ATM switch
          or host.








          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 21]





          Internet Draft      ATM Management Objects    February 4, 1994


          11.  ILMI MIB and The ATM Managed Objects

          The ILMI MIB is specified by the ATM Forum in UNI
          specification [12], to manage local ATM UNIs.  The support of
          the ATM management functions by the ILMI MIB and those
          contained in this memo are compared in Table 1.  In this
          table, "yes" in the "ILMI MIB"  column indicates that the
          management functions are supported by the ILMI MIB.  The MIB
          groups in the "This memo" column are the groups listed in
          Section 7.2.

          For that subset of management information which the ILMI MIB
          and this memo have in common, every effort has been made to
          retain identical semantics and syntax, even though the MIB
          objects are identified using different OBJECT IDENTIFIERs.



































          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 22]





          Internet Draft      ATM Management Objects    February 4, 1994


                       Table 1 - Structuring of ATM Managed Objects

          ______________________________________________________________________
                        |                                 |           |        |
          ATM Mgmt.Inf. |ATM Managed Objects              |This memo  |ILMI MIB|
          ______________|_________________________________|___________|________|

          Local Interface Information:
          _____________________________________________________________________
          ATM interface:| (1) port identifier             | ATM       |       |
          physical layer| (2) physical transmission types | MIB gr.1* |yes    |
          configuration | (3) operational status          | MIB II    |       |
                        | (4) administrative status       |           |       |
          _____________________________________________________________________
          ATM interface:| (1) active VPI/VCI fields       | ATM       |       |
          cell layer    | (2) maximum number of VPCs/VCCs | MIB gr.1  |yes**  |
          configuration | (3) configured VPCs/VCCs        |           |       |
                        | (4) ILMI VPI/VCI value          |           |       |
                        | (5) ATM address type            |           |       |
          _____________________________________________________________________
          ATM interface:|(1) received/transmitted cells   |           |       |
          cell layer    |(2) cells with HEC error         | MIB II    |yes    |
          performance   |(3) cell header validation errors|           |       |
          _____________________________________________________________________
          ATM interface:|(1)DS3 PLCP severely errored     | ATM       |       |
          PLCP & TC     |   framing seconds               | MIB gr.2,3|       |
          layer         |(2)DS3 PLCP unavailable seconds  |           |no     |
          performance   |(3)DS3 PLCP alarm state          |           |       |
                        |(4)out of cell delineation events|           |       |
                        |(5)TC alarm state                |           |       |
          _____________________________________________________________________
          Virtual link: |(1)VPI or VPI/VCI value          | ATM       |       |
          cell layer    |(2)VCL or VPL operational status | MIB gr. 4 |yes*** |
                        |(3)VCL/VPL administrative status |           |       |
                        |(4)receive traffic/QoS parameters|           |       |
                        |(5)transmit traffic/QoS          |           |       |
                        |   parameters                    |           |       |
                        |(6)AAL type within a VCL         |           |       |
                        |(4)AAL5 SDU size for a VCL       |           |       |
                        |(5)AAL5 Mode type for a VCL      |           |       |
                        |(6)AAL5 SSCS type for a VCL      |           |       |
                        |(7)AAL5 Encapsulation type for a |           |       |
                            VCL                           |           |       |
          _____________________________________________________________________
          AAL5 entity:  |(1)received/transmitted PDUs     |           |       |





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 23]





          Internet Draft      ATM Management Objects    February 4, 1994


                        |(2)PDUs discarded due to         |           |       |


          _____________________________________________________________________














































          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 24]





          Internet Draft      ATM Management Objects    February 4, 1994


          _____________________________________________________________________
          Cross-Connect |(1)cross-connect identifier      |           |       |
                        |(2)port identifier of one        |           |       |
                        |   end                           |           |       |
                        |(3)port identifier of the other  |ATM        |       |
                        |   end                           |MIB gr. 5  |no     |
                        |(4)VPI or VPI/VCI value          |           |       |
                        |   of one end                    |           |       |
                        |(5)VPI or VPI/VCI value of       |           |       |
                        |   the other end                 |           |       |
                        |(6)VC/VP cross-connect           |           |       |
                        |   operational status            |           |       |
                        |(7)VC/VP cross-connect           |           |       |
                        |   administrative status         |           |       |
          _____________________________________________________________________
          Virtual Link: |(1)PDUs discarded for CRC errors | ATM       |       |
          AAL5 CPCS     |(2)PDUs discarded due to         | MIB gr.6  |       |
          layers        |   reassembly time out           |           |no     |
                        |(3)PDUs discarded due to large   |           |       |
                        |   SDUs                          |           |       |
          _____________________________________________________________________
          AAL5 entity:  |(1)received/transmitted PDUs     |           |       |
                        |(2)PDUs discarded due to         |           |       |
                        |   protocol errors               | MIB II    |no     |
                        |(3)a set of configuration/state  |           |       |
                        |   parameters                    |           |       |
          _____________________________________________________________________

          *The operational and administrative status of the ATM
          interface and the physical transmission type shall be
          supported by the interface table in MIB II.  ILMI does not
          contain the administrative status of the ATM interface.

          ** The ILMI MIB does not support the information on the type
          ATM address used at the ATM interface.

          ***The ILMI MIB contains local and end-to-end operational
          status of the VPC/VCC segment.  However, it does not contain
          the VPC/VCC administrative status.  Also, it does not contain
          the AAL information of the VCC.










          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 25]





          Internet Draft      ATM Management Objects    February 4, 1994


          12.  Object Definitions

               ATM-MIB DEFINITIONS ::= BEGIN

               IMPORTS
                  MODULE-IDENTITY, OBJECT-TYPE, OBJECT-IDENTITY,
                  experimental, Counter32, Integer32     FROM SNMPv2-SMI
                  TEXTUAL-CONVENTION, DisplayString,
                  TimeStamp, RowStatus                   FROM SNMPv2-TC
                  MODULE-COMPLIANCE, OBJECT-GROUP        FROM SNMPv2-CONF
                  ifIndex                                FROM RFC-1213;


               atmMIB MODULE-IDENTITY
                           LAST-UPDATED "94231445Z"
                           ORGANIZATION "IETF AToM MIB Working Group"
                           CONTACT-INFO
                             "
                               Masuma Ahmed
                               Bellcore
                               331 Newman Springs Road
                               Red Bank, NJ 07701
                               Tel: 908-758-2515
                               Fax: 908-758-4192
                               E-mail: mxa@mail.bellcore.com

                               Kaj Tesink
                               Bellcore
                               331 Newman Springs Road
                               Red Bank, NJ 07701
                               Tel: 908-758-5254
                               Fax: 908-758-4196
                               E-mail: kaj@cc.bellcore.com"
                           DESCRIPTION
                            "This is the MIB Module for ATM and AAL5-related
                             objects for managing ATM interfaces, ATM virtual
                             links, ATM cross-connects, AAL5 entities, and
                             and AAL5 connections."
                           ::= { experimental 41 }

               atmMIBObjects  OBJECT IDENTIFIER ::= {atmMIB 1}









          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 26]





          Internet Draft      ATM Management Objects    February 4, 1994


               -- This ATM MIB Module consists of the following groups:
               -- (1) ATM Interface configuration group
               -- (2) ATM Interface DS3 PLCP group
               -- (3) ATM Interface TC Sublayer group
               -- (4) ATM Interface VPL configuration group
               -- (5) ATM Interface VCL configuration group
               -- (6) ATM VP Cross Connect group
               -- (7) ATM VC Cross Connect group
               -- (8) ATM Interface AAL5 VCL performance statistics group


               IfIndex ::= TEXTUAL-CONVENTION
                    STATUS     current
                    DESCRIPTION
                      "The value of this object identifies the interface
                       for which the entry contains management information.
                       The value of this object for a particular interface
                       has the same value as the ifIndex object, defined
                       in RFC 1213, for the same interface."
                    SYNTAX     Integer32


               AtmTrafficDescrParamIndex ::= TEXTUAL-CONVENTION
                    STATUS     current
                    DESCRIPTION
                      "The value of this object identifies the row
                       in the atmTrafficDescrParamTable."
                    SYNTAX     Integer32






















          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 27]





          Internet Draft      ATM Management Objects    February 4, 1994


               atmTrafficDescriptorTypes  OBJECT IDENTIFIER ::=
                                                    {atmMIBObjects 1}

               -- The following values are defined for use as
               -- possible values of the ATM traffic descriptor type.
               -- ATM Forum specified seven types of ATM traffic descriptors.

               atmNoTrafficDescriptor  OBJECT-IDENTITY
                    STATUS     current
                    DESCRIPTION
                      "This identifies the no ATM traffic descriptor type.
                       Parameters 1, 2, 3, 4, and 5 are not used.
                       This traffic descriptor type can be used for
                       best effort traffic."
                    ::= { atmTrafficDescriptorTypes 1}

               atmNoClpNoScr  OBJECT-IDENTITY
                    STATUS     current
                    DESCRIPTION
                     "This traffic descriptor is for no CLP and
                      no Sustained Cell Rate.  The use of the
                      parameter vector for this type:
                      Parameter 1: CLP=0+1 peak cell rate in
                                   cells per second
                      Parameter 2: not used
                      Parameter 3: not used
                      Parameter 4: not used
                      Parameter 5: not used.
                      This traffic descriptor type can be used
                      for best effort traffic."
                  ::= { atmTrafficDescriptorTypes 2}

               atmClpNoTaggingNoScr OBJECT-IDENTITY
                    STATUS     current
                    DESCRIPTION
                     "This traffic descriptor is for no CLP without
                      tagging and no Sustained Cell Rate.  The use
                      of the parameter vector for this type:
                      Parameter 1: CLP=0+1 peak cell rate in
                                   cells per second
                      Parameter 2: CLP=0 peak cell rate in
                                   cells per second
                      Parameter 3: not used
                      Parameter 4: not used
                      Parameter 5: not used."





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 28]





          Internet Draft      ATM Management Objects    February 4, 1994


                    ::= { atmTrafficDescriptorTypes 3}

               atmClpTaggingNoScr OBJECT-IDENTITY
                   STATUS     current
                   DESCRIPTION
                     "This traffic descriptor is for CLP with
                      tagging and no Sustained Cell Rate.  The
                      use of the parameter vector for this type:
                      Parameter 1: CLP=0+1 peak cell rate in
                                   cells per second
                      Parameter 2: CLP=0 peak cell rate in
                                   cells per second with excess
                                   traffic tagged as CLP=1
                      Parameter 3: not used
                      Parameter 4: not used
                      Parameter 5: not used."
                   ::= { atmTrafficDescriptorTypes 4}

               atmNoClpScr OBJECT-IDENTITY
                    STATUS     current
                    DESCRIPTION
                     "This traffic descriptor is for no CLP
                      with Sustained Cell Rate.  The
                      use of the parameter vector for this type:
                      Parameter 1: CLP=0+1 peak cell rate in
                                   cells per second
                      Parameter 2: CLP=0+1 sustained cell rate in
                                   cells per second
                      Parameter 3: CLP=0+1 maximum burst size
                                   in cells
                      Parameter 4: not used
                      Parameter 5: not used."
                   ::= { atmTrafficDescriptorTypes 5}

               atmClpNoTaggingScr OBJECT-IDENTITY
                    STATUS     current
                    DESCRIPTION
                     "This traffic descriptor is for CLP
                      with Sustained Cell Rate and no tagging.
                      The use of the parameter vector for this type:
                      Parameter 1: CLP=0+1 peak cell rate in
                                   cells per second
                      Parameter 2: CLP=0 sustained cell rate in
                                   cells per second
                      Parameter 3: CLP=0 maximum burst size in cells





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 29]





          Internet Draft      ATM Management Objects    February 4, 1994


                      Parameter 4: not used
                      Parameter 5: not used."
                   ::= { atmTrafficDescriptorTypes 6}

               atmClpTaggingScr OBJECT-IDENTITY
                    STATUS     current
                    DESCRIPTION
                     "This traffic descriptor is for CLP
                      with tagging and Sustained Cell Rate.
                      The use of the parameter vector for this type:
                      Parameter 1: CLP=0+1 peak cell rate in
                                   cells per second
                      Parameter 2: CLP=0 sustained cell rate in
                                   cells per second with excess
                                   traffic tagged as CLP=1
                      Parameter 3: CLP=0 maximum burst size in cells
                      Parameter 4: not used
                      Parameter 5: not used."
                    ::= { atmTrafficDescriptorTypes 7}































          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 30]





          Internet Draft      ATM Management Objects    February 4, 1994


               --    ATM Interface Configuration Parameters Group

               -- This group contains ATM specific
               -- configuration information associated with
               -- an ATM interface beyond those
               -- supported using the ifTable.




               atmInterfaceConfTable    OBJECT-TYPE
                         SYNTAX      SEQUENCE OF AtmInterfaceConfEntry
                         MAX-ACCESS   not-accessible
                         STATUS       current
                         DESCRIPTION
                          "This table contains ATM local interface
                           configuration parameters, one entry per ATM
                           interface port."
                         ::= { atmMIBObjects 2 }

               atmInterfaceConfEntry    OBJECT-TYPE
                         SYNTAX         AtmInterfaceConfEntry
                         MAX-ACCESS     not-accessible
                         STATUS         current
                         DESCRIPTION
                          "This list contains ATM interface configuration
                           parameters and state variables."
                         INDEX { ifIndex }
                         ::= { atmInterfaceConfTable  1}

               AtmInterfaceConfEntry    ::= SEQUENCE  {
                         atmInterfaceMaxVpcs          INTEGER,
                         atmInterfaceMaxVccs          INTEGER,
                         atmInterfaceConfVpcs         INTEGER,
                         atmInterfaceConfVccs         INTEGER,
                         atmInterfaceMaxActiveVpiBits INTEGER,
                         atmInterfaceMaxActiveVciBits INTEGER,
                         atmInterfaceIlmiVpiVci       INTEGER,
                         atmInterfaceAddressType      INTEGER
                              }


               atmInterfaceMaxVpcs    OBJECT-TYPE
                           SYNTAX       INTEGER  (0..4096)
                           MAX-ACCESS    read-only





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 31]





          Internet Draft      ATM Management Objects    February 4, 1994


                           STATUS         current
                           DESCRIPTION
                            "The maximum number of VPCs supported at
                             this ATM interface."
                           ::= { atmInterfaceConfEntry 1}

               atmInterfaceMaxVccs    OBJECT-TYPE
                           SYNTAX       INTEGER  (0..65536)
                           MAX-ACCESS     read-only
                           STATUS         current
                           DESCRIPTION
                            "The maximum number of VCCs supported at
                             the ATM interface."
                          ::= { atmInterfaceConfEntry 2}

               atmInterfaceConfVpcs    OBJECT-TYPE
                           SYNTAX       INTEGER  (0..4096)
                           MAX-ACCESS     read-only
                           STATUS         current
                           DESCRIPTION
                            "The number of VPCs configured for use
                             at this ATM interface."
                          ::= { atmInterfaceConfEntry 3}

               atmInterfaceConfVccs    OBJECT-TYPE
                           SYNTAX       INTEGER  (0..65536)
                           MAX-ACCESS    read-only
                           STATUS        current
                           DESCRIPTION
                            "The number of VCCs configured for use
                             at the ATM interface."
                           ::= { atmInterfaceConfEntry 4}

               atmInterfaceMaxActiveVpiBits    OBJECT-TYPE
                           SYNTAX           INTEGER  (0..12)
                           MAX-ACCESS         read-only
                           STATUS             current
                           DESCRIPTION
                            "The  maximum number of active VPI bits
                             configured for use at the ATM interface."
                           ::= { atmInterfaceConfEntry 5}

               atmInterfaceMaxActiveVciBits    OBJECT-TYPE
                           SYNTAX             INTEGER  (0..16)
                           MAX-ACCESS         read-only





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 32]





          Internet Draft      ATM Management Objects    February 4, 1994


                           STATUS             current
                           DESCRIPTION
                            "The maximum number of active VCI bits
                             configured for use at this ATM interface."
                           ::= { atmInterfaceConfEntry 6}

               atmInterfaceIlmiVpiVci          OBJECT-TYPE
                           SYNTAX              INTEGER (0..16777215)
                           MAX-ACCESS          read-only
                           STATUS              current
                           DESCRIPTION
                            "The decimal value of the three octect VPI/VCI
                             field with the most significant octet for VPI
                             and the other two octets for VCI fields that
                             identifies the VCC supporting the ILMI at
                             the ATM UNI.  If the value of
                             this object is 0 then the ILMI is not
                             supported at the ATM UNI.
                             The default VPI/VCI values for ILMI
                             are VPI=0 and VCI=16."
                           ::= { atmInterfaceConfEntry 7}

               atmInterfaceAddressType    OBJECT-TYPE
                           SYNTAX      INTEGER {
                                                private(1),
                                                nsape164(2),
                                                nativee164(3),
                                                other(4)
                                               }
                           MAX-ACCESS    read-only
                           STATUS        current
                           DESCRIPTION
                            "The type of ATM address configured
                             for use at this ATM interface."
                           ::= { atmInterfaceConfEntry 8 }















          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 33]





          Internet Draft      ATM Management Objects    February 4, 1994


               -- The ATM Interface DS3 PLCP Group

               -- This group contains the DS3 PLCP configuration and
               -- state parameters of those ATM interfaces
               -- which use DS3 PLCP for carrying ATM cells over DS3.

               atmInterfaceDs3PlcpTable    OBJECT-TYPE
                           SYNTAX      SEQUENCE OF AtmInterfaceDs3PlcpEntry
                           MAX-ACCESS   not-accessible
                           STATUS       current
                           DESCRIPTION
                            "This table contains ATM interface DS3 PLCP
                             parameters and state variables, one entry per
                             ATM interface port."
                           ::= { atmMIBObjects 3}

               atmInterfaceDs3PlcpEntry    OBJECT-TYPE
                           SYNTAX       AtmInterfaceDs3PlcpEntry
                           MAX-ACCESS   not-accessible
                           STATUS       current
                           DESCRIPTION
                            "This list contains DS3 PLCP parameters and
                             state variables at the ATM interface."
                           INDEX    {ifIndex }
                           ::= { atmInterfaceDs3PlcpTable 1}

               AtmInterfaceDs3PlcpEntry    ::= SEQUENCE  {
                           atmInterfaceDs3PlcpSEFSs         Counter32,
                           atmInterfaceDs3PlcpAlarmState    INTEGER,
                           atmInterfaceDs3PlcpUASs          Counter32
                             }


               atmInterfaceDs3PlcpSEFSs    OBJECT-TYPE
                           SYNTAX       Counter32
                           MAX-ACCESS   read-only
                           STATUS       current
                           DESCRIPTION
                            "The number of DS3 Severely Errored Framing
                             Second (SEFS).  Each SEFS represents a
                             one-second interval which contains
                             one or more SEF event."
                           ::= { atmInterfaceDs3PlcpEntry 1}

               atmInterfaceDs3PlcpAlarmState    OBJECT-TYPE





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 34]





          Internet Draft      ATM Management Objects    February 4, 1994


                           SYNTAX       INTEGER {
                                                 noAlarm(1),
                                                 receivedFarEndAlarm(2),
                                                 incomingLOF(3)
                                                       }
                           MAX-ACCESS     read-only
                           STATUS         current
                           DESCRIPTION
                            "This variable indicates if there is an
                             alarm present for the DS3 PLCP.  The value
                             receivedFarEndAlarm means that the DS3 PLCP
                             has received an incoming Yellow
                             Signal, the value incomingLOF means that
                             the DS3 PLCP has declared a loss of frame (LOF)
                             failure condition, and the value noAlarm
                             means that there are no alarms present.
                             Transition from the failure to the no alarm state
                             occurs when no defects (e.g., LOF) are received
                             for more than 10 seconds."
                           ::= { atmInterfaceDs3PlcpEntry 2}

               atmInterfaceDs3PlcpUASs    OBJECT-TYPE
                           SYNTAX       Counter32
                           MAX-ACCESS   read-only
                           STATUS       current
                           DESCRIPTION
                            "The counter associated with the number of
                             Unavailable Seconds encountered by the PLCP."
                           ::= { atmInterfaceDs3PlcpEntry 3}





















          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 35]





          Internet Draft      ATM Management Objects    February 4, 1994


               -- The ATM Interface TC Sublayer Group

               -- This group contains TC sublayer configuration and
               -- state parameters of those ATM interfaces
               -- which use TC sublayer for carrying ATM cells over
               -- SONET or DS3.


               atmInterfaceTCTable    OBJECT-TYPE
                           SYNTAX      SEQUENCE OF AtmInterfaceTCEntry
                           MAX-ACCESS   not-accessible
                           STATUS       current
                           DESCRIPTION
                            "This table contains ATM interface TC
                             Sublayer parameters and state variables,
                             one entry per ATM interface port."
                           ::= { atmMIBObjects 4}

               atmInterfaceTCEntry    OBJECT-TYPE
                           SYNTAX          AtmInterfaceTCEntry
                           MAX-ACCESS      not-accessible
                           STATUS          current
                           DESCRIPTION
                            "This list contains TC Sublayer parameters
                             and state variables at the ATM interface."
                           INDEX  {ifIndex }
                           ::= { atmInterfaceTCTable 1}

               AtmInterfaceTCEntry    ::= SEQUENCE  {
                           atmInterfaceOCDEvents      Counter32,
                           atmInterfaceTCAlarmState   INTEGER
                             }

               atmInterfaceOCDEvents    OBJECT-TYPE
                           SYNTAX        Counter32
                           MAX-ACCESS    read-only
                           STATUS        current
                           DESCRIPTION
                            "The number of times the Out of Cell
                             Delineation (OCD) events occur.  If seven
                             consecutive ATM cells have Header Error
                             Control (HEC) violations, an OCD event occurs.
                             A high number of OCD events may indicate a problem
                             with the TC Sublayer."
                           ::= { atmInterfaceTCEntry 1}





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 36]





          Internet Draft      ATM Management Objects    February 4, 1994




               atmInterfaceTCAlarmState    OBJECT-TYPE
                           SYNTAX        INTEGER {
                                                  noAlarm(1),
                                                  lcdFailure(2)
                                                   }
                           MAX-ACCESS    read-only
                           STATUS        current
                           DESCRIPTION
                            "This variable indicates if there is an
                             alarm present for the TC Sublayer.  The value
                             lcdFailure indicates that a Loss of
                             Cell Delineation (LCD) failure state has been
                             declared for the TC Sublayer.  Transition from
                             failure to the no alarm state occurs
                             when 6 consecutive ATM cells
                             are received with valid HEC, followed by
                             about 10 seconds of acceptable working signal."
                            ::= { atmInterfaceTCEntry 2}






























          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 37]





          Internet Draft      ATM Management Objects    February 4, 1994


               --  ATM Traffic Descriptor Parameter Group

               -- This group contains a set of self-consistent
               -- ATM traffic parameters including the
               -- ATM traffic QoS Class.

               -- The ATM virtual link tables (i.e., VPL and VCL tables)
               -- will use this ATM Traffic Descriptor table
               -- to assign traffic parameters and QoS Class
               -- to the receive and transmit directions of
               -- the ATM virtual links (i.e., VPLs and VCLs).
               -- The ATM VPL or VCl table will indicate a row
               -- in the atmTrafficDescrParamTable
               -- using its atmTrafficDescrParamIndex value.
               -- The management application can then compare a set of
               -- ATM traffic parameters with a single value.

               -- If no suitable row(s) in the atmTrafficDescrParamTable
               -- exists, the manager must create a new row(s) in this table.
               -- If such a row is created, agent checks the sanity of that
               -- set of ATM traffic parameter values.

               -- When creating a new row, the parameter values
               -- will be checked for self-consistency.
               -- Predefined/template rows may be supported.


               --  The ATM Traffic Descriptor Parameter Table


               atmTrafficDescrParamTable    OBJECT-TYPE
                          SYNTAX      SEQUENCE OF AtmTrafficDescrParamEntry
                          MAX-ACCESS   not-accessible
                          STATUS       current
                          DESCRIPTION
                           "This table contains information on ATM traffic
                            descriptor type and the associated parameters."
                          ::= { atmMIBObjects 5}

               atmTrafficDescrParamEntry    OBJECT-TYPE
                          SYNTAX           AtmTrafficDescrParamEntry
                          MAX-ACCESS       not-accessible
                          STATUS           current
                          DESCRIPTION
                           "This list contains ATM traffic descriptor





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 38]





          Internet Draft      ATM Management Objects    February 4, 1994


                            type and the associated parameters."
                          INDEX  {atmTrafficDescrParamIndex}
                          ::= { atmTrafficDescrParamTable  1}

               AtmTrafficDescrParamEntry    ::= SEQUENCE  {
                           atmTrafficDescrParamIndex   AtmTrafficDescrParamIndex,
                           atmTrafficDescrType         OBJECT IDENTIFIER,
                           atmTrafficDescrParam1       Integer32,
                           atmTrafficDescrParam2       Integer32,
                           atmTrafficDescrParam3       Integer32,
                           atmTrafficDescrParam4       Integer32,
                           atmTrafficDescrParam5       Integer32,
                           atmTrafficQoSClass          INTEGER,
                           atmTrafficDescrRowStatus    RowStatus
                              }

               atmTrafficDescrParamIndex    OBJECT-TYPE
                           SYNTAX           AtmTrafficDescrParamIndex
                           MAX-ACCESS       not-accessible
                           STATUS        current
                           DESCRIPTION
                            "This object is used by the virtual link
                             table (i.e., VPL or VCL table)
                             to identify the row of this table."
                           ::= { atmTrafficDescrParamEntry  1}

               atmTrafficDescrType    OBJECT-TYPE
                           SYNTAX             OBJECT IDENTIFIER
                           MAX-ACCESS         read-create
                           STATUS             current
                           DESCRIPTION
                            "The value of this object identifies the type
                             of ATM traffic descriptor.
                             The type may indicate no traffic descriptor or
                             traffic descriptor with one or more parameters.
                             These parameters are specified as a parameter
                             vector, in the corresponding instances of the objects:
                                 atmTrafficDescrParam1
                                 atmTrafficDescrParam2
                                 atmTrafficDescrParam3
                                 atmTrafficDescrParam4
                                 atmTrafficDescrParam5."
                            DEFVAL  { atmNoTrafficDescriptor }
                            ::= { atmTrafficDescrParamEntry 2}






          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 39]





          Internet Draft      ATM Management Objects    February 4, 1994


               atmTrafficDescrParam1    OBJECT-TYPE
                           SYNTAX             Integer32
                           MAX-ACCESS          read-create
                           STATUS              current
                           DESCRIPTION
                            "The first parameter of the ATM traffic descriptor
                             used according to the value of atmTrafficDescrType."
                           DEFVAL  { 0 }
                           ::= { atmTrafficDescrParamEntry 3}

               atmTrafficDescrParam2    OBJECT-TYPE
                           SYNTAX             Integer32
                           MAX-ACCESS          read-create
                           STATUS              current
                           DESCRIPTION
                            "The second parameter of the ATM traffic descriptor
                             used according to the value of atmTrafficDescrType."
                           DEFVAL  { 0 }
                           ::= { atmTrafficDescrParamEntry 4}

               atmTrafficDescrParam3    OBJECT-TYPE
                           SYNTAX             Integer32
                           MAX-ACCESS          read-create
                           STATUS              current
                           DESCRIPTION
                            "The third parameter of the ATM traffic descriptor
                             used according to the value of atmTrafficDescrType."
                           DEFVAL  { 0 }
                           ::= { atmTrafficDescrParamEntry 5}

               atmTrafficDescrParam4    OBJECT-TYPE
                           SYNTAX             Integer32
                           MAX-ACCESS          read-create
                           STATUS              current
                           DESCRIPTION
                            "The fourth parameter of the ATM traffic descriptor
                             used according to the value of atmTrafficDescrType."
                           DEFVAL  { 0 }
                           ::= { atmTrafficDescrParamEntry 6}

               atmTrafficDescrParam5    OBJECT-TYPE
                           SYNTAX             Integer32
                           MAX-ACCESS          read-create
                           STATUS              current
                           DESCRIPTION





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 40]





          Internet Draft      ATM Management Objects    February 4, 1994


                            "The fifth parameter of the ATM traffic descriptor
                             used according to the value of atmTrafficDescrType."
                           DEFVAL  { 0 }
                           ::= { atmTrafficDescrParamEntry 7}

               atmTrafficQoSClass   OBJECT-TYPE
                           SYNTAX         INTEGER (0..255)
                           MAX-ACCESS      read-create
                           STATUS          current
                           DESCRIPTION
                            "The value of this object identifies the QoS Class.
                             Four Service classes have been
                             specified in the ATM Forum UNI Specification:
                             Service Class A: Constant bit rate video and
                                              Circuit emulation
                             Service Class B: Variable bit rate video/audio
                             Service Class C: Connection-oriented data
                             Service Class D: Connectionless data
                             Four QoS classes numbered 1, 2, 3, and 4 have been
                             specified with the aim to support service classes A,
                             B, C, and D respectively.  An unspecified QoS Class
                             numbered `0' is used for best effort traffic."
                           DEFVAL  { 0 }
                           ::= { atmTrafficDescrParamEntry 8}


               atmTrafficDescrRowStatus       OBJECT-TYPE
                           SYNTAX    RowStatus
                           MAX-ACCESS   read-create
                           STATUS          current
                           DESCRIPTION
                            "This object is used to create
                             a new row or modify or delete an
                             existing row in this table."
                           DEFVAL  { active }
                           ::= {atmTrafficDescrParamEntry 9}














          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 41]





          Internet Draft      ATM Management Objects    February 4, 1994


               --  ATM Interface Virtual Path Link (VPL) Group

               -- This group contains configuration and state information of a
               -- bi-directional Virtual Path Link (VPL)
               -- that is not associated with Virtual Channel Links (VCLs)
               -- at an ATM interface.

               -- This table can be used to create, delete or modify
               -- a VPL that is terminated in an ATM host or switch.
               -- This table can also be used to create, delete or
               -- modify a VPL which is cross-connected to another
               -- VPL.

               -- In the example below, the traffic flows on the receive and
               -- transmit directions of the VPLs are characterized by
               -- atmVplReceiveTrafficDescrIndex and
               -- atmVplTransmitTrafficDescrIndex respectively.
               -- The cross-connected VPLs are identified by
               -- atmVplCrossConnectIdentifier.



               --                 ________________________________
               --                 |                              |
               --         VPL     | ATM Host, Switch, or Network |   VPL
               --       receive   |                              |  receive
               --      ---------> X                              X <---------
               --      <--------- X                              X --------->
               --       transmit  |                              |  transmit
               --                 |______________________________|



               --  The ATM Interface VPL Table


               atmVplTable    OBJECT-TYPE
                          SYNTAX      SEQUENCE OF AtmVplEntry
                          MAX-ACCESS   not-accessible
                          STATUS       current
                          DESCRIPTION
                           "The Virtual Path Link (VPL) table.  A
                            bi-directional VPL is modeled as one entry
                            in this table."
                          ::= { atmMIBObjects 6}





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 42]





          Internet Draft      ATM Management Objects    February 4, 1994


               atmVplEntry    OBJECT-TYPE
                          SYNTAX           AtmVplEntry
                          MAX-ACCESS       not-accessible
                          STATUS           current
                          DESCRIPTION
                           "An entry in the VPL table.  This entry is
                            used to model a bi-directional VPL.
                            To create a VPL at an ATM interface,
                            either of the following procedures are used:

                            Negotiated VPL establishment

                          (1) The management application creates
                              a VPL entry in the atmVplTable
                              by setting this object to createAndWait(5).
                              This may fail for the following reasons:
                              - The selected VPI value is unavailable,
                              - The selected VPI value is in use.
                              Otherwise, the agent creates a row and
                              reserves the VPI value on that port.

                          (2) The manager selects an
                              an existing row(s) in the
                              atmTrafficDescrParamTable,
                              thereby, selecting a set of self-consistent
                              ATM traffic parameters and the QoS Class
                              for receive and transmit directions of the VPL.

                         (2a) If no suitable row(s) in the
                              atmTrafficDescrParamTable exists,
                              the manager must create a new row(s)
                              in that table.

                         (2b) The manager characterizes the VPL's traffic
                              parameters through setting the
                              atmVplReceiveTrafficDescrIndex and the
                              atmVplTransmitTrafficDescrIndex values
                              in the VPL table, which point to the rows
                              containing desired ATM traffic parameter values
                              in the atmTrafficDescrParamTable.  The agent
                              will check the availability of resources and
                              may refuse the request.

                         (3)  The manager activates the VPL by setting the
                              the atmVplRowStatus to active(1).





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 43]





          Internet Draft      ATM Management Objects    February 4, 1994


                              If this set is successful, the agent has
                              reserved the resources to satisy the requested
                              traffic parameter values and the QoS Class
                              for that VPL.
                         (4)  If the VPL terminates a VPC in the ATM host
                              or switch, the manager turns on the
                              atmVplAdminStatus to up(1) to turn the VPL
                              traffic flow on.  Otherwise, the
                              atmVpCrossConnectTable  must be used
                              to cross-connect the VPL to another VPL(s)
                              in an ATM switch or network.

                          One-Shot VPL Establishment

                          A VPL may also be established in one step by a
                          set-request with all necessary VPL parameter
                          values and atmVplRowStatus set to createAndGo(4).

                          In contrast to the negotiated VPL establishment
                          which allows for detailed error checking
                          (i.e., set errors are explicitly linked to
                          particular resource acquisition failures),
                          the one-shot VPL establishment
                          performs the setup on one operation but
                          does not have the advantage of step-wise
                          error checking.

                          VPL Retirement

                          A VPL is released by setting atmVplRowStatus to
                          destroy(6), and the agent may release all
                          associated resources."
                         INDEX  {ifIndex, atmVplVpi }
                         ::= { atmVplTable  1}

               AtmVplEntry    ::= SEQUENCE  {
                       atmVplVpi                       INTEGER,
                       atmVplAdminStatus               INTEGER,
                       atmVplOperStatus                INTEGER,
                       atmVplReceiveTrafficDescrIndex  AtmTrafficDescrParamIndex,
                       atmVplTransmitTrafficDescrIndex AtmTrafficDescrParamIndex,
                       atmVplCrossConnectIdentifier    INTEGER,
                       atmVplRowStatus                 RowStatus
                              }






          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 44]





          Internet Draft      ATM Management Objects    February 4, 1994


               atmVplVpi    OBJECT-TYPE
                           SYNTAX    INTEGER  (1..4095)
                           MAX-ACCESS     not-accessible
                           STATUS         current
                           DESCRIPTION
                            "The VPI value of the VPL.
                             Note that the VPI=0 is not used
                             for a VPL not associated with a VCL.
                             The maximum VPI value cannot
                             exceed the value allowable by the
                             atmInterfaceMaxVpiBits."
                           ::= { atmVplEntry 1}

               atmVplAdminStatus   OBJECT-TYPE
                           SYNTAX   INTEGER  {
                                              up(1),
                                              down(2)
                                                  }
                           MAX-ACCESS   read-create
                           STATUS       current
                           DESCRIPTION
                            "This object is implemented only for a VPL which
                             terminates a VPC (i.e.,
                             one which is NOT cross-connected to other VPLs).
                             Its value specifies the desired administrative
                             state of the VPL.  The up and down states indicate
                             that the traffic flow is enabled and disabled
                             respectively for this VPL."
                           DEFVAL { down }
                           ::= { atmVplEntry 2}


               atmVplOperStatus   OBJECT-TYPE
                           SYNTAX   INTEGER  {
                                              up(1),
                                              down(2),
                                              unknown(3)
                                                  }
                           MAX-ACCESS   read-only
                           STATUS       current
                           DESCRIPTION
                            "This object indicates the current operational
                             status of the VPL.  The up and down states
                             indicate that the VPL is currently
                             operational, or not operational, respectively.





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 45]





          Internet Draft      ATM Management Objects    February 4, 1994


                             The unknown state indicates that the status of
                             this VPL cannot be determined."
                           ::= { atmVplEntry 3}

               atmVplReceiveTrafficDescrIndex    OBJECT-TYPE
                           SYNTAX             AtmTrafficDescrParamIndex
                           MAX-ACCESS         read-create
                           STATUS             current
                           DESCRIPTION
                            "The value of this object identifies the row
                             in the atmTrafficDescrParamTable which
                             applies to the receive direction of the VPL."
                            ::= { atmVplEntry 4}

               atmVplTransmitTrafficDescrIndex    OBJECT-TYPE
                           SYNTAX             AtmTrafficDescrParamIndex
                           MAX-ACCESS         read-create
                           STATUS             current
                           DESCRIPTION
                            "The value of this object identifies the row
                             in the atmTrafficDescrParamTable which
                             applies to the transmit direction of the VPL."
                            ::= { atmVplEntry 5}

               atmVplCrossConnectIdentifier   OBJECT-TYPE
                           SYNTAX         INTEGER (0..2147483647)
                           MAX-ACCESS      read-only
                           STATUS          current
                           DESCRIPTION
                            "This object is implemented only for a VPL
                             which is cross-connected to other VPLs
                             that belong to the same VPC.  All such
                             associated VPLs have the same value of this
                             object, and all their cross-connections are
                             identified by entries in the
                             atmVpCrossConnectTable for which
                             atmVpCrossConnectIndexValue has the same value.
                             The value of this object is initialized by the
                             agent after the associated entries in the
                             atmVpCrossConnectTable have been created."
                           ::= {atmVplEntry 6}

               atmVplRowStatus       OBJECT-TYPE
                           SYNTAX    RowStatus
                           MAX-ACCESS   read-create





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 46]





          Internet Draft      ATM Management Objects    February 4, 1994


                           STATUS          current
                           DESCRIPTION
                            "This object is used to create, delete
                             or modify a row in this table.
                             To create a new VCL, this object is
                             initially set to 'createAndWait' or
                             'createAndGo'.  This object must not be
                             set to 'active' unless the following columnar
                             objects exist in this row:
                             atmVplReceiveTrafficDescrIndex and
                             atmVplTransmitTrafficDescrIndex."
                           DEFVAL { active }
                           ::= {atmVplEntry 7}





































          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 47]





          Internet Draft      ATM Management Objects    February 4, 1994


               --  ATM Interface Virtual Channel Link (VCL) Group

               -- This group contains configuration and state information of a
               -- bi-directional Virtual Channel Link (VCL)
               -- at an ATM interface.

               -- This table can be used to create, delete or modify
               -- a VCL that is terminated in an ATM host or switch.
               -- This table can also be
               -- used to create, delete or modify a VCL that is
               -- cross-connected to another VCL.


               --  The ATM Interface VCL Table


               atmVclTable    OBJECT-TYPE
                          SYNTAX      SEQUENCE OF AtmVclEntry
                          MAX-ACCESS   not-accessible
                          STATUS       current
                          DESCRIPTION
                           "The Virtual Channel Link (VCL) table.  A
                            bi-directional VCL is modeled as one entry
                            in this table."
                          ::= { atmMIBObjects 7}

               atmVclEntry    OBJECT-TYPE
                          SYNTAX           AtmVclEntry
                          MAX-ACCESS       not-accessible
                          STATUS           current
                          DESCRIPTION
                           "An entry in the VCL table.  This entry is
                            used to model a bi-directional VCL.
                            To create a VCL at an ATM interface,
                            either of the following procedures are used:

                            Negotiated VCL establishment

                          (1) The management application creates
                              a VCL entry in the atmVclTable
                              by setting this object to createAndWait(5).
                              This may fail for the following reasons:
                              - The selected VPI/VCI values are unavailable,
                              - The selected VPI/VCI values are in use.
                              Otherwise, the agent creates a row and





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 48]





          Internet Draft      ATM Management Objects    February 4, 1994


                              reserves the VPI/VCI values on that port.

                          (2) The manager selects an existing row(s) in the
                              atmTrafficDescrParamTable,
                              thereby, selecting a set of self-consistent
                              ATM traffic parameters and the QoS Class
                              for receive and transmit directions of the VCL.

                         (2a) If no suitable row(s) in the
                              atmTrafficDescrParamTable exists,
                              the manager must create a new row(s)
                              in that table.

                         (2b) The manager characterizes the VCL's traffic
                              parameters through setting the
                              atmVclReceiveTrafficDescrIndex and the
                              atmVclTransmitTrafficDescrIndex values
                              in the VCL table, which point to the rows
                              containing desired ATM traffic parameter values
                              in the atmTrafficDescrParamTable.  The agent
                              will check the availability of resources and
                              may refuse the request.

                         (3)  The manager activates the VCL by setting the
                              the atmVclRowStatus to active(1).
                              If this set is successful, the agent has
                              reserved the resources to satisy the requested
                              traffic parameter values and the QoS Class
                              for that VCL.
                         (4)  If the VCL terminates a VCC in the ATM host
                              or switch, the manager turns on the
                              atmVclAdminStatus to up(1) to turn the VCL
                              traffic flow on.  Otherwise, the
                              atmVcCrossConnectTable  must be used
                              to cross-connect the VCL to another VCL(s)
                              in an ATM switch or network.

                          One-Shot VCL Establishment

                          A VCL may also be established in one step by a
                          set-request with all necessary VCL parameter
                          values and atmVclRowStatus set to createAndGo(4).

                          In contrast to the negotiated VCL establishment
                          which allows for detailed error checking





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 49]





          Internet Draft      ATM Management Objects    February 4, 1994


                          (i.e., set errors are explicitly linked to
                          particular resource acquisition failures),
                          the one-shot VCL establishment
                          performs the setup on one operation but
                          does not have the advantage of step-wise
                          error checking.

                          VCL Retirement

                          A VCL is released by setting atmVclRowStatus to
                          destroy(6), and the agent may release all
                          associated resources."
                          INDEX  {ifIndex, atmVclVpi, atmVclVci }
                          ::= { atmVclTable  1}

               AtmVclEntry    ::= SEQUENCE  {
                       atmVclVpi                       INTEGER,
                       atmVclVci                       INTEGER,
                       atmVclAdminStatus               INTEGER,
                       atmVclOperStatus                INTEGER,
                       atmVclReceiveTrafficDescrIndex  AtmTrafficDescrParamIndex,
                       atmVclTransmitTrafficDescrIndex AtmTrafficDescrParamIndex,
                       atmVclAalType                   INTEGER,
                       atmVclAal5CpcsSduSize           INTEGER,
                       atmVclAal5ModeType              INTEGER,
                       atmVclAal5SscsType              INTEGER,
                       atmVclAal5EncapsType            INTEGER,
                       atmVclCrossConnectIdentifier    INTEGER,
                       atmVclRowStatus                 RowStatus
                              }

               atmVclVpi    OBJECT-TYPE
                           SYNTAX    INTEGER  (0..4095)
                           MAX-ACCESS     not-accessible
                           STATUS         current
                           DESCRIPTION
                            "The VPI value of the VCL.
                             The maximum VPI value cannot
                             exceed the value allowable by the
                             atmInterfaceMaxVpiBits."
                           ::= { atmVclEntry 1}

               atmVclVci    OBJECT-TYPE
                           SYNTAX    INTEGER  (0..65535)
                           MAX-ACCESS     not-accessible





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 50]





          Internet Draft      ATM Management Objects    February 4, 1994


                           STATUS         current
                           DESCRIPTION
                            "The VCI value of the VCL.
                             The maximum VCI value cannot
                             exceed the value allowable by the
                             atmInterfaceMaxVciBits."
                           ::= { atmVclEntry 2}

               atmVclAdminStatus   OBJECT-TYPE
                           SYNTAX   INTEGER  {
                                              up(1),
                                              down(2)
                                                  }
                           MAX-ACCESS   read-create
                           STATUS       current
                           DESCRIPTION
                            "This object is implemented only for a VCL which
                             terminates a VCC (i.e.,
                             one which is NOT cross-connected to other VCLs).
                             Its value specifies the desired administrative
                             state of the VCL.  The up and down states indicate
                             that the traffic flow is enabled and disabled
                             respectively for this VCL."
                           ::= { atmVclEntry 3}

               atmVclOperStatus   OBJECT-TYPE
                           SYNTAX   INTEGER  {
                                              up(1),
                                              down(2),
                                              unknown(3)
                                                  }
                           MAX-ACCESS   read-only
                           STATUS       current
                           DESCRIPTION
                            "This object indicates the current operational
                             status of the VCL.  The up and down states
                             indicate that the VCL is currently
                             operational, or not operational, respectively.
                             The unknown state indicates that the status of
                             this VCL cannot be determined."
                           ::= { atmVclEntry 4}

               atmVclReceiveTrafficDescrIndex    OBJECT-TYPE
                           SYNTAX             AtmTrafficDescrParamIndex
                           MAX-ACCESS         read-create





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 51]





          Internet Draft      ATM Management Objects    February 4, 1994


                           STATUS             current
                           DESCRIPTION
                            "The value of this object identifies the row
                             in the ATM Traffic Descriptor Table which
                             applies to the receive direction of this VCL."
                            ::= { atmVclEntry 5}

               atmVclTransmitTrafficDescrIndex    OBJECT-TYPE
                           SYNTAX             AtmTrafficDescrParamIndex
                           MAX-ACCESS         read-create
                           STATUS             current
                           DESCRIPTION
                            "The value of this object identifies the row
                             of the ATM Traffic Descriptor Table which applies
                             to the transmit direction of this VCL."
                            ::= { atmVclEntry 6}

               atmVclAalType    OBJECT-TYPE
                           SYNTAX      INTEGER {
                                                aal1(1),
                                                aal34(2),
                                                aal5(3),
                                                userdefinedaal(4)
                                               }
                           MAX-ACCESS    read-create
                           STATUS        current
                           DESCRIPTION
                            "The type of AAL used on this VCL.
                             The AAL type includes AAL1, AAL3/4,
                             AAL5 and user-defined AAL type."
                           ::= { atmVclEntry 7 }

               atmVclAal5CpcsSduSize OBJECT-TYPE
                         SYNTAX      INTEGER (1..65535)
                         MAX-ACCESS   read-create
                         STATUS       current
                         DESCRIPTION
                          "The maximum AAL5 CPCS SDU size that is
                           supported on this VCL."
                         ::= { atmVclEntry 8 }

               atmVclAal5ModeType   OBJECT-TYPE
                         SYNTAX      INTEGER {
                                            streamMode(1),
                                            messageMode(2),





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 52]





          Internet Draft      ATM Management Objects    February 4, 1994


                                            other(3)
                                                 }
                         MAX-ACCESS    read-create
                         STATUS        current
                         DESCRIPTION
                          "The value of this object identifies whether
                           message or streaming mode is used for AAL5
                           on this VCL.  The value 'other' is used
                           when the mode is unknown or user-defined."
                         ::= { atmVclEntry 9 }

               atmVclAal5SscsType    OBJECT-TYPE
                           SYNTAX    INTEGER {
                                              null(1),
                                              assuredOperation(2),
                                              nonAssuredOperation(3)
                                               }
                           MAX-ACCESS    read-create
                           STATUS        current
                           DESCRIPTION
                            "The value of this object identifies the
                             type of AAL5 Service Specific Convergence Sublayer
                             (SSCS) used on this VCL. The SSCS may support
                             assured or non-assured operation. The value
                             'null' is used when no SSCS type is used
                             for AAL5."
                           DEFVAL { null }
                           ::= { atmVclEntry 10 }

               atmVclAal5EncapsType  OBJECT-TYPE
                            SYNTAX   INTEGER {
                                           vcMultiplexRoutedProtocol(1),
                                           vcMultiplexBridgedProtocol8023(2),
                                           vcMultiplexBridgedProtocol8025(3),
                                           vcMultiplexBridgedProtocol8026(4),
                                           vcMultiplexLANemulation8023(5),
                                           vcMultiplexLANemulation8025(6),
                                           llcEncapsulation(7),
                                           multiprotocolFrameRelaySscs(8),
                                           other(9),
                                           unknown(10)
                                              }
                           MAX-ACCESS   read-create
                           STATUS        current
                           DESCRIPTION





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 53]





          Internet Draft      ATM Management Objects    February 4, 1994


                             "The type of data encapsulation used over
                              the AAL5 SSCS layer. The definitions are referenced
                              to RFC1483 Multiprotocol Encapsulation
                              over ATM AAL5 and to the ATM Forum
                              LAN Emulation specification."
                             ::= { atmVclEntry 11 }

               atmVclCrossConnectIdentifier   OBJECT-TYPE
                           SYNTAX         INTEGER (0..2147483647)
                           MAX-ACCESS      read-only
                           STATUS          current
                           DESCRIPTION
                            "This object is implemented only for a VCL
                             which is cross-connected to other VCLs
                             that belong to the same VCC.  All such
                             associated VCLs have the same value of this
                             object, and all their cross-connections are
                             identified by entries in the
                             atmVcCrossConnectTable for which
                             atmVcCrossConnectIndexValue has the same value.
                             The value of this object is initialized by the
                             agent after the associated entries in the
                             atmVcCrossConnectTable have been created."
                           ::= {atmVclEntry 12}


               atmVclRowStatus          OBJECT-TYPE
                           SYNTAX       RowStatus
                           MAX-ACCESS   read-create
                           STATUS       current
                           DESCRIPTION
                            "This object is used to create, delete or
                             modify a row in this table.  To create
                             a new VCL, this object is initially set
                             to 'createAndWait' or 'createAndGo'.
                             This object must not be set to 'active'
                             unless the following columnar objects exist
                             in this row:
                             atmVclReceiveTrafficDescrIndex and
                             atmVclTransmitTrafficDescrIndex."
                           DEFVAL { active }
                           ::= {atmVclEntry 13}








          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 54]





          Internet Draft      ATM Management Objects    February 4, 1994


               --     ATM Virtual Path (VP) Cross Connect Group

               -- This group contains configuration and state
               -- information of all point-to-point,
               -- point-to-multipoint, or multipoint-to-multipoint
               -- VP cross-connects.

               -- This table has read-create access and can be used
               -- to cross-connect the VPLs together in an ATM switch
               -- or network. The atmVpCrossConnectIndex
               -- is used to associate the related
               -- VPLs that are cross-connected together.

               -- The ATM VP Cross Connect Group
               -- models each bi-directional VPC
               -- cross-connect as a set of entries in
               -- the atmVpCrossConnectTable. A
               -- point-to-point VPC cross-connect is modeled
               -- as one entry; a point-to-multipoint (N leafs) VPC
               -- cross-connect as N entries in this table; and
               -- a multipoint-to-multipoint (N parties) VPC cross-connect
               -- as N(N-1)/2 entries in this table.
               -- In the latter cases, all the N (or N(N-1)/2) entries are
               -- associated with a single VPC cross-connect by having
               -- the same value of atmVpCrossConnectIndexValue.


               --           ___________________________________________
               --           |                                         |
               --           |           ATM Switch or Network         |
               --  Low port |                                         |High port
               --  _________|  >> from low to high VPC traffic flow >>|____________
               --           |  << from high to low VPC traffic flow <<|
               --           |                                         |
               --           |_________________________________________|
               --

               -- The terms low and high are chosen to represent numerical
               -- ordering of the two interfaces associated with a VPC
               -- cross-connect. That is, the ATM interface with the
               -- lower value of ifIndex is termed 'low', while the other
               -- ATM interface associated with the VPC cross-connect
               -- is termed 'high'. This terminology is used to provide
               -- directional information; for example, the
               -- atmVpCrossConnectL2HOperStatus applies to the





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 55]





          Internet Draft      ATM Management Objects    February 4, 1994


               -- low->high direction, and atmVpCrossConnectH2LOperStatus
               -- applies to the high->low direction, as illustrated above.




               atmVpCrossConnectIndexValue    OBJECT-TYPE
                           SYNTAX  INTEGER (0..2147483647)
                           MAX-ACCESS  read-only
                           STATUS  current
                           DESCRIPTION
                            "This object contains an appropriate value to
                             be used for atmVpCrossConnectIndex when creating
                             entries in the atmVpCrossConnectTable.  The value
                             0 indicates that no unassigned entries are available.
                             To obtain the atmVpCrossConnectIndex value for a
                             new entry, the manager issues a management protocol
                             retrieval operation to obtain the current value of
                             this object.  After each retrieval, the agent should
                             modify the value to the next unassigned index."
                           ::= { atmMIBObjects 8 }


               --  The ATM VP Cross Connect Table


               atmVpCrossConnectTable OBJECT-TYPE
                         SYNTAX  SEQUENCE OF AtmVpCrossConnectEntry
                         MAX-ACCESS  not-accessible
                         STATUS  current
                         DESCRIPTION
                          "The ATM VP Cross Connect table.  A bi-
                           directional VP cross-connect which
                           cross-connects two VPLs is modeled
                           as one entry in this table."
                         ::= { atmMIBObjects 9 }


               atmVpCrossConnectEntry OBJECT-TYPE
                         SYNTAX  AtmVpCrossConnectEntry
                         MAX-ACCESS  not-accessible
                         STATUS  current
                         DESCRIPTION
                          "An entry in the ATM VP Cross Connect table.
                           This entry is used to model a bi-directional





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 56]





          Internet Draft      ATM Management Objects    February 4, 1994


                           ATM VP cross-connect which cross-connects
                           two VPLs.

                          Step-wise Procedures to set up a VP Cross-connect

                          Once the entries in the atmVplTable are created,
                          the following procedures are used
                          to cross-connect the VPLs together.

                         (1) The manager obtains a unique
                             atmVpCrossConnectIndex using the
                             atmVpCrossConnectIndexValue object.

                         (2) Next, the manager creates a set of one
                             or more rows in the ATM VP Cross Connect
                             Table, one for each cross-connection between
                             two VPLs.  Each row is indexed by the ATM
                             interface port numbers and VPI values of the
                             two ends of that cross-connection.
                             This set of rows specifies the topology of the
                             VPC cross-connect and is identified by a single
                             value of atmVpCrossConnectIndex.

                         Negotiated VP Cross-Connect Establishment

                        (2a) The manager creates a row in this table by
                             setting atmVpCrossConnectRowStatus to
                             createAndWait(5).  The agent checks the
                             requested topology and the mutual sanity of
                             the ATM traffic parameters and
                             QoS Classes, i.e., the row creation fails if:
                             - the requested topology is not supported
                               by the agent,
                             - the traffic/QoS parameter values
                               associated with the requested row are
                               incompatible with those of already existing
                               rows for this VP cross-connect.
                            [For example, for setting up
                            a point-to-point VP cross-connect, the
                            ATM traffic parameters in the receive direction
                            of a VPL at the low end of the cross-connect
                            must equal to the traffic parameters in the
                            transmit direction of the other VPL at the
                            high end of the cross-connect,
                            otherwise, the row creation fails.]





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 57]





          Internet Draft      ATM Management Objects    February 4, 1994


                            The agent also checks for internal errors
                            in building the cross-connect.

                            The atmVpCrossConnectIndex values in the
                            corresponding atmVplTable rows are filled
                            in by the agent at this point.

                       (2b) The manager promotes the row in the
                            atmVpCrossConnectTable by setting
                            atmVpCrossConnectRowStatus to active(1).  If
                            this set is successful, the agent has reserved
                            the resources specified by the ATM traffic
                            parameter and QoS Class values
                            for each direction of the VP cross-connect
                            in an ATM switch or network.

                        (3) The manager sets the atmVpCrossConnectAdminStatus
                            to up(1) in all rows of this VP cross-connect to
                            turn the traffic flow on.


                        One-Shot VP Cross-Connect Establishment

                        A VP cross-connect may also be established in
                        one step by a set-request with all necessary
                        parameter values and atmVpCrossConnectRowStatus
                        set to createAndGo(4).

                        In contrast to the negotiated VP cross-connect
                        establishment which allows for detailed error checking
                        (i.e., set errors are explicitly linked to
                        particular resource acquisition failures), the one-shot VP
                        cross-connect establishment performs the setup
                        on one operation but does not have the advantage
                        of step-wise error checking.

                        VP Cross-Connect Retirement

                        A VP cross-connect identified by a particular
                        value of atmVpCrossConnectIndex is released by:

                       (1) Setting atmVpCrossConnectRowStatus of all rows
                           identified by this value of
                           atmVpCrossConnectIndex to destroy(6).
                           The agent may release all





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 58]





          Internet Draft      ATM Management Objects    February 4, 1994


                           associated resources, and the
                           atmVpCrossConnectIndex values in the
                           corresponding atmVplTable row are removed.
                           Note that a situation when only a subset of
                           the associated rows are deleted corresponds
                           to a VP topology change.

                       (2) After deletion of the appropriate
                           atmVpCrossConnectEntries, the manager may
                           set atmVplRowStatus to destroy(6) the
                           associated VPLs.  The agent releases
                           the resources and removes the associated
                           rows in the atmVplTable.


                       VP Cross=connect Reconfiguration

                       At the discretion of the agent, a VP
                       cross-connect may be reconfigured by
                       adding and/or deleting leafs from to/from
                       the VP topology as per the VP cross-connect
                       establishment/retirement procedures.
                       Reconfiguration of traffic/QoS parameter
                       values requires release of the VP cross-connect
                       before those parameter values may by changed
                       for individual VPLs."
                      INDEX { atmVpCrossConnectIndex,
                               atmVpCrossConnectLowIfIndex,
                               atmVpCrossConnectLowVpi,
                               atmVpCrossConnectHighIfIndex,
                               atmVpCrossConnectHighVpi }
                      ::= { atmVpCrossConnectTable 1 }

               AtmVpCrossConnectEntry ::=
                       SEQUENCE {
                            atmVpCrossConnectIndex          INTEGER,
                            atmVpCrossConnectLowIfIndex     IfIndex,
                            atmVpCrossConnectLowVpi         INTEGER,
                            atmVpCrossConnectHighIfIndex    IfIndex,
                            atmVpCrossConnectHighVpi        INTEGER,
                            atmVpCrossConnectAdminStatus    INTEGER,
                            atmVpCrossConnectL2HOperStatus  INTEGER,
                            atmVpCrossConnectH2LOperStatus  INTEGER,
                            atmVpCrossConnectL2HLastChange  TimeStamp,
                            atmVpCrossConnectH2LLastChange  TimeStamp,





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 59]





          Internet Draft      ATM Management Objects    February 4, 1994


                            atmVpCrossConnectRowStatus      RowStatus
                                    }

               atmVpCrossConnectIndex OBJECT-TYPE
                           SYNTAX  INTEGER (1..2147483647)
                           MAX-ACCESS  not-accessible
                           STATUS  current
                           DESCRIPTION
                            "The value of this object is equal to the
                             atmVpCrossConnectIndexValue obtained to uniquely
                             identify this VP cross-connect."
                           ::= { atmVpCrossConnectEntry 1 }

               atmVpCrossConnectLowIfIndex OBJECT-TYPE
                           SYNTAX  IfIndex
                           MAX-ACCESS  not-accessible
                           STATUS  current
                           DESCRIPTION
                            "The value of this object is equal to MIB II's
                             ifIndex value of the ATM interface port for this
                             VP cross-connect.  The term low implies
                             that this ATM interface has the numerically lower
                             ifIndex value than the other ATM interface
                             identified in the same atmVpCrossConnectEntry."
                           ::= { atmVpCrossConnectEntry 2 }

               atmVpCrossConnectLowVpi OBJECT-TYPE
                           SYNTAX  INTEGER  (1..255)
                           MAX-ACCESS  not-accessible
                           STATUS  current
                           DESCRIPTION
                            "The value of this object is equal to the VPI
                             value at the ATM interface
                             associated with the VP cross-connect that is
                             identified by atmVpCrossConnectLowfIndex.
                             The VPI value cannot exceed the number
                             supported by the atmInterfaceMaxVpiBits
                             at the low ATM interface port."
                           ::= { atmVpCrossConnectEntry 3 }

               atmVpCrossConnectHighIfIndex OBJECT-TYPE
                           SYNTAX  IfIndex
                           MAX-ACCESS  not-accessible
                           STATUS  current
                           DESCRIPTION





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 60]





          Internet Draft      ATM Management Objects    February 4, 1994


                            "The value of this object is equal to MIB II's
                             ifIndex value of the ATM interface port for
                             this VP cross-connect.  The term high
                             implies that this ATM interface has the
                             numerically higher ifIndex value than the
                             other ATM interface identified in the same
                             atmVpCrossConnectEntry."
                           ::= { atmVpCrossConnectEntry 4 }

               atmVpCrossConnectHighVpi OBJECT-TYPE
                           SYNTAX  INTEGER   (1..255)
                           MAX-ACCESS  not-accessible
                           STATUS  current
                           DESCRIPTION
                            "The value of this object is equal to the VPI
                             value at the ATM interface associated with
                             the VP cross-connect that is identified
                             by atmVpCrossConnectHighIfIndex.
                             The VPI value cannot exceed the number
                             supported by the atmInterfaceMaxVpiBits
                             at the high ATM interface port."
                           ::= { atmVpCrossConnectEntry 5 }

               atmVpCrossConnectAdminStatus OBJECT-TYPE
                           SYNTAX  INTEGER {
                                           up(1),
                                           down(2)
                                   }
                           MAX-ACCESS  read-create
                           STATUS  current
                           DESCRIPTION
                            "The value of this object identifies the desired
                             administrative status of this bi-directional
                             VP cross-connect.  The up and down states
                             indicate that the traffic flow is enabled
                             and disabled respectively on this VP cross-connect."
                           DEFVAL { down }
                           ::= { atmVpCrossConnectEntry 6 }

               atmVpCrossConnectL2HOperStatus OBJECT-TYPE
                           SYNTAX  INTEGER {
                                     up(1),
                                     down(2),
                                     unknown(3)
                                       }





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 61]





          Internet Draft      ATM Management Objects    February 4, 1994


                           MAX-ACCESS  read-only
                           STATUS  current
                           DESCRIPTION
                            "The value of this object identifies the current
                             operational status of the VP cross-connect
                             in one direction; (i.e., from the low to
                             high direction).  The up and down states indicate
                             that this ATM VP cross-connect from low
                             to high direction is operational or not
                             operational respectively.
                             The unknown state indicates that
                             the state of it cannot be determined."
                           ::= { atmVpCrossConnectEntry 7 }

               atmVpCrossConnectH2LOperStatus OBJECT-TYPE
                           SYNTAX  INTEGER {
                                     up(1),
                                     down(2),
                                     unknown(3)
                                        }
                           MAX-ACCESS  read-only
                           STATUS  current
                           DESCRIPTION
                            "The value of this object identifies the current
                             operational status of the VP cross-connect
                             in one direction; (i.e., from the high to
                             low direction).  The up and down states indicate
                             that this ATM VP cross-connect from high
                             to low direction is operational or not
                             operational respectively.  The
                             unknown state indicates that the state
                             of it cannot be determined."
                           ::= { atmVpCrossConnectEntry 8 }

               atmVpCrossConnectL2HLastChange OBJECT-TYPE
                           SYNTAX  TimeStamp
                           MAX-ACCESS  read-only
                           STATUS  current
                           DESCRIPTION
                            "The value of MIB II's sysUpTime object
                             at the time this VP cross-connect entered
                             its current operational state in the low to
                             high direction.  If the current state was
                             entered prior to the last re-initialization of the
                             agent, then this object contains a zero value."





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 62]





          Internet Draft      ATM Management Objects    February 4, 1994


                           ::= { atmVpCrossConnectEntry 9 }

               atmVpCrossConnectH2LLastChange OBJECT-TYPE
                           SYNTAX  TimeStamp
                           MAX-ACCESS  read-only
                           STATUS  current
                           DESCRIPTION
                            "The value of MIB II's sysUpTime object at the
                             time this VP cross-connect entered its current
                             operational state in the high to low direction.
                             If the current state was entered prior to the
                             last re-initialization of the agent,
                             then this object contains a zero value."
                           ::= { atmVpCrossConnectEntry 10 }

               atmVpCrossConnectRowStatus OBJECT-TYPE
                           SYNTAX  RowStatus
                           MAX-ACCESS  read-create
                           STATUS  current
                           DESCRIPTION
                            "The status of this entry in the
                             atmVpCrossConnectTable.  This object is used to
                             create a cross-connect for cross-connecting
                             VPLs which are created using the atmVplTable
                             or to change or delete an existing cross-connect.
                             This object must be initially set
                             to `createAndWait' or 'createAndGo'.
                             This object cannot be set to `active'
                             unless the following columnar object exists
                             in this row: atmVpCrossConnectAdminStatus.
                             The agent also supplies the associated value
                             for the atmVpCrossConnectIndex instances.
                             To turn on a VP cross-connect,
                             the atmVpCrossConnectAdminStatus
                             is set to `up'."
                           DEFVAL { active }
                           ::= { atmVpCrossConnectEntry 11 }













          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 63]





          Internet Draft      ATM Management Objects    February 4, 1994


               --     ATM Virtual Channel (VC) Cross Connect Group

               -- This group contains configuration and state
               -- information of a bi-directional VC cross-connect.

               -- This group is used to model a bi-directional
               -- point-to-point, point-to-multipoint or
               -- multipoint-to-multipoint VC cross-connects.

               -- This table has read-create access and is used
               -- to cross-connect the VCLs together in an ATM switch
               -- or network that belong to a VC connection.
               -- The atmVcCrossConnectIndex is used to associate
               -- the related VCLs that are cross-connected together.



               -- The step-wise procedures described for setting
               -- up a VP cross-connect are also used for setting up
               -- a VC cross-connect.


               atmVcCrossConnectIndexValue    OBJECT-TYPE
                           SYNTAX  INTEGER (0..2147483647)
                           MAX-ACCESS  read-only
                           STATUS  current
                           DESCRIPTION
                            "This object contains an appropriate value to
                             be used for atmVpCrossConnectIndex when creating
                             entries in the atmVpCrossConnectTable.  The value
                             0 indicates that no unassigned entries are available.
                             To obtain the atmVpCrossConnectIndex value for a
                             new entry, the manager issues a management protocol
                             retrieval operation to obtain the current value of
                             this object.  After each retrieval, the agent should
                             modify the value to the next unassigned index."
                           ::= { atmMIBObjects 10 }


               --  The ATM VC Cross Connect Table


               atmVcCrossConnectTable OBJECT-TYPE
                         SYNTAX  SEQUENCE OF AtmVcCrossConnectEntry
                         MAX-ACCESS  not-accessible





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 64]





          Internet Draft      ATM Management Objects    February 4, 1994


                         STATUS  current
                         DESCRIPTION
                          "The ATM VC Cross Connect table.  A bi-
                           directional VC cross-connect which
                           cross-connects two end points (i.e., VPLs)
                           is modeled as one entry in this table."
                         ::= { atmMIBObjects 11 }


               atmVcCrossConnectEntry OBJECT-TYPE
                         SYNTAX  AtmVcCrossConnectEntry
                         MAX-ACCESS  not-accessible
                         STATUS  current
                         DESCRIPTION
                          "An entry in the ATM VC Cross Connect table.
                           This entry is used to model a bi-directional ATM VC
                           cross-connect cross-connecting two end points.

                          Step-wise Procedures to set up a VC Cross-connect

                          Once the entries in the atmVclTable are created,
                          the following procedures are used
                          to cross-connect the VCLs together to
                          form a VCC segment.

                         (1) The manager obtains a unique
                             atmVcCrossConnectIndex using the
                             atmVcCrossConnectIndexValue object.

                         (2) Next, the manager creates a set of one
                             or more rows in the ATM VC Cross Connect
                             Table, one for each cross-connection between
                             two VCLs.  Each row is indexed by the ATM
                             interface port numbers and VPI/VCI values of the
                             two ends of that cross-connection.
                             This set of rows specifies the topology of the
                             VCC cross-connect and is identified by a single
                             value of atmVcCrossConnectIndex.

                         Negotiated VC Cross-Connect Establishment

                        (2a) The manager creates a row in this table by
                             setting atmVcCrossConnectRowStatus to
                             createAndWait(5).  The agent checks the
                             requested topology and the mutual sanity of





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 65]





          Internet Draft      ATM Management Objects    February 4, 1994


                             the ATM traffic parameters and
                             QoS Classes, i.e., the row creation fails if:
                             - the requested topology is not supported
                               by the agent,
                             - the traffic/QoS parameter values
                               associated with the requested row are
                               incompatible with those of already existing
                               rows for this VC cross-connect.
                            [For example, for setting up
                            a point-to-point VC cross-connect, the
                            ATM traffic parameters in the receive direction
                            of a VCL at the low end of the cross-connect
                            must equal to the traffic parameters in the
                            transmit direction of the other VCL at the
                            high end of the cross-connect,
                            otherwise, the row creation fails.]
                            The agent also checks for internal errors
                            in building the cross-connect.

                            The atmVcCrossConnectIndex values in the
                            corresponding atmVclTable rows are filled
                            in by the agent at this point.

                       (2b) The manager promotes the row in the
                            atmVcCrossConnectTable by setting
                            atmVcCrossConnectRowStatus to active(1).  If
                            this set is successful, the agent has reserved
                            the resources specified by the ATM traffic
                            parameter and QoS Class values
                            for each direction of the VC cross-connect
                            in an ATM switch or network.

                        (3) The manager sets the atmVcCrossConnectAdminStatus
                            to up(1) in all rows of this VC cross-connect to
                            turn the traffic flow on.


                        One-Shot VC Cross-Connect Establishment

                        A VC cross-connect may also be established in
                        one step by a set-request with all necessary
                        parameter values and atmVcCrossConnectRowStatus
                        set to createAndGo(4).

                        In contrast to the negotiated VC cross-connect





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 66]





          Internet Draft      ATM Management Objects    February 4, 1994


                        establishment which allows for detailed error checking
                        (i.e., set errors are explicitly linked to
                        particular resource acquisition failures), the one-shot VC
                        cross-connect establishment performs the setup
                        on one operation but does not have the advantage
                        of step-wise error checking.

                        VC Cross-Connect Retirement

                        A VC cross-connect identified by a particular
                        value of atmVcCrossConnectIndex is released by:

                       (1) Setting atmVcCrossConnectRowStatus of all rows
                           identified by this value of
                           atmVcCrossConnectIndex to destroy(6).
                           The agent may release all
                           associated resources, and the
                           atmVcCrossConnectIndex values in the
                           corresponding atmVclTable row are removed.
                           Note that a situation when only a subset of
                           the associated rows are deleted corresponds
                           to a VC topology change.

                       (2) After deletion of the appropriate
                           atmVcCrossConnectEntries, the manager may
                           set atmVclRowStatus to destroy(6) the
                           associated VCLs.  The agent releases
                           the resources and removes the associated
                           rows in the atmVclTable.

                       VC Cross-Connect Reconfiguration

                       At the discretion of the agent, a VC
                       cross-connect may be reconfigured by
                       adding and/or deleting leafs from to/from
                       the VC topology as per the VC cross-connect
                       establishment/retirement procedures.
                       Reconfiguration of traffic/QoS parameter
                       values requires release of the VC cross-connect
                       before those parameter values may by changed
                       for individual VCLs."
                      INDEX { atmVcCrossConnectIndex,
                               atmVcCrossConnectLowIfIndex,
                               atmVcCrossConnectLowVpi,
                               atmVcCrossConnectLowVci,





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 67]





          Internet Draft      ATM Management Objects    February 4, 1994


                               atmVcCrossConnectHighIfIndex,
                               atmVcCrossConnectHighVpi,
                               atmVcCrossConnectHighVci }
                      ::= { atmVcCrossConnectTable 1 }

               AtmVcCrossConnectEntry ::=
                       SEQUENCE {
                            atmVcCrossConnectIndex          INTEGER,
                            atmVcCrossConnectLowIfIndex     IfIndex,
                            atmVcCrossConnectLowVpi         INTEGER,
                            atmVcCrossConnectLowVci         INTEGER,
                            atmVcCrossConnectHighIfIndex    IfIndex,
                            atmVcCrossConnectHighVpi        INTEGER,
                            atmVcCrossConnectHighVci        INTEGER,
                            atmVcCrossConnectAdminStatus    INTEGER,
                            atmVcCrossConnectL2HOperStatus  INTEGER,
                            atmVcCrossConnectH2LOperStatus  INTEGER,
                            atmVcCrossConnectL2HLastChange  TimeStamp,
                            atmVcCrossConnectH2LLastChange  TimeStamp,
                            atmVcCrossConnectRowStatus      RowStatus
                                    }

               atmVcCrossConnectIndex OBJECT-TYPE
                           SYNTAX  INTEGER (1..2147483647)
                           MAX-ACCESS  not-accessible
                           STATUS  current
                           DESCRIPTION
                            "The value of this object is equal to the
                             atmVpCrossConnectIndexValue obtained to uniquely
                             identify this VC cross-connect."
                           ::= { atmVcCrossConnectEntry 1 }

               atmVcCrossConnectLowIfIndex OBJECT-TYPE
                           SYNTAX  IfIndex
                           MAX-ACCESS  not-accessible
                           STATUS  current
                           DESCRIPTION
                            "The value of this object is equal to MIB II's
                             ifIndex value of the ATM interface port for this
                             VC cross-connect.  The term low implies
                             that this ATM interface has the numerically lower
                             ifIndex value than the other ATM interface
                             identified in the same atmVcCrossConnectEntry."
                           ::= { atmVcCrossConnectEntry 2 }






          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 68]





          Internet Draft      ATM Management Objects    February 4, 1994


               atmVcCrossConnectLowVpi OBJECT-TYPE
                           SYNTAX  INTEGER  (0..255)
                           MAX-ACCESS  not-accessible
                           STATUS  current
                           DESCRIPTION
                            "The value of this object is equal to the VPI
                             value at the ATM interface
                             associated with the VC cross-connect that is
                             identified by atmVcCrossConnectLowIfIndex.
                             The VPI value cannot exceed the number
                             supported by the atmInterfaceMaxVpiBits
                             at the low ATM interface port."
                           ::= { atmVcCrossConnectEntry 3 }

               atmVcCrossConnectLowVci OBJECT-TYPE
                           SYNTAX  INTEGER  (0..65535)
                           MAX-ACCESS  not-accessible
                           STATUS  current
                           DESCRIPTION
                            "The value of this object is equal to the VCI
                             value at the ATM interface
                             associated with this VC cross-connect that is
                             identified by atmVcCrossConnectLowIfIndex.
                             The VCI value cannot exceed the number
                             supported by the atmInterfaceMaxVciBits
                             at the low ATM interface port."
                           ::= { atmVcCrossConnectEntry 4 }

               atmVcCrossConnectHighIfIndex OBJECT-TYPE
                           SYNTAX  IfIndex
                           MAX-ACCESS  not-accessible
                           STATUS  current
                           DESCRIPTION
                            "The value of this object is equal to MIB II's
                             ifIndex value for the ATM interface port for
                             this VC cross-connect.  The term high
                             implies that this VC cross-connect
                             that this ATM interface has the numerically higher
                             ifIndex value than the other ATM interface
                             identified in the same atmVcCrossConnectEntry."
                           ::= { atmVcCrossConnectEntry 5 }

               atmVcCrossConnectHighVpi OBJECT-TYPE
                           SYNTAX  INTEGER   (0..255)
                           MAX-ACCESS  not-accessible





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 69]





          Internet Draft      ATM Management Objects    February 4, 1994


                           STATUS  current
                           DESCRIPTION
                            "The value of this object is equal to the VPI
                             value at the ATM interface
                             associated with the VC cross-connect that is
                             identified by atmVcCrossConnectLowIfIndex.
                             The VPI value cannot exceed
                             the number supported by the atmInterfaceMaxVpiBits
                             at the high ATM interface port."
                           ::= { atmVcCrossConnectEntry 6 }

               atmVcCrossConnectHighVci OBJECT-TYPE
                           SYNTAX  INTEGER   (0..65535)
                           MAX-ACCESS  not-accessible
                           STATUS  current
                           DESCRIPTION
                            "The value of this object is equal to the VCI
                             value at the ATM interface
                             associated with the VC cross-connect that is
                             identified by atmVcCrossConnectHighIfIndex.
                             The VCI value cannot exceed
                             the number supported by the atmInterfaceMaxVciBits
                             at the high ATM interface port."
                           ::= { atmVcCrossConnectEntry 7 }

               atmVcCrossConnectAdminStatus OBJECT-TYPE
                           SYNTAX  INTEGER {
                                     up(1),
                                     down(2)
                                     }
                           MAX-ACCESS  read-create
                           STATUS  current
                           DESCRIPTION
                            "The value of this object identifies the desired
                             administrative status of this bi-directional
                             VC cross-connect. The up and down states
                             indicate that the traffic flow is enabled or
                             disabled respectively on this VC cross-connect."
                           DEFVAL { down }
                           ::= { atmVcCrossConnectEntry 8 }

               atmVcCrossConnectL2HOperStatus OBJECT-TYPE
                           SYNTAX  INTEGER {
                                     up(1),
                                     down(2),





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 70]





          Internet Draft      ATM Management Objects    February 4, 1994


                                     unknown(3)
                                   }
                           MAX-ACCESS  read-only
                           STATUS  current
                           DESCRIPTION
                            "The value of this object identifies the current
                             operational status of the VC cross-connect
                             in one direction; (i.e., from the low to
                             high direction).  The up and down states indicate
                             that this ATM VC cross-connect from low
                             to high direction is operational or not
                             operational respectively.  The unknown state
                             indicates that the state of it cannot be determined."
                           ::= { atmVcCrossConnectEntry 9 }


               atmVcCrossConnectH2LOperStatus OBJECT-TYPE
                           SYNTAX  INTEGER {
                                     up(1),
                                     down(2),
                                     unknown(3)
                                   }
                           MAX-ACCESS  read-only
                           STATUS  current
                           DESCRIPTION
                            "The value of this object identifies the current
                             operational status of the VC cross-connect
                             in one direction; (i.e., from the high to
                             low direction).  The up and down states indicate
                             that this ATM VC cross-connect from high
                             to low direction is operational or not
                             operational respectively.  The unknown state
                             indicates that the state of it cannot be determined."
                           ::= { atmVcCrossConnectEntry 10 }

               atmVcCrossConnectL2HLastChange OBJECT-TYPE
                           SYNTAX  TimeStamp
                           MAX-ACCESS  read-only
                           STATUS  current
                           DESCRIPTION
                            "The value of MIB II's sysUpTime object
                             at the time this VC cross-connect entered
                             its current operational state in low to high
                             direction.  If the current state was
                             entered prior to the last re-initialization of the





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 71]





          Internet Draft      ATM Management Objects    February 4, 1994


                             agent, then this object contains a zero value."
                           ::= { atmVcCrossConnectEntry 11 }

               atmVcCrossConnectH2LLastChange OBJECT-TYPE
                           SYNTAX  TimeStamp
                           MAX-ACCESS  read-only
                           STATUS  current
                           DESCRIPTION
                            "The value of MIB II's sysUpTime object
                             at the time this VC cross-connect entered
                             its current operational state in high to low
                             direction.  If the current state was
                             entered prior to the last re-initialization of the
                             agent, then this object contains a zero value."
                           ::= { atmVcCrossConnectEntry 12 }

               atmVcCrossConnectRowStatus OBJECT-TYPE
                           SYNTAX  RowStatus
                           MAX-ACCESS  read-create
                           STATUS  current
                           DESCRIPTION
                            "The status of this entry in the
                             atmVcCrossConnectTable.  This object is used to
                             create a new cross-connect for cross-connecting
                             VCLs which are created using the atmVclTable
                             or to change or delete existing cross-connect.
                             This object must be initially set to
                             `createAndWait' or 'createAndGo'.  This object
                             cannot be set to `active' unless the following
                             columnar object exists in this row:
                             atmVcCrossConnectAdminStatus.
                             the agent also supplies the associated value
                             for the atmVcCrossConnectIndex instances.
                             To turn on a VC cross-connect,
                             the atmVcCrossConnectAdminStatus
                             is set to `up'."
                           ::= { atmVcCrossConnectEntry 13 }













          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 72]





          Internet Draft      ATM Management Objects    February 4, 1994


               -- AAL5 Virtual Channel Link Performance Statistics Group

               -- This group contains the AAL5
               -- performance statistics of a VCL at the
               -- interface associated with an AAL5 entity in an ATM host
               -- or ATM switch.


               aal5VclTable    OBJECT-TYPE
                         SYNTAX      SEQUENCE OF Aal5VclEntry
                         MAX-ACCESS   not-accessible
                         STATUS       current
                         DESCRIPTION
                          "This table contains AAL5 VCL performance
                           parameters."
                         ::= { atmMIBObjects 12 }

               aal5VclEntry    OBJECT-TYPE
                         SYNTAX         Aal5VclEntry
                         MAX-ACCESS     not-accessible
                         STATUS         current
                         DESCRIPTION
                          "This list contains the AAL5 VCL
                           performance parameters."
                         INDEX { ifIndex, aal5VclVpi, aal5VclVci }
                         ::= { aal5VclTable 1 }

               Aal5VclEntry    ::= SEQUENCE  {
                         aal5VclVpi                        INTEGER,
                         aal5VclVci                        INTEGER,
                         aal5VclCrcErrors                  Counter32,
                         aal5VclSarTimeOuts                Counter32,
                         aal5VclOverSizedSDUs              Counter32
                              }


               aal5VclVpi               OBJECT-TYPE
                           SYNTAX       INTEGER  (0..4095)
                           MAX-ACCESS    read-only
                           STATUS         current
                           DESCRIPTION
                            "The VPI value of the AAL5 VCL at the
                             interface identified by the ifIndex."
                            ::= { aal5VclEntry 1 }






          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 73]





          Internet Draft      ATM Management Objects    February 4, 1994


               aal5VclVci               OBJECT-TYPE
                           SYNTAX       INTEGER  (0..65535)
                           MAX-ACCESS    read-only
                           STATUS         current
                           DESCRIPTION
                            "The VCI value of the AAL5 VCL at the
                             interface identified by the ifIndex."
                            ::= { aal5VclEntry 2 }

               aal5VclCrcErrors    OBJECT-TYPE
                           SYNTAX  Counter32
                           MAX-ACCESS  read-only
                           STATUS           current
                           DESCRIPTION
                            "The number of AAL5 CPCS PDUs received with
                             CRC-32 errors on this AAL5 VCL at the
                             interface associated with an AAL5 entity."
                           ::= { aal5VclEntry 3 }

               aal5VclSarTimeOuts    OBJECT-TYPE
                           SYNTAX  Counter32
                           MAX-ACCESS  read-only
                           STATUS           current
                           DESCRIPTION
                            "The number of partially re-assembled AAL5
                             CPCS PDUs which were discarded
                             on this AAL5 VCL at the interface associated
                             with an AAL5 entity because they
                             were not fully re-assembled within the
                             required time period."
                           ::= { aal5VclEntry 4 }

               aal5VclOverSizedSDUs    OBJECT-TYPE
                           SYNTAX  Counter32
                           MAX-ACCESS  read-only
                           STATUS           current
                           DESCRIPTION
                            "The number of AAL5 CPCS PDUs discarded
                             on this AAL5 VCL at the interface
                             associated with an AAL5 entity because the
                             AAL5 SDUs were too large."
                           ::= { aal5VclEntry 5 }








          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 74]





          Internet Draft      ATM Management Objects    February 4, 1994


               -- Conformance Information

               atmMIBConformance   OBJECT IDENTIFIER ::= { atmMIB 2 }

               atmMIBGroups        OBJECT IDENTIFIER ::= { atmMIBConformance 1 }
               atmMIBCompliances   OBJECT IDENTIFIER ::= { atmMIBConformance 2 }


               -- Compliance Statements

               atmMIBCompliance       MODULE-COMPLIANCE
                          STATUS      current
                          DESCRIPTION
                            "The compliance statement for SNMP entities
                             including networks which have ATM and
                             AAL5 interfaces."

                          MODULE -- this module
                              MANDATORY-GROUPS  {atmInterfaceConfGroup,
                                                 atmTrafficDescrGroup}

                              OBJECT   atmInterfaceMaxVpcs
                              SYNTAX   INTEGER (0..256)
                              DESCRIPTION
                                "The maximum number of VPCs at an ATM UNI."

                              OBJECT   atmInterfaceConfVpcs
                              SYNTAX   INTEGER (0..256)
                              DESCRIPTION
                                "The configured number of VPCs at an ATM UNI."

                              OBJECT   atmInterfaceMaxActiveVpiBits
                              SYNTAX   INTEGER (0..8)
                              DESCRIPTION
                                "The maximum number of active VPI bits
                                 configured for use at an ATM UNI."

                              OBJECT   atmTrafficDescrType
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required."

                              OBJECT   atmTrafficDescrParam1
                              MIN-ACCESS read-only
                              DESCRIPTION





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 75]





          Internet Draft      ATM Management Objects    February 4, 1994


                                "Write access is not required."

                              OBJECT   atmTrafficDescrParam2
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required."

                              OBJECT   atmTrafficDescrParam3
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required."

                              OBJECT   atmTrafficDescrParam4
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required."

                              OBJECT   atmTrafficDescrParam5
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required."

                              OBJECT   atmTrafficQoSClass
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required."

                              OBJECT   atmTrafficDescrRowStatus
                              SYNTAX   INTEGER {active(1)} -- subset of RowStatus
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required, and only one
                                 of the six enumerated values for the
                                 RowStatus textual convention need be
                                 supported, specifically: active(1)."

                              GROUP   atmInterfaceDs3PlcpGroup
                              DESCRIPTION
                                "This group is mandatory only for those
                                 ATM interfaces which implement the
                                 DS3 PLCP layer."

                              GROUP   atmInterfaceTCGroup
                              DESCRIPTION
                                "This group is mandatory only for those





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 76]





          Internet Draft      ATM Management Objects    February 4, 1994


                                 ATM interfaces which implement the
                                 TC Sublayer."

                              GROUP   atmVpcTerminationGroup
                              DESCRIPTION
                                "This group is mandatory only for those
                                 ATM interfaces which implement ATM
                                 VPLs that terminate VPCs (i.e., ones which
                                 are NOT cross-connected to other VPLs)."

                              GROUP   atmVpCrossConnectGroup
                              DESCRIPTION
                                "This group is mandatory only for those
                                 ATM interfaces which implement ATM
                                 VPLs that are not associated with VCLs
                                 and are cross-connected to other VPLs."

                              OBJECT   atmVplVpi
                              SYNTAX   INTEGER (1..255)
                              DESCRIPTION
                                "For ATM UNIs supporting VPCs, the VPI value
                                 ranges from 1 to 255."

                              OBJECT   atmVplAdminStatus
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required."

                              OBJECT   atmVplReceiveTrafficDescrIndex
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required."

                              OBJECT   atmVplTransmitTrafficDescrIndex
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required."

                              OBJECT   atmVplRowStatus
                              SYNTAX   INTEGER {active(1)} -- subset of RowStatus
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required, and only one
                                 of the six enumerated values for the
                                 RowStatus textual convention need be





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 77]





          Internet Draft      ATM Management Objects    February 4, 1994


                                 supported, specifically: active(1)."

                              OBJECT   atmVpCrossConnectLowVpi
                              SYNTAX   INTEGER (1..255)
                              DESCRIPTION
                                "For ATM UNIs supporting VPCs, the VPI value
                                 at the numerically lower ATM interface port
                                 index number ranges from 1 to 255."

                              OBJECT   atmVpCrossConnectHighVpi
                              SYNTAX   INTEGER (1..255)
                              DESCRIPTION
                                "For ATM UNIs supporting VPCs, the VPI value
                                 at the numerically higher ATM interface port
                                 index number ranges from 1 to 255."

                              OBJECT   atmVpCrossConnectAdminStatus
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required."

                              OBJECT   atmVpCrossConnectRowStatus
                              SYNTAX   INTEGER {active(1)} -- subset of RowStatus
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required, and only one
                                 of the six enumerated values for the
                                 RowStatus textual convention need be
                                 supported, specifically: active(1)."

                              GROUP   atmVccTerminationGroup
                              DESCRIPTION
                                "This group is mandatory only for those
                                 ATM interfaces which implement ATM
                                 VCLs that terminate VCCs (i.e., ones which
                                 are NOT cross-connected to other VCLs)."

                              GROUP   atmVcCrossConnectGroup
                              DESCRIPTION
                                "This group is mandatory only for those
                                 ATM interfaces which implement ATM
                                 VCLs that are cross-connected to
                                 other VCLs."

                              OBJECT   atmVclVpi





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 78]





          Internet Draft      ATM Management Objects    February 4, 1994


                              SYNTAX   INTEGER (0..255)
                              DESCRIPTION
                                "For ATM UNIs supporting VCCs, the VPI value
                                 ranges from 0 to 255."

                              OBJECT   atmVclAdminStatus
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required."

                              OBJECT   atmVclReceiveTrafficDescrIndex
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required."

                              OBJECT   atmVclTransmitTrafficDescrIndex
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required."

                              OBJECT   atmVclRowStatus
                              SYNTAX   INTEGER {active(1)} -- subset of RowStatus
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required, and only one
                                 of the six enumerated values for the
                                 RowStatus textual convention need be
                                 supported, specifically: active(1)."

                              OBJECT   atmVcCrossConnectLowVpi
                              SYNTAX   INTEGER (0..255)
                              DESCRIPTION
                                "For ATM UNIs supporting VCCs, the VPI value
                                 at the numerically lower ATM interface port
                                 index number ranges from 0 to 255."

                              OBJECT   atmVcCrossConnectHighVpi
                              SYNTAX   INTEGER (0..255)
                              DESCRIPTION
                                "For ATM UNIs supporting VCCs, the VPI value
                                 at the numerically higher ATM interface port
                                 index number ranges from 0 to 255."

                              OBJECT   atmVcCrossConnectAdminStatus
                              MIN-ACCESS read-only





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 79]





          Internet Draft      ATM Management Objects    February 4, 1994


                              DESCRIPTION
                                "Write access is not required."

                              OBJECT   atmVcCrossConnectRowStatus
                              SYNTAX   INTEGER { active(1)} -- subset of RowStatus
                              MIN-ACCESS read-only
                              DESCRIPTION
                                "Write access is not required, and only one
                                 of the six enumerated values for the
                                 RowStatus textual convention need be
                                 supported, specifically: active(1)."

                              GROUP   aal5VclGroup
                              DESCRIPTION
                                "This group is mandatory for the
                                 AAL5 virtual connections only."

                              OBJECT   aal5VclVpi
                              SYNTAX   INTEGER (0..255)
                              DESCRIPTION
                                "For ATM UNIs supporting AAL5 VCCs,
                                 the VPI value ranges from 0 to 255."
                               ::= { atmMIBCompliances 1 }



























          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 80]





          Internet Draft      ATM Management Objects    February 4, 1994


               -- Units of Conformance

               atmInterfaceConfGroup    OBJECT-GROUP
                       OBJECTS     {atmInterfaceMaxVpcs, atmInterfaceMaxVccs,
                                    atmInterfaceConfVpcs, atmInterfaceConfVccs,
                                    atmInterfaceMaxActiveVpiBits,
                                    atmInterfaceMaxActiveVciBits,
                                    atmInterfaceIlmiVpiVci,
                                    atmInterfaceAddressType }
                       STATUS     current
                       DESCRIPTION
                          "A collection of objects providing configuration
                           information about an ATM interface."
                       ::= { atmMIBGroups 1 }

               atmTrafficDescrGroup    OBJECT-GROUP
                       OBJECTS   {atmTrafficDescrParamIndex, atmTrafficDescrType,
                                  atmTrafficDescrParam1,atmTrafficDescrParam2,
                                  atmTrafficDescrParam3,atmTrafficDescrParam4,
                                  atmTrafficDescrParam5, atmTrafficQoSClass,
                                  atmTrafficDescrRowStatus}
                       STATUS     current
                       DESCRIPTION
                          "A collection of objects providing information
                           about ATM traffic descriptor type and
                           the associated parameters."
                       ::= { atmMIBGroups 2 }

               atmInterfaceDs3PlcpGroup    OBJECT-GROUP
                       OBJECTS     {atmInterfaceDs3PlcpSEFSs,
                                    atmInterfaceDs3PlcpAlarmState,
                                    atmInterfaceDs3PlcpUASs}
                       STATUS     current
                       DESCRIPTION
                          "A collection of objects providing information
                           about DS3 PLCP layer at an ATM interface."
                       ::= { atmMIBGroups 3 }

               atmInterfaceTCGroup    OBJECT-GROUP
                       OBJECTS     { atmInterfaceOCDEvents,
                                     atmInterfaceTCAlarmState }
                       STATUS     current
                       DESCRIPTION
                          "A collection of objects providing information
                           about TC sublayer at an ATM interface."





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 81]





          Internet Draft      ATM Management Objects    February 4, 1994


                       ::= { atmMIBGroups 4 }

               atmVpcTerminationGroup    OBJECT-GROUP
                       OBJECTS  {atmVplOperStatus, atmVplAdminStatus,
                                 atmVplReceiveTrafficDescrIndex,
                                 atmVplTransmitTrafficDescrIndex,
                                 atmVplRowStatus }
                       STATUS     current
                       DESCRIPTION
                          "A collection of objects providing
                           information about a VPL at an ATM interface
                           which terminates a VPC
                           (i.e., one which is NOT cross-connected
                           to other VPLs)."
                       ::= { atmMIBGroups 5 }

               atmVccTerminationGroup    OBJECT-GROUP
                       OBJECTS  {atmVclOperStatus, atmVclAdminStatus,
                                 atmVclReceiveTrafficDescrIndex,
                                 atmVclTransmitTrafficDescrIndex,
                                 atmVclAalType, atmVclRowStatus }
                       STATUS     current
                       DESCRIPTION
                          "A collection of objects providing information
                           about a VCL at an ATM interface
                           which terminates a VCC (i.e., one which is NOT
                           cross-connected to other VCLs)."
                       ::= { atmMIBGroups 6 }

               atmVpCrossConnectGroup    OBJECT-GROUP
                       OBJECTS    { atmVplReceiveTrafficDescrIndex,
                                    atmVplTransmitTrafficDescrIndex,
                                    atmVplOperStatus, atmVplRowStatus,
                                    atmVpCrossConnectAdminStatus,
                                    atmVpCrossConnectL2HOperStatus,
                                    atmVpCrossConnectH2LOperStatus,
                                    atmVpCrossConnectL2HLastChange,
                                    atmVpCrossConnectH2LLastChange,
                                    atmVpCrossConnectRowStatus,
                                    atmVplCrossConnectIdentifier,
                                    atmVpCrossConnectIndexValue }
                       STATUS     current
                       DESCRIPTION
                          "A collection of objects providing
                           information about a VP cross-connect





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 82]





          Internet Draft      ATM Management Objects    February 4, 1994


                           and the associated VPLs that are cross-connected
                           together."
                       ::= { atmMIBGroups 7 }

               atmVcCrossConnectGroup    OBJECT-GROUP
                       OBJECTS    { atmVclReceiveTrafficDescrIndex,
                                    atmVclTransmitTrafficDescrIndex,
                                    atmVclOperStatus, atmVclRowStatus,
                                    atmVcCrossConnectAdminStatus,
                                    atmVcCrossConnectL2HOperStatus,
                                    atmVcCrossConnectH2LOperStatus,
                                    atmVcCrossConnectL2HLastChange,
                                    atmVcCrossConnectH2LLastChange,
                                    atmVcCrossConnectRowStatus,
                                    atmVclCrossConnectIdentifier,
                                    atmVcCrossConnectIndexValue }
                       STATUS     current
                       DESCRIPTION
                          "A collection of objects providing
                           information about a VC cross-connect
                           and the associated VCLs that are cross-connected
                           together."
                       ::= { atmMIBGroups 8 }

               aal5VclGroup    OBJECT-GROUP
                       OBJECTS     {atmVclAal5CpcsSduSize,
                                    atmVclAal5ModeType, atmVclAal5SscsType,
                                    aal5VclCrcErrors, aal5VclSarTimeOuts,
                                    aal5VclOverSizedSDUs }
                       STATUS     current
                       DESCRIPTION
                          "A collection of objects providing
                           AAL5 configuration and performance statistics
                           of a VCL that terminates the VCC."
                       ::= { atmMIBGroups 9 }


               END












          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 83]





          Internet Draft      ATM Management Objects    February 4, 1994


          13.  Acknowledgments

          This memo is the result of the work of the AToMMIB Working
          Group.














































          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 84]





          Internet Draft      ATM Management Objects    February 4, 1994


          14.  References

          [1]  K. McCloghrie and M.T. Rose, Management Information Base
               for Network Management of TCP/IP-based internets,
               Internet Working Group Request for Comments 1156.
               Network Information Center, SRI International, Menlo
               Park, California, (May 1990).

          [2]  K. McCloghrie and M.T. Rose, Management Information Base
               for Network Management of TCP/IP-based internets,
               Internet Working Group Request for Comments 1213.
               Network Information Center, SRI International, Menlo
               Park, California, (March 1991).

          [3]  Information processing systems - Open Systems
               Interconnection - Specification of Abstract Syntax
               Notation One (ASN.1), International Organization for
               Standardization.  International Standard 8824, (December
               1987).

          [4]  Information processing systems - Open Systems
               Interconnection - Specification of Basic Encoding Rules
               for Abstract Syntax Notation One (ASN.1), International
               Organization for Standardization.  International Standard
               8825, (December, 1987).

          [5]  K. McCloghrie and F. Kastenholz, Evolution of the
               Interfaces Group of MIB-II, RFC 1573, January 1994.

          [6]  T. Cox and K. Tesink, Definitions of Managed Objects for
               SIP Interface Type, RFC1304, Network Information Center,
               SRI International, Menlo Park, California, February 1992.

          [7]  J. Case, K. McCloghrie, M. Rose, and S. Waldbusser,
               Structure of Management Information for SNMPv2, RFC1442,
               Network Information Center, SRI International, Menlo
               Park, California, April 1993.

          [8]  J. Case, K. McCloghrie, M. Rose, and S. Waldbusser,
               Textual Conventions for SNMPv2, RFC1443, Network
               Information Center, SRI International, Menlo Park,
               California, April 1993.

          [9]  J. Case, K. McCloghrie, M. Rose, and S. Waldbusser,
               Conformance Statements for SNMPv2, RFC1444, Network





          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 85]





          Internet Draft      ATM Management Objects    February 4, 1994


               Information Center, SRI International, Menlo Park,
               California, April 1993.

          [10] J. Galvin and K. McCloghrie, Administrative Model for
               SNMPv2, RFC1445, Network Information Center, SRI
               International, Menlo Park, California, April 1993.

          [11] J. Case, K. McCloghrie, M. Rose, and S. Waldbusser,
               Protocol Operations for SNMPv2, RFC1448, Network
               Information Center, SRI International, Menlo Park,
               California, April 1993.

          [12] ATM Forum UNI Specification, Version 3.0, September 1993.

          [13] ATM Forum B-ICI Specification, Version 1.0, September
               1993.


































          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 86]





          Internet Draft      ATM Management Objects    February 4, 1994


          15.  Security Considerations

          Security issues are not discussed in this memo.


          16.  Authors' Addresses

                       Masuma Ahmed
                       Bell Communications Research
                       Room 1F-217
                       331 Newman Springs Road
                       P.O. Box 7020
                       Red Bank, NJ  07701-7020
                       Phone: (908) 758-2515
                       EMail: mxa@mail.bellcore.com


                       Kaj Tesink
                       Bell Communications Research
                       Room 1A-427
                       331 Newman Springs Road
                       P.O. Box 7020
                       Red Bank, NJ  07701-7020
                       Phone: (908) 758-5254
                       EMail: kaj@cc.bellcore.com

























          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 87]





          Internet Draft      ATM Management Objects    February 4, 1994


          Table of Contents


          1 Status of this Memo ...................................    1
          2 Abstract ..............................................    2
          3 Change Log ............................................    2
          4 The SNMPv2 Network Management Framework ...............    5
          5 Objects ...............................................    7
          5.1 Format of Definitions ...............................    7
          6 ATM Terminology .......................................    8
          6.1 VCL/VPL and VCC/VPC .................................    8
          6.2 PVC and SVC .........................................   10
          6.3 Traffic Management Parameters .......................   10
          6.3.1 Traffic Policing and Traffic Shaping  Parameters
               ....................................................   11
          6.3.2 Cell Loss Priority ................................   11
          6.3.3 QoS Class .........................................   12
          7 Overview ..............................................   12
          7.1 Background ..........................................   12
          7.2 Structure of the MIB ................................   13
          7.3 ATM Interface Configuration Group ...................   13
          7.4 ATM Interface DS3 PLCP and TC Layer Groups ..........   13
          7.5 ATM Virtual Link and Cross-Connect Groups ...........   13
          8 Application of MIB II to ATM ..........................   14
          8.1 The System Group ....................................   14
          8.2 The Interface Group .................................   14
          8.2.1 Support of the ATM Cell Layer by ifTable ..........   14
          9 Support of the AAL3/4 by RFC 1304 .....................   16
          10 Support of the AAL5 Managed Objects ..................   16
          10.1 Managing AAL5 in a Switch ..........................   16
          10.2 Managing AAL5 in a Host ............................   18
          10.3 Support of AAL5 by ifTable .........................   19
          10.4 Support of Proprietary Virtual Interface by  ifT-
               able ...............................................   20
          10.5 AAL5 Connection Performance Statistics Group .......   21
          11 ILMI MIB and The ATM Managed Objects .................   22
          12 Object Definitions ...................................   26
          13 Acknowledgments ......................................   84
          14 References ...........................................   85
          15 Security Considerations ..............................   87
          16 Authors' Addresses ...................................   87









          Masuma Ahmed and Kaj Tesink (editors) Expires 8/4/94 [Page 88]

