
Network Working Group                                       Steve Crocker
INTERNET DRAFT                                                  Ned Freed
draft-ietf-pem-mime-06.txt                                     Jim Galvin
                                                             Sandy Murphy
                                                                July 1994


                     PEM Security Services and MIME



1.  Status of this Memo

This document is an Internet Draft.  Internet Drafts are working
documents of the Internet Engineering Task Force (IETF), its Areas, and
its Working Groups.  Note that other groups may also distribute working
documents as Internet Drafts.

Internet Drafts are valid for a maximum of six months and may be
updated, replaced, or obsoleted by other documents at any time.  It is
inappropriate to use Internet Drafts as reference material or to cite
them other than as ``work in progress''.

To learn the current status of any Internet Draft, please check the
1id-abstracts.txt listing contained in one of the Internet Drafts Shadow
Directories on ds.internic.net (US East Coast), venera.isi.edu (US West
Coast), munnari.oz.au (Pacific Rim), or nic.nordu.net (Europe).

2.  Abstract

This document specifies how the services of MIME and PEM can be used in
a complementary fashion.  MIME, an acronym for "Multipurpose Internet
Mail Extensions", defines the format of the contents of Internet mail
messages and provides for multi-part textual and non-textual message
bodies.  PEM, an acronym for "Privacy Enhanced Mail", provides message
authentication/integrity and message encryption services for Internet
mail messages.

An Internet electronic mail message consists of two parts: the headers
and the body.  The headers form a collection of field/value pairs
structured according to RFC822 [1], whilst the body, if structured, is
defined according to MIME [2].  MIME does not provide for the
application of security services.







Crocker/Freed/Galvin/Murphy  Expires: January 1995              [Page 1]

INTERNET DRAFT                PEM and MIME                     July 1994


PEM [3-6] specifies how to apply encryption and authentication/integrity
services to the contents of a textual electronic mail message but does
not provide message structuring or type labelling facilities.  This
document specifies how to use PEM with the multipart/signed and
multipart/encrypted MIME content types to provide
authentication/integrity and encryption services.  We refer to the
authentication/integrity service as a digital signature service.

This document specifies a number of changes to the message encryption
and signature procedures of PEM and broadens the name forms that may be
used to identify public keys.  Many of the changes represent a departure
in mechanism, not in effect.

3.  Introduction

This document updates the message encryption and signature procedures
defined by [3] and obsoletes the key certification and related services
defined by [6].  The changes to [3] include the separation of the
encryption and signature services, the removal of the limitation to
enhance only text-based messages, the removal of the transfer encoding
operation, the deprecation of the Content-Domain: and Proc-Type:
headers, and the separation of certificate and certificate revocation
list transmission from the security enhancements.  These changes
represent a departure in mechanism, not in effect, and are detailed in
Section 10.

In addition, this document specifies three technical changes to PEM:
symmetric key management in [3] is deprecated, the canonicalization
operation in [3] is generalized, and the allowable name forms for the
identification of public keys is broadened to include arbitrary strings
and email addresses, and users may distribute their public keys directly
in lieu of certificates.

The key certification and related services document [6] is obsoleted by
the specification of two new MIME content types: application/key-request
and application/key-data.  These new content types are used to transmit
requests for key operations (storage, retrieval, certification,
revocation list retrieval, etc.)  and the responses to those requests.
These two content types are independent body parts and are not required
to be encapsulated in any other body part.  These changes represent a
departure in mechanism, not in effect, and are detailed in Section 10.

In order to make use of the PEM services, a user is required to have at
least one public/private key pair.  Prior to this specification, the
public key was required to be embodied in a certificate, an object that





Crocker/Freed/Galvin/Murphy  Expires: January 1995              [Page 2]

INTERNET DRAFT                PEM and MIME                     July 1994


binds a public key with a distinguished name, a name form that
identified the owner of the public key.  The embodiment was issued by a
certification authority, a role that was expected to be trustworthy
insofar as it verified the identity of the owner prior to issuing the
certificate.  However, the deployment of certificates and the creation
of the hierarchy of certification authorities has been problematic.

Instead, this specification bases the PEM services on a public/private
key pair.  Each key pair is required to belong to a user (where user is
not limited to being a human, e.g., a process or a role) which has a
name.  There are 3 name forms specified by this document.  For backward
compatibility (and forward compatibility if the X.500 Directory becomes
a ubiquitous service) one of the name forms is a distinguished name.  In
addition, email addresses and arbitrary strings are allowed.

Since a user may have more than one key pair, a name form is
insufficient for uniquely identifying a key pair.  The owner of a key
pair must assign a key identifier to each key pair.  The combination of
a name form and a key identifier uniquely identifies a key pair and each
key pair is uniquely identified by a name form and key identifier
combination.  Throughout this document, this combination is called an
identifier.  There are 6 identifiers specified by this document.

With a key pair for one's self and software that is both MIME and PEM
aware, an originating user may digitally sign arbitrary data and send it
to one or more recipients.  With the public keys of the recipients, a
user may encrypt the data so that only the intended recipients can
decrypt and read the it.  This specification separates these two
services so that an originator may apply either or both, in either
order.

The name forms and identifiers are described in detail in the next
section.  Succeeding sections specify how PEM and MIME are used together
and other ancillary details.

4.  Name Forms and Identifiers

Currently, [3] requires the use of certificates to identify the public
key (and corresponding private key) used to create a PEM message.
Within certificates, [4] requires the use of distinguished names as
specified by the X.500 Series of Recommendations.  However, the Internet
community has a great deal more experience with the use of electronic
mail addresses as a name form and there is a desire to be able to use
arbitrary strings to identify the owners of public keys.  Hence, there
is a need to support name forms which do not conform to the expected





Crocker/Freed/Galvin/Murphy  Expires: January 1995              [Page 3]

INTERNET DRAFT                PEM and MIME                     July 1994


usage of distinguished names.

When processing PEM messages it is necessary to be able to uniquely
identify the key pair used to create the message.  A certificate is
uniquely identified by the combination of its issuer's distinguished
name and its serial number.  Thus, the issuer name and serial number
uniquely identifies a key pair.  Since a user may have more than one key
pair, a name form is insufficient for this purpose.  An identifier is
required that consists of both a name form and key identifier, a value
assigned to a key pair by its owner.

In addition, users may distribute their public keys via mechanisms
outside the scope of the PEM specification, for example, in a file via
FTP.  As a result, it is desirable to be able to explicitly specify the
public key used rather than an identifier of the public key.  A
significant benefit of this mechanism is the ability to support
encrypted, anonymously signed mail.

The objective of the various Originator and Recipient fields specified
in [3] is to identify which public key has been used or is required.
This document simplifies the set of fields by specifying exactly two:
Originator-ID: for originators and Recipient-ID: for recipients.  This
specification defines six (6) identifiers with which the public key used
may be indicated in each of these fields.

In the next section the 3 name forms are described in detail.  Following
that is the specification of the 6 identifiers.

4.1.  Name Forms

There are 3 name forms specified by this document: email address,
distinguished names, and arbitrary strings.

4.1.1.  Email Addresses

The email address (grammar token <emailstr>) used must be a valid RFC822
address, which is defined in terms of the two grammar tokens <addr-spec>
and <route-addr>.  The grammar for these two tokens is included in the
Appendix as a convenience; the definitive source for these tokens is
necessarily RFC822 [1].

    <emailstr>      ::= <addr-spec> / <route-addr>
                        ; an electronic mail address as defined by
                        ; these two tokens from RFC822






Crocker/Freed/Galvin/Murphy  Expires: January 1995              [Page 4]

INTERNET DRAFT                PEM and MIME                     July 1994


For example, the string "galvin@tis.com" is an email address.

4.1.2.  Arbitrary Strings

The arbitrary string (grammar token <string>) must chosen from the us-
ascii character set and must have a length of at least 1.  It is
possible to encode the actual string in such a way that only characters
from the us-ascii character set are generated, but there is no mechanism
for conveying to a recipient the encoding that was used.

    <string>        ::= ; a non-null sequence of us-ascii characters

For example, the string

    Jim "the SAAG mailing list maintainer" Galvin

is an arbitrary string.

4.1.3.  Distinguished Names

The distinguished name (grammar token <dname>) must be constructed
according to the guidelines of the X.500 Directory.  For the purposes of
conveying a distinguished name from an originator to a recipient, it
must be ASN.1 encoded and then printably encoded according to the base64
encoding defined by MIME.

    <dnamestr>      ::= <encbin>
                        ; a printably encoded, ASN.1 encoded
                        ; distinguished name


    ** EXAMPLE DISTINGUISHED NAME **


4.2.  Identifiers

There are 6 identifiers specified by this document: email address,
arbitrary string, distinguished name, PGP key identifier, the public key
itself, and the issuer name and serial number pair from a certificate.
All of these have approximately the same structure as follows:

    TYPE, KEYID, STRING








Crocker/Freed/Galvin/Murphy  Expires: January 1995              [Page 5]

INTERNET DRAFT                PEM and MIME                     July 1994


The TYPE field is a literal string, one for each of the possible
identifiers.

The KEYID field is used to distinguish between the multiple public keys
that may be associated with the name form in the STRING field.  In 3 of
the identifiers its value is arbitrary, chosen by the owner of the key
pair, except that it must be distinct from all the other KEYIDs used by
the owner.  Suggested values include a portion (low-order 16 or 32 bits)
or all of the actual public key used.  In the other 3 identifiers the
value is still chosen by the owner of the public key and it must still
be unique, but its value is chosen from a more restricted alphabet.

The STRING field is the name form and has a different syntax according
to the value of the TYPE field.

The identifier used in each of the originator and recipient fields is
described by the following grammar.  The definition of the key
identifier token is included here since it used by several of the
identifiers below.

    <id>            ::= <nameid> / <id-publickey> / <id-issuer>

    <nameid>        ::= <id-email> / <id-string> / <id-dname> / <id-pgp>

    <keyid>         ::= <encbin>
                        ; a printably encoded non-null sequence of octets

Each of the identifier name forms is described below.

4.2.1.  Email Address

The email address identifier has the following syntax.

    <id-email>      ::= "EN"  "," <keyid> "," <emailstr> CRLF


4.2.2.  Arbitrary String

The arbitrary string identifier has the following syntax.

    <id-string>     ::= "STR" "," <keyid> "," <string> CRLF









Crocker/Freed/Galvin/Murphy  Expires: January 1995              [Page 6]

INTERNET DRAFT                PEM and MIME                     July 1994


4.2.3.  Distinguished Name

The distinguished name identifier has the following syntax.

    <id-dname>      ::= "DN"  "," <keyid> "," <dnamestr> CRLF


The actual form and syntax of the distinguished name is outside the
scope of this specification.  RFC1422 specifies one possible form based
on a particular choice of a certification hierarchy for certificates.

4.2.4.  PGP Public Key

The PGP public key identifier has the following syntax.

    <id-pgp>        ::= "PGP2" ",0x" <pgp-keyid> "," <string> CRLF

    <pgp-keyid>     ::= ; a sequence from the following alphabet: {0-9, A-F}
                        ; which is either exactly six or eight characters long


4.2.5.  Public Key

The public key identifier has the following syntax.  This identifer, as
compared to the others, has the unique property that the STRING element
is optional and, when included, is not a string but rather one of four
of the other identifiers.

    <id-publickey>  ::= "PK"  "," <publickey> [ "," <nameid> ] CRLF

    <publickey>     ::= <encbin>
                        ; a printably encoded, ASN.1 encoded
                        ; subjectPublicKeyInfo


In normal usage, the STRING element is expected to be absent.  When
present, it represents a mechanism by which an identifier (name form and
key identifier) can be associated with a public key.  Recipients of a
public key identifier must take care to verify the accuracy of the
purported association.  If not, it may be possible for a malicious
originator to assert an identifier that accords the originator
unauthorized privileges.  See Section 7.2 for more details.

The object subjectPublicKeyInfo is imported from the X.500 Directory
from the certificate object.  It is currently the best choice for a





Crocker/Freed/Galvin/Murphy  Expires: January 1995              [Page 7]

INTERNET DRAFT                PEM and MIME                     July 1994


general purpose public key encoding.

4.2.6.  Issuer Name and Serial Number

The issuer name and serial number identifier has the following syntax.

    <id-issuer>     ::= "IS"  "," <dnamestr>  "," <serial> CRLF

    <serial>        ::= 1*<hexchar>
                        ; hex dump of the serial number of a certificate


The <id-issuer> identifier is included for backward compatibility with
the ID-ASymmetric fields defined in [3].  The older fields are easily
converted to this new form by prefixing the old value with "IS," and
replacing the field name with an appropriate new ID field.

5.  Applying PEM Security Services to MIME Body Parts

The next section describes the processing steps necessary to prepare a
MIME body part for the application of PEM security services.  The
succeeding two sections describe the content of the multipart/signed and
multipart/encrypted body parts resulting from the application of PEM
security services to MIME body parts.

5.1.  PEM Processing Steps

The definition of the multipart/signed and multipart/encrypted body
parts in [7] specifies three steps for creating both body parts.

(1)  The body part is to be protected is created according to a local
     convention.

(2)  The body part is prepared for protection according to the protocol
     parameter.

(3)  The prepared body part is protected according to the protocol
     parameter.

This specification makes no changes to step one in the sequence.  For
step two, there is no preparation necessary for the encryption service.
For the digital signature service, the body part must be canonicalized
as described below.  This specification makes no changes to step three
in the sequence.






Crocker/Freed/Galvin/Murphy  Expires: January 1995              [Page 8]

INTERNET DRAFT                PEM and MIME                     July 1994


Prior to the application of the digital signature service, the body part
must be in a canonical form.  Transforming the body part to be signed
into a canonical form is a necessary and essential step in the digital
signature process.  The canonical form must satisfy the property that it
is uniquely and unambiguously representable in both the originator and
recipient's local environment.  This is required in order to ensure that
both the originator and recipient have the same data with which to
calculate the digital signature; the originator needs to be able to
include the digital signature value when transferring the body part,
while the recipient needs to be able to compare a re-computed value with
the received value.  Further, the canonical form should satisfy the
property that it is representable on as many different host computers as
possible.  By satisfying this property, signed data may be forwarded by
recipients to additional recipients, who will also be able to verify the
original signature.  This service is called forwardable authentication.

The canonicalization transformation is a two step process.  First, the
body part must be converted to canonical representation suitable for
transport between originators and recipients.  Second, the body part
must have its line delimiters canonicalized prior to computing the
digital signature and prior to each verification of the digital
signature.

The canonical representation of all body parts is specified to be 7bit,
as defined by [2].  Since the headers of body parts are already required
to be representable in 7bit, this step requires that if the data to be
signed is not already 7bit it must be encoded with an appropriate MIME
content transfer encoding.  Note, since the MIME standard explicitly
disallows nested content transfer encodings, i.e., the content types
multipart and message may not themselves be encoded, body parts enclosed
within, for example, a multipart content type, must be encoded in a 7bit
representation.  Any valid MIME encoding may be selected.

The 7bit representation of the data must be transferred to the
recipient.  As may be required by MIME, an appropriate Content-
Transfer-Encoding: header is included with the data.  Upon receipt, a
MIME implementation would verify the signature of the data prior to
decoding the data and displaying it to the recipient.

Representing all complex content types as 7bit transforms them into
text-based content types.  However, text-based content types present a
unique problem.  In particular, the line delimiter used on a text-based
content type is specific to a local environment; different environments
use the single character carriage-return (<CR>), the single character
line-feed (<LF>), or the two character sequence "carriage-return line-





Crocker/Freed/Galvin/Murphy  Expires: January 1995              [Page 9]

INTERNET DRAFT                PEM and MIME                     July 1994


feed (<CR><LF>)."

The application of the digital signature service requires that the same
line delimiter be used by both the originator and the recipient.  This
document specifies that the two character sequence "<CR><LF>" must be
used as the line delimiter.  Thus, the canonicalization transformation
includes the transformation of the local line delimiter to the two
character sequence "<CR><LF>".

The transformation to the canonical line delimiter is only required for
the purposes of computing the digital signature.  Thus, originators must
apply the canonical line delimiter transformation before computing the
digital signature but must transfer the data without the canonical line
delimiter transformation.  Similarly, recipients must apply the
canonical line delimiter transformation before computing the digital
signature.

    NOTE: An originator can not transfer the content with the
    canonical line delimiter transformation intact because the
    transformation process is not idempotent.  In particular, SMTP
    servers may themselves convert the canonical line delimiter to a
    local line delimiter, prior to the message being delivered to
    the user.  Thus, a recipient has no way of knowing if the
    transformation is present or not.  Thus, if the recipient
    applies the transformation to a content in which it is already
    present, the resulting content may have two line delimiters
    present, which would cause the verification of the signature to
    fail.


    IMPLEMENTORS NOTE: Implementors should be aware that the
    transformation to a canonical representation is a function that
    is available even in a minimally compliant MIME user agent.
    Further, the canonical line delimiter transformation required
    here is distinct from the same transformation included in that
    function.  Specifically, the line delimiter transformation in
    the former case is performed prior to the application of the
    canonical representation while it is performed after the
    application of the canonical representation in the latter case.


5.2.  Use of multipart/signed Content Type

When this content type is used, the value of the required parameter
"protocol" is "pem" and the value of the required parameter "hashalg" is





Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 10]

INTERNET DRAFT                PEM and MIME                     July 1994


one of the valid choices from [5], for example:

    Content-Type: multipart/signed; protocol="pem"; hashalg="md5";
      boundary="Signed Message"

    --Signed Message
    Content-Type: text/plain

    This is some example text.

    --Signed Message
    Content-Type: application/signature

    <pemsig>
    --Signed Message--


where the <pemsig> token is defined as follows.

    <pemsig>             ::= <version> ( 1*<origasymflds> )

    <version>            ::= "Version:" "5" CRLF

    <origasymflds>       ::= <origid> <micinfo>

    <origid>             ::= "Originator-ID:" <id> CRLF


The token <id> is defined in Section 4.2.

The only valid value for a Content-Transfer-Encoding: header, if
included, is "7bit".

5.3.  Use of multipart/encrypted Content Type

When this content type is used, the value of the required parameter
"protocol" is "pem", for example:













Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 11]

INTERNET DRAFT                PEM and MIME                     July 1994


    Content-Type: multipart/encrypted; protocol="pem";
      boundary="Encrypted Message"

    --Encrypted Message
    Content-Type: application/keys

    <pemkeys>

    --Encrypted Message
    Content-Type: application/octet-stream

    <encrypted data>
    --Encrypted Message--


where the <pemkeys> token is defined as follows.

    <pemkeys>            ::= <version> <dekinfo> 1*<recipasymflds>

    <version>            ::= "Version:" "5" CRLF

    <recipasymflds>      ::= <recipid> <asymkeyinfo>

    <recipid>            ::= "Recipient-ID:" <id> CRLF

    <asymkeyinfo>        ::= "Key-Info" ":" <ikalgid> "," <asymencdek> CRLF


The token <id> is defined in Section 4.2.

6.  Removing PEM Security Services from PEM Body Parts

This section describes the processing steps necessary to verify or
decrypt the PEM security services that have been applied to MIME body
parts.  Outer layers of PEM security services must be processed prior to
processing inner layers of PEM security services.  Processing includes a
user choosing to display a content without removing the PEM security
services.

The definition of the multipart/signed and multipart/encrypted body
parts in [7] specifies three steps for receiving both body parts.

(1)  The protected body part and the control information body part are
     prepared for processing.






Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 12]

INTERNET DRAFT                PEM and MIME                     July 1994


(2)  The prepared body parts are made available to the protection
     removal process.

(3)  The results of the protection removal process are made available to
     the user and processing continues with the unprotected body part,
     as returned by the protection removal process.

For step one, the preparation for digitally signed and encrypted body
parts is different, as described below.  No changes are required to
steps two and three in the sequence.

For multipart/signed body parts, the control information is prepared by
removing any content transfer encodings that may be present.  The
digitally signed body part is prepared by leaving the content transfer
encodings intact and canonicalizing the line delimiters according to
Step 2 of Section 5.1.

Multipart/encrypted body parts are prepared by removing the content
transfer encodings, if present, from both the control information and
the encrypted body part.

7.  Definition of New Content Types

This document defines two new content types, the contents of which
comprise a replacement mechanism for [6].  The first content type is
application/key-request, which replaces the certification and CRL-
retrieval request messages.  The second content type is
application/key-data, which replaces the certification reply message,
the crl-storage request message, and the crl-retrieval reply message.
There were no requirements for a crl-storage reply message and none are
specified in this document.  This document includes a specification for
a public key and certificate request message, which were previously
undefined.

    NOTE: RFC1424 has some descriptive text, especially for
    certification messages, that should probably be included.


7.1.  application/key-request Content Type Definition

(1)  MIME type name: application

(2)  MIME subtype name: key-request







Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 13]

INTERNET DRAFT                PEM and MIME                     July 1994


(3)  Required parameters: none

(4)  Optional parameters: none

(5)  Encoding considerations: quoted-printable is always sufficient

(6)  Security Considerations: none

The content of this body part corresponds to the following production.


    <request>            ::= <version>
                             ( <subject> / <issuer> / <certification> )
    <version>            ::= "Version:" "5" CRLF
    <subject>            ::= "Subject:" <id> CRLF
    <issuer>             ::= "Issuer:" <id> CRLF
    <certification>      ::= "Certification:" <encbin> CRLF



This content type is used to provide for some of the requests described
in [6].  The information in the body part is entirely independent of any
other body part.  As such, the application/key-request content type is
an independent body part.

The certification request, certificate-retrieval request and crl-
retrieval request are provided for directly.  If the content contains a
Certification: field it requests certification of the self-signed
certificate in the field value.  If the content contains an Issuer:
field it requests the certificate revocation list chain beginning with
the issuer identified in the field value.  If the content contains a
Subject: field it requests either the public key of the subject or the
certificate chain beginning with the subject identified in the field
value, or both.

The Subject: and Issuer: fields each contain a value of type <id>, which
is defined in Section 4.2.

The crl-storage request is provided for by the application/key-data
content type described in the next section.

In each case, the response is transmitted in an application/key-data
content type.  When returning public keys, certificate chains, and
certificate revocation list chains, if there exists more than one,
several application/key-data contents are to be returned in the reply





Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 14]

INTERNET DRAFT                PEM and MIME                     July 1994


message, one for each.

7.2.  application/key-data Content Type Definition

The principal objective of this content type is to convey cryptographic
keying material from an originator to a recipient.  However, no explicit
provision is made for determining the authenticity or accuracy of the
data being conveyed.  In particular, when a public key and the
identifier for its owner is conveyed, there is nothing to prevent an
originator or any interloper along the path from an originator to a
recipient from substituting alternate values for either the public key
or the identifier, thus setting up the recipient to potentially send
sensitive information that may be intercepted and disclosed
inappropriately.

It is incumbent upon a recipient to verify the authenticity and accuracy
of the data received prior to its use.  The problem is addressed by the
use of certificates, since a certification hierarchy is a well-defined
mechanism that conveniently supports the automatic verification of the
data.  Alternatively, the application/key-data body part could be
digitally signed by the originator.  In this way, if a recipient
believes that correct originator's public key is available locally and
if the recipient believes the originator would convey accurate data,
then the key data received from the originator can be believed.

    NOTE: Insofar as a certificate represents a mechanism by which
    an issuer vouches for the binding between the name and public
    key it embodies, the signing of an application/key-data body
    part is a similar mechanism.


(1)  MIME type name: application

(2)  MIME subtype name: key-data

(3)  Required parameters: none

(4)  Optional parameters: none

(5)  Encoding considerations: quoted-printable is always sufficient.

(6)  Security Considerations: none

The content of this body part corresponds to the following production.






Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 15]

INTERNET DRAFT                PEM and MIME                     July 1994


    <certdata>           ::= <version>
                             ( <keydata> / <certchain> / <crlchain> )
    <version>            ::= "Version:" "5" CRLF
    <keydata>            ::= "Key:" <id> "," <nameid> CRLF
    <certchain>          ::= <cert> *( [ <crl> ] <cert> )
    <crlchain>           ::= 1*( <crl> [ <cert> ] )
    <cert>               ::= "Certificate:" <encbin> CRLF
    <crl>                ::= "CRL:" <encbin> CRLF



This content type is used to transfer public keys, certificate chains,
or Certificate Revocation List (CRL) chains.  The information in the
body part is entirely independent of any other body part.  (Note that
the converse is not true: the validity of a protected body part cannot
be determined without the proper public keys, certificates, or current
CRL information.)  As such, the application/key-data content type is an
independent body part.

The <keydata> production contains exactly one public key.  It is used to
bind a public key with its corresponding name form and key identifier.
It is recommended that when responders are returning this information
that the enclosing body part be digitally signed by the responder in
order to protect the information.

The <certchain> production contains one certificate chain.  A
certificate chain starts with a certificate and continues with the
certificates of subsequent issuers.  Each issuer certificate included
must have issued the preceding certificate.  For each issuer, a CRL may
be supplied.  A CRL in the chain belongs to the immediately following
issuer.  Therefore, it potentially contains the immediately preceding
certificate.

The <crlchain> production contains one certificate revocation list
chain.  The CRLs in the chain begin with the requested CRL and continue
with the CRLs of subsequent issuers.  The issuer of each CRL is presumed
to have issued a certificate for the issuer of the preceding CRL.  For
each CRL, the issuer's certificate may be supplied.  A certificate in
the chain must belong to the issuer of the immediately preceding CRL.

The relationship between a certificate and an immediately preceding CRL
is the same in both <certchain> and <crlchain>.  In a <certchain> the
CRLs are optional.  In a <crlchain> the certificates are optional.







Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 16]

INTERNET DRAFT                PEM and MIME                     July 1994


8.  Examples

    NOTE: To be included upon completion of implementation.


9.  Observations

The use of the pre-submission and post-delivery algorithms to combine
PEM and MIME capabilities exhibits several properties:

(1)  It allows privacy-enhancement of an arbitrary content, not just the
     body of an RFC822 message.

(2)  For a multipart or message content, it allows the user to specify
     different privacy enhancements to be applied to different
     components of the structure of the content.

(3)  It provides for messages containing several privacy enhanced
     contents, thereby removing the requirement for PEM software to be
     able to generate or interpret a single content which intermixes
     both unenhanced and enhanced components.

The use of a MIME-capable user agent makes complex nesting of enhanced
message body parts much easier.  For example, the user can separately
sign and encrypt a message.  This motivates a complete separation of the
confidentiality security service from the digital signature security
service.  That is, different key pairs could be used for the different
services and could be protected separately.  This means an employee's
company could be given access to the (private) decryption key but not
the (private) signature key, thereby granting the company the ability to
decrypt messages addressed to the employee in emergencies without also
granting the company the ability to sign messages as the employee.

The use of two private keys requires the ability to maintain multiple
certificates for each user.

10.  Summary of Changes to PEM Specification

This document updates the message encryption and signature procedures
defined by [3] and obsoletes the key certification and related services
defined by [6].  The changes are enumerated below.

(1)  The PEM specification currently requires that encryption services
     be applied only to message bodies that have been signed.  By
     providing for each of the services separately, they may be applied





Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 17]

INTERNET DRAFT                PEM and MIME                     July 1994


     recursively in any order according to the needs of the requesting
     application.

(2)  PEM implementations are currently restricted to processing only
     text-based electronic mail messages.  In fact, the message text is
     required to be represented by the ASCII character set with
     "<CR><LF>" line delimiters.  This restriction no longer applies.

(3)  MIME includes transfer encoding operations to ensure the unmodified
     transfer of body parts, which obviates these services in PEM.

(4)  PEM specifies a Proc-Type: header field to identify the type of
     processing that was performed on the message.  This functionality
     is subsumed by the MIME Content-Type: headers.  The Proc-Type:
     header also included a decimal number that was used to distinguish
     among incompatible encapsulated header field interpretations which
     may arise as changes are made to the PEM standard.  This
     functionality is replaced by the Version: header specified in this
     document.

(5)  PEM specifies a Content-Domain: header, the purpose of which is to
     describe the type of the content which is represented within a PEM
     message's encapsulated text.  This functionality is subsumed by the
     MIME Content-Type: headers.

(6)  The PEM specifications include a document that defines new types of
     PEM messages, specified by unique values used in the Proc-Type:
     header, to be used to request certificate and certificate
     revocation list information.  This functionality is subsumed by two
     new content types specified in this document.

(7)  The header fields having to do with certificates (Originator-
     Certificate: and Issuer-Certificate:) and CRLs (CRL:) are relegated
     for use only in the application/key-data and application/key-
     request content types and are no longer allowed in the header
     portion of a PEM signed or encrypted message.

(8)  The grammar specified here explicitly separates the header fields
     that may appear for the encryption and signature security services.
     It is the intent of this document to specify a precise expression
     of the allowed header fields; there is no intent to reduce the
     functionality of combinations of encryption and signature security
     from those of [3].







Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 18]

INTERNET DRAFT                PEM and MIME                     July 1994


(9)  With the separation of the encryption and signature security
     services, there is no need for a MIC-Info: field in the headers
     associated with an encrypted message.

(10) In [3], when asymmetric key management is used, an Originator-ID
     field is required in order to identify the private key used to sign
     the MIC argument in the MIC-Info: field.  Because no MIC-Info:
     field is associated with the encryption security service under
     asymmetric key managment, there is no requirement in that case to
     include an Originator-ID field.

These changes represent a departure in mechanism, not in effect, from
those specified in [3] and [6].  The following technical changes to [3]
and [4] are also specified by this document.

(1)  The grammar specified here explicitly excludes symmetric key
     management.  Currently, there are no generally available
     implementations of symmetric key management nor are there any known
     plans for implementing it.  As a result, the IETF standards process
     will require this feature to be dropped when the documents are
     promoted to draft standard status from proposed standard status.

(2)  This document requires all data that is to be digitally signed to
     be represented in 7bit form.

(3)  This document broadens the allowable name forms that users may use
     to identify their public keys.  Users may use arbitrary strings and
     email addresses as their name.  Further, users may distribute their
     public key directly in lieu of using certificates.  In support of
     this change the Originator-ID-ASymmetric: and Recipient-ID-
     ASymmetric: fields are deprecated in favor of Originator-ID: and
     Recipient-ID: fields, respectively.

11.  Collected Grammar

The following is a summary of the grammar presented in this document.

(1)  Signature headers












Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 19]

INTERNET DRAFT                PEM and MIME                     July 1994


         <pemsig>             ::= <version> ( 1*<origasymflds> )

         <version>            ::= "Version:" "5" CRLF

         <origasymflds>       ::= <origid> <micinfo>

         <origid>             ::= "Originator-ID:" <id> CRLF


(2)  Encryption Headers


         <pemkeys>            ::= <version> <dekinfo> 1*<recipasymflds>

         <version>            ::= "Version:" "5" CRLF

         <recipasymflds>      ::= <recipid> <asymkeyinfo>

         <recipid>            ::= "Recipient-ID:" <id> CRLF

         <asymkeyinfo>        ::= "Key-Info" ":" <ikalgid> "," <asymencdek> CRLF


(3)  Identifier Name Forms


























Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 20]

INTERNET DRAFT                PEM and MIME                     July 1994


         <id>            ::= <nameid> / <id-publickey> / <id-issuer>

         <nameid>        ::= <id-email> / <id-string> / <id-dname> / <id-pgp>

         <id-email>      ::= "EN"  "," <keyid> "," <emailstr> CRLF

         <id-string>     ::= "STR" "," <keyid> "," <string> CRLF

         <id-dname>      ::= "DN"  "," <keyid> "," <dnamestr> CRLF

         <id-pgp>        ::= "PGP2" ",0x" <pgp-keyid> "," <string> CRLF

         <id-publickey>  ::= "PK"  "," <publickey> [ "," <nameid> ] CRLF

         <id-issuer>     ::= "IS"  "," <dnamestr>  "," <serial> CRLF

         <keyid>         ::= <encbin>
                             ; a printably encoded non-null sequence of octets

         <emailstr>      ::= <addr-spec> / <route-addr>
                             ; an electronic mail address as defined by
                             ; these two tokens from RFC822

         <string>        ::= ; a non-null sequence of us-ascii characters

         <dnamestr>      ::= <encbin>
                             ; a printably encoded, ASN.1 encoded
                             ; distinguished name

         <pgp-keyid>     ::= ; a sequence from the following alphabet: {0-9, A-F}
                             ; which is either exactly six or eight characters long

         <publickey>     ::= <encbin>
                             ; a printably encoded, ASN.1 encoded
                             ; subjectPublicKeyInfo

         <serial>        ::= 1*<hexchar>
                             ; hex dump of the serial number of a certificate


(4)  Request Headers (certificate, certification, etc.)









Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 21]

INTERNET DRAFT                PEM and MIME                     July 1994


         <request>            ::= <version>
                                  ( <subject> / <issuer> / <certification> )
         <version>            ::= "Version:" "5" CRLF
         <subject>            ::= "Subject:" <id> CRLF
         <issuer>             ::= "Issuer:" <id> CRLF
         <certification>      ::= "Certification:" <encbin> CRLF


(5)  Data Headers (certificate, certification revocation list)

         <certdata>           ::= <certchain> / <crlchain>
         <certchain>          ::= <version> <cert> *( [ <crl> ] <cert> )
         <crlchain>           ::= <version> 1*( <crl> [ <cert> ] )
         <cert>               ::= "Certificate:" <encbin> CRLF
         <crl>                ::= "CRL:" <encbin> CRLF
         <version>            ::= "Version:" "5" CRLF


12.  Security Considerations

    NOTE: to be done


13.  Acknowledgements

David H. Crocker suggested the use of a multipart structure for MIME-PEM
interaction.

14.  References

[1]  David H. Crocker.  Standard for the Format of ARPA Internet Text
     Messages.  RFC 822, University of Delaware, August 1982.

[2]  Nathaniel Borenstein and Ned Freed. MIME (Multipurpose Internet
     Mail Extension) Part One: Mechanisms for Specifying and Describing
     the Format of Internet Message Bodies.  RFC 1521, Bellcore and
     Innosoft, September 1993.  Obsoletes RFC 1341.

[3]  John Linn.  Privacy Enhancement for Internet Electronic Mail: Part
     I: Message Encryption and Authentication Procedures.  RFC 1421,
     February 1993.  Obsoletes RFC 1113.

[4]  Steve Kent.  Privacy Enhancement for Internet Electronic Mail: Part
     II: Certificate-Based Key Management.  RFC 1422, BBN
     Communications, February 1993.





Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 22]

INTERNET DRAFT                PEM and MIME                     July 1994


[5]  David M. Balenson.  Privacy Enhancement for Internet Electronic
     Mail: Part III: Algorithms, Modes, and Identifiers.  RFC 1423,
     Trusted Information Systems, February 1993.

[6]  Burton S. Kaliski.  Privacy Enhancement for Internet Electronic
     Mail: Part IV: Key Certification and Related Services.  RFC 1424,
     RSA Laboratories, February 1993.

[7]  James Galvin, Sandy Murphy, Steve Crocker, and Ned Freed.  Security
     Multiparts for MIME: Multipart/Signed and Multipart/Encrypted.
     RFC XXXX, Trusted Information Systems and Innosoft, XXXX 1994.

15.  Authors' Addresses

    Steve Crocker
    email:  crocker@tis.com

    James M. Galvin
    email:  galvin@tis.com

    Sandra Murphy
    email:  murphy@tis.com

    Trusted Information Systems
    3060 Washington Road
    Glenwood, MD  21738
    Tel:    +1 301 854 6889
    FAX:    +1 301 854 5363



    Ned Freed
    Innosoft International, Inc.
    250 West First Street, Suite 240
    Claremont, CA 91711
    Tel:    +1 909 624 7907
    FAX:    +1 909 621 5319
    email:  ned@innosoft.com












Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 23]

INTERNET DRAFT                PEM and MIME                     July 1994


16.  Appendix: Imported Grammar

The following productions are taken from [3].  The grammar presented in
[3] remains the authoritative source for these productions; they are
repeated here for the convenience of the reader.

    <dekinfo>    ::= "DEK-Info" ":" <dekalgid> [ "," <dekparameters> ] CRLF

    <micinfo>    ::= "MIC-Info" ":" <micalgid> "," <ikalgid> ","
                     <asymsignmic> CRLF

    <encbin>     ::= 1*<encbingrp>
    <encbingrp>  ::= 4*4<encbinchar>
    <encbinchar> ::= ALPHA / DIGIT / "+" / "/" / "="


The following productions are taken from [5].  The grammar presented in
[5] remains the authoritative source for these productions; they are
repeated here for the convenience of the reader.

    <dekalgid>         ::= "DES-CBC"
    <ikalgid>          ::= "DES-EDE" / "DES-ECB" / "RSA"
    <micalgid>         ::= "RSA-MD2" / "RSA-MD5"

    <dekparameters>    ::= <DESCBCparameters>
    <DESCBCparameters> ::= <IV>
    <IV>               ::= <hexchar16>

    <asymsignmic>      ::= <RSAsignmic>
    <RSAsignmic>       ::= <encbin>

    <asymencdek>       ::= <RSAencdek>
    <RSAencdek>        ::= <encbin>

    <hexchar16>        ::= 16*16<hexchar>
    <hexchar>          ::= DIGIT / "A" / "B" / "C" / "D" / "E" / "F"
                                                        ; no lower case


The following productions are taken from [1].  The grammar presented in
[1] remains the authorative source for these productions; they are
repeated here for the convenience of the reader.








Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 24]

INTERNET DRAFT                PEM and MIME                     July 1994


    <addr-spec>     ::= <local-part> "@" <domain>        ; global address

    <local-part>    ::= <word> *( "." <word> )           ; uninterpreted
                                                         ; case-preserved

    <domain>        ::= <sub-domain> *( "." <sub-domain> )

    <sub-domain>    ::= <domain-ref> / <domain-literal>

    <domain-ref>    ::= <atom>                           ; symbolic reference

    <route-addr>    ::= "<" [ <route> ] <addr-spec> ">"

    <route>         ::=  1# ( "@" <domain> ) ":"         ; path-relative



    <word>          ::= <atom> / <quoted-string>

    <quoted-string> ::= """ *( <qtext> / <quoted-pair> ) """

    <qtext>         ::= (any <CHAR> excepting """, "
                         and including <linear-white-space>)

    <quoted-pair>   ::= "

    <linear-white-space> ::= 1*( [ CRLF ] <LWSP-char> )  ; semantics = SPACE
                                                         ; CRLF => folding
    <LWSP-char>     ::= SPACE / HTAB                     ; semantics = SPACE



    <atom>          ::= 1*(any <CHAR> except <specials>, SPACE and <CTL>s)

    <CHAR>          ::= <any ASCII character>

    <CTL>           ::= <any ASCII control character and DEL>

    <specials>      ::=  "(" / ")" / "<" / ">" / "@"     ; Must be in quoted-
                         /  "," / ";" / ":" / "
                         /  "." / "[" / "]"              ;  within a word.









Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 25]

INTERNET DRAFT                PEM and MIME                     July 1994


Table of Contents


1 Status of this Memo .............................................    1
2 Abstract ........................................................    1
3 Introduction ....................................................    2
4 Name Forms and Identifiers ......................................    3
4.1 Name Forms ....................................................    4
4.1.1 Email Addresses .............................................    4
4.1.2 Arbitrary Strings ...........................................    5
4.1.3 Distinguished Names .........................................    5
4.2 Identifiers ...................................................    5
4.2.1 Email Address ...............................................    6
4.2.2 Arbitrary String ............................................    6
4.2.3 Distinguished Name ..........................................    7
4.2.4 PGP Public Key ..............................................    7
4.2.5 Public Key ..................................................    7
4.2.6 Issuer Name and Serial Number ...............................    8
5 Applying PEM Security Services to MIME Body Parts ...............    8
5.1 PEM Processing Steps ..........................................    8
5.2 Use of multipart/signed Content Type ..........................   10
5.3 Use of multipart/encrypted Content Type .......................   11
6 Removing PEM Security Services from PEM Body Parts ..............   12
7 Definition of New Content Types .................................   13
7.1 application/key-request Content Type Definition ...............   13
7.2 application/key-data Content Type Definition ..................   15
8 Examples ........................................................   17
9 Observations ....................................................   17
10 Summary of Changes to PEM Specification ........................   17
11 Collected Grammar ..............................................   19
12 Security Considerations ........................................   22
13 Acknowledgements ...............................................   22
14 References .....................................................   22
15 Authors' Addresses .............................................   23
16 Appendix: Imported Grammar .....................................   24















Crocker/Freed/Galvin/Murphy  Expires: January 1995             [Page 26]

