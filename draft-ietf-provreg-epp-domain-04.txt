





Internet Engineering Task Force                            S. Hollenbeck
Internet-Draft                                            VeriSign, Inc.
January 24, 2002                                  Expires: July 24, 2002

          Extensible Provisioning Protocol Domain Name Mapping
                 <draft-ietf-provreg-epp-domain-04.txt>

Status of this Memo

  This document is an Internet-Draft and is in full conformance with all
  provisions of Section 10 of RFC2026.

  Internet-Drafts are working documents of the Internet Engineering Task
  Force (IETF), its areas, and its working groups.  Note that other
  groups may also distribute working documents as Internet-Drafts.

  Internet-Drafts are draft documents valid for a maximum of six months
  and may be updated, replaced, or obsoleted by other documents at any
  time.  It is inappropriate to use Internet-Drafts as reference
  material or to cite them other than as "work in progress".

  The list of current Internet-Drafts can be accessed at
  http://www.ietf.org/ietf/1id-abstracts.txt

  The list of Internet-Draft Shadow Directories can be accessed at
  http://www.ietf.org/shadow.html.

Abstract

  This document describes an Extensible Provisioning Protocol (EPP)
  mapping for the provisioning and management of Internet domain names
  stored in a shared central repository.  Specified in XML, the mapping
  defines EPP command syntax and semantics as applied to domain names.

Conventions Used In This Document

  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
  "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
  document are to be interpreted as described in [RFC2119].

  In examples, "C:" represents lines sent by a protocol client and "S:"
  represents lines returned by a protocol server.  Indentation and white
  space in examples is provided only to illustrate element relationships
  and is not a REQUIRED feature of this protocol.







Hollenbeck               Expires July 24, 2002                  [Page 1]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


Table of Contents

  1. Introduction .................................................    3
  1.1 Relationship of Domain Objects and Host Objects .............    3
  2. Object Attributes ............................................    4
  2.1 Domain and Host Names .......................................    4
  2.2 Contact and Client Identifiers ..............................    4
  2.3 Status Values ...............................................    4
  2.4 Dates and Times .............................................    6
  2.5 Validity Periods ............................................    6
  2.6 Authorization Information ...................................    6
  3. EPP Command Mapping ..........................................    7
  3.1 EPP Query Commands ..........................................    7
  3.1.1 EPP <check> Command .......................................    7
  3.1.2 EPP <info> Command ........................................    9
  3.1.3 EPP <transfer> Command ....................................   14
  3.2 EPP Transform Commands ......................................   16
  3.2.1 EPP <create> Command ......................................   17
  3.2.2 EPP <delete> Command ......................................   19
  3.2.3 EPP <renew> Command .......................................   21
  3.2.4 EPP <transfer> Command ....................................   22
  3.2.5 EPP <update> Command ......................................   25
  4. Formal Syntax ................................................   29
  5. Internationalization Considerations ..........................   37
  6. IANA Considerations ..........................................   37
  7. Security Considerations ......................................   38
  8. Acknowledgements .............................................   38
  9. References ...................................................   39
  10. Author's Address ............................................   40
  A. Revisions From Previous Version ..............................   41
  B. Full Copyright Statement .....................................   42




















Hollenbeck               Expires July 24, 2002                  [Page 2]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


1. Introduction

  This document describes an Internet domain name mapping for version
  1.0 of the Extensible Provisioning Protocol (EPP).  This mapping is
  specified using the Extensible Markup Language (XML) 1.0 as described
  in [XML] and XML Schema notation as described in [XMLS-1] and [XMLS-
  2].

  [EPP] provides a complete description of EPP command and response
  structures.  A thorough understanding of the base protocol
  specification is necessary to understand the mapping described in this
  document.

  XML is case sensitive.  Unless stated otherwise, XML specifications
  and examples provided in this document MUST be interpreted in the
  character case presented to develop a conforming implementation.

  This document is being discussed on the "ietf-provreg" mailing list.
  To join the list, send a message to <majordomo@cafax.se> with the
  words "subscribe ietf-provreg" in the body of the message.  There is a
  web site for the list archives at http://www.cafax.se/ietf-provreg.

1.1 Relationship of Domain Objects and Host Objects

  This document assumes that domain name objects have a superordinate
  relationship to subordinate host name objects.  For example, domain
  name "example.tld" has a superordinate relationship to host name
  "ns1.example.tld".  EPP actions (such as object transfers) that do not
  preserve this relationship MUST be explicitly disallowed.

  A host name object can be created in a repository for which no
  superordinate domain name object exists.  For example, host name
  "ns1.example.tld2" can be created in the "tld1" repository so that DNS
  domains in "tld1" can be delegated to the host.  Such hosts are
  described as "external" hosts in this specification since the
  management authority for these hosts is external to the repository in
  which the host is being used for delegation purposes.

  External host objects are managed on a per-client basis.  No
  superordinate domain object exists in the repository, thus no single
  client has management authority for the superordinate domain object.
  Per-client management ensures that no single client can create an
  instance of an external host object to the detriment of other clients
  who might need to use the host for DNS delegation purposes.







Hollenbeck               Expires July 24, 2002                  [Page 3]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


2. Object Attributes

  An EPP domain object has attributes and associated values that can be
  viewed and modified by the sponsoring client or the server.  This
  section describes each attribute type in detail.  The formal syntax
  for the attribute values described here can be found in the "Formal
  Syntax" section of this document and in the appropriate normative
  references.

2.1 Domain and Host Names

  The syntax for domain and host names described in this document MUST
  conform to [RFC952] as updated by [RFC1123].  These conformance
  requirements might change as a result of progressing work in
  developing standards for internationalized domain names.  A server MAY
  restrict allowable domain names to a particular top level domain,
  second level domain, or other domain for which the server is
  authoritative.  The trailing dot required when these names are stored
  in a DNS zone is implicit and MUST NOT be provided when exchanging
  host and domain names.

2.2 Contact and Client Identifiers

  All EPP contacts are identified by a server-unique identifier.
  Contact identifiers are character strings with a specified minimum
  length, a specified maximum length, and a specified format.  Contact
  identifiers use the "clIDType" client identifier syntax described in
  [EPP].

2.3 Status Values

  A domain object MUST always have at least one associated status value.
  Status values can be set only by the client that sponsors a domain
  object and by the server on which the object resides.  A client can
  change the status of a domain object using the EPP <update> command.
  Each status value MAY be accompanied by a string of human-readable
  text that describes the rationale for the status applied to the
  object.

  A client MUST NOT alter status values set by the server.  A server MAY
  alter or override status values set by a client subject to local
  server policies.

  Status values that can be added or removed by a client are prefixed
  with "client".  Corresponding status values that can be added or
  removed by a server are prefixed with "server".  Status values that do
  not begin with either "client" or "server" are server-managed.




Hollenbeck               Expires July 24, 2002                  [Page 4]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


  Status Value Descriptions:

  clientDeleteProhibited, serverDeleteProhibited

  Requests to delete the object MUST be rejected.

  clientHold, serverHold

  DNS delegation information MUST NOT be published for the object.

  clientRenewProhibited, serverRenewProhibited

  Requests to renew the object MUST be rejected.

  clientTransferProhibited, serverTransferProhibited

  Requests to transfer the object MUST be rejected.

  clientUpdateProhibited, serverUpdateProhibited

  Requests to update the object (other than to remove this status) MUST
  be rejected.

  inactive

  Delegation information has not been associated with the object.

  ok

  This is the nominal status value for an object that has no pending
  operations or prohibitions.

  pendingDelete

  A delete request has been received for the object, but the object has
  not yet been purged from the server database.

  pendingTransfer

  A transfer request has been received for the object, and completion of
  the request is pending.  Transform commands other than <transfer> MUST
  be rejected while an object is in this state.

  pendingVerification

  A create request has been received for the object, and completion of
  the request is pending.




Hollenbeck               Expires July 24, 2002                  [Page 5]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


  "ok" status MUST NOT be combined with any other status.
  "pendingDelete" status MUST NOT be combined with either
  "clientDeleteProhibited" or "serverDeleteProhibited" status.
  "pendingTransfer" status MUST NOT be combined with either
  "clientTransferProhibited" or "serverTransferProhibited" status.  All
  other status value combinations are valid.

2.4 Dates and Times

  Date and time attribute values MUST be represented in Universal
  Coordinated Time (UTC) using the Gregorian calendar. The extended
  date-time form defined in [DATE-TIME] MUST be used to represent date-
  time values as XML Schema does not support truncated date-time forms.

2.5 Validity Periods

  A domain name object MAY have a specified validity period.  If server
  policy supports domain object validity periods, the validity period is
  defined when a domain object is created, and it MAY be extended by the
  EPP <renew> or <transfer> commands.  As a matter of server policy,
  this specification does not define actions to be taken upon expiration
  of a domain object's validity period.

  Validity periods are measured in years or months with the appropriate
  units specified using the "unit" attribute.  Valid values for the
  "unit" attribute are "y" for years and "m" for months.  The minimum
  allowable period value is one decimal (1).  The maximum allowable
  value is ninety-nine decimal (99).  A server MAY support a lower
  maximum value.

2.6 Authorization Information

  Authorization information is associated with domain objects to
  facilitate transfer operations.  Authorization information is assigned
  when a domain object is created, and it might be updated in the
  future.  This specification describes password-based authorization
  information, though other mechanisms are possible.














Hollenbeck               Expires July 24, 2002                  [Page 6]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


3. EPP Command Mapping

  A detailed description of the EPP syntax and semantics can be found in
  [EPP].  The command mappings described here are specifically for use
  in provisioning and managing Internet domain names via EPP.

3.1 EPP Query Commands

  EPP provides three commands to retrieve domain information: <check> to
  determine if a domain object can be provisioned within a repository,
  <info> to retrieve detailed information associated with a domain
  object, and <transfer> to retrieve domain object transfer status
  information.

3.1.1 EPP <check> Command

  The EPP <check> command is used to determine if an object can be
  provisioned within a repository.  It provides a hint that allows a
  client to anticipate the success or failure of provisioning an object
  using the <create> command.  Object availability and provisioning
  conditions are a matter of server policy.

  In addition to the standard EPP command elements, the <check> command
  MUST contain a <domain:check> element that identifies the domain
  namespace and the location of the domain schema.  The <domain:check>
  element contains the following child elements:

  - One or more <domain:name> elements that contain the fully qualified
  names of the domain objects to be queried.






















Hollenbeck               Expires July 24, 2002                  [Page 7]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002



  Example <check> command:

  C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  C:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  C:     epp-1.0.xsd">
  C:  <command>
  C:    <check>
  C:      <domain:check
  C:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  C:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  C:       domain-1.0.xsd">
  C:        <domain:name>example1.tld</domain:name>
  C:        <domain:name>example2.tld</domain:name>
  C:        <domain:name>example3.tld</domain:name>
  C:      </domain:check>
  C:    </check>
  C:    <clTRID>ABC-12345</clTRID>
  C:  </command>
  C:</epp>

  When a <check> command has been processed successfully, the EPP
  <resData> element MUST contain a child <domain:chkData> element that
  identifies the domain namespace and the location of the domain schema.
  The <domain:chkData> element contains one or more <domain:cd> elements
  that contain the following child elements:

  - A <domain:name> element that contains the fully qualified name of
  the queried domain object.  This element MUST contain an "avail"
  attribute whose value indicates object availability at the moment the
  <check> command was completed.  A value of "1" or "true" means that
  the object is available.  A value of "0" or "false" means that the
  object is not available.

  - An OPTIONAL <domain:reason> element that MAY be provided when an
  object is not available for provisioning.  If present, this element
  contains server-specific text to help explain why the object is
  unavailable.  This text MUST be represented in the response language
  previously negotiated with the client; an OPTIONAL "lang" attribute
  MAY be present to identify the language if the negotiated value is
  something other than the default value of "en" (English).








Hollenbeck               Expires July 24, 2002                  [Page 8]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002



  Example <check> response:

  S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  S:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  S:     epp-1.0.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <domain:chkData
  S:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  S:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  S:       domain-1.0.xsd">
  S:        <domain:cd>
  S:          <domain:name avail="1">example1.tld</domain:name>
  S:        </domain:cd>
  S:        <domain:cd>
  S:          <domain:name avail="0">example2.tld</domain:name>
  S:          <domain:reason>In use</domain:reason>
  S:        </domain:cd>
  S:        <domain:cd>
  S:          <domain:name avail="1">example3.tld</domain:name>
  S:        </domain:cd>
  S:      </domain:chkData>
  S:    </resData>
  S:    <trID>
  S:      <clTRID>ABC-12345</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <check> command can not be
  processed for any reason.

3.1.2 EPP <info> Command

  The EPP <info> command is used to retrieve information associated with
  a domain object.  The response to this command MAY vary depending on
  the identity of the querying client, use of authorization information,
  and server policy towards unauthorized clients.  If the querying
  client is the sponsoring client, all available information MUST be
  returned.  If the querying client is not the sponsoring client, but
  the client provides valid authorization information, all available



Hollenbeck               Expires July 24, 2002                  [Page 9]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


  information MUST be returned.  If the querying client is not the
  sponsoring client, and the client does not provide valid authorization
  information, server policy determines which OPTIONAL elements are
  returned.

  In addition to the standard EPP command elements, the <info> command
  MUST contain a <domain:info> element that identifies the domain
  namespace and the location of the domain schema.  The <domain:info>
  element contains the following child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object to be queried.  An OPTIONAL "hosts" attribute is
  available to control return of information describing hosts related to
  the domain object.  A value of "all" (the default, which MAY be
  absent) returns information describing both subordinate and delegated
  hosts.  A value of "del" returns information describing only delegated
  hosts.  A value of "sub" returns information describing only
  subordinate hosts.  A value of "none" returns no information
  describing delegated or subordinate hosts.

  - An OPTIONAL <domain:authInfo> element that contains authorization
  information associated with the domain object or authorization
  information associated with the domain object's registrant or
  associated contacts.

  Example <info> command without authorization information:

  C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  C:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  C:     epp-1.0.xsd">
  C:  <command>
  C:    <info>
  C:      <domain:info
  C:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  C:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  C:       domain-1.0.xsd">
  C:        <domain:name hosts="all">example.tld</domain:name>
  C:      </domain:info>
  C:    </info>
  C:    <clTRID>ABC-12345</clTRID>
  C:  </command>
  C:</epp>

  Example <info> command with authorization information:





Hollenbeck               Expires July 24, 2002                 [Page 10]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002



  C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  C:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  C:     epp-1.0.xsd">
  C:  <command>
  C:    <info>
  C:      <domain:info
  C:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  C:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  C:       domain-1.0.xsd">
  C:        <domain:name hosts="all">example.tld</domain:name>
  C:        <domain:authInfo type="pw">2fooBAR</domain:authInfo>
  C:      </domain:info>
  C:    </info>
  C:    <clTRID>ABC-12345</clTRID>
  C:  </command>
  C:</epp>

  When an <info> command has been processed successfully, the EPP
  <resData> element MUST contain a child <domain:infData> element that
  identifies the domain namespace and the location of the domain schema.
  Elements that are not OPTIONAL MUST be returned; OPTIONAL elements are
  returned based on client authorization and server policy.  The
  <domain:infData> element contains the following child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object.

  - A <domain:roid> element that contains the Repository Object
  IDentifier assigned to the domain object when the object was created.

  - One or more OPTIONAL <domain:status> elements that contain the
  current status descriptors associated with the domain.

  - If supported by the server, one OPTIONAL <domain:registrant> element
  and one or more OPTIONAL <domain:contact> elements that contain
  identifiers for the human or organizational social information objects
  associated with the domain object.

  - Zero or more OPTIONAL <domain:ns> elements that contain the fully
  qualified names of the delegated host objects (name servers)
  associated with the domain object.

  - Zero or more OPTIONAL <domain:host> elements that contain the fully
  qualified names of the subordinate host objects that exist under this
  superordinate domain object.



Hollenbeck               Expires July 24, 2002                 [Page 11]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


  - A <domain:clID> element that contains the identifier of the
  sponsoring client.

  - An OPTIONAL <domain:crID> element that contains the identifier of
  the client that created the domain object.

  - An OPTIONAL <domain:crDate> element that contains the date and time
  of domain object creation.

  - An OPTIONAL <domain:exDate> element that contains the date and time
  identifying the end of the domain object's registration period.

  - An OPTIONAL <domain:upID> element that contains the identifier of
  the client that last updated the domain object.  This element MUST NOT
  be present if the domain has never been modified.

  - An OPTIONAL <domain:upDate> element that contains the date and time
  of the most recent domain object modification.  This element MUST NOT
  be present if the domain object has never been modified.

  - An OPTIONAL <domain:trDate> elements that contains the date and time
  of the most recent successful domain object transfer.  This element
  MUST NOT be provided if the domain object has never been transferred.

  - An OPTIONAL <domain:authInfo> element that contains authorization
  information associated with the domain object.  This element MUST only
  be returned if the querying client is the current sponsoring client,
  or if the client supplied valid authorization information with the
  command.






















Hollenbeck               Expires July 24, 2002                 [Page 12]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002



  Example <info> response for an authorized client:

  S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  S:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  S:     epp-1.0.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <domain:infData
  S:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  S:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  S:       domain-1.0.xsd">
  S:        <domain:name>example.tld</domain:name>
  S:        <domain:roid>EXAMPLE1-REP</domain:roid>
  S:        <domain:status s="ok"/>
  S:        <domain:registrant>jd1234</domain:registrant>
  S:        <domain:contact type="admin">sh8013</domain:contact>
  S:        <domain:contact type="tech">sh8013</domain:contact>
  S:        <domain:ns>ns1.example.tld</domain:ns>
  S:        <domain:ns>ns1.example2.tld</domain:ns>
  S:        <domain:host>ns1.example.tld</domain:host>
  S:        <domain:host>ns2.example.tld</domain:host>
  S:        <domain:clID>ClientX</domain:clID>
  S:        <domain:crID>ClientY</domain:crID>
  S:        <domain:crDate>1999-04-03T22:00:00.0Z</domain:crDate>
  S:        <domain:upID>ClientX</domain:upID>
  S:        <domain:upDate>1999-12-03T09:00:00.0Z</domain:upDate>
  S:        <domain:exDate>2005-04-03T22:00:00.0Z</domain:exDate>
  S:        <domain:trDate>2000-04-08T09:00:00.0Z</domain:trDate>
  S:        <domain:authInfo type="pw">2fooBAR</domain:authInfo>
  S:      </domain:infData>
  S:    </resData>
  S:    <trID>
  S:      <clTRID>ABC-12345</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  A server with a different information return policy MAY provide less
  information in a response.





Hollenbeck               Expires July 24, 2002                 [Page 13]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002



  Example <info> response for an unauthorized client:

  S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  S:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  S:     epp-1.0.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <domain:infData
  S:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  S:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  S:       domain-1.0.xsd">
  S:        <domain:name>example.tld</domain:name>
  S:        <domain:roid>EXAMPLE1-REP</domain:roid>
  S:        <domain:clID>ClientX</domain:clID>
  S:      </domain:infData>
  S:    </resData>
  S:    <trID>
  S:      <clTRID>ABC-12345</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if an <info> command can not be
  processed for any reason.

3.1.3 EPP <transfer> Command

  The EPP <transfer> command provides a query operation that allows a
  client to determine real-time status of pending and completed transfer
  requests.  In addition to the standard EPP command elements, the
  <transfer> command MUST contain an "op" attribute with value "query",
  and a <domain:transfer> element that identifies the domain namespace
  and the location of the domain schema.  The <domain:transfer> element
  contains the following child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object to be queried.

  - A <domain:authInfo> element that contains authorization information
  associated with the domain object or authorization information
  associated with the domain object's registrant or associated contacts.



Hollenbeck               Expires July 24, 2002                 [Page 14]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002



  Example <transfer> query command:

  C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  C:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  C:     epp-1.0.xsd">
  C:  <command>
  C:    <transfer op="query">
  C:      <domain:transfer
  C:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  C:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  C:       domain-1.0.xsd">
  C:        <domain:name>example.tld</domain:name>
  C:        <domain:authInfo type="pw" roid="JD1234-REP">2fooBAR
  C:        </domain:authInfo>
  C:      </domain:transfer>
  C:    </transfer>
  C:    <clTRID>ABC-12345</clTRID>
  C:  </command>
  C:</epp>

  When a <transfer> query command has been processed successfully, the
  EPP <resData> element MUST contain a child <domain:trnData> element
  that identifies the domain namespace and the location of the domain
  schema. The <domain:trnData> element contains the following child
  elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object.

  - A <domain:trStatus> element that contains the state of the most
  recent transfer request.

  - A <domain:reID> element that contains the identifier of the client
  that requested the object transfer.

  - A <domain:reDate> element that contains the date and time that the
  transfer was requested.

  - A <domain:acID> element that contains the identifier of the client
  that SHOULD act upon the transfer request.

  - A <domain:acDate> element that contains the date and time of a
  required or completed response.  For a PENDING request, the value
  identifies the date and time by which a response is required before an
  automated response action will be taken by the server.  For all other



Hollenbeck               Expires July 24, 2002                 [Page 15]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


  status types, the value identifies the date and time when the request
  was completed.

  - An OPTIONAL <domain:exDate> element that contains the end of the
  domain object's validity period if the <transfer> command caused or
  causes a change in the validity period.

  Example <transfer> query response:

  S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  S:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  S:     epp-1.0.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <domain:trnData
  S:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  S:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  S:       domain-1.0.xsd">
  S:        <domain:name>example.tld</domain:name>
  S:        <domain:trStatus>pending</domain:trStatus>
  S:        <domain:reID>ClientX</domain:reID>
  S:        <domain:reDate>2000-06-06T22:00:00.0Z</domain:reDate>
  S:        <domain:acID>ClientY</domain:acID>
  S:        <domain:acDate>2000-06-11T22:00:00.0Z</domain:acDate>
  S:        <domain:exDate>2002-09-08T22:00:00.0Z</domain:exDate>
  S:      </domain:trnData>
  S:    </resData>
  S:    <trID>
  S:      <clTRID>ABC-12345</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <transfer> query command
  can not be processed for any reason.

3.2 EPP Transform Commands

  EPP provides five commands to transform domain objects: <create> to
  create an instance of a domain object, <delete> to delete an instance
  of a domain object, <renew> to extend the validity period of a domain
  object, <transfer> to manage domain object sponsorship changes, and



Hollenbeck               Expires July 24, 2002                 [Page 16]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


  <update> to change information associated with a domain object.

3.2.1 EPP <create> Command

  The EPP <create> command provides a transform operation that allows a
  client to create a domain object.  In addition to the standard EPP
  command elements, the <create> command MUST contain a <domain:create>
  element that identifies the domain namespace and the location of the
  domain schema.  The <domain:create> element contains the following
  child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object to be created.

  - An OPTIONAL <domain:period> element that contains the initial
  registration period of the domain object.  A server MAY define a
  default initial registration period if not specified by the client.

  - Zero or more <domain:ns> elements that contain the fully qualified
  name of a known host object to provide resolution services for the
  domain.  A host object MUST be known to the server before the host
  object can be associated with a domain object.  A server MUST provide
  host object services to provide domain name services.  The EPP mapping
  for host objects is described in [EPP-H].

  - An OPTIONAL <domain:registrant> element that contains the identifier
  for the human or organizational social information (contact) object to
  be associated with the domain object as the object registrant.  This
  object identifier MUST be known to the server before the contact
  object can be associated with the domain object.  The EPP mapping for
  contact objects is described in [EPP-C].

  - Zero or more OPTIONAL <domain:contact> elements that contain the
  identifiers for other contact objects to be associated with the domain
  object.  Contact object identifiers MUST be known to the server before
  the contact object can be associated with the domain object.

  - A <domain:authInfo> element that contains authorization information
  to be associated with the domain object.












Hollenbeck               Expires July 24, 2002                 [Page 17]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002



  Example <create> command:

  C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  C:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  C:     epp-1.0.xsd">
  C:  <command>
  C:    <create>
  C:      <domain:create
  C:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  C:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  C:       domain-1.0.xsd">
  C:        <domain:name>example.tld</domain:name>
  C:        <domain:period unit="y">2</domain:period>
  C:        <domain:ns>ns1.example.tld</domain:ns>
  C:        <domain:ns>ns1.example2.tld</domain:ns>
  C:        <domain:registrant>jd1234</domain:registrant>
  C:        <domain:contact type="admin">sh8013</domain:contact>
  C:        <domain:contact type="tech">sh8013</domain:contact>
  C:        <domain:authInfo type="pw">2fooBAR</domain:authInfo>
  C:      </domain:create>
  C:    </create>
  C:    <clTRID>ABC-12345</clTRID>
  C:  </command>
  C:</epp>

  When a <create> command has been processed successfully, the EPP
  <resData> element MUST contain a child <domain:creData> element that
  identifies the domain namespace and the location of the domain schema.
  The <domain:creData> element contains the following child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object.

  - A <domain:crDate> element that contains the date and time of domain
  object creation.

  - An OPTIONAL <domain:exDate> element that contains the date and time
  identifying the end of the domain object's registration period.










Hollenbeck               Expires July 24, 2002                 [Page 18]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002



  Example <create> response:

  S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  S:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  S:     epp-1.0.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <domain:creData
  S:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  S:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  S:       domain-1.0.xsd">
  S:        <domain:name>example.tld</domain:name>
  S:        <domain:crDate>1999-04-03T22:00:00.0Z</domain:crDate>
  S:        <domain:exDate>2001-04-03T22:00:00.0Z</domain:exDate>
  S:      </domain:creData>
  S:    </resData>
  S:    <trID>
  S:      <clTRID>ABC-12345</clTRID>
  S:      <svTRID>54321-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <create> command can not
  be processed for any reason.

3.2.2 EPP <delete> Command

  The EPP <delete> command provides a transform operation that allows a
  client to delete a domain object.  In addition to the standard EPP
  command elements, the <delete> command MUST contain a <domain:delete>
  element that identifies the domain namespace and the location of the
  domain schema.  The <domain:delete> element contains the following
  child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object to be deleted.

  A domain object SHOULD NOT be deleted if subordinate host objects are
  associated with the domain object.  For example, if domain
  "example.tld" exists, and host object "ns1.example.tld" also exists,
  then domain "example.tld" SHOULD NOT be deleted until host



Hollenbeck               Expires July 24, 2002                 [Page 19]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


  "ns1.example.tld" has been either deleted or renamed to exist in a
  different superordinate domain.  A server SHOULD notify clients of
  object relationships when a <delete> command is attempted and fails
  due to existing object relationships.

  Example <delete> command:

  C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  C:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  C:     epp-1.0.xsd">
  C:  <command>
  C:    <delete>
  C:      <domain:delete
  C:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  C:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  C:       domain-1.0.xsd">
  C:        <domain:name>example.tld</domain:name>
  C:      </domain:delete>
  C:    </delete>
  C:    <clTRID>ABC-12345</clTRID>
  C:  </command>
  C:</epp>

  When a <delete> command has been processed successfully, a server MUST
  respond with an EPP response with no <resData> element.

  Example <delete> response:

  S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  S:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  S:     epp-1.0.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <trID>
  S:      <clTRID>ABC-12345</clTRID>
  S:      <svTRID>54321-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <delete> command can not
  be processed for any reason.



Hollenbeck               Expires July 24, 2002                 [Page 20]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


3.2.3 EPP <renew> Command

  The EPP <renew> command provides a transform operation that allows a
  client to extend the validity period of a domain object.  In addition
  to the standard EPP command elements, the <renew> command MUST contain
  a <domain:renew> element that identifies the domain namespace and the
  location of the domain schema.  The <domain:renew> element contains
  the following child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object whose validity period is to be extended.

  - A <domain:curExpDate> element that contains the date on which the
  current validity period ends.  This value ensures that repeated
  <renew> commands do not result in multiple unanticipated successful
  renewals.

  - An OPTIONAL <domain:period> element that contains the number of
  units to be added to the registration period of the domain object.
  The number of units available MAY be subject to limits imposed by the
  server.

  Example <renew> command:

  C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  C:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  C:     epp-1.0.xsd">
  C:  <command>
  C:    <renew>
  C:      <domain:renew
  C:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  C:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  C:       domain-1.0.xsd">
  C:        <domain:name>example.tld</domain:name>
  C:        <domain:curExpDate>2000-04-03</domain:curExpDate>
  C:        <domain:period unit="y">5</domain:period>
  C:      </domain:renew>
  C:    </renew>
  C:    <clTRID>ABC-12345</clTRID>
  C:  </command>
  C:</epp>

  When a <renew> command has been processed successfully, the EPP
  <resData> element MUST contain a child <domain:renData> element that
  identifies the domain namespace and the location of the domain schema.
  The <domain:renData> element contains the following child elements:



Hollenbeck               Expires July 24, 2002                 [Page 21]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


  - A <domain:name> element that contains the fully qualified name of
  the domain object.

  - An OPTIONAL <domain:exDate> element that contains the date and time
  identifying the end of the domain object's registration period.

  Example <renew> response:

  S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  S:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  S:     epp-1.0.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <domain:renData
  S:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  S:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  S:       domain-1.0.xsd">
  S:        <domain:name>example.tld</domain:name>
  S:        <domain:exDate>2005-04-03T22:00:00.0Z</domain:exDate>
  S:      </domain:renData>
  S:    </resData>
  S:    <trID>
  S:      <clTRID>ABC-12345</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <renew> command can not be
  processed for any reason.

3.2.4 EPP <transfer> Command

  The EPP <transfer> command provides a transform operation that allows
  a client to manage requests to transfer the sponsorship of a domain
  object.  In addition to the standard EPP command elements, the
  <transfer> command MUST contain a <domain:transfer> element that
  identifies the domain namespace and the location of the domain schema.
  The <domain:transfer> element contains the following child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object for which a transfer request is to be created,
  approved, rejected, or cancelled.



Hollenbeck               Expires July 24, 2002                 [Page 22]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


  - An OPTIONAL <domain:period> element that contains the number of
  units to be added to the registration period of the domain object at
  completion of the transfer process.  This element can only be used
  when a transfer is requested, and it MUST be ignored if used
  otherwise.  The number of units available MAY be subject to limits
  imposed by the server.

  - A <domain:authInfo> element that contains authorization information
  associated with the domain object or authorization information
  associated with the domain object's registrant or associated contacts.

  Every EPP <transfer> command MUST contain an "op" attribute that
  identifies the transfer operation to be performed.  Valid values,
  definitions, and authorizations for all attribute values are defined
  in [EPP].

  Transfer of a domain object MUST implicitly transfer all host objects
  that are subordinate to the domain object.  For example, if domain
  object "example.tld" is transferred and host object "ns1.example.tld"
  exists, the host object MUST be transferred as part of the
  "example.tld" transfer process.  Host objects that are subject to
  transfer when transferring a domain object are listed in the response
  to an EPP <info> command performed on the domain object.

  DNS domains can be delegated to external hosts.  If a domain has been
  delegated to an external host, a client MUST have created a host
  object for each delegation to an external host before requesting a
  domain transfer.  A transfer request or approval MUST fail with EPP
  error code 2305 if host objects representing the external hosts are
  not managed by the requesting client at the time a transfer request is
  made and at the time the transfer request is approved.




















Hollenbeck               Expires July 24, 2002                 [Page 23]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002



  Example <transfer> request command:

  C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  C:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  C:     epp-1.0.xsd">
  C:  <command>
  C:    <transfer op="request">
  C:      <domain:transfer
  C:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  C:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  C:       domain-1.0.xsd">
  C:        <domain:name>example.tld</domain:name>
  C:        <domain:period unit="y">1</domain:period>
  C:        <domain:authInfo type="pw" roid="JD1234-REP">2fooBAR
  C:        </domain:authInfo>
  C:      </domain:transfer>
  C:    </transfer>
  C:    <clTRID>ABC-12345</clTRID>
  C:  </command>
  C:</epp>

  When a <transfer> command has been processed successfully, the EPP
  <resData> element MUST contain a child <domain:trnData> element that
  identifies the domain namespace and the location of the domain schema.
  The <domain:trnData> element contains the same child elements defined
  for a transfer query response.






















Hollenbeck               Expires July 24, 2002                 [Page 24]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002



  Example <transfer> response:

  S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  S:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  S:     epp-1.0.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <domain:trnData
  S:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  S:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  S:       domain-1.0.xsd">
  S:        <domain:name>example.tld</domain:name>
  S:        <domain:trStatus>pending</domain:trStatus>
  S:        <domain:reID>ClientX</domain:reID>
  S:        <domain:reDate>2000-06-08T22:00:00.0Z</domain:reDate>
  S:        <domain:acID>ClientY</domain:acID>
  S:        <domain:acDate>2000-06-13T22:00:00.0Z</domain:acDate>
  S:        <domain:exDate>2002-09-08T22:00:00.0Z</domain:exDate>
  S:      </domain:trnData>
  S:    </resData>
  S:    <trID>
  S:      <clTRID>ABC-12345</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <transfer> command can not
  be processed for any reason.

3.2.5 EPP <update> Command

  The EPP <update> command provides a transform operation that allows a
  client to modify the attributes of a domain object.  In addition to
  the standard EPP command elements, the <update> command MUST contain a
  <domain:update> element that identifies the domain namespace and the
  location of the domain schema. The <domain:update> element contains
  the following child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object to be updated.




Hollenbeck               Expires July 24, 2002                 [Page 25]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


  - An OPTIONAL <domain:add> element that contains attribute values to
  be added to the object.

  - An OPTIONAL <domain:rem> element that contains attribute values to
  be removed from the object.

  - An OPTIONAL <domain:chg> element that contains object attribute
  values to be changed.

  At least one <domain:add>, <domain:rem>, or <domain:chg> element MUST
  be provided.  The <domain:add> and <domain:rem> elements contain the
  following child elements:

  - Zero or more <domain:ns> elements that contain the fully qualified
  name of a known name server host object.  A host object MUST be known
  to the server before a name server attribute can be added or removed
  from a domain object.  The EPP mapping for host objects is described
  in [EPP-H].

  - Zero or more <domain:contact> elements that contain the identifiers
  for contact objects to be associated with or removed from the domain
  object.  Contact object identifiers MUST be known to the server before
  the contact object can be associated with the domain object.

  - Zero or more <domain:status> elements that contain status values to
  be applied to or removed from the object.  When specifying a value to
  be removed, only the attribute value is significant; element text is
  not required to match a value for removal.

  A <domain:chg> element contains the following child elements:

  - A <domain:registrant> element that contains the identifier for the
  human or organizational social information (contact) object to be
  associated with the domain object as the object registrant.  This
  object identifier MUST be known to the server before the contact
  object can be associated with the domain object.

  - A <domain:authInfo> element that contains authorization information
  associated with the domain object.












Hollenbeck               Expires July 24, 2002                 [Page 26]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002



  Example <update> command:

  C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  C:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  C:     epp-1.0.xsd">
  C:  <command>
  C:    <update>
  C:      <domain:update
  C:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
  C:       xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
  C:       domain-1.0.xsd">
  C:        <domain:name>example.tld</domain:name>
  C:        <domain:add>
  C:          <domain:ns>ns2.example2.tld</domain:ns>
  C:          <domain:contact type="tech">mak21</domain:contact>
  C:          <domain:status s="clientHold" lang="en">Payment overdue.
  C:          </domain:status>
  C:        </domain:add>
  C:        <domain:rem>
  C:          <domain:ns>ns1.example2.tld</domain:ns>
  C:          <domain:contact type="tech">sh8013</domain:contact>
  C:          <domain:status s="clientUpdateProhibited"/>
  C:        </domain:rem>
  C:        <domain:chg>
  C:          <domain:registrant>sh8013</domain:registrant>
  C:          <domain:authInfo type="pw">2BARfoo</domain:authInfo>
  C:        </domain:chg>
  C:      </domain:update>
  C:    </update>
  C:    <clTRID>ABC-12345</clTRID>
  C:  </command>
  C:</epp>

  When an <update> command has been processed successfully, a server
  MUST respond with an EPP response with no <resData> element.













Hollenbeck               Expires July 24, 2002                 [Page 27]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002



  Example <update> response:

  S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
  S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
  S:     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
  S:     epp-1.0.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <trID>
  S:      <clTRID>ABC-12345</clTRID>
  S:      <svTRID>54321-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if an <update> command can not
  be processed for any reason.






























Hollenbeck               Expires July 24, 2002                 [Page 28]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


4. Formal Syntax

  An EPP object mapping is specified in XML Schema notation.  The formal
  syntax presented here is a complete schema representation of the
  object mapping suitable for automated validation of EPP XML instances.
  The BEGIN and END tags are not part of the schema; they are used to
  note the beginning and ending of the schema for URI registration
  purposes.

  BEGIN
  <?xml version="1.0" encoding="UTF-8"?>

  <schema targetNamespace="urn:ietf:params:xml:ns:domain-1.0"
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
          xmlns:epp="urn:ietf:params:xml:ns:epp-1.0"
          xmlns:eppcom="urn:ietf:params:xml:ns:eppcom-1.0"
          xmlns="http://www.w3.org/2001/XMLSchema"
          elementFormDefault="qualified">

  <!--
  Import common element types.
  -->
    <import namespace="urn:ietf:params:xml:ns:eppcom-1.0"
            schemaLocation="eppcom-1.0.xsd"/>
    <import namespace="urn:ietf:params:xml:ns:epp-1.0"
            schemaLocation="epp-1.0.xsd"/>

    <annotation>
      <documentation>
        Extensible Provisioning Protocol v1.0
        domain provisioning schema.
      </documentation>
    </annotation>

  <!--
  Child elements found in EPP commands.
  -->
    <element name="check" type="domain:mNameType"/>
    <element name="create" type="domain:createType"/>
    <element name="delete" type="domain:sNameType"/>
    <element name="info" type="domain:infoType"/>
    <element name="renew" type="domain:renewType"/>
    <element name="transfer" type="domain:transferType"/>
    <element name="update" type="domain:updateType"/>

  <!--
  Child elements of the <create> command.
  -->



Hollenbeck               Expires July 24, 2002                 [Page 29]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


    <complexType name="createType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="period" type="domain:periodType"
         minOccurs="0"/>
        <element name="ns" type="eppcom:labelType"
         minOccurs="0" maxOccurs="unbounded"/>
        <element name="registrant" type="eppcom:clIDType"
         minOccurs="0"/>
        <element name="contact" type="domain:contactType"
         minOccurs="0" maxOccurs="unbounded"/>
        <element name="authInfo" type="eppcom:authInfoType"/>
      </sequence>
    </complexType>

    <complexType name="periodType">
      <simpleContent>
        <extension base="domain:pLimitType">
          <attribute name="unit" type="domain:pUnitType"
           use="required"/>
        </extension>
      </simpleContent>
    </complexType>

    <simpleType name="pLimitType">
      <restriction base="unsignedShort">
        <minInclusive value="1"/>
        <maxInclusive value="99"/>
      </restriction>
    </simpleType>

    <simpleType name="pUnitType">
      <restriction base="token">
        <enumeration value="y"/>
        <enumeration value="m"/>
      </restriction>
    </simpleType>

    <complexType name="contactType">
      <simpleContent>
        <extension base="eppcom:clIDType">
          <attribute name="type" type="domain:contactAttrType"/>
        </extension>
      </simpleContent>
    </complexType>

    <simpleType name="contactAttrType">
      <restriction base="token">



Hollenbeck               Expires July 24, 2002                 [Page 30]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


        <enumeration value="admin"/>
        <enumeration value="billing"/>
        <enumeration value="tech"/>
      </restriction>
    </simpleType>

  <!--
  Child element of commands that require a single name.
  -->
    <complexType name="sNameType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
      </sequence>
    </complexType>

  <!--
  Child element of commands that accept multiple names.
  -->
    <complexType name="mNameType">
      <sequence>
        <element name="name" type="eppcom:labelType"
         maxOccurs="unbounded"/>
      </sequence>
    </complexType>

  <!--
  Child elements of the <info> command.
  -->
    <complexType name="infoType">
      <sequence>
        <element name="name" type="domain:infoNameType"/>
        <element name="authInfo" type="eppcom:authInfoType"
         minOccurs="0"/>
      </sequence>
    </complexType>

    <complexType name="infoNameType">
      <simpleContent>
        <extension base = "eppcom:labelType">
          <attribute name="hosts" type="domain:hostsType"
           default="all"/>
        </extension>
      </simpleContent>
    </complexType>

    <simpleType name="hostsType">
      <restriction base="token">
        <enumeration value="all"/>



Hollenbeck               Expires July 24, 2002                 [Page 31]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


        <enumeration value="del"/>
        <enumeration value="none"/>
        <enumeration value="sub"/>
      </restriction>
    </simpleType>

  <!--
  Child elements of the <renew> command.
  -->
    <complexType name="renewType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="curExpDate" type="date"/>
        <element name="period" type="domain:periodType"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  Child elements of the <transfer> command.
  -->
    <complexType name="transferType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="period" type="domain:periodType"
         minOccurs="0"/>
        <element name="authInfo" type="eppcom:authInfoType"/>
      </sequence>
    </complexType>

  <!--
  Child elements of the <update> command.
  -->
    <complexType name="updateType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="add" type="domain:addRemType"
         minOccurs="0"/>
        <element name="rem" type="domain:addRemType"
         minOccurs="0"/>
        <element name="chg" type="domain:chgType"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  Data elements that can be added or removed.
  -->



Hollenbeck               Expires July 24, 2002                 [Page 32]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


    <complexType name="addRemType">
      <sequence>
        <element name="ns" type="eppcom:labelType"
         minOccurs="0" maxOccurs="unbounded"/>
        <element name="contact" type="domain:contactType"
         minOccurs="0" maxOccurs="unbounded"/>
        <element name="status" type="domain:statusType"
         minOccurs="0" maxOccurs="14"/>
      </sequence>
    </complexType>

  <!--
  Data elements that can be changed.
  -->
    <complexType name="chgType">
      <sequence>
        <element name="registrant" type="eppcom:clIDType"
         minOccurs="0"/>
        <element name="authInfo" type="eppcom:authInfoType"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  Child response elements.
  -->
    <element name="chkData" type="domain:chkDataType"/>
    <element name="creData" type="domain:creDataType"/>
    <element name="infData" type="domain:infDataType"/>
    <element name="renData" type="domain:renDataType"/>
    <element name="trnData" type="domain:trnDataType"/>

  <!--
  <check> response elements.
  -->
    <complexType name="chkDataType">
      <sequence>
        <element name="cd" type="domain:checkType"
         maxOccurs="unbounded"/>
      </sequence>
    </complexType>

    <complexType name="checkType">
      <sequence>
        <element name="name" type="domain:checkNameType"/>
        <element name="reason" type="eppcom:reasonType"
         minOccurs="0"/>
      </sequence>



Hollenbeck               Expires July 24, 2002                 [Page 33]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


    </complexType>

    <complexType name="checkNameType">
      <simpleContent>
        <extension base="eppcom:labelType">
          <attribute name="avail" type="boolean"
           use="required"/>
        </extension>
      </simpleContent>
    </complexType>

  <!--
  <create> response elements.
  -->
    <complexType name="creDataType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="crDate" type="dateTime"/>
        <element name="exDate" type="dateTime"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  <info> response elements.
  -->
    <complexType name="infDataType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="roid" type="eppcom:roidType"/>
        <element name="status" type="domain:statusType"
         minOccurs="0" maxOccurs="14"/>
        <element name="registrant" type="domain:contactType"
         minOccurs="0"/>
        <element name="contact" type="domain:contactType"
         minOccurs="0" maxOccurs="unbounded"/>
        <element name="ns" type="eppcom:labelType"
         minOccurs="0" maxOccurs="unbounded"/>
        <element name="host" type="eppcom:labelType"
         minOccurs="0" maxOccurs="unbounded"/>
        <element name="clID" type="eppcom:clIDType"/>
        <element name="crID" type="eppcom:clIDType"
         minOccurs="0"/>
        <element name="crDate" type="dateTime"
         minOccurs="0"/>
        <element name="upID" type="eppcom:clIDType"
         minOccurs="0"/>
        <element name="upDate" type="dateTime"



Hollenbeck               Expires July 24, 2002                 [Page 34]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


         minOccurs="0"/>
        <element name="exDate" type="dateTime"
         minOccurs="0"/>
        <element name="trDate" type="dateTime"
         minOccurs="0"/>
        <element name="authInfo" type="eppcom:authInfoType"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  Status is a combination of attributes and an optional human-readable
  message that may be expressed in languages other than English.
  -->
    <complexType name="statusType">
      <simpleContent>
        <extension base="normalizedString">
          <attribute name="s" type="domain:statusValueType"
           use="required"/>
          <attribute name="lang" type="language"
           default="en"/>
        </extension>
      </simpleContent>
    </complexType>

    <simpleType name="statusValueType">
      <restriction base="token">
        <enumeration value="clientDeleteProhibited"/>
        <enumeration value="clientHold"/>
        <enumeration value="clientRenewProhibited"/>
        <enumeration value="clientTransferProhibited"/>
        <enumeration value="clientUpdateProhibited"/>
        <enumeration value="inactive"/>
        <enumeration value="ok"/>
        <enumeration value="pendingDelete"/>
        <enumeration value="pendingTransfer"/>
        <enumeration value="pendingVerification"/>
        <enumeration value="serverDeleteProhibited"/>
        <enumeration value="serverHold"/>
        <enumeration value="serverRenewProhibited"/>
        <enumeration value="serverTransferProhibited"/>
        <enumeration value="serverUpdateProhibited"/>
      </restriction>
    </simpleType>

  <!--
  <renew> response elements.
  -->



Hollenbeck               Expires July 24, 2002                 [Page 35]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


    <complexType name="renDataType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="exDate" type="dateTime"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  <transfer> response elements.
  -->
    <complexType name="trnDataType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="trStatus" type="eppcom:trStatusType"/>
        <element name="reID" type="eppcom:clIDType"/>
        <element name="reDate" type="dateTime"/>
        <element name="acID" type="eppcom:clIDType"/>
        <element name="acDate" type="dateTime"/>
        <element name="exDate" type="dateTime"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  End of schema.
  -->
  </schema>
  END






















Hollenbeck               Expires July 24, 2002                 [Page 36]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


5. Internationalization Considerations

  EPP is represented in XML, which provides native support for encoding
  information using the Unicode character set and its more compact
  representations including UTF-8.  Compliant XML processors are
  REQUIRED to understand both UTF-8 and UTF-16.  Though XML includes
  provisions to identify other character set encodings through use of an
  "encoding" attribute in an <?xml?> declaration, EPP use with character
  sets other than UTF-8 is NOT RECOMMENDED.

  All date-time values presented via EPP MUST be expressed in Universal
  Coordinated Time using the Gregorian calendar.  XML Schema allows use
  of time zone identifiers to indicate offsets from the zero meridian,
  but this option MUST NOT be used with EPP.  The extended date-time
  form defined in [DATE-TIME] MUST be used to represent date-time values
  as XML Schema does not support truncated date-time forms.

  This document requires domain and host name syntax as specified in
  [RFC952] as updated by [RFC1123].  These conformance requirements
  might change as a result of progressing work in developing standards
  for internationalized domain names.

6. IANA Considerations

  This document uses URNs to describe XML namespaces and XML schemas
  conforming to a registry mechanism described in [IETF-XML].  Two URI
  assignments are requested.

  Registration request for the domain namespace:

  URI: urn:ietf:params:xml:ns:domain-1.0

  Registrant Contact: See the "Author's Address" section of this
  document.

  XML: None.  Namespace URIs do not represent an XML specification.

  Registration request for the domain XML schema:

  URI: urn:ietf:params:xml:schema:domain-1.0

  Registrant Contact: See the "Author's Address" section of this
  document.

  XML: See the "Formal Syntax" section of this document.






Hollenbeck               Expires July 24, 2002                 [Page 37]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


7. Security Considerations

  An authorization token is REQUIRED to create a domain object.  This
  token is used in some query and transfer operations as an additional
  means of determining client authorization to perform the command.
  Failure to protect authorization tokens can result in unauthorized
  transfer operations and unauthorized information disclosure.  Both
  client and server MUST ensure that tokens are stored and exchanged
  with high-grade encryption mechanisms to provide privacy services.

  The object mapping described in this document does not provide any
  other security services or introduce any additional considerations
  beyond those described by [EPP] and protocol layers used by EPP.

8. Acknowledgements

  This document was originally written as an individual submission
  Internet-Draft.  The provreg working group later adopted it as a
  working group document and provided many invaluable comments and
  suggested improvements.  The author wishes to acknowledge the efforts
  of WG chairs Edward Lewis and Jaap Akkerhuis for their process and
  editorial contributions.

  Specific suggestions that have been incorporated into this document
  were provided by Chris Bason, Eric Brunner-Williams, Jordyn Buchanan,
  Dave Crocker, Ayesha Damaraju, Anthony Eden, Sheer El-Showk, Klaus
  Malorny, Dan Manley, Michael Mealling, Patrick Mevzek, Asbjorn Steira,
  Bruce Tonkin, and Rick Wesson.























Hollenbeck               Expires July 24, 2002                 [Page 38]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


9. References

  Normative References:

  [DATE-TIME] G. Klyne, C. Newman: "Date and Time on the Internet:
  Timestamps", work in progress.

  [EPP] S. Hollenbeck: "Extensible Provisioning Protocol", work in
  progress.

  [EPP-C] S. Hollenbeck: "Extensible Provisioning Protocol Contact
  Mapping", work in progress.

  [EPP-H] S. Hollenbeck: "Extensible Provisioning Protocol Host
  Mapping", work in progress.

  [IETF-XML] M. Mealling: "The IETF XML Registry", work in progress.

  [RFC952] K. Harrenstien et al.: "DOD Internet Host Table
  Specification", RFC 952, October 1985.

  [RFC1123] R. Braden: "Requirements for Internet Hosts -- Application
  and Support", RFC 1123, October 1989.

  [RFC2119] S. Bradner: "Key Words for Use in RFCs to Indicate
  Requirement Levels", BCP 14, RFC 2119, March 1997.

  Informative References:

  [XML] Editors T. Bray et al.: "Extensible Markup Language (XML) 1.0
  (Second Edition)", W3C Recommendation 6 October 2000.

  [XMLS-1] Editors H. Thompson et al.: "XML Schema Part 1: Structures",
  W3C Recommendation 2 May 2001.

  [XMLS-2] Editors P. Biron, A. Malhotra: "XML Schema Part 2:
  Datatypes", W3C Recommendation 2 May 2001.














Hollenbeck               Expires July 24, 2002                 [Page 39]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


10. Author's Address

  Scott Hollenbeck
  VeriSign Global Registry Services
  21345 Ridgetop Circle
  Dulles, VA 20166-6503
  USA
  shollenbeck@verisign.com











































Hollenbeck               Expires July 24, 2002                 [Page 40]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


A. Revisions From Previous Version

  (Note to RFC editor: please remove this section completely before
  publication as an RFC.)

  -03 to -04 (WG last call updates):

  Fixed typos.

  Added section 1.1 to the Introduction to explain the "external" host
  concept and the relationship to domain objects.

  Fixed <info> and <renew> response descriptions to note that the
  <exDate> element is (and has been) OPTIONAL per the schema.

  Added text to section 2.1 to note that the trailing dot required in
  zones is implicit.

  Minor text change in section 2.3 to avoid use of the term "zone" when
  describing clientHold and serverHold status.

  Fixed schema to prevent multiple choices in updates, replacing
  <choice> with <sequence>.

  Made <authInfo> mandatory for transfer queries.  Added optional
  <authInfo> to the <info> command.

  Added a sentence to section 3.2.2 to encourage server implementers to
  notify clients when a delete command fails due to existing object
  relationships.

  Added text to section 3.2.4 to note the relationship between external
  hosts and <transfer> commands.

  Changed some lower-case "must"s, "may"s, etc. to avoid confusion with
  RFC 2119 directives.

  Updated the security considerations section to note the need to
  protect authorization tokens.

  Separated references into normative and informative subsections.

  Replaced reference to ISO 8601 with an IMPP I-D that will hopefully be
  an RFC soon.







Hollenbeck               Expires July 24, 2002                 [Page 41]

Internet-Draft          EPP Domain Name Mapping         January 24, 2002


B. Full Copyright Statement

  Copyright (C) The Internet Society 2002.  All Rights Reserved.

  This document and translations of it may be copied and furnished to
  others, and derivative works that comment on or otherwise explain it
  or assist in its implementation may be prepared, copied, published and
  distributed, in whole or in part, without restriction of any kind,
  provided that the above copyright notice and this paragraph are
  included on all such copies and derivative works.  However, this
  document itself may not be modified in any way, such as by removing
  the copyright notice or references to the Internet Society or other
  Internet organizations, except as needed for the purpose of developing
  Internet standards in which case the procedures for copyrights defined
  in the Internet Standards process must be followed, or as required to
  translate it into languages other than English.

  The limited permissions granted above are perpetual and will not be
  revoked by the Internet Society or its successors or assigns.

  This document and the information contained herein is provided on an
  "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
  TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
  NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN
  WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
  MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Acknowledgement

  Funding for the RFC Editor function is currently provided by the
  Internet Society.




















Hollenbeck               Expires July 24, 2002                 [Page 42]