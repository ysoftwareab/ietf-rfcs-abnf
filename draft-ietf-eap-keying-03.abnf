master_secret = TLS-PRF-48(pre_master_secret, "master secret",
                   client.random || server.random)
TEK           = TLS-PRF-X(master_secret, "key expansion",
                   server.random || client.random)
TLS-PRF-X =     TLS pseudo-random function defined in [RFC2246],
                   computed to X octets.
master_secret = TLS term for the MK.

          |                       |                           |
          |                       | pre_master_secret         |
    server|                       |                           | client
    Random|                       V                           | Random
          |     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+       |
          |     |                                     |       |
          |     |                                     |       |
          +---->|             master_secret           |<------+
          |     |               (MK)                  |       |
          |     |                                     |       |
          |     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+       |
          |                       |                           |
          |                       |                           |
          |                       |                           |
          V                       V                           V
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                                                               |
    |                                                               |
    |                         Key Block                             |
    |                          (TEKs)                               |
    |                                                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |           |           |           |           |           |
      | client    | server    | client    | server    | client    | server
      | MAC       | MAC       | write     | write     | IV        | IV
      |           |           |           |           |           |
      V           V           V           V           V           V

MSK           = TLS-PRF-64(MK, "client EAP encryption",
                      client.random || server.random)
EMSK          = second 64 octets of:
                   TLS-PRF-128(MK, "client EAP encryption",
                      client.random || server.random)
IV            = TLS-PRF-64("", "client EAP encryption",
                      client.random || server.random)

MK            = TLS master_secret
TLS-PRF-X     = TLS PRF function defined in [RFC2246] computed to X octets
PTK = EAPOL-PRF-X(PMK, "Pairwise key expansion", Min(AA,SA) ||
         Max(AA, SA) || Min(ANonce,SNonce) || Max(ANonce,SNonce))

PMK             = AAA-Key(0,31)
SA              = Station MAC address (Calling-Station-Id)
AA              = Access Point MAC address (Called-Station-Id)
ANonce          = Access Point Nonce
SNonce          = Station Nonce
EAPOL-PRF-X     = Pseudo-Random Function based on HMAC-SHA1, generating
                     a PTK of size X octets.

AAA-Key-A = MSK(0,63)
AAA-Key-B = PRF(EMSK(0,63),"EAP AAA-Key derivation for
               multiple attachments", AAA-Key-A,B-Called-Station-Id,
               Calling-Station-Id,length)

AAA-Key-E = PRF(EMSK(0,63),"EAP AAA-Key derivation for
               multiple attachments",AAA-Key-A,E-Called-Station-Id,
               Calling-Station-Id, length)

Calling-Station-Id  = STA MAC address
B-Called-Station-Id = AP B MAC address
E-Called-Station-Id = AP E MAC address
PRF = Some suitable pseudo-random function
length = length of derived key material

AMSK = KDF(EMSK, key label, optional application data, length)

T1 = prf (K, S | 0x01)
T2 = prf (K, T1 | S | 0x02)
T3 = prf (K, T2 | S | 0x03)
T4 = prf (K, T3 | S | 0x04)

prf = HMAC-SHA1
K = EMSK
L = key label
D = application data
O = OutputLength (2 bytes)
S = L | " " | D | O

