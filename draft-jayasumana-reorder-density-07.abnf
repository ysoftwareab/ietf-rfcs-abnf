RI = m + dm
D  = dm

R = {r(m,dm)| dm not equal to 0 for all m}

R = {(4,1), (5,-1)}
R = {(3, 2), (5, -2)}


RI = 1;

D = RI - S; # compute displacement
newS = get_next_arrival(); # subroutine called*
m = minimum (minimum (window), minimum (buffer));
RI = m;
newS = new sequence from arriving stream;
E = E + 1;
B = B - 1; /* Free buffer occupied by E.*/
E = E + 1; /* Expect next packet.*/
B = B + 1;
E = E + 1;
E = E + 1;
DT = BT = 4.

