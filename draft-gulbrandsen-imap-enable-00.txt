Network Working Group                                   Arnt Gulbrandsen
Request for Comments: DRAFT                       Oryx Mail Systems GmbH
                                                          September 2006


                       The IMAP ENABLE Extension
                  draft-gulbrandsen-imap-enable-00.txt


Status of this Memo

    By submitting this Internet-Draft, each author represents that any
    applicable patent or other IPR claims of which he or she is aware
    have been or will be disclosed, and any of which he or she becomes
    aware will be disclosed, in accordance with Section 6 of BCP 79.

    Internet-Drafts are working documents of the Internet Engineering
    Task Force (IETF), its areas, and its working groups.  Note that
    other groups may also distribute working documents as Internet-
    Drafts.

    Internet-Drafts are draft documents valid for a maximum of six
    months and may be updated, replaced, or obsoleted by other documents
    at any time.  It is inappropriate to use Internet-Drafts as
    reference material or to cite them other than as "work in progress."

    The list of current Internet-Drafts can be accessed at
    http://www.ietf.org/ietf/1id-abstracts.txt. The list of Internet-
    Draft Shadow Directories can be accessed at
    http://www.ietf.org/shadow.html.

    This Internet-Draft will expire in March, 2007.


Copyright Notice

    Copyright (C) The Internet Society (2006).


Abstract

    The ENABLE extension allows an IMAP client to enable certain IMAP
    extensions explicitly.


1.  Conventions Used in This Document

    The key words "REQUIRED", "MUST", "MUST NOT", "SHOULD", "SHOULD



Gulbrandsen                Expires March 2007                   [Page 1]

Internet-draft                                            September 2006


    NOT", and "MAY" in this document are to be interpreted as described
    in "Key words for use in RFCs to Indicate Requirement Levels"
    [KEYWORDS]. Formal syntax is defined by [ABNF] as modified by [IMAP]
    and [IMAPABNF].

    Example lines prefaced by "C:" are sent by the client and ones
    prefaced by "S:" by the server. The five characters [...] means that
    something has been elided.


2.  Overview

    [CONDSTORE], [ANNOTATE] and some extensions under consideration at
    the moment use various commands to enable server extensions.
    CONDSTORE, for example, uses a SELECT or FETCH parameter. However,
    SELECT starts a session and FETCH fetches messages. This extension
    adds a command, ENABLE, which enables such extensions without
    causing any other effect.

    An IMAP server which supports ENABLE advertises this by including
    the word ENABLE in its capability list.


3.  The ENABLE Command

    Arguments: capability names

    Result:    OK: Relevant capabilities enabled
               BAD: No arguments, or syntax error in an argument

    The ENABLE command takes a list of capability names, and requests
    the server to enable the named extensions. Once enabled using
    ENABLE, each extension remains active until the IMAP connection is
    closed. For each argument, the server does the following:

    - If the argument is not an extension known to the server, the
      server MUST ignore the argument.

    - If the argument is an extension known to the server, and it does
      not make sense to enable the extension in this way, the server
      MUST ignore the argument. (For example, ENABLE ID does nothing
      because [ID] does not need to be enabled in the server prior to
      being used.)

    - If the argument is an extension is supported by the server and
      which needs to be enabled, the server MUST enable the extension
      for the duration of the connection. At present this applies only
      to CONDSTORE.



Gulbrandsen                Expires March 2007                   [Page 2]

Internet-draft                                            September 2006


    In this example, the client enables CONDSTORE:

         C: a ENABLE CONDSTORE
         S: a OK Conditional Store enabled

    In the next example, the client asks about the server capabilities,
    the server tells the client only what's usable prior to login, the
    client enables CONDSTORE and X-GOOD-IDEA, then it logs in.

         C: a CAPABILITY
         S: * CAPABILITY IMAP4rev1 AUTH=CRAM-MD5 AUTH=DIGEST-MD5 ID
            LITERAL+
         S: a OK foo
         C: b ENABLE CONDSTORE X-GOOD-IDEA
         S: b OK foo
         C: c LOGIN d e
         S: c OK foo C: d CAPABILITY
         S: * CAPABILITY IMAP4rev1 ID LITERAL+ CONDSTORE
         S: d OK foo

    After command b, the client does not know whether CONDSTORE and X-
    GOOD-IDEA are enabled. After command d, the client learns that the
    server supports CONDSTORE but not X-GOOD-IDEA, so it knows that
    CONDSTORE is enabled.


4.  Formal Syntax

    The following syntax specification uses the Augmented Backus-Naur
    Form (ABNF) notation as specified in [ABNF]. [IMAP] defines the non-
    terminals "capability" and "command-any".

    Except as noted otherwise, all alphabetic characters are case-
    insensitive.  The use of upper or lower case characters to define
    token strings is for editorial clarity only.  Implementations MUST
    accept these strings in a case-insensitive fashion.

        capability   =/ "ENABLE"

        command-any  =/ "ENABLE" 1*(SP capability)


5.  Security considerations

    This document does not add any new security considerations to IMAP.






Gulbrandsen                Expires March 2007                   [Page 3]

Internet-draft                                            September 2006


6.  IANA considerations

    The IANA is requested to add ENABLE to the list of IMAP extensions.


7.  Credits

    The idea for this draft came from Randy Gellens. Alexey Melnikov
    thought it was a good idea. The author of this document typed it
    down and added the open issues section.


8.  Normative References

    [ABNF]     Crocker, Overell, "Augmented BNF for Syntax
               Specifications: ABNF", RFC 4234, Brandenburg
               Internetworking, Demon Internet Ltd, October 2005.

    [KEYWORDS] Bradner, "Key words for use in RFCs to Indicate
               Requirement Levels", RFC 2119, Harvard University, March
               1997.

    [IMAP]     Crispin, "Internet Message Access Protocol - Version
               4rev1", RFC 3501, University of Washington, June 2003.

    [IMAPABNF] Melnikov, Daboo, "Collected Extensions to IMAP4 ABNF",
               RFC 4466, Isode Ltd., April 2006.


8.  Informative References

    [CONDSTORE] Melnikov, Hole, "IMAP Extension for Conditional STORE
               Operation or Quick Flag Changes Resynchronization", RFC
               4551, Isode Ltd., June 2006.

    [ID]       Showalter, "IAMP4 ID extension", RFC 2971, Mirapoint
               Inc., October 2000.














Gulbrandsen                Expires March 2007                   [Page 4]

Internet-draft                                            September 2006


10. Author's Address

    Arnt Gulbrandsen
    Oryx Mail Systems GmbH
    Schweppermannstr. 8
    D-81671 Muenchen
    Germany

    Fax: +49 89 4502 9758

    Email: arnt@oryx.com


Open Issues

    [Note to RFC editor: Please delete before publishing.]

    Is a DISABLE command necessary? Is there any benefit to it? Is there
    any benefit to not having a DISABLE?

    Is there any benefit to restricting the capabilities that can be
    specified with ENABLE?

    Should ENABLE be a command-nonauth, so clients have to declare their
    desires right at the start? That might simplify some server
    implementations, particularly proxies. Servers would have to ignore
    any capability names they don't know.

    At the moment a client can "enable" any capability, even ones not
    advertised by the server. This allows a client to enable all it can
    support right at the start, even though the server won't advertise
    its capabilities until after LOGIN/STARTTLS.



















Gulbrandsen                Expires March 2007                   [Page 5]

Internet-draft                                            September 2006


Intellectual Property Statement

    The IETF takes no position regarding the validity or scope of any
    Intellectual Property Rights or other rights that might be claimed
    to pertain to the implementation or use of the technology described
    in this document or the extent to which any license under such
    rights might or might not be available; nor does it represent that
    it has made any independent effort to identify any such rights.
    Information on the procedures with respect to rights in RFC
    documents can be found in BCP 78 and BCP 79.

    Copies of IPR disclosures made to the IETF Secretariat and any
    assurances of licenses to be made available, or the result of an
    attempt made to obtain a general license or permission for the use
    of such proprietary rights by implementers or users of this
    specification can be obtained from the IETF on-line IPR repository
    at http://www.ietf.org/ipr.

    The IETF invites any interested party to bring to its attention any
    copyrights, patents or patent applications, or other proprietary
    rights that may cover technology that may be required to implement
    this standard.  Please address the information to the IETF at ietf-
    ipr@ietf.org.


Full Copyright Statement

    Copyright (C) The Internet Society (2006).  This document is subject
    to the rights, licenses and restrictions contained in BCP 78, and
    except as set forth therein, the authors retain all their rights.

    This document and the information contained herein are provided on
    an "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE
    REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE
    INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
    THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
    WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Acknowledgment

    Funding for the RFC Editor function is currently provided by the
    Internet Society.







Gulbrandsen                Expires March 2007                   [Page 6]
