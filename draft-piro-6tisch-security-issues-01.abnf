D_k= H_128(PAN_ID | shortMACaddress | M_k).

D_k= H_128(PAN_ID | shortMACaddress | M_k).

phi_k = H_128(srcMACaddrMote | M_K).

P_bits = log2 (N).

PBK_remoteMote = g^PVK_remoteMote * mod P

 




KeyFalg=TRUE, AuthFlag=FALSE, KeySize=S, Rand=RAND_remoteMote, and
KeyMaterial=PBK_remoteMote. In the case the Fully Secured
PBK_coordinator = g^PVK_coordinator * mod P

KeyFalg=TRUE, AuthFlag=FALSE, KeySize=S, Rand=RAND_coordinator,
P_k = PBK_coordinator^PVK_remoteMote * mod P.

P_k = PBK_remoteMote^PVK_coordinator * mod P.

AUTH_remoteMote=H_128(P_k || RAND_coordinator || RAND_remoteMote).

      Then, it releases a CONFIGURE.security.completeKMP command with
      KeyGenMode and AuthenticationField set to 00 and AUTH_remoteMote,
      respectively.

      i) The MAC layer of the remote mote sends to the coordinator a new
      MAC command message to complete the mutual authentication. This
      message is composed by the following fields: MessageType=10,
KeyGenMode=00, KeyFalg=FALSE, AuthFlag=TRUE, KeySize=0, and
AuthenticationField=AUTH_remoteMote. This message is protected by
AUTH_coordinator=H_128(P_k || RAND_remoteMote || RAND_coordinator).

      Then, it releases a CONFIGURE.security.completeKMP command with
      KeyGenMode and AuthenticationField set to 00 and AUTH_coordinator,
      respectively.

      k) The MAC layer of the PAN coordinator sends to the remote mote a
      new MAC command message to complete the mutual authentication.
      This message is composed by the following fields: MessageType=10,
KeyGenMode=00, KeyFalg=FALSE, AuthFlag=TRUE, KeySize=0, and
AuthenticationField=AUTH_coordinator. This message is protected by
KeyFalg=TRUE, AuthFlag=FALSE, KeySize=T,, FlagEnabled=TRUE,
FragNumber=i, Rand=RAND_remoteMote, and KeyMaterial=fragment_i. In
KeyFalg=TRUE, AuthFlag=FALSE, KeySize=T, FlagEnabled=TRUE,
FragNumber=i, Rand=RAND_coordinator, and KeyMaterial=fragment_i.
 




P_k = PBK_coordinator^PVK_remoteMote * mod P.

P_k = PBK_remoteMote^PVK_coordinator * mod P.

authMsg_remoteMote = P_k || RAND_coordinator || RAND_remoteMote

            h.2) sign with the private key the 128-hash function of the
            authenticator message:

sign=S(PVK_remoteMote, H_128(authMsg_remoteMote))

            h.3) obtain AUTH_remoteMote by encrypting with the
            preLinkKey, P_k, the sign computed before: 

AUTH_remoteMote=E(P_k, sign)


KeyGenMode=01, KeyFalg=FALSE, AuthFlag=TRUE, KeySize=0, and
AuthenticationField=AUTH_remoteMote. This message is protected by
authMsg = P_k || RAND_remoteMote || RAND_coordinator

            j.2) sign with the private key the 128-hash function of the
            authenticator message:

sign=S(PVK_remoteMote, H_128(authMsg))

AUTH_coordinator=E(P_k, sign)


KeyGenMode=01, KeyFalg=FALSE, AuthFlag=TRUE, KeySize=0, and
AuthenticationField=AUTH_coordinator. This message is protected by
L_k = H_128 (i | PAN_ID | P_k).



