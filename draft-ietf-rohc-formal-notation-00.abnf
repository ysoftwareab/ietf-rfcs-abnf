tmp = NULL ? field_value 
field_value = tmp ? mod(tmp,k) 
tmp = mod(mod(field_value-v,k)+v,2^n) ? NULL 
label = NULL ? field_value 
field_value = label ? NULL 
    
label = field_value ? NULL 
    
label = NULL ? k 
    
tmp = NULL ? field_value 
field_value = tmp ? b[min([tmp!=a[j] for j in 0..end])] 
tmp = a[min([field_value!=b[j] for j in 0..end])] ? NULL 
    
tmp = NULL ? field_value 
field_value = tmp ? mod(field_value-base,2^n) 
tmp = mod(field_value+base,2^n) ? NULL 
    
tmp = NULL ? field_value 
field_value = tmp ? mod(tmp-base,2^n) 
base = mod(tmp-field_value,2^n) ? tmp 
tmp = base ? NULL 
    
remaining_data = tmp ? tmp+80 
remaining_data = tmp+96 ? tmp 
field_value = checksum16(tmp) ? NULL 
tmp = remaining_data ? NULL 
    
choice = label ? NULL 
    
nbo_field = NULL ? switch(nbo_flag, 
                    byte_swap(n,base_field),base_field) 
base_field = switch(nbo_flag, 
                    byte_swap(n,nbo_field),nbo_field) ? NULL 
    
scaled_field = NULL ? floor(base_field,scale) 
remainder_field = NULL ? mod(base_field,scale) 
base_field = scale*scaled_field+remainder_field ? NULL 
    
order = NULL ? 0 
presence = NULL ? 0 
start = switch(permutation(end,k,order), 
                            -1,remaining_data+floor(label,d)*m+p) ? NULL 
    
tmp = NULL ? order 
order = tmp ? tmp*2^k+next_rule 
next_rule = mod(order,2^k) ? NULL 
tmp = floor(order,2^k) ? NULL 
    
tmp = NULL ? presence 
presence = tmp ? tmp*2+optional 
optional = mod(presence,2) ? NULL 
tmp = floor(presence,2) ? NULL 
    
remaining_data = tmp ? tmp+n 
tmp = remaining_data-n ? NULL 
    
no_update = 1 ? NULL 
    
