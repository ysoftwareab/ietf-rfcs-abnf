CMF-file            = cmid file-length CMF-header track-chunk

file-length         = 4OCTET

OCTET               = %x00-FF

cmid		    = %x63 %x6d %x69 %x64

CMF-header          = header-length content-type nTracks *sub-chunk

header-length       = 2OCTET

content-type        = (melody (complete / part) )
                      / (song instruments)

melody              = %x01
		      ; used for ringers

complete            = %x01
                      ; all of the melody

part                = %x02
                      ; part of the melody

song                = %x02
                      ; used for pictures + audio

instruments         = OCTET
                      ; bit field
 	              ; The octet contains bits set with meanings 
		      ; as follows 
                      ; %x01: contains musical event
                      ; %x02: contains wave data
                      ; %x04: contains text data
                      ; %x08: contains picture data
                      ; %x10: contains female vocal parts
                      ; %x20: contains male vocal parts
                      ; %x40: contains other vocal parts
		      ; %x80: Reserved (SHOULD not be set; SHOULD
                      ;       be ignored if encountered. 
                   
nTracks             = %x01-04 
                      ; number of track chunks. Note that all non-MIDI 
		      ; content (e.g., PNG, animation) must be in track
                      ; chunk 1. Four MIDI channels can go in each track chunk,
                      ; so MIDI channels 1-4 are in track chunk 1, MIDI 
                      ; channels 5-8 are in track chunk 2, etc.
                
sub-chunk           = 1*(required-chunk / optional-chunk / expansion-chunk)

                      ; if more than one sub-chunk of the same type is 
                      ; present, the player MUST ignore all except the last
                      ; such sub-chunk. The player MUST ignore unrecognized
                      ; sub-chunks (expansion-chunk). expansion-chunk MUST 
                      ; NOT be created. Sub-chunks MAY appear in any order.
                      ; All required sub-chunks MUST be present
                      ; (required-chunk).

required-chunk      = vers-chunk 
		      / note-chunk
                      / cnts-chunk
                      ; exactly one of each of these required sub-chunks MUST
                      ; be present.

expansion-chunk     = exp-id length2 exp-data
                      ; for compatibility with future versions of the 
                      ; specification.

exp-id              = 4OCTET
                      ; MUST NOT be an existing sub-chunk.

exp-data            = *OCTET
                      ; number of octets specified in length2 field of 
                      ; expansion-chunk. 

optional-chunk      = code-chunk
                      / titl-chunk
                      / date-chunk
                      / sorc-chunk
                      / copy-chunk
                      / exsn-chunk
                      / exsa-chunk
                      / exsb-chunk
                      / exsc-chunk
                      / cuep-chunk
                      / pcpi-chunk
                      / prot-chunk
                      / wave-chunk

vers-chunk          = vers %x0004 "0500"  
                
vers                = %x76 %x65 %x72 %x73                
                      ; The value "0500" refers to CMF.
	              ; All players that are compliant to this document MUST
                      ; accept vers-chunk values of %d0200-0599, as these 
                      ; are backward compatible. 

code-chunk          = code %x0001 code-value

code                = %x63 %x6F %x64 %x65

titl-chunk          = titl length2 title

titl                = %x74 %x69 %x74 %x6C

title               = *OCTET
                      ; number of octets specified in length2
                      ; field of titl-chunk

date-chunk          = date length2 date-data

date                = %x64 %x61 %x74 %x65

date-data           = *OCTET
                      ; number of octets specified in length2
                      ; field of date-chunk 
     
copy-chunk          = copy length2 copyright-notice
                      ; Content provider's copyright notice.

copy                = %x63 %x6F %x70 %x79

copyright-notice    = *OCTET
                      ; number of octets specified in length2
                      ; field of copy-chunk

sorc-chunk          = sorc %x0001 source-info 

sorc                = %x73 %x6F %x72 %x63

note-chunk          = note %x0002 note-msg-config
note                = %x6E %x6F %x74 %x65

note-msg-config     = [%x0000 / %x0001]
                      ; %x0000 : Note message is of length 3 octet
                      ; %x0001 : Note message is of length 4 octet
                      ; In the second case, the extra (fourth) octet
                      ; is used to include velocity and Octave Shift
                      ; information.

exsn-chunk          = exsn %x0002 2data
                      ; exsn-chunk specifies the length of normal 
                      ; extension status-A message

exsn                = %x65 %x78 %x73 %x6E

exsa-chunk          = exsa %x0002 2data
                      ; exsa-chunk specifies the length of extension 
                      ; status-A, class A message

exsa                = %x65 %x78 %x73 %x61

exsb-chunk          = exsb %x0002 2data
                      ; exsb-chunk specifies the length of extension 
                      ; status-A, class B message

exsb                = %x65 %x78 %x73 %x62

exsc-chunk          = exsc %x0002 2data
                      ; exsc-chunk specifies the length of extension 
                      ; status-A, class C message

exsc                = %x65 %x78 %x73 %x63

cuep-chunk          = cuep 4nTracks *OCTET
                      ; cuep-chunk specifies the location of the cue 
                      ; point start point, which is the starting 
                      ; position of the main theme music in the track.
                      ; The length of cuep-chunk MUST be equal to 
                      ; number of tracks multiplied by 4 octets. Every
                      ; 4 octets consists of the location of the cue 
                      ; point start point in the corresponding track 
                      ; chunk.
                      ; Each cue point start point is defined to be an
                      ; offset from the start of the track chunk to 
                      ; the octet which is the beginning of the theme 
                      ; music event in that track chunk. If the cue 
                      ; point start point offset for any track chunk 
                      ; is FFFFFFFF, then that track chunk is inactive
                      ; during cue point playback. 

cuep                = %x63 %x75 %x65 %x70

pcpi-chunk          = pcpi %x0001 axis-offset

pcpi                = %x70 %x63 %x70 %x69

axis-offset         = %x00-01
                      ; pcpi-chunk describes the picture packet information.
                      ; %0x00 : XY offsets in pcpi are in percent
                      ; %0x01 : XY offsets in pcpi are in pixels

cnts-chunk          = cnts length2 multi-media-type

cnts                = %x63 %x6E %x74 %x73

multi-media-type    = media-type *(";" media-type)
                      ; cnts-chunk describes the various media contents 
                      ; that are present in the file.
                      ; Multiple media are separated by ";" in 
                      ; cnts-chunk.
                      ; Examples: SONG;WAVE;TEXT;PICT 
                      ; length2 specifies the length of multi-media-type
                      ; in cnts-chunk.

prot-chunk          = prot length2 *OCTET
                      ; length2 specifies the length of the data in 
                      ; prot-chunk.
                      ; This string can be used to identify the Content
                      ; Provider.

prot                = %x70 %x72 %x6F %x74

wave-chunk          = wave %x0001 data
                      ; the data value is used to determine whether 
                      ; wav-data in track-chunk is ADPCM or QCELP. The
                      ; values are defined according to the following:
                      ; %x00 : wav-data MUST be ADPCM
                      ; %x01 : wav-data MUST be QCELP
                      ; %x02-FF: reserved
                      ; If the format of wav-data (ADPCM or QCELP) in 
                      ; the CMF file is not the same as the data 
                      ; present in wave-chunk, the wav-data MUST be 
                      ; ignored.

wave                  = %x77 %x61 %x76 %x65

code-value          = %b00000000-10000101
                      ; %b00000000 :		ANSI CHARSET
		      ; %b00000001 :		ISO8859-1
		      ; %b00000010 :		ISO8859-2
		      ; %b00000011 :		ISO8859-3
		      ; %b00000100 :		ISO8859-4
		      ; %b00000101 :		ISO8859-5
		      ; %b00000110 :		ISO8859-6
		      ; %b00000111 :		ISO8859-7
		      ; %b00001000 :		ISO8859-8
		      ; %b00001001 :		ISO8859-9
		      ; %b00001010 :		ISO8859-10
		      ; %b10000001 :		HANGUL CHARSET
		      ; %b10000010 :		Chinese Simplified
		      ; %b10000011 :		Chinese Traditional
		      ; %b10000100 :		Hindi
		      ; %b10000101 :     	Thai



source-info         = no-copyright / copyright-DL /copyright-MO / copyright-DT

no-copyright        = %b00
                      ; No copyright, downloaded (from the net)

copyright-DL        = %b01 
                      ; Copyrighted,  downloaded (from the net)

copyright-MO        = %b11 
                      ; Copyrighted,  mobile originated

copyright-DT        = %b101 
                      ; Copyrighted, from desktop


data                = OCTET

media-type          = "SONG" 		; Contains MIDI
                      /"WAVE"  		; Contains Wave sounds
                      /"TEXT" 		; Contains text data
                      /"PICT" 		; Contains still image data
                      /"ANIM" 		; Contains animation data
                      /"LED" 		; Contains LED data
		      /"VIB"		; Contains VIB data

track-chunk         = (track-chunk-1  3*midi-track-chunk) / exp-track-chunk
                      ; The player MUST ignore unrecognized track-chunks 
                      ; (exp-track-chunk). exp-track-chunk MUST NOT be created.

track-chunk-1       = trac length4 *event
trac                = %x74 %x72 %x61 %x63

midi-track-chunk    = trac length4 *midi-event

midi-event          = delta-time midi-event-message

exp-track-chunk     = exp-track length4 *OCTET

exp-track           = 4OCTET
                      ; exp-track  MUST NOT be the same as trac.

event               = delta-time event-message

delta-time          = OCTET
	              ; delta time is described as the elapsed time from 
	              ; a previous event. The delta-time of each event is 
                      ; determined by the relative time from the previous event
                      ; using an adjustable unit of time called a tick. The 
                      ; timebase and tempo MIDI event (timebase-tempo) enable 
                      ; the CMF content author to adjust this unit of time. By 
                      ; default, the timebase is 48 and the tempo is 125. By 
                      ; plugging the default timebase and tempo values into 
                      ; following formula:
                      ; milliseconds per tick = 60000 / (tempo * timebase).
                      ; the default value for each tick which is calculated to 
                      ; be 10ms.
                      ; If a delta-time value of more than 255 is required, NOP
                      ; events should be used to correctly time the event.
                      ; The values for timebase are shown in the table in
                      ; section 5.1.

event-message       = note-message
                      / ext-A-message
                      / ext-B-message
                      / ext-info-message

midi-event-message  = note-message
                      / ext-A-message
                      / midi-ext-B-message

note-message        = note-status gate-time
                      / note-status gate-time vel-oct-shift
                      ; If note-msg-config is %x0000, note-message is 
                      ; (note-status gate-time). If note-msg-config is %x0001, 
                      ; note-message is (note-status gate-time vel-oct-shift).

note-status         = channel-index key-number
		      ; One octet containing channel index and key 
                      ; number

key-number	    = %b000000-111110
               	      ; key-number is 0 to 62. 
               	      ; key-number 63 is prohibited.
               	      ; key-number 15 is middle C of keyboard

gate-time           = OCTET
                      ; continuation time from note-on to note-off.
                      ; The values of gate-time is calculated  
                      ; in the same way as the values of delta-time. 
                      ; If a gate-time value of more than 255 is 
                      ; required multiple note-messages are used. 

vel-oct-shift       = velocity octave-shift   
                      ; octet containing velocity (6 bits) and 
                      ; octave-shift (2 bits)

velocity            = %b000000-111111 
               	      ; velocity is 0 to 63.

octave-shift        = %b00-11
                      ; %b00 : No change
                      ; %b01 : Increase one octave
                      ; %b10 : decrease two octaves
                      ; %b11 : decrease one octave

ext-A-message       = %xFF A-command-data

ext-B-message       = %xFF B-command-data

midi-ext-B-message  = %xFF midi-B-command-data

ext-info-message    = %xFF ( ( %b11110001 wav-data-length wav-data  ) 
                      /      ( %b11110010 text-data-length text-data )
                      /      ( %b11110011 pict-data-length picture-data )
                      /      ( %b11110100 anim-data-length animation-data ) ) 

wav-data-length     = length2

text-data-length    = length2

pict-data-length    = length2

anim-data-length    = length2

length2             = 2OCTET
    
A-command-data      = assigned-channel fine-pitch-bend
                      ; two octets containing assigned-channel and 
                      ; fine-pitch-bend.

assigned-channel    = %b000-011
	              ; Assigned channel index (0..3)

fine-pitch-bend     = %b0000000000000-1111111111111	
                      ; range : %x0000 to %x1fff (see table in 
                      ; section 5.3)
                      ; Fine pitchbend message sets the change value 
                      ; of the pitch specified in the note message.
    
B-command-data      = master-volume
		      / master-tune
		      / part-configuration
		      / pause
		      / stop
		      / reset
		      / timebase-tempo
		      / cuepoint
	              / jump
		      / NOP
		      / end-of-track
		      / bank-change
		      / program-change
		      / volume
		      / panpot
		      / pitchbend
		      / channel-assign
		      / pitchbend-range
		      / wave-channel-volume
		      / wave-channel-panpot
		      / text-control
		      / picture-control
		      / vib-control
		      / LED-control
                          
midi-B-command-data = NOP
                      / end-of-track
                      / bank-change
                      / program-change
                      / volume
                      / panpot
                      / pitchbend
                      / pitchbend-range

master-volume       = %b10110000 %x00-7F	
                      ; specifies the volume adjustment 
                      ; for all audio events.  The 
                      ; default value is 100 (0 dB).  
                      ; Range is from 0 to 127.

master-tune	    = %b10110011 %x34-4C	
		      ; Master Tune for music synthesizer
                      ; %x34 : -(12 x 100 ) [cents]
                      ; ...
                      ; %x3E : -( 2 x 100 ) [cents]
                      ; %x3F : -( 1 x 100 ) [cents]
                      ; %x40 : 0 [cents]
                      ; %x41 : ( 1 x 100 ) [cents]
                      ; %x42 : ( 2 x 100 ) [cents]
                      ; ...
                      ; %x4C : (12 x 100 ) [cents]
                      ; A cent is a change in frequency 
                      ; by 2^(1/1200). So frequencies f1 
                      ; and f2 are one cent apart if 
                      ; f2 = f1 x 2^(1/1200), and three 
                      ; cents apart if 
                      ; f2 = f1 x 2^(3/1200).

part-configuration  = %b10111001 %x00	
	              ; reserved

pause 		    = %b10111101 %x00
		      ; pause player

stop		    = %b10111110 %x00
		      ; all notes off

reset		    = %b10111111 %x00
		      ; reset controllers

timebase-tempo      = timebase tempo

timebase            = %b1100000-11001111
		      ; timebase - the lower nibble (%b0000-1111)is index 
                      ; into table in section 5.1.

tempo               = %x14-FF											
                      ; number of quarter notes in one minute.

cuepoint	    = %b11010000 cuep-start-end

cuep-start-end      = cuep-startpoint / cuep-endpoint 

cuep-startpoint     = %x00
		      ; cuepoint startpoint
cuep-endpoint       = %x01
        	      ; cuepoint endpoint

jump		    = %b11010001 jump-data

jump-data	    = destination jump-id no-of-jumps
		      ; one octet with following three fields

destination         = dest / jump 

dest                = %b00
		      ; destination point

jump                = %b01
		      ; jump point

jump-id             = %b00-11
		      ; jump ID (0 to 3)

no-of-jumps         = %b0000-1111
        	      ; (15 is infinity)

NOP		    = %b11011110 NOP-data

NOP-data	    = %x00

end-of-track        = %b11011111 %x00
	              ; end of track

bank-change	    = %b11100001 bank-change-attr
                
bank-change-attr    = channel-index bank-change-value
	              ;one octet containing 2 fields

bank-change-value   = %b000000-111111
		      ; bank change value
                      ; %b000010: General CMF Instrument bank with 
                      ; programs from the first 64 patches of the 
                      ; General MIDI Instrument Patch Map.
                      ; %b000011: General CMF Instrument bank with 
                      ; programs from the second 64 patches of the 
                      ; General MIDI Instrument Patch Map.
                      ; %b111111: Drum Bank with identical keys as 
                      ; the General MIDI Percussion Key Map.

program-change      = %b11100000 prog-data

prog-data           = channel-index prog-change
		      ; one octet containing 2 fields
prog-change         = %b000000-111111
                      ; program change value
                      ; prog-change SHALL be ignored if the bank is 
                      ; a drum bank.

volume	            = %b11100010 volume-attr 

volume-attr         = channel-index volume-change
                      ;one octet containing 2 fields

volume-change       = %b000000-111111
                      ; volume change value

panpot	            = %b11100011 panpot-attr

panpot-attr	    = channel-index panpot-change
                      ; one octet containing two fields

panpot-change       = %b000000-111111
  		      ; panpot change value
	              ; %b000000 : Far Left
        	      ; %b100000 : Center
        	      ; %b111111 : Far Right

pitchbend	    = %b11100100 pitchbend-attr

pitchbend-attr	    = channel-index pitchbend-change
                      ; one octet containing two fields

pitchbend-change    = %b000000-111111
		      ; pitchbend change value (see table in 
                      ; section 5.2)

channel-assign      = %b11100101 channel-data

channel-data        = channel-index channel-value
                      ; one octet containing two fields

channel-value       = %b000000-001111

pitchbend-range     = %b11100111 pitchrange-data

pitchrange-data	    = channel-index pitch-range
                      ; one octet containing two fields

pitch-range         = %b000000-001100
    		      ; pitch bend range
wave-channel-volume = %b11101000 wave-vol

wave-vol	    = channel-index volume-change
                      ; one octet containing two fields

volume-change       = %b000000-111111	
		      ; volume change value

wave-channel-panpot = %b11101001 wave-panpot

wave-panpot	    = channel-index panpot-change
                      ; one octet containing two fields

panpot-change       = %b000000-111111
   		      ; wave panpot change value
	              ; %b000000 : Far Left
        	      ; %b100000 : Center
        	      ; %b111111 : Far Right

text-control	    = %b11101011 tex-cont

tex-cont            = %x00-05
	              ; %x00 : Text Enable
	              ; %x01 : Text Disable
	              ; %x02 : Clear text
	              ; %x03 : reserved
	              ; %x04 : Increase cursor position by 1 byte
	              ; %x05 : Increase cursor position by 2 bytes

picture-control     = %b11101100 pict-cont

pict-cont           = pict-enable / pict-disable / clear-pict

pict-enable         = %x00
		      ; picture enable

pict-disable        = %x01
		      ; picture disable

clear-pict          = %x02
		      ; clear picture

vib-control	    = %b11101110 vib-data

vib-data            = %b0 off-on vib-pattern
                      ; one octet containing one zero bit and two 
                      ; fields

off-on              = %b0-1
	              ; enable is %b1 and disable is %b0

vib-pattern         = %b000000-000111
	              ; vibrator pattern

LED-control	    = %b11101101 led-data

led-data            = %b0 off-on color-pattern
                      ; one octet containing one zero bit and two 
                      ; fields

off-on              = %b0-1
	              ; enable is %b1 and disable is %b0

color-pattern       = %b000000-001111
	              ; color pattern

wav-data            = wav-atrb1 wav-atrb2  

wav-atrb1           = channel-index channel-id
                      ; one octet containing two fields

channel-index       = %b00-11
		      ; assigned channel index, defined 
               	      ; with respect to the channel reference index. 

channel-id          = %b000000-111111	
	        
wav-atrb2           = wav-p-mode wav-str
                      ; one octet containing two fields

wav-p-mode          = wav-store / wav-set / wav-recycle

wav-store           = %b00 
                      ; store mode, see section 7.5.1

wav-set             = %b01
                      ; set mode, see section 7.5.2

wav-recycle         = %b10
                      ; recycle mode, see section 7.5.3

wav-str             = wav-other / wav-ima

wav-other           = wav-format packet-offset prev-flag *OCTET

wav-format          = wav-qcp / wav-ext

wav-qcp             = %b000100 
                      ; QCP 13k

wav-ext             = %b000000-000011 / %b000110-111111
                      ; reserved

wav-ima             = %b000101 packet-offset prev-flag wav-adpcm-info 
                      *OCTET
                      ; IMA ADPCM 

packet-offset       = length4	
	              ; specifies offset in bytes to next wave packet

prev-flag           = prev-flag-en / prev-flag-dis

prev-flag-en        = %x01

prev-flag-dis       = %x00
	              ; specifies if current wave packet is continued
	              ; from previous (for those formats with frame
	              ; history). Implementations SHOULD ignore the 
                      ; seven most significant bits
                      ; If wav-format is wav-qcp then wav-data-cnts is 
                      ; *OCTET. If wav-format is wav-adpcm then 
                      ; wav-data-cnts is wav-adpcm-info *OCTET.
                       
wav-adpcm-info      = wav-adpcm-samp-rate  %b00 wav-adpcm-block-size

wav-adpcm-samp-rate = %b00-11
                      ; it defines the sampling rate of ADPCM.
                      ; %b00 : 8 KHz
                      ; %b01 : 16 KHz
                      ; %b10 : 32 KHz
                      ; %b11 : Reserved
                     
wav-adpcm-block-size= %b000000000000-111111111111
                      ; it defines the size of ADPCM block in bytes. 
                      ; Typical block size for sampling rate 8 and 16 KHz
                      ; is 256 Bytes. While typical block size for 
                      ; sampling rate 32 KHz is 512 Bytes.

text-data           = text-atrb *OCTET

text-atrb           = %b0 set-append x-align y-align	
	       	      ; set/append and XY alignment
                      ; one octet containing a zero bit followed by 
                      ; three fields

set-append          = set-string / append-string
set-string          = %b0 
                      ; set a string

append-string       = %b1
	              ; append a string

x-align             = txt-x-left / txt-x-center / txt-x-right

txt-x-left          = %b000
                      ; left x-alignment

txt-x-center        = %b001
                      ; center x-alignment

txt-x-right         = %b010
                      ; right x- alignment
	      
y-align             = txt-y-bottom / txt-y-center / txt-y-top

txt-y-bottom        = %b000
                      ; bottom  y-alignment

txt-y-center        = %b001 
                      ; center y-alignment

txt-y-top           = %b010
                      ; top y-alignment	       	

picture-data        = pict-atrb1 pict-atrb2 pict-atrb3 pict-x-off 
                      pict-y-off *OCTET

pict-atrb1          = reserved id

reserved            = %b00-11
                      ; sHOULD set to %b00 on creation
                      ; SHOULD ignore value when reading

id                  = %b000000-111111	
 	       	      ; picture packet ID (0-63)

pict-atrb2          = pic-p-mode pic-format

pic-p-mode          = pict-store / pict-set / pict-recycle

pict-store          = %b00
                      ; store mode, see section 7.5.1

pict-set            = %b01 
                      ; set mode, see section 7.5.2 
pict-recycle        = %b10
                      ; recycle mode, see section 7.5.3 

pic-format          = BMP-format / JPEG-format / PNG-format 

BMP-format          = %b000001 

JPEG-format         = %b000010  

PNG-format          = %b000011  

pict-atrb3          = %x00	
	              ; draw mode : normal

pict-x-off          = OCTET	
	              ; if subchunk for picture packet = 0
	              ; %b00000000 : X-offset 0%
	              ; %b00000001 : X-offset 1%
	              ;   ...
	              ; %b01100100 : X-offset 100%
	              ; %b01100101 : Left
	              ; %b01100110 : Center
	              ; %b01100111 : Right
	              ; if subchunk for picture packet = 1
	              ; pict-x-off = pixel offset from left (0..255)

pict-y-off          = OCTET
	              ; if subchunk for picture packet = 0
	              ; %b00000000 : Y-offset 0%
	              ; %b00000001 : Y-offset 1%
	              ;   ...
	              ; %b01100100 : Y-offset 100%
	              ; %b01100101 : Top
	              ; %b01100110 : Center
	              ; %b01100111 : Bottom
	              ; if subchunk for picture packet = 1
	              ; pict-y-off = pixel offset from top (0...255)

animation-data      = anim-atrb0 anim-atrb1 anim-atrb2 anim-x-off 
                      anim-y-off *OCTET

anim-atrb0          = length4

length4             = 4OCTET
		      ; four bytes to indicate the length of the 
                      ; animation if length2 in ext-info-message is 
                      ; set to zero.   
anim-atrb1          = anim-p-mode anim-id
                      ; one octet containing two fields
                      ; note both fields contain fixed (reserved) 
                      ; values	

anim-p-mode         = %b01
	       	      ; Animation packet mode
	       	      ; %b01 : reserved

anim-id             = %b000000
	              ; Animation packet ID
	              ; %b000000 : reserved

anim-atrb2          = anim-p-format anim-code
                      ; one octet containing two fields

anim-p-format       = %b000
	              ; reserved

anim-code           = imag-obj-data / frame-id / frame-cmd

imag-obj-data       = %b00000 
                      ; image object data

frame-id            = %b00001 
                      ; frame ID

frame-cmd           = %b00010 
                      ; frame command

anim-x-off          = OCTET	
	              ; if subchunk for animation packet = 0
	              ; %b00000000 : X-offset 0%
	              ; %b00000001 : X-offset 1%
	              ;   ...
	              ; %b01100100 : X-offset 100%
	              ; %b01100101 : Left
	              ; %b01100110 : Center
	              ; %b01100111 : Right
	              ; if subchunk for animation packet = 1
	              ; anim-x-off = pixel offset from left (0..255)

anim-y-off          = OCTET	
	              ; if subchunk for animation packet = 0
	              ; %b00000000 : Y-offset 0%
	              ; %b00000001 : Y-offset 1%
	              ;    ...
	              ; %b01100100 : Y-offset 100%
	              ; %b01100101 : Top
	              ; %b01100110 : Center
	              ; %b01100111 : Bottom
	              ; if subchunk for animation packet = 1
	              ; anim-y-off = pixel offset from top (0..255)

    
    5 Tables
    
    5.1 TimeBase
    
    TimeBase is expressed by the lower 4-bits of the status byte.  The
    default value is 48.
    

cnts = WAV;PICT
    
cnts = SONG;WAV
    
cnts = SONG;WAV;PICT
    
