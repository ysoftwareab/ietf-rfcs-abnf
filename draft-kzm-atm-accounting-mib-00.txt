

Draft                      ATM Accounting MIB              February 1996




              Managed Objects for Managing the Collection
               and Storage of ATM Accounting Information

                            22 February 1996


                            Keith McCloghrie
                          Cisco Systems, Inc.
                             kzm@cisco.com


                             Juha Heinanen
                          Telecom Finland Inc.
                       EMail: jh@lohi.dat.tele.fi

                  <draft-kzm-atm-accounting-mib-00.txt>



Status of this Memo

This document is an Internet-Draft.  Internet-Drafts are working
documents of the Internet Engineering Task Force (IETF), its areas, and
its working groups.  Note that other groups may also distribute working
documents as Internet-Drafts.

Internet-Drafts are draft documents valid for a maximum of six months
and may be updated, replaced, or obsoleted by other documents at any
time.  It is inappropriate to use Internet- Drafts as reference material
or to cite them other than as ``work in progress.''

To learn the current status of any Internet-Draft, please check the
``1id-abstracts.txt'' listing contained in the Internet- Drafts Shadow
Directories on ds.internic.net (US East Coast), nic.nordu.net (Europe),
ftp.isi.edu (US West Coast), or munnari.oz.au (Pacific Rim).













Expires August 1996                                             [Page 1]





draft                      ATM Accounting MIB              February 1996


1.  Introduction

This memo defines an experimental portion of the Management Information
Base (MIB) for use with network management protocols in the Internet
community.  In particular, it describes managed objects used for
managing the collection and storage of ATM accounting information into a
file for later retrieval via a file transfer protocol.



2.  The SNMP Network Management Framework

They are: The SNMP Network Management Framework presently consists of
three major components.  They are:

  the SMI, described in RFC 1902 [1] - the mechanisms used for
  describing and naming objects for the purpose of management.

  the MIB-II, STD 17, RFC 1213 [2] - the core set of managed objects for
  the Internet suite of protocols.

  the protocol, RFC 1157 [3] and/or RFC 1905 [4], - the protocol for
  accessing managed objects.

The Framework permits new objects to be defined for the purpose of
experimentation and evaluation.

2.1.  Object Definitions

Managed objects are accessed via a virtual information store, termed the
Management Information Base or MIB.  Objects in the MIB are defined
using the subset of Abstract Syntax Notation One (ASN.1) defined in the
SMI.  In particular, each object type is named by an OBJECT IDENTIFIER,
an administratively assigned name.  The object type together with an
object instance serves to uniquely identify a specific instantiation of
the object.  For human convenience, we often use a textual string,
termed the descriptor, to refer to the object type.













Expires August 1996                                             [Page 2]





draft                      ATM Accounting MIB              February 1996


3.  Overview

In some ATM network environments, there is a need for the network
administrator to be able to collect accounting data on the usage of ATM
bandwidth/resources by connections within the ATM network.  Data
collection should be available for switched virtual connections (SVCs
and SVPs), and permanent virtual connections (PVCs and PVPs), including
soft-permanent virtual connections (SPVCCs and SPVPCs).

The potential quantity of such accounting information is such that it is
not, in general, feasible to retrieve the information via SNMP.  A
better method is to store the collected accounting information in a file
which can be subsequently retrieved via a file transfer protocol.

It is, however, appropriate to provide management control of the
collection of such accounting data via SNMP.  This memo describes a MIB
module which provides such control.

3.1.  Operational Model

The requirement is for ATM switches to collect data concerning the
connections which are routed across some subset of their UNI and/or NNI
interfaces.  The collected data is stored into a "file".  In order to
retrieve the data the administrator instructs the ATM switch to
terminate the collection of data into the current file, and start
collecting data into a new file.  After this operation, the data in the
old file is to available for retrieval via file transfer.

A collection file is defined to have a maximum size.  When the size of
the file currently being collected exceeds a threshold percentage of
that maximum size, an SNMP notification (e.g., a trap) can be optionally
generated.  An SNMP notification can also be optionally generated if the
file reaches its maximum size prior to collection being swapped to a new
file.

The accounting data collected for each connection consists of a set of
objects and their values.  The set of objects and their values are
collected on (either or both of) two occasions: on the release
(termination) of an SVC connection, and/or for every connection on a
periodic basis.

While collecting data to be stored in one file, the same set of objects
are collected for each connection on each occasion.  Storing the same
set of objects on each occasion allows only the values of those objects
to be stored in the file.  which results in a significantly smaller file





Expires August 1996                                             [Page 3]





draft                      ATM Accounting MIB              February 1996


size, since it allows the names of the objects to be stored once and
only once in the file, rather than having to store every value as a
(name, value) pair.

3.2.  Selection of Accounting Data

The items of accounting data to be collected are specified as a set of
objects.  Which objects are contained in such a set is selectable by an
administrator through the specification of two (subtree, list) tuples,
where the set of objects to be collected is the union of the subsets
specified by each tuple:

    'subtree' specifies a OBJECT IDENTIFIER value such that every object
        in the subset is named by the subtree's value appended with a
        single additional sub-identifier.

    'list' specifies an OCTET STRING value, such that if the N-th bit of
        the string's value is set then the the subset contains the
        object named by appending N as a single additional sub-
        identifier to the subtree.

The rationale for defining each subset as a (subtree,list) tuple is that
one and only one OBJECT IDENTIFIER and one OCTET STRING is needed to
define the subset of objects.  This greatly simplifies the MIB
mechanisms needed for selection: an NM application needs only to modify
a few scalar variables.  (In contrast, having each object in the set be
specified by its own separate OBJECT IDENTIFIER would require a MIB
table, and the NM application would probably need to create/destroy a
conceptual row in that table for each and every object in the set.)

The rationale for allowing two (subtree, list) tuples is so that one
such tuple can specify a standard 'subtree' (e.g., the
atmAcctngDataObjects subtree defined in this MIB module), and the second
tuple can specify an enterprise-specific 'subtree'.  Thus, the selected
set of objects can be the union of a set of standard objects and a set
of enterprise-defined objects.

3.3.  Format of Collection File

A collection file generated by this process contains the values of MIB
objects defined using the SNMPv2 SMI.  The standard way to encode the
values of SNMP MIB objects in a device-independent manner is through the
use of ASN.1's Basic Encoding Rules (BER) [9].   Thus, the format of the
accounting file is defined here using ASN.1 [8].






Expires August 1996                                             [Page 4]





draft                      ATM Accounting MIB              February 1996


The file consists of two parts, one for each (subtree, list) tuple.  If
only one (subtree, list) tuple is used, then the second part is
effectively empty.  Each part begins by specifying the tuple, i.e., its
subtree and list values, which is followed by a sequence of zero or more
connection records, where each connection record contains an ordered set
of values.  The values occur in ascending order of the sub-identifier
which identifies them within the subtree.

Formally, an accounting file is an ASN.1 value with the following
syntax:

     File ::=
         SEQUENCE {
             SEQUENCE {
                 first-subtree
                     OBJECT IDENTIFIER,
                 first-list
                     OCTET STRING,

                 SEQUENCE OF {     -- first sequence of connection records

                                     -- each record containing an ordered
                     SEQUENCE OF {   -- sequence of object values
                         value
                             ObjectSyntax
                     }
                 }
             }
             SEQUENCE {
                 second-subtree
                     OBJECT IDENTIFIER,
                 second-list
                     OCTET STRING,

                 SEQUENCE OF {     -- second sequence of connection records

                                     -- each record containing an ordered
                     SEQUENCE OF {   -- sequence of object values
                         value
                             ObjectSyntax
                     }
                 }
             }
         }






Expires August 1996                                             [Page 5]





draft                      ATM Accounting MIB              February 1996


where:

(1)  (first-subtree, first-list) specifies the set of objects contained
     in each and every record in the first sequence of connection
     records.

(2)  (second-subtree, second-list) specifies the set of objects
     contained in each and every record in the second sequence of
     connection records.  If no objects are selected from the second
     subtree, then the value of second-subtree is { 0 0 } and the value
     of second-list is the zero-length string.

(3)  the object values within each connection record occur in the same
     order as they are represented by the bits in the corresponding list
     value.

(4)  ObjectSyntax is defined by the SNMPv2 SMI [1].

The encoding of the above syntax using the Basic Encoding Rules is the
same as defined by the SNMPv2 [5], with the following exception:

   - when encoding the length field for a structured type, i.e., a
     SEQUENCE or SEQUENCE OF, the indefinite form encoding is permitted.



























Expires August 1996                                             [Page 6]





draft                      ATM Accounting MIB              February 1996


4.  Definitions


ATM-ACCOUNTING-CONTROL-MIB DEFINITIONS ::= BEGIN

IMPORTS
    MODULE-IDENTITY, OBJECT-TYPE, OBJECT-IDENTITY,
    NOTIFICATION-TYPE, experimental, Integer32,
    Counter64                                     FROM SNMPv2-SMI
    TEXTUAL-CONVENTION, DateAndTime, TruthValue   FROM SNMPv2-TC
    MODULE-COMPLIANCE, OBJECT-GROUP               FROM SNMPv2-CONF
    ifIndex                                       FROM IF-MIB
    AtmAddr                                       FROM ATMTC-MIB;


atmAccountingControlMIB MODULE-IDENTITY
    LAST-UPDATED "9602210000Z"
    ORGANIZATION ""
    CONTACT-INFO ""
    DESCRIPTION
            "The MIB module for managing the collection and storage of
            accounting information for connections in an ATM network."
    ::= { experimental xx }

atmAcctngMIBObjects OBJECT IDENTIFIER ::= { atmAccountingControlMIB 1 }

atmAcctngControl    OBJECT IDENTIFIER ::= { atmAcctngMIBObjects 1 }

DataCollectionSubtree ::= TEXTUAL-CONVENTION
    STATUS       current
    DESCRIPTION
            "The subtree component of a (subtree, list) tuple.  Such a
            (subtree, list) tuple defines a set of objects and their
            values collected as accounting data for an ATM connection.
            The subtree specifies a single OBJECT IDENTIFIER value such
            that each object in the set is named by the subtree value
            appended with a single additional sub-identifier."
    SYNTAX       OBJECT IDENTIFIER

DataCollectionList ::= TEXTUAL-CONVENTION
    STATUS       current
    DESCRIPTION
            "The list component of a (subtree, list) tuple.  Such a
            (subtree, list) tuple defines a set of objects and their
            values collected as accounting data for an ATM connection.





Expires August 1996                                             [Page 7]





draft                      ATM Accounting MIB              February 1996


            The subtree specifies a single OBJECT IDENTIFIER value such
            that each object in the set is named by the subtree value
            appended with a single additional sub-identifier.  The list
            specifies a set of data items, where the presence of an item
            in the list indicates that the item is (to be) present in
            the data collected for an ATM connection; the absence of an
            item from the list indicates that the item is not (to be)
            present in the data collected for an ATM connection.  Each
            data item is represented by an integer which when appended
            (as as additional sub-identifier) to the OBJECT IDENTIFER
            value of the subtree identified by the tuple, is the name of
            an object defining that data item (its description and its
            syntax).

            The list is specified as an OCTET STRING in which each data
            item is represented by a single bit, where data items 1
            through 8 are represented by the bits in the first octet,
            data items 9 through 16 by the bits in the second octet,
            etc.  In each octet, the lowest numbered data item is
            represented by the most significant bit, and the highest
            numbered data item by the least significant bit.  A data
            item is present in the list when its bit is set, and absent
            when its bit is reset.  If the length of an OCTET STRING
            value is too short to represent one or more data items
            defined in a subtree, then those data items are absent from
            the set identified by the tuple of that subtree and that
            OCTET STRING value."
    SYNTAX       OCTET STRING (SIZE(0..8))






















Expires August 1996                                             [Page 8]





draft                      ATM Accounting MIB              February 1996


-- ATM Accounting Control Objects

atmAcctngControlEnable OBJECT-TYPE
    SYNTAX      TruthValue
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "An indication of ATM accounting is enabled in this switch.
            When this object is modified from 'false' to 'true', the
            collection of accounting data is started (into a new file)."
    ::= { atmAcctngControl 1 }

atmAcctngControlCommand OBJECT-TYPE
    SYNTAX      INTEGER { noop(1), swapToNewFile(2) }
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "A control object for the collection of ATM accounting data.
            When read the value is always 'noop'.  Writing a value has
            the following effect:
               'noop'          - no effect,
               'swapToNewFile' - the collection of data into the current
                      file is terminated, and collection continues into
                      a new file."
    ::= { atmAcctngControl 2 }

atmAcctngControlCurrentSubtree1 OBJECT-TYPE
    SYNTAX      DataCollectionSubtree
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The combination of atmAcctngControlCurrentSubtree1 and
            atmAcctngControlCurrentList1 specify one (subtree, list)
            tuple; the combination of atmAcctngControlCurrentSubtree2
            and atmAcctngControlCurrentList2 specify an optional second
            tuple.  The combination of these two tuples define the set
            of objects which are currently being collected as the
            accounting data for each ATM connection."
    ::= { atmAcctngControl 3 }

atmAcctngControlCurrentList1 OBJECT-TYPE
    SYNTAX      DataCollectionList
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION





Expires August 1996                                             [Page 9]





draft                      ATM Accounting MIB              February 1996


            "The combination of atmAcctngControlCurrentSubtree1 and
            atmAcctngControlCurrentList1 specify one (subtree, list)
            tuple; the combination of atmAcctngControlCurrentSubtree2
            and atmAcctngControlCurrentList2 specify an optional second
            tuple.  The combination of these two tuples define the set
            of objects which are currently being collected as the
            accounting data for each ATM connection."
    ::= { atmAcctngControl 4 }

atmAcctngControlCurrentSubtree2 OBJECT-TYPE
    SYNTAX      DataCollectionSubtree
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The combination of atmAcctngControlCurrentSubtree1 and
            atmAcctngControlCurrentList1 specify one (subtree, list)
            tuple; the combination of atmAcctngControlCurrentSubtree2
            and atmAcctngControlCurrentList2 specify an optional second
            tuple.  The combination of these two tuples define the set
            of objects which are currently being collected as the
            accounting data for each ATM connection."
    ::= { atmAcctngControl 5 }

atmAcctngControlCurrentList2 OBJECT-TYPE
    SYNTAX      DataCollectionList
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The combination of atmAcctngControlCurrentSubtree1 and
            atmAcctngControlCurrentList1 specify one (subtree, list)
            tuple; the combination of atmAcctngControlCurrentSubtree2
            and atmAcctngControlCurrentList2 specify an optional second
            tuple.  The combination of these two tuples define the set
            of objects which are currently being collected as the
            accounting data for each ATM connection."
    ::= { atmAcctngControl 6 }

atmAcctngControlNextSubtree1 OBJECT-TYPE
    SYNTAX      DataCollectionSubtree
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "The combination of atmAcctngControlNextSubtree1 and
            atmAcctngControlNextList1 specify one (subtree, list) tuple;
            the combination of atmAcctngControlNextSubtree2 and





Expires August 1996                                            [Page 10]





draft                      ATM Accounting MIB              February 1996


            atmAcctngControlNextList2 specify an optional second tuple.
            The combination of these two tuples define a set of objects
            which are to be collected as the accounting data for each
            ATM connection.  The values of these objects at the time
            when the atmAcctngControlCommand object is set to
            'swapToNewFile', determine the set of objects collected into
            the file which begins at that time."
    ::= { atmAcctngControl 7 }

atmAcctngControlNextList1 OBJECT-TYPE
    SYNTAX      DataCollectionList
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "The combination of atmAcctngControlNextSubtree1 and
            atmAcctngControlNextList1 specify one (subtree, list) tuple;
            the combination of atmAcctngControlNextSubtree2 and
            atmAcctngControlNextList2 specify an optional second tuple.
            The combination of these two tuples define a set of objects
            which are to be collected as the accounting data for each
            ATM connection.  The values of these objects at the time
            when the atmAcctngControlCommand object is set to
            'swapToNewFile', determine the set of objects collected into
            the file which begins at that time."
    ::= { atmAcctngControl 8 }

atmAcctngControlNextSubtree2 OBJECT-TYPE
    SYNTAX      DataCollectionSubtree
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "The combination of atmAcctngControlNextSubtree1 and
            atmAcctngControlNextList1 specify one (subtree, list) tuple;
            the combination of atmAcctngControlNextSubtree2 and
            atmAcctngControlNextList2 specify an optional second tuple.
            The combination of these two tuples define a set of objects
            which are to be collected as the accounting data for each
            ATM connection.  The values of these objects at the time
            when the atmAcctngControlCommand object is set to
            'swapToNewFile', determine the set of objects collected into
            the file which begins at that time."
    ::= { atmAcctngControl 9 }

atmAcctngControlNextList2 OBJECT-TYPE
    SYNTAX      DataCollectionList





Expires August 1996                                            [Page 11]





draft                      ATM Accounting MIB              February 1996


    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "The combination of atmAcctngControlNextSubtree1 and
            atmAcctngControlNextList1 specify one (subtree, list) tuple;
            the combination of atmAcctngControlNextSubtree2 and
            atmAcctngControlNextList2 specify an optional second tuple.
            The combination of these two tuples define a set of objects
            which are to be collected as the accounting data for each
            ATM connection.  The values of these objects at the time
            when the atmAcctngControlCommand object is set to
            'swapToNewFile', determine the set of objects collected into
            the file which begins at that time."
    ::= { atmAcctngControl 10 }

atmAcctngControlMaximumFileSize OBJECT-TYPE
    SYNTAX      INTEGER (100..2147483647)
    UNITS       "bytes"
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "The maximum size of the the accounting data to be collected
            into the current file.  When the file of collected data
            reaches this size, new records are discarded.  This value
            may be modified at any time, but the new value must be
            greater the current size of the file into which data is
            currently being collected."
    ::= { atmAcctngControl 11 }

atmAcctngControlTrapThreshold OBJECT-TYPE
    SYNTAX      INTEGER (0..99)
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "A percentage of the maximum file size at which a 'nearly-
            full' trap is generated.  The value of 0 indicates that no
            'nearly-full' trap is to be generated."
    ::= { atmAcctngControl 12 }

atmAcctngControlTrapEnable OBJECT-TYPE
    SYNTAX      TruthValue
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "An indication of whether the atmAcctngFileNearlyFull and





Expires August 1996                                            [Page 12]





draft                      ATM Accounting MIB              February 1996


            atmAcctngFileFull traps are enabled."
    ::= { atmAcctngControl 13 }


--
--  Per-interface control table

atmAcctngControlIfTable OBJECT-TYPE
    SYNTAX      SEQUENCE OF AtmAcctngControlIfEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "A table controlling whether ATM accounting data is to be
            collected for the switch's UNI/NNI interfaces, i.e., each
            interface for which each the corresponding ifType has a
            value of atm(37) or atmLogicial(80)."
    ::= { atmAcctngControl 14 }

atmAcctngControlIfEntry OBJECT-TYPE
    SYNTAX      AtmAcctngControlIfEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "An entry which controls whether ATM accounting data is to
            be collected for an ATM-layer interface."
    INDEX   { ifIndex }
    ::= { atmAcctngControlIfTable 1 }

AtmAcctngControlIfEntry ::=
    SEQUENCE {
        atmAcctngControlIfEnable        INTEGER,
        atmAcctngControlIfCollectMode   INTEGER
    }

atmAcctngControlIfEnable OBJECT-TYPE
    SYNTAX      INTEGER { permanent(1), switched(2), all(3),
                          none(4) }
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "Indicates the types of connections, if any, for which ATM
            accounting data is to be collected on this interface.
              - 'permanent' indicates for permanent (PVC and PVP)
                      connections,
              - 'switched'  indicates for switched (SVC and SVP)





Expires August 1996                                            [Page 13]





draft                      ATM Accounting MIB              February 1996


                      connections
              - 'all' indicates for all connections
              - 'none' indicates that collection is disabled on this
                      interface."
    ::= { atmAcctngControlIfEntry 1 }

atmAcctngControlIfCollectMode OBJECT-TYPE
    SYNTAX      INTEGER { onRelease(1), periodically(2),
                          onReleaseAndPeriodically(3) }
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
            "An indication of when accounting data for this interface is
            to be written into the current file:
              - 'onRelease' - whenever a connection on this interface is
                      terminated, either through a Release message or
                      through management removal, information on that
                      connection is written.
              - 'periodically' - information on all connections on this
                      interface is written on the expiry of a periodic
                      timer,
              - 'onReleaseAndPeriodically' when a connection is
                      terminated, and on the expiry of a periodic
                      timer."
    ::= { atmAcctngControlIfEntry 2 }

























Expires August 1996                                            [Page 14]





draft                      ATM Accounting MIB              February 1996


-- definitions of objects for use in specifying the accounting
-- data to be collected

atmAcctngDataObjects OBJECT-IDENTITY
    STATUS      current
    DESCRIPTION
            "This identifier defines a subtree within which various
            objects are defined such that a set of objects to be
            collected as accounting data can be specified as a (subtree,
            list) tuple using this identifier as the subtree."
    ::= { atmAccountingControlMIB 2 }

-- With the definitions below, and a (subtree, list) tuple for
-- which subtree has the value atmAcctngDataObjects,
-- the list has an effective syntax of:
--
--    SYNTAX     BITS { connectionType(1),
--                      castType(2),
--                      ifName(3),
--                      vpi(4),
--                      vci(5),
--                      callingParty(6),
--                      calledParty(7),
--                      callReference(8),
--                      startTime(9),
--                      collectionTime(10),
--                      collectMode(11),
--                      releaseCause(12),
--                      serviceCategory(13),
--                      transmittedCells(14),
--                      transmittedClp0Cells(15),
--                      receivedCells(16),
--                      receivedClp0Cells(17),
--                      transmitTrafficDescriptorType(18),
--                      transmitTrafficDescriptorParam1(19),
--                      transmitTrafficDescriptorParam2(20),
--                      transmitTrafficDescriptorParam3(21),
--                      transmitTrafficDescriptorParam4(22),
--                      transmitTrafficDescriptorParam5(23),
--                      receiveTrafficDescriptorType(24),
--                      receiveTrafficDescriptorParam1(25),
--                      receiveTrafficDescriptorParam2(26),
--                      receiveTrafficDescriptorParam3(27),
--                      receiveTrafficDescriptorParam4(28),
--                      receiveTrafficDescriptorParam5(29) }





Expires August 1996                                            [Page 15]





draft                      ATM Accounting MIB              February 1996


atmAcctngConnectionType OBJECT-TYPE
    SYNTAX      INTEGER { pvc(1), pvp(2), svc(3), svp(4) }
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The type of connection."
    ::= { atmAcctngDataObjects 1 }

atmAcctngCastType OBJECT-TYPE
    SYNTAX      INTEGER { p2p(1), p2mp(2) }
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "An indication of whether the connection is point-to-point
            or point-to-multipoint."
    ::= { atmAcctngDataObjects 2 }

atmAcctngIfName OBJECT-TYPE
    SYNTAX      INTEGER { p2p(1), p2mp(2) }
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "A textual name for the interface on which the data for the
            connection was collected.  If the local SNMP agent supports
            the object ifName, the value of this object must be
            identical that of ifName in the conceptual row of the
            ifTable for this interface, i.e., the row corresponding to
            this interface for which ifType has a value of atm(37) or
            atmLogicial(80)."
    ::= { atmAcctngDataObjects 3 }

atmAcctngVpi OBJECT-TYPE
    SYNTAX      INTEGER (0..4095)
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The VPI used for the connection."
    ::= { atmAcctngDataObjects 4 }

atmAcctngVci OBJECT-TYPE
    SYNTAX      INTEGER (0..65535)
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The VCI used for the connection."





Expires August 1996                                            [Page 16]





draft                      ATM Accounting MIB              February 1996


    ::= { atmAcctngDataObjects 5 }

atmAcctngCallingParty OBJECT-TYPE
    SYNTAX      AtmAddr
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The connection's calling party.  If unknown (e.g., for a
            PVC), then the value of this object is the zero-length
            string."
    ::= { atmAcctngDataObjects 6 }

atmAcctngCalledParty OBJECT-TYPE
    SYNTAX      AtmAddr
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The connection's called party.  If unknown (e.g., for a
            PVC), then the value of this object is the zero-length
            string."
    ::= { atmAcctngDataObjects 7 }

atmAcctngCallReference OBJECT-TYPE
    SYNTAX      INTEGER (0..65535)
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The connection's call reference value.  If unknown (e.g.,
            for a PVC), then the value of this object is zero."
    ::= { atmAcctngDataObjects 8 }

atmAcctngStartTime OBJECT-TYPE
    SYNTAX      DateAndTime
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The time when the connection was established."
    ::= { atmAcctngDataObjects 9 }

atmAcctngCollectionTime OBJECT-TYPE
    SYNTAX      DateAndTime
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The time at which the connection data was collected."





Expires August 1996                                            [Page 17]





draft                      ATM Accounting MIB              February 1996


    ::= { atmAcctngDataObjects 10 }

atmAcctngCollectMode OBJECT-TYPE
    SYNTAX      INTEGER { onRelease(1), periodically(2) }
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The reason why this connection data was collected."
    ::= { atmAcctngDataObjects 11 }

atmAcctngReleaseCause OBJECT-TYPE
    SYNTAX      Integer32
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "If the connection data was collected because of the release
            of an SVC, then this is the cause code in the Release
            message for the connection; otherwise, this object has the
            value zero."
    ::= { atmAcctngDataObjects 12 }

atmAcctngServiceCategory OBJECT-TYPE
    SYNTAX      INTEGER { cbr(1), vbrRt(2), vbrNrt(3), abr(4),
                          ubr(5), undefined(6) }
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The connection's service category."
    ::= { atmAcctngDataObjects 13 }

atmAcctngTransmittedCells OBJECT-TYPE
    SYNTAX      Counter64
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The number of cells transmitted by this switch on this
            connection."
    ::= { atmAcctngDataObjects 14 }

atmAcctngTransmittedClp0Cells OBJECT-TYPE
    SYNTAX      Counter64
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The number of cells with CLP=0 transmitted by this switch





Expires August 1996                                            [Page 18]





draft                      ATM Accounting MIB              February 1996


            on this connection."
    ::= { atmAcctngDataObjects 15 }

atmAcctngReceivedCells OBJECT-TYPE
    SYNTAX      Counter64
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The number of cells received by this switch on this
            connection."
    ::= { atmAcctngDataObjects 16 }

atmAcctngReceivedClp0Cells OBJECT-TYPE
    SYNTAX      Counter64
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The number of cells with CLP=0 received by this switch on
            this connection."
    ::= { atmAcctngDataObjects 17 }

atmAcctngTransmitTrafficDescriptorType OBJECT-TYPE
    SYNTAX      OBJECT IDENTIFIER
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The traffic descriptor type in the direction in which the
            switch transmits cells on the connection."
    ::= { atmAcctngDataObjects 18 }

atmAcctngTransmitTrafficDescriptorParam1 OBJECT-TYPE
    SYNTAX      INTEGER (0..2147483647)
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The first traffic descriptor parameter in the direction in
            which this switch transmits cells on this connection.
            Interpretation of this parameter is dependent on the value
            of atmAcctngTransmitTrafficDescriptorType."
    ::= { atmAcctngDataObjects 19 }

atmAcctngTransmitTrafficDescriptorParam2 OBJECT-TYPE
    SYNTAX      INTEGER (0..2147483647)
    MAX-ACCESS  not-accessible
    STATUS      current





Expires August 1996                                            [Page 19]





draft                      ATM Accounting MIB              February 1996


    DESCRIPTION
            "The second traffic descriptor parameter in the direction in
            which this switch transmits cells on this connection.
            Interpretation of this parameter is dependent on the value
            of atmAcctngTransmitTrafficDescriptorType."
    ::= { atmAcctngDataObjects 20 }

atmAcctngTransmitTrafficDescriptorParam3 OBJECT-TYPE
    SYNTAX      INTEGER (0..2147483647)
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The third traffic descriptor parameter in the direction in
            which this switch transmits cells on this connection.
            Interpretation of this parameter is dependent on the value
            of atmAcctngTransmitTrafficDescriptorType."
    ::= { atmAcctngDataObjects 21 }

atmAcctngTransmitTrafficDescriptorParam4 OBJECT-TYPE
    SYNTAX      INTEGER (0..2147483647)
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The fourth traffic descriptor parameter in the direction in
            which this switch transmits cells on this connection.
            Interpretation of this parameter is dependent on the value
            of atmAcctngTransmitTrafficDescriptorType."
    ::= { atmAcctngDataObjects 22 }

atmAcctngTransmitTrafficDescriptorParam5 OBJECT-TYPE
    SYNTAX      INTEGER (0..2147483647)
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The fifth traffic descriptor parameter in the direction in
            which this switch transmits cells on this connection.
            Interpretation of this parameter is dependent on the value
            of atmAcctngTransmitTrafficDescriptorType."
    ::= { atmAcctngDataObjects 23 }

atmAcctngReceiveTrafficDescriptorType OBJECT-TYPE
    SYNTAX      OBJECT IDENTIFIER
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION





Expires August 1996                                            [Page 20]





draft                      ATM Accounting MIB              February 1996


            "The traffic descriptor type in the direction in which this
            switch receives cells on this connection."
    ::= { atmAcctngDataObjects 24 }

atmAcctngReceiveTrafficDescriptorParam1 OBJECT-TYPE
    SYNTAX      INTEGER (0..2147483647)
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The first traffic descriptor parameter in the direction in
            which this switch receives cells on this connection.
            Interpretation of this parameter is dependent on the value
            of atmAcctngReceiveTrafficDescriptorType."
    ::= { atmAcctngDataObjects 25 }

atmAcctngReceiveTrafficDescriptorParam2 OBJECT-TYPE
    SYNTAX      INTEGER (0..2147483647)
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The second traffic descriptor parameter in the direction in
            which this switch receives cells on this connection.
            Interpretation of this parameter is dependent on the value
            of atmAcctngReceiveTrafficDescriptorType."
    ::= { atmAcctngDataObjects 26 }

atmAcctngReceiveTrafficDescriptorParam3 OBJECT-TYPE
    SYNTAX      INTEGER (0..2147483647)
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The third traffic descriptor parameter in the direction in
            which this switch receives cells on this connection.
            Interpretation of this parameter is dependent on the value
            of atmAcctngReceiveTrafficDescriptorType."
    ::= { atmAcctngDataObjects 27 }

atmAcctngReceiveTrafficDescriptorParam4 OBJECT-TYPE
    SYNTAX      INTEGER (0..2147483647)
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The fourth traffic descriptor parameter in the direction in
            which this switch receives cells on this connection.
            Interpretation of this parameter is dependent on the value





Expires August 1996                                            [Page 21]





draft                      ATM Accounting MIB              February 1996


            of atmAcctngReceiveTrafficDescriptorType."
    ::= { atmAcctngDataObjects 28 }

atmAcctngReceiveTrafficDescriptorParam5 OBJECT-TYPE
    SYNTAX      INTEGER (0..2147483647)
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
            "The fifth traffic descriptor parameter in the direction in
            which this switch receives cells on this connection.
            Interpretation of this parameter is dependent on the value
            of atmAcctngReceiveTrafficDescriptorType."
    ::= { atmAcctngDataObjects 29 }





































Expires August 1996                                            [Page 22]





draft                      ATM Accounting MIB              February 1996


-- notifications

atmAcctngNotifications OBJECT IDENTIFIER ::= { atmAccountingControlMIB 3 }

atmAcctngNotifyPrefix OBJECT IDENTIFIER ::= { atmAcctngNotifications 0 }


atmAcctngFileNearlyFull NOTIFICATION-TYPE
    OBJECTS     { atmAcctngControlMaximumFileSize,
                  atmAcctngControlTrapThreshold }
    STATUS      current
    DESCRIPTION
            "An indication that the size of the file into which ATM
            accounting information is currently being collected has
            exceeded the threshold percentage of its maximum file size."
    ::= { atmAcctngNotifyPrefix 1 }

atmAcctngFileFull NOTIFICATION-TYPE
    OBJECTS     { atmAcctngControlMaximumFileSize }
    STATUS      current
    DESCRIPTION
            "An indication that the size of the file into which ATM
            accounting information is currently being collected has
            reached its maximum file size, and that new accounting data
            is now being discarded."
    ::= { atmAcctngNotifyPrefix 2 }
























Expires August 1996                                            [Page 23]





draft                      ATM Accounting MIB              February 1996


-- conformance information

atmAcctngConformance OBJECT IDENTIFIER ::= { atmAccountingControlMIB 4 }

atmAcctngGroups      OBJECT IDENTIFIER ::= { atmAcctngConformance 1 }
atmAcctngCompliances OBJECT IDENTIFIER ::= { atmAcctngConformance 2 }


-- compliance statements

atmAcctngCompliance MODULE-COMPLIANCE
    STATUS  current
    DESCRIPTION
            "The compliance statement for ATM switches which implement
            the ATM Accounting Control MIB."

    MODULE  -- this module
        MANDATORY-GROUPS { atmAcctngBasicGroup }

    ::= { atmAcctngCompliances 1 }






























Expires August 1996                                            [Page 24]





draft                      ATM Accounting MIB              February 1996


-- units of conformance

atmAcctngBasicGroup    OBJECT-GROUP
    OBJECTS { atmAcctngControlEnable,
              atmAcctngControlCommand,
              atmAcctngControlCurrentSubtree1,
              atmAcctngControlCurrentList1,
              atmAcctngControlNextSubtree1,
              atmAcctngControlNextList1,
              atmAcctngControlMaximumFileSize,
              atmAcctngControlTrapThreshold,
              atmAcctngControlTrapEnable,
              atmAcctngControlIfEnable,
              atmAcctngControlIfCollectMode }
    STATUS  current
    DESCRIPTION
            "A collection of objects providing control of the basic
            collection of ATM accounting data."
    ::= { atmAcctngGroups 1 }

atmAcctngSecondSubtreeGroup    OBJECT-GROUP
    OBJECTS { atmAcctngControlCurrentSubtree2,
              atmAcctngControlCurrentList2,
              atmAcctngControlNextSubtree2,
              atmAcctngControlNextList2 }
    STATUS  current
    DESCRIPTION
            "A collection of objects allowing the set of collected items
            of ATM accounting data to be selected from two subtrees."
    ::= { atmAcctngGroups 2 }

END


















Expires August 1996                                            [Page 25]





draft                      ATM Accounting MIB              February 1996


5.  Acknowledgements

6.  References

[1]  SNMPv2 Working Group, Case, J., McCloghrie, K., Rose, M., and
     S. Waldbusser, "Structure of Management Information for version 2
     of the Simple Network Management Protocol (SNMPv2)", RFC 1902,
     January 1996.

[2]  McCloghrie, K., and M. Rose, Editors, "Management Information Base
     for Network Management of TCP/IP-based internets: MIB-II", STD 17,
     RFC 1213, March 1991.

[3]  Case, J., Fedor, M., Schoffstall, M., and J. Davin, "Simple Network
     Management Protocol", RFC 1157, May 1990.

[4]  SNMPv2 Working Group, Case, J., McCloghrie, K., Rose, M., and
     S. Waldbusser, "Protocol Operations for version 2 of the Simple
     Network Management Protocol (SNMPv2)", RFC 1905, January 1996.

[5]  SNMPv2 Working Group, Case, J., McCloghrie, K., Rose, M., and
     S. Waldbusser, "Transport Mappings for version 2 of the Simple
     Network Management Protocol (SNMPv2)", RFC 1906, January 1996.

[6]  Ahmed, M., and K. Tesink, "Definitions of Managed Objects for ATM
     Management using SMIv2", RFC 1695, August 1994.

[7]  Noto, M., and K. Tesink, "Definitions of Textual Conventions and
     OBJECT-IDENTITY Objects for ATM Management", Internet Draft,
     February 1996.

[8]  Information processing systems - Open Systems Interconnection,
     "Specification of Abstract Syntax Notation One (ASN.1)",
     International Organization for Standardization, Internation
     Standard 8824, December 1987.

[9]  Information processing systems - Open Systems Interconnection,
     "Specification of Basic Encoding Rules for Abstract Syntax Notation
     One (ASN.1)", International Organization for Standardization,
     Internation Standard 8825, December 1987.










Expires August 1996                                            [Page 26]





draft                      ATM Accounting MIB              February 1996


7.  Security Considerations

Security issues are not discussed in this memo.


8.  Author's Address

     Keith McCloghrie
     Cisco Systems, Inc.
     170 West Tasman Drive,
     San Jose CA 95134-1706.

     Phone: +1 408 526 5260
     Email: kzm@cisco.com


     Juha Heinanen
     Telecom Finland Inc.
     PO Box 228
     SF-33101 Tampere
     Finland

     Phone: +358 49 500 958
     EMail: jh@lohi.dat.tele.fi


























Expires August 1996                                            [Page 27]





draft                      ATM Accounting MIB              February 1996


Table of Contents


1 Introduction ....................................................    2
2 The SNMP Network Management Framework ...........................    2
2.1 Object Definitions ............................................    2
3 Overview ........................................................    3
3.1 Operational Model .............................................    3
3.2 Selection of Accounting Data ..................................    4
3.3 Format of Collection File .....................................    4
4 Definitions .....................................................    7
5 Acknowledgements ................................................   26
6 References ......................................................   26
7 Security Considerations .........................................   27
8 Author's Address ................................................   27



































Expires August 1996                                            [Page 28]

