name=value or a value string. The parameter value string can be
date-time =        1*(date / time / (date time))


date =     year month day
year =     <four digits representing the century and year>
month =    [_-_] <digits representing the month in the year>
day =      [_-_] <digits representing the day of the month>

time =     hour minute second [fraction] (utc-sign / utc-offset)
hour =     <digits representing a period of time of 60 minutes>
minute =   [_:] <digits representing a period of time of 60
                seconds>
second =   [_:_] <digits representing a basic measurement unit
                of time in the International System of Units as defined
                in ISO 31-1>
fraction = _,_ <digits representing fraction of a second>
utc-sign = _Z_
utc-offset = [_+_ / _-_] hour [_:_] minute
        ;_+_ if offset is after UTC and _-_ if offset is before UTC

duration = _P_ (yr-period / tm-period / (yr-period tm-period))
        ;Duration needs to include at least one component of year or
        ;time periods
yr-period =        [yr-parm] [mo-parm] / wk-parm
yr-parm =          _Y_ <digits representing the number of years>
mo-parm =          _M_ <digits representing the number of months>
wk-parm =          _W_ <digits representing the number of weeks>

tm-period =        _T_ [hr-parm] [mn-parm] [sc-parm]
hr-parm =          _H_ <digits representing the number of hours>
mn-parm =          _M_ <digits representing the number of minutes>
sc-parm =          _S_ <digits representing the number of seconds>

CR         = <ASCII CR, carriage return>  ; (     15,      13.)
LF         = <ASCII LF, linefeed>         ; (     12,      10.)

CRLF       = CR LF

SPACE      = <ASCII SP, space>            ; (     40,      32.)

HTAB       = <ASCII HT, horizontal-tab>   ; (     11,       9.)

ws         = 1*(SPACE / HTAB)

        ; _whitespace,_ one or more spaces or tabs

wsls       = 1*(SPACE / HTAB / CRLF)

        ; whitespace with line separators

value      = 7bit / 8bit / quoted-printable / base64

        ; The value must be in the encoding type specified for the
        ; property value.

quoted-printable = <MIME RFC 1521 quoted-printable text>

base64     = <MIME RFC 1521 base64 text>

        ; the end of the text is marked with two CRLF sequences

        ; this results in one blank line before the start of the next

        ; property

word       = <any printable 7bit us-ascii except []=:., >

vcal_file  = [wsls] vcal [wsls]

vcal       = _BEGIN_ [ws] _:_ [ws] _VCALENDAR_ [ws]
                1*CRLF

                calprop calentities [ws] *CRLF

                _END_ [ws] _:_ [ws] _VCALENDAR_ [ws] 1*CRLF

calentities = calentities *CRLF calentity

                / calentity

calentity  = evententity
                / todoentity

evententity = _BEGIN_ [ws] _:_ [ws] _VEVENT_ [ws] 1*CRLF

                entprops [ws] *CRLF

                _END_ [ws] _:_ [ws] _VEVENT_ [ws] 1*CRLF

todoentity = _     _                   BEGIN  [ws] _:_ [ws] _VTODO_ [ws] 1*CRLF

                entprops [ws] *CRLF

                _END_ [ws] _:_ [ws] _VTODO_ [ws] 1*CRLF

calprops   = calprops *CRLF calprop

                / calprop

calprop    = _PROFILE_

                  [parms] _:_ value CRLF

                / _DAYLIGHT_

                  [params] _:_ value CRLF

                / _GEO_

                  [params] _:_ value CRLF

                / _PRODID_

                  [params] _:_ value CRLF

                / _TZ_

                  [params] _:_ value CRLF

                / _VERSION_ _:_ _1.0_ CRLF

        ; The VERSION calendar property MUST appear in the MIME Calendar
        ; Object.

entprops   = entprops *CRLF entprop

                / entprop

entprop    = [ws] simprop

                  [params] _:_ value CRLF

                / [ws] _AALARM_

                  [params] _:_ aalarmparts CRLF
                / [ws] _CATEGORIES_

                  [params] _:_ 1*catvals CRLF

                / [ws] _CLASS_

                  [params] _:_ classvals CRLF

                / [ws] _DALARM_

                  [params] _:_ dalarmparts CRLF

                / [ws] _EXDATE_

                  [params] _:_ xdatevals CRLF

                / [ws] _MALARM_

                  [params] _:_ malarmparts CRLF

                / [ws] _PALARM_

                  [params] _:_ palarmparts CRLF

                / [ws] _RDATE_

                  [params] _:_ rdatevals CRLF

                / [ws] _RESOURCES_

                  [params] _:_ 1*resvals CRLF

                / [ws] _STATUS_

                  [params] _:_ statvals CRLF

simprop    = _ATTACH_ / _ATTENDEE_ / _DCREATED_ / _COMPLETED_

                / _DESCRIPTION_ / _DTSTART_ / _DUE_ / _DTEND_ / _EXRULE_

                / _LAST-MODIFIED_ / _LOCATION_ / _RNUM_ / _PRIORITY_

                / _RELATED-TO_ / _RESPONSE-SEQUENCE_ / _RRULE_

                / _SEQUENCE_ / _SUMMARY_ / _TRANSP_ / _URL_ / _UID_

                / _X-_ word

aalarmparts        = 0*3(strnosemi _;_) strnosemi

        ; runTime, snoozeTime, repeatCount, audioContent

catvals    = _APPOINTMENT_ / _        _ /                                    BUSINESS    _EDUCATION_ / _HOLIDAY_
                / _MEETING_ / _MISCELLANEOUS_ / _NOT-IN-OFFICE_

                / _NON-WORKING-HOURS_ / _PERSONAL_ / _PHONE CALL_

                / _SICK DAY_ / _SPECIAL OCCASION_ / _TRAVEL_

                / _VACATION_ / _X-_ word / value

classvals  = _PUBLIC_ / _PRIVATE_ / _CONFIDENTIAL_ / _X-_ word

                 / value

dalarmparts        = 0*3(strnosemi _;_) strnosemi

        ; runTime, snoozeTime, repeatCount, displayString

malarmparts        = 0*5(strnosemi _;_) strnosemi

        ; runTime, snoozeTime, repeatCount, addressString,
        ; subjectstring, noteString

palarmparts        = 0*3(strnosemi _;_) strnosemi

        ; runTime, snoozeTime, repeatCount, procedureName

rdatevals  = 1*value

        ; One or more date/time values

resvals    = _CATERING_ / _CHAIRS_ / _EASEL_ / _PROJECTOR_ / _VCR_

                / _VEHICLE_ / _X-_ word / value

statvals   = _ACCEPTED_ / _NEEDS ACTION_ / _SENT_ / _TENTATIVE_

                / _CONFIRMED_   _                              /  DECLINED_ / _COMPLETED_ / _DELEGATED_

                / _X-_ word / value

params     = _;_ [ws] paramlist

paramlist  = paramlist [ws] _;_ [ws] param

                / param

param      = _TYPE_ [ws] _=_ [ws] ptypeval

                / [_VALUE_ [ws] _=_ [ws]] pvalueval

                / [_ENCODING_ [ws] _=_ [ws]] pencodingval

                / _CHARSET_ [ws] _=_ [ws] charsetval

                / _DATATYPE_ [ws] _=_ [ws] dtypeval
                / _LANGUAGE_ [ws] _=_ [ws] langval

                / _MEMBER_ [ws] _=_ [ws] <RFC 822 address specification>

                / _ROLE_ [ws] _=_ [ws] roleval

                / _STATUS_ [ws] _=_ [ws] statuval

                / _X-_ word [ws] _=_ [ws] word

                / knowntype

ptypeval   = knowntype / attendtype / _X-_ word

knowntype  = _BASIC_ / _WAVE_ / _X-_ word / value

attendtype = _INDIVIDUAL_ / _GROUP_ / _RESOURCE_ / _UNKNOWN_

pvalueval  = _INLINE_ / _URL_ / _CONTENT-ID_ / _CID_ /

                / _MESSAGE-ID_ / _MID_ / _X-_ word

pencodingval = _7BIT_ / _8BIT_ / _QUOTED-PRINTABLE_ / _BASE64_

                / _X-_ word

charsetval = <a character set string as defined in Section 7.1 of
                  RFC 1521>

dtypeval   = _AALARM_ / _BOOLEAN_ / _CID_ / _DALARM_ / _DATE-TIME_

                / _DST-RULE  /                            _   _D-T-LIST_ / _DURATION_ / _FLOAT_

                / _FLOAT-LIST_ /  INTEGER                                 _       _ / _INTEGER-LIST_ / _MALARM_

                / _MID_   _                        /  PALARM_ / _RFC822-ADDRESS_ / _RRULE_

                / _STRING_ / _STRING-LIST_ / _TIME-OFFSET_ / _URL_

                / _X-_ word

langval    = <a language string as defined in RFC 1766>

roleval    = _ATTENDEE_ / _ORGANIZER_ / _OWNER_ / _X-_ word

statusval  = _        _                   ACCEPTED  / _NEEDS ACTION_ / _SENT_ / _TENTATIVE_

                / _CONFIRMED_ / _DECLINED_ / _COMPLETED_ / _DELEGATED_

                / _X-_ word

strnosemi  = *(*nonsemi (_\;_ / _\_ CRLF)) *nonsemi

        ; To include a semicolon in this string, it must be escaped
        ; with a _\_ character.

nonsemi    = <any non-control ASCII except _;_>

