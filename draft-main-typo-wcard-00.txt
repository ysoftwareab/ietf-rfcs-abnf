





Network Working Group                                            A. Main
Internet-Draft: draft-main-typo-wcard-00                   Black Ops Ltd
Category: Informational                                   September 2003
Expires: March 2004


                    Typo Wildcard Considered Harmful

Status of this Memo

   This document is an Internet-Draft and is subject to all provisions
   of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/1id-abstracts.html

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html

Abstract

   Many Internet protocols have as an essential element a mapping from a
   textual name to some resource.  There is a technique, popular in some
   circles, of providing a default resource, which is returned in
   response to a lookup that does not match any known name, rather than
   returning an indication that there is no resource of that name.  This
   technique is dangerous and is to be discouraged in all contexts.
   This memo discusses the issues.

1 Introduction

   Internet protocols define many namespaces that map (usually textual)
   names to resources.  For example, the domain name space of the DNS
   protocol [DNS-CONC], local parts within a mail domain [SMTP], and
   HTTP pathnames within a single HTTP authority [HTTP].  Each namespace
   has an associated resolution mechanism, which determines the resource
   associated with a particular name.  In each case, the resolution
   protocol provides a way to unambiguously indicate that there is no



Main                       expires March 2004                   [Page 1]

Internet-Draft      Typo Wildcard Considered Harmful      September 2003


   resource with the name in question: DNS has the NXDOMAIN (Name Error)
   RCODE, SMTP has the 550 response code, and HTTP the 404 response
   code.

   From time to time, organisations controlling particular namespaces
   have decided that, rather than return such an error code, they would
   prefer to serve a default, or algorithmically-generated, resource in
   response to any unrecognised name.  The thinking goes something like
   this:

        "This user was obviously trying to reach *some* host/user/
        document here, but we're not sure which because they mistyped
        the name.  We'd better do something to try to direct them
        towards an appropriate resource, because if they got an error
        response they might not notice their typo and think we don't
        have what they're looking for, and then we'd lose their
        business."

   (As the final clause of that hypothetical monologue suggests, this
   thinking is typical of commercial entities.  It is seen almost
   nowhere else.)  Tempting though such defaulting is for some, it is
   counterproductive, and even dangerous.  It subverts the protocol in
   question, preventing other error-handling mechanisms from operating.
   It imposes behaviour that is, unavoidably, appropriate for only a
   very narrow range of circumstances.  It causes confusion and security
   problems by making naming behave in unexpected ways.

   The following sections consider the problems of wildcard resources in
   more detail.  Most of the discussion is applicable regardless of the
   particular protocol, so particular protocols will be mentioned only
   as examples or where there are real differences.

1.1 Note on a Protocol Feature

   It is notable that, of the three protocols mentioned so far, HTTP
   singularly does not suffer from widespread misuse of wildcards.  This
   can be ascribed to the fact that this protocol, unlike the others,
   allows a resource to be returned to the client *in addition to* a
   negative response.  A popular way to handle an HTTP negative (404)
   response is to display the resource sent by the server, and that
   seems to satisfy companies' desire to customise error handling.

2 Abstract Semantics

   At a conceptual level, the results of name lookups via the
   appropriate protocol are what define the name-to-resource mapping
   that is a particular namespace.  Usually this is a sparse mapping:
   most names don't refer to anything, indicated by the negative



Main                       expires March 2004                   [Page 2]

Internet-Draft      Typo Wildcard Considered Harmful      September 2003


   responses they elicit.

   With a wildcard resource being returned for each bad name, the name-
   to-resource mapping has all names referring to something, and most
   names referring to the default resource.  This is hardly ever the
   mapping that the manager of the namespace really intends to present.
   Usually the intent is that the bad name actually does not refer to
   any particular resource of the expected type, and the wildcard
   resource is an implementation technique used in order to control what
   happens when there is a name error.  In this case the name-to-
   resource mapping that is presented via the protocol is misleading.

   Any client that takes protocol conversations literally will see the
   namespace differently from how it was intended to be.  Computers are
   renowned for taking things literally, and Internet protocols
   generally are intended to be interpreted literally.  There is no
   limit to the ways in which the erroneous view of the namespace will
   be used.

   (Very occasionally one does want a namespace that behaves in that
   manner; for example, some people have a mail domain in which all
   addresses are valid and lead to the same mailbox, which allows them
   to use a variety of addresses within that domain without having to
   explicitly configure them.  That is quite different from the use of a
   wildcard to provide default behaviour.)

3 Proper Position of Error Handling

   The fundamental difference between returning negative responses and
   having a wildcard resource is which party to the protocol decides how
   to handle the name error.  In the former case it is the client, and
   in the latter case the server, which provides its error-handling
   behaviour in the form of a default resource.

   When a name error is indicated by a negative response, the client who
   requested the name lookup is responsible for determining how to
   handle the condition.  The client is fully aware of the name error,
   and also knows the purpose for which the name resolution was
   required.  It can therefore tailor its response to the precise
   situation.  Common behaviours in this situation include:

   o  pass the error to a higher software layer

   o  report the error to a human user

   o  try another name lookup with a different name

   o  try looking up a name in some other namespace



Main                       expires March 2004                   [Page 3]

Internet-Draft      Typo Wildcard Considered Harmful      September 2003


   o  try doing something else instead (e.g., use a different protocol,
      or do a fuzzy search in some database using some form of the name)

   o  use a default resource

   It is particularly to be borne in mind that the name lookup might
   have been speculative, expecting a high likelihood of a negative
   response, rather than expecting to find a resource.  Name error
   handling strategies that involve trying a number of possible names
   (perhaps variations on an incompletely-specified name) expect
   negative responses as a matter of course, and need those responses in
   order to function properly.  In such cases, a negative response is
   not viewed as an error condition; whether it is an error condition
   depends entirely on the client.

   Having a wildcard resource pre-empts the client, denying it the
   opportunity to employ its name error handling strategy of choice.
   The choice is instead made by the server, which is not aware of the
   reason for the name lookup.  The server cannot know what is an
   appropriate response to the condition.  Unavoidably, therefore, the
   wildcard resource is appropriate only for a very limited set of
   cases.  In any other situation, it causes inappropriate behaviour,
   behaviour other than what the client wanted.

   An error response that only works correctly in one situation would be
   as bad as an SMTP server that ignored its input and always produced a
   fixed sequence of responses: it would work in the one situation it
   was designed to expect, but cause chaos whenever presented with any
   other situation.

4 Limitations of Wildcard Resources

   The previous section gave a list of common client behaviours when
   faced with a name error.  That list is open-ended: the client has
   complete freedom.  When a server returns a wildcard resource instead
   of a negative response, not only does it pick one particular
   behaviour from that list, it is limited to always picking the last
   one: a default resource.  Its error-handling behaviour is therefore
   limited to what can be packaged into a resource served by the
   protocol.  This rules out most of the interesting possibilities.

   How limited the possibilities are depends on the particular protocol.
   Where the expected resource is an IP address, for example, it is
   possible to return the address of a host that will do interesting
   things, but looking for an X.25 address instead is not possible.

   The default resource is also limited to contain only information
   available to the server.  Error-handling behaviours such as falling



Main                       expires March 2004                   [Page 4]

Internet-Draft      Typo Wildcard Considered Harmful      September 2003


   back to a client-held copy of the expected resource are impossible.

5 Name Stability

   One variant of the `default resource' technique attempts to find an
   extant resource with a name similar to the bad name that was looked
   up.  This has the effect of making slightly mistyped names result in
   the resource the user was seeking, which at first glance may seem
   desirable, at least when one is in fact dealing with a human user.

   A major problem with this approach is that the user who gives an
   incorrect name and sees it work is likely to consider it a correct
   name.  It will in fact work just as well as the truly correct name,
   but it has a second-class status, and can cease to work in a
   surprising way.  If new names are added to the namespace in question,
   it may happen that an incorrect name that used to be resolved to one
   resource is now more similar to the name of a new resource, and so
   gets resolved to the new resource.  From the user's point of view,
   the name has changed meaning: what used to be a `correct' name for
   one resource is now a `correct' (possibly even truly correct) name
   for a different resource.

   This type of name instability is problematic in many situations; any
   long-lived reference that uses the incorrect-but-working name can
   lose its validity.  The name confusion can be particularly
   embarrassing in the case where the resources are private mailboxes.

6 Security Considerations

   Security mechanisms, like all other software, are built with certain
   assumptions and expectations.  If a security mechanism expects that a
   particular namespace will be sparse, then a default positive response
   to name lookups can confuse it just as well as it can confuse non-
   security software.

   For example, it is common to make a lightweight check for validity of
   the return path of a mail message by checking that there is somewhere
   to route mail for the domain part of that address.  This is based on
   the expectation that routing will fail for a made-up non-existent
   domain (as used to be common in forged mail).  If all non-existent
   domains look like they have an MX or A record, it appears that mail
   is routable to all such domains, and the return path validity check
   achieves nothing.

   The infinite nature of the namespaces constructed by wildcards can in
   some cases cause problems by itself.  Any attempt to enumerate all or
   some subset of the namespace will result in an arbitrarily large
   amount of data, leading to issues of resource exhaustion and



Main                       expires March 2004                   [Page 5]

Internet-Draft      Typo Wildcard Considered Harmful      September 2003


   consequent denial of service.  These issues can also arise with
   legitimate wildcard use, but often legitimate wildcards are to some
   extent expected; serious problems occur where the infinitely-large
   namespace is unexpected.

7 Informative References

   [DNS-CONC]   P.V. Mockapetris, "Domain names - concepts and
                facilities", RFC 1034, Nov-01-1987.

   [DNS-SEC]    D. Eastlake, "Domain Name System Security Extensions",
                RFC 2535, March 1999.

   [HTTP]       R. Fielding, J. Gettys, J. Mogul, H. Frystyk, L.
                Masinter, P. Leach, T. Berners-Lee, "Hypertext Transfer
                Protocol -- HTTP/1.1", RFC 2616, June 1999.

   [SMTP]       J. Klensin, Ed., "Simple Mail Transfer Protocol", RFC
                2821, April 2001.

8 Author's Address

   Andrew Main
   Black Ops Ltd
   Flat 2
   84 Isledon Road
   London
   N7 7JS
   United Kingdom

   Phone: +44 7887 945779
   EMail: zefram@fysh.org



















Main                       expires March 2004                   [Page 6]

