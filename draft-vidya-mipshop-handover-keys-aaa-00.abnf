HK1 = PRF(HMK, AAA-MN Nonce | AR1 ID | MN ID, "Handover Key"), where
HK2 = PRF (HMK, AAA-MN Nonce | AR2 ID | MN ID, "Handover Key"), where
HK = PRF(HMK, AAA-MN Nonce | AR ID | MN ID, "Handover Key"), where |
T1 = prf (K, S | 0x01)

T2 = prf (K, T1 | S | 0x02)

T3 = prf (K, T2 | S | 0x03)

T4 = prf (K, T3 | S | 0x04)

prf = HMAC-SHA1
K = EMSK

L = key label

D = application data

O = OutputLength (2 bytes)

S = L | " " | D | O

HK1 = PRF(HMK, AAA-MN Nonce, AR1 ID, MN ID, "Handover Key")

def=

     local State :nat,
           Seq1  :text,
           Nonce :text(fresh)

     const r1,r2  : protocol_id,
           add    : function

     init  State := 1

     transition

       1.  State = 1 /\ Rec(start) =|>
           State'= 2 /\ Snd({NAI.Seq}_HMK)

       2.  State = 2 /\ Rec({seq1.Nonce'}_HMK) =|>
           State'= 3 /\  Seq1' := add(Seq1,1)
                    % /\ Secret(Nonce',S)


def=

     local State : nat,
           NAI     : text,
           Nonce :text(fresh),
           Seq     :text

     const r1,r2 : protocol_id,
           add   : function


     init  State := 1

     transition

       1.  State   = 1 /\ Rec({NAI.Seq}_HMK)
                           =|>
           State' := 2 /\ Snd({seq1.Nonce'}_HMK)
                       /\ Seq' := add(Seq',1)
                       %/\ secret(Nonce',M)


intruder_knowledge={a,s,i}

