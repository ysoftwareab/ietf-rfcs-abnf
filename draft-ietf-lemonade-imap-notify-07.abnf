CONTEXT=SEARCH and/or CONTEXT=SORT as defined in [CONTEXT], the
capability      =/ "X-DRAFT-W06-NOTIFY"
                        ;; [[Note to RFC Editor: change the capability
                        ;; name before publication]]

command-auth    =/ notify

notify          = "NOTIFY" SP
                        (notify-set / notify-none)

notify-set      = "SET" [status-indicator] SP event-groups
                        ; Replace registered notification events
                        ; with the specified list of events

notify-none     = "NONE"
                        ; Cancel all registered notification
                        ; events. The client is not interested
                        ; in receiving any events.

status-indicator = SP "STATUS"

one-or-more-mailbox = mailbox / many-mailboxes

many-mailboxes = "(" mailbox *(SP mailbox) ")"

event-groups    = event-group *(SP event-group)

event-group     = "(" filter-mailboxes SP events ")"
                        ;; Only <message-event>s are allowed in <events>
                        ;; when <filter-mailboxes-selected> is used.

filter-mailboxes = filter-mailboxes-selected /
                        filter-mailboxes-other

filter-mailboxes-other = "inboxes" / "personal" / "subscribed" /
                        ( "subtree" SP one-or-more-mailbox ) /
                        ( "mailboxes" SP one-or-more-mailbox )

filter-mailboxes-selected = "selected" / "selected-delayed"
                        ;; Apply to the currently selected mailbox only.
                        ;; Only one of them can be specified in a NOTIFY
                        ;; command.
events          = ( "(" event *(SP event) ")" ) / "NONE"
                        ;; As in [MSGEVENT].
                        ;; "NONE" means that the client does not wish
                        ;; to receive any events for the specified
                        ;; mailboxes.

event           = message-event /
                        mailbox-event / user-event / event-ext

message-event   = ( "MessageNew" [SP
                            "(" fetch-att *(SP fetch-att) ")" ] )
                        / "MessageExpunge"
                        / "FlagChange"
                        / "AnnotationChange"
                        ;; "MessageNew" includes "MessageAppend" from
                        ;; [MSGEVENT]. "FlagChange" is any of
                        ;; "MessageRead", "MessageTrash", "FlagsSet",
                        ;; "FlagsClear" [MSGEVENT]. "MessageExpunge"
                        ;; includes "MessageExpire" [MSGEVENT].
                        ;; MessageNew and MessageExpunge MUST always
                        ;; be specified together. If FlagChange is
                        ;; specified, then MessageNew and MessageExpunge
                        ;; MUST be specified as well.
                        ;; The fett-att list may only be present for the
                        ;; SELECTED/SELECTED-DELAYED mailbox filter
                        ;; (<filter-mailboxes>).

mailbox-event   = "MailboxName" /
                        "SubscriptionChange" / "MailboxMetadataChange"
                        ; "SubscriptionChange" includes
                        ; MailboxSubscribe and MailboxUnSubscribe.
                        ; "MailboxName" includes MailboxCreate,
                        ; "MailboxDelete" and "MailboxRename".

user-event      = "ServerMetadataChange"

event-ext       = atom
                        ;; For future extensions

oldname-extended-item =  "OLDNAME" SP "(" mailbox ")"
                        ;; Extended data item (mbox-list-extended-item)
                        ;; returned in a LIST response when a mailbox is
                        ;; renamed.
                        ;; Note 1: the OLDNAME tag can be returned
                        ;; with and without surrounding quotes, as per
                        ;; mbox-list-extended-item-tag production.

resp-text-code  =/ "NOTIFICATIONOVERFLOW" /
                        unsupported-events-code

message-event-name   = "MessageNew" /
                        "MessageExpunge" / "FlagChange" /
                        "AnnotationChange"

event-name = message-event-name / mailbox-event /
                        user-event

unsupported-events-code = "BADEVENT"
                        SP "(" event-name *(SP event-name) ")"

modifier-update = "UPDATE"
                        [ "(" fetch-att *(SP fetch-att) ")" ]

mbx-list-oflag =/ "\NoAccess"


