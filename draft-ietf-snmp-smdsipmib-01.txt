


          Internet Draft           SIP Objects                March 1991


                          Definitions of Managed Objects
                            for the SIP Interface Type

                                    March 1991
                                   Version 2.0


                                SNMP Working Group

                               Kaj Tesink (editor)
                           Bell Communications Research
                             331 Newman Springs Road
                               Red Bank, NJ  07701

                            kaj@nvuxr.cc.bellcore.com






          1.  Status of this Memo

          This draft document will be submitted to the RFC editor as an
          experimental extension to the SNMP MIB.  Distribution of this
          memo is unlimited.  Please send comments to the editor.

          This document is currently a work in progress. It is not a
          completed standard. Version 2.0 is different from the previous
          November 1990 version in the following ways:
          - Some editorial changes (removal of "-" and "_" from object
          descriptors; pluralize Counter object descriptors),
          - Ranges and Sizes are added where appropriate.
          - An SMDS Applications group has been added; the only
          application identified in this group at this point is IP-
          over-SMDS (see [15]). The objects are defined as read-only,
          but a note allows for read-write implementations where
          appropriate (the note is similar as the one in the DS1 and DS3
          MIBs).
          - The error Counters have been refined by splitting them into
          a number of Counters and by adding an error-log capability.
          - An OBJECT IDENTIFIER has been reserved for managed objects
          for the use of Carrier Selection.
          - The OBJECT IDENTIFIERS have been renumbered according to the
          changes.





          Kaj Tesink (editor)                                   [Page 1]





          Internet Draft           SIP Objects                March 1991


          - The definitions for counters of total received PDUs on SIP
          layers 2 and 3 have been changed to EXCLUDE errored PDUs.

          2.  Abstract

          This memo defines an experimental portion of the Management
          Information Base (MIB) for use with network management
          protocols in TCP/IP-based internets.  In particular, it
          defines objects for managing SIP (SMDS Interface Protocol)
          objects.

          This memo does not specify a standard for the Internet
          community.





































          Kaj Tesink (editor)                                   [Page 2]





          Internet Draft           SIP Objects                March 1991


          3.  Historical Perspective

          As reported in RFC 1052, IAB Recommendations for the
          Development of Internet Network Management Standards [1], a
          two-prong strategy for network management of TCP/IP-based
          internets was undertaken.  In the short-term, the Simple
          Network Management Protocol (SNMP), defined in RFC 1067, was
          to be used to manage nodes in the Internet community.  In the
          long-term, the use of the OSI network management framework was
          to be examined.  Two documents were produced to define the
          management information: RFC 1065, which defined the Structure
          of Management Information (SMI), and RFC 1066, which defined
          the Management Information Base (MIB).  Both of these
          documents were designed so as to be compatible with both the
          SNMP and the OSI network management framework.

          This strategy was quite successful in the short-term:
          Internet-based network management technology was fielded, by
          both the research and commercial communities, within a few
          months.  As a result of this, portions of the Internet
          community became network manageable in a timely fashion.

          As reported in RFC 1109, Report of the Second Ad Hoc Network
          Management Review Group [2], the requirements of the SNMP and
          the OSI network management frameworks were more different than
          anticipated.  As such, the requirement for compatibility
          between the SMI/MIB and both frameworks was suspended.  This
          action permitted the operational network management framework,
          based on the SNMP, to respond to new operational needs in the
          Internet community by producing MIB-II.

          In May of 1990, the core documents were elevated to "Standard
          Protocols" with "Recommended" status.  As such, the Internet-
          standard network management framework consists of: Structure
          and Identification of Management Information for TCP/IP-based
          internets, RFC 1155 [3], which describes how managed objects
          contained in the MIB are defined; Management Information Base
          for Network Management of TCP/IP-based internets, which
          describes the managed objects contained in the MIB, RFC 1156
          [4]; and, the Simple Network Management Protocol, RFC 1157
          [5], which defines the protocol used to manage these objects.

          Consistent with the IAB directive to produce simple, workable
          systems in the short-term, the list of managed objects defined
          in the Internet-standard MIB was derived by taking only those





          Kaj Tesink (editor)                                   [Page 3]





          Internet Draft           SIP Objects                March 1991


          elements which are considered essential.  However, the SMI
          defined three extensibility mechanisms: one, the addition of
          new standard objects through the definitions of new versions
          of the MIB; two, the addition of widely-available but non-
          standard objects through the experimental subtree; and three,
          the addition of private objects through the enterprises
          subtree.  Such additional objects can not only be used for
          vendor-specific elements, but also for experimentation as
          required to further the knowledge of which other objects are
          essential.

          This memo defines extensions to the MIB using the second
          method.  It contains definitions of managed objects used for
          experimentation.




































          Kaj Tesink (editor)                                   [Page 4]





          Internet Draft           SIP Objects                March 1991


          4.  Objects

          Managed objects are accessed via a virtual information store,
          termed the Management Information Base or MIB.  Objects in the
          MIB are defined using the subset of Abstract Syntax Notation
          One (ASN.1) [7] defined in the SMI.  In particular, each
          object has a name, a syntax, and an encoding.  The name is an
          object identifier, an administratively assigned name, which
          specifies an object type.  The object type together with an
          object instance serves to uniquely identify a specific
          instantiation of the object.  For human convenience, we often
          use a textual string, termed the OBJECT DESCRIPTOR, to also
          refer to the object type.

          The syntax of an object type defines the abstract data
          structure corresponding to that object type.  The ASN.1
          language is used for this purpose.  However, the SMI [3]
          purposely restricts the ASN.1 constructs which may be used.
          These restrictions are explicitly made for simplicity.

          The encoding of an object type is simply how that object type
          is represented using the object type's syntax.  Implicitly
          tied to the notion of an object type's syntax and encoding is
          how the object type is represented when being transmitted on
          the network.  The SMI specifies the use of the basic encoding
          rules of ASN.1 [8], subject to the additional requirements
          imposed by the SNMP.

          4.1.  Format of Definitions

          Section 6 contains contains the specification of all object
          types contained in this MIB module.  The object types are
          defined using the conventions defined in the SMI, as amended
          by the extensions specified in [13,14].
















          Kaj Tesink (editor)                                   [Page 5]





          Internet Draft           SIP Objects                March 1991


          5.  Overview

          These objects are used when the particular media being used to
          realize an interface is a SIP interface.  At present, this
          applies to these values of the ifType variable in the
          Internet-standard MIB:

               sip (31)

          The definitions contained herein are based on the SIP
          specifications in Bellcore TA-TSY-000772 Issue 3, and TA-TSY-
          000773 Issue 2 [11,12].

          The SIP (SMDS Interface Protocol) protocol stack is defined as
          follows in [11]:

                              ____________________
                              |                                  |
                              |    SIP Level 3 [11]     |
                              |___________________|
                              |                                  |
                              |    SIP Level 2 [11]     |
                              |___________________|
                              |                                  |
                              |        PLCP [12]           |
                              |___________________|
                              |                                  |
                              |    DS1 or DS3 [12]      |
                              |___________________|



          The PLCP (Physical Layer Convergence Procedure) adapts the
          capabilities of the transmission system (DS1 or DS3 formats)
          to the service expected by SIP Level 2.  Managed objects for
          DS1 and DS3 Interface Types are defined in [13] and [14]
          respectively, and can be utilized for management of SIP
          interfaces. This document defines managed objects for the
          remaining protocol levels of the SIP Interface Type.  This
          document does not specify objects for the management of
          subscription or configuration of Subscriber Network Interfaces
          (SNIs). Those objects are defined in [16].








          Kaj Tesink (editor)                                   [Page 6]





          Internet Draft           SIP Objects                March 1991


          6.  Object Definitions

               RFCxxxx-MIB DEFINITIONS ::= BEGIN

               IMPORTS
                       experimental, Counter
                               FROM RFC1155-SMI
                       DisplayString
                               FROM RFC1158-MIB
                       OBJECT-TYPE
                               FROM RFC-oooo
                       TRAP-TYPE
                               FROM RFC-tttt;

               --  This MIB module uses the extended OBJECT-TYPE macro as
               --  defined in [9], and the TRAP-TYPE macro as defined in [10].

               --  This is the MIB module for the SIP objects

               -- All representations of SMDS addresses in this MIB module use,
               -- as a textual convention (i.e., this convention does not affec
t
               -- their encoding), the data type:

               SMDSAddress ::= OCTET STRING (SIZE (8))
               -- the 60-bit SMDS address, preceded by 4 bits with the
               -- following values:
               -- "1100" when representing an individual address
               -- "1110" when representing a group address



               sip     OBJECT IDENTIFIER ::= { experimental 16 }


















          Kaj Tesink (editor)                                   [Page 7]





          Internet Draft           SIP Objects                March 1991


               -- The SIP Level 3 group


               sipL3Table  OBJECT-TYPE
                   SYNTAX  SEQUENCE OF SIPL3Entry
                   ACCESS  not-accessible
                   STATUS  mandatory
                   DESCRIPTION
                           "This table contains SIP-L3 parameters and
                           state variables, one entry per SIP port."

                  ::= { sip 1 }

              sipL3Entry  OBJECT-TYPE
                  SYNTAX  SIPL3Entry
                  ACCESS  not-accessible
                  STATUS  mandatory
                  DESCRIPTION
                          "This list contains SIP L3 parameters and
                          state variables."
                 INDEX   { sipL3Index }
                 ::= { sipL3Table 1 }

             SIPL3Entry  ::= SEQUENCE {
                 sipL3Index
                     INTEGER,
                 receivedIndividualDAedSIPL3PDUs
                     Counter,
                 receivedGAedSIPL3PDUs
                     Counter,
                 sentIndividualDAedSIPL3PDUs
                     Counter,
                 sentGAedSIPL3PDUs
                     Counter,
                 erroredSIPL3PDUs
                     Counter,
                 unrecognizedDestinationAddresses
                     Counter,
                 unrecognizedGroupAddresses
                     Counter,
                 invalidSMDSAddressTypes
                     Counter,
                 headOfBusDiscards
                     Counter
                 }





          Kaj Tesink (editor)                                   [Page 8]





          Internet Draft           SIP Objects                March 1991


             sipL3Index  OBJECT-TYPE
                 SYNTAX  INTEGER (1..65535)
                 ACCESS  read-only
                 STATUS  mandatory
                 DESCRIPTION
                         "The value of this object identifies the SIP
                         port interface for which this entry contains
                         management information.  The value of this
                         object for a particular interface has the same
                         value as the ifIndex object, defined in [4,6],
                         for the same interface."
                ::= { sipL3Entry 1 }


            receivedIndividualDAedSIPL3PDUs OBJECT-TYPE
                SYNTAX  Counter
                ACCESS  read-only
                STATUS  mandatory
                DESCRIPTION
                        "The total number of SIP Level 3 PDUs received
                        from the remote system across the SNI and
                        containing an individual destination address.
                        The total includes only unerrored L3-PDUs."
               ::= { sipL3Entry 2 }

           receivedGAedSIPL3PDUs OBJECT-TYPE
               SYNTAX  Counter
               ACCESS  read-only
               STATUS  mandatory
               DESCRIPTION
                       "The total number of SIP Level 3 PDUs received
                       from the remote system across the SNI and
                       containing an group destination address.  The
                       total  includes only unerrored L3-PDUs."
              ::= { sipL3Entry 3 }

          sentIndividualDAedSIPL3PDUs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of SIP Level 3 PDUs that have been
                      sent by this system across the SNI and that
                      contain an individual destination address."
              ::= { sipL3Entry 4 }





          Kaj Tesink (editor)                                   [Page 9]





          Internet Draft           SIP Objects                March 1991


          sentGAedSIPL3PDUs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of group addressed SIP L3-PDUs that
                      have been sent by this system across the SNI."
              ::= { sipL3Entry 5 }


          -- The total number of SIPL3-PDU errors can be calculated as
          -- (Syntactical errors + Semantical/service errors )
          -- Syntactical errors include:
          --    erroredSIPL3PDUs
          -- Latest occurrences of syntactical error types are logged in
          --    sipL3PDUErrorTable.
          -- Semantical/service errors include:
          --    unrecognizedDestinationAddresses
          --    unrecognizedGroupAddresses
          --    invalidSMDSAddressTypes
          --    headOfBusDiscards
          -- Note that public networks supporting SMDS may discard
          -- SIPL3-PDUs due to subscription violations. Related
          -- managed objects are defined in [16].

          erroredSIPL3PDUs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of SIP Level 3 PDUs received
                      from the remote system that were discovered to
                      have errors (including protocol processing and bit
                      errors but excluding addressing-related errors)
                      and were discarded.  Includes both group addressed
                      L3-PDUs and L3-PDUs containing an individual
                      destination address."
              ::= { sipL3Entry 6 }

          unrecognizedDestinationAddresses OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of SIP Level 3 PDUs received from the





          Kaj Tesink (editor)                                  [Page 10]





          Internet Draft           SIP Objects                March 1991


                      remote system with invalid or unknown destination
                      addresses (Source or Destination Address Screening
                      violations are not included)."
              ::= { sipL3Entry 7 }

          unrecognizedGroupAddresses OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of SIP Level 3 PDUs received from the
                      remote system with invalid or unknown group
                      addresses."
              ::= { sipL3Entry 8 }

          invalidSMDSAddressTypes OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of SIP Level 3 PDUs received from the
                      remote system with invalid or unknown destination
                      addresses (Source or Destination Address Screening
                      violations are not included)."
              ::= { sipL3Entry 9 }

          headOfBusDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of SIP Level 3 PDUs received from the
                      remote system that contained a destination address
                      assigned to the SNI from which it was received,
                      and was discarded because it reached the end of
                      the bus."
              ::= { sipL3Entry 10 }













          Kaj Tesink (editor)                                  [Page 11]





          Internet Draft           SIP Objects                March 1991


          -- The SIP Level 2 group


          sipL2Table  OBJECT-TYPE
              SYNTAX  SEQUENCE OF SIPL2Entry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "This table contains SIP-L2 parameters and state
                      variables, one entry per SIP port."

              ::= { sip 2 }

          sipL2Entry  OBJECT-TYPE
              SYNTAX  SIPL2Entry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "This list contains SIP L2 parameters and state
                      variables."
              INDEX   { sipL2Index }
              ::= { sipL2Table 1 }

          SIPL2Entry  ::= SEQUENCE {
              sipL2Index
                  INTEGER,
              receivedSIPL2PDUs
                  Counter,
              sentSIPL2PDUs
                  Counter,
              hcsOrCRCErrors
                  Counter,
              payloadLengthErrors
                  Counter,
              sequenceNumberErrors
                  Counter,
              midCurrentlyActiveErrors
                  Counter,
              bomOrSSMsMIDErrors
                  Counter,
              eomsMIDErrors
                  Counter
              }







          Kaj Tesink (editor)                                  [Page 12]





          Internet Draft           SIP Objects                March 1991


          sipL2Index  OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of this object identifies the SIP port
                      interface for which this entry contains management
                      information.  The value of this object for a
                      particular interface has the same value as the
                      ifIndex object, defined in [4,6], for the same
                      interface."
              ::= { sipL2Entry 1 }




          receivedSIPL2PDUs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      " The number of SIP Level 2 PDUs received from the
                      remote system across the SNI. The total includes
                      only unerrored L2-PDUs."
              ::= { sipL2Entry 2 }

          sentSIPL2PDUs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      " The number of SIP Level 2 PDUs that have been
                      sent by this system across the SNI."
              ::= { sipL2Entry 3 }

          -- The total number of SIPL2-PDU errors can be calculated as the
          -- sum of:
          --    hcsOrCRCErrors
          --    payloadLengthErrors
          --    sequenceNumberErrors
          --    midCurrentlyActiveErrors
          --    bomOrSSMsMIDErrors
          --    eomsMIDErrors

          hcsOrCRCErrors  OBJECT-TYPE





          Kaj Tesink (editor)                                  [Page 13]





          Internet Draft           SIP Objects                March 1991


              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of received SIP Level 2 PDUs that were
                      discovered to have either a Header Check Sequence
                      error or a Payload CRC violation."
              ::= { sipL2Entry 4 }

          payloadLengthErrors  OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of received SIP Level 2 PDUs that had
                      Payload Length errors that fall in the following
                      specifications:
                      - Payload length field value not equal to a
                      multiple of 4 octets,
                      - SSM L2_PDU payload length field value less than
                      28 octets or greater than 44 octets,
                      - BOM or COM L2_PDU payload length field not equal
                      to 44 octets,
                      - EOM L2_PDU payload length field value less than
                      4 octets or greater than 44 octets."
              ::= { sipL2Entry 5 }

          sequenceNumberErrors  OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of received SIP Level 2 PDUs that had
                      a sequence number within the L2_PDU not equal to
                      the expected sequence number of the SMDS SS
                      receive process."
              ::= { sipL2Entry 6 }

          midCurrentlyActiveErrors  OBJECT-TYPE
              SYNTAX Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of received SIP Level 2 PDUs that are
                      BOMs for which an active receive process is





          Kaj Tesink (editor)                                  [Page 14]





          Internet Draft           SIP Objects                March 1991


                      already started."
              ::= { sipL2Entry 7 }

          bomOrSSMsMIDErrors  OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of received SIP Level 2 PDUs that are
                      SSMs with a MID not equal to zero or are BOMs with
                      MIDs equal to zero."
              ::= { sipL2Entry 8 }

          eomsMIDErrors  OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of received SIP Level 2 PDUs that are
                      EOMs for which there is no active receive process
                      for the MID (i.e., the receipt of an EOM which
                      does not correspond to a BOM) OR the EOM has a MID
                      equal to zero."
              ::= { sipL2Entry 9 }


























          Kaj Tesink (editor)                                  [Page 15]





          Internet Draft           SIP Objects                March 1991


          -- The SIP PLCP group
          sipPLCP OBJECT IDENTIFIER ::= { sip 3 }

          sipDS1PLCPTable  OBJECT-TYPE
              SYNTAX  SEQUENCE OF SIPDS1PLCPEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "This table contains SIP DS1-PLCP parameters and
                      state variables, one entry per SIP port."
              ::= { sipPLCP 1 }

          sipDS1PLCPEntry  OBJECT-TYPE
              SYNTAX  SIPDS1PLCPEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "This list contains SIP DS1-PLCP parameters and
                      state variables."
              INDEX   { sipDS1PLCPIndex }
              ::= { sipDS1PLCPTable 1 }

          SIPDS1PLCPEntry  ::= SEQUENCE {
              sipDS1PLCPIndex
                  INTEGER,
              ds1PLCPSEFSs
                  Counter,
              ds1PLCPYellowSignal
                  INTEGER,
              ds1PLCPRedAlarm
                  INTEGER,
              ds1PLCPUASs
                  Counter
              }


          sipDS1PLCPIndex  OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of this object identifies the SIP port
                      interface for which this entry contains management
                      information.  The value of this object for a
                      particular interface has the same value as the





          Kaj Tesink (editor)                                  [Page 16]





          Internet Draft           SIP Objects                March 1991


                      ifIndex object, defined in [4,6], for the same
                      interface."
              ::= { sipDS1PLCPEntry 1 }


          ds1PLCPSEFSs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A DS1 Severely Errored Framing Second (SEFS) is a
                      count of one-second intervals containing one or
                      more SEF events.  A Severely Errored Framing (SEF)
                      event is declared when an error in the A1 octet
                      and an error in the A2 octet of a framing octet
                      pair (i.e., errors in both framing octets), or two
                      consecutive invalid and/or nonsequential Path
                      Overhead Identifier octets are detected."
              ::= { sipDS1PLCPEntry 2 }

          ds1PLCPYellowSignal OBJECT-TYPE
              SYNTAX  INTEGER {
                          ds1PLCPYellowSignal(1),
                          ds1PLCPNoYellowSignal(2)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable indicates if a Yellow Signal is
                      received.  See TA-TSY-000773 [12]."
              ::= { sipDS1PLCPEntry 3 }

          ds1PLCPRedAlarm OBJECT-TYPE
              SYNTAX  INTEGER {
                          ds1PLCPRedAlarm(1),
                          ds1PLCPNoRedAlarm(2)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable indicates if a Red Alarm condition
                      exists.  A Red Alarm condition is sent when the
                      declaration of a PLCP Loss of Frame failure
                      condition occurs.  See TA-TSY-000773 [12]."
              ::= { sipDS1PLCPEntry 4 }





          Kaj Tesink (editor)                                  [Page 17]





          Internet Draft           SIP Objects                March 1991


          ds1PLCPUASs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The counter associated with the number of
                      Unavailable Seconds, as defined by [12],
                      encountered by the PLCP."
              ::= { sipDS1PLCPEntry 5 }


          -- The SIP DS3-PLCP group


          sipDS3PLCPTable  OBJECT-TYPE
              SYNTAX  SEQUENCE OF SIPDS1PLCPEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "This table contains SIP DS3-PLCP parameters and
                      state variables, one entry per SIP port."

              ::= { sipPLCP 2 }

          sipDS3PLCPEntry  OBJECT-TYPE
              SYNTAX  SIPDS3PLCPEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "This list contains SIP DS3-PLCP parameters and
                      state variables."
              INDEX   { sipDS3PLCPIndex }
              ::= { sipDS3PLCPTable 1 }

          SIPDS3PLCPEntry  ::= SEQUENCE {
              sipDS3PLCPIndex
                  INTEGER,
              ds3PLCPSEFSs
                  Counter,
              ds3PLCPYellowSignal
                  INTEGER,
              ds3PLCPRedAlarm
                  INTEGER,
              ds3PLCPUASs
                  Counter





          Kaj Tesink (editor)                                  [Page 18]





          Internet Draft           SIP Objects                March 1991


              }


          sipDS3PLCPIndex  OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of this object identifies the SIP port
                      interface for which this entry contains management
                      information.  The value of this object for a
                      particular interface has the same value as the
                      ifIndex object, defined in [4,6], for the same
                      interface."
              ::= { sipDS3PLCPEntry 1 }

          ds3PLCPSEFSs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A DS3 Severely Errored Framing Second (SEFS) is a
                      count of one-second intervals containing one or
                      more SEF events.  A Severely Errored Framing (SEF)
                      event is declared when an error in the A1 octet
                      and an error in the A2 octet of a framing octet
                      pair (i.e., errors in both framing octets), or two
                      consecutive invalid and/or nonsequential Path
                      Overhead Identifier octets are detected."
              ::= { sipDS3PLCPEntry 2 }

          ds3PLCPYellowSignal OBJECT-TYPE
              SYNTAX  INTEGER {
                          ds3PLCPYellowSignal(1),
                          ds3PLCPNoYellowSignal(2)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable indicates if a Yellow Signal is
                      received.  See TA-TSY-000773 [12]."
              ::= { sipDS3PLCPEntry 3 }

          ds3PLCPRedAlarm OBJECT-TYPE
              SYNTAX  INTEGER {





          Kaj Tesink (editor)                                  [Page 19]





          Internet Draft           SIP Objects                March 1991


                          ds3PLCPRedAlarm(1),
                          ds3PLCPNoRedAlarm(2)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable indicates if a Red Alarm condition
                      exists.  A Red Alarm condition is sent when the
                      declaration of a PLCP Loss of Frame failure
                      condition occurs.  See TA-TSY-000773 [12]."
              ::= { sipDS3PLCPEntry 4 }

          ds3PLCPUASs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The counter associated with the number of
                      Unavailable Seconds, as defined by [12],
                      encountered by the PLCP."
              ::= { sipDS3PLCPEntry 5 }


          -- The SMDS Applications Group
          -- Applications that have been identified for this group are:
          --          * IP-over-SMDS (details are specified in [15])

          smdsApplications OBJECT IDENTIFIER ::= { sip 4 }
          ipOverSMDS OBJECT IDENTIFIER ::= { smdsApplications 1 }

          -- Although the objects in this group are read-only, at the
          -- agent's discretion they may be made read-write so that the
          -- management station, when appropriately authorized, may
          -- change the addressing information related to the configuration
          -- of a logical IP subnetwork over SMDS.

          ipOverSMDSAddressTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF IpOverSMDSAddressEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "The table of addressing information relevant to
                      this entity's IP addresses."
              ::= { ipOverSMDS 1 }






          Kaj Tesink (editor)                                  [Page 20]





          Internet Draft           SIP Objects                March 1991


          ipOverSMDSAddressEntry OBJECT-TYPE
              SYNTAX  IpOverSMDSAddressEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "The addressing information for one of this
                      entity's IP addresses."
              INDEX   { ipEntryAddress }
              ::= { ipOverSMDSAddressTable 1 }

          IpOverSMDSAddressEntry ::=
              SEQUENCE {
                 ipEntryAddress
                     IpAddress,
                 ipEntryAddressIfIndex
                     INTEGER,
                 smdsHA
                     SMDSAddress,
                 smdsLISGA
                     SMDSAddress,
                 smdsARPReq
                     SMDSAddress
                 }

          ipEntryAddress OBJECT-TYPE
              SYNTAX  IpAddress
               ACCESS  read-only
               STATUS  mandatory
               DESCRIPTION
                      "The IP address to which this entry's addressing
                      information pertains."
              ::= { ipOverSMDSAddressEntry 1 }

          ipEntryAddressIfIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The index value which uniquely identifies the
                      interface to which this entry is applicable.  The
                      interface identified by a particular value of this
                      index is the same interface as identified by the
                      same value of ifIndex."
              ::= { ipOverSMDSAddressEntry 2 }






          Kaj Tesink (editor)                                  [Page 21]





          Internet Draft           SIP Objects                March 1991


          smdsHA OBJECT-TYPE
               SYNTAX  SMDSAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The SMDS Individual address of the IP station."
              ::= { ipOverSMDSAddressEntry 3 }

          smdsLISGA OBJECT-TYPE
              SYNTAX  SMDSAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The SMDS Group Address that has been configured
                      to identify the SMDS Subscriber Network Interfaces
                      (SNIs) of all members of the Logical IP Subnetwork
                      (LIS) connected to the SMDS Service."
              ::= { ipOverSMDSAddressEntry 4 }

          smdsARPReq OBJECT-TYPE
              SYNTAX  SMDSAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The SMDS address (individual or group) to which
                      ARP Requests are to be sent."
              ::= { ipOverSMDSAddressEntry 5 }

          -- The SMDS carrier selection group

          smdsCarrierSelection OBJECT IDENTIFIER ::= { sip 5}

          -- The SIP error log

          sipErrorLog OBJECT IDENTIFIER ::= { sip 6 }

          sipL3PDUErrorTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF SIPL3PDUErrorEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A table that contains the latest occurrence of
                      the following syntactical SIPL3PDU errors:
                      - Destination Address Field Format Error,
                      An error is considered to have occurred if the





          Kaj Tesink (editor)                                  [Page 22]





          Internet Draft           SIP Objects                March 1991


                      four most significant bits of the Address subfield
                      are not populated with the value 0001, OR the 40
                      bits which follow are not Binary Coded Decimal
                      (BCD) encoded values of 10 digits, OR the
                      remaining 16 least significant bits are not
                      populated with 1's.

                      - Source Address Field Format Error,
                      An error is considered to have occurred if the
                      Address_Type field, the four most significant bits
                      of the 64 bits, is equal to 1110 (a group
                      address), or if any of the conditions described in
                      Destination Address Field Format Error have
                      occurred.

                      - Invalid BAsize Field Value Error,
                      An error is considered to have occurred when the
                      BAsize field of an SIPL3PDU contains a value less
                      that 32 or greater than 9220 octets.

                      - Invalid Header Extension Length Error,
                      An error is considered to have occurred when the
                      Header Extension Length does not equal 3.  -
                      Invalid Header Extension - Element Length Error,
                      An error is considered to have occurred when the
                      Header Extension - Element Length is greater than
                      12.

                      - Invalid Header Extension - Carrier Selection
                      Element Format Error,
                      An error is considered to have occurred when the
                      Element Type = 1, AND each carrier selection value
                      within the Element Value field is not four BCD
                      encoded decimal digits to specify a carrier or
                      service provider.

                      - Invalid Header Extension - Version Element
                      Position, Length, or Value Error,
                      An error is considered to have occurred when  a
                      Version element with Length=3, Type=0, and Value=1
                      does not appear within the Header Extension field,
                      OR if an element  with Type=0 appears somewhere
                      other than within the first three octets  in the
                      Header Extension element.






          Kaj Tesink (editor)                                  [Page 23]





          Internet Draft           SIP Objects                March 1991


                      - Invalid Header Extension - Carrier Selection
                      Element Length Error,
                      An error is considered to have occurred when  the
                      Element Type = 1, AND the Element Length is not
                      equal to 4, 6, or 8.

                      - BEtag Mismatch Error,
                      An error is considered to have occurred when  the
                      Beginning-End Tags in the SIPL3PDU header and
                      trailer do not match.

                      - BAsize Field not equal to Lenth Field Error,
                      An error is considered to have occurred when  the
                      value of the BAsize Field does not equal the
                      Length Field

                      - Incorrect Length Error, and
                      An error is considered to have occurred when  the
                      the Length field value is not equal to the portion
                      of the SIPL3PDU which extends from the Destination
                      Address field up to and including the Information
                      Field.

                      - MRI Timeout Value Exceeded Error.
                      The MRI timeout value (in milliseconds) is the
                      time after which the SIP Level 2 PDU reassembly
                      process will be aborted by the SMDS SS.The value
                      is 100 for a DS3-based access path and 200 for a
                      DS1-based access path.  An error is considered to
                      have occurred when  the elapsed time between
                      receipt of BOM and corresponding EOM exceed the
                      value of the MRI for a particular transport signal
                      format. The MRI Timeout Value will be exceeded,
                      and this counter will be incremented, if the EOM
                      L2PDU of an in-transit SIPL3PDU is lost or
                      delayed. Increased delay could result from lost or
                      corrupted EOM L2PDU or if the CPE aborts
                      transmission of an L3PDU, thus never generating an
                      associated EOM L2PDU.


                      An entry is indexed by interface number and error
                      type, and contains Source Address, Destination
                      Address and a timestamp. All these errors are
                      counted in the erroredSIPL3PDUs counter."





          Kaj Tesink (editor)                                  [Page 24]





          Internet Draft           SIP Objects                March 1991


              ::= { sipErrorLog 1 }

          sipL3PDUErrorEntry  OBJECT-TYPE
              SYNTAX SIPL3PDUErrorEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "An entry in the service disagreement table."
              INDEX   { interfaceNumber, sipL3PDUErrorType }
              ::= { sipL3PDUErrorTable 1 }





          SIPL3PDUErrorEntry ::= SEQUENCE {
              interfaceNumber
                  INTEGER,
              sipL3PDUErrorType
                  INTEGER,
              erroredL3PDUSourceAddress
                  SMDSAddress,
              erroredL3PDUDestinationAddress
                  SMDSAddress,
              errorTimeStamp
                  DisplayString
              }

          interfaceNumber OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of this object identifies the SIP port
                      interface for which this entry contains management
                      information.   The value of this object for a
                      particular interface has the same value as the
                      ifIndex object, defined in RFC1158, for the same
                      interface."
              ::= { sipL3PDUErrorEntry 1 }

           sipL3PDUErrorType OBJECT-TYPE
              SYNTAX  INTEGER {
                   erroredDAFieldFormat (1),
                   erroredSAFieldFormat (2),





          Kaj Tesink (editor)                                  [Page 25]





          Internet Draft           SIP Objects                March 1991


                   invalidBAsizeFieldValue (3),
                   invalidHdrExtLength (4),
                   invalidHdrExtElementLength (5),
                   invalidHdrExtCarrierSelectionElementFormat (6),
                   invalidHdrExtVersionElementPositionLenthOrValue (7),
                   invalidHdrExtCarrierSelectionElementLength (8),
                   baTagMismatch (9),
                   baSizeFieldNotEqualToLengthField (10),
                   incorrectLength (11),
                   mriTimeoutValueExceeded (12)
              }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The type of error."
              ::= { sipL3PDUErrorEntry 2 }

          erroredL3PDUSourceAddress OBJECT-TYPE
              SYNTAX  SMDSAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A rejected SMDS source address."
              ::= { sipL3PDUErrorEntry 3 }

          erroredL3PDUDestinationAddress OBJECT-TYPE
              SYNTAX  SMDSAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A rejected SMDS destination address."
              ::= { sipL3PDUErrorEntry 4 }

          errorTimeStamp OBJECT-TYPE
              SYNTAX  OCTET STRING (SIZE(4))
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The timestamp for the service disagreement.  The
                      timestamp contains the value of sysUpTime at the
                      latest occurrence of this type of service
                      disagreement."
              ::= { sipL3PDUErrorEntry 5 }







          Kaj Tesink (editor)                                  [Page 26]





          Internet Draft           SIP Objects                March 1991


          END

















































          Kaj Tesink (editor)                                  [Page 27]





          Internet Draft           SIP Objects                March 1991


          7.  Acknowledgments

          This document was produced by the SNMP Working Group:


          In addition, the comments of the following individuals are
          also acknowledged: Jeff Case, Tracy Cox, Steve Jaffe, Dave
          Piscitello, Ron Reuss










































          Kaj Tesink (editor)                                  [Page 28]





          Internet Draft           SIP Objects                March 1991


          8.  References

          [1]  V. Cerf, IAB Recommendations for the Development of
               Internet Network Management Standards.  Internet Working
               Group Request for Comments 1052.  Network Information
               Center, SRI International, Menlo Park, California,
               (April, 1988).

          [2]  V. Cerf, Report of the Second Ad Hoc Network Management
               Review Group, Internet Working Group Request for Comments
               1109.  Network Information Center, SRI International,
               Menlo Park, California, (August, 1989).

          [3]  M.T. Rose and K. McCloghrie, Structure and Identification
               of Management Information for TCP/IP-based internets,
               Internet Working Group Request for Comments 1155.
               Network Information Center, SRI International, Menlo
               Park, California, (May, 1990).

          [4]  K. McCloghrie and M.T. Rose, Management Information Base
               for Network Management of TCP/IP-based internets,
               Internet Working Group Request for Comments 1156.
               Network Information Center, SRI International, Menlo
               Park, California, (May, 1990).

          [5]  J.D. Case, M.S. Fedor, M.L. Schoffstall, and J.R. Davin,
               Simple Network Management Protocol, Internet Working
               Group Request for Comments 1157.  Network Information
               Center, SRI International, Menlo Park, California, (May,
               1990).

          [6]  M.T. Rose (editor), Management Information Base for
               Network Management of TCP/IP-based internets, Internet
               Working Group Request for Comments 1158.  Network
               Information Center, SRI International, Menlo Park,
               California, (May, 1990).

          [7]  Information processing systems - Open Systems
               Interconnection - Specification of Abstract Syntax
               Notation One (ASN.1), International Organization for
               Standardization.  International Standard 8824, (December,
               1987).

          [8]  Information processing systems - Open Systems
               Interconnection - Specification of Basic Encoding Rules





          Kaj Tesink (editor)                                  [Page 29]





          Internet Draft           SIP Objects                March 1991


               for Abstract Notation One (ASN.1), International
               Organization for Standardization.  International Standard
               8825, (December, 1987).

          [9]  M.T. Rose, K. McCloghrie (editors), Towards Concise MIB
               Definitions, Internet Draft, Internet Engineering Task
               Force, (September, 1990).

          [10] M.T. Rose (editor), A Convention for Defining Traps for
               use with the SNMP, Internet Draft, Internet Engineering
               Task Force, (September, 1990).

          [11] Generic System Requirements in Support of Switched
               Multi-megabit Data Service, Bellcore Technical Advisory,
               TA-TSY-000772, Issue 3, October 1989 and Supplement 1,
               December 1990.

          [12] Local Access System Generic Requirements, Objectives, and
               Interfaces in Support of Switched Multi-megabit Data
               Service, TA-TSY-000773, Issue 2, March 1990 and
               Supplement 1, December 1990.

          [13] F. Baker and C. Kolb (editors), Definitions of Managed
               Objects for the DS1 Carrier Interface Type, Internet
               Draft, Internet Engineering Task Force, (December, 1990).

          [14] T. A. Cox and K. Tesink (editors), Definitions of Managed
               Objects for the DS3 Interface Type, Internet Draft,
               Internet Engineering Task Force, (December, 1990).

          [15] Dave Piscitello and Joseph Lawrence (editors), The
               Transmission of IP Datagrams over the SMDS Service,
               Internet Draft, Internet Engineering Task Force,
               (January, 1991).

          [16] Generic Requirements For SMDS Customer Network Management
               Service, TA-TSV-001062, Issue 1, February 1991.













          Kaj Tesink (editor)                                  [Page 30]





          Internet Draft           SIP Objects                March 1991


          Table of Contents


          1 Status of this Memo ...................................    1
          2 Abstract ..............................................    2
          3 Historical Perspective ................................    3
          4 Objects ...............................................    5
          4.1 Format of Definitions ...............................    5
          5 Overview ..............................................    6
          6 Object Definitions ....................................    7
          7 Acknowledgments .......................................   28
          8 References ............................................   29






































          Kaj Tesink (editor)                                  [Page 31]





