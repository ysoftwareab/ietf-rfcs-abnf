elementFormDefault="qualified" attributeFormDefault="unqualified">

     <xs:import namespace="urn:ietf:params:xml:ns:conference-info"\\
schemaLocation=urn:ietf:params:xml:schema:conference-info/>
      <xs:import namespace="urn:ietf:params:xml:ns:conference-policy"\\
schemaLocation="urn:ietf:params:xml:ns:conference-policy" />
      <xs:import namespace="urn:ietf:params:xml:ns:common-policy" \\
schemaLocation="urn:ietf:params:xml:ns:common-policy" />
      <xs:import namespace="urn:ietf:params:xml:ns:role-schema" \\
schemaLocation="urn:ietf:params:xml:ns:role-schema" />

      <!--
        This imports the xml definition
      -->
         <xs:import namespace="http://www.w3.org/XML/1998/namespace"
schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>
type="conference-description-type" minOccurs="1"/>
type="host-type" minOccurs="1"/>
type="conference-state-type" minOccurs="1"/>
type="security-mechanisms-type" minOccurs="0"/>
type="floor-information-type" minOccurs="0"/>
type="users-type" minOccurs="1"/>
type="sidebars-by-ref-type" minOccurs="0"/>
type="sidebars-by-val-type" minOccurs="0"/>
type="xs:string" minOccurs="0"/>
type="template-by-ref-type" minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
type="xs:string" minOccurs="0"/>
type="xs:string" minOccurs="0"/>
type="xs:string" minOccurs="0"/>
type="info:keywords-type" minOccurs="0"/>
type="xs:anyURI" minOccurs="0"/>
type="compol:Securitylevel" minOccurs="0"/>
type="xs:boolean" default="true" minOccurs="0"/>
type="conferencetime-type" minOccurs="0"/>
type="uris-type" minOccurs="0"/>
type="uris-type" minOccurs="0"/>
type="maximum-user-type" minOccurs="0"/>
type="conference-media-type" minOccurs="1"/>
minOccurs="0" maxOccurs="unbounded"/>
maxOccurs="unbounded">
              <xs:complexType>
               <xs:sequence>
                <xs:element name="base" type="xs:string" \\
minOccurs="1"/>
                <xs:element name="mixing-start-offset" \\
type="xs:string" minOccurs="0"/>
                <xs:element name="mixing-stop-offset" \\
type="xs:string" minOccurs="0"/>
                <xs:element name="can-join-after-offset"
type="xs:string" minOccurs="0"/>
                <xs:element name="must-join-before-offset" \\
type="xs:string" minOccurs="0"/>
                <xs:element name="request-users" \\
type="compol:StartStopTime" minOccurs="0"/>
                <xs:element name="notify-end-of-conference" \\
type="xs:boolean" default="true" minOccurs="0"/>
                <xs:element name="allowed-extend-mixing-end-offset"\\
type="xs:boolean"
default="true" minOccurs="0"/>
minOccurs="0"/>
               </xs:sequence>
              </xs:complexType>
             </xs:element>
            </xs:sequence>
           </xs:complexType>
         <!--
            URIS TYPE
         -->
         <xs:complexType name="uris-type">
          <xs:sequence>
           <xs:element name="SIP" type="info:uri-type"
maxOccurs="unbounded"/>
maxOccurs="unbounded"/>
maxOccurs="unbounded"/>
minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
minOccurs="0" maxOccurs="6"/>
          </xs:sequence>
          <xs:anyAttribute namespace="##other" processContents="lax"/>
         </xs:complexType>
        <!--
            MAXIMUM USER TYPE
         -->
         <xs:complexType name="maximum-user-type">
          <xs:sequence>
           <xs:element name="entry" type="xs:unsignedInt"
minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
type="role:role-type" use="required"/>
maxOccurs="unbounded"/>
type="xs:string" use="required"/>
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
use="required"/>
maxOccurs="unbounded"/>
type="decision-type" use="required"/>
type="xs:string" use="required"/>
type="policy-type" use="required"/>
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
type="security-mechanism-type" maxOccurs="unbounded"/>
          </xs:sequence>
          <xs:anyAttribute namespace="##other" processContents="lax"/>
         </xs:complexType>
         <!--
            SECURITY MECHANISM TYPE
         -->
         <xs:complexType name="security-mechanism-type">
          <xs:sequence>
           <xs:element name="methods" type="methods-type"
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
use="required"/>
minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
type="default-policy-type" use="required"/>
          <xs:anyAttribute namespace="##other" processContents="lax"/>
         </xs:complexType>
         <!--
            DEFAULT POLICY TYPE
         -->
         <xs:simpleType name="default-policy-type">
          <xs:restriction base="xs:string">
           <xs:enumeration value="Allowed"/>
           <xs:enumeration value="Disallowed"/>
           <xs:enumeration value="Mandatory"/>
          </xs:restriction>
         </xs:simpleType>
         <!--
            FEATURE TAGS TYPE
         -->
         <xs:complexType name="feature-tags-type">
          <xs:sequence>
           <xs:element name="feature-tag" type="codec-type"
minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
use="required"/>
minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
use="required"/>
use="required"/>
minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
use="required"/>
use="required"/>
use="required"/>
use="required"/>
maxOccurs="unbounded"/>
type="floor-request-type" maxOccurs="unbounded"/>
           <xs:element name="conference-floor-policy" \\
type="policy:Conference-floor-policy"
maxOccurs="unbounded"/>
minOccurs="0" maxOccurs="unbounded"/>
type="policy:join-handling-type" minOccurs="0"/>
type="xs:boolean" minOccurs="0"/>
type="dial-in-list-type" minOccurs="0"/>
type="policy:UserList" minOccurs="0"/>
type="policy:UserList" minOccurs="0"/>
type="privileges-control-list-type" minOccurs="0"/>
type="user-type" minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
           </xs:complexType>
         <!--
            PRIVILEGES CONTROL LIST TYPE
         -->
         <xs:complexType name="privileges-control-list-type">
          <xs:sequence>
           <xs:element name="data-access-rights" \\
type="data-access-rights-type" maxOccurs="unbounded"/>
           <xs:element name="conference-rules" \\
type="conference-rules-type" maxOccurs="unbounded"/>
          </xs:sequence>
          <xs:anyAttribute namespace="##other" \\
processContents="lax"/>
         </xs:complexType>
         <!--
            DATA ACCESS RIGHTS TYPE
         -->
         <xs:complexType name="data-access-rights-type">
          <xs:sequence>
           <xs:element name="entry" type="entry-rights-type"
maxOccurs="unbounded"/>
processContents="lax"/>
         </xs:complexType>

         <!--
            ENTRY RIGHTS TYPE
         -->
         <xs:complexType name="entry-rights-type">
           <xs:attribute name="name" type="xs:string"
use="required"/>
use="required"/>
use="required"/>
processContents="lax"/>
         </xs:complexType>

         <!--
            CONFERENCE RULES TYPE
         -->
         <xs:complexType name="conference-rules-type">
          <xs:sequence>
           <xs:element name="entry" type="conference-rule-type"
maxOccurs="unbounded"/>
use="required"/>
processContents="lax"/>
         </xs:complexType>

         <!--
            CONFERENCE RULE TYPE
         -->
         <xs:complexType name="conference-rule-type">
          <xs:sequence>
           <xs:element name="condition" type="condition-type"
maxOccurs="unbounded"/>
maxOccurs="unbounded"/>
processContents="lax"/>
         </xs:complexType>
         <!--
            CONDITION TYPE
         -->
         <xs:complexType name="condition-type">
          <xs:sequence>
           <xs:element name="identity" type="identity-type"
maxOccurs="1"/>
maxOccurs="1"/>
processContents="lax"/>
         </xs:complexType>
         <!--
            IDENTITY TYPE
         -->
         <xs:complexType name="identity-type">
          <xs:sequence>
           <xs:element name="identity" type="roles-identity-type"
maxOccurs="unbounded"/>
maxOccurs="unbounded"/>
processContents="lax"/>
         </xs:complexType>

        <!--
            ROLES IDENTITY TYPE
         -->
          <xs:complexType name="identityType">
           <xs:complexContent>
            <xs:restriction base="xs:anyType">
             <xs:choice minOccurs="0" maxOccurs="1">
              <xs:element name="one" type="compol:oneType"/>
              <xs:element name="many" type="compol:manyType"/>
              <xs:element name="external-list" type="xs:string"/>
              <xs:element name="pseudonymous" type="xs:string"/>
              <xs:element name="has-been-referred" type="xs:string"/>
              <xs:element name="has-been-invited" type="xs:string"/>
              <xs:element name="has-been-in-conference" \\
type="xs:string"/>
              <xs:element name="is-in-conference" type="xs:string"/>
              <xs:element name="key-participant" type="xs:string"/>
              <xs:element name="is-on-dialout-list" type="xs:string"/>
              <xs:element name="is-on-refer-list" type="xs:string"/>
              <xs:element name="floor-id" type="xs:string"/>
              <xs:element name="participant-passcode" \\
type="xs:string"/>
              <xs:element name="key-participant-passcode" \\
type="xs:string"/>
             </xs:choice>
            </xs:restriction>
           </xs:complexContent>
          </xs:complexType>
        <!--
            ACTION TYPE
         -->
          <xs:complexType name="action-type">
           <xs:complexContent>
            <xs:restriction base="xs:anyType">
             <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="allow-refer-users-dynamically"\\
type="xs:string"/>
              <xs:element name="allow-invite-users-dynamically"\\
type="xs:string"/>
              <xs:element name="allow-remove-users-dynamically"\\
type="xs:string"/>
              <xs:element name="show-floor-holder" type="xs:string"/>
              <xs:element name="show-floor-request" type="xs:string"/>
              <xs:element name="provide-anonymity" type="xs:string"/>
              <xs:element name="read-only" type="role:role-type"/>
              <xs:element name="read-write" type="role:role-type"/>
             </xs:choice>
            </xs:restriction>
           </xs:complexContent>
          </xs:complexType>
         <!--
            USER TYPE
         -->
         <xs:complexType name="user-type">
          <xs:sequence>
           <xs:element name="user" type="one-user-type"
minOccurs="0" maxOccurs="unbounded"/>
minOccurs="0" maxOccurs="unbounded"/>
use="optional" default="full"/>
processContents="lax"/>
         </xs:complexType>
         <!--
            ONE USER TYPE
         -->
         <xs:complexType name="one-user-type">
          <xs:sequence>
           <xs:element name="display-text" type="xs:string"
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0"/>
minOccurs="0"/>
type="info:user-languages-type" minOccurs="0"/>
           <xs:element name="cascaded-focus" type="xs:anyURI"
minOccurs="0"/>
minOccurs="0"/>
           <xs:element name="allow-refer-users-dynamically" \\
type="xs:boolean"/>
           <xs:element name="allow-invite-users-dynamically" \\
type="xs:boolean"/>
           <xs:element name="allow-remove-users-dynamically" \\
type="xs:boolean"/>
           <xs:element name="floors" type="xs:show-floors-type"/>
           <xs:element name="endpoint" type="info:endpoint-type"
minOccurs="0" maxOccurs="unbounded"/>
minOccurs="0" maxOccurs="unbounded"/>
use="optional" default="full"/>
processContents="lax"/>
         </xs:complexType>

        <!--
            SHOW FLOORS TYPE
         -->
         <xs:complexType name="show-floors-type">
          <xs:sequence>
           <xs:element name="entry" type="show-floor-type"
maxOccurs="unbounded"/>
processContents="lax"/>
         </xs:complexType>
         <!--
            SHOW FLOOR TYPE
         -->
         <xs:complexType name="show-floor-type">
          <xs:sequence>
           <xs:element name="show-floor-holder" type="xs:boolean"
minOccurs="0"/>
minOccurs="0" maxOccurs="unbounded"/>
use="required"/>
processContents="lax"/>
         </xs:complexType>
         <!--
            SIDEBARS-BY-REF TYPE
         -->
         <xs:complexType name="sidebars-by-ref-type">
          <xs:sequence>
           <xs:element name="entry" type="info:uri-type"
maxOccurs="unbounded"/>
processContents="lax"/>
         </xs:complexType>
         <!--
            SIDEBARS-BY-VAL TYPE
         -->
         <xs:complexType name="sidebars-by-val-type">
          <xs:sequence>
           <xs:element name="entry" type="conference-type"
minOccurs="0" maxOccurs="unbounded"/>
processContents="lax"/>
         </xs:complexType>
         <!--
            TEMPLATE-BY-REF TYPE
         -->
         <xs:complexType name="template-by-ref-type">
          <xs:sequence>
           <xs:element name="urn" type="xs:string" minOccurs="1"/>
           <xs:element name="display-text" type="xs:string"/>
          </xs:sequence>
          <xs:anyAttribute namespace="##other" \\
processContents="lax"/>
         </xs:complexType>
         </xs:schema>
namespace="##other"> construct.

xmlns="urn:ietf:params:xml:ns:common-conference-schema"
entity="sips:conference@example.com">
default-encryption="allowed">
           <sesspol:body-disposition name="session" policy="allowed" \\
encryption="disallowed" default-policy="disallowed">
            <sesspol:body-format name="application/sdp" \\
policy="allowed"/>
          </sesspol:body-disposition>
          </sesspol:bodies>
        </entry-protocol>
      </security-mechanism>
      <!--
        FLOOR INFORMATION
      -->
      <floor-information>
      <policy:allow-floor-events>true</policy:allow-floor-events>
      <policy:floor-request-handling>true \\
read-write= "creator"/>
          <conference-time read-only= "administrator"/>
          <maximum-user-count read-write= "creator"/>
          <codecs read-only= "creator" read-write= "creator"/>
          <host-info read-write= "creator"/>
          <conference-state read-write= "creator"/>
          <security-mechanism read-only= "creator"/>
          <floor-information read-only= "administrator"/>
          <dial-out-list read-only= "administrator"/>
          <refer-list read-only= "administrator"/>
          <privileges-control-list read-only= "creator"/>
          <conditions read-only= "creator"/>
          <validity read-only= "creator"/>
          <allow-conference-state read-only= "observer"/>
          <sidebars-by-ref read-only= "observer"\\
read-write= "creator"/>
          <sidebars-by-val read-only= "observer"\\
read-write= "creator"/>
         </data-access-rights>
         <conference-rules>
          <entry id="1">
           <conditions>
            <compol:identity>
             <compol:domain>example.com</compol:domain>
            </compol:identity>
            <compol:validity>
             <compol:from>20061017T143000Z</compol:from>
             <compol:to>20061017T163000Z</compol:to>
            </compol:validity>
           </conditions>
           <compol:actions>
            <compol:allow-conference-state>true\\
