l = size of the length field, in bits
m = overall size must be a multiple of m bits
s = size of padding units
p = value of padding units

SCTP-IP-CO         =   INFERRED-IP-CHECKSUM(IPv4-header-co)
                          sctp-header-co

SCTP-IP-IR         =   INFERRED-IP-CHECKSUM(IPv4-header-ir)
                          sctp-header-ir

SCTP-IP-DYN        =   INFERRED-IP-CHECKSUM(IPv4-header-dyn)
                          sctp-header-dyn

sctp-header-ir     =   sport-ir
                          dport-ir
                          verif-tag-dyn
                          sctp-chksum
                          chunk-list-ir

sctp-header-dyn    =   sport-co
                          dport-co
                          verif-tag-dyn
                          sctp-chksum
                          chunk-list-ir

sctp-header-co     =   sport-co
                          dport-co
                          verif-tag-co
                          sctp-chksum
                          chunk-list-co

IPv4-header-co     =   version
                          header-len
                          ecn-co
                          tos-co
                          length
                          ip-id-nbo
                          ip-id-co
                          nbo-flag-co
                          rf-flag
                          df-flag-co
                          mf-flag
                          offset
                          ttl-co
                          protocol
                          ip-chksum
                          src-address-co
                          dst-address-co

IPv4-header-dyn    =   version
                          header-len
                          ecn-dyn
                          tos-dyn
                          length
                          ip-id-nbo
                          ip-id-dyn
                          nbo-flag-dyn
                          rf-flag
                          df-flag-dyn
                          mf-flag
                          offset
                          ttl-dyn
                          protocol
                          ip-chksum
                          src-address-co
                          dst-address-co

IPv4-header-ir     =   version
                          header-len
                          ecn-dyn
                          tos-dyn
                          length
                          ip-id-nbo
                          ip-id-dyn
                          nbo-flag-dyn
                          rf-flag
                          df-flag-dyn
                          mf-flag
                          offset
                          ttl-dyn
                          protocol
                          ip-chksum
                          src-address-ir
                          dst-address-ir

version            =   VALUE(4,4,100%)

header-len         =   VALUE(4,5,100%)

ecn-co             =   IRREGULAR(2,100%)

ecn-dyn            =   IRREGULAR(2,100%)

tos-co             =   STATIC(99%) | IRREGULAR(6,1%)

tos-dyn            =   IRREGULAR(6,100%)

length             =   STACK-TO-CONTROL(16)

ip-id-nbo          =   NBO(16)

ip-id-co           =   LSB(4,0,90%) | LSB(7,0,9%) |
                          IRREGULAR(16,1%)

ip-id-dyn          =   IRREGULAR(16,100%)

nbo-flag-co        =   STATIC(100%)

nbo-flag-dyn       =   IRREGULAR(1,100%)

rf-flag            =   VALUE(1,0,100%)

df-flag-co         =   STATIC(100%)

df-flag-dyn        =   IRREGULAR(1,100%)

mf-flag            =   VALUE(1,0,100%)

offset             =   VALUE(13,0,100%)

ttl-co             =   STATIC(99%) | IRREGULAR(8,1%)

ttl-dyn            =   IRREGULAR(8,100%)

protocol           =   VALUE(8,17,100%)

ip-chksum          =   VALUE(16,0,100%)

src-address-co     =   STATIC(100%)

src-address-ir     =   IRREGULAR(32,100%)

dst-address-co     =   STATIC(100%)

dst-address-ir     =   IRREGULAR(32,100%)

sport-ir           =   IRREGULAR(16,100%)

dport-ir           =   IRREGULAR(16,100%)

sport-co           =   STATIC(100%)
dport-co           =   STATIC(100%)


verif-tag-dyn      =   IRREGULAR(32,100%)

verif-tag-co       =   STATIC(90%) | IRREGULAR(32,10%)

sctp-chksum        =   IRREGULAR(32,100%)

chunk-list-co      =   LIST(
                             16         ; uses IP length
                             1, 8, -224 ; values for d, m & p
                             8,         ; width of 'type' field
                             OPTIONAL(sctp-data-co),
                             OPTIONAL(sctp-data-co),
                             OPTIONAL(sctp-data-co),
                             OPTIONAL(sctp-data-co),
                             OPTIONAL(sctp-init),
                             OPTIONAL(sctp-init-ack),
                             OPTIONAL(sctp-sack),
                             OPTIONAL(sctp-heartbeat),
                             OPTIONAL(sctp-heartbeat-ack),
                             OPTIONAL(sctp-abort),
                             OPTIONAL(sctp-shutdown),
                             OPTIONAL(sctp-shutdown-ack),
                             OPTIONAL(sctp-error),
                             OPTIONAL(sctp-cookie-echo),
                             OPTIONAL(sctp-cookie-ack),
                             OPTIONAL(sctp-ecne),
                             OPTIONAL(sctp-cwr),
                             OPTIONAL(sctp-shutdown-complete),
                             OPTIONAL(sctp-generic),
                             0, 0, 0, 0,
                             1, 2, 3, 4, 5, 6, 7
                             8, 9, 10, 11, 12, 13, 14)

                             ;
                             ; order
                             ;
                             STATIC(90%) | IRREGULAR(95,10%)
                             ;
                             ; presence
                             ;
                             STATIC(70%) | IRREGULAR(19,30%)

chunk-list-ir      =   LIST(
                             16         ; uses IP length
                             1, 8, -224 ; values for d, m & p
                             8,         ; width of 'type' field
                             OPTIONAL(sctp-data-ir),
                             OPTIONAL(sctp-data-ir),
                             OPTIONAL(sctp-data-ir),
                             OPTIONAL(sctp-data-ir),
                             OPTIONAL(sctp-init),
                             OPTIONAL(sctp-init-ack),
                             OPTIONAL(sctp-sack),
                             OPTIONAL(sctp-heartbeat),
                             OPTIONAL(sctp-heartbeat-ack),
                             OPTIONAL(sctp-abort),
                             OPTIONAL(sctp-shutdown),
                             OPTIONAL(sctp-shutdown-ack),
                             OPTIONAL(sctp-error),
                             OPTIONAL(sctp-cookie-echo),
                             OPTIONAL(sctp-cookie-ack),
                             OPTIONAL(sctp-ecne),
                             OPTIONAL(sctp-cwr),
                             OPTIONAL(sctp-shutdown-complete),
                             OPTIONAL(sctp-generic),
                             0, 0, 0, 0,
                             1, 2, 3, 4, 5, 6, 7
                             8, 9, 10, 11, 12, 13, 14)

                             ;
                             ; order
                             ;
                             IRREGULAR(95,100%)

                             ;
                             ; presence
                             ;
                             IRREGULAR(19,100%)

sctp-data-co       =   VALUE(8,0,100%) ; type
                          data-flags

                          STACK-TO-CONTROL(16) ; length

                          sctp-tsn-co

                          CONTEXT(stream-data-co,8)

                          STATIC(80%) | IRREGULAR(3,20%)

                          data-payload

stream-data-co     =   sctp-sid-co
                          sctp-ssn-co
                          sctp-ppi-co

sctp-data-ir       =   VALUE(8,0,100%) ; type

                          data-flags

                          STACK-TO-CONTROL(16) ; length

                          sctp-tsn-ir

                          CONTEXT(stream-data-ir,8)

                          STATIC(80%) | IRREGULAR(3,20%)

                          data-payload

stream-data-ir     =   sctp-sid-ir
                          sctp-ssn-ir
                          sctp-ppi-ir

data-flags         =   VALUE(5,0,100%)

                          IRREGULAR(1,100%) ; U

                          IRREGULAR(1,100%) ; B

                          IRREGULAR(1,100%) ; E

sctp-tsn-co        =   LSB(4,4,60%) | LSB(8,16,25%) |
                          LSB(16,1024,10%) | IRREGULAR(32,5%)

sctp-tsn-ir        =   IRREGULAR(32,100%)

sctp-sid-co        =   STATIC(90%) | IRREGULAR(16,10%)
sctp-sid-ir        =   IRREGULAR(16,100%)

sctp-ssn-co        =   LSB(4,4,60%) | LSB(8,16,25%) |
                          LSB(16,1024,10%) | IRREGULAR(32,5%)

sctp-ssn-ir        =   IRREGULAR(32,5%)

sctp-ppi-co        =   STATIC(90%) | IRREGULAR(32,10%)

sctp-ppi-ir        =   IRREGULAR(32,10%)

data-payload       =   STACK-FROM-CONTROL(16)

                          UNCOMPRESSED(16,
                             1,1,-16) ; d, m, p

                          STACK-TO-CONTROL(16)

                          PADDING(16,32,8,0)

                          data-chunk-length

data-chunk-length  =   IRREGULAR-PADDED(16,12,80%) |
                          IRREGULAR(16,20%)

sctp-init          =   VALUE(8,1,100%) ; type

                          chunk-flags

                          STACK-TO-CONTROL(16) ; length

                          initiate-tag
                          adv-rwnd
                          stream-out
                          stream-in
                          initial-tsn
                          init-params

chunk-flags        =   STATIC(80%) | IRREGULAR(8,20%)

intitiate-tag      =   IRREGULAR(32,100%)

adv-rwnd           =   IRREGULAR(32,100%)
stream-out         =   IRREGULAR(16,100%)

stream-in          =   IRREGULAR(16,100%)

initial-tsn        =   IRREGULAR(32,100%)

init-params        =   STACK-FROM-CONTROL(16)

                          UNCOMPRESSED(16,
                             1,1,-20) ; d, m, p

                          STACK-TO-CONTROL(16)

                          PADDING(16,32,8,0)

                          init-chunk-length

init-chunk-length  =   IRREGULAR-PADDED(16,10,90%) |
                          IRREGULAR(16,10%)

sctp-init-ack      =   VALUE(8,2,100%) ; type

                          chunk-flags

                          STACK-TO-CONTROL(16) ; length

                          initiate-tag
                          adv-rwnd
                          stream-out
                          stream-in
                          initial-tsn
                          init-params

sctp-sack          =   VALUE(8,3,100%) ; type

                          chunk-flags

                          IRREGULAR(16) ; length

                          adv-rwnd
                          STACK-TO-CONTROL(16) ; gap count

                          STACK-TO-CONTROL(16) ; dup. TSN count

                          ROTATE(2,1)

                          gap-list

                          dup-tsn-list

gap-list           =   LIST(16,
                             1, 32, 0,
                             OPTIONAL(gap-entry),
                             OPTIONAL(gap-entry),
                             OPTIONAL(gap-entry),
                             OPTIONAL(gap-entry),
                             OPTIONAL(gap-entry),
                             OPTIONAL(gap-entry),
                             OPTIONAL(gap-entry),
                             OPTIONAL(gap-entry))

                          ;
                          ; order
                          ;
                          STATIC(80%) | IRREGULAR(24,20%)

                          ;
                          ; presence
                          ;
                          STATIC(50%) | IRREGULAR(8,50%)

gap-entry          =   STATIC(50%) | IRREGULAR(16,50%)

                          STATIC(50%) | IRREGULAR(16,50%)

dup-tsn-list       =   LIST(16,
                             1, 32, 0,
                             OPTIONAL(tsn-entry),
                             OPTIONAL(tsn-entry),
                             OPTIONAL(tsn-entry),
                             OPTIONAL(tsn-entry),
                             OPTIONAL(tsn-entry),
                             OPTIONAL(tsn-entry),
                             OPTIONAL(tsn-entry),
                             OPTIONAL(tsn-entry))

                          ;
                          ; order
                          ;
                          STATIC(80%) | IRREGULAR(24,20%)

                          ;
                          ; presence
                          ;
                          STATIC(50%) | IRREGULAR(8,50%)

tsn-entry          =   STATIC(50%) | IRREGULAR(32,50%)

sctp-heartbeat     =   VALUE(8,4,100%) ; type

                          chunk-flags

                          STACK-TO-CONTROL(16)

                          UNCOMPRESSED(16,1,1,-4)

                          STACK-TO-CONTROL(16)

                          PADDING(16,32,8,0)

                          IRREGULAR(16,100%)

sctp-heartbeat-ack =   VALUE(8,5,100%) ; type

                          chunk-flags

                          STACK-TO-CONTROL(16)

                          UNCOMPRESSED(16,1,1,-4)

                          STACK-TO-CONTROL(16)

                          PADDING(16,32,8,0)

                          IRREGULAR(16,100%)

sctp-abort         =   VALUE(8,6,100%) ; type

                          abort-flags

                          STACK-TO-CONTROL(16)

                          UNCOMPRESSED(16,1,1,-4)

                          STACK-TO-CONTROL(16)

                          PADDING(16,32,8,0)

                          IRREGULAR(16,100%)

abort-flags        =   VALUE(7,0,100%)

                          IRREGULAR(1,100%)

sctp-shutdown      =   VALUE(8,7,100%) ; type

                          chunk-flags

                          VALUE(16,8,100%) ; length

                          IRREGULAR(32,100%)

sctp-shutdown-ack  =   VALUE(8,8,100%) ; type

                          chunk-flags

                          VALUE(16,4,100%) ; length

sctp-error         =   VALUE(8,9,100%) ; type
                          chunk-flags

                          cause-list

cause-list         =   LIST(16,1,1,-4,
                             OPTIONAL(error-cause),
                             OPTIONAL(error-cause),
                             OPTIONAL(error-cause),
                             OPTIONAL(error-cause))

                          ;
                          ; order
                          ;
                          STATIC(99%) | IRREGULAR(8,1%)

                          ;
                          ; presence
                          ;
                          STATIC(50%) | IRREGULAR(4,50%)

error-cause        =   cause-code

                          STACK-TO-CONTROL(16)

                          UNCOMPRESSED(16,1,1,-4)

                          STACK-TO-CONTROL(16)

                          PADDING(16,32,8,0)

                          IRREGULAR(16,100%)

cause-code         =   IRREGULAR-PADDED(16,4,99%) |
                          IRREGULAR(16,1%)


sctp-cookie-echo   =   VALUE(8,10,100%) ; type

                          chunk-flags

                          STACK-TO-CONTROL(16)

                          UNCOMPRESSED(16,1,1,-4)
                          STACK-TO-CONTROL(16)

                          PADDING(16,32,8,0)

                          IRREGULAR(16,100%)

sctp-cookie-ack    =   VALUE(8,11,100%) ; type

                          chunk-flags

                          VALUE(16,4,100%) ; length


sctp-ecne          =   sctp-generic

sctp-cwr           =   sctp-generic

sctp-shutdown-complete  = VALUE(8,14,100%) ; type

                             shutdown-complete-flags

                             VALUE(16,4,100%) ; length

shutdown-complete-flags = VALUE(7,0,100%)

                             IRREGULAR(1,100%)

sctp-generic       =   IRREGULAR(8,100%) ; type
                          chunk-flags

                          STACK-TO-CONTROL(16)

                          UNCOMPRESSED(16,1,1,-4)

                          STACK-TO-CONTROL(16)

                          PADDING(16,32,8,0)

                          IRREGULAR(16,100%)



item = top (control_data)
len  = value (item)

remainder = (len * 8) mod m
padding = m - remainder
num_units = padding / s

item = top (control_data)
len  = value (item)

remainder = (len * 8) mod m
padding = m - remainder
num_units = padding / s

