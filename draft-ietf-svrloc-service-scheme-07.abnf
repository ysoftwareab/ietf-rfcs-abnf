service-type   =   abstract-type ":" url-scheme / concrete-type
abstract-type  =   type-name [ "." naming-auth ]
concrete-type  =   protocol [ "." naming-auth ]
type-name      =   resname
naming-auth    =   resname
url-scheme     =   resname
                           ; A recognized URL scheme name, standardized
                           ; either through common practice or through
                           ; approval of a standards body.
resname        =   alpha [ 1*(alpha / digit / "+" / "-") ]
sap            =   "//" site [ url-part ]
site           =   [ [ user "@" ] hostport ]
hostport       =   host [ ":" port ]
host           =   hostname / hostnumber
hostname       =   *( domainlabel "." ) toplabel
alphanum       =   alpha / digit
domainlabel    =   alphanum / alphanum *[alphanum / "-"] alphanum
toplabel       =   alpha / alpha *[ alphanum / "-" ] alphanum
hostnumber     =   ipv4-number / ipv6-number
ipv4-number    =   1*3digit 3("." 1*3digit)
ipv6-number    =   32hex
port           =   1*digit
                           ; A port number must be included if the
                           ; protocol field does not have an IANA
                           ; assigned port number.
user           =   *[ uchar / ";" / "+" / "&" / "=" ]
url-part       =   [ url-path ] [ attr-list ]
url-path       =   1 * ( "/" *xchar )
                           ; Each service type must define its own
                           ; syntax consistent with [5].
attr-list      =   1 * ( ";" attr-asgn )
attr-asgn      =   attr-id / attr-id "=" attr-value
safe           =   "$" / "-" / "_" / "." / "~"
extra          =   "!" / "*" / "'" / "(" / ")" / "," / "+"
uchar          =   unreserved / escaped
xchar          =   unreserved / reserved / escaped
escaped        =   "%" hex hex
reserved       =   ";" / "/" / "?" / ":" / "@" / "&" / "=" / "+"
unreserved     =   alpha / digit / safe / extra


platform=sys3.2-rs3000

driver=scsi;platform=sys3.2-rs3000

driver=scsi;platform=sys3.2-rs3000

driver=scsi;platform=sys3.2-rs3000

template      =  tem-attrs attr-defs
tem-attrs     =  schemetype schemevers schemelang
                       schemetext schemeurl
schemetype    =  "type" "=" scheme termdef
schemevers    =  "version" "=" version-no termdef
schemelang    =  "language" "=" langtag termdef
schemetext    =  "description" "=" newline desc-text termdef
schemeurl     =  "url-syntax" "=" newline url-bnf termdef
url-bnf       =  *[ com-chars ]
                       ; An ABNF describing the <url-path> production
                       ; in the service: URL grammar of Section 2.1.
scheme        =  service-type [ "." naming-auth ]
service-type  =  scheme-name
naming-auth   =  scheme-name
scheme-name   =  alpha [1*schemechar] [ "." 1*schemechar ]
schemechar    =  alpha / digit / "-" / "+" /
version-no    =  1*digit "." 1*digit
langtag       =  2*lower-alpha ;see [3]
desc-text     =  *[ com-chars ]
                       ; A block of free-form text for reading by
                       ; people describing the service in a short,
                       ; informative manner.
termdef       =  newline newline
attr-defs     =  *( attr-def / keydef )
attr-def      =  id "=" attrtail
keydef        =  id "=" "keyword" newline [help-text] newline
attrtail      =  type flags newline [value-list] [help-text]
                       [value-list] newline
id            =  1*attrchar
type          =  "string" / "integer" / "boolean" / "opaque"
flags         =  ["m"/"M"] ["l"/"L"] ["o"/"O"] ["x"/"X"]
value-list    =  value newline / value "," value-list /
                       value "," newline value-list
help-text     =  1*( "#" help-line )
                       ; A block of free-form text for reading by
                       ; people describing the attribute and
                       ; its values.
help-line     =  *[ com-chars ] newline
attrchar      =  schemechar / ":" / "_" / "$" / "~" / "@" / "." /
                       "|" / "<" / ">" / "*" / "&"
value         =  string / integer / boolean / opaque
string        =  safe-char *[safe-char / white-sp] safe-char
integer       =  [ "+" | "-" ] 1*digit
boolean       =  "true" / "false"
opaque        =  1*digit ":" 4*radix64-char
                       ; The digits define the original length of
                       ; the opaque value.  The restricted character
                       ; string is the radix-64 encoding of the
                       ; opaque value( [7], Sect.  6.8.)
                       ; Newlines are ignored in decoding radix-64
                       ; values.
com-chars     =  safe-char / white-sp / "," / ";"/ "%"
safe-char     =  attrchar / escaped / " " / "!" / '"' / "'" /
                       "|" / "(" / ")" / "+" / "-" / "." / ":" /
                       "=" / "?" / "[" / "]" / "{" / "/" / "{" /
                       "$"
                       ; All UTF8 printable characters are
                       ; included except ",", "%", ";", and "#".
escaped       =  "%" hex hex
hex           =  digit / "A" / "B" / "C" / "D" / "E" /
                       "a" / "b" / "c" / "d" / "e"
white-sp      =  space / tab
newline       =  CR / ( CR LF )



type=FOO

version=0.0

lang=en

description=
    The FOO service URL provides the location of an FOO service.

url-syntax=
url-path= ; There is no URL path defined for a FOO URL.

users= string M L O
groups= string M L O
contact="Erik Guttman" <Erik.Guttman@sun.com>

type=Net-Transducer

version=0.0

lang=en

description=
    This is an abstract service type.  The purpose of the Net-
    Transducer service type is to organize into a single category
    all network enabled Transducers which have certain properties.

url-syntax=
url-path=  ;  Depends on the concrete service type.
               ;  See these templates.

sample-units= string L
sample-resolution= string L
sample-rate= integer L
contact="Erik Guttman" <Erik.Guttman@sun.com>

type=service:Net-Transducer:Thermometer

version=0.0

lang=en
description=
    The Thermometer is a Net-Transducer capable of reading temperature.
    The data is read by opening a TCP connection to one of the ports
    in the service URL and reading an ASCII string until an NULL
    character is encountered.  The client may continue reading data at
    no faster than the sample-rate, or close the connection.

url-syntax=
url-path     = ; ports
port-list    = ";ports=" port-list
ports        = port / port "," ports
                   ; See the Service URL <port> production rule.
                   ; These are the ports connections can be made on.

location-description=string
operator=string O
contact="Erik Guttman" <Erik.Guttman@sun.com>

URL        = service:net-transducer:thermometer://v33.test/ports=3211
Attributes = (location-description=Missile bay 32),
                (operator=Joe Agent), (sample-units=C),
                (sample-resolution=10^-1),(sample-rate=10)

