profile = component "-" usage

component       = "EVENT" / "event" / "TODO" / "todo"
                        / "JOURNAL" / "journal" / "FREEBUSY"
                        / "freebusy" / x-token  / iana-comp
usage   = "REQUEST" / "request" / "REPLY" / "reply"
                / "CANCEL" / "cancel" / "x-token / iana-usage

x-token = <The two characters "X-" or "x-" followed, with
                   no intervening white space, by any atom, where
                   atom is from section 3.3 of [RFC 822]>

iana-comp = <A publicly defined extension component,
                     registered with IANA, as specified by this
                     document>

iana-usage = <A publicly defined extension usage,
                      registered with IANA, as specified by this
                      document>

contentline = [group "."] name [";" paramlist] ":" value CRLF
group      = atom          ;As defined in [RFC 822]

name       = x-name / iana-name    ;An iCalendar attribute/property

x-name     = <The two characters "X-" or "x-" followed, with no
                   intervening white space, by any atom>

iana-name  = <A publicly defined name, registered with IANA>

paramlist  = parameter / paramlist ";" parameter

parameter  = encodingparm
                / valuetypeparm         ;If not present => inline value
                / charsetparm
                / languageparm
                / [parmtype "="] parmvalues

encodingparm = "encoding" "=" encodetype
encodetype = "8bit"                ;From [RFC 2045]
                / "7bit"                ;From [RFC 2045]
                / "base64"              ;From [RFC 2045]
                / "quoted-printable"    ;From [RFC 2045]

valuetypeparm = "value" "=" valuetype

valuetype  = "url"
                / "text"
                / "date"
                / "time"
                / "date-time"
                / "period"
                / "duration"
                / "boolean"
                / "integer"
                / "float"
                / "rfc822-address"
                / "utc-offset"
                / x-token
                / iana-value

iana-value = <A publicly defined extension value type, registered
                   with IANA, as specified by this document>

charsetparm = "charset" "=" charset ;As defined in [RFC 2047]

languageparm = "language" "=" language ;As defined in [RFC 1766]

parmtype   = x-token / iana-ptype

iana-ptype = <A publicly defined extension parameter type,
                   registered with IANA, as specified by this document>

parmvalues = parmvalue / parmvalues "," parmvalue

parmvalue  = x-name / iana-pvalue

iana-pvalue = <A publicly defined extension parameter value,
                    registered with IANA, as specified by this document>

value      = url / text / date / time/ date-time / period /
                / duration / boolean / integer / float / rfc822-address
                / utc-offset / x-token / iana-value

iana-value = <A publicly defined property value data type,
                   registered with IANA, as defined in this document>

url        = <As defined by [RFC 1738]>

CHAR       = <Any character in the selected character set>

text       = <Any CHAR, including bare CR & bare LF but not
                   including CRLF>

DIGIT      =<any ASCII decimal digit>      ;0-9

date-fullyear      = 4DIGIT
date-month         = 2DIGIT        ;01-12
date-mday          = 2DIGIT        ;01-28, 01-29, 01-30, 01-31
                                        ;based on month/year
full-date          = date-fullyear date-month date-mday

date       = fulldate *["," fulldate]


DIGIT      =<any ASCII decimal digit>      ;0-9

time-hour          = 2DIGIT        ;00-24
time-minute        = 2DIGIT        ;00-60
time-second        = 2DIGIT        ;00-59
time-numzone       = ("+" / "-") time-hour time-minute
time-zone          = "Z" / time-numzone
full-time          = time-hour time-minute time-second [time-zone]

time       = fulltime *["," fulltime]

date-time  = date "T" time ;As specified above in date and time

DIGIT      =<any ASCII decimal digit>      ;0-9

dur-second = 1*DIGIT "S"
dur-minute = 1*DIGIT "M" [dur-second]
dur-hour   = 1*DIGIT "H" [dur-minute]
dur-time   = "T" (dur-hour / dur-minute / dur-second)

dur-week   = 1*DIGIT "W"
dur-day    = 1*DIGIT "D"
dur-month  = 1*DIGIT "M" [dur-day]
dur-year   = 1*DIGIT "Y" [dur-month]
dur-date   = (dur-day / dur-month / dur-year) [dur-time]

duration   = "P" (dur-date / dur-time / dur-week)

period-explicit = date-time "/" date-time
period-start = date-time "/" duration
period     = period-explicit / period-start

boolean    = "TRUE" / "FALSE"

DIGIT      =<any ASCII decimal digit>      ;0-9

integer    = ["+" / "-"] *DIGIT

DIGIT      =<any ASCII decimal digit>      ;0-9

float      = ["+" / "-"] *DIGIT ["." *DIGIT]

rfc822-address     = addr-spec / [phrase] "<" addr-spec ">"

addr-spec  = local-part "@" domain         ;RFC 822 address
local-part = WORD *("." WORD)
domain     = domain-ref *("." domain-ref)
domain-ref = ATOM
phrase     = 1*WORD
WORD       = ATOM / quoted-string
quoted-string = <"> *(qtext/quoted-pair) <"> ; Regular qtext or
                                                  ;   quoted chars.
qtext      = <any CHAR excepting <">,        ; => may be folded
                  "\" & CR, and including linear-white-space>
quoted-pair ="\" CHAR                        ; may quote any char
CHAR       = <any a character from the selected character set>
ATOM       = 1*<any CHAR except specials, SPACE and CTLs>

utc-offset = time-numzone  ;As defined above in time data type

icalobject = "BEGIN" ":" "VCALENDAR" CRLF
                  icalbody
                  "END" ":" "VCALENDAR" CRLF [icalobject]

property   = [group "."] propname [";" parmlist] ":" value CRLF

propname   = <any properties defined in this document>
                / iana-prop / x-token

x-token    = <The two characters "X-" or "x-" followed, with no
                   intervening white space, by any atom>

iana-prop  = <A publicly defined extension property, registered
                   with IANA, as specified by this document>

icalbody   = calprops 1*component

calprops   = [calscale] [geo] prodid [profile] [profile-version]
                  [source] [name] version

component  = 1*(eventc / todoc / journalc / freebusyc /
                / timezonec)

eventc     = "BEGIN" ":" "VEVENT" CRLF
                  *eventprop *alarmc
                  "END" ":" "VEVENT" CRLF

eventprop  = *attach *attendee *categories [class]
                / [created] description dtend dtstart *exdate
                / *exrule *last-mod [location] [priority]
                / *related *resources *rdate *rrule
                / [resp-seq] / [seq] [status] [summary] [transp]
                / [uid] *url

todoc      = "BEGIN" ":" "VTODO" CRLF
                  *todoprop *alarmc
                  "END" ":" "VTODO" CRLF

todoprop   = *attach *attendee *categories [class] [completed]
                / [created] description dtstart due *exdate
                / *exrule *last-mod [location] priority
                / *related *resources *rdate *rrule [resp-seq]
                / [seq] [status] [summary] [transp] [uid] *url

journalc   = "BEGIN" ":" "VJOURNAL" CRLF
                  *jourprop
                  "END" ":" "VJOURNAL" CRLF

jourprop   = *attach *categories [class] [created] description
                / dtstart *last-mod *related [resp-seq] [seq] [uid] *url

freebusyc  = "BEGIN" ":" "VFREEBUSY" CRLF
                  *fbprop
                  "END" ":" "VFREEBUSY" CRLF

fbprop     = *attendee [created] [duration] [dtend] [dtstart]
                / *freebusy *last-mod *related [resp-seq] [seq] [uid]
                / *url

alarmc     = "BEGIN" ":" "VALARM" CRLF
                  *alarmprop
                  "END" ":" "VALARM" CRLF

alarmprop  = *attach [created] [description] dtstart duration
                / *last-mod *related repeat [summary] *url

timezonec  = "BEGIN" ":" "VTIMEZONE" CRLF
                  *tzprop
                  "END" ":" "VTIMEZONE" CRLF

tzprop     = [created] [daylight] [dtend] dtstart [rdate / rrule]
                  [tzname] tzoffset [tztrans] [uid]

calscale   = "CALSCALE" ":" calvalue CRLF

calvalue   = "GREGORIAN" / iana-scale

iana-scale = <Any other designator for a calendar scale
                   registered with IANA>

geo        = "GEO" ":" geovalue CRLF

geovalue   = (float ";" float )/ url

prodid     = "prodid" ":" pidvalue CRLF

pidvalue   = (text / url)
profile    = "PROFILE" ": profvalue CRLF

profvalue  = " component "-" action

component  = "EVENT" / "TODO" / "JOURNAL" / "FREEBUSY"
                / iana-component / x-token

action     = <Any IANA registered iCalendar action type.>

iana-component = <Any other component registered with IANA>

prof-version = "PROFILE-VERSION" ":" profvalue CRLF

profvalue  = iana-prfver / x-token

iana-prfver = <A IANA registered iCalendar profile identifier>

source     = "SOURCE" ":" url CRLF

name       = "NAME" ":" text CRLF

version    = "VERSION" ":" vervalue CRLF

vervalue   = "2.0" / x-token

attach     = [group "."] "ATTACH" ":" url CRLF

attendee   = [group "."] "ATTENDEE" [";" attparamlist] ":"
                  (rfc822-address / URL) CRLF
attparamlist       = attparam / attparamlist ";" attparam
                        / paramlist / paramlist ";" attparam
                        / paramlist ";" attparamlist ";" attparam

attparam   = typeparm / roleparm / statusparm / rsvpparm
                / expectparm / memberparm

typeparm   = "TYPE" "="
                ("INDIVIDUAL"   ; An individual
                / "GROUP"       ; A group of individuals
                / "RESOURCE"    ; A physical resource
                / "ROOM"        ; A room resource
                / "UNKNOWN")    ; Otherwise not known
roleparm   = "ROLE" "="
                ("ATTENDEE"     ; Indicates a regular attendee
                / "OWNER"       ; Indicates owner of event or to-do
                / "ORGANIZER"   ; Indicates organizer of event or to-do
                / "DELEGATE")   ; Indicates delegate to event or to-do
statusparm = "STATUS" "="
                ("NEEDS-ACTION" ; Indicates event or to-do needs action
                / "ACCEPTED"    ; Indicates event or to-do accepted
                / "DECLINED"    ; Indicates event or to-do not accepted
                / "TENTATIVE"   ; Indicates event or to-do tentatively
                ; accepted. Status may change in the future.
                / "COMPLETED"   ; Indicates to-do was completed.
                ; COMPLETED property has date/time completed.
                / "DELEGATED"   ; Indicateds event or to-do delegated
                ; to another ATTENDEE
                / "CANCELED")   ; Indicates event or to-do canceled for
                ; ATTENDEE
rsvpparm   = "RSVP" "=" ("YES" / "NO")
expectparm = "EXPECT" "="
                ("FYI"          ; Indicates request is for your info
                / "REQUIRE"     ; Indicates presence is required
                / "REQUEST"     ; Indicates presence is requested
                / "IMMEDIATE")  ; Indicates an immediate response needed
memberparm = rfc822-address ; Indicates a group or mailing list

categories = "CATEGORIES" [";" paramlist] ":" catvalue CRLF

catvalue   = cat1value [,cat1value] / cat2value [, cat2value]

cat1value  = "APPOINTMENT" / "BUSINESS" / "EDUCATION" / "HOLIDAY"
                / "MEETING" / "MISCELLANEOUS" / "NON-WORKING HOURS"
                / "NOT IN OFFICE" / "PERSONAL" / "PHONE CALL"
                / "SICK DAY" / "SPECIAL OCCASION" / "TRAVEL"
                / "VACATION" / word
cat2value  = "AUDIO" / "DISPLAY" / "EMAIL" / "PROCEDURE"
                / x-token / iana-word
class      = "CLASS" [";" paramlist] ":" classvalue CRLF

classvalue = "PUBLIC" / "PRIVATE" / "CONFIDENTIAL" / x-token
created    = "CREATED" ":" date-time CRLF

completed  = "COMPLETED" ":" date-time CRLF

daylight   = "DAYLIGHT" ":" boolean CRLF
description = "DESCRIPTION" [";" paramlist] text CRLF

due        = "DUE" ":" date-time CRLF

duration   = "DURATION" ":" duration CRLF

dtstart    = "DTSTART" ":" date-time CRLF

dtend      = "DTEND" ":" date-time CRLF

exdate     = "EXDATE" ":" date-time *["," date-time] CRLF

exrule     = "EXRULE" [";" rparamlist] ":" rvalue CRLF

freebusy   = "FREEBUSY" [";" fbparmlist] ":" fbvalue CRLF

fbparmlist = fbparam / paramlist ";" fbparam
                / fbparam ";" fbparmlist

fbparam    = fbtype / fbstatus

fbtype     = "TYPE" "=" ("FREE" or "BUSY")
fbstatus   = "STATUS" "="
                  "BUSY"        ;Represents busy time interval
                / "OUT"         ;Represents out-of-office, non-working
                                ;hours, or other unavailable interval
                / "PRIVATE"     ;Represents private unavailable time 
                / "CONFIDENTIAL" ;Represents confidential unavailable
                                ;time
fbvalue    = period *["," period]
last-mod   = "LAST-MODIFIED" ":" date-time ["," date-time] CRLF

location   = "LOCATION [";" paramlist] ":" locavalue CRLF

locavalue  = text / url    ;The value must be the same type as the
                                ;default or explicit data type.

priority   = "PRIORITY" ":" integer CRLF
related    = "RELATED-TO" [";" paramlist] ":" relvalue CRLF

relvalue   = text / url            ;Value must be the same type as
                                        ;default or explicit data type

rdate      = "RDATE" ":" rdvalue *["," rdvalue] CRLF

rdvalue    = date-time / period
rrule      = "RRULE" [rparamlist] ":" rvalue CRLF

rparamlist = rparam / rparamlist ";" rparam / paramlist
                / paramlist ";" rparam
                / paramlist ";" rparamlist ";" rparam

rparam     = "UNTIL" "=" enddate
                / "COUNT" "=" interval
                / "INTERVAL" "=" rinterval
                / "BYDAY" "=" bdweekdaylist
                / "BYMONTHDAY" "=" bmdaylist
                / "BYYEARDAY" "=" bydaylist
                / "BYSETPOS" "=" bsplist
                / "BYWEEKNO" "=" bwdaylist
                / "BYMONTH" "=" bmlist
                / "WKST" "=" weekday
                / "X-" word "=" word

rvalue     = "HOURLY" / "DAILY" / "WEEKLY" / "YEARLY"

rinterval  = interval      ; For any rvalue
                / duration      ; Only for rvalue = HOURLY

DIGIT      =<any ASCII decimal digit>      ;0-9

digits     = 1*DIGIT

interval   = digits

enddate    = date          ;A UTC value

plus       = "+"

minus      = "-"

ordmoday   = 1*2digits     ;1 to 31

ordwk      = 1*2digits     ;1 to 52

ordyrday   = 1*3digits     ;1 to 366

daynumber  = (plus / minus) ordmoday

weekday    = "SU" / "MO" / "TU" / "WE" / "TH" / "FR" / "SA" >

bdweekdaynum = [daynumber] weekday

bdweekdaylist = bdweekdaynum / bdweekdaynum "," *(bdweekdaynum)

bmposday   = [plus] ordmoday

bmnegday   = minus ordmoday
bmdaylist  = bmposday *("," bmposday / bmnegday)
                / bmnegday *("," bmnegday / bmposday)

byposday   = [plus] ordyrday

bynegday   = minus ordyrday

bydaylist  = byposday *("," byposday / bynegday)
                / bynegday *("," bynegday / byposday)

bsplist    = byposday *("," byposday / bynegday)
                / bynegday *("," bynegday / byposday)

bwposday   = [plus] ordwk

bwnegday   = minus ordwk

bwdaylist  = bwposday *("," bwposday / bwnegday)
                / bwnegday *("," bwnegday / bwposday)

bmposmon   = 1*2digits     ;1 to 12

bmlist     = bmposmon *("," bmposmon)

resource   = "RESOURCES" [";" paramlist] ":" resvalist CRLF

resvalist  = resvalue / resvalue "," resvalist

resvalue   = "CATERING" / "CHAIRS" / "COMPUTER PROJECTOR"
                / "EASEL" / "OVERHEAD PROJECTOR" / "SPEAKER PHONE"
                / "TABLE" / "TV" / "VCR" / "VIDEO PHONE" / "VEHICLE"
                / word

respseq    = "RESPONSE-SEQUENCE" ":" integer CRLF
sequence   = "SEQUENCE" ":" integer CRLF
status     = "STATUS" [";" paramlist] ":" statvalue CRLF

statvalue  = "NEEDS ACTION"        ;Indicates to-do needs action.
                / "COMPLETED"           ;Indicates to-do completed
                / "TENTATIVE"           ;Indicates event is being
                                        ;tentatively scheduled
                / "CONFIRMED"           ;Indicates event is definite
                / "CANCELLED"           ;Indicates event was canceled

summary    = "SUMMARY" [";" paramlist] ":" text CRLF
transp     = "TRANSP" [";" paramlist] ":" transvalue CRLF

transvalue = "BUSY"        ;Opaque/blocks on free/busy searches
                                ;Default value is BUSY
                / "OUT"         ;Opaque/blocks on free/busy searches
                / "PRIVATE"     ;Opaque/blocks on free/busy searches
                / "CONFIDENTIAL" ;Opaque/blocks on free/busy searches
                / "TRANSPARENT" ;Transparent on free/time searches

tzname     = "TZNAME" [";" paramlist] ":" text CRLF

tzoffset   = "TZOFFSET" ":" utc-offset CRLF

tztrans    = "TZTRANS" ":" time CRLF

url        = "URL" ":" url CRLF

uid        = "UID" [";" paramlist] ":" text CRLF

extension  = "X-" [vendorid] word [";" paramlist] ":" value

vendorid   = 1*char "-"    ;Vendor identification prefix text

CHAR       = <Any character in the selected character set>
DIGIT      = <Any ASCII decimal digit>     ;0-9
CTL        = <Any control character in the selected character set>
CR         = <ASCII CR, carriage return, ASCII decimal 13>
LF         = <ASCII LF, line feed, ASCII decimal 10>
SPACE      = <ASCII SP, space, ASCII decimal 32>
HTAB       = <ASCII HT, horizontal tab, ASCII decimal 9>
CLRF       = CR LF
LWSP-char  = SPACE / HTAB          ;Semantics equals SPACE
linear-white-space = 1*(CRLF LWSP-char)
WORD       = ATOM / quoted-string
quoted-string = <"> *(qtext/quoted-pair) <"> ; Regular qtext or
                                                  ; quoted chars.
qtext      = <any CHAR excepting <">,        ; => may be folded
                  "\" & CR, and including linear-white-space>
quoted-pair ="\" CHAR      ; may quote any char
ATOM       = 1*<any CHAR except specials, SPACE and CTLs>

contentline = [group "."] name [";" paramlist] ":" value CRLF
group      = atom          ;As defined in [RFC 822]

name       = x-name / iana-name    ;An iCalendar attribute/property

x-name     = <The two characters "X-" or "x-" followed, with no
                   intervening white space, by any atom>

iana-name  = <A publicly defined name, registered with IANA>

paramlist  = parameter / paramlist ";" parameter

parameter  = encodingparm
                / valuetypeparm         ;If not present => inline value
                / charsetparm
                / languageparm
                / [parmtype "="] parmvalues

encodingparm = "encoding" "=" encodetype
encodetype = "8bit"                ;From [RFC 2045]
                / "7bit"                ;From [RFC 2045]
                / "base64"              ;From [RFC 2045]
                / "quoted-printable"    ;From [RFC 2045]

valuetypeparm = "value" "=" valuetype

valuetype  = "url"
                / "text"
                / "date"
                / "time"
                / "date-time"
                / "period"
                / "duration"
                / "boolean"
                / "integer"
                / "float"
                / "rfc822-address"
                / "utc-offset"
                / x-token
                / iana-value

iana-value = <A publicly defined extension value type, registered
                   with IANA, as specified by this document>

charsetparm = "charset" "=" charset ;As defined in [RFC 2047]

languageparm = "language" "=" language ;As defined in [RFC 1766]

parmtype   = x-token / iana-ptype

iana-ptype = <A publicly defined extension parameter type,
                   registered with IANA, as specified by this document>

parmvalues = parmvalue / parmvalues "," parmvalue

parmvalue  = x-name / iana-pvalue

iana-pvalue = <A publicly defined extension parameter value,
                    registered with IANA, as specified by this document>

value      = url / text / date / time/ date-time / period /
                / duration / boolean / integer / float / rfc822-address
                / utc-offset / iana-value

iana-value = <A publicly defined property value data type,
                   registered with IANA, as defined in this document>

url        = <As defined by [RFC 1738]>
text       = <Any CHAR include a bare CR or a bare LF but
           not a CRLF sequence>

date-fullyear      = 4DIGIT
date-month         = 2DIGIT        ;01-12
date-mday          = 2DIGIT        ;01-28, 01-29, 01-30, 01-31
                                        ;based on month/year
full-date          = date-fullyear date-month date-mday
date       = fulldate *["," fulldate]

time-hour  = 2DIGIT        ;00-24
time-minute        = 2DIGIT        ;00-60
time-second        = 2DIGIT        ;00-59
time-numzone       = ("+" / "-") time-hour time-minute
time-zone  = "Z" / time-numzone
full-time  = time-hour time-minute time-second [time-zone]
time       = fulltime *["," fulltime]

date-time  = date "T" time ;As specified above in date and time

dur-second = 1*DIGIT "S"
dur-minute = 1*DIGIT "M" [dur-second]
dur-hour   = 1*DIGIT "H" [dur-minute]
dur-time   = "T" (dur-hour / dur-minute / dur-second)

dur-week   = 1*DIGIT "W"
dur-day    = 1*DIGIT "D"
dur-month  = 1*DIGIT "M" [dur-day]
dur-year   = 1*DIGIT "Y" [dur-month]
dur-date   = (dur-day / dur-month / dur-year) [dur-time]

duration   = "P" (dur-date / dur-time / dur-week)

period-explicit = date-time "/" date-time
period-start = date-time "/" duration
period     = period-explicit / period-start

boolean    = "TRUE" / "FALSE"

integer    = ["+" / "-"] *DIGIT

float      = ["+" / "-"] *DIGIT ["." *DIGIT]

rfc822-address     = addr-spec / [phrase] "<" addr-spec ">"

addr-spec  = local-part "@" domain         ;RFC 822 address
local-part = WORD *("." WORD)
domain     = domain-ref *("." domain-ref)
domain-ref = ATOM
phrase     = 1*WORD

utc-offset = time-numzone  ;As defined above in time

icalobject = "BEGIN" ":" "VCALENDAR" CRLF
                  icalbody
                  "END" ":" "VCALENDAR" CRLF [icalobject]

property   = [group "."] propname [";" parmlist] ":" value CRLF

propname   = <any properties defined in this document>
                / iana-prop / x-token

x-token    = <The two characters "X-" or "x-" followed, with no
                   intervening white space, by any atom>

iana-prop  = <A publicly defined extension property, registered
                   with IANA, as specified by this document>

icalbody   = calprops 1*component

calprops   = [calscale] [geo] prodid [profile] [prof-version]
                  [source] [name] version

component  = 1*(eventc / todoc / journalc / freebusyc /
                / timezonec)

eventc     = "BEGIN" ":" "VEVENT" CRLF
                  *eventprop *alarmc
                  "END" ":" "VEVENT" CRLF

eventprop  = *attach *attendee *categories [class]
                / [created] description dtend dtstart *exdate
                / *exrule *last-mod [location] [priority]
                / *related *resources *rdate *rrule
                / [resp-seq] / [seq] [status] [summary] [transp]
                / [uid] *url

todoc      = "BEGIN" ":" "VTODO" CRLF
                  *todoprop *alarmc
                  "END" ":" "VTODO" CRLF
todoprop   = *attach *attendee *categories [class] [completed]
                / [created] description dtstart due *exdate
                / *exrule *last-mod [location] priority
                / *related *resources *rdate *rrule [resp-seq]
                / [seq] [status] [summary] [transp] [uid] *url

journalc   = "BEGIN" ":" "VJOURNAL" CRLF
                  *jourprop
                  "END" ":" "VJOURNAL" CRLF

jourprop   = *attach *categories [class] [created] description
                / dtstart *last-mod *related [resp-seq] [seq] [uid] *url

freebusyc  = "BEGIN" ":" "VFREEBUSY" CRLF
                  *fbprop
                  "END" ":" "VFREEBUSY" CRLF

fbprop     = *attendee [created] [duration] [dtend] [dtstart]
                / *freebusy *last-mod *related [resp-seq] [seq] [uid]
                / *url

alarmc     = "BEGIN" ":" "VALARM" CRLF
                  *alarmprop
                  "END" ":" "VALARM" CRLF

alarmprop  = *attach [created] [description] dtstart duration
                / *last-mod *related repeat [summary] *url

timezonec  = "BEGIN" ":" "VTIMEZONE" CRLF
                  *tzprop
                  "END" ":" "VTIMEZONE" CRLF

tzprop     = [created] [daylight] [dtend] dtstart [rdate / rrule]
                  [tzname] tzoffset [tztrans] [uid]

calscale   = "CALSCALE" ":" calvalue CRLF
calvalue   = "GREGORIAN" / iana-scale
iana-scale = <Any other designator for a calendar scale
                   registered with IANA>

geo                = "GEO" ":" geovalue CRLF
geovalue   = (float ";" float )/ url

prodid     = "prodid" ":" pidvalue CRLF
pidvalue   = (guid-text / url)
profile    = "PROFILE" ": profvalue CRLF
profvalue  = " component "-" action
component  = "EVENT" / "TODO" / "JOURNAL" / "FREEBUSY"
                / iana-component / x-token
action     = <Any IANA registered iCalendar action type.>
iana-component = <Any other component registered with IANA>

prof-version       = "PROFILE-VERSION" ":" profvalue CRLF
profvalue  = iana-prfver / x-token
iana-prfver = <A IANA registered iCalendar profile identifier>

source     = "SOURCE" ":" url CRLF

name               = "NAME" ":" text CRLF

version    = "VERSION" ":" vervalue CRLF
vervalue   = "2.0" / x-token

attach     = [group "."] "ATTACH" ":" url CRLF

attendee   = [group "."] "ATTENDEE" [";" attparamlist] ":"
                  (rfc822-address / url) CRLF

attparamlist               = attparam / attparamlist ";" attparam
                        / paramlist / paramlist ";" attparam
                        / paramlist ";" attparamlist ";" attparam

attparam   = typeparm / roleparm / statusparm / rsvpparm
                / expectparm / memberparm

typeparm   = "TYPE" "="
                ("INDIVIDUAL"   ; An individual
                / "GROUP"       ; A group of individuals
                / "RESOURCE"    ; A physical resource
                / "ROOM"        ; A room resource
                / "UNKNOWN")    ; Otherwise not known
roleparm   = "ROLE" "="
                ("ATTENDEE"     ; Indicates a regular attendee
                / "OWNER"       ; Indicates owner of event or to-do
                / "ORGANIZER"   ; Indicates organizer of event or to-do
                / "DELEGATE")   ; Indicates delegate to event or to-do
statusparm = "STATUS" "="
                ("NEEDS-ACTION" ; Indicates event or to-do needs action
                / "ACCEPTED"    ; Indicates event or to-do accepted
                / "DECLINED"    ; Indicates event or to-do not accepted
                / "TENTATIVE"   ; Indicates event or to-do tentatively
                ; accepted. Status may change in the future.
                / "COMPLETED"   ; Indicates to-do was completed.
                ; COMPLETED property has date/time completed.
                / "DELEGATED"   ; Indicateds event or to-do delegated
                ; to another ATTENDEE
                / "CANCELED")   ; Indicates event or to-do canceled for
                ; ATTENDEE
rsvpparm   = "RSVP" "=" ("YES" / "NO")
expectparm = "EXPECT" "="
                ("FYI"          ; Indicates request is for your info
                / "REQUIRE"     ; Indicates presence is required
                / "REQUEST"     ; Indicates presence is requested
                / "IMMEDIATE")  ; Indicates an immediate response needed
memberparm = rfc822-address ; Indicates a group or mailing list

categories = "CATEGORIES" [";" paramlist] ":" catvalue CRLF

catvalue   = cat1value [,cat1value] / cat2value [, cat2value]

cat1value  = "APPOINTMENT" / "BUSINESS" / "EDUCATION" / "HOLIDAY"
                / "MEETING" / "MISCELLANEOUS" / "NON-WORKING HOURS"
                / "NOT IN OFFICE" / "PERSONAL" / "PHONE CALL"
                / "SICK DAY" / "SPECIAL OCCASION" / "TRAVEL"
                / "VACATION" / word
cat2value  = "AUDIO" / "DISPLAY" / "EMAIL" / "PROCEDURE"
                / x-token / iana-word
class      = "CLASS" [";" paramlist] ":" classvalue CRLF
classvalue = "PUBLIC" / "PRIVATE" / "CONFIDENTIAL" / x-token
created    = "CREATED" ":" date-time CRLF

completed  = "COMPLETED" ":" date-time CRLF

daylight   = "DAYLIGHT" ":" boolean CRLF
description = "DESCRIPTION" [";" paramlist] text CRLF

due        = "DUE" ":" date-time CRLF

duration   = "DURATION" ":" duration CRLF

dtstart    = "DTSTART" ":" date-time CRLF

dtend      = "DTEND" ":" date-time CRLF

exdate     = "EXDATE" ":" date-time *["," date-time] CRLF
exrule     = "EXRULE" [";" rparamlist] ":" rvalue CRLF

freebusy   = "FREEBUSY" [";" fbparmlist] ":" fbvalue CRLF

fbparmlist = fbparam / paramlist ";" fbparam
                / fbparam ";" fbparmlist
fbparam    = fbtype / fbstatus

fbtype     = "TYPE" "=" ("FREE" or "BUSY")
fbstatus   = "STATUS" "="
                  "BUSY"        ;Represents busy time interval
                / "OUT"         ;Represents out-of-office, non-working
                                ;hours, or other unavailable interval
                / "PRIVATE"     ;Represents private unavailable time 
                / "CONFIDENTIAL" ;Represents confidential unavailable
                                ;time
fbvalue    = period ["," period]
last-mod   = "LAST-MODIFIED" ":" date-time ["," date-time] CRLF

location   = "LOCATION [";" paramlist] ":" locavalue CRLF
locavalue  = text / url    ;The value must be the same type as the
                                ;default or explicit data type.

priority   = "PRIORITY" ":" integer CRLF
related-to = "RELATED-TO" [";" paramlist] ":" relvalue CRLF
relvalue   = text / url            ;Value must be the same type as
                                        ;default or explicit data type

rdate      = "RDATE" ":" rdvalue *["," rdvalue] CRLF
rdvalue    = date-time / period
rparamlist = rparam / rparamlist ";" rparam / paramlist
                / paramlist ";" rparam
                / paramlist ";" rparamlist ";" rparam

rparam     = "UNTIL" "=" enddate
                / "COUNT" "=" interval
                / "INTERVAL" "=" rinterval
                / "BYDAY" "=" bdweekdaylist
                / "BYMONTHDAY" "=" bmdaylist
                / "BYYEARDAY" "=" bydaylist
                / "BYSETPOS" "=" bsplist
                / "BYWEEKNO" "=" bwdaylist
                / "BYMONTH" "=" bmlist
                / "WKST" "=" weekday
                / "X-" word "=" word

rvalue     = "HOURLY" / "DAILY" / "WEEKLY" / "YEARLY"

rinterval  = interval      ; For any rvalue
                / duration      ; Only for rvalue = HOURLY

digits     = 1*digit

interval   = digits

enddate    = date          ;A UTC value

plus       = "+"

minus      = "-"

ordmoday   = 1*2digits     ;1 to 31

ordwk      = 1*2digits     ;1 to 52

ordyrday   = 1*3digits     ;1 to 366

daynumber  = (plus / minus) ordmoday

weekday    = "SU" / "MO" / "TU" / "WE" / "TH" / "FR" / "SA" >

bdweekdaynum = [daynumber] weekday

bdweekdaylist = bdweekdaynum / bdweekdaynum "," *(bdweekdaynum)

bmposday   = [plus] ordmoday

bmnegday   = minus ordmoday

bmdaylist  = bmposday *("," bmposday / bmnegday)
                / bmnegday *("," bmnegday / bmposday)

byposday   = [plus] ordyrday

bynegday   = minus ordyrday

bydaylist  = byposday *("," byposday / bynegday)
                / bynegday *("," bynegday / byposday)

bsplist    = byposday *("," byposday / bynegday)
                / bynegday *("," bynegday / byposday)

bwposday   = [plus] ordwk
bwnegday   = minus ordwk

bwdaylist  = bwposday *("," bwposday / bwnegday)
                / bwnegday *("," bwnegday / bwposday)

bmposmon   = 1*2digits     ;1 to 12

bmlist     = bmposmon *("," bmposmon)

resource   = "RESOURCES" [";" paramlist] ":" resvalist CRLF
resvalist  = resvalue / resvalue "," resvalist
resvalue   = "CATERING" / "CHAIRS" / "COMPUTER PROJECTOR"
                / "EASEL" / "OVERHEAD PROJECTOR" / "SPEAKER PHONE"
                / "TABLE" / "TV" / "VCR" / "VIDEO PHONE" / "VEHICLE"
                / word

respseq    = "RESPONSE-SEQUENCE" ":" integer CRLF
sequence   = "SEQUENCE" ":" integer CRLF
status     = "STATUS" [";" paramlist] ":" statvalue CRLF

statvalue  = "NEEDS ACTION"        ;Indicates to-do needs action.
                / "COMPLETED"           ;Indicates to-do completed
                / "TENTATIVE"           ;Indicates event is being
                                        ;tentatively scheduled
                / "CONFIRMED"           ;Indicates event is definite
                / "CANCELLED"           ;Indicates event was canceled

summary    = "SUMMARY" [";" paramlist] ":" text CRLF

transp     = "TRANSP" [";" paramlist] ":" transvalue CRLF
transvalue = "BUSY"        ;Opaque/blocks on free/busy searches
                                ;Default value is BUSY
                / "OUT"         ;Opaque/blocks on free/busy searches
                / "PRIVATE"     ;Opaque/blocks on free/busy searches
                / "CONFIDENTIAL" ;Opaque/blocks on free/busy searches
                / "TRANSPARENT" ;Transparent on free/time searches

tzname     = "TZNAME" [";" paramlist] ":" text CRLF

tzoffset   = "TZOFFSET" ":" utc-offset CRLF

tztrans    = "TZTRANS" ":" time CRLF

url        = "URL" ":" url CRLF

uid        = "UID" [";" paramlist] ":" text CRLF

extension  = "X-" [vendorid] word [";" paramlist] ":" value
vendorid   = 1*char "-"    ;Vendor identification prefix text
