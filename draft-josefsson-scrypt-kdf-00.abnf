T = X xor B[i]
X = Salsa (T)
X = scryptBlockMix (X)
j = Integerify (X) mod N
                 where Integerify (B[0] ... B[2 * r - 1]) is defined
                 as the result of interpreting B[2 * r - 1] as a
                 little-endian integer.
T = X xor V[j]
X = scryptBlockMix (T)
B = f7ce0b65 3d2d72a4 108cf5ab e912ffdd
       777616db bb27a70e 8204f3ae 2d0f6fad
       89f68f48 11d1e87b cc3bd740 0a9ffd29
       094f0184 639574f3 9ae5a131 5217bcd7
       89499144 7213bb22 6c25b54d a86370fb
       cd984380 374666bb 8ffcb5bf 40c254b0
       67d27c51 ce4ad5fe d829c90b 505a571b
       7f4d1cad 6a523cda 770e67bc eaaf7e89

B = 79ccc193 629debca 047f0b70 604bf6b6
       2ce3dd4a 9626e355 fafc6198 e6ea2b46
       d5841367 3b99b029 d665c357 601fb426
       a0b2f4bb a200ee9f 0a43d19b 571a9c71
       ef1142e6 5d5a266f ddca832c e59faa7c
       ac0b9cf1 be2bffca 300d01ee 387619c4
       ae12fd44 38f203a0 e4e1c47e c314861f
       4e9087cb 33396a68 73e8f9d2 539a4b8e


c=1, dkLen=64) =
c=80000, dkLen=64) =
r=16, N=1, p=1, dklen=64) =
r=1024, N=8, p=16, dkLen=64) =
r=16384, N=8, p=1, dkLen=64) =
r=1048576, N=8, p=1, dkLen=64) =
