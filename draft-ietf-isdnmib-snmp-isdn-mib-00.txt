
INTERNET-DRAFT                  ISDN MIB                       June 1995


                    ISDN Management Information Base
                 draft-ietf-isdnmib-snmp-isdn-mib-00.txt

                     Mon Jun 19 19:13:44 MET DST 1995


                             Guenter Roeck
                              Conware GmbH
                            roeck@conware.de





                          Status of this Memo

This document is an Internet-Draft.  Internet-Drafts are working
documents of the Internet Engineering Task Force (IETF), its Areas, and
its Working Groups.  Note that other groups may also distribute working
documents as Internet-Drafts.

Internet-Drafts are draft documents valid for a maximum of six months
and may be updated, replaced, or obsoleted by other documents at any
time.  It is inappropriate to use Internet-Drafts as reference material
or to cite them other than as a "work in progress".

To learn the current status of any Internet-Draft, please check the
"1id-abstracts.txt" listing contained in the Internet-Drafts Shadow
Directories on ftp.is.co.za (Africa), nic.nordu.net (Europe),
munnari.oz.au (Pacific Rim), ds.internic.net (US East Coast), or
ftp.isi.edu (US West Coast).


















Expires January 1996                                            [Page 1]




INTERNET-DRAFT                  ISDN MIB                       June 1995


1.  Introduction

This memo defines an experimental portion of the Management Information
Base (MIB) for use with network management protocols in the Internet
community.  In particular, it defines a minimal set of managed objects
for SNMP-based management of ISDN interfaces. ISDN interfaces are
supported on a variety of equipment (for data and voice) including
terminal adapters, bridges, hosts, and routers. The set of objects will
be consistent with the SNMP framework and existing SNMP standards.








































Expires January 1996                                            [Page 2]




INTERNET-DRAFT                  ISDN MIB                       June 1995


2.  The SNMPv2 Network Management Framework

The SNMPv2 Network Management Framework consists of four major
components.  They are:

o    RFC 1442 [1] which defines the SMI, the mechanisms used for
     describing and naming objects for the purpose of management.

o    STD 17, RFC 1213 [2] defines MIB-II, the core set of managed
     objects for the Internet suite of protocols.

o    RFC 1445 [3] which defines the administrative and other
     architectural aspects of the framework.

o    RFC 1448 [4] which defines the protocol used for network access to
     managed objects.

The Framework permits new objects to be defined for the purpose of
experimentation and evaluation.


2.1.  Object Definitions

Managed objects are accessed via a virtual information store, termed the
Management Information Base or MIB.  Objects in the MIB are defined
using the subset of Abstract Syntax Notation One (ASN.1) defined in the
SMI.  In particular, each object type is named by an OBJECT IDENTIFIER,
an administratively assigned name.  The object type together with an
object instance serves to uniquely identify a specific instantiation of
the object.  For human convenience, we often use a textual string,
termed the descriptor, to refer to the object type.


















Expires January 1996                                            [Page 3]




INTERNET-DRAFT                  ISDN MIB                       June 1995


3.  Overview

3.1.  Structure of MIB

For the management of ISDN interfaces, there are three groups of
information necessary.  They are:

o    A group for managing subscriber interfaces, often referred to as D
     channels, and B channels.

o    A group for managing neighbors

o    A group returning call history information.

Within this document, these groups have been structured into three
different MIBs, which will be described in the following chapters.  The
purpose of this structuring is to be able to use parts of this
information for non-ISDN interfaces as well. In particular, the call
control and call history MIBs might also be used for other types of
interfaces.


3.1.1.  The ISDN MIB

This MIB controls subscriber interfaces as well as B channel interfaces.
It consists of three groups.

o    The isdnMibGeneralGroup is used to return general information valid
     for the entire ISDN subsystem.

o    The isdnMibSubscriberGroup is used to control ISDN subscriber
     interfaces.  It consists of two tables, the isdnSubscriberTable for
     configuration information and the isdnSubscriberStatsTable for
     statistics information.

o    The isdnPortGroup is used to control B channels. It supports
     configuration parameters as well as statistical information related
     to B channels.


3.1.2.  The call control MIB

The call control MIB describes neighbors for demand access lines as well
as for other kinds of interfaces. It basically consists of one table
describing neighbor entries.





Expires January 1996                                            [Page 4]




INTERNET-DRAFT                  ISDN MIB                       June 1995


3.1.3.  The call history MIB

The call history MIB describes and stores call information. This
information can for example be used for accounting purposes.  It
consists of one table with an entry for each call that has been made.


3.2.  Relationship to RFC1573

RFC 1573, the Interface MIB Evolution, requires that any MIB module
which is an adjunct of the Interface MIB, clarify specific areas within
the Interface MIB.  These areas were intentionally left vague in RFC
1573 to avoid over constraining the MIB module, thereby precluding
management of certain media-types.

Section 3.3 of RFC 1573 enumerates several areas which a media-specific
MIB module must clarify.  Each of these areas is addressed in a
following subsection.  The implementor is referred to RFC 1573 in order
to understand the general intent of these areas.


3.2.1.  Layering Model and Virtual Circuits

On an occasional access channel, there are a number of neighboring
systems that are permitted to call or be called, all of which need to be
treated as active from a routing viewpoint, but most of which have no
call in progress at any given time.

On an ISDN interface, this is complicated by the fact that calls to a
given neighbor float from channel to channel.  One cannot definitively
say "I call this neighbor on that B channel." It is necessary,
therefore, to provide a mapping algorithm between the B or H channels,
and the various logical interfaces supporting the neighbors.  This is
solved by creating a logical interface (ifEntry) for each neighbor and a
logical interface (ifEntry) for each B channel.  These are then
correlated using the ifStackTable.













Expires January 1996                                            [Page 5]




INTERNET-DRAFT                  ISDN MIB                       June 1995


The model, therefore, looks something like this:

+-------------------------------------------------------+
|               Network Layer Protocol                  |
+------+ +-------+ +-------+ +-------+ +-------+ +------+
       | |       | |       | |       | |       | |  <== appears active
     +-+ +-+   +-+ +-+   +-+ +-+   +-+ +-+   +-+ +-+
     | PPP |   | PPP |   | F/R |   | PPP |   | F/R |
     | for |   | for |   | for |   | for |   | for |   ifEntry with
     |Nbr 1|   |Nbr 2|   |switch   |Nbr 3|   |switch   shadow
     |     |   |     |   |  A  |   |     |   |  B  |   callCtlNbrEntry
     +-+ +-+   +-+ +-+   +-+ +-+   +-+ +-+   +-+ +-+
                 | |                 | |            <== some actually are
              +--+ +--+           +--+ +--+
              |   B   |           |   B   |
              |channel|           |channel|
              +--+ +--+           +--+ +--+
                 | |                 | |
+------+ +-------+ +-------+ +-------+ +-------+ +------+
|             Basic/Primary Rate Interface              |
+-------------------------------------------------------+

Mapping of IP interfaces to Called Neighbors to B Channels

IfEntries are maintained for D channels and for each B channel. The D
channel's interface ifType is one of the ISDN interface types; B channel
ifTypes are all "other". The ifStackTable is used to map logical
interfaces to B channel interfaces. Conceivably, X.25 or Frame Relay
interface MIBs could also be layered on the D channel.


3.2.2.  ifTestTable

The ifTestTable is not supported by this MIB.


3.2.3.  ifRcvAddressTable

The ifRcvAddressTable is not supported by this MIB.










Expires January 1996                                            [Page 6]




INTERNET-DRAFT                  ISDN MIB                       June 1995


3.2.3.1.  ifEntry for a D channel

ifTable           Comments
==============    ===========================================
ifIndex           Each ISDN D channel is represented by an ifEntry.

ifDescr           Textual port description.

ifType            The IANA value reserved for basicISDN(20)
                  and primaryISDN(21)

ifMtu             The size of the largest frame which can be
                  sent/received on this D Channel,
                  specified in octets.

ifSpeed           The bandwidth of this D channel.

ifPhysAddress     The ISDN address assigned to this subscriber
                  interface. This is a copy of isdnSubTblIfAddress.

ifAdminStatus     The desired administrative status of the
                  ISDN port.

ifOperStatus      The current operational status of the ISDN
                  UNI (User Network Interface) port. If the
                  operational status is dormant(5), the D channel
                  is in standby mode (see [5], Annex F, D channel
                  backup procedures).

ifLastChange      Refer to RFC 1573.

ifInOctets        The total number of octets received on this
                  D channel.

ifInUcastPkts     The number of frames received on this D channel
                  whose address is not TEI=127.

ifInNUcastPkts    Deprecated.  Return the number of frames
                  received on this D channel which is
                  targeted TEI=127.

ifInDiscards      The total number of received frames discards.
                  The possible reasons are: buffer shortage.

ifInErrors        The number of inbound frames that contained





Expires January 1996                                            [Page 7]




INTERNET-DRAFT                  ISDN MIB                       June 1995


                  errors preventing them from being deliverable
                  to LAPD.

ifInUnknownProtos The number of frames with this interface's TEI,
                  but unknown SAPI.

ifOutOctets       The total number of octets transmitted on this
                  D channel.

ifOutUcastPkts    The number of frames transmitted on this
                  D channel whose address is not TEI=127.

ifOutNUcastPkts   Deprecated.  Return the number of frames
                  transmitted on this D channel which
                  has TEI=127.

ifOutDiscards     The total number of outbound frames which
                  were discarded. Possible reasons are:
                  buffer shortage.

ifOutErrors       The number of frames which could not be
                  transmitted due to errors.

ifOutQlen         Deprecated. Return zero.

ifSpecific        Deprecated. Return {0 0}.


3.2.3.2.  ifEntry for a B channel

ifTable           Comments
==============    ===========================================
ifIndex           Each ISDN B channel is represented by an ifEntry.

ifDescr           Textual port description.

ifType            The IANA value reserved for other(1)

ifMtu             The size of the largest frame which can be
                  sent/received on this B Channel,
                  specified in octets.

ifSpeed           The bandwidth of this B channel.
                  Usually, this will be the value
                  of 64000. For ISDN leased lines





Expires January 1996                                            [Page 8]




INTERNET-DRAFT                  ISDN MIB                       June 1995


                  (or eventually hyperchannels),
                  this will be the total capacity
                  of this interface.

ifPhysAddress     The ISDN address assigned to this port.
                  This is a copy of isdnPortIfAddress.

ifAdminStatus     The desired administrative status of the
                  ISDN port.

ifOperStatus      The current operational status of the ISDN
                  port. Note that dormant(5) is explicitely being
                  used as defined in RFC1573.

ifLastChange      Refer to RFC 1573.

ifInOctets        The total number of octets received on this
                  B channel.

ifInUcastPkts     The number of frames received on this B channel.

ifInNUcastPkts    Deprecated.  Return zero.

ifInDiscards      The total number of received frames discards.
                  The possible reasons are: buffer shortage.

ifInErrors        The number of inbound frames that contained
                  errors preventing them from being deliverable
                  to a higher-layer protocol.

ifInUnknownProtos The number of inbound frames with unknown
                  upper layers.

ifOutOctets       The total number of octets transmitted on this
                  B channel.

ifOutUcastPkts    The number of frames transmitted on this
                  B channel.

ifOutNUcastPkts   Deprecated.  Return zero.

ifOutDiscards     The total number of outbound frames which
                    were discarded. Possible reasons are:
                  buffer shortage.





Expires January 1996                                            [Page 9]




INTERNET-DRAFT                  ISDN MIB                       June 1995


ifOutErrors       The number of frames which could not be
                  transmitted due to errors.

ifOutQlen         Deprecated. Return zero.

ifSpecific        Deprecated. Return {0 0}.


3.3.  ISDN interface specific information

3.3.1.  ISDN leased lines

ISDN leased lines are being handled by setting isdnSubTblSwitchType to
the according type of leased line.  In this case, there is no active D
channel required, since a leased line does not require any signalling.
If possible with the according type of leased line (e.g., leasedS01 or
leasedS02 for Germany), the D channel may also be used for data
transfer. In this case, isdnSubTblDchannelIndex will point to itself,
which then identifies the possibility to use this channel for data
transfer.


3.3.2.  Hyperchannels

Hyperchannels can be defined using callCtlNbrInfoType and
callCtlNbrInfoRate objects in the call control MIB.  However, remember
that the switch type has to support this type of connections.


3.3.3.  D channel backup and NFAS trunks

D channel backup is defined in [5], Annex F.  It describes non-
associated signalling and its use and functionality is basically
identical to NFAS trunks.

Non Facility Accociated Signalling (NFAS) basically means that a D
channel on a PRI interface is used to manage calls on a second PRI
trunk. This is required in North America for H11 channels, since all 24
time slots are being used for bearer channels.

According to [5], Annex F, the D channel backup feature can be provided
on a subscription basis and is network dependent.  The D channel backup
procedure is described in detail in [5].






Expires January 1996                                           [Page 10]




INTERNET-DRAFT                  ISDN MIB                       June 1995


D channel backup and NFAS trunks are being handled using the
isdnSubTblDchannelIndex object of the isdnSubscriberTable.


3.3.4.  X.25 data transfer in D channel

Transfer of X.25 data over D channels can be handled by attaching an
X.25 interface to a D channel using the ifStack table of RFC 1573.


3.3.5.  SPID handling

Service Profile IDentifiers (SPID) are defined for BRI interfaces only,
and being used in North America. SPIDs are required for DMS-100 and NI-
1, and are optional for 5ESS. A switch can define up to 8 SPIDs per BRI.

Usually, each B channel has one SPID assigned. It is normally built from
the party number (calling address for outgoing calls) with a number of
digits prepended and appended. Since each network appears to be
different, both the calling address and the SPID have to be stored.

The SPID identifies the particular services that have been provisioned
for a terminal. If there are two B channels on a BRI, there can be two
SPIDs, one for each of the two B channels.

The SPID gets registered with the switch after link establishment.
There is one data link for each SPID. As part of termina registration,
an endpoint ID is defined by the switch.  On incoming calls, the switch
may provide the endpoint ID, a called party number, or both, depending
on the ISDN code implemented in the switch.

In the ISDN MIB, the SPID can be entered using the idnPortAdditionalInfo
object of isdnPortTable. The ifPhysaddress, already being used to
specify the calling number, cannot be used for this purpose, since both
may differ and be required in parallel.














Expires January 1996                                           [Page 11]




INTERNET-DRAFT                  ISDN MIB                       June 1995


4.  Definitions

4.1.  ISDN MIB


ISDN-MIB DEFINITIONS ::= BEGIN

IMPORTS
        MODULE-IDENTITY,
        OBJECT-TYPE,
        Counter32,
        Integer32,
        TimeTicks,
        experimental
                FROM SNMPv2-SMI
        DisplayString
                 FROM SNMPv2-TC
        MODULE-COMPLIANCE,
        OBJECT-GROUP
                FROM SNMPv2-CONF
        InterfaceIndex
                FROM IF-MIB;

isdnMib MODULE-IDENTITY
        LAST-UPDATED    "9506161200Z"
        ORGANIZATION    "IETF ISDN Working Group"
        CONTACT-INFO
                "        Guenter Roeck
                Postal:  Conware GmbH
                         Killisfeldstrasse 64
                         76227 Karlsruhe
                         Germany
                Tel:     +49 721 9495 0
                E-mail:  roeck@conware.de"
        DESCRIPTION
                "The MIB module to describe the
                 management of ISDN interfaces."
        ::= { experimental 98 }

-- The ISDN hardware interface (BRI or PRI) will be represented
-- by an entry for the D channel in the ifTable.
-- This will have an ifType value of basicISDN(20)
-- or primaryISDN(21), refer to RFC 1213.
-- Each B channel will also be represented as an entry
-- in the ifTable. The B channels will have an ifType value





Expires January 1996                                           [Page 12]




INTERNET-DRAFT                  ISDN MIB                       June 1995


-- of other(1).
-- This model will be used while defining objects and tables
-- for management.
-- The ISDN MIB will allow sub-layers. For example, the data transfer
-- over a B channel may take place with PPP encapsulation. While the
-- ISDN MIB will describe the D and B channels, a media specific MIB for
-- PPP can be used on a layered basis. This will be as per RFC 1573.

-- Isdn Mib objects definitions

isdnMibObjects OBJECT IDENTIFIER ::= { isdnMib 1 }

-- General Information

-- Editor's note:
--      The Conware MIB defines this object as "Firmware Version".
--      Netmode has another object named "isdnCtrlManufacturer",
--      which is defined for each controller.

isdnFirmwareVersion OBJECT-TYPE
            SYNTAX      DisplayString
            MAX-ACCESS  read-only
            STATUS      current
            DESCRIPTION
                    "The ISDN firmware version."
            ::= { isdnMibObjects 1 }

-- Editor's note:
--      The D channel table/group exists in several of the company MIBs.
--      Names are:
--          Netmode:    isdnCtrlTable           ISDN Controller table
--          IBM:        isdnIfTable             ISDN Interface Table
--          ACC:        accIsdnxSubTable        ISDN Subscriber Table
--
-- Since the table is supposed to describe a subscriber connection,
-- which may or may not have a D channel attached to it,
-- "isdnSubscriberGroup" seems to be a better approach.

-- ISDN subscriber group

isdnSubscriberGroup     OBJECT IDENTIFIER ::= { isdnMibObjects 2 }

-- Assumptions being made:
--      - BRI/PRI definition will be handled in ifTable, thus not
--        be required here.





Expires January 1996                                           [Page 13]




INTERNET-DRAFT                  ISDN MIB                       June 1995


-- D channel configuration table
-- There is one entry for each D channel (also called subscriber
-- connection) in this table.

isdnSubscriberTable OBJECT-TYPE
        SYNTAX SEQUENCE OF IsdnSubscriberTableEntry
        MAX-ACCESS not-accessible
        STATUS current
        DESCRIPTION
            "ISDN subscriber table containing configuration and
            operational parameters for all ISDN subscriber
            interfaces on this managed device."
        ::= { isdnSubscriberGroup 1 }

isdnSubscriberTableEntry OBJECT-TYPE
        SYNTAX IsdnSubscriberTableEntry
        MAX-ACCESS not-accessible
        STATUS current
        DESCRIPTION
            "An entry in the ISDN Subscriber Table."
        INDEX { isdnSubTblIndex }
        ::= { isdnSubscriberTable 1 }

IsdnSubscriberTableEntry ::= SEQUENCE {
        isdnSubTblIndex InterfaceIndex,
        isdnSubTblDchannelIndex InterfaceIndex,
        isdnSubTblSwitchType INTEGER,
        isdnSubTblIfAddress DisplayString,
        isdnSubTblBchannelCount Integer32,
--      isdnSubTblOperStatus Integer32,
--      isdnSubTblTei Integer32,
        isdnSubTblFlags Integer32
        }

isdnSubTblIndex OBJECT-TYPE
        SYNTAX InterfaceIndex
        MAX-ACCESS not-accessible
        STATUS current
        DESCRIPTION
            "The ifIndex of an subscriber interface
             on this managed device."
        ::= { isdnSubscriberTableEntry 1 }

isdnSubTblDchannelIndex OBJECT-TYPE
        SYNTAX InterfaceIndex





Expires January 1996                                           [Page 14]




INTERNET-DRAFT                  ISDN MIB                       June 1995


        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "The ifIndex of the D channel currently associated
             with this subscriber interface. This has usually the
             same value as isdnSubTblIndex, but may differ in case
             D channel backup (see [5], Annex F) is active or NFAS
             trunks are being used.
             Editor's note:
                Does this object have to be defined as read-write ?"
        ::= { isdnSubscriberTableEntry 2 }

--
-- Editor's note:
--   Suggestion has been made to either get IANA to support
--   switch types (as for ifType), or to define it as an
--   OBJECT IDENTIFIER, which will make it an OID
--   [Thanks to Bob Steward for the idea].
--   I will take the first approach for now.

isdnSubTblSwitchType OBJECT-TYPE
        SYNTAX INTEGER {
            other(1),
            dss1(2),            -- ITU DSS1 (formerly CCITT) Q.931
            etsi(3),            -- Europe / ETSI ETS300-102
                                -- plus supplementary services
                                -- (ETSI 300-xxx)
                                -- note that NET3, NET5 define
                                -- test procedures for ETS300-102
                                -- and are to be replaced by ICTR.
            btnr(4),            -- U.K.   / BTNR (BRI ?)
            dass2(5),           -- U.K.   / DASS2 (PRI)
            ess4(6),            -- U.S.A. / AT&T 4ESS
            ess5(7),            -- U.S.A. / AT&T 5ESS
            dms100(8),          -- U.S.A. / Northern Telecom DMS100/DMS250
            ni1(9),             -- U.S.A. / National ISDN 1 (BRI)
            ni2(10),            -- U.S.A. / National ISDN 2 (BRI, PRI)
            ni3(11),            -- U.S.A. / next one ?
            vn2(12),            -- France / VN2
            vn3(13),            -- France / VN3
            vn4(14),            -- France / VN4 (ETSI with changes)
            vn6(15),            -- France / VN6 (ETSI with changes)
                                -- delta document CSE P 10-21 A
                                -- test document  CSE P 10-20 A
            kdd(16),            -- Japan  / KDD





Expires January 1996                                           [Page 15]




INTERNET-DRAFT                  ISDN MIB                       June 1995


            ins64(17),          -- Japan  / NTT INS64
            itr6(18),           -- Germany/ 1TR6 (BRI, PRI)
            cornet(19),         -- Germany/ Siemens HiCom CORNET
            tad2(20),           -- ???    / (BRI)
            tad30(21),          -- ???    / (PRI)
            ts013(22),          -- Australia / TS013 (formerly TPH 1962, BRI)
            ts014(23),          -- Australia / TS014 (formerly TPH 1856, PRI)
            --
            -- some specifications for ISDN leased lines, as
            -- existing in Germany and eventually in the U.S.,
            -- follow.
            --
            leased64s(24),      -- 1xB (Germany)
            leasedS01(25),      -- 1xB, 1xD (Germany)
            leasedS02(26),      -- 2xB, 1xD (Germany)
            leasedH0(27),       -- 6xB
            leasedT1(28),       -- 24xB
            leasedE1(29)        -- 30xB (Germany)
        }
        MAX-ACCESS read-write
        STATUS current
        DESCRIPTION
            "The particular protocol type supported by the
            switch providing access to the ISDN network
            to which this subscriber interface is connected."
        ::= { isdnSubscriberTableEntry 3 }


isdnSubTblIfAddress OBJECT-TYPE
        SYNTAX DisplayString
        MAX-ACCESS read-write
        STATUS current
        DESCRIPTION
            "The ISDN Address to be assigned to this subscriber
             interface.  This can be an EAZ (1TR6), a calling number
             (DSS1, ETSI) or any other number necessary
             to identify a subscriber interface.
             If there is no such number defined or
             required, this is a zero length string.
             It is represented in DisplayString form.
             Editor's note:
                      This parameter can be specified on a
                      per-B-channel or per-D-channel base.
                      If specified here (e.g. on PRI interfaces,
                      also possible with EAZ or calling number





Expires January 1996                                           [Page 16]




INTERNET-DRAFT                  ISDN MIB                       June 1995


                      for BRI), all incoming calls will have to
                      be addressed to this number.
                      On the other side, calling numbers can be
                      defined on a per-B-channel base, thus
                      enabling structured access to B channels.
             "
        ::= { isdnSubscriberTableEntry 4 }

--
-- Editor's note:
--      The following information seems to be useful to describe
--      leased lines, which may be using 1xB, 1xB+D, 2xB+D
--      or 30xB in Germany. Also, the number of B channels may
--      differ for different PRI/BRI types (e.g. 24xB, 30xB).

isdnSubTblBchannelCount OBJECT-TYPE
        SYNTAX Integer32 (1..255)
        MAX-ACCESS read-write
        STATUS current
        DESCRIPTION
            "The number of B channels (bearer channels) managed
            by this subscriber interface."
        ::= { isdnSubscriberTableEntry 5 }

-- Editor's note:
--   The following object is defined (with different naming)
--   in the ACC approach only. Therefore it has to be
--   decided if it is worth keeping.
--   Note that this is also true for AdminStatus,
--   where "drain" is a newly defined interface state
--   in the ACC MIB.
--
-- isdnSubTblOperStatus OBJECT-TYPE
--         SYNTAX Integer32 {
--             inactive (1),
--             l1_active (2),
--             l2_active (3),
--             l3_active (4)
--         }
--         MAX-ACCESS read-only
--         STATUS current
--         DESCRIPTION
--             "The operational status of this subscriber interface:
--
--             inactive all layers are inactive





Expires January 1996                                           [Page 17]




INTERNET-DRAFT                  ISDN MIB                       June 1995


--             l1_active   layer 1 is activated,
--                      layer 2 datalink not established
--             l2_active        layer 1 is activated,
--                      layer 2 datalink established,
--                      no layer 3 call activity
--             l3_active   layer 1 is activated,
--                      layer 2 datalink established,
--                      layer 3 engaged in call activity
--          "
--       ::= { isdnSubscriberTableEntry 5 }

--
-- TEI assignment is defined in the IBM and ACC MIBs.
-- Editor's note:
--      This object should be included in the MIB ONLY if it
--      is _required_ in some environments. Since I did not yet get
--      any approval of this requirement, it remains undefined
--      and is subject to discussion.
--
-- isdnSubTblTei OBJECT-TYPE
--      SYNTAX Integer32 (0..127)
--      MAX-ACCESS read-write
--      STATUS current
--      DESCRIPTION
--          "The TEI (terminal endpoint identifier) when manual TEI
--           assignment is required.  Setting this value between 0 and
--           63 (inclusive) specifies manual TEI assignment using the
--           indicated value.  Setting this value to 127 (the broadcast
--           TEI) specifies automatic TEI assignment. This object is
--           writable only for BRI subscribers.  For PRI subscribers,
--           the value read is always 0."
--      ::= { isdnSubscriberTableEntry 6 }

isdnSubTblFlags OBJECT-TYPE
        SYNTAX Integer32
        MAX-ACCESS read-write
        STATUS current
        DESCRIPTION
            "Special flags for this subscriber Interface.

             The value is a sum.  Starting from zero, for each
             type of generic flag, 2 raised to a power is added
             to the sum. The powers are according to the following
             table:





Expires January 1996                                           [Page 18]




INTERNET-DRAFT                  ISDN MIB                       June 1995


             Power      Meaning
                0       1TR6 specific
                        If set, do not send the own EAZ on outgoing
                        calls.
                        This is required in 1TR6 for PABX systems
                        treating the EAZ as part of the called number
                        on outgoing calls.
            "
        ::= { isdnSubscriberTableEntry 7 }

-- Subscriber channel statistics table
-- There is one entry for each subscriber connection
-- in this table.
-- Note that the ifEntry also has some statistics information.
--
-- Editor's note:
--      There are currently a number of errors being counted here.
--      Are these counters really useful ?
--
--      In addition, there are some call related statistic
--      counters being defined.
--
--      The following MIB approaches define this (or other)
--      counters related to D channels:
--
--      ACC     accIsdnxStatTable       link related statistics
--      netmode isdnCtrlStEntry         call related statistics
--              isdnPrtTable            B channel related counters
--                                      also call related counters
--      IBM     isdnCallCntlTable       call related statistics
--
--      What do the other MIBs define:
--          netmode     number of rejects (6 counters)
--                      last failure (6 values)
--                      transmit queue size
--                      # of connections among others in port table
--          ACC         lots of Hdlc (8) and Lapd (9) counters
--                      number of calls ( 6 counters)
--          IBM         call related counters/information
--          Conware,
--          cisco       don't have a definition for this table

isdnSubscriberStatsTable OBJECT-TYPE
        SYNTAX SEQUENCE OF IsdnSubscriberStatsEntry
        MAX-ACCESS not-accessible





Expires January 1996                                           [Page 19]




INTERNET-DRAFT                  ISDN MIB                       June 1995


        STATUS current
        DESCRIPTION
            "ISDN subscriber table containing statistics
            information for all ISDN subscriber interfaces
            on this managed device.
            Only statistical information which is not being counted
            in the ifTable is being defined in this table."
        ::= { isdnSubscriberGroup 2 }

isdnSubscriberStatsEntry OBJECT-TYPE
        SYNTAX IsdnSubscriberStatsEntry
        MAX-ACCESS not-accessible
        STATUS current
        DESCRIPTION
            "An entry in the ISDN Subscriber statisctics Table"
        INDEX { isdnSubStatsIndex }
        ::= { isdnSubscriberStatsTable 1 }

IsdnSubscriberStatsEntry ::= SEQUENCE {
        isdnSubStatsIndex InterfaceIndex,
        isdnSubStatsLapdUnsolicResp Counter32,
        isdnSubStatsLapdPeerSabme Counter32,
        isdnSubStatsLapdN200Errors Counter32,
        isdnSubStatsLapdNrSeqErrors Counter32,
        isdnSubStatsLapdRecvdFrmr Counter32,
        isdnSubStatsLapdCntlErrors Counter32,
        isdnSubStatsLapdInfoErrors Counter32,
        isdnSubStatsLapdWrongSize Counter32,
        isdnSubStatsLapdN201Errors Counter32,
        isdnSubStatsInCalls Counter32,
        isdnSubStatsInConnected Counter32,      -- count rejects too ?
        isdnSubStatsOutCalls Counter32,
        isdnSubStatsOutConnected Counter32      -- count rejects too ?
                                                -- total # of charged units
        }

isdnSubStatsIndex OBJECT-TYPE
        SYNTAX InterfaceIndex
        MAX-ACCESS not-accessible
        STATUS current
        DESCRIPTION
            "The ifIndex of an ISDN BRI, DBRI, PRI/T1 or PRI/E1
            interface on this managed device."
        ::= { isdnSubscriberStatsEntry 1 }





Expires January 1996                                           [Page 20]




INTERNET-DRAFT                  ISDN MIB                       June 1995


isdnSubStatsLapdUnsolicResp OBJECT-TYPE
        SYNTAX Counter32
        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "The number of unsolicited LAPD response frames received
            on all data links associated with the D-channel of this
            ISDN interface."
        ::= { isdnSubscriberStatsEntry 2 }

isdnSubStatsLapdPeerSabme OBJECT-TYPE
        SYNTAX Counter32
        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "The number of peer SABME frames received on all data links
            associated with the D-channel of this ISDN interface."
        ::= { isdnSubscriberStatsEntry 3 }

isdnSubStatsLapdN200Errors OBJECT-TYPE
        SYNTAX Counter32
        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "The number of unsuccessful T200 timer recoveries
            after a frame has been retransmitted N200 times."
        ::= { isdnSubscriberStatsEntry 4 }

isdnSubStatsLapdNrSeqErrors OBJECT-TYPE
        SYNTAX Counter32
        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "The number of N(R) sequence errors."
        ::= { isdnSubscriberStatsEntry 5 }

isdnSubStatsLapdRecvdFrmr OBJECT-TYPE
        SYNTAX Counter32
        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "The number of LAPD FRMR response frames received."
        ::= { isdnSubscriberStatsEntry 6 }

isdnSubStatsLapdCntlErrors OBJECT-TYPE





Expires January 1996                                           [Page 21]




INTERNET-DRAFT                  ISDN MIB                       June 1995


        SYNTAX Counter32
        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "The number of LAPD frames received with an invalid
             or non-implemented control field."
        ::= { isdnSubscriberStatsEntry 7 }

isdnSubStatsLapdInfoErrors OBJECT-TYPE
        SYNTAX Counter32
        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "The number of LAPD frames received with a non-permitted
            information (I) field."
        ::= { isdnSubscriberStatsEntry 8 }

isdnSubStatsLapdWrongSize OBJECT-TYPE
        SYNTAX Counter32
        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "The number of LAPD frames received which were the
             wrong size."
        ::= { isdnSubscriberStatsEntry 9 }

isdnSubStatsLapdN201Errors OBJECT-TYPE
        SYNTAX Counter32
        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "The number of LAPD frames received which contained
             and information field which exceeded N201."
        ::= { isdnSubscriberStatsEntry 10 }

isdnSubStatsInCalls OBJECT-TYPE
        SYNTAX Counter32
        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "The number of incoming calls on this interface."
        ::= { isdnSubscriberStatsEntry 11 }

isdnSubStatsInConnected OBJECT-TYPE
        SYNTAX Counter32





Expires January 1996                                           [Page 22]




INTERNET-DRAFT                  ISDN MIB                       June 1995


        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "The number of incoming calls on this interface
             which were actually connected."
        ::= { isdnSubscriberStatsEntry 12 }

isdnSubStatsOutCalls OBJECT-TYPE
        SYNTAX Counter32
        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "The number of outgoing calls on this interface."
        ::= { isdnSubscriberStatsEntry 13 }

isdnSubStatsOutConnected OBJECT-TYPE
        SYNTAX Counter32
        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "The number of outgoing calls on this interface
             which were actually connected."
        ::= { isdnSubscriberStatsEntry 14 }


-- The B channel (bearer channel) group

-- Editor's note:
--    MIB views:
--      ACC     accIsdnxCallTable        for active calls only
--      cisco   ---
--      netmode isdnPrtTable             for all B channels
--              insdCnTable
--      conware conetIsdnPortStatusTable for all B channels
--      IBM     isdnCallCntlTable        for all B channels

--    My current approach is to define a single table for
--    additional configuration and statistical information.

isdnMibPorts    OBJECT IDENTIFIER ::= { isdnMibObjects 3 }

isdnPortTable OBJECT-TYPE
      SYNTAX      SEQUENCE OF IsdnPortEntry
      MAX-ACCESS  not-accessible
      STATUS      current





Expires January 1996                                           [Page 23]




INTERNET-DRAFT                  ISDN MIB                       June 1995


      DESCRIPTION
          "This table defines port specific control and
           statistics data for ISDN B channels."
      ::= { isdnMibPorts 1 }

isdnPortEntry OBJECT-TYPE
      SYNTAX      IsdnPortEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "Information relating to the current port.
           A port is a single B channel."
      INDEX { isdnPortSubIfIndex, isdnPortIfIndex }
      ::= { isdnPortTable 1 }

IsdnPortEntry ::=
      SEQUENCE {
        isdnPortSubIfIndex InterfaceIndex,
        isdnPortIfIndex InterfaceIndex,
        isdnPortIfAddress DisplayString,
        isdnPortAdditionalInfo DisplayString,
        isdnPortAdminStatus INTEGER,
        isdnPortOperStatus INTEGER,
        isdnPortRemoteAddress DisplayString,
        isdnPortInfoType INTEGER,
        isdnPortInfoRate INTEGER,
        isdnPortCause INTEGER,
        isdnPortCallOrigin INTEGER,
        isdnPortChargedUnits Counter32,
        isdnPortConnectionUpTime TimeTicks
      }

isdnPortSubIfIndex OBJECT-TYPE
      SYNTAX      InterfaceIndex
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "ifIndex describing the subscriber channel associated
           with this port.
           Note that this does _not_ have to be the associated
           D channel. If D channel backup is active,
           the active D channel will be described in the
           subscriber table entry."
      ::= { isdnPortEntry 1 }





Expires January 1996                                           [Page 24]




INTERNET-DRAFT                  ISDN MIB                       June 1995


isdnPortIfIndex OBJECT-TYPE
      SYNTAX      InterfaceIndex
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "Port identifier being used to identify a
           B channel. This value is identical to the
           ifIndex describing this B channel on this
           managed device."
      ::= { isdnPortEntry 2 }

isdnPortIfAddress OBJECT-TYPE
      SYNTAX      DisplayString
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
          "The ISDN address assigned to this B channel. This can be
           the EAZ (1TR6), the calling number and subaddress (DSS1)
           or any other necessary specification for other types of
           switch protocols."
      ::= { isdnPortEntry 3 }

isdnPortAdditionalInfo OBJECT-TYPE
      SYNTAX      DisplayString
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
          "Additional addressing information required to configure
           a B channel. An example for this kind of information
           is a SPID, which has to be defined in addition to the
           local number for some switch types."
      ::= { isdnPortEntry 4 }

isdnPortAdminStatus OBJECT-TYPE
      SYNTAX      INTEGER {
        normal(1),
        disconnect(2)
      }
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
          "The administratively desired state of this port.
           normal(1) will cause nothing when being set.
           disconnect(2) will disconnect an active call or abort
           any call in progress. The agent will then set the





Expires January 1996                                           [Page 25]




INTERNET-DRAFT                  ISDN MIB                       June 1995


           value of isdnPortAdminStatus back to normal(1)."
      ::= { isdnPortEntry 5 }

-- Editor's note:
--      The next object is defined in the following MIBs
--
--          Conware     conetIsdnPortOperStatus
--                      (other, reset, notConnected, connecting,
--                      connected, active)
--          IBM         isdnBChanStatus
--                      (idle, connecting, connected, notConfig)
--          ACC         accIsdnxCallState
--                      (Q.931 values)
--          netmode     isdnCnState
--                      (connecting, connected, suspending,
--                      suspended, resuming, resumed, closed)
--          cisco       --
--
--      We can either take the ifStatus values, which would be
--              down    not configured or disabled
--              up      connected/active
--              dormant not connected/idle
--
--      or define more explicit values. The Q.931 values might be
--      useful for debugging, so I included those. Otherwise, this
--      object might be discarded entirely.

isdnPortOperStatus      OBJECT-TYPE
      SYNTAX INTEGER {
          idle (1),
          initiated (2),
          overlapSend (3),
          outgoing (4),
          delivered (5),
          present (6),
          received (7),
          connecting (8),
          incoming (9),
          active (10),
          disconReq (11),
          disconInd (12),
          suspend (13),
          resume (14),
          release (15),
          overlapRecv (16)





Expires January 1996                                           [Page 26]




INTERNET-DRAFT                  ISDN MIB                       June 1995


      }
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The Q.931 call control state for this port."
      ::= { isdnPortEntry 6 }

isdnPortRemoteAddress OBJECT-TYPE
      SYNTAX      DisplayString  -- (SIZE (0..40))
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The remote ISDN address the current
           or last call is or has been connected to."
      ::= { isdnPortEntry 7 }

isdnPortCause OBJECT-TYPE
      SYNTAX      INTEGER (0..255)
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The cause value associated with the last call.
           For active calls, the value of this object will
           be zero."
      ::= { isdnPortEntry 8 }

isdnPortInfoType OBJECT-TYPE
      SYNTAX      INTEGER {
        speech(1),
        unrestrictedDigital(2),         -- as defined in [5]
        unrestrictedDigital_56(3),      -- with 56k rate adaption
        restrictedDigital(4),
        audio(5),
        video(6)
      }
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The Information Transfer Capability for the current
           or last call, as defined in [5], chapter 4.5.5,
           octet 3 of bearer capability information element,
           combined with the User Rate (as defined in octet 5
           and 5a to 5d), if rate adaption is being used."
      ::= { isdnPortEntry 9 }





Expires January 1996                                           [Page 27]




INTERNET-DRAFT                  ISDN MIB                       June 1995


isdnPortInfoRate OBJECT-TYPE
      SYNTAX      INTEGER {
        tr_64(1),
        tr_2x64(2),
        tr_384(3),
        tr_1536(4),
        tr_multirate(5)
      }
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The Information Transfer Rate for the current
           or last call, as defined in [5], chapter 4.5.5,
           octet 4 of bearer capability information element.
           For tr_multirate(5), the actual information transfer rate,
           in detail specified in octet 4.1 (rate multiplier),
           will be defined in ifSpeed for this interface."
      ::= { isdnPortEntry 10 }

isdnPortCallOrigin OBJECT-TYPE
      SYNTAX      INTEGER {
          none(1),      -- e.g. has never been connected
          outgoing(2),  -- outgoing call (TE to NT)
          incoming(3),  -- incoming call (NT to TE)
          callback(4)   -- incoming call has been called back by TE
      }
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "Flag indicating who has initiated the
           current or last connection."
      ::= { isdnPortEntry 11 }

isdnPortChargedUnits OBJECT-TYPE
      SYNTAX      Counter32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "Number of charged units for the current
           or last connection. This value will be counted
           only if charging information is being supplied
           by the network."
      ::= { isdnPortEntry 12 }

isdnPortConnectionUpTime OBJECT-TYPE





Expires January 1996                                           [Page 28]




INTERNET-DRAFT                  ISDN MIB                       June 1995


      SYNTAX      TimeTicks
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The time the current or last call has been active."
      ::= { isdnPortEntry 13 }

--
-- conformance information
--

isdnMibConformance OBJECT IDENTIFIER ::= { isdnMib 2 }
isdnMibCompliances OBJECT IDENTIFIER ::= { isdnMibConformance 1 }
isdnMibGroups      OBJECT IDENTIFIER ::= { isdnMibConformance 2 }

-- compliance statements

isdnMibCompliance MODULE-COMPLIANCE
      STATUS    current
      DESCRIPTION
                "The compliance statement for entities which implement
                the ISDN MIB"
      MODULE    -- this module
                MANDATORY-GROUPS {
                        isdnMibGeneralGroup,
                        isdnMibSubscriberGroup,
                        isdnMibPortGroup }
      ::= { isdnMibCompliances 1 }

-- units of conformance

isdnMibGeneralGroup OBJECT-GROUP
      OBJECTS {
        isdnFirmwareVersion
        }
      STATUS    current
      DESCRIPTION
        "General information relating to the ISDN interfaces on
         the managed devices."
      ::= { isdnMibGroups 1 }

isdnMibSubscriberGroup OBJECT-GROUP
      OBJECTS {
        isdnSubTblDchannelIndex,
        isdnSubTblSwitchType,





Expires January 1996                                           [Page 29]




INTERNET-DRAFT                  ISDN MIB                       June 1995


        isdnSubTblIfAddress,
        isdnSubTblBchannelCount,
--        isdnSubTblOperStatus,
        isdnSubTblFlags,
--      isdnSubTblTei,
        isdnSubStatsLapdUnsolicResp,
        isdnSubStatsLapdPeerSabme,
        isdnSubStatsLapdN200Errors,
        isdnSubStatsLapdNrSeqErrors,
        isdnSubStatsLapdRecvdFrmr,
        isdnSubStatsLapdCntlErrors,
        isdnSubStatsLapdInfoErrors,
        isdnSubStatsLapdWrongSize,
        isdnSubStatsLapdN201Errors,
        isdnSubStatsInCalls,
        isdnSubStatsInConnected,
        isdnSubStatsOutCalls,
        isdnSubStatsOutConnected
        }
      STATUS    current
      DESCRIPTION
        "A collection of objects required for ISDN subscriber
         interface configuration and statistics."
      ::= { isdnMibGroups 2 }

isdnMibPortGroup OBJECT-GROUP
      OBJECTS {
        isdnPortIfAddress,
        isdnPortAdditionalInfo,
        isdnPortAdminStatus,
        isdnPortOperStatus,
        isdnPortRemoteAddress,
        isdnPortInfoType,
        isdnPortInfoRate,
        isdnPortCause,
        isdnPortCallOrigin,
        isdnPortChargedUnits,
        isdnPortConnectionUpTime
      }
      STATUS    current
      DESCRIPTION
        "A collection of objects required for ISDN bearer channel
         interface control and statistics."
      ::= { isdnMibGroups 3 }





Expires January 1996                                           [Page 30]




INTERNET-DRAFT                  ISDN MIB                       June 1995


END


4.2.  Call Control MIB


CALL-CONTROL-MIB DEFINITIONS ::= BEGIN

IMPORTS
        MODULE-IDENTITY,
        NOTIFICATION-TYPE,
        OBJECT-TYPE,
        Counter32,
        Integer32,
        experimental
                FROM SNMPv2-SMI
        DisplayString,
        TimeStamp,
        RowStatus
                 FROM SNMPv2-TC
        MODULE-COMPLIANCE,
        OBJECT-GROUP
                FROM SNMPv2-CONF
        InterfaceIndex
                FROM IF-MIB;

callControlMib MODULE-IDENTITY
        LAST-UPDATED    "9506161200Z"
        ORGANIZATION    "IETF ISDN Working Group"
        CONTACT-INFO
                "        Guenter Roeck
                Postal:  Conware GmbH
                         Killisfeldstrasse 64
                         76227 Karlsruhe
                         Germany
                Tel:     +49 721 9495 0
                E-mail:  roeck@conware.de"
        DESCRIPTION
                "The MIB module to describe neighbors
                 for demand access and possibly other
                 kinds of interfaces."
        ::= { experimental 99 }


-- The ISDN hardware interface (BRI or PRI) will be represented





Expires January 1996                                           [Page 31]




INTERNET-DRAFT                  ISDN MIB                       June 1995


-- by the D channel. This will have an ifType value of basicISDN(20)
-- or primaryISDN(21), refer to IANAifType. Each  B channel will
-- also be represented in an entry in the ifTable. The B
-- channels will have an ifType value of other(1).
-- This model will be used while defining objects and tables
-- for management.

-- Call Control Mib objects definitions

callControlMibObjects OBJECT IDENTIFIER ::= { callControlMib 1 }

-- General configuration group

callCtlConfiguration OBJECT IDENTIFIER ::= { callControlMibObjects 1 }

-- general configuration data/parameters

callCtlAcceptMode OBJECT-TYPE
        SYNTAX INTEGER {
                acceptNone(1),
                acceptAll(2),
                acceptKnown(3)
        }
        MAX-ACCESS   read-write
        STATUS current
        DESCRIPTION
        "The security level for acceptance of incoming calls.
         accept-none(1) - incoming calls will not be accepted
         accept-all(2)  - incoming calls will be accepted,
                          even if there is no matching entry
                          in the callCtlNbrTable
         accept-known(3)- incoming calls will be accepted only
                          if there is a matching entry in the
                          callCtlNbrTable
        "
        ::= { callControlMibObjects 2 }

-- Neighbor table

callCtlNeighbor OBJECT IDENTIFIER ::= { callControlMibObjects 3 }

callCtlNbrTable  OBJECT-TYPE
        SYNTAX  SEQUENCE OF CallCtlNbrEntry
        MAX-ACCESS   not-accessible
        STATUS  current





Expires January 1996                                           [Page 32]




INTERNET-DRAFT                  ISDN MIB                       June 1995


        DESCRIPTION
        "The list of neighbors from which the managed device
         will accept calls or to which it will place them."
       ::= { callCtlNeighbor 1 }

callCtlNbrEntry  OBJECT-TYPE
        SYNTAX  CallCtlNbrEntry
        MAX-ACCESS      not-accessible
        STATUS  current
        DESCRIPTION
        "A single Neighbor. This entry is effectively permanent, and contains
        information describing the neighbor, his permissions, his last call
        attempt, and his cumulative effects."
        INDEX   { callCtlNbrId }
      ::= { callCtlNbrTable 1 }

CallCtlNbrEntry ::=
 SEQUENCE {
        callCtlNbrId            Integer32,
                                    -- sequence number
        callCtlNbrIfType        INTEGER,
        callCtlNbrPhysIf        InterfaceIndex,
                                    -- ifIndex value of D channel
        callCtlNbrLogIf         InterfaceIndex,
                                    -- ifIndex value of virtual interface
        callCtlNbrName          DisplayString,
                                    -- name of the neighbor
        callCtlNbrAddress       DisplayString,
                                    -- Call Address
        callCtlNbrInfoType      INTEGER,
                                    -- service to be used
        callCtlNbrInfoRate      INTEGER,
                                    -- information rate to be used
        callCtlNbrPermission    INTEGER,
                                    -- applicable permissions
        callCtlNbrInactivityTimer INTEGER,
                                    -- disconnect idle timer
        callCtlNbrCallRetries   INTEGER (0..2147483647),
                                    -- number of call retries
        callCtlNbrMaxDuration   INTEGER (0..2147483647),
                                    -- Max call duration in seconds
        callCtlNbrLastDuration  INTEGER (0..2147483647),
                                    -- Duration of last call
        callCtlNbrClearReason   DisplayString,
                                    -- reason last call completed





Expires January 1996                                           [Page 33]




INTERNET-DRAFT                  ISDN MIB                       June 1995


        callCtlNbrClearCode     OCTET STRING,
                                    -- reason last call completed
        callCtlNbrSuccessCalls  Counter32,
                                    -- number of completed calls to neighbor
        callCtlNbrFailCalls     Counter32,
                                    -- number of failed call attempts
        callCtlNbrAcceptCalls   Counter32,
                                    -- number of calls from neighbor accepted
        callCtlNbrRefuseCalls   Counter32,
                                    -- number of calls from neighbor refused
        callCtlNbrLastAttemptTime TimeStamp,
                                    -- sysUpTime of last call attempt
        callCtlNbrStatus         RowStatus
        }

callCtlNbrId     OBJECT-TYPE
        SYNTAX  Integer32
        MAX-ACCESS      not-accessible
        STATUS  current
        DESCRIPTION
        "arbitrary sequence number associated with the neighbor."
        ::= { callCtlNbrEntry 1 }

callCtlNbrIfType OBJECT-TYPE
        SYNTAX INTEGER {
                other(1),
                isdn(2),
                modem(3),
                leasedLine(4),
                x25(5)
        }
        MAX-ACCESS      read-create
        STATUS  current
        DESCRIPTION
        "The type of physical interface."
        DEFVAL { other }
        ::= { callCtlNbrEntry 2 }

callCtlNbrPhysIf OBJECT-TYPE
        SYNTAX  InterfaceIndex
        MAX-ACCESS      read-create
        STATUS  current
        DESCRIPTION
        "ifIndex value of the physical interface the neighbor will be
        called on. On an ISDN interface, this is the ifIndex value of





Expires January 1996                                           [Page 34]




INTERNET-DRAFT                  ISDN MIB                       June 1995


        the D channel. If the physical interface can be dynamically
        assigned, this object has a value of zero."
        DEFVAL { 0 }
        ::= { callCtlNbrEntry 3 }

callCtlNbrLogIf  OBJECT-TYPE
        SYNTAX  InterfaceIndex
        MAX-ACCESS      read-create
        STATUS  current
        DESCRIPTION
        "ifIndex value of virtual interface associated with the
         neighbor. This interface maintains a queue of messages
         holding for the neighbor awaiting call completion,
         and all statistics."
        ::= { callCtlNbrEntry 4 }

callCtlNbrName   OBJECT-TYPE
        SYNTAX  DisplayString
        MAX-ACCESS      read-create
        STATUS  current
        DESCRIPTION
        "ASCII name of the neighbor."
        ::= { callCtlNbrEntry 5 }

callCtlNbrAddress        OBJECT-TYPE
        SYNTAX  DisplayString
        MAX-ACCESS      read-create
        STATUS  current
        DESCRIPTION
        "Call Address at which the neighbor will be called.
        Think of this as the set of characters following 'ATDT '
        or the 'phone number' included in a D channel call request.
        This call address will include all switch specific
        optional information, e.g. subaddress, closed user group or
        semi-permanent connection.
        The structure of this information will have to be
        defined for each switch type."
        ::= { callCtlNbrEntry 6 }

callCtlNbrInfoType      OBJECT-TYPE
        SYNTAX INTEGER {
            speech(1),
            unrestrictedDigital(2),     -- as defined in [5]
            unrestrictedDigital_56(3),  -- with 56k rate adaption
            restrictedDigital(4),





Expires January 1996                                           [Page 35]




INTERNET-DRAFT                  ISDN MIB                       June 1995


            audio(5),
            video(6)
        }
        MAX-ACCESS      read-create
        STATUS  current
        DESCRIPTION
          "The Information Transfer Capability for this neighbor,
           as defined in [5], chapter 4.5.5, octet 3
           of bearer capability information element,
           combined with the User Rate (as defined in octet 5
           and 5a to 5d), if rate adaption is being used.
           This information is required for ISDN circuits."
        ::= { callCtlNbrEntry 7 }

callCtlNbrInfoRate OBJECT-TYPE
      SYNTAX      INTEGER (0..2048)
      MAX-ACCESS  read-create
      STATUS      current
      DESCRIPTION
          "The Information Transfer Rate to be used for this neighbor,
           as defined in [5], chapter 4.5.5,
           octet 4 and 4.1 of bearer capability information element.
           The information transfer rate being specified has to be
           a multiple of 64, defining the rate to be used in kbit/s.
           If the information rate to be used is unknown or 64kBit/s,
           the value of this object may be zero."
      DEFVAL { 0 }
      ::= { callCtlNbrEntry 8 }

callCtlNbrPermission     OBJECT-TYPE
        SYNTAX  INTEGER {       outgoing (1),
                                incoming (2),
                                both (3), -- both outgoing & incoming
                                callback(4)
                        }
        MAX-ACCESS      read-create
        STATUS  current
        DESCRIPTION
        "Applicable permissions. callback(4) either rejects the
         call and then calls back, or uses the 'Advice of Charge'
         supplementary service if it is available."
        DEFVAL { both }
        ::= { callCtlNbrEntry 9 }

callCtlNbrInactivityTimer    OBJECT-TYPE





Expires January 1996                                           [Page 36]




INTERNET-DRAFT                  ISDN MIB                       June 1995


        SYNTAX  INTEGER (0..2147483647)
        UNITS   "seconds"
        MAX-ACCESS      read-create
        STATUS  current
        DESCRIPTION
        "The connection will be automatically disconnected
         if no longer carrying useful data for a time
         period, in seconds, specified in this object.
         Useful data in this context refers to forwarding
         packets, including routing information; it
         excludes the encapsulator maintenance frames.
         A value of zero means the connection will not be
         automatically taken down due to inactivity,
         which implies that it is a dedicated circuit."
        DEFVAL { 0 }
        ::= { callCtlNbrEntry 10 }

-- Editor's note:
--      We might also add an object to define a maximum retry
--      period (in seconds) in addition to the following object.
--      [as defined in the IBM MIB]

callCtlNbrCallRetries    OBJECT-TYPE
        SYNTAX  INTEGER (0..2147483647)
        MAX-ACCESS      read-create
        STATUS  current
        DESCRIPTION
         "The number of calls to a non-responding address
          that may be made. A retry count of zero means
          there is no bound. The intent is to bound
          the number of successive calls to an address
          which is inaccessible, or which refuses those calls."
        DEFVAL { 0 }
        ::= { callCtlNbrEntry 11 }

callCtlNbrMaxDuration    OBJECT-TYPE
        SYNTAX  INTEGER (0..2147483647)
        MAX-ACCESS      read-create
        STATUS  current
        DESCRIPTION
        "Maximum call duration in seconds. Zero means 'unlimited'."
        DEFVAL { 0 }
        ::= { callCtlNbrEntry 12 }

callCtlNbrLastDuration   OBJECT-TYPE





Expires January 1996                                           [Page 37]




INTERNET-DRAFT                  ISDN MIB                       June 1995


        SYNTAX  INTEGER (0..2147483647)
        MAX-ACCESS      read-only
        STATUS  current
        DESCRIPTION
        "Duration of last call in seconds."
        ::= { callCtlNbrEntry 13 }

callCtlNbrClearReason    OBJECT-TYPE
        SYNTAX  DisplayString
        MAX-ACCESS      read-only
        STATUS  current
        DESCRIPTION
        "ASCII reason that the last call terminated."
        ::= { callCtlNbrEntry 14 }

callCtlNbrClearCode      OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS      read-only
        STATUS  current
        DESCRIPTION
        "encoded reason last call completed."
        ::= { callCtlNbrEntry 15 }

callCtlNbrSuccessCalls   OBJECT-TYPE
        SYNTAX  Counter32
        MAX-ACCESS      read-only
        STATUS  current
        DESCRIPTION
        "number of completed calls to neighbor since system reset."
        ::= { callCtlNbrEntry 16 }

callCtlNbrFailCalls      OBJECT-TYPE
        SYNTAX  Counter32
        MAX-ACCESS      read-only
        STATUS  current
        DESCRIPTION
        "number of failed call attempts to neighbor since system reset."
        ::= { callCtlNbrEntry 17 }

callCtlNbrAcceptCalls    OBJECT-TYPE
        SYNTAX  Counter32
        MAX-ACCESS      read-only
        STATUS  current
        DESCRIPTION
        "number of calls from neighbor accepted since system reset."





Expires January 1996                                           [Page 38]




INTERNET-DRAFT                  ISDN MIB                       June 1995


        ::= { callCtlNbrEntry 18 }

callCtlNbrRefuseCalls    OBJECT-TYPE
        SYNTAX  Counter32
        MAX-ACCESS      read-only
        STATUS  current
        DESCRIPTION
        "number of calls from neighbor refused since system reset."
        ::= { callCtlNbrEntry 19 }

callCtlNbrLastAttemptTime        OBJECT-TYPE
        SYNTAX  TimeStamp
        MAX-ACCESS      read-only
        STATUS  current
        DESCRIPTION
        "sysUpTime of last call attempt."
        ::= { callCtlNbrEntry 20 }

callCtlNbrStatus OBJECT-TYPE
        SYNTAX  RowStatus
        MAX-ACCESS      read-create
        STATUS  current
        DESCRIPTION
        "Status of one row in this table."
        ::= { callCtlNbrEntry 21 }

-- Traps related to Connection management

callControlMibTrapPrefix OBJECT IDENTIFIER ::= { callControlMib 3 }
callControlMibTraps OBJECT IDENTIFIER ::= { callControlMibTrapPrefix 0 }

callCtlNbrCallInformation NOTIFICATION-TYPE
        OBJECTS {
                callCtlNbrLogIf,
                callCtlNbrName,
                callCtlNbrAddress,
                callCtlNbrLastDuration,
                callCtlNbrClearReason,
                callCtlNbrClearCode
        }
        STATUS  current
        DESCRIPTION
        "This trap/inform is sent to the manager whenever
         a successful call clears, or a failed call attempt
         is determined to have ultimately failed. In the





Expires January 1996                                           [Page 39]




INTERNET-DRAFT                  ISDN MIB                       June 1995


         event that call retry is active, then this is after
         all retry attempts have failed. However, only one such
         trap is sent in between successful call attempts;
         subsequent call attempts result in no trap."
     ::= { callControlMibTraps 1 }

-- conformance information

callControlMibConformance OBJECT IDENTIFIER ::=
                                { callControlMib 4 }
callControlMibCompliances OBJECT IDENTIFIER ::=
                                { callControlMibConformance 1 }
callControlMibGroups      OBJECT IDENTIFIER ::=
                                { callControlMibConformance 2 }

-- compliance statements

callControlMibCompliance MODULE-COMPLIANCE
      STATUS    current
      DESCRIPTION
                "The compliance statement for entities which
                 implement the CALL CONTROL MIB"
      MODULE    -- this module
                MANDATORY-GROUPS { callControlMibGroup }
      ::= { callControlMibCompliances 1 }

-- units of conformance

callControlMibGroup OBJECT-GROUP
      OBJECTS {
        callCtlAcceptMode,
        callCtlNbrIfType,
        callCtlNbrPhysIf,
        callCtlNbrLogIf,
        callCtlNbrName,
        callCtlNbrAddress,
        callCtlNbrInfoType,
        callCtlNbrInfoRate,
        callCtlNbrPermission,
        callCtlNbrInactivityTimer,
        callCtlNbrCallRetries,
        callCtlNbrMaxDuration,
        callCtlNbrLastDuration,
        callCtlNbrClearReason,
        callCtlNbrClearCode,





Expires January 1996                                           [Page 40]




INTERNET-DRAFT                  ISDN MIB                       June 1995


        callCtlNbrSuccessCalls,
        callCtlNbrFailCalls,
        callCtlNbrAcceptCalls,
        callCtlNbrRefuseCalls,
        callCtlNbrLastAttemptTime,
        callCtlNbrStatus
        }
      STATUS    current
      DESCRIPTION
        "A collection of objects providing the CALL CONTROL MIB
         capability."
      ::= { callControlMibGroups 1 }

END


4.3.  Call History MIB


CALL-HISTORY-MIB DEFINITIONS ::= BEGIN

IMPORTS
        MODULE-IDENTITY,
        OBJECT-TYPE,
        Integer32,
        experimental
                FROM SNMPv2-SMI
        DisplayString,
        TimeStamp
                FROM SNMPv2-TC
        MODULE-COMPLIANCE,
        OBJECT-GROUP
                FROM SNMPv2-CONF
        InterfaceIndex
                FROM IF-MIB;

callHistoryMib MODULE-IDENTITY
        LAST-UPDATED    "9506121200Z"
        ORGANIZATION    "IETF ISDN Working Group"
        CONTACT-INFO
                "        Guenter Roeck
                Postal:  Conware GmbH
                         Killisfeldstrasse 64
                         76227 Karlsruhe
                         Germany





Expires January 1996                                           [Page 41]




INTERNET-DRAFT                  ISDN MIB                       June 1995


                Tel:     +49 721 9495 0
                E-mail:  roeck@conware.de"
        DESCRIPTION
                "The MIB module to describe and store the call
                 information of the managed device for
                 accounting purposes."
        ::= { experimental 97 }

-- This MIB describes the objects defined  and used for storing the
-- call information for all calls.

-- Call History Mib objects definitions

callHistoryMibObjects OBJECT IDENTIFIER ::= { callHistoryMib 1 }
callHistory OBJECT IDENTIFIER ::= { callHistoryMibObjects 1 }

callHistoryTableMaxLength OBJECT-TYPE
        SYNTAX          INTEGER (0..10000)
        MAX-ACCESS      read-write
        STATUS          current
        DESCRIPTION
               "The upper limit on the number of entries that the
                callHistoryTable may contain.  A value of 0
                will prevent any history from being retained. When
                this table is full, the oldest entry will be deleted
                and the new one will be created."
        ::= { callHistory 1 }

callHistoryRetainTimer  OBJECT-TYPE
        SYNTAX  INTEGER (0..10080)      -- one week
        UNITS   "minutes"
        MAX-ACCESS      read-write
        STATUS  current
        DESCRIPTION
                "The minimum amount of time that an callHistoryEntry
                will be maintained before being deleted.  A value of
                0 will prevent any history from being retained, but
                will not prevent callCompletion traps being generated."
        ::= { callHistory 2 }

-- callHistoryTable
-- Table to store the past call information. The Destination number
-- and the call connect and disconnect time, the disconnection cause
-- are stored. These calls could be circuit switched or they could
-- be virtual circuits. History of each and every call is stored.





Expires January 1996                                           [Page 42]




INTERNET-DRAFT                  ISDN MIB                       June 1995


-- An entry will be created when a call gets connected. At the time
-- of creation, the entry will contain the connect time only.
-- The disconnect time will be added when the call gets cleared.
-- disconnect time."

callHistoryTable  OBJECT-TYPE
        SYNTAX   SEQUENCE OF CallHistoryEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
              "A table containing information about specific
               calls to a specific destination."
        ::= { callHistory 3 }

callHistoryEntry OBJECT-TYPE
        SYNTAX   CallHistoryEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
              "The information regarding a single Connection."
        INDEX {  callHistoryStartTime, callHistoryIndex }
        ::= { callHistoryTable 1 }


CallHistoryEntry ::=
        SEQUENCE {
            callHistoryStartTime                 TimeStamp,
            callHistoryIndex                     Integer32,
            callHistoryCallingNumber             OCTET STRING,
            callHistoryCalledNumber              OCTET STRING,
            callHistoryInterfaceNumber           InterfaceIndex,
            callHistoryDestinationAddress        OCTET STRING,
            callHistoryDestinationHostName       DisplayString,
            callHistoryCallDisconnectCause       INTEGER,
            callHistoryCallConnectTime           TimeStamp,
            callHistoryCallDisconnectTime        TimeStamp,
            callHistoryCallOrigin                INTEGER,
            callHistoryChargedUnits              Integer32
          }

callHistoryStartTime OBJECT-TYPE
        SYNTAX   TimeStamp
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION





Expires January 1996                                           [Page 43]




INTERNET-DRAFT                  ISDN MIB                       June 1995


             "The value of sysUpTime when this call history entry was
              created. This will be useful for an NMS to retrieve all
              calls after a specific time."
        ::= { callHistoryEntry 1 }

callHistoryIndex   OBJECT-TYPE
        SYNTAX  Integer32
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
            "Index variable to access the CallHistoryEntry objects
             of the callHistoryTable."
        ::= { callHistoryEntry 2 }

callHistoryCallingNumber    OBJECT-TYPE
        SYNTAX   OCTET STRING
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
             "The calling number for this call. If the number is
              not available, then it will have a length of zero."
        ::= { callHistoryEntry 3 }

callHistoryCalledNumber    OBJECT-TYPE
        SYNTAX   OCTET STRING
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
             "The number this call is connected to."
        ::= { callHistoryEntry 4 }

callHistoryInterfaceNumber    OBJECT-TYPE
        SYNTAX   InterfaceIndex
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
            "This is the ifIndex value of the highest number
             of interface through which the call was made."
        ::= { callHistoryEntry 5 }

callHistoryDestinationAddress   OBJECT-TYPE
        SYNTAX   OCTET STRING
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION





Expires January 1996                                           [Page 44]




INTERNET-DRAFT                  ISDN MIB                       June 1995


             "The address of the host this call is
              connected to. Most devices/routers connected to
              an interface have an address and this object will
              store that address."
        ::= { callHistoryEntry 6 }

callHistoryDestinationHostName   OBJECT-TYPE
        SYNTAX   DisplayString
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
             "The name of the host this call is
              connected to. Most devices/routers connected to
              an interface have a name and this object will
              store that name."
        ::= { callHistoryEntry 7 }

callHistoryCallDisconnectCause   OBJECT-TYPE
        SYNTAX   INTEGER (0..255)
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
             "The network cause value associated with this call."
        ::= { callHistoryEntry 8 }

callHistoryCallConnectTime OBJECT-TYPE
        SYNTAX   TimeStamp
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
             "The value of sysUpTime when the call was connected.
              [Editor's note:
                Can we use the time since 01:01:70 here ?]
             "
        ::= { callHistoryEntry 9 }

callHistoryCallDisconnectTime OBJECT-TYPE
        SYNTAX   TimeStamp
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
              "The value of sysUpTime when the call got disconnected.
               For active calls, the value of this object will be zero."
        ::= { callHistoryEntry 10 }





Expires January 1996                                           [Page 45]




INTERNET-DRAFT                  ISDN MIB                       June 1995


callHistoryCallOrigin OBJECT-TYPE
        SYNTAX   INTEGER {
                outgoing(1),
                incoming(2),
                callback(3)
        }
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
              "The call origin."
        ::= { callHistoryEntry 11 }

callHistoryChargedUnits OBJECT-TYPE
        SYNTAX   Integer32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The number of charged units for this connection.
            For incoming calls or if charging information is
            not supported by the switch, the value of this object
            will be zero."
        ::= { callHistoryEntry 12 }

-- conformance information

callHistoryMibConformance  OBJECT IDENTIFIER ::= { callHistoryMib 3 }
callHistoryMibCompliances  OBJECT IDENTIFIER ::= { callHistoryMibConformance 1 }
callHistoryMibGroups    OBJECT IDENTIFIER ::= { callHistoryMibConformance 2 }

-- compliance statements

callHistoryMibCompliance MODULE-COMPLIANCE
      STATUS    current
      DESCRIPTION
                "The compliance statement for entities which implement
                the call History MIB"
      MODULE    -- this module
                MANDATORY-GROUPS { callHistoryMibGroup }
      ::= { callHistoryMibCompliances 1 }

-- units of conformance

callHistoryMibGroup OBJECT-GROUP
      OBJECTS {
          callHistoryTableMaxLength,





Expires January 1996                                           [Page 46]




INTERNET-DRAFT                  ISDN MIB                       June 1995


          callHistoryRetainTimer,
          callHistoryCallingNumber,
          callHistoryCalledNumber,
          callHistoryInterfaceNumber,
          callHistoryDestinationAddress,
          callHistoryDestinationHostName,
          callHistoryCallDisconnectCause,
          callHistoryCallConnectTime,
          callHistoryCallDisconnectTime,
          callHistoryCallOrigin,
          callHistoryChargedUnits
        }
      STATUS    current
      DESCRIPTION
        "A collection of objects providing the call History MIB capability."
      ::= { callHistoryMibGroups 1 }

END































Expires January 1996                                           [Page 47]




INTERNET-DRAFT                  ISDN MIB                       June 1995


5.  Acknowledgements

This document was produced by the ISDN MIB Working Group.  Special
thanks is due to all the people and companies supplying enterprise-
specific MIB modules. Special thanks is also due to Fred Baker, for
helping with details concerning MIB design, and to Randy Roberts and
Kedar Madineni, who supplied a lot of helpful information concerning
switch types and other ISDN related information.









































Expires January 1996                                           [Page 48]




INTERNET-DRAFT                  ISDN MIB                       June 1995


6.  References

[1]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Structure
     of Management Information for version 2 of the Simple Network
     Management Protocol (SNMPv2)", RFC 1442, SNMP Research,Inc., Hughes
     LAN Systems, Dover Beach Consulting, Inc., Carnegie Mellon
     University, April 1993.

[2]  McCloghrie, K., and M. Rose, Editors, "Management Information Base
     for Network Management of TCP/IP-based internets: MIB-II", STD 17,
     RFC 1213, Hughes LAN Systems, Performance Systems International,
     March 1991.

[3]  Galvin, J., and K. McCloghrie, "Administrative Model for version 2
     of the Simple Network Management Protocol (SNMPv2)", RFC 1445,
     Trusted Information Systems, Hughes LAN Systems, April 1993.

[4]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Protocol
     Operations for version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1448, SNMP Research,Inc., Hughes LAN Systems, Dover
     Beach Consulting, Inc., Carnegie Mellon University, April 1993.

[5]  ITU-T Recommendation "Digital subscriber Signalling System No. 1
     (DSS 1) - ISDN user-network interface layer 3 specification for
     basic call control", Rec. Q.931(I.451), March 1993

[6]  ITU-T Recommendation "Generic procedures for the control of ISDN
     supplementary services ISDN user-network interface layer 3
     specification", Rec. Q.932(I.452)

[7]  ITU-T Recommendation "Digital subscriber Signalling System No. 1
     (DSS 1) - Signalling specification for frame-mode basic call
     control", Rec. Q.933
















Expires January 1996                                           [Page 49]




INTERNET-DRAFT                  ISDN MIB                       June 1995


7.  Security Considerations

Security issues are not discussed in this memo.


8.  Author's Address

     Guenter Roeck
     Conware GmbH
     Killisfeldstrasse 64
     76137 Karlsruhe, Germany

     Phone: (49) 721 9495-0
     Email: roeck@conware.de



































Expires January 1996                                           [Page 50]




INTERNET-DRAFT                  ISDN MIB                       June 1995


Table of Contents


1 Introduction ....................................................    2
2 The SNMPv2 Network Management Framework .........................    3
2.1 Object Definitions ............................................    3
3 Overview ........................................................    4
3.1 Structure of MIB ..............................................    4
3.1.1 The ISDN MIB ................................................    4
3.1.2 The call control MIB ........................................    4
3.1.3 The call history MIB ........................................    5
3.2 Relationship to RFC1573 .......................................    5
3.2.1 Layering Model and Virtual Circuits .........................    5
3.2.2 ifTestTable .................................................    6
3.2.3 ifRcvAddressTable ...........................................    6
3.2.3.1 ifEntry for a D channel ...................................    7
3.2.3.2 ifEntry for a B channel ...................................    8
3.3 ISDN interface specific information ...........................   10
3.3.1 ISDN leased lines ...........................................   10
3.3.2 Hyperchannels ...............................................   10
3.3.3 D channel backup and NFAS trunks ............................   10
3.3.4 X.25 data transfer in D channel .............................   11
3.3.5 SPID handling ...............................................   11
4 Definitions .....................................................   12
4.1 ISDN MIB ......................................................   12
4.2 Call Control MIB ..............................................   31
4.3 Call History MIB ..............................................   41
5 Acknowledgements ................................................   48
6 References ......................................................   49
7 Security Considerations .........................................   50
8 Author's Address ................................................   50


















Expires January 1996                                           [Page 51]
