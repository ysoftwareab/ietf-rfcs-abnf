



Network Working Group                             Stephen Kent, BBN Corp
Internet Draft                           Randall Atkinson, @Home Network
draft-ietf-ipsec-new-auth-00.txt                           26 March 1997





                        IP Authentication Header




Status of This Memo

   This document is an Internet Draft. Internet Drafts are working
   documents of the Internet Engineering Task Force (IETF), its Areas,
   and its Working Groups. Note that other groups may also distribute
   working documents as Internet Drafts.

   Internet Drafts are draft documents valid for a maximum of 6 months.
   Internet Drafts may be updated, replaced, or obsoleted by other
   documents at any time. It is not appropriate to use Internet Drafts
   as reference material or to cite them other than as a "working draft"
   or "work in progress". Please check the I-D abstract listing
   contained in each Internet Draft directory to learn the current
   status of this or any other Internet Draft.

   This particular Internet Draft is a product of the IETF's IPng and
   IPsec Working Groups. It is intended that a future version of this
   draft will be submitted for consideration as a standards-track
   document.  Distribution of this document is unlimited.























Kent, Atkinson                                                  [Page 1]



Internet Draft          IP Authentication Header           26 March 1997


Table of Contents

   1. Introduction......................................................3
   2. Authentication Header Format......................................4
      2.1 Next Header...................................................4
      2.2 Payload Length................................................4
      2.3 Reserved......................................................4
      2.4 Security Parameters Index (SPI)...............................5
      2.5 Sequence Number...............................................5
      2.6 Authentication Data ..........................................5
   3. Authentication Header Processing..................................5
      3.1  Authentication Header Location...............................5
      3.2  Outbound Packet Processing...................................8
         3.2.1  Security Association Lookup.............................8
         3.2.2  Sequence Number Field...................................8
         3.2.3  Integrity Check Value Calculation.......................8
            3.2.3.1  Handling Mutable Fields............................8
               3.2.3.1.1  ICV Computation for IPv4......................9
               3.2.3.1.2  ICV Computation for IPv6......................9
            3.2.3.2  Padding...........................................10
               3.2.3.2.1  Authentication Data Padding..................10
               3.2.3.2.2  Implicit Packet Padding......................10
            3.2.3.3  Authentication Algorithms.........................10
         3.2.4  Fragmentation..........................................11
      3.3  Inbound Packet Processing...................................11
         3.3.1  Reassembly.............................................11
         3.3.2  Security Association Lookup............................11
         3.3.3  Sequence Number Verification...........................11
         3.3.4  Integrity Check Value Verification.....................12
   4. Conformance Requirements.........................................13
   5. Security Considerations..........................................13
   Acknowledgements....................................................13
   References..........................................................14
   Disclaimer..........................................................15
   Author Information..................................................15















Kent, Atkinson                                                  [Page 2]






Internet Draft          IP Authentication Header           26 March 1997


1. Introduction

   The IP Authentication Header (AH) is used to provide connectionless
   integrity and data origin authentication for IP datagrams (hereafter
   referred to as just "authentication"), and to provide protection
   against replays.  This latter, optional service may be selected when
   a Security Association is established.  AH provides authentication
   for as much of the IP header as possible, as well as for upper level
   protocol data.  However, some IP header fields may change in transit
   and the value of these fields, when the packet arrives at the
   receiver, may not be predictable by the transmitter.  The values of
   such fields cannot be protected by AH.  Thus the protection provided
   to the IP header by AH is somewhat piecemeal.

   AH may be applied alone, in combination with the IP Encapsulating
   Security Payload (ESP) [KA97b], or in a nested fashion through the
   use of tunnel mode (see below).  Security services can be provided
   between a pair of communicating hosts, between a pair of
   communicating security gateways, or between a security gateway and a
   host.  ESP may be used to provide the same security services, and it
   also provides an optional confidentiality (encryption) service.  The
   primary difference between ESP and AH, when used for authentication,
   is the extent of the coverage.  Specifically, ESP does not protect
   any IP header fields unless those fields are encapsulated by ESP.
   For more details on how to use AH and ESP in various network
   environments, see "Security Architecture for the Internet Protocol"
   [KA97a].

   It is assumed that the reader is familiar with the terms and concepts
   described in the document "Security Architecture for the Internet
   Protocol" [KA97a].  In particular, the reader should be familiar with
   the definitions of security services offered by AH (and by ESP), the
   concept of Security Associations, the different key management
   options available for AH (and ESP), and the ways in which AH can be
   used in conjunction with ESP.















Kent, Atkinson                                                  [Page 3]






Internet Draft          IP Authentication Header           26 March 1997


2.  Authentication Header Format

   +---------------+---------------+---------------+---------------+
   | Next Header(8)| Payload Len(8)|        RESERVED (16)          |
   +---------------+---------------+---------------+---------------+
   |                 Security Parameters Index (32)                |
   +---------------+---------------+---------------+---------------+
   |                   Sequence Number Field (32)                  |
   +---------------+---------------+---------------+---------------+
   |                                                               |
   +     Authentication Data (variable number of 32-bit words)     |
   |                                                               |
   +---------------+---------------+---------------+---------------+
    1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8


   The following subsections define the fields that comprise the AH
   format.  "Optional" means that the field is omitted if the option is
   not selected, i.e., it is present in neither the packet as
   transmitted nor as formatted for computation of the Integrity Check
   Value (ICV).  Whether or not an option is selected is defined as part
   of the Security Association.  In contrast, "mandatory" fields are
   always present in the AH format.

2.1 Next Header

   The Next Header is an 8-bit field that identifies the type of the
   next payload after the Authentication Header.  The value of this
   field is chosen from the set of IP Protocol Numbers defined in the
   most recent "Assigned Numbers" [STD-2] RFC from the Internet Assigned
   Numbers Authority (IANA). The Next Header field is mandatory.

2.2 Payload Length

   This 8-bit field specifies the length of AH, in 32-bit words (4-byte
   units), minus "2," i.e., the fixed portion of AH is not counted.  The
   minimum value is 0, which is used only in the degenerate case of a
   "null" authentication algorithm. The Payload Length field is
   mandatory.

   *** Do we want to retain a null authentication algorithm as part of the
   *** spec at this point? What purpose does it serve?

2.3 Reserved

   This 16-bit field is reserved for future use.  It MUST be set to
   "zero." (Note that the value is included in the Authentication Data
   calculation, but is otherwise ignored by the recipient.)  The


Kent, Atkinson                                                  [Page 4]






Internet Draft          IP Authentication Header           26 March 1997


   Reserved field is mandatory.

2.4 Security Parameters Index (SPI)

   The SPI is an arbitrary 32-bit value identifying the Security
   Association for this datagram (relative to the destination IP address
   contained in the IP header with which this security header is
   associated).  The set of SPI values in the range 1 through 255 are
   reserved by the Internet Assigned Numbers Authority (IANA) for future
   use; a reserved SPI value will not normally be assigned by IANA
   unless the use of the assigned SPI value is specified in an RFC.  A
   value of zero indicates that no Security Association exists.  The SPI
   field is mandatory.  It is ordinarily selected by the destination
   system upon establishment of an SA (see "Security Architecture for
   the Internet Protocol" [KA97a] for more details).

   *** Under what circumstances will a zero SPI be employed?  Is this
   *** still relevant or is it vestigial?

2.5 Sequence Number

   This unsigned 32-bit field contains a monotonically increasing
   counter value (sequence number).  The counter is initialized to 1
   when an SA is established.  The sequence number must never be allowed
   to cycle; thus, it MUST be reset (by establishing a new SA and thus a
   new key) prior to the transmission of 2^32-1 packets on an SA.  The
   Sequence Number field is optional.  It is included only if the anti-
   replay service (a form of loose sequence integrity) is selected as a
   security service for the SA.

2.6 Authentication Data

   This is a variable-length field that contains the Integrity Check
   Value (ICV) for this packet.  The field must be an integral multiple
   of 32 bits in length.  The details of the ICV computation are
   described in Section 3.2.3 below.  This field may include explicit
   padding.  This padding is included to ensure that the length of the
   AH header is an integral multiple of 32 bits (IPv4) or 64 bits
   (IPv6).  All implementations MUST support such padding.  Details of
   how to compute the required padding length are provided in Section
   3.2.3.2.1 below.  The Authentication Data field is mandatory.

3. Authentication Header Processing

3.1 Authentication Header Location

   Like ESP, AH may be employed in two ways: transport mode or tunnel
   mode.  The former mode is applicable only to host implementations and


Kent, Atkinson                                                  [Page 5]






Internet Draft          IP Authentication Header           26 March 1997


   provides protection for upper layer protocols, in addition to
   selected IP header fields.  In this mode, AH is inserted after the IP
   header and before an upper layer protocol, e.g., TCP, UDP, ICMP, etc.
   In the context of IPv4, this calls for placing AH after the IP header
   (and any options that it contains), but before the upper layer
   protocol.  (Note that the term "transport" mode should not be
   misconstrued as restricting its use to TCP and UDP. For example, an
   ICMP message MAY be sent using either "transport" mode or "tunnel"
   mode.)  The following diagram illustrates AH transport mode
   positioning for a typical IPv4 packet, on a "before and after" basis.

                  BEFORE APPLYING AH
            ----------------------------
      IPv4  |orig IP hdr  |     |      |
            |(any options)| TCP | Data |
            ----------------------------


                  AFTER APPLYING AH
            ---------------------------------
      IPv4  |orig IP hdr  |    |     |      |
            |(any options)| AH | TCP | Data |
            ---------------------------------
            |<------ authenticated  ------->|
                 except for mutable fields

   In the IPv6 context, AH is viewed as an end-to-end payload, and thus
   should appear after hop-by-hop, routing, and fragmentation extension
   headers.  The destination options extension header(s) could appear
   either before or after the AH header depending on the semantics
   desired.  The following diagram illustrates AH transport mode
   positioning for a typical IPv6 packet.


















Kent, Atkinson                                                  [Page 6]






Internet Draft          IP Authentication Header           26 March 1997


                       BEFORE APPLYING AH
            ---------------------------------------
      IPv6  |             | ext hdrs |     |      |
            | orig IP hdr |if present| TCP | Data |
            ---------------------------------------

                               AFTER APPLYING AH
            ------------------------------------------------------------
      IPv6  |             |hxh,rtg,frag| dest |    | dest |     |      |
            |orig IP hdr  |if present**| opt* | AH | opt* | TCP | Data |
            ------------------------------------------------------------
            |<-------------------- authenticated --------------------->|
                             except for mutable fields

                * = if present, could be before AH, after AH, or both
               ** = hop by hop, routing, fragmentation headers

   Tunnel mode AH may be employed in either hosts or security gateways.
   When AH is implemented in a security gateway (to protect subscriber
   transit traffic), tunnel mode must be used.  In tunnel mode, the
   "inner" IP header carries the ultimate source and destination
   addresses, while an "outer" IP header may contain distinct IP
   addresses, e.g., addresses of security gateways.  In tunnel mode, AH
   protects the entire inner IP packet, including the entire inner IP
   header. The position of AH in tunnel mode, relative to the outer IP
   header, is the same as for AH in transport mode.    The following
   diagram illustrates AH tunnel mode positioning for typical IPv4 and
   IPv6 packets.

            ------------------------------------------------
      IPv4  | new IP hdr* |    | orig IP hdr*  |    |      |
            |(any options)| AH | (any options) |TCP | Data |
            ------------------------------------------------
            |<---------------- authenticated ------------->|
                        except for mutable fields

            --------------------------------------------------------------
      IPv6  |           | ext hdrs*|    |            | ext hdrs*|   |    |
            |new IP hdr*|if present| AH |orig IP hdr*|if present|TCP|Data|
            --------------------------------------------------------------
            |<---------------------- authenticated --------------------->|
                              except for mutable fields

                  * = construction of outer IP hdr/extensions and
                      modification of inner IP hdr/extensions is
                      discussed below.




Kent, Atkinson                                                  [Page 7]






Internet Draft          IP Authentication Header           26 March 1997


3.2  Outbound Packet Processing

   In transport mode, the transmitter inserts the AH header after the IP
   header and before an upper layer protocol header, as described above.
   In tunnel mode, the outer and inner IP header/extensions can be
   inter-related in a variety of ways.  The construction of the outer IP
   header/extensions during the encapsulation process is described in
   the document, "Security Architecture for the Internet Protocol".

3.2.1  Security Association Lookup

   AH is applied to an outbound packet only after an IPsec
   implementation determines that the packet is associated with an SA
   that calls for AH processing.  The process of determining what, if
   any, IPsec processing is applied to outbound traffic is described in
   the document, "Security Architecture for the Internet Protocol".

3.2.2  Sequence Number Field

   If the anti-replay service has been selected for this SA, the
   transmitter increments the sequence number for this SA, checks to
   ensure that the counter has not cycled, and inserts the new value
   into the Sequence Number Field.  A transmitter MUST not send a packet
   on an SA if doing so would cause the sequence number to cycle.

3.2.3  Integrity Check Value Calculation

3.2.3.1  Handling Mutable Fields

   The AH ICV is computed over IP header fields that are either
   immutable in transit or that are predictable in value upon arrival at
   the endpoint for the AH SA.  The ICV also encompasses the upper level
   protocol data, which is assumed to be immutable in transit.  If a
   field is modified during transit, the value of the field is set to
   zero for purposes of the ICV computation.  If a field is mutable, but
   its value at the (IPsec) receiver is predictable, then that value is
   inserted into the field for purposes of the ICV calculation.  The
   Authentication Data field also is set to zero in preparation for this
   computation.  (Note that by replacing each field's value with zero,
   rather than omitting the field, alignment is preserved for the ICV
   calculation.)

   DISCUSSION:

      For IPv4 (unlike IPv6), there is no mechanism for tagging options
      as mutable in transit.  Hence the IPv4 options are explicitly
      listed here and classified as either mutable or immutable.  For
      IPv4, the entire option is viewed as a unit; so even though the


Kent, Atkinson                                                  [Page 8]






Internet Draft          IP Authentication Header           26 March 1997


      type and length fields within most options are immutable in
      transit, if an option is classified as mutable, the entire option
      is zeroed for ICV computation purposes.  The mutable IPv4 header
      fields also are enumerated below.  The ICV calculation is
      restricted to the immutable options and (base) header fields.


3.2.3.1.1  ICV Computation for IPv4

   The IPv4 base header fields "Time to Live", "Header Checksum",
   "Offset", "Flags", and "Type of Service" are zeroed prior to the
   computation of the ICV.  (The TOS field is included here because some
   routers are known to change the value of this field, even though the
   IP specification does not consider TOS to be a mutable header field.)

   *** What about OFFSET and FLAGS.  Since reassembly takes place before
   *** AH processing why are these fields omitted from the ICV
   *** computation?

   The following IPv4 options are mutable: record route, timestamp,
   loose source routing, and strict source routing.  These options are
   treated as zero-filled for purposes of the ICV computation.  The IP
   Security Options, BSO and ESO (RFC-1038, RFC-1108) and the CIPSO
   (option number 134) option are included in the ICV calculation and
   are not zeroed.

3.2.3.1.2  ICV Computation for IPv6

   In IPv6, the "Hop Limit" field in the IPv6 base header is zeroed
   prior to performing the ICV calculation.  IPv6 options contain a bit
   that indicates whether the option might change during transit.  For
   any option for which contents may change en-route, the entire "Option
   Data" field must be treated as zero-valued octets when computing or
   verifying the ICV.  The Option Type and Opt Data Len are included in
   the ICV calculation.  All other options are also included in the ICV
   calculation.  See the IPv6 specification [DH95] for more information.

   Note that the IPv6 Routing Header "Type 0" will rearrange the address
   fields within the packet during transit from source to destination.
   However, the contents of the packet as it will appear at the receiver
   are known to the sender and to all intermediate hops.  Hence, the
   IPv6 Routing Header "Type 0" is included in the Authentication Data
   calculation as an immutable option.  The transmitter must order the
   field so that it appears as it will at the receiver, prior to
   performing the ICV computation.

   *** Do we want to make any recommendation for what an AH implementation
   *** should do if it encounters an unfamiliar IPv6 extension header,


Kent, Atkinson                                                  [Page 9]






Internet Draft          IP Authentication Header           26 March 1997


   *** e.g., Routing Header "Type 1" (aka Nimrod)?

3.2.3.2  Padding

3.2.3.2.1  Authentication Data Padding

   As mentioned in section 2.6, the Authentication Data field explicitly
   includes padding to ensure that the AH header is a multiple of 32
   bits (IPv4) or 64 bits (IPv6).  If padding is required, its length is
   determined by three factors:
             - the presence or absence of the Sequence Number field
             - the length of the ICV
             - the IP protocol context (v4 or v6)

   For example, if the Sequence Number field is present and a default,
   96-bit truncated HMAC algorithm is selected, no padding is required
   for either IPv4 nor IPv6.  In contrast, if the anti-replay service is
   not selected, and a default 96-bit truncated HMAC algorithm is
   selected, no padding is required for IPv4, but 4 bytes of padding are
   required for IPv6.  The content of the padding field is arbitrarily
   selected by the sender.  (The padding is arbitrary, but need not be
   random to achieve security.)  These bytes are included in the
   Authentication Data calculation, counted as part of the Payload
   Length, and transmitted at the end of the Authentication Data field
   to enable the receiver to perform the ICV calculation.

3.2.3.2.2 Implicit Packet Padding

   For some authentication algorithms, the byte string over which the
   ICV computation is performed must be a multiple of a blocksize
   specified by the algorithm.  If the IP packet length (including AH)
   does not match the blocksize requirements for the algorithm, implicit
   padding MUST be appended to the end of the packet, prior to ICV
   computation.  The padding octets MUST have a value of zero.  The
   blocksize (and hence the length of the padding) is specified by the
   algorithm specification.  This padding is not transmitted with the
   packet.

3.2.3.3  Authentication Algorithms

   The authentication algorithm employed for the ICV computation is
   specified by the SA.  For point-to-point communication, suitable
   authentication algorithms include keyed Message Authentication Codes
   (MACs) based on symmetric encryption algorithms (e.g., DES) or on
   one-way hash functions (e.g., MD5 or SHA-1).  For multicast
   communication, one-way hash algorithms combined with asymmetric
   signature algorithms are suitable.  As of this writing, the
   mandatory-to-implement authentication algorithms are based on the


Kent, Atkinson                                                 [Page 10]






Internet Draft          IP Authentication Header           26 March 1997


   former class, i.e.,  HMAC [KBC97] with SHA-1 [SHA] or HMAC with MD5
   [Riv92].  The output of the HMAC computation is truncated to (the
   leftmost) 96 bits.  Other algorithms, possibly with different ICV
   lengths, MAY be supported.

3.2.4  Fragmentation

   If required, IP fragmentation occurs after AH processing within an
   IPsec implementation.  However, an IP packet to which AH has been
   applied may itself be fragmented by routers en route, including
   security gateways that may apply AH or ESP (tunnel mode) to the
   already-protected packet or fragments.

3.3  Inbound Packet Processing

3.3.1  Reassembly

   If required, reassembly is performed prior to AH processing.

3.3.2  Security Association Lookup

   Upon receipt of a packet containing an IP Authentication Header, the
   receiver determines the appropriate (unidirectional) SA, based on the
   destination IP address and the SPI.  (This process is described in
   more detail in the document, "Security Architecture for the Internet
   Protocol".)  The SA will indicate whether the Sequence Number field
   should be present, will specify the algorithm(s) employed for ICV
   computation, and will indicate the key(s) required to validate the
   ICV.

   If no valid Security Association exists for this session (e.g., the
   receiver has no key), the receiver MUST discard the packet and the
   failure MUST be recorded in an audit log.  The log entry SHOULD
   include the SPI value, date/time, Source Address, Destination
   Address, and (in IPv6) the Flow ID.  The log entry MAY also include
   other identifying data.  There is no requirement for the receiver to
   transmit any message to the purported transmitter in response to
   receipt of such packets (because of the potential to induce denial of
   service via such actions).

3.3.3  Sequence Number Verification

   If the anti-replay service has been selected for this SA, the
   receiver MUST verify that the packet contains a Sequence Number that
   does not duplicate the Sequence Number of any other packets received
   during the life of this SA.  This SHOULD be the first AH check
   applied to a packet after it has been matched to an SA, to speed
   rejection of duplicate packets.


Kent, Atkinson                                                 [Page 11]






Internet Draft          IP Authentication Header           26 March 1997


   Duplicates are rejected through the use of a sliding receive window.
   (How the window is implemented is a local matter, but the following
   text describes the functionality that the implementation must
   exhibit.)  The default window size is 32 and all AH implementations
   MUST support this window size.  A larger window size MAY be
   established during SA negotiation.  If a larger window size is
   negotiated it MUST be a multiple of 32.

   The "right" edge of the window represents the highest, validated
   Sequence Number value received on this SA.  Packets that contain
   Sequence Number values lower than the "left" edge of the window are
   rejected.  Packets falling within the window are checked against a
   list of received packets within the window.  An efficient means for
   performing this check, based on the use of a bit mask, is described
   in [KA97a].

   If the received packet falls within the window, then the receiver
   proceeds to ICV verification.  If the ICV validation fails, the
   receiver MUST discard the received IP datagram as invalid and MUST
   record the authentication failure in an audit log.  If such a failure
   occurs, the log entry MUST include the SPI value, date/time received,
   Sending Address, Destination Address, and (in IPv6) Flow ID.  The log
   data MAY also include other information about the failed packet.  The
   window is updated only if the ICV verification succeeds.

   DISCUSSION:

      Note that if the packet is either inside the window and new, or
      outside the window on the "right" side, the receiver MUST
      authenticate the Sequence Number field before updating the bit
      mask (either turning on a bit or updating the "right" side of the
      window).

3.3.4  Integrity Check Value Verification

   The receiver computes the ICV over the appropriate fields of the
   packet, using the specified authentication algorithm, and verifies
   that it is the same as the ICV included in the Authentication Data
   field of the packet.  Details of the computation are provided below.

   If the computed and received ICV's match, then the datagram is valid,
   and it is accepted.  If the test fails, then the receiver MUST
   discard the received IP datagram as invalid and MUST record the
   authentication failure in an audit log. The log data MUST include the
   SPI value, date/time received, Source Address, Destination Address,
   and (in IPv6) the Flow ID.  The log data also MAY include other
   information about the failed packet.



Kent, Atkinson                                                 [Page 12]






Internet Draft          IP Authentication Header           26 March 1997


   DISCUSSION:

      Begin by saving the ICV value and replacing it (but not any
      Authentication Data padding) with zero.  Zero all other fields
      that may have been modified during transit.  (See section 3.2.3.1
      for a discussion of which fields are zeroed before performing the
      ICV calculation.)  Check the overall length of the packet, and if
      it requires implicit padding based on the requirements of the
      authentication algorithm, append zero-filled bytes to the end of
      the packet as required.  Now perform the ICV computation and
      compare the result with the received value.  (If a digital
      signature and one-way hash are used for the ICV computation, the
      matching process is more complex and will be described in the
      algorithm specification.)


4. Conformance Requirements

   Implementations that claim conformance or compliance with this
   specification MUST fully implement the AH syntax and processing
   described here and MUST comply with all requirements of the "Security
   Architecture for the Internet Protocol."  Note that support for
   manual key distribution is required, but its use is inconsistent with
   the anti-replay service, and thus a compliant implementation must not
   negotiate this service in conjunction with SAs that are manually
   keyed.  A compliant AH implementation MUST support the following
   mandatory-to-implement algorithms (specified in [KBC97]):

    - HMAC with MD5
    - HMAC with SHA-1

5. Security Considerations

   Security is central to the design of this protocol, and this security
   considerations permeate the specification.  Additional security-
   relevant aspects of using IPsec protocol are discussed in the
   document, "Security Architecture for the Internet Protocol".


Acknowledgements

   For over 2 years, this document has evolved through multiple versions
   and iterations.  During this time, many people have contributed
   significant ideas and energy to the process and the documents
   themselves.  The authors would like to thank the members of the IPsec
   and IPng working groups, with special mention of the efforts of (in
   alphabetic order): Steve Bellovin, Steve Deering, Francis Dupont,
   Phil Karn, Frank Kastenholz, Perry Metzger, David Mihelcic, Hilarie


Kent, Atkinson                                                 [Page 13]






Internet Draft          IP Authentication Header           26 March 1997


   Orman, and William Simpson.  In addition, Charlie Lynn, Karen Seo,
   and Nina Yuan provided extensive help in the review and editing of
   this version of the specification.


References

   [BCCH94] R. Braden, D. Clark, S. Crocker, & C.Huitema, "Report of IAB
             Workshop on Security in the Internet Architecture", RFC-
             1636, 9 June 1994, pp. 21-34.

   [Bel89]   Steven M. Bellovin, "Security Problems in the TCP/IP
             Protocol Suite", ACM Computer Communications Review, Vol.
             19, No. 2, March 1989.

   [CER95]   Computer Emergency Response Team (CERT), "IP Spoofing
             Attacks and Hijacked Terminal Connections", CA-95:01,
             January 1995. Available via anonymous ftp from
             info.cert.org in /pub/cert_advisories.

   [DH95]    Steve Deering & Bob Hinden, "Internet Protocol version 6
             (IPv6) Specification", RFC-1883, December 1995.

   [GM93]    James Galvin & Keith McCloghrie, Security Protocols for
             version 2 of the Simple Network Management Protocol
             (SNMPv2), RFC-1446, April 1993.

   [KBC97]   Hugo Krawczyk, Mihir Bellare, and Ran Canetti, "HMAC:
             Keyed-Hashing for Message Authentication", RFC-2104,
             February 1997.

   [Ken91]   Steve Kent, "US DoD Security Options for the Internet
             Protocol", RFC-1108, November 1991.

   [KA96a]   Steve Kent, Randall Atkinson, "Security Architecture for
             the Internet Protocol", Internet Draft, ?? 1997.

   [KA96b]   Steve Kent, Randall Atkinson, "IP Encapsulating Security
             Payload (ESP)", Internet Draft, March 1997.

   [KA96c]   Steve Kent, Randall Atkinson, "IP Authentication Header",
             Internet Draft, March 1997.

   [Riv92]   Ronald Rivest, MD5 Digest Algorithm, RFC-1321, April 1992.

   [SHA]     NIST, FIPS PUB 180-1: Secure Hash Standard, April 1995

   [STD-1]   J. Postel, "Internet Official Protocol Standards", STD-1,


Kent, Atkinson                                                 [Page 14]






Internet Draft          IP Authentication Header           26 March 1997


             March 1996.

   [STD-2]   J. Reynolds & J. Postel, "Assigned Numbers", STD-2, 20
             October 1994.


Disclaimer

   The views and specification here are those of the authors and are not
   necessarily those of their employers.  The authors and their
   employers specifically disclaim responsibility for any problems
   arising from correct or incorrect implementation or use of this
   specification.



Author Information

   Stephen Kent
   BBN Corporation
   70 Fawcett Street
   Cambridge, MA  02140
   USA
   Telephone: +1 (617) 873-3988

   Randall Atkinson <rja@inet.org>
   @Home Network
   385 Ravendale Drive
   Mountain View, CA 94043
   USA




















Kent, Atkinson                                                 [Page 15]
