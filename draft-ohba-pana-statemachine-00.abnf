SEPARATE=Set|Unset;
PANA_SA_RESUMED=Unset;
MOBILITY==Set &&         PSA.insert_avp("Nonce");
SEPARATE=Unset;

MOBILITY==Set &&         PSA.insert_avp("Nonce");
SEPARATE==Set &&         RtxTimerStart();
SEPARATE==Set &&
SEPARATE==Unset) &&      SEPARATE=Unset;
SEPARATE==Unset) &&
PANA_SA_RESUMED=Unset;
SEPARATE==Set &&
SEPARATE==Set &&
SEPARATE==Set &&
SEPARATE==Set &&
SEPARATE==Set &&
SEPARATE==Unset &&
SEPARATE==Unset &&       TxPBA();
PANA_SA_RESUMED==Set &&
SEPARATE==Unset &&
SEPARATE==Unset &&
PANA_SA_RESUMED=Unset;
PANA_SA_RESUMED=Unset;
USE_COOKIE=Set|Unset;
PIGGYBACK=Set|Unset;
SEPARATE=Set|Unset;
SEPARATE=Unset;
MOBILITY=Set|Unset;
ABORT_ON_1ST_EAP_FAILURE=Set|Unset;
PROTECTION_CAP=Set|Unset;
CARRY_LIFETIME=Set|Unset;
CARRY_EP_DEVICE_ID=Set|Unset;
CARRY_NAP_INFO=Set|Unset;
CARRY_ISP_INFO=Set|Unset;
CARRY_PPAC=Set|Unset;
NAP_AUTH=Unset;
RTX_COUNTER=0;
USE_COOKIE==Unset &&
PIGGYBACK==Set

USE_COOKIE==Unset &&     if (CARRY_NAP_INFO==Set)
PIGGYBACK==Unset         PSR.insert_avp
                            ("NAP-Information");
                            if (CARRY_ISP_INFO==Set)
                              PSR.insert_avp
                              ("ISP-Information");
                            if (CARRY_PPAC==Set)
                              PSR.insert_avp
                              ("Post-PANA-Address-
                                Configuration");
                            Tx:PSR();
                            RtxTimerStart();
USE_COOKIE==Set          PSR.insert_avp
                            ("Cookie");
                            if (CARRY_NAP_INFO==Set)
                              PSR.insert_avp
                              ("NAP-Information");
                            if (CARRY_ISP_INFO==Set)
                              PSR.insert_avp
                              ("ISP-Information");
                            if (CARRY_PPAC==Set)
                              PSR.insert_avp
                              ("Post-PANA-Address-
                                Configuration");
                            Tx:PSR();
USE_COOKIE==Set &&           PSA.S_flag==0)
MOBILITY==Unset ||
USE_COOKIE==Set &&       PBR.insert_avp("Nonce");
MOBILITY==Set &&           ("EP-Device-Id");
SEPARATE=Unset;
NAP_AUTH=Set|Unset;
SEPARATE==Unset          ("EAP-Payload");
                            if (key_available())
                              PBR.insert_avp("MAC");
                            Tx:PBR();
                            RtxTimerStart();

SEPARATE==Unset &&       ("EAP-Payload");
SEPARATE==Unset &&       ("EAP-Payload");
SEPARATE==Set &&         ("EAP-Payload");
SEPARATE==Set &&         ("EAP-Payload");
SEPARATE==Set            ("EAP-Payload");
                            if (new_key_available())
                              PFER.insert_avp
                              ("Key-Id");
                            if (key_available())
                              PFER.insert_avp("MAC");
                            PFER.S_flag=1;
                            if (NAP_AUTH)
                              PFER.N_flag=1;
                            Tx:PFER();
                            RtxTimerStart();

SEPARATE==Unset            PBR.insert_avp("MAC");
                            Tx:PBR();
                            RtxTimerStart();
SEPARATE==Set &&           PFER.insert_avp("MAC");
SEPARATE==Set &&           PFER.insert_avp("MAC");
NAP_AUTH=Unset;
NAP_AUTH=Set;
NAP_AUTH=Set|Unset;
