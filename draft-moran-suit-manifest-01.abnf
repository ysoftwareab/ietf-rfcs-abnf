Manifest = [
       manifestVersion : uint,
       text : {* int => tstr } / nil,
       nonce : bstr,
       timestamp : uint,
       conditions: [ * condition ],
       directives: [ * directive ] / nil,
       aliases: [ * ResourceReference ] / nil,
       dependencies: [ * ResourceReference ] / nil,
       extensions: { * int => bstr } / nil,
       payloadInfo: ? PayloadInfo
PayloadInfo = [
format = [
           type: int,
           ? parameters : bstr
digestAlgorithm = [
           type : int,
           ? parameters: bstr
digests = {* int => bstr} / nil,
payload = COSE_Encrypt / bstr / nil
condition = [
       type : int,
       parameters : bstr
directive = condition

ResourceReference = [
       uri : tstr,
       digest : bstr
condition = [
       type : int,
       parameters : bstr
directive = condition

ResourceReference = [
       uri : tstr,
       digest : bstr
PayloadInfo = [
format = [
           type: int,
           ? parameters : bstr
digestAlgorithm = [
           type : int,
           ? parameters: bstr
digests = {* int => bstr} / nil,
payload = COSE_Encrypt / bstr / nil
Manifest = [
       manifestVersion : uint,
       text : {* int => tstr } / nil,
       nonce : bstr,
       timestamp : uint,
       conditions: [ * condition ],
       directives: [ * directive ] / nil,
       aliases: [ * ResourceReference ] / nil,
       dependencies: [ * ResourceReference ] / nil,
       extensions: { * int => bstr } / nil,
       payloadInfo: ? payloadInfo
