MK = PRF'(IK'|CK',"EAP-AKA'"|Identity)
K_encr = MK[0..127]
K_aut  = MK[128..383]
K_re   = MK[384..639]
MSK    = MK[640..1151]
EMSK   = MK[1152..1663]

      Here [n..m] denotes the substring from bit n to m.  PRF' is a new
      pseudo-random function specified in Section 3.4.  The first 1664
      bits from its output are used for K_encr (encryption key, 128
      bits), K_aut (authentication key, 256 bits), K_re (re-
      authentication key, 256 bits), MSK (Master Session Key, 512 bits),
      and EMSK (Extended Master Session Key, 512 bits).  These keys are
      used by the subsequent EAP-AKA' process.  K_encr is used by the
      AT_ENCR_DATA attribute, and K_aut by the AT_MAC attribute.  K_re
      is used later in this section.  MSK and EMSK are outputs from a
      successful EAP method run [RFC3748].

      IK' and CK' are derived as specified in [TS-3GPP.33.402].  The
      functions that derive IK' and CK' take the following parameters:
      CK and IK produced by the AKA algorithm, and value of the Network
      Name field comes from the AT_KDF_INPUT attribute (without length
      or padding) .

      The value "EAP-AKA'" is an eight-characters-long ASCII string.  It
      is used as is, without any trailing NUL characters.

      Identity is the peer identity as specified in Section 7 of
      [RFC4187].

      When the server creates an AKA challenge and corresponding AUTN,
      CK, CK', IK, and IK' values, it MUST set the Authentication
      Management Field (AMF) separation bit to 1 in the AKA algorithm
      [TS-3GPP.33.102].  Similarly, the peer MUST check that the AMF
      separation bit is set to 1.  If the bit is not set to 1, the peer
      behaves as if the AUTN had been incorrect and fails the
      authentication.

      On fast re-authentication, the following keys are calculated:


MK = PRF'(K_re,"EAP-AKA' re-auth"|Identity|counter|NONCE_S)
MSK  = MK[0..511]
EMSK = MK[512..1023]

      MSK and EMSK are the resulting 512-bit keys, taking the first 1024
      bits from the result of PRF'.  Note that K_encr and K_aut are not
      re-derived on fast re-authentication.  K_re is the re-
      authentication key from the preceding full authentication and
      stays unchanged over any fast re-authentication(s) that may happen
      based on it.  The value "EAP-AKA' re-auth" is a sixteen-
      characters-long ASCII string, again represented without any
      trailing NUL characters.  Identity is the fast re-authentication
      identity, counter is the value from the AT_COUNTER attribute,
      NONCE_S is the nonce value from the AT_NONCE_S attribute, all as
      specified in Section 7 of [RFC4187].  To prevent the use of
      compromised keys in other places, it is forbidden to change the
      network name when going from the full to the fast re-
      authentication process.  The peer SHOULD NOT attempt fast re-
      authentication when it knows that the network name in the current
      access network is different from the one in the initial, full
      authentication.  Upon seeing a re-authentication request with a
      changed network name, the server SHOULD behave as if the re-
      authentication identifier had been unrecognized, and fall back to
      full authentication.  The server observes the change in the name
      by comparing where the fast re-authentication and full
      authentication EAP transactions were received at the
      Authentication, Authorization, and Accounting (AAA) protocol
      level.

T1 = HMAC-SHA-256 (K, S | 0x01)
T2 = HMAC-SHA-256 (K, T1 | S | 0x02)
T3 = HMAC-SHA-256 (K, T2 | S | 0x03)
T4 = HMAC-SHA-256 (K, T3 | S | 0x04)
