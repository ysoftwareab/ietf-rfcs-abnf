function     = identifier "(" [ value-list ] ")"

value-list   = value *( "," value )

command    = identifier [ parameters ]

parameters = value *( SP value )

response = "Res[" res-code "]" [ SP field-list ]

res-code = "OK" / ( "ERR" value )

trailer = "." CR LF

stream       = *( unprintable / printable )

unprintable  = %d00-31

printable    = %d32-255

usp-packet   = data trailer

data         = *( printable / CR LF )

printable    = %x20-FF

trailer      = "." CR LF

usp-packet   = header [ CR LF structure ] trailer

trailer      = "." CR LF

header       = call / response / event

call         = function / command

function     = identifier "(" [ value-line ] ")"

command      = identifier [ parameters ]

parameters   = value *( SP value )
response     = "Res[" res-code "]" [ SP field-list ]

res-code     = "OK" / ( "ERR" value )

event        = "Event[" value "]" [ SP "Message[" value "]" ]
                   [SP field-line]

field-line   = field *( SP field )

identifier   = value

structure    = field *( divider [data divider] field )

field        = field-name "[" value-list "]"

value-list   = value *( separator value )

data         = value *( ( divider / separator ) value )

field-name   = *(char)

divider      = SP / (CR LF) / reserved / unreserved

separator    = "," / ":"

value        = *( char / ( "$" char ) )

unprintable  = %d00-31

printable    = reserved / unreserved / char

reserved     = "$" / "(" / ")" / "," / ":" / "[" / "]"

unreserved   = "#" / "%" / "&" / "." / "/" / ";" / "

char         = SP / "!" / %d34 / "'" / "+" / "-" / %d48-57 /
                   %d60-90 / %d94-255
usp-packet   = header [ CR LF structure ] trailer

trailer      = "." CR LF

header       = call / response / event

call         = function / command

function     = identifier "(" [ value-list ] ")"

command      = identifier [ parameters ]

parameters   = value *( SP value )

response     = "Res[" res-code "]" [ SP field-list ]

res-code     = "OK" / ( "ERR" value )

event        = "Event[" value "]" [ SP "Message[" value "]" ]
                   [ SP field-list ]

identifier   = value

structure    = large / small

small        = field-list

field-list   = field *( divider field )

field-line   = field *( SP field )

large        = node-header CR LF [ node-body CR LF ]
                   node-trailer CR LF

node-header  = ("Part" / "Object" / "Folder" / "Member")
                   "[" identifier ":" class "]"
                   [ SP "Type[" node-type "]" ] [ field-line ]

node-body    = plain-node / table-node / array-node / file-node

node-trailer = "End[" identifier "]"
class        = value

node-type    = "array" / "file" / "table"

plain-node   = field *( divider [data divider] field )
                   *( CR LF large )

table-node   = table-header *( CR LF table-record )

table-header = "[" identifier *( "," identifier ) "]"

table-record = "[" value *( "," value ) "]"

array-node   = array-record *( CR LF array-record )

array-record = field-line

file-node    = base64

base64       = hex-octet *( hex-octet ) *( CR LF hex-octet
                   *( hex-octet ) )  [ "=" ]

hex-octet    = 2*( hexdig )

field        = field-name "[" value-list "]"

value-list   = value *( separator value )

data         = value *( ( divider / separator ) value )

field-name   = *(char)

divider      = SP / (CR LF) / reserved / unreserved

separator    = "," / ":"

value        = *( ( char / unreserved ) / ( "$" char ) )

unprintable  = %d00-31

printable    = reserved / unreserved / char

reserved     = "$" / "(" / ")" / "," / ":" / "[" / "]"

unreserved   = "#" / "%" / "&" / "." / "/" / ";" / "

digit        = %d48-57

hexdig       = digit / "A" / "B" / "C" / "D" / "E" / "F"

upalpha      = %d65-90
lowalpha     = %d97-122

char         = SP / "!" / %d34 / "'" / "+" / "-" / digit /
                   %d60-64 / upalpha / %d94-96 / lowalpha / %d123-255

node-header  = ("Part" / "Object" / "Folder" / "Member")
                     "[" identifier ":" class "]"
                     [ SP "Type[" node-type "]" ] [ field-line ]

node-type    = "array" / "file" / "table"

value        = *( ( char / unreserved ) / ( "$" char ) )

unreserved   = "#" / "%" / "&" / "." / "/" / ";" / "

char         = SP / "!" / %d34 / "'" / "+" / "-" / digit /
                     %d60-64 / upalpha / %d94-96 / lowalpha / %d123-255

unprintable  = %d00-31

reserved     = "$" / "(" / ")" / "," / ":" / "[" / "]"

upalpha      = %d65-90

lowalpha     = %d97-122

Iql4OrjkXDAW9SeCtRKJRgEAOw==
sls    =  "SelectInterface" "(" Interface
                  [ "," UserName "," Password ] ")" trailer

usp-reference = scheme ":" authority "/" interface
                      [ "?" query [ "#" fragment ] ]

scheme        = "usp"

interface     = *uric

query         = identifier [ "(" [ parameters ] ")" ]

identifier    = *uric

parameters    = value *( "," value )

value         = *uric

