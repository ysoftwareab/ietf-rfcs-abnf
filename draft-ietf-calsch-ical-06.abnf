method  = 1*(ALPHA / DIGIT / "-")
component       = ("VEVENT" / "VTODO" / "VJOURNAL" / "VFREEBUSY"
                        / "VTIMEZONE" / x-name / iana-token) ["," [WSP]
                          component]

contentline     = name *(";" [WSP] param ) ":" value CRLF
name            = x-name / iana-token

iana-token      = 1*(ALPHA / DIGIT / "-")
x-name          = "X-" 1*(ALPHA / DIGIT / "-")
param           = param-name "=" param-value
                          *("," param-value)
param-name      = iana-token

param-value     = paramtext / quoted-string

paramtext       = *SAFE-CHAR

value   = *VALUE-CHAR

quoted-string   = DQUOTE *qtext DQUOTE

qtext           = QSAFE-CHAR / QUOTED-CHAR

NON-ASCII       = %x80-FF
QSAFE-CHAR      = WSP / %x21 / %x23-5B / %x5D-7E / NON-ASCII
QUOTED-CHAR     = "\" ("\" / "," / DQUOTE)
SAFE-CHAR       = WSP / %x21 / %x23-2B / %x2D-39 / %x3C-7E
                        / NON-ASCII
VALUE-CHAR      = WSP / VCHAR / NON-ASCII
VCHAR          =  %x21-7E
CR      = %x0D
LF      = %x0A

CRLF    =  CR LF
CTL     =  %x00-1F / %x7F
ALPHA   = %x41-5A / %x61-7A   ; A-Z / a-z
DIGIT   =  %x30-39
DQUOTE  = %x22
WSP     = SPACE / HTAB

SPACE   = %x20

HTAB    = %x09

parameter  = altrepparm            ;Alternate text representation
                / encodingparm          ;Inline encoding
                / languageparm          ;National language for text
                / tzidparm              ;Reference to time zone object
                / valuetypeparm         ;Property value data type
                / iana-token
        ;Some other IANA registered iCalendar parameter, such as those
        ;defined by an individual property.
                / x-name
        ;A non-standard, experimental parameter

altrepparm = "altrep" "=" DQUOTE uri DQUOTE

encodingparm       = "encoding" "=" "8bit"
        ;"8bit" text encoding is defined in [RFC 2045]
                        / "b"
        ;"b" binary encoding format is defined in [RFC 2047]
                        / iana-token
        ;Some other IANA registered iCalendar encoding type
                        / x-name
        ;A non-standard, experimental encoding type

languageparm =     "language" "=" language

language = <Text identifying a language, as defined in [RFC 1766]>
tzidparm   = "TZID" "=" [tzidprefix] paramtext CRLF

tzidprefix = "/"

valuetypeparm = "value" "=" valuetype

valuetype  = "binary"
                / "boolean"
                / "cal-address"
                / "date"
                / "date-time"
                / "duration"
                / "float"
                / "integer"
                / "period"
                / "recur"
                / "text"
                / "time"
                / "uri"
                / "utc-offset"
                / x-name
                        ;Some experimental iCalendar data type.
                / iana-token
                        ;Some other IANA registered iCalendar data type.

binary     = *(4b-char) [b-end]
b-end      = (2b-char "==") / (3b-char "=")

b-char = ALPHA / DIGIT / "+" / "/"

boolean    = "TRUE" / "FALSE"

cal-address        = uri

date               = date-value *("," [WSP] date-value)

date-value         = date-fullyear date-month date-mday
date-fullyear      = 4DIGIT
date-month         = 2DIGIT        ;01-12
date-mday          = 2DIGIT        ;01-28, 01-29, 01-30, 01-31
                                        ;based on month/year

date-time  = dt-value *("," [WSP] dt-value)

dt-value   = date "T" time ;As specified above in date and time

duration   = dur-value *("," [WSP] dur-value)
dur-value  = (["+"] / "-") "P" (dur-date / dur-time / dur-week)

dur-date   = (dur-day) [dur-time]
dur-time   = "T" (dur-hour / dur-minute / dur-second)
dur-week   = 1*DIGIT "W"

dur-hour   = 1*DIGIT "H" [dur-minute]
dur-minute = 1*DIGIT "M" [dur-second]
dur-second = 1*DIGIT "S"
dur-day    = 1*DIGIT "D"

float      = float-value *("," [WSP] float-value)

float-value = (["+"] / "-") 1*DIGIT ["." 1*DIGIT]

integer    = integer-value *("," [WSP] integer-value)

integer-value = (["+"] / "-") *DIGIT

period     = period-value *("," [WSP] period-value)

period-value = period-explicit / period-start

period-explicit = date-time "/" date-time
period-start = date-time "/" duration
recur      = recur-value *("," [WSP] recur-value)

recur-value = "FREQ"=freq ";"
                [("UNTIL" "=" enddate ";") / ("COUNT" "=" 1*DIGIT ";")]
                ["INTERVAL" "=" 1*DIGIT ";"]
                ["BYSECOND" "=" byseclist ";"]
                ["BYMINUTE" "=" byminlist ";"]
                ["BYHOUR" "=" byhrlist ";"]
                ["BYDAY" "=" bywdaylist ";"]
                ["BYMONTHDAY" "=" bymodaylist ";"]
                ["BYYEARDAY" "=" byyrdaylist ";"]
                ["BYWEEKNO" "=" bywknolist ";"]
                ["BYMONTH" "=" bymolist ";"]
                ["BYSETPOS" "=" bysplist ";"]
                ["WKST" "=" weekday ";")]
                *(x-name "=" text) ";"
        ;Individual components MAY only be specified once.
        ;Rule components need not be specified in particular any order.

freq       = "SECONDLY" / "MINUTELY" / "HOURLY" / "DAILY"
                / "WEEKLY" / "MONTHLY" / "YEARLY"

enddate    = date
enddate    =/ date-time            ;A UTC value

byseclist  = seconds / ( seconds *("," seconds) )

seconds    = 1DIGIT / 2DIGIT       ;0 to 59

byminlist  = minutes / ( minutes *("," minutes) )

minutes    = 1DIGIT / 2DIGIT       ;0 to 59

byhrlist   = hour / ( hour *("," hour) )

hour       = 1DIGIT / 2DIGIT       ;0 to 23

bywdaylist = weekdaynum / ( weekdaynum *("," weekdaynum) )

weekdaynum = [([plus] ordwk / minus ordwk)] weekday

plus       = "+"

minus      = "-"

ordwk      = 1DIGIT / 2DIGIT       ;1 to 53

weekday    = "SU" / "MO" / "TU" / "WE" / "TH" / "FR" / "SA"
bymodaylist = monthdaynum / ( monthdaynum *("," monthdaynum) )

monthdaynum = ([plus] ordmoday) / (minus ordmoday)

ordmoday   = 1DIGIT / 2DIGIT       ;1 to 31

byyrdaylist = yeardaynum / ( yeardaynum *("," yeardaynum) )

yeardaynum = ([plus] ordyrday) / (minus ordyrday)

ordyrday   = 1DIGIT / 2DIGIT / 3DIGIT      ;1 to 366

bywknolist = weeknum / ( weeknum *("," weeknum) )

weeknum    = ([plus] ordwk) / (minus ordwk)

bymolist   = monthnum / ( monthnum *("," monthnum) )
monthnum   = 1DIGIT / 2DIGIT       ;1 to 12

bysplist   = setposday / ( setposday *("," setposday) )

setposday  = yeardaynum

BYMINUTE=30

FREQ=DAILY;COUNT=10;INTERVAL=2

text       = text-value *("," text-value)
text-value = *(SAFE-CHAR / ":" / DQUOTE / ESCAPED-CHAR)

ESCAPED-CHAR = "\\" / "\;" / "\," / "\N" / "\n")
        ; \\ encodes \, \N or \n encodes newline
        ; \; encodes ;, \, encodes ,

NON-ASCII  = %x80-FF
        ; use restricted by charset parameter
        ; on outer MIME object

SAFE-CHAR  = %x20-21 / %x23-2B / %x2D-39 / %x3C-5B
                  %x5D-7E / NON-ASCII
        ; Any character except CTLs, DQUOTE, ";", ":", "\", ","

time               = time-value *("," [WSP] time-value)

time-value         = time-hour time-minute time-second [time-utc]

time-hour          = 2DIGIT        ;00-23
time-minute        = 2DIGIT        ;00-59
time-second        = 2DIGIT        ;00-60
time-utc   = "Z"

uri        = <As defined by any IETF RFC>

utc-offset      = time-numzone  ;As defined above in time data
icalobject = "BEGIN" ":" [WSP] "VCALENDAR" CRLF
                  icalbody
                  "END" ":" [WSP] "VCALENDAR" CRLF [icalobject]

icalbody   = calprops 1*component

calprops   = [calscale] [method] prodid version

component  = 1*(eventc / todoc / journalc / freebusyc /
                / timezonec / x-name / iana-token)

eventc     = "BEGIN" ":" [WSP] "VEVENT" CRLF
                  eventprop *alarmc
                  "END" ":" [WSP] "VEVENT" CRLF

eventprop  = *attach *attendee *categories [class] *comment
                  *contact [created] [description] [dtend / duration]
                  dtstart *exdate *exrule [geo] [last-mod] [location]
                  [organizer] [priority] [rstatus] *related *resources
                  *rdate *rrule dtstamp [seq] [status] summary
                  [transp] uid [url] [recurid]

todoc      = "BEGIN" ":" [WSP] "VTODO" CRLF
                  todoprop *alarmc
                  "END" ":" [WSP] "VTODO" CRLF

todoprop   = *attach *attendee *categories [class] *comment
                  [completed] *contact [created] [description] dtstamp
                  [dtstart] [due / duration] *exdate *exrule [geo]
                  [last-mod] [location] [organizer] [percent] priority
                  [rstatus] *related *resources *rdate *rrule
                  [recurid] [seq] [status] summary uid [url]

journalc   = "BEGIN" ":" [WSP] "VJOURNAL" CRLF
                  jourprop
                  "END" ":" [WSP] "VJOURNAL" CRLF

jourprop   = *attach *attendee *categories [class] *comment
                  *contact [created] description dtstart dtstamp
                  *exdate *exrule [last-mod] [organizer] [recurid]
                  *related *rdate *rrule [rstatus] [seq] summary
                  uid [url]

freebusyc  = "BEGIN" ":" [WSP] "VFREEBUSY" CRLF
                  fbprop
                  "END" ":" [WSP] "VFREEBUSY" CRLF

fbprop     = fbrequest / fbreply / busytime

fbrequest  = 1*attendee dtstart dtend [duration] *comment dtstamp
                  [last-mod] [seq] uid
fbreply    = 1*attendee [created] *comment [dtstart dtend] dtstamp
                  1*freebusy [last-mod] [rstatus] [seq] uid
                  [url]
busytime   = attendee dtstamp dtstart dtend *comment 1*freebusy
                  [url]

timezonec  = "BEGIN" ":" [WSP] "VTIMEZONE" CRLF

                  tzid [last-mod] [tzurl] 1*(standardc / daylightc)

                  "END" ":" [WSP] "VTIMEZONE" CRLF

standardc  = "BEGIN" ":" [WSP] "STANDARD" CRLF

                  tzprop

                  "END" ":" [WSP] "STANDARD" CRLF

daylightc  = "BEGIN" ":" [WSP] "DAYLIGHT" CRLF

                  tzprop

                  "END" ":" [WSP] "DAYLIGHT" CRLF

tzprop     = *comment dtstart [rdate / rrule]

                  *tzname tzoffsetto tzoffsetfrom

alarmc     = "BEGIN" ":" [WSP] "VALARM" CRLF
                  (audioprop / dispprop / emailprop
                / procprop)
                  "END" ":" [WSP] "VALARM" CRLF
audioprop  = alarmtype trigger [duration repeat] attach

dispprop   = alarmtype description trigger [duration
                  repeat]

emailprop  = alarmtype 1*attendee *attach description
                  trigger [duration repeat] summary

procprop   = alarmtype attach [description] trigger [duration
                  repeat]

calscale   = "CALSCALE" ":" [WSP] calvalue CRLF

calvalue   = "GREGORIAN" / iana-token

method     = "METHOD" ":" [WSP] method-value CRLF

method-value       = iana-token

prodid     = "PRODID" ":" [WSP] pidvalue CRLF

pidvalue   = text
version    = "VERSION" ":" [WSP] vervalue CRLF

vervalue   = "2.0"         ;This memo
                / maxver
                / (minver ";" [WSP] maxver)

minver     = <A IANA registered iCalendar version identifier>
maxver     = <A IANA registered iCalendar version identifier>
attach     = ("ATTACH" ":" [WSP] uri  CRLF)

attach     =/ ("ATTACH" ";" [WSP] "ENCODING" "=" "b" ";" [WSP]
                  "VALUE" "=" "text" ":" [WSP] binary

categories = "CATEGORIES" [catparam] ":" [WSP] catvalue CRLF

catparam   = ";" [WSP] languageparm
catvalue   = "ANNIVERSARY" / "APPOINTMENT" / "BUSINESS"
                / "EDUCATION" / "HOLIDAY" / "MEETING" / "MISCELLANEOUS"
                / "NON-WORKING HOURS" / "NOT IN OFFICE" / "PERSONAL"
                / "PHONE CALL"  / "SICK DAY" / "SPECIAL OCCASION"
                / "TRAVEL" / "VACATION" / text
class      = "CLASS" ":" [WSP] classvalue CRLF

classvalue = "PUBLIC" / "PRIVATE" / "CONFIDENTIAL" / iana-token
                / x-name
comment    = "COMMENT" [commparam] ":" [WSP] text CRLF

commparam  = [";" [WSP] altrepparm ] [";" [WSP] languageparm]

description        = "DESCRIPTION" [descparam] ":" [WSP] text CRLF

descparam  = [";" [WSP] altrepparm] [";" [WSP] languageparm]

decimal = degrees + minutes/60 + seconds/3600.
geo        = "GEO" ":" [WSP] geovalue CRLF

geovalue   = float ";" [WSP] float
location   = "LOCATION [locparam] ":" [WSP] text CRLF

locparam   = [";" [WSP] altrepparm] [";" [WSP] languageparm]

percent = "PERCENT-COMPLETE" ":" [WSP] integer CRLF

priority   = "PRIORITY" ":" [WSP] privalue CRLF
privalue   = integer       ;Must be in the range [0..9]
        ; All other values are reserved for future use

resources  = "RESOURCES" [resrcparam] ":" [WSP] resvalist CRLF

resrcparam = ";" [WSP] languageparm

resvalist  = resvalue / resvalue "," [WSP] resvalist

resvalue   = "CATERING" / "CHAIRS" / "COMPUTER PROJECTOR"
                / "EASEL" / "OVERHEAD PROJECTOR" / "SPEAKER PHONE"
                / "TABLE" / "TV" / "VCR" / "VIDEO PHONE" / "VEHICLE"
                / text
        ;These are just examples.

status     = "STATUS" ":" [WSP] statvalue CRLF

statvalue  = "TENTATIVE"           ;Indicates event is
                                        ;tentative.
                / "CONFIRMED"           ;Indicates event is
                                        ;definite.
                / "CANCELLED"           ;Indicates event was
                                        ;cancelled.
        ;Status values for a "VEVENT"

statvalue  =/ "NEEDS-ACTION"       ;Indicates to-do needs action.
                / "COMPLETED"           ;Indicates to-do completed.
                / "IN-PROCESS"          ;Indicates to-do in process of
                / "CANCELLED"           ;Indicates to-do was cancelled.
        ;Status values for "VTODO".

statvalue  =/ "DRAFT"              ;Indicates journal is draft.
                / "FINAL"               ;Indicates journal is final.
                / "CANCELLED"           ;Indicates journal is removed.
        ;Status values for "VJOURNAL".

summary    = "SUMMARY" [summparam] ":" [WSP] text CRLF

summparam  = [";" [WSP] altrepparm] [";" [WSP] languageparm]

completed  = "COMPLETED" ":" [WSP] date-time CRLF

dtend      = "DTEND" [dtendparam]":" [WSP] dtendval CRLF

dtendparam = [";" [WSP] "VALUE" "=" "DATE-TIME"]
                  [";" [WSP] "TZID" "=" paramtext

dtendparam =/ ";" [WSP] "VALUE" "=" "DATE"

dtendval   = date-time / date
due        = "DUE" [dueparam]":" [WSP] dueval CRLF

dueparam   = [";" [WSP] "VALUE" "=" "DATE-TIME"]
                  [";" [WSP] "TZID" "=" paramtext

dueparam   =/ ";" [WSP] "VALUE" "=" "DATE"

dueval     = date-time / date
dtstart    = "DTSTART" [dtstparam] ":" [WSP] dtstval CRLF

dtstparam  = [";" [WSP] "VALUE" "=" "DATE-TIME"]
                  [";" [WSP] "TZID" "=" paramtext]
dtstparam  =/ ";" [WSP] "VALUE" "=" "DATE"

dtstval    = date-time / date
duration   = "DURATION" ":" [WSP] duration CRLF

freebusy   = "FREEBUSY" [";" [WSP] fbparmlist] ":" [WSP] fbvalue
                  CRLF

fbparmlist = fb-free / fb-busy

fb-free    = "TYPE" "=" "FREE"

fb-busy    = ["TYPE" "=" "BUSY"] [";" [WSP] fbstatus]
fbstatus   = "BSTAT" "="
                  "BUSY"        ;Represents busy time interval.
                / "UNAVAILABLE" ;Represents busy, but unavailable
                                ;interval for cheduling; such as
                                ;out-of-office or non-working hours.
                / "TENTATIVE"   ;Represents busy, but only tentatively
                                ;scheduled interval.
                / iana-token    ;Represents other registered busy status
                / x-name        ;Represents experimental busy status
fbvalue    = period *["," [WSP] period]
transp     = "TRANSP" ":" [WSP] transvalue CRLF

transvalue = "OPAQUE"      ;Blocks or opaque on busy time searches.
                / "TRANSPARENT" ;Transparent on busy time searches.
        ;Default value is OPAQUE

tzid       = "TZID" ":" [WSP] [tzidprefix] text CRLF

tzidprefix = "/"

tzname     = "TZNAME" [tznparam] ":" [WSP] text CRLF

tznparam   = ";" [WSP] languageparm

tzoffsetfrom       = "TZOFFSETFROM" ":" [WSP] utc-offset CRLF

tzoffsetto = "TZOFFSETTO" ":" [WSP] utc-offset CRLF

tzurl      = "TZURL" ":" [WSP] uri CRLF

attendee   = "ATTENDEE" *(";" [WSP] attparam) ":" [WSP]
                  cal-address CRLF

attparam   = typeparm / cnparm / roleparm / statusparm / rsvpparm
                / memberparm / deletoparm / delefromparm
                / sentbyparm / dirparm

typeparm   = "TYPE" "="
                ("INDIVIDUAL"   ; An individual
                / "GROUP"       ; A group of individuals
                / "RESOURCE"    ; A physical resource
                / "ROOM"        ; A room resource
                / "UNKNOWN")    ; Otherwise not known
cnparm     = "CN" "=" param-value

roleparm   = "ROLE" "="
                 ("CHAIR"       ; Indicates CHAIR of the calendar entity
                / "REQ-PARTICIPANT" ; Indicates a participant whose
        ;participation is required
                / "OPT-PARTICIPANT" ;Indicates a participant whose
        ;participation is optional
                / "NON-PARTICIPANT" ;Indicates a participant who
        ;is copied for information purposes only
statusparm = "ATTSTAT" "="
                ("NEEDS-ACTION" ; Indicates event or to-do needs action
                / "ACCEPTED"    ; Indicates event or to-do accepted
                / "DECLINED"    ; Indicates event or to-do not accepted
                / "TENTATIVE"   ; Indicates event or to-do tentatively
                ; accepted. Status MAY change in the future.
                / "COMPLETED"   ; Indicates to-do was completed.
                ; COMPLETED property has date/time completed.
                / "IN-PROCESS"  ;Indicates to-do is in the process of
                ; being completed.
                / "DELEGATED"   ; Indicates event or to-do delegated
                ; to another ATTENDEE
rsvpparm   = "RSVP" "="
                  ("TRUE"               ; Indicates response requested
                / "FALSE")              ; Indicates no response needed
memberparm = "MEMBER" "=" DQUOTE uri DQUOTE
                  *("," [WSP] DQUOTE uri DQUOTE)
deletoparm = "DELEGATED-TO" "=" DQUOTE uri DQUOTE
                  *("," [WSP] DQUOTE uri DQUOTE)
sentbyparm = "SENT-BY" "=" DQUOTE uri DQUOTE
contact    = "CONTACT" [contparam] ":" [WSP] text CRLF

contparam  = [";" [WSP] altrepparm] [";" [WSP] languageparm]

c=3DUS??(cn=3DBJim%20Dolittle)":Jim Dolittle\, ABC Industries\,
organizer  = "ORGANIZER" [orgparam] ":" [WSP]
                  cal-address CRLF

orgparam   = [";" [WSP] "CN" "=" param-value]
                  [";" [WSP] "DIR" "=" DQUOTE uri DQUOTE]
                  proxyparam

proxyparam = (";" [WSP] "SENT-BY" "=" DQUOTE cal-address DQUOTE)

recurid    = "RECURRENCE-ID" *(";" [WSP] parameter)
                  [";" [WSP] rangeparm] ":" [WSP] [date-time / date]
        ;Value must match value type.

recurid    = "RECURRENCE-ID" [ridparam] [rangeparm] ":" [WSP]
                  ridval CRLF

ridparam   = ";" [WSP] "VALUE" "=" ("DATE-TIME" / "DATE" /
                / "PERIOD")

rangeparm  = ";" [WSP] "RANGE" "=" ("THISANDPRIOR"
                / "THISANDFUTURE")

ridval     = date-time / date / period
related    = "RELATED-TO" [";" [WSP] relparam) ":" [WSP] text CRLF

relparam   = "RELTYPE" "="
                  "PARENT"      ; Parent relationship. Default.
                / "CHILD"       ; Child relationship.
                / "SIBLING"     ; Sibling relationship.

url        = "URL" ":" [WSP] uri CRLF

uid        = "UID" ":" [WSP] text CRLF

exdate     = "EXDATE" [exdtparam] ":" [WSP] exdtval CRLF

exdtparam  = [";" [WSP] "VALUE" "=" "DATE-TIME"]
                  [";" [WSP] "TZID" "=" paramtext]

exdtparam  =/ ";" [WSP] "VALUE" "=" "DATE"

exdtval    = date-time / date
exrule     = "EXRULE" ":" [WSP] recur CRLF

rdate      = "RDATE" [rdtparam] ":" [WSP] rdtval
                  *("," [WSP] rdtval) CRLF

rdtparam   = [";" [WSP] "VALUE" "=" "DATE-TIME"]
                  [";" [WSP] "TZID" "=" paramtext]

rdtparam   =/ ";" [WSP] "VALUE" "=" "DATE"

rdtparam   =/ ";" [WSP] "VALUE" "=" "PERIOD"

rdtval     = date-time / date / period
rrule      = "RRULE" ":" [WSP] recur CRLF

BYMONTH=1;BYDAY=SU,MO,TU,WE,TH,FR,SA
BYMONTH=1

WKST=SU;BYDAY=TU,TH
UNTIL=19970902T170000

alarm-type = "ALARM-TYPE" [almtypparam] ":" [WSP] almtypvalue CRLF

almtypparam        = ";" [WSP] languageparm

almtypvalue        = "AUDIO" / "DISPLAY" / "EMAIL" / "PROCEDURE"
                        / iana-token / x-name

repeatcnt  = "REPEAT" ":" [WSP] integer CRLF
trigger    = "TRIGGER" (trigrel / trigabs)

trigrel    = ([";" [WSP] "VALUE" "=" "DURATION"]
                  ";" [WSP] "RELATED" "=" ("START" / "END"))
                  ":" [WSP] (["+"] / "-") duration

trigabs    = (";" [WSP] "VALUE" "=" "DATE-TIME"
                  ":" [WSP] date-time)

created    = "CREATED" ":" [WSP] date-time CRLF

dtstamp    = "DTSTAMP" ":" [WSP] date-time CRLF

last-mod   = "LAST-MODIFIED" ":" [WSP] date-time CRLF

seq        = "SEQUENCE" ":" [WSP] integer CRLF
extension  = "X-" [vendorid] "-" text *(";" [WSP] param) ":"
                  [WSP] value-list CRLF
        ; Lines longer than 75 characters should be folded

vendorid   = 3*char        ;Vendor identification prefix text

rstatus    = "REQUEST-STATUS" [rstatparam] ":" [WSP]
                  statcode ";" [WSP] statdesc [";" [WSP] extdata]

rstatparam = ";" [WSP] languageparm

statcode   = 1*DIGIT *("." 1*DIGIT)
statdesc   = text
extdata    = text
