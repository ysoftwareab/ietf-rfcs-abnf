       Remote Network Monitoring MIB Extensions for Virtual Circuits
                                Version 1.0

                              January 6, 2000


                       draft-steinberger-mib-vircir-00.txt

                           Robert A. Steinberger
                             Paradyne Networks
                         rsteinberger@paradyne.com


Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026. Internet-Drafts are working
   documents of the Internet Engineering Task Force (IETF), its areas,
   and its working groups.  Note that other groups may also distribute
   working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

Abstract

   This memo defines an extension of the Management Information Base
   (MIB) for use with network management protocols in TCP/IP-based
   internets.  In particular, it defines objects to allow management of
   remote network monitoring in networks containing virtual circuits.

Copyright Notice

   Copyright (C) The Internet Society (2000). All Rights Reserved.









Expires July 2000             Steinberger                       [Page 1]

Internet Draft                 VCMON MIB                 January 6, 2000


Table of Contents

   1. The Network Management Framework ............................    3
   2. Overview ....................................................    4
   2.1. Remote Network Management Goals ...........................    4
   2.2. Virtual Circuit Network Monitoring ........................    5
   2.3. Mechanisms for Monitoring Virtual Circuits ................    6
   2.3.1. Interface Map ...........................................    6
   2.3.2. DataSource Generation ...................................    6
   2.4. Relation to Other MIBs ....................................    7
   2.4.1. The RMON and RMON 2 MIBs ................................    7
   2.4.2. The Interfaces Group MIB ................................    7
   2.4.3. The SMON MIB ............................................    7
   3. VCMON Groups ................................................    7
   3.1. vcmonIfMap (1) ............................................    7
   3.2. vcmonDataSources (2) ......................................    7
   4. Control of Remote Network Monitoring Devices ................    8
   5. Object Definitions ..........................................    8
   6. Acknowledgments .............................................   14
   7. References ..................................................   16
   8. Intellectual Property .......................................   18
   9. Security Considerations .....................................   18
   10. Author's Address ...........................................   19
   11. Copyright Section ..........................................   19



























Expires July 2000             Steinberger                       [Page 2]

Internet Draft                 VCMON MIB                 January 6, 2000


1.  The Network Management Framework

   The SNMP Management Framework presently consists of five major
   components:

   o   An overall architecture, described in RFC 2571 [1].

   o   Mechanisms for describing and naming objects and events for the
       purpose of management. The first version of this Structure of
       Management Information (SMI) is called SMIv1 and described in RFC
       1155 [2], RFC 1212 [3] and RFC 1215 [4]. The second version,
       called SMIv2, is described in RFC 2578 [5], RFC 2579 [6] and RFC
       2580 [7].

   o   Message protocols for transferring management information. The
       first version of the SNMP message protocol is called SNMPv1 and
       described in RFC 1157 [8]. A second version of the SNMP message
       protocol, which is not an Internet standards track protocol, is
       called SNMPv2c and described in RFC 1901 [9] and RFC 1906 [10].
       The third version of the message protocol is called SNMPv3 and
       described in RFC 1906 [10], RFC 2572 [11] and RFC 2574 [12].

   o   Protocol operations for accessing management information. The
       first set of protocol operations and associated PDU formats is
       described in RFC 1157 [8]. A second set of protocol operations
       and associated PDU formats is described in RFC 1905 [13].

   o   A set of fundamental applications described in RFC 2573 [14] and
       the view-based access control mechanism described in RFC 2575
       [15].

   A more detailed introduction to the current SNMP Management Framework
   can be found in RFC 2570 [16].

   Managed objects are accessed via a virtual information store, termed
   the Management Information Base or MIB.  Objects in the MIB are
   defined using the mechanisms defined in the SMI.

   This memo specifies a MIB module that is compliant to the SMIv2. A
   MIB conforming to the SMIv1 can be produced through the appropriate
   translations. The resulting translated MIB must be semantically
   equivalent, except where objects or events are omitted because no
   translation is possible (use of Counter64). Some machine readable
   information in SMIv2 will be converted into textual descriptions in
   SMIv1 during the translation process. However, this loss of machine
   readable information is not considered to change the semantics of the
   MIB.




Expires July 2000             Steinberger                       [Page 3]

Internet Draft                 VCMON MIB                 January 6, 2000


   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED","MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [20].

2.  Overview

   This document continues the architecture created in the RMON MIB [17]
   by providing a means of allowing RMON analysis of virtual circuits
   (VCMON).

   Remote network monitoring devices, often called monitors or probes,
   are instruments that exist for the purpose of managing a network.
   Often these remote probes are stand-alone devices and devote
   significant internal resources for the sole purpose of managing a
   network.  An organization may employ many of these devices, one per
   network segment, to manage an internet.  In addition, these devices
   may be used for a network management service provider to access a
   client network, often geographically remote.

   The objects defined in this document are intended as an interface
   between an RMON agent and an RMON management application and are not
   intended for direct manipulation by humans.  While some users may
   tolerate the direct display of some of these objects, few will
   tolerate the complexity of manually manipulating objects to
   accomplish row creation.  These functions should be handled by the
   management application.

2.1.  Remote Network Management Goals


   o   Offline Operation

       There are sometimes conditions when a management station will not
       be in constant contact with its remote monitoring devices.  This
       is sometimes by design in an attempt to lower communications
       costs (especially when communicating over a WAN or dialup link),
       or by accident as network failures affect the communications
       between the management station and the probe.

       For this reason, this MIB allows a probe to be configured to
       perform diagnostics and to collect statistics continuously, even
       when communication with the management station may not be
       possible or efficient.  The probe may then attempt to notify the
       management station when an exceptional condition occurs.  Thus,
       even in circumstances where communication between management
       station and probe is not continuous, fault, performance, and
       configuration information may be continuously accumulated and
       communicated to the management station conveniently and



Expires July 2000             Steinberger                       [Page 4]

Internet Draft                 VCMON MIB                 January 6, 2000


       efficiently.

   o   Proactive Monitoring

       Given the resources available on the monitor, it is potentially
       helpful for it continuously to run diagnostics and to log network
       performance.  The monitor is always available at the onset of any
       failure.  It can notify the management station of the failure and
       can store historical statistical information about the failure.
       This historical information can be played back by the management
       station in an attempt to perform further diagnosis into the cause
       of the problem.

   o   Problem Detection and Reporting

       The monitor can be configured to recognize conditions, most
       notably error conditions, and continously to check for them.
       When one of these conditions occurs, the event may be logged, and
       management stations may be notified in a number of ways.

   o   Value Added Data

       Because a remote monitoring device represents a network resource
       dedicated exclusively to network management functions, and
       because it is located directly on the monitored portion of the
       network, the remote network monitoring device has the opportunity
       to add significant value to the data it collects.  For instance,
       by highlighting those hosts on the network that generate the most
       traffic or errors, the probe can give the management station
       precisely the information it needs to solve a class of problems.

   o   Multiple Manager

       An organization may have multiple managenent stations for
       different units of the organization, for different functions
       (e.g.  engineering and operations), and in an attempt to provide
       disaster recovery. Because environments with multiple management
       stations are common, the remote network monitoring device has to
       deal with more than one management station, potentially using its
       resources concurrently.



2.2.  Virtual Circuit Network Monitoring

   This document addresses issues related to applying "Remote
   Technology" to networks containing Virtual Circuits.  Examples of
   these networks include frame relay and ATM networks.  Virtual



Expires July 2000             Steinberger                       [Page 5]

Internet Draft                 VCMON MIB                 January 6, 2000


   Circuits dataSources do not fit into the model provided by RMON [17],
   RMON 2 [18] or SMON[22]:

   1)   The media-specific MIB designers MAY have elected not to assign
        entires in the ifTable [19] to virtual circuits.  This conficts
        with the need for RMON dataSources to have ifIndices.

   2)   Virtual circuits may be further segmented into more virtual
        circuits.

   3)   Data across the virtual circuit can be in the form of cells.
        Like RMON and SMON, VCMON is only concerned with the monitoring
        of packets.

   4)   Monitoring multiple virtual circuits requires a vast amount of
        resources - memory and CPU.  This monitoring SHOULD be
        configurable to suit the application needs.

   5)   MAC information may not be available on all virtual circuits.
        Some virtual circuits SHOULD NOT be allowed to be added to some
        RMON tables.

   These differences make monitoring of virtual circuits either
   difficult or proprietary when using RMON, RMON 2 or SMON.  None
   provide a mechanism to add dataSources meeting the specific
   requirements of a virtual circuit.

   This document provides a means of using virtual circuits as
   dataSources.

2.3.  Mechanisms for Monitoring Virtual Circuits

   The following mechanisms are used by VCMON for the purpose of
   monitoring virtual circuits:

2.3.1.  Interface Map

   The agents have the knowledge of which interfaces may be extended
   with virtual interfaces, which of these interfaces are capable of
   being monitored, and the extent of monitoring that can be
   accomplished. The Interface Map provides a mechanism  that allows the
   management application to discover which virtual circuits can be
   monitored and the extent of the monitoring that can be performed.

2.3.2.  DataSource Generation

   The RMON MIB standard [17] defines dataSource objects which point to
   MIB-II interfaces, identified by instances of ifIndex objects.



Expires July 2000             Steinberger                       [Page 6]

Internet Draft                 VCMON MIB                 January 6, 2000


   Further, some management applications rely on interface information
   for the collection of information.  For this reason, VCMON provides
   the capability of inserting entries into the ifTable.

2.4.  Relation to Other MIBs


2.4.1.  The RMON and RMON 2 MIBs

   This MIB allows the generation of ifEntries [19] that may become RMON
   dataSources [17].

   Not all dataSources are valid dataSources for all RMON tables. Some
   are not capable of monitoring MAC information, so the host, hostTopN
   and matrix groups of RMON [17] do not apply to some virtual
   dataSources.  The vcmonIfMapMACCapable object advertises this
   capability.

2.4.2.  The Interfaces Group MIB

   The VCMON MIB utilizes the propVirtual(53) ifType defined in the
   Interfaces Group MIB [21] to provide RMON with new dataSources.

2.4.3.  The SMON MIB

   Both SMON [22] and VCMON use the propVirtual(53) ifType.  If SMON is
   supported, the ifEntries created for SMON  that are not extensible
   SHOULD NOT appear in the ifMap table.  Likewise, ifEntries created
   for VCMON that are not SMON capable should not appear in the SMON
   dataSourceCaps group.

3.  VCMON Groups


3.1.  vcmonIfMap (1)

   This group describes the ifIndices that may be extended to form new
   ifEntries for use as RMON virtual dataSources. The management
   application SHOULD reference this group to discover the identity and
   attributes of extensible ifIndices.  Each ifEntry that is extensible
   should appear in this group.

3.2.  vcmonDataSources (2)

   This group allows an NMS to both discover and control the generation
   of dataSources for virtual circuits.





Expires July 2000             Steinberger                       [Page 7]

Internet Draft                 VCMON MIB                 January 6, 2000


4.  Control of Remote Network Monitoring Devices

   Due to the complex nature of the available functions in monitor
   devices, user configuration is often required.  In many cases, the
   function requires parameters to be set up for a data collection
   operation.  The operation can proceed only after these parameters are
   fully set up.

   The vcmonDataSources table is used as the control table.  Because
   parameters in this table affect the data contained in other tables,
   many of the parameters can only be modified when the control entry is
   not active.  Thus, the method for modifying these parameters is to
   de-activate the entry, perform the SNMP set operations to modify the
   entry, and then re-activate the entry. Deleting control entries
   causes the deletion of any associated data entries.  This also gives
   a convenient method for reclaiming the resources used by the
   associated data.

   The control mechanisms defined and used in this MIB are the same as
   those defined in the RMON MIB [17] for control functionality and
   interaction with multiple managers.

5.  Object Definitions

VCMON-MIB DEFINITIONS ::= BEGIN

IMPORTS
      MODULE-IDENTITY, OBJECT-TYPE, Integer32
              FROM SNMPv2-SMI
      RowStatus
              FROM SNMPv2-TC
      MODULE-COMPLIANCE, OBJECT-GROUP
              FROM SNMPv2-CONF
      rmon, OwnerString
              FROM RMON-MIB
      LastCreateTime, rmonConformance
              FROM RMON2-MIB
      InterfaceIndex
              FROM IF-MIB;

      virtualCircuitRMON MODULE-IDENTITY
          LAST-UPDATED "0001060000Z"
          ORGANIZATION "IETF TBD Working Group"
          CONTACT-INFO
          "Robert Steinberger
           Postal: Paradyne Networks
                   Mailstop: LG-132
                   8545 126th Avenue North



Expires July 2000             Steinberger                       [Page 8]

Internet Draft                 VCMON MIB                 January 6, 2000


                   Largo, FL USA 33773
           TEL:    +1-727-530-2395
           E-mail: rsteinberger@paradyne.com"

      DESCRIPTION
              "The MIB module for creating ifIndices for
               RMON Virtual dataSources."

      ::= { rmon xxx }

      vcmonMIBObjects   OBJECT IDENTIFIER ::= { virtualCircuitRMON 1 }

      vcmonIfMap        OBJECT IDENTIFIER ::= { vcmonMIBObjects 1 }
      vcmonDataSources  OBJECT IDENTIFIER ::= { vcmonMIBObjects 2 }

      -- vcmonIfMap Group - defines the group of ifIndices that
      -- can be augmented to form ifEntries for virtual data
      -- sources.
      --
      -- The management application SHOULD check this group to
      -- retrieve information about which ifIndices can be used
      -- to create virtual dataSources.

      -- vcmonIfMapTable: defines the extensible ifIndices

      vcmonIfMapTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF VcmonIfMapEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
          "This table describes the ifIndices that may be
           augmented to form RMON virtual dataSources.
           A management application SHOULD use this table to
           discover the identity and attributes of extensible
           ifIndices on a given device.

           Upon restart of the RMON agent the ifMapTable SHOULD
           be initialized for the available extensible ifIndices."
      ::= { vcmonIfMap 1 }

      vcmonIfMapEntry  OBJECT-TYPE
        SYNTAX      VcmonIfMapEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
          "Entries per extensible ifIndex. This table is populated by
           the RMON agent with one entry for each supported extensible
           ifIndex."



Expires July 2000             Steinberger                       [Page 9]

Internet Draft                 VCMON MIB                 January 6, 2000


        INDEX { vcmonIfMapIfIndex, vcmonIfMapExtension }
      ::= { vcmonIfMapTable 1 }

      VcmonIfMapEntry ::= SEQUENCE {
        vcmonIfMapIfIndex
                InterfaceIndex,
        vcmonIfMapExtension
                Integer32,
        vcmonIfMapMACCapable
                INTEGER
      }

      vcmonIfMapIfIndex  OBJECT-TYPE
        SYNTAX      InterfaceIndex
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
          "Defines an ifIndex that can be extended to form a
           virtual ifIndex for use as an RMON dataSource."
      ::= { vcmonIfMapEntry 1  }

      vcmonIfMapExtension  OBJECT-TYPE
        SYNTAX      Integer32 (0..2147483647)
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
          "Defines a valid extension to the ifIndex.  For example,
           this could be a DLCI on a frame relay logical link."
      ::= { vcmonIfMapEntry 2  }

      vcmonIfMapMACCapable  OBJECT-TYPE
        SYNTAX      INTEGER {
                    macInfo(1),
                    noMacInfo(2)
        }
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
          "This object describes whether the virtual interface
           is capable of determining the MAC Level information.
           If set to macInfo(1), RMON groups related to MAC
           information MAY be supported based on the probe
           capabilities."
      ::= { vcmonIfMapEntry 3 }

      vcmonDataSourceTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF VcmonDataSourceEntry
        MAX-ACCESS  not-accessible



Expires July 2000             Steinberger                      [Page 10]

Internet Draft                 VCMON MIB                 January 6, 2000


        STATUS      current
        DESCRIPTION
          "This table describes and allows users to create
           new virtual ifIndices that can be used as
           RMON dataSources."
      ::= { vcmonDataSources 1 }

      vcmonDataSourceEntry  OBJECT-TYPE
        SYNTAX      VcmonDataSourceEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
          "Entries per virtual dataSource."
        INDEX { vcmonDataSourceControlIndex }
      ::= { vcmonDataSourceTable 1 }

      VcmonDataSourceEntry ::= SEQUENCE {
        vcmonDataSourceControlIndex
                Integer32,
        vcmonDataSourceSrcIndex
                InterfaceIndex,
        vcmonDataSourceSrcExtension
                Integer32,
        vcmonDataSourceVirtualIndex
                InterfaceIndex,
        vcmonDataSourceCreateTime
                LastCreateTime,
        vcmonDataSourceType
                INTEGER,
        vcmonDataSourceDirection
                INTEGER,
        vcmonDataSourceOwner
                OwnerString,
        vcmonDataSourceStatus
                RowStatus
      }

      vcmonDataSourceControlIndex  OBJECT-TYPE
        SYNTAX      Integer32 (1..65535)
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
          "A unique arbitrary index for this vromDataSourceEntry."
      ::= { vcmonDataSourceEntry 1 }

      vcmonDataSourceSrcIndex  OBJECT-TYPE
        SYNTAX      InterfaceIndex
        MAX-ACCESS  read-create



Expires July 2000             Steinberger                      [Page 11]

Internet Draft                 VCMON MIB                 January 6, 2000


        STATUS      current
        DESCRIPTION
          "The ifIndex that is to be extended by the virtual interface.
           Valid dataSource ifIndices can be found in vcmonIfMapTable.

           This object MAY NOT be modified if the associated
           vcmonDataSourceStatus is equal to active(1)."
      ::= { vcmonDataSourceEntry 2 }

      vcmonDataSourceSrcExtension  OBJECT-TYPE
        SYNTAX      Integer32
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
          "The extension to the ifIndex that will be used to generate
           the virtual interface.  Valid extensions can be found base
           on the ifIndex in vcmonIfMapTable.

           This object MAY NOT be modified if the associated
           vcmonDataSourceStatus is equal to active(1)."
      ::= { vcmonDataSourceEntry 3 }

      vcmonDataSourceVirtualIndex  OBJECT-TYPE
        SYNTAX      InterfaceIndex
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
          "This object contains the ifIndex value of the ifEntry
           associated with this virtual interface.  Either the agent
           or the manager MUST create 'propVirtual(53)' ifEntries for
           each virtual dataSource that is desired.

           This object MAY NOT be modified if the associated
           vcmonDataSourceStatus is equal to active(1)."
      ::= { vcmonDataSourceEntry 4 }

      vcmonDataSourceCreateTime  OBJECT-TYPE
        SYNTAX      LastCreateTime
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
          "The value of sysUpTime when the vcmonDataSourceStatus for
           this row was last transitioned to active(1)."
      ::= { vcmonDataSourceEntry 5 }

      vcmonDataSourceType  OBJECT-TYPE
        SYNTAX      INTEGER {
                    automatic(1),



Expires July 2000             Steinberger                      [Page 12]

Internet Draft                 VCMON MIB                 January 6, 2000


                    manual(2)
                    }
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
          "The agent will set this value to automatic(1) if the row was
           added automatically by the agent.  Otherwise, the value
           will be set to manual(2)."
      ::= { vcmonDataSourceEntry 6 }

      vcmonDataSourceDirection  OBJECT-TYPE
        SYNTAX      INTEGER {
                    transmit(1),
                    receive(2),
                    both(3)
                    }
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
          "This object is used to limit the type of information the
           virtual dataSource monitors.  When set to transmit, only
           data transmitted on the dataSource will be monitored.
           When set to receive, only data received on the
           dataSource will be monitored.  When set to both, all
           valid data will be monitored.

           This object MAY NOT be modified if the associated
           vcmonDataSourceStatus is equal to active(1)."
      ::= { vcmonDataSourceEntry 7 }

      vcmonDataSourceOwner  OBJECT-TYPE
        SYNTAX      OwnerString
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
          "Administratively assigned name of the owner of this entry.
           It usually defines the entity that created this entry and
           is therefore using the resources assigned to it, though
           there is no enforcement mechanism, nor assurance that rows
           created are ever used."
      ::= { vcmonDataSourceEntry 8 }

      vcmonDataSourceStatus  OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
          "The status of this row.  The agent will not allow this row



Expires July 2000             Steinberger                      [Page 13]

Internet Draft                 VCMON MIB                 January 6, 2000


           to be set to active unless all settable fields are valid.
           Rows with vcmonDataSourceType set to automatic MAY NOT
           be altered by a manager."
      ::= { vcmonDataSourceEntry 9 }

   -- Conformance Macros

   vcmonMIBCompliances     OBJECT IDENTIFIER ::= { rmonConformance n }
   vcmonMIBGroups          OBJECT IDENTIFIER ::= { rmonConformance n+1 }

   vcmonMIBCompliance       MODULE-COMPLIANCE
        STATUS      current
        DESCRIPTION
          "Describes the requirements for full conformance with the
           virtualRMON MIB"
        MODULE -- this module
        MANDATORY-GROUPS                 {vcmonIfMapGroup,
                                          vcmonDataSourcesGroup}

   ::= { vcmonMIBCompliances 1 }

   vcmonIfMapGroup     OBJECT-GROUP
        OBJECTS          { vcmonIfMapMACCapable }
        STATUS      current
        DESCRIPTION
        "Defines the objects that describe the extensible interfaces."
   ::= { vcmonMIBGroups 1 }

   vcmonDataSourcesGroup      OBJECT-GROUP
        OBJECTS         { vcmonDataSourceSrcIndex,
                          vcmonDataSourceSrcExtension,
                          vcmonDataSourceVirtualIndex,
                          vcmonDataSourceCreateTime,
                          vcmonDataSourceType,
                          vcmonDataSourceDirection,
                          vcmonDataSourceOwner,
                          vcmonDataSourceStatus}
        STATUS      current
        DESCRIPTION
        "Defines the virtual dataSource group."
   ::= { vcmonMIBGroups 2 }
END

6.  Acknowledgments

   The format and text of this document is based on the existing RMON
   [17], RMON 2 [18] and SMON [22] documents.




Expires July 2000             Steinberger                      [Page 14]

Internet Draft                 VCMON MIB                 January 6, 2000


   Funding for the RFC Editor function is currently provided by the
   Internet Society.

















































Expires July 2000             Steinberger                      [Page 15]

Internet Draft                 VCMON MIB                 January 6, 2000


7.  References


   [1] Harrington, D., Presuhn, R., and B. Wijnen, "An Architecture for
       Describing SNMP Management Frameworks", RFC 2571, Cabletron
       Systems, Inc., BMC Software, Inc., IBM T. J. Watson Research,
       April 1999.

   [2] Rose, M., and K. McCloghrie, "Structure and Identification of
       Management Information for TCP/IP-based Internets", RFC 1155, STD
       16, Performance Systems International, Hughes LAN Systems, May
       1990.

   [3] Rose, M., and K. McCloghrie, "Concise MIB Definitions", RFC 1212,
       STD 16, Performance Systems International, Hughes LAN Systems,
       March 1991.

   [4] M. Rose, "A Convention for Defining Traps for use with the SNMP",
       RFC 1215, Performance Systems International, March 1991.

   [5] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose,
       M., and S. Waldbusser, "Structure of Management Information
       Version 2 (SMIv2)", RFC 2578, STD 58, Cisco Systems, SNMPinfo, TU
       Braunschweig, SNMP Research, First Virtual Holdings,
       International Network Services, April 1999.

   [6] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose,
       M., and S. Waldbusser, "Textual Conventions for SMIv2", RFC 2579,
       STD 58, Cisco Systems, SNMPinfo, TU Braunschweig, SNMP Research,
       First Virtual Holdings, International Network Services, April
       1999.

   [7] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose,
       M., and S. Waldbusser, "Conformance Statements for SMIv2", RFC
       2580, STD 58, Cisco Systems, SNMPinfo, TU Braunschweig, SNMP
       Research, First Virtual Holdings, International Network Services,
       April 1999.

   [8] Case, J., Fedor, M., Schoffstall, M., and J. Davin, "Simple
       Network Management Protocol", RFC 1157, STD 15, SNMP Research,
       Performance Systems International, Performance Systems
       International, MIT Laboratory for Computer Science, May 1990.

   [9] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
       "Introduction to Community-based SNMPv2", RFC 1901, SNMP
       Research, Inc., Cisco Systems, Inc., Dover Beach Consulting,
       Inc., International Network Services, January 1996.




Expires July 2000             Steinberger                      [Page 16]

Internet Draft                 VCMON MIB                 January 6, 2000


   [10]Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Transport
       Mappings for Version 2 of the Simple Network Management Protocol
       (SNMPv2)", RFC 1906, SNMP Research, Inc., Cisco Systems, Inc.,
       Dover Beach Consulting, Inc., International Network Services,
       January 1996.

   [11]Case, J., Harrington D., Presuhn R., and B. Wijnen, "Message
       Processing and Dispatching for the Simple Network Management
       Protocol (SNMP)", RFC 2572, SNMP Research, Inc., Cabletron
       Systems, Inc., BMC Software, Inc., IBM T. J. Watson Research,
       April 1999.

   [12]Blumenthal, U., and B. Wijnen, "User-based Security Model (USM)
       for version 3 of the Simple Network Management Protocol
       (SNMPv3)", RFC 2574, IBM T. J. Watson Research, April 1999.

   [13]Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Protocol
       Operations for Version 2 of the Simple Network Management
       Protocol (SNMPv2)", RFC 1905, SNMP Research, Inc., Cisco Systems,
       Inc., Dover Beach Consulting, Inc., International Network
       Services, January 1996.

   [14]Levi, D., Meyer, P., and B. Stewart, "SNMPv3 Applications", RFC
       2573, SNMP Research, Inc., Secure Computing Corporation, Cisco
       Systems, April 1999.

   [15]Wijnen, B., Presuhn, R., and K. McCloghrie, "View-based Access
       Control Model (VACM) for the Simple Network Management Protocol
       (SNMP)", RFC 2575, IBM T. J. Watson Research, BMC Software, Inc.,
       Cisco Systems, Inc., April 1999.

   [16]Case, J., Mundy, R., Partain, D., and B. Stewart, "Introduction
       to Version 3 of the Internet-standard Network Management
       Framework", RFC 2570, SNMP Research, Inc., TIS Labs at Network
       Associates, Inc., Ericsson, Cisco Systems, April 1999.

   [17]Waldbusser, S., "Remote Network Monitoring Management Information
       Base", RFC 1757, February 1995.

   [18]Waldbusser, S., "Remote Network Monitoring Management Information
       Base Version 2 using SMIv2", RFC 2021, January 1997.

   [19]McCloghrie, K., and F. Kastenholz, "The Interfaces Group MIB
       using SMIv2", RFC 2233, November 1997.

   [20]Bradner, S., "Key words for use in RFCs to Indicate Requirement
       Levels", BCP 14, RFC 2119, March 1997.




Expires July 2000             Steinberger                      [Page 17]

Internet Draft                 VCMON MIB                 January 6, 2000


   [21]McCloghrie, K. and M. Rose, "Management Information Base for
       Network Mangement of TCP/IP-based internets: MIB-II", STD 17, RFC
       1213, March 1991.

   [22]Waterson, R., Lahaye, B., Romascanu, D. and S. Waldbusser,
       "Remote Network Monitoring MIB Extensions for Switched Networks",
       RFC 2613, June 1999.



8.  Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   intellectual propert or other rights that might be claimed to pertain
   to the implementation or use of the technology described in this
   document or the extent to which any license under such rights might
   or might not be available; neither does it represent that it has made
   any effort to identify any such rights.  Information on the IETF's
   procedures with respect to rights in standards-track and standards-
   related documentation can be found in BCP-11.  Copies of claims of
   rights made available for publication and any assurances of licenses
   to be made available, or the result of an attempt made to obtain a
   general license or permission for the use of such proprietary rights
   by implementors or users of this specification can be obtained from
   the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard.  Please address the information to the IETF Executive
   Director.

9.  Security Considerations

   There are a number of management objects defined in this MIB that
   have a MAX-ACCESS clause of read-write and/or read-create.  Such
   objects may be considered sensitive or vulnerable in some network
   environments.  The support for SET operations in a non-secure
   environment without proper protection can have a negative effect on
   network operations.

   SNMPv1 by itself is not a secure environment.  Even if the network
   itself is secure (for example by using IPSec), even then, there is no
   control as to who on the secure network is allowed to access and
   GET/SET (read/change/create/delete) the objects in this MIB.

   It is recommended that the implementers consider the security
   features as provided by the SNMPv3 framework.  Specifically, the use



Expires July 2000             Steinberger                      [Page 18]

Internet Draft                 VCMON MIB                 January 6, 2000


   of the User-based Security Model RFC 2274 [12] and the View-based
   Access Control Model RFC 2275 [15] is recommended.

   It is then a customer/user responsibility to ensure that the SNMP
   entity giving access to an instance of this MIB, is properly
   configured to give access to the objects only to those principals
   (users) that have legitimate rights to indeed GET or SET
   (change/create/delete) them.

10.  Author's Address

   Robert Steinberger
   Paradyne Networks
   Mailstop: LG-132
   8545 126th Avenue North
   Largo, FL USA 33773

   Phone: 1(727)530-2395

   Email: rsteinberger@paradyne.com

11.  Copyright Section

   Copyright (C) The Internet Society (2000). All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the  purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.



Expires July 2000             Steinberger                      [Page 19]
