



Network Working Group                                         A. Bierman
Internet-Draft                                                 YumaWorks
Obsoletes: rfc7895 (if approved)                            M. Bjorklund
Intended status: Standards Track                          Tail-f Systems
Expires: July 21, 2018                                  J. Schoenwaelder
                                                       Jacobs University
                                                               K. Watsen
                                                        Juniper Networks
                                                               R. Wilton
                                                           Cisco Systems
                                                        January 17, 2018


                              YANG Library
                    draft-ietf-netconf-rfc7895bis-03

Abstract

   This document describes a YANG library that provides information
   about all the YANG modules and datastores used by a network
   management server (e.g., a Network Configuration Protocol (NETCONF)
   server).  Simple caching mechanisms are provided to allow clients to
   minimize retrieval of this information.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on July 21, 2018.

Copyright Notice

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents



Bierman, et al.           Expires July 21, 2018                 [Page 1]

Internet-Draft                YANG Library                  January 2018


   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   3
     1.2.  Tree Diagrams . . . . . . . . . . . . . . . . . . . . . .   4
     1.3.  Motivation for rfc7895bis . . . . . . . . . . . . . . . .   4
     1.4.  Summary of Changes from RFC 7895  . . . . . . . . . . . .   6
   2.  YANG Library  . . . . . . . . . . . . . . . . . . . . . . . .   6
     2.1.  yang-library  . . . . . . . . . . . . . . . . . . . . . .   7
       2.1.1.  yang-library/checksum . . . . . . . . . . . . . . . .   7
       2.1.2.  yang-library/datastore  . . . . . . . . . . . . . . .   8
       2.1.3.  yang-library/schema . . . . . . . . . . . . . . . . .   8
       2.1.4.  yang-library/module-set . . . . . . . . . . . . . . .   8
       2.1.5.  yang-library/module-set/module  . . . . . . . . . . .   9
       2.1.6.  yang-library/module-set/import-only-module  . . . . .   9
     2.2.  YANG Library Module . . . . . . . . . . . . . . . . . . .   9
   3.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  21
     3.1.  YANG Module Registry  . . . . . . . . . . . . . . . . . .  21
   4.  Security Considerations . . . . . . . . . . . . . . . . . . .  22
   5.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  22
   6.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  23
     6.1.  Normative References  . . . . . . . . . . . . . . . . . .  23
     6.2.  Informative References  . . . . . . . . . . . . . . . . .  24
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  24

1.  Introduction

   There is a need for standard mechanisms to provide the operational
   state of a network management server.  This includes, for instance,
   identifying the YANG modules and datastores that are in use by a
   server and how they relate to each other.

   This document defines a YANG module that can be used to provide this
   informaton, in a way that is compatible with the NMDA
   [I-D.ietf-netmod-revised-datastores], but that is also backwards
   compatible with the "YANG Module Library" YANG module defined in
   [RFC7895].

   If a large number of YANG modules are utilized by the server, then
   the YANG library contents needed can be relatively large.  This



Bierman, et al.           Expires July 21, 2018                 [Page 2]

Internet-Draft                YANG Library                  January 2018


   information changes very infrequently, so it is important that
   clients be able to cache the YANG library contents and easily
   identify whether their cache is out of date.

   YANG library information can be different on every server and can
   change at runtime or across a server reboot.

   If the server implements multiple protocols to access the YANG-
   defined data, each such protocol has its own conceptual instantiation
   of the YANG library.

   The following information is needed by a client application (for each
   YANG module in the library) to fully utilize the YANG data modeling
   language:

   o  identifier: a unique identifier for the module that includes the
      module's name, revision, submodules, features, and deviations.

   o  name: The name of the YANG module.

   o  revision: Each YANG module and submodule within the library SHOULD
      have a revision.  This is derived from the most recent revision
      statement within the module or submodule.

   o  submodule list: The name, and if defined, revision of each
      submodule used by the module MUST be identified.

   o  feature list: The name of each YANG feature supported by the
      server, in a given datastore schema, MUST be identified.

   o  deviation list: The name of each YANG module used for deviation
      statements, in a given datastore schema, MUST be identified.

   The following information is needed by a client application (for each
   datastore supported by the server) to fully access all the YANG-
   modelled data available on the server:

   o  identity: the YANG identity for the datastore.

   o  modules: modules supported by the datastore, including any
      features and deviations.

1.1.  Terminology

   The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14, [RFC2119].



Bierman, et al.           Expires July 21, 2018                 [Page 3]

Internet-Draft                YANG Library                  January 2018


   The following terms are defined in [RFC7950]:

   o  module

   o  submodule

   The following terms are defined in
   [I-D.ietf-netmod-revised-datastores]:

   o  conventional configuration datastore

   o  operational state datastore

   o  operational state

   o  datastore schema

   o  client

   o  server

1.2.  Tree Diagrams

   Tree diagrams used in this document follow the notation defined in
   [I-D.ietf-netmod-yang-tree-diagrams].

1.3.  Motivation for rfc7895bis

   RFC Ed.: delete this section, including this note, at time of
   publication.

   All NETCONF servers supporting YANG 1.1 [RFC7950] are required to
   support YANG Library (see Section 5.6.4 of RFC 7950).  Similarly, all
   RESTCONF servers are required to support YANG Library (see Section 10
   of RFC 8040).  These requirements are independent of if the server
   supports NMDA or not.

   RFC 7895 has a mandatory to implement "modules-state" tree that a
   server uses to advertise all the modules it supports.  However, this
   module was designed assuming the all modules would be in all
   datastores, and with the same number of features and deviations.
   However, this is not the case with NMDA-compatible servers that may
   have some modules that only appear in <operational> (e.g., ietf-
   network-topo) or only also appear in a dynamic datastore (e.g., i2rs-
   ephemeral-rib).  It is also possible that a server only implements a
   module in <running>, as it hasn't yet coded support for returning the
   module's opstate yet.  Presumably, an NMDA-supporting server would




Bierman, et al.           Expires July 21, 2018                 [Page 4]

Internet-Draft                YANG Library                  January 2018


   return all modules implemented in every datastore, but this would be
   misleading to existing clients and unhelpful to NMDA-aware clients.

   In the end, it appears that the "modules-state" node should be for
   non-NMDA aware clients.  For backwards compatability, an NMDA-
   supporting server SHOULD populate "modules-state" in a backwards-
   compatible manner.  The new "yang-library" node would be ignored by
   legacy clients, while providing all the data needed for NMDA-aware
   clients, which would themselves ignore the "modules-state" tree.

   Design objectives:

   1.  As efficient as possible for a client to consume.  Since the size
       of the yang library can be quite large, it should be possible for
       clients to cache the yang library information.

   2.  A dynamic configuration datastore must be able to implement a
       module or feature that is not implemented in the conventional
       datastores.

   3.  It must be possible to NOT implement a module or feature in
       <operational>, even if it is implemented in some other datastore.
       This is required for transition purposes; a server that wants to
       implement <operational> should not have to implement all modules
       at once.

   4.  A given module can only be implemented in one revision in all
       datastores.  If a module is implemented in more than one
       datastores, the same revision is implemented in all these
       datastores.

   5.  Multiple revisions can be used for import, if import-by revision
       is used.

   6.  Nice to have: make it possible to be used by schema mount

   The solution presented in this document is further motivated by the
   following desires:

   o  leverage Section 5.6.4 of RFC 7950 and Section 10 of RFC 8040.

   o  indicate which modules are supported by each datastore

   o  enable the features and deviations to vary by datastore

   o  structure extensible to support schema-mount

   o  provide a top-level container for all server metadata



Bierman, et al.           Expires July 21, 2018                 [Page 5]

Internet-Draft                YANG Library                  January 2018


1.4.  Summary of Changes from RFC 7895

   This document updates [RFC7895] in the following ways:

   o  Renames document title from "YANG Module Library" to "YANG
      Library".

   o  Adds a new top-level "yang-library" container to hold many types
      of server metadata: modules supported, datastores supported,
      relationships between datastores and modules, etc.

   o  Adds a set of new groupings as replacements for the deprecated
      "module-list" grouping.

   o  Adds a "yang-library-update" notification as a replacement for the
      deprecated "yang-library-change" notification.

   o  Deprecates the "modules-state" tree.

   o  Deprecates the "module-list" grouping.

   o  Deprecates the "yang-library-change" notification.

2.  YANG Library

   The "ietf-yang-library" module provides information about the modules
   and datastores supported by a server.  This module is defined using
   YANG version 1.1, but it supports the description of YANG modules
   written in any revision of YANG.

   All data nodes in "ietf-yang-library" are "config false", and thus
   accessible in the operational state datastore.

   Following is the YANG Tree Diagram for the "ietf-yang-library"
   module, excluding the deprecated "modules-state" tree:
















Bierman, et al.           Expires July 21, 2018                 [Page 6]

Internet-Draft                YANG Library                  January 2018


   module: ietf-yang-library
     +--ro yang-library
        +--ro module-set* [name]
        |  +--ro name                  string
        |  +--ro checksum              string
        |  +--ro module* [name]
        |  |  +--ro name         yang:yang-identifier
        |  |  +--ro revision?    revision-identifier
        |  |  +--ro namespace    inet:uri
        |  |  +--ro location*    inet:uri
        |  |  +--ro submodule* [name]
        |  |  |  +--ro name        yang:yang-identifier
        |  |  |  +--ro revision?   revision-identifier
        |  |  |  +--ro location*   inet:uri
        |  |  +--ro feature* [name]
        |  |  |  +--ro name    yang:yang-identifier
        |  |  +--ro deviation* [module]
        |  |     +--ro module    -> ../../name
        |  +--ro import-only-module* [name revision]
        |     +--ro name         yang:yang-identifier
        |     +--ro revision     union
        |     +--ro namespace    inet:uri
        |     +--ro location*    inet:uri
        |     +--ro submodule* [name]
        |        +--ro name        yang:yang-identifier
        |        +--ro revision?   revision-identifier
        |        +--ro location*   inet:uri
        +--ro schema* [name]
        |  +--ro name          string
        |  +--ro checksum      string
        |  +--ro module-set*   -> ../../module-set/name
        +--ro datastore* [name]
        |  +--ro name      identityref
        |  +--ro schema    -> ../../schema/name
        +--ro checksum      string

     notifications:
       +---n yang-library-update

2.1.  yang-library

   This container holds all of the server's metadata.

2.1.1.  yang-library/checksum

   This mandatory leaf contains a unique implementation-specific
   identifier representing the current information in the YANG library
   on a specific server.  The value of this leaf MUST change whenever



Bierman, et al.           Expires July 21, 2018                 [Page 7]

Internet-Draft                YANG Library                  January 2018


   the the information in the YANG library changes.  There is no
   requirement that the same information always results in the same
   "checksum" value.

   This leaf allows a client to fetch all schema information once, cache
   it, and only refetch it if the value of this leaf has been changed.

   If the value of this leaf changes, the server also generates a
   "yang-library-update" notification.

   Note that for a NETCONF server that implements YANG 1.1 [RFC7950], a
   change of the "checksum" value results in a new value for the :yang-
   library capability defined in [RFC7950].  Thus, if such a server
   implements NETCONF notifications [RFC5277], and the notification
   "netconf-capability-change" [RFC6470], a "netconf-capability-change"
   notification is generated whenever the "checksum" changes.

2.1.2.  yang-library/datastore

   This list contains one entry for each datastore supported by the
   server, and identifies the datastore schema associated with a
   datastore via a reference to an entry in the "schema" list.  Each
   supported conventional configuration datastore has a separate entry.

2.1.3.  yang-library/schema

   An entry in the "schema" list represents the datastore schema that is
   used by one or more datastores.

   This list contains one entry for each schema in use by the server
   (e.g., presented by a datastore).

   All conventional configuration datastores and the operational state
   datastore use the same "schema" entry.

   A dynamic configuration datastore may use a different datastore
   schema from the conventional configuration datastores, and hence may
   require a separate "schema" entry.

   A schema has a leaf-list with references to entries in the
   "module-set" list.  The schema consists of the sum of all modules in
   all referenced module sets.

2.1.4.  yang-library/module-set







Bierman, et al.           Expires July 21, 2018                 [Page 8]

Internet-Draft                YANG Library                  January 2018


2.1.5.  yang-library/module-set/module

2.1.6.  yang-library/module-set/import-only-module

2.2.  YANG Library Module

   The "ietf-yang-library" module defines monitoring information for the
   YANG modules used by a server.

   The modules "ietf-yang-types" and "ietf-inet-types" from [RFC6991]
   and the module "ietf-datastores" from
   [I-D.ietf-netmod-revised-datastores] are used by this module for some
   type definitions.

   RFC Ed.: update the date below with the date of RFC publication and
   remove this note.

   <CODE BEGINS> file "ietf-yang-library@2018-01-17.yang"

   module ietf-yang-library {
     yang-version 1.1;
     namespace "urn:ietf:params:xml:ns:yang:ietf-yang-library";
     prefix "yanglib";

     import ietf-yang-types {
       prefix yang;
       reference "RFC 6991: Common YANG Data Types.";
     }
     import ietf-inet-types {
       prefix inet;
       reference "RFC 6991: Common YANG Data Types.";
     }
     import ietf-datastores {
       prefix ds;
       reference "I-D.ietf-revised-datastores:
                  Network Management Datastore Architecture.";
     }

     organization
       "IETF NETCONF (Network Configuration) Working Group";

     contact
       "WG Web:   <http://tools.ietf.org/wg/netconf/>
        WG List:  <mailto:netconf@ietf.org>

        Author:   Andy Bierman
                  <mailto:andy@yumaworks.com>




Bierman, et al.           Expires July 21, 2018                 [Page 9]

Internet-Draft                YANG Library                  January 2018


        Author:   Martin Bjorklund
                  <mailto:mbj@tail-f.com>

        Author:   Juergen Schoenwaelder
                  <mailto:j.schoenwaelder@jacobs-university.de>

        Author:   Kent Watsen
                  <mailto:kwatsen@juniper.net>

        Author:   Rob Wilton
                  <rwilton@cisco.com>";

     description
       "This module contains information about the YANG server instance,
        including the modules and datastores the server supports, and
        which modules are present in which datastores.

        Copyright (c) 2018 IETF Trust and the persons identified as
        authors of the code.  All rights reserved.

        Redistribution and use in source and binary forms, with or
        without modification, is permitted pursuant to, and subject
        to the license terms contained in, the Simplified BSD License
        set forth in Section 4.c of the IETF Trust's Legal Provisions
        Relating to IETF Documents
        (http://trustee.ietf.org/license-info).

        This version of this YANG module is part of RFC XXXX; see
        the RFC itself for full legal notices.";

     // RFC Ed.: update the date below with the date of RFC publication
     // and remove this note.
     // RFC Ed.: replace XXXX with actual RFC number and remove this
     // note.
     revision 2018-01-17 {
       description
         "Added support for multiple datastores.";
       reference
         "RFC XXXX: YANG Library.";
     }
     revision 2016-04-09 {
       description
         "Initial revision.";
       reference
         "RFC 7895: YANG Module Library.";
     }

     /*



Bierman, et al.           Expires July 21, 2018                [Page 10]

Internet-Draft                YANG Library                  January 2018


      * Typedefs
      */

     typedef revision-identifier {
       type string {
         pattern '\d{4}-\d{2}-\d{2}';
       }
       description
         "Represents a specific date in YYYY-MM-DD format.";
     }

     /*
      * Groupings
      */

     grouping module-identification-leafs {
       description
         "Parameters for identifying YANG modules and submodules.";

       leaf name {
         type yang:yang-identifier;
         mandatory true;
         description
           "The YANG module or submodule name.";
       }
       leaf revision {
         type revision-identifier;
         description
           "The YANG module or submodule revision date.  If no revision
            statement is present in the YANG module or submodule, this
            leaf is not instantiated.";
       }
     }

     grouping location-leaf-list {
       description
         "Common location leaf list parameter for modules and
          submodules.";

       leaf-list location {
         type inet:uri;
         description
           "Contains a URL that represents the YANG schema
            resource for this module or submodule.

            This leaf will only be present if there is a URL
            available for retrieval of the schema for this entry.";
       }



Bierman, et al.           Expires July 21, 2018                [Page 11]

Internet-Draft                YANG Library                  January 2018


     }

     grouping implementation-parameters {
       description
         "Parameters for describing the implementation of a module.";

       list feature {
         key "name";
         description
           "List of YANG feature names from this module that are
            supported by the server, regardless whether they are defined
            in the module or any included submodule.";
         leaf name {
           type yang:yang-identifier;
           description
             "A feature supported by the server.";
         }
       }
       list deviation {
         key "module";
         description
           "List of YANG deviation modules used by this server to modify
            the conformance of the module associated with this entry.
            Note that the same module can be used for deviations for
            multiple modules, so the same entry MAY appear within
            multiple 'module' entries.";

         leaf module {
           type leafref {
             path "../../name";
           }
           description
             "A module that deviates the module associated with this
              entry.";
         }
       }
     }

     grouping module-set-parameters {
       description
         "A set of parameters that describe a module set.";

       leaf name {
         type string;
         description
           "An arbitrary name of the module set.";
       }
       leaf checksum {



Bierman, et al.           Expires July 21, 2018                [Page 12]

Internet-Draft                YANG Library                  January 2018


         type string;
         config false;
         mandatory true;
         description
           "A server-generated checksum of the contents of the module
            set.  The server MUST change the value of this leaf if the
            information represented by the module set, except
            'checksum', has changed.";
       }
       list module {
         key "name";
         description
           "An entry in this list represents a module implemented by the
            server with a particular set of supported features and
            deviations.

            The server implements one or more protocol-accessible
            objects defined in the YANG module identified in this entry.
            This includes deviation statements defined in the module.";

         uses module-identification-leafs;

         leaf namespace {
           type inet:uri;
           mandatory true;
           description
             "The XML namespace identifier for this module.";
         }

         uses location-leaf-list;

         list submodule {
           key "name";
           description
             "Each entry represents one submodule within the
              parent module.";
           uses module-identification-leafs;
           uses location-leaf-list;
         }

         uses implementation-parameters;
       }
       list import-only-module {
         key "name revision";
         description
           "An entry in this list indicates that the server imports
            reusable definitions from the specified revision of the
            module, but does not implement any protocol accessible



Bierman, et al.           Expires July 21, 2018                [Page 13]

Internet-Draft                YANG Library                  January 2018


            objects from this revision.

            Multiple entries for the same module name MAY exist.  This
            can occur if multiple modules import the same module, but
            specify different revision-dates in the import statements.";

         leaf name {
           type yang:yang-identifier;
           description
             "The YANG module name.";
         }
         leaf revision {
           type union {
             type revision-identifier;
             type string {
               length 0;
             }
           }
           description
             "The YANG module or revision date.
              A zero-length string is used if no revision statement
              is present in the YANG module.";
         }
         leaf namespace {
           type inet:uri;
           mandatory true;
           description
             "The XML namespace identifier for this module.";
         }

         uses location-leaf-list;

         list submodule {
           key "name";
           description
             "Each entry represents one submodule within the
              parent module.";

           uses module-identification-leafs;
           uses location-leaf-list;
         }
       }
     }

     grouping yang-library-parameters {
       description
         "The YANG library data structure is represented as a grouping
          so it can be reused in configuration or another monitoring



Bierman, et al.           Expires July 21, 2018                [Page 14]

Internet-Draft                YANG Library                  January 2018


          data structure.";

       list module-set {
         key name;
         description
           "A set of modules that may be used by one or more schemas.";

         uses module-set-parameters;
       }

       list schema {
         key "name";
         description
           "A datastore schema that may be used by one or more
            datastores.";

         leaf name {
           type string;
           description
             "An arbitrary name of the schema.";
         }
         leaf checksum {
           type string;
           config false;
           mandatory true;
           description
             "A server-generated checksum of the contents of the schema.
              The server MUST change the value of this leaf if the
              information represented by the schema, except 'checksum',
              has changed.";
         }
         leaf-list module-set {
           type leafref {
             path "../../module-set/name";
           }
           description
             "A set of module-sets that are included in this schema.";
         }
       }

       list datastore {
         key "name";
         description
           "A datastore supported by this server.

            Each datastore indicates which schema it supports.

            The server MUST instantiate one entry in this list per



Bierman, et al.           Expires July 21, 2018                [Page 15]

Internet-Draft                YANG Library                  January 2018


            specific datastore it supports.

            Each datstore entry with the same datastore schema SHOULD
            reference the same schema.";

         leaf name {
           type identityref {
             base ds:datastore;
           }
           description
             "The identity of the datastore.";
         }
         leaf schema {
           type leafref {
             path "../../schema/name";
           }
           mandatory true;

           description
             "A reference to the schema supported by this datastore.";
         }
       }
     }

     /*
      * Top-level container
      */

     container yang-library {
       config false;
       description
         "Container providing all the YANG meta information the
          server possesses.";

       uses yang-library-parameters;

       leaf checksum {
         type string;
         mandatory true;
         description
           "A server-generated checksum of the contents of the
            'yang-library' tree.  The server MUST change the value of
            this leaf if the information represented by the
            'yang-library' tree, except 'yang-library/checksum', has
            changed.";
       }
     }




Bierman, et al.           Expires July 21, 2018                [Page 16]

Internet-Draft                YANG Library                  January 2018


     /*
      * Notifications
      */

     notification yang-library-update {
       description
         "Generated when any YANG library information on the
          server has changed.";
     }

     /*
      * Legacy groupings
      */

     grouping module-list {
       status deprecated;
       description
         "The module data structure is represented as a grouping
          so it can be reused in configuration or another monitoring
          data structure.";

       grouping common-leafs {
         status deprecated;
         description
           "Common parameters for YANG modules and submodules.";

         leaf name {
           type yang:yang-identifier;
           status deprecated;
           description
             "The YANG module or submodule name.";
         }
         leaf revision {
           type union {
             type revision-identifier;
             type string {
               length 0;
             }
           }
           status deprecated;
           description
             "The YANG module or submodule revision date.
              A zero-length string is used if no revision statement
              is present in the YANG module or submodule.";
         }
       }
       grouping schema-leaf {
         status deprecated;



Bierman, et al.           Expires July 21, 2018                [Page 17]

Internet-Draft                YANG Library                  January 2018


         description
           "Common schema leaf parameter for modules and submodules.";
         leaf schema {
           type inet:uri;
           description
             "Contains a URL that represents the YANG schema
              resource for this module or submodule.

              This leaf will only be present if there is a URL
              available for retrieval of the schema for this entry.";
         }
       }

       list module {
         key "name revision";
         status deprecated;
         description
           "Each entry represents one revision of one module
            currently supported by the server.";

         uses common-leafs {
           status deprecated;
         }
         uses schema-leaf {
           status deprecated;
         }

         leaf namespace {
           type inet:uri;
           mandatory true;
           status deprecated;
           description
             "The XML namespace identifier for this module.";
         }
         leaf-list feature {
           type yang:yang-identifier;
           status deprecated;
           description
             "List of YANG feature names from this module that are
              supported by the server, regardless whether they are
              defined in the module or any included submodule.";
         }
         list deviation {
           key "name revision";
           status deprecated;
           description
             "List of YANG deviation module names and revisions
              used by this server to modify the conformance of



Bierman, et al.           Expires July 21, 2018                [Page 18]

Internet-Draft                YANG Library                  January 2018


              the module associated with this entry.  Note that
              the same module can be used for deviations for
              multiple modules, so the same entry MAY appear
              within multiple 'module' entries.

              The deviation module MUST be present in the 'module'
              list, with the same name and revision values.
              The 'conformance-type' value will be 'implement' for
              the deviation module.";
           uses common-leafs {
             status deprecated;
           }
         }
         leaf conformance-type {
           type enumeration {
             enum implement {
               description
                 "Indicates that the server implements one or more
                  protocol-accessible objects defined in the YANG module
                  identified in this entry.  This includes deviation
                  statements defined in the module.

                  For YANG version 1.1 modules, there is at most one
                  module entry with conformance type 'implement' for a
                  particular module name, since YANG 1.1 requires that
                  at most one revision of a module is implemented.

                  For YANG version 1 modules, there SHOULD NOT be more
                  than one module entry for a particular module name.";
             }
             enum import {
               description
                 "Indicates that the server imports reusable definitions
                  from the specified revision of the module, but does
                  not implement any protocol accessible objects from
                  this revision.

                  Multiple module entries for the same module name MAY
                  exist. This can occur if multiple modules import the
                  same module, but specify different revision-dates in
                  the import statements.";
             }
           }
           mandatory true;
           status deprecated;
           description
             "Indicates the type of conformance the server is claiming
              for the YANG module identified by this entry.";



Bierman, et al.           Expires July 21, 2018                [Page 19]

Internet-Draft                YANG Library                  January 2018


         }
         list submodule {
           key "name revision";
           status deprecated;
           description
             "Each entry represents one submodule within the
              parent module.";
           uses common-leafs {
             status deprecated;
           }
           uses schema-leaf {
             status deprecated;
           }
         }
       }
     }

     /*
      * Legacy operational state data nodes
      */

     container modules-state {
       config false;
       status deprecated;
       description
         "Contains YANG module monitoring information.";

       leaf module-set-id {
         type string;
         mandatory true;
         status deprecated;
         description
           "Contains a server-specific identifier representing
            the current set of modules and submodules.  The
            server MUST change the value of this leaf if the
            information represented by the 'module' list instances
            has changed.";
       }

       uses module-list {
         status deprecated;
       }
     }

     /*
      * Legacy notifications
      */




Bierman, et al.           Expires July 21, 2018                [Page 20]

Internet-Draft                YANG Library                  January 2018


     notification yang-library-change {
       status deprecated;
       description
         "Generated when the set of modules and submodules supported
          by the server has changed.";
       leaf module-set-id {
         type leafref {
           path "/yanglib:modules-state/yanglib:module-set-id";
         }
         mandatory true;
         status deprecated;
         description
           "Contains the module-set-id value representing the
            set of modules and submodules supported at the server
            at the time the notification is generated.";
       }
     }

   }

   <CODE ENDS>

3.  IANA Considerations

3.1.  YANG Module Registry

   RFC 7895 previously registered one URI in the IETF XML registry
   [RFC3688].  Following the format in RFC 3688, the following
   registration was made:

        URI: urn:ietf:params:xml:ns:yang:ietf-yang-library
        Registrant Contact: The NETCONF WG of the IETF.
        XML: N/A, the requested URI is an XML namespace.

   This document takes over this registration entry made by RFC 7895.

   RFC 7895 previously registered one YANG module in the "YANG Module
   Names" registry [RFC6020] as follows:

     name:         ietf-yang-library
     namespace:    urn:ietf:params:xml:ns:yang:ietf-yang-library
     prefix:       yanglib
     reference:    RFC 7895

   This document takes over this registration entry made by RFC 7895.






Bierman, et al.           Expires July 21, 2018                [Page 21]

Internet-Draft                YANG Library                  January 2018


4.  Security Considerations

   The YANG module defined in this document is designed to be accessed
   via network management protocols such as NETCONF [RFC6241] or
   RESTCONF [RFC8040].  The lowest NETCONF layer is the secure transport
   layer, and the mandatory-to-implement secure transport is Secure
   Shell (SSH) [RFC6242].  The lowest RESTCONF layer is HTTPS, and the
   mandatory-to-implement secure transport is TLS [RFC5246].

   The NETCONF access control model [RFC6536] provides the means to
   restrict access for particular NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.

   Some of the readable data nodes in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control read access (e.g., via get, get-config, or
   notification) to these data nodes.  These are the subtrees and data
   nodes and their sensitivity/vulnerability:

   o  /yang-library/schema: The schema list used in a server
      implementation may help an attacker identify the server
      capabilities and server implementations with known bugs.  Although
      some of this information may be available to all users via the
      NETCONF <hello> message (or similar messages in other management
      protocols), this YANG module potentially exposes additional
      details that could be of some assistance to an attacker.  Server
      vulnerabilities may be specific to particular modules, module
      revisions, module features, or even module deviations.  This
      information is included in each module entry.  For example, if a
      particular operation on a particular data node is known to cause a
      server to crash or significantly degrade device performance, then
      the module list information will help an attacker identify server
      implementations with such a defect, in order to launch a denial-
      of-service attack on the device.

5.  Acknowledgements

   Contributions to this material by Andy Bierman are based upon work
   supported by the The Space & Terrestrial Communications Directorate
   (S&TCD) under Contract No.  W15P7T-13-C-A616.  Any opinions, findings
   and conclusions or recommendations expressed in this material are
   those of the author(s) and do not necessarily reflect the views of
   The Space & Terrestrial Communications Directorate (S&TCD).







Bierman, et al.           Expires July 21, 2018                [Page 22]

Internet-Draft                YANG Library                  January 2018


6.  References

6.1.  Normative References

   [I-D.ietf-netmod-revised-datastores]
              Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K.,
              and R. Wilton, "Network Management Datastore
              Architecture", draft-ietf-netmod-revised-datastores-10
              (work in progress), January 2018.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, DOI 10.17487/
              RFC2119, March 1997, <https://www.rfc-editor.org/info/
              rfc2119>.

   [RFC3688]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688,
              DOI 10.17487/RFC3688, January 2004, <https://www.rfc-
              editor.org/info/rfc3688>.

   [RFC5246]  Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.2", RFC 5246, DOI 10.17487/
              RFC5246, August 2008, <https://www.rfc-editor.org/info/
              rfc5246>.

   [RFC6020]  Bjorklund, M., Ed., "YANG - A Data Modeling Language for
              the Network Configuration Protocol (NETCONF)", RFC 6020,
              DOI 10.17487/RFC6020, October 2010, <https://www.rfc-
              editor.org/info/rfc6020>.

   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,
              and A. Bierman, Ed., "Network Configuration Protocol
              (NETCONF)", RFC 6241, DOI 10.17487/RFC6241, June 2011,
              <https://www.rfc-editor.org/info/rfc6241>.

   [RFC6242]  Wasserman, M., "Using the NETCONF Protocol over Secure
              Shell (SSH)", RFC 6242, DOI 10.17487/RFC6242, June 2011,
              <https://www.rfc-editor.org/info/rfc6242>.

   [RFC6536]  Bierman, A. and M. Bjorklund, "Network Configuration
              Protocol (NETCONF) Access Control Model", RFC 6536, DOI
              10.17487/RFC6536, March 2012, <https://www.rfc-
              editor.org/info/rfc6536>.

   [RFC6991]  Schoenwaelder, J., Ed., "Common YANG Data Types", RFC
              6991, DOI 10.17487/RFC6991, July 2013, <https://www.rfc-
              editor.org/info/rfc6991>.





Bierman, et al.           Expires July 21, 2018                [Page 23]

Internet-Draft                YANG Library                  January 2018


   [RFC7950]  Bjorklund, M., Ed., "The YANG 1.1 Data Modeling Language",
              RFC 7950, DOI 10.17487/RFC7950, August 2016,
              <https://www.rfc-editor.org/info/rfc7950>.

   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF
              Protocol", RFC 8040, DOI 10.17487/RFC8040, January 2017,
              <https://www.rfc-editor.org/info/rfc8040>.

6.2.  Informative References

   [I-D.ietf-netmod-yang-tree-diagrams]
              Bjorklund, M. and L. Berger, "YANG Tree Diagrams", draft-
              ietf-netmod-yang-tree-diagrams-04 (work in progress),
              December 2017.

   [RFC5277]  Chisholm, S. and H. Trevino, "NETCONF Event
              Notifications", RFC 5277, DOI 10.17487/RFC5277, July 2008,
              <https://www.rfc-editor.org/info/rfc5277>.

   [RFC6470]  Bierman, A., "Network Configuration Protocol (NETCONF)
              Base Notifications", RFC 6470, DOI 10.17487/RFC6470,
              February 2012, <https://www.rfc-editor.org/info/rfc6470>.

   [RFC7895]  Bierman, A., Bjorklund, M., and K. Watsen, "YANG Module
              Library", RFC 7895, DOI 10.17487/RFC7895, June 2016,
              <https://www.rfc-editor.org/info/rfc7895>.

Authors' Addresses

   Andy Bierman
   YumaWorks

   Email: andy@yumaworks.com


   Martin Bjorklund
   Tail-f Systems

   Email: mbj@tail-f.com


   Juergen Schoenwaelder
   Jacobs University

   Email: j.schoenwaelder@jacobs-university.de






Bierman, et al.           Expires July 21, 2018                [Page 24]

Internet-Draft                YANG Library                  January 2018


   Kent Watsen
   Juniper Networks

   Email: kwatsen@juniper.net


   Robert Wilton
   Cisco Systems

   Email: rwilton@cisco.com









































Bierman, et al.           Expires July 21, 2018                [Page 25]
