K = [IDa],T, Rand, E(encr_key,PMKs[||KEK])
A = MAC(auth_key,K)

                               K, A
                    ---------------------->
auth_key = PRF(s,..||Rand)
V=MAC(auth_key,IDa||IDb||T),[IDb]
I=(IDa|Cert_A)
O=E(encr_key,IDa||PMKs[||KEK])
P=MAC(auth_key,O)

K=E(PK_b,env_key),
     O, P, T, Rand
     [, I]
     [, H(Cert_B)]
S=Sign(SK_a,H(K))

                              K,S
                    ---------------------->
                                       {retrieve env_key using SK_b}
auth_key = PRF(env_key,...||Rand)
V=MAC(auth_key,IDa||IDb||T),[IDb]
I = (IDa|Cert_A)
K = g^x, T, Rand [,I]
S = Sign (SK_a,H(K))
                              K,S        I' = (IDb|Cert_B)
                    ----------------->   K' = g^y,T,IDa,g^x [,I']
                                         S' = Sign (SK_b,H(K'))
                             K',S'
                    <-----------------

PMK=g^(xy)                            PMK=g^(xy)


A_0 = seed,
A_i = HMAC (s, A_(i-1)).

IV = [S XOR (0x0000 || MCS ID || T)] || 0x0000,

maxsize = Min (A, e*x) * block_size

a=keymgmt-prot:<protocol>
a=keymgmt-data:<data>

a=keymgmt-prot:MIKEY

a=keymgmt-data:<base64 encoded data>


version = 1

R = 0  ==> no response expected
R = 1  ==> response expected

