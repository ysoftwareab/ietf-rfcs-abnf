





Internet Engineering Task Force                            S. Hollenbeck
Internet-Draft                                            VeriSign, Inc.
April 9, 2001                                   Expires: October 9, 2001

          Extensible Provisioning Protocol Domain Name Mapping
                  <draft-hollenbeck-epp-domain-01.txt>

Status of this Memo

  This document is an Internet-Draft and is in full conformance with all
  provisions of Section 10 of RFC2026.

  Internet-Drafts are working documents of the Internet Engineering Task
  Force (IETF), its areas, and its working groups.  Note that other
  groups may also distribute working documents as Internet-Drafts.

  Internet-Drafts are draft documents valid for a maximum of six months
  and may be updated, replaced, or obsoleted by other documents at any
  time.  It is inappropriate to use Internet-Drafts as reference
  material or to cite them other than as "work in progress".

  The list of current Internet-Drafts can be accessed at
  http://www.ietf.org/ietf/1id-abstracts.txt

  The list of Internet-Draft Shadow Directories can be accessed at
  http://www.ietf.org/shadow.html.

Abstract

  This document describes an Extensible Provisioning Protocol (EPP)
  mapping for the provisioning and management of Internet domain names
  stored in a shared central repository.  Specified in XML, the mapping
  defines EPP command syntax and semantics as applied to domain names.

Conventions Used In This Document

  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
  "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
  document are to be interpreted as described in [RFC2119].

  In examples, "C:" represents lines sent by a protocol client and "S:"
  represents lines returned by a protocol server.  Indentation in
  examples is provided only to illustrate element relationships and is
  not a REQUIRED feature of this protocol.

  XML protocol elements are case sensitive.  Data carried in XML is case
  insensitive unless stated otherwise.




Hollenbeck              Expires October 9, 2001                 [Page 1]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


Table of Contents

  1. Introduction .................................................    3
  2. Object Attributes ............................................    4
  2.1 Domain Name and Host Names ..................................    4
  2.2 Client Identifiers ..........................................    4
  2.3 Status Values ...............................................    4
  2.4 Domain Contacts .............................................    6
  2.5 Dates and Times .............................................    6
  2.6 Validity Periods ............................................    6
  2.7 Authorization Identifiers ...................................    6
  3. EPP Command Mapping ..........................................    7
  3.1 EPP Query Commands ..........................................    7
  3.1.1 EPP <check> Command .......................................    7
  3.1.2 EPP <info> Command ........................................    8
  3.1.3 EPP <transfer> Command ....................................   11
  3.2 EPP Transform Commands ......................................   14
  3.2.1 EPP <create> Command ......................................   14
  3.2.2 EPP <delete> Command ......................................   16
  3.2.3 EPP <renew> Command .......................................   17
  3.2.4 EPP <transfer> Command ....................................   19
  3.2.5 EPP <update> Command ......................................   22
  4. Formal Syntax ................................................   25
  5. Internationalization Considerations ..........................   32
  6. IANA Considerations ..........................................   32
  7. Security Considerations ......................................   32
  8. References ...................................................   33
  9. Author's Address .............................................   34
  A. Full Copyright Statement .....................................   35






















Hollenbeck              Expires October 9, 2001                 [Page 2]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


1. Introduction

  This document describes an internet domain name mapping for version
  1.0 of the Extensible Provisioning Protocol (EPP).  This mapping is
  specified using the Extensible Markup Language (XML) 1.0 as described
  in [XML] and XML Schema notation as described in [XMLS-1] and [XMLS-
  2].

  [EPP] provides a complete description of EPP command and response
  structures.  A thorough understanding of the base protocol
  specification is necessary to understand the mapping described in this
  document.

  It is important to note that XML is case sensitive.  XML
  specifications and examples provided in this document MUST be
  interpreted in the exact character case presented to develop a
  conforming implementation.

  This document is being discussed on the "rrp" mailing list.  To join
  the list, send a message to <majordomo@verisign-grs.com> with the
  words "subscribe rrp" in the body of the message.  There is a web site
  for the list archives at <http://www.verisign-grs.com/maillist/rrp>.





























Hollenbeck              Expires October 9, 2001                 [Page 3]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


2. Object Attributes

  An EPP domain object has attributes and associated values that may be
  viewed and modified by the sponsoring client or the server.  This
  section describes each attribute type in detail.

2.1 Domain Name and Host Names

  The syntax for domain and host names described in this document MUST
  conform to [RFC952] as updated by [RFC1123].  These conformance
  requirements MAY change as a result of progressing work in developing
  standards for internationalized domain names.  A server MAY restrict
  allowable domain names to a particular top level domain, second level
  domain, or other domain for which the server is authoritative.

2.2 Client Identifiers

  All EPP clients are identified by a server-unique identifier.  Client
  identifiers use the "clIDType" syntax described in [EPP].

2.3 Status Values

  A domain name MUST always have at least one associated status
  indicator.  Status indicators MAY be set only by the client that
  sponsors a known domain object and by the server on which the object
  resides. A client MAY change the status of a domain object using the
  EPP <update> command.  Each status value MAY be accompanied by a
  string of human-readable text that describes the rationale for the
  status being applied to the object.

  A client MUST NOT alter status values set by the server.  A server MAY
  alter status values set by a client subject to local policies.

  Client-Managed Status Values:

  CLIENT-HOLD

  The domain MUST NOT be published in a zone for DNS resolution.  The
  domain object MAY be modified through protocol action.

  CLIENT-LOCK

  The domain MUST NOT be modified through any action of the EPP
  <create>, <transfer>, or <update> commands, though the <update>
  command MAY be used to change the status value.  The <renew> command
  MAY be applied to avoid exceeding the end of the domain validity
  period.  Hierarchical and associated objects MUST NOT be added to or
  removed from the domain object.



Hollenbeck              Expires October 9, 2001                 [Page 4]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


  Server-Managed Status Values:

  NEW

  The domain has been delegated, can be modified, and has not been
  published in a zone.  This is the nominal status for a newly created
  domain object.

  ACTIVE

  The domain has been delegated, can be modified, and appears in a zone.
  This is the nominal status for a domain object once it has been
  published in a zone.

  INACTIVE

  The domain has not been delegated, can be modified, and does not
  appear in a zone.

  The NEW, ACTIVE, and INACTIVE statuses are mutually exclusive.  A
  domain object MUST be associated with only one of these values at any
  time.

  HOLD

  The domain MUST NOT be published in a zone for DNS resolution.  The
  domain object MAY be modified through protocol action.

  LOCK

  The domain MUST NOT be modified through any action of the EPP
  <create>, <transfer>, or <update> commands, though the <update>
  command MAY be used to change the status value.  The <renew> command
  MAY be applied to avoid exceeding the end of the domain validity
  period.  Hierarchical and associated objects MUST NOT be added to or
  removed from the domain object.

  PENDING-TRANSFER

  A transfer request has been received for the domain, and processing of
  the request is pending.

  PENDING-DELETE

  A delete request has been received for this domain.  The domain has
  been removed from the zone, but has not yet been purged from the
  server database.




Hollenbeck              Expires October 9, 2001                 [Page 5]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


2.4 Domain Contacts

  Domain objects MAY have associated social information describing human
  or organizational contacts.  Contact identifiers use the "roidType"
  syntax described in [EPP].

2.5 Dates and Times

  Date and time attribute values MUST be represented in Universal
  Coordinated Time (UTC). Both extended and truncated date and time
  forms defined in [ISO8601] MAY be used, though a server SHOULD use one
  form or the other consistently.

2.6 Validity Periods

  A domain name object MAY have an indefinite or specified validity
  period.  If server policy supports domain object validity periods, the
  validity period is determined when a domain object is created, and it
  MAY be extended by the action of the EPP <renew> and <transfer>
  commands.  As matter of server policy, this specification does not
  define actions to be taken upon expiration of a domain object's
  validity period.

  Validity periods are measured in years or months with the appropriate
  units specified using the "unit" attribute.  Valid values for the
  "unit" attribute are "y" for years and "m" for months.  The minimum
  allowable period value is one decimal (1).  The maximum allowable
  value is ninety-nine decimal (99).  A server MAY support a lower
  maximum value.

2.7 Authorization Identifiers

  Authorization identifiers are associated with domain objects to
  facilitate transformation operations on domain objects.  Authorization
  identifiers use the transaction identifier syntax described in [EPP].
















Hollenbeck              Expires October 9, 2001                 [Page 6]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


3. EPP Command Mapping

  A detailed description of the EPP syntax and semantics can be found in
  [EPP].  The command mappings described here are specifically for use
  in provisioning and managing internet domain names via EPP.

3.1 EPP Query Commands

  EPP provides three commands to retrieve domain information: <check> to
  determine if a domain object is known to the server, and <info> to
  retrieve detailed information associated with a domain object, and
  <transfer> to retrieve domain object transfer status information.

3.1.1 EPP <check> Command

  The EPP <check> command is used to determine if a domain object is
  known to the server.  In addition to the standard EPP command
  elements, the <check> command MUST contain a <domain:check> element
  that identifies the domain namespace and the location of the domain
  schema.  The <domain:check> element SHALL contain the following child
  elements:

  - One or more <domain:name> elements that contain the fully qualified
  names of the domain objects to be queried.

  Example <check> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <check>
  C:      <domain:check xmlns:domain="urn:iana:xml:ns:domain"
  C:       xsi:schemaLocation="urn:iana:xml:ns:domain domain.xsd">
  C:        <domain:name>example1.com</domain:name>
  C:        <domain:name>example2.com</domain:name>
  C:        <domain:name>example3.com</domain:name>
  C:      </domain:check>
  C:    </check>
  C:    <unspec/>
  C:    <clTRID>ABC-12346</clTRID>
  C:  </command>
  C:</epp>

  When a <check> command has been processed successfully, the EPP
  <resData> element MUST contain a child <domain:chkData> element that
  identifies the domain namespace and the location of the domain schema.



Hollenbeck              Expires October 9, 2001                 [Page 7]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


  The <domain:chkData> element SHALL contain the following child
  elements:

  - One or more <domain:cd> elements that contain the fully qualified
  names for the queried domain objects and an "x" attribute whose value
  identifies the object as either "+" for a known object or "-" for an
  unknown object.

  Example <check> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <domain:chkData xmlns:domain="urn:iana:xml:ns:domain"
  S:       xsi:schemaLocation="urn:iana:xml:ns:domain domain.xsd">
  S:        <domain:cd x="+">example1.com</domain:cd>
  S:        <domain:cd x="-">example2.com</domain:cd>
  S:        <domain:cd x="+">example3.com</domain:cd>
  S:      </domain:chkData>
  S:    </resData>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12346</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <check> command can not be
  processed for any reason.

3.1.2 EPP <info> Command

  The EPP <info> command is used to retrieve information associated with
  a domain object.  In addition to the standard EPP command elements,
  the <info> command MUST contain a <domain:info> element that
  identifies the domain namespace and the location of the domain schema.
  The <domain:info> element SHALL contain the following child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object to be queried.




Hollenbeck              Expires October 9, 2001                 [Page 8]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001



  Example <info> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <info>
  C:      <domain:info xmlns:domain="urn:iana:xml:ns:domain"
  C:       xsi:schemaLocation="urn:iana:xml:ns:domain domain.xsd">
  C:        <domain:name>example.com</domain:name>
  C:      </domain:info>
  C:    </info>
  C:    <unspec/>
  C:    <clTRID>ABC-12346</clTRID>
  C:  </command>
  C:</epp>

  When an <info> command has been processed successfully, the EPP
  <resData> element MUST contain a child <domain:infData> element that
  identifies the domain namespace and the location of the domain schema.
  The <domain:infData> element SHALL contain the following child
  elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object.

  - A <domain:roid> element that contains the domain object's repository
  object identifier.

  - One or more <domain:status> elements that contain the current status
  descriptors associated with the domain.  See the "Object Attributes"
  section for a list of valid status attribute values.

  - If supported by the server, one <domain:registrant> element and one
  or more <domain:contact> elements that contain identifiers for the
  human or organizational social information objects associated with the
  domain object.

  - Zero or more <domain:ns> elements that contain the fully qualified
  names of the name server objects associated with the domain object.

  - Zero or more <domain:host> elements that contain the fully qualified
  names of the host objects created under this hierarchical domain
  object.

  - A <domain:clID> element that contains the identifier of the



Hollenbeck              Expires October 9, 2001                 [Page 9]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


  sponsoring client.

  - A <domain:crID> element that contains the identifier of the client
  that created the domain object.

  - A <domain:crDate> element that contains the date and time of domain
  object creation.

  - A <domain:exDate> element that contains the date and time
  identifying the end of the domain object's registration period.

  - A <domain:upID> element that contains the identifier of the client
  that last updated the domain object.  This element MUST NOT be present
  if the domain has never been modified.

  - A <domain:upDate> element that contains the date and time of the
  most recent domain object modification.  This element MUST NOT be
  present if the domain object has never been modified.

  - A <domain:trDate> elements that contains the date and time of the
  most recent successful domain object transfer.  This element MUST NOT
  be provided if the domain object has never been transferred.

  - A <domain:auID> element derived from either the original domain
  object creation transaction or the most recent successful transfer
  transaction.  This element MUST NOT be provided if the querying client
  is not the current sponsoring client.
























Hollenbeck              Expires October 9, 2001                [Page 10]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001



  Example <info> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <domain:infData xmlns:domain="urn:iana:xml:ns:domain"
  S:       xsi:schemaLocation="urn:iana:xml:ns:domain domain.xsd">
  S:        <domain:name>example.com</domain:name>
  S:        <domain:roid>EXAMPLE1-VRSN</domain:roid>
  S:        <domain:status s="ACTIVE"/>
  S:        <domain:registrant>JD1234-VRSN</domain:registrant>
  S:        <domain:contact>SH8013-VRSN</domain:contact>
  S:        <domain:ns>ns1.example.com</domain:ns>
  S:        <domain:ns>ns2.example.com</domain:ns>
  S:        <domain:host>ns1.example.com</domain:host>
  S:        <domain:host>ns2.example.com</domain:host>
  S:        <domain:clID>ClientX</domain:clID>
  S:        <domain:crID>ClientY</domain:crID>
  S:        <domain:crDate>1999-04-03T22:00:00.0Z</domain:crDate>
  S:        <domain:upID>ClientX</domain:upID>
  S:        <domain:upDate>1999-12-03T09:00:00.0Z</domain:upDate>
  S:        <domain:exDate>2005-04-03T22:00:00.0Z</domain:exDate>
  S:        <domain:trDate>2000-04-08T09:00:00.0Z</domain:trDate>
  S:        <domain:auID>
  S:          <clTRID>ABC-12345</clTRID>
  S:          <svTRID>54321-XYZ</svTRID>
  S:        </domain:auID>
  S:      </domain:infData>
  S:    </resData>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12346</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if an <info> command can not be
  processed for any reason.

3.1.3 EPP <transfer> Command



Hollenbeck              Expires October 9, 2001                [Page 11]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


  The EPP <transfer> command provides a query operation that allows a
  client to determine real-time status of pending and completed transfer
  requests.  In addition to the standard EPP command elements, the
  <transfer> command MUST contain an "op" attribute with value "query",
  and a <domain:transferQ> element that identifies the domain namespace
  and the location of the domain schema.  The <domain:transferQ> element
  SHALL contain the following child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object to be queried.

  Example <transfer> query command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <transfer op="query">
  C:      <domain:transferQ xmlns:domain="urn:iana:xml:ns:domain"
  C:       xsi:schemaLocation="urn:iana:xml:ns:domain domain.xsd">
  C:        <domain:name>example.com</domain:name>
  C:      </domain:transferQ>
  C:      <auID>
  C:        <clTRID>ABC-12345</clTRID>
  C:        <svTRID>54321-XYZ</svTRID>
  C:      </auID>
  C:    </transfer>
  C:    <unspec/>
  C:    <clTRID>ABC-12346</clTRID>
  C:  </command>
  C:</epp>

  When a <transfer> query command has been processed successfully, the
  EPP <resData> element MUST contain a child <domain:trnData> element
  that identifies the domain namespace and the location of the domain
  schema. The <domain:trnData> element SHALL contain the following child
  elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object.

  - A <domain:trStatus> element that contains the state of the most
  recent transfer request.  Valid values are "PENDING", "APPROVED",
  "REJECTED", "AUTO-APPROVED", "AUTO-REJECTED", and "CANCELLED".

  - A <domain:reID> element that contains the identifier of the client
  that requested the object transfer.



Hollenbeck              Expires October 9, 2001                [Page 12]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


  - A <domain:reDate> element that contains the date and time that the
  transfer was requested.

  - A <domain:acID> element that contains the identifier of the client
  that SHOULD act upon the transfer request.

  - A <domain:acDate> element that contains the date and time of a
  required or completed response.  For a PENDING request, the value
  identifies the date and time by which a response is required before an
  automated response action MUST be taken by the server.  For all other
  status types, the value identifies the date and time when the request
  was completed.

  - An OPTIONAL <domain:exDate> element that contains the end of the
  domain object's validity period if the <transfer> command caused or
  causes a change in the validity period.

  Example <transfer> query response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <domain:trnData xmlns:domain="urn:iana:xml:ns:domain"
  S:       xsi:schemaLocation="urn:iana:xml:ns:domain domain.xsd">
  S:        <domain:name>example.com</domain:name>
  S:        <domain:trStatus>PENDING</domain:trStatus>
  S:        <domain:reID>ClientX</domain:reID>
  S:        <domain:reDate>2000-06-06T22:00:00.0Z</domain:reDate>
  S:        <domain:acID>ClientY</domain:acID>
  S:        <domain:acDate>2000-06-11T22:00:00.0Z</domain:acDate>
  S:        <domain:exDate>2002-09-08T22:00:00.0Z</domain:exDate>
  S:      </domain:trnData>
  S:    </resData>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12346</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <transfer> query command



Hollenbeck              Expires October 9, 2001                [Page 13]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


  can not be processed for any reason.

3.2 EPP Transform Commands

  EPP provides five commands to transform domain objects: <create> to
  create an instance of a domain object, <delete> to delete an instance
  of a domain object, <renew> to extend the validity period of a domain
  object, <transfer> to manage domain object sponsorship changes, and
  <update> to change information associated with a domain object.

3.2.1 EPP <create> Command

  The EPP <create> command provides a transform operation that allows a
  client to create a domain object.  In addition to the standard EPP
  command elements, the <create> command MUST contain a <domain:create>
  element that identifies the domain namespace and the location of the
  domain schema.  The <domain:create> element SHALL contain the
  following child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object to be created.

  - An OPTIONAL <domain:period> element that contains the initial
  registration period of the domain object.  A server MAY define a
  default initial registration period if not specified by the client.

  - Zero or more <domain:ns> elements that contain the fully qualified
  name of a known host object to provide resolution services for the
  domain.  A host object MUST be known to the server before the host
  object can be associated with a domain object.  A server MUST provide
  host object services to provide domain name services.  The EPP mapping
  for host objects is described in [EPP-H].

  - An OPTIONAL <domain:registrant> element that contains the identifier
  for the human or organizational social information (contact) object to
  be associated with the domain object as the object registrant.  This
  object identifier MUST be known to the server before the contact
  object can be associated with the domain object.  The EPP mapping for
  contact objects is described in [EPP-C].

  - Zero or more OPTIONAL <domain:contact> elements that contain the
  identifiers for other contact objects to be associated with the domain
  object.  Contact object identifiers MUST be known to the server before
  the contact object can be associated with the domain object.

  It is important to note that the transaction identifier associated
  with successful creation of a domain object becomes the authorization
  identifier required to transfer sponsorship of the domain object.  A



Hollenbeck              Expires October 9, 2001                [Page 14]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


  client MUST retain all transaction identifiers associated with domain
  object creation and protect them from disclosure.  A client acting as
  a proxy for a registrant MUST provide a copy of the transaction
  identifier information to the registrant, who will need this
  information to request a domain transfer through a different client.

  Example <create> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <create>
  C:      <domain:create xmlns:domain="urn:iana:xml:ns:domain"
  C:       xsi:schemaLocation="urn:iana:xml:ns:domain domain.xsd">
  C:        <domain:name>example.com</domain:name>
  C:        <domain:period unit="y">2</domain:period>
  C:        <domain:ns>ns1.example.com</domain:ns>
  C:        <domain:ns>ns2.example.com</domain:ns>
  C:        <domain:registrant>JD1234-VRSN</domain:registrant>
  C:        <domain:contact>SH8013-VRSN</domain:contact>
  C:      </domain:create>
  C:    </create>
  C:    <unspec/>
  C:    <clTRID>ABC-12345</clTRID>
  C:  </command>
  C:</epp>

  When a <create> command has been processed successfully, the EPP
  <resData> element MUST contain a child <domain:creData> element that
  identifies the domain namespace and the location of the domain schema.
  The <domain:creData> element SHALL contain the following child
  elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object.

  - A <domain:roid> element that contains the domain object's repository
  object identifier.

  - A <domain:exDate> element that contains the date and time
  identifying the end of the domain object's registration period.








Hollenbeck              Expires October 9, 2001                [Page 15]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001



  Example <create> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <domain:creData xmlns:domain="urn:iana:xml:ns:domain"
  S:       xsi:schemaLocation="urn:iana:xml:ns:domain domain.xsd">
  S:        <domain:name>example.com</domain:name>
  S:        <domain:roid>EXAMPLE1-VRSN</domain:roid>
  S:        <domain:exDate>2002-06-08T22:00:00.0Z</domain:exDate>
  S:      </domain:creData>
  S:    </resData>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12345</clTRID>
  S:      <svTRID>54321-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <create> command can not
  be processed for any reason.

3.2.2 EPP <delete> Command

  The EPP <delete> command provides a transform operation that allows a
  client to delete a domain object.  In addition to the standard EPP
  command elements, the <delete> command MUST contain a <domain:delete>
  element that identifies the domain namespace and the location of the
  domain schema.  The <domain:delete> element SHALL contain the
  following child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object to be deleted.

  A domain object MUST NOT be deleted if the domain is associated with
  hierarchical host objects.  For example, if domain "example.com" is
  known, and host object "ns1.example.com" is also known, then domain
  "example.com" MUST NOT be deleted until host "ns1.example.com" has
  been either deleted or renamed to exist in a different hierarchical
  domain.



Hollenbeck              Expires October 9, 2001                [Page 16]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001



  Example <delete> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <delete>
  C:      <domain:delete xmlns:domain="urn:iana:xml:ns:domain"
  C:       xsi:schemaLocation="urn:iana:xml:ns:domain domain.xsd">
  C:        <domain:name>example.com</domain:name>
  C:      </domain:delete>
  C:      <auID>
  C:        <clTRID>ABC-12345</clTRID>
  C:        <svTRID>54321-XYZ</svTRID>
  C:      </auID>
  C:    </delete>
  C:    <unspec/>
  C:    <clTRID>ABC-12346</clTRID>
  C:  </command>
  C:</epp>

  When a <delete> command has been processed successfully, a server MUST
  respond with an EPP response with no <resData> element.

  Example <delete> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12346</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <delete> command can not
  be processed for any reason.

3.2.3 EPP <renew> Command



Hollenbeck              Expires October 9, 2001                [Page 17]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


  The EPP <renew> command provides a transform operation that allows a
  client to extend the validity period of a domain object.  In addition
  to the standard EPP command elements, the <renew> command MUST contain
  a <domain:renew> element that identifies the domain namespace and the
  location of the domain schema.  The <domain:renew> element SHALL
  contain the following child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object whose validity period is to be extended.

  - A <domain:curExpDate> element that contains the date on which the
  current validity period ends.  This value ensures that repeated
  <renew> commands do not result in multiple unanticipated successful
  renewals.

  - An OPTIONAL <domain:period> element that contains the number of
  units to be added to the registration period of the domain object.

  Example <renew> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <renew>
  C:      <domain:renew xmlns:domain="urn:iana:xml:ns:domain"
  C:       xsi:schemaLocation="urn:iana:xml:ns:domain domain.xsd">
  C:        <domain:name>example.com</domain:name>
  C:        <domain:curExpDate>2000-04-03</domain:curExpDate>
  C:        <domain:period unit="y">5</domain:period>
  C:      </domain:renew>
  C:      <auID>
  C:        <clTRID>ABC-12345</clTRID>
  C:        <svTRID>54321-XYZ</svTRID>
  C:      </auID>
  C:    </renew>
  C:    <unspec/>
  C:    <clTRID>ABC-12346</clTRID>
  C:  </command>
  C:</epp>

  When a <renew> command has been processed successfully, the EPP
  <resData> element MUST contain a child <domain:creData> element that
  identifies the domain namespace and the location of the domain schema.
  The <domain:creData> element SHALL contain the following child
  elements:




Hollenbeck              Expires October 9, 2001                [Page 18]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


  - A <domain:name> element that contains the fully qualified name of
  the domain object.

  - A <domain:roid> element that contains the domain object's repository
  object identifier.

  - A <domain:exDate> element that contains the date and time
  identifying the end of the domain object's registration period.

  Example <renew> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <domain:creData xmlns:domain="urn:iana:xml:ns:domain"
  S:       xsi:schemaLocation="urn:iana:xml:ns:domain domain.xsd">
  S:        <domain:name>example.com</domain:name>
  S:        <domain:roid>EXAMPLE1-VRSN</domain:roid>
  S:        <domain:exDate>2005-04-03T22:00:00.0Z</domain:exDate>
  S:      </domain:creData>
  S:    </resData>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12346</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <renew> command can not be
  processed for any reason.

3.2.4 EPP <transfer> Command

  The EPP <transfer> command provides a transform operation that allows
  a client to manage requests to transfer the sponsorship of a domain
  object.  In addition to the standard EPP command elements, the
  <transfer> command MUST contain a <domain:transfer> element that
  identifies the domain namespace and the location of the domain schema.
  The <domain:transfer> element SHALL contain the following child
  elements:




Hollenbeck              Expires October 9, 2001                [Page 19]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


  - A <domain:name> element that contains the fully qualified name of
  the domain object for which a transfer request is to be created,
  approved, rejected, or cancelled.

  - An OPTIONAL <domain:period> element that contains the number of
  units to be added to the registration period of the domain object
  during the transfer process.  This element MUST be consistently
  present or absent for all associated request, approval, rejection, or
  cancellation operations.

  Every EPP <transfer> command MUST contain an "op" attribute that
  identifies the transfer operation to be performed.  Valid values,
  definitions, and authorizations for all attribute values are defined
  in [EPP].

  Every EPP <transfer> command MUST also contain an authorization
  identifier as described in [EPP].  It is important to note that the
  transaction identifier associated with successful transfer of a domain
  object becomes the authorization identifier required to transfer
  sponsorship of the domain object.  A client MUST retain all
  transaction identifiers associated with domain object creation and
  protect them from disclosure.  A client acting as a proxy for a
  registrant MUST provide a copy of the transaction identifier
  information to the registrant, who will need this information to
  request a domain transfer through a different client.

  Transfer of a domain object MUST implicitly transfer all host objects
  that exist hierarchically under the domain object.  For example, if
  domain object "example.com" is transferred and host object
  "ns1.example.com" exists, the host object MUST be transferred as part
  of the "example.com" transfer process.  Host objects that are subject
  to transfer when transferring a domain object are listed in the
  response to an EPP <info> command performed on the domain object.


















Hollenbeck              Expires October 9, 2001                [Page 20]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001



  Example <transfer> request command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <transfer op="request">
  C:      <domain:transfer xmlns:domain="urn:iana:xml:ns:domain"
  C:       xsi:schemaLocation="urn:iana:xml:ns:domain domain.xsd">
  C:        <domain:name>example.com</domain:name>
  C:        <domain:period unit="y">1</domain:period>
  C:      </domain:transfer>
  C:      <auID>
  C:        <clTRID>ABC-12345</clTRID>
  C:        <svTRID>54321-XYZ</svTRID>
  C:      </auID>
  C:    </transfer>
  C:    <unspec/>
  C:    <clTRID>ABC-12346</clTRID>
  C:  </command>
  C:</epp>

  When a <transfer> command has been processed successfully, the EPP
  <resData> element MUST contain a child <domain:trnData> element that
  identifies the domain namespace and the location of the domain schema.
  The <domain:trnData> element SHALL contain the same child elements
  defined for a transfer query response.






















Hollenbeck              Expires October 9, 2001                [Page 21]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001



  Example <transfer> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <domain:trnData xmlns:domain="urn:iana:xml:ns:domain"
  S:       xsi:schemaLocation="urn:iana:xml:ns:domain domain.xsd">
  S:        <domain:name>example.com</domain:name>
  S:        <domain:trStatus>PENDING</domain:trStatus>
  S:        <domain:reID>ClientX</domain:reID>
  S:        <domain:reDate>2000-06-08T22:00:00.0Z</domain:reDate>
  S:        <domain:acID>ClientY</domain:acID>
  S:        <domain:acDate>2000-06-13T22:00:00.0Z</domain:acDate>
  S:        <domain:exDate>2002-09-08T22:00:00.0Z</domain:exDate>
  S:      </domain:trnData>
  S:    </resData>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12346</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <transfer> command can not
  be processed for any reason.

3.2.5 EPP <update> Command

  The EPP <update> command provides a transform operation that allows a
  client to modify the attributes of a domain object.  In addition to
  the standard EPP command elements, the <update> command MUST contain a
  <domain:update> element that identifies the domain namespace and the
  location of the domain schema. The <domain:update> element SHALL
  contain the following child elements:

  - A <domain:name> element that contains the fully qualified name of
  the domain object to be updated.

  - An OPTIONAL <domain:add> element that contains attribute values to
  be added to the domain object.



Hollenbeck              Expires October 9, 2001                [Page 22]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


  - An OPTIONAL <domain:rem> element that contains attribute values to
  be removed from the domain object.

  - An OPTIONAL <domain:chg> element that contains object attribute
  values to be changed.

  Either a <domain:add> element, a <domain:rem> element, or a
  <domain:chg> element MUST be provided, and any combination of these
  elements MAY be provided.  The <domain:add> and <domain:rem> elements
  SHALL contain the following child elements:

  - Zero or more <domain:ns> elements that contain the fully qualified
  name of a known host object.  A host object MUST be known to the
  server before a server attribute can be added or removed from a domain
  object.  The EPP mapping for host objects is described in [EPP-H].

  - Zero or more <domain:contact> elements that contain the identifiers
  for contact objects to be associated with or removed from the domain
  object.  Contact object identifiers MUST be known to the server before
  the contact object can be associated with the domain object.

  - Zero or more (up to a maximum of eight) <domain:status> elements
  that contain status values to be applied to or removed from the domain
  object.  See the "Object Attributes" section for a list of valid
  status attribute values.  When specifying a value to be removed, only
  the attribute value is significant; text is not required to match a
  value for removal.

  A <domain:chg> element SHALL contain the following child elements:

  - A <domain:registrant> element that contains the identifier for the
  human or organizational social information (contact) object to be
  associated with the domain object as the object registrant.  This
  object identifier MUST be known to the server before the contact
  object can be associated with the domain object.
















Hollenbeck              Expires October 9, 2001                [Page 23]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001



  Example <update> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <update>
  C:      <domain:update xmlns:domain="urn:iana:xml:ns:domain"
  C:       xsi:schemaLocation="urn:iana:xml:ns:domain domain.xsd">
  C:        <domain:name>example.com</domain:name>
  C:        <domain:add>
  C:          <domain:ns>ns1.example2.com</domain:ns>
  C:          <domain:contact>MAK21-VRSN</domain:contact>
  C:          <domain:status s="CLIENT-HOLD" lang="en-US">
  C:            Payment overdue.
  C:          </domain:status>
  C:        </domain:add>
  C:        <domain:rem>
  C:          <domain:ns>ns2.example.com</domain:ns>
  C:          <domain:contact>SH8013-VRSN</domain:contact>
  C:          <domain:status s="CLIENT-LOCK"/>
  C:        </domain:rem>
  C:        <domain:chg>
  C:          <domain:registrant>SH8013-VRSN</domain:registrant>
  C:        </domain:chg>
  C:      </domain:update>
  C:      <auID>
  C:        <clTRID>ABC-12345</clTRID>
  C:        <svTRID>54321-XYZ</svTRID>
  C:      </auID>
  C:    </update>
  C:    <unspec/>
  C:    <clTRID>ABC-12346</clTRID>
  C:  </command>
  C:</epp>

  When an <update> command has been processed successfully, a server
  MUST respond with an EPP response with no <resData> element.











Hollenbeck              Expires October 9, 2001                [Page 24]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001



  Example <update> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12346</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if an <update> command can not
  be processed for any reason.

4. Formal Syntax

  An EPP object mapping is specified in XML Schema notation.  The formal
  syntax presented here is a complete schema representation of the
  object mapping suitable for automated validation of EPP XML instances.

  <?xml version="1.0"?>

  <schema targetNamespace="urn:iana:xml:ns:domain"
          xmlns:domain="urn:iana:xml:ns:domain"
          xmlns:epp="urn:iana:xml:ns:epp"
          xmlns:eppcom="urn:iana:xml:ns:eppcom"
          xmlns="http://www.w3.org/2000/10/XMLSchema"
          elementFormDefault="qualified">

  <!--
  Import common element types.
  -->
    <import namespace="urn:iana:xml:ns:eppcom"
            schemaLocation="eppcom.xsd"/>
    <import namespace="urn:iana:xml:ns:epp"
            schemaLocation="epp.xsd"/>

    <annotation>
      <documentation>
        Extensible Provisioning Protocol v1.0



Hollenbeck              Expires October 9, 2001                [Page 25]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


        domain provisioning schema.
      </documentation>
    </annotation>

  <!--
  Types used within an EPP greeting.
  -->
    <element name="svc" type="eppcom:emptyType"/>

  <!--
  Child elements found in EPP commands.
  -->
    <element name="check" type="domain:mNameType"/>
    <element name="create" type="domain:createType"/>
    <element name="delete" type="domain:sNameType"/>
    <element name="info" type="domain:sNameType"/>
    <element name="renew" type="domain:renewType"/>
    <element name="transfer" type="domain:transferType"/>
    <element name="transferQ" type="domain:sNameType"/>
    <element name="update" type="domain:updateType"/>

  <!--
  Child elements of the <create> command.
  -->
    <complexType name="createType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="period" type="domain:periodType"
         minOccurs="0"/>
        <element name="ns" type="eppcom:labelType"
         minOccurs="0" maxOccurs="unbounded"/>
        <element name="registrant" type="eppcom:roidType"
         minOccurs="0"/>
        <element name="contact" type="eppcom:roidType"
         minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
    </complexType>

    <complexType name="periodType">
      <simpleContent>
        <extension base="domain:pLimitType">
          <attribute name="unit" type="domain:pUnitType"
           use="required"/>
        </extension>
      </simpleContent>
    </complexType>

    <simpleType name="pLimitType">



Hollenbeck              Expires October 9, 2001                [Page 26]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


      <restriction base="unsignedShort">
        <minInclusive value="1"/>
        <maxInclusive value="99"/>
      </restriction>
    </simpleType>

    <simpleType name="pUnitType">
      <restriction base="string">
        <enumeration value="y"/>
        <enumeration value="m"/>
      </restriction>
    </simpleType>

  <!--
  Child element of commands that require a single name.
  -->
    <complexType name="sNameType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
      </sequence>
    </complexType>

  <!--
  Child element of commands that accept multiple names.
  -->
    <complexType name="mNameType">
      <sequence>
        <element name="name" type="eppcom:labelType"
         maxOccurs="unbounded"/>
      </sequence>
    </complexType>

  <!--
  Child elements of the <renew> command.
  -->
    <complexType name="renewType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="curExpDate" type="date"/>
        <element name="period" type="domain:periodType"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  Child elements of the <transfer> command.
  -->
    <complexType name="transferType">



Hollenbeck              Expires October 9, 2001                [Page 27]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="period" type="domain:periodType"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  Child elements of the <update> command.
  -->
    <complexType name="updateType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="add" type="domain:addRemType"
         minOccurs="0"/>
        <element name="rem" type="domain:addRemType"
         minOccurs="0"/>
        <element name="chg" type="domain:chgType"
         minOccurs="0"/>
      </sequence>
    </complexType>

    <complexType name="addRemType">
      <sequence>
        <element name="ns" type="eppcom:labelType"
         minOccurs="0" maxOccurs="unbounded"/>
        <element name="contact" type="eppcom:roidType"
         minOccurs="0" maxOccurs="unbounded"/>
        <element name="status" type="domain:statusType"
         minOccurs="0" maxOccurs="8"/>
      </sequence>
    </complexType>

    <complexType name="chgType">
      <sequence>
        <element name="registrant" type="eppcom:roidType"/>
      </sequence>
    </complexType>

  <!--
  Child response elements.
  -->
    <element name="chkData" type="domain:chkDataType"/>
    <element name="infData" type="domain:infDataType"/>
    <element name="creData" type="domain:creDataType"/>
    <element name="trnData" type="domain:trnDataType"/>

  <!--



Hollenbeck              Expires October 9, 2001                [Page 28]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


  <check> response elements.
  -->
    <complexType name="chkDataType">
      <sequence>
        <element name="cd" type="domain:checkType"
         maxOccurs="unbounded"/>
      </sequence>
    </complexType>

    <complexType name="checkType">
      <simpleContent>
        <extension base = "eppcom:labelType">
          <attribute name="x" type="eppcom:checkStatusType"
           use="required"/>
        </extension>
      </simpleContent>
    </complexType>

  <!--
  <create> and <renew> response elements.
  -->
    <complexType name="creDataType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="roid" type="eppcom:roidType"/>
        <element name="exDate" type="timeInstant"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  <info> response elements.
  -->
    <complexType name="infDataType">
      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="roid" type="eppcom:roidType"/>
        <element name="status" type="domain:statusType"
         maxOccurs="8"/>
        <element name="registrant" type="eppcom:roidType"
         minOccurs="0" maxOccurs="unbounded"/>
        <element name="contact" type="eppcom:roidType"
         minOccurs="0" maxOccurs="unbounded"/>
        <element name="ns" type="eppcom:labelType"
         minOccurs="0" maxOccurs="unbounded"/>
        <element name="host" type="eppcom:labelType"
         minOccurs="0" maxOccurs="unbounded"/>
        <element name="clID" type="eppcom:clIDType"/>



Hollenbeck              Expires October 9, 2001                [Page 29]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


        <element name="crID" type="eppcom:clIDType"/>
        <element name="crDate" type="timeInstant"/>
        <element name="upID" type="eppcom:clIDType"
         minOccurs="0"/>
        <element name="upDate" type="timeInstant"
         minOccurs="0"/>
        <element name="exDate" type="timeInstant"
         minOccurs="0"/>
        <element name="trDate" type="timeInstant"
         minOccurs="0"/>
        <element name="auID" type="epp:trIDType"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  Status is a combination of an enumerated attribute and an optional
  human-readable message that may be expressed in languages other than
  English.
  -->
    <complexType name="statusType">
      <simpleContent>
        <extension base="string">
          <attribute name="s" type="domain:statusValueType"/>
          <attribute name="lang" type="language"
           use="default" value="en-US"/>
        </extension>
      </simpleContent>
    </complexType>

    <simpleType name="statusValueType">
      <restriction base="string">
        <enumeration value="NEW"/>
        <enumeration value="ACTIVE"/>
        <enumeration value="INACTIVE"/>
        <enumeration value="HOLD"/>
        <enumeration value="LOCK"/>
        <enumeration value="CLIENT-HOLD"/>
        <enumeration value="CLIENT-LOCK"/>
        <enumeration value="PENDING-TRANSFER"/>
        <enumeration value="PENDING-DELETE"/>
      </restriction>
    </simpleType>

  <!--
  <transfer> response elements.
  -->
    <complexType name="trnDataType">



Hollenbeck              Expires October 9, 2001                [Page 30]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


      <sequence>
        <element name="name" type="eppcom:labelType"/>
        <element name="trStatus" type="eppcom:trStatusType"/>
        <element name="reID" type="eppcom:clIDType"/>
        <element name="reDate" type="timeInstant"/>
        <element name="acID" type="eppcom:clIDType"/>
        <element name="acDate" type="timeInstant"/>
        <element name="exDate" type="timeInstant"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  End of schema.
  -->
  </schema>



































Hollenbeck              Expires October 9, 2001                [Page 31]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


5. Internationalization Considerations

  EPP is represented in XML, which provides native support for encoding
  information using the double-byte Unicode character set and its more
  compact representations including UTF-8.  Compliant XML processors are
  required to understand both UTF-8 and raw Unicode character sets; XML
  also includes a provision for identifying other character sets through
  use of an "encoding" attribute in an <?xml?> processing instruction.
  The complete list of character set encoding identifiers is maintained
  by IANA and is described in [CHARSET] and [RFC1700].

  All date-time values presented via EPP MUST be expressed in Universal
  Coordinated Time.  The XML Schema "date" format allows use of time
  zone identifiers to indicate offsets from the zero meridian, but this
  option MUST NOT be used within EPP.  Both extended and truncated date
  and time forms defined in [ISO8601] MAY be used.

  This document requires domain and host name syntax as specified in
  [RFC952] as updated by [RFC1123].  These conformance requirements MAY
  change as a result of progressing work in developing standards for
  internationalized domain names.

6. IANA Considerations

  XML schemas require a URI for unique identification.  Schemas MUST be
  registered to ensure URI uniqueness, but the IETF does not currently
  have a recommended repository for the registration of XML schemas.
  This document uses URNs to describe XML namespaces and XML schemas
  conforming to a registry mechanism described in [IANA-XML].

  IANA SHOULD maintain a registry of XML namespace and schema URI
  assignments.  Per policies described in [IANA], URI assignment
  requests SHOULD be reviewed by a designated expert, and values SHOULD
  be assigned only as a result of standards action taken by the IESG.

  This document requests assignment of the following URIs:

  urn:iana:xml:ns:domain: The XML namespace URI for this EPP domain
  mapping.

  urn:iana:xml:xmlschema:domain: The XML Schema URI for this EPP domain
  mapping.

7. Security Considerations

  The object mapping described in this document does not provide any
  security services beyond those specified by [EPP] and protocol layers
  used by EPP.



Hollenbeck              Expires October 9, 2001                [Page 32]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


8. References

  [CHARSET] ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets

  [EPP] S. Hollenbeck: "Extensible Provisioning Protocol", draft-ietf-
  provreg-epp-01.txt, work in progress.

  [EPP-C] S. Hollenbeck: "Extensible Provisioning Protocol Contact
  Mapping", draft-hollenbeck-epp-contact-01.txt, work in progress.

  [EPP-H] S. Hollenbeck: "Extensible Provisioning Protocol Host
  Mapping", draft-hollenbeck-epp-host-01.txt, work in progress.

  [IANA] T. Narten, H. Alvestrand: "Guidelines for Writing an IANA
  Considerations Section in RFCs", BCP 26, RFC 2434, October 1998.

  [ISO8601] ISO 8601:1988 (E): "Data elements and interchange formats -
  Information interchange - Representation of dates and times - The
  International Organization for Standardization".

  [RFC952] K. Harrenstien et al.: "DOD Internet Host Table
  Specification", RFC 952, October 1985.

  [RFC1123] R. Braden: "Requirements for Internet Hosts -- Application
  and Support", RFC 1123, October 1989.

  [RFC1700] J. Reynolds, J. Postel: "Assigned Numbers", STD 2, RFC 1700,
  October 1994.

  [RFC2119] S. Bradner: "Key Words for Use in RFCs to Indicate
  Requirement Levels", BCP 14, RFC 2119, March 1997.

  [XML] Editor T. Bray et al.: "Extensible Markup Language (XML) 1.0
  (Second Edition)", http://www.w3.org/TR/REC-xml, W3C Recommendation 6
  October 2000.

  [XMLS-1] Editor H. Thompson et al.: "XML Schema Part 1: Structures",
  http://www.w3.org/TR/xmlschema-1, W3C Candidate Recommendation 24
  October 2000.

  [XMLS-2] Editors P. Biron and A. Malhotra: "XML Schema Part 2:
  Datatypes", http://www.w3.org/TR/xmlschema-2, W3C Candidate
  Recommendation 24 October 2000.








Hollenbeck              Expires October 9, 2001                [Page 33]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


9. Author's Address

  Scott Hollenbeck
  VeriSign Global Registry Services
  21345 Ridgetop Circle
  Dulles, VA 20166-6503
  USA
  shollenbeck@verisign.com











































Hollenbeck              Expires October 9, 2001                [Page 34]

Internet-Draft          EPP Domain Name Mapping            April 9, 2001


A. Full Copyright Statement

  Copyright (C) The Internet Society 2001.  All Rights Reserved.

  This document and translations of it may be copied and furnished to
  others, and derivative works that comment on or otherwise explain it
  or assist in its implementation may be prepared, copied, published and
  distributed, in whole or in part, without restriction of any kind,
  provided that the above copyright notice and this paragraph are
  included on all such copies and derivative works.  However, this
  document itself may not be modified in any way, such as by removing
  the copyright notice or references to the Internet Society or other
  Internet organizations, except as needed for the purpose of developing
  Internet standards in which case the procedures for copyrights defined
  in the Internet Standards process must be followed, or as required to
  translate it into languages other than English.

  The limited permissions granted above are perpetual and will not be
  revoked by the Internet Society or its successors or assigns.

  This document and the information contained herein is provided on an
  "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
  TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
  NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN
  WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
  MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Acknowledgement

  Funding for the RFC Editor function is currently provided by the
  Internet Society.




















Hollenbeck              Expires October 9, 2001                [Page 35]

1. Introduction .................................................    3
  2. Object Attributes ............................................    4
  2.1 Domain Name and Host Names ..................................    4
  2.2 Client Identifiers ..........................................    4
  2.3 Status Values ...............................................    4
  2.4 Domain Contacts .............................................    6
  2.5 Dates and Times .............................................    6
  2.6 Validity Periods ............................................    6
  2.7 Authorization Identifiers ...................................    6
  3. EPP Command Mapping ..........................................    7
  3.1 EPP Query Commands ..........................................    7
  3.1.1 EPP <check> Command .......................................    7
  3.1.2 EPP <info> Command ........................................    8
  3.1.3 EPP <transfer> Command ....................................   11
  3.2 EPP Transform Commands ......................................   14
  3.2.1 EPP <create> Command ......................................   14
  3.2.2 EPP <delete> Command ......................................   16
  3.2.3 EPP <renew> Command .......................................   17
  3.2.4 EPP <transfer> Command ....................................   19
  3.2.5 EPP <update> Command ......................................   22
  4. Formal Syntax ................................................   25
  5. Internationalization Considerations ..........................   32
  6. IANA Considerations ..........................................   32
  7. Security Considerations ......................................   32
  8. References ...................................................   33
  9. Author's Address .............................................   34
  A. Full Copyright Statement .....................................   35
Note: Cut and paste the table of contents to the appropriate area!























Hollenbeck              Expires October 9, 2001                 [Page 1]
