NSS              = certspec-hash / certspec-content / certspec-el      /
                   other-certspec-type ":" other-certspec-value

hexOctet         = 2HEXDIG

certspec-hash    = "SHA-1"   ":" 20hexOctet /
                   "SHA-256" ":" 32hexOctet /
                   "SHA-384" ":" 48hexOctet /
                   "SHA-512" ":" 64hexOctet

certspec-content = "hex"     ":" 1*hexOctet /
                   "base64"  ":" base64url / base64relaxed

base64url        = 1*base64urlcharP
base64relaxed    = 1*(base64urlcharP / "+" / "/")  ; not pchar

base64urlchar  = ALPHA / DIGIT / "-" / "_" / pct-encoded ; from RFC 3986

certspec-el      = "issuersn" ":" distinguishedNameUC ";" serialNumber /
                   "ski"      ":" 1*(hexOctet)

distinguishedNameUC  = 1*pchar-no-semi            /  ; close to RFC 3986
                       distinguishedNameUCrelaxed
serialNumber         = 1*hexOctet

pchar-no-semi = unreserved / pct-encoded / "!" / "$" / "&" / "'" /
                "(" / ")" / "*" / "+" / "," / "=" / ":" / "@"

distinguishedNameUCrelaxed = 1*(pchar / WSP / UTFMB) ; not pchar
                                                     ; from RFC 4512

certspec-type        = scheme                        ; from RFC 3986
certspec-value       = 1*pchar                       ; from RFC 3986

other-certspec-type  = certspec-type
other-certspec-value = certspec-value

                          Figure 1: certspec ABNF

certspec-value = [ mediatype ] [ ";base64" ] "," data

sn=E. Mu1oz$el\<Toro?
sn=E. Mu\C3\B1oz$el\<Toro?

