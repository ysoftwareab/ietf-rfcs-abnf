cnNldD11dGYtOA=="
ZDRiYmQ3NjBhMTUyMzIxZjIxNDNhZjcscW9wPWF1dGg="
mZmZA==")
    
cnNldD11dGYtOA==
ZDRiYmQ3NjBhMTUyMzIxZjIxNDNhZjcscW9wPWF1dGg="
sieveurl = sieveurl-server / sieveurl-script
      
sieveurl-server = "sieve://" authority
      
sieveurl-script = "sieve://" [ authority ] "/" scriptname

scriptname = *pchar

SAFE-CHAR             = %x01-09 / %x0B-0C / %x0E-21 / %x23-5B /
                            %x5D-7F
                            ;; any TEXT-CHAR except QUOTED-SPECIALS

QUOTED-CHAR           = SAFE-UTF8-CHAR / DQUOTE QUOTED-SPECIALS

QUOTED-SPECIALS       = DQUOTE / "\"

SAFE-UTF8-CHAR        = SAFE-CHAR / UTF8-2 / UTF8-3 / UTF8-4 /
                            UTF8-5 / UTF8-6

UTF8-1                = %x80-BF

UTF8-2                = %xC0-DF UTF8-1

UTF8-3                = %xE0-EF 2UTF8-1

UTF8-4                = %xF0-F7 3UTF8-1

UTF8-5                = %xF8-FB 4UTF8-1

UTF8-6                = %xFC-FD 5UTF8-1

auth-type             = DQUOTE auth-type-name DQUOTE

auth-type-name        = iana-token
                            ;; as defined in SASL [SASL]

command               = command-authenticate / command-logout /
                            command-getscript / command-setactive /
                            command-listscripts / command-deletescript /
                            command-putscript / command-capability /
                            command-havespace / command-starttls

command-authenticate  = "AUTHENTICATE" SP auth-type [SP string]
                            *(CRLF string) CRLF

command-capability    = "CAPABILITY" CRLF

command-deletescript  = "DELETESCRIPT" SP sieve-name CRLF

command-getscript     = "GETSCRIPT" SP sieve-name CRLF

command-havespace     = "HAVESPACE" SP sieve-name SP number CRLF

command-listscripts   = "LISTSCRIPTS" CRLF

command-logout        = "LOGOUT" CRLF

command-putscript     = "PUTSCRIPT" SP sieve-name SP string CRLF

command-setactive     = "SETACTIVE" SP sieve-name CRLF

command-starttls      = "STARTTLS" CRLF

literal-c2s           = "{" number  "+}" CRLF *OCTET
                            ;; The number represents the number of
                            ;; octets.
                            ;; This type of literal can only be sent
                            ;; from the client to the server.

literal-s2c           = "{" number  "}" CRLF *OCTET
                            ;; Almost identical to literal-c2s,
                            ;; but with no '+' character.
                            ;; The number represents the number of
                            ;; octets.
                            ;; This type of literal can only be sent
                            ;; from the server to the client.

number                = 1*DIGIT
                            ;; A 32-bit unsigned number.
                            ;; (0 <= n < 4,294,967,296)

quoted                = DQUOTE *1024QUOTED-CHAR DQUOTE
                            ;; limited to 1024 octets between the <">s

resp-code             = "AUTH-TOO-WEAK" / "ENCRYPT-NEEDED" /
                            "QUOTA" / resp-code-sasl /
                            resp-code-referral /
                            "TRANSITION-NEEDED" / "TRYLATER" /
                            resp-code-ext

resp-code-referral    = "REFERRAL" SP sieveurl

resp-code-sasl        = "SASL" SP string

resp-code-ext         = iana-token [SP extension-data]
                            ;; unknown response codes MUST be tolerated
                            ;; by the client. "iana-token" and
                            ;; "extension-data" are defined in [ACAP].

response              = response-authenticate /
                            response-logout /
                            response-getscript /
                            response-setactive /
                            response-listscripts /
                            response-deletescript /
                            response-putscript /
                            response-capability /
                            response-havespace /
                            response-starttls

response-authenticate = *(string CRLF) (response-oknobye)

response-capability   = *(single-capability) response-oknobye
     
single-capability     = capability-name [SP string] CRLF
    
capability-name       = string
                            ;; Note that literal-s2c is allowed.

initial-capabilities  = DQUOTE "IMPLEMENTATION" DQUOTE SP string /
                            DQUOTE "SASL" DQUOTE SP sasl-mechs /
                            DQUOTE "SIEVE" DQUOTE SP sieve-extensions /
                            DQUOTE "STARTTLS" DQUOTE
                            ;; Each capability conforms to
                            ;; the syntax for single-capability.
                            ;; Also note that the capability name
                            ;; can be returned as either literal-s2c
                            ;; or quoted, even though only "quoted"
                            ;; string is shown above.
                            
sasl-mechs = string
                 ; space separated list of SASL mechanisms,
                 ; can be empty
                 
sieve-extensions = string
                 ; space separated list of supported SIEVE extensions,
                 ; can be empty

response-deletescript = response-oknobye

response-getscript    = (string CRLF response-ok) /
                            response-nobye

response-havespace    = response-oknobye

response-listscripts  = *(sieve-name [SP "ACTIVE"] CRLF)
                            response-oknobye
                            ;; ACTIVE may only occur with one sieve-name

response-logout       = response-oknobye

response-ok           = "OK" [SP "(" resp-code ")"]
                            [SP string] CRLF

response-nobye        = ("NO" / "BYE") [SP "(" resp-code ")"]
                            [SP string] CRLF

response-oknobye      = response-ok / response-nobye

response-putscript    = response-oknobye

response-setactive    = response-oknobye

response-starttls     = response-oknobye

sieve-name            = string
                            ;; See Section 1.7 for the full list of
                            ;; prohibited characters.

string                = quoted / literal-c2s / literal-s2c
                            ;; literal-c2s is only allowed when sent
                            ;; from the client to the server. 
                            ;; literal-s2c is only allowed when sent
                            ;; from the server to the client.
                            ;; quoted is allowed in either direction.

