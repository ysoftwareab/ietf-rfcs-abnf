zz = DH(skE, pkR)
enc = Marshal(pkE)
pkE = Unmarshal(enc)
zz = concat(DH(skE, pkR), DH(skI, pkR))
enc = Marshal(pkE)
pkE = Unmarshal(enc)
default_pkIm = zero(Npk)
default_psk = zero(Nh)
default_pskID = zero(0)

got_psk = (psk != default_psk and pskID != default_pskID)
no_psk = (psk == default_psk and pskID == default_pskID)
got_pkIm = (pkIm != default_pkIm)
no_pkIm = (pkIm == default_pkIm)

pkRm = Marshal(pkR)
ciphersuite = concat(kem_id, kdf_id, aead_id)
pskID_hash = Hash(pskID)
info_hash = Hash(info)
context = concat(mode, ciphersuite, enc, pkRm, pkIm, pskID_hash, info_hash)

secret = Extract(psk, zz)
key = Expand(secret, concat("hpke key", context), Nk)
nonce = Expand(secret, concat("hpke nonce", context), Nn)
zz = Decap(enc, skR)
zz = Decap(enc, skR)
pkIm = Marshal(pk(skI))
zz = AuthDecap(enc, skR, pkI)
pkIm = Marshal(pkI)
pkIm = Marshal(pk(skI))
zz = AuthDecap(enc, skR, pkI)
pkIm = Marshal(pkI)
encSeq = encode_big_endian(seq, len(self.nonce))
ct = Seal(self.key, self.Nonce(self.seq), aad, pt)
pt = Open(self.key, self.Nonce(self.seq), aad, ct)
ct = ctx.Seal(aad, pt)
ctx = Setup<MODE>R(enc, skR, info, ...)
ct = ctx.Seal(aad, pt)
ctx = SetupAuthPSKR(enc, skR, info, psk, pskID, pkI)
