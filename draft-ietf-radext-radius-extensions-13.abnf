Identifier = 1*DIGIT *( "." 1*DIGIT )

HEXCHAR = HEXDIG HEXDIG

STRING = DQUOTE 1*CHAR DQUOTE

TLV = "{" SP 1*DIGIT SP DATA SP "}"

DATA = (HEXCHAR *(SP HEXCHAR)) / (TLV *(SP TLV)) / STRING

LINE = Identifier SP DATA

p = buffer + 1;

p = buffer + 1;
length = encode_tlv(p, output, outlen);
length = 0;

sublen = encode_data_tlv(p, &q, output, outlen);
p = q;
length = encode_data_string(p, output, outlen);
length = 0;
attr = strtol(buffer, endptr, 10);
vendor = strtol(buffer + 1, endptr, 10);
attr = decode_attr(buffer, &p);
length = encode_tlv(p, output + 2, outlen - 2);

length = encode_data(p, output + 2, outlen - 2);
vendor = decode_vendor(buffer, &p);
length = encode_tlv(p, output + 4, outlen - 4);
vendor = decode_vendor(buffer, &p);
attr = decode_attr(p, &p);
length = encode_data(p, output + 5, outlen - 5);
attr = decode_attr(buffer, &p);
length = encode_evs(p, output + 1, outlen - 1);
length = encode_data(p, output + 1, outlen - 1);
attr = decode_attr(buffer, &p);
length = encode_evs(p, output + 4, outlen - 4);
length = encode_data(p, output + 4, outlen - 4);
total = 0;
attr = decode_attr(buffer, &p);
length = 2;
sublen = encode_vsa(p, output + 2, outlen - 2);

sublen = encode_data(p, output + 2, outlen - 2);

sublen = encode_extended(p + 1,
                                  output + 2, outlen - 2);
fp = stdin;
fp = fopen(argv[1], "r");
lineno = 0;
p = strchr(buffer, '#');
p = buffer;
outlen = encode_rfc(input, output, sizeof(output));
