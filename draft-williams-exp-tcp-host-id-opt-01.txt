



Network Working Group                                        B. Williams
Internet-Draft                                              Akamai, Inc.
Intended status: Experimental                               M. Boucadair
Expires: August 15, 2014                                  France Telecom
                                                                 D. Wing
                                                     Cisco Systems, Inc.
                                                       February 11, 2014


            Experimental Option for TCP Host Identification
                 draft-williams-exp-tcp-host-id-opt-01

Abstract

   Recent IETF proposals have identified benefits to more distinctly
   identifying the hosts that are hidden behind a shared address/prefix
   sharing device or application-layer proxy.  Analysis indicates that
   the use of a TCP option for this purpose can be successfully applied
   to a broad range of use cases.  This document describes a common
   experimental TCP option format for host identification.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on August 15, 2014.

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect



Williams, et al.         Expires August 15, 2014                [Page 1]

Internet-Draft       Experimental TCP Host ID Option       February 2014


   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

1.  Introduction

   A broad range of issues associated with address sharing have been
   well documented in [RFC6269] and
   [I-D.boucadair-intarea-host-identifier-scenarios].  In addition,
   [RFC6967] provides analysis of various solutions to the problem of
   revealing the sending hosts's identifier (HOST_ID) information to the
   receiver, which indicates that a solution using a TCP [RFC0793]
   option for this purpose can be successfully applied to a broad range
   of use cases with limited performance impact.

   Multiple recent Internet Drafts define TCP options for the purpose of
   host identification: [I-D.wing-nat-reveal-option],
   [I-D.abdo-hostid-tcpopt-implementation], and
   [I-D.williams-overlaypath-ip-tcp-rfc].  This document defines a
   common TCP option format to meet the needs of all three of the above
   proposals.  This document is self-contained; required information to
   implement the proposed TCP option is specified in this memo.

   The option defined in this document uses the TCP experimental option
   codepoint sharing mechanism defined in [RFC6994] and is intended to
   allow validation of this common option format in order to conduct
   more experimental work that will complement the experiment results
   already documented in [I-D.abdo-hostid-tcpopt-implementation].

   In addition to the extensive testing effort documented in
   [I-D.abdo-hostid-tcpopt-implementation], further experiments will be
   conducted to assess the validity of the following points:

   o  Differentiate between attack and non-attack traffic when the
      source of the attack is hidden behind a NAT (including CGN
      (Carrier Grade NAT) in the Service Provider's network or a NAT in
      a CDN overlay infrastructure).

   o  Enforce per-client policies in the presence of address sharing
      devices.

   o  Help load-balancing decision-making process at the receiver side
      (e.g. to maintain session affinity in a load-balancing system).

   Section 5 of this document discusses compatibility between this new
   TCP option and existing commonly deployed TCP options.




Williams, et al.         Expires August 15, 2014                [Page 2]

Internet-Draft       Experimental TCP Host ID Option       February 2014


2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

3.  Option Format

   When used for host identification, the TCP experimental option has
   the following format and content.

    0          1          2          3
    01234567 89012345 67890123 45678901
   +--------+--------+--------+--------+
   |  Kind  | Length |       ExID      |
   +--------+--------+--------+--------+
   |  Host ID ...
   +--------+---

   Kind:  The option kind value is 253

   Length:  The length of the option is variable, based on the required
      size of the host identifier (e.g. a 2 octet host ID will require a
      length of 6, while a 4 octet host ID will require a length of 8).

   ExID:  The experiment ID value is 0x0348 (840).

   Host ID:  The host identifier is an application dependent value with
      an interpretation agreed upon by the sender and the receiver.

   When multiple host identifiers are required (e.g. a list of IP
   addresses, an IP address and a port number), the HOST_ID option is
   included multiple times within the packet, once for each identifier.
   While this approach significantly increases option space utilization
   when multiple identifiers are required, cases where only a single
   identifier is required are more common and thus it is beneficial to
   optimize for those cases.

4.  Option Use

   The HOST_ID option should only be added by the origin host or any
   device involved in the forwarding path that changes the IP and/or TCP
   headers (e.g., NAT44 [RFC3022], Layer-2 Aware NAT, DS-Lite AFTR
   [RFC6333], NPTv6 [RFC6296], NAT64 [RFC6146], Dual-Stack Extra Lite
   [RFC6619], TCP Proxy, etc.).  The HOST_ID option MUST NOT be added or
   modified en-route by any device that does not modify the IP header or
   the transport header.




Williams, et al.         Expires August 15, 2014                [Page 3]

Internet-Draft       Experimental TCP Host ID Option       February 2014


   The information conveyed in the HOST_ID option SHOULD correlate to
   the IP and/or transport headers change(s) (i.e., some of the IP
   address and /or port number bits are used to generate the HOST_ID.

   Intermediary devices (e.g. address sharing device) SHOULD be
   configurable to enable including the HOST_ID TCP option.  These
   devices MUST be configured with the type of information to populate
   the HOST_ID TCP option (e.g. certain bits of the source IPv6 address,
   the full source IPv6 address, certain bits of the source IPv4
   address, the full source IPv4 address, the source port number, etc.).

   The device may be configured to include multiple identifiers (e.g.
   both a source IP address and a source port number).  In such case,
   the device MUST insert two instances of the HOST_ID option, each of
   which contains the appropriate information.  Note, there is no need
   to signal the semantic of the included data as this specification
   assumes the service is aware of that information by out of band means
   (e.g. both the service and the address sharing device are managed by
   the same administrative entity).

   When an intermediary device is configured to include the HOST_ID
   option, it MUST include the HOST_ID option in SYN messages.  In
   addition, an intermediary device and a receiving end device MAY be
   configurable to allow inclusion of the HOST_ID option in additional
   messages in order to support the use of SYN cookies.  For example:

   o  The HOST_ID option from the initial SYN might be included in the
      SYN/ACK message when a SYN cookie is being sent in order to echo
      the HOST_ID value back to the intermediary device.

   o  The HOST_ID option might be included in ACK messages that contain
      no data.

   o  The HOST_ID option might be included in all ACK messages until
      return messages from the receiver positively indicate that an ACK
      has been received (e.g. the return messages either includes or
      acknowledges data).

   The option SHOULD NOT be included in packets if the resulting packet
   would require local fragmentation.  The option MUST NOT be include in
   packets when there is not enough space for at least one valid
   identifier of the configured type.

   The device MUST be configured with the behavior to follow when a
   HOST_ID TCP option is already present in the message:






Williams, et al.         Expires August 15, 2014                [Page 4]

Internet-Draft       Experimental TCP Host ID Option       February 2014


   o  If the device is configured to strip any existing HOST_ID TCP
      option, it MUST remove any occurrence of the HOST_ID in a received
      TCP message.

   o  If the device is configured to strip any existing HOST_ID TCP
      option and insert a local HOST_ID TCP Option, it MUST remove any
      occurrence of the HOST_ID in a received TCP message and then MUST
      include a local HOST_ID TCP option.

   o  The device may be configured to maintain any existing HOST_ID TCP
      option(s) in the received message, the device MUST NOT remove
      those instances of the option.  Furthermore, it MUST add a new
      HOST_ID TCP option while preserving the order of appearance in the
      message.  In particular, the local HOST_ID TCP option MUST appear
      as the last occurrence of the HOST_ID TCP option in the message.

5.  Interaction with Other TCP Options

   This section details how the HOST_ID option functions in conjunction
   with other TCP options.

5.1.  Option Space

   TCP provides for a maximum of 40 octets for TCP options.  As
   discussed in Appendix A of Multipath TCP (MPTCP) [RFC6824], a typical
   SYN from modern, popular operating systems contain several TCP
   options (MSS, window scale, SACK permitted, and timestamp) which
   consume 19-24 octets depending on word alignment of the options.  The
   initial SYN from a multipath TCP client would consume an additional
   16 octets.

   HOST_ID needs at least 6 octets to be useful, so 9-21 octets are
   sufficient for many scenarios that benefit from HOST_ID.  However, 4
   octets are not enough space for the HOST_ID option.  Thus, a TCP SYN
   containing all the typical TCP options (MSS, window Scale, SACK
   permitted, timestamp), and also containing multipath capable or
   multipath join), and also being word aligned, has insufficient space
   to also accommodate HOST_ID.  This means something has to give.  The
   choices are to avoid word alignment in that case (freeing 5 octets),
   remove a TCP option from the original TCP SYN, or avoid adding the
   HOST_ID option.  We expect to learn from deployment experience during
   the experiment which of these options, or a combination of these
   options, is best.








Williams, et al.         Expires August 15, 2014                [Page 5]

Internet-Draft       Experimental TCP Host ID Option       February 2014


5.2.  Authentication Option (TCP-AO)

   The TCP-AO option [RFC5925] supports a "TCP option flag" to indicate
   whether TCP options other than TCP-AO are included in the MAC
   calculation (Section 3.1 of [RFC5925]).  When the options are not
   included in the MAC calculation, the use of HOST_ID option does not
   interfere with TCP-AO option.  However, because TCP-AO provides
   integrity protection of the source IP address, TCP-AO is broken in
   the presence of NAT.

   Because TCP-AO is incompatible with address sharing, an experimental
   extension to TCP-AO (called TCP-AO-NAT) is introduced in [RFC6978].
   Injecting a HOST_ID TCP option does not interfere with the use of
   TCP-AO-NAT if the TCP options are not included in the MAC
   calculation.

   As specified in [RFC5925], TCP-AO must be the first TCP option
   processed on incoming segments.

6.  Security Considerations

   Security (including privacy) considerations common to all HOST_ID
   solutions are discussed in [RFC6967].  These considerations should be
   taken into account.

   The content of the HOST_ID option SHOULD NOT be used for purposes
   that require a trust relationship between the host and the server
   (e.g. billing and/or intrusion prevention) unless a mechanism outside
   the scope of this specification is used to ensure the necessary level
   of trust.  When the receiving network uses the values provided by the
   option in a way that does not require trust (e.g. maintaining session
   affinity in a load-balancing system), then use of a mechanism to
   enforce the trust relationship might not be required.

7.  Privacy Considerations

   Sending a TCP SYN across the public Internet necessarily discloses
   the public IP address of the sending host.  When an intermediate
   address sharing device is deployed on the public Internet (see
   [I-D.boucadair-intarea-host-identifier-scenarios] for examples),
   anonymity of the hosts using the device will be increased, with hosts
   represented by multiple source IP addresses on the ingress side of
   the device using a single source IP address on the egress side.  The
   HOST_ID TCP option removes that increased anonymity, taking
   information that was already visible in TCP packets on the public
   Internet on the ingress side of the address sharing device and making
   it available on the egress side of the device as well.  In some
   cases, an explicit purpose of the address sharing device is



Williams, et al.         Expires August 15, 2014                [Page 6]

Internet-Draft       Experimental TCP Host ID Option       February 2014


   anonymity, in which case use of the HOST_ID TCP option would be
   incompatible with the purpose of the device.

   Use of the HOST_ID TCP option described here should follow the
   recommendations laid out in [RFC6967].  In particular:

   o  The HOST_ID option SHOULD NOT be used to provide client geographic
      or network location information that was not publicly visible in
      IP packets for the TCP flows processed by the inserting host.  For
      example, the client's IP address MAY be used as the HOST_ID option
      value, but any geographic or network location information derived
      from the client's IP address SHOULD NOT be used as the HOST_ID
      value.

   o  The HOST_ID option MAY provide differentiating information that is
      locally unique such that individual TCP flows processed by the
      inserting host can be reliably identified.  The HOST_ID option
      SHOULD NOT provide client identification information that was not
      publicly visible in IP packets for the TCP flows processed by the
      inserting host.

   o  The HOST_ID option SHOULD be stripped from IP packets traversing
      middle boxes that provide network-based anonymity services.

8.  IANA Considerations

   This document specifies a new TCP option that uses the shared
   experimental options format [RFC6994], with ExID=0x0348 (840) in
   network-standard byte order.  This ExID has already been registered
   with IANA.

9.  Acknowledgements

   Many thanks to J. Touch, M. Scharf, W. Eddy, T. Reddy, and Y. Nishida
   for their comments.

10.  References

10.1.  Normative References

   [RFC0793]  Postel, J., "Transmission Control Protocol", STD 7, RFC
              793, September 1981.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.






Williams, et al.         Expires August 15, 2014                [Page 7]

Internet-Draft       Experimental TCP Host ID Option       February 2014


10.2.  Informative References

   [I-D.abdo-hostid-tcpopt-implementation]
              Abdo, E., Boucadair, M., and J. Queiroz, "HOST_ID TCP
              Options: Implementation & Preliminary Test Results",
              draft-abdo-hostid-tcpopt-implementation-03 (work in
              progress), July 2012.

   [I-D.boucadair-intarea-host-identifier-scenarios]
              Boucadair, M., Binet, D., Durel, S., Chatras, B., Reddy,
              T., and B. Williams, "Host Identification: Use Cases",
              draft-boucadair-intarea-host-identifier-scenarios-03 (work
              in progress), March 2013.

   [I-D.williams-overlaypath-ip-tcp-rfc]
              Williams, B., "Overlay Path Option for IP and TCP", draft-
              williams-overlaypath-ip-tcp-rfc-04 (work in progress),
              June 2013.

   [I-D.wing-nat-reveal-option]
              Yourtchenko, A. and D. Wing, "Revealing hosts sharing an
              IP address using TCP option", draft-wing-nat-reveal-
              option-03 (work in progress), December 2011.

   [RFC3022]  Srisuresh, P. and K. Egevang, "Traditional IP Network
              Address Translator (Traditional NAT)", RFC 3022, January
              2001.

   [RFC5925]  Touch, J., Mankin, A., and R. Bonica, "The TCP
              Authentication Option", RFC 5925, June 2010.

   [RFC6146]  Bagnulo, M., Matthews, P., and I. van Beijnum, "Stateful
              NAT64: Network Address and Protocol Translation from IPv6
              Clients to IPv4 Servers", RFC 6146, April 2011.

   [RFC6269]  Ford, M., Boucadair, M., Durand, A., Levis, P., and P.
              Roberts, "Issues with IP Address Sharing", RFC 6269, June
              2011.

   [RFC6296]  Wasserman, M. and F. Baker, "IPv6-to-IPv6 Network Prefix
              Translation", RFC 6296, June 2011.

   [RFC6333]  Durand, A., Droms, R., Woodyatt, J., and Y. Lee, "Dual-
              Stack Lite Broadband Deployments Following IPv4
              Exhaustion", RFC 6333, August 2011.






Williams, et al.         Expires August 15, 2014                [Page 8]

Internet-Draft       Experimental TCP Host ID Option       February 2014


   [RFC6619]  Arkko, J., Eggert, L., and M. Townsley, "Scalable
              Operation of Address Translators with Per-Interface
              Bindings", RFC 6619, June 2012.

   [RFC6824]  Ford, A., Raiciu, C., Handley, M., and O. Bonaventure,
              "TCP Extensions for Multipath Operation with Multiple
              Addresses", RFC 6824, January 2013.

   [RFC6967]  Boucadair, M., Touch, J., Levis, P., and R. Penno,
              "Analysis of Potential Solutions for Revealing a Host
              Identifier (HOST_ID) in Shared Address Deployments", RFC
              6967, June 2013.

   [RFC6978]  Touch, J., "A TCP Authentication Option Extension for NAT
              Traversal", RFC 6978, July 2013.

   [RFC6994]  Touch, J., "Shared Use of Experimental TCP Options", RFC
              6994, August 2013.

Authors' Addresses

   Brandon Williams
   Akamai, Inc.
   8 Cambridge Center
   Cambridge, MA  02142
   USA

   Email: brandon.williams@akamai.com


   Mohamed Boucadair
   France Telecom
   Rennes, 35000
   Fance

   Email: mohamed.boucadair@orange.com


   Dan Wing
   Cisco Systems, Inc.
   170 West Tasman Drive
   San Jose, CA  95134
   USA

   Email: dwing@cisco.com






Williams, et al.         Expires August 15, 2014                [Page 9]
