Secure TELNET Working Group                    Russell Housley (SPYRUS)
                                                  Todd Horting (SPYRUS)
Internet-Draft                                       Peter Yee (SPYRUS)
                                                          December 1999


                    TELNET Authentication Using DSA

                 <draft-housley-telnet-auth-dsa-04.txt>


Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   Distribution of this memo is unlimited.  Please send comments to the
   <telnet-ietf@bsdi.com> mailing list.


Abstract

   This document defines a telnet authentication mechanism using the
   Digital Signature Algorithm (DSA) [FIPS186].  It relies on the TELNET
   Authentication Option [RFC1416].










Housley, Horting, Yee       Expires June 2000                   [Page 1]





INTERNET DRAFT                                             December 1999


1. Command Names and Codes

   AUTHENTICATION           37

     Authentication Commands:

       IS                       0
       SEND                     1
       REPLY                    2
       NAME                     3

     Authentication Types:

       DSS                     14

     Modifiers:

       AUTH_WHO_MASK            1
       AUTH_CLIENT_TO_SERVER    0
       AUTH_SERVER_TO CLIENT    1

       AUTH_HOW_MASK            2
       AUTH_HOW_ONE_WAY         0
       AUTH_HOW_MUTUAL          2

       ENCRYPT_MASK            20
       ENCRYPT_OFF              0
       ENCRYPT_USING_TELOPT     4
       ENCRYPT_AFTER_EXCHANGE  16
       ENCRYPT_RESERVED        20

       INI_CRED_FWD_MASK        8
       INI_CRED_FWD_OFF         0
       INI_CRED_FWD_ON          8

     Sub-option Commands:

       DSS_INITIALIZE           1
       DSS_TOKENBA              2
       DSS_CERTA_TOKENAB        3
       DSS_CERTB_TOKENBA2       4


2. TELNET Security Extensions

   TELNET, as a protocol, has no concept of security.  Without
   negotiated options, it merely passes characters back and forth
   between the NVTs represented by the two TELNET processes.  In its



Housley, Horting, Yee       Expires June 2000                   [Page 2]





INTERNET DRAFT                                             December 1999


   most common usage as a protocol for remote terminal access (TCP port
   23), TELNET connects to a server that requires user-level
   authentication through a user name and password in the clear; the
   server does not authenticate itself to the user.

   The TELNET Authentication Option provides for user authentication and
   server authentication.  User authentication replaces or augments the
   normal host password mechanism.  Server authentication is normally
   done in conjunction with user authentication.

   In order to support these security services, the two TELNET entities
   must first negotiate their willingness to support the TELNET
   Authentication Option.  Upon agreeing to support this option, the
   parties are then able to perform sub-options determine the
   authentication protocol to be used, and possibly the remote user name
   to be used for authorization checking.

   Authentication and parameter negotiation occur within an unbounded
   series of exchanges.  The server proposes a preference-ordered list
   of authentication types (mechanisms) which it supports.  In addition
   to listing the mechanisms it supports, the server qualifies each
   mechanism with a modifier that specifies whether the authentication
   is to be one-way or mutual, and in which direction the authentication
   is to be performed.  The client selects one mechanism from the list
   and responds to the server indicating its choice and the first set of
   authentication data needed for the selected authentication type.  The
   server and the client then proceed through whatever number of
   iterations are required to arrive at the requested authentication.

3. Use of Digital Signature Algorithm (DSA)

   DSA is also known as the Digital Signature Standard (DSS), and the
   names are used interchangeably.  This paper specifies a method in
   which DSA may be used to achieve certain security services when used
   in conjunction with the TELNET Authentication Option.  SHA-1
   [FIPS180-1] is used with DSA [FIPS186].

   DSA may provide either unilateral or mutual authentication.  Due to
   TELNET's character-by-character nature, it is not well-suited to the
   application of integrity-only services, therefore use of the DSA
   profile provides authentication but it does not provide session
   integrity.  This specification follows the token and exchanges
   defined in NIST FIPS PUB 196 [FIPS196], Standard for Public Key
   Cryptographic Entity Authentication Mechanisms including Appendix A
   on ASN.1 encoding of messages and tokens.  All data that is covered
   by a digital signature must be encoded using the Distinguished
   Encoding Rules (DER).  However, other data may use either the Basic
   Encoding Rules (BER) or DER [X.208].



Housley, Horting, Yee       Expires June 2000                   [Page 3]





INTERNET DRAFT                                             December 1999


3.1.  Unilateral Authentication with DSA

   Unilateral authentication must be done client-to-server.  What
   follows are the protocol steps necessary to perform DSA
   authentication as specified in FIPS PUB 196 under the TELNET
   Authentication Option framework.  Where failure modes are
   encountered, the return codes follow those specified in the TELNET
   Authentication Option.  They are not enumerated here, as they are
   invariant among the mechanisms used.  FIPS PUB 196 employs a set of
   exchanges that are transferred to provide authentication.  Each
   exchange employs various fields and tokens, some of which are
   optional.  In addition, each token has several subfields that are
   optional.  A conformant subset of the fields and subfields have been
   selected.  Therefore, the exchanges below do not use the FIPS PUB 196
   notation indicating optional fields, as all subfields used are
   mandatory.  The tokens are ASN.1 encoded as defined in Appendix A of
   FIPS PUB 196, and each token is named to indicate the direction in
   which it flows (e.g., TokenBA flows from Party B to Party A).  All
   data that is covered by a digital signature must be encoded using the
   Distinguished Encoding Rules (DER).  Data that is not covered by a
   digital signature may use either the Basic Encoding Rules (BER) or
   DER [X.208].  Figure 1 illustrates the exchanges for unilateral
   authentication.

   During authentication, the client may provide the user name to the
   server by using the authentication name sub-option.  If the name sub-
   option is not used, the server will generally prompt for a name and
   password in the clear.  The name sub-option must be sent after the
   server sends the list of authentication types supported and before
   the client finishes the authentication exchange, this ensures that
   the server will not prompt for a user name and password.  In figure
   1, the name sub-option is sent immediately after the server presents
   the list of authentication types supported.

   For one-way DSS authentication, the two-octet authentication type
   pair is DSS CLIENT_TO_SERVER | ONE_WAY ENCRYPT_OFF |
   INI_CRED_FWD_OFF.  This indicates that the DSS authentication
   mechanism will be used to authenticate the client to the server and
   that no encryption will be performed.

   CertA is the clients certificate.  CertB is the server's certificate.
   Both certificates are X.509 certificates that contain DSS public
   keys[RFC2459].  The client must validate the server's certificate
   before using the KEA public key it contains.

   Within the unbounded authentication exchange, implementation is
   greatly simplified if each portion of the exchange carries a unique
   identifier.  For this reason, a single octet sub-option identifier is



Housley, Horting, Yee       Expires June 2000                   [Page 4]





INTERNET DRAFT                                             December 1999


   carried immediately after the two-octet authentication type pair.

   The exchanges detailed in Figure 1 below presume knowledge of FIPS
   PUB 196 and the TELNET Authentication Option.  The client is Party A,
   while the server is Party B. At the end of the exchanges, the client
   is authenticated to the server.

   ---------------------------------------------------------------------
    Client (Party A)                   Server (Party B)

                                       <-- IAC DO AUTHENTICATION

    IAC WILL AUTHENTICATION        -->

                                       <-- IAC SB AUTHENTICATION SEND
                                           <list of authentication options>
                                           IAC SE

    IAC SB AUTHENTICATION
    NAME <user name>               -->

    IAC SB AUTHENTICATION IS
    DSS
    CLIENT_TO_SERVER|
        ONE_WAY |
        ENCRYPT_OFF |
        INI_CRED_FWD_OFF
    DSS_INITIALIZE
    IAC SE                        -->

                                       <-- IAC SB AUTHENTICATION REPLY
                                           DSS
                                           CLIENT_TO_SERVER|
                                               ONE_WAY |
                                               ENCRYPT_OFF |
                                               INI_CRED_FWD_OFF
                                           DSS_TOKENBA
                                           Sequence( TokenID, TokenBA )
                                           IAC SE
   ---------------------------------------------------------------------
                           Figure 1 (continued)










Housley, Horting, Yee       Expires June 2000                   [Page 5]





INTERNET DRAFT                                             December 1999


                           Figure 1 (continued)
   ---------------------------------------------------------------------
    Client (Party A)                   Server (Party B)

    IAC SB AUTHENTICATION IS
    DSS
    CLIENT_TO_SERVER|
        ONE_WAY |
        ENCRYPT_OFF |
        INI_CRED_FWD_OFF
    DSS_CERTA_TOKENAB
    Sequence( TokenID, CertA, TokenAB )
    IAC SE                          -->
   ---------------------------------------------------------------------
                                 Figure 1

3.2.  Mutual Authentication with DSA

   Mutual authentication is slightly more complex.  Figure 2 illustrates
   the exchanges.

   For mutual DSS authentication, the two-octet authentication type pair
   is DSS CLIENT_TO_SERVER | MUTUAL | ENCRYPT_OFF | INI_CRED_FWD_OFF.
   This indicates that the DSS authentication mechanism will be used to
   mutually authenticate the client and the server and that no
   encryption will be performed.

   ---------------------------------------------------------------------
    Client (Party A)                   Server (Party B)

   IAC WILL AUTHENTICATION        -->

                                       <-- IAC DO AUTHENTICATION

                                       <-- IAC SB AUTHENTICATION SEND
                                           <list of authentication options>
                                           IAC SE

    IAC SB AUTHENTICATION
    NAME <user name>              -->
   ---------------------------------------------------------------------
                           Figure 2 (continued)









Housley, Horting, Yee       Expires June 2000                   [Page 6]





INTERNET DRAFT                                             December 1999


                           Figure 2 (continued)
   ---------------------------------------------------------------------
    Client (Party A)                   Server (Party B)

    IAC SB AUTHENTICATION IS
    DSS
    CLIENT_TO_SERVER |
        MUTUAL |
        ENCRYPT_OFF |
        INI_CRED_FWD_OFF
    DSS_INITIALIZE
    IAC SE                        -->

                                       <-- IAC SB AUTHENTICATION REPLY
                                           DSS
                                           CLIENT_TO_SERVER |
                                               MUTUAL |
                                               ENCRYPT_OFF |
                                               INI_CRED_FWD_OFF
                                           DSS_TOKENBA
                                           Sequence( TokenID, TokenBA )
                                           IAC SE

    IAC SB AUTHENTICATION IS
    DSS
    CLIENT_TO_SERVER |
        MUTUAL |
        ENCRYPT_OFF |
        INI_CRED_FWD_OFF
    DSS_CERTA_TOKENAB
    Sequence( TokenID, CertA, TokenAB )
    IAC SE                        -->

                                       <-- IAC SB AUTHENTICATION REPLY
                                           DSS
                                           CLIENT_TO_SERVER |
                                               MUTUAL |
                                               ENCRYPT_OFF |
                                               INI_CRED_FWD_OFF
                                           DSS_CERTB_TOKENBA2
                                           Sequence( TokenID, CertB, TokenBA2 )
                                           IAC SE
   ---------------------------------------------------------------------
                                 Figure 2







Housley, Horting, Yee       Expires June 2000                   [Page 7]





INTERNET DRAFT                                             December 1999


4.  Security Considerations

   This entire memo is about security mechanisms.  For DSA to provide
   the authentication discussed, the implementation must protect the
   private key from disclosure.

5.  Acknowledgements

   We would like to thank William Nace for support during implementation
   of this specification.









































Housley, Horting, Yee       Expires June 2000                   [Page 8]





INTERNET DRAFT                                             December 1999


6.  References

   FIPS186    Digital Signature Standard (DSS). FIPS Pub 186.
              May 19, 1994.
              <http://csrc.nist.gov/fips/fips186.pdf>

   FIPS180-1  Secure Hash Standard. FIPS Pub 180-1. April 17, 1995.
              <http://csrc.nist.gov/fips/fips180-1.pdf>

   FIPS196    Standard for Entity Authentication Using Public Key
              Cryptography.  FIPS Pub 196. February 18, 1997.
              <http://csrc.nist.gov/fips/fips196.pdf>

   RFC1416    Borman, David A. "TELNET Authentication Option".
              RFC 1416.  February 1993.

   RFC2459    Housley, R., Ford, W., Polk, W. and D. Solo, "Internet
              X.509 Public Key Infrastructure: X.509 Certificate and
              CRL Profile", RFC 2459, January 1999.

   X.208      CCITT.  Recommendation X.208: Specification of Abstract
              Syntax Notation One (ASN.1).  1988.

7.  Author's Address

   Russell Housley
   SPYRUS
   381 Elden Street, Suite 1120
   Herndon, VA 20172
   USA
   Email: housley@spyrus.com


   Todd Horting
   SPYRUS
   381 Elden Street, Suite 1120
   Herndon, VA 20172
   USA
   Email: thorthing@spyrus.com


   Peter Yee
   SPYRUS
   5303 Betsy Ross Drive
   Santa Clara, CA 95054
   USA
   Email: yee@spyrus.com




Housley, Horting, Yee       Expires June 2000                   [Page 9]





INTERNET DRAFT                                             December 1999





















































Housley, Horting, Yee       Expires June 2000                  [Page 10]


