N=M=50, which are values that seem to work well over a wide range of
mean_delay = E_M(E_T(OWD)) = sum_M(E_T(OWD)) / M

skew_est_T =  (sum_T(OWD < mean_delay)

                    - sum_T(OWD > mean_delay)) / num_T(OWD)

         where

            if (OWD < mean_delay) 1 else 0

            if (OWD > mean_delay) 1 else 0

         skew_est_T is a number between -1 and 1

skew_est = E_M(skew_est_T) = sum_M(skew_est_T) / M

PDV = PDV_max = max_T(OWD) - E_T(OWD)

var_est = E_M(PDV) = sum_M(PDV) / M

freq_est = number_of_crossings / N

pkt_loss = sum_NT(lost packets) / sum_NT(total packets)

Older_mean = E_old(E_T(OWD)) / N/2

Newer_mean = E_new(E_T(OWD)) / N/2

CD_T = (Newer_mean - Older_mean)/N/2

mean_delay = CD_Adj(E_M(E_T(OWD))) = E_M(E_T(OWD)) + CD_T * M/2

skew_base_T = (sum_T(OWD < mean_delay

                    - sum_T(OWD > mean_delay)

skew_est = sum_MT(skew_base_T)/num_MT(OWD)

skew_est = ((M-F+1)*sum(skew_base_T(1:F))

                      + sum([(M-F):1].*skew_base_T(F+1:M)))

                 / ((M-F+1)*sum(numsampT(1:F))

                      + sum([(M-F):1].*numsampT(F+1:M)))

var_est = ((M-F+1)*sum(PDV(1:F)) + sum([(M-F):1].*PDV(F+1:M)))

                / (F*(M-F+1) + sum([(M-F):1])

