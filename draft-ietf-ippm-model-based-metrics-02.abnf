target_pipe_size = target_rate * target_RTT / ( target_MTU -
target_run_length = 3*(target_pipe_size^2)

h1 =  { log((1-alpha)/beta) }/k
h2 =  { log((1-beta)/alpha) }/k
k  =  log{ (p1(1-p0)) / (p0(1-p1)) }
s  =  [ log{ (1-p0)/(1-p1) } ]/k
Xa = 0  = -h1 + sn
T = number of packets at which a failure will occur with probability P;
t = number of packets:
t1 = number of packets (e.g., when failure last occurred)
t2 = t1 + target_run_length
R = failure rate:
P_fail_observed = failed.packet.counter/packet.counter


upper_bound =  packet.counter + target.run.length / 2
lower_bound =  packet.counter - target.run.length / 2


R1 = exp( -upper_bound / target.run.length)
R0 = R(max(0, lower_bound)/ target.run.length)


P_fail_predicted = R1-R0
test_window=target_data_rate*test_RTT/target_MTU.

serving_window_clamp=target_data_rate*serving_RTT/
Wmin = Target_pipe_size, we want the average of Wmin and 2*Wmin to be
target_run_length = (4/3)(target_pipe_size^2)

x = E[W]/RTT

