SIP-URL         = "sip:" [ userinfo "@" ] hostport
                    url-parameters [ headers ]
userinfo        = user [ ":" password ]
user            = *( unreserved | escaped
                  | "&" | "=" | "+" | "$" | "," )
password        = *( unreserved | escaped
                  | "&" | "=" | "+" | "$" | "," )
hostport        = host [ ":" port ]
host            = hostname | IPv4address
hostname        = *( domainlabel "." ) toplabel [ "." ]
domainlabel     = alphanum | alphanum *( alphanum | "-" ) alphanum
toplabel        = alpha | alpha *( alphanum | "-" ) alphanum
IPv4address     = 1*digit "." 1*digit "." 1*digit "." 1*digit
port            = *digit
url-parameters  = *( ";" url-parameter )
url-parameter   = transport-param | user-param | method-param
                  | ttl-param | maddr-param | other-param
transport-param = "transport=" ( "udp" | "tcp" )
ttl-param       = "ttl=" ttl
ttl             = 1*3DIGIT       ; 0 to 255
maddr-param     = "maddr=" host
user-param      = "user=" ( "phone" | "ip" )
method-param    = "method=" Method
tag-param       = "tag=" UUID
UUID            = 1*( hex | "-" )
other-param     = ( token | ( token "=" ( token | quoted-string )))
headers         = "?" header *( "&" header )
header          = hname "=" hvalue
hname           = 1*uric
hvalue          = *uric
uric            = reserved | unreserved | escaped
reserved        = ";" | "/" | "?" | ":" | "@" | "&" | "=" | "+" |
                    "$" | ","
digits          = 1*DIGIT


   Figure 3: SIP URL syntax



   The URI character classes referenced above are described in Appendix
   C.

   The components of the SIP URI have the following meanings.
telephone-subscriber  = global-phone-number | local-phone-number
global-phone-number   = "+" 1*phonedigit [isdn-subaddress]
                             [post-dial]
local-phone-number    = 1*(phonedigit | dtmf-digit | 
                             pause-character) [isdn-subaddress] 
                             [post-dial]
isdn-subaddress       = ";isub=" 1*phonedigit
post-dial             = ";postd=" 1*(phonedigit | dtmf-digit
                         |  pause-character)
phonedigit            = DIGIT | visual-separator
visual-separator      = "-" | "."
pause-character       = one-second-pause | wait-for-dial-tone
one-second-pause      = "p"
wait-for-dial-tone    = "w"
dtmf-digit            = "*" | "#" | "A" | "B" | "C" | "D"

SIP-message  =  Request | Response


generic-message  =  start-line
                            *message-header
                            CRLF
                            [ message-body ]

start-line       =  Request-Line |     ;Section 4.1
                            Status-Line        ;Section 5.1




message-header  =  ( general-header
                           | request-header
                           | response-header
                           | entity-header )



Request  =  Request-Line       ;  Section 4.1
                    *( general-header
                    | request-header
                    | entity-header )
                    CRLF
                    [ message-body ]   ;  Section 8


Request-Line  =  Method SP Request-URI SP SIP-Version CRLF
general-header   =  Accept               ; Section 6.7
                         |  Accept-Encoding      ; Section 6.8
                         |  Accept-Language      ; Section 6.9
                         |  Call-ID              ; Section 6.12
                         |  Contact              ; Section 6.13
                         |  CSeq                 ; Section 6.17
                         |  Date                 ; Section 6.18
                         |  Encryption           ; Section 6.19
                         |  Expires              ; Section 6.20
                         |  From                 ; Section 6.21
                         |  Record-Route         ; Section 6.29
                         |  Timestamp            ; Section 6.36
                         |  To                   ; Section 6.37
                         |  Via                  ; Section 6.40
entity-header    =  Content-Encoding     ; Section 6.14
                         |  Content-Length       ; Section 6.15
                         |  Content-Type         ; Section 6.16
request-header   =  Authorization        ; Section 6.11
                         |  Contact              ; Section 6.13
                         |  Hide                 ; Section 6.22
                         |  Max-Forwards         ; Section 6.23
                         |  Organization         ; Section 6.24
                         |  Priority             ; Section 6.25
                         |  Proxy-Authorization  ; Section 6.27
                         |  Proxy-Require        ; Section 6.28
                         |  Route                ; Section 6.33
                         |  Require              ; Section 6.30
                         |  Response-Key         ; Section 6.31
                         |  Subject              ; Section 6.35
                         |  User-Agent           ; Section 6.39
response-header  =  Allow                ; Section 6.10
                         |  Proxy-Authenticate   ; Section 6.26
                         |  Retry-After          ; Section 6.32
                         |  Server               ; Section 6.34
                         |  Unsupported          ; Section 6.38
                         |  Warning              ; Section 6.41
                         |  WWW-Authenticate     ; Section 6.42


Method  =  "INVITE" | "ACK" | "OPTIONS" | "BYE"
                   | "CANCEL" | "REGISTER"


option-tag  =  token


Response  =  Status-Line        ;  Section 5.1
                     *( general-header
                     | response-header
                     | entity-header )
                     CRLF
                     [ message-body ]   ;  Section 8


Status-Line  =  SIP-version SP Status-Code SP Reason-Phrase CRLF
Status-Code     =  Informational                     ;Fig. 5
                       |   Success                           ;Fig. 5
                       |   Redirection                       ;Fig. 6
                       |   Client-Error                      ;Fig. 7
                       |   Server-Error                      ;Fig. 8
                       |   Global-Failure                    ;Fig. 9
                       |   extension-code
extension-code  =  3DIGIT
Reason-Phrase   =  *<TEXT-UTF8,  excluding CR, LF>


Informational  =  "100"  ;  Trying
                      |   "180"  ;  Ringing
                      |   "181"  ;  Call Is Being Forwarded
                      |   "182"  ;  Queued
Success        =  "200"  ;  OK


Redirection  =  "300"  ;  Multiple Choices
                    |   "301"  ;  Moved Permanently
                    |   "302"  ;  Moved Temporarily
                    |   "303"  ;  See Other
                    |   "305"  ;  Use Proxy
                    |   "380"  ;  Alternative Service


Client-Error  =  "400"  ;  Bad Request
                     |   "401"  ;  Unauthorized
                     |   "402"  ;  Payment Required
                     |   "403"  ;  Forbidden
                     |   "404"  ;  Not Found
                     |   "405"  ;  Method Not Allowed
                     |   "406"  ;  Not Acceptable
                     |   "407"  ;  Proxy Authentication Required
                     |   "408"  ;  Request Timeout
                     |   "409"  ;  Conflict
                     |   "410"  ;  Gone
                     |   "411"  ;  Length Required
                     |   "413"  ;  Request Entity Too Large
                     |   "414"  ;  Request-URI Too Large
                     |   "415"  ;  Unsupported Media Type
                     |   "420"  ;  Bad Extension
                     |   "480"  ;  Temporarily not available
                     |   "481"  ;  Call Leg/Transaction Does Not Exist
                     |   "482"  ;  Loop Detected
                     |   "483"  ;  Too Many Hops
                     |   "484"  ;  Address Incomplete
                     |   "485"  ;  Ambiguous
                     |   "486"  ;  Busy Here


Server-Error  =  "500"  ;  Internal Server Error
                     |   "501"  ;  Not Implemented
                     |   "502"  ;  Bad Gateway
                     |   "503"  ;  Service Unavailable
                     |   "504"  ;  Gateway Time-out
                     |   "505"  ;  SIP Version not supported


message-header  =  field-name ":" [ field-value ] CRLF
field-name      =  token
field-value     =  *( field-content | LWS )
field-content   =  < the OCTETs  making up the field-value
                            and consisting of either *TEXT-UTF8
                            or combinations of token,
                            separators, and quoted-string>


Allow  =  "Allow" ":" 1#Method


Call-ID   =  ( "Call-ID" | "i" ) ":" local-id "@" host
local-id  =  1*uric


Contact = ( "Contact" | "m" ) ":" 
             ("*" | (1# (( name-addr | addr-spec )
             [ *( ";" contact-params ) ] [ comment ] )))

name-addr      = [ display-name ] "<" addr-spec ">"
addr-spec      = SIP-URL | URI
display-name   = *token | quoted-string

contact-params = "q"       "=" qvalue
                  | "action"  "=" "proxy" | "redirect"
                  | "expires" "=" delta-seconds | <"> SIP-date <">
                  | extension-attribute

extension-attribute = extension-name [ "=" extension-value ]

        only allows one address, unquoted. Since URIs can contain
        commas and semicolons as reserved characters, they can be
        mistaken for header or parameter delimiters, respectively.
        The current syntax corresponds to that for the To and From
        header, which also allows the use of display names.

Content-Encoding  =  ( "Content-Encoding" | "e" ) ":"
                             1#content-coding


Content-Length  =  ( "Content-Length" | "l" ) ":" 1*DIGIT


Content-Type  =  ( "Content-Type" | "c" ) ":" media-type
CSeq  =  "CSeq" ":" 1*DIGIT Method



SIP-date  =  rfc1123-date


Encryption         =  "Encryption" ":" encryption-scheme 1*SP
                              #encryption-params
encryption-scheme  =  token
encryption-params  =  token "=" ( token | quoted-string )

Expires  =  "Expires" ":" ( SIP-date | delta-seconds )


From         =  ( "From" | "f" ) ":" ( name-addr | addr-spec )
                        *( ";" addr-params )
addr-params  =  tag-param
tag-param    =  "tag=" UUID
UUID         =  1*( hex | "-" )


Hide  =  "Hide" ":" ( "route" | "hop" )


Max-Forwards  =  "Max-Forwards" ":" 1*DIGIT


Organization  =  "Organization" ":" *TEXT-UTF8


Priority        =  "Priority" ":" priority-value
priority-value  =  "emergency" | "urgent" | "normal"
                        |  "non-urgent"


Record-Route  =  "Record-Route" ":" 1# name-addr


Require  =  "Require" ":" 1#option-tag


Response-Key  =  "Response-Key" ":" key-scheme 1*SP #key-param
key-scheme    =  token
key-param     =  token "=" ( token | quoted-string )


Retry-After  =  "Retry-After" ":" ( SIP-date | delta-seconds )
                        [ comment ] [ ";" "duration" "=" delta-seconds ]


Route  =  "Route" ":" 1# name-addr


Subject  =  ( "Subject" | "s" ) ":" *TEXT-UTF8


Timestamp  =  "Timestamp" ":" *(DIGIT) [ "." *(DIGIT) ] [ delay ]
delay      =  *(DIGIT) [ "." *(DIGIT) ]


To  =  ( "To" | "t" ) ":" ( name-addr | addr-spec )
               *( ";" addr-params )


Unsupported  =  "Unsupported" ":" 1#option-tag


Via              = ( "Via" | "v") ":" 1#( sent-protocol sent-by
                     *( ";" via-params ) [ comment ] )
via-params       = via-hidden | via-ttl | via-maddr 
                   | via-received | via-branch
via-hidden       = "hidden"
via-ttl          = "ttl" "=" ttl
via-maddr        = "maddr" "=" maddr
via-received	   = "received" "=" host
via-branch       = "branch" "=" token
sent-protocol    = protocol-name "/" protocol-version "/" transport
protocol-name    = "SIP" | token
protocol-version = token
transport        = "UDP" | "TCP" | token
sent-by          = ( host [ ":" port ] ) | ( concealed-host )
concealed-host   = token
ttl              = 1*3DIGIT     ; 0 to 255


   Figure 11: Syntax of Via header field


Warning        =  "Warning" ":" 1#warning-value
warning-value  =  warn-code SP warn-agent SP warn-text
warn-code      =  3DIGIT
warn-agent     =  ( host [ ":" port ] ) | pseudonym
                          ;  the name or pseudonym of the server adding
                          ;  the Warning header, for use in debugging
warn-text      =  quoted-string


v=0
o=user1 53655765 2353687637 IN IP4 128.3.4.5
s=Mbone Audio
i=Discussion of Mbone Engineering Issues
e=mbone@somewhere.com
c=IN IP4 224.2.0.1/127
t=0 0
m=audio 3456 RTP/AVP 0



r = await_response();
class = r.status / 100;

multicast = 0;
best = r;
best = r;
v=0
o=bell 53655765 2353687637 IN IP4 128.3.4.5
c=IN IP4 135.180.144.94
m=audio 3456 RTP/AVP 0 3 4 5



v=0
o=bell 53655765 2353687637 IN IP4 128.3.4.5
c=IN IP4 135.180.144.94
m=audio 3456 RTP/AVP 0 3 4 5
URI  =  SIP-URL


digest-uri-value  =  Request-URI ; a defined in Section
WWW-Authenticate =  "WWW-Authenticate" ":" "pgp" pgp-challenge
pgp-challenge    =  * (";" pgp-params )
pgp-params       =  realm | pgp-version | pgp-algorithm | nonce
realm            =  "realm" "=" realm-value
realm-value      =  quoted-string
pgp-version      =  "version" "="
                             <"> digit *( "." digit ) *letter <">
pgp-algorithm    =  "algorithm" "=" ( "md5" | "sha1" | token )
nonce            =  "nonce" "=" nonce-value
nonce-value      =  quoted-string



Authorization  =  "Authorization" ":" "pgp" *( ";" pgp-response )
pgp-response   =  realm | pgp-version | pgp-signature
                          | signed-by | nonce
pgp-signature  =  "signature" "=" quoted-string
signed-by      =  "signed-by" "=" <"> URI <">


Encryption    =  "Encryption" ":" "pgp" pgp-eparams
pgp-eparams   =  1# ( pgp-version | pgp-encoding )
pgp-encoding  =  "encoding" "=" "ascii" | token
Response-Key  =  "Response-Key" ":" "pgp" pgp-eparams
pgp-eparams   =  1# ( pgp-version | pgp-encoding | pgp-key)
pgp-key       =  "key" "=" quoted-string


key="mQBtAzNWHNYAAAEDAL7QvAdK2utY05wuUG+ItYK5tCF8HNJM60sU4rLaV+eUnkMk
bmVAY3MuY29sdW1iaWEuZWR1Pg==
v=0
o=user1 53655765 2353687637 IN IP4 128.3.4.5
s=Mbone Audio
i=Discussion of Mbone Engineering Issues
e=mbone@somewhere.com
c=IN IP4 224.2.0.1/127
t=0 0
m=audio 3456 RTP/AVP 0
v=0
o=bell 53655765 2353687637 IN IP4 128.3.4.5
s=Mr. Watson, come here.
c=IN IP4 kton.bell-tel.com
m=audio 3456 RTP/AVP 0 3 4 5
v=0
o=watson 4858949 4858949 IN IP4 192.1.2.3
s=I'm on my way
c=IN IP4 boston.bell-tel.com
m=audio 5004 RTP/AVP 0 3
v=0
s=Let's talk
b=CT:128
c=IN IP4 north.east.isi.edu
m=audio 3456 RTP/AVP 5 0 7
m=video 2232 RTP/AVP 31



v=0
m=audio 0 RTP/AVP 0 1 3 99
m=video 0 RTP/AVP 31 34
a=rtpmap:99 SX7300/8000
v=0
o=alice 2890844526 2890844526 IN IP4 host.anywhere.com
c=IN IP4 host.anywhere.com
m=audio 49170 RTP/AVP 0
a=rtpmap:0 PCMU/8000
m=video 51372 RTP/AVP 31
a=rtpmap:31 H261/90000
m=video 53000 RTP/AVP 32
a=rtpmap:32 MPV/90000



v=0
o=bob 2890844730 2890844730 IN IP4 host.example.com
c=IN IP4 host.example.com
m=audio 47920 RTP/AVP 0 1
a=rtpmap:0 PCMU/8000
a=rtpmap:1 1016/8000
m=video 0 RTP/AVP 31
m=video 53000 RTP/AVP 32
a=rtpmap:32 MPV/90000
name  =  definition


OCTET     =  <any 8-bit sequence of data>
CHAR      =  <any US-ASCII character (octets 0 - 127)>
upalpha   =  "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" |
                     "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" |
                     "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"
lowalpha  =  "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" |
                     "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" |
                     "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"
alpha     =  lowalpha | upalpha
digit     =  "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" |
                     "8" | "9"
alphanum  =  alpha | digit
CTL       =  <any US-ASCII control character
                     (octets 0 -- 31) and DEL (127)>
CR        =  %d13 ; US-ASCII CR, carriage return character
LF        =  %d10 ; US-ASCII LF, line feed character
SP        =  %d32 ; US-ASCII SP, space character
HT        =  %d09 ; US-ASCII HT, horizontal tab character
CRLF      =  CR LF ; typically the end of a line


unreserved  =  alphanum | mark
mark        =  "-" | "_" | "." | "!" | "~" | "*" | "'"
                   |   "(" | ")"
escaped     =  "%" hex hex


LWS  =  [CRLF] 1*( SP | HT ) ; linear whitespace


TEXT-UTF8  =  <any UTF-8 character encoding, except CTLs,
                      but including LWS>


hex  =  "A" | "B" | "C" | "D" | "E" | "F"
                | "a" | "b" | "c" | "d" | "e" | "f" | digit


token       =  1*< any CHAR  except CTL's  or separators>
separators  =  "(" | ")" | "<" | ">" | "@" |
                       "," | ";" | ":" | "\" | <"> |
                       "/" | "[" | "]" | "?" | "=" |
                       "{" | "}" | SP | HT


comment  =  "(" *(ctext | quoted-pair | comment) ")"
ctext    =  < any TEXT-UTF8  excluding "("  and ")">


quoted-string  =  ( <"> *(qdtext | quoted-pair ) <"> )
qdtext         =  <any TEXT-UTF8 except <">>


quoted-pair  =  " \ " CHAR
QCLASS=IN, QTYPE=SRV. Since it doesn't support TCP, it
