OCRA = CryptoFunction(K, DataInput) 
     
DataInput = {OCRASuite | 00 | C | Q | P | S | T} where: 
       . OCRASuite is a value representing the suite of operations to 
         compute an OCRA response; 
       . 00 is a byte value used as a separator; 
       . C is an unsigned 8-byte counter value processed high-order bit 
         first, and MUST be synchronized between all parties; It loops 
         around from "{Hex}0" to "{Hex}FFFFFFFFFFFFFFFF" and then starts  
       . over at "{Hex}0"; 



  
  
hmac = Mac.getInstance(crypto); 
crypto = "HmacSHA1"; 
crypto = "HmacSHA256"; 
crypto = "HmacSHA512"; 
        
  
codeDigits = Integer.decode(oS.substring
                                      (oS.lastIndexOf("-")+1, 
                                       oS.length())); 
  
counterLength=8; 
questionLength=128; 
passwordLength=20; 
sessionInformationLength=64; 
timeStampLength=8; 
bArray = new BigInteger(counter,16).toByteArray(); 
bArray = question.getBytes(); 
bArray = new BigInteger(password,16).toByteArray(); 
bArray = sessionInformation.getBytes(); 
bArray = new BigInteger(timeStamp,16).toByteArray(); 
bArray = new BigInteger(key,16).toByteArray(); 
hash = hmac_sha1(crypto, b, msg); 
hash = hmac_sha1(crypto, bArray, msg); 
result = Integer.toString(otp); 
result = "0" + result; 
