Network Working Group                               Philip J. Nesser II
draft-ietf-v6ops-ipv4survey-ops-01.txt       Nesser & Nesser Consulting
Internet Draft                                        Andreas Bergstrom
                                             Ostfold University College
                                                              June 2003
                                                  Expires December 2003

           Survey of IPv4 Addresses in Currently Deployed 
             IETF Operations & Management Area Standards

This document is an Internet-Draft and is in full conformance with
all provisions of Section 10 of RFC2026.

Status of this Memo

Internet-Drafts are working documents of the Internet Engineering
Task Force (IETF), its areas, and its working groups.  Note that other
groups may also distribute working documents as Internet-Drafts.

Internet-Drafts are draft documents valid for a maximum of six
months and may be updated, replaced, or obsoleted by other documents at
any time.  It is inappropriate to use Internet-Drafts as reference
material or to cite them other than as "work in progress."

The list of current Internet-Drafts can be accessed at
http://www.ietf.org/ietf/1id-abstracts.txt

The list of Internet-Draft Shadow Directories can be accessed at
http://www.ietf.org/shadow.html.


Abstract

This document seeks to document all usage of IPv4 addresses in currently
deployed IETF Operations & Management Area documented standards.  In 
order to successfully transition from an all IPv4 Internet to an all 
IPv6 Internet, many interim steps will be taken. One of these steps is 
the evolution of current protocols that have IPv4 dependencies.  It is 
hoped that these protocols (and their implementations) will be 
redesigned to be network address independent, but failing that will at 
least dually support IPv4 and IPv6.  To this end, all Standards (Full, 
Draft, and Proposed) as well as Experimental RFCs will be surveyed and 
any dependencies will be documented.


Table of Contents

1. Introduction
2. Document Organisation
3. Full Standards
4. Draft Standards
5. Proposed Standards
6. Experimental RFCs
7. Summary of Results
   7.1 Standards
   7.2 Draft Standards
   7.3 Proposed Standards
   7.4 Experimental RFCs
8. Security Consideration
9. Acknowledgements
10. References
11. Authors Address
12. Intellectual Property Statement
13. Full Copyright Statement

1.0 Introduction

This document is part of a document set aiming to document all usage of
IPv4 addresses in IETF stanadards. In an effort to have the information 
in a manageable form, it has been broken into 7 documents conforming 
to the current IETF areas (Application,  Internet, Manangement & 
Operations, Routing, Security, Sub-IP and Transport).

For a full introduction, please see the intro[1] draft.

2.0 Document Organization

The document is organized as described below:

Sections 3, 4, 5, and 6 each describe the raw analysis of Full, Draft,
and Proposed Standards, and Experimental RFCs.  Each RFC is discussed in
its turn starting with RFC 1 and ending with RFC 3247.  The comments for
each RFC is "raw" in nature.  That is, each RFC is discussed in a 
vacuum  and problems or issues discussed do not "look ahead" to see if 
the  problems have already been fixed.

Section 7 is an analysis of the data presented in Sections 3, 4, 5, and
6.  It is here that all of the results are considered as a whole and the
problems that have been resolved in later RFCs are correlated.



3.0 Full Standards

Full Internet Standards (most commonly simply referred to as 
"Standards") are fully mature protocol specification that are widely 
implemented and used throughout the Internet.


3.1 RFC 1157 Simple Network Management Protocol

Beginning in Section 3.2.6.3.2 atTable Object Type Names thru the rest 
of Section 3 there are numerous references to the use of IPv4 addresses 
as part of OIDs.

Section 4.  Protocol Specification specifies the format of an SNMP 
packet which uses the overall format of:

RFC1157-SNMP DEFINITIONS ::= BEGIN
     IMPORTS
       	  ObjectName, ObjectSyntax, NetworkAddress, IpAddress, TimeTicks
                  FROM RFC1155-SMI;


Section 4.1.3.1.  Example of Table Traversal has many uses of IPv4 
addresses in its example of table transversal.

Section 5.  Definitions reiterates the use of IPv4 addresses.

     RFC1157-SNMP DEFINITIONS ::= BEGIN

      IMPORTS
          ObjectName, ObjectSyntax, NetworkAddress, IpAddress, TimeTicks
              FROM RFC1155-SMI;


3.2 RFC 1155 Structure of Management Information

Section 3.2.3.2.  IpAddress defines the following:

   This application-wide type represents a 32-bit internet address.  It
   is represented as an OCTET STRING of length 4, in network byte-order.

There are several instances of the use of this definition in the rest of
the document.


3.3 RFC 1213 Management Information Base

There are far too many instances of IPv4 addresses is this document
to enumerate here.  Clearly the entire IP OID sub tree  is rife with
IPv4 dependencies.  A new sub tree needs to be defined to deal with
IPv6 addresses leaving the current sub tree intact for IPv4 address
information.


3.4 RFC 1643 Definitions of Managed Objects for the Ethernet-like 
Interface Types

There are no IPv4 dependencies in this protocol.


3.5 Structure of Management Information Version 2 (SMIv2. RFC2578,
     RFC2579


3.5.1 RFC 2578 Structure of Management Information Version 2 (SMIv2)

Section 7.1.5.  IpAddress defines:

   The IpAddress type represents a 32-bit internet address.  It is
   represented as an OCTET STRING of length 4, in network byte-order.

   Note that the IpAddress type is a tagged type for historical reasons.
   Network addresses should be represented using an invocation of the
   TEXTUAL-CONVENTION macro [3].

Note the depreciated status of this type.


3.5.2 RFC 2579 Textual Conventions for SMIv2

There are no IPv4 dependencies in this protocol.


3.6 RFC 2819 Remote Network Monitoring Management Information Base
     (RMON-MIB)

There are no IPv4 dependencies in this protocol.



4.0 Draft Standards

Draft Standards represent the penultimate standard level in the IETF.
A protocol can only achieve draft standard when there are multiple,
independent, interoperable implementations.  Draft Standards are usually
quite mature and widely used.


4.01 RFC 1493 Definitions of Managed Objects for Bridges (BRIDGE-MIB)

There are no IPv4 dependencies in this protocol.


4.02 RFC 1559 DECnet Phase IV MIB Extensions (DECNET-MIB)

There are no IPv4 dependencies in this protocol.


4.03 RFC 1657 Definitions of Managed Objects for the Fourth
Version of the Border Gateway Protocol (BGP-4) using SMIv2 (BGP-4-MIB)

The MIB defined in this RFC deals with objects in a BGP4 based routing
system and therefore contain many objects that are limited by the 
IpAddress 32-bit value defined in MIB2.  Clearly the values of this MIB 
are limited to IPv4 addresses.  No update is needed, although a new MIB 
should be defined for BGP++ to allow management of IPv6 addresses and 
routes.


4.04 RFC 1658 Definitions of Managed Objects for Character Stream 
Devices using SMIv2

There are no IPv4 dependencies in this protocol.


4.05 RFC 1659 Definitions of Managed Objects for RS-232-like Hardware
     Devices using SMIv2

There are no IPv4 dependencies in this protocol.


4.06 RFC 1660 Definitions of Managed Objects for Parallel-printer-like
     Hardware Devices using SMIv2

There are no IPv4 dependencies in this protocol.


4.07 RFC 1694 Definitions of Managed Objects for SMDS Interfaces using
     SMIv2 (SIP-MIB)

This MIB definition defines the following subtree:

          ipOverSMDS OBJECT IDENTIFIER ::= { smdsApplications 1 }

          -- Although the objects in this group are read-only, at the
          -- agent's discretion they may be made read-write so that the
          -- management station, when appropriately authorized, may
          -- change the addressing information related to the
          -- configuration of a logical IP subnetwork implemented on
          -- top of SMDS.

          -- This table is necessary to support RFC1209 (IP-over-SMDS)
          -- and gives information on the Group Addresses and ARP
          -- Addresses used in the Logical IP subnetwork.
          -- One SMDS address may be associated with multiple IP
          -- addresses.  One SNI may be associated with multiple LISs.

          ipOverSMDSTable OBJECT-TYPE
              SYNTAX      SEQUENCE OF IpOverSMDSEntry
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                 "The table of addressing information relevant to
                 this entity's IP addresses."
              ::= { ipOverSMDS 1 }

          ipOverSMDSEntry OBJECT-TYPE
              SYNTAX      IpOverSMDSEntry
              MAX-ACCESS  not-accessible
              STATUS      current
              DESCRIPTION
                 "The addressing information for one of this
                 entity's IP addresses."
              INDEX   { ipOverSMDSIndex, ipOverSMDSAddress }
              ::= { ipOverSMDSTable 1 }

          IpOverSMDSEntry ::=
              SEQUENCE {
                 ipOverSMDSIndex       IfIndex,
                 ipOverSMDSAddress     IpAddress,
                 ipOverSMDSHA          SMDSAddress,
                 ipOverSMDSLISGA       SMDSAddress,
                 ipOverSMDSARPReq      SMDSAddress
                 }

          ipOverSMDSIndex OBJECT-TYPE
              SYNTAX      IfIndex
              MAX-ACCESS  read-only
              STATUS      current
              DESCRIPTION
                 "The value of this object identifies the
                 interface for which this entry contains management
                 information. "
              ::= { ipOverSMDSEntry 1 }

          ipOverSMDSAddress OBJECT-TYPE
               SYNTAX      IpAddress
               MAX-ACCESS  read-only
               STATUS      current
               DESCRIPTION
                 "The IP address to which this entry's addressing
                 information pertains."
              ::= { ipOverSMDSEntry 2 }

          ipOverSMDSHA OBJECT-TYPE
              SYNTAX      SMDSAddress
              MAX-ACCESS  read-only
              STATUS      current
              DESCRIPTION
                 "The SMDS Individual address of the IP station."
              ::= { ipOverSMDSEntry 3 }

          ipOverSMDSLISGA OBJECT-TYPE
              SYNTAX      SMDSAddress
              MAX-ACCESS  read-only
              STATUS      current
              DESCRIPTION
                 "The SMDS Group Address that has been configured
                 to identify the SMDS Subscriber-Network Interfaces
                 (SNIs) of all members of the Logical IP Subnetwork
                 (LIS) connected to the network supporting SMDS."
              ::= { ipOverSMDSEntry 4 }

          ipOverSMDSARPReq OBJECT-TYPE
              SYNTAX      SMDSAddress
              MAX-ACCESS  read-only
              STATUS      current
              DESCRIPTION
                 "The SMDS address (individual or group) to which
                 ARP Requests are to be sent."
              ::= { ipOverSMDSEntry 5 }


Although these OIDs are intended for IPv4 addresses, a similar MIB
can be defined for IPv6 addressing.


4.08 RFC 1724 RIP Version 2 MIB Extension (RIP2-MIB)

As might be expected, this RFC is filled with IPv4 dependencies since
it defines a MIB for an IPv4 only routing protocol.  A new MIB for RIPng
is required.


4.09 RFC 1748 IEEE 802.5 MIB using SMIv2 (802.5-MIB)

There are no IPv4 dependencies in this protocol.


4.10 RFC 1850 OSPF Version 2 Management Information Base (OSPF-MIB)

This MIB defines managed objects for OSPFv2 which is a protocol used
to exchange IPv4 routing information.  Since OSPFv2 is limited to IPv4
addresses a new MIB is required to support a new version of OSPF that
is IPv6 aware.


4.11 RFC 1905 Protocol Operations for Version 2 of the Simple Network
     Management Protocol (SNMPv2) (OPS-MIB)

Section 4.2.2.1.  Example of Table Traversal and Section 4.2.3.1.
Another Example of Table Traversal both use OID's from MIB2 whose
data contains IPv4 addresses.  Other than their use in these example
sections there are no IPv4 dependencies in this protocol.


4.12 RFC 1906 Transport Mappings for Version 2 of the Simple Network
     Management Protocol (SNMPv2) (TRANS-MIB)

Section 2 Definitions contains the following OID definition:

	SnmpUDPAddress ::= TEXTUAL-CONVENTION
	    DISPLAY-HINT "1d.1d.1d.1d/2d"
	    STATUS       current
	    DESCRIPTION
	            "Represents a UDP address:

	               octets   contents        encoding
	                1-4     IP-address      network-byte order
	                5-6     UDP-port        network-byte order
	            "
	    SYNTAX       OCTET STRING (SIZE (6))

Section 8.1.  Usage Example also contains examples which use IPv4
address, but it has no significance in the operation of the protocol.


4.13 RFC 1907 Management Information Base for Version 2 of the Simple
     Network Management Protocol (SNMPv2) (SNMPv2-MIB)

There are no IPv4 dependencies in this protocol.


4.14 RFC 2115 Management Information Base for Frame Relay DTEs
     Using SMIv2 (FRAME-MIB)

This MIB has several examples of mapping IPv4 addresses to multiple
Frame Relay DLCI's and monitoring their connections.  A new set of OID's
needs to be defined to allow this functionality for IPv6.


4.15 RFC 2571 An Architecture for Describing SNMP Management Frameworks
     (ARCH-SNMP)

There are no IPv4 dependencies in this protocol.


4.16 RFC 2572 Message Processing and Dispatching for the Simple Network
     Management Protocol (SNMP) (MPD-SNMP)

There are no IPv4 dependencies in this protocol.


4.17 RFC 2573 SNMP Applications (SNMP-APP)

There are no IPv4 dependencies in this protocol.


4.18 RFC 2574 User-based Security Model (USM) for version 3 of the 
Simple Network Management Protocol (SNMPv3) (USM-SNMPV3)

There are no IPv4 dependencies in this protocol.


4.19 RFC 2575 View-based Access Control Model (VACM) for the Simple
     Network Management Protocol (SNMP) (VACM-SNMP)

There are no IPv4 dependencies in this protocol.


4.20 RFC 2790 Host Resources MIB

There are no IPv4 dependencies in this protocol.


4.21 RFC 2863 The Interfaces Group MIB (INTERGRMIB)

There are no IPv4 dependencies in this protocol. There is some 
discussion in one OID about an interface performing a self test, but it 
is IP version independent.



5.0 Proposed Standards

Proposed Standards are introductory level documents.  There are no
requirements for even a single implementation.  In many cases Proposed
are never implemented or advanced in the IETF standards process.  They
therefore are often just proposed ideas that are presented to the 
Internet community.  Sometimes flaws are exposed or they are one of 
many competing solutions to problems.  In these later cases, no 
discussion is presented as it would not serve the purpose of this 
discussion.


5.001 RFC 1239 Reassignment of experimental MIBs to standard MIBs
      (STD-MIBs)

There are no IPv4 dependencies in this protocol.


5.002 RFC 1269 Definitions of Managed Objects for the Border Gateway
      Protocol: Version 3 (BGP-MIB)

The use of BGP3 has been depreciated and is not discussed.


5.003 RFC 1285 FDDI Management Information Base (FDDI-MIB)

There are no IPv4 dependencies in this protocol.


5.004 RFC 1381 SNMP MIB Extension for X.25 LAPB (SNMP-LAPB)

There are no IPv4 dependencies in this protocol.


5.005 RFC 1382 SNMP MIB Extension for the X.25 Packet Layer (SNMP-X.25)

There are no IPv4 dependencies in this protocol.


5.006 RFC 1414 Identification MIB (IDENT-MIB)

There are no IPv4 dependencies in this protocol.


5.007 RFC 1418 SNMP over OSI (SNMP-OSI)

There are no IPv4 dependencies in this protocol.


5.008 RFC 1419 SNMP over AppleTalk (SNMP-AT)

There are no IPv4 dependencies in this protocol.


5.009 RFC 1420 SNMP over IPX (SNMP-IPX)

There are no IPv4 dependencies in this protocol.


5.010 RFC 1441 Introduction to version 2 of the Internet-standard
      Network Management Framework (SNMPv2)

There are no IPv4 dependencies in this protocol.


5.011 RFC 1461 SNMP MIB extension for Multiprotocol Interconnect
      over X.25 (X25-MIB)

The following OIDs are defined in Section 4 "Definitions":

          mioxPleLastFailedEnAddr OBJECT-TYPE
                  SYNTAX  OCTET STRING (SIZE(2..128))
                  ACCESS  read-only
                  STATUS  mandatory
                  DESCRIPTION
                          "The last Encapsulated address that failed
                          to find a corresponding X.121 address and
                          caused mioxPleEnAddrToX121LkupFlrs to be
                          incremented.  The first octet of this object
                          contains the encapsulation type, the
                          remaining octets contain the address of that
                          type that failed.  Thus for an IP address,
                          the length will be five octets, the first
                          octet will contain 204 (hex CC), and the
                          last four octets will contain the IP
                          address.  For a snap encapsulation, the
                          first byte would be 128 (hex 80) and the
                          rest of the octet string would have the snap
                          header."
                  ::= { mioxPleEntry 4 }

          mioxPeerEnAddr  OBJECT-TYPE
                  SYNTAX    OCTET STRING (SIZE (0..128))
                  ACCESS  read-write
                  STATUS  mandatory
                  DESCRIPTION
                          "The Encapsulation address of the remote
                          host mapped by this table entry.  A length
                          of zero indicates the remote IP address is
                          unknown or unspecified for use as a PLE
                          default.

                          The first octet of this object contains the
                          encapsulation type, the remaining octets
                          contain an address of that type.  Thus for
                          an IP address, the length will be five
                          octets, the first octet will contain 204
                          (hex CC), and the last four octets will
                          contain the IP address.  For a snap
                          encapsulation, the first byte would be 128
                          (hex 80) and the rest of the octet string
                          would have the snap header."
                  DEFVAL { ''h }
                  ::= { mioxPeerEntry 7 }

       mioxPeerEncType OBJECT-TYPE
                  SYNTAX  INTEGER (0..256)
                  ACCESS  read-write
                  STATUS  mandatory
                  DESCRIPTION
                          "The value of the encapsulation type.  For
                          IP encapsulation this will have a value of
                          204 (hex CC).  For SNAP encapsulated
                          packets, this will have a value of 128 (hex
                          80).  For CLNP, ISO 8473, this will have a
                          value of 129 (hex 81).  For ES-ES, ISO 9542,
                          this will have a value of 130 (hex 82).  A
                          value of 197 (hex C5) identifies the Blacker
                          X.25 encapsulation.  A value of 0,
                          identifies the Null encapsulation.

                          This value can only be written when the
                          mioxPeerStatus object with the same
                          mioxPeerIndex has a value of underCreation.
                          Setting this object to a value of 256
                          deletes the entry.  When deleting an entry,
                          all other entries in the mioxPeerEncTable
                          with the same mioxPeerIndex and with an
                          mioxPeerEncIndex higher then the deleted
                          entry, will all have their mioxPeerEncIndex
                          values decremented by one."
                  ::= { mioxPeerEncEntry 2 }

Updated values of the first byte of these OID's can be defined to
support IPv6 addresses.


5.012 RFC 1471 The Definitions of Managed Objects for the Link
      Control Protocol of the Point-to-Point Protocol (PPP/LCPMIB)

There are no IPv4 dependencies in this protocol.


5.013 RFC 1472 The Definitions of Managed Objects for the Security
      Protocols of the Point-to-Point Protocol (PPP/SECMIB)

There are no IPv4 dependencies in this protocol.


5.014 RFC 1473 The Definitions of Managed Objects for the IP Network
      Control Protocol of the Point-to-Point Protocol (PPP/IPMIB)

Every OID in the MIB contain IPv4 addresses.  A new MIB must be defined
for OIDs for similar IPv6 addresses.


5.015 RFC 1474 The Definitions of Managed Objects for the Bridge
      Network Control Protocol of the Point-to-Point Protocol
      (PPP/Bridge)

There are no IPv4 dependencies in this protocol.


5.016 RFC 1512 FDDI Management Information Base (FDDI-MIB)

There are no IPv4 dependencies in this protocol.


5.017 RFC 1513 Token Ring Extensions to the Remote Network
      Monitoring MIB

There are no IPv4 dependencies in this protocol.


5.018 RFC 1515 Definitions of Managed Objects for IEEE 802.3
      Medium Attachment Units (MAUs)

There are no IPv4 dependencies in this protocol.


5.019 RFC 1525 Definitions of Managed Objects for Source Routing
      Bridges (SRB-MIB)

There are no IPv4 dependencies in this protocol.


5.020 RFC 1611 DNS Server MIB Extensions (DNS-S-MIB)

The following OID is defined:

   DnsServZoneEntry ::=
       SEQUENCE {
           dnsServZoneName
               DnsNameAsIndex,
           dnsServZoneClass
               DnsClass,
           dnsServZoneLastReloadSuccess
               DnsTime,
           dnsServZoneLastReloadAttempt
               DnsTime,
           dnsServZoneLastSourceAttempt
               IpAddress,
           dnsServZoneStatus
               RowStatus,
           dnsServZoneSerial
               Counter32,
           dnsServZoneCurrent
               TruthValue,
           dnsServZoneLastSourceSuccess
               IpAddress
       }

There are two instances of IPv4 assumptions.  New OIDs can be
defined for IPv6 addressing.

Similarly:

   -- DNS Zone Source Table

   dnsServZoneSrcTable OBJECT-TYPE
       SYNTAX      SEQUENCE OF DnsServZoneSrcEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
               "This table is a list of IP addresses from which the
               server will attempt to load zone information using DNS
               zone transfer operations.  A reload may occur due to SNMP
               operations that create a row in dnsServZoneTable or a
               SET to object dnsServZoneReload.  This table is only
               used when the zone is loaded via zone transfer."
       ::= { dnsServZone 2 }

   dnsServZoneSrcEntry OBJECT-TYPE
       SYNTAX      DnsServZoneSrcEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
               "An entry in the name server zone source table."
       INDEX     { dnsServZoneSrcName,
                   dnsServZoneSrcClass,
                   dnsServZoneSrcAddr }
       ::= { dnsServZoneSrcTable 1 }

   DnsServZoneSrcEntry ::=
       SEQUENCE {
           dnsServZoneSrcName
               DnsNameAsIndex,
           dnsServZoneSrcClass
               DnsClass,
           dnsServZoneSrcAddr
               IpAddress,
           dnsServZoneSrcStatus
               RowStatus
       }

   dnsServZoneSrcName OBJECT-TYPE
       SYNTAX      DnsNameAsIndex
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
               "DNS name of the zone to which this entry applies."
       ::= { dnsServZoneSrcEntry 1 }

   dnsServZoneSrcClass OBJECT-TYPE
       SYNTAX      DnsClass
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
               "DNS class of zone to which this entry applies."
       ::= { dnsServZoneSrcEntry 2 }

   dnsServZoneSrcAddr OBJECT-TYPE
       SYNTAX      IpAddress
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
               "IP address of name server host from which this zone
               might be obtainable."
       ::= { dnsServZoneSrcEntry 3 }


5.021 RFC 1612 DNS Resolver MIB Extensions (DNS-R-MIB)

As in the previous section the following IPv4 dependent OIDs are
defined:

   DnsResConfigSbeltEntry ::=
       SEQUENCE {
           dnsResConfigSbeltAddr
               IpAddress,
           dnsResConfigSbeltName
               DnsName,
           dnsResConfigSbeltRecursion
               INTEGER,
           dnsResConfigSbeltPref
               INTEGER,
           dnsResConfigSbeltSubTree
               DnsNameAsIndex,
           dnsResConfigSbeltClass
               DnsClass,
           dnsResConfigSbeltStatus
               RowStatus
       }

   dnsResConfigSbeltAddr OBJECT-TYPE
       SYNTAX      IpAddress
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
               "The IP address of the Sbelt name server identified by
               this row of the table."
       ::= { dnsResConfigSbeltEntry 1 }

and

   DnsResLameDelegationEntry ::=
       SEQUENCE {
           dnsResLameDelegationSource
               IpAddress,
           dnsResLameDelegationName
               DnsNameAsIndex,
           dnsResLameDelegationClass
               DnsClass,
           dnsResLameDelegationCounts
               Counter32,
           dnsResLameDelegationStatus
               RowStatus
       }

   dnsResLameDelegationSource OBJECT-TYPE
       SYNTAX      IpAddress
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
               "Source of lame delegation."
       ::= { dnsResLameDelegationEntry 1 }

and

   DnsResCacheRREntry ::=
       SEQUENCE {
           dnsResCacheRRName
               DnsNameAsIndex,
           dnsResCacheRRClass
               DnsClass,
           dnsResCacheRRType
               DnsType,
           dnsResCacheRRTTL
               DnsTime,
           dnsResCacheRRElapsedTTL
               DnsTime,
           dnsResCacheRRSource
               IpAddress,
           dnsResCacheRRData
               OCTET STRING,
           dnsResCacheRRStatus
               RowStatus,
           dnsResCacheRRIndex
               Integer32,
           dnsResCacheRRPrettyName
               DnsName
       }

   dnsResCacheRRSource OBJECT-TYPE
       SYNTAX      IpAddress
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "Host from which RR was received, 0.0.0.0 if unknown."
       ::= { dnsResCacheRREntry 6 }

and

   DnsResNCacheErrEntry ::=
       SEQUENCE {
           dnsResNCacheErrQName
               DnsNameAsIndex,
           dnsResNCacheErrQClass
               DnsQClass,
           dnsResNCacheErrQType
               DnsQType,
           dnsResNCacheErrTTL
               DnsTime,
           dnsResNCacheErrElapsedTTL
               DnsTime,
           dnsResNCacheErrSource
               IpAddress,
           dnsResNCacheErrCode
               INTEGER,
           dnsResNCacheErrStatus
               RowStatus,
           dnsResNCacheErrIndex
               Integer32,
           dnsResNCacheErrPrettyName
               DnsName
       }

   dnsResNCacheErrSource OBJECT-TYPE
       SYNTAX      IpAddress
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "Host which sent the authoritative error, 0.0.0.0 if
               unknown."
       ::= { dnsResNCacheErrEntry 6 }


5.022 RFC 1628 UPS Management Information Base (UPS-MIB)

There are no IPv4 dependencies in this protocol.


5.023 RFC 1666 Definitions of Managed Objects for SNA NAUs
      using SMIv2 SNANAU-MIB

There are no IPv4 dependencies in this protocol.

5.024 RFC 1696 Modem Management Information Base (MIB) using SMIv2
      MODEM-MIB

There are no IPv4 dependencies in this protocol.


5.025 RFC 1697 Relational Database Management System (RDBMS)
      Management Information Base (MIB) using SMIv2 RDBMS-MIB

There are no IPv4 dependencies in this protocol.


5.026 RFC 1742 AppleTalk Management Information Base II (AT-MIB)

The following OIDs are defined:

         KipEntry ::= SEQUENCE {
              kipNetStart     ATNetworkNumber,
              kipNetEnd       ATNetworkNumber,
              kipNextHop      IpAddress,
              kipHopCount     INTEGER,
              kipBCastAddr    IpAddress,
              kipCore         INTEGER,
              kipType         INTEGER,
              kipState        INTEGER,
              kipShare        INTEGER,
              kipFrom         IpAddress
          }

          kipNextHop OBJECT-TYPE
              SYNTAX IpAddress
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The IP address of the next hop in the route to this
                  entry's destination network."
              ::= { kipEntry 3 }

          kipBCastAddr OBJECT-TYPE
              SYNTAX IpAddress
              ACCESS read-write
              STATUS mandatory
              DESCRIPTION
                  "The form of the IP address used to broadcast on this
                  network."
              ::= { kipEntry 5 }

          kipFrom OBJECT-TYPE
              SYNTAX IpAddress
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The IP address from which the routing entry was
                  learned via the AA protocol.  If this entry was not
                  created via the AA protocol, it should contain IP
                  address 0.0.0.0."
              ::= { kipEntry 10 }


5.027 RFC 1747 Definitions of Managed Objects for SNA Data Link
      Control (SDLC) using SMIv2 SDLCSMIv2

There are no IPv4 dependencies in this protocol.


5.028 RFC 1749 IEEE 802.5 Station Source Routing MIB using SMIv2
      802.5-SSR

There are no IPv4 dependencies in this protocol.


5.029 RFC 1759 Printer MIB (Print-MIB)

There are no IPv4 dependencies in this protocol.


5.030 RFC 2006 The Definitions of Managed Objects for IP Mobility
      Support using SMIv2 (MOBILEIPMI)

This document defines a MIB for the Mobile IPv4 documents described
immediately above.  Without enumeration, let it be stated that a new
MIB for IPv6 Mobility is required.


5.031 RFC 2011 SNMPv2 Management Information Base for the Internet
      Protocol using SMIv2 (MIB-IP)

Approximately 1/3 of the OIDs defined in this document are clearly
IPv4 dependent.  A new MIB for IPv6 OIDs is required.


5.032 RFC 2012 SNMPv2 Management Information Base for the
      Transmission Control Protocol using SMIv2 (MIB-TCP)

A number of OIDs in this MIB assumes IPv4 addresses, as is noted in
the note reproduced below:

IESG Note:

   The IP, UDP, and TCP MIB modules currently support only IPv4.  These
   three modules use the IpAddress type defined as an OCTET STRING of
   length 4 to represent the IPv4 32-bit internet addresses.  (See RFC
   1902, SMI for SNMPv2.)  They do not support the new 128-bit IPv6
   internet addresses.


5.033 RFC 2013 SNMPv2 Management Information Base for the User
      Datagram Protocol using SMIv2 (MIB-UDP)

A number of OIDs in this MIB assumes IPv4 addresses, as is noted in
the note reproduced below:

IESG Note:

   The IP, UDP, and TCP MIB modules currently support only IPv4.  These
   three modules use the IpAddress type defined as an OCTET STRING of
   length 4 to represent the IPv4 32-bit internet addresses.  (See RFC
   1902, SMI for SNMPv2.)  They do not support the new 128-bit IPv6
   internet addresses.


5.034 RFC 2020 IEEE 802.12 Interface MIB (802.12-MIB)

There are no IPv4 dependencies in this protocol.


5.035 RFC 2021 Remote Network Monitoring Management Information Base
      Version 2 using SMIv2 (RMON-MIB)

The following OIDs are defined:

addressMapNetworkAddress OBJECT-TYPE
    SYNTAX      OCTET STRING
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "The network address for this relation.

        This is represented as an octet string with
        specific semantics and length as identified
        by the protocolDirLocalIndex component of the
        index.

        For example, if the protocolDirLocalIndex indicates an
        encapsulation of ip, this object is encoded as a length
        octet of 4, followed by the 4 octets of the ip address,
        in network byte order."
    ::= { addressMapEntry 2 }

nlHostAddress OBJECT-TYPE
    SYNTAX      OCTET STRING
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "The network address for this nlHostEntry.

        This is represented as an octet string with
        specific semantics and length as identified
        by the protocolDirLocalIndex component of the index.

        For example, if the protocolDirLocalIndex indicates an
        encapsulation of ip, this object is encoded as a length
        octet of 4, followed by the 4 octets of the ip address,
        in network byte order."
    ::= { nlHostEntry 2 }

nlMatrixSDSourceAddress OBJECT-TYPE
    SYNTAX      OCTET STRING
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "The network source address for this nlMatrixSDEntry.

        This is represented as an octet string with
        specific semantics and length as identified
        by the protocolDirLocalIndex component of the index.

        For example, if the protocolDirLocalIndex indicates an
        encapsulation of ip, this object is encoded as a length
        octet of 4, followed by the 4 octets of the ip address,
        in network byte order."
    ::= { nlMatrixSDEntry 2 }

nlMatrixSDDestAddress OBJECT-TYPE
    SYNTAX      OCTET STRING
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "The network destination address for this
        nlMatrixSDEntry.

        This is represented as an octet string with
        specific semantics and length as identified
        by the protocolDirLocalIndex component of the index.

        For example, if the protocolDirLocalIndex indicates an
        encapsulation of ip, this object is encoded as a length
        octet of 4, followed by the 4 octets of the ip address,
        in network byte order."
    ::= { nlMatrixSDEntry 3 }

nlMatrixDSSourceAddress OBJECT-TYPE
    SYNTAX      OCTET STRING
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "The network source address for this nlMatrixDSEntry.

        This is represented as an octet string with
        specific semantics and length as identified
        by the protocolDirLocalIndex component of the index.

        For example, if the protocolDirLocalIndex indicates an
        encapsulation of ip, this object is encoded as a length
        octet of 4, followed by the 4 octets of the ip address,
        in network byte order."
    ::= { nlMatrixDSEntry 2 }

nlMatrixDSDestAddress OBJECT-TYPE
    SYNTAX      OCTET STRING
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "The network destination address for this
        nlMatrixDSEntry.

        This is represented as an octet string with
        specific semantics and length as identified
        by the protocolDirLocalIndex component of the index.

        For example, if the protocolDirLocalIndex indicates an
        encapsulation of ip, this object is encoded as a length
        octet of 4, followed by the 4 octets of the ip address,
        in network byte order."
    ::= { nlMatrixDSEntry 3 }

nlMatrixTopNSourceAddress OBJECT-TYPE
    SYNTAX     OCTET STRING
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The network layer address of the source host in this
        conversation.

        This is represented as an octet string with
        specific semantics and length as identified
        by the associated nlMatrixTopNProtocolDirLocalIndex.

        For example, if the protocolDirLocalIndex indicates an
        encapsulation of ip, this object is encoded as a length
        octet of 4, followed by the 4 octets of the ip address,
        in network byte order."
    ::= { nlMatrixTopNEntry 3 }

nlMatrixTopNDestAddress OBJECT-TYPE
    SYNTAX     OCTET STRING
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The network layer address of the destination host in this
        conversation.

        This is represented as an octet string with
        specific semantics and length as identified
        by the associated nlMatrixTopNProtocolDirLocalIndex.

        For example, if the nlMatrixTopNProtocolDirLocalIndex
        indicates an encapsulation of ip, this object is encoded as a
        length octet of 4, followed by the 4 octets of the ip address,
        in network byte order."
    ::= { nlMatrixTopNEntry 4 }

alMatrixTopNSourceAddress OBJECT-TYPE
    SYNTAX     OCTET STRING
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The network layer address of the source host in this
        conversation.
        This is represented as an octet string with
        specific semantics and length as identified
        by the associated alMatrixTopNProtocolDirLocalIndex.

        For example, if the alMatrixTopNProtocolDirLocalIndex
        indicates an encapsulation of ip, this object is encoded as a
        length octet of 4, followed by the 4 octets of the ip address,
        in network byte order."
    ::= { alMatrixTopNEntry 3 }

alMatrixTopNDestAddress OBJECT-TYPE
    SYNTAX     OCTET STRING
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The network layer address of the destination host in this
        conversation.

        This is represented as an octet string with
        specific semantics and length as identified
        by the associated alMatrixTopNProtocolDirLocalIndex.

        For example, if the alMatrixTopNProtocolDirLocalIndex
        indicates an encapsulation of ip, this object is encoded as a
        length octet of 4, followed by the 4 octets of the ip address,
        in network byte order."
    ::= { alMatrixTopNEntry 4 }

trapDestProtocol OBJECT-TYPE
    SYNTAX     INTEGER {
                    ip(1),
                    ipx(2)
                }
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
        "The protocol with which to send this trap."
    ::= { trapDestEntry 3 }

trapDestAddress  OBJECT-TYPE
    SYNTAX     OCTET STRING
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
        "The address to send traps on behalf of this entry.

        If the associated trapDestProtocol object is equal to ip(1),
        the encoding of this object is the same as the snmpUDPAddress
        textual convention in [RFC1906]:
          -- for a SnmpUDPAddress of length 6:
          --
          -- octets   contents        encoding
          --  1-4     IP-address      network-byte order
          --  5-6     UDP-port        network-byte order

        If the associated trapDestProtocol object is equal to ipx(2),
        the encoding of this object is the same as the snmpIPXAddress
        textual convention in [RFC1906]:
          -- for a SnmpIPXAddress of length 12:
          --
          -- octets   contents            encoding
          --  1-4     network-number      network-byte order
          --  5-10    physical-address    network-byte order
          -- 11-12    socket-number       network-byte order

        This object may not be modified if the associated
        trapDestStatus object is equal to active(1)."
    ::= { trapDestEntry 4 }

All of the OIDs above (except trapDestProtocol) imply IPv4 addresses
but since they use a SYNTAX of OCTET STRING, they should work fine
for IPv6 addresses.  A new legitimate value of trapDestProtocol (i.e.
SYNTAX addition of ipv6(3) should make this protocol IPv6 functional.


5.036 RFC 2024 Definitions of Managed Objects for Data Link Switching
      using SMIv2 (DLSW-MIB)

The following OIDs are defined:

TAddress ::= TEXTUAL-CONVENTION
    STATUS  current
    DESCRIPTION
       "Denotes a transport service address.
        For dlswTCPDomain, a TAddress is 4 octets long,
        containing the IP-address in network-byte order."
    SYNTAX  OCTET STRING (SIZE (0..255))

-- DLSw over TCP
dlswTCPDomain  OBJECT IDENTIFIER ::= { dlswDomains 1 }
-- for an IP address of length 4:
--
-- octets   contents        encoding
--  1-4     IP-address      network-byte order
--
DlswTCPAddress ::= TEXTUAL-CONVENTION
    DISPLAY-HINT "1d.1d.1d.1d"
    STATUS       current
    DESCRIPTION
            "Represents the IP address of a DLSw which uses
             TCP as a transport protocol."
    SYNTAX       OCTET STRING (SIZE (4))

Additionally there are many OIDs that use a SYNTAX of TAddress within
the document.  Interestingly the SYNTAX for TAddress is an OCTET
string of up to 256 characters.  It could easily accommodate a similar
hybrid format for IPv6 addresses.

A new OID to enhance functionality for DlswTCPAddress can be added
to support IPv6 addresses.


5.037 RFC 2051 Definitions of Managed Objects for APPC using SMIv2
      (SNANAU-APP)

There are no IPv4 dependencies in this protocol.


5.038 RFC 2096 IP Forwarding Table MIB (TABLE-MIB)

This MIB defines many OIDs that are IPv4 dependent.  It is expected
that another MIB for similar IPv6 addresses will be developed.


5.039 RFC 2108 Definitions of Managed Objects for IEEE 802.3 Repeater
      Devices using SMIv2 802 (3-MIB)

There are no IPv4 dependencies in this protocol.


5.040 RFC 2127 ISDN Management Information Base using SMIv2
      (ISDN-MIB)

There are no IPv4 dependencies in this protocol.


5.041 RFC 2128 Dial Control Management Information Base using
      SMIv2 (DC-MIB)

There are no IPv4 dependencies in this protocol.


5.042 RFC 2206 RSVP Management Information Base using SMIv2
      (RSVP-MIB)

All OIDs in this MIB have options for both IPv4 and IPv6.  There
are no IPv4 dependencies in this protocol.


5.043 RFC 2213 Integrated Services Management Information
      Base using SMIv2

This MIB is IPv6 aware and therefore there are no IPv4 
dependencies in this protocol.


5.044 RFC 2214 Integrated Services Management Information
      Base Guaranteed Service Extensions using SMIv2

There are no IPv4 dependencies in this protocol.


5.045 RFC 2232 Definitions of Managed Objects for DLUR using
      SMIv2 (DLUR-MIB)
There are no IPv4 dependencies in this protocol.


5.046 RFC 2238 Definitions of Managed Objects for HPR using
      SMIv2 (HPR-MIB)

There are no IPv4 dependencies in this protocol.


5.047 RFC 2266 Definitions of Managed Objects for IEEE 802.12
      Repeater Devices

There are no IPv4 dependencies in this protocol.


5.048 RFC 2287 Definitions of System-Level Managed Objects for
      Applications (SLM-APP)

There are no IPv4 dependencies in this protocol.


5.049 RFC 2320 Definitions of Managed Objects for Classical IP
      and ARP Over ATM Using SMIv2 (IPOA-MIB) (IPOA-MIB)

This MIB is wholly dependent of IPv4.  A new MIB for IPv6 is
required to provide the same functionality


5.050 RFC 2417 Definitions of Managed Objects for Multicast
      over UNI 3.0/3.1 based ATM Networks

There are many OIDs defined in this MIB which are IPv4 only.  A
similar MIB for IPv6 OIDs should be created.


5.051 RFC 2452 IP Version 6 Management Information Base for the
      Transmission Control Protocol

This RFC documents an IPv6 MIB and is not considered in this
discussion.


5.052 RFC 2454 IP Version 6 Management Information Base for
      the User Datagram Protocol

This RFC documents an IPv6 MIB and is not considered in this
discussion.


5.053 RFC 2455 Definitions of Managed Objects for APPN
      (APPN-MIB)

There are no IPv4 dependencies in this protocol.


5.054 RFC 2456 Definitions of Managed Objects for APPN TRAPS

There are no IPv4 dependencies in this protocol.


5.055 RFC 2457 Definitions of Managed Objects for Extended Border
      Node (EBN-MIB)

There are no IPv4 dependencies in this protocol.


5.056 RFC 2465 Management Information Base for IP Version 6:
      Textual Conventions and General Group

This RFC documents an IPv6 MIB and is not considered in this
discussion.


5.057 RFC 2466 Management Information Base for IP Version 6:
      ICMPv6 Group (ICMPv6-MIB)

This RFC documents an IPv6 MIB and is not considered in this
discussion.


5.058 RFC 2493 Textual Conventions for MIB Modules Using
      Performance History Based on 15 Minute Intervals

There are no IPv4 dependencies in this protocol.


5.059 RFC 2494 Definitions of Managed Objects for the DS0
      and DS0 Bundle Interface Type

There are no IPv4 dependencies in this protocol.


5.060 RFC 2495 Definitions of Managed Objects for the DS1 E1
      DS2 and E2 Interface Types

There are no IPv4 dependencies in this protocol.


5.061 RFC 2496 Definitions of Managed Object for the DS3/E3
      Interface Type (DS3-E3-MIB)

There are no IPv4 dependencies in this protocol.


5.062 RFC 2512 Accounting Information for ATM Networks

There are no IPv4 dependencies in this protocol.


5.063 RFC 2513 Managed Objects for Controlling the Collection
      and Storage of Accounting Information for Connection-
      Oriented Networks

There are no IPv4 dependencies in this protocol.


5.064 RFC 2514 Definitions of Textual Conventions and
      OBJECT-IDENTITIES for ATM Management (ATM-TC-OID)

There are no IPv4 dependencies in this protocol.


5.065 RFC 2515 Definitions of Managed Objects for ATM
      Management (ATM-MIBMAN)

This MIB defines the following OIDs:

     AtmInterfaceConfEntry    ::= SEQUENCE  {
          atmInterfaceMaxVpcs             INTEGER,
          atmInterfaceMaxVccs             INTEGER,
          atmInterfaceConfVpcs            INTEGER,
          atmInterfaceConfVccs            INTEGER,
          atmInterfaceMaxActiveVpiBits    INTEGER,
          atmInterfaceMaxActiveVciBits    INTEGER,
          atmInterfaceIlmiVpi             AtmVpIdentifier,
          atmInterfaceIlmiVci             AtmVcIdentifier,
          atmInterfaceAddressType         INTEGER,
          atmInterfaceAdminAddress        AtmAddr,
          atmInterfaceMyNeighborIpAddress IpAddress,
          atmInterfaceMyNeighborIfName    DisplayString,
          atmInterfaceCurrentMaxVpiBits   INTEGER,
          atmInterfaceCurrentMaxVciBits   INTEGER,
          atmInterfaceSubscrAddress       AtmAddr
               }

     atmInterfaceMyNeighborIpAddress OBJECT-TYPE
          SYNTAX         IpAddress
          MAX-ACCESS     read-write
          STATUS         current
          DESCRIPTION
           "The IP address of the neighbor system connected to
            the  far end of this interface, to which a Network
            Management Station can send SNMP messages, as IP
            datagrams sent to UDP port 161, in order to access
            network management information concerning the
            operation of that system.  Note that the value
            of this object may be obtained in different ways,
            e.g., by manual configuration, or through ILMI
            interaction with the neighbor system."
          ::= { atmInterfaceConfEntry 11 }

     atmInterfaceConfGroup2    OBJECT-GROUP
            OBJECTS {
                  atmInterfaceMaxVpcs, atmInterfaceMaxVccs,
                  atmInterfaceConfVpcs, atmInterfaceConfVccs,
                  atmInterfaceMaxActiveVpiBits,
                  atmInterfaceMaxActiveVciBits,
                  atmInterfaceIlmiVpi,
                  atmInterfaceIlmiVci,
                  atmInterfaceMyNeighborIpAddress,
                  atmInterfaceMyNeighborIfName,
                  atmInterfaceCurrentMaxVpiBits,
                  atmInterfaceCurrentMaxVciBits,
                  atmInterfaceSubscrAddress }
            STATUS     current
            DESCRIPTION
              "A collection of objects providing configuration
               information about an ATM interface."
            ::= { atmMIBGroups 10 }


Clearly a subsequent MIB must define equivalent IPv6 OIDs.


5.066 RFC 2558 Definitions of Managed Objects for the SONET/SDH
      Interface Type

There are no IPv4 dependencies in this protocol.


5.067 RFC 2561 Base Definitions of Managed Objects for TN3270E
      Using SMIv2

The document states:

   The MIB defined by this memo supports use of both IPv4 and IPv6
   addressing.

This protocol is both IPv4 and IPv6 aware.


5.068 RFC 2562 Definitions of Protocol and Managed Objects for
      TN3270E Response Time Collection Using SMIv2 (TN3270E-RT-MIB)
      (TN2370E-RT)

Several OIDs rely on imports from RFC 2561 and therefore the
protocol is both IPv4 and IPv6 aware.


5.069 RFC 2564 Application Management MIB (APP-MIB)

The following OID is defined:

   ApplTAddress ::= TEXTUAL-CONVENTION
       STATUS       current
       DESCRIPTION
             "Denotes a transport service address.

             For snmpUDPDomain, an ApplTAddress is 6 octets long,
             the initial 4 octets containing the IP-address in
             network-byte order and the last 2 containing the UDP
             port in network-byte order.  Consult 'Transport Mappings
             for Version 2 of the Simple Network Management Protocol
             (SNMPv2)' for further information on snmpUDPDomain."
       SYNTAX       OCTET STRING (SIZE (0..255))


A new OID should be defined to handle IPv6 addresses.


5.070 RFC 2576 Coexistence between Version 1 Version 2 and Version
      3 of the Internet-standard Network Management Framework (SNMP)

This document states:

   (11) For any object with a SYNTAX of NetworkAddress, the SYNTAX MUST
        be changed to IpAddress.  Note that the use of NetworkAddress in
        new MIB documents is strongly discouraged (in fact, new MIB
        documents should be written using SMIv2, which does not define
        NetworkAddress).

and defines the OID:

snmpTrapAddress OBJECT-TYPE
    SYNTAX      IpAddress
    MAX-ACCESS  accessible-for-notify
    STATUS      current
    DESCRIPTION
        "The value of the agent-addr field of a Trap PDU which
         is forwarded by a proxy forwarder application using
         an SNMP version other than SNMPv1.  The value of this
         object SHOULD contain the value of the agent-addr field
         from the original Trap PDU as generated by an SNMPv1
         agent."
    ::= { snmpCommunityMIBObjects 3 }

This clearly points out a lack of IPv6 awareness in this protocol.


5.071 RFC 2564 Application Management MIB (APP-MIB)

The following OID is defined:

   ApplTAddress ::= TEXTUAL-CONVENTION
       STATUS       current
       DESCRIPTION
             "Denotes a transport service address.

             For snmpUDPDomain, an ApplTAddress is 6 octets long,
             the initial 4 octets containing the IP-address in
             network-byte order and the last 2 containing the UDP
             port in network-byte order.  Consult 'Transport Mappings
             for Version 2 of the Simple Network Management Protocol
             (SNMPv2)' for further information on snmpUDPDomain."
       SYNTAX       OCTET STRING (SIZE (0..255))


A new OID should be defined to handle IPv6 addresses.


5.072 RFC 2576 Coexistence between Version 1 Version 2 and Version
      3 of the Internet-standard Network Management Framework (SNMP)

This document states:

   (11) For any object with a SYNTAX of NetworkAddress, the SYNTAX MUST
        be changed to IpAddress.  Note that the use of NetworkAddress in
        new MIB documents is strongly discouraged (in fact, new MIB
        documents should be written using SMIv2, which does not define
        NetworkAddress).

and defines the OID:

snmpTrapAddress OBJECT-TYPE
    SYNTAX      IpAddress
    MAX-ACCESS  accessible-for-notify
    STATUS      current
    DESCRIPTION
        "The value of the agent-addr field of a Trap PDU which
         is forwarded by a proxy forwarder application using
         an SNMP version other than SNMPv1.  The value of this
         object SHOULD contain the value of the agent-addr field
         from the original Trap PDU as generated by an SNMPv1
         agent."
    ::= { snmpCommunityMIBObjects 3 }

This clearly points out a lack of IPv6 awareness in this protocol.


5.073 RFC 2584 Definitions of Managed Objects for APPN/HPR in
      IP Networks

Many of the OIDs described in this document assume the use of the
IPv4 only TOS header bits.  It is therefore IPv4 only in nature and
will not support IPv6 interfaces.  An updated MIB should be created.


5.074 RFC 2591 Definitions of Managed Objects for Scheduling
      Management Operations

There are no IPv4 dependencies in this protocol.


5.075 RFC 2592 Definitions of Managed Objects for the Delegation
      of Management Script

There are no IPv4 dependencies in this protocol.


5.076 RFC 2594 Definitions of Managed Objects for WWW Services

There are no IPv4 dependencies in this protocol.


5.077 RFC 2605 Directory Server Monitoring MIB

There are no IPv4 dependencies in this protocol.


5.078 RFC 2613 Remote Network Monitoring MIB Extensions for
      Switched Networks Version 1.0

There are no IPv4 dependencies in this protocol.


5.079 RFC 2618 RADIUS Authentication Client MIB

This RFC defines the following OIDs:

RadiusAuthServerEntry ::= SEQUENCE {
      radiusAuthServerIndex                           Integer32,
      radiusAuthServerAddress                         IpAddress,
      radiusAuthClientServerPortNumber                Integer32,
      radiusAuthClientRoundTripTime                   TimeTicks,
      radiusAuthClientAccessRequests                  Counter32,
      radiusAuthClientAccessRetransmissions           Counter32,
      radiusAuthClientAccessAccepts                   Counter32,
      radiusAuthClientAccessRejects                   Counter32,
      radiusAuthClientAccessChallenges                Counter32,
      radiusAuthClientMalformedAccessResponses        Counter32,
      radiusAuthClientBadAuthenticators               Counter32,
      radiusAuthClientPendingRequests                   Gauge32,
      radiusAuthClientTimeouts                        Counter32,
      radiusAuthClientUnknownTypes                    Counter32,
      radiusAuthClientPacketsDropped                  Counter32
}

radiusAuthServerAddress OBJECT-TYPE
      SYNTAX     IpAddress
      MAX-ACCESS read-only
      STATUS     current
      DESCRIPTION
            "The IP address of the RADIUS authentication server
             referred to in this table entry."
      ::= { radiusAuthServerEntry 2 }

There needs to be an update to allow an IPv6 based OID for this
value.


5.080 RFC 2619 RADIUS Authentication Server MIB

This MIB defines the followings OIDs:

RadiusAuthClientEntry ::= SEQUENCE {
       radiusAuthClientIndex                           Integer32,
       radiusAuthClientAddress                         IpAddress,
       radiusAuthClientID                        SnmpAdminString,
       radiusAuthServAccessRequests                    Counter32,
       radiusAuthServDupAccessRequests                 Counter32,
       radiusAuthServAccessAccepts                     Counter32,
       radiusAuthServAccessRejects                     Counter32,
       radiusAuthServAccessChallenges                  Counter32,
       radiusAuthServMalformedAccessRequests           Counter32,
       radiusAuthServBadAuthenticators                 Counter32,
       radiusAuthServPacketsDropped                    Counter32,
       radiusAuthServUnknownTypes                      Counter32
}

radiusAuthClientAddress OBJECT-TYPE
       SYNTAX     IpAddress
       MAX-ACCESS read-only
       STATUS     current
       DESCRIPTION
             "The NAS-IP-Address of the RADIUS authentication client
              referred to in this table entry."
       ::= { radiusAuthClientEntry 2 }

There needs to be an update to allow an IPv6 based OID for this
value.


5.081 RFC 2622 Routing Policy Specification Language (RPSL)
      (RPSL)

The only objects in the version of RPSL that deal with IP addresses
are defined as:

   <ipv4-address> An IPv4 address is represented as a sequence of four
      integers in the range from 0 to 255 separated by the character dot
      ".".  For example, 128.9.128.5 represents a valid IPv4 address.
      In the rest of this document, we may refer to IPv4 addresses as IP
      addresses.

   <address-prefix> An address prefix is represented as an IPv4 address
      followed by the character slash "/" followed by an integer in the
      range from 0 to 32.  The following are valid address prefixes:
      128.9.128.5/32, 128.9.0.0/16, 0.0.0.0/0; and the following address
      prefixes are invalid:  0/0, 128.9/16 since 0 or 128.9 are not
      strings containing four integers.

There seems to be an awareness of IPv6 because of the terminology but
it is not specifically defined.  Therefore additional objects for IPv6
addresses and masks need to be defined.


5.082 RFC 2662 Definitions of Managed Objects for the ADSL
      Lines (MIB)

There are no IPv4 dependencies in this protocol.


5.083 RFC 2665 Definitions of Managed Objects for the
      Ethernet-like Interface Types (MIB)

There are no IPv4 dependencies in this protocol.


5.084 RFC 2667 IP Tunnel MIB

The Abstract of this document says:

   This memo defines a Management Information Base (MIB) for use with
   network management protocols in the Internet community.  In
   particular, it describes managed objects used for managing tunnels of
   any type over IPv4 networks.  Extension MIBs may be designed for
   managing protocol-specific objects. Likewise, extension MIBs may be
   designed for managing security-specific objects.  This MIB does not
   support tunnels over non-IPv4 networks (including IPv6 networks).
   Management of such tunnels may be supported by other MIBs.

A similar MIB for tunneling over IPv6 should be defined.


5.085 RFC 2668 Definitions of Managed Objects for IEEE 802.3 Medium
      Attachment Units (MAUs) (MAU-MIB)

There are no IPv4 dependencies in this protocol.


5.086 RFC 2669 DOCSIS Cable Device MIB Cable Device Management
      Information Base for DOCSIS compliant Cable Modems and
      Cable Modem Termination Systems

This document states:

   Please note that the DOCSIS 1.0 standard only requires Cable
   Modems to implement SNMPv1 and to process IPv4 customer traffic.
   Design choices in this MIB reflect those requirements.  Future
   versions of the DOCSIS standard are expected to require support
   for SNMPv3 and IPv6 as well.


5.087 RFC 2670 Radio Frequency (RF) Interface Management Information
      Base for MCNS/DOCSIS compliant RF interfaces (MIB)

This MIB defines the following OIDs:

DocsIfCmtsCmStatusEntry ::= SEQUENCE {
            docsIfCmtsCmStatusIndex               Integer32,
            docsIfCmtsCmStatusMacAddress          MacAddress,
            docsIfCmtsCmStatusIpAddress           IpAddress,
            docsIfCmtsCmStatusDownChannelIfIndex  InterfaceIndexOrZero,
            docsIfCmtsCmStatusUpChannelIfIndex    InterfaceIndexOrZero,
            docsIfCmtsCmStatusRxPower             TenthdBmV,
            docsIfCmtsCmStatusTimingOffset        Unsigned32,
            docsIfCmtsCmStatusEqualizationData    OCTET STRING,
            docsIfCmtsCmStatusValue               INTEGER,
            docsIfCmtsCmStatusUnerroreds          Counter32,
            docsIfCmtsCmStatusCorrecteds          Counter32,
            docsIfCmtsCmStatusUncorrectables      Counter32,
            docsIfCmtsCmStatusSignalNoise         TenthdB,
            docsIfCmtsCmStatusMicroreflections    Integer32
        }

docsIfCmtsCmStatusIpAddress OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "IP address of this Cable Modem. If the Cable Modem has no
             IP address assigned, or the IP address is unknown, this
             object returns a value of 0.0.0.0. If the Cable Modem has
             multiple IP addresses, this object returns the IP address
             associated with the Cable interface."
        ::= { docsIfCmtsCmStatusEntry 3 }

IPv6 OIDs should be defined.


5.088 RFC 2674 Definitions of Managed Objects for Bridges with
      Traffic Classes, Multicast Filtering and Virtual LAN
      Extensions (MIB)

There are no IPv4 dependencies in this protocol.


5.089 RFC 2677 Definitions of Managed Objects for the NBMA Next
      Hop Resolution Protocol (NHRP) (NHRP-MIB)

There are no IPv4 dependencies in this protocol.


5.90 RFC 2720 Traffic Flow Measurement: Meter MIB

This protocol is both IPv4 and IPv6 aware and needs no changes.


5.091 RFC 2725 Routing Policy System Security

There are no IPv4 dependencies in this protocol.


5.092 RFC 2726 PGP Authentication for RIPE Database Updates

There are no IPv4 dependencies in this protocol.


5.093 RFC 2737 Entity MIB (Version 2)

The TAddress Syntax is used in this MIB which contains IPv4
assumptions and need to be updated.

entLogicalTAddress OBJECT-TYPE
    SYNTAX      TAddress
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
            "The transport service address by which the logical entity
            receives network management traffic, formatted according to
            the corresponding value of entLogicalTDomain.

            For snmpUDPDomain, a TAddress is 6 octets long, the initial
            4 octets containing the IP-address in network-byte order and
            the last 2 containing the UDP port in network-byte order.
            Consult 'Transport Mappings for Version 2 of the Simple
            Network Management Protocol' (RFC 1906 [RFC1906]) for
            further information on snmpUDPDomain."


5.094 RFC 2741 Agent Extensibility (AgentX) Protocol Version
      1 (SNMP)

This protocol contains definitions for IPv4 only objects, by reference
and all examples use only IPv4 addressing.  However, there does not
seem to be any reason that it could not easily be modified to support
IPv6 addresses.


5.095 RFC 2742 Definitions of Managed Objects for Extensible SNMP
      Agents

There are no IPv4 dependencies in this protocol.


5.096 RFC 2748 The COPS (Common Open Policy Service) Protocol
      (COPS)

This protocol is both IPv4 and IPv6 aware and needs no changes.


5.097 RFC 2749 COPS usage for RSVP

There are no IPv4 dependencies in this protocol.

5.098 RFC 2769 Routing Policy System Replication (RPSL)

There are no IPv4 dependencies in this protocol.


5.099 RFC 2787 Definitions of Managed Objects for the Virtual
      Router Redundancy Protocol

As stated in the Overview section:

   Since the VRRP protocol is intended for use with IPv4 routers only,
   this MIB uses the SYNTAX for IP addresses which is specific to IPv4.
   Thus, changes will be required for this MIB to interoperate in an
   IPv6 environment.


5.100 RFC 2788 Network Services Monitoring MIB

There are no IPv4 dependencies in this protocol.


5.101 RFC 2789 Mail Monitoring MIB

There are no IPv4 dependencies in this protocol.


5.102 RFC 2837 Definitions of Managed Objects for the Fabric Element
      in Fibre Channel Standard

There are no IPv4 dependencies in this protocol.


5.103 RFC 2851 Textual Conventions for Internet Network Addresses

This MIB defines a new set of OIDs for that allow new MIB's to
use multiple versions of IP.  Currently IPv4 and IPv6 addressing
is defined.  Update of the many MIBs previously identified as
having IPv4 dependencies could easily be updated using this new
set of IP address abstractions.


5.104 RFC 2856 Textual Conventions for Additional High Capacity
      Data Types (SNMP)

There are no IPv4 dependencies in this protocol.


5.105 RFC 2864 The Inverted Stack Table Extension to the Interfaces
      Group MIB

There are no IPv4 dependencies in this protocol.


5.106 RFC 2895 Remote Network Monitoring MIB Protocol Identifier
      Reference (RMON-MIB)

This MIB is both IPv4 and IPv6 aware and needs no changes.


5.107 RFC 2925 Definitions of Managed Objects for Remote
      Ping, Traceroute, and Lookup Operations

This MIB mostly is IPv4 and IPv6 aware.  There are a few
assumptions that are problems thought.  In the following OIDs:

 pingCtlDataSize OBJECT-TYPE
    SYNTAX      Unsigned32 (0..65507)
    UNITS       "octets"
    MAX-ACCESS  read-create
    STATUS      current
    DESCRIPTION
        "Specifies the size of the data portion to be
        transmitted in a ping operation in octets.  A ping
        request is usually an ICMP message encoded
        into an IP packet.  An IP packet has a maximum size
        of 65535 octets.  Subtracting the size of the ICMP
        or UDP header (both 8 octets) and the size of the IP
        header (20 octets) yields a maximum size of 65507
        octets."
    DEFVAL { 0 }
    ::= { pingCtlEntry 5 }


 traceRouteCtlDataSize OBJECT-TYPE
    SYNTAX      Unsigned32 (0..65507)
    UNITS       "octets"
    MAX-ACCESS  read-create
    STATUS      current
    DESCRIPTION
        "Specifies the size of the data portion of a traceroute
        request in octets.  A traceroute request is essentially
        transmitted by encoding a UDP datagram into a
        IP packet. So subtracting the size of a UDP header
        (8 octets) and the size of a IP header (20 octets)
        yields a maximum of 65507 octets."
    DEFVAL { 0 }
    ::= { traceRouteCtlEntry 6 }

There is clearly an assumption of IPv4 header sizes.


5.108 RFC 2932 IPv4 Multicast Routing MIB

This protocol is only defined for IPv4 and a similar MIB
must be defined for IPv6.


5.109 RFC 2933 Internet Group Management Protocol MIB

As stated in this document:

   Since IGMP is specific to IPv4, this MIB does not support management
   of equivalent functionality for other address families, such as IPv6.


5.110 RFC 2940 Definitions of Managed Objects for Common
      Open Policy Service (COPS) Protocol Clients

This MIB is both IPv4 and IPv6 aware and needs no changes.


5.111 RFC 2954 Definitions of Managed Objects for Frame
      Relay Service (FR-MIB)

There are no IPv4 dependencies in this protocol.


5.112 RFC 2955 Definitions of Managed Objects for Monitoring
      and Controlling the Frame Relay/ATM PVC Service
      Interworking Function

There are no IPv4 dependencies in this protocol.


5.113 RFC 2959 Real-Time Transport Protocol Management
      Information Base

There are numerous uses of the included TAddress Syntax which is
IPv4 dependent as noted above.

For example:

rtpSessionRemAddr OBJECT-TYPE
    SYNTAX          TAddress
    MAX-ACCESS      read-create
    STATUS          current
    DESCRIPTION
      "The address to which RTP packets are sent by the RTP system.
      In an IP multicast RTP session, this is the single address used
      by all senders and receivers of RTP session data.  In a unicast
      RTP session this is the unicast address of the remote RTP system.
      'The destination address pair may be common for all participants,
      as in the case of IP multicast, or may be different for each, as
      in the case of individual unicast network address pairs.'  See
      RFC 1889, 'RTP: A Transport Protocol for Real-Time Applications,'
      sec. 3.  The transport service is identified by rtpSessionDomain.
      For snmpUDPDomain, this is an IP address and even-numbered UDP
      Port with the RTCP being sent on the next higher odd-numbered
      port, see RFC 1889, sec. 5."
    ::= { rtpSessionEntry 3 }

There are a total of 8 instances of this.


5.114 RFC 2981 Event MIB

There are no IPv4 dependencies in this protocol.


5.115 RFC 2982 Distributed Management Expression MIB

There are no IPv4 dependencies in this protocol.


5.116 RFC 3014 Notification Log MIB

This document contains OIDs that are IPv4 specific:

nlmLogVariableIpAddressVal OBJECT-TYPE
    SYNTAX      IpAddress
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
     "The value when nlmLogVariableType is 'ipAddress'.
     Although this seems to be unfriendly for IPv6, we
     have to recognize that there are a number of older
     MIBs that do contain an IPv4 format address, known
     as IpAddress.

     IPv6 addresses are represented using TAddress or
     InetAddress, and so the underlying datatype is
     OCTET STRING, and their value would be stored in
     the nlmLogVariableOctetStringVal column."
    ::= { nlmLogVariableEntry 9 }


Not withstanding the note in the DESCRIPTION.


5.117 RFC 3019 IP Version 6 Management Information Base for
      The Multicast Listener Discovery Protocol

This is an IPv6 related document and is not discussed in this
document.


5.118 RFC 3020 Definitions of Managed Objects for Monitoring
      and Controlling the UNI/NNI Multilink Frame Relay Function

There are no IPv4 dependencies in this protocol.


5.119 RFC 3055 Management Information Base for the PINT Services
      Architecture

There are no IPv4 dependencies in this protocol.


5.120 RFC 3060 Policy Core Information Model -- Version 1
      Specification (CIM)

There are no IPv4 dependencies in this protocol.


5.121 RFC 3084 COPS Usage for Policy Provisioning (COPS-PR)
      (COPS-PR)

This is an IPv4 only protocol.  A version for IPv6 must be defined.



6.0 Experimental RFCs

Experimental RFCs typically define protocols that do not have widescale
implementation or usage on the Internet.  They are often propriety in
nature or used in limited arenas.  They are documented to the Internet
community in order to allow potential interoperability or some other
potential useful scenario.  In a few cases they are presented as
alternatives to the mainstream solution to an acknowledged problem.


6.01 RFC 1187 Bulk Table Retrieval with the SNMP (SNMP-BULK)

There are no IPv4 dependencies in this protocol.


6.02 RFC 1224 Techniques for managing asynchronously generated
      alerts (ALERTS)

There are no IPv4 dependencies in this protocol.


6.03 RFC 1238 CLNS MIB for use with Connectionless Network Protocol
      (ISO 8473) and End System to Intermediate System (ISO 9542)
      (CLNS-MIB)

There are no IPv4 dependencies in this protocol.


6.04 RFC 1592 Simple Network Management Protocol Distributed Protocol
      Interface Version 2.0 (SNMP-DPI)

There are no IPv4 dependencies in this protocol.


6.05 RFC 1792 TCP/IPX Connection Mib Specification (TCP/IPXMIB)

There are no IPv4 dependencies in this protocol.


6.06 RFC 1901 Introduction to Community-based SNMPv2 (SNMPV2CB)

There are no IPv4 dependencies in this protocol.


6.07 RFC 1909 An Administrative Infrastructure for SNMPv2
      (SNMPV2AI)

There are no IPv4 dependencies in this protocol.


6.08 RFC 1910 User-based Security Model for SNMPv2 (SNMPV2SM)

There are no IPv4 dependencies in this protocol.


6.09 RFC 2593 Script MIB Extensibility Protocol Version 1.0

There are no IPv4 dependencies in this protocol.


6.10 RFC 2724 RTFM: New Attributes for Traffic Flow Measurement

There are no IPv4 dependencies in this protocol.


6.11 RFC 2758 Definitions of Managed Objects for Service Level
      Agreements Performance Monitoring

This protocol is both IPv4 and IPv6 aware and needs no changes.


6.12 RFC 2786 Diffie-Helman USM Key Management Information Base and
      Textual Convention

There are no IPv4 dependencies in this protocol.


6.13 RFC 2903 Generic AAA Architecture

There are no IPv4 dependencies in this protocol.


6.14 RFC 2934 Protocol Independent Multicast MIB for IPv4

This document is specific to IPv4.



7.0  Summary of Results

In the initial survey of RFCs 41 positives were identified out of a 
total of 163, broken down as follows:
 
	Standards				 3 of   7 or 42.86%
	Draft Standards				 6 of  21 or 28.57%
	Proposed Standards			31 of 121 or 25.62%
	Experimental RFCs			 1 of  14 or  7.14%

Of those identified many require no action because they document 
outdated and unused protocols, while others are document protocols 
that are actively being updated by the appropriate working groups.  
Additionally there are many instances of standards that should be 
updated but do not cause any operational impact if they are not 
updated.  The remaining instances are documented below.



7.1  Standards


7.1.1 STD 15 Simple Network Management Protocol (RFCs 1157, 1155, 1213)

The limitations identified have been addressed.



7.2 Draft Standards


7.2.1 BGP4 MIB (RFC 1657)

This problem is currently being addressed by the Inter Domain Routing
(IDR) WG and an ID exists (draft-ietf-idr-bgp4-mib-09.txt).


7.2.2 SMDS MIB (RFC 1694)

See Section 7.1.22.  Once a specification for IPv6 over SMDS is 
created a new MIB must be defined.


7.2.3 RIPv2 MIB (RFC 1724)

See Section 7.1.24.  This problem is currently being addressed by the
RIP WG and an ID exists (draft-ietf-rip-mib-01.txt).


7.2.4 OSPFv2 MIB (RFC 1850)

This problem is currently being addressed by the OSPF WG and an ID
exists (draft-ietf-ospf-ospfv3-mib-04.txt).


7.2.5 Transport MIB (RFC 1906)

The problem has been fixed in RFC 2454, IPv6 Management Information 
Base for the User Datagram Protocol.


7.2.6 Frame Relay MIB (RFC 2115)

The problem has been fixed in RFC 2954, Definitions of Managed Objects
for Frame Relay Service.



7.3  Proposed Standards


7.3.01 MIB for Multiprotocol Interconnect over X.25 (RFC 1461)

This problem has not been addressed.  A new specification should
be created.


7.3.02 PPP IPCP MIB (RFC 1473)

There is no updated MIB to cover the problems outlined.  A new MIB
must be defined.


7.3.03  DNS Server MIB (RFC 1611)

The problems have not been addressed and a new MIB must be defined.


7.3.04 DNS Resolver MIB (RFC 1612)

The problems have not been addressed and a new MIB must be defined.


7.3.05  Appletalk MIB (RFC 1742)

The problems have not been addressed and a new MIB should be defined.


7.3.06  The Definitions of Managed Objects for IP Mobility
       Support using SMIv2 (RFC 2006)

The problems are being resolved by the Mobile IP WG and there is
an ID (draft-ietf-mobileip-rfc2006bis-00.txt)


7.3.07 SMIv2 MIB IP (RFC 2011)

The problems have been addressed in RFC 2851, Textual Conventions 
for Internet Network Addresses, and RFC 2465, Management Information 
Base for IP Version 6: Textual Conventions and General Group.


7.3.08 SNMPv2 MIB TCP (RFC 2012)

The problems have been addressed in RFC 2452, IPv6 Management 
Information Base for the Transmission Control Protocol.


7.3.09  SNMPv2 MIB UDP (RFC 2013)

The problems have been addressed in RFC 2454, IPv6 Management 
Information Base for the User Datagram Protocol.


7.3.10  RMON MIB (RFC 2021)

The problems have been addressed in RFC 2819, Remote Network 
Monitoring Management Information Base.


7.3.11  DataLink Switching using SMIv2 MIB (RFC 2022)

The problems have not been addressed and a new MIB should be 
defined.


7.3.12  IP Forwarding Table MIB (RFC 2096)

This issue is being worked on by the IPv6 WG and an ID exists to
address this (draft-ietf-ipngwg-rfc2096-update-00.txt)


7.3.13  Classical IP & ARP over ATM MIB (RFC 2320)

The problems identified are not addressed and a new MIB must be
defined.


7.3.14  Multicast over UNI 3.0/3.1 ATM MIB (RFC 2417)

The problems identified are not addressed and a new MIB must be
defined.


7.3.15  ATM MIB (RFC 2515)

The problems identified are not addressed and a new MIB must be
defined.


7.3.16  TN3270 MIB (RFC 2562)

The problems identified are not addressed and a new MIB may be
defined.


7.3.17  Application MIB (RFC 2564)

The problems identified are not addressed and a new MIB may be
defined.


7.3.18  Coexistence of SNMP v1, v2, & v3 (RFC 2576)

There are no real issues that can be resolved.


7.3.19  Definitions of Managed Objects for APPN/HPR in IP Networks
        (RFC 2584)

The problems identified are not addressed and a new MIB may be
defined.


7.3.20  RADIUS MIB (RFC 2618)

The problems have not been addressed and a new MIB should be defined.


7.3.21  RADIUS Authentication Server MIB (RFC 2619)

The problems have not been addressed and a new MIB should be defined.


7.3.22  IPv4 Tunnel MIB (RFC 2667)

The problems have not been addressed and a new MIB should be defined.


7.3.23  DOCSIS MIB (RFC 2669)

This problem is currently being addressed by the IPCDN WG and an ID
is available (draft-ietf-ipcdn-device-mibv2-01.txt).


7.3.24  RF MIB For DOCSIS (RFC 2670)

This problem is currently being addressed by the IPCDN WG and an ID
is available (draft-ietf-ipcdn-docs-rfmibv2-01.txt).


7.3.25  Entity MIB Version 2 (RFC 2737)

The problems have not been addressed and a new MIB should be defined.


7.3.26  AgentX Protocol V1 (RFC 2741)

The problems have not been addressed and a new protocol may be 
defined.


7.3.27  VRRP MIB (RFC 2787)

The problems have not been addressed and a new MIB should be defined.


7.3.28  MIB For Traceroute, Pings and Lookups (RFC 2925)

The problems have not been addressed and a new MIB may be defined.


7.3.29  IPv4 Multicast Routing MIB (RFC 2932)

This problem is currently being addressed by the IDR WG and several
IDs exist.


7.3.30  IGMP MIB (RFC 2933)

This problem is currently being addressed by the IDR WG.


7.3.31  RPSL (RFC 2622)

Additional objects must be defined for IPv6 addresses and prefixes.



7.4  Experimental RFCs


7.4.1  Protocol Independent Multicast MIB for IPv4 (RFC 2934)

The problems have not been addressed and a new MIB should be defined.


8.0 Security Consideration

This memo examines the IPv6-readiness of specifications; this does not 
have security considerations in itself.


9.0 Acknowledgements



The authors would like to acknowledge the support of the Internet
Society in the research and production of this document.
Additionally the author, Philip J. Nesser II, would like to thanks
his partner in all ways, Wendy M. Nesser.

The editor, Andreas Bergstrom, would like to thank Pekka Savola
for guidance and collection of comments for the editing of this
document.


10.0 References

10.1 Normative

[1]  Philip J. Nesser II, Andreas Bergstrom. "Introduction to the Survey of 
     IPv4 Addresses in Currently Deployed IETF Standards",
     draft-ietf-v6ops-ipv4survey-intro-01.txt IETF work in progress,
     June 2003


11.0 Authors Address

Please contact the author with any questions, comments or suggestions
at:

Philip J. Nesser II
Principal
Nesser & Nesser Consulting
13501 100th Ave NE, #5202
Kirkland, WA 98034

Email:  phil@nesser.com
Phone:  +1 425 481 4303
Fax:    +1 425 48


Andreas Bergstrom
Ostfold University College
Email: andreas.bergstrom@hiof.no
Address: Rute 503 Buer
         N-1766 Halden
         Norway

12.0 Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights. Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11. Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.
   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard. Please address the information to the IETF Executive
   Director.


13.0  Full Copyright Statement

   Copyright (C) The Internet Society (2000).  All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works. However, this docu-
   ment itself may not be modified in any way, such as by removing the
   copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of develop-
   ing Internet standards in which case the procedures for copyrights
   defined in the Internet Standards process must be followed, or as
   required to translate it into languages other than English. The lim-
   ited permissions granted above are perpetual and will not be revoked
   by the Internet Society or its successors or assigns. This document
   and the information contained herein is provided on an "AS IS" basis
   and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DIS-
   CLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
   TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT
   INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR
   FITNESS FOR A PARTICULAR PURPOSE.