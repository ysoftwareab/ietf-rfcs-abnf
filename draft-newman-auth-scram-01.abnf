W5ub3NvZnQuY29tPg==
nFFekYvL1J5WnhFMlF2cDNzd0BlbGVhbm9yLmlubm9zb2Z0LmNvbT4=
client-msg-1     = [authorize-id] NUL authenticate-id NUL [nonce]
                        ;; MUST NOT exceed 1000 octets

server-msg-1     = salt service-id NUL server-ext-data NUL nonce
                        ;; MUST NOT exceed 1000 octets

client-msg-2     = client-proof

server-msg-2     = server-proof

passphrase       = *UTF8-SAFE
                        ;; At least 64 octets MUST be supported

authorize-id     = *UTF8-PRINT
                        ;; No more than 255 octets

authenticate-id  = *UTF8-PRINT
                        ;; No more than 255 octets

service-id       = service-name "@" server-domain

service-name     = *US-ASCII-PRINT
                        ;; a SASL/GSSAPI service name
server-domain    = *US-ASCII-PRINT
                        ;; an internet domain name

server-ext-data  = *(sasl-mech-list / tls-avail / ext-list)

sasl-mech-list   = "SASL:" *(CFWS sasl-mech) CRLF

CFWS             = [CRLF] 1*SPACE

sasl-mech        = 1*20(ALPHA / DIGIT / "-" / "_")

tls-avail        = "TLS:" SPACE "yes"

ext-list         = 1*UTF8PRINT ":" *(CFWS 1*UTF8PRINT) CRLF

nonce            = 8*OCTET

salt             = 8OCTET

client-proof     = 16OCTET

server-proof     = 16OCTET

NUL              = %x00  ;; US-ASCII NUL character

US-ASCII-SAFE    = %x01-09 / %x0B-0C / %x0E-7F
                       ;; US-ASCII except CR, LF, NUL

US-ASCII-PRINT   = %x20-7E
                       ;; printable US-ASCII including SPACE

UTF8-SAFE        = US-ASCII-SAFE / UTF8-1 / UTF8-2 / UTF8-3
                          / UTF8-4 / UTF8-5

UTF8-PRINT       = US-ASCII-PRINT / UTF8-1 / UTF8-2 / UTF8-3
                          / UTF8-4 / UTF8-5

UTF8-CONT        = %x80..BF

UTF8-1           = %xC0..DF UTF8-CONT

UTF8-2           = %xE0..EF 2UTF8-CONT

UTF8-3           = %xF0..F7 3UTF8-CONT

UTF8-4           = %xF8..FB 4UTF8-CONT

UTF8-5           = %xFC..FD 5UTF8-CONT
client-chal     = AZ + AU + Uc
server-chal     = salt + service + ext-attr + Us
salted-pass     = MAC(salt, pass)
client-key      = H(salted-pass)
client-verifier = H(client-key)
shared-key      = MAC(server-chal + client-chal, client-verifier)
client-proof    = client-key XOR shared-key
server-key      = MAC(salt, salted-pass)
server-proof    = MAC(client-chal + server-chal, server-key)

key = k_pad;
key_len = HMAC_MD5_SIZE;
vptr = (SCRAM_MD5_VRFY *) secret;
vptr = &verifier;
result = -1;
