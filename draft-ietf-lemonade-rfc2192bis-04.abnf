UID=20/;PARTIAL=0.1024>

sub-delims-sh = "!" / "$" / "'" / "(" / ")" /
                     "*" / "+" / ","
                        ;; <<same as sub-delims, but without ";", "&"
                        ;; and "=">>

uchar            = unreserved / sub-delims-sh / pct-encoded

achar            = uchar / "&" / "="
                        ;; <<same as unreserved / sub-delims /
                        ;; pct-encoded, but ";" is disallowed>>

bchar            = achar / ":" / "@" / "/"

enc-auth-type    = 1*achar
                     ; %-encoded version of [IMAP4] "auth-type"

enc-mailbox      = 1*bchar
                    ; %-encoded version of [IMAP4] "mailbox"

enc-search       = 1*bchar
                             ; %-encoded version of [IMAPABNF]
                             ; "search-program". Note that IMAP4
                             ; literals may not be used in
                             ; a "search-program", i.e. only
                             ; quoted or non-synchronizing
                             ; literals (if the server supports
                             ; LITERAL+ [LITERAL+]) are allowed.

enc-section      = 1*bchar
                    ; %-encoded version of [IMAP4] "section-spec"

enc-user         = 1*achar
                    ; %-encoded version of [IMAP4] authorization
                    ; identity or "userid".

imapurl          = "imap://" iserver ipath-query
                 ; Defines an absolute IMAP URL

ipath-query      = ["/" [ icommand ]]
                 ; <<new production in this draft>>
                 ; Corresponds to "path-abempty [ "?" query ]"
                 ; in [URI-GEN]


imapurl-rel     = inetwork-path
                       / iabsolute-path
                       / irelative-path
                       / ipath-empty

inetwork-path   = "//" iserver ipath-query
                 ; Corresponds to '"//" authority path-abempty
                 ; [ "?" query ]' in [URI-GEN]

iabsolute-path  = "/" [ icommand ]
                 ; icommand, if present, MUST NOT start with '/'.
                 ;
                 ; Corresponds to 'path-absolute [ "?" query ]'
                 ; in [URI-GEN]

irelative-path  = imessagelist /
                       ( imsg-or-part [iurlauth] )
                 ; Corresponds to 'path-noscheme [ "?" query ]'
                 ; in [URI-GEN]

imsg-or-part    = ( imailbox-ref "/" iuid-only ["/" isection-only]
                         ["/" ipartial-only] ) /
                       ( iuid-only ["/" isection-only]
                         ["/" ipartial-only] ) /
                       ( isection-only ["/" ipartial-only] ) /
                       ipartial-only

ipath-empty     = 0<pchar>
                 ; Zero characters.
                 ; Corresponds to the relative form of "an IMAP server"
                 ; URL

authimapurl     = "imap://" iserver "/" imessagepart
                       ; Same as "imapurl" when "[icommand]" is
                       ; "imessagepart"

authimapurlfull = authimapurl iurlauth
                       ; Same as "imapurl" when "[icommand]" is
                       ; "imessagepart iurlauth"

authimapurlrump = authimapurl iurlauth-rump


enc-urlauth     = 32*HEXDIG

iurlauth        = iurlauth-rump iua-verifier

iua-verifier    = ":" uauth-mechanism ":" enc-urlauth

iurlauth-rump   = [expire] ";URLAUTH=" access

access          = ("submit+" enc-user) / ("user+" enc-user) /
                         "authuser" / "anonymous"

expire          = ";EXPIRE=" date-time
                           ; date-time defined in [DATETIME]

uauth-mechanism = "INTERNAL" / 1*(ALPHA / DIGIT / "-" / ".")
                          ; Case-insensitive.
                          ; New mechanisms MUST be registered with IANA.
                          ; <<was: just "mechanism">>




iauth            = ";AUTH=" ( "*" / enc-auth-type )

icommand         = imessagelist /
                        imessagepart [iurlauth]

imailbox-ref     = enc-mailbox [uidvalidity]
                    ; <<new production in this draft>>

imessagelist     = imailbox-ref [ "?" enc-search ]
                    ; "enc-search" is [URI-GEN] "query".

imessagepart     = imailbox-ref iuid [isection] [ipartial]
ipartial         = "/" ipartial-only

ipartial-only    = ";PARTIAL=" partial-range
                    ; <<new production in this draft>>

isection         = "/" isection-only

isection-only    = ";SECTION=" enc-section
                    ; <<new production in this draft>>

iserver          = [iuserinfo "@"] host [ ":" port ]
                             ; This is the same as "authority" defined
                             ; in [URI-GEN]. See [URI-GEN] for "host"
                             ; and "port" definitions.

iuid             = "/" iuid-only

iuid-only        = ";UID=" nz-number
                 ; <<new rule in this draft>>
                    ; See [IMAP4] for "nz-number" definition

iuserinfo        = enc-user [iauth] / [enc-user] iauth
                             ; conforms to the generic syntax of
                             ;  "userinfo" as defined in [URI-GEN].

list-type        = "LIST" / "LSUB"

partial-range    = number ["." nz-number]
                    ; partial fetch

uidvalidity      = ";UIDVALIDITY=" nz-number
                    ; See [IMAP4] for "nz-number" definition


c = *src++;
bitbuf = 0;
bitcount = 0;
ucs4 = 0;
bitbuf = (bitbuf << 6) | c;
utf16 = (bitcount ? bitbuf >> bitcount
                             : bitbuf) & 0xffff;
ucs4 = (utf16 - UTF16HIGHSTART) << UTF16SHIFT;
ucs4 = utf16;
i = 1;
i = 2;
i = 3;
i = 4;
utf7mode = 0;
utf8total = 0;
bitstogo = 0;
c = (hextab[src[0]] << 4) | hextab[src[1]];
utf7mode = 0;
utf7mode = 1;
ucs4 = c;
utf8total = 1;
ucs4 = (ucs4 << 6) | (c & 0x3FUL);
utf8pos = 1;
utf8total = 2;
ucs4 = c & 0x1F;
utf8total = 3;
ucs4 = c & 0x0F;
utf8total = 4;
ucs4 = c & 0x03;
utf8total = 0;
bitbuf = (bitbuf << 16) | ((ucs4 >> UTF16SHIFT)
                            + UTF16HIGHSTART);
ucs4 = (ucs4 & UTF16MASK) + UTF16LOSTART;
utf16flag = 1;
bitbuf = (bitbuf << 16) | ucs4;
utf16flag = 0;
