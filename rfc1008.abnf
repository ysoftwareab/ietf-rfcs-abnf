D = TS + ND + TR + [IS] + [IR]        (1)


ND = NQ + MA + TX + PD + TQ   (2)


R = 2D + AS + AR     (3)

n = 1,2,3 represent a connection identifier, unique only within a
p = mess ; p3 = mess + len ;

c0 = 0 ; c1 = 0  ; p1 = mess ;
p2 = p1 + MODX ; if (p2 > p3) p2 = p3 ;
c0 = c0%255 ; c1 = c1%255 ; p1 = p2 ;
            /* adjust accumulated sums to mod 255 */
ip = (c1 << 8) + c0 ;     /* concatenate c1 and c0 */

iq = ((len-k)*c0 - c1)%255 ; if (iq <= 0) iq = iq + 255 ;
ir = (510 - c0 - iq) ;
ip = optm1(mess,len,&c0,&c1) ;
i = (510 - c0 - i) ; if (i > 255) i = i - 255 ;
Elr = expected maximum transit delay, local to remote

Erl = expected maximum transit delay, remote to local

Ar  = time needed by remote entity to generate an acknowledgement

Al  = time needed by local entity to generate an acknowledgement

x   = local processing time for an incoming TPDU

Mlr = maximum NSDU lifetime, local to remote

Mrl = maximum NSDU lifetime, remote to local

T1  = bound for maximum time local entity will wait for
          acknowledgement before retransmitting a TPDU

R   = bound for maximum local entity will continue to transmit a
          TPDU that requires acknowledgment

N   = bound for maximum number of times local entity  will transmit
          a TPDU requiring acknowledgement

L   = bound for the maximum time between the transmission of a
          TPDU and the receipt of any acknowledgment relating to it.

I   = bound for the time after which an entity will initiate
          procedures to terminate a transport connection if a TPDU is
          not received from the peer entity

W   = bound for the maximum time an entity will wait before
          transmitting up-to-date window information

T1 = Elr + Erl + Ar + x.

I = 2*( max( T1,W )*N ).

L = Mlr + Mrl + R + Ar

R = T1*N + z

L = min( R,(Mrl + Mlr)/2 )

T1 = Erl + Elr + Ar + x

