TLS_ECJPAKE_WITH_AES_128_CCM = {0xTBD, 0xTBD}
TLS_ECJPAKE_WITH_AES_256_CCM = {0xTBD, 0xTBD}
TLS_ECJPAKE_WITH_AES_128_CCM_8 = {0xTBD, 0xTBD}
TLS_ECJPAKE_WITH_AES_256_CCM_8 = {0xTBD, 0xTBD}

M = str(mlen, x)

x = int(mlen, M)

s = int(<password>) mod n

X = G*x

V = G*v

h = int(SHA-256(G, V, X, ID)) mod n

r = v - x*h mod n

h = int(SHA-256(G, V, X, ID)) mod n

GB = X1 + X2 + X3

xs = x4*s mod n

Xs = GB*xs

V = GB*v

h = int(SHA-256(GB, V, Xs, IDs)) mod n

r = v - xs*h mod n

h = int(SHA-256(GB, V, Xs, IDs)) mod n

GA = X1 + X3 + X4
xc = x2*s mod n

Xc = GA*xc

V = GA*v

h = int(SHA-256(GA, V, Xc, IDc)) mod n

r = v - xc*h mod n

h = int(SHA-256(GA, V, Xc, IDc)) mod n

PMSK = (Xc - X2*x4*s)*x4

PMS = SHA-256(str(32, X coordinate of PMSK))

PMSK = (Xs - X4*x2*s)*x2

PMS = SHA-256(str(32, X coordinate of PMSK))

TLS_ECJPAKE_WITH_AES_128_CCM = {0xTBD, 0xTBD}
TLS_ECJPAKE_WITH_AES_256_CCM = {0xTBD, 0xTBD}
TLS_ECJPAKE_WITH_AES_128_CCM_8 = {0xTBD, 0xTBD}
TLS_ECJPAKE_WITH_AES_256_CCM_8 = {0xTBD, 0xTBD}

ecjpake_key_kp_pair = TBD

