






MALLOC Working Group                                      Dave Thaler
INTERNET-DRAFT                                              Microsoft
Expires July 1999                                     15 January 1999



                    Multicast Address Allocation MIB
                 <draft-ietf-malloc-malloc-mib-00.txt>





Status of this Memo

This document is an Internet-Draft.  Internet-Drafts are working
documents of the Internet Engineering Task Force (IETF), its areas, and
its working groups.  Note that other groups may also distribute working
documents as Internet-Drafts.

Internet-Drafts are draft documents valid for a maximum of six months
and may be updated, replaced, or obsoleted by other documents at any
time.  It is inappropriate to use Internet-Drafts as reference material
or to cite them other than as ``work in progress.''



Copyright Notice

Copyright (C) The Internet Society (1999).  All Rights Reserved.

1.  Introduction

This memo defines an experimental portion of the Management Information
Base (MIB) for use with network management protocols in the Internet
community.  In particular, it describes managed objects used for
managing multicast address allocation.  Other MIBs may be defined for
specific allocation protocols.



2.  The SNMP Network Management Framework

The SNMP Management Framework presently consists of five major
components:





Expires January 1999                                            [Page 1]





Draft               Multicast Address Allocation MIB        January 1999


o    An overall architecture, described in RFC 2271 [1].

o    Mechanisms for describing and naming objects and events for the
     purpose of management. The first version of this Structure of
     Management Information (SMI) is called SMIv1 and described in RFC
     1155 [2], RFC 1212 [3] and RFC 1215 [4]. The second version, called
     SMIv2, is described in RFC 1902 [5], RFC 1903 [6] and RFC 1904 [7].

o    Message protocols for transferring management information. The
     first version of the SNMP message protocol is called SNMPv1 and
     described in RFC 1157 [8]. A second version of the SNMP message
     protocol, which is not an Internet standards track protocol, is
     called SNMPv2c and described in RFC 1901 [9] and RFC 1906 [10].
     The third version of the message protocol is called SNMPv3 and
     described in RFC 1906 [10], RFC 2272 [11] and RFC 2274 [12].

o    Protocol operations for accessing management information. The first
     set of protocol operations and associated PDU formats is described
     in RFC 1157 [8]. A second set of protocol operations and associated
     PDU formats is described in RFC 1905 [13].

o    A set of fundamental applications described in RFC 2273 [14] and
     the view-based access control mechanism described in RFC 2275 [15].

Managed objects are accessed via a virtual information store, termed the
Management Information Base or MIB.  Objects in the MIB are defined
using the mechanisms defined in the SMI.

This memo specifies a MIB module that is compliant to the SMIv2. A MIB
conforming to the SMIv1 can be produced through the appropriate
translations. The resulting translated MIB must be semantically
equivalent, except where objects or events are omitted because no
translation is possible (use of Counter64). Some machine readable
information in SMIv2 will be converted into textual descriptions in
SMIv1 during the translation process. However, this loss of machine
readable information is not considered to change the semantics of the
MIB.


2.1.  Object Definitions

Managed objects are accessed via a virtual information store, termed the
Management Information Base or MIB.  Objects in the MIB are defined
using the subset of Abstract Syntax Notation One (ASN.1) defined in the
SMI.  In particular, each object type is named by an OBJECT IDENTIFIER,





Expires January 1999                                            [Page 2]





Draft               Multicast Address Allocation MIB        January 1999


an administratively assigned name.  The object type together with an
object instance serves to uniquely identify a specific instantiation of
the object.  For human convenience, we often use a textual string,
termed the descriptor, to refer to the object type.


3.  Overview

This MIB module contains one scalar and four tables.  The tables are:

o    the Scope Table, containing information on the multicast scopes
     known to a multicast address allocation server;

o    the Scope Name Table, containing the names of the multicast scopes;

o    the Request Table, containing the requests for address allocations;
     and

o    the Address Table, containing the blocks of addresses which have
     been allocated.






























Expires January 1999                                            [Page 3]





Draft               Multicast Address Allocation MIB        January 1999


4.  Definitions

MALLOC-MIB DEFINITIONS ::= BEGIN

IMPORTS
    MODULE-IDENTITY, OBJECT-TYPE, UInteger32,
    Integer32, Gauge32, IpAddress    FROM SNMPv2-SMI
    RowStatus, DisplayString         FROM SNMPv2-TC
    MODULE-COMPLIANCE, OBJECT-GROUP  FROM SNMPv2-CONF;

mallocMIB MODULE-IDENTITY
    LAST-UPDATED "9901151200Z"
    ORGANIZATION "Microsoft Corporation"
    CONTACT-INFO
                        " Dave Thaler
                          Microsoft Corporation
                          One Microsoft Way
                          Redmond, WA  98052-6399
                          EMail: dthalerd@microsoft.com"
    DESCRIPTION
            "The MIB module for management of Multicast Address
            Allocation Servers."
    ::= { XXX }


mallocMIBObjects OBJECT IDENTIFIER ::= { mallocMIB 1 }

malloc      OBJECT IDENTIFIER ::= { mallocMIBObjects 1 }






















Expires January 1999                                            [Page 4]





Draft               Multicast Address Allocation MIB        January 1999


--
-- scalars
--

mallocCapabilities OBJECT-TYPE
    SYNTAX     BITS {
                   startTime(0),
                   serverMobility(1),
                   retryAfter(2)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "This object describes the capabilities which a client or
            server supports.  The startTime bit indicates that
            allocations with a future start time are supported.  The
            serverMobility bit indicates that allocations can be renewed
            or released from a server other than the one granting the
            original allocation.  The retryAfter bit indicates support
            for a waiting state whether the client may check back at a
            later time to get the status of its request."
    ::= { malloc 1 }

--
-- the Scope Table
--
-- Entries in this table may be dynamically discovered via
-- some other protocol, such as MZAP, or may be statically
-- configured, such as in an isolated network environment.
--

mallocScopeTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF MallocScopeEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The (conceptual) table containing information on multicast
            scopes from which addresses may be allocated."
    ::= { malloc 2 }











Expires January 1999                                            [Page 5]





Draft               Multicast Address Allocation MIB        January 1999


mallocScopeEntry OBJECT-TYPE
    SYNTAX     MallocScopeEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "An entry (conceptual row) containing the information on a
            particular multicast scope."
    INDEX      { mallocScopeFirstAddress }
    ::= { mallocScopeTable 1 }

MallocScopeEntry ::= SEQUENCE {
    mallocScopeFirstAddress         IpAddress,
    mallocScopeLastAddress          IpAddress,
    mallocScopeTTL                  INTEGER,
    mallocScopeLifetime             UInteger32,
    mallocScopeNumAllocatedAddrs    Gauge32,
    mallocScopeNumOfferedAddrs      Gauge32,
    mallocScopeNumWaitingAddrs      Gauge32,
    mallocScopeStatus               RowStatus
}

mallocScopeFirstAddress OBJECT-TYPE
    SYNTAX     IpAddress
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The first address in the multicast scope range."
    ::= { mallocScopeEntry 1 }

mallocScopeLastAddress OBJECT-TYPE
    SYNTAX     IpAddress
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "The last address in the multicast scope range."
    ::= { mallocScopeEntry 2 }

mallocScopeTTL OBJECT-TYPE
    SYNTAX     INTEGER (0..255)
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "The IPv4 TTL (or IPv6 hop limit) which applications should
            use for groups within the scope."
    DEFVAL     { 255 }





Expires January 1999                                            [Page 6]





Draft               Multicast Address Allocation MIB        January 1999


    ::= { mallocScopeEntry 3 }

mallocScopeLifetime OBJECT-TYPE
    SYNTAX     UInteger32
    UNITS      "seconds"
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "The number of seconds remaining in the lifetime of the
            scope.  A value of 0 indicates that the scope is not subject
            to aging."
    DEFVAL     { 0 }
    ::= { mallocScopeEntry 4 }

mallocScopeNumAllocatedAddrs OBJECT-TYPE
    SYNTAX     Gauge32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of addresses in the range which have been
            allocated.  This value can be used to determine the current
            address space utilization within the scoped range. This
            should match the total number of addresses for this scope
            covered by entries in the mallocAddressTable."
    ::= { mallocScopeEntry 5 }

mallocScopeNumOfferedAddrs OBJECT-TYPE
    SYNTAX     Gauge32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of addresses in the range which have been
            offered.  This number should match the sum of
            mallocRequestNumAddrs for all entries in the
            mallocRequestTable in the offered state.  Together with
            mallocScopeNumAllocatedAddrs, this can be used to determine
            the address space utilization within the scoped range in the
            immediate future."
    ::= { mallocScopeEntry 6 }

mallocScopeNumWaitingAddrs OBJECT-TYPE
    SYNTAX     Gauge32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION





Expires January 1999                                            [Page 7]





Draft               Multicast Address Allocation MIB        January 1999


            "The number of addresses in the range which have been
            requested, but whose state is waiting, while the server
            attempts to acquire more address space."
    ::= { mallocScopeEntry 7 }

mallocScopeStatus OBJECT-TYPE
    SYNTAX     RowStatus
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "The status of this row, by which new entries may be
            created, or old entries deleted from this table."
    ::= { mallocScopeEntry 8 }

--
-- the Scope Name Table
--
-- Entries in this table may be dynamically discovered via
-- some other protocol, such as MZAP, or may be statically
-- configured, such as in an isolated network environment.
--

mallocScopeNameTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF MallocScopeNameEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The (conceptual) table containing information on multicast
            scope names."
    ::= { malloc 3 }

mallocScopeNameEntry OBJECT-TYPE
    SYNTAX     MallocScopeNameEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "An entry (conceptual row) containing the information on a
            particular multicast scope name."
    INDEX      { mallocScopeFirstAddress, IMPLIED mallocScopeNameLangName }
    ::= { mallocScopeNameTable 1 }










Expires January 1999                                            [Page 8]





Draft               Multicast Address Allocation MIB        January 1999


MallocScopeNameEntry ::= SEQUENCE {
    mallocScopeNameLangName         DisplayString,
    mallocScopeNameScopeName        DisplayString,
    mallocScopeNameDefault          INTEGER,
    mallocScopeNameStatus           RowStatus
}

mallocScopeNameLangName OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(1..255))
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The RFC 1766 language tag for the language of the scope
            name."
    ::= { mallocScopeNameEntry 1 }

mallocScopeNameScopeName OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(1..255))
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "The UTF-8 encoding of the scope name."
    ::= { mallocScopeNameEntry 2 }

mallocScopeNameDefault OBJECT-TYPE
    SYNTAX     INTEGER {
                   true(1),
                   false(2)
               }
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "This object indicates whether this name should be used if
            no scope name exists in a client's preferred language."
    DEFVAL     { false }
    ::= { mallocScopeNameEntry 3 }

mallocScopeNameStatus OBJECT-TYPE
    SYNTAX     RowStatus
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "The status of this row, by which new entries may be
            created, or old entries deleted from this table."
    ::= { mallocScopeNameEntry 4 }





Expires January 1999                                            [Page 9]





Draft               Multicast Address Allocation MIB        January 1999


--
-- the Request Table
--
-- Entries in this table reflect requests dynamically received
-- by an address allocation protocol.
--

mallocRequestTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF MallocRequestEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The (conceptual) table containing information on allocation
            requests, whether allocated or in progress.  This table may
            also be used to determine which clients are responsible for
            high address space utilization within a given scope."
    ::= { malloc 4 }

mallocRequestEntry OBJECT-TYPE
    SYNTAX     MallocRequestEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "An entry (conceptual row) containing the information on a
            particular allocation request."
    INDEX      { mallocRequestGuid }
    ::= { mallocRequestTable 1 }

MallocRequestEntry ::= SEQUENCE {
    mallocRequestGuid                    OCTET STRING,
    mallocRequestScopeFirstAddress       IpAddress,
    mallocRequestStartTime               Integer32,
    mallocRequestEndTime                 Integer32,
    mallocRequestNumAddrs                Integer32,
    mallocRequestState                   INTEGER,
    mallocRequestClientAddress           IpAddress,
    mallocRequestServerAddress           IpAddress
}

mallocRequestGuid OBJECT-TYPE
    SYNTAX     OCTET STRING
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The unique identifier of this request."





Expires January 1999                                           [Page 10]





Draft               Multicast Address Allocation MIB        January 1999


    ::= { mallocRequestEntry 1 }

mallocRequestScopeFirstAddress OBJECT-TYPE
    SYNTAX     IpAddress
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The first address of the scope to which the request
            applies.  This must match mallocScopeFirstAddress for some
            row in the mallocScopeTable."
    ::= { mallocRequestEntry 2 }

mallocRequestStartTime OBJECT-TYPE
    SYNTAX     Integer32
    UNITS      "seconds"
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of seconds remaining before the start time of
            the request.  A value of 0 means that the allocation is
            currently in effect."
    ::= { mallocRequestEntry 3 }

mallocRequestEndTime OBJECT-TYPE
    SYNTAX     Integer32
    UNITS      "seconds"
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of seconds remaining before the end time of the
            request."
    ::= { mallocRequestEntry 4 }

mallocRequestNumAddrs OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of addresses requested.  If the addresses have
            been allocated, this number should match the total number of
            addresses for this request covered by entries in the
            mallocAddressTable."
    ::= { mallocRequestEntry 5 }

mallocRequestState OBJECT-TYPE





Expires January 1999                                           [Page 11]





Draft               Multicast Address Allocation MIB        January 1999


    SYNTAX     INTEGER {
                   allocated(1),
                   offered(2),   -- tentatively allocated
                   waiting(3)    -- waiting for more space
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The state of the request. A value of allocated indicates
            that one or more entries for this request are present in the
            mallocAddressTable.  A value of offered indicates that
            addresses have been offered to the client (e.g. via a MADCAP
            OFFER message), but the allocation has not been committed.
            A value of waiting indicates that the allocation is blocked
            while the server attempts to acquire more space from which
            it can allocate addresses."
    ::= { mallocRequestEntry 6 }

mallocRequestClientAddress OBJECT-TYPE
    SYNTAX     IpAddress
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The address of the client to which this allocation was
            (last) granted."
    ::= { mallocRequestEntry 7 }

mallocRequestServerAddress OBJECT-TYPE
    SYNTAX     IpAddress
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The address of the server to which the request was (last)
            sent."
    ::= { mallocRequestEntry 8 }

--
-- the Address Table
--

mallocAddressTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF MallocAddressEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION





Expires January 1999                                           [Page 12]





Draft               Multicast Address Allocation MIB        January 1999


            "The (conceptual) table containing information on blocks of
            allocated addresses.  This table may be used to map a given
            multicast group address to the associated request."
    ::= { malloc 5 }

mallocAddressEntry OBJECT-TYPE
    SYNTAX     MallocAddressEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "An entry (conceptual row) containing the information on a
            particular block of allocated addresses."
    INDEX      { mallocAddressFirstAddress }
    ::= { mallocAddressTable 1 }

MallocAddressEntry ::= SEQUENCE {
    mallocAddressFirstAddress            IpAddress,
    mallocAddressNumAddrs                Integer32,
    mallocAddressRequestGuid             OCTET STRING
}

mallocAddressFirstAddress OBJECT-TYPE
    SYNTAX     IpAddress
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The first address in the allocated block."
    ::= { mallocAddressEntry 1 }

mallocAddressNumAddrs OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of addresses in the allocated block."
    ::= { mallocAddressEntry 2 }

mallocAddressRequestGuid OBJECT-TYPE
    SYNTAX     OCTET STRING
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The unique identifier of the request which caused this
            block of addresses to be allocated."
    ::= { mallocAddressEntry 3 }





Expires January 1999                                           [Page 13]





Draft               Multicast Address Allocation MIB        January 1999


-- conformance information

mallocMIBConformance
                  OBJECT IDENTIFIER ::= { mallocMIB 2 }
mallocMIBCompliances
                  OBJECT IDENTIFIER ::= { mallocMIBConformance 1 }
mallocMIBGroups  OBJECT IDENTIFIER ::= { mallocMIBConformance 2 }


-- compliance statements

mallocMIBServerCompliance MODULE-COMPLIANCE
    STATUS  current
    DESCRIPTION
            "The compliance statement for multicast address allocation
            servers implementing the MALLOC MIB."
    MODULE  -- this module
    MANDATORY-GROUPS { mallocMIBBasicGroup,
                       mallocMIBServerGroup }

        OBJECT      mallocScopeLastAddress
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required."

        OBJECT      mallocScopeTTL
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required."

        OBJECT      mallocScopeLifetime
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required."

        OBJECT      mallocScopeStatus
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required."

        OBJECT      mallocScopeNameScopeName
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required."






Expires January 1999                                           [Page 14]





Draft               Multicast Address Allocation MIB        January 1999


        OBJECT      mallocScopeNameDefault
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required."

        OBJECT      mallocScopeNameStatus
        MIN-ACCESS  read-only
        DESCRIPTION
            "Write access is not required."
   ::= { mallocMIBCompliances 1 }

mallocMIBClientCompliance MODULE-COMPLIANCE
    STATUS  current
    DESCRIPTION
            "The compliance statement for hosts implementing the MALLOC
            MIB."
    MODULE  -- this module
    MANDATORY-GROUPS { mallocMIBBasicGroup,
                       mallocMIBClientGroup }
   ::= { mallocMIBCompliances 2 }

-- units of conformance

mallocMIBBasicGroup OBJECT-GROUP
        OBJECTS { mallocCapabilities,
                  mallocRequestScopeFirstAddress, mallocRequestStartTime,
                  mallocRequestEndTime, mallocRequestNumAddrs,
                  mallocRequestState,
                  mallocAddressNumAddrs, mallocAddressRequestGuid
                }
        STATUS  current
        DESCRIPTION
            "The basic collection of objects providing management of IP
            multicast address allocation."
   ::= { mallocMIBGroups 1 }

mallocMIBServerGroup OBJECT-GROUP
        OBJECTS { mallocScopeLastAddress, mallocScopeTTL,
                  mallocScopeLifetime, mallocScopeNumAllocatedAddrs,
                  mallocScopeNumOfferedAddrs, mallocScopeNumWaitingAddrs,
                  mallocScopeStatus,
                  mallocScopeNameScopeName, mallocScopeNameDefault,
                  mallocScopeNameStatus,
                  mallocRequestClientAddress
                }





Expires January 1999                                           [Page 15]





Draft               Multicast Address Allocation MIB        January 1999


        STATUS  current
        DESCRIPTION
            "A collection of objects providing management of multicast
            address allocation in servers."
   ::= { mallocMIBGroups 2 }

mallocMIBClientGroup OBJECT-GROUP
        OBJECTS { mallocRequestServerAddress }
        STATUS  current
        DESCRIPTION
            "The basic collection of objects providing management of IP
            multicast address allocation."
   ::= { mallocMIBGroups 3 }

END



































Expires January 1999                                           [Page 16]





Draft               Multicast Address Allocation MIB        January 1999


5.  Security Considerations

This MIB contains readable objects whose values provide information
related to multicast address allocation.  There are also a number of
objects that have a MAX-ACCESS clause of read-write and/or read-create,
such as those which allow an administrator to dynamically configure
ranges from which to allocate addresses.

If address allocation servers are configured to allow renewal or release
purely on the basis of knowledge of the Guid contained in the Request
and Address tables, then unauthorized read access to these objects can
be used in a denial-of-service attack.

While unauthorized read access to the objects in the Scope and Name
tables is relatively innocuous, unauthorized write access to these
tables could cause a denial-of-service, or could cause unauthorized
creation and/or manipulation of scope ranges.

Hence, the support for SNMP operations in a non-secure environment
without proper protection can have a negative effect on network
operations.

SNMPv1 by itself is such an insecure environment.  Even if the network
itself is secure (for example by using IPSec [16]), even then, there is
no control as to who on the secure network is allowed to access and SET
(change/create/delete) the objects in this MIB.

It is recommended that the implementers consider the security features
as provided by the SNMPv3 framework.  Specifically, the use of the
User-based Security Model RFC 2274 [12] and the View-based Access
Control Model RFC 2275 [15] is recommended.

It is then a customer/user responsibility to ensure that the SNMP entity
giving access to this MIB, is properly configured to give access to
those objects only to those principals (users) that have legitimate
rights to access them.


6.  Author's Address

     Dave Thaler
     Microsoft Corporation
     One Microsoft Way
     Redmond, WA  98052-6399
     Phone: +1 425 703 8835





Expires January 1999                                           [Page 17]





Draft               Multicast Address Allocation MIB        January 1999


     EMail: dthaler@microsoft.com


7.  References

[1]  Harrington, D., Presuhn, R., and B. Wijnen, "An Architecture for
     Describing SNMP Management Frameworks", RFC 2271, Cabletron
     Systems, Inc., BMC Software, Inc., IBM T. J. Watson Research,
     January 1998.

[2]  Rose, M., and K. McCloghrie, "Structure and Identification of
     Management Information for TCP/IP-based Internets", RFC 1155,
     Performance Systems International, Hughes LAN Systems, May 1990.

[3]  Rose, M., and K. McCloghrie, "Concise MIB Definitions", RFC 1212,
     Performance Systems International, Hughes LAN Systems, March 1991.

[4]  M. Rose, "A Convention for Defining Traps for use with the SNMP",
     RFC 1215, Performance Systems International, March 1991.

[5]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Structure
     of Management Information for Version 2 of the Simple Network
     Management Protocol (SNMPv2)", RFC 1902, SNMP Research,Inc., Cisco
     Systems, Inc., Dover Beach Consulting, Inc., International Network
     Services, January 1996.

[6]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Textual
     Conventions for Version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1903, SNMP Research, Inc., Cisco Systems, Inc.,
     Dover Beach Consulting, Inc., International Network Services,
     January 1996.

[7]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Conformance
     Statements for Version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1904, SNMP Research, Inc., Cisco Systems, Inc.,
     Dover Beach Consulting, Inc., International Network Services,
     January 1996.

[8]  Case, J., Fedor, M., Schoffstall, M., and J. Davin, "Simple Network
     Management Protocol", RFC 1157, SNMP Research, Performance Systems
     International, Performance Systems International, MIT Laboratory
     for Computer Science, May 1990.

[9]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
     "Introduction to Community-based SNMPv2", RFC 1901, SNMP Research,





Expires January 1999                                           [Page 18]





Draft               Multicast Address Allocation MIB        January 1999


     Inc., Cisco Systems, Inc., Dover Beach Consulting, Inc.,
     International Network Services, January 1996.

[10] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Transport
     Mappings for Version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1906, SNMP Research, Inc., Cisco Systems, Inc.,
     Dover Beach Consulting, Inc., International Network Services,
     January 1996.

[11] Case, J., Harrington D., Presuhn R., and B. Wijnen, "Message
     Processing and Dispatching for the Simple Network Management
     Protocol (SNMP)", RFC 2272, SNMP Research, Inc., Cabletron Systems,
     Inc., BMC Software, Inc., IBM T. J. Watson Research, January 1998.

[12] Blumenthal, U., and B. Wijnen, "User-based Security Model (USM) for
     version 3 of the Simple Network Management Protocol (SNMPv3)", RFC
     2274, IBM T. J. Watson Research, January 1998.

[13] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Protocol
     Operations for Version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1905, SNMP Research, Inc., Cisco Systems, Inc.,
     Dover Beach Consulting, Inc., International Network Services,
     January 1996.

[14] Levi, D., Meyer, P., and B. Stewart, "MPv3 Applications", RFC 2273,
     SNMP Research, Inc., Secure Computing Corporation, Cisco Systems,
     January 1998.

[15] Wijnen, B., Presuhn, R., and K. McCloghrie, "View-based Access
     Control Model (VACM) for the Simple Network Management Protocol
     (SNMP)", RFC 2275, IBM T. J. Watson Research, BMC Software, Inc.,
     Cisco Systems, Inc., January 1998.

[16] R. Atkinson.  "Security architecture for the internet protocol",
     RFC 1825, August 1995.


8.  Full Copyright Statement

Copyright (C) The Internet Society (1999).  All Rights Reserved.

This document and translations of it may be copied and furnished to
others, and derivative works that comment on or otherwise explain it or
assist in its implmentation may be prepared, copied, published and
distributed, in whole or in part, without restriction of any kind,





Expires January 1999                                           [Page 19]





Draft               Multicast Address Allocation MIB        January 1999


provided that the above copyright notice and this paragraph are included
on all such copies and derivative works.  However, this document itself
may not be modified in any way, such as by removing the copyright notice
or references to the Internet Society or other Internet organizations,
except as needed for the purpose of developing Internet standards in
which case the procedures for copyrights defined in the Internet
Standards process must be followed, or as required to translate it into
languages other than English.

The limited permissions granted above are perpetual and will not be
revoked by the Internet Society or its successors or assigns.

This document and the information contained herein is provided on an "AS
IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK
FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT
LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT
INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR
FITNESS FOR A PARTICULAR PURPOSE."


Table of Contents


1 Introduction ....................................................    1
2 The SNMP Network Management Framework ...........................    1
2.1 Object Definitions ............................................    2
3 Overview ........................................................    3
4 Definitions .....................................................    4
5 Security Considerations .........................................   17
6 Author's Address ................................................   17
7 References ......................................................   18
8 Full Copyright Statement ........................................   19


















Expires January 1999                                           [Page 20]

