service-type    =   abstract-type ":" url-scheme / concrete-type
abstract-type   =   type-name [ "." naming-auth ]
concrete-type   =   protocol [ "." naming-auth ]
type-name       =   resname
naming-auth     =   resname
url-scheme      =   resname
                            ; A recognized URL scheme name, standardized
                            ; either through common practice or through
                            ; approval of a standards body.
resname         =   ALPHA [ 1*(ALPHA / DIGIT / "+" / "-") ]
sap             =   site [url-part]
site            =   ipsite / atsite / ipxsite
ipsite          =   "//" [ [ user "@" ] hostport ]
hostport        =   host [ ":" port ]
host            =   hostname / hostnumber
hostname        =   *( domainlabel "." ) toplabel
alphanum        =   ALPHA / DIGIT
domainlabel     =   alphanum / alphanum *[alphanum / "-"] alphanum
toplabel        =   ALPHA / ALPHA *[ alphanum / "-" ] alphanum
hostnumber      =   ipv4-number / ipv6-number
ipv4-number     =   1*3DIGIT 3("." 1*3DIGIT)
ipv6-number     =   v6num "-" 6( [v6num] "-") v6num ".ipv6"
                            ; Text represented IPv6 address syntax is as
                            ; RFC2373 [4] Section 2.2, with ':'  replaced
                            ; by '-'.
v6num           =   1*4HEXDIGIT
port            =   1*DIGIT
                            ; A port number must be included if the
                            ; protocol field does not have an IANA
                            ; assigned port number.
user            =   *[ uchar / ";" / "+" / "&" / "=" ]
ipxsite         =   "/ipx/" ipx-net ":" ipx-node ":" ipx-socket
ipx-net         =   8 HEXDIGIT
ipx-node        =   12 HEXDIGIT
ipx-socket      =   4 HEXDIGIT
atsite          =   "/at/" at-object ":" at-type "" at-zone
at-object       =   1*31apple-char
at-type         =   1*31apple-char
at-zone         =   1*31apple-char
apple-char      =   ALPHA / DIGIT / safe / escaped
                        =   ; AppleAscii [14] values that are not
                        =   ; from the restricted range must be escaped.
                        =   ; NOTE: The escaped values do NOT correspond
                        =   ; to UTF8 values here:  They are AppleAscii
                        =   ; bytes.
url-part        =   [ url-path ] [ attr-list ]
url-path        =   1 * ( "/" *xchar )
                            ; Each service type must define its
                            ; own syntax consistent
                            ; with [7].
attr-list       =   1 * ( ";" attr-asgn )
attr-asgn       =   attr-id / attr-id "=" attr-value
safe            =   "$" / "-" / "_" / "." / "~"
extra           =   "!" / "*" / "'" / "(" / ")" / "," / "+"
uchar           =   unreserved / escaped
xchar           =   unreserved / reserved / escaped
escaped         =   1*(`\' HEXDIG HEXDIG)
reserved        =   ";" / "/" / "?" / ":" / "@" / "&" / "=" / "+"
unreserved      =   ALPHA / DIGIT / safe / extra


driver=scsi;platform=sys3.2-rs3000

driver=scsi;platform=sys3.2-rs3000

driver=scsi;platform=sys3.2-rs3000

template      =  tem-attrs attr-defs
tem-attrs     =  schemetype schemevers schemetext schemeurl
schemetype    =  "template-type=" scheme term
schemevers    =  "template-version=" version-no term
schemetext    =  "template-description=" newline desc term
schemeurl     =  "template-url-syntax=" newline url-bnf term
url-bnf       =  *[ com-chars ]
                       ; An ABNF describing the <url-path> production
                       ; in the service: URL grammar of Section 2.1.
scheme        =  service-type [ "." naming-auth ]
service-type  =  scheme-name
naming-auth   =  scheme-name
scheme-name   =  ALPHA [1*schemechar] [ "." 1*schemechar ]
schemechar    =  ALPHA / DIGIT / "-" / "+" /
version-no    =  1*DIGIT "." 1*DIGIT
langtag       =  1*8ALPHA ["-" 1*8ALPHA]
                       ; See [5]
desc          =  *[ com-chars ]
                       ; A block of free-form text for reading by
                       ; people describing the service in a short,
                       ; informative manner.
term          =  newline newline
attr-defs     =  *( attr-def / keydef )
attr-def      =  id "=" attrtail
keydef        =  id "=" "keyword" newline [help-text] newline
attrtail      =  type flags newline [value-list] [help-text]
                       [value-list] newline
id            =  1*attrchar
type          =  "string" / "integer" / "boolean" / "opaque"
flags         =  ["m"/"M"] ["l"/"L"] ["o"/"O"] ["x"/"X"]
value-list    =  value newline / value "," value-list /
                       value "," newline value-list
help-text     =  1*( "#" help-line )
                       ; A block of free-form text for reading by
                       ; people describing the attribute and
                       ; its values.
help-line     =  *[ com-chars ] newline
attrchar      =  schemechar / ":" / "_" / "$" / "~" / "@" / "." /
                       "|" / "<" / ">" / "*" / "&"
value         =  string / integer / boolean / opaque
string        =  safe-char *[safe-char / white-sp] safe-char
integer       =  [ "+" | "-" ] 1*DIGIT
boolean       =  "true" / "false"
opaque        =  "\FF" 1*( "\" HEXDIG HEXDIG)
                       ; Each byte of opaque value is hex encoded.
                       ; The format conforms to SLPv2 [3].
                       ; Newlines are ignored in decoding opaque
                       ; values.
com-chars     =  safe-char / white-sp / "," / ";"/ "%"
safe-char     =  attrchar / escaped / " " / "!" / '"' / "'" /
                       "|" / "(" / ")" / "+" / "-" / "." / ":" /
                       "=" / "?" / "[" / "]" / "{" / "/" / "{" /
                       "$"
                       ; All UTF8 printable characters are
                       ; included except ",", "%", ";", and "#".
escaped       =  1*(`\' HEXDIG HEXDIG)
white-sp      =  SPACE / HT
newline       =  CR / ( CR LF )



template-type=FOO

template-version=0.0

template-description=
    The FOO service URL provides the location of an FOO service.

template-url-syntax=
url-path= ; There is no URL path defined for a FOO URL.

users= string M L O
groups= string M L O
template-type=FOO

template-version=0.0

template-description=
    Der FOO Service URL zeigt die Stelle von einem Foo Service an.

template-url-syntax=
url-path= ; Es gibt keinen fuer den FOO URL definierten Pfad.

users= string M L O
groups= string M L O
localize-users= string
localize-groups= string
template-type=Net-Transducer

template-version=0.0

template-description=
    This is an abstract service type.  The purpose of the Net-
    Transducer service type is to organize into a single category
    all network enabled Transducers which have certain properties.

template-url-syntax=
url-path=  ;  Depends on the concrete service type.
               ;  See these templates.

sample-units= string L
sample-resolution= string L
sample-rate= integer L
template-type=service:Net-Transducer:Thermometer

template-version=0.0

template-description=
    The Thermometer is a Net-Transducer capable of reading temperature.
    The data is read by opening a TCP connection to one of the ports
    in the service URL and reading an ASCII string until an NULL
    character is encountered.  The client may continue reading data at
    no faster than the sample-rate, or close the connection.

template-url-syntax=
url-path     = "ports=" ports-list
port-list    = port / port "," ports
port         = 1*DIGIT
                   ; See the Service URL <port> production rule.
                   ; These are the ports connections can be made on.

location-description=string
operator=string O
URL        = service:net-transducer:thermometer://v33.test/ports=3211
Attributes = (location-description=Missile bay 32),
    (operator=Joe Agent), (sample-units=C),
    (sample-resolution=10^-1),(sample-rate=10),
    (template-type=service:net-transducer:thermometer),
    (template-version=0.0),(template-description=
     The Thermometer is a Net-Transducer capable of reading temperature.
     The data is read by opening a TCP connection to one of the ports
     in the service URL and reading an ASCII string until an NULL
     character is encountered.  The client may continue reading data at
     no faster than the sample-rate, or close the connection.),
    (template-url-syntax= \0D "ports=" port-list \OD
port-list = port / port "," ports \OD
port = 1*DIGIT \OD
