


Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


    Definitions of Managed Objects for IEEE 802.12 Repeater Devices


                             June 30, 1995

                               John Flick

                        Hewlett Packard Company
                     8000 Foothills Blvd. M/S 5556
                        Roseville, CA 95747-5556

                        johnf@hprnd.rose.hp.com

                 <draft-ietf-vgmib-repeater-dev-00.txt>


Status of this Memo

   This document is an Internet-Draft.  Internet-Drafts are working
   documents of the Internet Engineering Task Force (IETF), its areas,
   and its working groups.  Note that other groups may also distribute
   working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as ``work in progress.''

   To learn the current status of any Internet-Draft, please check the
   ``1id-abstracts.txt'' listing contained in the Internet-Drafts Shadow
   Directories on ftp.is.co.za (Africa), nic.nordu.net (Europe),
   munnari.oz.au (Pacific Rim), ds.internic.net (US East Coast), or
   ftp.isi.edu (US West Coast).















John Flick             Expires December 30, 1995                [Page 1]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


1.  Abstract

   This memo defines an experimental portion of the Management
   Information Base (MIB) for use with network management protocols in
   TCP/IP-based internets.  In particular, it defines objects for
   managing 100Mb/second repeaters based on IEEE 802.12.

   This memo does not specify a standard for the Internet community.


2.  The SNMPv2 Network Management Framework

   The SNMPv2 Network Management Framework consists of four major
   components.  They are:

      o    RFC 1442 which defines the SMI, the mechanisms used for
           describing and naming objects for the purpose of management.

      o    STD 17, RFC 1213 defines MIB-II, the core set of managed
           objects for the Internet suite of protocols.

      o    RFC 1445 which defines the administrative and other
           architectural aspects of the framework.

      o    RFC 1448 which defines the protocol used for network access
           to managed objects.

   The Framework permits new objects to be defined for the purpose of
   experimentation and evaluation.


2.1.  Object Definitions

   Managed objects are accessed via a virtual information store, termed
   the Management Information Base or MIB.  Objects in the MIB are
   defined using the subset of Abstract Syntax Notation One (ASN.1)
   defined in the SMI.  In particular, each object object type is named
   by an OBJECT IDENTIFIER, an administratively assigned name.  The
   object type together with an object instance serves to uniquely
   identify a specific instantiation of the object.  For human
   convenience, we often use a textual string, termed the descriptor, to
   refer to the object type.


3.  Overview

   Instances of these object types represent attributes of an IEEE
   802.12 (100VG-AnyLAN) repeater, as defined by Section 12, "RMAC



John Flick             Expires December 30, 1995                [Page 2]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


   Protocol" in the IEEE 802.12 Demand Priority Access Method Standard
   [6].

   The definitions presented here are based on Section 13, "Layer
   Management Functions and Services", and Annex E, "GDMO Specifications
   for Demand Priority Managed Objects" of IEEE Standard 802.12 [6].
   Implementors of these MIB objects should note that [6] explicitly
   describes (in the form of Pascal pseudocode) when, where, and how
   various repeater attributes are measured.  The IEEE document also
   describes the effects of repeater actions that may be invoked by
   manipulating instances of the MIB objects defined here.

   The counters in this document are defined to be the same as those
   counters in the IEEE 802.12 Standard, with the intention that the
   same instrumentation can be used to implement both the IEEE and IETF
   management standards.


3.1.  Mapping of IEEE 802.12 Managed Objects

   IEEE 802.12 Managed Object            Corresponding SNMP Object

   oRepeater
     .aCurrentFramingType                vgRptrCurrentFramingType
     .aDesiredFramingType                vgRptrDesiredFramingType
     .aFramingCapability                 vgRptrFramingCapability
     .aGroupMap                          <none>
     .aMACAddress                        vgRptrMACAddress
     .aRepeaterGroupCapacity             vgRptrGroupCapacity
     .aRepeaterHealthData                <none>
     .aRepeaterHealthState               vgRptrHealthState
     .aRepeaterHealthText                vgRptrHealthText
     .aRepeaterID                        <none>
     .aRepeaterSearchAddress             vgRptrSearchAddress
     .aRepeaterSearchGroup               vgRptrSearchGroup
     .aRepeaterSearchPort                vgRptrSearchPort
     .aRepeaterSearchState               vgRptrSearchState
     .aRMACVersion                       vgRptrTrainingVersion
     .acExecuteNonDisruptiveSelfTest     vgRptrNonDisruptTest
     .acRepeaterSearchAddress            vgRptrSearchAddress
     .acResetRepeater                    vgRptrReset
     .nGroupMapChange                    vgRptrGroupChange
     .nRepeaterHealth                    vgRptrHealth
     .nRepeaterReset                     vgRptrResetEvent

   oGroup
     .aGroupCablesBundled                vgRptrGroupCablesBundled
     .aGroupID                           vgRptrGroupIndex



John Flick             Expires December 30, 1995                [Page 3]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


     .aGroupPortCapacity                 vgRptrGroupPortCapacity
     .aPortMap                           <none>
     .nPortMapChange                     <none>

   oPort
     .aAllowableTrainingType             vgRptrPortAllowedTrainType
     .aBroadcastFramesReceived           vgRptrPortBroadcastFrames
     .aCentralMgmtDetectedDupAddr        vgRptrMgrDetectedDupAddress
     .aDataErrorFramesReceived           vgRptrPortDataErrorFrames
     .aHighPriorityFramesReceived        vgRptrPortHighPriorityFrames
     .aHighPriorityOctetsReceived        vgRptrPortHighPriorityOctets
                                         vgRptrPortHCHighPriorityOctets
     .aIPMFramesReceived                 vgRptrPortIPMFrames
     .aLastTrainedAddress                vgRptrAddrLastTrainedAddress
     .aLastTrainingConfig                vgRptrPortLastTrainConfig
     .aLocalRptrDetectedDupAddr          vgRptrRptrDetectedDupAddress
     .aMediaType                         vgRptrPortMediaType
     .aMulticastFramesReceived           vgRptrPortMulticastFrames
     .aNormalPriorityFramesReceived      vgRptrPortNormPriorityFrames
     .aNormalPriorityOctetsReceived      vgRptrPortNormPriorityOctets
                                         vgRptrPortHCNormPriorityOctets
     .aNullAddressedFramesReceived       vgRptrPortNullAddressedFrames
     .aOctetsInUnreadableFramesRcvd      vgRptrPortUnreadableOctets
                                         vgRptrPortHCUnreadableOctets
     .aOversizeFramesReceived            vgRptrPortOversizeFrames
     .aPortAdministrativeState           vgRptrPortAdminStatus
     .aPortID                            vgRptrPortIndex
     .aPortStatus                        vgRptrPortStatus
     .aPortType                          vgRptrPortType
     .aPriorityEnable                    vgRptrPortPriorityEnable
     .aPriorityPromotions                vgRptrPortPriorityPromotions
     .aReadableFramesReceived            vgRptrPortReadableFrames
     .aReadableOctetsReceived            vgRptrPortReadableOctets
                                         vgRptrPortHCReadableOctets
     .aSupportedCascadeMode              vgRptrPortSupportedCascadeMode
     .aSupportedPromiscMode              vgRptrPortSupportedPromiscMode
     .aTrainedAddressChanges             vgRptrAddrTrainedAddressChanges
     .aTrainingResult                    vgRptrPortTrainingResult
     .aTransitionsIntoTraining           vgRptrPortTransitionToTrainings
     .acPortAdministrativeControl        vgRptrPortAdminStatus

   Added SNMP Objects:

       vgRptrGroupDescr
       vgRptrGroupObjectID
       vgRptrGroupOperStatus
       vgRptrGroupLastOperStatusChange




John Flick             Expires December 30, 1995                [Page 4]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


4.  Definitions

      DOT12-RPTR-MIB DEFINITIONS ::= BEGIN

          IMPORTS
              experimental, Counter32, Counter64,
              OBJECT-TYPE, MODULE-IDENTITY, NOTIFICATION-TYPE
                  FROM SNMPv2-SMI
              DisplayString, MacAddress, TruthValue, TimeStamp
                  FROM SNMPv2-TC
              MODULE-COMPLIANCE, OBJECT-GROUP
                  FROM SNMPv2-CONF;

          vgRptrMIB MODULE-IDENTITY
               LAST-UPDATED "9506280155Z"
               ORGANIZATION "Hewlett Packard Company,
                             Roseville Networks Division"
               CONTACT-INFO
                       "       John Flick

                       Postal: Hewlett Packard Company
                               8000 Foothills Blvd. M/S 5556
                               Roseville, CA 95747-5556
                       Tel:    +1 916 785 4018
                       Fax:    +1 916 785 3583

                       E-mail: johnf@hprnd.rose.hp.com"
               DESCRIPTION
                       "This MIB module describes devices in the HP
                       Integrated Communication Facility product
                       line."
               ::= { experimental 64 }


          vgRptrObjects      OBJECT IDENTIFIER ::= { vgRptrMIB 1 }

          vgRptrBasic        OBJECT IDENTIFIER ::= { vgRptrObjects 1 }
          vgRptrBasicRptr    OBJECT IDENTIFIER ::= { vgRptrBasic 1 }

          vgRptrMACAddress OBJECT-TYPE
              SYNTAX     MacAddress
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The MAC address used by the repeater when it
                      initiates training on the uplink port.  Repeaters
                      are allowed to train with an assigned MAC address
                      or a null (all zeroes) MAC address."



John Flick             Expires December 30, 1995                [Page 5]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.1,
                      aMACAddress."
              ::= { vgRptrBasicRptr 1 }

          vgRptrCurrentFramingType OBJECT-TYPE
              SYNTAX     INTEGER {
                             frameType88023(1),
                             frameType88025(2)
                         }
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The type of framing (802.3 or 802.5) currently
                      in use by the repeater."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.1,
                      aCurrentFramingType."
              ::= { vgRptrBasicRptr 2 }

          vgRptrDesiredFramingType OBJECT-TYPE
              SYNTAX     INTEGER {
                             frameType88023(1),
                             frameType88025(2)
                         }
              MAX-ACCESS read-write
              STATUS     current
              DESCRIPTION
                      "The type of framing which will be used by the
                      repeater after the next time it is reset.  The
                      value of this object should be preserved across
                      repeater resets and power failures"
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.1,
                      aDesiredFramingType."
              ::= { vgRptrBasicRptr 3 }

          vgRptrFramingCapability OBJECT-TYPE
              SYNTAX     INTEGER {
                             frameType88023(1),
                             frameType88025(2),
                             frameTypeEither(3)
                         }
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The type of framing this repeater is capable of
                      supporting."



John Flick             Expires December 30, 1995                [Page 6]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.1,
                      aFramingCapability."
              ::= { vgRptrBasicRptr 4 }

          vgRptrTrainingVersion OBJECT-TYPE
              SYNTAX     INTEGER (0..7)
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The highest version bits (vvv bits) supported by
                      the repeater during training."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.1,
                      aRMACVersion."
              ::= { vgRptrBasicRptr 5 }


          vgRptrGroupCapacity OBJECT-TYPE
              SYNTAX     INTEGER (1..1024)
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The vgRptrGroupCapacity is the number of groups
                      that can be contained within the repeater.
                      Within each managed repeater, the groups are
                      uniquely numbered in the range from 1 to
                      vgRptrGroupCapacity.

                      Some groups may not be present in the repeater,
                      in which case the actual number of groups present
                      will be less than vgRptrGroupCapacity.  The number
                      of groups present is never greater than
                      vgRptrGroupCapacity."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.1,
                      aRepeaterGroupCapacity."
              ::= { vgRptrBasicRptr 6 }

          vgRptrHealthState OBJECT-TYPE
              SYNTAX     INTEGER {
                             other(1),
                             ok(2),
                             rptrFailure(3),
                             groupFailure(4),
                             portFailure(5),
                             generalFailure(6)
                         }



John Flick             Expires December 30, 1995                [Page 7]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The vgRptrHealthState object indicates the
                      operational state of the repeater.  The
                      vgRptrHealthText may be consulted for more
                      specific information about the state of the
                      repeater's health.

                      In the case of multiple kinds of failures (e.g.,
                      repeater failure and port failure), the value of
                      this attribute shall reflect the highest priority
                      failure in the following order, listed highest
                      priority first:

                          rptrFailure(3)
                          groupFailure(4)
                          portFailure(5)
                          generalFailure(6)."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.1,
                      aRepeaterHealthState."
              ::= { vgRptrBasicRptr 7 }

          vgRptrHealthText OBJECT-TYPE
              SYNTAX     DisplayString (SIZE(0..255))
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The health text object is a text string that
                      provides information relevant to the operational
                      state of the repeater.  Agents may use this
                      string to provide detailed information on current
                      failures, including how they were detected,
                      and/or instructions for problem resolution.  The
                      contents are agent specific."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.1,
                      aRepeaterHealthText."
              ::= { vgRptrBasicRptr 8 }

          vgRptrReset OBJECT-TYPE
              SYNTAX     INTEGER {
                             noReset(1),
                             reset(2)
                         }
              MAX-ACCESS read-write
              STATUS     current



John Flick             Expires December 30, 1995                [Page 8]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


              DESCRIPTION
                      "Setting this object to reset(2) causes the
                      repeater to transition to its initial state as
                      specified in clause 12 [IEEE Std 802.12].

                      Setting this object to noReset(1) has no effect.
                      The agent will always return the value noReset(1)
                      when this object is read.

                      After receiving a request to set this variable to
                      reset(2), the agent is allowed to delay the reset
                      for a short period.  For example, the implementor
                      may choose to delay the reset long enough to
                      allow the SNMP response to be transmitted.  In
                      any event, the SNMP response must be transmitted.

                      This action does not reset the management
                      counters defined in this document nor does it
                      affect the vgRptrPortAdminStatus parameters.
                      Included in this action is the execution of a
                      disruptive Self-Test with the following
                      characteristics:

                          1) The nature of the tests is not specified.
                          2) The test resets the repeater but without
                            affecting configurable management
                            information about the repeater.
                          3) Packets received during the test may or
                             may not be transferred.
                          4) The test does not interfere with
                             management functions.

                      After performing this self-test, the agent will
                      update the repeater health information (including
                      vgRptrHealthState and vgRptrHealthText), and send
                      a vgRptrResetEvent."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.2,
                      acResetRepeater."
              ::= { vgRptrBasicRptr 9 }

          vgRptrNonDisruptTest OBJECT-TYPE
              SYNTAX     INTEGER {
                             noSelfTest(1),
                             selfTest(2)
                         }
              MAX-ACCESS read-write
              STATUS     current



John Flick             Expires December 30, 1995                [Page 9]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


              DESCRIPTION
                      "Setting this object to selfTest(2) causes the
                      repeater to perform an agent-specific,
                      non-disruptive self-test that has the following
                      characteristics:

                          1) The nature of the tests is not specified.
                          2) The test does not change the state of the
                             repeater or management information about
                             the repeater.
                          3) The test does not inject packets onto any
                             segment.
                          4) The test does not prevent the transfer of
                             any packets.
                          5) The test does not interfere with
                             management functions.

                      After performing this test, the agent will update
                      the repeater health information (including
                      vgRptrHealthState and vgRptrHealthText) and send a
                      vgRptrHealth.

                      Note that this definition allows returning an
                      'okay' result after doing a trivial test.

                      Setting this object to noSelfTest(1) has no
                      effect.  The agent will always return the value
                      noSelfTest(1) when this object is read."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.2,
                      acExecuteNonDisruptiveSelfTest."
              ::= { vgRptrBasicRptr 10 }

          vgRptrBasicGroup  OBJECT IDENTIFIER ::= { vgRptrBasic 2 }

          vgRptrBasicGroupTable OBJECT-TYPE
              SYNTAX     SEQUENCE OF VgRptrBasicGroupEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "A table containing information about groups of
                      ports."
              ::= { vgRptrBasicGroup 1 }

          vgRptrBasicGroupEntry OBJECT-TYPE
              SYNTAX     VgRptrBasicGroupEntry
              MAX-ACCESS not-accessible
              STATUS     current



John Flick             Expires December 30, 1995               [Page 10]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


              DESCRIPTION
                      "An entry in the vgRptrBasicGroupTable, containing
                      information about a single group of ports."
              INDEX      { vgRptrGroupIndex }
              ::= { vgRptrBasicGroupTable 1 }

          VgRptrBasicGroupEntry ::=
              SEQUENCE {
                  vgRptrGroupIndex                INTEGER,
                  vgRptrGroupDescr                DisplayString,
                  vgRptrGroupObjectID             OBJECT IDENTIFIER,
                  vgRptrGroupOperStatus           INTEGER,
                  vgRptrGroupLastOperStatusChange TimeStamp,
                  vgRptrGroupPortCapacity         INTEGER,
                  vgRptrGroupCablesBundled        INTEGER
              }

          vgRptrGroupIndex OBJECT-TYPE
              SYNTAX     INTEGER (1..1024)
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "This object identifies the group within the
                      repeater for which this entry contains
                      information.  This value is never greater than
                      vgRptrGroupCapacity."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.4.1,
                      aGroupID."
              ::= { vgRptrBasicGroupEntry 1 }

          vgRptrGroupDescr OBJECT-TYPE
              SYNTAX     DisplayString (SIZE (0..255))
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "A textual description of the group.  This value
                      should include the full name and version
                      identification of the group's hardware type and
                      indicate how the group is differentiated from
                      other types of groups in the repeater.  'Plug-in
                      Module, Rev A' or 'Barney Rubble 100BaseVG 4-port
                      socket Version 2.1' are examples of valid group
                      descriptions.

                      It is mandatory that this only contain printable
                      ASCII characters."
              ::= { vgRptrBasicGroupEntry 2 }



John Flick             Expires December 30, 1995               [Page 11]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


          vgRptrGroupObjectID OBJECT-TYPE
              SYNTAX     OBJECT IDENTIFIER
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The vendor's authoritative identification of the
                      group.  This value may be allocated within the
                      SMI enterprises subtree (1.3.6.1.4.1) and
                      provides a straight-forward and unambiguous means
                      for determining what kind of group is being
                      managed.

                      For example, this object could take the value
                      1.3.6.1.4.1.4242.1.2.14 if vendor 'Flintstones,
                      Inc.' was assigned the subtree 1.3.6.1.4.1.4242,
                      and had assigned the identifier
                      1.3.6.1.4.1.4242.1.2.14 to its 'Wilma Flintstone
                      6-Port Plug-in Module.'"
              ::= { vgRptrBasicGroupEntry 3 }

          vgRptrGroupOperStatus OBJECT-TYPE
              SYNTAX     INTEGER {
                             other(1),
                             operational(2),
                             malfunctioning(3),
                             notPresent(4),
                             underTest(5),
                             resetInProgress(6)
                         }
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "An object that indicates the operational status
                      of the group.

                      A status of notPresent(4) indicates that the
                      group is temporarily or permanently physically
                      and/or logically not a part of the repeater.  It
                      is an implementation-specific matter as to
                      whether the agent effectively removes notPresent
                      entries from the table.

                      A status of operational(2) indicates that the
                      group is functioning, and a status of
                      malfunctioning(3) indicates that the group is
                      malfunctioning in some way."
              ::= { vgRptrBasicGroupEntry 4 }




John Flick             Expires December 30, 1995               [Page 12]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


          vgRptrGroupLastOperStatusChange OBJECT-TYPE
              SYNTAX     TimeStamp
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "An object that contains the value of sysUpTime
                      at the time that the value of the
                      vgRptrGroupOperStatus object for this group last
                      changed.

                      A value of zero indicates that the group's
                      operational status has not changed since the
                      agent last restarted."
              ::= { vgRptrBasicGroupEntry 5 }

          vgRptrGroupPortCapacity OBJECT-TYPE
              SYNTAX     INTEGER (1..1024)
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The vgRptrGroupPortCapacity is the number of
                      ports that can be contained within the group.
                      Valid range is 1-1024.  Within each group, the
                      ports are uniquely numbered in the range from 1 to
                      vgRptrGroupPortCapacity.  Some ports may not be
                      present in a given group instance, in which case
                      the actual number of ports present is less than
                      vgRptrGroupPortCapacity.  The number of ports
                      present is never greater than
                      vgRptrGroupPortCapacity."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.4.1,
                      aGroupPortCapacity."
              ::= { vgRptrBasicGroupEntry 6 }

          vgRptrGroupCablesBundled OBJECT-TYPE
              SYNTAX     INTEGER {
                             someCablesBundled(1),
                             noCablesBundled(2)
                         }
              MAX-ACCESS read-write
              STATUS     current
              DESCRIPTION
                      "This configuration flag is used to select either
                      bundled or unbundled cabling.  When this flag is
                      'someCablesBundled(1)' and the port is not
                      promiscuous or cascaded, frames received from
                      ports on this group and destined to go out



John Flick             Expires December 30, 1995               [Page 13]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                      multiple ports on this group will be buffered
                      completely before being repeated out ports on
                      this group.  When this flag is
                      'noCablesBundled(2)' or the port is promiscuous
                      or cascaded, these frames will be repeated out
                      ports on this group as the frame is being
                      received.

                      Note that the value 'someCablesBundled(1)' will
                      work in the vast majority of all installations,
                      regardless of whether or not any cables are
                      physically in a bundle, since promiscuous and
                      cascaded ports automatically avoid the store and
                      forward.  The main situation in which
                      'noCablesBundled(2)' is beneficial is when there
                      is a large amount of multicast traffic and the
                      cables are not in a bundle.  The value of this
                      object should be preserved across repeater resets
                      and power failures."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.4.1,
                      aGroupCablesBundled."
              ::= { vgRptrBasicGroupEntry 7 }

          vgRptrBasicPort   OBJECT IDENTIFIER ::= { vgRptrBasic 3 }

          vgRptrBasicPortTable OBJECT-TYPE
              SYNTAX     SEQUENCE OF VgRptrBasicPortEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "A table containing information about ports."
              ::= { vgRptrBasicPort 1 }

          vgRptrBasicPortEntry OBJECT-TYPE
              SYNTAX     VgRptrBasicPortEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "An entry in the vgRptrBasicPortTable, containing
                      information about a single port."
              INDEX      { vgRptrGroupIndex, vgRptrPortIndex }
              ::= { vgRptrBasicPortTable 1 }

          VgRptrBasicPortEntry ::=
              SEQUENCE {
                  vgRptrPortIndex                 INTEGER,
                  vgRptrPortType                  INTEGER,



John Flick             Expires December 30, 1995               [Page 14]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                  vgRptrPortAdminStatus           INTEGER,
                  vgRptrPortStatus                INTEGER,
                  vgRptrPortSupportedPromiscMode  INTEGER,
                  vgRptrPortSupportedCascadeMode  INTEGER,
                  vgRptrPortAllowedTrainType      INTEGER,
                  vgRptrPortLastTrainConfig       OCTET STRING,
                  vgRptrPortTrainingResult        OCTET STRING,
                  vgRptrPortPriorityEnable        TruthValue
              }

          vgRptrPortIndex OBJECT-TYPE
              SYNTAX     INTEGER (1..1024)
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "This object identifies the port within the group
                      for which this entry contains information.  This
                      value can never be greater than
                      vgRptrGroupPortCapacity for the associated group."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aPortID."
              ::= { vgRptrBasicPortEntry 1 }

          vgRptrPortType OBJECT-TYPE
              SYNTAX     INTEGER {
                             cascadeExternal(1),
                             cascadeInternal(2),
                             localExternal(3),
                             localInternal(4)
                         }
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "Describes the type of port.  One of the
                      following:

                          cascadeExternal - Port is an uplink with
                                            physical connections which
                                            are externally visible
                          cascadeInternal - Port is an uplink with
                                            physical connections which
                                            are not externally visible,
                                            such as a connection to an
                                            internal backplane in a
                                            chassis
                          localExternal   - Port is a downlink or local
                                            port with externally



John Flick             Expires December 30, 1995               [Page 15]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                                            visible connections
                          localInternal   - Port is a downlink or local
                                            port with connections which
                                            are not externally visible,
                                            such as a connection to an
                                            internal agent

                      'internal' is used to identify ports which place
                      traffic into the repeater, but do not have any
                      external connections.  Note that both DTE and
                      cascaded repeater downlinks are considered
                      'local' ports."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aPortType."
              ::= { vgRptrBasicPortEntry 2 }

          vgRptrPortAdminStatus OBJECT-TYPE
              SYNTAX     INTEGER {
                             enabled(1),
                             disabled(2)
                         }
              MAX-ACCESS read-write
              STATUS     current
              DESCRIPTION
                      "Port enable/disable function.  Enabling a
                      disabled port will cause training to be
                      initiated.  Setting this object to disabled(2)
                      disables the port.

                      A disabled port neither transmits nor receives.
                      Once disabled, a port must be explicitly enabled
                      to restore operation.  A port which is disabled
                      when power is lost or when a reset is exerted
                      shall remain disabled when normal operation
                      resumes."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aPortAdministrativeState."
              ::= { vgRptrBasicPortEntry 3 }

          vgRptrPortStatus OBJECT-TYPE
              SYNTAX     INTEGER {
                             active(1),
                             inactive(2),
                             training(3)
                         }
              MAX-ACCESS read-only



John Flick             Expires December 30, 1995               [Page 16]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


              STATUS     current
              DESCRIPTION
                      "Current status for the port as specified by the
                      PORT_META_STATE in the port process module of
                      clause 12 [IEEE Std 802.12].

                      During initialization or any link warning
                      conditions, vgRptrPortStatus will be
                      'inactive(2)'.

                      When Training_Up is received by the repeater on a
                      local port (or when Training_Down is received on
                      a cascade port), vgRptrPortStatus will change to
                      'training(3)' and vgRptrTrainingResult can be
                      monitored to see the detailed status regarding
                      training.

                      When 24 consecutive good FCS packets are received
                      and the configuration bits are OK,
                      vgRptrPortStatus will change to 'active(1)'.

                      A disabled port shall have a port status of
                      'inactive(2)'."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aPortStatus."
              ::= { vgRptrBasicPortEntry 4 }

          vgRptrPortSupportedPromiscMode OBJECT-TYPE
              SYNTAX     INTEGER {
                             singleModeOnly(1),
                             singleOrPromiscMode(2),
                             promiscModeOnly(3)
                         }
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object describes whether the port hardware
                      is capable of supporting promiscuous mode, single
                      address mode (i.e., repeater filters unicasts not
                      addressed to the end station attached to this
                      port), or both.  A port for which vgRptrPortType
                      is equal to 'cascadeInternal' or 'cascadeExternal'
                      will always have a value of 'promiscModeOnly' for
                      this object."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aSupportedPromiscMode."



John Flick             Expires December 30, 1995               [Page 17]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


              ::= { vgRptrBasicPortEntry 5 }

          vgRptrPortSupportedCascadeMode OBJECT-TYPE
              SYNTAX     INTEGER {
                             endNodesOnly(1),
                             endNodesOrRepeaters(2),
                             cascadePort(3)
                         }
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object describes whether the port hardware
                      is capable of supporting cascaded repeaters, end
                      nodes, or both.  A port for which vgRptrPortType
                      is equal to 'cascadeInternal' or
                      'cascadeExternal' will always have a value of
                      'cascadePort' for this object."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aSupportedCascadeMode."
              ::= { vgRptrBasicPortEntry 6 }

          vgRptrPortAllowedTrainType OBJECT-TYPE
              SYNTAX     INTEGER {
                             allowEndNodesOnly(1),
                             allowPromiscuousEndNodes(2),
                             allowEndNodesOrRepeaters(3),
                             allowAnything(4)
                         }
              MAX-ACCESS read-write
              STATUS     current
              DESCRIPTION
                      "This security object is set by the network
                      manager to configure what type of device is
                      permitted to connect to the port.  One of the
                      following values:

                          allowEndNodesOnly        - only non-
                                                     promiscuous end
                                                     nodes permitted.
                          allowPromiscuousEndNodes - promiscuous or
                                                     non-promiscuous
                                                     end nodes
                                                     permitted
                          allowEndNodesOrRepeaters - repeaters or non-
                                                     promiscuous end
                                                     nodes permitted
                          allowAnything            - repeaters,



John Flick             Expires December 30, 1995               [Page 18]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                                                     promiscuous or
                                                     non-promiscuous
                                                     end nodes
                                                     permitted

                      For a port for which vgRptrPortType is equal to
                      'cascadeInternal' or 'cascadeExternal', the
                      corresponding instance of this object may not be
                      set to 'allowEndNodesOnly' or
                      'allowPromiscuousEndNodes'.

                      The agent must reject a SET of this object if the
                      value includes no capabilities that are
                      supported by this port's hardware, as defined by
                      the values of the corresponding instances of
                      vgRptrPortSupportedPromiscMode and
                      vgRptrPortSupportedCascadeMode.

                      Note that vgRptrPortSupportPromiscMode and
                      vgRptrPortSupportedCascadeMode represent what the
                      port hardware is capable of supporting.
                      vgRptrPortAllowedTrainType is used for setting an
                      administrative policy for a port.  The actual set
                      of training configurations that will be allowed
                      to succeed on a port is the intersection of what
                      the hardware will support and what is
                      administratively allowed.  The above requirement
                      on what values may be set to this object says that
                      the intersection of what is supported and what is
                      allowed must be non-empty.  In other words, it
                      must not result in a situation in which nothing
                      would be allowed to train on that port.  However,
                      a value can be set to this object as long as the
                      combination of this object and what is supported
                      by the hardware would still leave at least one
                      configuration that could successfully train on the
                      port."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aAllowableTrainingType."
              ::= { vgRptrBasicPortEntry 7 }

          vgRptrPortLastTrainConfig OBJECT-TYPE
              SYNTAX     OCTET STRING (SIZE(2))
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This 16 bit field contains the most recent



John Flick             Expires December 30, 1995               [Page 19]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                      training configuration requested in an error-free
                      training frame sent by the end node connected to
                      the port.  For cascade ports, this is the
                      responder's configuration field from the most
                      recent error-free training response frame
                      received in response to training initiated by
                      this repeater.  This object is formatted as
                      follows:

                          First Octet:       Second Octet:

                           7 6 5 4 3 2 1 0    7 6 5 4 3 2 1 0
                          +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+
                          |v|v|v|0|0|0|0|0|  |0|0|0|F|F|P|P|R|
                          +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+

                          vvv: The version of the 802.12 training
                               protocol with which the training
                               initiator is compliant
                          FF:  00 = frameType88023 is requested
                               01 = frameType88025 is requested
                               10 = reserved
                               11 = either frameType88023 or
                                    frameType88025 is acceptable
                          PP:  00 = request singleAddressMode
                               01 = request promiscuousMode
                               10 = reserved
                               11 = reserved
                          R:   0  = request is from an end node
                               1  = request is from a repeater"
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aLastTrainingConfig."
              ::= { vgRptrBasicPortEntry 8 }

          vgRptrPortTrainingResult OBJECT-TYPE
              SYNTAX     OCTET STRING (SIZE(3))
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This 18 bit field is used to indicate the result
                      of training.  It contains two bits which indicate
                      if error-free training frames have been received,
                      and it also contains the 16 bits of the most
                      recent valid training response frame on the port.

                First Octet:       Second Octet:      Third Octet:




John Flick             Expires December 30, 1995               [Page 20]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                 7 6 5 4 3 2 1 0    7 6 5 4 3 2 1 0    7 6 5 4 3 2 1 0
                +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+
                |0|0|0|0|0|0|V|G|  |v|v|v|D|C|N|0|0|  |0|0|0|F|F|P|P|R|
                +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+

                          V:   Valid: set when at least one error-free
                               training frame has been received.
                               Indicates the 16 training configuration
                               bits in vgRptrPortLastTrainConfig and
                               vgRptrPortTrainingResult contain valid
                               information.  This bit is cleared when
                               vgRptrPortStatus transitions to the
                               'inactive' or 'training' state.
                          G:   LinkGood: indicates the link hardware is
                               OK.  Set if 24 consecutive error-free
                               training packets have been received.
                               Cleared when a training packet with
                               errors is received, and when
                               vgRptrPortStatus transitions to the
                               'inactive' or 'training' state.
                          vvv: The version of the 802.12 training
                               protocol with which the training
                               responder is compliant
                          D:   0  = no duplicate address has been
                                    detected
                               1  = duplicate address has been detected
                          C:   0  = the requested configuration is
                                    compatible with the port
                               1  = the requested configuration is not
                                    compatible with the port.  The FF,
                                    PP and R bits indicate the
                                    configuration which would be
                                    allowed (providing N = 0).
                          N:   0  = access will be allowed, providing
                                    the configuration is compatible
                                    (C = 0).
                               1  = access not allowed because of
                                    security restrictions
                          FF:  00 = frameType88023 will be used
                               01 = frameType88025 will be used
                               10 = reserved
                               11 = reserved
                          PP:  00 = singleAddressMode will be used
                               01 = promiscuousMode will be used
                               10 = reserved
                               11 = reserved
                          R:   0  = requested access as an end node is
                                    allowed



John Flick             Expires December 30, 1995               [Page 21]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                               1  = requested access as a repeater is
                                    allowed

                      If the port is in training, a management station
                      can examine this object to see if any training
                      packets have been passed successfully.  If there
                      have been any good training packets, the Valid
                      bit will be set and the management station can
                      examine the 16 training response bits to see if
                      there is a duplicate address, configuration, or
                      security problem.

                      Note that on a repeater local port, this repeater
                      generates the training response bits, while on
                      a cascade port, the higher level repeater
                      originated the training response bits."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aTrainingResult."
              ::= { vgRptrBasicPortEntry 9 }

          vgRptrPortPriorityEnable OBJECT-TYPE
              SYNTAX     TruthValue
              MAX-ACCESS read-write
              STATUS     current
              DESCRIPTION
                      "A configuration flag used to determine whether
                      the repeater will service high priority requests
                      received on the port as high priority or normal
                      priority.  When 'false', high priority requests
                      on this port will be serviced as normal priority.
                      The value of this object should be preserved
                      across repeater resets and power failures.  The
                      setting of this object has no effect on a cascade
                      port."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aPriorityEnable."
              ::= { vgRptrBasicPortEntry 10 }

          vgRptrPMDTable OBJECT-TYPE
              SYNTAX     SEQUENCE OF VgRptrPMDEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                   "Table of information about physical media dependent
                   connectors attached to repeater ports."
              ::= { vgRptrBasicPort 2 }



John Flick             Expires December 30, 1995               [Page 22]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


          vgRptrPMDEntry OBJECT-TYPE
              SYNTAX     VgRptrPMDEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                   "An entry in the table, containing information about
                   a single physical media connector."
              INDEX      { vgRptrGroupIndex, vgRptrPortIndex,
                           vgRptrPMDIndex }
              ::= { vgRptrPMDTable 1 }

          VgRptrPMDEntry ::=
              SEQUENCE {
                  vgRptrPMDIndex       INTEGER,
                  vgRptrPMDType        OBJECT IDENTIFIER,
                  vgRptrPMDStatus      INTEGER
              }

          vgRptrPMDIndex OBJECT-TYPE
              SYNTAX     INTEGER (1..9)
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "This variable uniquely identifies the physical
                      media connector attached to this repeater port
                      that is described by this entry."
              ::= { vgRptrPMDEntry 1 }

          vgRptrPMDType OBJECT-TYPE
              SYNTAX     OBJECT IDENTIFIER
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The object identifies the type of physical media
                      in use.  An initial set of tranceiver types is
                      defined in the 100VG-AnyLAN Interfaces MIB.  The
                      assignment of new types of tranceivers is managed
                      by the IANA.  If the tranceiver type is unknown,
                      the object identifier

                         dot12XcvrTypeUnknown
                            OBJECT IDENTIFIER ::= { 0 0 }

                      is returned."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aMediaType."
              ::= { vgRptrPMDEntry 2 }



John Flick             Expires December 30, 1995               [Page 23]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


          vgRptrPMDStatus OBJECT-TYPE
              SYNTAX     INTEGER {
                             other(1),
                             unknown(2),
                             operational(3),
                             standby(4),
                             notPresent(5)
                         }
              MAX-ACCESS read-write
              STATUS     current
              DESCRIPTION
                      "The current state of the tranceiver.  This object
                      may be implemented as a read-only object by those
                      agents that do not implement software control of
                      the tranceiver state.  Some agents may not support
                      setting the value of this object to some of the
                      enumerated values.

                      The value other(1) is returned if the tranceiver
                      is in a state other than one of the states 2
                      through 5.

                      The value unknown(2) is returned when the
                      tranceiver's true state is unknown; for example,
                      when it is being initialized.

                      A tranceiver in the operational(3) state is fully
                      functional, operates, and passes signals to the
                      media independent interface of its attached DTE or
                      repeater port.

                      A tranceiver in standby(4) state is not passing
                      network or training frames, and is not passing
                      signals to the media independent interface of its
                      attached DTE or repeater port.

                      The value notPresent(5) is used to indicate that
                      the media independent interface has detected that
                      there is no tranceiver present."
           ::= { vgRptrPMDEntry 3 }

          vgRptrMonitor      OBJECT IDENTIFIER ::= { vgRptrObjects 2 }

          vgRptrMonRepeater  OBJECT IDENTIFIER ::= { vgRptrMonitor 1 }
          -- Currently unused

          vgRptrMonGroup     OBJECT IDENTIFIER ::= { vgRptrMonitor 2 }




John Flick             Expires December 30, 1995               [Page 24]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


          vgRptrMonGroupTable OBJECT-TYPE
              SYNTAX     SEQUENCE OF VgRptrMonGroupEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "A table of performance and error statistics for
                      the groups."
              ::= { vgRptrMonGroup 1 }

          vgRptrMonGroupEntry OBJECT-TYPE
              SYNTAX     VgRptrMonGroupEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "An entry in the vgRptrMonGroupTable, containing
                      performance and error statistics for a single
                      group."
              INDEX      { vgRptrGroupIndex }
              ::= { vgRptrMonGroupTable 1 }

          VgRptrMonGroupEntry ::=
              SEQUENCE {
                  vgRptrGroupTotalFrames          Counter32,
                  vgRptrGroupTotalOctets          Counter32,
                  vgRptrGroupTotalErrors          Counter32,
                  vgRptrGroupHCTotalOctets        Counter64
              }

          vgRptrGroupTotalFrames OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of good frames of valid frame
                      length that have been received on all ports in
                      this group.  This counter is the summation of the
                      values of the vgRptrPortReadableFrames counters
                      for all of the ports in this group."
              ::= { vgRptrMonGroupEntry 1 }

          vgRptrGroupTotalOctets OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of octets contained in good
                      frames that have been received on all ports in
                      this group.  This counter is the summation of the



John Flick             Expires December 30, 1995               [Page 25]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                      values of the vgRptrPortReadableOctets counters
                      for all of the ports in this group.

                      Note that this counter will roll over very
                      quickly.  It is provided for backward
                      compatibility for Network Management protocols
                      that do not support 64 bit counters (e.g. SNMP
                      version 1)."
              ::= { vgRptrMonGroupEntry 2 }

          vgRptrGroupTotalErrors OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of errors which have occurred on
                      all of the ports in this group.  This counter is
                      the summation of the values of the
                      vgRptrPortIPMFrames, vgRptrPortOversizeFrames, and
                      vgRptrPortDataErrorFrames counters for all of the
                      ports in this group."
              ::= { vgRptrMonGroupEntry 3 }

          vgRptrGroupHCTotalOctets OBJECT-TYPE
              SYNTAX     Counter64
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The total number of octets contained in good
                      frames that have been received on all ports in
                      this group.  This counter is the summation of the
                      values of the vgRptrPortHCReadableOctets counters
                      for all of the ports in this group.

                      This counter is a 64 bit version of
                      vgRptrGroupTotalOctets.  It should be used by
                      Network Management protocols which support 64 bit
                      counters (e.g. SNMPv2)."
              ::= { vgRptrMonGroupEntry 4 }

          vgRptrMonPort      OBJECT IDENTIFIER ::= { vgRptrMonitor 3 }

          vgRptrMonPortTable OBJECT-TYPE
              SYNTAX     SEQUENCE OF VgRptrMonPortEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "A table of performance and error statistics for



John Flick             Expires December 30, 1995               [Page 26]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                      the ports."
              ::= { vgRptrMonPort 1 }

          vgRptrMonPortEntry OBJECT-TYPE
              SYNTAX     VgRptrMonPortEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                      "An entry in the vgRptrMonPortTable, containing
                      performance and error statistics for a single
                      port."
              INDEX      { vgRptrGroupIndex, vgRptrPortIndex }
              ::= { vgRptrMonPortTable 1 }

          VgRptrMonPortEntry ::=
              SEQUENCE {
                  vgRptrPortReadableFrames        Counter32,
                  vgRptrPortReadableOctets        Counter32,
                  vgRptrPortUnreadableOctets      Counter32,
                  vgRptrPortHighPriorityFrames    Counter32,
                  vgRptrPortHighPriorityOctets    Counter32,
                  vgRptrPortNormPriorityFrames    Counter32,
                  vgRptrPortNormPriorityOctets    Counter32,
                  vgRptrPortBroadcastFrames       Counter32,
                  vgRptrPortMulticastFrames       Counter32,
                  vgRptrPortNullAddressedFrames   Counter32,
                  vgRptrPortIPMFrames             Counter32,
                  vgRptrPortOversizeFrames        Counter32,
                  vgRptrPortDataErrorFrames       Counter32,
                  vgRptrPortPriorityPromotions    Counter32,
                  vgRptrPortTransitionToTrainings Counter32,
                  vgRptrPortHCReadableOctets      Counter64,
                  vgRptrPortHCUnreadableOctets    Counter64,
                  vgRptrPortHCHighPriorityOctets  Counter64,
                  vgRptrPortHCNormPriorityOctets  Counter64
              }

          vgRptrPortReadableFrames OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is the number of good frames of
                      valid frame length that have been received on
                      this port.  This counter is incremented by one
                      for each frame received on the port which is not
                      counted by any of the following error counters:
                      vgRptrPortIPMFrames, vgRptrPortOversizeFrames,



John Flick             Expires December 30, 1995               [Page 27]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                      vgRptrPortNullAddressedFrames, or
                      vgRptrPortDataErrorFrames."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aReadableFramesReceived."
              ::= { vgRptrMonPortEntry 1 }

          vgRptrPortReadableOctets OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of the number of octets
                      contained in good frames that have been received
                      on this port.  This counter is incremented by
                      OctetCount for each frame received on this port
                      which has been determined to be a readable frame
                      (i.e. each frame counted by
                      vgRptrPortReadableFrames).

                      Note that this counter will roll over very
                      quickly.  It is provided for backward
                      compatibility for Network Management protocols
                      that do not support 64 bit counters (e.g. SNMP
                      version 1)."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aReadableOctetsReceived."
              ::= { vgRptrMonPortEntry 2 }

          vgRptrPortUnreadableOctets OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of the number of octets
                      contained in invalid frames that have been
                      received on this port.  This counter is
                      incremented by OctetCount for each frame received
                      on this port which is counted by
                      vgRptrPortIPMFrames, vgRptrPortOversizeFrames,
                      vgRptrPortNullAddressedFrames, or
                      vgRptrPortDataErrorFrames.  This counter can be
                      combined with vgRptrPortReadableOctets to
                      calculate network utilization.

                      Note that this counter will roll over very
                      quickly.  It is provided for backward



John Flick             Expires December 30, 1995               [Page 28]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                      compatibility for Network Management protocols
                      that do not support 64 bit counters (e.g. SNMP
                      version 1)."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aOctetsInUnreadableFramesRcvd."
              ::= { vgRptrMonPortEntry 3 }

          vgRptrPortHighPriorityFrames OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of high priority frames
                      that have been received on this port.  This
                      counter is incremented by one for each high
                      priority frame received on this port.  This
                      counter includes both good and bad high priority
                      frames, as well as high priority training frames.
                      This counter does not include normal priority
                      frames which were priority promoted."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aHighPriorityFramesReceived."
              ::= { vgRptrMonPortEntry 4 }

          vgRptrPortHighPriorityOctets OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of the number of octets
                      contained in high priority frames that have been
                      received on this port.  This counter is
                      incremented by OctetCount for each frame received
                      on this port which is counted by
                      vgRptrPortHighPriorityFrames.

                      Note that this counter will roll over very
                      quickly.  It is provided for backward
                      compatibility for Network Management protocols
                      that do not support 64 bit counters (e.g. SNMP
                      version 1)."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aHighPriorityOctetsReceived."
              ::= { vgRptrMonPortEntry 5 }




John Flick             Expires December 30, 1995               [Page 29]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


          vgRptrPortNormPriorityFrames OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of normal priority frames
                      that have been received on this port.  This
                      counter is incremented by one for each normal
                      priority frame received on this port. This
                      counter includes both good and bad normal
                      priority frames, as well as normal priority
                      training frames and normal priority frames which
                      were priority promoted."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aNormalPriorityFramesReceived."
              ::= { vgRptrMonPortEntry 6 }

          vgRptrPortNormPriorityOctets OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of the number of octets
                      contained in normal priority frames that have
                      been received on this port.  This counter is
                      incremented by OctetCount for each frame received
                      on this port which is counted by
                      vgRptrPortNormPriorityFrames.

                      Note that this counter will roll over very
                      quickly.  It is provided for backward
                      compatibility for Network Management protocols
                      that do not support 64 bit counters (e.g. SNMP
                      version 1)."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aNormalPriorityOctetsReceived."
              ::= { vgRptrMonPortEntry 7 }

          vgRptrPortBroadcastFrames OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of broadcast packets that
                      have been received on this port.  This counter is
                      incremented by one for each readable frame



John Flick             Expires December 30, 1995               [Page 30]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                      received on this port whose destination MAC
                      address is the broadcast address.  Frames
                      counted by this counter are also counted by
                      vgRptrPortReadableFrames."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aBroadcastFramesReceived."
              ::= { vgRptrMonPortEntry 8 }

          vgRptrPortMulticastFrames OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of multicast packets that
                      have been received on this port.  This counter is
                      incremented by one for each readable frame
                      received on this port whose destination MAC
                      address has the group address bit set, but is not
                      the broadcast address.  Frames counted by this
                      counter are also counted by
                      vgRptrPortReadableFrames, but not by
                      vgRptrPortBroadcastFrames"
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aMulticastFramesReceived."
              ::= { vgRptrMonPortEntry 9 }

          vgRptrPortNullAddressedFrames OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of null addressed packets
                      that have been received on this port.  This
                      counter is incremented by one for each frame
                      received on this port with a destination MAC
                      address consisting of all zero bits.  Both void
                      and training frames are included in this
                      counter."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aNullAddressedFramesReceived."
              ::= { vgRptrMonPortEntry 10 }

          vgRptrPortIPMFrames OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only



John Flick             Expires December 30, 1995               [Page 31]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


              STATUS     current
              DESCRIPTION
                      "This object is a count of the number of frames
                      that have been received on this port with an
                      invalid packet marker and no PMI errors.  A
                      repeater will write an invalid packet marker to
                      the end of a frame containing errors as it is
                      forwarded through the repeater to the other
                      ports.  This counter is incremented by one for
                      each frame received on this port which has had an
                      invalid packet marker added to the end of the
                      frame.

                      This counter indicates problems with remote cable
                      segments, as opposed to problems with cables
                      directly attached to this repeater."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aIPMFramesReceived."
              ::= { vgRptrMonPortEntry 11 }

          vgRptrPortOversizeFrames OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of oversize frames
                      received on this port.  This counter is
                      incremented by one for each frame received on
                      this port whose OctetCount is larger than the
                      maximum legal frame size.

                      The frame size which causes this counter to
                      increment is dependent on the current value of
                      vgRptrCurrentFramingType.  When
                      vgRptrCurrentFramingType is equal to
                      frameType88023 this counter will increment for
                      frames that are 1519 octets or larger.  When
                      vgRptrCurrentFramingType is equal to
                      frameType88025 this counter will increment for
                      frames that are 4521 octets or larger."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aOversizeFramesReceived."
              ::= { vgRptrMonPortEntry 12 }

          vgRptrPortDataErrorFrames OBJECT-TYPE
              SYNTAX     Counter32



John Flick             Expires December 30, 1995               [Page 32]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of errored frames
                      received on this port.  This counter is
                      incremented by one for each frame received on
                      this port with any of the following errors: bad
                      FCS (with no IPM), PMI errors (excluding frames
                      with an IPM error as the only PMI error), or
                      undersize (with no IPM).  Does not include
                      packets counted by vgRptrPortIPMFrames,
                      vgRptrPortOversizeFrames, or
                      vgRptrPortNullAddressedFrames.

                      This counter indicates problems with the cable
                      directly attached to this repeater, while
                      vgRptrPortIPMFrames indicates problems with remote
                      cables attached to other repeaters."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aDataErrorFramesReceived."
              ::= { vgRptrMonPortEntry 13 }

          vgRptrPortPriorityPromotions OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This counter is incremented by one each time the
                      priority promotion timer has expired on this port
                      and a normal priority frame is priority
                      promoted."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aPriorityPromotions."
              ::= { vgRptrMonPortEntry 14 }

          vgRptrPortTransitionToTrainings OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This counter is incremented by one each time the
                      vgRptrPortStatus object for this port transitions
                      into the 'training' state."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aTransitionsIntoTraining."



John Flick             Expires December 30, 1995               [Page 33]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


              ::= { vgRptrMonPortEntry 15 }

          vgRptrPortHCReadableOctets OBJECT-TYPE
              SYNTAX     Counter64
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of the number of octets
                      contained in good frames that have been received
                      on this port.  This counter is incremented by
                      OctetCount for each frame received on this port
                      which has been determined to be a readable frame
                      (i.e. each frame counted by
                      vgRptrPortReadableFrames).

                      This counter is a 64 bit version of
                      vgRptrPortReadableOctets.  It should be used by
                      Network Management protocols which support 64 bit
                      counters (e.g. SNMPv2)."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aReadableOctetsReceived."
              ::= { vgRptrMonPortEntry 16 }

          vgRptrPortHCUnreadableOctets OBJECT-TYPE
              SYNTAX     Counter64
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of the number of octets
                      contained in invalid frames that have been
                      received on this port.  This counter is
                      incremented by OctetCount for each frame received
                      on this port which is counted by
                      vgRptrPortIPMFrames, vgRptrPortOversizeFrames,
                      vgRptrPortNullAddressedFrames, or
                      vgRptrPortDataErrorFrames.  This counter can be
                      combined with vgRptrPortHCReadableOctets to
                      calculate network utilization.

                      This counter is a 64 bit version of
                      vgRptrPortUnreadableOctets.  It should be used by
                      Network Management protocols which support 64 bit
                      counters (e.g. SNMPv2)."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aOctetsInUnreadableFramesRcvd."
              ::= { vgRptrMonPortEntry 17 }



John Flick             Expires December 30, 1995               [Page 34]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


          vgRptrPortHCHighPriorityOctets OBJECT-TYPE
              SYNTAX     Counter64
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of the number of octets
                      contained in high priority frames that have been
                      received on this port.  This counter is
                      incremented by OctetCount for each frame received
                      on this port which is counted by
                      vgRptrPortHighPriorityFrames.

                      This counter is a 64 bit version of
                      vgRptrPortHighPriorityOctets.  It should be used
                      by Network Management protocols which support 64
                      bit counters (e.g. SNMPv2)."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aHighPriorityOctetsReceived."
              ::= { vgRptrMonPortEntry 18 }

          vgRptrPortHCNormPriorityOctets OBJECT-TYPE
              SYNTAX     Counter64
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is a count of the number of octets
                      contained in normal priority frames that have
                      been received on this port.  This counter is
                      incremented by OctetCount for each frame received
                      on this port which is counted by
                      vgRptrPortNormPriorityFrames.

                      This counter is a 64 bit version of
                      vgRptrPortNormPriorityOctets.  It should be used
                      by Network Management protocols which support 64
                      bit counters (e.g. SNMPv2)."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aNormalPriorityOctetsReceived."
              ::= { vgRptrMonPortEntry 19 }


          vgRptrAddrTrack   OBJECT IDENTIFIER ::= { vgRptrObjects 3 }

          vgRptrAddrTrackRptr
              OBJECT IDENTIFIER ::= { vgRptrAddrTrack 1 }




John Flick             Expires December 30, 1995               [Page 35]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


          vgRptrAddrSearch
              OBJECT IDENTIFIER ::= { vgRptrAddrTrackRptr 1 }

          vgRptrSearchAddress OBJECT-TYPE
              SYNTAX     MacAddress
              MAX-ACCESS read-write
              STATUS     current
              DESCRIPTION
                      "This object is used to search for a specified
                      MAC address.  When this object is set, an address
                      search begins.  This starts by initializing
                      vgRptrSearchState to 'none'.

                      When a valid frame is received with a source MAC
                      address which matches the current value of
                      vgRptrSearchAddress, the agent will update
                      vgRptrSearchState, vgRptrSearchGroup, and
                      vgRptrSearchPort to reflect the current status of
                      the search, and the group and port from which the
                      frame was received.

                      This capability can be used by a management
                      application to draw a topologically correct map
                      of a network which includes cascaded repeaters."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.1,
                      aRepeaterSearchAddress."
              ::= { vgRptrAddrSearch 1 }

          vgRptrSearchState OBJECT-TYPE
              SYNTAX     INTEGER {
                             none(1),
                             single(2),
                             multiple(3)
                         }
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The current state of the MAC address search
                      objects on this repeater.  This object is
                      initialized to 'none' whenever vgRptrSearchAddress
                      is set.  If the agent detects the address on
                      exactly one port, it will set this object to
                      'single', and set vgRptrSearchGroup and
                      vgRptrSearchPort to reflect the group and port on
                      which the address was heard.  If the agent
                      detects the address on more than one port, it
                      will set this object to 'many'."



John Flick             Expires December 30, 1995               [Page 36]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.1,
                      aRepeaterSearchState."
              ::= { vgRptrAddrSearch 2 }

          vgRptrSearchGroup OBJECT-TYPE
              SYNTAX     INTEGER (1..1024)
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The group from which an error-free frame from
                      vgRptrSearchAddress has been received.  The value
                      of vgRptrSearchGroup is undefined when
                      vgRptrSearchState is equal to 'none' or
                      'multiple'."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.1,
                      aRepeaterSearchGroup."
              ::= { vgRptrAddrSearch 3 }

          vgRptrSearchPort OBJECT-TYPE
              SYNTAX     INTEGER (1..1024)
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "The port from which an error-free frame from
                      vgRptrSearchAddress has been received.  The value
                      of vgRptrSearchPort is undefined when
                      vgRptrSearchState is equal to 'none' or
                      'multiple'."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.1,
                      aRepeaterSearchPort."
              ::= { vgRptrAddrSearch 4 }


          vgRptrAddrTrackGroup
              OBJECT IDENTIFIER ::= { vgRptrAddrTrack 2 }
          -- Currently unused

          vgRptrAddrTrackPort
              OBJECT IDENTIFIER ::= { vgRptrAddrTrack 3 }

          vgRptrAddrTrackTable OBJECT-TYPE
              SYNTAX     SEQUENCE OF VgRptrAddrTrackEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION



John Flick             Expires December 30, 1995               [Page 37]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                  "Table of address mapping information about the
                  ports."
              ::= { vgRptrAddrTrackPort 1 }

          vgRptrAddrTrackEntry OBJECT-TYPE
              SYNTAX     VgRptrAddrTrackEntry
              MAX-ACCESS not-accessible
              STATUS     current
              DESCRIPTION
                  "An entry in the table, containing address mapping
                  information about a single port."
              INDEX      { vgRptrGroupIndex, vgRptrPortIndex }
              ::= { vgRptrAddrTrackTable 1 }

          VgRptrAddrTrackEntry ::=
              SEQUENCE {
                  vgRptrAddrLastTrainedAddress   OCTET STRING,
                  vgRptrAddrTrainedAddrChanges   Counter32,
                  vgRptrRptrDetectedDupAddress   TruthValue,
                  vgRptrMgrDetectedDupAddress    TruthValue
              }


          vgRptrAddrLastTrainedAddress OBJECT-TYPE
              SYNTAX     OCTET STRING (SIZE(0 | 6))
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is the MAC address of the last
                      station which succeeded in training on this port.
                      A cascaded repeater may train using the null
                      address.  If no stations have succeeded in
                      training on this port since the agent began
                      monitoring the port activity, the agent shall
                      return a string of length zero."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aLastTrainedAddress."
              ::= { vgRptrAddrTrackEntry 1 }

          vgRptrAddrTrainedAddrChanges OBJECT-TYPE
              SYNTAX     Counter32
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This counter is incremented by one for each time
                      that the vgRptrAddrLastTrainedAddress object for
                      this port changes."



John Flick             Expires December 30, 1995               [Page 38]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aTrainedAddressChanges."
              ::= { vgRptrAddrTrackEntry 2 }

          vgRptrRptrDetectedDupAddress OBJECT-TYPE
              SYNTAX     TruthValue
              MAX-ACCESS read-only
              STATUS     current
              DESCRIPTION
                      "This object is used to indicate that the
                      repeater detected an error-free training frame on
                      this port with a source MAC address which matches
                      the value of vgRptrAddrLastTrainedAddress of
                      another active port.  This is reset to 'false'
                      when an error-free training frame is received
                      with a source MAC address which does not match
                      vgRptrAddrLastTrainedAddress of another port which
                      is active.  For the cascade port, this object
                      will be 'true' if the 'D' bit in the most
                      recently received error-free training response
                      frame was set."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aLocalRptrDetectedDupAddr."
              ::= { vgRptrAddrTrackEntry 3 }

          vgRptrMgrDetectedDupAddress OBJECT-TYPE
              SYNTAX     TruthValue
              MAX-ACCESS read-write
              STATUS     current
              DESCRIPTION
                      "This object can be set by a management station
                      when it detects that there is a duplicate MAC
                      address.  This object is OR'd with
                      vgRptrRptrDetectedDupAddress to form the value of
                      the 'D' bit in training response frames on this
                      port.

                      The purpose of this object is to provide a means
                      for network management software to inform an end
                      station that it is using a duplicate station
                      address.  Setting this object does not affect the
                      current state of the link; the end station will
                      not be informed of the duplicate address until it
                      retrains for some reason.  Note that regardless
                      of its station address, the end station will not
                      be able to train successfully until the network



John Flick             Expires December 30, 1995               [Page 39]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                      management software has set this object back to
                      'false'.  Although this object exists on
                      cascade ports, it does not perform any function
                      since this repeater is the initiator of training
                      on a cascade port."
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.5.1,
                      aCentralMgmtDetectedDupAddr."
              ::= { vgRptrAddrTrackEntry 4 }


          vgRptrTraps         OBJECT IDENTIFIER ::= { vgRptrMIB 2 }
          vgRptrTrapPrefix    OBJECT IDENTIFIER ::= { vgRptrTraps 0 }

          vgRptrHealth NOTIFICATION-TYPE
              OBJECTS    { vgRptrHealthState }
              STATUS     current
              DESCRIPTION
                      "A vgRptrHealth trap conveys information related
                      to the operational state of the repeater.  This
                      trap is sent either when the value of
                      vgRptrHealthState changes, or upon completion of a
                      non-disruptive test. The vgRptrHealth trap is not
                      sent as a result of powering up a repeater.

                      The vgRptrHealth trap must contain the
                      vgRptrHealthState object.  The agent may
                      optionally include the vgRptrHealthText object in
                      the varBind list.  See the vgRptrHealthState and
                      vgRptrHealthText objects for descriptions of the
                      information that is sent.

                      The agent must throttle the generation of
                      consecutive vgRptrHealth traps so that there is
                      at least a five-second gap between traps of this
                      type.  When traps are throttled, they are
                      dropped, not queued for sending at a future time.
                      (Note that 'generating' a trap means sending to
                      all configured recipients.)"
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.3,
                      nRepeaterHealth."
              ::= { vgRptrTrapPrefix 1 }

          vgRptrGroupChange NOTIFICATION-TYPE
              OBJECTS    { vgRptrGroupIndex }
              STATUS     current
              DESCRIPTION



John Flick             Expires December 30, 1995               [Page 40]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                      "This trap is sent when a change occurs in the
                      group structure of a repeater.  This occurs only
                      when a group is logically or physically removed
                      from or added to a repeater.  The
                      vgRptrGroupChange trap is not sent when powering
                      up a repeater.

                      The varBind list contains the identifier of the
                      group that was removed or added.

                      The agent must throttle the generation of
                      consecutive vgRptrGroupChange traps so that there
                      is at least a five-second gap between traps of
                      this type.  When traps are throttled, they are
                      dropped, not queued for sending at a future time.
                      (Note that 'generating' a trap means sending to
                      all configured recipients.)"
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.3,
                      nGroupMapChange."
              ::= { vgRptrTrapPrefix 2 }

          vgRptrResetEvent NOTIFICATION-TYPE
              OBJECTS    { vgRptrHealthState }
              STATUS     current
              DESCRIPTION
                      "A vgRptrResetEvent trap conveys information
                      related to the operational state of the repeater.
                      This trap is sent on completion of a repeater
                      reset action.  A repeater reset action is defined
                      as a transition to its initial state as specified
                      in clause 12 [IEEE Std 802.12] when triggered by
                      a management command.

                      The vgRptrResetEvent trap is not sent when the
                      agent restarts and sends an SNMP coldStart or
                      warmStart trap.  However, it is recommended that
                      an 802.12 repeater agent send the
                      vgRptrHealthState object as an optional object
                      with its coldStart and warmStart trap PDUs.

                      The vgRptrResetEvent trap must contain the
                      vgRptrHealthState object.  The agent may
                      optionally include the vgRptrHealthText object in
                      the varBind list.  See the vgRptrHealthState and
                      vgRptrHealthText objects for descriptions of the
                      information that is sent.




John Flick             Expires December 30, 1995               [Page 41]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                      The agent must throttle the generation of
                      consecutive vgRptrResetEvent traps so that there
                      is at least a five-second gap between traps of
                      this type.  When traps are throttled, they are
                      dropped, not queued for sending at a future time.
                      (Note that 'generating' a trap means sending to
                      all configured recipients.)"
              REFERENCE
                      "IEEE 802.12, Layer Management, 13.2.4.2.3,
                      nRepeaterReset."
              ::= { vgRptrTrapPrefix 3 }

          -- conformance information

          vgRptrConformance OBJECT IDENTIFIER ::= { vgRptrMIB 3 }

          vgRptrCompliances
                       OBJECT IDENTIFIER ::= { vgRptrConformance 1 }

          vgRptrGroups OBJECT IDENTIFIER ::= { vgRptrConformance 2 }

          -- compliance statements

          vgRptrCompliance MODULE-COMPLIANCE
              STATUS     current
              DESCRIPTION
                      "The compliance statement for managed 802.12
                      repeaters."

              MODULE  -- this module
                  MANDATORY-GROUPS { vgRptrConfigGroup }

                  GROUP  vgRptrStatsGroup
                  DESCRIPTION
                         "This group is optional.  It is appropriate
                         for all agents that have the necessary
                         instrumentation."

                  GROUP  vgRptrAddrGroup
                  DESCRIPTION
                         "This group is optional.  It is appropriate
                         for all agents that have the necessary
                         instrumentation."

                  OBJECT       vgRptrPMDStatus
                  SYNTAX       INTEGER {
                                   operational(3)
                               }



John Flick             Expires December 30, 1995               [Page 42]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                  WRITE-SYNTAX INTEGER {
                                   operational(3),
                                   standby(4)
                               }
                  MIN-ACCESS   read-only
                  DESCRIPTION
                          "Write access to this object is not required.
                          The only value that an agent must support is
                          operational(3).  Only the operational(3) and
                          standby(4) values make sense in a set
                          operation."
              ::= { vgRptrCompliances 1 }

          -- units of conformance

          vgRptrConfigGroup OBJECT-GROUP
              OBJECTS    { vgRptrMACAddress, vgRptrCurrentFramingType,
                           vgRptrDesiredFramingType,
                           vgRptrFramingCapability,
                           vgRptrTrainingVersion,
                           vgRptrGroupCapacity, vgRptrHealthState,
                           vgRptrHealthText, vgRptrReset,
                           vgRptrNonDisruptTest, vgRptrGroupDescr,
                           vgRptrGroupObjectID, vgRptrGroupOperStatus,
                           vgRptrGroupLastOperStatusChange,
                           vgRptrGroupPortCapacity,
                           vgRptrGroupCablesBundled, vgRptrPortType,
                           vgRptrPortAdminStatus, vgRptrPortStatus,
                           vgRptrPortSupportedPromiscMode,
                           vgRptrPortSupportedCascadeMode,
                           vgRptrPortAllowedTrainType,
                           vgRptrPortLastTrainConfig,
                           vgRptrPortTrainingResult,
                           vgRptrPortPriorityEnable,
                           vgRptrPMDType, vgRptrPMDStatus
                         }
              STATUS     current
              DESCRIPTION
                      "A collection of objects for managing the status
                      and configuration of IEEE 802.12 repeaters."
              ::= { vgRptrGroups 1 }

          vgRptrStatsGroup OBJECT-GROUP
              OBJECTS    { vgRptrGroupTotalFrames,
                           vgRptrGroupTotalOctets,
                           vgRptrGroupTotalErrors,
                           vgRptrGroupHCTotalOctets,
                           vgRptrPortReadableFrames,



John Flick             Expires December 30, 1995               [Page 43]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


                           vgRptrPortReadableOctets,
                           vgRptrPortUnreadableOctets,
                           vgRptrPortHighPriorityFrames,
                           vgRptrPortHighPriorityOctets,
                           vgRptrPortNormPriorityFrames,
                           vgRptrPortNormPriorityOctets,
                           vgRptrPortBroadcastFrames,
                           vgRptrPortMulticastFrames,
                           vgRptrPortNullAddressedFrames,
                           vgRptrPortIPMFrames,
                           vgRptrPortOversizeFrames,
                           vgRptrPortDataErrorFrames,
                           vgRptrPortPriorityPromotions,
                           vgRptrPortTransitionToTrainings,
                           vgRptrPortHCReadableOctets,
                           vgRptrPortHCUnreadableOctets,
                           vgRptrPortHCHighPriorityOctets,
                           vgRptrPortHCNormPriorityOctets
                         }
              STATUS     current
              DESCRIPTION
                      "A collection of objects for providing statistics
                      for IEEE 802.12 repeaters."
              ::= { vgRptrGroups 2 }

          vgRptrAddrGroup OBJECT-GROUP
              OBJECTS    {
                           vgRptrSearchAddress, vgRptrSearchState,
                           vgRptrSearchGroup, vgRptrSearchPort,
                           vgRptrAddrLastTrainedAddress,
                           vgRptrAddrTrainedAddrChanges,
                           vgRptrRptrDetectedDupAddress,
                           vgRptrMgrDetectedDupAddress
                         }
              STATUS     current
              DESCRIPTION
                      "A collection of objects for tracking addresses
                      on IEEE 802.12 repeaters."
              ::= { vgRptrGroups 3 }

          END



5.  Acknowledgements

   This document was produced by the IETF 100VG-AnyLAN Working Group.
   It is based on the work of IEEE 802.12.



John Flick             Expires December 30, 1995               [Page 44]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


6.  References

   [1] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Structure
       of Management Information for version 2 of the Simple Network
       Management Protocol (SNMPv2)", RFC 1442, SNMP Research, Inc.,
       Hughes LAN Systems, Dover Beach Consulting, Inc., Carnegie Mellon
       University, April 1993.

   [2] Galvin, J., and K. McCloghrie, "Administrative Model for version
       2 of the Simple Network Management Protocol (SNMPv2)", RFC 1445,
       Trusted Information Systems, Hughes LAN Systems, April 1993.

   [3] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Protocol
       Operations for version 2 of the Simple Network Management
       Protocol (SNMPv2)", RFC 1448, SNMP Research, Inc., Hughes LAN
       Systems, Dover Beach Consulting, Inc., Carnegie Mellon
       University, April 1993.

   [4] McCloghrie, K., and M. Rose, "Management Information Base for
       Network Management of TCP/IP-based internets - MIB-II", STD 17,
       RFC 1213, Hughes LAN Systems, Performance Systems International,
       March 1991.

   [5] Case, J., Fedor, M., Schoffstall, M., and J. Davin, "Simple
       Network Management Protocol", RFC 1157, SNMP Research,
       Performance Systems International, Performance Systems
       International, MIT Laboratory for Computer Science, May 1990.

   [6] IEEE, "Demand Priority Access Method, Physical Layer and Repeater
       Specifications for 100 Mb/s Operation", IEEE Standard 802.12"

   [7] McMaster, D., and McCloghrie, K., "Definitions of Managed Objects
       for IEEE 802.3 Repeater Devices", RFC 1516, Synoptics
       Communications, Hughes LAN Systems, September 1993.

   [8] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Textual
       Conventions for version 2 of the Simple Network Management
       Protocol (SNMPv2)", RFC 1443, SNMP Research, Inc., Hughes LAN
       Systems, Dover Beach Consulting, Inc., Carnegie Mellon
       University, April 1993.


7.  Security Considerations

   Security issues are not discussed in this memo.


8.  Author's Address



John Flick             Expires December 30, 1995               [Page 45]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


   John Flick
   Hewlett Packard Company
   8000 Foothills Blvd. M/S 5556
   Roseville, CA 95747-5556

   Phone: +1 916 785 4018
   Email: johnf@hprnd.rose.hp.com












































John Flick             Expires December 30, 1995               [Page 46]

Internet Draft          IEEE 802.12 Repeater MIB            June 30 1995


Table of Contents

   1.  Abstract ...................................................    2
   2.  The SNMPv2 Network Management Framework ....................    2
   2.1.  Object Definitions .......................................    2
   3.  Overview ...................................................    2
   3.1.  Mapping of IEEE 802.12 Managed Objects ...................    3
   4.  Definitions ................................................    5
   5.  Acknowledgements ...........................................   44
   6.  References .................................................   45
   7.  Security Considerations ....................................   45
   8.  Author's Address ...........................................   45







































John Flick             Expires December 30, 1995               [Page 47]

