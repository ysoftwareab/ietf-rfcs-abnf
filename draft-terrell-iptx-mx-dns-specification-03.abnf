IPtX  =  {IPt1, IPt2, ... IPt100, ... IPtX}  = /XA


X = Any Integer, and A = One 4 Octet Group

IPt1 = X = 1      Class A, Class B, Class C, ..., Class Z = /1 Class ID
IPt2 = X = 2      Class A, Class B, Class C, ..., Class Z = /2 Class ID
IPt3 = X = 3      Class A, Class B, Class C, ..., Class Z = /3 Class ID
IPt4 = X = 4      Class A, Class B, Class C, ..., Class Z = /4 Class ID
IPt5 = X = 5      Class A, Class B, Class C, ..., Class Z = /5 Class ID

        :             :        :        :       :     :     :      :
        :             :        :        :       :     :     :      :
        :             :        :        :       :     :     :      :

IPtX = X = Infinity  Class A, Class B, ..., Class Z = /Infinity Class ID
IPt1 = Class A, IPt2 = Class B, IPt3 = Class C, IPt6 = Class D, ... etc.


    The Expansion the CLASS ID System clearly provides, since every
    Column is defined by an Alpha Character following an Alphabet
    Sequence, defines a 'Rectangular Array' having;


                           26 Columns


    The Number of ROWS however, is defined by the Limits of the IPtX
    IP Address Bit-Mapped Length specified in the IPtX 'Header'.




  Furthermore, it should be understood, when analyzing the IPtX
  32 / 64 Bit Header Specification (see page 15), only the Bit-Map of
  the Integer representing the Bit-Mapped Length for the Binary Numeral
  defining the Exponent and Exponential Decimal String, for every IP
  Address, is specified in the IPtX Header. In other words, the
  Exponent and the Exponential Decimal String defined in IPtX 32 / 64
  Bit Header and the IPtX IP Addressing Specification is a Variable,
  which represents a Nested Exponential Base 2 Operation defining only
  the Bit-Map Length for the Exponent and the Exponential Decimal
  String. And more importantly, because the Exponent and the
  Exponential Decimal String defines a Binary Numeral instead of an
  Integer, the Number of IPtX Addressing Formats that can be used
  Concurrently and Handled by the IPtX Header increases astronomically.
  - as given by the examples below, we have; 
SA = South America, NA = North America,
EU = European Union, AU = African Union,
AF = Asian Federation, OS = Oceania States


SA = South America, NA = North America,
EU = European Union, AU = African Union,
AF = Asian Federation, OS = Oceania States


Identification =      |  Type = 2E18.20 Bits |  Type = 2E18.20 Bits
      2E15.25 Bits      |                      |
Opcode = 4 Bits       |    Class = 16 Bits   |     Class = 16 Bits 
                        |                      |
Rcode = 4 Bits         |   Length Rdata =     |   TTL = Variable to
                        |      2E12.20 Bits    |      2E22.40 Bits
TQuestions = 2E12.20 Bits    |         4 New "TYPE" Categories
                             |
CIDRNetDes = XXXX:XX         |
  /XXXX:XX = 8 Bits          |     2 New IPtX DNS Tag(s) Specifications
                             |
                             |3. TYPE 45 = XA = "IPtX DNS Address Tag"
                             |   Where X = Integer Variable >/= 1
                             |   - e.g. IPt1 = A, IPt2 = AA = 2A,
                             |   IPt3 = AAA = 3A, IPt4 = AAAA = 4A, etc
                             |
                             |4. TYPE 46 = XA' = "IPtX DNS Address Tag"
