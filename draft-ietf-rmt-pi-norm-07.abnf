send_rate = (((int)(Value_mantissa * 4096.0 / 10.0 + 0.5)) << 4) | Value_exponent;

send_rate = (((int)((3.2 * 4096.0 / 10.0) + 0.5)) << 4) | 4;

                 = (0x51f << 4) | 0x4

                 = 0x51f4

value = (send_rate >> 4) * 10.0 / 4096.0 * power(10.0, (send_rate & x000f))

NORM_REPAIR_ADV_FLAG_LIMIT = 0x01

T_backoff = RandomBackoff(K*GRTTsender, GSIZEsender)

T_rcvrHoldoff =(K+2)*GRTTsender

T_sndrAggregate = (K+1)*GRTT

T_sndrHoldoff = (1*GRTT)

Rsender = ---------------------------------------------------------------
                 tRTT * (sqrt((2/3)*p) + 12 * sqrt((3/8)*p) * p * (1 + 32*(p^2)))
S = Nominal transmitted packet size. (In NORM, the "nominal"
              packet size can be determined by the sender as an
              exponentially weighted moving average (EWMA) of transmitted
              packet sizes to account for variable message sizes).

tRTT = The RTT estimate of the current "current limiting receiver"
              (CLR).

p = The loss event fraction of the CLR.


T_backoff = RandomBackoff(K*GRTTsender, GSIZEsender)

T_ccHoldoff = (K*GRTT)

RTT_rcvr = 0.5 * RTT_rcvrPrev + 0.5 * RTT_rcvrNew

RTT_clr = 0.9 * RTT_clr + 0.1 * RTT_clrNew

Rinitial = MIN(NormSegmentSize / GRTT, NormSegmentSize) bytes/second.

Rnew = Rrecv_min

Age = Seq_sender - Seq_clr;
Rsender = Rsender * 0.5;

