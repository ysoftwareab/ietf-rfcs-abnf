username = UTF-8 string identifying the user/client
password = UTF-8 string representing the user's password


sasl-mech-name   = String identifying a [SASL] authentication mechanism
sasl-init-resp   = Optional initial client response.  If present, the
                           response MUST be encoded as specified in Section 3
                           of [BASE64].
sasl-server-chal = Server challenge.  The challenge MUST be encoded as
                           specified in Section 3 of [BASE64].


cw==
NTk0Nzk4ZjY4ZmY5ZWEwNDg1NGE2NGQ1ZQ==
authinfo-user-command = "AUTHINFO" WS "USER" WS username
authinfo-pass-command = "AUTHINFO" WS "PASS" WS password
authinfo-sasl-command = "AUTHINFO" WS "SASL" WS sasl-mech-name
           [WS sasl-init-resp]


username = 1*P-CHAR
password = 1*P-CHAR
sasl-init-resp = "=" / base64


authinfo-sasl-continuation = *([sasl-client-resp] CRLF)
           ; client waits for a "383" response from the server before
           ; sending each line
sasl-client-resp = "*" / base64


response-x83-content = ("283" / "383") SP sasl-server-chal
sasl-server-chal = "=" / base64


authinfo-extension = %x41.55.54.48.49.4E.46.4F  ; "AUTHINFO"
           *(SPA authinfo-extension-arg)
authinfo-extension-arg = "USER" /
           "SASL:" [sasl-mech-name *("," sasl-mech-name)]


sasl-mech-name = 1*20sasl-mech-char
sasl-mech-char = %x41-5A / DIGIT / "-" / "_"
           ; mechanism names restricted to uppercase letters,
           ; digits, "-" and "_"


base64 = *(4base64-char) [base64-terminal]
base64-terminal = 2base64-char "==" / 3base64-char "="
base64-char = UPPER / LOWER / DIGIT / "+" / "/"
LOWER = %x61-7A


