bu="A" bver="5" n="voltage" u="V" v="120.1"></senml>
senml = element senml {
     attribute bn { xsd:string }?,
     attribute bt { xsd:double }?,
     attribute bv { xsd:double }?,
     attribute bs { xsd:double }?,
     attribute bu { xsd:string }?,
     attribute bver { xsd:int }?,

     attribute l { xsd:string }?,

     attribute n { xsd:string }?,
     attribute s { xsd:double }?,
     attribute t { xsd:double }?,
     attribute u { xsd:string }?,
     attribute ut { xsd:double }?,

     attribute v { xsd:double }?,
     attribute vb { xsd:boolean }?,
     attribute vs { xsd:string }?,
     attribute vd { xsd:string }?
sensml =
     element sensml {
       senml+
start = sensml

elementFormDefault="qualified"
targetNamespace="urn:ietf:params:xml:ns:senml"
v="120.1"></senml>
SenML-Pack = [initial-record, * follow-on-record]

initial-record = initial-defined .and initial-generic
follow-on-record = follow-on-defined .and follow-on-generic

initial-defined = {
     ? bn => tstr,        ; Base Name
     ? bt => numeric,     ; Base Time
     ? bu => tstr,        ; Base Units
     ? bv => numeric,     ; Base value
     ? bs => numeric,     ; Base sum
     ? bver => uint,      ; Base Version
     follow-on-defined-group,
     + base-key-value-pair
follow-on-defined-group = (
      ? n => tstr,        ; Name
      ? u => tstr,        ; Units
      ? s => numeric,     ; Value Sum
      ? t => numeric,     ; Time
      ? ut => numeric,    ; Update Time
      ? l => tstr,        ; Link
      * key-value-pair,
      ? ( v => numeric // ; Numeric Value
vs => tstr //   ; String Value
vb => bool //   ; Boolean Value
vd => binary-value ) ; Data Value
follow-on-defined = { follow-on-defined-group }

initial-generic = {
     follow-on-generic-group,
     * base-key-value-pair,
follow-on-generic-group = (
     + key-value-pair,
follow-on-generic = { follow-on-generic-group }

key-value-pair = ( non-b-label => value )

base-key-value-pair = ( b-label => value )

non-b-label = tstr .regexp  "[A-Zac-z0-9][-_:.A-Za-z0-9]*" / uint
b-label = tstr .regexp  "b[-_:.A-Za-z0-9]+" / nint

value = tstr / binary-value / numeric / bool
numeric = number / decfrac

        Figure 1: Common CDDL specification for CBOR and JSON SenML

bver = "bver" n  = "n"   s  = "s"
bn  = "bn"    u  = "u"   t  = "t"
bt  = "bt"    v  = "v"   ut = "ut"
bu  = "bu"    vs = "vs"  vd = "vd"
bv  = "bv"    vb = "vb"  l  = "l"
bs  = "bs"

binary-value = tstr             ; base64url encoded

           Figure 2: JSON-specific CDDL specification for SenML

bver = -1  n  = 0   s  = 5
bn  = -2   u  = 1   t  = 6
bt  = -3   v  = 2   ut = 7
bu  = -4   vs = 3   vd = 8
bv  = -5   vb = 4   l  = 9
bs  = -6

binary-value = bstr

           Figure 3: CBOR-specific CDDL specification for SenML

