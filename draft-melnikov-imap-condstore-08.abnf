capability          =/ "CONDSTORE"

status              = "STATUS" SP mailbox SP 
                          "(" status-att-req *(SP status-att-req) ")"
                          ;; redefine STATUS command syntax defined in [IMAP4]

status-att-req      = status-att / "HIGHESTMODSEQ"

mailbox-data        =/ "STATUS" SP mailbox SP "("
                           [status-rsp-info *(SP status-rsp-info)] ")"

status-rsp-info     = status-att SP number /
                          "HIGHESTMODSEQ" SP mod-sequence-value

store               = "STORE" SP set store-modifiers SP store-att-flags

store-modifiers     = [ SP "(" store-modifier *(SP store-modifier) ")" ]

store-modifier      = "UNCHANGEDSINCE" SP mod-sequence-value
                          ;; Only single "UNCHANGEDSINCE" may be specified
                          ;; in a STORE operation

fetch-att           =/ fetch-mod-sequence
                           ;; modifies original IMAP4 fetch-att

fetch-mod-sequence  = "MODSEQ" [SP entry-names]

fetch-mod-resp      = "MODSEQ" SP "(" permsg-modsequence [permetadata-details] ")"

search-key          =/ search-modsequence
                           ;; modifies original IMAP4 search-key

search-modsequence  = "MODSEQ" [search-modseq-ext] SP mod-sequence-value

search-modseq-ext   = SP entry-name SP entry-type-req

resp-text-code      =/ "HIGHESTMODSEQ" SP mod-sequence-value /
                           "MODIFIED" SP set /
                           "MODSEQ" SP set SP mod-sequence-value
                           ;; set of message numbers for STORE/FETCH or
                           ;; set of UIDs for UID STORE/UID FECTH

entry-names         = "(" 1*(entry-name SP entry-type) ")"
                           ;; the list can't be empty

entry-name          = '"' "/message/flags/" attr-flag '"'
                          ;; each system or user defined flag <flag>
                          ;; is mapped to "/message/flags/<flag>",
                          ;; where <flag> has no leading "\" for system
                          ;; flags and has a leading "-" for all user
                          ;; defined flags.

entry-type-resp     = "private" | "shared"
                          ;; metadata item type

entry-type-req      = entry-type-resp | "all"
                          ;; perform FETCH/SEARCH operation on private
                          ;; annotation(s), shared annotation(s) or both

permsg-modsequence  = mod-sequence-value
                          ;; per message mod-sequence

permetadata-details = *(entry-name SP entry-type-resp SP mod-sequence-value)
                          ;; per metadata details should returned only if
                          ;; requested by the client and supported by the server

mod-sequence-value  = 1*DIGIT
                          ;; Unsigned 64-bit integer (mod-sequence)
                          ;; (0 <= n < 18,446,744,073,709,551,615)

attr-flag           = "Answered" / "Flagged" / "Deleted" /
                          "Seen" / "Draft" / "-" attr-flag-keyword /
                          attr-flag-extension
                          ;; Does not include "\Recent"

attr-flag-extension = atom
                          ;; Future expansion.  Client implementations
                          ;; MUST accept flag-extension flags.  Server
                          ;; implementations MUST NOT generate
                          ;; flag-extension flags except as defined by
                          ;; future standard or standards-track
                          ;; revisions of this specification.

attr-flag-keyword   = atom

sort-key            =/ "MODSEQ"


