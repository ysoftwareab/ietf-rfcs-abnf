webbundle = [
  ; &#127760;&#128230; in UTF-8.
  magic: h'F0 9F 8C 90 F0 9F 93 A6',
  version: bytes .size 4,
  primary-url: whatwg-url,
  section-lengths: bytes .cbor [* (section-name: tstr, length: uint) ],
  sections: [* any ],
  length: bytes .size 8,  ; Big-endian number of bytes in the bundle.
responses = [*response]

whatwg-url = tstr


section-lengths = [* (section-name: tstr, length: uint) ],

index = {* whatwg-url => [ variants-value, +location-in-responses ] }
variants-value = bstr
location-in-responses = (offset: uint, length: uint)

manifest = whatwg-url

signatures = [
  authorities: [*authority],
  vouched-subsets: [*{
    authority: index-in-authorities,
    sig: bstr,
    signed: bstr  ; Expected to hold a signed-subset item.
  }],
authority = augmented-certificate
index-in-authorities = uint

signed-subset = {
  validity-url: whatwg-url,
  auth-sha256: bstr,
  date: uint,
  expires: uint,
  subset-hashes: {+
whatwg-url => [variants-value, +resource-integrity]
resource-integrity = (header-sha256: bstr, payload-integrity-header: tstr)

   The "augmented-certificate" CDDL rule comes from Section 3.3 of
   [I-D.yasskin-http-origin-signed-responses].

   To parse the signatures section, given its "sectionContents", the
   "sectionOffsets" map, and the "metadata" map to fill in, the parser
   MUST do the following:

   1.  Let "signatures" be the result of parsing "sectionContents" as a
       CBOR item matching the "signatures" rule in the above CDDL
       (Section 3.5).

   2.  Set "metadata["authorities"]" to the list of authorities in the
       first element of the "signatures" array.

   3.  Set "metadata["vouched-subsets"]" to the second element of the
       "signatures" array.

critical = [*tstr]
response = [headers: bstr .cbor headers, payload: bstr]

headers = {* bstr => bstr}

