Type=PEAP.  The Type-data field of the EAP-Response Packet will
TLV=Failure, Result-TLV=Failure), (no TLVs exchange or no protected
TLV=Success), the peer is allowed to refuse to accept a Success
TLV=Success along with a Request-Action TLV with the appropriate
EAP-Type=PEAP, encapsulating a TLS record containing the appropriate
K = Key, S = Seed, LEN = output length, represented as binary
T1 = HMAC-SHA1(K, S | LEN | 0x01)
T2 = HMAC-SHA1 (K, T1 | S | LEN | 0x02)
T3 = HMAC-SHA1 (K, T2 | S | LEN | 0x03)
T4 = HMAC-SHA1 (K, T3 | S | LEN | 0x04)
       ...
           The intermediate combined key is generated after each
IPMK0 = TK
        for j = 1 to k do
IPMKj = PRF(IPMK(j-1),"Intermediate PEAP MAC key" | ISKj, 32);

k = the last successful EAP method inside the tunnel at the point
CMK_B1 = PRF(IPMKn,"PEAP Server B1 MAC key" | S_NONCE, 20)

CMK_B2 = PRF(IPMKn,"PEAP Client B2 MAC key" | C_NONCE | S_NONCE,
CSK = PRF(IPMKn, "PEAP compound session key" | C_NONCE | S_NONCE,
L = Length included
M = More fragments
S = PEAP start
R = Reserved (must be zero)

R = Reserved (must be zero)

EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
received-version=2, Nonce, B1_MAC),
received-version=2,Nonce, B2_MAC)]->

EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=X]]

EAP-Type=X]] ->

EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
Received-version=2, Nonce,
Crypto-Binding-TLV=(Version=0,
Received-version=2,
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2 ->

                           <- EAP-Request/
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2 ->
                           <- EAP-Request/
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
Crypto-Binding-TLV=(Version=0,
Received-Version=2,Nonce, B2_MAC),
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=X]] ->
                           <- EAP-TLV [Crypto-Binding-TLV
                           (Version=0, Received-Version=2,
                           Nonce, B1_MAC),
                           Intermediate-Result-TLV (Failure),
                           Result TLV (Failure)]

EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP,V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=EAP-TLV
EAP-Type=EAP-TLV
Crypto-Binding-TLV=(Version=0, Nonce, B2_MAC),
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2 ->
                            <- EAP-Failure
                            (TLS session cache entry flushed)

EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=0
EAP-Type=PEAP, V=0
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
EAP-Type=PEAP, V=2
Received-version=2, Nonce, B2_MAC))]->

EAP-Type=Y]]

Received-version=2, Nonce, B2_MAC))]->

