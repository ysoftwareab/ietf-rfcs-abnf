


Network Working Group                                         F. Templin
Internet-Draft                                                     Nokia
Expires: July 18, 2003                                        T. Gleeson
                                                      Cisco Systems K.K.
                                                               M. Talwar
                                                               D. Thaler
                                                   Microsoft Corporation
                                                        January 17, 2003


        Intra-Site Automatic Tunnel Addressing Protocol (ISATAP)
                    draft-ietf-ngtrans-isatap-11.txt

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as
   Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on July 18, 2003.

Copyright Notice

   Copyright (C) The Internet Society (2003).  All Rights Reserved.

Abstract

   This document specifies an Intra-Site Automatic Tunnel Addressing
   Protocol (ISATAP) that connects IPv6 hosts and routers within IPv4
   sites.  ISATAP treats the site's IPv4 infrastructure as a link layer
   for IPv6 with no requirement for IPv4 multicast.  ISATAP enables
   intra-site automatic IPv6-in-IPv4 tunneling whether globally assigned
   or private IPv4 addresses are used.




Templin, et al.          Expires July 18, 2003                  [Page 1]

Internet-Draft                   ISATAP                     January 2003


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Applicability Statement  . . . . . . . . . . . . . . . . . . .  3
   3.  Requirements . . . . . . . . . . . . . . . . . . . . . . . . .  3
   4.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  4
   5.  Basic IPv6 Operation . . . . . . . . . . . . . . . . . . . . .  4
   6.  Automatic Tunneling  . . . . . . . . . . . . . . . . . . . . .  5
   7.  Neighbor Discovery . . . . . . . . . . . . . . . . . . . . . .  7
   8.  Deployment Considerations  . . . . . . . . . . . . . . . . . . 10
   9.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 11
   10. Security considerations  . . . . . . . . . . . . . . . . . . . 11
   11. Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 12
       Normative References . . . . . . . . . . . . . . . . . . . . . 12
       Informative References . . . . . . . . . . . . . . . . . . . . 13
       Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . 14
   A.  Major Changes  . . . . . . . . . . . . . . . . . . . . . . . . 15
   B.  Rationale for Interface Identifier Construction  . . . . . . . 17
   C.  Dynamic MTU Discovery  . . . . . . . . . . . . . . . . . . . . 18
       Intellectual Property and Copyright Statements . . . . . . . . 22































Templin, et al.          Expires July 18, 2003                  [Page 2]

Internet-Draft                   ISATAP                     January 2003


1. Introduction

   This document presents a simple approach called the Intra-Site
   Automatic Tunnel Addressing Protocol (ISATAP) that enables
   incremental deployment of IPv6 [1] within IPv4 [2] sites.  ISATAP
   allows dual-stack nodes that do not share a physical link with an
   IPv6 router to automatically tunnel packets to the IPv6 next-hop
   address through IPv4, i.e., the site's IPv4 infrastructure is treated
   as a link layer for IPv6.

   Specific details for the operation of IPv6 and automatic tunneling
   over ISATAP links are given, including an interface identifier format
   that embeds an IPv4 address.  This format supports IPv6 address
   configuration and simple link-layer address mapping.  Also specified
   is the operation of IPv6 Neighbor Discovery and deployment/security
   considerations.

2. Applicability Statement

   ISATAP provides the following features:

   o  treats site's IPv4 infrastructure as a link layer for IPv6 using
      automatic IPv6-in-IPv4 tunneling

   o  enables incremental deployment of IPv6 hosts within IPv4 sites
      with no aggregation scaling issues at border gateways

   o  requires no special IPv4 services within the site (e.g.,
      multicast)

   o  supports both stateless address autoconfiguration and manual
      configuration

   o  supports networks that use non-globally unique IPv4 addresses
      (e.g., when private address allocations [18] are used)

   o  compatible with other NGTRANS mechanisms (e.g., 6to4 [19])


3. Requirements

   The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD,
   SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear in this
   document, are to be interpreted as described in [3].

   This document also makes use of internal conceptual variables to
   describe protocol behavior and external variables that an
   implementation must allow system administrators to change.  The



Templin, et al.          Expires July 18, 2003                  [Page 3]

Internet-Draft                   ISATAP                     January 2003


   specific variable names, how their values change, and how their
   settings influence protocol behavior are provided to demonstrate
   protocol behavior.  An implementation is not required to have them in
   the exact form described here, so long as its external behavior is
   consistent with that described in this document.

4. Terminology

   The terminology of RFC 2460 [1] applies to this document.  The
   following additional terms are defined:

   link, on-link, off-link:
      same definitions as ([4], section 2.1).

   underlying link:
      a link layer that supports IPv4 (for ISATAP), and MAY also support
      IPv6 natively.

   ISATAP link:
      one or more underlying links used for tunneling.  The IPv4 network
      layer addresses of the underlying links are used as link-layer
      addresses on the ISATAP link.

   ISATAP interface:
      a node's attachment to an ISATAP link.

   advertising ISATAP interface:
      same meaning as "advertising interface" in ([4], section 6.2.2).

   ISATAP address:
      an on-link address on an ISATAP interface and with an interface
      identifier constructed as specified in Section 5.2


5. Basic IPv6 Operation

   ISATAP links transmit IPv6 packets via automatic tunnels using the
   site's IPv4 infrastructure as a link layer for IPv6, i.e., IPv6
   treats the site's IPv4 infrastructure as a Non-Broadcast, Multiple
   Access (NBMA) link layer.  The following considerations for IPv6 on
   ISATAP links are noted:

5.1 Interface Identifiers and Unicast Addresses

   ISATAP interface identifiers use "modified EUI-64" format ([5],
   section 2.5.1) and are formed by appending an IPv4 address on the
   ISATAP link to the 32-bit string '00-00-5E-FE'.  Appendix B includes
   non-normative rationale for this construction rule.



Templin, et al.          Expires July 18, 2003                  [Page 4]

Internet-Draft                   ISATAP                     January 2003


   With reference to ([5], sections 2.5.4, 2.5.6), global and local-use
   ISATAP addresses are constructed as follows:

    |           64 bits            |     32 bits   |    32 bits     |
    +------------------------------+---------------+----------------+
    | global or local-use unicast  |   0000:5EFE   |  IPv4 Address  |
    |            prefix            |               | of ISATAP link |
    +------------------------------+---------------+----------------+


5.2 ISATAP Link/Interface Configuration

   An ISATAP link consists of one or more underlying links that support
   IPv4 for tunneling within a site.

   ISATAP interfaces are configured over ISATAP links; each IPv4 address
   assigned to an underlying link is seen as a link-layer address for
   ISATAP.

   At least one link-layer address per advertising ISATAP interface
   SHOULD be added to the Potential Routers List (see Section 7.3.1).

5.3 Link Layer Address Options

   With reference to ([6], section 5.2), when the [NTL] and [STL] fields
   in an ISATAP link layer address option encode 0, the [NBMA Number]
   field encodes a 4-octet IPv4 address.

5.4 Multicast and Anycast

   As for any IPv6 interface, an ISATAP interface is required to
   recognize certain IPv6 multicast and anycast addresses ([5], section
   2.8).  Mechanisms for sending multicast and anycast packets (e.g.,
   [20]) are left as future work.

6. Automatic Tunneling

   The common tunneling mechanisms specified in ([7], sections 2 and 3)
   are used, with the following noted considerations for ISATAP:

6.1 Dual IP Layer Operation

   ISATAP uses the same specification found in ([7], section 2).  That
   is, ISATAP nodes provide complete IPv4 and IPv6 implementations and
   are able to send and receive both IPv4 and IPv6 packets.

   Address configuration and DNS considerations are the same as ([7],
   sections 2.1 through 2.3).



Templin, et al.          Expires July 18, 2003                  [Page 5]

Internet-Draft                   ISATAP                     January 2003


6.2 Encapsulation

   The specification in ([7], section 3.1) is used.  Additionally, the
   IPv6 next-hop address for packets sent on an ISATAP link MUST be an
   ISATAP address; other packets are discarded and an ICMPv6 destination
   unreachable indication with code 3 (Address Unreachable) [8] is
   returned to the source.

6.3 Tunnel MTU and Fragmentation

   ISATAP automatic tunnel interfaces may be configured over multiple
   underlying links with diverse maximum transmission units (MTUs).  The
   minimum MTU for IPv6 interfaces is 1280 bytes ([1], Section 5), but
   the following considerations apply for ISATAP interfaces:

   o  Nearly all IPv4 nodes connect to physical links with MTUs of 1500
      bytes or larger (e.g., Ethernet)

   o  Sub-IPv4 layer encapsulations (e.g., VPN) may occur on some paths

   o  Commonly-deployed VPN interfaces use an MTU of 1400 bytes

   To maximize efficiency and minimize IPv4 fragmentation for the
   predominant deployment case, ISATAP interfaces that do not use a
   dynamic MTU discovery mechanism SHOULD set LinkMTU ([4], Section
   6.3.2 ) to no more than 1380 bytes (1400 minus 20 bytes for IPv4
   encapsulation).  LinkMTU MAY be set to larger values on ISATAP
   interfaces that use a dynamic MTU discovery mechanism.  Appendix C
   provides non-normative considerations for dynamic MTU discovery.

   The ISATAP link layer encapsulates packets of size 1380 or smaller
   with the Don't Fragment (DF) bit not set in the encapsualting IPv4
   header.

6.4 Handling IPv4 ICMP Errors

   IPv4 ICMP errors and ARP failures are processed as link error
   notifications.

6.5 Local-Use IPv6 Unicast Addresses

   The specification in ([7], section 3.7) is not used.  Instead, local
   use IPv6 unicast addresses are formed as specified in Section 5.1.

6.6 Ingress Filtering

   The specification in ([7], section 3.9) is used.  In particular,
   ISATAP nodes that forward decapsulated packets MUST be configured



Templin, et al.          Expires July 18, 2003                  [Page 6]

Internet-Draft                   ISATAP                     January 2003


   with a list of source IPv4 address prefixes that are acceptable.

7. Neighbor Discovery

   RFC 2461 [4] provides the following guidelines for non-broadcast
   multiple access (NBMA) link support:

      "Redirect, Neighbor Unreachability Detection and next-hop
      determination should be implemented as described in this document.
      Address resolution and the mechanism for delivering Router
      Solicitations and Advertisements on NBMA links is not specified in
      this document."

   ISATAP links SHOULD implement Redirect, Neighbor Unreachability
   Detection, and next-hop determination exactly as specified in [4].
   Address resolution and the mechanisms for delivering Router
   Solicitations and Advertisements for ISATAP links are not specified
   by [4]; instead, they are specified in this document.

7.1 Address Resolution and Neighbor Unreachability Detection

   ISATAP addresses are resolved to link-layer addresses (IPv4) by a
   static computation, i.e., the last four octets are treated as an IPv4
   address.

   Following static address resolution, hosts SHOULD perform an initial
   reachability confirmation by sending unicast Neighbor Solicitations
   (NSs) and receiving a Neighbor Advertisement using the mechanisms
   specified in ([4], sections 7.2.2-7.2.8).

   Hosts SHOULD additionally perform Neighbor Unreachability Detection
   (NUD) as specified in ([4], section 7.3).  Routers MAY perform the
   above-specified reachability detection and NUD procedures, but this
   might not scale in all environments.

   All ISATAP nodes MUST send solicited neighbor advertisements ([4],
   section 7.2.4).

7.2 Duplicate Address Detection

   Duplicate Address Detection ([9], section 5.4) is not required for
   ISATAP addresses, since duplicate address detection is assumed
   already performed for the IPv4 addresses from which they derive.

7.3 Router and Prefix Discovery

   Since ISATAP nodes will typically not receive unsolicited multicast
   Router Advertisements, unicast mechanisms are required as specified



Templin, et al.          Expires July 18, 2003                  [Page 7]

Internet-Draft                   ISATAP                     January 2003


   below:

7.3.1 Conceptual Data Structures

   ISATAP nodes use the conceptual data structures Prefix List and
   Default Router List exactly as in ([4], section 5.1).  ISATAP links
   add a new conceptual data structure "Potential Router List" and the
   following new configuration variable:

   ResolveInterval
      Time between name service resolutions.  Default and suggested
      minimum: 1hr

   A Potential Router List (PRL) is associated with every ISATAP link.
   Each entry in the PRL has an IPv4 address and an associated timer.
   The IPv4 address represents an advertising ISATAP interface, and is
   used to construct the link-local ISATAP address for that interface.
   The following sections specify the process for initializing the PRL:

   When a node enables an ISATAP link, it discovers IPv4 addresses for
   the PRL.  The addresses MAY be established by a DHCPv4 [10] option
   for ISATAP (option code TBD), manual configuration, or an unspecified
   alternate method (e.g., DHCPv4 vendor-specific option).

   When no other mechanisms are available, a DNS fully-qualified domain
   name (FQDN) [21] established by an out-of-band method (e.g., DHCPv4,
   manual configuration, etc.) MAY be used.  The FQDN is resolved into
   IPv4 addresses through a static host file, a site-specific name
   service, querying a DNS server within the site, or an unspecified
   alternate method.  The following notes apply:

   1.  Site administrators maintain a list of IPv4 addresses
       representing advertising ISATAP interfaces and make them
       available via one or more of the mechanisms described above.

   2.  There are no mandatory rules for the selection of a FQDN, but
       manual configuration MUST be supported.

   3.  After initialization, nodes periodically re-initialize the PRL
       (e.g., after ResolveInterval).  When DNS is used, client
       resolvers use the IPv4 transport.


7.3.2 Validation of Router Advertisements Messages

   The specification in ([4], section 6.1.2) is used.

   Additionally, received RA messages that contain Prefix Information



Templin, et al.          Expires July 18, 2003                  [Page 8]

Internet-Draft                   ISATAP                     January 2003


   options and/or encode non-zero values in the Cur Hop Limit, Router
   Lifetime, Reachable Time, or Retrans Timer fields (see: [4], section
   4.2) MUST satisfy the following validity check for ISATAP:

   o  the network-layer (IPv6) source address is an ISATAP address and
      embeds an IPv4 address from the PRL


7.3.3 Router Specification

   Routers with advertising ISATAP interfaces behave the same as
   described in ([4], section 6.2).  Advertising ISATAP interfaces send
   RA messages to a node's unicast address, as permitted by ([4],
   section 6.2.6).

7.3.4 Host Specification

7.3.4.1 Sending Router Solicitations

   All entries in the PRL are assumed to represent active advertising
   ISATAP interfaces within the site, i.e., the PRL provides trust basis
   only; not reachability detection.  Hosts periodically solicit
   information from one or more entries in the PRL ("PRL(i)") by sending
   unicast Router Solicitation (RS) messages using PRL(i)'s IPv4 address
   ("V4ADDR_PRL(i)") and associated timer ("TIMER(i)").  The manner of
   selecting a PRL(i) for solicitation and/or deprecating a
   previously-selected PRL(i) is outside the scope of this
   specification.  Hosts add the following variable to support the
   solicitation process:

   MinRouterSolicitInterval
      Minimum time between sending Router Solicitations.  Default and
      suggested minimum: 15min.

   When a PRL(i) is selected, the host sets TIMER(i) to
   MinRouterSolicitInterval and initiates solicitation following a short
   delay.  Solicitation consists of sending RS messages to the ISATAP
   link-local address constructed from V4ADDR_PRL(i), i.e., they are
   sent to 'FE80::0:5EFE:V4ADDR_PRL(i)' instead of
   'All-Routers-multicast'.  They are otherwise sent exactly as in ([4],
   section 6.3.7).

7.3.4.2 Processing Router Advertisements

   Hosts process received RA messages exactly as in ([4], section 6.3.4)
   and ([9], section 5.5.3) except that, when an RA message contains an
   MTU option, hosts SHOULD NOT copy the option's value into the ISATAP
   interface LinkMTU.  Instead, when the ISATAP link layer implements a



Templin, et al.          Expires July 18, 2003                  [Page 9]

Internet-Draft                   ISATAP                     January 2003


   per-neighbor path MTU cache, hosts SHOULD copy the MTU option's value
   into the cache entry for the router that sent the RA message (see:
   Appendix C).

   When the network-layer source address in an RA message is an ISATAP
   address that embeds V4ADDR_PRL(i) for some PRL(i) selected for
   solicitation, hosts additionally reset TIMER(i).  Let "MIN_LIFETIME"
   be the minimum value in the router lifetime or valid lifetime of any
   prefixes advertised in the RA message.  Then, TIMER(i) is reset to:

      MAX((0.5 * MIN_LIFETIME), MinRouterSolicitInterval)


8. Deployment Considerations

8.1 Host And Router Deployment Considerations

   For hosts, if an underlying link supports both IPv4 (over which
   ISATAP is implemented) and also supports IPv6 natively, then ISATAP
   MAY be enabled if the native IPv6 layer does not receive Router
   Advertisements (i.e., does not have connection with an IPv6 router).
   After a non-link-local address has been configured and a default
   router acquired on the native link, the host SHOULD discontinue the
   router solicitation process described in the host specification and
   allow existing ISATAP address configurations to expire as specified
   in ([4], section 5.3) and ([9], section 5.5.4).  Any ISATAP addresses
   added to the DNS for this host should also be removed.  In this way,
   ISATAP use will gradually diminish as IPv6 routers are widely
   deployed throughout the site.

   Routers MAY configure both a native IPv6 and ISATAP interface over
   the same physical link.  Routing will operate as usual between these
   two domains.  Note that the prefixes used on the ISATAP and native
   IPv6 interfaces will be distinct.  The IPv4 address(es) configured on
   a router's advertising ISATAP interface(s) SHOULD be added (either
   automatically or manually) to the site's address records for
   advertising ISATAP interfaces.

8.2 Site Administration Considerations

   The following considerations are noted for sites that deploy ISATAP:

   o  ISATAP links are administratively defined by a set of advertising
      ISATAP interfaces and set of nodes which discover those interface
      addresses.  Thus, ISATAP links are defined by administrative (not
      physical) boundaries.

   o  Hosts and routers that use ISATAP can be deployed in an ad-hoc



Templin, et al.          Expires July 18, 2003                 [Page 10]

Internet-Draft                   ISATAP                     January 2003


      fashion.  In particular, hosts can be deployed with little/no
      advanced knowledge of existing routers, and routers can deployed
      with no reconfiguration requirements for hosts.

   o  ISATAP nodes periodically refresh the entries on the PRL.
      Responsible site administration can reduce the control traffic.
      At a minimum, administrators SHOULD ensure that dynamically
      advertised information for the site's PRL is well maintained.


9. IANA Considerations

   A DHCPv4 option code for ISATAP (TBD) [22] may be requested in the
   event that this document (or a derivative thereof) is moved to
   standards track.

10. Security considerations

   ISATAP site border routers and firewalls MUST implement IPv6 ingress
   filtering and MUST NOT allow packets with site-local source and/or
   destination addresses (i.e., addresses with prefix FEC0::/10) to
   enter or leave the site.

   In addition to possible attacks against IPv6, security attacks
   against IPv4 must also be considered.  In particular, border routers
   and firewalls MUST implement IPv4 ingress filtering and
   ip-protocol-41 filtering.

   Even with IPv4 and IPv6 ingress filtering, reflection attacks can
   originate from nodes within an ISATAP site that spoof IPv6 source
   addresses.  Security mechanisms for reflection attack mitigation
   (e.g., [11], [12], etc.) SHOULD be used in routers with advertising
   ISATAP interfaces.  At a minimum, ISATAP site border gateways MUST
   log potential source address spoofing cases.

   (RFC 2461 [4], section 6.1.2) implies that nodes trust received
   Router Advertisement (RA) messages from on-link routers, as indicated
   by a value of 255 in the IPv6 'hop-limit' field.  ISATAP links
   require an additional validation check for received RA messages (see:
   Section 7.3.2).

   ISATAP addresses do not support privacy extensions for stateless
   address autoconfiguration [23].  However, since the ISATAP interface
   identifier is derived from the node's IPv4 address, ISATAP addresses
   do not have the same level of privacy concerns as IPv6 addresses that
   use an interface identifier derived from the MAC address.  (This is
   especially true when private address allocations [18] are used.)




Templin, et al.          Expires July 18, 2003                 [Page 11]

Internet-Draft                   ISATAP                     January 2003


11. Acknowledgements

   Some of the ideas presented in this draft were derived from work at
   SRI with internal funds and contractual support.  Government sponsors
   who supported the work include Monica Farah-Stapleton and Russell
   Langan from U.S.  Army CECOM ASEO, and Dr.  Allen Moshfegh from U.S.
   Office of Naval Research.  Within SRI, Dr.  Mike Frankel, J.  Peter
   Marcotullio, Lou Rodriguez, and Dr.  Ambatipudi Sastry supported the
   work and helped foster early interest.

   The following peer reviewers are acknowledged for taking the time to
   review a pre-release of this document and provide input: Jim Bound,
   Rich Draves, Cyndi Jung, Ambatipudi Sastry, Aaron Schrader, Ole
   Troan, Vlad Yasevich.

   The authors acknowledge members of the NGTRANS community who have
   made significant contributions to this effort, including Rich Draves,
   Alain Durand, Nathan Lutchansky, Karen Nielsen, Art Shelest, Margaret
   Wasserman, and Brian Zill.

   The authors also wish to acknowledge the work of Quang Nguyen [24]
   under the guidance of Dr.  Lixia Zhang that proposed very similar
   ideas to those that appear in this document.  This work was first
   brought to the authors' attention on September 20, 2002.

Normative References

   [1]   Deering, S. and R. Hinden, "Internet Protocol, Version 6 (IPv6)
         Specification", RFC 2460, December 1998.

   [2]   Postel, J., "Internet Protocol", STD 5, RFC 791, September
         1981.

   [3]   Bradner, S., "Key words for use in RFCs to Indicate Requirement
         Levels", BCP 14, RFC 2119, March 1997.

   [4]   Narten, T., Nordmark, E. and W. Simpson, "Neighbor Discovery
         for IP Version 6 (IPv6)", RFC 2461, December 1998.

   [5]   Hinden, R. and S. Deering, "IP Version 6 Addressing
         Architecture", draft-ietf-ipngwg-addr-arch-v3-11 (work in
         progress), October 2002.

   [6]   Armitage, G., Schulter, P., Jork, M. and G. Harter, "IPv6 over
         Non-Broadcast Multiple Access (NBMA) networks", RFC 2491,
         January 1999.

   [7]   Gilligan, R. and E. Nordmark, "Basic Transition Mechanisms for



Templin, et al.          Expires July 18, 2003                 [Page 12]

Internet-Draft                   ISATAP                     January 2003


         IPv6 Hosts and Routers", draft-ietf-ngtrans-mech-v2-01 (work in
         progress), November 2002.

   [8]   Conta, A. and S. Deering, "Internet Control Message Protocol
         (ICMPv6) for the Internet Protocol Version 6 (IPv6)
         Specification", RFC 2463, December 1998.

   [9]   Thomson, S. and T. Narten, "IPv6 Stateless Address
         Autoconfiguration", RFC 2462, December 1998.

   [10]  Droms, R., "Dynamic Host Configuration Protocol", RFC 2131,
         March 1997.

   [11]  Savola, P., "Security Considerations for 6to4",
         draft-savola-ngtrans-6to4-security-01 (work in progress), March
         2002.

   [12]  Bellovin, S., Leech, M. and T. Taylor, "ICMP Traceback
         Messages", draft-ietf-itrace-03 (work in progress), January
         2003.

   [13]  Mogul, J. and S. Deering, "Path MTU discovery", RFC 1191,
         November 1990.

   [14]  Postel, J., "Internet Control Message Protocol", STD 5, RFC
         792, September 1981.

   [15]  Baker, F., "Requirements for IP Version 4 Routers", RFC 1812,
         June 1995.

   [16]  McCann, J., Deering, S. and J. Mogul, "Path MTU Discovery for
         IP version 6", RFC 1981, August 1996.

   [17]  Braden, R., "Requirements for Internet Hosts - Communication
         Layers", STD 3, RFC 1122, October 1989.

Informative References

   [18]  Rekhter, Y., Moskowitz, R., Karrenberg, D., Groot, G. and E.
         Lear, "Address Allocation for Private Internets", BCP 5, RFC
         1918, February 1996.

   [19]  Carpenter, B. and K. Moore, "Connection of IPv6 Domains via
         IPv4 Clouds", RFC 3056, February 2001.

   [20]  Thaler, D., "Support for Multicast over 6to4 Networks",
         draft-ietf-ngtrans-6to4-multicast-01 (work in progress), July
         2002.



Templin, et al.          Expires July 18, 2003                 [Page 13]

Internet-Draft                   ISATAP                     January 2003


   [21]  Mockapetris, P., "Domain names - implementation and
         specification", STD 13, RFC 1035, November 1987.

   [22]  Droms, R., "Procedures and IANA Guidelines for Definition of
         New DHCP Options and Message Types", BCP 43, RFC 2939,
         September 2000.

   [23]  Narten, T. and R. Draves, "Privacy Extensions for Stateless
         Address Autoconfiguration in IPv6", RFC 3041, January 2001.

   [24]  Nguyen, Q., "http://irl.cs.ucla.edu/vet/report.ps", spring
         1998.

   [25]  Lahey, K., "TCP Problems with Path MTU Discovery", RFC 2923,
         September 2000.

   [26]  Jacobson, V., Braden, B. and D. Borman, "TCP Extensions for
         High Performance", RFC 1323, May 1992.

   [27]  Templin, F., "Neighbor Affiliation Protocol for
         IPv6-over-(foo)-over-IPv4", draft-templin-v6v4-ndisc-01 (work
         in progress), November 2002.


Authors' Addresses

   Fred L. Templin
   Nokia
   313 Fairchild Drive
   Mountain View, CA  94110
   US

   Phone: +1 650 625 2331
   EMail: ftemplin@iprg.nokia.com


   Tim Gleeson
   Cisco Systems K.K.
   Shinjuku Mitsu Building
   2-1-1 Nishishinjuku, Shinjuku-ku
   Tokyo  163-0409
   Japan

   EMail: tgleeson@cisco.com







Templin, et al.          Expires July 18, 2003                 [Page 14]

Internet-Draft                   ISATAP                     January 2003


   Mohit Talwar
   Microsoft Corporation
   One Microsoft Way
   Redmond, WA>  98052-6399
   US

   Phone: +1 425 705 3131
   EMail: mohitt@microsoft.com


   Dave Thaler
   Microsoft Corporation
   One Microsoft Way
   Redmond, WA  98052-6399
   US

   Phone: +1 425 703 8835
   EMail: dthaler@microsoft.com

Appendix A. Major Changes

   changes from version 10 to version 11:

   o  Added multicast/anycast subsection

   o  Revised PRL initialization

   o  Updated neighbor discovery, security consideration sections

   o  Updated MTU section

   changes from version 09 to version 10:

   o  Rearranged/revised sections 5, 6, 7

   o  updated MTU section

   changes from version 08 to version 09:

   o  Added stateful autoconfiguration mechanism

   o  Normative references to RFC 2491, RFC 2462

   o  Moved non-normative MTU text to appendix C

   changes from version 07 to version 08:

   o  updated MTU section



Templin, et al.          Expires July 18, 2003                 [Page 15]

Internet-Draft                   ISATAP                     January 2003


   changes from version 06 to version 07:

   o  clarified address resolution, Neighbor Unreachability Detection

   o  specified MTU/MRU requirements

   changes from earlier versions to version 06:

   o  Addressed operational issues identified in 05 based on discussion
      between co-authors

   o  Clarified ambiguous text per comments from Hannu Flinck; Jason
      Goldschmidt

   o  Moved historical text in section 4.1 to Appendix B in response to
      comments from Pekka Savola

   o  Identified operational issues for anticipated deployment scenarios

   o  Included reference to Quang Nguyen work































Templin, et al.          Expires July 18, 2003                 [Page 16]

Internet-Draft                   ISATAP                     January 2003


Appendix B. Rationale for Interface Identifier Construction

   ISATAP specifies an EUI64-format address construction for the
   Organizationally-Unique Identifier (OUI) owned by the Internet
   Assigned Numbers Authority (IANA).  This format (given below) is used
   to construct both native EUI64 addresses for general use and modified
   EUI-64 format interface identifiers for IPv6 unicast addresses:

   |0                      2|2      3|3      3|4                      6|
   |0                      3|4      1|2      9|0                      3|
   +------------------------+--------+--------+------------------------+
   |  OUI ("00-00-5E"+u+g)  |  TYPE  |  TSE   |          TSD           |
   +------------------------+--------+--------+------------------------+

   Where the fields are:

      OUI     IANA's OUI: 00-00-5E with 'u' and 'g' bits (3 octets)

      TYPE    Type field; specifies use of (TSE, TSD) (1 octet)

      TSE     Type-Specific Extension (1 octet)

      TSD     Type-Specific Data (3 octets)

   And the following interpretations are specified based on TYPE:

      TYPE         (TSE, TSD) Interpretation
      ----         -------------------------
      0x00-0xFD    RESERVED for future IANA use
      0xFE         (TSE, TSD) together contain an embedded IPv4 address
      0xFF         TSD is interpreted based on TSE as follows:

                   TSE          TSD Interpretation
                   ---          ------------------
                   0x00-0xFD    RESERVED for future IANA use
                   0xFE         TSD contains 24-bit EUI-48 intf id
                   0xFF         RESERVED by IEEE/RAC

   Thus, if TYPE=0xFE, TSE is an extension of TSD.  If TYPE=0xFF, TSE is
   an extension of TYPE.  Other values for TYPE (thus, other
   interpretations of TSE, TSD) are reserved for future IANA use.

   The above specification is compatible with all aspects of EUI64,
   including support for encapsulating legacy EUI-48 interface
   identifiers (e.g., an IANA EUI-48 format multicast address such as:
   '01-00-5E-01-02-03' is encapsulated as: '01-00-5E-FF-FE-01-02-03').
   But, the specification also provides a special TYPE (0xFE) to
   indicate an IPv4 address is embedded.  Thus, when the first four



Templin, et al.          Expires July 18, 2003                 [Page 17]

Internet-Draft                   ISATAP                     January 2003


   octets of an IPv6 interface identifier are: '00-00-5E-FE' (note: the
   'u/l' bit MUST be 0) the interface identifier is said to be in
   "ISATAP format" and the next four octets embed an IPv4 address
   encoded in network byte order.

Appendix C. Dynamic MTU Discovery

   ISATAP encapsulators and decapsulators are IPv6 neighbors that may be
   separated by multiple link layer (IPv4) forwarding hops.  When an
   encapsulator's interface configures a LinkMTU ([4], Section 6.3.2)
   value larger than 1380 bytes, a dynamic link layer (IPv4) mechanism
   is required to discover per-neighbor path MTUs.  The following text
   gives non-normative considerations for dynamic MTU discovery.

   IPv4 path MTU discovery [13] uses ICMPv4 "fragmentation needed"
   messages, but these generally do not provide enough information for
   stateless translation to ICMPv6 "packet too big" messages (see: RFC
   792 [14] and RFC 1812 [15], section 4.3.2.3).  Additionally, ICMPv4
   "fragmentation needed" messages can be spoofed, filtered, or not sent
   at all by some forwarding nodes.  Thus, IPv4 Path MTU discovery used
   alone may be inadequate and can result in black holes that are
   difficult to diagnose [25].

   Alternate methods for determining per-neighbor MTUs should be used
   when RFC 1191 path MTU discovery is deemed inadequate.  In any
   method, the encapsulator uses periodic and/or on-demand probing of
   the IPv4 path to the decapsulator.  The following three methods are
   possible:

   1.  Encapsulator-driven - the encapsulator periodically sends probe
       packets with the DF bit set in the IPv4 header and waits for a
       positive acknowledgement from the decapsulator that the probe was
       received

   2.  Decapsulator-driven - the encapsulator sends all packets with the
       DF bit NOT set in the IPv4 header unless and until the
       decapsulator sends a "Fragmentation Experienced" indication(s)

   3.  Hybrid - the encapsulator and decapsulator engage in a dialogue
       and use "intelligent" probing to monitor the path MTU

   These methods are discussed in detail in the following subsections:

C.1 Encapsulator-driven Method

   In this method, the encapsulator sets the DF bit in the IPv4 header
   of probe packets.  Probe packets may be sent either when the
   encapsulator's link layer forwards a large data packet to the



Templin, et al.          Expires July 18, 2003                 [Page 18]

Internet-Draft                   ISATAP                     January 2003


   decapsulator (i.e., on-demand) or when the path MTU for the
   decapsulator has not been verified for some time (i.e., periodic).
   IPv6 Neighbor Solicitation (NS) or ICMPv6 ECHO_REQUEST packets with
   padding bytes added could be used for this purpose, since successful
   delivery results in a positive acknowledgement that the probe
   succeeded vis-a-vis a response from the decapsulator.

   While the decapsulator is being probed, the encapsulator maintains a
   queue of packets that have the decapsulator as the IPv6 next-hop
   address.  The queue should be large enough to buffer the
   (delay*bandwidth) product for the round-trip time (RTT) to the
   decapsulator.  If the probe succeeds, packets in the queue that are
   no larger than the probe size are sent to the decapsulator.  If the
   probe fails, packets larger than the last known successful probe are
   dropped and an ICMPv6 "packet too big" message returned to the sender
   [16].

   This method has the advantage that the decapsulator need not
   implement any special mechanisms, since standard IPv6 request/
   response mechanisms are used.  Additionally, the encapsulator is
   assured that any packets that are too large for the decapsulator to
   receive will be dropped by the network.  Disadvantages for this
   method include the fact that probe packets do not carry data and thus
   consume network resources.  Additionally, packet queues may become
   large on Long, Fat Networks (LFNs) (see: RFC 1323 [26]).

C.2 Decapsulator-driven Method

   In this method, the encapsulator sends all packets with the DF bit
   NOT set in the IPv4 header with the expectation that the decapsulator
   will send a "Fragmentation Experienced" indication if the IPv4
   network fragments packets.  In other words, the decapsulator simply
   sends all packets that are no larger than LinkMTU unless and until it
   receives "Fragmentation Experienced" messages from the decapsulator.
   The decapsulator can use IPv6 Router Advertisement (RA) messages with
   an MTU option as the means for both reporting fragmentation and
   informing the encapsulator of a new MTU value to use.

   This method has the distinct advantages that the data packets
   themselves are used as probes and no queueing on the encapsulator is
   necessary.  Additionally, fewer packets will be lost since the
   decapsulator will quite often be able to reassemble packets
   fragmented by the network.  The primary disadvantage is that, using
   the current specifications, the encapsulator has no way of knowing
   whether a particular decapsulator implements the "fragmentation
   experienced" signalling capability.  However, the "fragmentation
   experienced" indication can be trivially implemented in an
   application on the decapsulator that uses the Berkeley Packet Filter



Templin, et al.          Expires July 18, 2003                 [Page 19]

Internet-Draft                   ISATAP                     January 2003


   (aka, libpcap) to listen for fragmented packets from encapsulators.

   When fragmented packets arrive, the application sends IPv6 RA
   messages with an MTU option to inform the encapsulator that
   fragmentation has been experienced and a new value for the neighbor's
   MTU should be used.  The application additionally sends ICMPv6
   "packet too big" messages to the original source when a fragmented
   packet is not correctly reassembled.  This function need not be built
   into the decapsulator's operating system and can be added as an
   after-market feature.  Finally, simply adding an extra bit in the RA
   message header ([4], section 4.2) would provide a means for the
   decapsulator to inform the encapsulator that dynamic MTU discovery is
   supported.

C.3 Hybrid Method

   In this method, the encapsulator and decapsulator engage in a
   "neighbor affiliation" protocol to negotiate link-layer parameters
   such as MTU.  (See: [27] for an example of such an approach.) This
   approach has the advantage that bi-directional links are used and
   both ends of the link have unambiguous knowledge that the other end
   implements the protocol.  However, the signalling protocol between
   the endpoints is complicated and additional state is required in both
   the encapsulator and decapsultor.

C.4 Summary

   In summary, the decapsulator-based approach in Appendix C.2 has
   distinct efficiency advantages over methods that engage the
   encapsulator.  Additionally, probing methods which use IPv4
   encapsulation with the DF bit NOT set may use LinkMTU values for the
   ISATAP link that exceed the underlying link MTU size.  Experimental
   verification is called for which may eventually result in a
   recommendation for proposed standard.

C.5 Additional Notes

   o  In all methods, some packet loss due to link/buffer restrictions
      may occur with no ICMPv6 "packet too big" message returned to the
      sender.  Unenlightened senders will interpret such loss as loss
      due to congestion, which may result in longer convergence to the
      actual path MTU.  Enlightened senders will interpret the loss as
      loss due to link/buffer restrictions and immediately reduce their
      MTU estimate.

   o  To avoid denial-of-service attacks that would cause superfluous
      probing based on counting down/up by small increments, plateau
      tables (e.g., [13], section 7) should be used when the actual MTU



Templin, et al.          Expires July 18, 2003                 [Page 20]

Internet-Draft                   ISATAP                     January 2003


      value is indeterminant.

   o  ICMPv4 "fragmentation needed" messages may result when a link
      restriction is encountered but may also come from denial of
      service attacks.  Implementations should treat ICMPv4
      "fragmentation needed" messages as "tentative" negative
      acknowledgments and apply heuristics to determine when to suspect
      an actual link restriction and when to ignore the messages.  IPv6
      packets lost due actual link restrictions are perceived as lost
      due to congestion by the original source, but robust
      implementations minimize instances of such packet loss without
      ICMPv6 "packet too big" messages returned to the sender.

   o  Nodes that connect to the Internet are expected to be able to
      reassemble or discard IPv4 packets up to 64KB in length when the
      DF bit is not set in the encapsulating IPv4 header.  Nodes that
      cannot reassemble or discard maximum-length IPv4 packets are
      vulnerable to attacks such as the "ping-of-death".

































Templin, et al.          Expires July 18, 2003                 [Page 21]

Internet-Draft                   ISATAP                     January 2003


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights.  Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11.  Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard.  Please address the information to the IETF Executive
   Director.

   The IETF has been notified of intellectual property rights claimed in
   regard to some or all of the specification contained in this
   document.  For more information consult the online list of claimed
   rights.


Full Copyright Statement

   Copyright (C) The Internet Society (2003).  All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assignees.



Templin, et al.          Expires July 18, 2003                 [Page 22]

Internet-Draft                   ISATAP                     January 2003


   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.







































Templin, et al.          Expires July 18, 2003                 [Page 23]


