

IP Storage                                                              
Internet Draft                                        M. Hallak-Stamler 
Document: draft-ietf-ips-scsi-mib-05.txt     Sanrad Intelligent Storage 
                                                               M. Bakke 
                                                          Cisco Systems 
                                                          K. McCloghrie 
                                                          Cisco Systems 
                                                            Y. Lederman 
                                                 Siliquent Technologies 
                                                             M. Krueger 
                                                        Hewlett-Packard 
                                                                        
Expires: June 2003                                        February 2003 
    
    
             Definition of Managed Objects for SCSI Entities 
    
    
Status of this Memo 
    
   This document is an Internet-Draft and is in full conformance with 
   all provisions of Section 10 of RFC2026.  
    
   Internet-Drafts are working documents of the Internet Engineering 
   Task Force (IETF), its areas, and its working groups.  Note that      
   other groups may also distribute working documents as Internet-
   Drafts. 
    
   Internet-Drafts are draft documents valid for a maximum of six months 
   and may be updated, replaced, or obsoleted by other documents at any 
   time.  It is inappropriate to use Internet-Drafts as reference 
   material or to cite them other than as "work in progress." 
    
   The list of current Internet-Drafts can be accessed at 
   http://www.ietf.org/ietf/1id-abstracts.html. 
    
   The list of Internet-Draft Shadow Directories can be accessed at 
   http://www.ietf.org/shadow.html. 
    
    
Copyright Notice 
    
   Copyright (C) The Internet Society (2000).  All Rights Reserved. 
    
    
    
Abstract 
    


 
 
Hallak-Stamler et al.                                         [Page 1] 
                               SCSI MIB                  February 2003 
 
 
   This memo defines a Management Information Base (MIB) for Small 
   Computer System Interface (SCSI) entities, independently of the 
   interconnect subsystem layer. 
    
    
Table of Contents 
    
   1. The SNMP Management Framework..................................3 
   2. Conventions....................................................4 
   3. Overview.......................................................4 
      3.1 Introduction...............................................4 
      3.2 SCSI Terminology...........................................6 
      3.3 SCSI MIB Implementation....................................8 
      3.4 Bridging and Virtualization...............................10 
      3.5 SCSI Command MIB..........................................11 
   4. Structure of the MIB..........................................11 
      4.1 The SCSI Device Group.....................................11 
      4.2 The Initiator Group.......................................11 
      4.3 The Target Group..........................................11 
      4.4 The Discovery Group.......................................11 
      4.5 The LUN Map Group.........................................12 
      4.6 The Target Statistic Group................................12 
      4.7 The Target High Speed Statistic Group.....................12 
      4.8 The LUN Map Statistics Group..............................12 
      4.9 The LUN Map Statistics High Speed Group...................12 
      4.10 The Initiator Statistic Group............................13 
      4.11 The Initiator High Speed Statistic Group.................13 
      4.12 The Discovery Statistics Group...........................13 
      4.13 The Discovery Statistics High Speed Group................13 
      4.14 The Device Statistics Group..............................13 
   5. Relationships in this MIB.....................................14 
   6. Relationship to Other MIBs....................................15 
      6.1 Host Resource MIB.........................................15 
      6.2 iSCSI MIB.................................................15 
   7. Miscellaneous Details.........................................15 
      7.1 Names and Identifiers.....................................15 
      7.2 Logical Unit Number.......................................16 
      7.3 State of logical units....................................16 
      7.4 Notifications.............................................16 
      7.5 SCSI Domains..............................................16 
      7.6 Counters: 32 bits and 64 bits.............................17 
      7.7 Local versus Remote Entities..............................17 
   8. Abbreviations.................................................17 
   9. Object Definitions............................................17 
   10. Acknowledgments..............................................69 
   11. Object Population Example: Target and Initiator on a pSCSI bus69 
   12. References...................................................74 
      12.1 Normative References.....................................74 
      12.2 Informative References...................................75 
 
 
Hallak-Stamler et al.    Expires  August 2003                 [Page 2] 
                               SCSI MIB                  February 2003 
 
 
   13. Security Considerations......................................76 
   14. Authors' Addresses...........................................77 
   15. Full Copyright Statement.....................................78 
    
    
1. The SNMP Management Framework 
    
   The SNMP Management Framework presently consists of five major 
   components: 
    
   o  An overall architecture, described in RFC 2571 [1]. 
    
   o Mechanisms for describing and naming objects and events for the 
     purpose of management.  The first version of this Structure of 
     Management Information (SMI) is called SMIv1 and described in STD 
     16, RFC 1155 [2], STD 16, RFC 1212 [3] and RFC 1215 [18].  The 
     second version, called SMIv2, is described in STD 58, RFC 2578 [4], 
     STD 58, RFC 2579 [5] and STD 58, RFC 2580 [6]. 
    
   o Message protocols for transferring management information. The 
     first version of the SNMP message protocol is called SNMPv1 and 
     described in STD 15, RFC 1157 [7].  A second version of the SNMP 
     message protocol, which is not an Internet standards track 
     protocol, is called SNMPv2c and described in RFC 1901 [19] and RFC 
     1906 [8].  The third version of the message protocol is called 
     SNMPv3 and described in RFC 1906 [8], RFC 2572 [9] and RFC 
     2574[10]. 
    
   o Protocol operations for accessing management information. The first 
     set of protocol operations and associated PDU formats is described 
     in STD 15, RFC 1157 [7]. A second set of protocol operations and 
     associated PDU formats is described in RFC 1905 [11]. 
    
   o A set of fundamental applications described in RFC 2573 [12] and 
     the view-based access control mechanism described in RFC 2575[13]. 
    
   A more detailed introduction to the current SNMP Management Framework 
   can be found in RFC 2570 [20]. 
    
   Managed objects are accessed via a virtual information store, termed 
   the Management Information Base or MIB.  Objects in the MIB are 
   defined using the mechanisms defined in the SMI. 
    
   This memo specifies a MIB module that is compliant to the SMIv2.  A 
   MIB conforming to the SMIv1 can be produced through the appropriate 
   translations.  The resulting translated MIB must be semantically 
   equivalent, except where objects or events are omitted because no 
   translation is possible (use of Counter64).  Some machine-readable 
   information in SMIv2 will be converted into textual descriptions in 
 
 
Hallak-Stamler et al.    Expires  August 2003                 [Page 3] 
                               SCSI MIB                  February 2003 
 
 
   SMIv1 during the translation process.  However, this loss of machine-
   readable information is not considered to change the semantics of the 
   MIB. 
    
    
    
2. Conventions 
    
   The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD, 
   SHOULD NOT, RECOMMENDED, NOT RECOMMENDED, MAY, and OPTIONAL, when 
   they appear in this document, are to be interpreted as described in 
   RFC 2119 [21]. 
    
    
    
3. Overview 
    
   This memo defines a portion of the Management Information Base (MIB) 
   for use with network management protocols in the Internet community. 
   In particular, it describes a set of managed objects to configure and 
   monitor Small Computer System Interface entities (SCSI entities), 
   i.e. SCSI Devices, SCSI Targets and Initiators and SCSI Ports. 
    
   SCSI is a client-server protocol in which application clients within 
   an initiator device (client) issue service requests to logical units 
   contained in a target (server). 
 
   This MIB is based on documents defined by the ANSI T10 Technical 
   Committee, specifically the SCSI Architecture Model - 2 document 
   [14]. 
    
3.1 Introduction 
    
   In the late 1970s a firm called Shugart Associates started to have 
   some considerable success with a peripheral interface definition in 
   what became the PC marketplace, and this interface was adopted 
   and extended by an open standards committee to form the Small 
   Computer Systems Interface (SCSI). SCSI defines an 8 bit wide multi-
   drop "bus" structure which could interconnect a total of eight 
   peripherals and computer systems. 
    
   It's important to realize that all SCSI initially standardized was 
   the "physical connection" i.e. the connectors, cables and interface 
   signals. Thus even though a peripheral could be connected to multiple 
   systems, the information that flowed across the interface was 
   different in each case. This was addressed some five years later by 
   the definition of a Common Command Set, and with this definition in 
   place it was possible for the first time to develop a peripheral with 

 
 
Hallak-Stamler et al.    Expires  August 2003                 [Page 4] 
                               SCSI MIB                  February 2003 
 
 
   both a common interface and common operating firmware for connection 
   to multiple systems. 
    
   The physical interface of SCSI continued to be developed throughout 
   the 1980s with the addition of fast (up to 10 megabytes/s) and wide 
   (16 bits) variants, but the distance supported remained a maximum of 
   25 meters (from one end of the bus to another), and indeed some of 
   the faster variants supported much less than that distance. The 
   command set development continued, with special commands for tapes, 
   printers, and even processors being added to the original disk-
   oriented set. So successful was SCSI in the 1980s that the majority 
   of the available Operating Systems incorporated support for the SCSI 
   command set as standard. 
    
   However at the end of the 1980s the distance, speed and number of 
   devices supported by SCSI were starting to become significant 
   impediments to systems design, and while the "information explosion" 
   had not yet started in earnest, it was already being anticipated. At 
   the same time, the serial interface technologies developed for Local 
   Area Networks such as Ethernet, and the fibre optics technologies 
   that were first deployed in telecommunications applications, were 
   starting to appear sufficiently rugged & low-cost for use in 
   peripheral interface applications. Thus a standards project was begun 
   in 1988 to develop a new serial, fibre-optic interface to carry the 
   SCSI command sets and other peripheral protocols. This interface 
   eventually became known as Fibre Channel (FC), and it is based on an 
   architecture centered around an abstractly defined "fabric", which 
   may be a switch or a loop connection. MIBs for various FC equipments 
   are already in existence. 
    
   In order to support the new interfaces, it was necessary to 
   completely reorganize the SCSI standards and definitions. The command 
   sets were separated from the physical interface definitions, and a 
   SCSI Architectural Model (SAM) was created to define the interaction 
   between the various standards. It is a key to understanding SAM to 
   realize that it was first created approximately 10 years AFTER the 
   first SCSI products were shipped!! 
    
   The most recent development in this saga occurred in 2000 when an 
   IETF Working Group was formed to address, amongst other things, a 
   definition for transporting the SCSI command sets directly over a 
   TCP/IP infrastructure. This effort is known as iSCSI [22], and an 
   iSCSI MIB is already under development [23]. 
 
   Most of the projects are in T10, except Fibre Channel that is defined 
   by T11 and IEEE defines 1394. 
    


 
 
Hallak-Stamler et al.    Expires  August 2003                 [Page 5] 
                               SCSI MIB                  February 2003 
 
 
   The SCSI MIB represents the SCSI protocol layer common to all SCSI 
   command sets and transports.  It does not represent the command sets 
   and transports themselves. These should appear in other MIBs specific 
   to the transport or command set.  The following drawing shows the 
   relationships between the various actual and possible SCSI-related 
   MIBs. 
    
                  +---------------------------------+ 
    SCSI Command  | Higher-level MIBs, specific to  | 
    Sets          | command sets, disk, tape, etc.  | 
                  +---------------------------------+ 
    SCSI          |             SCSI MIB            | 
                  +-------+---------+-------+-------+ 
    SCSI          | iSCSI |   FCP   |  SPI  | Other | 
    Transport     |  MIB  |   MIB   |  MIB  |  MIBs | 
    Protocols     |       |         |       |       | 
                  +-------+---------+-------+-------+ 
    SCSI          |  TCP  |  Fibre  |    Other      | 
    Interconnect  |  MIB  | Channel | Interconnect  | 
                  |       |  MIBs   |    MIBs       | 
                  +-------+---------+-------+-------+ 
    
   An iSCSI MIB [23], and a Fibre Channel interconnect MIB [24] are 
   currently being developed.  No development is currently planned for 
   standard command-set-specific or device-specific MIBs.  
    
   Standard Fibre Channel interconnect MIBs [24] are also under 
   development. 
    
   The TCP MIB [25] is already a proposed standard RFC 2012. 
 
3.2 SCSI Terminology 
    
   The following sections explain some of the SCSI terminology, which is 
   used later in defining the MIB.  For the authoritative definitions of 
   these terms, see SAM-2 [14].  
    
   3.2.1 SCSI Application Layer 
   The protocols and procedures that implement or invoke SCSI commands 
   and task management functions by using services provided by a SCSI 
   protocol layer. 
    
   3.2.2 SCSI Device 
   A SCSI device is an entity that contains one or more SCSI ports that 
   are connected to a service delivery subsystem and supports a SCSI 
   application protocol. 
    
   3.2.3 SCSI Port 

 
 
Hallak-Stamler et al.    Expires  August 2003                 [Page 6] 
                               SCSI MIB                  February 2003 
 
 
   A SCSI port is a device-resident entity that connects the application 
   client, device server or task manager to the service delivery 
   subsystem through which requests and responses are routed. A SCSI 
   port is synonymous with port and either a SCSI initiator port or a 
   SCSI target port. 
    
   3.2.4 SCSI Initiator 
   A SCSI initiator device contains application clients and SCSI 
   initiator ports that originate device service and task management 
   requests to be processed by a target SCSI device. When used this term 
   refers to SCSI initiator devices or SCSI target/initiator devices 
   that are using the SCSI target/initiator port as a SCSI initiator 
   port. 
    
   3.2.5 SCSI Initiator Port 
   A SCSI initiator port acts as the connection between application 
   clients and the service delivery subsystem through which requests and 
   responses are routed. In all cases when this term is used it refers 
   to an initiator port or a SCSI target/initiator port operating as a 
   SCSI initiator port. 
    
   3.2.6 SCSI Target Device 
   A SCSI target device contains logical units and SCSI target ports 
   that receive device service and task management requests for 
   processing. When used this term refers to SCSI target devices or SCSI 
   target/initiator devices that are using the SCSI target/initiator 
   port as a SCSI target port. 
    
   3.2.7 SCSI Target Port 
   A SCSI target port contains a task router and acts as the connection 
   between device servers and task managers and the service delivery 
   subsystem through which requests and responses are routed. When this 
   term is used it refers to a SCSI target port or a SCSI 
   target/initiator port operating as a SCSI target port. 
    
   3.2.8 Logical Units 
   A logical unit is an entity residing in the target that implements a 
   device model and processes SCSI commands sent by an application 
   client. 
    
   3.2.9 Logical Unit Number 
   A Logical Unit Number or LUN is a 64-bit identifier for a logical 
   unit. 
    
   3.2.10 Interconnect Subsystem 
   An interconnect subsystem is one or more physical interconnects that 
   appear as a single path for the transfer of information between SCSI 
   devices. 
    
 
 
Hallak-Stamler et al.    Expires  August 2003                 [Page 7] 
                               SCSI MIB                  February 2003 
 
 
   3.2.11 Device Server 
   A device server is an object within the logical unit that processes 
   SCSI tasks according to the rules for task management. 
    
   3.2.12 Task Manager 
   A task manager is a server within the target that processes task 
   management functions. 
    
   3.2.13 SCSI Instance 
   A "SCSI instance" is a distinct SCSI entity within a managed system.  
   While most implementations will have just one SCSI instance, the MIB 
   allows for multiple (virtual) instances, such that a large system can 
   be "partitioned" into multiple, distinct virtual systems. 
    
   For example, in a host, it allows multiple vendors' implementations 
   of the MIB to co-exist under a single SNMP agent through each 
   vendor's implementation being a different SCSI instance.  It also 
   allows a single SNMP agent to represent multiple subsystems each of 
   which have their own SCSI instance. 
    
3.3 SCSI MIB Implementation 
    
   The SCSI MIB is a basic building block to use in the various SCSI 
   management scenarios. The SCSI MIB is intended to be implemented in 
   every SCSI entity in a managed system. A SCSI entity can be a SCSI 
   Initiator device, SCSI Target device or SCSI Initiator and Target 
   device. Since SCSI (storage) networking devices may contain more than 
   one SCSI entity, it is possible that more than one SCSI instance will 
   reside in a single device. 
    
   In small-scale environments a single network management station (NMS) 
   may have SNMP access to both initiators and targets. However if the 
   SCSI targets, or virtualized targets, are being provided as a 
   service, it is more likely that the provider of the service owns and 
   manages the targets, and that the consumer of the service owns and 
   manages the initiators. In this case, the service provider NMS and 
   the consumer NMS may have only allowed SNMP access to the targets and 
   the initiators respectively. 
    
   The figures in this chapter describe the location of the SCSI MIB 
   implementations in the various SCSI management scenarios. The 
   locations of the SCSI SNMP agent implementing the SCSI MIB, are 
   denoted with '*. 
    
         +----------+                                       +---------+  
         |SCSI      |          SCSI Transport               |SCSI     |  
         |Initiator +---------------------------------------+Target   |  
         |Device    |                                       |Device   |  
         |     *    |                                       |    *    |  
 
 
Hallak-Stamler et al.    Expires  August 2003                 [Page 8] 
                               SCSI MIB                  February 2003 
 
 
         +----------+                                       +---------+  
               |                                                 | 
               |                                                 | 
               |                                                 | 
               |                                                 | 
               |                                                 | 
               |      SNMP        +----------+     SNMP          | 
               +------------------|SCSI      |-------------------+ 
                                  |Management| 
                                  | (NMS)    | 
                                  +----------+ 
      
   Figure 1: Single SCSI Initiator device and Single SCSI Target device  
    
        
   Figure 1 describes a simple SCSI management scenario of a SCSI 
   Initiator device, a SCSI Target device and a Management station. In 
   this scenario there are two SNMP agents, each containing its SCSI 
   instance and its respective objects. As the SCSI Target and SCSI 
   Initiator device are interconnected, their Target and Initiator port 
   objects will be complementary.  
    
    
      +-----------+ 
      |  +--------+-+          SCSI Transport               +---------+  
      |  | SCSI     |---------------------------------------+ SCSI    |  
      |* | Initiator+---------------------------------------+ Target  |  
      +--| Device   |          SCSI Transport               | Device  |  
       | |     *    |                                       |    *    |  
       | +----------+                                       +---------+  
       |       |                                                 | 
       |       |                                                 | 
       |       |                                                 | 
       |       |                                                 | 
       |       |                                                 | 
       |SNMP   |      SNMP        +----------+     SNMP          | 
       +-------+------------------|SCSI      |-------------------+ 
                                  |Management| 
                                  | (NMS)    | 
                                  +----------+ 
      
             Figure 2: Multiple Hosts and a Single Target device 
     
        
   Figure 2 adds another SCSI Initiator device, to the SCSI network, 
   which connects to the same SCSI target device.The additional 
   Initiator also has an SNMP agent implementing the SCSI MIB. In this 
   case, the SCSI Target device's MIB will show that two SCSI Initiator 
   devices are attached to it. 
 
 
Hallak-Stamler et al.    Expires  August 2003                 [Page 9] 
                               SCSI MIB                  February 2003 
 
 
    
    
   +-----------+                                          +-----------+ 
   |  +----------+              +---------------+       +-+-------+   | 
   |  |SCSI      |--------------| Virtualization|       | SCSI    |   | 
   |* |Initiator +--------------| Device        +-------+ Target  |   | 
   +--|Device    | SCSI         |               |       | Device  | * | 
    | |     *    |              |            *  |       |    *    |---+ 
    | +----------+ Transport    +------------+--+       +---------+ | 
    |       |                                |              |       | 
    |       |                                |              |       | 
    |       |                                |              |       | 
    |       |                                |              |       | 
    |       |                                |              |       | 
    |       |      SNMP        +-----------+ |   SNMP       |       | 
    +-------+------------------+ SCSI      + +-+------------+-------+ 
                               | Management| 
                               | (NMS)     | 
                               +-----------+ 
   Figure 3: Multiple Hosts, Virtualization device and multiple Targets 
        
        
   Figure 3 adds an in-band virtualization device which encapsulates, 
   and possibly modifies, the SCSI Target devices representation to the 
   SCSI Initiator devices. It is common practice for an in-band 
   virtualization device, to include both SCSI Target and Initiator 
   device functionality. Therefore, its SCSI MIB implementation includes 
   both the SCSI Target and Initiator device objects. It should be noted 
   that the Virtualization device may implement additional proprietary 
   MIBs, as the SCSI MIB does not distinguish between physical and 
   virtual SCSI entities. 
    
3.4 Bridging and Virtualization 
    
   Storage virtualization is a concept that abstracts storage resources 
   in such a way that, storage entities are provided as pool of logical 
   entities. 
    
   Usually the virtualization process is transparent to the storage 
   users (i.e. Hosts). Virtualization normally affects the SCSI entities 
   represented to SCSI Initiators. However, the SCSI MIB enables the 
   representation of SCSI entities and their respective status, 
   including error and performance-monitoring statistics. It should be 
   possible to perform a limited number of configuration modification 
   and diagnostic actions.  
    
   The SCSI entities embodied in the bridging and virtualization devices 
   can be represented by the SCSI MIB. However, Bridging and 

 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 10] 
                               SCSI MIB                  February 2003 
 
 
   Virtualization devices configuration is beyond the above-described 
   scope and therefore should be provided through other MIBs. 
    
3.5 SCSI Command MIB 
    
   The management of SCSI commands is beyond the scope of this MIB. 
   Future SCSI Command MIB can link to this MIB, through the use of OIDs 
   or INDEX values of appropriate tables. 
    
    
4. Structure of the MIB 
 
   This MIB contains fourteen conformance groups: 
 
    
4.1 The SCSI Device Group 
    
   The scsiDeviceGroup group contains the objects general to each SCSI 
   instance: instance, device and port objects. It contains also the 
   objects referring to the transport(s) used by those SCSI instances.  
   This group is mandatory for all SCSI managed system. 

 
    
4.2 The Initiator Group 
    
   The scsiInitiatorGroup contains all the managed information related 
   to a local initiator device and port. In addition, it contains the 
   managed objects referring to the monitored attached targets. Any 
   managed system acting, as an initiator or target/initiator port must 
   support this group. 
    
4.3 The Target Group 
    
   The scsiTargetGroup contains all the managed objects related to a 
   local target device, a local target port, monitored attached 
   initiator ports, logical units and logical unit identifiers.  
   Managed systems acting, as a target or target/initiator device and 
   port must support this group. 
    
4.4 The Discovery Group  
    
   The scsiDiscoveryGroup group is a collection of managed objects 
   referring to remote target devices, remote target ports, remote 
   logical units and remote logical unit identifiers discovered by or 
   configured to a managed system acting as an initiator device. 


 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 11] 
                               SCSI MIB                  February 2003 
 
 
   Managed systems acting as an initiator device and port and supporting 
   remote target devices or ports configuration or discovery should 
   implement this group. 
    
4.5 The LUN Map Group 
    
   The scsiLunMapGroup group is a collection of managed objects allowing 
   mapping between target devices, logical units and logical unit 
   numbers in one side to remote authorized initiator devices or ports 
   in another side. 
   Managed systems supporting this mapping should implement the 
   scsiLunMapGroup. 
    
4.6 The Target Statistic Group 
 
   The scsiTargetStatsGroup group is a collection of managed objects 
   representing various statistics referring to a target device or port. 
   Managed systems acting as a target device and port supporting 
   statistics should implement this group. 
    
4.7 The Target High Speed Statistic Group 
 
   The scsiTargetHSStatsGroup group is a collection of managed objects 
   representing various statistics referring to a target device or port. 
   It provides support for systems, which can quickly generate countable 
   information because they run at high speed. 
   Managed systems acting, as a target device and port and running at 
   high speed supporting should implement this group. 
    
    
4.8 The LUN Map Statistics Group 
 
   The scsiLunMapStatsGroup group is a collection of managed objects 
   representing various statistics referring to remote authorized 
   initiator devices or ports. 
   Managed systems acting as a target device and port and able to gather 
   statistics on remote initiator devices or ports should implement this 
   group. 
 
4.9 The LUN Map Statistics High Speed Group 
 
   The scsiLunMapHSStatsGroup group is a collection of managed objects 
   representing various statistics referring to remote authorized 
   initiator devices or ports. It provides support for systems, which 
   can quickly generate countable information because they run at high 
   speed. 


 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 12] 
                               SCSI MIB                  February 2003 
 
 
   Managed systems acting as a target device and port and able to gather 
   statistics on remote initiator devices or ports and running at high 
   speed should implement this group. 
 
4.10 The Initiator Statistic Group 
 
   The scsiInitiatorStatsGroup group is a collection of managed objects 
   representing various statistics referring to a initiator device or 
   port. 
   Managed systems acting as a initiator device and port supporting 
   statistics should implement this group. 
 
4.11 The Initiator High Speed Statistic Group 
 
   The scsiInitiatorHSStatsGroup group is a collection of managed 
   objects representing various statistics referring to an initiator 
   device or port. It provides support for systems, which can quickly 
   generate countable information because they run at high speed. 
   Managed systems acting as an initiator device and port and running at 
   high speed supporting should implement this group. 
 
4.12 The Discovery Statistics Group 
 
   The scsiDiscoveryStatsGroup group is a collection of managed objects 
   representing various statistics referring to remote discovered or 
   configured target devices or ports. 
   Managed systems acting as an initiator device and port and able to 
   gather statistics on remote target devices or ports should implement 
   this group. 
 
4.13 The Discovery Statistics High Speed Group 
 
   The scsiDiscoveryHSStatsGroup group is a collection of managed 
   objects representing various statistics referring to remote 
   discovered or configured target devices or ports. It provides support 
   for systems, which can quickly generate countable information because 
   they run at high speed. 
   Managed systems acting as an initiator device and port and able to 
   gather statistics on remote target devices or ports and running at 
   high speed should implement this group. 
 
4.14 The Device Statistics Group 
 
   The scsiDeviceStatGroup group is a collection of managed objects 
   representing various statistics referring to a SCSI device. 
   Managed systems able to gather device statistics should implement 
   this group. 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 13] 
                               SCSI MIB                  February 2003 
 
 
    
    
5. Relationships in this MIB 
 
   This chapter outlines the functionality and the dependency between 
   the SNMP tables providing the required management functionality for 
   SCSI initiator and target devices. For specific usage of these 
   tables, the reader should refer to the description of the tables and 
   their respective table entries and attributes. 
    
   Following is a list of required SCSI initiator related features, and 
   the respective tables facilitating this functionality: 
    
   - List all the SCSI initiator ports, which should be managed through 
   this MIB. The table scsiIntrPortTable maintains all the SCSI 
   initiator ports for the SCSI initiator devices in the MIB. 
    
   - Provide a list of all SCSI target ports or SCSI target devices to 
   which a SCSI initiator port can attach. This should prevent a SCSI 
   initiator device or port from attaching to SCSI target devices that 
   should be either invisible or inaccessible to it. The entries in this 
   list can be either created manually or by automatic discovery 
   mechanisms (e.g. SLP, iSNS). 
   The ScsiDscTgtTable provides this information. The entries in this 
   table point to SCSI initiator port, and indicate that the SCSI 
   initiator port can only attach to SCSI target ports or SCSI target 
   devices provided in the respective entries of the ScsiDscTgtTable. 
    
   - The information, for the aforementioned SCSI target ports or SCSI 
   target devices, about the LUs and their respective LUN Ids should be 
   provided. 
   The scsiDscLunTable and scsiDscLunIdTable maintain this information. 
    
   - The scsiAttTgtPortTable provides the information information about 
   the target ports each SCSI initiator port is currently communicating 
   with. This table should be dynamically updated to reflect those 
   connections. 
    
    
   Following is a list of required SCSI target related features, and the 
   respective tables facilitating this functionality: 
 
   - List all the SCSI target ports, which should be managed through 
   this MIB. 
   The table scsiTgtPortTable maintains all the SCSI target ports for 
   the SCSI target devices in the MIB.  
    


 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 14] 
                               SCSI MIB                  February 2003 
 
 
   -Provide a list of valid SCSI initiator ports or SCSI initiator 
   devices authorized to attach to a SCSI target port. This list should 
   feature the concept of "access lists", which are common in IP routers 
   and switches. The ScsiAuthorizedIntr table provides this information. 
    
   - It should be possible to specify the list of LUNs exposed to each 
   SCSI initiator port or device, when it attached to the SCSI target. 
   SCSI target devices must provide a default list of LUNs. This list of 
   LUNs can be either a unique list for each SCSI initiator device, or 
   be the default list. 
   For each entry in the ScsiAuthorizedIntr table a pointer, named 
   scsiAuthIntrLunMapIndex, indexing the ScsiLunMapTable facilitates 
   this feature. 
    
   - Provide means to monitor all the SCSI initiator ports currently 
   attached to this SCSI target port. The scsiAttIntrPortTable provides 
   this information. This table should be dynamically updated to reflect 
   those connections. 
    
6. Relationship to Other MIBs 
      
6.1 Host Resource MIB 
    
   The SCSI MIB extends objects defined in the host resource MIB to SCSI 
   specific entities but does not contain information on software 
   modules such as device drivers. If MIB objects are required for 
   installed packages of SCSI software, then the hrSWInstalledGroup of 
   the host resource MIB (RFC 2790 [17]) are the standard MIB objects to 
   use. 
     
6.2 iSCSI MIB 
 
   The SCSI MIB defines managed objects for SCSI protocol layer. The 
   SCSI layer can run on the top of several transport layers; iSCSI is 
   one of them. The iSCSI MIB [23] is the MIB portion defining the 
   managed objects for the transport called iSCSI. In the same way, a 
   fibre channel or parallel SCSI MIB would define managed objects for a 
   transport called respectively fibre channel or parallel SCSI. 
   The relationship between the SCSI MIB and any valid transport MIB is 
   determined via the SCSI port managed table that has an object 
   pointing to the corresponding row, if any, of the relevant table in a 
   transport MIB.  
    
7. Miscellaneous Details 
 
7.1 Names and Identifiers 
    

 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 15] 
                               SCSI MIB                  February 2003 
 
 
   The names and the identifiers of the SCSI devices, ports and logical 
   units depend on the underlying transport protocols; their format and 
   length vary accordingly. Please refer to [14] in order to get more 
   details. 
    
7.2 Logical Unit Number 
 
   The logical unit number is a 64-bit integer. This type does not exist 
   in SMI and therefore, this MIB contains a textual convention defining 
   LUN as an OCTET STRING. 
    
7.3 State of logical units 
 
   The state of a logical unit determines whether the data is protected 
   or not. It is often referred as protected entity. Protected entities 
   are entities that are able to tolerate one or more entity failing 
   without any loss of data or loss of data availability. 
    
   For more information on the logical unit states see the SCSI 
   Controller Commands-2 (SCC-2) standard (NCITS.318-1998). 
    
7.4 Notifications 
 
   Separate SNMP notifications may be enabled/disabled to notify of a 
   change in any of the SCSI device status variables. A notification 
   will be generated theoretically for each occurrence (see restriction 
   below) of the abnormal status (e.g., if the SCSI device's current 
   status is abnormal and another logical unit changes its status to 
   from available another notification will occur).  
   To avoid sending an excessive number of notifications due to multiple 
   errors counted, an SNMP agent implementing the SCSI MIB should not 
   send more than three SCSI notifications in any 10-second period. 
    
   The 3-in-10 rule was chosen because one notification every three 
   seconds was deemed often enough, but if and when two or three 
   different notifications happen at the same time, it would not be 
   desirable to suppress them.  Three notifications in ten seconds is a 
   happy medium, where a short burst of notifications is allowed, 
   without inundating the network and/or destination host with a large 
   number of notifications. 
 
7.5 SCSI Domains 
    
   SAM-2 specifies that devices belong to a domain. However, it is not 
   usually possible to determine this from within a system, so domains 
   are not represented within this MIB. 
    

 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 16] 
                               SCSI MIB                  February 2003 
 
 
7.6 Counters: 32 bits and 64 bits 
    
   Some counters, in (newer) high-performance systems, can increase at a 
   fast enough rate such that their representation as Counter32's, can 
   cause them to "wrap" in less than an hour.  The SMIv2 provides 
   Counter64 as the syntax for such counters.  However, (older) SNMPv1 
   implementations cannot support Counter64's. Thus, this MIB defines 
   such counters as both Counter32's and Counter64's. 
    
   The counters in this MIB which count data, are defined in terms of 
   megabytes (i.e., as the number of megabytes of data), such that 
   Counter64's are not required. 
    
   However, the counters in this MIB, which count commands, when in use 
   at 10GBit/second with 512 read/write operations, could wrap within an 
   hour.  Therefore, each of these counters will be defined as both 
   a Counter32 and a Counter64, with the latter being conditionally 
   mandatory, depending on the system speed. 
    
7.7 Local versus Remote Entities 
   This MIB qualifies often SCSI entities as local or remote. The local 
   entities are the ones for which the agent is reporting. The remote 
   entities are the ones, which the local entities are in communication 
   with via the SCSI protocol.  
    
8. Abbreviations 
   This MIB will use the following abbreviations: 
   Inst = Instance 
   Dev = Device 
   Tgt = Target 
   Intr = Initiator 
   Att = Attached 
   Id = Identifier 
   Trnspt = Transport 
   Dsc = Discovered 
   pSCSI = Parallel SCSI 
    
9. Object Definitions 
 
SCSI-MIB DEFINITIONS ::= BEGIN 
    
   IMPORTS 
   MODULE-IDENTITY, OBJECT-IDENTITY, OBJECT-TYPE,  
   NOTIFICATION-TYPE, Integer32, Unsigned32, Counter32,  
   Counter64, Gauge32, 
   mib-2                                     FROM SNMPv2-SMI 
   TEXTUAL-CONVENTION, TimeStamp, TruthValue, 
   RowStatus, RowPointer, AutonomousType     FROM SNMPv2-TC 
   MODULE-COMPLIANCE, OBJECT-GROUP,  
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 17] 
                               SCSI MIB                  February 2003 
 
 
   NOTIFICATION-GROUP                        FROM SNMPv2-CONF 
   SnmpAdminString                  FROM SNMP-FRAMEWORK-MIB; 
          
   
    
scsiModule MODULE-IDENTITY 
     LAST-UPDATED "200302250000Z"         -- 25 February 2003 
     ORGANIZATION "IETF" 
     CONTACT-INFO " 
          Michele Hallak-Stamler 
          Sanrad Intelligent Network 
          32 Habarzel Street 
          Tel Aviv, Israel 
         Phone: +972 3 7674809 
          E-mail: michele@sanrad.com 
    
    
          Yaron Lederman 
          Siliquent Technologies Ltd. 
          33 Bezalel Street  
          Ramat Gan, Israel  
          Phone: +972 3 7552320 
          E-mail: yaronl@siliquent.com 
    
          Mark Bakke 
          Postal: Cisco Systems, Inc 
          6450 Wedgwood Road, Suite 130 
          Maple Grove, MN 
          USA 55311 
          Phone: +1 763-398-1000 
          Fax: +1 763-398-1001 
          E-mail: mbakke@cisco.com 
    
          Marjorie Krueger 
          Postal: Hewlett-Packard 
          Networked Storage Architecture 
          Networked Storage Solutions Org. 
          8000 Foothills Blvd. 
          Roseville, CA 95747 
          Phone: +1 916-785-2656 
          Phone: +1 916-785-0391 
          E-mail: marjorie_krueger@hp.com 
    
          Keith McCloghrie 
          Cisco Systems, Inc. 
          Postal: 170 West Tasman Drive 
          San Jose, CA USA 95134 
          Phone: +1 408 526-5260 
          E-mail: kzm@cisco.com 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 18] 
                               SCSI MIB                  February 2003 
 
 
    
         " 
     DESCRIPTION   
          "The SCSI MIB" 
          
   -- Revision History 
    
     REVISION     "200302250000Z"            
     DESCRIPTION  " Initial version published as RFC nnnn." 
::= { mib-2 xxx}   -- must be changed in the future 
    
       
   --******************** Textual Conventions ************************* 
ScsiLUN  ::= TEXTUAL-CONVENTION 
     STATUS current 
     DESCRIPTION 
          " This Textual Convention represents either a SCSI Logical 
          Unit Number (LUN).  The format of a LUN is: 
          - a string of two octets if the underlying transport protocol 
          is SBP-3 or SPI-4 using data group transfers or 
          - a string of eight octets for all other cases." 
     SYNTAX OCTET STRING (SIZE ( 2 | 8)) 
    
ScsiIndexValue ::= TEXTUAL-CONVENTION 
     STATUS current 
     DESCRIPTION 
          " An arbitrary integer value, greater than zero, for use as a 
          unique index value." 
     SYNTAX Unsigned32(1..4294967295) 
       
ScsiPortIndexValueOrZero ::= TEXTUAL-CONVENTION 
     STATUS current 
     DESCRIPTION 
          "This textual convention is an extension of the ScsiIndexValue 
          convention.  The latter defines a greater than zero value used 
          to identify an index.  This extension permits the additional 
          value of zero and is applicable only to indices of SCSI port.  
          Usage of the zero is object-specific and must therefore be 
          defined as part of the description of any object, which uses 
          this syntax.  Examples of the usage of zero might include 
          situations where index was unknown, or when none or all 
          indices need to be referenced." 
     SYNTAX Unsigned32(0..4294967295) 
    
ScsiIndexValueOrZero ::= TEXTUAL-CONVENTION 
     STATUS current 
     DESCRIPTION 
          "This textual convention is an extension of the ScsiIndexValue 
          convention.  The latter defines a greater than zero value used 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 19] 
                               SCSI MIB                  February 2003 
 
 
          to identify an index.  This extension permits the additional 
          value of zero. Usage of the zero is object-specific and must 
          therefore be defined as part of the description of any object, 
          which uses this syntax.  Examples of the usage of zero might 
          include situations where index was unknown, or when none or 
          all indices need to be referenced." 
     SYNTAX Unsigned32(0..4294967295) 
    
ScsiIdentifier ::= TEXTUAL-CONVENTION 
     STATUS current 
     DESCRIPTION 
          "This Textual Convention represents a generic SCSI device or 
          port identifier. 
          The format depends on the transport used: 
          - SPI: only bits:0-3 for a port identifier (MSB is 0 and LSB 
          is 3). Other bits must be zero.  
          - SPI: identifier of a device is a zero-length octet string. 
          - FCP: 3 bytes for a port identifier 
          - FCP: identifier of a device is a zero-length octet string. 
          - SRP: 16 bytes for a port identifier. 
          - SRP: it is a zero-length octet string for a device 
          identifier. 
          - iSCSI: 256 bytes for a device identifier. 
          - iSCSI: 258 bytes for a target port identifier. 
          - iSCSI: 262 bytes for an initiator port identifier. 
          - SBP: it is a zero-length octet string for a device 
          identifier. 
          - SBP: 2 bytes for an initiator port identifier. 
          - SBP: 11 bytes for a target port identifier. " 
     REFERENCE  
         "SCSI Architecture Model-2 (SAM-2), Working Draft, T10 Project 
         1157-D, Revision 20, 19 September 2001 - Annex A [14]" 
     SYNTAX OCTET STRING (SIZE (0..262)) 
    
ScsiName ::= TEXTUAL-CONVENTION 
     STATUS current 
     DESCRIPTION 
          " This Textual Convention represents a generic SCSI device or 
          port name. 
          The format depends on the transport used: 
          - SPI: it is a zero-length octet string for a device or port 
          name. 
          - FCP: 8 bytes for a port name. 
          - FCP: it is a zero-length octet string for a device name. 
          - SRP: 16 bytes for a port name. 
          - SRP: it is a zero-length octet string for a device name. 
          - iSCSI: 256 bytes for a device name. 
          - iSCSI: 258 bytes for a target port name. 
          - iSCSI: 262 bytes for an initiator port name. 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 20] 
                               SCSI MIB                  February 2003 
 
 
          - SBP: it is a zero-length octet string for a device name. 
          - SBP: 8 bytes for an initiator port name. 
          - SBP: 11 bytes for a target port name. " 
     REFERENCE  
          "SCSI Architecture Model-2 (SAM-2),Working Draft, T10 Project 
          1157-D, Revision 20, 19 September 2001 - Annex A [14]" 
     SYNTAX OCTET STRING (SIZE (0..262)) 
    
ScsiNameIdOrZero  ::= TEXTUAL-CONVENTION 
     STATUS current 
     DESCRIPTION 
          " This Textual Convention represents either the SCSI name of a 
          logical unit or a zero-length string.  Objects defined with 
          this syntax must specify the meaning of the zero-length 
          string.  The format of the name of a LU is: 
          - a zero-length octet string or  
          - a string of eight octets." 
     SYNTAX OCTET STRING (SIZE (0 | 8)) 
    
ScsiDeviceOrPort ::= TEXTUAL-CONVENTION 
     STATUS current 
     DESCRIPTION 
          "This type specifies whether a particular configuration is 
          applicable to a port or to a device." 
     SYNTAX INTEGER  { 
         device(1), 
         port(2), 
         other(3) 
      } 
    
ScsiIdCodeSet ::= TEXTUAL-CONVENTION 
     STATUS current 
     DESCRIPTION 
          "This Textual Convention specifies the code set for the 
          identifier contained in an Identification Descriptor returned 
          in a Logical Unit's Device Identification Page, and is 
          formatted as defined in T10 SPC-2 (see REFERENCE) table 177 - 
          Code Set"  
     REFERENCE  
          "ANSI - SCSI Primary Commands - 2 (SPC-2), Revision 20, 18 
          July 2001 Chapter 8: section 8.4.4, page 210 Vital Product 
          Data Parameters [16]" 
     SYNTAX Unsigned32(0..15) 
    
ScsiIdAssociation ::= TEXTUAL-CONVENTION 
     STATUS current 
     DESCRIPTION 
          "This Textual Convention specifies what the identifier is 
          associated with (e.g, with the addressed physical/logical 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 21] 
                               SCSI MIB                  February 2003 
 
 
          device or with a particular port) for the identifier contained 
          in an Identification Descriptor returned in a Logical Unit's 
          Device Identification Page, and is formatted as defined in T10 
          SPC-2 (see REFERENCE) table 178 - Association."  
     REFERENCE  
          "ANSI - SCSI Primary Commands - 2 (SPC-2), Revision 20, 18 
          July 2001 - Chapter 8: section 8.4.4, page 210 Vital Product 
          Data Parameters [16]" 
     SYNTAX Unsigned32(0..3) 
    
ScsiIdType ::= TEXTUAL-CONVENTION 
     STATUS current 
     DESCRIPTION 
          "This Textual Convention specifies the type for the identifier 
          contained in an Identification Descriptor returned in a 
          Logical Unit's Device Identification Page, and is formatted as 
          defined in T10 SPC-2 (see REFERENCE) table 179 -Identifier 
          Type."  
     REFERENCE  
          "ANSI - SCSI Primary Commands - 2 (SPC-2), Revision 20, 
          Chapter 8: section 8.4.4, page 210 Vital Product Data 
          Parameters  [16]" 
     SYNTAX Unsigned32(0..15) 
    
ScsiIdValue ::= TEXTUAL-CONVENTION 
     STATUS current 
     DESCRIPTION 
          "This Textual Convention represents an identifier. The objects 
          of type ScsiIdCodeSet, ScsiIdAssociation, ScsiIdType, define 
          together the format. 
          The format is the same as contained in an Identification 
          Descriptor returned in a Logical Unit's Device Identification 
          Page, and is formatted as defined in T10 SPC-2 (see REFERENCE) 
          tables 180-188."  
          REFERENCE  
          " ANSI - SCSI Primary Commands - 2 (SPC-2), Revision 20, 18 
          July 2001 - Chapter 8: section 8.4.4, page 210 Vital Product 
          Data Parameters [16]" 
     SYNTAX OCTET STRING (SIZE (0..255)) 
    
HrSWInstalledIndexOrZero ::= TEXTUAL-CONVENTION 
     STATUS current 
     DESCRIPTION 
          "The index value for a software module's row in the Host 
          Resources MIBs hrSWInstalledTable.  A zero value indicates 
          that no row in the hrSWInstalledTable is applicable." 
     REFERENCE 
          "hrSWInstalledTable is defined in the Host Resources MIB, RFC 
          2790." 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 22] 
                               SCSI MIB                  February 2003 
 
 
     SYNTAX   Integer32 (0..2147483647) 
    
    
--****************** Structure of the MIB ************************* 
scsiObjects       OBJECT IDENTIFIER ::= { scsiModule 1 } 
scsiNotifications OBJECT IDENTIFIER ::= { scsiModule 2 } 
scsiConformance   OBJECT IDENTIFIER ::= { scsiModule 3 } 
    
scsiTransportTypes   OBJECT IDENTIFIER ::= { scsiObjects 1 } 
scsiGeneral       OBJECT IDENTIFIER ::= { scsiObjects 2 } 
scsiInitiator     OBJECT IDENTIFIER ::= { scsiObjects 3 } 
scsiTarget        OBJECT IDENTIFIER ::= { scsiObjects 4 } 
scsiLogicalUnit   OBJECT IDENTIFIER ::= { scsiObjects 5 } 
    
    
--****************** Transport Types ******************************* 
-- The following object identifiers allow determining the different 
-- transports (service delivery subsystems) in use under the SCSI 
-- layer. 
scsiTransportOther   OBJECT-IDENTITY 
   STATUS   current 
   DESCRIPTION 
          "This identity identifies a transport that has no identity; it 
          might happen because the transport is unknown or might not 
          have been defined when this MIB was created." 
::= { scsiTransportTypes 1 } 
           
scsiTransportSPI     OBJECT-IDENTITY 
   STATUS   current 
   DESCRIPTION 
      "This identity identifies a parallel SCSI transport." 
   REFERENCE 
      "T10 - SCSI Parallel Interface - 4 (SPI-4) - #1365-D Rev [10]" 
::= { scsiTransportTypes 2 } 
           
scsiTransportFCP     OBJECT-IDENTITY 
   STATUS   current 
   DESCRIPTION 
      "This identity identifies a Fibre Channel Protocol for SCSI, 
      Second Version." 
   REFERENCE 
      "T10 - SCSI Fibre Channel Protocol - 2 (FCP-2)- #1144-D Rev 
      [07a]." 
::= { scsiTransportTypes 3 } 
      
scsiTransportSRP  OBJECT-IDENTITY 
   STATUS   current 
   DESCRIPTION 

 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 23] 
                               SCSI MIB                  February 2003 
 
 
      "This identity identifies a protocol for transporting SCSI over 
      RDMA interfaces, e.g., InfiniBand (tm)." 
   REFERENCE 
      "T10 - SCSI RDMA Protocol (SRP) - #1415-D Rev [16]." 
::= { scsiTransportTypes 4 } 
      
scsiTransportISCSI   OBJECT-IDENTITY 
   STATUS   current 
   DESCRIPTION 
      "This identity identifies an ISCSI transport." 
   REFERENCE 
      "IETF IPS Working Group - draft-ietf-ips-iscsi-19.txt" 
::= { scsiTransportTypes 5 } 
      
scsiTransportSBP  OBJECT-IDENTITY 
   STATUS   current 
   DESCRIPTION 
      "This identity identifies the Serial Bus Protocol 3 (SBP-3)." 
   REFERENCE 
      "T10 - Serial Bus Protocol 3 (SBP-3)- #1467-D Rev [02a]."        
::= { scsiTransportTypes 6 } 
    
    
   --****************** Instance Table ******************************* 
scsiInstanceTable OBJECT-TYPE 
   SYNTAX      SEQUENCE OF ScsiInstanceEntry 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "A list of SCSI instances present on the system. 
     The SCSI Instance is the top-level entity, to which everything else 
     belongs. An SNMP agent could represent more than one instance if it 
     represents either a stack of devices, or virtual partitions of a 
     larger device, or a host running multiple SCSI implementations from 
     different vendors." 
::= { scsiGeneral 1 } 
    
scsiInstanceEntry OBJECT-TYPE 
   SYNTAX         ScsiInstanceEntry 
   MAX-ACCESS     not-accessible 
   STATUS         current 
   DESCRIPTION 
     "An entry (row) containing management information applicable to a 
     particular SCSI instance." 
   INDEX { scsiInstIndex } 
::= { scsiInstanceTable 1 } 
    
ScsiInstanceEntry ::= SEQUENCE { 
   scsiInstIndex              ScsiIndexValue, 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 24] 
                               SCSI MIB                  February 2003 
 
 
   scsiInstAlias              SnmpAdminString, 
   scsiInstSoftwareIndex      HrSWInstalledIndexOrZero, 
   scsiInstVendorVersion      SnmpAdminString, 
   scsiInstScsiNotificationsEnable  TruthValue 
} 
    
scsiInstIndex OBJECT-TYPE 
   SYNTAX      ScsiIndexValue 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "This object represents an arbitrary integer used to uniquely 
     identify a particular SCSI instance." 
::= { scsiInstanceEntry 1 } 
 
scsiInstAlias OBJECT-TYPE 
   SYNTAX      SnmpAdminString (SIZE(0..79)) 
   MAX-ACCESS  read-write 
   STATUS      current 
   DESCRIPTION 
     "This object represents an administrative string, configured by the 
     administrator. It can be a zero-length string." 
::= { scsiInstanceEntry 2 } 
    
scsiInstSoftwareIndex    OBJECT-TYPE 
   SYNTAX      HrSWInstalledIndexOrZero 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "If this management instance corresponds to an installed software 
     module, then this object's value is the value of the 
     hrSWInstalledIndex of that module.  If there is no correspondence 
     to an installed software module (or no module which has a 
     hrSWInstalledIndex value), then the value of this object is zero." 
   REFERENCE 
     "hrSWInstalledIndex is defined in the Host Resources MIB, RFC 
     2790." 
::= { scsiInstanceEntry 3 } 
    
scsiInstVendorVersion OBJECT-TYPE 
   SYNTAX      SnmpAdminString 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents a text string set by the manufacturer 
     describing the version of this instance.  The format of this string 
     is determined solely by the manufacturer, and is for informational 
     purposes only.  It is unrelated to the SCSI specification version 
     numbers." 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 25] 
                               SCSI MIB                  February 2003 
 
 
::= { scsiInstanceEntry 4 } 
    
scsiInstScsiNotificationsEnable  OBJECT-TYPE 
   SYNTAX      TruthValue 
   MAX-ACCESS  read-write 
   STATUS      current 
   DESCRIPTION 
     " This object indicates whether notifications defined in this 
      MIB will be sent." 
   DEFVAL { true } 
::= { scsiInstanceEntry 5 } 
    
    
--******************** Device Table ******************************* 
scsiDeviceTable  OBJECT-TYPE 
   SYNTAX           SEQUENCE OF ScsiDeviceEntry 
   MAX-ACCESS       not-accessible 
   STATUS           current 
   DESCRIPTION 
     "A list of SCSI Devices contained in each instance this agent is 
     reporting."  
::= { scsiGeneral 2 } 
    
scsiDeviceEntry OBJECT-TYPE 
   SYNTAX         ScsiDeviceEntry 
   MAX-ACCESS     not-accessible 
   STATUS         current 
   DESCRIPTION 
     "An entry (row) containing management information applicable to a 
     particular SCSI Device included in this SCSI manageable instance." 
   INDEX {scsiInstIndex, scsiDeviceIndex} 
::= { scsiDeviceTable 1 } 
    
ScsiDeviceEntry ::= SEQUENCE { 
   scsiDeviceIndex      ScsiIndexValue, 
   scsiDeviceAlias      SnmpAdminString, 
   scsiDeviceRole       BITS, 
   scsiDevicePortNumber Unsigned32, 
   scsiDeviceResets     Counter32 
} 
    
scsiDeviceIndex OBJECT-TYPE 
   SYNTAX      ScsiIndexValue 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     " This object is an arbitrary integer used to uniquely identify a 
     particular device within a particular SCSI instance." 
::= { scsiDeviceEntry 1 } 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 26] 
                               SCSI MIB                  February 2003 
 
 
    
scsiDeviceAlias OBJECT-TYPE 
   SYNTAX      SnmpAdminString (SIZE(0..79)) 
   MAX-ACCESS  read-write 
   STATUS      current 
   DESCRIPTION 
     "This object contains an administrative name for this device. If no 
     name is assigned, the value of this object is the zero-length 
     string." 
::= { scsiDeviceEntry 2 } 
    
scsiDeviceRole OBJECT-TYPE 
   SYNTAX      BITS { 
         target(0), 
         initiator(1) 
   } 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object determines whether this device is acting as an 
     initiator device, or as a target device or as both." 
::= { scsiDeviceEntry 3 } 
    
scsiDevicePortNumber OBJECT-TYPE 
   SYNTAX      Unsigned32 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of ports contained in this 
     device." 
::= { scsiDeviceEntry 4 } 
    
scsiDeviceResets     OBJECT-TYPE 
   SYNTAX      Counter32 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of times that this device has 
     reset." 
::= { scsiDeviceEntry 5 } 
    
    
--****************** Port Table *********************************** 
scsiPortTable  OBJECT-TYPE 
   SYNTAX  SEQUENCE OF ScsiPortEntry 
   MAX-ACCESS       not-accessible 
   STATUS           current 
   DESCRIPTION 
     "A list of SCSI Ports for each SCSI device in each instance." 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 27] 
                               SCSI MIB                  February 2003 
 
 
::= { scsiGeneral 3 } 
    
scsiPortEntry OBJECT-TYPE 
   SYNTAX            ScsiPortEntry 
   MAX-ACCESS        not-accessible 
   STATUS            current 
   DESCRIPTION 
     "An entry (row) containing management information applicable to a 
     particular SCSI port of a particular SCSI device in a particular 
     SCSI instance." 
   INDEX { scsiInstIndex, scsiDeviceIndex, scsiPortIndex } 
::= { scsiPortTable  1 } 
    
ScsiPortEntry ::= SEQUENCE { 
   scsiPortIndex        ScsiIndexValue, 
   scsiPortRole         BITS, 
   scsiPortTrnsptPtr    RowPointer, 
   scsiPortBusyStatuses Counter32 
} 
    
scsiPortIndex OBJECT-TYPE 
   SYNTAX      ScsiIndexValue 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "An arbitrary integer used to uniquely identify a particular port 
     of a given device within a particular SCSI instance." 
::= { scsiPortEntry 1 } 
    
scsiPortRole OBJECT-TYPE 
   SYNTAX      BITS { 
         target(0), 
         initiator(1) 
   } 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object indicates whether this port is acting as an initiator 
     port, or as a target port or as both." 
::= { scsiPortEntry 2 } 
    
scsiPortTrnsptPtr OBJECT-TYPE 
   SYNTAX      RowPointer 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object is a pointer to the corresponding row in the 
     scsiTrnsptTable. This row contains information on the transport 
     like transport type and port name." 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 28] 
                               SCSI MIB                  February 2003 
 
 
::= { scsiPortEntry 3 } 
    
scsiPortBusyStatuses OBJECT-TYPE 
   SYNTAX      Counter32 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of port busy status sent or 
     received by this port. Note: Initiator ports only receive busy 
     status and target ports only send busy status." 
::= { scsiPortEntry 4 } 
    
    
--******************** Table of supported transports *************** 
scsiTrnsptTable OBJECT-TYPE 
   SYNTAX      SEQUENCE OF ScsiTrnsptEntry 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "This table contains the device transport-specific information for 
     each transport connected to each device in scsiDeviceTable." 
::= { scsiGeneral 5 } 
    
scsiTrnsptEntry OBJECT-TYPE 
   SYNTAX      ScsiTrnsptEntry 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "An entry (row) containing parameters applicable to a transport 
     used by a particular device of a particular SCSI manageable 
     instance." 
   INDEX { scsiInstIndex, scsiDeviceIndex, scsiTrnsptIndex} 
::= { scsiTrnsptTable 1 } 
    
ScsiTrnsptEntry ::= SEQUENCE { 
   scsiTrnsptIndex   ScsiIndexValue, 
   scsiTrnsptType    AutonomousType, 
   scsiTrnsptPointer RowPointer, 
   scsiTrnsptDevName ScsiName 
} 
    
scsiTrnsptIndex OBJECT-TYPE 
   SYNTAX      ScsiIndexValue 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "An arbitrary integer used to uniquely identify a particular 
     transport within a given device within a particular SCSI instance." 
::= { scsiTrnsptEntry 1 } 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 29] 
                               SCSI MIB                  February 2003 
 
 
    
scsiTrnsptType OBJECT-TYPE 
   SYNTAX      AutonomousType 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object identifies the transport type of this row of the 
     transport table.  For example, if this object has the value 
     scsiTransportFCP, then the identified transport is FCP." 
::= { scsiTrnsptEntry 2 } 
    
scsiTrnsptPointer OBJECT-TYPE 
   SYNTAX      RowPointer 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents a pointer to a conceptual row in a 
     'transport' MIB allowing a manager to get useful information for 
     the transport described by this entry. 
     For example, if the transport of this device is iSCSI, this object 
     will point to the iSCSI Instance of the iSCSI MIB. 
     If there is no MIB for this transport, this object has the value 
     0.0." 
::= { scsiTrnsptEntry 3 } 
    
scsiTrnsptDevName OBJECT-TYPE 
   SYNTAX      ScsiName 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the name of this device in one of the 
     format(s) appropriate for this type of transport." 
::= { scsiTrnsptEntry 4 } 
    
    
--******************** Initiator Device Table ****************** 
scsiIntrDevTable  OBJECT-TYPE 
   SYNTAX           SEQUENCE OF ScsiIntrDevEntry 
   MAX-ACCESS       not-accessible 
   STATUS           current 
   DESCRIPTION 
     "This table contains information for each local initiator device in 
     each instance." 
::= { scsiInitiator 1} 
    
scsiIntrDevEntry OBJECT-TYPE 
   SYNTAX           ScsiIntrDevEntry 
   MAX-ACCESS       not-accessible 
   STATUS           current 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 30] 
                               SCSI MIB                  February 2003 
 
 
   DESCRIPTION 
     "An entry (row) containing information applicable to an initiator 
     device within a particular SCSI instance." 
   INDEX { scsiInstIndex, scsiDeviceIndex } 
::= { scsiIntrDevTable  1 } 
    
ScsiIntrDevEntry ::= SEQUENCE { 
   scsiIntrDevTgtAccessMode   INTEGER, 
   scsiIntrDevOutResets       Counter32 
} 
    
scsiIntrDevTgtAccessMode   OBJECT-TYPE 
   SYNTAX      INTEGER { 
         unknown(1), 
         autoEnable(2), 
         manualEnable(3) 
   } 
   MAX-ACCESS  read-write 
   STATUS      current 
   DESCRIPTION 
     "This object controls whether a discovered target is immediately 
     authorized or not: 
         -  autoEnable (2) means that when an initiator discovers a 
         target, it can use it immediately,  
         - manualEnable (3) means that the initiator must wait for an 
         operator to set scsiIntrDscTgtConfigured = true before it is 
         authorized." 
::= { scsiIntrDevEntry 1 } 
    
scsiIntrDevOutResets OBJECT-TYPE 
   SYNTAX      Counter32 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of resets sent by this 
     initiator."  
::= { scsiIntrDevEntry 2 } 
     
    
-- The following section describes managed objects related to  
-- initiator ports. 
 
scsiIntrPortTable OBJECT-TYPE 
   SYNTAX          SEQUENCE OF ScsiIntrPortEntry 
   MAX-ACCESS      not-accessible 
   STATUS          current 
   DESCRIPTION 
     "This table contains all the initiator ports for each local SCSI 
     Initiator or Target/Initiator devices in each SCSI instance." 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 31] 
                               SCSI MIB                  February 2003 
 
 
::= { scsiInitiator 3 } 
    
scsiIntrPortEntry OBJECT-TYPE 
   SYNTAX          ScsiIntrPortEntry 
   MAX-ACCESS      not-accessible 
   STATUS          current 
   DESCRIPTION 
     "An entry (row) containing information applicable to a particular 
     initiator port of a particular device within a SCSI instance. " 
   INDEX { scsiInstIndex, scsiDeviceIndex, scsiPortIndex } 
::= { scsiIntrPortTable 1 } 
    
ScsiIntrPortEntry ::= SEQUENCE { 
   scsiIntrPortName           ScsiName, 
   scsiIntrPortIdentifier     ScsiIdentifier, 
   scsiIntrPortOutCommands    Counter32, 
   scsiIntrPortWrittenMegaBytes  Counter32, 
   scsiIntrPortReadMegaBytes  Counter32, 
   scsiIntrPortHSOutCommands  Counter64 
} 
    
scsiIntrPortName OBJECT-TYPE 
   SYNTAX      ScsiName 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the name of the port assigned for use by 
     the SCSI protocol. The format will depend on the type of transport 
     this port is using." 
::= { scsiIntrPortEntry 1 } 
    
scsiIntrPortIdentifier OBJECT-TYPE 
   SYNTAX      ScsiIdentifier 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the identifier of the port in one of the 
     format(s) appropriate for the type of transport in use." 
::= { scsiIntrPortEntry 2 } 
    
scsiIntrPortOutCommands OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS       "commands" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of commands sent by this 
     initiator port." 
::= { scsiIntrPortEntry 3 } 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 32] 
                               SCSI MIB                  February 2003 
 
 
    
scsiIntrPortWrittenMegaBytes  OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS       "Megabytes" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the amount of data in Megabytes sent by 
     this initiator port." 
::= { scsiIntrPortEntry 4 } 
    
scsiIntrPortReadMegaBytes  OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS       "Megabytes" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the amount of data in Megabytes received by 
     this initiator port." 
::= { scsiIntrPortEntry 5 } 
    
scsiIntrPortHSOutCommands  OBJECT-TYPE 
   SYNTAX      Counter64 
   UNITS       "commands" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of commands sent by this 
     initiator device. This object provides support for systems which 
     can quickly generate a large number of commands because they run at 
     high speed." 
::= { scsiIntrPortEntry 6 } 
    
    
--******************** Discovered Target group ****************** 
scsiRemoteTarget OBJECT IDENTIFIER ::= { scsiInitiator 4 } 
    
-- Targets discovered or authorized to attach each of the initiator  
-- ports of each initiator device of each instance.  
    
scsiDscTgtTable OBJECT-TYPE 
   SYNTAX      SEQUENCE OF ScsiDscTgtEntry 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "This table includes all the remote (not in the local system) 
     target ports that are authorized to attach to each local initiator 
     port of this SCSI instance." 
::= { scsiRemoteTarget 1 } 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 33] 
                               SCSI MIB                  February 2003 
 
 
    
scsiDscTgtEntry OBJECT-TYPE 
   SYNTAX         ScsiDscTgtEntry 
   MAX-ACCESS     not-accessible 
   STATUS         current 
   DESCRIPTION 
     "Each entry (row) contains information about the target device or 
     port to which this initiator port (or all initiator ports in the 
     initiator entry indexed by scsiInstIndex, scsiDeviceIndex) will 
     attempt to attach.  The entry is either for all local ports (if 
     scsiDscTgtIntrPortIndex is zero), or only for the specific 
     initiator port identified by scsiDscTgtIntrPortIndex. Note that if 
     an entry in this table is deleted, any corresponding entries in the 
     scsiDscLunsTable must be deleted as well." 
   INDEX { scsiInstIndex, scsiDeviceIndex, scsiDscTgtIntrPortIndex, 
   scsiDscTgtIndex } 
::= { scsiDscTgtTable 1 } 
    
ScsiDscTgtEntry ::= SEQUENCE { 
   scsiDscTgtIntrPortIndex ScsiPortIndexValueOrZero, 
   scsiDscTgtIndex         ScsiIndexValue, 
   scsiDscTgtDevOrPort     ScsiDeviceOrPort, 
   scsiDscTgtName          ScsiName, 
   scsiDscTgtConfigured    TruthValue, 
   scsiDscTgtDiscovered    TruthValue, 
   scsiDscTgtInCommands    Counter32, 
   scsiDscTgtWrittenMegaBytes Counter32, 
   scsiDscTgtReadMegaBytes Counter32, 
   scsiDscTgtHSInCommands  Counter64, 
   scsiDscTgtLastCreation  TimeStamp, 
   scsiDscTgtRowStatus     RowStatus 
} 
    
scsiDscTgtIntrPortIndex OBJECT-TYPE 
   SYNTAX      ScsiPortIndexValueOrZero 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "This object relates to a particular local device within a 
     particular SCSI instance and specifies: 
     - the index of the local SCSI initiator port, 
     - or zero, if this entry refers to the local device and therefore 
     refers to all the local initiator ports." 
::= { scsiDscTgtEntry 1 } 
    
scsiDscTgtIndex OBJECT-TYPE 
   SYNTAX      ScsiIndexValue 
   MAX-ACCESS  not-accessible 
   STATUS      current 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 34] 
                               SCSI MIB                  February 2003 
 
 
   DESCRIPTION 
     "This object is an arbitrary integer used to uniquely identify a 
     particular target either discovered by, or configured for use with, 
     one or more ports scsiDscTgtName of a particular device within a 
     particular SCSI instance. "  
::= { scsiDscTgtEntry 2 } 
    
scsiDscTgtDevOrPort OBJECT-TYPE 
   SYNTAX      ScsiDeviceOrPort 
   MAX-ACCESS  read-create 
   STATUS      current 
   DESCRIPTION 
     "This object indicates whether this entry describes a configured 
     target device name (and applies to all ports on the identified 
     target) or an individual target port." 
::= { scsiDscTgtEntry 3 } 
    
scsiDscTgtName OBJECT-TYPE 
   SYNTAX      ScsiName 
   MAX-ACCESS  read-create 
   STATUS      current 
   DESCRIPTION 
     "This object represents the name of this configured or discovered 
     target device or port depending on the value of 
     scsiDscTgtDevOrPort."  
   ::= { scsiDscTgtEntry 4 } 
    
scsiDscTgtConfigured OBJECT-TYPE 
   SYNTAX      TruthValue 
   MAX-ACCESS  read-create 
   STATUS      current 
   DESCRIPTION 
     "This object means: 
      -true(1): this entry has been configured by an administrator 
      -false(2): this entry has been added from a discovery mechanism 
     (eg. SendTargets, SLP, iSNS). 
     An administrator can modify this value from false to true." 
   DEFVAL { true } 
::= { scsiDscTgtEntry 5 } 
    
scsiDscTgtDiscovered OBJECT-TYPE 
   SYNTAX      TruthValue 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object means: 
      -true(1): this entry has been discovered by the SCSI instance as 
      result of an automatic discovery process. 
      -false(2):this entry has been added by manual configuration. 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 35] 
                               SCSI MIB                  February 2003 
 
 
     This entry is read-only because an administrator cannot change it. 
     Note that it is an implementation decision to determine how long to 
     retain a row with configured=false, such as when the target is no 
     longer visible/accessible to the local initiator." 
::= { scsiDscTgtEntry 6 } 
    
scsiDscTgtInCommands OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS       "commands" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of commands received from this 
     target port or device." 
::= { scsiDscTgtEntry 7 } 
    
scsiDscTgtWrittenMegaBytes OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS       "Megabytes" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the amount of megabytes of data sent as the 
     result of WRITE commands to this target port or device." 
::= { scsiDscTgtEntry 8 } 
    
scsiDscTgtReadMegaBytes OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS       "Megabytes" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the amount of megabytes received as the 
     result of READ commands to this target port or device." 
::= { scsiDscTgtEntry 9 } 
    
scsiDscTgtHSInCommands OBJECT-TYPE 
   SYNTAX      Counter64 
   UNITS       "commands" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of commands received by this 
     target port or device. This object provides support for systems 
     which can quickly generate a large number of commands because they 
     run at high speed." 
::= { scsiDscTgtEntry 10 } 
    
scsiDscTgtLastCreation OBJECT-TYPE 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 36] 
                               SCSI MIB                  February 2003 
 
 
   SYNTAX      TimeStamp 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the value of sysUpTime when this row was 
     created." 
::= { scsiDscTgtEntry 11 } 
    
scsiDscTgtRowStatus OBJECT-TYPE 
   SYNTAX      RowStatus 
   MAX-ACCESS  read-create 
   STATUS      current 
   DESCRIPTION 
     "This object allows an administrator to configure dynamically a new 
     entry in this table via SNMP or eventually delete it. 
     An administrator is not allowed to delete an entry for which the 
     value of the object scsiIntrDscTgtDiscovered is equal to true.  
     Note that when an entry in this table is deleted, then any 
     corresponding entries in the scsiDscLunsTable must also be 
     automatically deleted. " 
::= { scsiDscTgtEntry 12 } 
    
    
--********************** LUNs discovered ************************** 
scsiDscLunTable OBJECT-TYPE 
   SYNTAX          SEQUENCE OF ScsiDscLunEntry 
   MAX-ACCESS      not-accessible 
   STATUS          current 
   DESCRIPTION 
     "This table includes all the remote (not in the local system) 
     logical unit numbers (LUNs) discovered via each local initiator 
     port of each local device within a particular SCSI instance." 
::= { scsiRemoteTarget 2 } 
    
scsiDscLunEntry OBJECT-TYPE 
   SYNTAX          ScsiDscLunEntry 
   MAX-ACCESS      not-accessible 
   STATUS          current 
   DESCRIPTION 
     "An entry (row) represents a discovered LUN at a particular SCSI 
     target device (scsiDscTgtIndex), where the LUN was discovered by a 
     particular local initiator device within a particular SCSI 
     instance, possibly via a particular local initiator port. 
     Note that when an entry in the scsiDscTgtTable is deleted, all 
     corresponding entries in this table should automatically be 
     deleted." 
   INDEX { scsiInstIndex, scsiDeviceIndex, scsiDscTgtIntrPortIndex,   
   scsiDscTgtIndex, scsiDscLunIndex } 
::= { scsiDscLunTable 1 } 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 37] 
                               SCSI MIB                  February 2003 
 
 
    
ScsiDscLunEntry ::= SEQUENCE { 
   scsiDscLunIndex   ScsiIndexValue, 
   scsiDscLunLun     ScsiLUN   
} 
    
scsiDscLunIndex OBJECT-TYPE 
   SYNTAX      ScsiIndexValue 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "This object is an arbitrary integer used to uniquely identify a 
     particular LUN discovered by a particular SCSI initiator port or a 
     particular SCSI initiator device within a particular SCSI instance. 
     Entries in the scsiDscLunIdTable are associated with a LUN by 
     having the value of this object in their INDEX." 
::= { scsiDscLunEntry 1 } 
    
scsiDscLunLun  OBJECT-TYPE 
   SYNTAX      ScsiLUN 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object contains the Logical Unit Number (LUN) of the 
     discovered logical unit." 
::= { scsiDscLunEntry 2 } 
    
    
--******************** LU Identifiers discovered ****************** 
scsiDscLunIdTable OBJECT-TYPE 
   SYNTAX          SEQUENCE OF ScsiDscLunIdEntry 
   MAX-ACCESS      not-accessible 
   STATUS          current 
   DESCRIPTION 
     "This table includes all the known LU Identifiers of the remote 
     (not in the local system) logical units discovered via each local 
     initiator port or device of this SCSI instance." 
::= { scsiRemoteTarget 3 } 
    
scsiDscLunIdEntry OBJECT-TYPE 
   SYNTAX           ScsiDscLunIdEntry 
   MAX-ACCESS       not-accessible 
   STATUS           current 
   DESCRIPTION 
     "An entry (row) represents the LU Identifier of a discovered LUN at 
     a particular SCSI target device (scsiDscTgtIndex), where the LUN 
     was discovered by a particular local initiator device within a 
     particular SCSI instance, possibly via a particular local initiator 
     port." 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 38] 
                               SCSI MIB                  February 2003 
 
 
   INDEX { scsiInstIndex, scsiDeviceIndex, scsiDscTgtIntrPortIndex, 
   scsiDscTgtIndex, scsiDscLunIndex, scsiDscLunIdIndex } 
::= { scsiDscLunIdTable 1 } 
    
ScsiDscLunIdEntry ::= SEQUENCE { 
   scsiDscLunIdIndex       ScsiIndexValue, 
   scsiDscLunIdCodeSet     ScsiIdCodeSet, 
   scsiDscLunIdAssociation ScsiIdAssociation, 
   scsiDscLunIdType        ScsiIdType, 
   scsiDscLunIdValue       ScsiIdValue 
} 
    
scsiDscLunIdIndex OBJECT-TYPE 
   SYNTAX      ScsiIndexValue 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "This object is an arbitrary integer used to uniquely identify a 
     particular LUN Identifier discovered by each SCSI initiator device 
     or particular SCSI initiator port within a particular SCSI 
     instance." 
::= { scsiDscLunIdEntry 1 } 
    
scsiDscLunIdCodeSet OBJECT-TYPE 
   SYNTAX          ScsiIdCodeSet 
   MAX-ACCESS      read-only 
   STATUS          current 
   DESCRIPTION 
     "This object specifies the code set in use with this identifier. 
     The value is represented in the same format as is contained in the 
     identifier's Identification Descriptor within the Logical Unit's 
     Device Identification Page." 
   REFERENCE  
     "ANSI - SCSI Primary Commands - 2 (SPC-2),Revision 20,  Chapter 8: 
     section 8.4.4, page 210 Vital Product Data Parameters [16]" 
::= { scsiDscLunIdEntry 2 } 
    
scsiDscLunIdAssociation OBJECT-TYPE 
   SYNTAX          ScsiIdAssociation  
   MAX-ACCESS      read-only 
   STATUS          current 
   DESCRIPTION 
     "This object specifies what the identifier is associated with (e.g, 
     with the addressed physical/logical device or with a particular 
     port).  The value is represented in the same format as is contained 
     in the identifier's Identification Descriptor within the Logical 
     Unit's Device Identification Page." 
   REFERENCE  

 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 39] 
                               SCSI MIB                  February 2003 
 
 
     "ANSI - SCSI Primary Commands - 2 (SPC-2), Revision 20, Chapter 8: 
     section 8.4.4, page 210 Vital Product Data Parameters [16]" 
::= { scsiDscLunIdEntry 3 } 
    
scsiDscLunIdType OBJECT-TYPE 
   SYNTAX          ScsiIdType 
   MAX-ACCESS      read-only 
   STATUS          current 
   DESCRIPTION 
     "This object specifies the type of the identifier.  
     The value is represented in the same format as is contained in the 
     identifier's Identification Descriptor within the Logical Unit's 
     Device Identification Page." 
   REFERENCE  
     "ANSI - SCSI Primary Commands - 2 (SPC-2), Revision 20, Chapter 8: 
     section 8.4.4, page 210 Vital Product Data Parameters  [16]" 
::= { scsiDscLunIdEntry 4 } 
    
scsiDscLunIdValue OBJECT-TYPE 
   SYNTAX         ScsiIdValue  
   MAX-ACCESS     read-only 
   STATUS         current 
   DESCRIPTION 
     "This object represents the actual value of this identifier. The 
     format is defined by the objects scsiDscLunIdCodeSet, 
     scsiDscLunIdAssociation, scsiDscLunIdType. 
     The value is represented in the same format as is contained in the 
     identifier's Identification Descriptor within the Logical Unit's 
     Device Identification Page." 
   REFERENCE  
     "ANSI - SCSI Primary Commands - 2 (SPC-2), Chapter 8: section 
     8.4.4, page 210 Vital Product Data Parameters  [16]" 
::= { scsiDscLunIdEntry 5 } 
 
--******* Table of Targets Attached to local Initiator Ports ******* 
scsiAttTgtPortTable OBJECT-TYPE 
   SYNTAX   SEQUENCE OF ScsiAttTgtPortEntry 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "This table includes all the remote (not in the local system) 
     target ports that are currently attached to each local initiator 
     port of this SCSI instance." 
::= { scsiRemoteTarget 6 } 
    
scsiAttTgtPortEntry OBJECT-TYPE 
   SYNTAX           ScsiAttTgtPortEntry 
   MAX-ACCESS       not-accessible 
   STATUS           current 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 40] 
                               SCSI MIB                  February 2003 
 
 
   DESCRIPTION 
     "An entry (row) represents a remote target port 
     (scsiAttTgtPortIndex) currently attached to a particular initiator 
     port (scsiPortIndex) of a particular SCSI initiator device within a 
     particular SCSI instance." 
   INDEX { scsiInstIndex, scsiDeviceIndex, scsiPortIndex, 
   scsiAttTgtPortIndex } 
::= { scsiAttTgtPortTable 1 } 
    
ScsiAttTgtPortEntry ::= SEQUENCE { 
   scsiAttTgtPortIndex     ScsiIndexValue, 
   scsiAttTgtPortDscTgtIdx ScsiIndexValueOrZero, 
   scsiAttTgtPortName      ScsiName, 
   scsiAttTgtPortIdentifier   ScsiIdentifier 
} 
    
scsiAttTgtPortIndex  OBJECT-TYPE 
   SYNTAX      ScsiIndexValue 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "An arbitrary integer used to uniquely identify a particular target 
     currently attached to a particular SCSI initiator port of a 
     particular SCSI initiator device within a particular SCSI 
     instance." 
::= { scsiAttTgtPortEntry 1 } 
    
scsiAttTgtPortDscTgtIdx OBJECT-TYPE 
   SYNTAX      ScsiIndexValueOrZero 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object contains the value of the scsiAttTgtPortIndex index 
     variable for the row in the scsiDscTgtTable representing this 
     currently attached target port.  If the currently attached target 
     port is not represented in the scsiDscTgtTable, then the value of 
     this object is zero." 
::= { scsiAttTgtPortEntry 2 } 
    
scsiAttTgtPortName OBJECT-TYPE 
   SYNTAX      ScsiName 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object contains the name of the attached target port." 
::= { scsiAttTgtPortEntry 3 } 
    
scsiAttTgtPortIdentifier OBJECT-TYPE 
   SYNTAX      ScsiIdentifier 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 41] 
                               SCSI MIB                  February 2003 
 
 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object contains the identifier of the attached target port." 
::= { scsiAttTgtPortEntry 4 } 
    
    
-- ******************************************************************* 
-- ***** Table of targets for target SCSI devices 
--  
scsiTgtDevTable OBJECT-TYPE 
   SYNTAX   SEQUENCE OF ScsiTgtDevEntry 
   MAX-ACCESS      not-accessible 
   STATUS          current 
   DESCRIPTION 
     "This table contains information about each local target device."  
::= { scsiTarget 1 } 
    
scsiTgtDevEntry OBJECT-TYPE 
   SYNTAX           ScsiTgtDevEntry 
   MAX-ACCESS       not-accessible 
   STATUS           current 
   DESCRIPTION 
     "An entry (row) containing information applicable to a particular 
     local target device within a particular SCSI instance. " 
   INDEX { scsiInstIndex, scsiDeviceIndex } 
::= { scsiTgtDevTable 1 } 
    
ScsiTgtDevEntry ::= SEQUENCE { 
   scsiTgtDevNumberOfLUs   Gauge32, 
   scsiTgtDeviceStatus     INTEGER, 
   scsiTgtDevNonAccessibleLUs Gauge32 
} 
    
scsiTgtDevNumberOfLUs OBJECT-TYPE 
   SYNTAX      Gauge32 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object is the number of Logical Units accessible via this 
     local target device." 
::= { scsiTgtDevEntry 1 } 
    
scsiTgtDeviceStatus  OBJECT-TYPE 
   SYNTAX      INTEGER { 
      unknown(1), 
      available(2), 
      broken(3), 
      readying(4), 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 42] 
                               SCSI MIB                  February 2003 
 
 
      abnormal(5), 
      nonAddrFailure(6), 
      nonAddrFailReadying(7), 
      nonAddrFailAbnormal(8) 
   } 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the status of this SCSI device, summarizing 
     the state of both the addressable devices (i.e., the logical units) 
     and the non-addressable devices within this SCSI device: 
          - unknown(1): This value is used when the status cannot be 
          determined 
          - available(2): All addressable and non-addressable devices 
          within the SCSI device are fully operational (i.e., no logical 
          units have an abnormal status). 
          - broken(3): The SCSI device is not operational and cannot be 
          made operational without external intervention. 
          - readying(4): One or more logical units within the SCSI 
          device are being initialized and access to the SCSI device is 
          temporarily limited (i.e., one or more of the logical unit 
          have a readying status). 
          - abnormal(5): One or more addressable devices within the SCSI 
          device are indicating a status other than available; 
          nevertheless, the SCSI device is operational (i.e., one or 
          more of the logical units have an abnormal status). 
          - nonAddrFailure(6): One or more non-addressable devices 
          within the SCSI device have failed; nevertheless, the SCSI 
          device is operational (i.e., no logical units have an abnormal 
          or readying status). 
          - nonAddrFailReadying(7): One or more non-addressable devices 
          within the SCSI device have failed; nevertheless,one or more 
          logical units within the SCSI device are being initialized and 
          access to the SCSI device is temporarily limited. 
          - nonAddrFailAbnormal(8): One or more non-addressable devices 
          within the SCSI device have failed and one or more addressable 
          devices within the SCSI device are indicating a status other 
          than available however the SCSI device is operational. 
     " 
   REFERENCE  
     "SCSI Controller Commands-2 (SCC-2) standard NCITS.318-1998 
     6.3.1.8 REPORT STATES service action" 
::= { scsiTgtDevEntry 2} 
    
scsiTgtDevNonAccessibleLUs OBJECT-TYPE 
   SYNTAX      Gauge32 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 43] 
                               SCSI MIB                  February 2003 
 
 
     "This object is the number of Logical Units existing but not 
     currently accessible via this local target device." 
::= { scsiTgtDevEntry 3 } 
    
--******************** Target Port Table *************************** 
scsiTgtPortTable OBJECT-TYPE 
   SYNTAX   SEQUENCE OF ScsiTgtPortEntry 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "This table includes all the local target ports of all the local 
     target devices." 
::= { scsiTarget 2 } 
    
scsiTgtPortEntry OBJECT-TYPE 
   SYNTAX   ScsiTgtPortEntry 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "An entry (row) containing information applicable to a particular 
     local target port of a particular local target device within a 
     particular SCSI instance. " 
   INDEX { scsiInstIndex, scsiDeviceIndex, scsiPortIndex} 
::= { scsiTgtPortTable 1 } 
    
ScsiTgtPortEntry ::= SEQUENCE { 
   scsiTgtPortName         ScsiName, 
   scsiTgtPortIdentifier   ScsiIdentifier, 
   scsiTgtPortInCommands   Counter32, 
   scsiTgtPortWrittenMegaBytes   Counter32, 
   scsiTgtPortReadMegaBytes   Counter32, 
   scsiTgtPortHSInCommands Counter64 
} 
    
scsiTgtPortName OBJECT-TYPE 
   SYNTAX      ScsiName 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the name of the port assigned for use in 
     the SCSI protocol." 
::= { scsiTgtPortEntry 1 } 
    
scsiTgtPortIdentifier OBJECT-TYPE 
   SYNTAX      ScsiIdentifier 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 

 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 44] 
                               SCSI MIB                  February 2003 
 
 
     "This object represents the identifier of the port in one of the 
     format(s) appropriate for the type of transport." 
::= { scsiTgtPortEntry 2 } 
    
scsiTgtPortInCommands OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS    "commands" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of commands received by this 
     target port." 
::= { scsiTgtPortEntry 3 } 
          
scsiTgtPortWrittenMegaBytes OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS    "Megabytes" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the amount of data written in Megabytes by 
     this target port." 
::= { scsiTgtPortEntry 4 } 
    
scsiTgtPortReadMegaBytes OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS    "Megabytes" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the amount of data read in Megabytes by 
     this target port." 
::= { scsiTgtPortEntry 5 } 
    
scsiTgtPortHSInCommands OBJECT-TYPE 
   SYNTAX      Counter64 
   UNITS    "commands" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of commands received. This 
     object provides support for systems that can quickly generate a 
     large number of commands because they run at high speed." 
::= { scsiTgtPortEntry 6 } 
 
scsiRemoteInitiators OBJECT IDENTIFIER ::= { scsiTarget 3 } 
    
-- The scsiAuthorizedIntrTable contains the list of remote initiator  
-- ports that are authorized to be attached specific target ports  
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 45] 
                               SCSI MIB                  February 2003 
 
 
-- and on which an administrator would like to keep permanent  
-- information and long term statistics even when not currently  
-- attached. 
    
scsiAuthorizedIntrTable OBJECT-TYPE 
   SYNTAX   SEQUENCE OF ScsiAuthorizedIntrEntry 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "This table includes all the authorized initiator devices or ports 
     that may attach a target device (ScsiAuthIntrTgtPortIndex = 0) or 
     port (ScsiAuthIntrTgtPortIndex different than 0) of the local SCSI 
     instance. Statistics are kept for each such authorization; thus, 
     the authorizations should be configured in the manner, which will 
     cause the desired set of statistics to be collected and that will 
     determine the correct LUN map." 
::= { scsiRemoteInitiators 1 } 
    
scsiAuthorizedIntrEntry OBJECT-TYPE 
   SYNTAX      ScsiAuthorizedIntrEntry 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "An entry (row) represents a remote initiator port or remote 
     initiator device that may attach to the local target port or device 
     within a particular SCSI instance." 
   INDEX { scsiInstIndex, scsiDeviceIndex, scsiAuthIntrTgtPortIndex, 
   scsiAuthIntrIndex } 
::= { scsiAuthorizedIntrTable 1 } 
    
ScsiAuthorizedIntrEntry ::= SEQUENCE { 
   scsiAuthIntrTgtPortIndex   ScsiPortIndexValueOrZero, 
   scsiAuthIntrIndex          ScsiIndexValue, 
   scsiAuthIntrDevOrPort      ScsiDeviceOrPort, 
   scsiAuthIntrName           ScsiName, 
   scsiAuthIntrLunMapIndex    ScsiIndexValueOrZero, 
   scsiAuthIntrAttachedTimes  Counter32, 
   scsiAuthIntrOutCommands    Counter32, 
   scsiAuthIntrReadMegaBytes  Counter32, 
   scsiAuthIntrWrittenMegaBytes  Counter32, 
   scsiAuthIntrHSOutCommands  Counter64, 
   scsiAuthIntrLastCreation   TimeStamp, 
   scsiAuthIntrRowStatus      RowStatus 
} 
    
    
scsiAuthIntrTgtPortIndex OBJECT-TYPE 
   SYNTAX      ScsiPortIndexValueOrZero 
   MAX-ACCESS  not-accessible 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 46] 
                               SCSI MIB                  February 2003 
 
 
   STATUS      current 
   DESCRIPTION 
     "This object contains either the index of the port, or zero to 
     indicate any port, on the particular local target device." 
::= { scsiAuthorizedIntrEntry 1 } 
    
scsiAuthIntrIndex OBJECT-TYPE 
   SYNTAX      ScsiIndexValue 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "This object is an arbitrary integer used to uniquely identify a 
     SCSI initiator which is authorized to attach to a particular local 
     target device or port of a particular SCSI instance." 
::= { scsiAuthorizedIntrEntry 2 } 
    
scsiAuthIntrDevOrPort OBJECT-TYPE 
   SYNTAX      ScsiDeviceOrPort 
   MAX-ACCESS  read-create 
   STATUS      current 
   DESCRIPTION 
     "This object specifies whether this entry refers to a remote 
     initiator port or to a device. 
     A value of device(1) means that the authorized remote initiator is 
     a device and includes all of its ports. 
     A value of port(2) means that the authorized remote initiator is a 
     port." 
::= { scsiAuthorizedIntrEntry 3 } 
    
scsiAuthIntrName OBJECT-TYPE 
   SYNTAX      ScsiName 
   MAX-ACCESS  read-create 
   STATUS      current 
   DESCRIPTION 
     "This object represents the name of the remote initiator device or 
     port authorized by this row." 
::= { scsiAuthorizedIntrEntry 4 } 
    
scsiAuthIntrLunMapIndex OBJECT-TYPE 
   SYNTAX      ScsiIndexValueOrZero 
   MAX-ACCESS  read-create 
   STATUS      current 
   DESCRIPTION 
     "This object identifies the set of entries in the scsiLunMapTable 
     for which scsiLunMapIndex has the same value as the value of this 
     object.  The identified set of entries constitute the LUN map to be 
     used for accessing logical units when the remote initiator port or 
     device corresponding to this entry is attached to any local target 
     port or device corresponding to this entry. 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 47] 
                               SCSI MIB                  February 2003 
 
 
     Note that this object has a value of zero if this entry should use 
     the default LUN map." 
::= { scsiAuthorizedIntrEntry 5 } 
    
scsiAuthIntrAttachedTimes  OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS    "Times" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object indicates the number of times that this remote 
     initiator has transitioned from unattached to attached to this 
     local target device or port." 
::= { scsiAuthorizedIntrEntry 6 }    
       
scsiAuthIntrOutCommands OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS    "commands" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object indicates the number of commands that the remote 
     initiator corresponding to this entry has sent to the local target 
     device or port corresponding to this entry." 
::= { scsiAuthorizedIntrEntry 7 } 
       
scsiAuthIntrReadMegaBytes  OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS    "Megabytes" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object indicates the amount of data in Megabytes that the 
     remote initiator corresponding to this entry has read from the 
     local target device or port corresponding to this entry." 
::= { scsiAuthorizedIntrEntry 8 } 
    
scsiAuthIntrWrittenMegaBytes  OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS    "Megabytes" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object indicates the amount of data in Megabytes that the 
     remote initiator corresponding to this entry has written to the 
     local target device or port corresponding to this entry." 
::= { scsiAuthorizedIntrEntry 9} 
    
scsiAuthIntrHSOutCommands  OBJECT-TYPE 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 48] 
                               SCSI MIB                  February 2003 
 
 
   SYNTAX      Counter64 
   UNITS    "commands" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of commands sent by the remote 
     initiator corresponding to this entry to the local target device or 
     port corresponding to this entry. This object provides support for 
     systems which can quickly generate a large number of commands 
     because they run at high speed." 
::= { scsiAuthorizedIntrEntry 10 } 
    
scsiAuthIntrLastCreation OBJECT-TYPE 
   SYNTAX      TimeStamp 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object indicates the value of sysUpTime when this row was 
     last created." 
::= { scsiAuthorizedIntrEntry 11 } 
      
scsiAuthIntrRowStatus OBJECT-TYPE 
   SYNTAX      RowStatus 
   MAX-ACCESS  read-create 
   STATUS      current 
   DESCRIPTION 
     "This object allows an administrator to create or delete this 
     entry." 
::= { scsiAuthorizedIntrEntry 12 } 
    
    
--****** Table of Initiators Attached to local Target Ports ******** 
scsiAttIntrPortTable OBJECT-TYPE 
   SYNTAX  SEQUENCE OF ScsiAttIntrPortEntry 
   MAX-ACCESS      not-accessible 
   STATUS          current 
   DESCRIPTION 
     "This table includes all the remote initiator ports that are 
     currently attached to a local target port of all local devices 
     within all SCSI instances." 
::= { scsiRemoteInitiators 2 } 
    
scsiAttIntrPortEntry OBJECT-TYPE 
   SYNTAX          ScsiAttIntrPortEntry 
   MAX-ACCESS      not-accessible 
   STATUS          current 
   DESCRIPTION 


 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 49] 
                               SCSI MIB                  February 2003 
 
 
     "An entry (row) represents a remote initiator currently attached to 
     a particular local target port of a particular target device of a 
     particular SCSI instance." 
   INDEX { scsiInstIndex, scsiDeviceIndex, scsiPortIndex, 
   scsiAttIntrPortIndex } 
::= { scsiAttIntrPortTable 1 } 
    
ScsiAttIntrPortEntry ::= SEQUENCE { 
   scsiAttIntrPortIndex    ScsiIndexValue, 
   scsiAttIntrPortAuthIntrIdx ScsiIndexValueOrZero, 
   scsiAttIntrPortName     ScsiName, 
   scsiAttIntrPortId    ScsiIdentifier 
} 
    
scsiAttIntrPortIndex OBJECT-TYPE 
   SYNTAX      ScsiIndexValue 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "This object represents an arbitrary integer used to uniquely 
     identify a particular attached remote initiator port to a 
     particular target port within a particular SCSI target device 
     within a particular SCSI instance." 
::= { scsiAttIntrPortEntry 1 } 
    
scsiAttIntrPortAuthIntrIdx OBJECT-TYPE 
   SYNTAX      ScsiIndexValueOrZero 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object is the corresponding index in the 
     scsiAuthorizedIntrTable for this current attached remote initiator 
     or zero if this remote attached initiator is not configured in that 
     table." 
::= { scsiAttIntrPortEntry 2 } 
    
scsiAttIntrPortName OBJECT-TYPE 
   SYNTAX      ScsiName 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the name of the remote initiator attached 
     to this local target port." 
::= { scsiAttIntrPortEntry 3 } 
    
scsiAttIntrPortId OBJECT-TYPE 
   SYNTAX      ScsiIdentifier 
   MAX-ACCESS  read-only 
   STATUS      current 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 50] 
                               SCSI MIB                  February 2003 
 
 
   DESCRIPTION 
     "This object represents the identifier of the remote initiator 
     attached to this local target port." 
::= { scsiAttIntrPortEntry 4 } 
    
--****************** Managed Objects regarding logical units ******* 
scsiLuTable OBJECT-TYPE 
   SYNTAX   SEQUENCE OF ScsiLuEntry 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "This table contains the logical units exposed by local target 
     devices. 
     It includes attributes for the WWN, scsiLuVendorId, 
     scsiLuProductId, and scsiLuRevisionId, which may also appear in the 
     scsiLuIdTable. If an implementation exposes a WWN as a LuIdTable 
     entry, it must match the scsiLuWwnName in this table.  If an 
     implementation exposes a (vendor, product, revision) identifier as 
     an LuIdTable entry, each of these fields must match the 
     scsiLuVendorId, scsiLuProductId, and scsiLuRevisionId attributes in 
     this table." 
::= { scsiLogicalUnit 1 } 
    
scsiLuEntry OBJECT-TYPE 
   SYNTAX      ScsiLuEntry 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "An entry (row) contains information applicable to a particular 
     logical unit of a particular local target device within a 
     particular SCSI instance. " 
   INDEX { scsiInstIndex, scsiDeviceIndex, scsiLuIndex} 
::= { scsiLuTable 1 } 
    
ScsiLuEntry ::= SEQUENCE { 
   scsiLuIndex          ScsiIndexValue, 
   scsiLuDefaultLun     ScsiLUN, 
   scsiLuWwnName        ScsiNameIdOrZero, 
   scsiLuVendorId       SnmpAdminString, 
   scsiLuProductId      SnmpAdminString, 
   scsiLuRevisionId     SnmpAdminString, 
   scsiLuPeripheralType Unsigned32, 
   scsiLuStatus         INTEGER, 
   scsiLuState          BITS, 
   scsiLuInCommands     Counter32, 
   scsiLuReadMegaBytes  Counter32, 
   scsiLuWrittenMegaBytes     Counter32, 
   scsiLuInResets       Counter32, 
   scsiLuOutTaskSetFullStatus    Counter32, 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 51] 
                               SCSI MIB                  February 2003 
 
 
   scsiLuHSInCommands   Counter64 
} 
    
scsiLuIndex OBJECT-TYPE 
   SYNTAX      ScsiIndexValue 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "This object represents an arbitrary integer used to uniquely 
     identify a particular logical unit within a particular SCSI target 
     device within a particular SCSI instance." 
::= { scsiLuEntry 1 } 
    
scsiLuDefaultLun OBJECT-TYPE 
   SYNTAX      ScsiLUN 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the default Logical Unit Number (LUN) for 
     this logical unit; if an initiator has not been configured to view 
     this Logical Unit via an entry in the ScsiLunMapTable, the LU will 
     be visible as scsiLuDefaultLun.  If this Logical Unit does not have 
     a default LUN, it will only be visible if specified via the 
     ScsiLunMapTable, and this object will contain a zero-length 
     string." 
::= { scsiLuEntry 2 } 
    
scsiLuWwnName OBJECT-TYPE 
   SYNTAX      ScsiNameIdOrZero 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the World-Wide Name of this LU. 
     If there is no WWN for this LU, this object will contain a zero-
     length string." 
::= { scsiLuEntry 3 } 
    
scsiLuVendorId OBJECT-TYPE 
   SYNTAX      SnmpAdminString 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents a string identifying the vendor of this LU 
     as reported in the Standard INQUIRY data." 
::= { scsiLuEntry 4 } 
    
scsiLuProductId OBJECT-TYPE 
   SYNTAX      SnmpAdminString 
   MAX-ACCESS  read-only 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 52] 
                               SCSI MIB                  February 2003 
 
 
   STATUS      current 
   DESCRIPTION 
     "This object represents a string identifying the product for this 
     LU as reported in the Standard INQUIRY data." 
::= { scsiLuEntry 5 } 
    
scsiLuRevisionId OBJECT-TYPE 
   SYNTAX      SnmpAdminString 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents a string defining the product revision of 
     this LU as reported in the Standard INQUIRY data." 
::= { scsiLuEntry 6 } 
    
scsiLuPeripheralType OBJECT-TYPE 
   SYNTAX      Unsigned32 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object is the value returned by SCSI Standard INQUIRY data. 
     It can be: direct-access device, sequential-access device, printer, 
     communication device and so on.  
     The values that can be returned here are defined in SCSI Primary 
     Commands -2." 
   REFERENCE  
     "ANSI - SCSI Primary Commands - 2 (SPC-2), T10 Project 1236-D, 
     Revision 20, 18 July 2001  [16]" 
::= { scsiLuEntry 7 } 
    
scsiLuStatus   OBJECT-TYPE 
   SYNTAX      INTEGER { 
      unknown(1), 
      available(2), 
      notAvailable(3), 
      broken(4), 
      readying(5), 
      abnormal(6) 
   } 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the status of this logical unit: 
       - unknown(1): The status of this logical unit cannot be 
       determined. 
       - available(2): The logical unit is fully operational (i.e., 
       accepts media access SCSI commands and has no state information 
       to report). 

 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 53] 
                               SCSI MIB                  February 2003 
 
 
       - notAvailable(3): The logical unit is capable of being supported 
       but not available (i.e., no logical unit is currently present or 
       the logical unit is present but not configured for use). 
       - broken(4): The logical unit has failed and cannot respond to 
       SCSI commands. 
       - readying(5): The logical unit is being initialized and access 
       is temporarily limited. 
       - abnormal(6): The logical unit has state information available 
       that indicates it is operating with limits. The scsiLuState 
       indicates what those limits are. 
     " 
   REFERENCE  
     "SCSI Controller Commands-2 (SCC-2) standard NCITS.318-1998 
     6.3.1.8 REPORT STATES service action" 
::= { scsiLuEntry 8 } 
    
scsiLuState OBJECT-TYPE 
   SYNTAX      BITS { 
      dataLost(0), 
      dynamicReconfigurationInProgress(1), 
      exposed(2), 
      fractionallyExposed(3), 
      partiallyExposed(4), 
      protectedRebuild(5), 
      protectionDisabled(6), 
      rebuild(7), 
      recalculate(8), 
      spareInUse(9), 
      verifyInProgress(10) 
   }  
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the state of a logical unit and its meaning 
     is according the bit position: 
          0 Data lost: Within the logical unit data has been lost. 
          1 Dynamic reconfiguration in progress: The logical unit is 
               being reconfigured. In this state all data is still 
               protected. 
          2 Exposed: Within the logical unit data is not protected. In 
               this state all data is still valid, however, loss of 
               data/data-availability is unavoidable in the event of a 
               failure. 
          3 Fractionally exposed: Within the logical unit part of the 
               data is not protected. In this state all data is still 
               valid, however, a failure may cause a loss of data or a 
               loss of data availability. 


 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 54] 
                               SCSI MIB                  February 2003 
 
 
          4 Partially exposed: Within the logical unit one or more 
               underlying storage devices have failed. In this state all 
               data is still protected. 
          5 Protected rebuild: The logical unit is in the process of a 
               rebuild operation. In this state all data is protected. 
          6 Protection disabled: Within the logical unit the data 
               protection method has been disabled. 
               In this state all data is still valid, however, however, 
               loss of data/data-availability is unavoidable in the 
               event of a failure. 
          7 Rebuild: The data protection method is in the process of 
               rebuilding data. In this state data is not protected. 
          8 Recalculate: The logical unit is in the process of a 
               recalculate operation. 
          9 Spare in use: Within the logical unit a storage device in 
               full or part being used to store data. In this state all 
               data is still protected. 
          10   Verify in progress: Within the logical unit data is being 
               verified." 
     REFERENCE  
      "SCSI Controller Commands-2 (SCC-2) standard NCITS.318-1998 
      6.3.1.8 REPORT STATES service action" 
::= { scsiLuEntry 9 } 
    
scsiLuInCommands OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS       "commands" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of commands received by this 
     logical unit." 
::= { scsiLuEntry 10 } 
       
scsiLuReadMegaBytes OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS       "Megabytes" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the amount of data in Megabytes read from 
     this logical unit." 
::= { scsiLuEntry 11 } 
    
scsiLuWrittenMegaBytes OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS       "Megabytes" 
   MAX-ACCESS  read-only 
   STATUS      current 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 55] 
                               SCSI MIB                  February 2003 
 
 
   DESCRIPTION 
     "This object represents the amount of data in Megabytes written to 
     this logical unit." 
::= { scsiLuEntry 12 } 
    
scsiLuInResets OBJECT-TYPE 
   SYNTAX      Counter32 
   UNITS       "resets" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of resets received by this 
     logical unit." 
::= { scsiLuEntry 13 } 
             
scsiLuOutTaskSetFullStatus    OBJECT-TYPE 
   SYNTAX      Counter32 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of Task Set full statuses issued 
     for this logical unit." 
::= { scsiLuEntry 14 } 
    
scsiLuHSInCommands OBJECT-TYPE 
   SYNTAX      Counter64 
   UNITS       "commands" 
   MAX-ACCESS  read-only 
   STATUS      current 
   DESCRIPTION 
     "This object represents the number of commands received by this 
     logical unit. This object provides support for systems that can 
     quickly generate a large number of commands because they run at 
     high speed." 
::= { scsiLuEntry 15 } 
    
    
--****************** Logical Unit Identifier Table *****************   
scsiLuIdTable OBJECT-TYPE 
   SYNTAX  SEQUENCE OF ScsiLuIdEntry 
   MAX-ACCESS       not-accessible 
   STATUS           current 
   DESCRIPTION 
     "A table of identifiers for all logical units exposed by local 
     targets device." 
::= { scsiLogicalUnit 2 } 
    
scsiLuIdEntry OBJECT-TYPE 
   SYNTAX      ScsiLuIdEntry 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 56] 
                               SCSI MIB                  February 2003 
 
 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "An entry (row) containing information applicable to a particular 
     identifier for a particular logical unit of a particular target 
     device within a particular SCSI instance. " 
   INDEX {scsiInstIndex, scsiDeviceIndex, scsiLuIndex, scsiLuIdIndex} 
::= { scsiLuIdTable 1 } 
    
ScsiLuIdEntry ::= SEQUENCE { 
   scsiLuIdIndex        ScsiIndexValue, 
   scsiLuIdCodeSet      ScsiIdCodeSet, 
   scsiLuIdAssociation  ScsiIdAssociation, 
   scsiLuIdType         ScsiIdType, 
   scsiLuIdValue        ScsiIdValue 
} 
    
scsiLuIdIndex  OBJECT-TYPE 
   SYNTAX          ScsiIndexValue 
   MAX-ACCESS      not-accessible 
   STATUS          current 
   DESCRIPTION 
     "This object represents an arbitrary integer used to uniquely 
     identify a particular LU Identifier within a particular logical 
     unit within a particular SCSI target device within a particular 
     SCSI instance." 
::= { scsiLuIdEntry 1 } 
    
scsiLuIdCodeSet OBJECT-TYPE 
   SYNTAX           ScsiIdCodeSet  
   MAX-ACCESS       read-only 
   STATUS           current 
   DESCRIPTION 
     "This object specifies the code set in use with this identifier. 
     The value is represented in the same format as is contained in the 
     identifier's Identification Descriptor within the Logical Unit's 
     Device Identification Page." 
   REFERENCE  
     "ANSI - SCSI Primary Commands - 2 (SPC-2), Revision 20, Chapter 8: 
     section 8.4.4, page 210 Vital Product Data Parameters [16]" 
::= { scsiLuIdEntry 2 } 
    
scsiLuIdAssociation OBJECT-TYPE 
   SYNTAX           ScsiIdAssociation 
   MAX-ACCESS       read-only 
   STATUS           current 
   DESCRIPTION 
     "This object specifies what the identifier is associated with (e.g, 
     with the addressed physical/logical device or with a particular 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 57] 
                               SCSI MIB                  February 2003 
 
 
     port).  The value is represented in the same format as is contained 
     in the identifier's Identification Descriptor within the Logical 
     Unit's Device Identification Page." 
   REFERENCE  
     "ANSI - SCSI Primary Commands - 2 (SPC-2), Revision 20, Chapter 8: 
     section 8.4.4, page 210 Vital Product Data Parameters [16]" 
::= { scsiLuIdEntry 3 } 
    
scsiLuIdType   OBJECT-TYPE 
   SYNTAX           ScsiIdType  
   MAX-ACCESS       read-only 
   STATUS           current 
   DESCRIPTION 
     "This object specifies the type of the identifier.  
     The value is represented in the same format as is contained in the 
     identifier's Identification Descriptor within the Logical Unit's 
     Device Identification Page." 
   REFERENCE  
     "ANSI - SCSI Primary Commands - 2 (SPC-2), Revision 20, Chapter 8: 
     section 8.4.4, page 210 Vital Product Data Parameters  [16]" 
::= { scsiLuIdEntry 4 } 
    
scsiLuIdValue OBJECT-TYPE 
   SYNTAX         ScsiIdValue 
   MAX-ACCESS     read-only 
   STATUS         current 
   DESCRIPTION 
     "This object represents the actual value of this identifier. The 
     format is defined by the objects scsiLuIdCodeSet, 
     scsiLuIdAssociation, scsiLuIdType. 
     The value is represented in the same format as is contained in the 
     identifier's Identification Descriptor within the Logical Unit's 
     Device Identification Page." 
   REFERENCE  
     "ANSI - SCSI Primary Commands - 2 (SPC-2), Chapter 8: section 
     8.4.4, page 210 Vital Product Data Parameters  [16]" 
::= { scsiLuIdEntry 5 } 
    
--******************* The LUN Map Table *************************** 
    
scsiLunMapTable OBJECT-TYPE 
   SYNTAX   SEQUENCE OF ScsiLunMapEntry 
   MAX-ACCESS  not-accessible 
   STATUS      current 
   DESCRIPTION 
     "This table provides the ability to present a logical unit using 
     different Logical Unit Numbers for different initiators. This table 
     provides a mapping between a logical unit and a logical unit 

 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 58] 
                               SCSI MIB                  February 2003 
 
 
     number, and can be referenced by a ScsiAuthorizedIntrEntry to 
     specify the LUN map for that initiator." 
::= { scsiLogicalUnit 3 } 
    
scsiLunMapEntry OBJECT-TYPE 
   SYNTAX          ScsiLunMapEntry 
   MAX-ACCESS      not-accessible 
   STATUS          current 
   DESCRIPTION 
     "An entry containing information about the mapping of a particular 
     Logical Unit to a particular LUN.  The set of entries which all 
     have the same values of scsiInstIndex, scsiDeviceIndex and 
     scsiLunMapIndex constitute a LUN Map within a particular SCSI 
     instance." 
   INDEX { scsiInstIndex, scsiDeviceIndex, scsiLunMapIndex, 
   scsiLunMapLun} 
::= { scsiLunMapTable 1 } 
    
ScsiLunMapEntry ::= SEQUENCE { 
   scsiLunMapIndex      ScsiIndexValue, 
   scsiLunMapLun        ScsiLUN, 
   scsiLunMapLuIndex    ScsiIndexValue, 
   scsiLunMapRowStatus  RowStatus 
} 
    
scsiLunMapIndex   OBJECT-TYPE 
   SYNTAX           ScsiIndexValue 
   MAX-ACCESS       not-accessible 
   STATUS           current 
   DESCRIPTION 
     "This object represents an arbitrary integer used to uniquely 
     identify a particular LunMap within a particular SCSI target device 
     within a particular SCSI instance." 
::= { scsiLunMapEntry 1 } 
    
scsiLunMapLun     OBJECT-TYPE 
   SYNTAX           ScsiLUN 
   MAX-ACCESS       not-accessible 
   STATUS           current 
   DESCRIPTION 
     "This object specifies the Logical Unit Number, to which a logical 
     unit is mapped by this row." 
::= { scsiLunMapEntry 2 } 
    
scsiLunMapLuIndex OBJECT-TYPE 
   SYNTAX         ScsiIndexValue 
   MAX-ACCESS     read-create 
   STATUS         current 
   DESCRIPTION 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 59] 
                               SCSI MIB                  February 2003 
 
 
     "This object identifies the logical unit for which the value of 
     scsiLuIndex is the same as the value of this object.  The 
     identified logical unit is the one mapped to a LUN by this row." 
::= { scsiLunMapEntry 3 } 
    
scsiLunMapRowStatus  OBJECT-TYPE 
   SYNTAX          RowStatus 
   MAX-ACCESS      read-create 
   STATUS          current 
   DESCRIPTION 
     "This object allows an administrator to create and delete this 
     entry." 
::= { scsiLunMapEntry 4 } 
    
    
   --********************** Notifications ************************** 
   -- scsiNotifications OBJECT IDENTIFIER ::= { scsiModule 2 } 
    
scsiNotificationsPrefix OBJECT IDENTIFIER ::= { scsiNotifications 0 } 
 
scsiTgtDeviceStatusChanged NOTIFICATION-TYPE 
   OBJECTS { scsiTgtDeviceStatus } 
   STATUS  current 
   DESCRIPTION 
     "This notification will be generated for each occurrence of the 
     abnormal status (e.g., if the SCSI target device's current status 
     is abnormal) providing that the SCSI instance's value of 
     scsiInstScsiNotificationsEnable is enabled. 
     An SNMP agent implementing the SCSI MIB should not send more than 
     three SCSI identical notifications in any 10-second period." 
::= { scsiNotificationsPrefix 1 } 
    
scsiLuStatusChanged NOTIFICATION-TYPE 
   OBJECTS { scsiLuStatus } 
   STATUS  current 
   DESCRIPTION 
     "This notification will be generated each time that scsiLuStatus 
     changes providing that the SCSI instance's value of 
     scsiInstScsiNotificationsEnable is enabled. 
     An SNMP agent implementing the SCSI MIB should not send more than 
     three SCSI identical notifications in any 10-second period." 
::= { scsiNotificationsPrefix 2 } 
    
    
--****************************************************************** 
-- The next part defines the conformance groups in use for SCSI MIB. 
scsiCompliances OBJECT IDENTIFIER ::= { scsiConformance 1 } 
    
scsiCompliance MODULE-COMPLIANCE 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 60] 
                               SCSI MIB                  February 2003 
 
 
   STATUS current 
   DESCRIPTION 
     "Describes the requirements for compliance to this SCSI MIB. 
     If an implementation can be both a target and an initiator, all 
     groups are mandatory." 
   MODULE  -- this module 
      MANDATORY-GROUPS { 
         scsiDeviceGroup 
     } 
       
     OBJECT scsiInstAlias 
      MIN-ACCESS read-only 
      DESCRIPTION  
          "Write access is not mandatory." 
           
      OBJECT scsiInstScsiNotificationsEnable 
      MIN-ACCESS read-only 
      DESCRIPTION  
          "Write access is not mandatory." 
           
     OBJECT scsiDeviceAlias 
      MIN-ACCESS read-only 
      DESCRIPTION  
          "Write access is not mandatory." 
    
   -- Conditionally mandatory groups to be included with 
   -- the mandatory groups when the implementation has 
   -- SCSI target device. 
       
     GROUP scsiTargetGroup 
     DESCRIPTION 
          "This group is mandatory for all SCSI implementations that 
          have SCSI target devices." 
     GROUP scsiLunMapGroup 
      DESCRIPTION 
          "This group is mandatory for system having the capabilities of 
          mapping local targets and logical units according remote 
          initiators." 
    
     OBJECT scsiAuthIntrDevOrPort 
     MIN-ACCESS   read-only 
     DESCRIPTION  
      "Write access is not required." 
      
     OBJECT scsiAuthIntrName 
     MIN-ACCESS   read-only 
     DESCRIPTION  
      "Write access is not required." 
      
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 61] 
                               SCSI MIB                  February 2003 
 
 
     OBJECT scsiAuthIntrLunMapIndex 
     MIN-ACCESS   read-only 
     DESCRIPTION  
      "Write access is not required." 
      
     OBJECT scsiAuthIntrRowStatus 
     SYNTAX RowStatus { active(1) } 
     MIN-ACCESS   read-only 
     DESCRIPTION  
          "Write access is not required, and only one of the six 
          enumerated values for the RowStatus textual convention need be 
          supported, specifically: active(1)." 
           
     GROUP scsiTgtDevLuNotificationsGroup 
      DESCRIPTION 
          "This group is mandatory for all SCSI implementations that 
          have SCSI target devices and are able to report status 
          changes." 
          
    
   -- Conditionally mandatory groups to be included with 
   -- the mandatory groups when the implementation has 
   -- SCSI initiator device. 
    
     GROUP scsiInitiatorGroup 
     DESCRIPTION 
          "This group is mandatory for all SCSI implementations that 
          have SCSI initiator devices." 
    
      OBJECT scsiIntrDevTgtAccessMode 
      MIN-ACCESS read-only 
      DESCRIPTION "Write access is not mandatory." 
    
      GROUP scsiDiscoveryGroup 
      DESCRIPTION 
          "This group is mandatory for system having the capabilities of 
          discovering remote targets via local initiators." 
    
      OBJECT scsiLunMapLuIndex 
      MIN-ACCESS read-only 
      DESCRIPTION  
          "Write access is not mandatory." 
           
      OBJECT scsiLunMapRowStatus 
      SYNTAX RowStatus { active(1) } 
      MIN-ACCESS read-only 
      DESCRIPTION  


 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 62] 
                               SCSI MIB                  February 2003 
 
 
          "Write access is not required, and only one of the six 
          enumerated values for the RowStatus textual convention need be 
          supported, specifically: active(1)." 
           
      OBJECT scsiDscTgtDevOrPort 
      MIN-ACCESS read-only 
      DESCRIPTION  
          "Write access is not mandatory." 
           
      OBJECT scsiDscTgtName 
      MIN-ACCESS read-only 
      DESCRIPTION "Write access is not mandatory." 
    
      OBJECT scsiDscTgtConfigured  
      SYNTAX TruthValue { false(2) } 
      MIN-ACCESS read-only 
      DESCRIPTION  
          "The value of true(1) is not mandatory neither the write 
          access." 
      
      OBJECT scsiDscTgtRowStatus 
      SYNTAX RowStatus { active(1) } 
      MIN-ACCESS read-only 
      DESCRIPTION  
          "Write access is not required, and only one of the six 
          enumerated values for the RowStatus textual convention need be 
          supported, specifically: active(1)."      
    
   -- Conditionally mandatory groups to be included with the mandatory  
   -- groups when the implementation can gather statistics. 
     GROUP scsiDeviceStatGroup 
     DESCRIPTION 
          "This group is mandatory for all SCSI implementations that can 
          gather statistics." 
      
   -- Conditionally mandatory groups to be included with the mandatory  
   -- groups when the implementation can gather statistics at the SCSI 
   -- initiator side. 
     GROUP scsiInitiatorStatsGroup 
     DESCRIPTION 
          "This group is mandatory for all SCSI implementations that can 
          gather statistics at SCSI initiator side." 
      
     GROUP scsiDiscoveryStatsGroup 
     DESCRIPTION 
          "This group is mandatory for system having the capabilities of 
          gathering statistics regarding remote targets via local 
          initiators."   
    
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 63] 
                               SCSI MIB                  February 2003 
 
 
   -- Conditionally mandatory groups to be included with the mandatory  
   -- groups when the implementation can gather statistics at the SCSI 
   -- target side. 
     GROUP scsiTargetStatsGroup 
     DESCRIPTION 
          "This group is mandatory for all SCSI implementations that can 
          gather statistics at SCSI target devices." 
      
     GROUP scsiLunMapStatsGroup 
     DESCRIPTION 
          "This group is mandatory for SCSI implementations able to map 
          local targets and logical units according remote initiators." 
    
   -- Conditionally mandatory groups to be included with the mandatory  
   -- groups when the implementation is running at high speed and can  
   -- gather statistics at the SCSI initiator side. 
     GROUP scsiInitiatorHSStatsGroup 
     DESCRIPTION 
          "This group is mandatory for all SCSI implementations that can 
          gather statistics at SCSI initiator side and are running at 
          high speed." 
      
     GROUP scsiDiscoveryHSStatsGroup 
     DESCRIPTION 
          "This group is mandatory for system having the capabilities of 
          gathering statistics regarding remote targets via local 
          initiators and are running at high speed."   
    
   -- Conditionally mandatory groups to be included with the mandatory  
   -- groups when the implementation  is running at high speed and can  
   -- gather statistics at the SCSI target side. 
     GROUP scsiTargetHSStatsGroup 
     DESCRIPTION 
          "This group is mandatory for all SCSI implementations that can 
          gather statistics at SCSI target devices in high speed 
          system." 
      
     GROUP scsiLunMapHSStatsGroup 
     DESCRIPTION 
          "This group is mandatory for SCSI implementations able to map 
          local targets and logical units according remote initiators in 
          high speed system." 
::= { scsiCompliances 1 } 
    
scsiGroups OBJECT IDENTIFIER ::= { scsiConformance 2 } 
 
scsiDeviceGroup OBJECT-GROUP 
   OBJECTS { 
      scsiInstAlias,  
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 64] 
                               SCSI MIB                  February 2003 
 
 
      scsiInstSoftwareIndex,  
      scsiInstVendorVersion, 
      scsiInstScsiNotificationsEnable, 
      scsiDeviceAlias,              
      scsiDeviceRole,
      scsiDevicePortNumber, 
      scsiPortRole,  
      scsiPortTrnsptPtr, 
      scsiTrnsptType,  
      scsiTrnsptPointer,  
      scsiTrnsptDevName 
   } 
   STATUS current 
   DESCRIPTION 
     "A collection of objects providing information about SCSI 
     instances, devices and ports." 
::= { scsiGroups 1 } 
    
scsiInitiatorGroup OBJECT-GROUP 
   OBJECTS { 
      scsiIntrDevTgtAccessMode, 
      scsiIntrPortName,  
      scsiIntrPortIdentifier, 
      scsiAttTgtPortDscTgtIdx, 
      scsiAttTgtPortName,  
      scsiAttTgtPortIdentifier 
   } 
   STATUS current 
   DESCRIPTION 
     "This group is relevant for an initiator device and port." 
::= { scsiGroups 2 } 
    
scsiDiscoveryGroup OBJECT-GROUP 
   OBJECTS { 
      scsiDscTgtDevOrPort, 
      scsiDscTgtName,  
      scsiDscTgtConfigured,  
      scsiDscTgtDiscovered, 
      scsiDscTgtRowStatus, 
      scsiDscTgtLastCreation, 
      scsiDscLunLun, 
      scsiDscLunIdCodeSet, 
      scsiDscLunIdAssociation, 
      scsiDscLunIdType, 
      scsiDscLunIdValue 
   } 
   STATUS current 
   DESCRIPTION 

 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 65] 
                               SCSI MIB                  February 2003 
 
 
     "This group is relevant for the discovered targets by an initiator 
     port." 
::= { scsiGroups 3 } 
    
scsiTargetGroup OBJECT-GROUP 
   OBJECTS { 
      scsiTgtDevNumberOfLUs, 
      scsiTgtDeviceStatus, 
      scsiTgtDevNonAccessibleLUs, 
      scsiTgtPortName, 
      scsiTgtPortIdentifier, 
      scsiAttIntrPortAuthIntrIdx, 
      scsiAttIntrPortName, 
      scsiAttIntrPortId, 
      scsiLuDefaultLun, 
      scsiLuWwnName,  
      scsiLuVendorId,    
      scsiLuProductId,   
      scsiLuRevisionId, 
      scsiLuPeripheralType, 
      scsiLuStatus, 
      scsiLuState, 
      scsiLuIdCodeSet, 
      scsiLuIdAssociation, 
      scsiLuIdType, 
      scsiLuIdValue 
   } 
   STATUS current 
   DESCRIPTION 
     "This group is relevant for a target device and port." 
::= { scsiGroups 4 } 
    
scsiLunMapGroup OBJECT-GROUP  
   OBJECTS { 
      scsiLunMapLuIndex,  
      scsiLunMapRowStatus, 
      scsiAuthIntrDevOrPort, 
      scsiAuthIntrName, 
      scsiAuthIntrLunMapIndex, 
      scsiAuthIntrLastCreation, 
      scsiAuthIntrRowStatus  
   } 
   STATUS current 
   DESCRIPTION     
     "This group is a collection of attributes regarding the mapping 
     between logical unit number, logical unit and target device." 
::= { scsiGroups 5} 
    
scsiTargetStatsGroup OBJECT-GROUP 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 66] 
                               SCSI MIB                  February 2003 
 
 
   OBJECTS { 
      scsiTgtPortInCommands, 
      scsiTgtPortWrittenMegaBytes, 
      scsiTgtPortReadMegaBytes, 
      scsiLuInCommands, 
      scsiLuReadMegaBytes, 
      scsiLuWrittenMegaBytes, 
      scsiLuInResets, 
      scsiLuOutTaskSetFullStatus 
   } 
   STATUS current 
   DESCRIPTION     
     "This group is a collection of statistics for all implementations 
     of the SCSI MIB that contain targets." 
::= { scsiGroups 6} 
    
scsiTargetHSStatsGroup OBJECT-GROUP 
   OBJECTS { 
      scsiTgtPortHSInCommands, 
      scsiLuHSInCommands 
   } 
   STATUS current 
   DESCRIPTION     
     "This group is a collection of high speed statistics for all 
     implementations of the SCSI MIB that contain targets." 
::= { scsiGroups 7} 
    
scsiLunMapStatsGroup OBJECT-GROUP 
   OBJECTS { 
      scsiAuthIntrAttachedTimes, 
      scsiAuthIntrOutCommands, 
      scsiAuthIntrReadMegaBytes, 
      scsiAuthIntrWrittenMegaBytes 
   } 
   STATUS current 
   DESCRIPTION     
     "This group is a collection of statistics regarding initiators 
     authorized to attach local logical unit and target device." 
::= { scsiGroups 8} 
    
scsiLunMapHSStatsGroup OBJECT-GROUP 
   OBJECTS { 
      scsiAuthIntrHSOutCommands   
   } 
   STATUS current 
   DESCRIPTION     
     "This group is a collection of high speed statistics regarding 
     initiators authorized to attach local logical unit and target 
     device." 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 67] 
                               SCSI MIB                  February 2003 
 
 
::= { scsiGroups 9} 
    
scsiInitiatorStatsGroup OBJECT-GROUP 
   OBJECTS { 
      scsiIntrDevOutResets,  
      scsiIntrPortOutCommands, 
      scsiIntrPortWrittenMegaBytes, 
      scsiIntrPortReadMegaBytes 
   } 
   STATUS current 
   DESCRIPTION     
     "This group is a collection of statistics for all implementations 
     of the SCSI MIB that contain initiators." 
::= { scsiGroups 10} 
    
scsiInitiatorHSStatsGroup OBJECT-GROUP 
   OBJECTS { 
      scsiIntrPortHSOutCommands 
   } 
   STATUS current 
   DESCRIPTION     
     "This group is a collection of high speed statistics for all 
     implementations of the SCSI MIB that contain initiators." 
::= { scsiGroups 11} 
    
scsiDiscoveryStatsGroup OBJECT-GROUP 
   OBJECTS { 
      scsiDscTgtInCommands, 
      scsiDscTgtReadMegaBytes, 
      scsiDscTgtWrittenMegaBytes  
   } 
   STATUS current 
   DESCRIPTION     
     "This group is a collection of statistics for all implementations 
     of the SCSI MIB that contain discovered initiators." 
::= { scsiGroups 12} 
    
scsiDiscoveryHSStatsGroup OBJECT-GROUP 
   OBJECTS { 
      scsiDscTgtHSInCommands 
   } 
   STATUS current 
   DESCRIPTION     
     "This group is a collection of high speed statistics for all 
     implementations of the SCSI MIB that contain discovered 
     initiators." 
::= { scsiGroups 13} 
    
scsiDeviceStatGroup OBJECT-GROUP 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 68] 
                               SCSI MIB                  February 2003 
 
 
   OBJECTS { 
      scsiDeviceResets,  
      scsiPortBusyStatuses  
   } 
   STATUS current 
   DESCRIPTION 
     "A collection of statistics regarding about SCSI devices and 
     ports." 
::= { scsiGroups 14 } 
    
scsiTgtDevLuNotificationsGroup NOTIFICATION-GROUP 
   NOTIFICATIONS { 
      scsiTgtDeviceStatusChanged, 
      scsiLuStatusChanged 
   } 
   STATUS current 
   DESCRIPTION 
     "A collection of notifications regarding status change of target 
     devices and logical units." 
::= { scsiGroups 15 } 
    
END 
 
10. Acknowledgments 
 
   This document is the result of the work of the SCSI MIB Group.  In 
   particular, the contributions of Sajay Selvaraj (HCL Technologies), 
   George Penokie (IBM) and Roger Cummings (Veritas Software) were 
   critical to the formulation of this specification. 
    
11. Object Population Example: Target and Initiator on a pSCSI bus 
   This section provides a sample set of values for a parallel SCSI 
   scenario in which a SCSI MIB can be implemented. The example shown 
   below is not a normative part of this draft and makes some 
   assumptions about the underlying implementation, which are not based 
   on actual implementations.  
   The respective sections describe the sequence of object 
   instantiations and attempts to explain non-typical values for 
   attributes that are unique to the scenario.  
        
   Note: While populating the objects, the population of statistics is 
   not considered.  
        
        
    
       
   This scenario deals with a SCSI target and initiator attached to a 
   parallel SCSI bus.  

 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 69] 
                               SCSI MIB                  February 2003 
 
 
   We assume an HBA as the initiator and a disk as target. We assume 
   that the target has one logical unit, addressed by logical unit 
   number set to 0 (LUN0), which is the default LUN. Parallel SCSI only 
   has port identifiers, no port names. The transport pointer for 
   parallel SCSI is set to 0 since, there is no reference transport  
   (SPI) MIB protocol.  
     
   Once the SCSI system is initialized, SNMP agent should be able to 
   view the values of variables populated in the ScsiDevice,  
   ScsiInitiatorDevice, ScsiTargetDevice, ScsiPort, ScsiTargetPort,  
   ScsiInitiatorPort, ScsiLogicalUnit, ScsiLUIdentifier objects.  
        
        
   The ScsiTgtAuthorizedIntr population depends on the transport and the 
   implementation.  
   As this example scenario is parallel scsi, we deal with the ports.  
   Hence the ScsiPortIndexOrZero is the index of the target port and  
   ScsiTgtAuthIntrDevOrPort is "port". Same is the case with the 
   variables in ScsiIntrAuthorizedTgt also.  
        
    
   11.1 scsiInstance Table: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1 
      scsiInstAlias                   "pSCSI-1" 
      scsiInstReference               1000 
      scsiInstVendorVersion           "1.0a" 
      scsiInstScsiNotificationsEnable true 
    
   11.2 scsiDevice Table: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1              1 
      scsiDeviceIndex                 1              2 
      scsiDeviceAlias                 "pSCSI-HBA"    "pSCSI-Disk1" 
      scsiDeviceRoles                 initiator(1)   target(0) 
      scsiDevicePortNumber            1              1 
       
    
   11.3 scsiPort Table: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1         1 
      scsiDeviceIndex                 1         2 
      scsiPortIndex                   1         2 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 70] 
                               SCSI MIB                  February 2003 
 
 
      scsiPortRoles                   initiator(1)   target(0) 
      scsiPortTrnsptPtr               1              2 
    
   11.4 scsiTrnspt Table: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1              1 
      scsiDeviceIndex                 1              2 
      scsiTrnsptIndex                 1              2 
      scsiTrnsptType                  "SPI-4"        "SPI-4" 
      scsiTrnsptPointer               0.0            0.0 
      scsiTrnsptDevName               "ns-SCSI"      "ns-SCSI" 
    
   11.5 scsiIntrDev Table: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1 
      scsiDeviceIndex                 1 
    
   11.6 scsiInitiatorPort Table: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1 
      scsiDeviceIndex                 1 
      scsiPortIndex                   1 
      scsiIntrPortName                 -NA- 
      scsiIntrPortIdentifier           0001b 
    
      Port Identifier for SCSI is represented by 4 bits. 
 
    
   11.7 scsiDscTgt Table: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1 
      scsiDeviceIndex                 1 
      scsiDscTgtIntrPortIndex         1 
      scsiDscTgtIndex                 1 
      scsiDscTgtDevOrPort             port 
      scsiDscTgtName                  -NA- 
      scsiDscTgtRowStatus             1 
      scsiDscTgtDiscovered            true 
    
   11.8 scsiDscLUN 
    
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 71] 
                               SCSI MIB                  February 2003 
 
 
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1 
      scsiDeviceIndex                 1 
      scsiDscTgtIntrPortIndex         1 
      scsiDscTgtIndex                 1 
      scsiDscLUNIndex                 1 
    
   11.9 scsiDscLUNIdentifier 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1 
      scsiDeviceIndex                 1 
      scsiDscLUNIndex                 1 
      scsiDscLUNIdIndex               1 
      scsiDscLUNidCodeSet             2 
      scsiDscLUNidAssociation         1 
      scsiDscLUNIdType                1 
      scsiDscLUNIdValue               IETFsl318203-0001 
    
   11.10 scsiAttTgtPort Table: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1 
      scsiDeviceIndex                 1 
      scsiPortIndex                   1 
      scsiAttTgtPortIndex             1 
      scsiAttTgtPortDscTgtIdx         1 
      scsiAttTgtPortName              -NA- 
      scsiAttTgtPortId                011 
    
   11.11 scsiTgtDev Table: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1 
      scsiDeviceIndex                 2 
      scsiTgtDevNumberOfLUs           1 
    
   11.12 scsiTgtPort Table: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1 
      scsiDeviceIndex                 2 
      scsiPortIndex                   2 
      scsiPortName                    -NA- 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 72] 
                               SCSI MIB                  February 2003 
 
 
      scsiTgtPortIdentifier           010 
    
   11.13 scsiLU Table: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1 
      scsiDeviceIndex                 2 
      scsiLuIndex                     1 
      scsiLuDefaultLun                "lun0" 
      scsiLuWwnName                   "Disk-LU" 
      scsiLuVendorId                  "xyz-corp" 
      scsiLuProductId                 "super turbo disk" 
      scsiRevisionId                  02 
      scsiLUPeripheralType            00 
      scsiLUStatus                    2 
      scsiLuState                     3 
    
    
   11.14 scsiLuIdentifer: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1 
      scsiDeviceIndex                 2 
      scsiLuIndex                     1 
      scsiLuIdIndex                   1 
      scsiLuIdCodeSet *1              2 
      scsiLuIdAssociation *2          1 
      scsiLuIdType *3                 1 
      scsiLuIdValue                   IETFsl318203-0004 
    
     *1 - The identifier field will have ASCII graphic codes. 
     *2 - The identifier is associated with the port that received the     
     request. 
      *3 - As defined in SPC (This value specifies that the LuIdValue 
     contains a vendorID in the first 8 bytes concatenated with the 
     product identifier field and product serial number 
    
   11.15 scsiLunMap Table: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1 
      scsiDeviceIndex                 2 
      scsiLunMapIndex                 1 
      scsiLunMapLun                   LUN0 
      scsiLunMapLuIndex               1 
      scsiLunMapLunRowStatus          1 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 73] 
                               SCSI MIB                  February 2003 
 
 
    
   11.16 scsiAuthorizedIntr Table: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1 
      scsiDeviceIndex                 2 
      scsiAuthIntrTgtPortIndex        2 
      scsiAuthIntrIndex               1 
      scsiAuthIntrDevOrPort           port 
      scsiAuthIntrName                "" 
      scsiAuthIntrLunMapIndex           1 
      scsiAuthIntrRowStatus           1 
    
   11.17 scsiAttIntrPort Table: 
    
      Attribute                       Value 
      ----------                      ------ 
      scsiInstIndex                   1 
      scsiDeviceIndex                 2 
      scsiPortIndex                   2 
      scsiAttIntrPortIdx              1 
      scsiAttIntrPortAuthIntrIdx      1 
      scsiAttIntrPortName             "" 
      scsiAttIntrPortId               011 
    
12. References 
    
12.1 Normative References 
   [1]   Harrington, D., Presuhn, R. and B. Wijnen, "An Architecture for 
      Describing SNMP Management Frameworks", RFC 2571, April 1999. 
    
   [2]   Rose, M. and K. McCloghrie, "Structure and Identification of 
      Management Information for TCP/IP-based Internets", STD 16, RFC 
      1155, May 1990. 
    
   [3]   Rose, M. and K. McCloghrie, "Concise MIB Definitions", STD 16, 
      RFC 1212, March 1991. 
    
   [4]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose, 
      M. and S. Waldbusser, "Structure of Management Information Version 
      2(SMIv2)", STD 58, RFC 2578, April 1999. 
    
   [5]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose, 
      M. and S. Waldbusser, "Textual Conventions for SMIv2", STD 58, RFC 
      2579, April 1999. 
    


 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 74] 
                               SCSI MIB                  February 2003 
 
 
   [6]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose, 
      M. and S. Waldbusser, "Conformance Statements for SMIv2", STD 58, 
      RFC 2580, April 1999. 
    
   [7]   Case, J., Fedor, M., Schoffstall, M. and J. Davin, "Simple 
      Network Management Protocol", STD 15, RFC 1157, May 1990. 
    
   [8]   Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,"Transport 
      Mappings for Version 2 of the Simple Network Management 
      Protocol(SNMPv2)", RFC 1906, January 1996. 
    
   [9]   Case, J., Harrington, D., Presuhn, R. and B. Wijnen, "Message 
      Processing and Dispatching for the Simple Network Management 
      Protocol (SNMP)", RFC 2572, April 1999. 
    
   [10]  Blumenthal, U. and B. Wijnen, "User-based Security Model (USM) 
      for version 3 of the Simple Network Management Protocol(SNMPv3)", 
      RFC 2574, April 1999. 
    
   [11]  Case, J., McCloghrie, K., Rose, M. and S. Waldbusser, "Protocol 
      Operations for Version 2 of the Simple Network Management Protocol 
      (SNMPv2)", RFC 1905, January 1996. 
    
   [12]  Levi, D., Meyer, P. and B. Stewart, "SNMPv3 Applications", RFC 
      2573, April 1999. 
    
   [13]  Wijnen, B., Presuhn, R. and K. McCloghrie, "View-based Access 
      Control Model (VACM) for the Simple Network Management Protocol 
      (SNMP)", RFC 2575, April 1999. 
    
   [14]  SCSI Architecture Model-2 (SAM-2), Working Draft, T10 Project 
      1157-D, Revision 20, 19 September 2001  
    
   [15]  IEEE Tutorial for SCSI use of IEEE company_id - X3T10/97-101,  
      Revision 2 
    
   [16]  SCSI Primary Commands - 2 (SPC-2), T10 Project 1236-D, Revision 
      20, 18 July 2001 
    
   [17]  S. Waldbusser and P. Grillo, "Host Resources MIB", RFC 2790, 
      March 2000. 
    
12.2 Informative References 
    
   [18]  Rose, M., "A Convention for Defining Traps for use with the 
      SNMP", RFC 1215, March 1991. 
 


 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 75] 
                               SCSI MIB                  February 2003 
 
 
   [19]  Case, J., McCloghrie, K., Rose, M. and S. Waldbusser, 
      "Introduction to Community-based SNMPv2", RFC 1901, January 1996. 
 
   [20]  Case, J., Mundy, R., Partain, D. and B. Stewart, "Introduction 
      to Version 3 of the Internet-standard Network Management 
      Framework", RFC 2570, April 1999. 
 
   [21]  Bradner, S., "Key words for use in RFCs to Indicate Requirement 
      Levels", BCP 14, RFC 2119, March 1997. 
 
   [22] Satran, J, "iSCSI", IP Storage Working Group, draft-ietf-ips-
      iscsi-20.txt, January 2003. 
 
   [23] Bakke, M, Muchow, J, Krueger, M, McSweeney, T, "Definitions of 
      Managed Objects for iSCSI ", IP Storage Working Group, draft-ietf-
      ips-iscsi-mib-08.txt, November 2002. 
              
   [24] McCloghrie, K, "Fibre Channel Management MIB", IP Storage 
      Working Group, draft-ietf-ips-fcmgmt-mib-03.txt, October 2002. 
    
   [25] McCloghrie, K, "SNMPv2 Management Information Base for the 
      Transmission Control Protocol using SMIv2", RFC 2012, November 
      1996. 
    
    
13. Security Considerations 
 
   There are a number of management objects defined in this MIB that 
   have a MAX-ACCESS clause of read-write and/or read-create.  Such 
   objects may be considered sensitive or vulnerable in some network 
   environments.  The support for SET operations in a non-secure 
   environment without proper protection can have a negative effect on 
   network operations. 
    
   Some managed objects in this MIB may contain sensitive information. 
   These are: 
      scsiDscTgtTable 
      scsiLuTable 
      scsiLunMapTable 
      scsiAuthorizedIntrTable 
    
   It is thus important to control even GET access to these objects and 
   possibly to even encrypt the values of these object when sending them 
   over the network via SNMP. Not all versions of SNMP provide features 
   for such a secure environment.  
    
   SNMPv1 by itself is not a secure environment.  Even if the network 
   itself is secure (for example by using IPsec), even then, there is no 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 76] 
                               SCSI MIB                  February 2003 
 
 
   control as to who on the secure network is allowed to access and 
   GET/SET (read/change/create/delete) the objects in this MIB. 
    
   It is RECOMMENDED that the implementors consider the security 
   features as provided by the SNMPv3 framework.  Specifically, the use 
   of the User-based Security Model RFC 2574 [12] and the View-based 
   Access Control Model RFC 2575 [15] are recommended. 
    
   It is then a customer/user responsibility to ensure that the SNMP 
   entity giving access to an instance of this MIB, is properly 
   configured to give access to the objects only to those principals 
   (users) that have legitimate rights to indeed GET or SET 
   (change/create/delete) them. 
    
14. Authors' Addresses 
 
    
   Michele Hallak-Stamler 
   Sanrad Intelligent Network 
   32 Habarzel Street 
   Tel Aviv, Israel 
   Phone: +972 3 7674809 
   Email: michele@sanrad.com 
    
   Yaron Lederman 
   Siliquent Technologies Ltd. 
   33 Bezalel Street  
   Ramat Gan, Israel  
   Phone: +972 3 7552320 
   Email: yaronl@siliquent.com 
    
   Mark Bakke 
   Postal: Cisco Systems, Inc 
   6450 Wedgwood Road, Suite 130 
   Maple Grove, MN 
   USA 55311 
   Tel: +1 763-398-1000 
   Fax: +1 763-398-1001 
   E-mail: mbakke@cisco.com 
    
   Marjorie Krueger 
   Postal: Hewlett-Packard 
   Networked Storage Architecture 
   Networked Storage Solutions Org. 
   8000 Foothills Blvd. 
   Roseville, CA 95747 
   Tel: +1 916-785-2656 
   Tel: +1 916-785-0391 
   Email: Marjorie_krueger@hp.com 
 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 77] 
                               SCSI MIB                  February 2003 
 
 
    
   Keith McCloghrie 
   Cisco Systems, Inc. 
   Postal: 170 West Tasman Drive 
   San Jose, CA USA 95134 
   Tel: +1 408 526-5260 
   E-mail: kzm@cisco.com 
    
    
15. Full Copyright Statement 
    
   Copyright (C) The Internet Society (2001).  All Rights Reserved. 
    
   This document and translations of it may be copied and furnished to 
   others, and derivative works that comment on or otherwise explain it 
   or assist in its implementation may be prepared, copied, published 
   and distributed, in whole or in part, without restriction of any 
   kind, provided that the above copyright notice and this paragraph are 
   included on all such copies and derivative works.  However, this 
   document itself may not be modified in any way, such as by removing 
   the copyright notice or references to the Internet Society or other 
   Internet organizations, except as needed for the purpose of 
   developing Internet standards in which case the procedures for 
   copyrights defined in the Internet Standards process must be 
   followed, or as required to translate it into languages other than 
   English. 
    
   The limited permissions granted above are perpetual and will not be 
   revoked by the Internet Society or its successors or assigns. 
    
   This document and the information contained herein is provided on an 
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING 
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING 
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION 
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF 
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 
    












 
 
Hallak-Stamler et al.    Expires  August 2003                [Page 78] 
