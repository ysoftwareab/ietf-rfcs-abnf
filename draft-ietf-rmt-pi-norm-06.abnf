NORM_FLUSH_FLAG_EOT = 0x01

NORM_REPAIR_ADV_FLAG_LIMIT = 0x01

NORM_CC_FLAG_ENABLE = 0x01

value = (int) (mantissa * 4096.0 / 10.0 + 0.5)

value = (int)((3.2 * 4096.0 / 10.0) + 0.5) = 1311 = 0x51f

sendRate = <upper12bits> * 10.0 / 4096.0 * power(10.0, <lower4bits>)

T_backoff = RandomBackoff(K*GRTTsender, GSIZEsender)

Rsender = ---------------------------------------------------------------
                 tRTT * (sqrt((2/3)*p) + 12 * sqrt((3/8)*p) * p * (1 + 32*(p^2)))
                  where


S = Nominal transmitted packet size. (The "nominal" packet size
              is determined by the sender as an exponentially weighted
              moving average (EWMA) of transmitted packet sizes to account
              for variable message sizes).

tRTT = The RTT estimate of the current "current limiting receiver"
              (CLR).

p = The loss event fraction of the CLR.


T_backoff = y*r*(K*GRTTsender) + (1 - y)*RandomBackoff(K*GRTTsender, GSIZEsender)

r = (MAX(MIN((Rcalc / Rsender), 0.9), 0.5) - 0.5) / 0.4

r = Rrecv / Rsender

T_holdoff = (K*GRTT)
RTT_clr = 0.9 * RTT_clr + 0.1 * RTT_clrNew

Rinitial = MIN(NormSegmentSize / GRTT, NormSegmentSize) bytes/second.

Rnew = Rrecv_min
Age = Ssender - Sclr;
rate1 = MAX((Rsender - NormSegmentSize), 0.0);  // bytes per sec
rate2 = Rsender * 0.5
Rsender = MIN(rate1, rate2);
Rsender = MAX(rate1, rate2);

Rsender = Rsender * 0.5;

