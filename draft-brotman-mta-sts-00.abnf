sts-version     = "v" *WSP "=" *WSP %x53 %x54 %x53 %x31

sts-id          = "id" *WSP "=" *WSP 1*20VCHAR

sts-record      = WSP %x7B WSP  ; { left curly bracket
                  sts-element   ; comma-separated
                  [             ; list
                  WSP %x2c WSP  ; of
                  sts-element   ; sts-elements
                  ]
                  WSP %x7d WSP  ; } right curly bracket
 = %x22 "max
sts-element     = sts-version / sts-mode / sts-id / sts-mx / sts-max-age

sts-version     = %x22 "version" %x22 *WSP %x3a *WSP  ; "version":
                  %x22 %x53 %x54 %x53 %x31            ; "STS1"

sts-mode        = %x22 "mode" %x22 *WSP %x3a *WSP     ; "mode":
                  %x22 ("report" / "enforce") %x22    ; "report"/"enforce"

sts-id          = %x22 "policy_id" %x22 *WSP %x3a *WSP ; "policy_id":
                  %x22 1*20VCHAR %x22                  ; some chars

sts-mx          = %x22 "mx" $x22 *WSP %x3a *WSP       ; "mx":
                  %x5B                                ; [
                  domain-match                        ; comma-separated list
                  [WSP %x2c domain-match WSP]         ; of domain-matches
                  %x5B                                ; ]

sts-max-age     = %x22 "max-age" %x22 $x3a *WSP       ; "max-age":
                  %x22 1*10DIGIT %x22$                ; some digits

domain-match    =  ["*."] 1*dtext *("." 1*dtext)

dtext           =  %d30-39 /          ; 0-9
                   %d41-5A /          ; a-z
                   %61-7A /           ; A-Z
                   %2D                ; "-"

   A size limitation in a sts-uri, if provided, is interpreted as a
   count of units followed by an OPTIONAL unit size ("k" for kilobytes,
   "m" for megabytes, "g" for gigabytes, "t" for terabytes).  Without a
   unit, the number is presumed to be a basic byte count.  Note that the
   units are considered to be powers of two; a kilobyte is 2^10, a
   megabyte is 2^20, etc.

policy = policy_from_cache()
policy = policy_from_https_endpoint()  // fetch and authenticate!
update_cache = true
policy = policy_from_https_endpoint()  // fetch and authenticate #2!
update_cache = true
update_cache = false
