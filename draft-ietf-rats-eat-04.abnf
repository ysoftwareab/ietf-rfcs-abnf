nonce-type = [ + bstr .size (8..64) ]

nonce-claim = (
nonce => nonce-type
ueid-claim = (
ueid => bstr .size (7..33)
origination-claim = (
origination => string-or-uri
oemid-claim = (
oemid => bstr
security-level-type = &(
       unrestricted: 1,
       restricted: 2,
       secure-restricted: 3,
       hardware: 4
security-level-claim = (
security-level => security-level-type
boot-state-type = [
secure-boot-enabled => bool,
debug-disabled => bool,
debug-disabled-since-boot => bool,
debug-permanent-disable => bool,
debug-full-permanent-disable => bool
boot-state-claim = (
boot-state => boot-state-type
location-type = {
latitude => number,
longitude => number,
location-claim = (
location => location-type
age-claim = (
age => uint
uptime-claim = (
uptime => uint
submods-type = { + submodule }

submodule = (
submod_name => eat-claims / eat-token
submod_name = tstr / int

submods-part = (
submods => submod-type
string-or-uri = uri / tstr; See JSON section below for JSON encoding of string-or-uri

issuer = 1
subject = 2
audience = 3
expiration = 4
not-before = 5
issued-at = 6
cwt-id = 7

cwt-claim = rfc8392-claim

ueid = "ueid"
origination = "origination"
oemid = "oemid"
security-level = "security-level"
boot-state = "boot-state"
location = "location"
age = "age"
uptime = "uptime"
nested-eat = "nested-eat"
submods = "submods"

latitude = "lat"
longitude = "long""
altitude = "alt"
accuracy = "accry"
altitude-accuracy = "alt-accry"
heading = "heading"
speed = "speed"

ueid = To_be_assigned
origination = To_be_assigned
oemid = To_be_assigned
security-level = To_be_assigned
boot-state = To_be_assigned
location = To_be_assigned
age = To_be_assigned
uptime = To_be_assigned
submods = To_be_assigned
nonce = To_be_assigned

latitude = 1
longitude = 2
altitude = 3
accuracy = 4
altitude-accuracy = 5
heading = 6
speed = 7

eat-claims = { ; the top-level payload that is signed using COSE or JOSE
    * claim
claim = (
    ueid-claim //
    origination-claim //
    oemid-claim //
    security-level-claim //
    boot-state-claim //
    location-claim //
    age-claim //
    uptime-claim //
    submods-part //
    cwt-claim //
    generic-claim-type //
p = 1 - e^{-k^2/(2n)}

p = k^2 / 2n

t = 1 / ((k / 10) * p)

