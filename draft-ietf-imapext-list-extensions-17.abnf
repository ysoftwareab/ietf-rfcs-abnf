childinfo-extended-item = "CHILDINFO" SP "("
               list-select-base-opt-quoted
               *(SP list-select-base-opt-quoted) ")"
               ; Extended data item (mbox-list-extended-item) ; returned
               when the RECURSIVEMATCH
               ; selection option is specified.
               ; Note 1: the CHILDINFO tag can be returned
               ;  with and without surrounding quotes, as per
               ;  mbox-list-extended-item-tag production.
               ; Note 2: The selection options are always returned
               quoted,
               ;  unlike their specification in the extended LIST
               ;  command.


child-mbox-flag = "\HasChildren" / "\HasNoChildren"
               ; attributes for CHILDREN return option, at most one
               ; possible per LIST response


eitem-standard-tag = atom
               ; a tag for extended list data defined in a Standard
               ; Track or Experimental RFC.


eitem-vendor-tag = vendor-tag
               ; a vendor specific tag for extended list data
list =      "LIST" [SP list-select-opts] SP mailbox SP mbox-or-pat
               [SP list-return-opts]


list-return-opts = "RETURN" SP
               "(" [return-option *(SP return-option)] ")"
               ; list return options, e.g.  CHILDREN


list-select-base-opt = "SUBSCRIBED" / option-extension
               ; options that can be used by themselves


list-select-base-opt-quoted = <"> list-select-base-opt <">


list-select-independent-opt = "REMOTE" / option-extension
               ; options that do not syntactically interact with
               ; other options


list-select-mod-opt = "RECURSIVEMATCH" / option-extension
               ; options that require a list-select-base-opt
               ; to also be present


list-select-opt = list-select-base-opt / list-select-independent-opt
               / list-select-mod-opt
               ; An option registration template is described in
               ; Section 9.3 of this document.


list-select-opts = "(" [
                 (*(list-select-opt SP) list-select-base-opt
                  *(SP list-select-opt))
               / (list-select-independent-opt
                  *(SP list-select-independent-opt))
               ] ")"
               ; Any number of options may be in any order.
               ; If a list-select-mod-opt appears, then a
               ;    list-select-base-opt must also appear.
               ; This allows these:
               ;   ()
               ;   (REMOTE)
               ;   (SUBSCRIBED)
               ;   (SUBSCRIBED REMOTE)
               ;   (SUBSCRIBED RECURSIVEMATCH)
               ;   (SUBSCRIBED REMOTE RECURSIVEMATCH)
               ; But does NOT allow these:
               ;   (RECURSIVEMATCH)
               ;   (REMOTE RECURSIVEMATCH)


mailbox-list = "(" [mbx-list-flags] ")" SP
               (DQUOTE QUOTED-CHAR DQUOTE / nil) SP mailbox
               [SP mbox-list-extended]
               ;   This is the list information pointed to by the ABNF
               item ;   "mailbox-data", which is defined in [IMAP4]


mbox-list-extended = "(" [mbox-list-extended-item
               *(SP mbox-list-extended-item)] ")"


mbox-list-extended-item = mbox-list-extended-item-tag SP tagged-ext-
               val


mbox-list-extended-item-tag = astring
               ; The content MUST conform to either "eitem-vendor-tag"
               ; or "eitem-standard-tag" ABNF productions.
               ; A tag registration template is described in this
               ; document in Section 9.5.


mbox-list-oflag = child-mbox-flag / "\NonExistent" / "\Subscribed" /
               "\Remote"


mbox-or-pat = list-mailbox / patterns


option-extension = (option-standard-tag / option-vendor-tag)
               [SP option-value]


option-standard-tag = atom
               ; an option defined in a Standards Track or
               ; Experimental RFC


option-val-comp = astring /
               option-val-comp *(SP option-val-comp) /
               "(" option-val-comp ")"
option-value = "(" option-val-comp ")"


option-vendor-tag = vendor-token "-" atom
               ; a vendor specific option, non-standard


patterns =  "(" list-mailbox *(SP list-mailbox) ")"


return-option = "SUBSCRIBED" / "CHILDREN" / option-extension


tagged-ext-comp = astring /

               tagged-ext-comp *(SP tagged-ext-comp) /

               "(" tagged-ext-comp ")"

               ;; Extensions that follow this general

               ;; syntax should use nstring instead of

               ;; astring when appropriate in the context

               ;; of the extension.

               ;; Note that a message set or a "number"

               ;; can always be represented as an "atom".

               ;; An URL should be represented as

               ;; a "quoted" string.

tagged-ext-simple = sequence-set / number

tagged-ext-val = tagged-ext-simple /

               "(" [tagged-ext-comp] ")"
