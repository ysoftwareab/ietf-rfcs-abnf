v=spf1 +mx +a:colo.example.com/28 -all

record      = version terms *SP
version     = "v=spf1"
terms       = *( 1*SP ( directive / modifier ) )

directive   = [ prefix ] mechanism
prefix      = "+" / "-" / "?" / "~"
mechanism   = ( all / include
                  / A / MX / PTR / IP4 / IP6 / exists
                  / unknown-mechanism )
modifier    = name "=" macro-string
name        = alpha *( alpha / digit / "-" / "_" / "." )
v=spf1 +mx -all
v=spf1 +mx redirect=_spf.example.com

all = "all"

v=spf1 +mx +a -all

include = "include" ":" domain-spec

A = "a" [ ":" domain-spec ] [ dual-cidr-length ]

MX = "mx" [ ":" domain-spec ] [ dual-cidr-length ]

PTR = "ptr" [ ":" domain-spec ]

IP4             = "ip4" ":" ip4-network [ ip4-cidr-length ]
IP6             = "ip6" ":" ip6-network [ ip6-cidr-length ]
ip4-cidr-length = "/" 1*DIGIT
ip6-cidr-length = "/" 1*DIGIT

ip4-network     = as per conventional dotted quad notation,
                     e.g. 192.0.2.0
ip6-network     = as per [RFC 3513], section 2.2,
                     e.g. 2001:DB8::CD30

exists = "exists" ":" domain-spec

v=spf1 exists:%{ir}.%{l1r+-}._spf.%{d} -all

redirect = "redirect" "=" domain-spec

explanation = "exp" "=" domain-spec

v=spf1 mx -all exp=explain._spf.%{d}

v=spf1 a mx ptr foo:_foo.%{d} -all

domain-spec   = *( macro-expand / macro-literal )
macro-string  = *( macro-expand / macro-literal / "/" )
macro-expand  = ( "%{" ALPHA transformer *delimiter "}" )
                   / "%%" / "%_" / "%-"
macro-literal = %x21-24 / %x26-2E / %x30-7E
                 ; visible characters except "%" and "/"
transformer   = *DIGIT [ "r" ]
delimiter     = "." / "-" / "+" / "," / "/" / "_" / "="

s  = <sender>
l  = local-part of <sender>
o  = domain of <sender>
d  = <domain>
i  = <ip>
p  = the validated host name of <ip>
v  = the string "in-addr" if <ip> is ipv4, or "ip6" if <ip> is
         ipv6

c  = SMTP client IP (easily readable format)
r  = domain name of host performing the check
t  = current timestamp

record      = version terms *SP
version     = "v=spf1"

terms       = *( 1*SP ( directive / modifier ) )

directive   = [ prefix ] mechanism
prefix      = "+" / "-" / "?" / "~"
mechanism   = ( all / include
                  / A / MX / PTR / IP4 / IP6 / exists
                  / unknown-mechanism )

all          = "all"
include      = "include"  ":" domain-spec
A            = "a"      [ ":" domain-spec ] [ dual-cidr-length ]
MX           = "mx"     [ ":" domain-spec ] [ dual-cidr-length ]
PTR          = "ptr"    [ ":" domain-spec ]
IP4          = "ip4"      ":" ip4-network   [ ip4-cidr-length ]
IP6          = "ip6"      ":" ip6-network   [ ip6-cidr-length ]
exists       = "exists"   ":" domain-spec

unknown-mechanism = name [ ":" macro-string ]

modifier    = redirect / explanation / unknown-modifier
redirect    = "redirect" "=" domain-spec
explanation = "exp" "=" domain-spec
unknown-modifier = name "=" macro-string


ip4-network  = as per conventional dotted quad notation,
                  e.g. 192.0.2.0
ip6-network  = as per [RFC 3513], section 2.2,
                  e.g. 2001:DB8::CD30

dual-cidr-length = [ ip4-cidr-length ] [ "/" ip6-cidr-length ]
ip4-cidr-length  = "/" 1*DIGIT
ip6-cidr-length  = "/" 1*DIGIT

domain-spec   = *( macro-expand / macro-literal )
macro-string  = *( macro-expand / macro-literal / "/" )
macro-expand  = ( "%{" ALPHA transformer *delimiter "}" )
                   / "%%" / "%_" / "%-"
macro-literal = %x21-24 / %x26-2E / %x30-7E
                 ; visible characters except "%" and "/"
transformer   = *DIGIT [ "r" ]
delimiter     = "." / "-" / "+" / "," / "/" / "_" / "="

name = ALPHA *( ALPHA / DIGIT / "-" / "_" / "." )
v=spf1 +all
      -- any <ip> passes

v=spf1 a -all
      -- hosts 192.0.2.10 and 192.0.2.11 pass

v=spf1 a:example.org -all
      -- no sending hosts pass since example.org has no A records

v=spf1 mx -all
      -- sending hosts 192.0.2.129 and 192.0.2.130 pass

v=spf1 mx:example.org -all
      -- sending host 192.0.2.140 passes

v=spf1 mx mx:example.org -all
      -- sending hosts 192.0.2.129, 192.0.2.130, and 192.0.2.140 pass

v=spf1 mx/30 mx:example.org/30 -all
      -- any sending host in 192.0.2.128/30 or 192.0.2.140/30 passes

v=spf1 ptr -all
      -- sending host 192.0.2.65 passes (reverse IP is valid and in
      example.com)
      -- sending host 192.0.2.140 fails (reverse IP is valid, but not in
      example.com)
      -- sending host 10.0.0.4 fails (reverse IP is not valid)

v=spf1 ip4:192.0.2.128/28 -all
      -- sending host 192.0.2.65 fails
      -- sending host 192.0.2.129 passes

v=spf1 mx
          include:mobile-users._spf.%{d}
          include:remote-users._spf.%{d}
          -all

v=spf1 exists:%{l1r+}.%{d}

v=spf1 exists:%{ir}.%{l1r+}.%{d}
