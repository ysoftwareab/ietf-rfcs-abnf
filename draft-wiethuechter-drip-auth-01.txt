



DRIP                                                     A. Wiethuechter
Internet-Draft                                                   S. Card
Intended status: Standards Track                           AX Enterprize
Expires: 11 January 2021                                    R. Moskowitz
                                                          HTT Consulting
                                                            10 July 2020


                      DRIP Authentication Formats
                    draft-wiethuechter-drip-auth-01

Abstract

   This document describes how to include trust into the ASTM Remote ID
   specification defined in ASTM 3411-19 under a Broadcast Remote ID
   (RID) scenario.  It defines a few different message schemes (based on
   the authentication message) that can be used to assure past messages
   sent by a UA and also act as an assurance for UA trustworthiness in
   the absence of Internet connectivity at the receiving node.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 11 January 2021.

Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Simplified BSD License text



Wiethuechter, et al.     Expires 11 January 2021                [Page 1]

Internet-Draft              DRIP Auth Formats                  July 2020


   as described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.1.  DRIP Requirements Addressed . . . . . . . . . . . . . . .   3
     1.2.  Terms and Definitions . . . . . . . . . . . . . . . . . .   3
       1.2.1.  Requirements Terminology  . . . . . . . . . . . . . .   3
       1.2.2.  Definitions . . . . . . . . . . . . . . . . . . . . .   3
   2.  Background  . . . . . . . . . . . . . . . . . . . . . . . . .   3
     2.1.  Problem Space And Document Focus  . . . . . . . . . . . .   4
     2.2.  ASTM Authentication Message . . . . . . . . . . . . . . .   4
     2.3.  Thoughts on ASTM Authentication Message . . . . . . . . .   6
   3.  DRIP Authentication Framing Formats . . . . . . . . . . . . .   7
     3.1.  General Frame . . . . . . . . . . . . . . . . . . . . . .   7
       3.1.1.  DRIP Header . . . . . . . . . . . . . . . . . . . . .   8
       3.1.2.  DRIP Authentication Data  . . . . . . . . . . . . . .   8
     3.2.  Wrapper Frame . . . . . . . . . . . . . . . . . . . . . .   8
       3.2.1.  UA Hierarchical Host Identity Tag . . . . . . . . . .  10
       3.2.2.  Trust Timestamp . . . . . . . . . . . . . . . . . . .  10
       3.2.3.  Authentication Data . . . . . . . . . . . . . . . . .  11
       3.2.4.  Signature . . . . . . . . . . . . . . . . . . . . . .  11
       3.2.5.  Forward Error Correction  . . . . . . . . . . . . . .  11
   4.  Bluetooth 4.X Formats . . . . . . . . . . . . . . . . . . . .  11
     4.1.  Certificate . . . . . . . . . . . . . . . . . . . . . . .  11
     4.2.  ASTM Message Wrapper  . . . . . . . . . . . . . . . . . .  13
     4.3.  Manifest  . . . . . . . . . . . . . . . . . . . . . . . .  13
       4.3.1.  Hash Algorithm And Operation  . . . . . . . . . . . .  13
       4.3.2.  4 Byte Manifest . . . . . . . . . . . . . . . . . . .  14
       4.3.3.  8 Byte Manifest . . . . . . . . . . . . . . . . . . .  14
       4.3.4.  Pseudo-blockchain Hashes  . . . . . . . . . . . . . .  15
       4.3.5.  Limitations . . . . . . . . . . . . . . . . . . . . .  16
     4.4.  Recommendations . . . . . . . . . . . . . . . . . . . . .  16
   5.  Bluetooth 5 Formats . . . . . . . . . . . . . . . . . . . . .  16
     5.1.  Certificate . . . . . . . . . . . . . . . . . . . . . . .  17
     5.2.  Message Pack Signature  . . . . . . . . . . . . . . . . .  17
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .  18
   7.  ASTM Considerations . . . . . . . . . . . . . . . . . . . . .  18
   8.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  19
   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  19
     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  19
     9.2.  Informative References  . . . . . . . . . . . . . . . . .  19
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  20







Wiethuechter, et al.     Expires 11 January 2021                [Page 2]

Internet-Draft              DRIP Auth Formats                  July 2020


1.  Introduction

   UA Systems (UAS) are usually in a volatile environment when it comes
   to communication.  UA are generally small with little computational
   (or flying) horsepower to carry standard communication equipment.
   This limits the mediums of communication to few viable options.

   Observer systems (e.g. smartphones and tablets) place further
   constraints on the communication options.  The Remote ID Broadcast
   messages MUST be available to applications on these platforms without
   modifying the devices.

   The ASTM standard [F3411-19] focuses on two ways of communicating to
   a UAS for RID: Broadcast and Network.

   This document will focus on adding trust to Broadcast RID in the
   current (and an expanded) authentication message format.

1.1.  DRIP Requirements Addressed

   The following [drip-requirements] will be addressed:

   1.  GEN 1: Provable Ownership

   2.  GEN 2: Provable Binding

   3.  GEN 3: Provable Registration

1.2.  Terms and Definitions

1.2.1.  Requirements Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

1.2.2.  Definitions

   See [drip-requirements] for common DRIP terms.

2.  Background








Wiethuechter, et al.     Expires 11 January 2021                [Page 3]

Internet-Draft              DRIP Auth Formats                  July 2020


2.1.  Problem Space And Document Focus

   The current standard for Remote ID (RID) does not, in any meaningful
   capacity, address the concerns of trust in the UA space with
   communication in the Broadcast RID environment.  This is a
   requirement that will need to be addressed eventually for various
   different parties that have a stake in the UA industry.

   The following subsections will provide a high level reference to the
   ASTM standard for authentication messages and how their current
   limitations effect trust in the Broadcast RID envirorment.

2.2.  ASTM Authentication Message






































Wiethuechter, et al.     Expires 11 January 2021                [Page 4]

Internet-Draft              DRIP Auth Formats                  July 2020


   Page 0:
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +---------------+-----------------------------------------------+
   |  Auth Header  |                                               |
   +---------------+  ASTM Authentication Headers  +---------------+
   |                                               |               |
   +-----------------------------------------------+               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                Authentication Data / Signature                |
   |                                                               |
   |                                                               |
   |                                                               |
   +---------------------------------------------------------------+

   Page 1 - 4:
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +---------------+-----------------------------------------------+
   |  Auth Header  |                                               |
   +---------------+                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                Authentication Data / Signature                |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   +---------------------------------------------------------------+

   Auth Header (1 byte):
           Contains basic Authentication information such as page
           number and authentication type.

   ASTM Authentication Headers: (6 bytes)
           Contains other header information for the authentication
           message from ASTM UAS RID Standard.

   Authentication Data / Signature: (109 bytes: 17+23*4)
           Opaque authentication data.

   The above diagram is the format defined by ASTM that is the frame
   which everything this document fits into.  The specific details of




Wiethuechter, et al.     Expires 11 January 2021                [Page 5]

Internet-Draft              DRIP Auth Formats                  July 2020


   the ASTM headers are abstracted away as they are not necessarily
   required for this document.

   One important detail that is relevant is the Authentication page has
   its own 1 byte header (Auth Header) which contains Authentication
   Type and Data Page Number.

2.3.  Thoughts on ASTM Authentication Message

   The format standardized by the ASTM is designed with a few major
   considerations in mind, which the authors feel put significant
   limitations on the expansion of the standard.

   The primary consideration (in this context) is the use of the
   Bluetooth 5.X Extended Frame format.  This method allows for a 255
   byte payload to be sent in what the ASTM refers to as a "Message
   Pack".

   The idea is to include up to five standard ASTM Broadcast RID
   messages (each of which are 25 bytes) plus a single authentication
   message (5 pages of 25 bytes each) in the Message Pack.  The
   reasoning is then the authentication message is for the entire
   Message Pack.

   The authors have no issues with this proposed approach; this is a
   valid format to use for the authentication message provided by the
   ASTM.  However, by limiting the authentication message to ONLY five
   pages in the standard it ignores the possibility of other formatting
   options to be created and used.

   Another issue with this format, not fully addressed in this document
   is fragmentation.  Under Bluetooth 4.X, each page is sent seperately
   which can result in lose of pages on the reciever.  This is
   disasterous as the loss of even a single page means any signature is
   incomplete.

   With the current limitation of 5 pages, Forward Error Correction
   (FEC) is nearly impossible without sacrificing the amount of data
   sent.  More pages would allow FEC to be performed on the Authentation
   message pages so loss of pages can be mitigated.

   All these problems are further amplified by the speed at which UA fly
   and the Oberserver's position to recieve transmissions.  There is no
   guarentee that the Observer will recieve all the pages of even a 5
   page Authentication Message in the time it takes a UA to traverse
   across their line of sight.  Worse still is that is not including
   other UA in the area, which congestes the spectrum and could cause
   further confusion attempting to collate messages from various UA.



Wiethuechter, et al.     Expires 11 January 2021                [Page 6]

Internet-Draft              DRIP Auth Formats                  July 2020


   This specific problem is out of scope for this document and our
   solutions in general, but should be noted as a design consideration.

3.  DRIP Authentication Framing Formats

   Currently the ASTM AuthType of 0xD should be used to denote DRIP
   based Authentication.

3.1.  General Frame

   Page 0:
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +---------------+-----------------------------------------------+
   |  Auth Header  |                                               |
   +---------------+  ASTM Authentication Headers  +---------------+
   |                                               |  DRIP Header  |
   +-----------------------------------------------+---------------+
   |                                                               |
   |                                                               |
   |                                                               |
   |                    DRIP Authentication Data                   |
   |                                                               |
   |                                                               |
   |                                                               |
   +---------------------------------------------------------------+

   Page 1 - 9:
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +---------------+-----------------------------------------------+
   |  Auth Header  |                                               |
   +---------------+                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                    DRIP Authentication Data                   |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   +---------------------------------------------------------------+

   DRIP Header (1 byte):
           Message Type (4 bits):
                   Message Type                    Values
                   ------------                    ------



Wiethuechter, et al.     Expires 11 January 2021                [Page 7]

Internet-Draft              DRIP Auth Formats                  July 2020


                   Wrapped ASTM Message            0-1, 3-E
                   DRIP Authentication Message     2

           DRIP AuthType (4 bits):
                   Only used with upper 4 bits are 0x2.

                   AuthType                        Values
                   --------                        ------
                   Certificate                     0
                   Message Pack Signature          1
                   4 Byte Manifest (cSHAKE128)     2
                   8 Byte Manifest (cSHAKE128)     3

   DRIP Authentication Data (223 bytes):
           DRIP Authentication data up to 223 bytes long.

3.1.1.  DRIP Header

   The DRIP Header consists of two 4 bit fields and should be read as
   follows.

   First when wrapping an ASTM Message (see Section 4.3) the DRIP Header
   is filled with the first byte of the full 25 byte ASTM Message.  This
   first byte is always the ASTM Header, which contains the Message Type
   and Protocol Version.

   To determine if a DRIP Authentication Message is actually wrapping an
   ASTM Message the upper 4 bits of the DRIP Header should be checked.
   If these bits are anything but 0x2 then the message is a wrapped
   message.

   When the upper 4 bits are 0x2 then the Authentication Message is a
   specific DRIP format, which is defined in the lower 4 bits of the
   DRIP Header.

3.1.2.  DRIP Authentication Data

   This field has a maximum size of 223 bytes.  If the data is less than
   223 bytes and a page is only partially filled then the rest of the
   partially filled page must be null padded.

3.2.  Wrapper Frame

   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +---------------+---------------+---------------+---------------+
   |                                                               |
   |                        UA Hierarchical                        |



Wiethuechter, et al.     Expires 11 January 2021                [Page 8]

Internet-Draft              DRIP Auth Formats                  July 2020


   |                       Host Identity Tag                       |
   |                                                               |
   +---------------+---------------+---------------+---------------+
   |                         Trust Timestamp                       |
   +---------------+---------------+---------------+---------------+
   |                                                               |
   .                                                               .
   .                      Authentication Data                      .
   .                                                               .
   |                                                               |
   +---------------+---------------+---------------+---------------+
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                            Signature                          |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   +---------------+---------------+---------------+---------------+
   |                                                               |
   |                                                               |
   |                    Forward Error Correction                   |
   |                                                               |
   |                                                               |
   |                                               +---------------+
   |                                               |
   +---------------+---------------+---------------+

   UA Hierarchial Host Identity Tag (16 bytes):
           The UAs HHIT in byte form. Hashed from the EdDSA25519
           public key.

   Trust Timestamp (4 bytes):
           Timestamp denoting current time plus an offset to trust
           message to.

   Authentication Data (116 bytes):
           Opaque authentication data using DRIP format specified in
           the DRIP Header (not shown here). Up to 116 bytes.



Wiethuechter, et al.     Expires 11 January 2021                [Page 9]

Internet-Draft              DRIP Auth Formats                  July 2020


   Signature (64 bytes):
           Signature over precedding fields using the EdDSA25519
           keypair.

   Forward Error Correction (23 bytes):
           Mandatory under Bluetooth 4.X. Always last auth page.
           Reed Solomon across precedding pages.

   This framing resides within the General Frame's DRIP Authentication
   Data section.

3.2.1.  UA Hierarchical Host Identity Tag

   To avoid needing to the the UAs HHIT via the ASTM Basic ID in a
   detached fashion the 16 byte HHIT is included in the wrapper frame.

   The HHIT for the UA (and other entities in the RID and greater UTM
   system under DRIP) is an enhancement of the Host Identity Tag (HIT)
   of HIPv2 [RFC7401] introducing hierarchy as defined in HHIT
   [hierarchical-hit].

   Using Hierarchical HITs for UAS RID is outlined in HHIT based UAS RID
   [drip-uas-rid].

3.2.2.  Trust Timestamp

   Trust Timestamp MUST be current UNIX time plus an offset into the
   future.

   To avoid replay attacks the Trust Timestamp field must be well
   founded.  When wrapping a vector (position) message the payload WILL
   contain (by ASTM rules) constantly changing data, this includes its
   own timestamp.  In this case the Trust Timestamp could be argued as
   superfoulous.

   Other message types, such as Basic ID and Self-ID are static messages
   with no changing data.  To protect a replay of these signed messages
   the Trust Timestamp is the field during signing to be guarenteed to
   change.

   The offset used against the UNIX timestamp is not defined in this
   document.  Best practices to identify a acceptable offset should be
   used taking into consideration the UA envirorment, and propgation
   characteristics of the messages being sent.







Wiethuechter, et al.     Expires 11 January 2021               [Page 10]

Internet-Draft              DRIP Auth Formats                  July 2020


3.2.3.  Authentication Data

   This field has a max of 116 bytes in length.

3.2.4.  Signature

   The wrapper signature is generated using the private key half of the
   the UAs Host Identity (HI) and is done over all precedding data.
   ASTM/DRIP Headers are exclude from this operation.

3.2.5.  Forward Error Correction

   To help Bluetooth 4 achieve the goal of reliable reciept of paged
   messages a Forward Error Correction (FEC) scheme is introduced and is
   mandatory under DRIP.

   Due to the nature of Bluetooth 4 and the existing ASTM paging
   structure an optomization can be used.  If a Bluetooth frame fails
   its CRC check, then the frame is dropped without notification to the
   upper protocol layers.  From the Remote ID perspective this means the
   loss of a complete frame/message/page.  In Authentication messages,
   each page is already numbered so the loss of a page allows the
   recieving application to build a "dummy" page filled with nulls
   (other than the ASTM Header which is known).

   The prefered form of FEC is using Reed Solomon.  With this the entire
   authentication message (all pages, including headers) are used to
   generate 23 bytes of parity.  This parity is appended in one full
   page (always the last) allowing for recovery when any single page is
   lost in transmission.

   If more than one page is lost (>1/5 for 5 page messages, >1/10 for 10
   page messages) than the error rate of the link is already beyond
   saving and the application has more issues to deal with.

4.  Bluetooth 4.X Formats

   With Bluetooth 4.X formatting the goal is to attempt to bring
   reliable reciept of paged messages.

4.1.  Certificate










Wiethuechter, et al.     Expires 11 January 2021               [Page 11]

Internet-Draft              DRIP Auth Formats                  July 2020


   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +---------------+---------------+---------------+---------------+
   |                                                               |
   .                                                               .
   .                 Certificate: Registry on Aircraft             .
   .                                                               .
   |                                                               |
   +---------------+---------------+---------------+---------------+
   |                                                               |
   |                                                               |
   |                    Forward Error Correction                   |
   |                                                               |
   |                                                               |
   |                                               +---------------+
   |                                               |
   +---------------+---------------+---------------+

   Certificate: Registry on Aircraft (200 bytes):
           A certificate granted by the Registry that asserts the
           binding of UA to the given Registry.

   Forward Error Correction (23 bytes):
           Mandatory under Bluetooth 4.X. Reed Solomon across precedding
           fields (including ASTM/DRIP Headers).

   This DRIP Authentication type uses the General Frame format, filling
   the DRIP Authentication Data field with a 200 byte Certificate and 23
   bytes of Reed Solomon FEC.

   What this grants is the ability to authenticate UA information when
   the receiving device of the observer (e.g. a smartphone with a
   dedicated RID application) has no Internet service (e.g.  LTE
   signal).

   The Certificate: Registry on Aircraft (Cra) is in practice a binding
   claim between the Registry and the Aircraft, asserting the
   relationship between the two entities.  Cra signs another
   certificate, Caa (Certificate: Aircraft on Aircraft), that is created
   during UA provisioning.

   Importantly this certificate allows offline signature verification
   from the UA.  This is as the UA HI is included in the certificate.
   Also included is the HHIT of the Registry to check the local
   shortlist of Registries that the Observer device trusts (mapping
   HHITs to HIs).





Wiethuechter, et al.     Expires 11 January 2021               [Page 12]

Internet-Draft              DRIP Auth Formats                  July 2020


   More details about Caa, Cra, other certificates and the provisioning
   process can be found in [drip-identity-claims].

4.2.  ASTM Message Wrapper

   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +---------------+---------------+---------------+---------------+
   |                                                               |
   .                                                               .
   .                 ASTM Message: Type 0-1, 3-5                   .
   .                                                               .
   |                                                               |
   +---------------+---------------+---------------+---------------+

   ASTM Message: Type 0-1, 3-5 (24 bytes):
           A valid ASTM Message of Types 0, 1, 3, 4, or 5. First byte
           (ASTM Header) removed and used as DRIP Header.

   This DRIP Authentication type uses the Wrapper Frame format, filling
   the Authentication Data field with an ASTM Message (all types except
   Message Pack [0xF] and Authentication [0x2]).

   The first byte of the wrapped message should be used to fill in the
   DRIP Header field.  This corresponds directly with the ASTM Header
   field and can be used by the reciever to decode the wrapped message.

4.3.  Manifest

   By hashing previously sent messages and signing them we gain trust in
   UAs previous reports.  An observer who has been listening for any
   length of time can hash received messages and cross check against
   listed hashes.  The signature is signed across the list of hashes.

4.3.1.  Hash Algorithm And Operation

   The recommended hash to implement as a baseline is cSHAKE128 from
   [NIST.SP.800-185].  With cSHAKE128, the hash is computed as follows:

           cSHAKE128(MAC|Message, 8*H-Len, "", "RemoteID Auth Hash")

   The message MAC is prepended to the message, as the MAC is the only
   information that links a UA's messages from a specific UA.

   Other hash algorithms can be considered and used.  In this scenario
   an unused DRIP AuthType can be allocated for such.





Wiethuechter, et al.     Expires 11 January 2021               [Page 13]

Internet-Draft              DRIP Auth Formats                  July 2020


4.3.2.  4 Byte Manifest

   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +---------------+---------------+---------------+---------------+
   |                   Hash of Previous Manifest                   |
   +---------------+---------------+---------------+---------------+
   |                    Hash of Current Manifest                   |
   +---------------+---------------+---------------+---------------+
   |                         Message Hash 1                        |
   +---------------+---------------+---------------+---------------+
   |                         Message Hash 2                        |
   +---------------+---------------+---------------+---------------+
   .                                                               .
   .                                                               .
   .                                                               .
   +---------------+---------------+---------------+---------------+
   |                        Message Hash 27                        |
   +---------------+---------------+---------------+---------------+

   Hash of Previous Manifest: (4 bytes)
           A hash of the previously sent Authentication message.

   Hash of Current Manifest: (4 bytes)
           A hash of the current Authentication message.

   Message Hash: (4 bytes)
           A hash of a previously sent message. 27 max.

4.3.3.  8 Byte Manifest





















Wiethuechter, et al.     Expires 11 January 2021               [Page 14]

Internet-Draft              DRIP Auth Formats                  July 2020


   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +---------------+---------------+---------------+---------------+
   |                   Hash of Previous Manifest                   |
   |                                                               |
   +---------------+---------------+---------------+---------------+
   |                    Hash of Current Manifest                   |
   |                                                               |
   +---------------+---------------+---------------+---------------+
   |                         Message Hash 1                        |
   |                                                               |
   +---------------+---------------+---------------+---------------+
   |                         Message Hash 2                        |
   |                                                               |
   +---------------+---------------+---------------+---------------+
   .                                                               .
   .                                                               .
   .                                                               .
   +---------------+---------------+---------------+---------------+
   |                        Message Hash 12                        |
   |                                                               |
   +---------------+---------------+---------------+---------------+

   Hash of Previous Manifest: (8 bytes)
           A hash of the previously sent Authentication message.

   Hash of Current Manifest: (8 bytes)
           A hash of the current Authentication message.

   Message Hash: (8 bytes)
           A hash of a previously sent message. 12 max.

4.3.4.  Pseudo-blockchain Hashes

   Two special hashes are included; a previous manifest hash, which
   links to the previous manifest message, as well as a current manifest
   hash.  This gives a pseudo-blockchain provenance to the manifest
   message that could be traced back if the observer was present for
   extended periods of time.

   In regards to the creation and use of the current manifest hash
   field:

      During creation and signing of this message format this field MUST
      be set to 0.  So the signature will be based on this field being
      0, as well as its own hash.  It is an open question of if we
      compute the hash, then sign or sign then compute.




Wiethuechter, et al.     Expires 11 January 2021               [Page 15]

Internet-Draft              DRIP Auth Formats                  July 2020


      There a few different ways to cycle this message.  We can "roll
      up" the hash of 'current' to 'previous' when needed or to
      completely recompute the hash.  This mostly depends on the
      previous note.

4.3.5.  Limitations

   A potentional limitation to this format is dwell time of the UA.  If
   the UA is not sticking to a general area the most likely the Observer
   will not obtain many (if not all) of the messages in the manifest.
   Without the original messages recieved no verification can be done.
   Examples of such scenarios include delivery or survey UA.

4.4.  Recommendations

   Under ASTM Bluetooth 4.X rules transmission of dynamic messages are
   at a minumum of 1 per second while static messages (which is what
   Authentication is classified under) are 3 per second.

   Under DRIP the Certificate Message MUST be transmitted to properly
   meet the GEN 1 and GEN 3 requirement.

   The ASTM Message Wrapper and Manifest both satisify the GEN 2
   requirement.  At least one MUST be implemented to comply with the GEN
   2 requirement.

   A single Manifest can carry at most (using the full 10 page limit and
   8 byte hashes) 12 unique hashes of previously sent messages (of any
   type).  This results in a total of 22 (12 + 10) frames of Bluetooth
   data being transmitted over Bluetooth.

   In comparison the Message Wrapper sends 5 pages (each a single frame)
   for each wrapped message.  For backwards compatibility the
   implementation should also send the standard ASTM message that was
   wrapped for non-DRIP compliant recievers to obtain.  This method
   results in 72 total Bluetooth frames (12 + (12 * 5)) sent [this
   increases to 84 if using FEC].

   The question of which is better suited is up to the implementation.

5.  Bluetooth 5 Formats

   Under ASTM specification, Bluetooth 5 transport of Remote ID is to
   use the Message Pack (Type 0xF) format for all transmissions.  Under
   Message Pack all messages are sent together (in Message Type order)
   in a single Bluetooth frame (up to 250 bytes).  Message Packs are
   required by ASTM to be sent at a rate of 1 per second (like dynamic
   messages).



Wiethuechter, et al.     Expires 11 January 2021               [Page 16]

Internet-Draft              DRIP Auth Formats                  July 2020


   This gives the benefit of no longer is there any messsage or page
   fragmentation in transmission.  For this reason the recommended use
   of FEC such as Reed Solomon using in Bluetooth 4.X is not needed here
   and is impractical.

   Any of the Bluetooth 4.X formats can theoretically be used during
   Bluetooth 5 operation under ASTM, however the following subsections
   define a number of formats optomized for Message Pack and Bluetooth
   5.

5.1.  Certificate

   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +---------------+---------------+---------------+---------------+
   |                                                               |
   .                                                               .
   .                 Certificate: Registry on Aircraft             .
   .                                                               .
   |                                                               |
   +---------------+---------------+---------------+---------------+

   Certificate: Registry on Aircraft (200 bytes):
           A certificate granted by the Registry that asserts the
           binding of UA to the given Registry.

   With Message Pack the following MUST be included in when sending a
   DRIP Certificate Message: 1x Location Message 1x Authentication
   Message, DRIP AuthType 0 The Certificate Message (without FEC) only
   needs 9 pages for transmission, allowing the final 25 bytes to be
   used for a Location message.

5.2.  Message Pack Signature


















Wiethuechter, et al.     Expires 11 January 2021               [Page 17]

Internet-Draft              DRIP Auth Formats                  July 2020


   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +---------------+---------------+---------------+---------------+
   |                         Trust Timestamp                       |
   +---------------+---------------+---------------+---------------+
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                            Signature                          |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   |                                                               |
   +---------------+---------------+---------------+---------------+

   Trust Timestamp: (4 bytes)
           Timestamp denoting current time plus an offset to trust
           message to.

   Signature: (64 bytes)
           Signature over all messages in Message Pack using the
           EdDSA25519 keypair.

   The DRIP Message Pack Signature is a DRIP AuthType 1.  All messages
   in the message pack (excluding the authentication message itself) is
   signed.

6.  Security Considerations

   1.  Hash lengths (length vs strength/collision rate) 2. replay
   attacks with timestamps 3. static Cra (issue but nulled if UA signing
   other stuff dynamically meaning signatures will fail as HI won't
   match - this is probably a deeper disucssion topic for provisioning
   security considerations when we get to there)

7.  ASTM Considerations

   1.  Increase Authentication Page Count Max from 5 to 10.  2.  Add
   Authentication Type for DRIP (currently using 0xD)




Wiethuechter, et al.     Expires 11 January 2021               [Page 18]

Internet-Draft              DRIP Auth Formats                  July 2020


8.  Acknowledgments

   Ryan Quigley and James Mussi at AX Enterprize for early prototyping
   to find holes in the draft specifications.

9.  References

9.1.  Normative References

   [NIST.SP.800-185]
              Kelsey, J., Change, S., and R. Perlner, "SHA-3 derived
              functions: cSHAKE, KMAC, TupleHash and ParallelHash",
              National Institute of Standards and Technology report,
              DOI 10.6028/nist.sp.800-185, December 2016,
              <https://doi.org/10.6028/nist.sp.800-185>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

9.2.  Informative References

   [drip-identity-claims]
              Wiethuechter, A., Card, S., and R. Moskowitz, "DRIP
              Identity Claims", Work in Progress, Internet-Draft, draft-
              wiethuechter-drip-identity-claims-00, 23 March 2020,
              <https://tools.ietf.org/html/draft-wiethuechter-drip-
              identity-claims-00>.

   [drip-requirements]
              Card, S., Wiethuechter, A., Moskowitz, R., and A. Gurtov,
              "Drone Remote Identification Protocol (DRIP)
              Requirements", Work in Progress, Internet-Draft, draft-
              ietf-drip-reqs-01, 25 May 2020,
              <https://tools.ietf.org/html/draft-ietf-drip-reqs-01>.

   [drip-uas-rid]
              Moskowitz, R., Card, S., Wiethuechter, A., and A. Gurtov,
              "UAS Remote ID", Work in Progress, Internet-Draft, draft-
              moskowitz-drip-uas-rid-02, 28 May 2020,
              <https://tools.ietf.org/html/draft-moskowitz-drip-uas-rid-
              02>.




Wiethuechter, et al.     Expires 11 January 2021               [Page 19]

Internet-Draft              DRIP Auth Formats                  July 2020


   [F3411-19] ASTM International, "Standard Specification for Remote ID
              and Tracking", February 2020,
              <http://www.astm.org/cgi-bin/resolver.cgi?F3411>.

   [hierarchical-hit]
              Moskowitz, R., Card, S., and A. Wiethuechter,
              "Hierarchical HITs for HIPv2", Work in Progress, Internet-
              Draft, draft-moskowitz-hip-hierarchical-hit-05, 13 May
              2020, <https://tools.ietf.org/html/draft-moskowitz-hip-
              hierarchical-hit-05>.

   [RFC7401]  Moskowitz, R., Ed., Heer, T., Jokela, P., and T.
              Henderson, "Host Identity Protocol Version 2 (HIPv2)",
              RFC 7401, DOI 10.17487/RFC7401, April 2015,
              <https://www.rfc-editor.org/info/rfc7401>.

Authors' Addresses

   Adam Wiethuechter
   AX Enterprize
   4947 Commercial Drive
   Yorkville, NY 13495
   United States of America

   Email: adam.wiethuechter@axenterprize.com


   Stuart W. Card
   AX Enterprize
   4947 Commercial Drive
   Yorkville, NY 13495
   United States of America

   Email: stu.card@axenterprize.com


   Robert Moskowitz
   HTT Consulting
   Oak Park, MI 48237
   United States of America

   Email: rgm@labs.htt-consult.com









Wiethuechter, et al.     Expires 11 January 2021               [Page 20]
