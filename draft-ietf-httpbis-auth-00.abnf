auth-scheme    = token

auth-param     = token BWS "=" BWS ( token / quoted-string )

token68        = 1*( ALPHA / DIGIT /
                          "-" / "." / "_" / "~" / "+" / "/" ) *"="

challenge   = auth-scheme [ 1*SP ( token68 / #auth-param ) ]

      Note: Many clients fail to parse a challenge that contains an
      unknown scheme.  A workaround for this problem is to list well-
      supported schemes (such as "basic") first.

credentials = auth-scheme [ 1*SP ( token68 / #auth-param ) ]

WWW-Authenticate = 1#challenge

title="Login to \"apps\"", Basic realm="simple"

Authorization = credentials

Proxy-Authenticate = 1#challenge

Proxy-Authorization = credentials

BWS           = <BWS, see [MESSGNG], Section 3.2.3>
OWS           = <OWS, see [MESSGNG], Section 3.2.3>
quoted-string = <quoted-string, see [MESSGNG], Section 3.2.6>
token         = <token, see [MESSGNG], Section 3.2.6>

Authorization = credentials

BWS = <BWS, see [MESSGNG], Section 3.2.3>

OWS = <OWS, see [MESSGNG], Section 3.2.3>

Proxy-Authenticate = *( "," OWS ) challenge *( OWS "," [ OWS
    challenge ] )
Proxy-Authorization = credentials

WWW-Authenticate = *( "," OWS ) challenge *( OWS "," [ OWS challenge
    ] )

auth-param = token BWS "=" BWS ( token / quoted-string )
auth-scheme = token

challenge = auth-scheme [ 1*SP ( token68 / [ ( "," / auth-param ) *(
    OWS "," [ OWS auth-param ] ) ] ) ]
credentials = auth-scheme [ 1*SP ( token68 / [ ( "," / auth-param )
    *( OWS "," [ OWS auth-param ] ) ] ) ]

quoted-string = <quoted-string, see [MESSGNG], Section 3.2.6>

token = <token, see [MESSGNG], Section 3.2.6>
token68 = 1*( ALPHA / DIGIT / "-" / "." / "_" / "~" / "+" / "/" )
    *"="

