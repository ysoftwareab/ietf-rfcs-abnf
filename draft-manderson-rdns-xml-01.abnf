name="10.in-addr.arpa" cust="IANA" ipversion="ipv4"
version="1.1" modified="2012-01-18T01:00:06"
state="active" href="https://host.example.org/ipv4/10">
version="1.0">
name="10.in-addr.arpa" cust="IANA" ipversion="ipv4"
version="1.0" submitted="2013-01-11T05:22:15"
state="pending" method="PUT"
ack="https://host.example.org/ack/25a531f50e5ba45"
href="https://host.example.org/queue/25a531f50e5ba45">
start = zone | zonelist | zonereflist

zonereflist = element zonereflist {
       attribute version {
         xsd:decimal { minInclusive="1.1" fractionDigits="1" }
       },
       zoneref*
zonelist = element zonelist {
       attribute version {
         xsd:decimal { minInclusive="1.1" fractionDigits="1" }
       },
       zone*
zoneref = element zoneref {
       attribute name { text },
       attribute href { xsd:anyURI }
zone = element zone {
       # The zone record's name, eg 10.in-addr.arpa
       attribute name { text },
       # The customer, optional, it is derived from known state.
       attribute cust { text }?,
       # The canonical URL for this zone record (optional)
       attribute href { xsd:anyURI }?,
       # The address IP version for the zone record (optional)
       attribute ipversion { "ipv4" | "ipv6" }?,
       # The administrative state of the zone (optional)
       attribute state { "active" | "pending" | "error" }?,
       # The last modified timestamp in UTC (optional)
       attribute modified  { xsd:dateTime }?,
       # The schema version (optional)
       attribute version {
         xsd:decimal { minInclusive="1.1" fractionDigits="1" }
       }?,
       # A zone NS RRset MUST have at least two NS records
       nserver,
       nserver+,
       # It MAY contain some DS records
       ds*
ds = element ds {
       # rdata MUST contain
       #  <Keytag> | <Algorithm> | <Digest type> | <Digest>
       # as per RFC4034
       #
       element rdata { text }
nserver = element nserver {
       # An nserver entry MUST contain a DNS FQDN
       # for a NS RR (RFC 1035)
       element fqdn { text }
start = queue | queuelist

queuelist = element queuelist {
       attribute version {
         xsd:decimal { minInclusive="1.0" fractionDigits="0" }
       },
       queue*
queue = element queue {
       # The zone record's name, eg 10.in-addr.arpa
       attribute name { text },
       # The customer, optional, derived from known state.
       attribute cust { text }?,
       # The canonical URL for this queue record (optional)
       attribute href { xsd:anyURI }?,
       # The acknowlgement URL for this queue record (optional)
       attribute ack { xsd:anyURI }?,
       # The address IP version for the zone record (optional)
       attribute ipversion { "ipv4" | "ipv6" }?,
       # The state of the zone (optional, and for a queue
       # SHOULD always be pending)
       attribute state { "pending" }?,
       # The submitted  timestamp (optional)
       attribute submitted  { xsd:dateTime }?,
       # The HTTP method used to update
       attribute method { "PUT" | "DELETE" },
       # The schema version (1.0) (optional)
       attribute version {
         xsd:decimal { minInclusive="1.0" fractionDigits="1" }
       }?,
       # A zone NS RRset must have at least two NS records
       nserver,
       nserver+,
       # It MAY contain some DS records
       ds*
ds = element ds {
       # rdata MUST contain  Flags | Protocol | Algorithm | Public Key
       # as per RFC4034
       #
       element rdata { text }
nserver = element nserver {
       # An nserver entry MUST contain a DNS FQDN
       # for a NS RR (RFC 1035)
       element fqdn { text }
