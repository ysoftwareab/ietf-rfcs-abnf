


NFSv4                                                       T. Myklebust
Internet-Draft                                                    NetApp
Intended status: Standards Track                           March 5, 2011
Expires: September 6, 2011


   Sharing change attribute implementation details with NFSv4 clients
             draft-myklebust-nfsv4-change-attribute-type-00

Abstract

   This document describes an extension to the NFSv4 protocol that
   allows the server to share information about the implementation of
   its change attribute with the client.  The aim is to improve the
   client's ability to determine the order in which parallel updates to
   the same file were processed.



































Myklebust               Expires September 6, 2011               [Page 1]

Internet-Draft         NFSv4 change_attribute_type            March 2011


Keywords

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 6, 2011.

Copyright Notice

   Copyright (c) 2011 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.














Myklebust               Expires September 6, 2011               [Page 2]

Internet-Draft         NFSv4 change_attribute_type            March 2011


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . 4
   2.  Definition of the 'change_attr_type' per-file system
       attribute . . . . . . . . . . . . . . . . . . . . . . . . . . . 5
   3.  References  . . . . . . . . . . . . . . . . . . . . . . . . . . 7
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . . . 8












































Myklebust               Expires September 6, 2011               [Page 3]

Internet-Draft         NFSv4 change_attribute_type            March 2011


1.  Introduction

   Although both the NFSv4 [RFC3530] and NFSv4.1 protocol [RFC5661],
   define the change attribute as being mandatory to implement, there is
   little in the way of guidance.  The only feature that is mandated by
   the spec is that the value must change whenever the file data or
   metadata change.

   While this allows for a wide range of implementations, it also leaves
   the client with a conundrum: how does it determine which is the most
   recent value for the change attribute in a case where several RPC
   calls have been issued in parallel?  In other words if two COMPOUNDs,
   both containing WRITE and GETATTR requests for the same file, have
   been issued in parallel, how does the client determine which of the
   two change attribute values returned in the replies to the GETATTR
   requests corresponds to the most recent state of the file?  In some
   cases, the only recourse may be to send another COMPOUND containing a
   third GETATTR that is fully serialised with the first two.

   In order to avoid this kind of inefficiency, we propose a method to
   allow the server to share details about how the change attribute is
   expected to evolve, so that the client may immediately determine
   which, out of the several change attribute values returned by the
   server, is the most recent.



























Myklebust               Expires September 6, 2011               [Page 4]

Internet-Draft         NFSv4 change_attribute_type            March 2011


2.  Definition of the 'change_attr_type' per-file system attribute

   enum change_attr_typeinfo = {
           NFS4_CHANGE_TYPE_IS_MONOTONIC_INCR         = 0,
           NFS4_CHANGE_TYPE_IS_VERSION_COUNTER        = 1,
           NFS4_CHANGE_TYPE_IS_VERSION_COUNTER_NOPNFS = 2,
           NFS4_CHANGE_TYPE_IS_TIME_METADATA          = 3,
           NFS4_CHANGE_TYPE_IS_UNDEFINED              = 4
   };

        +------------------+----+---------------------------+-----+
        | Name             | Id | Data Type                 | Acc |
        +------------------+----+---------------------------+-----+
        | change_attr_type | XX | enum change_attr_typeinfo | R   |
        +------------------+----+---------------------------+-----+

   The proposed solution is to enable the NFS server to provide
   additional information about how it expects the change attribute
   value to evolve after the file data or metadata has changed.  To do
   so, we define a new recommended attribute, 'change_attr_type', which
   may take values from enum change_attr_typeinfo as follows:

   NFS4_CHANGE_TYPE_IS_MONOTONIC_INCR:  The change attribute value MUST
      monotonically increase for every atomic change to the file
      attributes, data or directory contents.
   NFS4_CHANGE_TYPE_IS_VERSION_COUNTER:  The change attribute value MUST
      be incremented by one unit for every atomic change to the file
      attributes, data or directory contents.  This property is
      preserved when writing to pNFS data servers.
   NFS4_CHANGE_TYPE_IS_VERSION_COUNTER_NOPNFS:  The change attribute
      value MUST be incremented by one unit for every atomic change to
      the file attributes, data or directory contents.  In the case
      where the client is writing to pNFS data servers, the number of
      increments is not guaranteed to exactly match the number of
      writes.
   NFS4_CHANGE_TYPE_IS_TIME_METADATA:  The change attribute is
      implemented as suggested in the NFSv4 spec [RFC3530] in terms of
      the time_metadata attribute.
   NFS4_CHANGE_TYPE_IS_UNDEFINED:  The change attribute does not take
      values that fit into any of these categories.

   If either NFS4_CHANGE_TYPE_IS_MONOTONIC_INCR,
   NFS4_CHANGE_TYPE_IS_VERSION_COUNTER, or
   NFS4_CHANGE_TYPE_IS_TIME_METADATA are set, then the client knows at
   the very least that the change attribute is monotonically increasing,
   which is sufficient to resolve the question of which value is the
   most recent.




Myklebust               Expires September 6, 2011               [Page 5]

Internet-Draft         NFSv4 change_attribute_type            March 2011


   If the client sees the value NFS4_CHANGE_TYPE_IS_TIME_METADATA, then
   by inspecting the value of the 'time_delta' attribute it additionally
   has the option of detecting rogue server implementations that use
   time_metadata in violation of the spec.

   Finally, if the client sees NFS4_CHANGE_TYPE_IS_VERSION_COUNTER, it
   has the ability to predict what the resulting change attribute value
   should be after a COMPOUND containing a SETATTR, WRITE, or CREATE.
   This again allows it to detect changes made in parallel by another
   client.  The value NFS4_CHANGE_TYPE_IS_VERSION_COUNTER_NOPNFS permits
   the same, but only if the client is not doing pNFS WRITEs.








































Myklebust               Expires September 6, 2011               [Page 6]

Internet-Draft         NFSv4 change_attribute_type            March 2011


3.  References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", RFC 2119.

   [RFC3530]  Shepler, S., Callaghan, B., Robinson, D., Thurlow, R.,
              Beame, C., Eisler, M., and D. Noveck, "Network File System
              (NFS) version 4 Protocol", RFC 3530.

   [RFC5661]  Shepler, S., Eisler, M., and D. Noveck, "Network File
              System (NFS) Version 4 Minor Version 1 Protocol",
              RFC 5661.







































Myklebust               Expires September 6, 2011               [Page 7]

Internet-Draft         NFSv4 change_attribute_type            March 2011


Author's Address

   Trond Myklebust
   NetApp
   3215 Bellflower Ct
   Ann Arbor, MI  48103
   USA

   Phone: +1-734-662-6608
   Email: Trond.Myklebust@netapp.com









































Myklebust               Expires September 6, 2011               [Page 8]

