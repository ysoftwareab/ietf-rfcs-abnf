K1 = HMAC-SHA-256(key, 00 00 00 01 | constant | 00 | 00 00 00 80)
k = 192
K1 = HMAC-SHA-384(key, 00 00 00 01 | constant | 00 | 00 00 00 C0)
k = 256
K1 = HMAC-SHA-384(key, 00 00 00 01 | constant | 00 | 00 00 01 00)
saltp = enctype-name | 0x00 | salt
tkey = random-to-key(PBKDF2(passphrase, saltp,
                              iter_count, keylength))
base-key = KDF-HMAC-SHA2(tkey, "kerberos") where "kerberos" is the
                byte string {0x6B65726265726F73}.
 




Kc = KDF-HMAC-SHA2(base-key, usage | 0x99)
Ke = KDF-HMAC-SHA2(base-key, usage | 0xAA)
 




Ki = KDF-HMAC-SHA2(base-key, usage | 0x55)

N = random nonce of length 128 bits (the AES block size) 
IV = cipherstate
C = E(Ke, N | plaintext, IV)
H = HMAC(Ki, IV | C)
ciphertext = C | H[1..h]
cipherstate = the last full (128 bit) block of C
IV = cipherstate
cipherstate = the last full (128 bit) block of C
k = 128

k = 256

Kp  = KDF-HMAC-SHA2(base-key, "prf")
PRF = k-truncate(HMAC-SHA2(Kp, octet-string))

