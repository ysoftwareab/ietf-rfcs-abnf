MSDP Working Group                                     Bill Fenner
INTERNET-DRAFT                                       AT&T Research
Expires January 2001                                   Dave Thaler
                                                         Microsoft
                                                      14 July 2000




             Multicast Source Discovery protocol MIB
                   <draft-ietf-msdp-mib-04.txt>





Status of this Memo

This document is an Internet-Draft and is in full conformance with
all provisions of Section 10 of RFC2026.

Internet-Drafts are working documents of the Internet Engineering
Task Force (IETF), its areas, and its working groups.  Note that
other groups may also distribute working documents as Internet-
Drafts.

Internet-Drafts are draft documents valid for a maximum of six
months and may be updated, replaced, or obsoleted by other
documents at any time.  It is inappropriate to use Internet-
Drafts as reference material or to cite them other than as "work
in progress."

The list of current Internet-Drafts can be accessed at
http://www.ietf.org/ietf/1id-abstracts.txt

The list of Internet-Draft Shadow Directories can be accessed at
http://www.ietf.org/shadow.html.



Copyright Notice












Internet-Draft               MSDP MIB                 14 July 2000


Copyright (C) The Internet Society (1999).  All Rights Reserved.

1.  Abstract

This memo defines an experimental portion of the Management
Information Base (MIB) for use with network management protocols
in the Internet community.  In particular, it describes managed
objects used for managing Multicast Source Discovery Protocol
(MSDP) [17] speakers.

2.  Revision History

A record of changes which will be removed before publication.

??

 (1)   Converted all IpAddress items to
       InetAddressType/InetAddress pairs.  This bigtime violates
       RFC2578's rules about MIB evolution, so take extra care
       when implementing this change.

 (2)   Added msdpRequestsPriority, in order to allow configuration
       of multiple peers to whom Requests will be sent.  Note that
       this violates RFC2578's rules about MIB evolution, so take
       extra care when implementing this change.

 (3)   Removed DEFVAL on scalars, since it should only be needed
       for table row creation.

 (4)   Removed msdpPeerSAAdvPeriod, since the spec changed to say
       its value MUST be 60.

 (5)   Added none(0) to msdpPeerEncapsulationType enumeration XXX
       is this OK? should it be 4?

 (6)   Removed msdpPeerEncapsulationState since the encapsulation
       "negotiation" was removed from the spec.

 (7)   Added msdpRPAddress to specify the RP address to use when
       sourcing SA messages.

 (8)   Added msdpSACacheSourcePrefix to msdpSACacheTable, and
       added it to the INDEX.  Note that this violates RFC2578's
       rules about MIB evolution, so take extra care when
       implementing this change.





Expires January 2001                                      [Page 2]

Internet-Draft               MSDP MIB                 14 July 2000


 (9)   Completely renumbered the MIB, removing the extra level of
       msdpMIBobjects and creating an msdpScalars group to contain
       all scalars.  Note that this violates RFC2578's rules about
       MIB evolution, so take extra care when implementing this
       change.

16 December 1999

 (1)   Added msdpSAHoldDownPeriod, msdpPeerEncapsulationState,
       msdpPeerEncapsulationType, msdpPeerConnectionAttempts,
       msdpPeerInNotifications, msdpPeerOutNotifications, and
       msdpLastError

 (2)   Removed msdpPeerConfigMethod, since this has disappeared
       from the spec.

 (3)   Renamed the states in msdpPeerState to go with the state
       machine in the spec.

 (4)   Added msdpPeerLocalPort and msdpPeerRemotePort in order to
       provide full information about the TCP connection in use.
       I'd like to reorder the Peer Table but that can wait until
       the MIB gets published as an RFC in order to only change
       things like that once.

 (5)   Added msdpSACacheOriginRP as an INDEX to the
       msdpSACacheTable.  Note that this violates RFC2578's rules
       about MIB evolution, so take extra care when implementing
       this change.

25 June 1999

 (1)   Renamed to DRAFT-MSDP-MIB.  It will be renamed back to
       MSDP-MIB when it gets renumbered under mib-2, in order to
       avoid module naming problems.

 (2)   Turned msdpSendRequestsTo into a table in order to handle
       administratively scoped groups with different RP's.

27 May 1999

 (1)   Added IANA-assigned experimental OID

 (2)   Added msdpSendRequestsTo and msdpPeerProcessRequestsFrom to
       configure MSDP SA-Request/Response processing.





Expires January 2001                                      [Page 3]

Internet-Draft               MSDP MIB                 14 July 2000


 (3)   Added msdpPeerDataTtl to allow TTL scoping of data packets
       forwarded across MSDP peerings.

 (4)   Renumbered msdpSACacheInDataPackets and further items in
       msdpSACacheTable, to eliminate duplicate OIDs

20 April 1999

 (1)   initial version.


3.  The SNMP Network Management Framework

The SNMP Management Framework presently consists of five major
components:

o    An overall architecture, described in RFC 2271 [1].

o    Mechanisms for describing and naming objects and events for
     the purpose of management. The first version of this
     Structure of Management Information (SMI) is called SMIv1 and
     described in RFC 1155 [2], RFC 1212 [3] and RFC 1215 [4]. The
     second version, called SMIv2, is described in RFC 1902 [5],
     RFC 1903 [6] and RFC 1904 [7].

o    Message protocols for transferring management information.
     The first version of the SNMP message protocol is called
     SNMPv1 and described in RFC 1157 [8]. A second version of the
     SNMP message protocol, which is not an Internet standards
     track protocol, is called SNMPv2c and described in RFC 1901
     [9] and RFC 1906 [10].  The third version of the message
     protocol is called SNMPv3 and described in RFC 1906 [10], RFC
     2272 [11] and RFC 2274 [12].

o    Protocol operations for accessing management information. The
     first set of protocol operations and associated PDU formats
     is described in RFC 1157 [8]. A second set of protocol
     operations and associated PDU formats is described in RFC
     1905 [13].

o    A set of fundamental applications described in RFC 2273 [14]
     and the view-based access control mechanism described in RFC
     2275 [15].







Expires January 2001                                      [Page 4]

Internet-Draft               MSDP MIB                 14 July 2000


Managed objects are accessed via a virtual information store,
termed the Management Information Base or MIB.  Objects in the MIB
are defined using the mechanisms defined in the SMI.

This memo specifies a MIB module that is compliant to the SMIv2. A
MIB conforming to the SMIv1 can be produced through the
appropriate translations. The resulting translated MIB must be
semantically equivalent, except where objects or events are
omitted because no translation is possible (use of Counter64).
Some machine readable information in SMIv2 will be converted into
textual descriptions in SMIv1 during the translation process.
However, this loss of machine readable information is not
considered to change the semantics of the MIB.


4.  Overview

This MIB module contains three scalars and three tables.  The
tables are:

o    the Requests Table, containing the longest-match table used
     to determine the peer to send SA-Requests to for a given
     group;

o    the Peer Table, containing information on the peers; and

o    the Source-Active Cache Table, containing the SA cache
     entries.






















Expires January 2001                                      [Page 5]

Internet-Draft               MSDP MIB                 14 July 2000


5.  Definitions

---
---
DRAFT-MSDP-MIB DEFINITIONS ::= BEGIN

IMPORTS
    MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE,
    experimental, Counter32, Gauge32, TimeTicks
        FROM SNMPv2-SMI
    RowStatus, TruthValue
        FROM SNMPv2-TC
    MODULE-COMPLIANCE, OBJECT-GROUP, NOTIFICATION-GROUP
        FROM SNMPv2-CONF
    InetAddressType, InetAddress
        FROM INET-ADDRESS-MIB;

msdpMIB MODULE-IDENTITY
    LAST-UPDATED "9912160000Z"
    ORGANIZATION "IETF MSDP Working Group"
    CONTACT-INFO
            " Bill Fenner
              75 Willow Road
              Menlo Park, CA  94025
              Phone: +1 650 867 6073
              E-mail: fenner@research.att.com

              Dave Thaler
              One Microsoft Way
              Redmond, WA  98052
              Phone: +1 425 703 8835
              Email: dthaler@microsoft.com"
    DESCRIPTION
            "An experimental MIB module for MSDP Management."
    ::= { experimental 92 }

msdp           OBJECT IDENTIFIER ::= { msdpMIB 1 }

msdpScalars    OBJECT IDENTIFIER ::= { msdp 1 }


msdpEnabled OBJECT-TYPE
    SYNTAX     TruthValue
    MAX-ACCESS read-write
    STATUS     current





Expires January 2001                                      [Page 6]

Internet-Draft               MSDP MIB                 14 July 2000


    DESCRIPTION
            "The state of MSDP on this MSDP speaker - globally
            enabled or disabled."
    ::= { msdpScalars 1 }

msdpCacheLifetime OBJECT-TYPE
    SYNTAX     TimeTicks
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
            "The lifetime given to SA cache entries when created
            or refreshed.  This is the [SA-State-Period] in the
            MSDP spec.  A value of 0 means no SA caching is done
            by this MSDP speaker."
    ::= { msdpScalars 2 }

msdpNumSACacheEntries OBJECT-TYPE
    SYNTAX     Gauge32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The total number of entries in the SA Cache table."
    ::= { msdpScalars 3 }

msdpSAHoldDownPeriod OBJECT-TYPE
    SYNTAX     INTEGER (1..2147483647)
    UNITS      "seconds"
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of seconds in the MSDP SA Hold-down
            period."
    ::= { msdpScalars 4 }

msdpSAStatePeriod OBJECT-TYPE
    SYNTAX     INTEGER (1..2147483647)
    UNITS      "seconds"
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of seconds in the MSDP SA State period."
    ::= { msdpScalars 5 }


msdpRPAddressType OBJECT-TYPE





Expires January 2001                                      [Page 7]

Internet-Draft               MSDP MIB                 14 July 2000


    SYNTAX     InetAddressType
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
            "The type of the RP address used when sourcing MSDP SA
            messages.  May be unknown(0) on non-RP's or when the
            PIM RP address is correct."
    ::= { msdpScalars 6 }

msdpRPAddress OBJECT-TYPE
    SYNTAX     InetAddress
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
            "The RP address used when sourcing MSDP SA messages.
            May be a null string on non-RP's or when the PIM RP
            address is correct."
    ::= { msdpScalars 7 }

---
--- The MSDP Requests table
---

msdpRequestsTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF MsdpRequestsEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The (conceptual) table listing group ranges and MSDP
            peers used when deciding where to send an SA Request
            message when required.  If SA Caching is enabled, this
            table may be empty."
    ::= { msdp 2 }

msdpRequestsEntry OBJECT-TYPE
    SYNTAX     MsdpRequestsEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "An entry (conceptual row) representing a group range
            used when deciding where to send an SA Request
            message."
    INDEX { msdpRequestsGroupAddressType, msdpRequestsGroupAddress,
            msdpRequestsGroupMaskType, msdpRequestsGroupMask,
            msdpRequestsPriority }





Expires January 2001                                      [Page 8]

Internet-Draft               MSDP MIB                 14 July 2000


    ::= { msdpRequestsTable 1 }


MsdpRequestsEntry ::= SEQUENCE {
    msdpRequestsGroupAddressType        InetAddressType,
    msdpRequestsGroupAddress            InetAddress,
    msdpRequestsGroupMaskType           InetAddressType,
    msdpRequestsGroupMask               InetAddress,
    msdpRequestsPriority                INTEGER,
    msdpRequestsPeerType                InetAddressType,
    msdpRequestsPeer                    InetAddress,
    msdpRequestsStatus                  RowStatus
}


msdpRequestsGroupAddressType OBJECT-TYPE
    SYNTAX     InetAddressType
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The address type of msdpRequestsGroupAddress.
            XXX???must be ip4 or ip6XXX"
    ::= { msdpRequestsEntry 1 }

msdpRequestsGroupAddress OBJECT-TYPE
    SYNTAX     InetAddress (SIZE(1..56))
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The group address that, when combined with the mask
            in this entry, represents the group range for which
            this peer will service MSDP SA Requests."
    ::= { msdpRequestsEntry 2 }

msdpRequestsGroupMaskType OBJECT-TYPE
    SYNTAX     InetAddressType
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The address type of msdpRequestsGroupMask.  MUST be
            the same as msdpRequestsGroupAddressType."
    ::= { msdpRequestsEntry 3 }

msdpRequestsGroupMask OBJECT-TYPE
    SYNTAX     InetAddress (SIZE(1..56))





Expires January 2001                                      [Page 9]

Internet-Draft               MSDP MIB                 14 July 2000


    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The mask that, when combined with the group address
            in this entry, represents the group range for which
            this peer will service MSDP SA Requests."
    ::= { msdpRequestsEntry 4 }

msdpRequestsPriority OBJECT-TYPE
    SYNTAX     INTEGER (0..100)
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The priority of this peer.  The peer with the lowest
            priority value with which we have an active peering
            session (i.e. msdpPeerState = established(4)) is the
            peer to whom SA requests for groups matching the
            entry's group range will be sent.  If there are
            multiple entries with the same priority, an
            implementation MAY send SA-Requests to each peer."
    ::= { msdpRequestsEntry 5 }

msdpRequestsPeerType OBJECT-TYPE
    SYNTAX     InetAddressType
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "The address type of msdpRequestsPeer."
    ::= { msdpRequestsEntry 6 }

msdpRequestsPeer OBJECT-TYPE
    SYNTAX     InetAddress
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "The peer to which MSDP SA Requests for groups
            matching this entry's group range will be sent.  Must
            match the INDEX of a row in the msdpPeerTable."
    ::= { msdpRequestsEntry 7 }

msdpRequestsStatus OBJECT-TYPE
    SYNTAX     RowStatus
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION





Expires January 2001                                     [Page 10]

Internet-Draft               MSDP MIB                 14 July 2000


            "The status of this row, by which new rows may be
            added to the table."
    ::= { msdpRequestsEntry 8 }

---
--- The MSDP Peer table
---

msdpPeerTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF MsdpPeerEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The (conceptual) table listing the MSDP speaker's
            peers."
    ::= { msdp 3 }

msdpPeerEntry OBJECT-TYPE
    SYNTAX     MsdpPeerEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "An entry (conceptual row) representing an MSDP peer."
    INDEX      { msdpPeerRemoteAddressType, msdpPeerRemoteAddress }
    ::= { msdpPeerTable 1 }

MsdpPeerEntry ::= SEQUENCE {
    msdpPeerRemoteAddressType         InetAddressType,  -- index
    msdpPeerRemoteAddress             InetAddress,
    msdpPeerState                     INTEGER,    -- read-only objects:
    msdpPeerRPFFailures               Counter32,
    msdpPeerInSAs                     Counter32,
    msdpPeerOutSAs                    Counter32,
    msdpPeerInSARequests              Counter32,
    msdpPeerOutSARequests             Counter32,
    msdpPeerInSAResponses             Counter32,
    msdpPeerOutSAResponses            Counter32,
    msdpPeerInControlMessages         Counter32,
    msdpPeerOutControlMessages        Counter32,
    msdpPeerInDataPackets             Counter32,
    msdpPeerOutDataPackets            Counter32,
    msdpPeerFsmEstablishedTransitions Counter32,
    msdpPeerFsmEstablishedTime        Gauge32,
    msdpPeerInMessageElapsedTime      Gauge32,
    msdpPeerLocalAddressType          InetAddressType,  -- configuration objects:





Expires January 2001                                     [Page 11]

Internet-Draft               MSDP MIB                 14 July 2000


    msdpPeerLocalAddress              InetAddress,
    msdpPeerConnectRetryInterval      INTEGER,
    msdpPeerHoldTimeConfigured        INTEGER,
    msdpPeerKeepAliveConfigured       INTEGER,
    msdpPeerDataTtl                   INTEGER,
    msdpPeerProcessRequestsFrom       TruthValue,
    msdpPeerStatus                    RowStatus,
    msdpPeerRemotePort                INTEGER,   -- back to read-only:
    msdpPeerLocalPort                 INTEGER,
    msdpPeerEncapsulationType         INTEGER,
    msdpPeerConnectionAttempts        Counter32,
    msdpPeerInNotifications           Counter32,
    msdpPeerOutNotifications          Counter32,
    msdpPeerLastError                 OCTET STRING
}


msdpPeerRemoteAddressType OBJECT-TYPE
    SYNTAX     InetAddressType
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The address type of msdpPeerRemoteAddress."
    ::= { msdpPeerEntry 1 }

msdpPeerRemoteAddress OBJECT-TYPE
    SYNTAX     InetAddress (SIZE(1..56))
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The address of the remote MSDP peer."
    ::= { msdpPeerEntry 2 }

msdpPeerState OBJECT-TYPE
    SYNTAX     INTEGER { inactive(1),
                         listen(2),
                         connecting(3),
                         established(4),
                         disabled(5)
                       }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The state of the MSDP TCP connection with this peer."
    ::= { msdpPeerEntry 3 }





Expires January 2001                                     [Page 12]

Internet-Draft               MSDP MIB                 14 July 2000


msdpPeerRPFFailures OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of RPF failures on SA messages received
            from this peer."
    ::= { msdpPeerEntry 4 }

msdpPeerInSAs OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of MSDP SA messages received on this
            connection.  This object should be initialized to zero
            when the connection is established."
    ::= { msdpPeerEntry 5 }

msdpPeerOutSAs OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of MSDP SA messages transmitted on this
            connection.  This object should be initialized to zero
            when the connection is established."
    ::= { msdpPeerEntry 6 }

msdpPeerInSARequests OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of MSDP SA-Request messages received on
            this connection.  This object should be initialized to
            zero when the connection is established."
    ::= { msdpPeerEntry 7 }

msdpPeerOutSARequests OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of MSDP SA-Request messages transmitted on





Expires January 2001                                     [Page 13]

Internet-Draft               MSDP MIB                 14 July 2000


            this connection.  This object should be initialized to
            zero when the connection is established."
    ::= { msdpPeerEntry 8 }

msdpPeerInSAResponses OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of MSDP SA-Response messages received on
            this connection.  This object should be initialized to
            zero when the connection is established."
    ::= { msdpPeerEntry 9 }

msdpPeerOutSAResponses OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of MSDP SA Response messages transmitted
            on this TCP connection.  This object should be
            initialized to zero when the connection is
            established."
    ::= { msdpPeerEntry 10 }

msdpPeerInControlMessages OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The total number of MSDP messages received on this
            TCP connection.  This object should be initialized to
            zero when the connection is established."
    ::= { msdpPeerEntry 11 }

msdpPeerOutControlMessages OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The total number of MSDP messages transmitted on this
            TCP connection.  This object should be initialized to
            zero when the connection is established."
    ::= { msdpPeerEntry 12 }






Expires January 2001                                     [Page 14]

Internet-Draft               MSDP MIB                 14 July 2000


msdpPeerInDataPackets OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The total number of encapsulated data packets
            received from this peer.  This object should be
            initialized to zero when the connection is
            established."
    ::= { msdpPeerEntry 13 }

msdpPeerOutDataPackets OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The total number of encapsulated data packets sent to
            this peer.  This object should be initialized to zero
            when the connection is established."
    ::= { msdpPeerEntry 14 }

msdpPeerFsmEstablishedTransitions OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The total number of times the MSDP FSM transitioned
            into the established state."
    ::= { msdpPeerEntry 15 }

msdpPeerFsmEstablishedTime OBJECT-TYPE
    SYNTAX     Gauge32
    UNITS      "seconds"
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "This timer indicates how long (in seconds) this peer
            has been in the Established state or how long since
            this peer was last in the Established state.  It is
            set to zero when a new peer is configured or the MSDP
            speaker is booted."
    ::= { msdpPeerEntry 16 }

msdpPeerInMessageElapsedTime OBJECT-TYPE
    SYNTAX     Gauge32





Expires January 2001                                     [Page 15]

Internet-Draft               MSDP MIB                 14 July 2000


    UNITS      "seconds"
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "Elapsed time in seconds since the last MSDP message
            was received from the peer.  Each time
            msdpPeerInControlMessages is incremented, the value of
            this object is set to zero (0)."
    ::= { msdpPeerEntry 17 }

msdpPeerLocalAddressType OBJECT-TYPE
    SYNTAX     InetAddressType
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "The address type of msdpPeerLocalAddress."
    ::= { msdpPeerEntry 18 }

msdpPeerLocalAddress OBJECT-TYPE
    SYNTAX     InetAddress
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "The local IP address of this entry's MSDP
            connection."
    ::= { msdpPeerEntry 19 }

msdpPeerConnectRetryInterval OBJECT-TYPE
    SYNTAX     INTEGER (1..65535)
    UNITS      "seconds"
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "Time interval in seconds for the [ConnectRetry-
            period] for this peer."
    DEFVAL { 120 }
    ::= { msdpPeerEntry 20 }

msdpPeerHoldTimeConfigured OBJECT-TYPE
    SYNTAX     INTEGER  ( 0 | 3..65535 )
    UNITS      "seconds"
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "Time interval in seconds for the [Hold-Time-Period]





Expires January 2001                                     [Page 16]

Internet-Draft               MSDP MIB                 14 July 2000


            configured for this MSDP speaker with this peer."
    DEFVAL { 90 }
    ::= { msdpPeerEntry 21 }

msdpPeerKeepAliveConfigured OBJECT-TYPE
    SYNTAX     INTEGER ( 0 | 1..21845 )
    UNITS      "seconds"
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "Time interval in seconds for the [KeepAlive-Period]
            configured for this MSDP speaker with this peer.  A
            reasonable maximum value for this timer would be
            configured to be one third of that of
            msdpPeerHoldTimeConfigured.  If the value of this
            object is zero (0), no periodic KEEPALIVE messages are
            sent to the peer after the MSDP connection has been
            established."
    DEFVAL { 30 }
    ::= { msdpPeerEntry 22 }

msdpPeerDataTtl OBJECT-TYPE
    SYNTAX     INTEGER (0..255)
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "The minimum TTL a packet is required to have before
            it may be forwarded using SA encapsulation to this
            peer."
    ::= { msdpPeerEntry 23 }

msdpPeerProcessRequestsFrom OBJECT-TYPE
    SYNTAX     TruthValue
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "This object indicates whether or not to process MSDP
            SA Request messages from this peer.  If True(1), MSDP
            SA Request messages from this peer are processed and
            replied to (if appropriate) with SA Response messages.
            If False(2), MSDP SA Request messages from this peer
            are silently ignored.  It defaults to False when
            msdpCacheLifetime is 0 and True when msdpCacheLifetime
            is non-0."
    ::= { msdpPeerEntry 24 }





Expires January 2001                                     [Page 17]

Internet-Draft               MSDP MIB                 14 July 2000


msdpPeerStatus OBJECT-TYPE
    SYNTAX      RowStatus
    MAX-ACCESS  read-create
    STATUS      current
    DESCRIPTION
            "The RowStatus object by which peers can be added and
            deleted.  A transition to 'active' will cause the MSDP
            Start Event to be generated.  A transition out of the
            'active' state will cause the MSDP Stop Event to be
            generated.  Care should be used in providing write
            access to this object without adequate
            authentication."
    ::= { msdpPeerEntry 25 }

msdpPeerRemotePort OBJECT-TYPE
    SYNTAX     INTEGER (0..65535)
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The remote port for the TCP connection between the
            MSDP peers."
    ::= { msdpPeerEntry 26 }

msdpPeerLocalPort OBJECT-TYPE
    SYNTAX     INTEGER (0..65535)
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The local port for the TCP connection between the
            MSDP peers."
    ::= { msdpPeerEntry 27 }

msdpPeerEncapsulationType OBJECT-TYPE
    SYNTAX     INTEGER { none(0),
                         tcp(1),
                         udp(2),
                         gre(3)
                       }
    MAX-ACCESS read-create
    STATUS     current
    DESCRIPTION
            "The encapsulation in use when encapsulating data in
            SA messages to this peer."
    DEFVAL     { gre }
    ::= { msdpPeerEntry 28 }





Expires January 2001                                     [Page 18]

Internet-Draft               MSDP MIB                 14 July 2000


msdpPeerConnectionAttempts OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of times the state machine has
            transitioned from inactive to connecting."
    ::= { msdpPeerEntry 29 }

msdpPeerInNotifications OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of MSDP Notification messages received on
            this connection.  This object should be initialized to
            zero when the connection is established."
    ::= { msdpPeerEntry 30 }

msdpPeerOutNotifications OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of MSDP Notification messages transmitted
            on this connection.  This object should be initialized
            to zero when the connection is established."
    ::= { msdpPeerEntry 31 }

msdpPeerLastError OBJECT-TYPE
    SYNTAX     OCTET STRING (SIZE (2))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The last error code and subcode seen by this peer on
            this connection.  If no error has occurred, this field
            is zero.  Otherwise, the first byte of this two byte
            OCTET STRING contains the error code, and the second
            byte contains the subcode."
    DEFVAL   { '0000'h }
    ::= { msdpPeerEntry 32 }

---
--- The MSDP Source-Active Cache table
---





Expires January 2001                                     [Page 19]

Internet-Draft               MSDP MIB                 14 July 2000


msdpSACacheTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF MsdpSACacheEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The (conceptual) table listing the MSDP SA
            advertisements currently in the MSDP speaker's cache."
    ::= { msdp 4 }

msdpSACacheEntry OBJECT-TYPE
    SYNTAX     MsdpSACacheEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "An entry (conceptual row) representing an MSDP SA
            advertisement.  The INDEX to this table includes
            msdpSACacheOriginRP for diagnosing incorrect MSDP
            advertisements; normally a Group and Source pair would
            be unique."
    INDEX      { msdpSACacheGroupAddrType, msdpSACacheGroupAddr,
                msdpSACacheSourceAddrType, msdpSACacheSourceAddr,
                 msdpSACacheSourcePrefix,
                 msdpSACacheOriginRPType, msdpSACacheOriginRP }
    ::= { msdpSACacheTable 1 }

MsdpSACacheEntry ::= SEQUENCE {
    msdpSACacheGroupAddrType       InetAddressType,
    msdpSACacheGroupAddr           InetAddress,
    msdpSACacheSourceAddrType      InetAddressType,
    msdpSACacheSourceAddr          InetAddress,
    msdpSACacheSourcePrefix        INTEGER,
    msdpSACacheOriginRPType        InetAddressType,
    msdpSACacheOriginRP            InetAddress,
    msdpSACachePeerLearnedFromType InetAddressType,
    msdpSACachePeerLearnedFrom     InetAddress,
    msdpSACacheRPFPeerType         InetAddressType,
    msdpSACacheRPFPeer             InetAddress,
    msdpSACacheInSAs               Counter32,
    msdpSACacheInDataPackets       Counter32,
    msdpSACacheUpTime              TimeTicks,
    msdpSACacheExpiryTime          TimeTicks,
    msdpSACacheStatus              RowStatus
}







Expires January 2001                                     [Page 20]

Internet-Draft               MSDP MIB                 14 July 2000


msdpSACacheGroupAddrType OBJECT-TYPE
    SYNTAX     InetAddressType
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The address type of msdpSACacheGroupAddr."
    ::= { msdpSACacheEntry 1 }

msdpSACacheGroupAddr OBJECT-TYPE
    SYNTAX     InetAddress (SIZE(1..38))
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The group address of the SA Cache entry."
    ::= { msdpSACacheEntry 2 }

msdpSACacheSourceAddrType OBJECT-TYPE
    SYNTAX     InetAddressType
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The address type of msdpSACacheSourceAddr."
    ::= { msdpSACacheEntry 3 }

msdpSACacheSourceAddr OBJECT-TYPE
    SYNTAX     InetAddress (SIZE(1..38))
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The source address of the SA Cache entry."
    ::= { msdpSACacheEntry 4 }

msdpSACacheSourcePrefix OBJECT-TYPE
    SYNTAX     INTEGER (0..304)
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The Sprefix len of this SA Cache entry."
    ::= { msdpSACacheEntry 5 }

msdpSACacheOriginRPType OBJECT-TYPE
    SYNTAX     InetAddressType
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION





Expires January 2001                                     [Page 21]

Internet-Draft               MSDP MIB                 14 July 2000


            "The address type of msdpSACacheOriginRP."
    ::= { msdpSACacheEntry 6 }

msdpSACacheOriginRP OBJECT-TYPE
    SYNTAX     InetAddress (SIZE(1..38))
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
            "The RP of the SA Cache entry.  This field is in the
            INDEX in order to catch multiple RP's advertising the
            same source and group."
    ::= { msdpSACacheEntry 7 }

msdpSACachePeerLearnedFromType OBJECT-TYPE
    SYNTAX     InetAddressType
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The type of msdpSACachePeerLearnedFrom."
    ::= { msdpSACacheEntry 8 }

msdpSACachePeerLearnedFrom OBJECT-TYPE
    SYNTAX     InetAddress
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The peer from which this SA Cache entry was last
            accepted.  This address must correspond to the
            msdpPeerRemoteAddress value for a row in the MSDP Peer
            Table."
    ::= { msdpSACacheEntry 9 }

msdpSACacheRPFPeerType OBJECT-TYPE
    SYNTAX     InetAddressType
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The address type of msdpSACacheRPFPeer."
    ::= { msdpSACacheEntry 10 }

msdpSACacheRPFPeer OBJECT-TYPE
    SYNTAX     InetAddress
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION





Expires January 2001                                     [Page 22]

Internet-Draft               MSDP MIB                 14 July 2000


            "The peer from which an SA message corresponding to
            this cache entry would be accepted (i.e. the RPF peer
            for msdpSACacheOriginRP).  This may be different than
            msdpSACachePeerLearnedFrom if this entry was created
            by an MSDP SA-Response.  This address must correspond
            to the msdpPeerRemoteAddress value for a row in the
            MSDP Peer Table, or may be 0.0.0.0 if no RPF peer
            exists."
    ::= { msdpSACacheEntry 11 }

msdpSACacheInSAs OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of MSDP SA messages received relevant to
            this cache entry.  This object must be initialized to
            zero when creating a cache entry."
    ::= { msdpSACacheEntry 12 }

msdpSACacheInDataPackets OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The number of MSDP encapsulated data packets received
            relevant to this cache entry.  This object must be
            initialized to zero when creating a cache entry."
    ::= { msdpSACacheEntry 13 }

msdpSACacheUpTime OBJECT-TYPE
    SYNTAX     TimeTicks
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The time since this entry was placed in the SA
            cache."
    ::= { msdpSACacheEntry 14 }

msdpSACacheExpiryTime OBJECT-TYPE
    SYNTAX     TimeTicks
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
            "The time remaining before this entry will expire from





Expires January 2001                                     [Page 23]

Internet-Draft               MSDP MIB                 14 July 2000


            the SA cache."
    ::= { msdpSACacheEntry 15 }

msdpSACacheStatus OBJECT-TYPE
    SYNTAX     RowStatus
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
            "The status of this row in the table.  The only
            allowable actions are to retrieve the status, which
            will be `active', or to set the status to `destroy' in
            order to remove this entry from the cache."
    ::= { msdpSACacheEntry 16 }

-- Traps

msdpTraps   OBJECT IDENTIFIER ::= { msdp 0 }

msdpEstablished NOTIFICATION-TYPE
    OBJECTS { msdpPeerFsmEstablishedTransitions }
    STATUS  current
    DESCRIPTION
            "The MSDP Established event is generated when the MSDP
            FSM enters the ESTABLISHED state."
    ::= { msdpTraps 1 }

msdpBackwardTransition NOTIFICATION-TYPE
    OBJECTS { msdpPeerState }
    STATUS  current
    DESCRIPTION
            "The MSDPBackwardTransition Event is generated when
            the MSDP FSM moves from a higher numbered state to a
            lower numbered state."
    ::= { msdpTraps 2 }

-- conformance information

msdpMIBConformance OBJECT IDENTIFIER ::= { msdp 5 }
msdpMIBCompliances OBJECT IDENTIFIER ::= { msdpMIBConformance 1 }
msdpMIBGroups      OBJECT IDENTIFIER ::= { msdpMIBConformance 2 }

-- compliance statements

msdpMIBCompliance MODULE-COMPLIANCE
   STATUS current





Expires January 2001                                     [Page 24]

Internet-Draft               MSDP MIB                 14 July 2000


    DESCRIPTION
            "The compliance statement for entities which implement
            the MSDP MIB."
   MODULE  -- this module
   MANDATORY-GROUPS { msdpMIBGlobalsGroup }

       GROUP  msdpSACacheGroup
        DESCRIPTION
                "This group is mandatory if the MSDP speaker has
                the ability to cache SA messages."

   ::= { msdpMIBCompliances 1 }

-- units of conformance

msdpMIBGlobalsGroup OBJECT-GROUP
   OBJECTS { msdpEnabled }
   STATUS  current
    DESCRIPTION
            "A collection of objects providing information on
            global MSDP state."
   ::= { msdpMIBGroups 1 }

msdpMIBPeerGroup OBJECT-GROUP
   OBJECTS { msdpPeerRPFFailures,
             msdpPeerState, msdpPeerInSAs, msdpPeerOutSAs,
             msdpPeerInSARequests, msdpPeerOutSARequests,
             msdpPeerInSAResponses, msdpPeerOutSAResponses,
             msdpPeerInNotifications, msdpPeerOutNotifications,
             msdpPeerInControlMessages, msdpPeerOutControlMessages,
             msdpPeerInDataPackets, msdpPeerOutDataPackets,
             msdpPeerFsmEstablishedTransitions,
             msdpPeerFsmEstablishedTime,
             msdpPeerLocalAddressType, msdpPeerLocalAddress,
             msdpPeerRemotePort, msdpPeerLocalPort,
             msdpPeerConnectRetryInterval,
             msdpPeerHoldTimeConfigured,
             msdpPeerKeepAliveConfigured,
             msdpPeerInMessageElapsedTime,
             msdpPeerDataTtl,
             msdpPeerProcessRequestsFrom,
             msdpPeerEncapsulationType,
             msdpPeerConnectionAttempts,
             msdpPeerLastError,
             msdpPeerStatus





Expires January 2001                                     [Page 25]

Internet-Draft               MSDP MIB                 14 July 2000


           }
    STATUS  current
    DESCRIPTION
            "A collection of objects for managing MSDP peers."
    ::= { msdpMIBGroups 2 }

msdpSACacheGroup OBJECT-GROUP
    OBJECTS { msdpCacheLifetime, msdpNumSACacheEntries,
              msdpSAHoldDownPeriod, msdpSAStatePeriod,
              msdpSACachePeerLearnedFromType,
              msdpSACachePeerLearnedFrom,
              msdpSACacheRPFPeerType,
              msdpSACacheRPFPeer, msdpSACacheInSAs,
              msdpSACacheInDataPackets,
              msdpSACacheUpTime, msdpSACacheExpiryTime,
              msdpSACacheStatus }
    STATUS  current
    DESCRIPTION
            "A collection of objects for managing MSDP SA cache
            entries."
    ::= { msdpMIBGroups 3 }

msdpNotificationGroup NOTIFICATION-GROUP
    NOTIFICATIONS { msdpEstablished,
                    msdpBackwardTransition }
    STATUS  current
    DESCRIPTION
            "A collection of notifications for signaling changes
            in MSDP peer relationships."
    ::= { msdpMIBGroups 4 }

msdpRequestsGroup OBJECT-GROUP
    OBJECTS { msdpRequestsPeerType, msdpRequestsPeer, msdpRequestsStatus }
    STATUS  current
    DESCRIPTION
            "A collection of objects for managing MSDP Request
            transmission."
    ::= { msdpMIBGroups 5 }

msdpRPGroup OBJECT-GROUP
    OBJECTS { msdpRPAddressType, msdpRPAddress }
    STATUS     current
    DESCRIPTION
            "A collection of objects for MSDP speakers that source
            MSDP messages."





Expires January 2001                                     [Page 26]

Internet-Draft               MSDP MIB                 14 July 2000


    ::= { msdpMIBGroups 6 }

END















































Expires January 2001                                     [Page 27]

Internet-Draft               MSDP MIB                 14 July 2000


6.  Open Issues

Fix conformance info; it's incomplete.

*** BIG PROBLEM: Counters aren't allowed to go down without
wrapping.  This MIB has a ton of counters which are reset when
peeringgs reset.  Since the RMON MIB wants to do this too, draft-
ietf-rmonmib-rmon2hc-00.txt defines a ZeroBasedCounter32 TC,
deriving it from Gauge32.  However, the BGP4 MIB does this, so it
can't be too horribly wrong.


Need to add msdpPeerIfIndex (syntax ifIndexOrZero), put
msdpPeerInDataPackets
   msdpPeerOutDataPackets msdpPeerDataTtl
msdpPeerEncapsulationType in an optional conformance group that's
mandatory if you don't use index (and add a group for a new table
for admin scopes)

The Backwards Transition notification won't trigger on established
-> disabled.  Is that desired?

A table to express policy was suggested on the MSDP mailing list.
More discussion is required before including this in the MIB.

An OID for control of encapsulation (e.g. SA-encapsulate the first
N packets sent to this group?) was suggested, although it might be
more appropriate to be a table for fine-grained control.

Is the RowStatus object in the SACache appropriate?  (e.g. used to
flush potentially bad state)

Should there be a mechanism to describe alternate methods of RPF?
(e.g. statically configured peer address and RP address lists -
could be a table indexed by peer address and RP address with a
value of accept/deny)  One or more MSDP default-peers?

A "mesh group" appears to be a group of MSDP speakers which have
fully meshed connectivity; SA messages received from a member of a
"mesh group" are never forwarded to other members of the "mesh
group".  Should membership in a mesh group be in the peer table,
or is this a Cisco-specific issue which should be in a Cisco MIB?

Should the UDP port used for encapsulation be in the Peer table?






Expires January 2001                                     [Page 28]

Internet-Draft               MSDP MIB                 14 July 2000


7.  Security Considerations

This MIB contains readable objects whose values provide
information related to multicast tree construction.  There are
also a number of objects that have a MAX-ACCESS clause of read-
write and/or read-create, such as those which allow an
administrator to dynamically configure MSDP peers.

While unauthorized read access to the objects in this MIB is
relatively innocuous, unauthorized write access could cause a
denial-of-service, or could cause unauthorized creation and/or
manipulation of MSDP peering sessions.

Hence, the support for SNMP operations in a non-secure environment
without proper protection can have a negative effect on network
operations.

SNMPv1 by itself is such an insecure environment.  Even if the
network itself is secure (for example by using IPSec [16]), even
then, there is no control as to who on the secure network is
allowed to access and SET (change/create/delete) the objects in
this MIB.

It is recommended that the implementers consider the security
features as provided by the SNMPv3 framework.  Specifically, the
use of the User-based Security Model RFC 2274 [12] and the View-
based Access Control Model RFC 2275 [15] is recommended.

It is then a customer/user responsibility to ensure that the SNMP
entity giving access to this MIB, is properly configured to give
access to those objects only to those principals (users) that have
legitimate rights to access them.


8.  Acknowledgements

Tom Pusateri and Billy Ng both provided valuable input on this
draft.

9.  Authors' Addresses

     Bill Fenner
     75 Willow Road
     Menlo Park, CA  94025
     Phone: +1 650 867 6073





Expires January 2001                                     [Page 29]

Internet-Draft               MSDP MIB                 14 July 2000


     EMail: fenner@research.att.com

     Dave Thaler
     Microsoft Corporation
     One Microsoft Way
     Redmond, WA  98052-6399
     Phone: +1 425 703 8835
     EMail: dthaler@microsoft.com


10.  References

[1]  Harrington, D., Presuhn, R., and B. Wijnen, "An Architecture
     for Describing SNMP Management Frameworks", RFC 2271,
     Cabletron Systems, Inc., BMC Software, Inc., IBM T. J. Watson
     Research, January 1998.

[2]  Rose, M., and K. McCloghrie, "Structure and Identification of
     Management Information for TCP/IP-based Internets", RFC 1155,
     Performance Systems International, Hughes LAN Systems, May
     1990.

[3]  Rose, M., and K. McCloghrie, "Concise MIB Definitions", RFC
     1212, Performance Systems International, Hughes LAN Systems,
     March 1991.

[4]  M. Rose, "A Convention for Defining Traps for use with the
     SNMP", RFC 1215, Performance Systems International, March
     1991.

[5]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
     "Structure of Management Information for Version 2 of the
     Simple Network Management Protocol (SNMPv2)", RFC 1902, SNMP
     Research,Inc., Cisco Systems, Inc., Dover Beach Consulting,
     Inc., International Network Services, January 1996.

[6]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
     "Textual Conventions for Version 2 of the Simple Network
     Management Protocol (SNMPv2)", RFC 1903, SNMP Research, Inc.,
     Cisco Systems, Inc., Dover Beach Consulting, Inc.,
     International Network Services, January 1996.

[7]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
     "Conformance Statements for Version 2 of the Simple Network
     Management Protocol (SNMPv2)", RFC 1904, SNMP Research, Inc.,





Expires January 2001                                     [Page 30]

Internet-Draft               MSDP MIB                 14 July 2000


     Cisco Systems, Inc., Dover Beach Consulting, Inc.,
     International Network Services, January 1996.

[8]  Case, J., Fedor, M., Schoffstall, M., and J. Davin, "Simple
     Network Management Protocol", RFC 1157, SNMP Research,
     Performance Systems International, Performance Systems
     International, MIT Laboratory for Computer Science, May 1990.

[9]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
     "Introduction to Community-based SNMPv2", RFC 1901, SNMP
     Research, Inc., Cisco Systems, Inc., Dover Beach Consulting,
     Inc., International Network Services, January 1996.

[10] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
     "Transport Mappings for Version 2 of the Simple Network
     Management Protocol (SNMPv2)", RFC 1906, SNMP Research, Inc.,
     Cisco Systems, Inc., Dover Beach Consulting, Inc.,
     International Network Services, January 1996.

[11] Case, J., Harrington D., Presuhn R., and B. Wijnen, "Message
     Processing and Dispatching for the Simple Network Management
     Protocol (SNMP)", RFC 2272, SNMP Research, Inc., Cabletron
     Systems, Inc., BMC Software, Inc., IBM T. J. Watson Research,
     January 1998.

[12] Blumenthal, U., and B. Wijnen, "User-based Security Model
     (USM) for version 3 of the Simple Network Management Protocol
     (SNMPv3)", RFC 2274, IBM T. J. Watson Research, January 1998.

[13] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
     "Protocol Operations for Version 2 of the Simple Network
     Management Protocol (SNMPv2)", RFC 1905, SNMP Research, Inc.,
     Cisco Systems, Inc., Dover Beach Consulting, Inc.,
     International Network Services, January 1996.

[14] Levi, D., Meyer, P., and B. Stewart, "MPv3 Applications", RFC
     2273, SNMP Research, Inc., Secure Computing Corporation,
     Cisco Systems, January 1998.

[15] Wijnen, B., Presuhn, R., and K. McCloghrie, "View-based
     Access Control Model (VACM) for the Simple Network Management
     Protocol (SNMP)", RFC 2275, IBM T. J. Watson Research, BMC
     Software, Inc., Cisco Systems, Inc., January 1998.







Expires January 2001                                     [Page 31]

Internet-Draft               MSDP MIB                 14 July 2000


[16] R. Atkinson.  "Security architecture for the internet
     protocol", RFC 1825, August 1995.

[17] Farinacci, D., Rekhter, Y., Lothberg, P., Kilmer, H., and J.
     Hall, "Multicast Source Discovery Protocol (MSDP)", draft-
     ietf-msdp-spec-01.txt, March 1999.


11.  Full Copyright Statement

Copyright (C) The Internet Society (1999).  All Rights Reserved.

This document and translations of it may be copied and furnished
to others, and derivative works that comment on or otherwise
explain it or assist in its implmentation may be prepared, copied,
published and distributed, in whole or in part, without
restriction of any kind, provided that the above copyright notice
and this paragraph are included on all such copies and derivative
works.  However, this document itself may not be modified in any
way, such as by removing the copyright notice or references to the
Internet Society or other Internet organizations, except as needed
for the purpose of developing Internet standards in which case the
procedures for copyrights defined in the Internet Standards
process must be followed, or as required to translate it into
languages other than English.

The limited permissions granted above are perpetual and will not
be revoked by the Internet Society or its successors or assigns.

This document and the information contained herein is provided on
an "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET
ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.















Expires January 2001                                     [Page 32]

Internet-Draft               MSDP MIB                 14 July 2000



Table of Contents


1: Abstract .................................................    2
2: Revision History .........................................    2
3: The SNMP Network Management Framework ....................    4
4: Overview .................................................    5
5: Definitions ..............................................    6
6: Open Issues ..............................................   28
7: Security Considerations ..................................   29
8: Acknowledgements .........................................   29
9: Authors' Addresses .......................................   29
10: References ..............................................   30
11: Full Copyright Statement ................................   32



































Expires January 2001                                     [Page 33]
