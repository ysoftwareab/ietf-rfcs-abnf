OCTET          = <any 8-bit sequence of data>

CHAR           = <any US-ASCII character (octets 0 - 127)>

UPALPHA        = <any US-ASCII uppercase letter "A".."Z">

LOALPHA        = <any US-ASCII lowercase letter "a".."z">

ALPHA          = UPALPHA | LOALPHA

DIGIT          = <any US-ASCII digit "0".."9">

CTL            = <any US-ASCII control character
                    (octets 0 - 31) and DEL (127)>

CR             = <US-ASCII CR, carriage return (13)>
LF             = <US-ASCII LF, linefeed (10)>

SP             = <US-ASCII SP, space (32)>

HT             = <US-ASCII HT, horizontal-tab (9)>

CRLF           = CR LF


LWS            = [CRLF] 1*( SP | HT )

TEXT           = <any OCTET except CTLs>

HEX            = "A" | "B" | "C" | "D" | "E" | "F"
                  | "a" | "b" | "c" | "d" | "e" | "f" | DIGIT

word           = token | quoted-string

token          = 1*<any CHAR except CTLs or tspecials>

tspecials      = "(" | ")" | "<" | ">" | "@"
                  | "," | ";" | ":" | "
                  | "/" | "[" | "]" | "?" | "="
                  | "{" | "}"

quoted-string  = ( <"> *(qdtext) <"> )
qdtext         = <any TEXT except <">>

IDIP-request    = IDIP-command IDIP-parameters CRLF IDIP-data

IDIP-parameters = * (IDIP-parameter CRLF)

IDIP-command    = start-command
                   | end-command
                   | list-command
                   | call-command
                   | kill-command
                   | add-command
                   | delete-command
                   | disable-command
                   | enable-command
                   | login-command
                   | logout-command
                   | redirect-command


IDIP-response = IDIP-status IDIP-data

IDIP-status   = status-line IDIP-parameters

status-line   = status-code SP status-description CRLF
status-code   = successful      ; 1XX
                 | informational   ; 2XX
                 | rejected-error  ; 3XX
                 | unexpected-eror ; 4XX

successful       = "100" ; Success

informational    = "201" ; Continue
                    | "202" ; Forwarded
                    | "203" ; Moved
                    | "204" ; Unknown Caller
                    | "205" ; Identified As Anonymous

rejected-error   = "301" ; Invalid IDO Called
                    | "302" ; Authentication Failed
                    | "303" ; Permission Denied
                    | "304" ; Change Function Parameter

unexpected-error = "401" ; IDO Internal Error
                    | "402" ; Function Not Avaiable
                    | "403" ; Corrupted Data

status-description  = 1*TEXT

IDIP-data       = * <any OCTET>

IDIP-parameter   = IDIP-version
                    | IDO-To
                    | IDO-From
                    | content-type
                    | content-length
                    | accept-type
                    | IDIP-authenticate
                    | keyword-parameter
                    | location-parameter

IDIP-Version = "IDIP-Version:" SP "IDIP" "/" 1*DIGIT "." 1*DIGIT

IDO-To         = "To:" SP IDI-Address

IDO-From       = "From:" SP IDI-Address

IDI-Address    = identity_name "@" host

identity_name  = 1 * <CHAR except "@">

host           = <A legal Internet host domain name
                    or IP address (in dotted-decimal form),
                    as defined by Section 2.1 of RFC 1123>

content-type   = "Content-Type:" SP media-type

media-type     = type "/" subtype *( ";" parameter )

type           = token

subtype        = token

parameter      = attribute "=" value

attribute      = token

value          = token | quoted-string

accept-type       = "Accept-Type:" SP media-type

IDIP-authenticate = "IDIP-Authenticate:" SP auth-info

auth-info      = authenticate-style ";" authenticate-data

authenticate-data = base64data * ("," base64data)

authenticate-style = "style" "=" value

keyword-parameter  = "Keywords:" SP keywords

keywords           = word * ("," keywords)

location-parameter = "Location:" SP location

location           = IDO-Address


start-command     = "START" CRLF

end-command       = "END" CRLF

list-command      = "LIST" CRLF

call-command      = "CALL" CRLF

function-id       = word

kill-command      = "KILL" SP function-id CRLF

add-command       = "ADD" CRLF

delete-command    = "DELETE" CRLF

disable-command    = "DISABLE" function-id CRLF

enable-command    = "ENABLE" function-id CRLF

login-command    = "LOGIN" identity_name CRLF

logout-command    = "LOGOUT" CRLF

redirect-command    = "REDIRECT" IDI-Address CRLF

IDI-function   = "<idi-function>" *property "</idi-function>"

property       = function-id-prop ; Function ID Property
                  | desc-prop        ; Description Property
                  | keyword-prop     ; Keyword Property
                  | spec-prop        ; Specification Property
                  | parameters-prop  ; Parameter Property

function-id-prop = "<id>" function-id "</id>"

function-id = token

desc-prop      = "<desc>" description "</desc>"

description    = TEXT

spec-prop      = "<bag>" *( "<spec>" standard-name "</spec>" ) "</bag>"
                  | "<spec>" standard-name "</spec>"

standard-name  = TEXT

keyword-prop = "<bag>" *( "<keyword>" keyword "</keyword>" ) "</bag>"
                 | "<keyword>" keyword "</keyword>"

keyword       = TEXT

parameter-prop = "<bag>" *( parameter-desc ) "</bag>"
                  | parameter-desc

paramter-desc = "<fixed>" *( func-parameter ) "</fixed>"
                 | "<variable>" *( func-parameter ) "</variable>"

func-parameter = "<" param-name *( SP param-attr ) ">" param-value "</" param-name ">"

param-name = token

param-value = TEXT
