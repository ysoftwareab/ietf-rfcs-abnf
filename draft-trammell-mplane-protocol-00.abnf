simple-when = <singleton> |            # A single point in time
                 <range> |                # A range in time
                 <range> ' / ' <duration> # A range with a period

singleton = <iso8601> | # absolute singleton
               'now'       # relative singleton

range = <iso8601> ' ... ' <iso8601> | # absolute range
           <iso8601> ' + ' <duration> |  # relative range
           'now' ' ... ' <iso8061> |     # definite future
           'now' ' + ' <duration> |      # relative future
           <iso8601> ' ... ' 'now' |     # definite past
           'past ... now' |              # indefinite past
           'now ... future' |            # indefinite future
           <iso8601> ' ... ' 'future' |  # absolute indefinite future
           'past ... future' |           # forever

duration = [ <n> 'd' ] # days
              [ <n> 'h' ] # hours
              [ <n> 'm' ] # minute
              [ <n> 's' ] # seconds

iso8601 = <n> '-' <n> '-' <n> [' ' <n> ':' <n> ':' <n> [ '.' <n> ]]

repeated-when = # implicit inner scope of now
                  'repeat' <outer-when> |
                  # simple range/period
                  'repeat' <outer-when> '{' <inner-when> '}' |
                  # with crontab
                  'repeat' <range> 'cron' <crontab> '{' <inner-when> '}'

outer-when = <range> ' / ' <duration>

inner-when = 'now' |
               'now' ' + ' <duration> |
               'now' ' + ' <duration> / <duration>

crontab = <seconds> <minutes> <hours>
            <days-of-month> <days-of-week> <months>

seconds = '*' | <seconds-or-minutes-list>
minutes = '*' | <seconds-or-minutes-list>
seconds-or-minutes-list = <n> [ ',' <seconds-or-minutes-list> ]

hours = '*' | <hours-list>
hours-list = <n> [ ',' <hour-list> ] # 0<=n<24

days-of-month = '*' | <days-of-month-list>
days-of-month-list = <n> [ ',' <days-of-month-list> ] # 0<n<=31

days-of-week = '*' | <days-of-week-list>
days-of-week-list = <n> [ ',' <days-of-week-list> ] # 0<=n<=7
                      # 0 = Sunday, 1 = Monday, ..., 7 = Sunday

months = '*' | <months-list>
months-list = <n> [ ',' <months-list> ] # 0<n<=12

when = <simple-when> | <repeated-when>

   A repeated specification consists of an outer temporal specification
   that governs how often and for how long the specification will
   repeat, and an inner temporal specification which applies to each
   individual repetition.  The inner temporal specification must always
   be relative to the current time, i.e. the time of initiated of the
   repeated specification.  If the inner temporal specification is
   omitted, the specification is presumed to have the relative singleton
   temporal scope of "now".

   A repeated specification can have a cron-like schedule.  In this case
   the outer temporal specification only consists of a range scope to
   determine the time frame in which the cron-like schedule is valid.
   The crontab states the seconds, minutes, hours, days of the week,
   days of the month, and months at which the specification will repeat.
   An asterisk means to repeat at all legal values for that field.  The
   specification is only repeated if all fields match.

   Submitting a repeated specification will still result in a single
   receipt, or in multiple results.  These multiple results, resulting
   either directly from a single repeated specification, or from the a
   redemption of a receipt resulting from a repeated specification, are
   grouped in an envelope message.

   For example, a repeated specification to take measurements every
   second for five minutes, repeating once an hour indefinitely would
   be:

   "when: repeat now ... future / 1h { now + 5m / 1s }"

   This repeated specification is equivalent to the repeated submission
   of the same specification with a temporal scope of "when: { now + 5m
   / 1s }" once an hour until the specification is cancelled with an
   interrupt notification.

   As a second example, a repeated specification to take measurements
   every second for five minutes, repeating every half hour within a
   specific timeframe would be:

   "when: repeat 2014-01-01 13:00:00 ... 2014-06-01 14:00:00 / 30m { now
   + 5m / 1s }"

   Likewise, this repeated specification is equivalent to the submission
   of the same specification with a temporal scope of "when: { now + 5m
   / 1s }" at "2014-01-01 13:00:00", "2014-01-01 13:30:00", "2014-01-01
   14:00:00", "2014-01-01 14:30:00", and so on =, until (and including)
   "2014-06-01 13:30:00" and "2014-06-01 14:00:00".

   A repeated specification taking singleton measurements every hour
   indefinitely with an implicit inner temporal specification:

   "when: repeat now ... future / 1h"

   equivalent to submitting a specification with the temporal scope
   "now" hourly forever until interrupted.

   A crontab specification which is repeated on the first Monday of each
   month measuring every hour on that day for 5 minutes would be:
   \texttt{when: repeat now ... future cron 0 0 * 1,2,3,4,5,6,7 1 * {
   now + 5m } }
   A repeated specification to take measurements each day of the year at
   midnight would be: \texttt{when: repeat now ... future cron 0 0 0 * *
   * }

