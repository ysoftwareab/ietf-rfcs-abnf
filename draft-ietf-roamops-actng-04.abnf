adif-file            = header-spec *SEP 1*( SEP adif-record )
header-spec          = required-info SEP [optional-info SEP]
required-info        = device-spec SEP start-spec SEP
optional-info        = [version-spec SEP ] [description SEP] [default-protocol SEP]
device-spec          = "device:" *SP value
description          = "description:" *SPACE value
default-protocol     = "defaultProtocol:" *SPACE protocol
protocol             = "RADIUS" / "SNMP" / "TACACS+" / "L2TP"
version-spec         = "version:" *SPACE version-number
version-number       = 1*DIGIT ; version-number MUST be "1" for the
                                    ; ADIF format described in this document
start-spec           = "date:" *SP datetime
datetime             = date SP time
date                 = Dd SP Mon SP YYYY
time                 = hh ":" mm ":" ss SP zone
Dd                   = <the one or two decimal integer day of the month in
                            the range 1 to 31.>
Mon                  = "JAN" / "FEB" / "MAR" / "APR" / "MAY" / "JUN" /
                            "JUL" / "AUG" / "SEP" / "OCT" / "NOV" / "DEC"
YYYY                 = <the four decimal integer year in the range 0000 to
                            9999>
hh                   = <the two decimal integer hour of the day in the
                            range 00 to 24>
mm                   = <the two decimal integer minute of the hour in the
                            range 00 to 59>
ss                   = <the two decimal integer second of the minute in the
                            range 00 to 59>
zone                 = <A four digit, signed time zone offset, such as -0600 for
                            US Eastern Standard Time.  This may be supplemented by a
                            time zone name in parentheses, e.g., "-0800 (PDT)">
adif-record          = 1*(attrval-series SEP)
attrval-series       = 1*(attrval-spec)
attrval-spec         = attr ( (std-encoding / base-64-encoding) [sub-attr-encoding] )
std-encoding         = (":" *SP value )
base-64-encoding     = ("::" *SP base64-value )
base64-value         = <base-64-encoded value, defined in [11]>
sub-attr-enoding     = *(";" sub-attr "=" <value>)
sub-attr             = "M" / "H" / "VID" / "VT"
                            ; Mandatory, Hidden, Vendor ID, Vendor Type sub-attributes
attr                 = radattr / snmpattr / tacacsplusattr / l2tpattr
radattr              = ["RADIUS//"] radattrname
radattrname          = <a RADIUS attribute name, as defined in [3],[4]> /
                            <a RADIUS attribute number, as defined in [3],[4]>
snmpattr             = ["SNMP//"] snmpattrname
snmpattrname         = <an SNMP object ID> / <an SNMP attribute name>
tacacsplusattr       = ["TACACS+//"] tacacsplusattrname
tacacsplusattrname   = <a TACACS+ attribute name, as defined in [13]>
l2tpattr             = ["L2TP//"] l2tpattrname
l2tpattrname         = <an L2TP attribute number, as defined in [12]>
value                = 1*safe-initval *safe
safe                 = <ASCII values 040 - 0176 octal (32 - 126 decimal),
                            excluding semi-colon (";", ASCII 59 decmal)
safe-initval         = <ASCII values 040 - 0176 octal (32 - 126 decimal),
                            excluding colon (":", ASCII 58 decimal), SPACE,
                            and semi-colon (";", ASCII 59 decimal)
SP                   = %x20 ; Space character
SEP                  = (CR LF) / LF
CR                   = <ASCII CR, carriage return>
LF                   = <ASCII LF, line feed>
Alpha                = %x41-5A / %x61-7A   ; A-Z / a-z
Digit                = %x30-39  ;0-9


