gname = tstr

permissions = uint . bits roles

roles = &(
      Requester: 1,
      Responder: 2,
      Monitor: 3,
      Verifier: 4
scope_entry = AIF_Generic<gname, permissions>

scope = << [ + scope_entry ] >>

              Figure 4: Example of scope using the AIF format

gname = tstr

role = tstr

scope_entry = [ gname , ? ( role / [ 2*role ] ) ]

scope = << [ + scope_entry ] >>

       Figure 5: Example of scope using the textual format, with the
          group name and role identifiers encoded as text strings

sign_info = sign_info_req / sign_info_resp

sign_info_req  = nil                   ; in the Token Transfer
                                          ; Request to the KDC

sign_info_resp = [ + sign_info_entry ] ; in the Token Transfer
                                          ; Response from the KDC

sign_info_entry =
pub_key_enc = int / nil
gname = tstr

inclusion_flag = bool

role = tstr
comb_role = [ 2*role ]
role_filter = [ *(role / comb_role) ]

id = bstr
id_filter = [ *id ]

get_pub_keys = null / [ inclusion_flag, role_filter, id_filter]

      Figure 8: CDLL definition of get_pub_keys, using as example node
                identifier encoded as bstr and role as tstr

scope = h'826667726F7570316673656E646572'
N_S   = h'018a278f7faab55a'
N_C   = h'25a8991cd700ac01'


scope = 0x4f826667726F7570316673656E646572
N_S   = 0x48018a278f7faab55a
N_C   = 0x4825a8991cd700ac01

gname = tstr

permissions = uint . bits roles

roles = &(
      Requester: 1,
      Responder: 2,
      Monitor: 3,
      Verifier: 4
scope_entry = AIF_Generic<gname, permissions>

scope = << [ + scope_entry ] >>

semantics = int

sequence = [semantics, scope]

extended_scope = #6.TBD_TAG(<< sequence >>)

       Figure 33: Example CDLL definition of scope, using the default
                      Authorization Information Format
gname = tstr

role = tstr

scope_entry = [ gname , ? ( role / [ 2*role ] ) ]

scope = << [ + scope_entry ] >>

semantics = int

sequence = [semantics, scope]

extended_scope = #6.TBD_TAG(<< sequence >>)

      Figure 34: CDLL definition of scope, using as example group name
                      encoded as tstr and role as tstr

sign_info_entry =
pub_key_enc = int / nil
gname = tstr

              Figure 37: 'sign_info_entry' with general format

