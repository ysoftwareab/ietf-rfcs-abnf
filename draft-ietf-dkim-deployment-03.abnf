d=    This specifies the "domain of the signing entity."  It is a
         domain name and is combined with the Selector to form a DNS
         query.

s=    This tag specifies the Selector.  It is used to discriminate
         among different keys that can be used for the same d= domain
         name.  As discussed in Section 4.3 of [I-D.ietf-dkim-overview]:
         "If verifiers were to employ the selector as part of a name
         assessment mechanism, then there would be no remaining
         mechanism for making a transition from an old, or compromised,
         key to a new one."  Consequently, the Selector is not
         appropriate for use as part or all of the identifier used to
         make assessments.

i=    This tag is optional and provides the "[i]dentity of the
         user or agent (e.g., a mailing list manager) on behalf of which
         this message is signed."  The identity can be in the syntax of
         an entire email address or only a domain name.  The domain name
         can be the same as for d= or it can be a sub-name of the d=
         name.

         NOTE: Although the i= identity has the syntax of an email
         address, it is not required to have that semantics.  That is,
         "the identity of the user" need not be the same as the user's
         mailbox.  For example the signer might wish to use i= to encode
         user-related audit information, such as how they were accessing
         the service at the time of message posting.  Therefore it is
         not possible to conclude anything from the i= string's
         (dis)similarity to email addresses elsewhere in the header

g= tag enables a key record to specify one particular From: address
d=companya.example).  If there is a desire to associate a user
d=benefits.companya.example.  Note that the From: address is not
d=espa.example and i=clienta.espa.example (or
i=clienta@espa.example)

d=clienta.espa.example.

d=companya.example because the GMail servers have no access to
g= granularity of the key  In both DK and DKIM, this is an optional
      field that is used to constrain which sending address(es) can
      legitimately use this selector.  Unfortunately, the treatment of
      an empty field ("g=;") is different.  DKIM allows wildcards where
      DK does not.  For DK, an empty field is the same as a missing
      value, and is treated as allowing any sending address.  For DKIM,
      an empty field only matches an empty local part.  In DKIM, both a
      missing value and "g=*;" mean to allow any sending address.

      If your DK DNS key record has an empty g= field in it ("g=;"),
      your best course of action is to modify the record to remove the
      empty field.  In that way, the DK semantics will remain the same,
      and the DKIM semantics will match.

g= granularity of the key  In both DK and DKIM, this is an optional
      field that is used to constrain which sending address(es) can
      legitimately use this selector.  Unfortunately, the treatment of
      an empty field ("g=;") is different.  For DK, an empty field is
      the same as a missing value, and is treated as allowing any
      sending address.  For DKIM, an empty field only matches an empty
      local part.

v= version of the selector  It is recommended that a DKIM selector
      have v=DKIM1; at its beginning, but it is not required.

