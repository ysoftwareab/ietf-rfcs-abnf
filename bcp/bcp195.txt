[Note that this file is a concatenation of more than one RFC.]





Internet Engineering Task Force (IETF)                        Y. Sheffer
Request for Comments: 7525                                        Intuit
BCP: 195                                                         R. Holz
Category: Best Current Practice                                    NICTA
ISSN: 2070-1721                                           P. Saint-Andre
                                                                    &yet
                                                                May 2015


    Recommendations for Secure Use of Transport Layer Security (TLS)
              and Datagram Transport Layer Security (DTLS)

Abstract

   Transport Layer Security (TLS) and Datagram Transport Layer Security
   (DTLS) are widely used to protect data exchanged over application
   protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the
   last few years, several serious attacks on TLS have emerged,
   including attacks on its most commonly used cipher suites and their
   modes of operation.  This document provides recommendations for
   improving the security of deployed services that use TLS and DTLS.
   The recommendations are applicable to the majority of use cases.

Status of This Memo

   This memo documents an Internet Best Current Practice.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   BCPs is available in Section 2 of RFC 5741.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   http://www.rfc-editor.org/info/rfc7525.















Sheffer, et al.           Best Current Practice                 [Page 1]

RFC 7525                   TLS Recommendations                  May 2015


Copyright Notice

   Copyright (c) 2015 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





































Sheffer, et al.           Best Current Practice                 [Page 2]

RFC 7525                   TLS Recommendations                  May 2015


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   4
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   5
   3.  General Recommendations . . . . . . . . . . . . . . . . . . .   5
     3.1.  Protocol Versions . . . . . . . . . . . . . . . . . . . .   5
       3.1.1.  SSL/TLS Protocol Versions . . . . . . . . . . . . . .   5
       3.1.2.  DTLS Protocol Versions  . . . . . . . . . . . . . . .   6
       3.1.3.  Fallback to Lower Versions  . . . . . . . . . . . . .   7
     3.2.  Strict TLS  . . . . . . . . . . . . . . . . . . . . . . .   7
     3.3.  Compression . . . . . . . . . . . . . . . . . . . . . . .   8
     3.4.  TLS Session Resumption  . . . . . . . . . . . . . . . . .   8
     3.5.  TLS Renegotiation . . . . . . . . . . . . . . . . . . . .   9
     3.6.  Server Name Indication  . . . . . . . . . . . . . . . . .   9
   4.  Recommendations: Cipher Suites  . . . . . . . . . . . . . . .   9
     4.1.  General Guidelines  . . . . . . . . . . . . . . . . . . .   9
     4.2.  Recommended Cipher Suites . . . . . . . . . . . . . . . .  11
       4.2.1.  Implementation Details  . . . . . . . . . . . . . . .  12
     4.3.  Public Key Length . . . . . . . . . . . . . . . . . . . .  12
     4.4.  Modular Exponential vs. Elliptic Curve DH Cipher Suites .  13
     4.5.  Truncated HMAC  . . . . . . . . . . . . . . . . . . . . .  14
   5.  Applicability Statement . . . . . . . . . . . . . . . . . . .  15
     5.1.  Security Services . . . . . . . . . . . . . . . . . . . .  15
     5.2.  Opportunistic Security  . . . . . . . . . . . . . . . . .  16
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .  17
     6.1.  Host Name Validation  . . . . . . . . . . . . . . . . . .  17
     6.2.  AES-GCM . . . . . . . . . . . . . . . . . . . . . . . . .  18
     6.3.  Forward Secrecy . . . . . . . . . . . . . . . . . . . . .  18
     6.4.  Diffie-Hellman Exponent Reuse . . . . . . . . . . . . . .  19
     6.5.  Certificate Revocation  . . . . . . . . . . . . . . . . .  19
   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  21
     7.1.  Normative References  . . . . . . . . . . . . . . . . . .  21
     7.2.  Informative References  . . . . . . . . . . . . . . . . .  22
   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .  26
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  27
















Sheffer, et al.           Best Current Practice                 [Page 3]

RFC 7525                   TLS Recommendations                  May 2015


1.  Introduction

   Transport Layer Security (TLS) [RFC5246] and Datagram Transport
   Security Layer (DTLS) [RFC6347] are widely used to protect data
   exchanged over application protocols such as HTTP, SMTP, IMAP, POP,
   SIP, and XMPP.  Over the last few years, several serious attacks on
   TLS have emerged, including attacks on its most commonly used cipher
   suites and their modes of operation.  For instance, both the AES-CBC
   [RFC3602] and RC4 [RFC7465] encryption algorithms, which together
   have been the most widely deployed ciphers, have been attacked in the
   context of TLS.  A companion document [RFC7457] provides detailed
   information about these attacks and will help the reader understand
   the rationale behind the recommendations provided here.

   Because of these attacks, those who implement and deploy TLS and DTLS
   need updated guidance on how TLS can be used securely.  This document
   provides guidance for deployed services as well as for software
   implementations, assuming the implementer expects his or her code to
   be deployed in environments defined in Section 5.  In fact, this
   document calls for the deployment of algorithms that are widely
   implemented but not yet widely deployed.  Concerning deployment, this
   document targets a wide audience -- namely, all deployers who wish to
   add authentication (be it one-way only or mutual), confidentiality,
   and data integrity protection to their communications.

   The recommendations herein take into consideration the security of
   various mechanisms, their technical maturity and interoperability,
   and their prevalence in implementations at the time of writing.
   Unless it is explicitly called out that a recommendation applies to
   TLS alone or to DTLS alone, each recommendation applies to both TLS
   and DTLS.

   It is expected that the TLS 1.3 specification will resolve many of
   the vulnerabilities listed in this document.  A system that deploys
   TLS 1.3 should have fewer vulnerabilities than TLS 1.2 or below.
   This document is likely to be updated after TLS 1.3 gets noticeable
   deployment.

   These are minimum recommendations for the use of TLS in the vast
   majority of implementation and deployment scenarios, with the
   exception of unauthenticated TLS (see Section 5).  Other
   specifications that reference this document can have stricter
   requirements related to one or more aspects of the protocol, based on
   their particular circumstances (e.g., for use with a particular
   application protocol); when that is the case, implementers are
   advised to adhere to those stricter requirements.  Furthermore, this





Sheffer, et al.           Best Current Practice                 [Page 4]

RFC 7525                   TLS Recommendations                  May 2015


   document provides a floor, not a ceiling, so stronger options are
   always allowed (e.g., depending on differing evaluations of the
   importance of cryptographic strength vs. computational load).

   Community knowledge about the strength of various algorithms and
   feasible attacks can change quickly, and experience shows that a Best
   Current Practice (BCP) document about security is a point-in-time
   statement.  Readers are advised to seek out any errata or updates
   that apply to this document.

2.  Terminology

   A number of security-related terms in this document are used in the
   sense defined in [RFC4949].

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

3.  General Recommendations

   This section provides general recommendations on the secure use of
   TLS.  Recommendations related to cipher suites are discussed in the
   following section.

3.1.  Protocol Versions

3.1.1.  SSL/TLS Protocol Versions

   It is important both to stop using old, less secure versions of SSL/
   TLS and to start using modern, more secure versions; therefore, the
   following are the recommendations concerning TLS/SSL protocol
   versions:

   o  Implementations MUST NOT negotiate SSL version 2.

      Rationale: Today, SSLv2 is considered insecure [RFC6176].

   o  Implementations MUST NOT negotiate SSL version 3.

      Rationale: SSLv3 [RFC6101] was an improvement over SSLv2 and
      plugged some significant security holes but did not support strong
      cipher suites.  SSLv3 does not support TLS extensions, some of
      which (e.g., renegotiation_info [RFC5746]) are security-critical.
      In addition, with the emergence of the POODLE attack [POODLE],
      SSLv3 is now widely recognized as fundamentally insecure.  See
      [DEP-SSLv3] for further details.




Sheffer, et al.           Best Current Practice                 [Page 5]

RFC 7525                   TLS Recommendations                  May 2015


   o  Implementations SHOULD NOT negotiate TLS version 1.0 [RFC2246];
      the only exception is when no higher version is available in the
      negotiation.

      Rationale: TLS 1.0 (published in 1999) does not support many
      modern, strong cipher suites.  In addition, TLS 1.0 lacks a per-
      record Initialization Vector (IV) for CBC-based cipher suites and
      does not warn against common padding errors.

   o  Implementations SHOULD NOT negotiate TLS version 1.1 [RFC4346];
      the only exception is when no higher version is available in the
      negotiation.

      Rationale: TLS 1.1 (published in 2006) is a security improvement
      over TLS 1.0 but still does not support certain stronger cipher
      suites.

   o  Implementations MUST support TLS 1.2 [RFC5246] and MUST prefer to
      negotiate TLS version 1.2 over earlier versions of TLS.

      Rationale: Several stronger cipher suites are available only with
      TLS 1.2 (published in 2008).  In fact, the cipher suites
      recommended by this document (Section 4.2 below) are only
      available in TLS 1.2.

   This BCP applies to TLS 1.2 and also to earlier versions.  It is not
   safe for readers to assume that the recommendations in this BCP apply
   to any future version of TLS.

3.1.2.  DTLS Protocol Versions

   DTLS, an adaptation of TLS for UDP datagrams, was introduced when TLS
   1.1 was published.  The following are the recommendations with
   respect to DTLS:

   o  Implementations SHOULD NOT negotiate DTLS version 1.0 [RFC4347].

      Version 1.0 of DTLS correlates to version 1.1 of TLS (see above).

   o  Implementations MUST support and MUST prefer to negotiate DTLS
      version 1.2 [RFC6347].

      Version 1.2 of DTLS correlates to version 1.2 of TLS (see above).
      (There is no version 1.1 of DTLS.)







Sheffer, et al.           Best Current Practice                 [Page 6]

RFC 7525                   TLS Recommendations                  May 2015


3.1.3.  Fallback to Lower Versions

   Clients that "fall back" to lower versions of the protocol after the
   server rejects higher versions of the protocol MUST NOT fall back to
   SSLv3 or earlier.

   Rationale: Some client implementations revert to lower versions of
   TLS or even to SSLv3 if the server rejected higher versions of the
   protocol.  This fallback can be forced by a man-in-the-middle (MITM)
   attacker.  TLS 1.0 and SSLv3 are significantly less secure than TLS
   1.2, the version recommended by this document.  While TLS 1.0-only
   servers are still quite common, IP scans show that SSLv3-only servers
   amount to only about 3% of the current Web server population.  (At
   the time of this writing, an explicit method for preventing downgrade
   attacks has been defined recently in [RFC7507].)

3.2.  Strict TLS

   The following recommendations are provided to help prevent SSL
   Stripping (an attack that is summarized in Section 2.1 of [RFC7457]):

   o  In cases where an application protocol allows implementations or
      deployments a choice between strict TLS configuration and dynamic
      upgrade from unencrypted to TLS-protected traffic (such as
      STARTTLS), clients and servers SHOULD prefer strict TLS
      configuration.

   o  Application protocols typically provide a way for the server to
      offer TLS during an initial protocol exchange, and sometimes also
      provide a way for the server to advertise support for TLS (e.g.,
      through a flag indicating that TLS is required); unfortunately,
      these indications are sent before the communication channel is
      encrypted.  A client SHOULD attempt to negotiate TLS even if these
      indications are not communicated by the server.

   o  HTTP client and server implementations MUST support the HTTP
      Strict Transport Security (HSTS) header [RFC6797], in order to
      allow Web servers to advertise that they are willing to accept
      TLS-only clients.

   o  Web servers SHOULD use HSTS to indicate that they are willing to
      accept TLS-only clients, unless they are deployed in such a way
      that using HSTS would in fact weaken overall security (e.g., it
      can be problematic to use HSTS with self-signed certificates, as
      described in Section 11.3 of [RFC6797]).






Sheffer, et al.           Best Current Practice                 [Page 7]

RFC 7525                   TLS Recommendations                  May 2015


   Rationale: Combining unprotected and TLS-protected communication
   opens the way to SSL Stripping and similar attacks, since an initial
   part of the communication is not integrity protected and therefore
   can be manipulated by an attacker whose goal is to keep the
   communication in the clear.

3.3.  Compression

   In order to help prevent compression-related attacks (summarized in
   Section 2.6 of [RFC7457]), implementations and deployments SHOULD
   disable TLS-level compression (Section 6.2.2 of [RFC5246]), unless
   the application protocol in question has been shown not to be open to
   such attacks.

   Rationale: TLS compression has been subject to security attacks, such
   as the CRIME attack.

   Implementers should note that compression at higher protocol levels
   can allow an active attacker to extract cleartext information from
   the connection.  The BREACH attack is one such case.  These issues
   can only be mitigated outside of TLS and are thus outside the scope
   of this document.  See Section 2.6 of [RFC7457] for further details.

3.4.  TLS Session Resumption

   If TLS session resumption is used, care ought to be taken to do so
   safely.  In particular, when using session tickets [RFC5077], the
   resumption information MUST be authenticated and encrypted to prevent
   modification or eavesdropping by an attacker.  Further
   recommendations apply to session tickets:

   o  A strong cipher suite MUST be used when encrypting the ticket (as
      least as strong as the main TLS cipher suite).

   o  Ticket keys MUST be changed regularly, e.g., once every week, so
      as not to negate the benefits of forward secrecy (see Section 6.3
      for details on forward secrecy).

   o  For similar reasons, session ticket validity SHOULD be limited to
      a reasonable duration (e.g., half as long as ticket key validity).

   Rationale: session resumption is another kind of TLS handshake, and
   therefore must be as secure as the initial handshake.  This document
   (Section 4) recommends the use of cipher suites that provide forward
   secrecy, i.e. that prevent an attacker who gains momentary access to
   the TLS endpoint (either client or server) and its secrets from
   reading either past or future communication.  The tickets must be
   managed so as not to negate this security property.



Sheffer, et al.           Best Current Practice                 [Page 8]

RFC 7525                   TLS Recommendations                  May 2015


3.5.  TLS Renegotiation

   Where handshake renegotiation is implemented, both clients and
   servers MUST implement the renegotiation_info extension, as defined
   in [RFC5746].

   The most secure option for countering the Triple Handshake attack is
   to refuse any change of certificates during renegotiation.  In
   addition, TLS clients SHOULD apply the same validation policy for all
   certificates received over a connection.  The [triple-handshake]
   document suggests several other possible countermeasures, such as
   binding the master secret to the full handshake (see [SESSION-HASH])
   and binding the abbreviated session resumption handshake to the
   original full handshake.  Although the latter two techniques are
   still under development and thus do not qualify as current practices,
   those who implement and deploy TLS are advised to watch for further
   development of appropriate countermeasures.

3.6.  Server Name Indication

   TLS implementations MUST support the Server Name Indication (SNI)
   extension defined in Section 3 of [RFC6066] for those higher-level
   protocols that would benefit from it, including HTTPS.  However, the
   actual use of SNI in particular circumstances is a matter of local
   policy.

   Rationale: SNI supports deployment of multiple TLS-protected virtual
   servers on a single address, and therefore enables fine-grained
   security for these virtual servers, by allowing each one to have its
   own certificate.

4.  Recommendations: Cipher Suites

   TLS and its implementations provide considerable flexibility in the
   selection of cipher suites.  Unfortunately, some available cipher
   suites are insecure, some do not provide the targeted security
   services, and some no longer provide enough security.  Incorrectly
   configuring a server leads to no or reduced security.  This section
   includes recommendations on the selection and negotiation of cipher
   suites.

4.1.  General Guidelines

   Cryptographic algorithms weaken over time as cryptanalysis improves:
   algorithms that were once considered strong become weak.  Such
   algorithms need to be phased out over time and replaced with more
   secure cipher suites.  This helps to ensure that the desired security
   properties still hold.  SSL/TLS has been in existence for almost 20



Sheffer, et al.           Best Current Practice                 [Page 9]

RFC 7525                   TLS Recommendations                  May 2015


   years and many of the cipher suites that have been recommended in
   various versions of SSL/TLS are now considered weak or at least not
   as strong as desired.  Therefore, this section modernizes the
   recommendations concerning cipher suite selection.

   o  Implementations MUST NOT negotiate the cipher suites with NULL
      encryption.

      Rationale: The NULL cipher suites do not encrypt traffic and so
      provide no confidentiality services.  Any entity in the network
      with access to the connection can view the plaintext of contents
      being exchanged by the client and server.  (Nevertheless, this
      document does not discourage software from implementing NULL
      cipher suites, since they can be useful for testing and
      debugging.)

   o  Implementations MUST NOT negotiate RC4 cipher suites.

      Rationale: The RC4 stream cipher has a variety of cryptographic
      weaknesses, as documented in [RFC7465].  Note that DTLS
      specifically forbids the use of RC4 already.

   o  Implementations MUST NOT negotiate cipher suites offering less
      than 112 bits of security, including so-called "export-level"
      encryption (which provide 40 or 56 bits of security).

      Rationale: Based on [RFC3766], at least 112 bits of security is
      needed.  40-bit and 56-bit security are considered insecure today.
      TLS 1.1 and 1.2 never negotiate 40-bit or 56-bit export ciphers.

   o  Implementations SHOULD NOT negotiate cipher suites that use
      algorithms offering less than 128 bits of security.

      Rationale: Cipher suites that offer between 112-bits and 128-bits
      of security are not considered weak at this time; however, it is
      expected that their useful lifespan is short enough to justify
      supporting stronger cipher suites at this time.  128-bit ciphers
      are expected to remain secure for at least several years, and
      256-bit ciphers until the next fundamental technology
      breakthrough.  Note that, because of so-called "meet-in-the-
      middle" attacks [Multiple-Encryption], some legacy cipher suites
      (e.g., 168-bit 3DES) have an effective key length that is smaller
      than their nominal key length (112 bits in the case of 3DES).
      Such cipher suites should be evaluated according to their
      effective key length.






Sheffer, et al.           Best Current Practice                [Page 10]

RFC 7525                   TLS Recommendations                  May 2015


   o  Implementations SHOULD NOT negotiate cipher suites based on RSA
      key transport, a.k.a. "static RSA".

      Rationale: These cipher suites, which have assigned values
      starting with the string "TLS_RSA_WITH_*", have several drawbacks,
      especially the fact that they do not support forward secrecy.

   o  Implementations MUST support and prefer to negotiate cipher suites
      offering forward secrecy, such as those in the Ephemeral Diffie-
      Hellman and Elliptic Curve Ephemeral Diffie-Hellman ("DHE" and
      "ECDHE") families.

      Rationale: Forward secrecy (sometimes called "perfect forward
      secrecy") prevents the recovery of information that was encrypted
      with older session keys, thus limiting the amount of time during
      which attacks can be successful.  See Section 6.3 for a detailed
      discussion.

4.2.  Recommended Cipher Suites

   Given the foregoing considerations, implementation and deployment of
   the following cipher suites is RECOMMENDED:

   o  TLS_DHE_RSA_WITH_AES_128_GCM_SHA256

   o  TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256

   o  TLS_DHE_RSA_WITH_AES_256_GCM_SHA384

   o  TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384

   These cipher suites are supported only in TLS 1.2 because they are
   authenticated encryption (AEAD) algorithms [RFC5116].

   Typically, in order to prefer these suites, the order of suites needs
   to be explicitly configured in server software.  (See [BETTERCRYPTO]
   for helpful deployment guidelines, but note that its recommendations
   differ from the current document in some details.)  It would be ideal
   if server software implementations were to prefer these suites by
   default.

   Some devices have hardware support for AES-CCM but not AES-GCM, so
   they are unable to follow the foregoing recommendations regarding
   cipher suites.  There are even devices that do not support public key
   cryptography at all, but they are out of scope entirely.






Sheffer, et al.           Best Current Practice                [Page 11]

RFC 7525                   TLS Recommendations                  May 2015


4.2.1.  Implementation Details

   Clients SHOULD include TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 as the
   first proposal to any server, unless they have prior knowledge that
   the server cannot respond to a TLS 1.2 client_hello message.

   Servers MUST prefer this cipher suite over weaker cipher suites
   whenever it is proposed, even if it is not the first proposal.

   Clients are of course free to offer stronger cipher suites, e.g.,
   using AES-256; when they do, the server SHOULD prefer the stronger
   cipher suite unless there are compelling reasons (e.g., seriously
   degraded performance) to choose otherwise.

   This document does not change the mandatory-to-implement TLS cipher
   suite(s) prescribed by TLS.  To maximize interoperability, RFC 5246
   mandates implementation of the TLS_RSA_WITH_AES_128_CBC_SHA cipher
   suite, which is significantly weaker than the cipher suites
   recommended here.  (The GCM mode does not suffer from the same
   weakness, caused by the order of MAC-then-Encrypt in TLS
   [Krawczyk2001], since it uses an AEAD mode of operation.)
   Implementers should consider the interoperability gain against the
   loss in security when deploying the TLS_RSA_WITH_AES_128_CBC_SHA
   cipher suite.  Other application protocols specify other cipher
   suites as mandatory to implement (MTI).

   Note that some profiles of TLS 1.2 use different cipher suites.  For
   example, [RFC6460] defines a profile that uses the
   TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 and
   TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 cipher suites.

   [RFC4492] allows clients and servers to negotiate ECDH parameters
   (curves).  Both clients and servers SHOULD include the "Supported
   Elliptic Curves" extension [RFC4492].  For interoperability, clients
   and servers SHOULD support the NIST P-256 (secp256r1) curve
   [RFC4492].  In addition, clients SHOULD send an ec_point_formats
   extension with a single element, "uncompressed".

4.3.  Public Key Length

   When using the cipher suites recommended in this document, two public
   keys are normally used in the TLS handshake: one for the Diffie-
   Hellman key agreement and one for server authentication.  Where a
   client certificate is used, a third public key is added.

   With a key exchange based on modular exponential (MODP) Diffie-
   Hellman groups ("DHE" cipher suites), DH key lengths of at least 2048
   bits are RECOMMENDED.



Sheffer, et al.           Best Current Practice                [Page 12]

RFC 7525                   TLS Recommendations                  May 2015


   Rationale: For various reasons, in practice, DH keys are typically
   generated in lengths that are powers of two (e.g., 2^10 = 1024 bits,
   2^11 = 2048 bits, 2^12 = 4096 bits).  Because a DH key of 1228 bits
   would be roughly equivalent to only an 80-bit symmetric key
   [RFC3766], it is better to use keys longer than that for the "DHE"
   family of cipher suites.  A DH key of 1926 bits would be roughly
   equivalent to a 100-bit symmetric key [RFC3766] and a DH key of 2048
   bits might be sufficient for at least the next 10 years
   [NIST.SP.800-56A].  See Section 4.4 for additional information on the
   use of MODP Diffie-Hellman in TLS.

   As noted in [RFC3766], correcting for the emergence of a TWIRL
   machine would imply that 1024-bit DH keys yield about 65 bits of
   equivalent strength and that a 2048-bit DH key would yield about 92
   bits of equivalent strength.

   With regard to ECDH keys, the IANA "EC Named Curve Registry" (within
   the "Transport Layer Security (TLS) Parameters" registry [IANA-TLS])
   contains 160-bit elliptic curves that are considered to be roughly
   equivalent to only an 80-bit symmetric key [ECRYPT-II].  Curves of
   less than 192 bits SHOULD NOT be used.

   When using RSA, servers SHOULD authenticate using certificates with
   at least a 2048-bit modulus for the public key.  In addition, the use
   of the SHA-256 hash algorithm is RECOMMENDED (see [CAB-Baseline] for
   more details).  Clients SHOULD indicate to servers that they request
   SHA-256, by using the "Signature Algorithms" extension defined in
   TLS 1.2.

4.4.  Modular Exponential vs. Elliptic Curve DH Cipher Suites

   Not all TLS implementations support both modular exponential (MODP)
   and elliptic curve (EC) Diffie-Hellman groups, as required by
   Section 4.2.  Some implementations are severely limited in the length
   of DH values.  When such implementations need to be accommodated, the
   following are RECOMMENDED (in priority order):

   1.  Elliptic Curve DHE with appropriately negotiated parameters
       (e.g., the curve to be used) and a Message Authentication Code
       (MAC) algorithm stronger than HMAC-SHA1 [RFC5289]

   2.  TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 [RFC5288], with 2048-bit
       Diffie-Hellman parameters

   3.  TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, with 1024-bit parameters






Sheffer, et al.           Best Current Practice                [Page 13]

RFC 7525                   TLS Recommendations                  May 2015


   Rationale: Although Elliptic Curve Cryptography is widely deployed,
   there are some communities where its adoption has been limited for
   several reasons, including its complexity compared to modular
   arithmetic and longstanding perceptions of IPR concerns (which, for
   the most part, have now been resolved [RFC6090]).  Note that ECDHE
   cipher suites exist for both RSA and ECDSA certificates, so moving to
   ECDHE cipher suites does not require moving away from RSA-based
   certificates.  On the other hand, there are two related issues
   hindering effective use of MODP Diffie-Hellman cipher suites in TLS:

   o  There are no standardized, widely implemented protocol mechanisms
      to negotiate the DH groups or parameter lengths supported by
      client and server.

   o  Many servers choose DH parameters of 1024 bits or fewer.

   o  There are widely deployed client implementations that reject
      received DH parameters if they are longer than 1024 bits.  In
      addition, several implementations do not perform appropriate
      validation of group parameters and are vulnerable to attacks
      referenced in Section 2.9 of [RFC7457].

   Note that with DHE and ECDHE cipher suites, the TLS master key only
   depends on the Diffie-Hellman parameters and not on the strength of
   the RSA certificate; moreover, 1024 bit MODP DH parameters are
   generally considered insufficient at this time.

   With MODP ephemeral DH, deployers ought to carefully evaluate
   interoperability vs. security considerations when configuring their
   TLS endpoints.

4.5.  Truncated HMAC

   Implementations MUST NOT use the Truncated HMAC extension, defined in
   Section 7 of [RFC6066].

   Rationale: the extension does not apply to the AEAD cipher suites
   recommended above.  However it does apply to most other TLS cipher
   suites.  Its use has been shown to be insecure in [PatersonRS11].












Sheffer, et al.           Best Current Practice                [Page 14]

RFC 7525                   TLS Recommendations                  May 2015


5.  Applicability Statement

   The recommendations of this document primarily apply to the
   implementation and deployment of application protocols that are most
   commonly used with TLS and DTLS on the Internet today.  Examples
   include, but are not limited to:

   o  Web software and services that wish to protect HTTP traffic with
      TLS.

   o  Email software and services that wish to protect IMAP, POP3, or
      SMTP traffic with TLS.

   o  Instant-messaging software and services that wish to protect
      Extensible Messaging and Presence Protocol (XMPP) or Internet
      Relay Chat (IRC) traffic with TLS.

   o  Realtime media software and services that wish to protect Secure
      Realtime Transport Protocol (SRTP) traffic with DTLS.

   This document does not modify the implementation and deployment
   recommendations (e.g., mandatory-to-implement cipher suites)
   prescribed by existing application protocols that employ TLS or DTLS.
   If the community that uses such an application protocol wishes to
   modernize its usage of TLS or DTLS to be consistent with the best
   practices recommended here, it needs to explicitly update the
   existing application protocol definition (one example is [TLS-XMPP],
   which updates [RFC6120]).

   Designers of new application protocols developed through the Internet
   Standards Process [RFC2026] are expected at minimum to conform to the
   best practices recommended here, unless they provide documentation of
   compelling reasons that would prevent such conformance (e.g.,
   widespread deployment on constrained devices that lack support for
   the necessary algorithms).

5.1.  Security Services

   This document provides recommendations for an audience that wishes to
   secure their communication with TLS to achieve the following:

   o  Confidentiality: all application-layer communication is encrypted
      with the goal that no party should be able to decrypt it except
      the intended receiver.

   o  Data integrity: any changes made to the communication in transit
      are detectable by the receiver.




Sheffer, et al.           Best Current Practice                [Page 15]

RFC 7525                   TLS Recommendations                  May 2015


   o  Authentication: an endpoint of the TLS communication is
      authenticated as the intended entity to communicate with.

   With regard to authentication, TLS enables authentication of one or
   both endpoints in the communication.  In the context of opportunistic
   security [RFC7435], TLS is sometimes used without authentication.  As
   discussed in Section 5.2, considerations for opportunistic security
   are not in scope for this document.

   If deployers deviate from the recommendations given in this document,
   they need to be aware that they might lose access to one of the
   foregoing security services.

   This document applies only to environments where confidentiality is
   required.  It recommends algorithms and configuration options that
   enforce secrecy of the data in transit.

   This document also assumes that data integrity protection is always
   one of the goals of a deployment.  In cases where integrity is not
   required, it does not make sense to employ TLS in the first place.
   There are attacks against confidentiality-only protection that
   utilize the lack of integrity to also break confidentiality (see, for
   instance, [DegabrieleP07] in the context of IPsec).

   This document addresses itself to application protocols that are most
   commonly used on the Internet with TLS and DTLS.  Typically, all
   communication between TLS clients and TLS servers requires all three
   of the above security services.  This is particularly true where TLS
   clients are user agents like Web browsers or email software.

   This document does not address the rarer deployment scenarios where
   one of the above three properties is not desired, such as the use
   case described in Section 5.2 below.  As another scenario where
   confidentiality is not needed, consider a monitored network where the
   authorities in charge of the respective traffic domain require full
   access to unencrypted (plaintext) traffic, and where users
   collaborate and send their traffic in the clear.

5.2.  Opportunistic Security

   There are several important scenarios in which the use of TLS is
   optional, i.e., the client decides dynamically ("opportunistically")
   whether to use TLS with a particular server or to connect in the
   clear.  This practice, often called "opportunistic security", is
   described at length in [RFC7435] and is often motivated by a desire
   for backward compatibility with legacy deployments.





Sheffer, et al.           Best Current Practice                [Page 16]

RFC 7525                   TLS Recommendations                  May 2015


   In these scenarios, some of the recommendations in this document
   might be too strict, since adhering to them could cause fallback to
   cleartext, a worse outcome than using TLS with an outdated protocol
   version or cipher suite.

   This document specifies best practices for TLS in general.  A
   separate document containing recommendations for the use of TLS with
   opportunistic security is to be completed in the future.

6.  Security Considerations

   This entire document discusses the security practices directly
   affecting applications using the TLS protocol.  This section contains
   broader security considerations related to technologies used in
   conjunction with or by TLS.

6.1.  Host Name Validation

   Application authors should take note that some TLS implementations do
   not validate host names.  If the TLS implementation they are using
   does not validate host names, authors might need to write their own
   validation code or consider using a different TLS implementation.

   It is noted that the requirements regarding host name validation
   (and, in general, binding between the TLS layer and the protocol that
   runs above it) vary between different protocols.  For HTTPS, these
   requirements are defined by Section 3 of [RFC2818].

   Readers are referred to [RFC6125] for further details regarding
   generic host name validation in the TLS context.  In addition, that
   RFC contains a long list of example protocols, some of which
   implement a policy very different from HTTPS.

   If the host name is discovered indirectly and in an insecure manner
   (e.g., by an insecure DNS query for an MX or SRV record), it SHOULD
   NOT be used as a reference identifier [RFC6125] even when it matches
   the presented certificate.  This proviso does not apply if the host
   name is discovered securely (for further discussion, see [DANE-SRV]
   and [DANE-SMTP]).

   Host name validation typically applies only to the leaf "end entity"
   certificate.  Naturally, in order to ensure proper authentication in
   the context of the PKI, application clients need to verify the entire
   certification path in accordance with [RFC5280] (see also [RFC6125]).







Sheffer, et al.           Best Current Practice                [Page 17]

RFC 7525                   TLS Recommendations                  May 2015


6.2.  AES-GCM

   Section 4.2 above recommends the use of the AES-GCM authenticated
   encryption algorithm.  Please refer to Section 11 of [RFC5246] for
   general security considerations when using TLS 1.2, and to Section 6
   of [RFC5288] for security considerations that apply specifically to
   AES-GCM when used with TLS.

6.3.  Forward Secrecy

   Forward secrecy (also called "perfect forward secrecy" or "PFS" and
   defined in [RFC4949]) is a defense against an attacker who records
   encrypted conversations where the session keys are only encrypted
   with the communicating parties' long-term keys.  Should the attacker
   be able to obtain these long-term keys at some point later in time,
   the session keys and thus the entire conversation could be decrypted.
   In the context of TLS and DTLS, such compromise of long-term keys is
   not entirely implausible.  It can happen, for example, due to:

   o  A client or server being attacked by some other attack vector, and
      the private key retrieved.

   o  A long-term key retrieved from a device that has been sold or
      otherwise decommissioned without prior wiping.

   o  A long-term key used on a device as a default key [Heninger2012].

   o  A key generated by a trusted third party like a CA, and later
      retrieved from it either by extortion or compromise
      [Soghoian2011].

   o  A cryptographic break-through, or the use of asymmetric keys with
      insufficient length [Kleinjung2010].

   o  Social engineering attacks against system administrators.

   o  Collection of private keys from inadequately protected backups.

   Forward secrecy ensures in such cases that it is not feasible for an
   attacker to determine the session keys even if the attacker has
   obtained the long-term keys some time after the conversation.  It
   also protects against an attacker who is in possession of the long-
   term keys but remains passive during the conversation.

   Forward secrecy is generally achieved by using the Diffie-Hellman
   scheme to derive session keys.  The Diffie-Hellman scheme has both
   parties maintain private secrets and send parameters over the network
   as modular powers over certain cyclic groups.  The properties of the



Sheffer, et al.           Best Current Practice                [Page 18]

RFC 7525                   TLS Recommendations                  May 2015


   so-called Discrete Logarithm Problem (DLP) allow the parties to
   derive the session keys without an eavesdropper being able to do so.
   There is currently no known attack against DLP if sufficiently large
   parameters are chosen.  A variant of the Diffie-Hellman scheme uses
   Elliptic Curves instead of the originally proposed modular
   arithmetics.

   Unfortunately, many TLS/DTLS cipher suites were defined that do not
   feature forward secrecy, e.g., TLS_RSA_WITH_AES_256_CBC_SHA256.  This
   document therefore advocates strict use of forward-secrecy-only
   ciphers.

6.4.  Diffie-Hellman Exponent Reuse

   For performance reasons, many TLS implementations reuse Diffie-
   Hellman and Elliptic Curve Diffie-Hellman exponents across multiple
   connections.  Such reuse can result in major security issues:

   o  If exponents are reused for too long (e.g., even more than a few
      hours), an attacker who gains access to the host can decrypt
      previous connections.  In other words, exponent reuse negates the
      effects of forward secrecy.

   o  TLS implementations that reuse exponents should test the DH public
      key they receive for group membership, in order to avoid some
      known attacks.  These tests are not standardized in TLS at the
      time of writing.  See [RFC6989] for recipient tests required of
      IKEv2 implementations that reuse DH exponents.

6.5.  Certificate Revocation

   The following considerations and recommendations represent the
   current state of the art regarding certificate revocation, even
   though no complete and efficient solution exists for the problem of
   checking the revocation status of common public key certificates
   [RFC5280]:

   o  Although Certificate Revocation Lists (CRLs) are the most widely
      supported mechanism for distributing revocation information, they
      have known scaling challenges that limit their usefulness (despite
      workarounds such as partitioned CRLs and delta CRLs).

   o  Proprietary mechanisms that embed revocation lists in the Web
      browser's configuration database cannot scale beyond a small
      number of the most heavily used Web servers.






Sheffer, et al.           Best Current Practice                [Page 19]

RFC 7525                   TLS Recommendations                  May 2015


   o  The On-Line Certification Status Protocol (OCSP) [RFC6960]
      presents both scaling and privacy issues.  In addition, clients
      typically "soft-fail", meaning that they do not abort the TLS
      connection if the OCSP server does not respond.  (However, this
      might be a workaround to avoid denial-of-service attacks if an
      OCSP responder is taken offline.)

   o  The TLS Certificate Status Request extension (Section 8 of
      [RFC6066]), commonly called "OCSP stapling", resolves the
      operational issues with OCSP.  However, it is still ineffective in
      the presence of a MITM attacker because the attacker can simply
      ignore the client's request for a stapled OCSP response.

   o  OCSP stapling as defined in [RFC6066] does not extend to
      intermediate certificates used in a certificate chain.  Although
      the Multiple Certificate Status extension [RFC6961] addresses this
      shortcoming, it is a recent addition without much deployment.

   o  Both CRLs and OCSP depend on relatively reliable connectivity to
      the Internet, which might not be available to certain kinds of
      nodes (such as newly provisioned devices that need to establish a
      secure connection in order to boot up for the first time).

   With regard to common public key certificates, servers SHOULD support
   the following as a best practice given the current state of the art
   and as a foundation for a possible future solution:

   1.  OCSP [RFC6960]

   2.  Both the status_request extension defined in [RFC6066] and the
       status_request_v2 extension defined in [RFC6961] (This might
       enable interoperability with the widest range of clients.)

   3.  The OCSP stapling extension defined in [RFC6961]

   The considerations in this section do not apply to scenarios where
   the DANE-TLSA resource record [RFC6698] is used to signal to a client
   which certificate a server considers valid and good to use for TLS
   connections.












Sheffer, et al.           Best Current Practice                [Page 20]

RFC 7525                   TLS Recommendations                  May 2015


7.  References

7.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [RFC2818]  Rescorla, E., "HTTP Over TLS", RFC 2818, May 2000,
              <http://www.rfc-editor.org/info/rfc2818>.

   [RFC3766]  Orman, H. and P. Hoffman, "Determining Strengths For
              Public Keys Used For Exchanging Symmetric Keys", BCP 86,
              RFC 3766, April 2004,
              <http://www.rfc-editor.org/info/rfc3766>.

   [RFC4492]  Blake-Wilson, S., Bolyard, N., Gupta, V., Hawk, C., and B.
              Moeller, "Elliptic Curve Cryptography (ECC) Cipher Suites
              for Transport Layer Security (TLS)", RFC 4492, May 2006,
              <http://www.rfc-editor.org/info/rfc4492>.

   [RFC4949]  Shirey, R., "Internet Security Glossary, Version 2", FYI
              36, RFC 4949, August 2007,
              <http://www.rfc-editor.org/info/rfc4949>.

   [RFC5246]  Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.2", RFC 5246, August 2008,
              <http://www.rfc-editor.org/info/rfc5246>.

   [RFC5288]  Salowey, J., Choudhury, A., and D. McGrew, "AES Galois
              Counter Mode (GCM) Cipher Suites for TLS", RFC 5288,
              August 2008, <http://www.rfc-editor.org/info/rfc5288>.

   [RFC5289]  Rescorla, E., "TLS Elliptic Curve Cipher Suites with SHA-
              256/384 and AES Galois Counter Mode (GCM)", RFC 5289,
              August 2008, <http://www.rfc-editor.org/info/rfc5289>.

   [RFC5746]  Rescorla, E., Ray, M., Dispensa, S., and N. Oskov,
              "Transport Layer Security (TLS) Renegotiation Indication
              Extension", RFC 5746, February 2010,
              <http://www.rfc-editor.org/info/rfc5746>.

   [RFC6066]  Eastlake 3rd, D., "Transport Layer Security (TLS)
              Extensions: Extension Definitions", RFC 6066, January
              2011, <http://www.rfc-editor.org/info/rfc6066>.






Sheffer, et al.           Best Current Practice                [Page 21]

RFC 7525                   TLS Recommendations                  May 2015


   [RFC6125]  Saint-Andre, P. and J. Hodges, "Representation and
              Verification of Domain-Based Application Service Identity
              within Internet Public Key Infrastructure Using X.509
              (PKIX) Certificates in the Context of Transport Layer
              Security (TLS)", RFC 6125, March 2011,
              <http://www.rfc-editor.org/info/rfc6125>.

   [RFC6176]  Turner, S. and T. Polk, "Prohibiting Secure Sockets Layer
              (SSL) Version 2.0", RFC 6176, March 2011,
              <http://www.rfc-editor.org/info/rfc6176>.

   [RFC6347]  Rescorla, E. and N. Modadugu, "Datagram Transport Layer
              Security Version 1.2", RFC 6347, January 2012,
              <http://www.rfc-editor.org/info/rfc6347>.

   [RFC7465]  Popov, A., "Prohibiting RC4 Cipher Suites", RFC 7465,
              February 2015, <http://www.rfc-editor.org/info/rfc7465>.

7.2.  Informative References

   [BETTERCRYPTO]
              bettercrypto.org, "Applied Crypto Hardening", April 2015,
              <https://bettercrypto.org/static/
              applied-crypto-hardening.pdf>.

   [CAB-Baseline]
              CA/Browser Forum, "Baseline Requirements for the Issuance
              and Management of Publicly-Trusted Certificates Version
              1.1.6", 2013, <https://www.cabforum.org/documents.html>.

   [DANE-SMTP]
              Dukhovni, V. and W. Hardaker, "SMTP security via
              opportunistic DANE TLS", Work in Progress, draft-ietf-
              dane-smtp-with-dane-16, April 2015.

   [DANE-SRV] Finch, T., Miller, M., and P. Saint-Andre, "Using DNS-
              Based Authentication of Named Entities (DANE) TLSA Records
              with SRV Records", Work in Progress,
              draft-ietf-dane-srv-14, April 2015.

   [DEP-SSLv3]
              Barnes, R., Thomson, M., Pironti, A., and A. Langley,
              "Deprecating Secure Sockets Layer Version 3.0", Work in
              Progress, draft-ietf-tls-sslv3-diediedie-03, April 2015.







Sheffer, et al.           Best Current Practice                [Page 22]

RFC 7525                   TLS Recommendations                  May 2015


   [DegabrieleP07]
              Degabriele, J. and K. Paterson, "Attacking the IPsec
              Standards in Encryption-only Configurations", IEEE
              Symposium on Security and Privacy (SP '07), 2007,
              <http://dx.doi.org/10.1109/SP.2007.8>.

   [ECRYPT-II]
              Smart, N., "ECRYPT II Yearly Report on Algorithms and
              Keysizes (2011-2012)", 2012,
              <http://www.ecrypt.eu.org/ecrypt2/>.

   [Heninger2012]
              Heninger, N., Durumeric, Z., Wustrow, E., and J.
              Halderman, "Mining Your Ps and Qs: Detection of Widespread
              Weak Keys in Network Devices", Usenix Security Symposium
              2012, 2012.

   [IANA-TLS] IANA, "Transport Layer Security (TLS) Parameters",
              <http://www.iana.org/assignments/tls-parameters>.

   [Kleinjung2010]
              Kleinjung, T., "Factorization of a 768-Bit RSA modulus",
              CRYPTO 10, 2010, <https://eprint.iacr.org/2010/006.pdf>.

   [Krawczyk2001]
              Krawczyk, H., "The Order of Encryption and Authentication
              for Protecting Communications (Or: How Secure is SSL?)",
              CRYPTO 01, 2001,
              <https://www.iacr.org/archive/crypto2001/21390309.pdf>.

   [Multiple-Encryption]
              Merkle, R. and M. Hellman, "On the security of multiple
              encryption", Communications of the ACM, Vol. 24, 1981,
              <http://dl.acm.org/citation.cfm?id=358718>.

   [NIST.SP.800-56A]
              Barker, E., Chen, L., Roginsky, A., and M. Smid,
              "Recommendation for Pair-Wise Key Establishment Schemes
              Using Discrete Logarithm Cryptography", NIST Special
              Publication 800-56A, 2013,
              <http://nvlpubs.nist.gov/nistpubs/SpecialPublications/
              NIST.SP.800-56Ar2.pdf>.

   [POODLE]   US-CERT, "SSL 3.0 Protocol Vulnerability and POODLE
              Attack", Alert TA14-290A, October 2014,
              <https://www.us-cert.gov/ncas/alerts/TA14-290A>.





Sheffer, et al.           Best Current Practice                [Page 23]

RFC 7525                   TLS Recommendations                  May 2015


   [PatersonRS11]
              Paterson, K., Ristenpart, T., and T. Shrimpton, "Tag size
              does matter: attacks and proofs for the TLS record
              protocol", 2011,
              <http://dx.doi.org/10.1007/978-3-642-25385-0_20>.

   [RFC2026]  Bradner, S., "The Internet Standards Process -- Revision
              3", BCP 9, RFC 2026, October 1996,
              <http://www.rfc-editor.org/info/rfc2026>.

   [RFC2246]  Dierks, T. and C. Allen, "The TLS Protocol Version 1.0",
              RFC 2246, January 1999,
              <http://www.rfc-editor.org/info/rfc2246>.

   [RFC3602]  Frankel, S., Glenn, R., and S. Kelly, "The AES-CBC Cipher
              Algorithm and Its Use with IPsec", RFC 3602, September
              2003, <http://www.rfc-editor.org/info/rfc3602>.

   [RFC4346]  Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.1", RFC 4346, April 2006,
              <http://www.rfc-editor.org/info/rfc4346>.

   [RFC4347]  Rescorla, E. and N. Modadugu, "Datagram Transport Layer
              Security", RFC 4347, April 2006,
              <http://www.rfc-editor.org/info/rfc4347>.

   [RFC5077]  Salowey, J., Zhou, H., Eronen, P., and H. Tschofenig,
              "Transport Layer Security (TLS) Session Resumption without
              Server-Side State", RFC 5077, January 2008,
              <http://www.rfc-editor.org/info/rfc5077>.

   [RFC5116]  McGrew, D., "An Interface and Algorithms for Authenticated
              Encryption", RFC 5116, January 2008,
              <http://www.rfc-editor.org/info/rfc5116>.

   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,
              Housley, R., and W. Polk, "Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 5280, May 2008,
              <http://www.rfc-editor.org/info/rfc5280>.

   [RFC6090]  McGrew, D., Igoe, K., and M. Salter, "Fundamental Elliptic
              Curve Cryptography Algorithms", RFC 6090, February 2011,
              <http://www.rfc-editor.org/info/rfc6090>.

   [RFC6101]  Freier, A., Karlton, P., and P. Kocher, "The Secure
              Sockets Layer (SSL) Protocol Version 3.0", RFC 6101,
              August 2011, <http://www.rfc-editor.org/info/rfc6101>.



Sheffer, et al.           Best Current Practice                [Page 24]

RFC 7525                   TLS Recommendations                  May 2015


   [RFC6120]  Saint-Andre, P., "Extensible Messaging and Presence
              Protocol (XMPP): Core", RFC 6120, March 2011,
              <http://www.rfc-editor.org/info/rfc6120>.

   [RFC6460]  Salter, M. and R. Housley, "Suite B Profile for Transport
              Layer Security (TLS)", RFC 6460, January 2012,
              <http://www.rfc-editor.org/info/rfc6460>.

   [RFC6698]  Hoffman, P. and J. Schlyter, "The DNS-Based Authentication
              of Named Entities (DANE) Transport Layer Security (TLS)
              Protocol: TLSA", RFC 6698, August 2012,
              <http://www.rfc-editor.org/info/rfc6698>.

   [RFC6797]  Hodges, J., Jackson, C., and A. Barth, "HTTP Strict
              Transport Security (HSTS)", RFC 6797, November 2012,
              <http://www.rfc-editor.org/info/rfc6797>.

   [RFC6960]  Santesson, S., Myers, M., Ankney, R., Malpani, A.,
              Galperin, S., and C. Adams, "X.509 Internet Public Key
              Infrastructure Online Certificate Status Protocol - OCSP",
              RFC 6960, June 2013,
              <http://www.rfc-editor.org/info/rfc6960>.

   [RFC6961]  Pettersen, Y., "The Transport Layer Security (TLS)
              Multiple Certificate Status Request Extension", RFC 6961,
              June 2013, <http://www.rfc-editor.org/info/rfc6961>.

   [RFC6989]  Sheffer, Y. and S. Fluhrer, "Additional Diffie-Hellman
              Tests for the Internet Key Exchange Protocol Version 2
              (IKEv2)", RFC 6989, July 2013,
              <http://www.rfc-editor.org/info/rfc6989>.

   [RFC7435]  Dukhovni, V., "Opportunistic Security: Some Protection
              Most of the Time", RFC 7435, December 2014,
              <http://www.rfc-editor.org/info/rfc7435>.

   [RFC7457]  Sheffer, Y., Holz, R., and P. Saint-Andre, "Summarizing
              Known Attacks on Transport Layer Security (TLS) and
              Datagram TLS (DTLS)", RFC 7457, February 2015,
              <http://www.rfc-editor.org/info/rfc7457>.

   [RFC7507]  Moeller, B. and A. Langley, "TLS Fallback Signaling Cipher
              Suite Value (SCSV) for Preventing Protocol Downgrade
              Attacks", RFC 7507, April 2015.







Sheffer, et al.           Best Current Practice                [Page 25]

RFC 7525                   TLS Recommendations                  May 2015


   [SESSION-HASH]
              Bhargavan, K., Ed., Delignat-Lavaud, A., Pironti, A.,
              Langley, A., and M. Ray, "Transport Layer Security (TLS)
              Session Hash and Extended Master Secret Extension", Work
              in Progress, draft-ietf-tls-session-hash-05, April 2015.

   [Smith2013]
              Smith, B., "Proposal to Change the Default TLS
              Ciphersuites Offered by Browsers.", 2013,
              <https://briansmith.org/browser-ciphersuites-01.html>.

   [Soghoian2011]
              Soghoian, C. and S. Stamm, "Certified lies: Detecting and
              defeating government interception attacks against SSL",
              Proc. 15th Int. Conf. Financial Cryptography and Data
              Security, 2011.

   [TLS-XMPP] Saint-Andre, P. and a. alkemade, "Use of Transport Layer
              Security (TLS) in the Extensible Messaging and Presence
              Protocol (XMPP)", Work in Progress,
              draft-ietf-uta-xmpp-07, April 2015.

   [triple-handshake]
              Delignat-Lavaud, A., Bhargavan, K., and A. Pironti,
              "Triple Handshakes Considered Harmful: Breaking and Fixing
              Authentication over TLS", 2014,
              <https://secure-resumption.com/>.

Acknowledgments

   Thanks to RJ Atkinson, Uri Blumenthal, Viktor Dukhovni, Stephen
   Farrell, Daniel Kahn Gillmor, Paul Hoffman, Simon Josefsson, Watson
   Ladd, Orit Levin, Ilari Liusvaara, Johannes Merkle, Bodo Moeller,
   Yoav Nir, Massimiliano Pala, Kenny Paterson, Patrick Pelletier, Tom
   Ritter, Joe St. Sauver, Joe Salowey, Rich Salz, Brian Smith, Sean
   Turner, and Aaron Zauner for their feedback and suggested
   improvements.  Thanks also to Brian Smith, who has provided a great
   resource in his "Proposal to Change the Default TLS Ciphersuites
   Offered by Browsers" [Smith2013].  Finally, thanks to all others who
   commented on the TLS, UTA, and other discussion lists but who are not
   mentioned here by name.

   Robert Sparks and Dave Waltermire provided helpful reviews on behalf
   of the General Area Review Team and the Security Directorate,
   respectively.






Sheffer, et al.           Best Current Practice                [Page 26]

RFC 7525                   TLS Recommendations                  May 2015


   During IESG review, Richard Barnes, Alissa Cooper, Spencer Dawkins,
   Stephen Farrell, Barry Leiba, Kathleen Moriarty, and Pete Resnick
   provided comments that led to further improvements.

   Ralph Holz gratefully acknowledges the support by Technische
   Universitaet Muenchen.  The authors gratefully acknowledge the
   assistance of Leif Johansson and Orit Levin as the working group
   chairs and Pete Resnick as the sponsoring Area Director.

Authors' Addresses

   Yaron Sheffer
   Intuit
   4 HaHarash St.
   Hod HaSharon  4524075
   Israel

   EMail: yaronf.ietf@gmail.com


   Ralph Holz
   NICTA
   13 Garden St.
   Eveleigh 2015 NSW
   Australia

   EMail: ralph.ietf@gmail.com


   Peter Saint-Andre
   &yet

   EMail: peter@andyet.com
   URI:   https://andyet.com/

















Sheffer, et al.           Best Current Practice                [Page 27]


=========================================================================



Internet Engineering Task Force (IETF)                       K. Moriarty
Request for Comments: 8996                                           CIS
BCP: 195                                                      S. Farrell
Obsoletes: 5469, 7507                             Trinity College Dublin
Updates: 3261, 3329, 3436, 3470, 3501, 3552,                  March 2021
         3568, 3656, 3749, 3767, 3856, 3871,                            
         3887, 3903, 3943, 3983, 4097, 4111,                            
         4162, 4168, 4217, 4235, 4261, 4279,                            
         4497, 4513, 4531, 4540, 4582, 4616,                            
         4642, 4680, 4681, 4712, 4732, 4743,                            
         4744, 4785, 4791, 4823, 4851, 4964,                            
         4975, 4976, 4992, 5018, 5019, 5023,                            
         5024, 5049, 5054, 5091, 5158, 5216,                            
         5238, 5263, 5281, 5364, 5415, 5422,                            
         5456, 5734, 5878, 5953, 6012, 6042,                            
         6083, 6084, 6176, 6347, 6353, 6367,                            
         6460, 6614, 6739, 6749, 6750, 7030,                            
         7465, 7525, 7562, 7568, 8261, 8422                             
Category: Best Current Practice                                         
ISSN: 2070-1721


                    Deprecating TLS 1.0 and TLS 1.1

Abstract

   This document formally deprecates Transport Layer Security (TLS)
   versions 1.0 (RFC 2246) and 1.1 (RFC 4346).  Accordingly, those
   documents have been moved to Historic status.  These versions lack
   support for current and recommended cryptographic algorithms and
   mechanisms, and various government and industry profiles of
   applications using TLS now mandate avoiding these old TLS versions.
   TLS version 1.2 became the recommended version for IETF protocols in
   2008 (subsequently being obsoleted by TLS version 1.3 in 2018),
   providing sufficient time to transition away from older versions.
   Removing support for older versions from implementations reduces the
   attack surface, reduces opportunity for misconfiguration, and
   streamlines library and product maintenance.

   This document also deprecates Datagram TLS (DTLS) version 1.0 (RFC
   4347) but not DTLS version 1.2, and there is no DTLS version 1.1.

   This document updates many RFCs that normatively refer to TLS version
   1.0 or TLS version 1.1, as described herein.  This document also
   updates the best practices for TLS usage in RFC 7525; hence, it is
   part of BCP 195.

Status of This Memo

   This memo documents an Internet Best Current Practice.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   BCPs is available in Section 2 of RFC 7841.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   https://www.rfc-editor.org/info/rfc8996.

Copyright Notice

   Copyright (c) 2021 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction
     1.1.  RFCs Updated
     1.2.  Terminology
   2.  Support for Deprecation
   3.  SHA-1 Usage Problematic in TLS 1.0 and TLS 1.1
   4.  Do Not Use TLS 1.0
   5.  Do Not Use TLS 1.1
   6.  Updates to RFC 7525
   7.  Operational Considerations
   8.  Security Considerations
   9.  IANA Considerations
   10. References
     10.1.  Normative References
     10.2.  Informative References
   Acknowledgements
   Authors' Addresses

1.  Introduction

   Transport Layer Security (TLS) versions 1.0 [RFC2246] and 1.1
   [RFC4346] were superseded by TLS 1.2 [RFC5246] in 2008, which has now
   itself been superseded by TLS 1.3 [RFC8446].  Datagram Transport
   Layer Security (DTLS) version 1.0 [RFC4347] was superseded by DTLS
   1.2 [RFC6347] in 2012.  Therefore, it is timely to further deprecate
   TLS 1.0, TLS 1.1, and DTLS 1.0.  Accordingly, the aforementioned
   documents have been moved to Historic status.

   Technical reasons for deprecating these versions include:

   *  They require the implementation of older cipher suites that are no
      longer desirable for cryptographic reasons, e.g., TLS 1.0 makes
      TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA mandatory to implement.
   *  There is a lack of support for current recommended cipher suites,
      especially authenticated encryption with associated data (AEAD)
      ciphers, which were not supported prior to TLS 1.2.  Note that
      registry entries for no-longer-desirable ciphersuites remain in
      the registries, but many TLS registries were updated by [RFC8447],
      which indicates that such entries are not recommended by the IETF.
   *  The integrity of the handshake depends on SHA-1 hash.
   *  The authentication of the peers depends on SHA-1 signatures.
   *  Support for four TLS protocol versions increases the likelihood of
      misconfiguration.
   *  At least one widely used library has plans to drop TLS 1.1 and TLS
      1.0 support in upcoming releases; products using such libraries
      would need to use older versions of the libraries to support TLS
      1.0 and TLS 1.1, which is clearly undesirable.

   Deprecation of these versions is intended to assist developers as
   additional justification to no longer support older (D)TLS versions
   and to migrate to a minimum of (D)TLS 1.2.  Deprecation also assists
   product teams with phasing out support for the older versions, to
   reduce the attack surface and the scope of maintenance for protocols
   in their offerings.

1.1.  RFCs Updated

   This document updates the following RFCs that normatively reference
   TLS 1.0, TLS 1.1, or DTLS 1.0.  The update is to obsolete usage of
   these older versions.  Fallback to these versions is prohibited
   through this update.  Specific references to mandatory minimum
   protocol versions of TLS 1.0 or TLS 1.1 are replaced by TLS 1.2, and
   references to minimum protocol version DTLS 1.0 are replaced by DTLS
   1.2.  Statements that "TLS 1.0 is the most widely deployed version
   and will provide the broadest interoperability" are removed without
   replacement.

   [RFC3261] [RFC3329] [RFC3436] [RFC3470] [RFC3501] [RFC3552] [RFC3568]
   [RFC3656] [RFC3749] [RFC3767] [RFC3856] [RFC3871] [RFC3887] [RFC3903]
   [RFC3943] [RFC3983] [RFC4097] [RFC4111] [RFC4162] [RFC4168] [RFC4217]
   [RFC4235] [RFC4261] [RFC4279] [RFC4497] [RFC4513] [RFC4531] [RFC4540]
   [RFC4582] [RFC4616] [RFC4642] [RFC4680] [RFC4681] [RFC4712] [RFC4732]
   [RFC4785] [RFC4791] [RFC4823] [RFC4851] [RFC4964] [RFC4975] [RFC4976]
   [RFC4992] [RFC5018] [RFC5019] [RFC5023] [RFC5024] [RFC5049] [RFC5054]
   [RFC5091] [RFC5158] [RFC5216] [RFC5238] [RFC5263] [RFC5281] [RFC5364]
   [RFC5415] [RFC5422] [RFC5456] [RFC5734] [RFC5878] [RFC6012] [RFC6042]
   [RFC6083] [RFC6084] [RFC6176] [RFC6353] [RFC6367] [RFC6739] [RFC6749]
   [RFC6750] [RFC7030] [RFC7465] [RFC7525] [RFC7562] [RFC7568] [RFC8261]
   [RFC8422]

   The status of [RFC7562], [RFC6042], [RFC5456], [RFC5024], [RFC4540],
   and [RFC3656] will be updated with permission of the Independent
   Submissions Editor.

   In addition, these RFCs normatively refer to TLS 1.0 or TLS 1.1 and
   have already been obsoleted; they are still listed here and marked as
   updated by this document in order to reiterate that any usage of the
   obsolete protocol should use modern TLS: [RFC3316], [RFC3489],
   [RFC3546], [RFC3588], [RFC3734], [RFC3920], [RFC4132], [RFC4244],
   [RFC4347], [RFC4366], [RFC4492], [RFC4507], [RFC4572], [RFC4582],
   [RFC4934], [RFC5077], [RFC5081], [RFC5101], and [RFC5953].

   Note that [RFC4642] has already been updated by [RFC8143], which
   makes an overlapping, but not quite identical, update as this
   document.

   [RFC6614] has a requirement for TLS 1.1 or later, although it only
   makes an informative reference to [RFC4346].  This requirement is
   updated to be for TLS 1.2 or later.

   [RFC6460], [RFC4744], and [RFC4743] are already Historic; they are
   still listed here and marked as updated by this document in order to
   reiterate that any usage of the obsolete protocol should use modern
   TLS.

   This document updates DTLS [RFC6347].  [RFC6347] had allowed for
   negotiating the use of DTLS 1.0, which is now forbidden.

   The DES and International Data Encryption Algorithm (IDEA) cipher
   suites specified in [RFC5469] were specifically removed from TLS 1.2
   by [RFC5246]; since the only versions of TLS for which their usage is
   defined are now Historic, [RFC5469] has been moved to Historic as
   well.

   The version-fallback Signaling Cipher Suite Value specified in
   [RFC7507] was defined to detect when a given client and server
   negotiate a lower version of (D)TLS than their highest shared
   version.  TLS 1.3 ([RFC8446]) incorporates a different mechanism that
   achieves this purpose, via sentinel values in the ServerHello.Random
   field.  With (D)TLS versions prior to 1.2 fully deprecated, the only
   way for (D)TLS implementations to negotiate a lower version than
   their highest shared version would be to negotiate (D)TLS 1.2 while
   supporting (D)TLS 1.3; supporting (D)TLS 1.3 implies support for the
   ServerHello.Random mechanism.  Accordingly, the functionality from
   [RFC7507] has been superseded, and this document marks it as
   Obsolete.

1.2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

2.  Support for Deprecation

   Specific details on attacks against TLS 1.0 and TLS 1.1, as well as
   their mitigations, are provided in [NIST800-52r2], [RFC7457], and
   other RFCs referenced therein.  Although mitigations for the current
   known vulnerabilities have been developed, any future issues
   discovered in old protocol versions might not be mitigated in older
   library versions when newer library versions do not support those old
   protocols.

   For example, NIST has provided the following rationale, copied with
   permission from Section 1.1, "History of TLS", of [NIST800-52r2]:

   |  TLS 1.1, specified in RFC 4346 [24], was developed to address
   |  weaknesses discovered in TLS 1.0, primarily in the areas of
   |  initialization vector selection and padding error processing.
   |  Initialization vectors were made explicit to prevent a certain
   |  class of attacks on the Cipher Block Chaining (CBC) mode of
   |  operation used by TLS.  The handling of padding errors was altered
   |  to treat a padding error as a bad message authentication code
   |  rather than a decryption failure.  In addition, the TLS 1.1 RFC
   |  acknowledges attacks on CBC mode that rely on the time to compute
   |  the message authentication code (MAC).  The TLS 1.1 specification
   |  states that to defend against such attacks, an implementation must
   |  process records in the same manner regardless of whether padding
   |  errors exist.  Further implementation considerations for CBC modes
   |  (which were not included in RFC 4346 [24]) are discussed in
   |  Section 3.3.2.
   |  
   |  TLS 1.2, specified in RFC 5246 [25], made several cryptographic
   |  enhancements, particularly in the area of hash functions, with the
   |  ability to use or specify the SHA-2 family of algorithms for hash,
   |  MAC, and Pseudorandom Function (PRF) computations.  TLS 1.2 also
   |  adds authenticated encryption with associated data (AEAD) cipher
   |  suites.
   |  
   |  TLS 1.3, specified in RFC 8446 [57], represents a significant
   |  change to TLS that aims to address threats that have arisen over
   |  the years.  Among the changes are a new handshake protocol, a new
   |  key derivation process that uses the HMAC-based Extract-and-Expand
   |  Key Derivation Function (HKDF) [37], and the removal of cipher
   |  suites that use RSA key transport or static Diffie-Hellman ( DH)
   |  [sic] key exchanges, the CBC mode of operation, or SHA-1.  Many
   |  extensions defined for use with TLS 1.2 and previous versions
   |  cannot be used with TLS 1.3.

3.  SHA-1 Usage Problematic in TLS 1.0 and TLS 1.1

   The integrity of both TLS 1.0 and TLS 1.1 depends on a running SHA-1
   hash of the exchanged messages.  This makes it possible to perform a
   downgrade attack on the handshake by an attacker able to perform 2^77
   operations, well below the acceptable modern security margin.

   Similarly, the authentication of the handshake depends on signatures
   made using a SHA-1 hash or a concatenation of MD5 and SHA-1 hashes
   that is not appreciably stronger than a SHA-1 hash, allowing the
   attacker to impersonate a server when it is able to break the
   severely weakened SHA-1 hash.

   Neither TLS 1.0 nor TLS 1.1 allows the peers to select a stronger
   hash for signatures in the ServerKeyExchange or CertificateVerify
   messages, making the only upgrade path the use of a newer protocol
   version.

   See [Bhargavan2016] for additional details.

4.  Do Not Use TLS 1.0

   TLS 1.0 MUST NOT be used.  Negotiation of TLS 1.0 from any version of
   TLS MUST NOT be permitted.

   Any other version of TLS is more secure than TLS 1.0.  While TLS 1.0
   can be configured to prevent some types of interception, using the
   highest version available is preferred.

   Pragmatically, clients MUST NOT send a ClientHello with
   ClientHello.client_version set to {03,01}.  Similarly, servers MUST
   NOT send a ServerHello with ServerHello.server_version set to
   {03,01}.  Any party receiving a Hello message with the protocol
   version set to {03,01} MUST respond with a "protocol_version" alert
   message and close the connection.

   Historically, TLS specifications were not clear on what the record
   layer version number (TLSPlaintext.version) could contain when
   sending a ClientHello message.  Appendix E of [RFC5246] notes that
   TLSPlaintext.version could be selected to maximize interoperability,
   though no definitive value is identified as ideal.  That guidance is
   still applicable; therefore, TLS servers MUST accept any value
   {03,XX} (including {03,00}) as the record layer version number for
   ClientHello, but they MUST NOT negotiate TLS 1.0.

5.  Do Not Use TLS 1.1

   TLS 1.1 MUST NOT be used.  Negotiation of TLS 1.1 from any version of
   TLS MUST NOT be permitted.

   Pragmatically, clients MUST NOT send a ClientHello with
   ClientHello.client_version set to {03,02}.  Similarly, servers MUST
   NOT send a ServerHello with ServerHello.server_version set to
   {03,02}.  Any party receiving a Hello message with the protocol
   version set to {03,02} MUST respond with a "protocol_version" alert
   message and close the connection.

   Any newer version of TLS is more secure than TLS 1.1.  While TLS 1.1
   can be configured to prevent some types of interception, using the
   highest version available is preferred.  Support for TLS 1.1 is
   dwindling in libraries and will impact security going forward if
   mitigations for attacks cannot be easily addressed and supported in
   older libraries.

   Historically, TLS specifications were not clear on what the record
   layer version number (TLSPlaintext.version) could contain when
   sending a ClientHello message.  Appendix E of [RFC5246] notes that
   TLSPlaintext.version could be selected to maximize interoperability,
   though no definitive value is identified as ideal.  That guidance is
   still applicable; therefore, TLS servers MUST accept any value
   {03,XX} (including {03,00}) as the record layer version number for
   ClientHello, but they MUST NOT negotiate TLS 1.1.

6.  Updates to RFC 7525

   "Recommendations for Secure Use of Transport Layer Security (TLS) and
   Datagram Transport Layer Security (DTLS)" [RFC7525] is BCP 195, which
   is the most recent Best Current Practice for implementing TLS and was
   based on TLS 1.2.  At the time of publication, TLS 1.0 and TLS 1.1
   had not yet been deprecated.  As such, BCP 195 is called out
   specifically to update text implementing the deprecation
   recommendations of this document.

   This document updates Section 3.1.1 of [RFC7525] by changing SHOULD
   NOT to MUST NOT as follows:

   *  Implementations MUST NOT negotiate TLS version 1.0 [RFC2246].

      Rationale: TLS 1.0 (published in 1999) does not support many
      modern, strong cipher suites.  In addition, TLS 1.0 lacks a per-
      record Initialization Vector (IV) for CBC-based cipher suites and
      does not warn against common padding errors.

   *  Implementations MUST NOT negotiate TLS version 1.1 [RFC4346].

      Rationale: TLS 1.1 (published in 2006) is a security improvement
      over TLS 1.0 but still does not support certain stronger cipher
      suites.

   This document updates Section 3.1.2 of [RFC7525] by changing SHOULD
   NOT to MUST NOT and adding a reference to RFC 6347 as follows:

   *  Implementations MUST NOT negotiate DTLS version 1.0 [RFC4347]
      [RFC6347].

      Version 1.0 of DTLS correlates to version 1.1 of TLS (see above).

7.  Operational Considerations

   This document is part of BCP 195 and, as such, reflects the
   understanding of the IETF (at the time of this document's
   publication) as to the best practices for TLS and DTLS usage.

   Though TLS 1.1 has been obsolete since the publication of [RFC5246]
   in 2008, and DTLS 1.0 has been obsolete since the publication of
   [RFC6347] in 2012, there may remain some systems in operation that do
   not support (D)TLS 1.2 or higher.  Adopting the practices recommended
   by this document for any systems that need to communicate with the
   aforementioned class of systems will cause failure to interoperate.
   However, disregarding the recommendations of this document in order
   to continue to interoperate with the aforementioned class of systems
   incurs some amount of risk.  The nature of the risks incurred by
   operating in contravention to the recommendations of this document
   are discussed in Sections 2 and 3, and knowledge of those risks
   should be used along with any potential mitigating factors and the
   risks inherent to updating the systems in question when deciding how
   quickly to adopt the recommendations specified in this document.

8.  Security Considerations

   This document deprecates two older TLS protocol versions and one
   older DTLS protocol version for security reasons already described.
   The attack surface is reduced when there are a smaller number of
   supported protocols and fallback options are removed.

9.  IANA Considerations

   This document has no IANA actions.

10.  References

10.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC2246]  Dierks, T. and C. Allen, "The TLS Protocol Version 1.0",
              RFC 2246, DOI 10.17487/RFC2246, January 1999,
              <https://www.rfc-editor.org/info/rfc2246>.

   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,
              A., Peterson, J., Sparks, R., Handley, M., and E.
              Schooler, "SIP: Session Initiation Protocol", RFC 3261,
              DOI 10.17487/RFC3261, June 2002,
              <https://www.rfc-editor.org/info/rfc3261>.

   [RFC3329]  Arkko, J., Torvinen, V., Camarillo, G., Niemi, A., and T.
              Haukka, "Security Mechanism Agreement for the Session
              Initiation Protocol (SIP)", RFC 3329,
              DOI 10.17487/RFC3329, January 2003,
              <https://www.rfc-editor.org/info/rfc3329>.

   [RFC3436]  Jungmaier, A., Rescorla, E., and M. Tuexen, "Transport
              Layer Security over Stream Control Transmission Protocol",
              RFC 3436, DOI 10.17487/RFC3436, December 2002,
              <https://www.rfc-editor.org/info/rfc3436>.

   [RFC3470]  Hollenbeck, S., Rose, M., and L. Masinter, "Guidelines for
              the Use of Extensible Markup Language (XML) within IETF
              Protocols", BCP 70, RFC 3470, DOI 10.17487/RFC3470,
              January 2003, <https://www.rfc-editor.org/info/rfc3470>.

   [RFC3501]  Crispin, M., "INTERNET MESSAGE ACCESS PROTOCOL - VERSION
              4rev1", RFC 3501, DOI 10.17487/RFC3501, March 2003,
              <https://www.rfc-editor.org/info/rfc3501>.

   [RFC3552]  Rescorla, E. and B. Korver, "Guidelines for Writing RFC
              Text on Security Considerations", BCP 72, RFC 3552,
              DOI 10.17487/RFC3552, July 2003,
              <https://www.rfc-editor.org/info/rfc3552>.

   [RFC3568]  Barbir, A., Cain, B., Nair, R., and O. Spatscheck, "Known
              Content Network (CN) Request-Routing Mechanisms",
              RFC 3568, DOI 10.17487/RFC3568, July 2003,
              <https://www.rfc-editor.org/info/rfc3568>.

   [RFC3656]  Siemborski, R., "The Mailbox Update (MUPDATE) Distributed
              Mailbox Database Protocol", RFC 3656,
              DOI 10.17487/RFC3656, December 2003,
              <https://www.rfc-editor.org/info/rfc3656>.

   [RFC3749]  Hollenbeck, S., "Transport Layer Security Protocol
              Compression Methods", RFC 3749, DOI 10.17487/RFC3749, May
              2004, <https://www.rfc-editor.org/info/rfc3749>.

   [RFC3767]  Farrell, S., Ed., "Securely Available Credentials
              Protocol", RFC 3767, DOI 10.17487/RFC3767, June 2004,
              <https://www.rfc-editor.org/info/rfc3767>.

   [RFC3856]  Rosenberg, J., "A Presence Event Package for the Session
              Initiation Protocol (SIP)", RFC 3856,
              DOI 10.17487/RFC3856, August 2004,
              <https://www.rfc-editor.org/info/rfc3856>.

   [RFC3871]  Jones, G., Ed., "Operational Security Requirements for
              Large Internet Service Provider (ISP) IP Network
              Infrastructure", RFC 3871, DOI 10.17487/RFC3871, September
              2004, <https://www.rfc-editor.org/info/rfc3871>.

   [RFC3887]  Hansen, T., "Message Tracking Query Protocol", RFC 3887,
              DOI 10.17487/RFC3887, September 2004,
              <https://www.rfc-editor.org/info/rfc3887>.

   [RFC3903]  Niemi, A., Ed., "Session Initiation Protocol (SIP)
              Extension for Event State Publication", RFC 3903,
              DOI 10.17487/RFC3903, October 2004,
              <https://www.rfc-editor.org/info/rfc3903>.

   [RFC3943]  Friend, R., "Transport Layer Security (TLS) Protocol
              Compression Using Lempel-Ziv-Stac (LZS)", RFC 3943,
              DOI 10.17487/RFC3943, November 2004,
              <https://www.rfc-editor.org/info/rfc3943>.

   [RFC3983]  Newton, A. and M. Sanz, "Using the Internet Registry
              Information Service (IRIS) over the Blocks Extensible
              Exchange Protocol (BEEP)", RFC 3983, DOI 10.17487/RFC3983,
              January 2005, <https://www.rfc-editor.org/info/rfc3983>.

   [RFC4097]  Barnes, M., Ed., "Middlebox Communications (MIDCOM)
              Protocol Evaluation", RFC 4097, DOI 10.17487/RFC4097, June
              2005, <https://www.rfc-editor.org/info/rfc4097>.

   [RFC4111]  Fang, L., Ed., "Security Framework for Provider-
              Provisioned Virtual Private Networks (PPVPNs)", RFC 4111,
              DOI 10.17487/RFC4111, July 2005,
              <https://www.rfc-editor.org/info/rfc4111>.

   [RFC4162]  Lee, H.J., Yoon, J.H., and J.I. Lee, "Addition of SEED
              Cipher Suites to Transport Layer Security (TLS)",
              RFC 4162, DOI 10.17487/RFC4162, August 2005,
              <https://www.rfc-editor.org/info/rfc4162>.

   [RFC4168]  Rosenberg, J., Schulzrinne, H., and G. Camarillo, "The
              Stream Control Transmission Protocol (SCTP) as a Transport
              for the Session Initiation Protocol (SIP)", RFC 4168,
              DOI 10.17487/RFC4168, October 2005,
              <https://www.rfc-editor.org/info/rfc4168>.

   [RFC4217]  Ford-Hutchinson, P., "Securing FTP with TLS", RFC 4217,
              DOI 10.17487/RFC4217, October 2005,
              <https://www.rfc-editor.org/info/rfc4217>.

   [RFC4235]  Rosenberg, J., Schulzrinne, H., and R. Mahy, Ed., "An
              INVITE-Initiated Dialog Event Package for the Session
              Initiation Protocol (SIP)", RFC 4235,
              DOI 10.17487/RFC4235, November 2005,
              <https://www.rfc-editor.org/info/rfc4235>.

   [RFC4261]  Walker, J. and A. Kulkarni, Ed., "Common Open Policy
              Service (COPS) Over Transport Layer Security (TLS)",
              RFC 4261, DOI 10.17487/RFC4261, December 2005,
              <https://www.rfc-editor.org/info/rfc4261>.

   [RFC4279]  Eronen, P., Ed. and H. Tschofenig, Ed., "Pre-Shared Key
              Ciphersuites for Transport Layer Security (TLS)",
              RFC 4279, DOI 10.17487/RFC4279, December 2005,
              <https://www.rfc-editor.org/info/rfc4279>.

   [RFC4346]  Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.1", RFC 4346,
              DOI 10.17487/RFC4346, April 2006,
              <https://www.rfc-editor.org/info/rfc4346>.

   [RFC4497]  Elwell, J., Derks, F., Mourot, P., and O. Rousseau,
              "Interworking between the Session Initiation Protocol
              (SIP) and QSIG", BCP 117, RFC 4497, DOI 10.17487/RFC4497,
              May 2006, <https://www.rfc-editor.org/info/rfc4497>.

   [RFC4513]  Harrison, R., Ed., "Lightweight Directory Access Protocol
              (LDAP): Authentication Methods and Security Mechanisms",
              RFC 4513, DOI 10.17487/RFC4513, June 2006,
              <https://www.rfc-editor.org/info/rfc4513>.

   [RFC4531]  Zeilenga, K., "Lightweight Directory Access Protocol
              (LDAP) Turn Operation", RFC 4531, DOI 10.17487/RFC4531,
              June 2006, <https://www.rfc-editor.org/info/rfc4531>.

   [RFC4540]  Stiemerling, M., Quittek, J., and C. Cadar, "NEC's Simple
              Middlebox Configuration (SIMCO) Protocol Version 3.0",
              RFC 4540, DOI 10.17487/RFC4540, May 2006,
              <https://www.rfc-editor.org/info/rfc4540>.

   [RFC4582]  Camarillo, G., Ott, J., and K. Drage, "The Binary Floor
              Control Protocol (BFCP)", RFC 4582, DOI 10.17487/RFC4582,
              November 2006, <https://www.rfc-editor.org/info/rfc4582>.

   [RFC4616]  Zeilenga, K., Ed., "The PLAIN Simple Authentication and
              Security Layer (SASL) Mechanism", RFC 4616,
              DOI 10.17487/RFC4616, August 2006,
              <https://www.rfc-editor.org/info/rfc4616>.

   [RFC4642]  Murchison, K., Vinocur, J., and C. Newman, "Using
              Transport Layer Security (TLS) with Network News Transfer
              Protocol (NNTP)", RFC 4642, DOI 10.17487/RFC4642, October
              2006, <https://www.rfc-editor.org/info/rfc4642>.

   [RFC4680]  Santesson, S., "TLS Handshake Message for Supplemental
              Data", RFC 4680, DOI 10.17487/RFC4680, October 2006,
              <https://www.rfc-editor.org/info/rfc4680>.

   [RFC4681]  Santesson, S., Medvinsky, A., and J. Ball, "TLS User
              Mapping Extension", RFC 4681, DOI 10.17487/RFC4681,
              October 2006, <https://www.rfc-editor.org/info/rfc4681>.

   [RFC4712]  Siddiqui, A., Romascanu, D., Golovinsky, E., Rahman, M.,
              and Y. Kim, "Transport Mappings for Real-time Application
              Quality-of-Service Monitoring (RAQMON) Protocol Data Unit
              (PDU)", RFC 4712, DOI 10.17487/RFC4712, October 2006,
              <https://www.rfc-editor.org/info/rfc4712>.

   [RFC4732]  Handley, M., Ed., Rescorla, E., Ed., and IAB, "Internet
              Denial-of-Service Considerations", RFC 4732,
              DOI 10.17487/RFC4732, December 2006,
              <https://www.rfc-editor.org/info/rfc4732>.

   [RFC4743]  Goddard, T., "Using NETCONF over the Simple Object Access
              Protocol (SOAP)", RFC 4743, DOI 10.17487/RFC4743, December
              2006, <https://www.rfc-editor.org/info/rfc4743>.

   [RFC4744]  Lear, E. and K. Crozier, "Using the NETCONF Protocol over
              the Blocks Extensible Exchange Protocol (BEEP)", RFC 4744,
              DOI 10.17487/RFC4744, December 2006,
              <https://www.rfc-editor.org/info/rfc4744>.

   [RFC4785]  Blumenthal, U. and P. Goel, "Pre-Shared Key (PSK)
              Ciphersuites with NULL Encryption for Transport Layer
              Security (TLS)", RFC 4785, DOI 10.17487/RFC4785, January
              2007, <https://www.rfc-editor.org/info/rfc4785>.

   [RFC4791]  Daboo, C., Desruisseaux, B., and L. Dusseault,
              "Calendaring Extensions to WebDAV (CalDAV)", RFC 4791,
              DOI 10.17487/RFC4791, March 2007,
              <https://www.rfc-editor.org/info/rfc4791>.

   [RFC4823]  Harding, T. and R. Scott, "FTP Transport for Secure Peer-
              to-Peer Business Data Interchange over the Internet",
              RFC 4823, DOI 10.17487/RFC4823, April 2007,
              <https://www.rfc-editor.org/info/rfc4823>.

   [RFC4851]  Cam-Winget, N., McGrew, D., Salowey, J., and H. Zhou, "The
              Flexible Authentication via Secure Tunneling Extensible
              Authentication Protocol Method (EAP-FAST)", RFC 4851,
              DOI 10.17487/RFC4851, May 2007,
              <https://www.rfc-editor.org/info/rfc4851>.

   [RFC4964]  Allen, A., Ed., Holm, J., and T. Hallin, "The P-Answer-
              State Header Extension to the Session Initiation Protocol
              for the Open Mobile Alliance Push to Talk over Cellular",
              RFC 4964, DOI 10.17487/RFC4964, September 2007,
              <https://www.rfc-editor.org/info/rfc4964>.

   [RFC4975]  Campbell, B., Ed., Mahy, R., Ed., and C. Jennings, Ed.,
              "The Message Session Relay Protocol (MSRP)", RFC 4975,
              DOI 10.17487/RFC4975, September 2007,
              <https://www.rfc-editor.org/info/rfc4975>.

   [RFC4976]  Jennings, C., Mahy, R., and A. B. Roach, "Relay Extensions
              for the Message Sessions Relay Protocol (MSRP)", RFC 4976,
              DOI 10.17487/RFC4976, September 2007,
              <https://www.rfc-editor.org/info/rfc4976>.

   [RFC4992]  Newton, A., "XML Pipelining with Chunks for the Internet
              Registry Information Service", RFC 4992,
              DOI 10.17487/RFC4992, August 2007,
              <https://www.rfc-editor.org/info/rfc4992>.

   [RFC5018]  Camarillo, G., "Connection Establishment in the Binary
              Floor Control Protocol (BFCP)", RFC 5018,
              DOI 10.17487/RFC5018, September 2007,
              <https://www.rfc-editor.org/info/rfc5018>.

   [RFC5019]  Deacon, A. and R. Hurst, "The Lightweight Online
              Certificate Status Protocol (OCSP) Profile for High-Volume
              Environments", RFC 5019, DOI 10.17487/RFC5019, September
              2007, <https://www.rfc-editor.org/info/rfc5019>.

   [RFC5023]  Gregorio, J., Ed. and B. de hOra, Ed., "The Atom
              Publishing Protocol", RFC 5023, DOI 10.17487/RFC5023,
              October 2007, <https://www.rfc-editor.org/info/rfc5023>.

   [RFC5024]  Friend, I., "ODETTE File Transfer Protocol 2.0", RFC 5024,
              DOI 10.17487/RFC5024, November 2007,
              <https://www.rfc-editor.org/info/rfc5024>.

   [RFC5049]  Bormann, C., Liu, Z., Price, R., and G. Camarillo, Ed.,
              "Applying Signaling Compression (SigComp) to the Session
              Initiation Protocol (SIP)", RFC 5049,
              DOI 10.17487/RFC5049, December 2007,
              <https://www.rfc-editor.org/info/rfc5049>.

   [RFC5054]  Taylor, D., Wu, T., Mavrogiannopoulos, N., and T. Perrin,
              "Using the Secure Remote Password (SRP) Protocol for TLS
              Authentication", RFC 5054, DOI 10.17487/RFC5054, November
              2007, <https://www.rfc-editor.org/info/rfc5054>.

   [RFC5091]  Boyen, X. and L. Martin, "Identity-Based Cryptography
              Standard (IBCS) #1: Supersingular Curve Implementations of
              the BF and BB1 Cryptosystems", RFC 5091,
              DOI 10.17487/RFC5091, December 2007,
              <https://www.rfc-editor.org/info/rfc5091>.

   [RFC5158]  Huston, G., "6to4 Reverse DNS Delegation Specification",
              RFC 5158, DOI 10.17487/RFC5158, March 2008,
              <https://www.rfc-editor.org/info/rfc5158>.

   [RFC5216]  Simon, D., Aboba, B., and R. Hurst, "The EAP-TLS
              Authentication Protocol", RFC 5216, DOI 10.17487/RFC5216,
              March 2008, <https://www.rfc-editor.org/info/rfc5216>.

   [RFC5238]  Phelan, T., "Datagram Transport Layer Security (DTLS) over
              the Datagram Congestion Control Protocol (DCCP)",
              RFC 5238, DOI 10.17487/RFC5238, May 2008,
              <https://www.rfc-editor.org/info/rfc5238>.

   [RFC5263]  Lonnfors, M., Costa-Requena, J., Leppanen, E., and H.
              Khartabil, "Session Initiation Protocol (SIP) Extension
              for Partial Notification of Presence Information",
              RFC 5263, DOI 10.17487/RFC5263, September 2008,
              <https://www.rfc-editor.org/info/rfc5263>.

   [RFC5281]  Funk, P. and S. Blake-Wilson, "Extensible Authentication
              Protocol Tunneled Transport Layer Security Authenticated
              Protocol Version 0 (EAP-TTLSv0)", RFC 5281,
              DOI 10.17487/RFC5281, August 2008,
              <https://www.rfc-editor.org/info/rfc5281>.

   [RFC5364]  Garcia-Martin, M. and G. Camarillo, "Extensible Markup
              Language (XML) Format Extension for Representing Copy
              Control Attributes in Resource Lists", RFC 5364,
              DOI 10.17487/RFC5364, October 2008,
              <https://www.rfc-editor.org/info/rfc5364>.

   [RFC5422]  Cam-Winget, N., McGrew, D., Salowey, J., and H. Zhou,
              "Dynamic Provisioning Using Flexible Authentication via
              Secure Tunneling Extensible Authentication Protocol (EAP-
              FAST)", RFC 5422, DOI 10.17487/RFC5422, March 2009,
              <https://www.rfc-editor.org/info/rfc5422>.

   [RFC5469]  Eronen, P., Ed., "DES and IDEA Cipher Suites for Transport
              Layer Security (TLS)", RFC 5469, DOI 10.17487/RFC5469,
              February 2009, <https://www.rfc-editor.org/info/rfc5469>.

   [RFC5734]  Hollenbeck, S., "Extensible Provisioning Protocol (EPP)
              Transport over TCP", STD 69, RFC 5734,
              DOI 10.17487/RFC5734, August 2009,
              <https://www.rfc-editor.org/info/rfc5734>.

   [RFC5878]  Brown, M. and R. Housley, "Transport Layer Security (TLS)
              Authorization Extensions", RFC 5878, DOI 10.17487/RFC5878,
              May 2010, <https://www.rfc-editor.org/info/rfc5878>.

   [RFC5953]  Hardaker, W., "Transport Layer Security (TLS) Transport
              Model for the Simple Network Management Protocol (SNMP)",
              RFC 5953, DOI 10.17487/RFC5953, August 2010,
              <https://www.rfc-editor.org/info/rfc5953>.

   [RFC6042]  Keromytis, A., "Transport Layer Security (TLS)
              Authorization Using KeyNote", RFC 6042,
              DOI 10.17487/RFC6042, October 2010,
              <https://www.rfc-editor.org/info/rfc6042>.

   [RFC6176]  Turner, S. and T. Polk, "Prohibiting Secure Sockets Layer
              (SSL) Version 2.0", RFC 6176, DOI 10.17487/RFC6176, March
              2011, <https://www.rfc-editor.org/info/rfc6176>.

   [RFC6353]  Hardaker, W., "Transport Layer Security (TLS) Transport
              Model for the Simple Network Management Protocol (SNMP)",
              STD 78, RFC 6353, DOI 10.17487/RFC6353, July 2011,
              <https://www.rfc-editor.org/info/rfc6353>.

   [RFC6367]  Kanno, S. and M. Kanda, "Addition of the Camellia Cipher
              Suites to Transport Layer Security (TLS)", RFC 6367,
              DOI 10.17487/RFC6367, September 2011,
              <https://www.rfc-editor.org/info/rfc6367>.

   [RFC6739]  Schulzrinne, H. and H. Tschofenig, "Synchronizing Service
              Boundaries and <mapping> Elements Based on the Location-
              to-Service Translation (LoST) Protocol", RFC 6739,
              DOI 10.17487/RFC6739, October 2012,
              <https://www.rfc-editor.org/info/rfc6739>.

   [RFC6749]  Hardt, D., Ed., "The OAuth 2.0 Authorization Framework",
              RFC 6749, DOI 10.17487/RFC6749, October 2012,
              <https://www.rfc-editor.org/info/rfc6749>.

   [RFC6750]  Jones, M. and D. Hardt, "The OAuth 2.0 Authorization
              Framework: Bearer Token Usage", RFC 6750,
              DOI 10.17487/RFC6750, October 2012,
              <https://www.rfc-editor.org/info/rfc6750>.

   [RFC7030]  Pritikin, M., Ed., Yee, P., Ed., and D. Harkins, Ed.,
              "Enrollment over Secure Transport", RFC 7030,
              DOI 10.17487/RFC7030, October 2013,
              <https://www.rfc-editor.org/info/rfc7030>.

   [RFC7465]  Popov, A., "Prohibiting RC4 Cipher Suites", RFC 7465,
              DOI 10.17487/RFC7465, February 2015,
              <https://www.rfc-editor.org/info/rfc7465>.

   [RFC7507]  Moeller, B. and A. Langley, "TLS Fallback Signaling Cipher
              Suite Value (SCSV) for Preventing Protocol Downgrade
              Attacks", RFC 7507, DOI 10.17487/RFC7507, April 2015,
              <https://www.rfc-editor.org/info/rfc7507>.

   [RFC7525]  Sheffer, Y., Holz, R., and P. Saint-Andre,
              "Recommendations for Secure Use of Transport Layer
              Security (TLS) and Datagram Transport Layer Security
              (DTLS)", BCP 195, RFC 7525, DOI 10.17487/RFC7525, May
              2015, <https://www.rfc-editor.org/info/rfc7525>.

   [RFC7562]  Thakore, D., "Transport Layer Security (TLS) Authorization
              Using Digital Transmission Content Protection (DTCP)
              Certificates", RFC 7562, DOI 10.17487/RFC7562, July 2015,
              <https://www.rfc-editor.org/info/rfc7562>.

   [RFC7568]  Barnes, R., Thomson, M., Pironti, A., and A. Langley,
              "Deprecating Secure Sockets Layer Version 3.0", RFC 7568,
              DOI 10.17487/RFC7568, June 2015,
              <https://www.rfc-editor.org/info/rfc7568>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8422]  Nir, Y., Josefsson, S., and M. Pegourie-Gonnard, "Elliptic
              Curve Cryptography (ECC) Cipher Suites for Transport Layer
              Security (TLS) Versions 1.2 and Earlier", RFC 8422,
              DOI 10.17487/RFC8422, August 2018,
              <https://www.rfc-editor.org/info/rfc8422>.

10.2.  Informative References

   [Bhargavan2016]
              Bhargavan, K. and G. Leuren, "Transcript Collision
              Attacks: Breaking Authentication in TLS, IKE, and SSH",
              DOI 10.14722/ndss.2016.23418, February 2016,
              <https://www.mitls.org/downloads/transcript-
              collisions.pdf>.

   [NIST800-52r2]
              National Institute of Standards and Technology,
              "Guidelines for the Selection, Configuration, and Use of
              Transport Layer Security (TLS) Implementations NIST
              SP800-52r2", DOI 10.6028/NIST.SP.800-52r2, August 2019,
              <https://nvlpubs.nist.gov/nistpubs/SpecialPublications/
              NIST.SP.800-52r2.pdf>.

   [RFC3316]  Arkko, J., Kuijpers, G., Soliman, H., Loughney, J., and J.
              Wiljakka, "Internet Protocol Version 6 (IPv6) for Some
              Second and Third Generation Cellular Hosts", RFC 3316,
              DOI 10.17487/RFC3316, April 2003,
              <https://www.rfc-editor.org/info/rfc3316>.

   [RFC3489]  Rosenberg, J., Weinberger, J., Huitema, C., and R. Mahy,
              "STUN - Simple Traversal of User Datagram Protocol (UDP)
              Through Network Address Translators (NATs)", RFC 3489,
              DOI 10.17487/RFC3489, March 2003,
              <https://www.rfc-editor.org/info/rfc3489>.

   [RFC3546]  Blake-Wilson, S., Nystrom, M., Hopwood, D., Mikkelsen, J.,
              and T. Wright, "Transport Layer Security (TLS)
              Extensions", RFC 3546, DOI 10.17487/RFC3546, June 2003,
              <https://www.rfc-editor.org/info/rfc3546>.

   [RFC3588]  Calhoun, P., Loughney, J., Guttman, E., Zorn, G., and J.
              Arkko, "Diameter Base Protocol", RFC 3588,
              DOI 10.17487/RFC3588, September 2003,
              <https://www.rfc-editor.org/info/rfc3588>.

   [RFC3734]  Hollenbeck, S., "Extensible Provisioning Protocol (EPP)
              Transport Over TCP", RFC 3734, DOI 10.17487/RFC3734, March
              2004, <https://www.rfc-editor.org/info/rfc3734>.

   [RFC3920]  Saint-Andre, P., Ed., "Extensible Messaging and Presence
              Protocol (XMPP): Core", RFC 3920, DOI 10.17487/RFC3920,
              October 2004, <https://www.rfc-editor.org/info/rfc3920>.

   [RFC4132]  Moriai, S., Kato, A., and M. Kanda, "Addition of Camellia
              Cipher Suites to Transport Layer Security (TLS)",
              RFC 4132, DOI 10.17487/RFC4132, July 2005,
              <https://www.rfc-editor.org/info/rfc4132>.

   [RFC4244]  Barnes, M., Ed., "An Extension to the Session Initiation
              Protocol (SIP) for Request History Information", RFC 4244,
              DOI 10.17487/RFC4244, November 2005,
              <https://www.rfc-editor.org/info/rfc4244>.

   [RFC4347]  Rescorla, E. and N. Modadugu, "Datagram Transport Layer
              Security", RFC 4347, DOI 10.17487/RFC4347, April 2006,
              <https://www.rfc-editor.org/info/rfc4347>.

   [RFC4366]  Blake-Wilson, S., Nystrom, M., Hopwood, D., Mikkelsen, J.,
              and T. Wright, "Transport Layer Security (TLS)
              Extensions", RFC 4366, DOI 10.17487/RFC4366, April 2006,
              <https://www.rfc-editor.org/info/rfc4366>.

   [RFC4492]  Blake-Wilson, S., Bolyard, N., Gupta, V., Hawk, C., and B.
              Moeller, "Elliptic Curve Cryptography (ECC) Cipher Suites
              for Transport Layer Security (TLS)", RFC 4492,
              DOI 10.17487/RFC4492, May 2006,
              <https://www.rfc-editor.org/info/rfc4492>.

   [RFC4507]  Salowey, J., Zhou, H., Eronen, P., and H. Tschofenig,
              "Transport Layer Security (TLS) Session Resumption without
              Server-Side State", RFC 4507, DOI 10.17487/RFC4507, May
              2006, <https://www.rfc-editor.org/info/rfc4507>.

   [RFC4572]  Lennox, J., "Connection-Oriented Media Transport over the
              Transport Layer Security (TLS) Protocol in the Session
              Description Protocol (SDP)", RFC 4572,
              DOI 10.17487/RFC4572, July 2006,
              <https://www.rfc-editor.org/info/rfc4572>.

   [RFC4934]  Hollenbeck, S., "Extensible Provisioning Protocol (EPP)
              Transport Over TCP", RFC 4934, DOI 10.17487/RFC4934, May
              2007, <https://www.rfc-editor.org/info/rfc4934>.

   [RFC5077]  Salowey, J., Zhou, H., Eronen, P., and H. Tschofenig,
              "Transport Layer Security (TLS) Session Resumption without
              Server-Side State", RFC 5077, DOI 10.17487/RFC5077,
              January 2008, <https://www.rfc-editor.org/info/rfc5077>.

   [RFC5081]  Mavrogiannopoulos, N., "Using OpenPGP Keys for Transport
              Layer Security (TLS) Authentication", RFC 5081,
              DOI 10.17487/RFC5081, November 2007,
              <https://www.rfc-editor.org/info/rfc5081>.

   [RFC5101]  Claise, B., Ed., "Specification of the IP Flow Information
              Export (IPFIX) Protocol for the Exchange of IP Traffic
              Flow Information", RFC 5101, DOI 10.17487/RFC5101, January
              2008, <https://www.rfc-editor.org/info/rfc5101>.

   [RFC5246]  Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.2", RFC 5246,
              DOI 10.17487/RFC5246, August 2008,
              <https://www.rfc-editor.org/info/rfc5246>.

   [RFC5415]  Calhoun, P., Ed., Montemurro, M., Ed., and D. Stanley,
              Ed., "Control And Provisioning of Wireless Access Points
              (CAPWAP) Protocol Specification", RFC 5415,
              DOI 10.17487/RFC5415, March 2009,
              <https://www.rfc-editor.org/info/rfc5415>.

   [RFC5456]  Spencer, M., Capouch, B., Guy, E., Ed., Miller, F., and K.
              Shumard, "IAX: Inter-Asterisk eXchange Version 2",
              RFC 5456, DOI 10.17487/RFC5456, February 2010,
              <https://www.rfc-editor.org/info/rfc5456>.

   [RFC6012]  Salowey, J., Petch, T., Gerhards, R., and H. Feng,
              "Datagram Transport Layer Security (DTLS) Transport
              Mapping for Syslog", RFC 6012, DOI 10.17487/RFC6012,
              October 2010, <https://www.rfc-editor.org/info/rfc6012>.

   [RFC6083]  Tuexen, M., Seggelmann, R., and E. Rescorla, "Datagram
              Transport Layer Security (DTLS) for Stream Control
              Transmission Protocol (SCTP)", RFC 6083,
              DOI 10.17487/RFC6083, January 2011,
              <https://www.rfc-editor.org/info/rfc6083>.

   [RFC6084]  Fu, X., Dickmann, C., and J. Crowcroft, "General Internet
              Signaling Transport (GIST) over Stream Control
              Transmission Protocol (SCTP) and Datagram Transport Layer
              Security (DTLS)", RFC 6084, DOI 10.17487/RFC6084, January
              2011, <https://www.rfc-editor.org/info/rfc6084>.

   [RFC6347]  Rescorla, E. and N. Modadugu, "Datagram Transport Layer
              Security Version 1.2", RFC 6347, DOI 10.17487/RFC6347,
              January 2012, <https://www.rfc-editor.org/info/rfc6347>.

   [RFC6460]  Salter, M. and R. Housley, "Suite B Profile for Transport
              Layer Security (TLS)", RFC 6460, DOI 10.17487/RFC6460,
              January 2012, <https://www.rfc-editor.org/info/rfc6460>.

   [RFC6614]  Winter, S., McCauley, M., Venaas, S., and K. Wierenga,
              "Transport Layer Security (TLS) Encryption for RADIUS",
              RFC 6614, DOI 10.17487/RFC6614, May 2012,
              <https://www.rfc-editor.org/info/rfc6614>.

   [RFC7457]  Sheffer, Y., Holz, R., and P. Saint-Andre, "Summarizing
              Known Attacks on Transport Layer Security (TLS) and
              Datagram TLS (DTLS)", RFC 7457, DOI 10.17487/RFC7457,
              February 2015, <https://www.rfc-editor.org/info/rfc7457>.

   [RFC8143]  Elie, J., "Using Transport Layer Security (TLS) with
              Network News Transfer Protocol (NNTP)", RFC 8143,
              DOI 10.17487/RFC8143, April 2017,
              <https://www.rfc-editor.org/info/rfc8143>.

   [RFC8261]  Tuexen, M., Stewart, R., Jesup, R., and S. Loreto,
              "Datagram Transport Layer Security (DTLS) Encapsulation of
              SCTP Packets", RFC 8261, DOI 10.17487/RFC8261, November
              2017, <https://www.rfc-editor.org/info/rfc8261>.

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/info/rfc8446>.

   [RFC8447]  Salowey, J. and S. Turner, "IANA Registry Updates for TLS
              and DTLS", RFC 8447, DOI 10.17487/RFC8447, August 2018,
              <https://www.rfc-editor.org/info/rfc8447>.

Acknowledgements

   Thanks to those that provided usage data and reviewed and/or improved
   this document, including: Michael Ackermann, David Benjamin, David
   Black, Deborah Brungard, Alan DeKok, Viktor Dukhovni, Julien Élie,
   Adrian Farrelll, Gary Gapinski, Alessandro Ghedini, Peter Gutmann,
   Jeremy Harris, Nick Hilliard, James Hodgkinson, Russ Housley, Hubert
   Kario, Benjamin Kaduk, John Klensin, Watson Ladd, Eliot Lear, Ted
   Lemon, John Mattsson, Keith Moore, Tom Petch, Eric Mill, Yoav Nir,
   Andrei Popov, Michael Richardson, Eric Rescorla, Rich Salz, Mohit
   Sethi, Yaron Sheffer, Rob Sayre, Robert Sparks, Barbara Stark, Martin
   Thomson, Sean Turner, Loganaden Velvindron, Jakub Wilk, and
   Christopher Wood.

Authors' Addresses

   Kathleen Moriarty
   Center for Internet Security (CIS)
   East Greenbush, NY
   United States of America

   Email: Kathleen.Moriarty.ietf@gmail.com


   Stephen Farrell
   Trinity College Dublin
   Dublin
   2
   Ireland

   Phone: +353-1-896-2354
   Email: stephen.farrell@cs.tcd.ie

