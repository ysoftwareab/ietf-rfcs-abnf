

                   Definitions of Supplemental Managed Objects
                                for ATM Management

                                  September 1995                          |



                                Faye Ly  (editor)
                         BayNetworks Communications, Inc.
                               faye@Baynetworks.COM


                              Michael Noto (editor)
                           Bell Communications Research
                               noto@cc.bellcore.com


                              Andrew Smith  (editor)
                         BayNetworks Communications, Inc.
                              asmith@Baynetworks.COM


                               Kaj Tesink  (editor)
                           Bell Communications Research
                               kaj@cc.bellcore.com






          1.  Status of this Memo

          This document is an Internet Draft.  Internet Drafts are
          working documents of the Internet Engineering Task Force
          (IETF), its Areas, and its Working Groups.  Note that other
          groups may also distribute working documents as Internet
          Drafts.

          Internet Drafts are valid for a maximum of six months and may
          be updated, replaced, or obsoleted by other documents at any
          time.  It is inappropriate to use Internet Drafts as reference
          material or to cite them other than as a "work in progress".













          draft        Supplemental ATM Management ObjectsSeptember 1995


          2.  Introduction

          This memo defines an experimental portion of the Management
          Information Base (MIB) for use with network management
          protocols in the Internet community.  In particular, it
          describes objects used for managing ATM-based interfaces,
          devices, networks and services in addition to those defined in
          the ATM MIB [1], to provide additional support for the
          management of:
               - ATM Switched Virtual Connections (SVCs)
               - ATM Permanent Virtual Connections (PVCs)


          This memo specifies a MIB module in a manner that is both
          compliant to the SNMPv2 SMI, and semantically identical to the
          peer SNMPv1 definitions.

          This memo does not specify a standard for the Internet
          community.


          3.  The SNMPv2 Network Management Framework

          The SNMPv2 Network Management Framework consists of four major
          components.  They are:

          0    RFC 1442 [2] which defines the SMI, the mechanisms used
               for describing and naming objects for the purpose of
               management.

          0    STD 17, RFC 1213 [3] defines MIB-II, the core set of
               managed objects for the Internet suite of protocols.

          0    RFC 1445 [4] which defines the administrative and other
               architectural aspects of the framework.

          0    RFC 1448 [5] which defines the protocol used for network
               access to managed objects.

          The Framework permits new objects to be defined for the
          purpose of experimentation and evaluation.









          Expires XX                                            [Page 2]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          4.  Object Definitions

          Managed objects are accessed via a virtual information store,
          termed the Management Information Base or MIB.  Objects in the
          MIB are defined using the subset of Abstract Syntax Notation
          One (ASN.1) defined in the SMI.  In particular, each object
          type is named by an OBJECT IDENTIFIER, an administratively
          assigned name.  The object type together with an object
          instance serves to uniquely identify a specific instantiation
          of the object.  For human convenience, we often use a textual
          string, termed the descriptor, to also refer to the object
          type.


          5.  Overview

          The purpose of this memo is to provide additional
          capabilities, not found in the ATM MIB [1], which are needed
          to manage ATM interfaces.  This memo addresses the following
          areas:
               - ATM Switch/Service/Host Support                          |
               - ATM Switch/Service Support                               |
               - ATM Host Support
               - ATM Testing Support                                      +



          5.1.  Background

          In addition to the MIB module defined in this memo, other MIB
          modules are necessary to manage ATM interfaces, links and
          cross-connects.  Examples include MIB II for general system
          and interface management (RFC 1213 and RFC 1573), the DS3 or
          SONET MIBs for management of SONET and DS3 physical
          interfaces, and, as appropriate, MIB modules for applications
          that make use of ATM, such as SMDS [15] and LAN Emulation
          [14].  These MIB modules are outside the scope of this
          specification.

          This MIB module also requires the use of the ATM MIB module
          defined in [1].

          ATM Endpoint applications such as ATM LAN Emulation or
          Classical IP-over-ATM Clients and Servers use ATM to establish
          SVC/PVC connections for exchanging control and data





          Expires XX                                            [Page 3]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          information. The agents of these ATM applications must provide
          the network manager with information on the SVC/PVCs in use
          and which applications are using them.  The information can be
          made generic so as to apply to all ATM applications.  This
          memo proposes extensions to the ATM MIB [1] in order to
          support this.

          The current specification of this supplemental ATM MIB is
          based on SNMPv2 SMI.                                            |

          5.2.  Supported Functions

          The managed ATM objects are arranged into the following
          groups:

          I. ATM Switch/Service/Host Support:                             |
                (1) ATM Switch/Service/Host Group                         |
                      atmVclStatTable
                      atmVplStatTable
                      atmVplLogicalPortTable                              |
                (2) ATM Switch/Service/Host SVC Group                     |
                      atmSigTable (partially)                             |
          II. ATM Switch/Service Support:                                 |
                (3) ATM Switch/Service Group                              |
                      atmIfAdminAddrTable
                (4) ATM Switch/Service SVC Group                          |
                      atmSvcVpCrossConnectTable                           |
                      atmSvcVcCrossConnectTable                           |
                      atmSigTable (partially)                             |
          III. ATM Host Support:
                (5) ATM Host Group
                      atmVclAddrBindTable                                 |
                      atmAddrVclTable
                (6) ATM Host Signalling Group
                      atmSigDescrParamTable
          IV. ATM Support:                                                |
                (7) ATM Miscellaneous Group                               |
                      atmVplGenTable                                      |
                      atmVclGenTable                                      |
          V. ATM Testing Support:                                         |
                (8) ATM Loopback Testing Group                            |
                      atmLoopbackTestTypes                                |








          Expires XX                                            [Page 4]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          5.2.1.  ATM Switch/Service/Host Support

          5.2.1.1.  ATM Switch/Service/Host Group

          5.2.1.1.1.  ATM VCL Statistics Table

          The atmVclStatTable contains counters such as the cells
          received and cells transmitted per VCL (SVC or PVC). These      |
          counters are defined as 32 bit integers.  Systems supporting    |
          VCC counters must implement these counters.                     |

          5.2.1.1.2.  ATM VPL Statistics Table

          The atmVplStatTable contains counters such as the cells
          received and cells transmitted per VPL (SVC or PVC). These      |
          counters are defined as 32 bit integers.  Systems supporting    |
          VPC counters must implement these counters.                     |

          5.2.1.1.3.  ATM Logical Port Interface

          The interface type "ATM Logical Port" is defined to allow the   |
          representation of a VP Tunnel, which is a VPL used as a trunk   |
          connection (most likely between devices that are not            |
          physically adjacent), providing for multiplexing and            |
          demultiplexing of VCs on the VP.  Figure 1 illustrates such a   |
          VP Tunnel.                                                      |

          Note: the "ATM Logical Port" interface is more of a logical     |
          port, compared with an interface of type "ATM" which is more    |
          of a physical port that provides for the transport of many VP   |
          and VC connections between adjacent devices.                    |

                               <------VP Tunnel------>                    |
                         ATM Switch A             ATM Switch B            |
                        ------------             -----------              |
                        |ATM       |_____________|ATM       |             |
                        |X-Connect |      .      |X-Connect |             |
                 VCL1   |Point     | VPL1 . VPL2 |Point     |  VCL4       |
              O---------|----X-----|----- . -----|----X-----|-----O       |
                        |    X-----|----- . -----|----X     |             |
                        |    |     |_____________|    |     |             |
                        ------------             ------------             |
                             | VCL2                   | VCL3              |
                             O                        O                   |






          Expires XX                                            [Page 5]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                           Figure 1: Virtual Path Tunnel                  |


          In Figure 1, a VP tunnel (denoted as VPL1 by Switch A, and as   |
          VPL2 by Switch B) is used to connect VCL1 with VCL4 and VCL2    |
          with VCL3. Figure 1 shows only one VP tunnel, but there can be  |
          multiple VP tunnels over the same physical interface.           |

          A particularly useful VP tunnel scenario is tunneling across a  |
          public network that does not support signalling. In Figure 1    |
          above, assume Switches A and B are private switches that        |
          signal over the VP to set up connections transparently through  |
          the public network. The public network would just transport a   |
          PVC VP between the two switches.                                |

          Because the VP Tunnel constitutes an interface between two ATM  +
          devices that are not necessarily physically adjacent, most of   +
          the management information pertaining to the interface may      +
          differ for the tunnel, including:                               +
                  - active VPI/VCI fields (the tunnel may be a subset     +
                    of the parent interface).                             +
                  - maximum number of VCCs                                +
                  - configured VCCs                                       +
                  - ILMI VPI/VCI values                                   +
                  - ATM address type                                      +
                  - ATM administrative address                            +
                  - received/transmitted cells.                           +


          For details on how to use the ATM Logical Port interface and    +
          the ATM Logical Port Table see Section 5.2.1.1.3.1 below.       +


          5.2.1.1.3.1.  ATM Logical Port Interface Table                  +

          The ATM Logical Port Interface Table is used only by devices    +
          supporting VP tunnels. To create an Atm Logical Port interface  +
          via SNMP:                                                       +
                  - Create a VPL (e.g., VPI=a on an existing interface    +
                    which has ifIndex=x).                                 +

                  - Set the augmenting object atmVplLogicalPortDef        +
                    with value isLogicalIf.  A new row in the             +
                    ifTable is then created, with ifIndex=y, to           +
                    represent the ATM Logical Port interface (e.g.,       +





          Expires XX                                            [Page 6]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                    VPL tunnel). Then set the augmenting object           +
                    atmVplLogicalPortIndex = y to represent the           +
                    ifIndex value of the ATM Logical Port interface.      +

                  - The ifEntry values are set for the ATM Logical        +
                    Port interface (ifIndex=y) as discussed in RFC        +
                    1695, with the following exceptions:                  +
                          * ifType - a new enumerated value added to      +
                            IANAifType, specifying an "ATM Logical        +
                            Port" interface.                              +
                          * ifSpeed - The total bandwidth in bits per     +
                            second for use by the ATM layer. Computed     +
                            from the traffic descriptor for the VPL.      +
                          * ifOperStatus - determined hierarchically,     +
                            depending on the state of the physical        +
                            atm-cell layer interface beneath it,          +
                            and the ILMI on the VP.                       +
                          * ifInOctets, ifOutOctets - support of          +
                            these objects is not mandatory for ATM        +
                            Logical Port interfaces.                      +
                          * ifInErrors - always zero, HEC errors are      +
                            specified for the atm cell-layer interface    +
                            beneath it.                                   +
                          * ifInUnknownProtos - always zero, errors       +
                            are specified for the atm cell-layer          +
                            interface beneath it.                         +

                  - The atmInterfaceConfEntry values are set as           +
                    discussed in RFC 1695, with the following             +
                    exceptions:                                           +
                          * atmInterfaceMaxVpcs - 0.                      +
                          * atmInterfaceConfVpcs - 0.                     +
                          * atmInterfaceIlmiVpi - VPI of the VP           +
                            tunnel.                                       +

                  - An entry is created in the ifStackTable, with         +
                    values: ifStackHigherLayer=y, ifStackLowerLayer=x.    +

                  - VCLs defined on the VP tunnel are indexed by          +
                    ifIndex=y,VPI=a,VCI.                                  +










          Expires XX                                            [Page 7]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          5.2.1.2.  ATM Switch/Service/Host SVC Group                     +

          All objects in this Group are listed in the atmSigTable. This   +
          table also contains objects of the ATM Switch/Service SVC       +
          Group.                                                          +

          5.2.1.2.1.  ATM Interface Signalling Configuration              +

          This group contains information on the configuration of local   +
          ATM interfaces on an ATM device required to support SVCs in     +
          addition to those defined in the atmInterfaceConfTable of the   +
          ATM MIB [1] and those defined in RFC1573 [6].  This group       +
          includes the signalling entity role, signalling suite, and      +
          signalling type.  The signalling entity role object defines     +
          whether a signalling entity has the role of user, network, or   +
          a symmetric entity.                                             +

          The signalling suite determines which ATM protocol suite is     +
          being used for signalling:  dss2, atmf, and bici.  In addition  +
          to the protocol suite, the signalling type defines the type of  +
          signalling supported at the local ATM interface (e.g., ITU-T    +
          DSS2 signalling).  The signalling types supported by this MIB   +
          include: ITU-T DSS2 [11, 17, 18], ATM Forum's UNI 3.0 [9], ATM  +
          Forum's UNI 3.1 [10], ATM Forum's UNI 4.0 [16], ATM Forum's     +
          IISP [19], ATM Forum's P-NNI [12], and ATM Forum's B-ICI [20].  +

          5.2.1.2.2.  SSCOP

          This group contains information on the ATM SSCOP signalling
          layer and must be supported by signalling entities.

          5.2.1.2.3.  Unsupported Service Failures

          This group contains information on the setup failures that
          occur when setting up an ATM SVC.  Maintaining counters for
          each individual signalling cause codes would result in a large
          number of counters.  Instead, this memo uses an approach that
          lumps events into three categories.  Three counters are used
          to monitor connection failures occurring due to: 1)
          unavailable route, 2)  unavailable switch or network
          resources, or 3) the called party.  The counters are defined
          as follows:

                  1. Route Unavailable Counter






          Expires XX                                            [Page 8]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                     This counter maintains the number of
                     calls cleared because there was no
                     route unavailable to the destination.

                  2. Resources Unavailable Counter

                     This counter maintains the number of cleared
                     calls due to switch or network resources being
                     unavailable.

                  3. Called Party Counter

                     This counter maintains the number of cleared
                     calls caused by the called party (e.g.,
                     called party rejects the call).


          5.2.1.2.4.  ATM Signalling Layer Protocol Errors

          This group contains information on the Protocol Errors that
          occur at the signalling layer when establishing an ATM SVC.

          5.2.1.2.5.  UNI Signalling Sub-layer Statistics

          Configuration information is needed per signalling entity in
          order to manage attributes of all SVCs set up by that entity.
          Since signalling entities are not always bound one to one to
          ATM UNIs, a more flexible indexing mechanism would be to allow
          multiple signalling entities on a single UNI or vice versa -
          using ifIndex and VPI would provide sufficient flexibility
          here.

          Statistics per VCL are needed in order to find out the usage
          of VCL resources by ATM applications.  Additionally, to
          monitor the usage and health of a UNI signalling entity, some
          counters are needed per UNI signalling entity.  Two new
          objects are added to count the number of connections
          established.  One for incoming SVCs and one for outgoing SVCs.

          5.2.1.2.6.  Indexing of the ATM Signalling Table

          The atmSigTable (formerly the atmSvcTable) is indexed only by   |
          the ifIndex, which can either be of type ATM or type ATM        |
          Logical Port.  The procedures for using an ifIndex of type ATM  |
          are described in RFC1695.  Procedures for using an ifIndex of   |





          Expires XX                                            [Page 9]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          type "ATM Logical Port" are described below.  For a             |
          description of the ATM Logical Port Interface and the use of    |
          the ATM Logical Port Interface Table please refer to Section    |
          5.2.1.1.3 "ATM Logical Port Interface".                         |

          The "ATM Logical Port" interface type is used to represent the  |
          interface of a VP tunnel, and each such interface may have      |
          zero or one Signalling VCLs.  For a switch, this would include  |
          external and internal (virtual proprietary) interfaces. If      |
          such an interface has a signalling VCL, the atmSigTable row     |
          associated with that VCL is indexed by the interface ifIndex.   |


          The Figure 2 illustrates the association of ATM Signalling      +
          Table rows, assuming all external ports, VP tunnels, and the    +
          switch itself signal for SVC setup:                             +

                           ____________________________                   +
                           | Switch                   |                   +
                           |     ==============       |                   +
                           |     | AAL5       |       |                   +
                           |     |Applications|       |                   +
                           |     ==============       |                   +
                           |     |    AAL5    |       |                   +
                           |     |   Entity   |       |                   +
                           |     ==============       |                   +
                           |           |              |                   +
                           |         -----Prop. Virtual Interface.        +
                           |           |     1 row(atmSigEntry)           +
                           |     ==============       |                   +
                           |     |   ATM      |       |                   +
                           |     |  Entity    |       |                   +
                           |     ==============       |                   +
                           |_____|__|__|__|__|________|                   +
                                 |  |  |  |  |                            +
                                ---------------- ATM UNI/NNIs             +
                                 |  |  |  |  |                            +
                                 |  |  |  |  | 1 row(atmSigEntry) per     +
                                 v  v  v  v  v  UNI/NNI/VP tunnel         +

                  Figure 2: Model of an ATM Switch Illustrating           +
                            Association of the ATM Signalling Table       +








          Expires XX                                           [Page 10]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          Figure 3 illustrates the Signalling channels and their          +
          associated interfaces for a switch. The cross-connecting of     +
          the Signalling channels is done to allow the reading of AAL5    +
          errors.                                                         +




                                       ATM Switch                         +
                     -------------------------------------------          +
                     |        o VCL4     o VCL5       o VCL6   |          +
                     |        |          |            |        |          +
                     |  -------------------------------------  |          +
                     |  | AAL5 Interface                IF5 |  |          +
                     |  |-----------------------------------|  |          +
                     |  | Proprietary Virtual Interface IF4 |  |          +
                     |  -------------------------------------  |          +
                     |        |          |            |        |          +
                     |--+     |          |            |     +--|          +
              VPI=0  |  |     |          |            |     |  |VPI=0     +
              VCL1   |  |     |          |            |     |  |VCL3      +
           o---------|--|-----X          |            X-----|--|-----o    +
           **********|**|**+             |                  |  |          +
              VPI=44 |  |  | IF2         |                  |  |          +
              VCL2   |  |  |             |                  |  |          +
           o---------|--|----------------X                  |  |          +
                     |  |  |                                |  |          +
           **********|**|**+                                |  |          +
                     |  |                                   |  |          +
                     |  | IF1                           IF3 |  |          +
                     |--+                                   +--|          +
                     |                                         |          +
                     -------------------------------------------          +
                                            X = ATM Cross-Connect         +

                 Figure 3: Model of ATM Switch's Signalling Channels      +
                           and Associated Interfaces                      +




          In Figure 3 there are two physical interfaces, with ATM-layers  +
          depicted as IF1 and IF3. IF2 is the "ATM Logical Port"          +
          interface provided by the VP tunnel with VPI=44 on the          +
          physical interface. IF4 and IF5 are the ATM and AAL5            +





          Expires XX                                           [Page 11]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          (respectively) internal sub-layer interfaces for VCLs           +
          terminating at the switch. It is assumed in this example that   +
          the ifIndex value for IF1 is 1, IF2 is 2, etc.                  +

          In the case depicted:                                           +

              - On IF1, the VCL1 Signalling channel can be used to set    +
                up connections over the interface address space with      +
                the exception of the VP with VPI=44. An entry exists      +
                in the atmVplTable with index ifIndex=1,atmVplVpi=44,     +
                and in the augmenting atmVplLogIfConfTable,               +
                atmVplLogIfDef=isLogicalIf(2), atmVplLogIfIndex=2.        +

              - On IF2, the VCL2 Signalling channel can set up VCs        +
                over the ATM Logical Port interface's address space       +
                (VPI=44, VCI range dictated by configuration).            +

              - On IF3, the VCL3 Signalling channel can be used to set    +
                up VCs over the entire interface address space.           +


          The only VCLs depicted in the Figure 3 are those used for       +
          Signalling. External interface VCLs are cross-connected to      +
          VCLs at the proprietary interface. The indices for the VCLs     +
          are:                                                            +
                  ifIndex, atmVclVpi, atmVclVci                           +
                  =============================                           +
          VCL1       1         0          5                               +
          VCL2       2        44          5                               +
          VCL3       3         0          5                               +
          VCL4       4         p1         c1                              +
          VCL5       4         p2         c2                              +
          VCL6       4         p3         c3                              +


          The p(i) and c(j) values for VPI/VCI on the VCLs on the         +
          proprietary interface indicate that these values are chosen by  +
          the switch software (versus the values dictated on the          +
          external interfaces).                                           +

          The atmSigTable is indexed only by ifIndex. Rows would          +
          certainly exist in the table for IF1, IF2, and IF3. The         +
          information in these rows would pertain to the Signalling       +
          protocols operating over VCL1, VCL2, and VCL3.                  +






          Expires XX                                           [Page 12]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          If the switch itself can originate and/or terminate SVCs,       +
          another row would exist for IF4. Assuming that the interface    +
          that the applications on a switch use to establish SVCs is a    +
          virtual interface, the IF4 row would be a degenerate row, in    +
          that some of the columns would apply and others may not:        +

            Applicable:                                                   +
              atmSigType                                                  +
              atmSigUnavailRoutes                                         +
              atmSigUnavailResrcs                                         +
              atmSigSigInEstabls                                          +
              atmSigSigOutEstabls                                         +
              atmSigSupportClgPtyNumDel                                   +
              atmSigSupportClgPtySubAddr                                  +
              atmSigSupportCldPtySubAddr                                  +
              atmSigSupportHiLyrInfo                                      +
              atmSigSupportLoLyrInfo                                      +
              atmSigSupportRepeatInd                                      +
              atmSigSupportAALInfo                                        +
              atmSigSupportPrefCarrier                                    +

            Inapplicable:                                                 +
              atmSigSSCOPConEvents                                        +
              atmSigSSCOPErrdPdus                                         +
              atmSigSigMsgErrors                                          +
              atmSigSigRestarts                                           +

            Maybe:                                                        +
              atmSigSigEntityRole                                         +
              atmSigCldPrtyProblems                                       +
              atmSigSigTimerExpireds.                                     +



          5.2.2.  ATM Switch/Service Support                              +

          5.2.2.1.  ATM Switch/Service Group                              +

          5.2.2.1.1.  ATM Interface Administrative Address Table

          This group is only supported by switches or networks for
          interfaces that have multiple associated addresses.  This
          group contains an ATM Interface Administrative Address Table
          (atmIfAdminAddrTable) which lists valid addresses for calls to
          and from a given interface.  One of these numbers shall be





          Expires XX                                           [Page 13]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          specified as the "default" number.

          5.2.2.2.  ATM Switch/Service SVC Group

          All objects in this Group are listed in the atmSigTable. This   |
          table also contains objects of the ATM Switch/Service/Host SVC  |
          Group.                                                          |

          5.2.2.2.1.  ATM UNI SVC Information Element Support

          A number of Information Elements may or may not be supported    |
          by ATM switches or ATM Service. Hence, for trouble isolation    |
          it is important to keep track which particular Information      |
          Elements are supported.  The corresponding group of objects     |
          must be supported by switches or networks supporting SVCs, and  |
          indicate whether the following Information Elements are         |
          enabled/disabled:                                               |

          1)   Calling party number

          2)   Calling party subaddress

          3)   Called party subaddress

          4)   Broadband high layer information

          5)   Broadband low layer information

          6)   Broadband repeat indicator

          7)   AAL parameters

          The last parameter, Preferred Carrier Pre-Subscription,
          identifies the carrier to which intercarrier calls originated
          from this interface are routed when transit network selection
          information is not provided by the calling party.

          5.2.3.  ATM Host Support

          5.2.3.1.  ATM Host Group

          5.2.3.1.1.  VCL Extension Table

          There can be two types of VCLs used by ATM applications: a
          Permanent VC or a Switched VC.  The ATM MIB [1] provides





          Expires XX                                           [Page 14]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          general connection management (atmVclTable).  This memo
          contains the atmVclExtTable, an extension to the atmVclTable,
          which supports both SVC/PVC monitoring and SVC configuration
          capabilities.

          The object Connection Type specifies the type of the VCL as
          either a PVC, an incoming SVC, or an outgoing SVC.  When
          creating an SVC, the agent can represent the VCL's attributes
          by selecting entries from two tables: the ATM Traffic
          Descriptor Parameter Table defined in the ATM MIB [1] and the
          ATM Signalling Descriptor Parameter Table defined in this
          memo.  For SVCs, the ATM VCL Signalling Descriptor Index
          object is used to point to an entry in the ATM Signalling
          Descriptor Parameter Table.

          5.2.3.1.2.  ATM VPI/VCI to Address Mapping Table

          In the atmVclAddressTable, the objects ATM Local Address
          (atmLocalAddr) and ATM Remote Address (atmRemoteAddr)
          represent the two endpoint addresses of a VCL.  ATM Local
          Address identifies the local endpoint of the VCL represented
          by this agent.  While, the ATM Remote address represents the
          address of the ATM application at the other end of the VCL.
          The atmLocalAddrIndex allows an agent to uniquely identify a
          single entry under a given Local ATM Address, esp. when there
          are multiple VCLs.  The atmRemoteAddrIndex is used in a
          similar manner.

          5.2.3.1.3.  ATM Address to VPI/VCI Mapping Table

          Some ATM applications (e.g. LAN Emulation) use ATM endpoint
          addresses even over PVCs.  In order to trace SVC/PVCs between
          such ATM applications, it is important to be able to monitor
          VCLs (both SVCs and PVCs) indexed by their endpoint ATM
          addresses.  The atmAddrVclTable contains all VCCs currently
          active and is indexed by the remote ATM address. It is the
          reverse of the atmVclAddressTable.

          5.2.3.2.  ATM Host SVC Group

          5.2.3.2.1.  Signalling Descriptor Parameter Table

          This table extends the ATM VCL table of the ATM MIB [1] to
          include all other necessary signalling information as
          specified in both ATM Forum UNI Specifications [9] and [10].





          Expires XX                                           [Page 15]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          A user can create an entry with all signalling parameters and
          later use that entry to specify the signalling characteristics
          of SVCs.

          Signalling attributes can be grouped into following
          categories:

          1)   ATM Adaptation Layer Parameters

          Information in this group are captured in the ATM Signalling
          Descriptor Parameter Table defined in this memo.  Please refer
          to section 5.4.5.5 of [9] and [10].

          2)   Broadband Bearer Capability

          Information in this group are captured by the ATM Signalling
          Descriptor Parameter Table defined in this memo.  Please refer
          to section 5.4.5.7 of [9] and [10].

          3)   Broadband High Layer Information

          Information in this group are captured by the ATM Signalling
          Descriptor Parameter Table defined in this memo.  Please refer
          to section 5.4.5.8 of [9] and [10].

          4)   Broadband Low Layer Information

          Information in this group are captured by the ATM Signalling
          Descriptor Parameter Table defined in this memo.  Please refer
          to section 5.4.5.9 of [9] and [10].

          5.2.4.  ATM Testing Support

          5.2.4.1.  ATM Loopback Testing Group

          The loopback test provides the ability to send out a loopback   |
          OAM cell to verify the existence of connectivity for a          |
          particular connection.  Loopback tests can be performed on      |
          either an entire connection (i.e., an end-to-end test), a       |
          segment of the connection (i.e., a segment test), a portion of  |
          a segment (i.e., a loopback location identifier test), or the   |
          network portion of a connection (i.e., a service internal       |
          test).                                                          |







          Expires XX                                           [Page 16]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          The loopback test makes use of the Interface Test Table         |
          defined in RFC 1573.  For a given interface, a loopback test    |
          can be invoked by obtaining ownership of a test and then by     |
          setting the value of 'ifTestType' equal to one of the ATM       |
          Loopback Test Types defined in Section (8). See procedures in   |
          RFC 1573 for using the Interface Test Table.  After invoking a  |
          loopback test, the object 'ifTestResult' can be read to         |
          determine the outcome of the loopback test (e.g., success(2)    |
          if the loopback cell made it back to the originator of the      |
          test or failed(7) if the loopback cell did not make it back).   |

          This group contains the following types of loopback tests:      |

               - End-to-end Loopback Test                                 |
               - Segment Loopback Test                                    |
               - Loopback Test Using Loopback Location Identifier         |
               - Network Loopback Test.                                   |


          1) End-to-end Loopback Test                                     |

          The end-to-end loopback (LB) is self-explanatory.  For a VP     |
          test, the cell is sent on the given VP, via VCI=4 specified in  |
          [10].  For a VC test, the LB cell is sent on the VC under       |
          test, with the PTI (Payload Type Indicator) set to 5 as         |
          specified in [10].  Figure 4 illustrates the end-to-end         |
          loopback test.                                                  |

            ____      _______      _______      _______      ____         |
           |Host|    |       |    |       |    |       |    |Host|        |
           |____|----|SwitchA|----|SwitchB|----|SwitchC|----|____|        |
                     |_______|    |_______|    |_______|                  |

              |<--------------------------------------------->|  Test     |
                                                                 Path     |

                     Figure 4: End-to-end Loopback Test                   |


          See Section (8) for more details on how to use the End-to-end   |
          Loopback Test.                                                  |


          2) Segment Loopback Test                                        +






          Expires XX                                           [Page 17]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          The segment LB test is explained in ITU-T I.610[21]. For a VP   +
          segment test, the LB cell is sent on the VP under test via      +
          VCI=3 as specified in [10], and the Loopback Location ID field  +
          is set to all 1's.  For a VC segment test, the LB cell is sent  +
          on the VC under test, with the PTI set to 4 as specified in     +
          [10], and the Loopback Location ID field is set to all 1's.     +

          This test involves a LB cell being inserted at a pre-defined    +
          segment end-point, and looped back at the corresponding         +
          segment end-point encountered.  The pair of segment end-points  +
          define a segment (which is used for the segment loopback        +
          test).  A VP/VC connection can have multiple segments, but      +
          multiple segments cannot overlap.                               +

          A UNI interface is by definition defined as a segment end-      +
          point (hence a UNI would be considered a segment).  A segment   +
          can also define:                                                +
               - a B-ICI                                                  +
               - a public carrier's 'piece' of the connection             +
               - a private network's 'piece' of the connection.           +


          In order to support this functionality, the VP/VC link          +
          termination needs to be able to be defined as a segment.  This  +
          can be done using either the atmVplSegmentEndPoint or           +
          atmVclSegmentEndPoint object depending on whether it is for a   +
          VPC or VCC.  A segment loopback test is illustrated in Figure   +
          5.                                                              +

            ____      _______      _______      _______      ____         +
           |Host|    |       |    |       |    |       |    |Host|        +
           |____|----|SwitchA|----|SwitchB|----|SwitchC|----|____|        +
                     |_______|    |_______|    |_______|                  +

                         |<----------------------->|  Segment             +

                       Figure 5: Segment Loopback Test                    +

          Section (8) describes the use of the ATM Segment Loopback       +
          Tests.                                                          +


          3) Loopback Test Using Loopback Location Identifier             +







          Expires XX                                           [Page 18]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          This loopback test is a special type of 2) where the Loopback   +
          Location ID field is set to a value that corresponds to a       +
          specific node in a given network (Note that the format of this  +
          field is not standardized, that is, the value is significant    +
          only within an administrative domain).  In this case, the       +
          device initiating the LB test inserts the appropriate Loop      +
          Back Location ID.  When the LB cell reaches the corresponding   +
          device, that device recognizes the Loopback Location ID as its  +
          own, and loops it back.  This test is useful for performing     +
          fault sectionalization without having to provision segment      +
          end-points.  An additional object, the loopbackLocationID, is   +
          defined to determine the loopback point.  Figure 6 shows a      +
          loopback test using a location identifier. Note that the        +
          loopback test using location identifier can be used to perform  +
          a loopback test over a portion of a defined segment.  See       +
          Figure 6.                                                       +

            ____      _______      _______      _______      ____         +
           |Host|    |       |    |       |    |       |    |Host|        +
           |____|----|SwitchA|----|SwitchB|----|SwitchC|----|____|        +
                     |_______|    |_______|    |_______|                  +

                         |<---------->| Portion of Segment that           +
                                         Loopback test is                 +
                                         performed on                     +

                         |<----------------------->|  Segment             +

              Figure 6: Loopback Test Using Location Identifier           +

          See Section (8) for more details.                               +


          4) Network Loopback Test                                        +

          This is a loopback test that the manager requests an agent in   +
          a network to perform over the internal portion of a designated  +
          connection.  The Network then initiates the internal network    +
          loopback test by inserting an OAM loopback cell at one of the   +
          end-points of the internal network portion of the connection.   +
          When the loopback cell reaches the other end-point of the       +
          internal Network , the cell is looped back.  This test is       +
          useful for verifying connectivity through a particular          +
          network.  Figure 7 illustrates the Network loopback test.       +






          Expires XX                                           [Page 19]





          draft        Supplemental ATM Management ObjectsSeptember 1995


            ____      _______      _______      _______      ____         +
           |Host|    |Netwk 1|    |Netwk 1|    |Netwk 1|    |Host|        +
           |____|----|SwitchA|----|SwitchB|----|SwitchC|----|____|        +
                     |_______|    |_______|    |_______|                  +

                         |<----------------------->| LB Test Path         +
                                                      thru Network 1      +

                       Figure 7: Network Loopback Test                    +

          See Section (8) for more details.                               +



          6.  Valid Address Sets / Default Address                        +

          A given ATM UNI interface may have an Address,                  +
          "ifPhysAddress", to identify the interface.  In addition, a     +
          given ATM UNI  interface may have several other valid           +
          addresses which can be used to originate and receive calls.     +
          The valid addresses that are used to receive calls are listed   +
          in the "ifRcvAddrTable" defined in RFC1573 [6].  ATM            +
          interfaces of switches and networks do not use the              +
          ifRcvAddrTable.  Valid addresses to be used by a switch or      +
          network are listed in the ATM Interface Administrative Address  +
          Table.  The ATM Interface Administrative Address Table is not   +
          supported by hosts.                                             +


          7.  Configuration of VPLs, VCLs, and Cross-Connects             +

          The ATM Managed Objects needed to support the configuration of  +
          VPLs, VCLs, and Cross-Connects are defined in the ATM MIB [1].  +

















          Expires XX                                           [Page 20]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          8.  Definitions                                                 +

               ATM2-MIB DEFINITIONS ::= BEGIN                             +

               IMPORTS                                                    +
                  MODULE-IDENTITY, OBJECT-TYPE, OBJECT-IDENTITY,          |
                  experimental, Counter32, Integer32                      |
                      FROM SNMPv2-SMI
                  TEXTUAL-CONVENTION, DisplayString,                      |
                  RowStatus, TimeStamp                                    |
                      FROM SNMPv2-TC
                  MODULE-COMPLIANCE, OBJECT-GROUP
                      FROM SNMPv2-CONF
                  atmMIBObjects, IfIndex, atmVclEntry,
                  atmVclVpi, atmVclVci, atmVplEntry, atmVplVpi
                      FROM ATM-MIB
                  ifIndex                                                 -
                      FROM RFC1213-MIB;


               atm2MIB MODULE-IDENTITY
                    LAST-UPDATED "9505011200Z"
                    ORGANIZATION "IETF AToMMIB Working Group"
                    CONTACT-INFO
                      "          Faye Ly
                        Postal:  Bay Networks Inc.
                                 4401 Great America Parkway
                                 Santa Clara, CA 95052
                                 US
                        Tel:     +1 415 969 6728 ext.158                  |
                        Fax:     +1 408 988 5525
                        E-Mail:  faye@Baynetworks.COM

                                 Michael Noto
                        Postal:  Bell Communications Research
                                 331 Newman Springs Road
                                 Red Bank, NJ 07701
                                 US
                        Tel:     +1 908 758 5104
                        Fax:     +1 908 758 4177
                        E-mail:  noto@cc.bellcore.com

                                 Andrew Smith
                        Postal:  Bay Networks Inc.
                                 4401 Great America Parkway





          Expires XX                                           [Page 21]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                                 Santa Clara, CA 95052
                                 US
                        Tel:     +1 408 764 1574
                        Fax:     +1 408 988 5525
                        E-Mail:  asmith@Baynetworks.COM

                                 Kaj Tesink
                        Postal:  Bell Communications Research
                                 331 Newman Springs Road
                                 Red Bank, NJ 07701
                                 US
                        Tel:     +1 908 758 5254
                        Fax:     +1 908 758 4177
                        E-mail:  kaj@cc.bellcore.com"
                    DESCRIPTION
                     "This MIB Module is a supplement to the
                     ATM-MIB [1].  This MIB provides
                     supplemental information from both a
                     switch/network perspective and an ATM
                     host/application prospective."
                    ::= { experimental XX }

               atm2MIBObjects  OBJECT IDENTIFIER ::= {atm2MIB 1}

               -- ********  NOTE TO THE RFC EDITOR  **************
               -- In case this module is put on the standards track
               --  replace the following:
               -- "atm2MIB MODULE-IDENTITY ::= {experimental XX}" with
               -- "atm2MIB MODULE-IDENTITY ::= {atmMIBObjects 13}"
               -- and include atmMIBObjects in the IMPORT clause.


               -- This ATM2-MIB Module consists of the following groups:
               --   ATM Switch/Service/Host Support:                      |
               --      (1) ATM Switch/Service/Host Group                  |
               --            atmVclStatTable
               --            atmVplStatTable
               --            atmVplLogicalPortTable                       |
               --      (2) ATM Switch/Service/Host SVC Group              |
               --            atmSigTable (partially)                      |
               --   ATM Switch/Service Support:                           |
               --      (3) ATM Switch/Service Group                       |
               --            atmIfAdminAddrTable
               --      (4) ATM Switch/Service SVC Group                   |
               --            atmSvcVpCrossConnectTable                    |





          Expires XX                                           [Page 22]





          draft        Supplemental ATM Management ObjectsSeptember 1995


               --            atmSvcVcCrossConnectTable                    |
               --            atmSigTable (partially)                      |
               --   ATM Host Support:
               --      (5) ATM Host Group
               --            atmVclAddrBindTable                          |
               --            atmAddrVclTable
               --      (6) ATM Host Signalling Group
               --            atmSigDescrParamTable
               --   ATM Support:                                          |
               --      (7) ATM Miscellaneous Group                        |
               --            atmVplGenTable                               |
               --            atmVclGenTable                               |
               --   ATM Testing Support:                                  |
               --      (8) ATM Loopback Testing Group                     |
               --            atmLoopbackTestTypes                         |



               -- Textual Conventions                                     +


                   InterfaceIndex ::= TEXTUAL-CONVENTION                  +
                       STATUS  current                                    +
                       DESCRIPTION                                        +
                           "The value of this object identifies the       +
                           atmLogicalPort interface for which the entry   +
                           contains management information. The value of  +
                           this object for a particular interface has     +
                           the same value as the ifIndex object, defined  +
                           in RFC 1213 [2], for the same atmLogicalPort   +
                           interface."                                    +
                      SYNTAX  Integer32                                   +


                  AtmAddr ::= TEXTUAL-CONVENTION                          +
                      STATUS  current                                     +
                      DESCRIPTION                                         +
                          "The ATM address used by the network entity.    +
                          The address types are: no address (0 octets),   +
                          E.164 (8 octets), network prefix (13 octets),   +
                          and NSAP (20 octets).  Note: The E.164 address  +
                          is encoded in BCD format."                      +
                     SYNTAX    OCTET STRING (SIZE(0|8|13|20))             +







          Expires XX                                           [Page 23]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 AtmSigDescrParamIndex ::= TEXTUAL-CONVENTION             +
                     STATUS  current                                      +
                     DESCRIPTION                                          +
                         "The value of this object identifies a row in    +
                         the atmSigDescrParamTable. "                     +
                    SYNTAX  Integer32                                     +












































          Expires XX                                           [Page 24]





          draft        Supplemental ATM Management ObjectsSeptember 1995


            -- ****************************************************
            -- (1) ATM Switch/Service/Host Group                          |

            -- This group contains information for a Switch/Service/Host  |
            -- that implements ATM interfaces.  This group contains
            -- the following tables:                                      |
            -- 1. ATM VCL Statistics Table
            -- 2. ATM VPL Statistics Table
            -- 3. ATM Logical Port Configuration Table                    +

            atmSwtchServcHostGroup OBJECT IDENTIFIER ::= {                |
                                               atm2MIBObjects 1}

            -- 1. ATM VCL Statistics Table

                atmVclStatTable   OBJECT-TYPE
                    SYNTAX        SEQUENCE OF AtmVclStatEntry
                    MAX-ACCESS    not-accessible
                    STATUS        current
                    DESCRIPTION
                        "This table contains all statistic counters per
                        VCL.  It is used to monitor the usage of the VCL
                        in terms of incoming cells and outgoing cells."
                   ::= { atmSwtchServcHostGroup 1 }                       |

               atmVclStatEntry    OBJECT-TYPE
                   SYNTAX         AtmVclStatEntry
                   MAX-ACCESS     not-accessible
                   STATUS         current
                   DESCRIPTION
                       "Each entry in this table represents a VCL."
                  INDEX { ifIndex, atmVclVpi, atmVclVci }
                  ::= { atmVclStatTable 1 }

              AtmVclStatEntry ::=
                  SEQUENCE {
                      atmVclStatCellIns    Counter32,
                      atmVclStatCellOuts   Counter32
                      }

              atmVclStatCellIns OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION





          Expires XX                                           [Page 25]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                      "The number of cells received by this VCL."         |
                  ::= { atmVclStatEntry 1 }

              atmVclStatCellOuts OBJECT-TYPE
                  SYNTAX         Counter32
                  MAX-ACCESS     read-only
                  STATUS         current
                  DESCRIPTION
                      "The number of cells transmitted from this VCL."    |
                  ::= { atmVclStatEntry 2 }


          -- 2. ATM VPL Statistics Table

              atmVplStatTable   OBJECT-TYPE
                  SYNTAX        SEQUENCE OF AtmVplStatEntry
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "This table contains all statistic counters per
                      VPL.  It is used to monitor the usage of the VPL
                      in terms of incoming cells and outgoing cells."
                  ::= { atmSwtchServcHostGroup 2 }                        |

              atmVplStatEntry    OBJECT-TYPE
                  SYNTAX         AtmVplStatEntry
                  MAX-ACCESS     not-accessible
                  STATUS         current
                  DESCRIPTION
                      "Each entry in this table represents a VPL."
                  INDEX { ifIndex, atmVplVpi }
                  ::= { atmVplStatTable 1 }

              AtmVplStatEntry ::=
                  SEQUENCE {
                      atmVplStatCellIns    Counter32,
                      atmVplStatCellOuts   Counter32
                      }

              atmVplStatCellIns OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The number of cells received by this VPL."         |





          Expires XX                                           [Page 26]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                  ::= { atmVplStatEntry 1 }

              atmVplStatCellOuts OBJECT-TYPE
                  SYNTAX         Counter32
                  MAX-ACCESS     read-only
                  STATUS         current
                  DESCRIPTION
                      "The number of cells transmitted from this VPL."    |
                  ::= { atmVplStatEntry 2 }


          -- 3. ATM Logical Port Configuration Table                      +


              atmVplLogicalPortTable OBJECT-TYPE                          +
                  SYNTAX           SEQUENCE OF AtmVplLogicalPortEntry     +
                  MAX-ACCESS       not-accessible                         +
                  STATUS           current                                +
                  DESCRIPTION                                             +
                      "Indicates whether the VPL is an ATM Logical Port   +
                      interface."                                         +
                  ::= { atmSwtchServcHostGroup 3 }                        +


              atmVplLogicalPortEntry OBJECT-TYPE                          +
                  SYNTAX  AtmVplLogicalPortEntry                          +
                  MAX-ACCESS  not-accessible                              +
                  STATUS  current                                         +
                  DESCRIPTION                                             +
                      "An entry with information about the Atm Logical    +
                      Port interface."                                    +
                  AUGMENTS { atmVplEntry }                                +
                  ::= { atmVplLogicalPortTable 1 }                        +


              AtmVplLogicalPortEntry ::=                                  +
                  SEQUENCE {                                              +
                      atmVplLogicalPortDef         INTEGER,               +
                      atmVplLogicalPortIndex       InterfaceIndex         +
                      }                                                   +


              atmVplLogicalPortDef   OBJECT-TYPE                          +
                  SYNTAX  INTEGER {                                       +
                                  notLogicalIf(1),                        +





          Expires XX                                           [Page 27]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                                  isLogicalIf(2)                          +
                                  }                                       +
                  MAX-ACCESS  read-create                                 +
                  STATUS  current                                         +
                  DESCRIPTION                                             +
                      "Indicates whether the VPC at this VPL interface    +
                      is an Atm Logical Port interface."                  +
                  DEFVAL { notLogicalIf }                                 +
                  ::= { atmVplLogicalPortEntry 1 }                        +


              atmVplLogicalPortIndex OBJECT-TYPE                          +
                  SYNTAX  InterfaceIndex                                  +
                  MAX-ACCESS  read-only                                   +
                  STATUS  current                                         +
                  DESCRIPTION                                             +
                      "The ifTable index of the atm logical port          +
                      interface associated with this VPL. Only valid if   +
                      the value of atmVplLogicalPortDef is isLogicalIf,   +
                      and the VPL row is active."                         +
                  ::= { atmVplLogicalPortEntry 2 }                        +





























          Expires XX                                           [Page 28]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          -- ****************************************************
          -- (2) ATM Switch/Service/Host SVC Group                        |

          -- This group contains information for a Switch/Service/Host    |
          -- that implements ATM interfaces supporting Switched
          -- Virtual Connections (SVCs).
          -- This group consists of the following                         |
          -- table:                                                       |
          -- 1. ATM Interface Signalling Configuration Table              |
          --    (beginning portion only)                                  |

          -- Since the ATM Interface Signalling Configuration Table       |
          -- was designed to contain signalling information               |
          -- the remaining portion of this table contains information     |
          -- from "(4) ATM Switch/Service SVC Group".                     |
          -- The ATM Switch/Service SVC Group contains information for    |
          -- a Switch/Service that implements ATM interfaces              |
          -- supporting Switched Virtual Connections (SVCs).              |


          atmSwtchServcHostSVCGroup OBJECT IDENTIFIER::= {                |
                                             atm2MIBObjects 2}

          -- 1. ATM Interface Signalling Configuration Table              |
          -- This table provides configuration information for            |
          -- ATM Switched Virtual Connections (SVCs).                     |

          atmSigTable       OBJECT-TYPE                                   |
               SYNTAX       SEQUENCE OF AtmSigEntry                       |
               MAX-ACCESS   not-accessible
               STATUS       current
               DESCRIPTION
                "This table contains ATM local interface
                 configuration parameters, one entry per ATM
                 signalling interface."
               ::= { atmSwtchServcHostSVCGroup 1 }                        |

          atmSigEntry         OBJECT-TYPE                                 |
               SYNTAX         AtmSigEntry                                 |
               MAX-ACCESS     not-accessible
               STATUS         current
               DESCRIPTION
                "This list contains signalling configuration
                 parameters and state variables."
               INDEX { ifIndex }                                          |





          Expires XX                                           [Page 29]





          draft        Supplemental ATM Management ObjectsSeptember 1995


               ::= { atmSigTable  1}                                      |

          AtmSigEntry    ::= SEQUENCE  {                                  |
          -- ATM Switch/Service/Host SVC Group:                           |
               atmSigEntityRole            INTEGER,                       |
               atmSigSuite                 INTEGER,                       |
               atmSigType                  INTEGER,                       |
               atmSigSSCOPConEvents        Counter32,                     |
               atmSigSSCOPErrdPdus         Counter32,                     |
               atmSigSetupAttempts         Counter32,                     |
               atmSigUnavailRoutes         Counter32,                     |
               atmSigUnavailResrcs         Counter32,                     |
               atmSigCldPrtyProblems       Counter32,                     |
               atmSigMsgErrors             Counter32,                     |
               atmSigTimerExpireds         Counter32,                     |
               atmSigRestarts              Counter32,                     |
               atmSigInEstabls             Counter32,                     |
               atmSigOutEstabls            Counter32,                     |
          -- ATM Switch/Service SVC Group:                                |
               atmSigSupportClgPtyNumDel   INTEGER,                       |
               atmSigSupportClgPtySubAddr  INTEGER,                       |
               atmSigSupportCldPtySubAddr  INTEGER,                       |
               atmSigSupportHiLyrInfo      INTEGER,                       |
               atmSigSupportLoLyrInfo      INTEGER,                       |
               atmSigSupportRepeatInd      INTEGER,                       |
               atmSigSupportAALInfo        INTEGER,                       |
               atmSigSupportPrefCarrier    OCTET STRING                   |
                    }

          atmSigEntityRole     OBJECT-TYPE                                |
               SYNTAX        INTEGER  {                                   |
                                other(1),                                 |
                                symmetric(2),                             |
                                user(3),                                  |
                                network(4) }                              |
               MAX-ACCESS    read-write                                   |
               STATUS        current
               DESCRIPTION
                 "The role of this signalling entity."                    |
               ::= { atmSigEntry 1 }                                      |

          atmSigSuite     OBJECT-TYPE                                     |
               SYNTAX        INTEGER  {
                                other(1),
                                dss2(2),                                  |





          Expires XX                                           [Page 30]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                                atmf(3),                                  |
                                bici(4) }                                 |
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "The protocol suite supported by this signalling         |
                 entity."                                                 |
               ::= { atmSigEntry 2 }                                      |

          atmSigType     OBJECT-TYPE                                      |
               SYNTAX       INTEGER  {
                               other(1),
                               ituDss2(2),                                |
                               atmfUni3Dot0(3),                           |
                               atmfUni3Dot1(4),                           |
                               atmfUni4Dot0(5),                           |
                               atmfIisp(6),                               |
                               atmfPnni1Dot0(7),                          |
                               bici2Dot0(8)  }                            |
               MAX-ACCESS   read-only                                     |
               STATUS       current
               DESCRIPTION
                 "The type of signalling that                             |
                 will be used for the identified interface and            |
                 protocol suite.                                          |

                 ITU-T DSS2:
                 -  ITU-T Recommendation Q.2931, Broadband                |
                    Integrated Service Digital Network (B-ISDN)           |
                    Digital Service Signalling System No.2 (DSS2)         |
                    User-Network Interface (UNI) Layer 3                  |
                    Specification for Basic Call/Connection               |
                    Control (September 1994) [11]                         |
                 -  ITU-T Draft Recommendation Q.2961,                    |
                    B-ISDN DSS 2 Support of Additional Traffic            |
                    Parameters (May 1995) [17]                            |
                    NOTE: Update this reference when the draft matures    |
                 -  ITU-T Draft Recommendation Q.2971,                    |
                    B-ISDN DSS 2 User Network Interface Layer 3           |
                    Specification for Point-to-multipoint Call/connection |
                    Control (May 1995) [18]                               |
                    NOTE: Update this reference when the draft matures    |


                 ATM Forum UNI 3.0:                                       +





          Expires XX                                           [Page 31]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                   ATM Forum, ATM User-Network Interface,
                   Version 3.0 (UNI 3.0) Specification, Part I
                   (1994) [9].

                 ATM Forum UNI 3.1:
                   ATM Forum, ATM User-Network Interface,
                   Version 3.1 (UNI 3.1) Specification, Part I
                   (November 1994) [10].

                 ATM Forum UNI 4.0:
                   ATM Forum, ATM User-Network Interface,
                   Version 4.0 (UNI 4.0) Specification, Part I
                   (1995) [16].

                 ATM Forum IISP (formerly P-NNI v0) :
                   Interim Inter-switch Signaling Protocol                |
                   (IISP)Specification, Version 1.0, af-pnni-0026.000,    |
                   (December 1994) [19].                                  |

                 ATM Forum P-NNI1.0 :
                   Private Network-to-Network Interface in
                   ATM Forum 94-0471R4, P-NNI Draft
                   Specification, P-NNI SWG (November
                   1994) [12].
                   NOTE: Update this reference when the draft matures     |

                 ATM Forum B-ICI :                                        |
                 - Exact definition to be provided"                       |

               ::= { atmSigEntry 3}                                       |

          atmSigSSCOPConEvents   OBJECT-TYPE                              |
               SYNTAX            Counter32
               MAX-ACCESS        read-only
               STATUS            current
               DESCRIPTION
                 "SSCOP Connection Events Counter.  This                  |
                 counter counts the sum of the following errors:

                 1) SSCOP Connection Disconnect Counter

                 The abnormal occurrence of this event is
                 characterized by the expiry of Timer_NO_RESPONSE.
                 (This event is communicated to the layer management
                 with MAA-ERROR code P.  See ITU-T Q.2110 [13].)





          Expires XX                                           [Page 32]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 2) SSCOP Connection Initiation Failure

                 This condition indicates the inability to establish
                 an SSCOP connection.  This event occurs whenever the
                 number of expiries of the connection control timer
                 (Timer_CC) exceeds the MaxCC or upon receipt of a
                 connection reject message BGREJ PDU.  (This event is
                 communicated to layer management with MAA-ERROR
                 code O.  See ITU-T Q.2110.)

                 3) SSCOP Connection Re-Establ/Resynch

                 This event occurs upon receipt of a BGN PDU or RESYNC
                 PDU."
               ::= { atmSigEntry 4}                                       |

          atmSigSSCOPErrdPdus   OBJECT-TYPE                               |
               SYNTAX           Counter32
               MAX-ACCESS       read-only
               STATUS           current
               DESCRIPTION
                 "SSCOP Errored PDUs Counter.  This counter counts the
                 sum of the following errors:

                 1) Invalid PDUs.
                    These are defined in SSCOP and consist of PDUs
                    with incorrect length (MAA-ERROR code U),
                    undefined PDU type code or not 32-bit aligned.

                 2) PDUs that result in MAA error codes and are
                    discarded
                    See Errors A-M and Q-T defined in ITU-T Q.2110 [13]."
               ::= { atmSigEntry 5 }                                      |

          atmSigSetupAttempts    OBJECT-TYPE                              |
               SYNTAX            Counter32
               MAX-ACCESS        read-only
               STATUS            current
               DESCRIPTION
                 "Call Setup Attempts Counter.  This counter counts       |
                 the number of call setup attempts(both successful        |
                 and unsuccessful)."                                      |
               ::= { atmSigEntry 6 }                                      |

          atmSigUnavailRoutes    OBJECT-TYPE                              |





          Expires XX                                           [Page 33]





          draft        Supplemental ATM Management ObjectsSeptember 1995


               SYNTAX            Counter32                                |
               MAX-ACCESS        read-only                                |
               STATUS            current                                  |
               DESCRIPTION                                                |
                 "Route Unavailability Counter.  This counter counts      |
                 the sum of the following errors:

                 Cause Value            Meaning

                    1            unallocated (unassigned) number
                    2            no route to specified transit network
                    3            no route to destination
                    88           incompatible destination"
               ::= { atmSigEntry 7 }                                      |

          atmSigUnavailResrcs     OBJECT-TYPE                             |
               SYNTAX             Counter32
               MAX-ACCESS         read-only
               STATUS             current
               DESCRIPTION
                 "Resource Unavailability Counter.  This counter counts
                 the sum of the following errors:

                 Cause Value          Meaning

                    27          destination out of order
                    35          requested VPCI/VCI not available
                    41          temporary failure
                    45          no VPCI/VCI available
                    47          resource unavailable, unspecified
                    49          Quality of Service unavailable
                    51          user cell rate not available
                    58          bearer capability not presently
                                available
                    63          Service or option not available,
                                unspecified
                    92          too many pending add party requests"
               ::= { atmSigEntry 8 }                                      |

          atmSigCldPrtyProblems     OBJECT-TYPE                           |
               SYNTAX               Counter32
               MAX-ACCESS           read-only
               STATUS               current
               DESCRIPTION
                 "Called Party Responsible For Unsuccessful Call





          Expires XX                                           [Page 34]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 Counter.  This counter counts the sum of the
                 following errors:

                 Cause Value         Meaning

                    17           user busy
                    18           no user responding
                    21           call rejected
                    22           number changed
                    23           user rejects all calls with calling
                                 line id restriction (CLIR)
                    31           normal, unspecified

                 Note: Cause Value #30 'response to STATUS ENQUIRY'
                 was not included in this memo since it did not apply
                 to a hard failure"
               ::= { atmSigEntry 9 }                                      |

          atmSigMsgErrors    OBJECT-TYPE                                  |
               SYNTAX           Counter32
               MAX-ACCESS       read-only
               STATUS           current
               DESCRIPTION
                 "Incorrect Messages Counter.  The Incorrect
                 Messages Counter reflects any sort of incorrect
                 information in a message.  This includes:

                 - RELEASE, RELEASE COMPLETE, ADD PARTY REJECT,
                   DROP PARTY, and STATUS messages transmitted or
                   received, that contain any of the Cause values
                   listed below.

                 - Ignored messages.  These messages are dropped
                   because the message was so damaged that it could
                   not be further processed.  A list of dropped
                   messages is compiled below:

                    1.  Message with invalid protocol discriminator

                    2.  Message with errors in the call reference I.E.
                         - Bits 5-8 of the first octet not equal to
                           '0000'
                         - Bits 1-4 of the first octet indicating a
                           length other than 3 octets
                         - RELEASE COMPLETE message received with a





          Expires XX                                           [Page 35]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                           call reference that does not relate to a
                           call active or in progress
                         - SETUP message received with call reference
                           flag incorrectly set to 1
                         - SETUP message received with a call
                           reference for a call that is already
                           active or in progress.

                    3.  Message too short


                 The following cause values are monitored by this
                 counter:


                 Cause Value     Meaning

                    10     VPCI/VCI unacceptable
                    28     invalid number format (address incomplete)
                    43     access information discarded
                    57     bearer capability not authorized
                    65     bearer capability not implemented
                    73     unsupported combination of traffic
                           parameters
                    78     AAL parameters cannot be supported             +
                    81     invalid call reference value
                    82     identified channel does not exist
                    89     invalid endpoint reference
                    91     invalid transit network selection
                    96     mandatory information element is missing       -
                    97     message type non-existent or not
                           implemented
                    99     information element non-existent or not
                           implemented
                    100    invalid information element contents
                    101    message not compatible with call state
                    104    incorrect message length
                    111    protocol error, unspecified

                    NOTE:  For this counter, RELEASE COMPLETE
                    messages that are a reply to a previous RELEASE
                    message and contain the same cause value, are
                    redundant (for counting purposes) and should not
                    be counted."
               ::= { atmSigEntry 10 }                                     |





          Expires XX                                           [Page 36]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          atmSigTimerExpireds    OBJECT-TYPE                              |
               SYNTAX               Counter32
               MAX-ACCESS           read-only
               STATUS               current
               DESCRIPTION
                 "Timer Expiries Counter.  The Timer Expiries Counter
                 provides a count of network timer expiries, and to
                 some extent, host or switch timer expiries.  The
                 conditions for incrementing this counter are:
                    - Expiry of any network timer

                    - Receipt of a RELEASE or RELEASE COMPLETE
                      message with Cause #102, 'recovery on
                      timer expiry'.

                 NOTE:  For this counter, RELEASE COMPLETE messages
                 that are a reply to a previous RELEASE message and
                 contain the same cause value, are redundant (for
                 counting purposes) and should not be counted."
               ::= { atmSigEntry 11 }                                     |

          atmSigRestarts    OBJECT-TYPE                                   |
               SYNTAX          Counter32
               MAX-ACCESS      read-only
               STATUS          current
               DESCRIPTION
                 "Restart Activity Counter.  The Restart Activity
                 Counter provides a count of host, switch, or
                 network restart activity.  This counter is
                 incremented when receiving or transmitting a
                 RESTART message.

                 NOTE:  For this counter, RELEASE COMPLETE
                 messages that are a reply to a previous RELEASE
                 message and contain the same cause value, are
                 redundant (for counting purposes) and should not
                 be counted."
               ::= { atmSigEntry 12 }                                     |

          atmSigInEstabls    OBJECT-TYPE                                  |
               SYNTAX          Counter32
               MAX-ACCESS      read-only
               STATUS          current
               DESCRIPTION
                 "Number of VCLs established at this signalling entity





          Expires XX                                           [Page 37]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 for incoming connections."
                  ::= { atmSigEntry 13 }                                  |

          atmSigOutEstabls    OBJECT-TYPE                                 |
               SYNTAX          Counter32
               MAX-ACCESS      read-only
               STATUS          current
               DESCRIPTION
                 "Number of VCLs established at this signalling entity
                 for outgoing connections."
                  ::= { atmSigEntry 14 }                                  |

          atmSigSupportClgPtyNumDel     OBJECT-TYPE                       |
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether the Calling Party Number
                 Information Element is transferred to the called party
                 address.  The value of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               DEFVAL        { enabled }                                  |
               ::= { atmSigEntry 15 }                                     |

          atmSigSupportClgPtySubAddr   OBJECT-TYPE                        |
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept and transfer    |
                 the Calling Party Subaddress Information Element from    |
                 the calling party to the called party.  Calling party    |
                 subaddress information shall only be transferred to the  |
                 called party if calling party number delivery is         |
                 enabled (i.e., atmSigSupportClgPtyNumDel =               |
                 'enabled(1)'.  The value of this object can be:          |
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."





          Expires XX                                           [Page 38]





          draft        Supplemental ATM Management ObjectsSeptember 1995


               DEFVAL        { enabled }                                  |
               ::= { atmSigEntry 16 }                                     |

          atmSigSupportCldPtySubAddr    OBJECT-TYPE                       |
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and
                 deliver the Called Party Subaddress Information Element
                 from the calling party to the called party.  The value
                 of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               DEFVAL        { enabled }                                  |
               ::= { atmSigEntry 17 }                                     |

          atmSigSupportHiLyrInfo     OBJECT-TYPE                          |
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and
                 deliver the Broadband High Layer Information Element
                 from the calling party to the called party.  The value
                 of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               DEFVAL        { enabled }                                  |
               ::= { atmSigEntry 18 }                                     |

          atmSigSupportLoLyrInfo     OBJECT-TYPE                          |
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and
                 deliver the Broadband Low Layer Information Element
                 from the calling party to the called party.  The value





          Expires XX                                           [Page 39]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               DEFVAL        { enabled }                                  |
               ::= { atmSigEntry 19 }                                     |

          atmSigSupportRepeatInd      OBJECT-TYPE                         |
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and  |
                 deliver the Broadband Repeat Indicator with two or       |
                 three instances of the Broadband Low Layer Information   |
                 Element for low layer information selection from the     |
                 calling party to the called party.  This object shall    |
                 only be transferred if atmSigSupportLoLyrInfo =          |
                 'enabled(1)'.  The value of this object can be:          |
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               DEFVAL        { enabled }                                  |
               ::= { atmSigEntry 20 }                                     |

          atmSigSupportAALInfo     OBJECT-TYPE                            |
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and
                 deliver the ATM Adaptation Layer Parameters Information
                 Element from the calling party to the called party.
                 The value of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               DEFVAL        { enabled }                                  |
               ::= { atmSigEntry 21 }                                     |





          Expires XX                                           [Page 40]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          atmSigSupportPrefCarrier     OBJECT-TYPE                        |
               SYNTAX        OCTET STRING
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This parameter identifies the carrier to which
                 intercarrier calls originated from this interface are
                 routed when transit network selection information is
                 not provided by the calling party.  If a Carrier
                 Identification Code (CIC) is used the parameter shall
                 contain the CIC.  For three-digit CICs, the first octet
                 shall be '0' and the CIC is contained in the three
                 following octets.  If the preferred carrier feature is
                 not supported the value is a zero-length string."
               ::= { atmSigEntry 22 }                                     |



































          Expires XX                                           [Page 41]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          -- ****************************************************
          -- (3) ATM Switch/Service Group                                 |

          -- This group contains information for a Switch/Service         |
          -- that implements ATM interfaces.  This group contains
          -- the following table:
          -- 1. ATM Interface Administrative Address Table

          atmSwtchServcGroup OBJECT IDENTIFIER::= {                       |
                                             atm2MIBObjects 3}

          -- 1. ATM Interface Administrative Address Table
          -- This table contains a list of the valid calling party
          -- addresses for a UNI in the case of both PVCs and SVCs.
          -- For PVCs, if addresses are not used then an entry in
          -- this table is not necessary.

          atmIfAdminAddrTable    OBJECT-TYPE
               SYNTAX       SEQUENCE OF AtmIfAdminAddrEntry
               MAX-ACCESS   not-accessible
               STATUS       current
               DESCRIPTION
                 "This table contains an address list on a per interface
                 basis.  This table only applies to switches or networks
                 and only for interfaces that have more than one address
                 assigned."
               ::= { atmSwtchServcGroup 1 }                               |

          atmIfAdminAddrEntry    OBJECT-TYPE
               SYNTAX            AtmIfAdminAddrEntry
               MAX-ACCESS        not-accessible
               STATUS            current
               DESCRIPTION
                 "An entry in the atmIfAdminAddrTable."
               INDEX { ifIndex, atmIfAdminAddrAddress }
               ::= { atmIfAdminAddrTable  1}

          AtmIfAdminAddrEntry    ::= SEQUENCE  {
               atmIfAdminAddrAddress     AtmAddr,
               atmIfAdminAddrRowStatus   RowStatus
                    }

          atmIfAdminAddrAddress   OBJECT-TYPE
               SYNTAX             AtmAddr
               MAX-ACCESS         not-accessible





          Expires XX                                           [Page 42]





          draft        Supplemental ATM Management ObjectsSeptember 1995


               STATUS             current
               DESCRIPTION
                 "A valid address for a given switch or network
                 interface."
               ::= { atmIfAdminAddrEntry 1}

          atmIfAdminAddrRowStatus OBJECT-TYPE
               SYNTAX             RowStatus
               MAX-ACCESS         read-create                             |
               STATUS             current
               DESCRIPTION
                 "This object is used to create and delete rows in the
                 atmIfAdminAddrTable."
               ::= { atmIfAdminAddrEntry 2}




































          Expires XX                                           [Page 43]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          -- ****************************************************
          -- (4) ATM Switch/Service SVC Group                             |

          -- This group contains information for a Switch/Service         |
          -- that implements ATM interfaces supporting Switched           |
          -- Virtual Connections (SVCs).                                  |
          -- This group consists of the following:                        |
          -- 1. ATM VPL SVC Cross-Connect Table                           |
          -- 2. ATM VCL SVC Cross-Connect Table                           |
          -- 3. Part of the ATM Interface Signalling Configuration        |
          --      Table in Section (2) See 'Section(2) ATM                |
          --      Switch/Service/Host SVC Group'.                         |

          -- Note that some objects from this group were placed in        |
          -- the ATM Interface Signalling Configuration Table             |
          -- in "(2) ATM Switch/Service/Host SVC Group" so that           |
          -- the signalling information could be maintained in            |
          -- one table.                                                   |
          -- The ATM Switch/Service/Host SVC Group contains               |
          -- information for a Switch/Service/Host that                   |
          -- implements ATM interfaces supporting Switched                |
          -- Virtual Connections (SVCs).                                  |


          atmSwtchServcSVCGroup OBJECT IDENTIFIER::= {                    |
                                             atm2MIBObjects 4}            |


          -- 1. ATM VPL SVC Cross-Connect Table                           |
          -- This group contains configuration and state                  |
          -- information of all SVC point-to-point,                       |
          -- point-to-multipoint, or multipoint-to-multipoint             |
          -- VP cross-connects.                                           |

          -- This table has read-only access and can be used              |
          -- to monitor the cross-connects which connect                  |
          -- the VPLs together in an ATM switch                           |
          -- or network. The atmSvcVpCrossConnectIndex                    |
          -- is used to associate the related SVC                         |
          -- VPLs that are cross-connected together.                      |
          -- The atmSvcVpCrossConnectAdminStatus object                   |
          -- has read-write access to allow for tear-down.                |

          -- The ATM SVC VP Cross Connect Table                           |
          -- models each bi-directional Switched                          |





          Expires XX                                           [Page 44]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          -- Virtual Circuit (SVC) VPC                                    |
          -- cross-connect as a set of entries in                         |
          -- the atmSvcVpCrossConnectTable. A                             |
          -- point-to-point VPC cross-connect is modeled                  |
          -- as one entry; a point-to-multipoint (N leafs) VPC            |
          -- cross-connect as N entries in this table; and                |
          -- a multipoint-to-multipoint (N parties) VPC cross-            |
          -- connect as N(N-1)/2 entries in this table.                   |
          -- In the latter cases, all the N (or N(N-1)/2) entries         |
          -- are associated with a single VPC cross-connect by            |
          -- having the same value of atmSvcVpCrossConnectIndex.          |

          --      _________________________________________               |
          --      |                                       |               |
          --  Low |         ATM Switch or Network         | High          |
          --  port|                                       | port          |
          -- _____|>> from low to high VPC traffic flow >>|______         |
          --      |<< from high to low VPC traffic flow <<|               |
          --      |                                       |               |
          --      |_______________________________________|               |
          --                                                              |
          --          Figure 8: VPC Cross-Connect Model                   |

          -- The terms low and high are chosen to represent               |
          -- numerical ordering of the two interfaces associated          |
          -- with a VPC cross-connect. That is, the ATM interface         |
          -- with the lower value of ifIndex is termed 'low',             |
          -- while the other ATM interface associated with the            |
          -- VPC cross-connect is termed 'high'. This terminology         |
          -- is used to provide directional information; for              |
          -- example, the atmSvcVpCrossConnectL2HOperStatus               |
          -- applies to the low->high direction, and                      |
          -- atmSvcVpCrossConnectH2LOperStatus applies to the             |
          -- high->low  direction, as illustrated in Figure 8.            |


          --  The ATM VP Cross Connect Table                              |


          atmSvcVpCrossConnectTable OBJECT-TYPE                           |
               SYNTAX            SEQUENCE OF AtmSvcVpCrossConnectEntry    |
               MAX-ACCESS        not-accessible                           |
               STATUS            current                                  |
               DESCRIPTION                                                |
               "The ATM SVC VP Cross Connect table.  A bi-                |





          Expires XX                                           [Page 45]





          draft        Supplemental ATM Management ObjectsSeptember 1995


               directional VP cross-connect which                         |
               cross-connects two SVC VPLs is modeled                     |
               as one entry in this table."                               |
               ::= { atmSwtchServcSVCGroup 1 }                            |


          atmSvcVpCrossConnectEntry OBJECT-TYPE                           |
               SYNTAX  AtmSvcVpCrossConnectEntry                          |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |
               DESCRIPTION                                                |
               "An entry in the ATM SVC VP Cross Connect table.           |
               This entry is used to model a bi-directional               |
               ATM SVC VP cross-connect which cross-connects              |
               two VPLs."                                                 |
               INDEX { atmSvcVpCrossConnectIndex,                         |
                       atmSvcVpCrossConnectLowIfIndex,                    |
                       atmSvcVpCrossConnectLowVpi,                        |
                       atmSvcVpCrossConnectHighIfIndex,                   |
                       atmSvcVpCrossConnectHighVpi }                      |
               ::= { atmSvcVpCrossConnectTable 1 }                        |

          AtmSvcVpCrossConnectEntry ::= SEQUENCE {                        |
               atmSvcVpCrossConnectIndex          INTEGER,                |
               atmSvcVpCrossConnectLowIfIndex     IfIndex,                |
               atmSvcVpCrossConnectLowVpi         INTEGER,                |
               atmSvcVpCrossConnectHighIfIndex    IfIndex,                |
               atmSvcVpCrossConnectHighVpi        INTEGER,                |
               atmSvcVpCrossConnectAdminStatus    INTEGER,                |
               atmSvcVpCrossConnectOperStatus     INTEGER,                |
               atmSvcVpCrossConnectLastChange     TimeStamp               |
                            }                                             |

          atmSvcVpCrossConnectIndex OBJECT-TYPE                           |
               SYNTAX  INTEGER (1..2147483647)                            |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |
               DESCRIPTION                                                |
               "A unique value to identify this SVC VP cross-connect."    |
               ::= { atmSvcVpCrossConnectEntry 1 }                        |

          atmSvcVpCrossConnectLowIfIndex OBJECT-TYPE                      |
               SYNTAX  IfIndex                                            |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |





          Expires XX                                           [Page 46]





          draft        Supplemental ATM Management ObjectsSeptember 1995


               DESCRIPTION                                                |
               "The value of this object is equal to MIB II's             |
               ifIndex value of the ATM interface port for this           |
               SVC VP cross-connect.  The term low implies                |
               that this ATM interface has the numerically lower          |
               ifIndex value than the other ATM interface                 |
               identified in the same atmSvcVpCrossConnectEntry."         |
               ::= { atmSvcVpCrossConnectEntry 2 }                        |

          atmSvcVpCrossConnectLowVpi OBJECT-TYPE                          |
               SYNTAX  INTEGER  (1..4095)                                 |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |
               DESCRIPTION                                                |
               "The value of this object is equal to the VPI              |
               value at the ATM interface                                 |
               associated with the SVC VP cross-connect that is           |
               identified by atmSvcVpCrossConnectLowIfIndex.              |
               The VPI value cannot exceed the number                     |
               supported by the atmInterfaceMaxVpiBits                    |
               at the low ATM interface port."                            |
               ::= { atmSvcVpCrossConnectEntry 3 }                        |

          atmSvcVpCrossConnectHighIfIndex OBJECT-TYPE                     |
               SYNTAX  IfIndex                                            |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "The value of this object is equal to MIB II's            |
                 ifIndex value of the ATM interface port for              |
                 this SVC VP cross-connect.  The term high                |
                 implies that this ATM interface has the                  |
                 numerically higher ifIndex value than the                |
                 other ATM interface identified in the same               |
                 atmSvcVpCrossConnectEntry."                              |
               ::= { atmSvcVpCrossConnectEntry 4 }                        |

          atmSvcVpCrossConnectHighVpi OBJECT-TYPE                         |
               SYNTAX  INTEGER   (1..4095)                                |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "The value of this object is equal to the VPI             |
                 value at the ATM interface associated with               |
                 the SVC VP cross-connect that is identified              |





          Expires XX                                           [Page 47]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 by atmSvcVpCrossConnectHighIfIndex.                      |
                 The VPI value cannot exceed the number                   |
                 supported by the atmInterfaceMaxVpiBits                  |
                 at the high ATM interface port."                         |
               ::= { atmSvcVpCrossConnectEntry 5 }                        |

          atmSvcVpCrossConnectAdminStatus OBJECT-TYPE                     |
               SYNTAX  INTEGER {                                          |
                               up(1),                                     |
                               down(2)                                    |
                       }                                                  |
               MAX-ACCESS  read-write                                     |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "The value of this object identifies the desired          |
                 administrative status of this bi-directional             |
                 SVC VP cross-connect.  The up and down states            |
                 indicate that the traffic flow is enabled                |
                 and disabled respectively on this VP                     |
                 cross-connect.  The read-write status allows             |
                 for tear-down."                                          |
          ::= { atmSvcVpCrossConnectEntry 6 }                             |

          atmSvcVpCrossConnectOperStatus OBJECT-TYPE                      |
               SYNTAX  INTEGER {                                          |
                         up(1),                                           |
                         down(2),                                         |
                         unknown(3)                                       |
                           }                                              |
               MAX-ACCESS  read-only                                      |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "The value of this object identifies the current          |
                 operational status of this bi-directional SVC VP         |
                 cross-connect.  The up and down states indicate          |
                 that this ATM SVC VP cross-connect is                    |
                 operational or not operational, respectively.            |
                 The unknown state indicates that                         |
                 the state of it cannot be determined."                   |
               ::= { atmSvcVpCrossConnectEntry 7 }                        |

          atmSvcVpCrossConnectLastChange OBJECT-TYPE                      |
               SYNTAX  TimeStamp                                          |
               MAX-ACCESS  read-only                                      |
               STATUS  current                                            |





          Expires XX                                           [Page 48]





          draft        Supplemental ATM Management ObjectsSeptember 1995


               DESCRIPTION                                                |
                "The value of MIB II's sysUpTime object                   |
                 at the time this bi-directional SVC VP                   |
                 cross-connect entered its current                        |
                 operational state.  If the current state was             |
                 entered prior to the last re-initialization of           |
                 the agent, then this object contains a zero              |
                 value."                                                  |
               ::= { atmSvcVpCrossConnectEntry 8 }                        |


          -- 2. ATM Virtual Channel (VC) Cross Connect Group              |

          -- This group contains configuration and state                  |
          -- information of a bi-directional SVC VC cross-connect.        |

          -- This group is used to model a bi-directional                 |
          -- point-to-point, point-to-multipoint or                       |
          -- multipoint-to-multipoint SVC VC cross-connect.               |

          -- This table has read-only access and is used                  |
          -- to monitor the cross-connects which connect                  |
          -- the VCLs together in an ATM switch                           |
          -- or network that belong to a VC connection. The               |
          -- atmSvcVcCrossConnectIndex is used to associate               |
          -- the related SVC VCLs that are cross-connected together.      |
          -- The atmSvcVcCrossConnectAdminStatus object                   |
          -- has read-write access to allow for tear-down.                |


          --  The ATM VC Cross Connect Table                              |

          atmSvcVcCrossConnectTable OBJECT-TYPE                           |
               SYNTAX  SEQUENCE OF AtmSvcVcCrossConnectEntry              |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "The ATM SVC VC Cross Connect table.  A bi-               |
                 directional SVC VC cross-connect which                   |
                 cross-connects two end points (i.e., VCLs)               |
                 is modeled as one entry in this table."                  |
               ::= { atmSwtchServcSVCGroup 2 }                            |


          atmSvcVcCrossConnectEntry OBJECT-TYPE                           |





          Expires XX                                           [Page 49]





          draft        Supplemental ATM Management ObjectsSeptember 1995


               SYNTAX  AtmSvcVcCrossConnectEntry                          |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "An entry in the ATM SVC VC Cross Connect table.          |
                 This entry is used to model a bi-directional ATM         |
                 SVC VC cross-connect cross-connecting two end points."   |
               INDEX { atmSvcVcCrossConnectIndex,                         |
                       atmSvcVcCrossConnectLowIfIndex,                    |
                       atmSvcVcCrossConnectLowVpi,                        |
                       atmSvcVcCrossConnectLowVci,                        |
                       atmSvcVcCrossConnectHighIfIndex,                   |
                       atmSvcVcCrossConnectHighVpi,                       |
                       atmSvcVcCrossConnectHighVci }                      |
               ::= { atmSvcVcCrossConnectTable 1 }                        |

          AtmSvcVcCrossConnectEntry ::= SEQUENCE {                        |
               atmSvcVcCrossConnectIndex          INTEGER,                |
               atmSvcVcCrossConnectLowIfIndex     IfIndex,                |
               atmSvcVcCrossConnectLowVpi         INTEGER,                |
               atmSvcVcCrossConnectLowVci         INTEGER,                |
               atmSvcVcCrossConnectHighIfIndex    IfIndex,                |
               atmSvcVcCrossConnectHighVpi        INTEGER,                |
               atmSvcVcCrossConnectHighVci        INTEGER,                |
               atmSvcVcCrossConnectAdminStatus    INTEGER,                |
               atmSvcVcCrossConnectOperStatus     INTEGER,                |
               atmSvcVcCrossConnectLastChange     TimeStamp               |
                       }                                                  |

          atmSvcVcCrossConnectIndex OBJECT-TYPE                           |
               SYNTAX  INTEGER (1..2147483647)                            |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "A unique value to identify this SVC VC cross-            |
                 connect."                                                |
               ::= { atmSvcVcCrossConnectEntry 1 }                        |

          atmSvcVcCrossConnectLowIfIndex OBJECT-TYPE                      |
               SYNTAX  IfIndex                                            |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "The value of this object is equal to MIB II's            |
                 ifIndex value of the ATM interface port for this         |





          Expires XX                                           [Page 50]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 SVC VC cross-connect.  The term low implies              |
                 that this ATM interface has the numerically lower        |
                 ifIndex value than the other ATM interface               |
                 identified in the same atmSvcVcCrossConnectEntry."       |
               ::= { atmSvcVcCrossConnectEntry 2 }                        |

          atmSvcVcCrossConnectLowVpi OBJECT-TYPE                          |
               SYNTAX  INTEGER  (0..4095)                                 |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "The value of this object is equal to the VPI             |
                 value at the ATM interface                               |
                 associated with the SVC VC cross-connect that is         |
                 identified by atmSvcVcCrossConnectLowIfIndex.            |
                 The VPI value cannot exceed the number                   |
                 supported by the atmInterfaceMaxVpiBits                  |
                 at the low ATM interface port."                          |
               ::= { atmSvcVcCrossConnectEntry 3 }                        |

          atmSvcVcCrossConnectLowVci OBJECT-TYPE                          |
               SYNTAX  INTEGER  (0..65535)                                |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "The value of this object is equal to the VCI             |
                 value at the ATM interface                               |
                 associated with this SVC VC cross-connect that is        |
                 identified by atmSvcVcCrossConnectLowIfIndex.            |
                 The VCI value cannot exceed the number                   |
                 supported by the atmInterfaceMaxVciBits                  |
                 at the low ATM interface port."                          |
               ::= { atmSvcVcCrossConnectEntry 4 }                        |

          atmSvcVcCrossConnectHighIfIndex OBJECT-TYPE                     |
               SYNTAX  IfIndex                                            |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "The value of this object is equal to MIB II's            |
                 ifIndex value for the ATM interface port for             |
                 this SVC VC cross-connect.  The term high                |
                 implies that this SVC VC cross-connect                   |
                 that this ATM interface has the numerically higher       |
                 ifIndex value than the other ATM interface               |





          Expires XX                                           [Page 51]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 identified in the same atmSvcVcCrossConnectEntry."       |
               ::= { atmSvcVcCrossConnectEntry 5 }                        |

          atmSvcVcCrossConnectHighVpi OBJECT-TYPE                         |
               SYNTAX  INTEGER   (0..4095)                                |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "The value of this object is equal to the VPI             |
                 value at the ATM interface                               |
                 associated with the SVC VC cross-connect that is         |
                 identified by atmSvcVcCrossConnectHighIfIndex.           |
                 The VPI value cannot exceed                              |
                 the number supported by the atmInterfaceMaxVpiBits       |
                 at the high ATM interface port."                         |
               ::= { atmSvcVcCrossConnectEntry 6 }                        |

          atmSvcVcCrossConnectHighVci OBJECT-TYPE                         |
               SYNTAX  INTEGER   (0..65535)                               |
               MAX-ACCESS  not-accessible                                 |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "The value of this object is equal to the VCI             |
                 value at the ATM interface                               |
                 associated with the SVC VC cross-connect that is         |
                 identified by atmSvcVcCrossConnectHighIfIndex.           |
                 The VCI value cannot exceed                              |
                 the number supported by the atmInterfaceMaxVciBits       |
                 at the high ATM interface port."                         |
               ::= { atmSvcVcCrossConnectEntry 7 }                        |

          atmSvcVcCrossConnectAdminStatus OBJECT-TYPE                     |
               SYNTAX  INTEGER {                                          |
                         up(1),                                           |
                         down(2)                                          |
                         }                                                |
               MAX-ACCESS  read-write                                     |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "The value of this object identifies the desired          |
                 administrative status of this bi-directional             |
                 SVC VC cross-connect. The up and down states             |
                 indicate that the traffic flow is enabled or             |
                 disabled respectively on this SVC VC                     |
                 cross-connect. The read-write status allows              |





          Expires XX                                           [Page 52]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 for tear-down."                                          |
          ::= { atmSvcVcCrossConnectEntry 8 }                             |

          atmSvcVcCrossConnectOperStatus OBJECT-TYPE                      |
               SYNTAX  INTEGER {                                          |
                         up(1),                                           |
                         down(2),                                         |
                         unknown(3)                                       |
                       }                                                  |
               MAX-ACCESS  read-only                                      |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "The value of this object identifies the current          |
                 operational status of this bi-directional SVC VC         |
                 cross-connect.  The up and down states indicate          |
                 that this ATM SVC VC cross-connect is                    |
                 operational or not operational, respectively.            |
                 The unknown state indicates that the state of            |
                 it cannot be determined."                                |
               ::= { atmSvcVcCrossConnectEntry 9 }                        |

          atmSvcVcCrossConnectLastChange OBJECT-TYPE                      |
               SYNTAX  TimeStamp                                          |
               MAX-ACCESS  read-only                                      |
               STATUS  current                                            |
               DESCRIPTION                                                |
                "The value of MIB II's sysUpTime object                   |
                 at the time this bi-directional SVC VC                   |
                 cross-connect entered its current                        |
                 operational state.  If the current state was             |
                 entered prior to the last re-initialization              |
                 of the agent, then this object contains a                |
                 zero value."                                             |
               ::= { atmSvcVcCrossConnectEntry 10 }                       |
















          Expires XX                                           [Page 53]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          -- ****************************************************         |
          -- (5) ATM Host Group                                           |

          -- This group contains information for a Host                   |
          -- that implements ATM interfaces.  The following               |
          -- tables are included in this group:                           |
          -- 1. ATM VPI/VCI to Address Mapping Table                      |
          -- 2. ATM Address to VPI/VCI Mapping Table                      |

          atmHostGroup OBJECT IDENTIFIER::= {atm2MIBObjects 5}            |


          -- 1. ATM VPI/VCI to Address Mapping Table                      |

              atmVclAddrBindTable  OBJECT-TYPE                            |
                  SYNTAX         SEQUENCE OF AtmVclAddrBindEntry          |
                  MAX-ACCESS     not-accessible
                  STATUS         current
                  DESCRIPTION
                      "This table provides a mapping between the          |
                      atmVclTable and the ATM local/remote address. This  |
                      table can be used to retrieve the local and remote  |
                      ATM address pair for a given Vcl. Note that there   |
                      can be more than one pair of local and remote ATM   |
                      addresses for a VCL in a point to multi-point       |
                      call."                                              |
                  ::= { atmHostGroup 2 }

              atmVclAddrBindEntry    OBJECT-TYPE                          |
                  SYNTAX        AtmVclAddrBindEntry                       |
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "Each entry in this table represents a binding      |
                      between a VCL and an ATM address associated with    |
                      this call. This ATM address can be either the       |
                      called party address or the calling party address.  |
                      There can be more than one pair of local/remote     |
                      ATM addresses associated with the VCL entry for     |
                      point to multi-point calls. Object                  |
                      atmVclAddrBindAddr, atmVclAddrBindType, and         |
                      atmVclAddrBindRowStatus are required during row     |
                      creation."                                          |
                  INDEX  { ifIndex, atmVclVpi, atmVclVci,
                           atmVclAddrBindAddr }                           |





          Expires XX                                           [Page 54]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                  ::= { atmVclAddrBindTable 1 }                           |

              AtmVclAddrBindEntry ::=                                     |
                  SEQUENCE {
                      atmVclAddrBindAddr       AtmAddr,                   |
                      atmVclAddrBindType       INTEGER,                   |
                      atmVclAddrBindRowStatus  RowStatus                  |
                  }


              atmVclAddrBindAddr     OBJECT-TYPE                          |
                  SYNTAX        AtmAddr
                  MAX-ACCESS    read-create
                  STATUS        current
                  DESCRIPTION
                      "An ATM address on one end of the VCL.  For SVCs,   |
                      the agent                                           |
                      supplies the value of this object at creation
                      time.  For PVCs, manager can supply the value of    |
                      this object during or after the PVC creation.       |
                      Managers can modify the value of this object for
                      PVC entries only."
                  ::= { atmVclAddrBindEntry 1 }                           |

             atmVclAddrBindType     OBJECT-TYPE                           |
                 SYNTAX       INTEGER { local(1), remote(2) }             |
                 MAX-ACCESS   read-only                                   |
                 STATUS       current
                 DESCRIPTION
                      "The type of ATM Address represented by the object  |
                      atmVclAddr.  Choices are either local address or    |
                      remote address."                                    |
                  ::= { atmVclAddrBindEntry 2 }                           |

             atmVclAddrBindRowStatus     OBJECT-TYPE                      |
                 SYNTAX       RowStatus                                   |
                 MAX-ACCESS   read-create                                 |
                 STATUS       current                                     |
                 DESCRIPTION                                              |
                      "This object is used to create or destroy an entry  |
                      from this table.  Writable values are and           |
                      'destroy' - used to delete an entry from this       |
                      table.  Readable values are 'active' - the entry    |
                      is active."                                         |
                  ::= { atmVclAddrBindEntry 3 }                           |





          Expires XX                                           [Page 55]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          -- 2. ATM Address to VPI/VCI Mapping Table                      |
          -- This table provides an alternative way to access             |
          -- a row in the atmVclAddrBindTable by using                    |
          -- an ATM address as an index, instead of                       |
          -- the ifIndex

              atmAddrVclTable   OBJECT-TYPE
                  SYNTAX        SEQUENCE OF AtmAddrVclEntry
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "This table provides an alternative way to
                      retrieve the atmVclTable.  This table can be used   |
                      to retrieve the indexing to the atmVclTable by an   |
                      ATM address."                                       |
                  ::= { atmHostGroup 3 }

              atmAddrVclEntry    OBJECT-TYPE
                  SYNTAX         AtmAddrVclEntry
                  MAX-ACCESS     not-accessible
                  STATUS         current
                  DESCRIPTION
                      "Each entry in this table represents an entry in    |
                      the atmVclTable of the ATM MIB [1] by it's ATM      |
                      address.  The ATM address is either the local or    |
                      remote ATM address of the call.  Entries in this    |
                      table are read only.  They                          |
                      show up when entries are created in the             |
                      atmVclAddrBindTable."                               |
                  INDEX { atmVclAddrBindAddr }                            |
                  ::= { atmAddrVclTable 1 }

              AtmAddrVclEntry ::=                                         |
                  SEQUENCE {
                      atmAddrVclAtmIfIndex  IfIndex,
                      atmAddrVclVpi         INTEGER,
                      atmAddrVclVci         INTEGER
                      }

              atmAddrVclAtmIfIndex     OBJECT-TYPE
                  SYNTAX               IfIndex
                  MAX-ACCESS           read-only
                  STATUS               current
                  DESCRIPTION
                      "The interface index of the ATM interface where





          Expires XX                                           [Page 56]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                      this VCL pertains to.  This object combined with    |
                      the atmAddrVclVpi and atmAddrVclVci objects serves  |
                      as an index                                         |
                      to the atmVclTable."
                  ::= { atmAddrVclEntry 1 }

              atmAddrVclVpi     OBJECT-TYPE
                  SYNTAX        INTEGER (0..4095)
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The VPI value of the VCL.  This object combined    |
                      with the atmAddrVclAtmIfIndex and atmAddrVclVci     |
                      objects serves as an index                          |
                      to the atmVclTable."
                  ::= { atmAddrVclEntry 2 }

              atmAddrVclVci     OBJECT-TYPE
                  SYNTAX        INTEGER (0..65535)
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The VCI value of the VCL.  This object combined    |
                      with the atmAddrVclAtmIfIndex and atmAddrVclVpi     |
                      objects serves as an index                          |
                      to the atmVclTable."
                  ::= { atmAddrVclEntry 3 }























          Expires XX                                           [Page 57]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          -- ****************************************************
          -- (6) ATM Host Signalling Group

          -- This group contains information for a Host
          -- that implements ATM SVCs.  This group includes the
          -- following table:
          -- 1. ATM Signalling Descriptor Parameter Table

          atmHostSigGroup OBJECT IDENTIFIER::= {atm2MIBObjects 6}         |

          -- 1. ATM Signalling Descriptor Parameter Table
          -- This table contains objects to provide signalling
          -- capabilities of VCLs.

              atmSigDescrParamTable     OBJECT-TYPE
                  SYNTAX       SEQUENCE OF AtmSigDescrParamEntry
                  MAX-ACCESS   not-accessible
                  STATUS       current
                  DESCRIPTION
                      "A table contains signalling capabilities of VCLs
                      except the Traffic Descriptor.  Traffic
                      descriptors are described in the
                      atmTrafficDescrParamTable."
                  REFERENCE
                      "ATM Forum's ATM User-Network Interface
                      Specification, Version 3.0, Section 5.4.5 Variable
                      Length Information Elements."
                  ::= { atmHostSigGroup 1 }

              atmSigDescrParamEntry        OBJECT-TYPE
                  SYNTAX        AtmSigDescrParamEntry
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "Each entry in this table represents a set of
                      signalling capabilities that can be applied to a
                      VCL.  Objects atmSigDescrParamRowStatus is
                      required during creation."
                  INDEX { atmSigDescrParamIndex }
                  ::= { atmSigDescrParamTable 1 }

              AtmSigDescrParamEntry ::=
                  SEQUENCE {
                      atmSigDescrParamIndex       AtmSigDescrParamIndex,
                      atmSigDescrParamAalType     INTEGER,





          Expires XX                                           [Page 58]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                      atmSigDescrParamAalMode     INTEGER,
                      atmSigDescrParamAalSscsType INTEGER,
                      atmSigDescrParamBhliType    INTEGER,
                      atmSigDescrParamBhliInfo    OCTET STRING,
                      atmSigDescrParamBbcClass    INTEGER,
                      atmSigDescrParamBbcTraffic  INTEGER,
                      atmSigDescrParamBbcTiming   INTEGER,
                      atmSigDescrParamBbcClipping INTEGER,
                      atmSigDescrParamBbcConnConf INTEGER,
                      atmSigDescrParamBlliLayer2  INTEGER,
                      atmSigDescrParamBlliLayer3  INTEGER,
                      atmSigDescrParamBlliPktSize INTEGER,
                      atmSigDescrParamBlliSnapId  INTEGER,
                      atmSigDescrParamBlliOuiPid  OCTET STRING,
                      atmSigDescrParamRowStatus   RowStatus
                  }

              atmSigDescrParamIndex OBJECT-TYPE
                  SYNTAX        AtmSigDescrParamIndex
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "The value of this object is used by the
                      atmVclExtTable to identify a row in this table."
                  ::= { atmSigDescrParamEntry 1 }

               atmSigDescrParamAalType OBJECT-TYPE
                   SYNTAX       INTEGER {
                      other(1),      -- not defined
                      aal1(2),       -- AAL type 1
                      aal34(3),      -- AAL type 3/4
                      aal5(4),       -- AAL type 5
                      userDefined(5) -- User-Defined AAL
                      }
                   MAX-ACCESS   read-create
                   STATUS       current
                   DESCRIPTION
                      "The AAL type. The value of this object is set to
                      other(1) when not defined."
                  DEFVAL { other }
                  ::= { atmSigDescrParamEntry 2 }

               atmSigDescrParamAalMode OBJECT-TYPE
                   SYNTAX     INTEGER {
                      other(1),       -- not defined





          Expires XX                                           [Page 59]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                      msg(2),         -- Message mode
                      stream(3)       -- Streaming mode
                      }
                   MAX-ACCESS read-create
                   STATUS     current
                   DESCRIPTION
                      "The AAL mode.  The value of this object is
                      other(1) when atmSigDescrParamAalType is aal1(2).
                      Values msg(2) and stream(3) are only applicable
                      when atmSigDescrParamAalType is set to aal34(3) or
                      aal5(4).  This object is applicable to UNI 3.0
                      only."
                   DEFVAL { other }
                   ::= { atmSigDescrParamEntry 3 }

               atmSigDescrParamAalSscsType OBJECT-TYPE
                   SYNTAX     INTEGER {
                      other(1),       -- other, or not used
                      assured(2),     -- Data SSCS based on SSCOP
                                      -- assured operation
                      nonassured(3),  -- Data SSCS based on SSCOP
                                      -- non-assured operation
                      frameRelay(4)   -- frame relay SSCS
                      }
                   MAX-ACCESS read-create
                   STATUS     current
                   DESCRIPTION
                      "The SSCS type used by this entry."
                   DEFVAL { other }
                   ::= { atmSigDescrParamEntry 4 }

                atmSigDescrParamBhliType OBJECT-TYPE
                   SYNTAX      INTEGER {
                      other(1),         -- not defined
                      iso(2),           -- ISO
                      user(3),          -- User specific
                      hiProfile(4),     -- Higher layer profile
                                        -- this enum applicable to
                                        -- UNI 3.0 only
                      vendorSpecific(5) -- Vender specific
                                        -- application identifier
                      }
                   MAX-ACCESS  read-create
                   STATUS      current
                   DESCRIPTION





          Expires XX                                           [Page 60]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                      "The Broadband high layer type."
                   DEFVAL { other }
                   ::= { atmSigDescrParamEntry 5 }

                atmSigDescrParamBhliInfo OBJECT-TYPE
                   SYNTAX     OCTET STRING (SIZE(0..7))
                   MAX-ACCESS read-create
                   STATUS     current
                   DESCRIPTION
                      "The Broadband high layer information.  When
                      atmSigDescrParamBhliType is set to iso(2), the
                      value of this object is a zero length string.
                      When atmSigDescrParamBhliType is set to
                      hiProfile(4), the value of this object is a length
                      of 4 octet string containing user to user profile
                      identifier.  When atmSigDescrParamBhliType is set
                      to    vendorSpecific(4), the value of this object
                      is a length of 7 octet string.  The most
                      significant 3 octets consist of a globally-
                      administered OUI, the least significant 4 octets
                      are the vender administered application OUI."
                   DEFVAL { ''H }
                   ::= { atmSigDescrParamEntry 6 }

                atmSigDescrParamBbcClass OBJECT-TYPE
                   SYNTAX      INTEGER {
                      other(1),   -- not defined or unspecified
                      bcoba(2),   -- BCOB-A
                      bcobc(3),   -- BCOB-C
                      bcobx(4)    -- BCOB-X
                      }
                   MAX-ACCESS  read-create                                |
                   STATUS      current
                   DESCRIPTION
                      "The Broadband bearer capability class."
                   ::= { atmSigDescrParamEntry 7 }

                atmSigDescrParamBbcTraffic OBJECT-TYPE
                   SYNTAX      INTEGER {
                       other(1),        -- not defined
                       noIndication(2), -- No indication
                       cbr(3),          -- Constant bit rate
                       vbr(4)           -- Variable bit rate
                              }
                   MAX-ACCESS  read-create                                |





          Expires XX                                           [Page 61]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                   STATUS      current
                   DESCRIPTION
                      "The Broadband bearer capability traffic type."
                   ::= { atmSigDescrParamEntry 8 }

                atmSigDescrParamBbcTiming OBJECT-TYPE
                   SYNTAX      INTEGER {
                       other(1),         -- not specified
                       noIndication(2),  -- No Indication
                       required(3),      -- end-to-end timing required
                       notReq(4)         -- end-to-end timing not
                                         -- required
                       }
                   MAX-ACCESS  read-create                                |
                   STATUS      current
                   DESCRIPTION
                      "The Broadband bearer capability timing
                      requirements."
                   ::= { atmSigDescrParamEntry 9 }

                atmSigDescrParamBbcClipping OBJECT-TYPE
                   SYNTAX     INTEGER {
                       other(1),          -- not specified
                       true(2),           -- not susceptible to
                                          -- clipping
                       false(3)           -- susceptible to clipping
                       }
                   MAX-ACCESS  read-create                                |
                   STATUS      current
                   DESCRIPTION
                      "The Broadband bearer capability susceptibility to
                      clipping parameter."
                   ::= { atmSigDescrParamEntry 10 }

                atmSigDescrParamBbcConnConf OBJECT-TYPE
                   SYNTAX     INTEGER {
                       ptp(1),   -- point-to-point
                       ptmp(2)   -- point-to-multipoint
                       }
                   MAX-ACCESS read-create                                 |
                   STATUS     current
                   DESCRIPTION
                      "The Broadband bearer capability user plane
                      connection configuration parameter."
                   ::= { atmSigDescrParamEntry 11 }





          Expires XX                                           [Page 62]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                atmSigDescrParamBlliLayer2 OBJECT-TYPE
                    SYNTAX     INTEGER {
                       other(1),        -- not specified
                       iso1745(2),      -- Basic mode ISO 1745
                       q921(3),         -- CCITT Recommendation Q.921
                       x25linklayer(4), -- CCITT Recommendation X.25
                                        -- Link Layer
                       x25multilink(5), -- CCITT Recommendation X.25
                                        -- Multilink
                       lapb(6),         -- Extended LAPB; for half
                                        -- duplex operation
                       hdlcArm(7),      -- HDLC ARM (ISO 4335)
                       hdlcNrm(8),      -- HDLC NRM (ISO 4335)
                       hdlcAbm(9),      -- HDLC ABM (ISO 4335)
                       iso88022(10),    -- LAN logical link control
                                        -- (ISO 8802/2)
                       x75slp(11),      -- CCITT Recommendation X.75,
                                        -- single link
                                        -- procedure (SLP)
                       q922(12),        -- CCITT Recommendation Q.922
                       userDef(13),     -- User specified
                       iso7776(14)      -- ISO 7776 DTE-DTE operation
                       }
                    MAX-ACCESS read-create
                    STATUS     current
                    DESCRIPTION
                      "The Broadband low layer information, protocol
                      type of layer 2.  The value of this object is
                      other(1) if layer 2 protocol is not used."
                    DEFVAL { other }
                    ::= { atmSigDescrParamEntry 12 }

                atmSigDescrParamBlliLayer3 OBJECT-TYPE
                    SYNTAX     INTEGER {
                       other(1),       -- not specified
                       x25pkt(2),      -- CCITT Recommendation X.25
                                       -- packet layer
                       isoiec8208(3),  -- ISO/IEC 8208 (X.25 packet
                                       -- level protocol for data
                                       -- terminal equipment)
                       x223iso8878(4), -- X.223/ISO 8878
                       isoiec8473(5),  -- ISO/IEC 8473 OSI
                                       -- connectionless
                                       -- mode protocol
                       t70(6),         -- CCITT Recommendation T.70





          Expires XX                                           [Page 63]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                                       -- minimum
                                       -- network layer
                       tr9577(7),      -- ISO/IEC TR 9577 Protocol
                                       -- Identification in the
                                       -- network layer
                       userDef(8)      -- user specified
                       }
                    MAX-ACCESS read-create
                    STATUS     current
                    DESCRIPTION
                      "The Broadband low layer information, protocol
                      type of layer 3.  The value of this object is
                      other(1) if layer 3 protocol is not used."
                    DEFVAL { other }
                    ::= { atmSigDescrParamEntry 13 }

                atmSigDescrParamBlliPktSize OBJECT-TYPE
                    SYNTAX     INTEGER {
                       other(1),        -- not used
                       s16(2),          -- 16 octets
                       s32(3),          -- 32 octets
                       s64(4),          -- 64 octets
                       s128(5),         -- 128 octets
                       s256(6),         -- 256 octets
                       s512(7),         -- 512 octets
                       s1024(8),        -- 1028 octets
                       s2048(9),        -- 2048 octets
                       s4096(10)        -- 4096 octets
                    }
                    MAX-ACCESS read-create
                    STATUS     current
                    DESCRIPTION
                      "The default packet size defined in B-LLI."
                    DEFVAL { other }
                    ::= { atmSigDescrParamEntry 14 }

                atmSigDescrParamBlliSnapId OBJECT-TYPE
                    SYNTAX     INTEGER {
                       other(1),  -- not used
                       true(2),   -- SNAP ID is 1
                       false(3)   -- SNAP ID is 0
                    }
                    MAX-ACCESS read-create
                    STATUS     current
                    DESCRIPTION





          Expires XX                                           [Page 64]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                      "The SNAP ID used for Broadband low layer protocol
                      layer 3.  The value of this object is other(1) if
                      atmSigDescrParamBlliLayer3 is set to other(1)."
                    DEFVAL { other }
                    ::= { atmSigDescrParamEntry 15 }

                atmSigDescrParamBlliOuiPid OBJECT-TYPE
                    SYNTAX      OCTET STRING (SIZE(0..5))
                    MAX-ACCESS  read-create
                    STATUS      current
                    DESCRIPTION
                      "The OUI/PID encoding for Broadband low layer
                      protocol layer 3.  The value of this object is a
                      zero length string if atmSigDescrParamBlliLayer3
                      is set to none(1).  When used, it is always 5
                      octets with the most significant octet as the OUI
                      Octet 1 and the least significant octet as the PID
                      Octet 2."
                    DEFVAL { ''H }
                    ::= { atmSigDescrParamEntry 16 }

                 atmSigDescrParamRowStatus OBJECT-TYPE
                     SYNTAX      RowStatus
                     MAX-ACCESS  read-create
                     STATUS      current
                     DESCRIPTION
                      "This object is used to create and delete rows in
                      the atmSigDescrParamTable. Writable values are:
                      -'createAndWait' which allows manager to create an
                      entry first and fill in the parameters later.
                      -'active' which allows manager to set the entry to
                      be available to users.  -'destroy' which allows
                      manager to delete an entry from this table.
                      Readable values are: -'createAndWait' which means
                      the entry is created but not available to be used.
                      -'active' means it is active and ready to be used
                      by agent or manager."
                    ::= { atmSigDescrParamEntry 17 }












          Expires XX                                           [Page 65]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          -- ************************************************             +
          -- (7) ATM Miscellaneous Group                                  +

          -- This group contains information for interfaces               +
          -- supporting ATM Interfaces                                    +
          -- This group includes the following:                           +
          -- 1. ATM VP General Information Table                          +
          -- 2. ATM VC General Information Table                          +

          atmMiscGroup OBJECT IDENTIFIER::= {                             +
                                             atm2MIBObjects 7}            +


          -- 1. ATM VP General Information Table                          +


              atmVplGenTable OBJECT-TYPE                                  +
                  SYNTAX           SEQUENCE OF AtmVplGenEntry             +
                  MAX-ACCESS       not-accessible                         +
                  STATUS           current                                +
                  DESCRIPTION                                             +
                      "General Information for each VP."                  +
                  ::= { atmMiscGroup 1 }                                  +


              atmVplGenEntry OBJECT-TYPE                                  +
                  SYNTAX  AtmVplGenEntry                                  +
                  MAX-ACCESS  not-accessible                              +
                  STATUS  current                                         +
                  DESCRIPTION                                             +
                      "An entry with general information about the ATM    +
                      VP."                                                +
                  AUGMENTS { atmVplEntry }                                +
                  ::= { atmVplGenTable 1 }                                +


              AtmVplGenEntry ::=                                          +
                  SEQUENCE {                                              +
          -- ATM Loopback Testing Group:                                  +
                      atmVplGenSegmentEndPoint         INTEGER            +
          }                                                               +


              atmVplGenSegmentEndPoint OBJECT-TYPE                        +
                  SYNTAX  INTEGER {                                       +





          Expires XX                                           [Page 66]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                                   isaVplSegmentEndPoint(1),              +
                                   notaVplSegmentEndPoint(2)              +
                                  }                                       +
                  MAX-ACCESS  read-create                                 +
                  STATUS  current                                         +
                  DESCRIPTION                                             +
                      "An indication of whether or not the VP interface   +
                      has been configured to represent a VPC Segment      +
                      End-Point. If the corresponding VP Link is a UNI,   +
                      the value of this object is permanently set to 1    +
                      (isaVplSegmentEndPoint). Otherwise, the default is  +
                      set to 2 (notaVplSegmentEndPoint)."                 +
                  ::= { atmVplGenEntry 1 }                                +

          -- 2. ATM VC General Information Table                          +


              atmVclGenTable OBJECT-TYPE                                  +
                  SYNTAX           SEQUENCE OF AtmVclGenEntry             +
                  MAX-ACCESS       not-accessible                         +
                  STATUS           current                                +
                  DESCRIPTION                                             +
                      "General Information for each VC."                  +
                  ::= { atmMiscGroup 2 }                                  +


              atmVclGenEntry OBJECT-TYPE                                  +
                  SYNTAX  AtmVclGenEntry                                  +
                  MAX-ACCESS  not-accessible                              +
                  STATUS  current                                         +
                  DESCRIPTION                                             +
                      "An entry with general information about the ATM    +
                      VC."                                                +
                  AUGMENTS { atmVclEntry }                                +
                  ::= { atmVclGenTable 1 }                                +


              AtmVclGenEntry ::=                                          +
                  SEQUENCE {                                              +
              -- ATM Switch/Service/Host Group:                           +
                    atmVclConnType            INTEGER,                    +
              -- ATM Host Signalling Group:                               +
                    atmVclReceiveSigDescrIndex                            +
                                              AtmSigDescrParamIndex,      +
                    atmVclTransmitSigDescrIndex                           +





          Expires XX                                           [Page 67]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                                              AtmSigDescrParamIndex,      +
              -- ATM Loopback Testing Group:                              +
                    atmVclGenSegmentEndPoint  INTEGER                     +
          }                                                               +


              atmVclConnType     OBJECT-TYPE                              +
                  SYNTAX      INTEGER {                                   +
                     pvc(1),             -- Permanent VC                  +
                     svcIncoming(2),     -- Switched VC, incoming         +
                     svcOutgoing(3)      -- Switched VC, outgoing         +
                     }                                                    +
                  MAX-ACCESS  read-create                                 +
                  STATUS      current                                     +
                  DESCRIPTION                                             +
                      "The type of the VCL.  Values for this object are   +
                      Permanent VC, incoming Switched VC, or outgoing     +
                      Switched VC.  This object cannot be modified once   +
                      created."                                           +
                  ::= { atmVclGenEntry 1 }                                +

          atmVclReceiveSigDescrIndex   OBJECT-TYPE                        +
                  SYNTAX            AtmSigDescrParamIndex                 +
                  MAX-ACCESS        read-create                           +
                  STATUS            current                               +
                  DESCRIPTION                                             +
                      "The value of this object identifies the row in     +
                      the ATM Signalling Descriptor Parameter Table       +
                      which applies to the receive direction of this      +
                      VCL."                                               +
                  ::= { atmVclGenEntry 2 }                                +

          atmVclTransmitSigDescrIndex   OBJECT-TYPE                       +
                  SYNTAX            AtmSigDescrParamIndex                 +
                  MAX-ACCESS        read-create                           +
                  STATUS            current                               +
                  DESCRIPTION                                             +
                      "The value of this object identifies the row in     +
                      the ATM Signalling Descriptor Parameter Table       +
                      which applies to the transmit direction of this     +
                      VCL."                                               +
                  ::= { atmVclGenEntry 3 }                                +

              atmVclGenSegmentEndPoint OBJECT-TYPE                        +
                  SYNTAX  INTEGER {                                       +





          Expires XX                                           [Page 68]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                                   isaVclSegmentEndPoint(1),              +
                                   notaVclSegmentEndPoint(2)              +
                                  }                                       +
                  MAX-ACCESS  read-create                                 +
                  STATUS  current                                         +
                  DESCRIPTION                                             +
                      "An indication of whether or not the VC interface   +
                      has been configured to represent a VCC Segment      +
                      End-Point. If the corresponding VC Link is a UNI,   +
                      the value of this object is permanently set to 1    +
                      (isaVclSegmentEndPoint). Otherwise, the default is  +
                      set to 2 (notaVclSegmentEndPoint)."                 +
                  ::= { atmVclGenEntry 4 }                                +





































          Expires XX                                           [Page 69]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          -- ************************************************             +
          -- (8) ATM Loopback Testing Group                               +

          -- This group contains information for interfaces               +
          -- supporting ATM Loopback Tests                                +
          -- This group includes the following:                           +
          -- 1. ATM Loopback Objects                                      +
          -- 2. List of ATM Loopback Test Types                           +

          atmLoopbackTestGroup OBJECT IDENTIFIER::= {                     +
                                             atm2MIBObjects 8}            +


          -- 1. ATM Loopback Objects                                      +
          --    The following objects are defined:                        +
          --        atmLoopbackLocID                                      +
          --        atmLoopbackSrcID                                      +

          atmLoopbackLocID    OBJECT-TYPE                                 +
               SYNTAX         OCTET STRING(SIZE(0..16))                   +
               MAX-ACCESS     read-write                                  +
               STATUS         current                                     +
               DESCRIPTION                                                +
                 "This object represents the identity of the atm device   +
                 that is being requested to loopback the OAM Loopback     +
                 cell.  The default for this field is all 1's, which      +
                 would indicate a segment OAM Loopback Test.  This        +
                 object is required for the atmLoopbackVPLocationID and   +
                 atmLoopbackVCLocationID tests."                          +
               DEFVAL        {  'ffffffffffffffffffffffffffffffff'H }     +
               ::= { atmLoopbackTestGroup 1 }                             +

          atmLoopbackSrcID    OBJECT-TYPE                                 +
               SYNTAX         OCTET STRING(SIZE(0..16))                   +
               MAX-ACCESS     read-write                                  +
               STATUS         current                                     +
               DESCRIPTION                                                +
                 "This optional parameter identifies the source (e.g.,    +
                 the switch) originating the Loopback cell.  The default  +
                 value of all '1's (binary) represents no identification  +
                 of the source.  Source Identifiers of less than 16       +
                 octets are left justified, and padded with all '0's."    +
               DEFVAL        { 'ffffffffffffffffffffffffffffffff'H}       +
               ::= { atmLoopbackTestGroup 2 }                             +






          Expires XX                                           [Page 70]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          -- 2. List of ATM Loopback Test Types                           +
          -- The following loopback test types are defined:               +
          --      atmLoopbackVPe2e                                        +
          --      atmLoopbackVCe2e                                        +
          --      atmLoopbackVPSegment                                    +
          --      atmLoopbackVCSegment                                    +
          --      atmLoopbackVPLocationID                                 +
          --      atmLoopbackVCLocationID                                 +
          --      atmLoopbackVpServcInternal                              +
          --      atmLoopbackVcServcInternal                              +


          atmLoopbackTestTypes OBJECT IDENTIFIER ::= {                    +
                                        atmLoopbackTestGroup 3 }          +


          atmLoopbackVPe2e  OBJECT-IDENTITY                               +
               STATUS       current                                       +
               DESCRIPTION                                                +
                 "This is an end-to-end loopback test performed on a      +
                 designated VP (Virtual Path).  To perform this test an   +
                 end-to-end loopback OAM cell is inserted at one of the   +
                 end-points of the designated VP connection (e.g., at a   +
                 host) via VCI=4, travels to the other end-point of the   +
                 VP connection, and then loops back to the originating    +
                 end-point on the designated VP.  Success is achieved if  +
                 the loopback OAM cell returns to the originating end-    +
                 point within 5 seconds, otherwise, the test fails.       +

                 The manager-station can perform a loopback test by       +
                 making use of the Interface Test Table (ifTestTable)     +
                 defined in RFC 1573.  In order to run this test the      +
                 object type 'ifTestType' in the ifTestTable shall be     +
                 set to (atmLoopbackVPe2e.p) , where the subidentifier    +
                 'p' is the instance of the atmVplVpi corresponding to    +
                 the VP designated for the test.                          +

                 Before starting a test, a manager-station must first     +
                 obtain 'ownership' of the entry in the ifTestTable for   +
                 the interface to be tested (follow procedure defined in  +
                 RFC 1573).  Once the manager-station obtains ownership,  +
                 a loopback test for a given interface can be invoked by  +
                 first setting up parameters necessary for the loopback   +
                 test (e.g., p=1), and then setting the value of          +
                 'ifTestType' in the ifTestTable equal to                 +





          Expires XX                                           [Page 71]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 'atmLoopbackVPe2e'.  This will cause the                 +
                 atmLoopbackVPe2e test to be invoked on the VP with       +
                 VPI=1.                                                   +

                 After invoking a loopback test, wait for the test        +
                 completion by polling for the object 'ifTestResult'.  A  +
                 value of 'inProgress(3)' will result if the test is      +
                 still in progress.  Once the test is completed, the      +
                 object 'ifTestResult' will have a value of 'success(2)'  +
                 if the loopback OAM cell returned to the originator of   +
                 the test within 5 seconds, if not a value of             +
                 'failed(7)' will result.  If the ATM system does not     +
                 support this type of loopback test, then a value of      +
                 'notSupported(4)' will be provided.  Other possible      +
                 values for the 'ifTestResult' object are                 +
                 'unAbleToRun(5)' and 'aborted(6)'."                      +
               ::= { atmLoopbackTestTypes 1 }                             +


          atmLoopbackVCe2e  OBJECT-IDENTITY                               +
               STATUS       current                                       +
               DESCRIPTION                                                +
                 "This is an end-to-end loopback test performed on a      +
                 designated VC (Virtual Channel).  To perform this test   +
                 an end-to-end loopback OAM cell is inserted at one of    +
                 the end-points of the designated VC connection (e.g.,    +
                 at a host) via PTI=5, travels to the other end-point of  +
                 the VC connection, and then loops back to the            +
                 originating end-point on the designated VC.  Success is  +
                 achieved if the loopback OAM cell returns to the         +
                 originating end-point within 5 seconds, otherwise, the   +
                 test fails.                                              +

                 The manager-station can perform a loopback test by       +
                 making use of the Interface Test Table (ifTestTable)     +
                 defined in RFC 1573.  In order to run this test the      +
                 object type 'ifTestType' in the ifTestTable shall be     +
                 set to (atmLoopbackVCe2e.p.c) , where the subidentifier  +
                 'p' is the instance of the atmVclVpi corresponding to    +
                 the VC designated for the test and the subidentifier     +
                 'c' is the instance of the atmVclVci corresponding to    +
                 the VC designated for the test.                          +

                 Before starting a test, a manager-station must first     +
                 obtain 'ownership' of the entry in the ifTestTable for   +





          Expires XX                                           [Page 72]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 the interface to be tested (follow procedure defined in  +
                 RFC 1573).  Once the manager-station obtains ownership,  +
                 a loopback test for a given interface can be invoked by  +
                 first setting up parameters necessary for the loopback   +
                 test (e.g., p=1, c=33), and then setting the value of    +
                 'ifTestType' in the ifTestTable equal to                 +
                 'atmLoopbackVCe2e'.  This will cause the                 +
                 atmLoopbackVCe2e test to be invoked on the VC with       +
                 VPI=1 and VCI=33.                                        +

                 After invoking a loopback test, wait for the test        +
                 completion by polling for the object 'ifTestResult'.  A  +
                 value of 'inProgress(3)' will result if the test is      +
                 still in progress.  Once the test is completed, the      +
                 object 'ifTestResult' will have a value of 'success(2)'  +
                 if the loopback OAM cell returned to the originator of   +
                 the test within 5 seconds, if not a value of             +
                 'failed(7)' will result.  If the ATM system does not     +
                 support this type of loopback test, then a value of      +
                 'notSupported(4)' will be provided.  Other possible      +
                 values for the 'ifTestResult' object are                 +
                 'unAbleToRun(5)' and 'aborted(6)'."                      +
               ::= { atmLoopbackTestTypes 2 }                             +


          atmLoopbackVPSegment  OBJECT-IDENTITY                           +
               STATUS           current                                   +
               DESCRIPTION                                                +
                 "This is a loopback test performed on a designated       +
                 segment of a VP (Virtual Path).  To perform this test a  +
                 segment OAM cell is inserted at one of the segment       +
                 end-points of the designated VP connection (e.g., at a   +
                 host) via VCI=3, travels across the segment on the       +
                 designated VP to the device pre-configured as the        +
                 corresponding segment end-point, and then loops back to  +
                 the originating segment end-point on the designated VP.  +
                 Success is achieved if the loopback OAM cell returns to  +
                 the originating end-point within 5 seconds, otherwise,   +
                 the test fails.  In order to use the                     +
                 atmLoopbackVPSegment test, a segment must be defined by  +
                 setting up segment end-points using the                  +
                 atmVplGenSegmentEndPoint object from the                 +
                 atmVplGenTable.  The atmVplGenSegmentEndPoint is set to  +
                 isaVpSegmentEndPoint(1) for each segment end-point.      +
                 Note that this object is by default set to               +





          Expires XX                                           [Page 73]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 isaVpSegmentEndPoint(1) if the atmVplTable supports one  +
                 end of a UNI.  In such a case, a UNI VP loopback test    +
                 would be achieved when the atmLoopbackVPSegment test     +
                 was initiated over the UNI.                              +

                 The manager-station can perform a loopback test by       +
                 making use of the Interface Test Table (ifTestTable)     +
                 defined in RFC 1573.  In order to run this test the      +
                 object type 'ifTestType' in the ifTestTable shall be     +
                 set to (atmLoopbackVPSegment.p) , where the              +
                 subidentifier 'p' is the instance of the atmVplVpi       +
                 corresponding to the VP designated for the test.         +

                 Before starting a test, a manager-station must first     +
                 obtain 'ownership' of the entry in the ifTestTable for   +
                 the interface to be tested (follow procedure defined in  +
                 RFC 1573).  Once the manager-station obtains ownership,  +
                 a loopback test for a given interface can be invoked by  +
                 first setting up parameters necessary for the loopback   +
                 test (e.g., p=1), and then setting the value of          +
                 'ifTestType' in the ifTestTable equal to                 +
                 'atmLoopbackVPSegment'.  This will cause the             +
                 atmLoopbackVPSegment test to be invoked on the VP with   +
                 VPI=1.                                                   +

                 After invoking a loopback test, wait for the test        +
                 completion by polling for the object 'ifTestResult'.  A  +
                 value of 'inProgress(3)' will result if the test is      +
                 still in progress.  Once the test is completed, the      +
                 object 'ifTestResult' will have a value of 'success(2)'  +
                 if the loopback OAM cell returned to the originator of   +
                 the test within 5 seconds, if not a value of             +
                 'failed(7)' will result.  If the ATM system does not     +
                 support this type of loopback test, then a value of      +
                 'notSupported(4)' will be provided.  Other possible      +
                 values for the 'ifTestResult' object are                 +
                 'unAbleToRun(5)' and 'aborted(6)'."                      +
               ::= { atmLoopbackTestTypes 3 }                             +


          atmLoopbackVCSegment  OBJECT-IDENTITY                           +
               STATUS           current                                   +
               DESCRIPTION                                                +
                 "This is a loopback test performed on a designated       +
                 segment of a VC (Virtual Channel).  To perform this      +





          Expires XX                                           [Page 74]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 test a segment OAM cell is inserted at one of the        +
                 segment end-points of the designated VC connection       +
                 (e.g., at a host) via PTI=4, travels across the segment  +
                 on the designated VC to the device pre-configured as     +
                 the corresponding segment end-point, and then loops      +
                 back to the originating segment end-point on the         +
                 designated VC.  Success is achieved if the loopback OAM  +
                 cell returns to the originating end-point within 5       +
                 seconds, otherwise, the test fails.  In order to use     +
                 the atmLoopbackVCSegment test, a segment must be         +
                 defined by setting up segment end-points using the       +
                 atmVclGenSegmentEndPoint object from the                 +
                 atmVclGenTable.  The atmVclGenSegmentEndPoint is set to  +
                 isaVcSegmentEndPoint(1) for each segment end-point.      +
                 Note that this object is by default set to               +
                 isaVcSegmentEndPoint(1) if the atmVclTable supports one  +
                 end of a UNI.  In such a case, a UNI VC loopback test    +
                 would be achieved when the atmLoopbackVCSegment test     +
                 was initiated over the UNI.                              +


                 The manager-station can perform a loopback test by       +
                 making use of the Interface Test Table (ifTestTable)     +
                 defined in RFC 1573.  In order to run this test the      +
                 object type 'ifTestType' in the ifTestTable shall be     +
                 set to (atmLoopbackVCSegment.p.c) , where the            +
                 subidentifier 'p' is the instance of the atmVclVpi       +
                 corresponding to the VP designated for the test and the  +
                 subidentifier 'c' is the instance of the atmVclVci       +
                 corresponding to the VC designated for the test.         +

                 Before starting a test, a manager-station must first     +
                 obtain 'ownership' of the entry in the ifTestTable for   +
                 the interface to be tested (follow procedure defined in  +
                 RFC 1573).  Once the manager-station obtains ownership,  +
                 a loopback test for a given interface can be invoked by  +
                 first setting up parameters necessary for the loopback   +
                 test (e.g., p=1, c=33), and then setting the value of    +
                 'ifTestType' in the ifTestTable equal to                 +
                 'atmLoopbackVCSegment'.  This will cause the             +
                 atmLoopbackVCSegment test to be invoked on the VC with   +
                 VPI=1 and VCI=33.                                        +

                 After invoking a loopback test, wait for the test        +
                 completion by polling for the object 'ifTestResult'.  A  +





          Expires XX                                           [Page 75]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 value of 'inProgress(3)' will result if the test is      +
                 still in progress.  Once the test is completed, the      +
                 object 'ifTestResult' will have a value of 'success(2)'  +
                 if the loopback OAM cell returned to the originator of   +
                 the test within 5 seconds, if not a value of             +
                 'failed(7)' will result.  If the ATM system does not     +
                 support this type of loopback test, then a value of      +
                 'notSupported(4)' will be provided.  Other possible      +
                 values for the 'ifTestResult' object are                 +
                 'unAbleToRun(5)' and 'aborted(6)'."                      +
               ::= { atmLoopbackTestTypes 4 }                             +


          atmLoopbackVPLocationId  OBJECT-IDENTITY                        +
               STATUS              current                                +
               DESCRIPTION                                                +
                 "This is a loopback test performed on a portion of a     +
                 designated VP segment.  To perform this test a loopback  +
                 OAM cell is inserted at a connection point of the        +
                 designated VP connection (e.g., the end-point or a       +
                 tandem point) with a value inserted in the Location      +
                 Identifier ID field of the OAM cell that corresponds to  +
                 the ATM device where the cell is to be looped back.      +
                 The loopback cell then travels through the VP            +
                 connection until it reaches the designated ATM device,   +
                 where it is looped back to the loopback cell insertion   +
                 point on the designated VP.  Success is achieved if the  +
                 loopback OAM cell returns to the originating point of    +
                 insertion within 5 seconds, otherwise, the test fails.   +

                 The manager-station can perform a loopback test by       +
                 making use of the Interface Test Table (ifTestTable)     +
                 defined in RFC 1573.  In order to run this test the      +
                 object type 'ifTestType' in the ifTestTable shall be     +
                 set to (atmLoopbackVPLocationId.p.d) , where the         +
                 subidentifier 'p' is the instance of the atmVplVpi       +
                 corresponding to the VP designated for the test and 'd'  +
                 consists of 16 subidentifiers, where each subidentifier  +
                 corresponds to the value of a subsequent octet of the    +
                 Loopback Location ID defined in I.610[21] starting with  +
                 the most significant octet.                              +

                 Before starting a test, a manager-station must first     +
                 obtain 'ownership' of the entry in the ifTestTable for   +
                 the interface to be tested (follow procedure defined in  +





          Expires XX                                           [Page 76]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 RFC 1573).  Once the manager-station obtains ownership,  +
                 a loopback test for a given interface can be invoked by  +
                 first setting up parameters necessary for the loopback   +
                 test (e.g., p=1, d=AAAABBBBCCCCDDDD), and then setting   +
                 the value of 'ifTestType' in the ifTestTable equal to    +
                 'atmLoopbackVPLocationId'.  This will cause the          +
                 atmLoopbackVPLocationId test to be invoked on the VP     +
                 with VPI=1 and looped back at loopback location ID=      +
                 AAAABBBBCCCCDDDD.                                        +

                 After invoking a loopback test, wait for the test        +
                 completion by polling for the object 'ifTestResult'.  A  +
                 value of 'inProgress(3)' will result if the test is      +
                 still in progress.  Once the test is completed, the      +
                 object 'ifTestResult' will have a value of 'success(2)'  +
                 if the loopback OAM cell returned to the originator of   +
                 the test within 5 seconds, if not a value of             +
                 'failed(7)' will result.  If the ATM system does not     +
                 support this type of loopback test, then a value of      +
                 'notSupported(4)' will be provided.  Other possible      +
                 values for the 'ifTestResult' object are                 +
                 'unAbleToRun(5)' and 'aborted(6)'."                      +
               ::= { atmLoopbackTestTypes 5 }                             +


          atmLoopbackVCLocationId  OBJECT-IDENTITY                        +
               STATUS              current                                +
               DESCRIPTION                                                +
                 "This is a loopback test performed on a portion of a     +
                 designated VC Segment.  To perform this test a loopback  +
                 OAM cell is inserted at a connection point of the        +
                 designated VC connection (e.g., the end-point or a       +
                 tandem point) with a value inserted in the Location      +
                 Identifier ID field of the OAM cell that corresponds to  +
                 the ATM device where the cell is to be looped back.      +
                 The loopback cell then travels through the VC            +
                 connection until it reaches the designated ATM device,   +
                 where it is looped back to the loopback cell insertion   +
                 point on the designated VC.  Success is achieved if the  +
                 loopback OAM cell returns to the originating point of    +
                 insertion within 5 seconds, otherwise, the test fails.   +

                 The manager-station can perform a loopback test by       +
                 making use of the Interface Test Table (ifTestTable)     +
                 defined in RFC 1573.  In order to run this test the      +





          Expires XX                                           [Page 77]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 object type 'ifTestType' in the ifTestTable shall be     +
                 set to (atmLoopbackVCLocationId.p.c.d) , where the       +
                 subidentifier 'p' is the instance of the atmVclVpi       +
                 corresponding to the VC designated for the test, the     +
                 subidentifier 'c' is the instance of the atmVclVci       +
                 corresponding to the VC designated for the test, and     +
                 'd' consists of 16 subidentifiers, where each            +
                 subidentifier corresponds to the value of a subsequent   +
                 octet of the Loopback Location ID defined in I.610[21]   +
                 starting with the most significant octet.                +

                 Before starting a test, a manager-station must first     +
                 obtain 'ownership' of the entry in the ifTestTable for   +
                 the interface to be tested (follow procedure defined in  +
                 RFC 1573).  Once the manager-station obtains ownership,  +
                 a loopback test for a given interface can be invoked by  +
                 first setting up parameters necessary for the loopback   +
                 test (e.g., p=1, c=33, d= AAAABBBBCCCCDDDD), and then    +
                 setting the value of 'ifTestType' in the ifTestTable     +
                 equal to 'atmLoopbackVPLocationId'.  This will cause     +
                 the atmLoopbackVPLocationId test to be invoked on the    +
                 VC with VPI=1/VCI=33 and looped back at loopback         +
                 location ID= AAAABBBBCCCCDDDD.                           +

                 After invoking a loopback test, wait for the test        +
                 completion by polling for the object 'ifTestResult'.  A  +
                 value of 'inProgress(3)' will result if the test is      +
                 still in progress.  Once the test is completed, the      +
                 object 'ifTestResult' will have a value of 'success(2)'  +
                 if the loopback OAM cell returned to the originator of   +
                 the test within 5 seconds, if not a value of             +
                 'failed(7)' will result.  If the ATM system does not     +
                 support this type of loopback test, then a value of      +
                 'notSupported(4)' will be provided.  Other possible      +
                 values for the 'ifTestResult' object are                 +
                 'unAbleToRun(5)' and 'aborted(6)'."                      +
               ::= { atmLoopbackTestTypes 6 }                             +

          atmLoopbackVpServcInternal  OBJECT-IDENTITY                     +
               STATUS              current                                +
               DESCRIPTION                                                +
                 "This is a loopback test that the manager requests an    +
                 agent to perform over the managed resource's internal    +
                 portion of a designated VP (i.e., between the ingress    +
                 and egress interfaces of the VP connection).  The agent  +





          Expires XX                                           [Page 78]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 is provided with the Ingress Interface, Ingress VPI,     +
                 Egress Interface, and Egress VPI in order to run this    +
                 internal test.  This test may be useful in proxy         +
                 situations where the proxy agent represents a network.   +
                 Implementations of this test may be specific to the      +
                 managed resource.  One implemenation in a managed        +
                 network may be as follows, the managed network inserts   +
                 a segment loopback OAM cell at the network internal      +
                 segment end-point (corresponding to the ingress          +
                 connection point) for the designated VP connection.      +
                 The loopback cell then travels through the network's     +
                 portion of the VP connection until it reaches the        +
                 networks connection point to the egress, where it is     +
                 looped back to the loopback to the network's cell        +
                 insertion point on the designated VP.  Success is        +
                 achieved if the loopback OAM cell returns to the         +
                 originating internal network segment end-point within 5  +
                 seconds, otherwise, the test fails.                      +

                 The manager-station can perform a loopback test by       +
                 making use of the Interface Test Table (ifTestTable)     +
                 defined in RFC 1573.  In order to run this test the      +
                 object type 'ifTestType' in the ifTestTable shall be     +
                 set to (atmLoopbackVpServcInternal.pi.ie.pe) , where     +
                 the subidentifier 'pi' is the instance of the atmVplVpi  +
                 for the ingress corresponding to the VP designated for   +
                 the test, the subidentifier 'ie' is the instance of the  +
                 ifIndex for the egress corresponding to the VP           +
                 designated for the test, and 'pe' is the instance of     +
                 the atmVplVpi corresponding to the egress for the VP     +
                 designated for this test.                                +

                 Before starting a test, a manager-station must first     +
                 obtain 'ownership' of the entry in the ifTestTable for   +
                 the interface to be tested (follow procedure defined in  +
                 RFC 1573).  Once the manager-station obtains ownership,  +
                 a request is sent to the network to initiate the         +
                 network loopback test on the ingress interface           +
                 (ifIndex=2) along with the necessary parameters (e.g.,   +
                 pi=1, ie=4, pe=2), and then setting the value of         +
                 'ifTestType.2' in the ifTestTable equal to               +
                 'atmLoopbackVpServcInternal'.  This will cause the       +
                 atmLoopbackVpServcInternal test to be invoked on the     +
                 network's internal section of the VP between the         +
                 ingress interface (ifIndex=2) with VPI=1 and the egress  +





          Expires XX                                           [Page 79]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 interface with ifIndex=4 and VPI=2.                      +

                 After invoking a loopback test, wait for the test        +
                 completion by polling for the object 'ifTestResult'.  A  +
                 value of 'inProgress(3)' will result if the test is      +
                 still in progress.  Once the test is completed, the      +
                 object 'ifTestResult' will have a value of 'success(2)'  +
                 if the loopback OAM cell returned to the originator of   +
                 the test within 5 seconds, if not a value of             +
                 'failed(7)' will result.  If the ATM system does not     +
                 support this type of loopback test, then a value of      +
                 'notSupported(4)' will be provided.  Other possible      +
                 values for the 'ifTestResult' object are                 +
                 'unAbleToRun(5)' and 'aborted(6)'."                      +
               ::= { atmLoopbackTestTypes 7 }                             +

          atmLoopbackVcServcInternal  OBJECT-IDENTITY                     +
               STATUS              current                                +
               DESCRIPTION                                                +
                 "This is a loopback test that the manager requests an    +
                 agent to perform over the managed resource's internal    +
                 portion of a designated VC (i.e., between the ingress    +
                 and egress interfaces of the VC connection).  The agent  +
                 is provided with the Ingress Interface, Ingress VPI,     +
                 Ingress VCI, Egress Interface, Egress VPI, and Egress    +
                 VCI in order to run this internal test.  This test may   +
                 be useful in proxy situations where the proxy agent      +
                 represents a network.  Implementations of this test may  +
                 be specific to the managed resource.  One implemenation  +
                 in a managed network may be as follows, the managed      +
                 network inserts a segment loopback OAM cell at the       +
                 network internal segment end-point (corresponding to     +
                 the ingress connection point) for the designated VC      +
                 connection.  The loopback cell then travels through the  +
                 network's portion of the VC connection until it reaches  +
                 the networks connection point to the egress, where it    +
                 is looped back to the loopback to the network's cell     +
                 insertion point on the designated VC.  Success is        +
                 achieved if the loopback OAM cell returns to the         +
                 originating internal network segment end-point within 5  +
                 seconds, otherwise, the test fails.                      +

                 The manager-station can perform a loopback test by       +
                 making use of the Interface Test Table (ifTestTable)     +
                 defined in RFC 1573.  In order to run this test the      +





          Expires XX                                           [Page 80]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 object type 'ifTestType' in the ifTestTable shall be     +
                 set to (atmLoopbackVcServcInternal.pi.ci.ie.pe.ce) ,     +
                 where the subidentifier 'pi' is the instance of the      +
                 atmVclVpi for the ingress corresponding to the VC        +
                 designated for the test, the subidentifier 'ci' is the   +
                 instance of the atmVclVci for the ingress corresponding  +
                 to the VC designated for the test, the subidentifier     +
                 'ie' is the instance of the ifIndex for the egress       +
                 corresponding to the VC designated for the test, 'pe'    +
                 is the instance of the atmVclVpi corresponding to the    +
                 egress for the VC designated for this test, and 'ce' is  +
                 the instance of the atmVclVci corresponding to the       +
                 egress for the VC designated for this test.              +

                 Before starting a test, a manager-station must first     +
                 obtain 'ownership' of the entry in the ifTestTable for   +
                 the interface to be tested (follow procedure defined in  +
                 RFC 1573).  Once the manager-station obtains ownership,  +
                 a request is sent to the network to initiate the         +
                 network loopback test on the ingress interface           +
                 (ifIndex=2) along with the necessary parameters (e.g.,   +
                 pi=1, ci=33, ie=4, pe=2, ce=41), and then setting the    +
                 value of 'ifTestType.2' in the ifTestTable equal to      +
                 'atmLoopbackVcServcInternal'.  This will cause the       +
                 atmLoopbackVcServcInternal test to be invoked on the     +
                 network's internal section of the VC between the         +
                 ingress interface (ifIndex=2) with VPI=1/VCI=33 and the  +
                 egress interface with ifIndex=4 and VPI=2/VCI=41.        +

                 After invoking a loopback test, wait for the test        +
                 completion by polling for the object 'ifTestResult'.  A  +
                 value of 'inProgress(3)' will result if the test is      +
                 still in progress.  Once the test is completed, the      +
                 object 'ifTestResult' will have a value of 'success(2)'  +
                 if the loopback OAM cell returned to the originator of   +
                 the test within 5 seconds, if not a value of             +
                 'failed(7)' will result.  If the ATM system does not     +
                 support this type of loopback test, then a value of      +
                 'notSupported(4)' will be provided.  Other possible      +
                 values for the 'ifTestResult' object are                 +
                 'unAbleToRun(5)' and 'aborted(6)'."                      +
               ::= { atmLoopbackTestTypes 8 }                             +








          Expires XX                                           [Page 81]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          -- ************************************************             +

          -- Conformance Information                                      +

          atm2MIBConformance   OBJECT IDENTIFIER ::= {atm2MIB 2}          +

          atm2MIBGroups        OBJECT IDENTIFIER                          +
                           ::= {atm2MIBConformance 1}                     +

          atm2MIBCompliances   OBJECT IDENTIFIER                          +
                           ::= {atm2MIBConformance 2}                     +

          -- Compliance Statements                                        +

          atm2MIBCompliance   MODULE-COMPLIANCE                           +
               STATUS         current                                     +
               DESCRIPTION                                                +
                 "The compliance statement for SNMP entities which        +
                 represent ATM interfaces.  The compliance statements     +
                 are used to determine if a particular group or object    +
                 applies to hosts, networks/switches, or both."           +

               MODULE  -- this module                                     +

                 MANDATORY-GROUPS  { atmSwitchServcHostGroup }            |

          -- Objects in the ATM Switch/Service/Host Group                 |

          OBJECT      atmVclConnType
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required.  This object is
                 required for hosts that support SVCs and PVCs for ATM."

          OBJECT      atmVclStatCellIns
          DESCRIPTION
                   "This object is mandatory for systems that are         |
                 supporting per VCC counters."                            |

          OBJECT      atmVclStatCellOuts
          DESCRIPTION
                   "This object is mandatory for systems that are         |
                 supporting per VCC counters."                            |

          OBJECT      atmVplStatCellIns





          Expires XX                                           [Page 82]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          DESCRIPTION
                   "This object is mandatory for systems that are         |
                 supporting per VPC counters."                            |

          OBJECT      atmVplStatCellOuts
          DESCRIPTION
                   "This object is mandatory for systems that are         |
                 supporting per VPC counters."                            |

          OBJECT      atmVplLogicalPortDef                                +
          MIN-ACCESS  read-only                                           +
          DESCRIPTION                                                     +
                   "This object is mandatory for systems support ATM      +
                 Logical Port interfaces."                                +


          -- The ATM Switch/Service/Host SVC Group                        |

          GROUP      atmSwitchServcHostSVCGroup                           |
          DESCRIPTION
                   "This group is mandatory for a Switch/Service/Host     |
                 that                                                     |
                 implements ATM interfaces supporting SVCs."

          OBJECT      atmSigEntityRole                                    |
          MIN-ACCESS  read-only
          DESCRIPTION
            "Write access is not required"

          OBJECT      atmSigSuite                                         |
          MIN-ACCESS  read-only
          DESCRIPTION
            "Write access is not required"


          -- The ATM Switch/Service Group                                 |

          GROUP      atmSwitchServcGroup                                  |
          DESCRIPTION
                   "This group is mandatory for a Switch/Service that     |
                 implements ATM interfaces."                              |

          OBJECT      atmIfAdminAddrRowStatus
          MIN-ACCESS  read-only
          DESCRIPTION





          Expires XX                                           [Page 83]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                   "Write access is not required, and only one of the
                 six enumerated values for the RowStatus textual
                 convention need be supported, specifically: active(1)."


          -- The ATM Switch/Service SVC Group                             +

          GROUP      atmSwitchServcSVCGroup                               |
          DESCRIPTION
                   "This group is mandatory for a Switch/Service that     |
                 implements ATM interfaces supporting Switched Virtual    |
                 Connections (SVCs)."                                     |

          OBJECT      atmSigSupportClgPtyNumDel                           |
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigSupportClgPtySubAddr                          |
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigSupportCldPtySubAddr                          |
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigSupportHiLyrInfo                              |
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigSupportLoLyrInfo                              |
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigSupportRepeatInd                              |
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigSupportAALInfo                                |
          MIN-ACCESS  read-only





          Expires XX                                           [Page 84]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigSupportPrefCarrier                            |
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSvcVpCrossConnectAdminStatus                     +
          MIN-ACCESS  read-only                                           +
          DESCRIPTION                                                     +
            "Write access is not required"                                +

          OBJECT      atmSvcVcCrossConnectAdminStatus                     +
          MIN-ACCESS  read-only                                           +
          DESCRIPTION                                                     +
            "Write access is not required"                                +


          -- The ATM Host Group                                           +

          GROUP      atmHOSTGroup
          DESCRIPTION
                   "This group is mandatory for a Host that implements
                 ATM interfaces."

          OBJECT      atmVclAddrBindAddr                                  |
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmVclAddrBindRowStatus                             |
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required, and only one of the     |
                 six enumerated values for the RowStatus textual          |
                 convention need be supported, specifically: active(1)."  |


          -- The ATM Host SVC Group                                       -

          GROUP      atmHOSTSigGroup
          DESCRIPTION
                   "This group is mandatory for a Host that implements    |
                 ATM SVCs.  The MIN-ACCESS of each Descriptor in this     |





          Expires XX                                           [Page 85]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 group should be read-create for PVCs and read-only for   |
                 SVCs."                                                   |

          OBJECT      atmVclReceiveSigDescrIndex                          |
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmVclTransmitSigDescrIndex                         +
          MIN-ACCESS  read-only                                           +
          DESCRIPTION                                                     +
                   "Write access is not required."                        +

          OBJECT      atmSigDescrParamAalType
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamAalMode
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamAalSscsType
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBhliType
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBhliInfo
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBbcClass                            +
          MIN-ACCESS  read-only                                           +
          DESCRIPTION                                                     +
                   "Write access is not required."                        +

          OBJECT      atmSigDescrParamBbcTraffic                          +
          MIN-ACCESS  read-only                                           +





          Expires XX                                           [Page 86]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          DESCRIPTION                                                     +
                   "Write access is not required."                        +

          OBJECT      atmSigDescrParamBbcTiming                           +
          MIN-ACCESS  read-only                                           +
          DESCRIPTION                                                     +
                   "Write access is not required."                        +

          OBJECT      atmSigDescrParamBbcClipping                         +
          MIN-ACCESS  read-only                                           +
          DESCRIPTION                                                     +
                   "Write access is not required."                        +

          OBJECT      atmSigDescrParamBbcConnConf                         +
          MIN-ACCESS  read-only                                           +
          DESCRIPTION                                                     +
                   "Write access is not required."                        +

          OBJECT      atmSigDescrParamBlliLayer2
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBlliLayer3
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBlliPktSize
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBlliSnapId
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBlliOuiPid
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamRowStatus
          MIN-ACCESS  read-only





          Expires XX                                           [Page 87]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          DESCRIPTION
                   "Write access is not required, and only one of the
                 six enumerated values for the RowStatus textual
                 convention need be supported, specifically: active(1)."


          -- The ATM Loopback Test Group                                  +

          GROUP      atmLoopbackGroup                                     +
          DESCRIPTION                                                     +
                   "This group is mandatory for those interfaces which    +
                 implement ATM loopback tests."                           +

          OBJECT      atmLoopbackLocID                                    +
          MIN-ACCESS  read-only                                           +
          DESCRIPTION                                                     +
            "Write access is not required"                                +

          OBJECT      atmLoopbackSrcID                                    +
          MIN-ACCESS  read-only                                           +
          DESCRIPTION                                                     +
            "Write access is not required"                                +

          OBJECT      atmVplGenSegmentEndPoint                            +
          MIN-ACCESS  read-only                                           +
          DESCRIPTION                                                     +
                   "Write access is not required.  This object is         +
                 mandatory for systems that are supporting ATM loopback   +
                 tests."                                                  +

          OBJECT      atmVclGenSegmentEndPoint                            +
          MIN-ACCESS  read-only                                           +
          DESCRIPTION                                                     +
                   "Write access is not required.  This object is         +
                 mandatory for systems that are supporting ATM loopback   +
                 tests."                                                  +



                      ::= { atm2MIBCompliances 1 }                        +

          -- **********************************************               +

          -- Units of Conformance                                         +






          Expires XX                                           [Page 88]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          atmSwitchServcHostGroup     OBJECT-GROUP                        |

                 OBJECTS {
                      atmVclConnType,
                      atmVclStatCellIns,
                      atmVclStatCellOuts,
                      atmVplStatCellIns,
                      atmVplStatCellOuts,                                 |
                      atmVplLogicalPortDef,                               |
                      atmVplLogicalPortIndex}                             |
                 STATUS    current
                 DESCRIPTION
                   "A collection of objects providing information
                    for a Switch/Service/Host that implements             |
                    ATM interfaces."
                 ::= { atm2MIBGroups 1 }


          atmSwitchServcHostSVCGroup     OBJECT-GROUP                     |

                 OBJECTS {
                      atmSigEntityRole,                                   |
                      atmSigSuite,                                        |
                      atmSigType,                                         |
                      atmSigSSCOPConEvents,                               |
                      atmSigSSCOPErrdPdus,                                |
                      atmSigSetupAttempts,                                |
                      atmSigUnavailRoutes,                                |
                      atmSigUnavailResrcs,                                |
                      atmSigCldPrtyProblems,                              |
                      atmSigMsgErrors,                                    |
                      atmSigTimerExpireds,                                |
                      atmSigRestarts,                                     |
                      atmSigInEstabls,                                    |
                      atmSigOutEstabls                                    |
                 }                                                        |
                 STATUS    current
                 DESCRIPTION
                   "A collection of objects providing information
                    for a Switch/Service/Host that implements             |
                    ATM SVCs."
                 ::= { atm2MIBGroups 2 }


          atmSwitchServcGroup     OBJECT-GROUP                            |





          Expires XX                                           [Page 89]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                 OBJECTS {
                      atmIfAdminAddrRowStatus}
                 STATUS    current
                 DESCRIPTION
                   "A collection of objects providing information
                    for a Switch/Service that implements ATM interfaces." |
                 ::= { atm2MIBGroups 3 }


          atmSwitchServcSVCGroup     OBJECT-GROUP                         |

                 OBJECTS {
                      atmSigSupportClgPtyNumDel,                          |
                      atmSigSupportClgPtySubAddr,                         |
                      atmSigSupportCldPtySubAddr,                         |
                      atmSigSupportHiLyrInfo,                             |
                      atmSigSupportLoLyrInfo,                             |
                      atmSigSupportRepeatInd,                             |
                      atmSigSupportAALInfo,                               |
                      atmSigSupportPrefCarrier,                           |
                      atmSvcVpCrossConnectAdminStatus,                    |
                      atmSvcVpCrossConnectOperStatus,                     |
                      atmSvcVpCrossConnectLastChange,                     |
                      atmSvcVcCrossConnectAdminStatus,                    |
                      atmSvcVcCrossConnectOperStatus,                     |
                      atmSvcVcCrossConnectLastChange}                     |
                 STATUS    current
                 DESCRIPTION
                   "A collection of objects providing information
                    for a Switch/Service that implements ATM SVCs."       |
                 ::= { atm2MIBGroups 4 }


          atmHOSTGroup     OBJECT-GROUP

                 OBJECTS {
                      atmVclAddrBindAddr,                                 |
                      atmVclAddrBindType,                                 |
                      atmVclAddrBindRowStatus,                            |
                      atmAddrVclAtmIfIndex,
                      atmAddrVclVpi,
                      atmAddrVclVci}
                 STATUS    current
                 DESCRIPTION
                   "A collection of objects providing information





          Expires XX                                           [Page 90]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                    for a Host that implements ATM interfaces."
                 ::= { atm2MIBGroups 5 }


          atmHOSTSigGroup     OBJECT-GROUP

                 OBJECTS {
                      atmVclReceiveSigDescrIndex,                         |
                      atmVclTransmitSigDescrIndex,                        |
                      atmSigDescrParamAalType,
                      atmSigDescrParamAalMode,
                      atmSigDescrParamAalSscsType,
                      atmSigDescrParamBhliType,
                      atmSigDescrParamBhliInfo,
                      atmSigDescrParamBbcClass,
                      atmSigDescrParamBbcTraffic,
                      atmSigDescrParamBbcTiming,
                      atmSigDescrParamBbcClipping,
                      atmSigDescrParamBbcConnConf,
                      atmSigDescrParamBlliLayer2,
                      atmSigDescrParamBlliLayer3,
                      atmSigDescrParamBlliPktSize,
                      atmSigDescrParamBlliSnapId,
                      atmSigDescrParamBlliOuiPid,
                      atmSigDescrParamRowStatus}
                 STATUS    current
                 DESCRIPTION
                   "A collection of objects providing information
                    for a Host that implements ATM interfaces
                    supporting Switched Virtual Connections (SVCs)."
                 ::= { atm2MIBGroups 6 }


          atmLoopbackGroup     OBJECT-GROUP                               +

                 OBJECTS {                                                +
                      atmLoopbackLocID,                                   +
                      atmLoopbackSrcID,                                   +
                      atmVplGenSegmentEndPoint,                           +
                      atmVclGenSegmentEndPoint                            +
                 }                                                        +
                 STATUS    current                                        +
                 DESCRIPTION                                              +
                          "A collection of objects providing information  +
                        for Loopback Tests."                              +





          Expires XX                                           [Page 91]





          draft        Supplemental ATM Management ObjectsSeptember 1995


                ::= { atm2MIBGroups 7 }                                   +



          END                                                             +













































          Expires XX                                           [Page 92]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          9.  Acknowledgments                                             +

          This document is a product of the AToMMIB Working Group.        +















































          Expires XX                                           [Page 93]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          10.  References                                                 +

          [1]  Ahmed, M., Tesink, K., "Definitions of Managed Objects     +
               for ATM Management Version 8.0 using SMIv2", RFC 1695,     +
               Bell Communications Research, August 1994.                 +

          [2]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,     +
               "Structure of Management Information for version 2 of the  +
               Simple Network Management Protocol (SNMPv2)", RFC 1442,    +
               SNMP Research,Inc., Hughes LAN Systems, Dover Beach        +
               Consulting, Inc., Carnegie Mellon University, April 1993.  +

          [3]  McCloghrie, K., and M. Rose, Editors, "Management          +
               Information Base for Network Management of TCP/IP-based    +
               internets: MIB-II", STD 17, RFC 1213, Hughes LAN Systems,  +
               Performance Systems International, March 1991.             +

          [4]  Galvin, J., and K. McCloghrie, "Administrative Model for   +
               version 2 of the Simple Network Management Protocol        +
               (SNMPv2)", RFC 1445, Trusted Information Systems, Hughes   +
               LAN Systems, April 1993.                                   +

          [5]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,     +
               "Protocol Operations for version 2 of the Simple Network   +
               Management Protocol (SNMPv2)", RFC 1448, SNMP              +
               Research,Inc., Hughes LAN Systems, Dover Beach             +
               Consulting, Inc., Carnegie Mellon University, April 1993.  +

          [6]  McCloghrie, K. and F. Kastenholz, "Evolution of the        +
               Interfaces Group of MIB-II", RFC 1573, Hughes LAN          +
               Systems, FTP Software, January 1994.                       +

          [7]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,     +
               "Textual Conventions for SNMPv2", RFC1443, SNMP            +
               Research,Inc., Hughes LAN Systems, Dover Beach             +
               Consulting, Inc., Carnegie Mellon University, April 1993.  +

          [8]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,     +
               "Conformance Statements for SNMPv2", RFC1444, SNMP         +
               Research,Inc., Hughes LAN Systems, Dover Beach             +
               Consulting, Inc., Carnegie Mellon University, April 1993.  +

          [9]  ATM Forum, "ATM User-Network Interface, Version 3.0 (UNI   +
               3.0) Specification, Part I", 1994.                         +






          Expires XX                                           [Page 94]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          [10] ATM Forum, "ATM User-Network Interface, Version 3.1 (UNI   +
               3.1) Specification, Part I", November 1994.                +

          [11] ITU-T Recommendation Q.2931, "Broadband Integrated         +
               Service Digital Network (B-ISDN) Digital Service           +
               Signalling System No.2 (DSS2) User-Network Interface       +
               (UNI) Layer 3 Specification for Basic Call/Connection      +
               Control", September 1994.                                  +

          [12] ATM Forum 94-0471R4, "P-NNI Draft Specification, P-NNI     +
               SWG", November 1994.                                       +

          [13] ITU-T Draft Recommendation Q.2110, "Broadband Integrated   +
               Service Digital Network (B-ISDN) - ATM Adaptation Layer -  +
               Service Specific Connection Oriented Protocol (SSCOP)      +
               Specification", 1994.                                      +

          [14] Newton, T., "Baseline Text For LAN Emulation Client        +
               Management", ATM Forum Contribution 94-0737R1, Digital     +
               Equipment Corporation, January 1995.                       +

          [15] Brown, T., Tesink, K., "Definitions of Managed Objects     +
               for SMDS Interfaces using SMIv2", RFC 1694, Bell           +
               Communications Research, August 1994.                      +

          [16] ATM Forum, "ATM User-Network Interface, Version 4.0 (UNI   +
               4.0) Specification, Part I", 1995.                         +

          [17] ITU-T Draft Recommendation Q.2961, "Broadband Integrated   +
               Service Digital Network (B-ISDN) Digital Service           +
               Signalling System No.2 (DSS2) Support of Additional        +
               Traffic Parameters", May 1995.                             +

          [18] ITU-T Draft Recommendation Q.2971, "Broadband Integrated   +
               Service Digital Network (B-ISDN) Digital Service           +
               Signalling System No.2 (DSS2) User Network Interface       +
               Layer 3 Specification for Point-to-multipoint              +
               Call/connection Control", May 1995.                        +

          [19] ATM Forum, "Interim Inter-switch Signaling Protocol        +
               (IISP)Specification, Version 1.0", af-pnni-0026.000,       +
               December 1994.                                             +

          [20] ATM Forum B-ICI Recommendation, - Text to be provided      +






          Expires XX                                           [Page 95]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          [21] ITU-T Recommendation I.610, "Broadband Integrated Service  +
               Digital Network (B-ISDN) Operation and Maintenance         +
               Principles and Functions", July 1995.                      +















































          Expires XX                                           [Page 96]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          11.  Security Considerations

          Security issues are not discussed in this memo.


          12.  Authors' Addresses

                            Faye Ly
                            BayNetworks Communications, Inc.
                            4401 Great America Pkwy
                            Santa Clara, CA 95052
                            Phone: (415) 969-6728 ext.158                 |
                            EMail: faye@Baynetworks.COM

                            Michael Noto
                            Bell Communications Research
                            Room 1E-348
                            331 Newman Springs Road
                            P.O. Box 7020
                            Red Bank, NJ  07701-7020
                            Phone: (908) 758-5104
                            EMail: noto@cc.bellcore.com

                            Andrew Smith
                            BayNetworks Communications, Inc.
                            4401 Great America Pkwy
                            Santa Clara, CA 95052
                            Phone: (408) 764-1574
                            EMail: asmith@Baynetworks.COM

                            Kaj Tesink
                            Bell Communications Research
                            Room 1A-427
                            331 Newman Springs Road
                            P.O. Box 7020
                            Red Bank, NJ  07701-7020
                            Phone: (908) 758-5254
                            EMail: kaj@cc.bellcore.com












          Expires XX                                           [Page 97]





          draft        Supplemental ATM Management ObjectsSeptember 1995


          Table of Contents


          1 Status of this Memo ...................................    1
          2 Introduction ..........................................    2
          3 The SNMPv2 Network Management Framework ...............    2
          4 Object Definitions ....................................    3
          5 Overview ..............................................    3
          5.1 Background ..........................................    3
          5.2 Supported Functions .................................    4
          5.2.1 ATM Switch/Service/Host Support ...................    5
          5.2.1.1 ATM Switch/Service/Host Group ...................    5
          5.2.1.1.1 ATM VCL Statistics Table ......................    5
          5.2.1.1.2 ATM VPL Statistics Table ......................    5
          5.2.1.1.3 ATM Logical Port Interface ....................    5
          5.2.1.1.3.1 ATM Logical Port Interface Table ............    6
          5.2.1.2 ATM Switch/Service/Host SVC Group ...............    8
          5.2.1.2.1 ATM Interface Signalling Configuration ........    8
          5.2.1.2.2 SSCOP .........................................    8
          5.2.1.2.3 Unsupported Service Failures ..................    8
          5.2.1.2.4 ATM Signalling Layer Protocol Errors ..........    9
          5.2.1.2.5 UNI Signalling Sub-layer Statistics ...........    9
          5.2.1.2.6 Indexing of the ATM Signalling Table ..........    9
          5.2.2 ATM Switch/Service Support ........................   13
          5.2.2.1 ATM Switch/Service Group ........................   13
          5.2.2.1.1 ATM Interface Administrative  Address  Table
               ....................................................   13
          5.2.2.2 ATM Switch/Service SVC Group ....................   14
          5.2.2.2.1 ATM UNI SVC Information Element Support .......   14
          5.2.3 ATM Host Support ..................................   14
          5.2.3.1 ATM Host Group ..................................   14
          5.2.3.1.1 VCL Extension Table ...........................   14
          5.2.3.1.2 ATM VPI/VCI to Address Mapping Table ..........   15
          5.2.3.1.3 ATM Address to VPI/VCI Mapping Table ..........   15
          5.2.3.2 ATM Host SVC Group ..............................   15
          5.2.3.2.1 Signalling Descriptor Parameter Table .........   15
          5.2.4 ATM Testing Support ...............................   16
          5.2.4.1 ATM Loopback Testing Group ......................   16
          6 Valid Address Sets / Default Address ..................   20
          7 Configuration of VPLs, VCLs, and Cross-Connects .......   20
          8 Definitions ...........................................   21
          9 Acknowledgments .......................................   93
          10 References ...........................................   94
          11 Security Considerations ..............................   97
          12 Authors' Addresses ...................................   97





          Expires XX                                           [Page 98]





          draft        Supplemental ATM Management ObjectsSeptember 1995




















































          Expires XX                                           [Page 99]

