BCD=11z.  In discussions of the specifier usage, we could
A=0 identifying the b-CHAR7 data type
BCDEFGH=tuvwxyz containing the character
A=0 to identify this byte as a b-CHAR7.  The remaining
AB=10 identifying the object as a b-SINTEGER
CDEFGH=uvwxyz containing the actual number

AB=10 to specify a b-SINTEGER.  The remaining six bits
ABCDE=11100 specifying that this is a b-SINTEGER.
FGH=xyz containing a count of number of bytes to follow.

ABCDE=11100, identifying this as a b-LINTEGER, E=0,
ABCDE=11110 specifying the type as b-SBITSTR
FGH=xyz specifying the number of bytes
ABCDEFG=1111110 specifying the type as
H=z specifying the value

ABCDEFGH=11111110 specifying *EMPTY*
ABCDEF=111110 to specify the type b-XTRA
GH=yz to identify the particular p-XTRA item
GH=00 -- *XTRA0*
GH=01 -- *XTRA1*
GH=10 -- *XTRA2*
GH=11 -- *XTRA3*

ABCDEFGH=11111111

ABC=110 specifying that the object is
DEFGH=vwxyz specifying the particular type
A=s specifying the manner in which the size
BCDEFGH=tuvwxyz specifying the size, or
s=0 condition is used to indicate that the 7 bits contained
ABC=110 identifies this as a non-atomic object.
DEFGH=00001 specifies that it is a b-LBITSTR.  The standard
ABC=110 identifies this as a non-atomic type.
DEFGH=00010 specifies that the object is a b-STRUC.  Within
ABC=110 to identify a non-atomic object.  DEFGH=00101
ABC=110 to identify a non-atomic object.  DEFGH=00110
