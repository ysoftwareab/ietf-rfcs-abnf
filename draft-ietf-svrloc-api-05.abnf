config-file   =  line-list
line-list     =  line / line line-list
line          =  property-line / comment-line
comment-line  =  ( "#" / ";" ) 1*allchar newline
property-line =  property newline
property      =  tag "=" value-list
tag           =  prop / prop "." property
prop          =  1*char
value-list    =  value / value "," value-list
value         =  int / bool / value-list / string
int           =  1*DIGIT
bool          =  "true" / "false" / "TRUE" / "FALSE"
newline       =  CR / ( CRLF )
string        =  1*allchar
char          =  DIGIT / ALPHA / other
other         =  %x21-%x2f / %x3a-%x40 /
                       %x5b-%x60 / %7b-%7e
allchar       =  char / HT / SP / escape
escape        =  "\" HEXDIG HEXDIG
                       ; Used for SLP reserved characters


addr-list     =  addr / addr "," addr-list
addr          =  addrrep "(" scope-list ")"
addrrep       =  ipv4-addr / ipv6-addr / fqdn
ipv4-addr     =  1*3DIGIT 3( "." 1*3DIGIT )
ipv6-addr     =  64HEXDIGIT
fqdn          =  ALPHA / ALPHA *[ anum / "-" ] anum
anum          =  ALPHA / DIGIT
scope-list    =  scope / scope "," scope-list
scope         =  string
                                ; See grammar of Section 2.1
                                ; and [11].

ser-file      =  reg-list
reg-list      =  reg / reg reg-list
reg           =  creg / ser-reg
creg          =  comment-line ser-reg
comment-line  =  ( "#" / ";" ) 1*allchar newline
ser-reg       =  url-props [slist] attr-list newline
url-props     =  surl sep lang sep ltime sep [ type ]
sep           =  *WSP "," *WSP
surl          =  ;The registration's URL. See
                       ; [12] for syntax.
lang          =  2*3ALPHA [ "-" 1*ALPHA ]
                       ;RFC 1766 Language Tag see [10].
ltime         =  1*DIGIT
                       ; A positive 16-bit integer
                       ; giving the lifetime
                       ; of the registration.
type          =  string
                       ; The service type name, see [11]
                       ; and [12] for syntax.
slist         =  attr
                       ; Attribute definition with id "scopes"
                       ; and value list containing scope names.
                       ; See grammar of Section 2.1
                       ; and [11].
attr-list     =  attr-def / attr-def attr-list
attr-def      =  attr / keyword
keyword       =  attr-id
attr          =  attr-id assgn-op attr-val-list newline
assgn-op      =  *WSP "=" *WSP
attr-id       =  ;Attribute id, see [11] for syntax.
attr-val-list =  attr-val / attr-val sep attr-val-list
attr-val      =  ;Attribute value, see [11] for syntax.
char          =  DIGIT / ALPHA / other
                       ;'other' defined in section 2.1.
allchar       =  char / WSP


SLP_LIFETIME_DEFAULT = 10800,
SLP_LIFETIME_MAXIMUM = 65535
SLP_LAST_CALL                    = 1,
SLP_OK                           = 0,
SLP_LANGUAGE_NOT_SUPPORTED       = -1,
SLP_PARSE_ERROR                  = -2,
SLP_INVALID_REGISTRATION         = -3,
SLP_SCOPE_NOT_SUPPORTED          = -4,
SLP_AUTHENTICATION_ABSENT        = -6,
SLP_AUTHENTICATION_FAILED        = -7,
SLP_INVALID_UPDATE               = -9;
SLP_NOT_IMPLEMENTED              = -17,
SLP_BUFFER_OVERFLOW              = -18,
SLP_NETWORK_TIMED_OUT            = -19,
SLP_NETWORK_INIT_FAILED          = -20,
SLP_MEMORY_ALLOC_FAILED          = -21,
SLP_PARAMETER_BAD                = -22,
SLP_NETWORK_ERROR                = -23,
SLP_INTERNAL_SYSTEM_ERROR        = -24,
SLP_HANDLE_IN_USE                = -25,
SLP_TYPE_ERROR                   = -26

SLP_FALSE = 0,
SLP_TRUE = 1

err = SLPReg(slph,
                surl, SLP_LIFETIME_DEFAULT,
                pcScopeList, pcAttrs,
                errCallback, NULL);

err = SLPFindSrvs(slph,
                     pcSrvType, pcScopeList, pcFilter,
                     srvCallback, NULL);

errCode = SLPParseSrvURL(pcSrvURL, &pSrvURL);

err =
     SLPFindAttrs(slph,
                  surl,
                  pcScopeList, pcAttrFilter,
                  attrCallBack, NULL);

adv = ServiceLocationManager.getAdvertiser("en");

tr = TemplateRegistry.getTemplateRegistry();

loc = ServiceLocationManager.getLocator("en");

services =
      loc.findServices(new ServiceType("service:printer"),scopes,query);

