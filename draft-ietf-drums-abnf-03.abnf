Rule1 =/ Rule2
name =  elements

b    =  binary
     
d    =  decimal
     
x     =  hexadecimal

CR   =  %d13
     
CR   =  %x0D

CRLF =  %d13.10

command = "command string"

rulename = "abc"

rulename = %d97 %d9 %d99

rulename = %d97.98.99

foo =  %x61         ; a
     
bar =  %x62         ; b
     
mumble =  foo bar foo

oldrule =/ additional-alternatives

ruleset = alt1 / alt2
     
ruleset =/ alt3
     
ruleset =/ alt4 / alt5

ruleset = alt1 / alt2 / alt3 / alt4 / alt5

DIGIT     =  %x30-3A

DIGIT = "0" / "1" / "2" / "3" / "4" / "5" / "6" / "7" / "8"
rulelist       =  1*( rule / (*c-wsp c-nl) )
     
rule           =  rulename defined-as elements c-nl
                            ; continues if next line starts
                            ;  with white space
     
rulename       =  ALPHA *(ALPHA / DIGIT / "-")
     
defined-as     =  *c-wsp ("=" / "=/") *c-wsp
                            ; basic rules definition and
                            ;  incremental alternatives
     
elements       = alternation *c-wsp
     
c-wsp          =  WSP / (c-nl WSP)
     
c-nl           =  comment / CRLF
                            ; comment or newline
     
comment        =  ";" *(WSP / PCHAR) CRLF
     
alternation    =  concatenation
                       *(*c-wsp "/" *c-wsp concatenation)
     
concatenation  =  repetition *(1*c-wsp repetition)
     
repetition     =  [repeat] element
     
repeat         =  1*DIGIT / (*DIGIT "*" *DIGIT)
     
element        =  rulename / group / option /
                       char-val / num-val / prose-val
     
group          =  "(" *c-wsp alternation *c-wsp ")"
     
option         =  "[" *c-wsp alternation *c-wsp "]"
     
char-val       =  DQUOTE *PCHAR-NDQ DQUOTE
     
num-val        =  "%" (bin-val / dec-val / hex-val)
     
bin-val        =  "b" 1*BIT
                       *( ("." 1*BIT) / (":" 1*BIT) )
                            ; series of concatenated bit values
                            ; and/or series of ONEOF ranges
     
dec-val        =  "d" 1*DIGIT
                       *( ("." 1*DIGIT) / (":" 1*DIGIT) )
     
hex-val        =  "x" 1*HEXDIG
                       *( ("." 1*HEXDIG) / (":" 1*HEXDIG) )
     
prose-val      =  "<" *PCHAR-NRB ">"



ALPHA          =  %x41-5A / %x61-7A   ; A-Z / a-z
     
BIT            =  "0" / "1"
     
CHAR           =  %x00-7F
                            ; any US-ASCII character
     
CR             =  %x0D
                            ; carriage return
     
CRLF           =  CR LF
                            ; Internet standard newline
     
CTL            =  %x00-1F / %x7F
                            ; controls
     
DIGIT          =  %x30-39
                            ; 0-9
     
DQUOTE         =  %x22
                            ; " (Double Quote)
     
HEXDIG         =  DIGIT / "A" / "B" / "C" / "D" / "E" / "F"
     
HT             =  %x09
                            ; horizontal tab
     
LF             =  %x0A
                            ; linefeed
     
LWSP           =  *(WSP / CRLF WSP)
                            ; linear white space (past newline)
     
PCHAR          =  %x20-7E
                            ; printable characters
     
PCHAR-NRB      =  %x20-3D / %x3F-7E
                            ; PCHAR less > (No Right Bracket)
     
PCHAR-NDQ      =  %x20-21 / %x23-7E
                            ; PCHAR less " (No Double Quote)
     
SP             =  %x20
                            ; space
     
WSP            =  SP / HT
                            ; white space

