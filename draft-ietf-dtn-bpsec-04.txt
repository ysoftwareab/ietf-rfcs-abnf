



Delay-Tolerant Networking                                     E. Birrane
Internet-Draft                                               K. McKeever
Intended status: Standards Track                                 JHU/APL
Expires: September 13, 2017                               March 12, 2017


                 Bundle Protocol Security Specification
                        draft-ietf-dtn-bpsec-04

Abstract

   This document defines a security protocol providing end to end data
   integrity and confidentiality services for the Bundle Protocol.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 13, 2017.

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.






Birrane & McKeever     Expires September 13, 2017               [Page 1]

Internet-Draft   Bundle Protocol Security Specification       March 2017


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.1.  Motivation  . . . . . . . . . . . . . . . . . . . . . . .   3
     1.2.  Supported Security Services . . . . . . . . . . . . . . .   3
     1.3.  Specification Scope . . . . . . . . . . . . . . . . . . .   4
     1.4.  Related Documents . . . . . . . . . . . . . . . . . . . .   5
     1.5.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   5
   2.  Key Properties  . . . . . . . . . . . . . . . . . . . . . . .   6
     2.1.  Block-Level Granularity . . . . . . . . . . . . . . . . .   6
     2.2.  Multiple Security Sources . . . . . . . . . . . . . . . .   7
     2.3.  Mixed Security Policy . . . . . . . . . . . . . . . . . .   7
     2.4.  User-Selected Cipher Suites . . . . . . . . . . . . . . .   8
     2.5.  Deterministic Processing  . . . . . . . . . . . . . . . .   8
   3.  Security Blocks . . . . . . . . . . . . . . . . . . . . . . .   8
     3.1.  Block Definitions . . . . . . . . . . . . . . . . . . . .   9
     3.2.  Uniqueness  . . . . . . . . . . . . . . . . . . . . . . .   9
     3.3.  Target Multiplicity . . . . . . . . . . . . . . . . . . .  10
     3.4.  Target Identification . . . . . . . . . . . . . . . . . .  10
     3.5.  Block Representation  . . . . . . . . . . . . . . . . . .  11
     3.6.  Abstract Security Block . . . . . . . . . . . . . . . . .  11
     3.7.  Block Integrity Block . . . . . . . . . . . . . . . . . .  14
     3.8.  Block Confidentiality Block . . . . . . . . . . . . . . .  15
     3.9.  Block Interactions  . . . . . . . . . . . . . . . . . . .  16
     3.10. Parameters and Result Types . . . . . . . . . . . . . . .  17
     3.11. BSP Block Example . . . . . . . . . . . . . . . . . . . .  20
   4.  Canonical Forms . . . . . . . . . . . . . . . . . . . . . . .  22
     4.1.  Technical Notes . . . . . . . . . . . . . . . . . . . . .  22
     4.2.  Primary Block Canonicalization  . . . . . . . . . . . . .  23
     4.3.  Non-Primary-Block Canonicalization  . . . . . . . . . . .  23
   5.  Security Processing . . . . . . . . . . . . . . . . . . . . .  24
     5.1.  Bundles Received from Other Nodes . . . . . . . . . . . .  24
       5.1.1.  Receiving BCB Blocks  . . . . . . . . . . . . . . . .  24
       5.1.2.  Receiving BIB Blocks  . . . . . . . . . . . . . . . .  25
     5.2.  Bundle Fragmentation and Reassembly . . . . . . . . . . .  26
   6.  Key Management  . . . . . . . . . . . . . . . . . . . . . . .  26
   7.  Security Policy Considerations  . . . . . . . . . . . . . . .  26
   8.  Security Considerations . . . . . . . . . . . . . . . . . . .  27
     8.1.  Attacker Capabilities and Objectives  . . . . . . . . . .  28
     8.2.  Attacker Behaviors and BPSec Mitigations  . . . . . . . .  29
       8.2.1.  Eavesdropping Attacks . . . . . . . . . . . . . . . .  29
       8.2.2.  Modification Attacks  . . . . . . . . . . . . . . . .  29
       8.2.3.  Topology Attacks  . . . . . . . . . . . . . . . . . .  31
       8.2.4.  Message Injection . . . . . . . . . . . . . . . . . .  31
   9.  Cipher Suite Authorship Considerations  . . . . . . . . . . .  32
   10. Defining Other Security Blocks  . . . . . . . . . . . . . . .  33
   11. Conformance . . . . . . . . . . . . . . . . . . . . . . . . .  34
   12. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  34



Birrane & McKeever     Expires September 13, 2017               [Page 2]

Internet-Draft   Bundle Protocol Security Specification       March 2017


     12.1.  Bundle Block Types . . . . . . . . . . . . . . . . . . .  34
   13. References  . . . . . . . . . . . . . . . . . . . . . . . . .  34
     13.1.  Normative References . . . . . . . . . . . . . . . . . .  34
     13.2.  Informative References . . . . . . . . . . . . . . . . .  35
   Appendix A.  Acknowledgements . . . . . . . . . . . . . . . . . .  35
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  35

1.  Introduction

   This document defines security features for the Bundle Protocol (BP)
   [BPBIS].  This BP Security Specification (BPSec) is intended for use
   in Delay Tolerant Networks (DTNs) to provide end-to-end security
   services.

1.1.  Motivation

   The Bundle Protocol specification [BPBIS] defines DTN as referring to
   "a networking architecture providing communications in and/or through
   highly stressed environments" where "BP may be viewed as sitting at
   the application layer of some number of constituent networks, forming
   a store-carry-forward overlay network".  The term "stressed"
   environment refers to multiple challenging conditions including
   intermittent connectivity, large and/or variable delays, asymmetric
   data rates, and high bit error rates.

   There is a reasonable expectation that BP may be deployed in such a
   way that a portion of the network might become compromised, posing
   the usual security challenges related to confidentiality and
   integrity.  However, the stressed nature of the BP operating
   environment imposes unique requirements such that the usual security
   mechanisms to usual security challenges may not apply.  For example,
   the store-carry-forward nature of the network may require protecting
   data at rest while also preventing unauthorized consumption of
   critical resources such as storage space.  The heterogeneous nature
   of the networks comprising the BP overlay, and/or associated timing,
   might prevent the establishment of an end-to-end session to provide a
   context for a security service.  The partitionability of a DTN might
   prevent regular contact with a centralized security oracle (such as a
   certificate authority).

   An end-to-end security service is needed that operates in all of the
   environments where the BP operates.

1.2.  Supported Security Services

   BPSec provides end-to-end integrity and confidentiality services for
   BP bundles.




Birrane & McKeever     Expires September 13, 2017               [Page 3]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   Integrity services ensure data within a bundle are not changed.  Data
   changes may be caused by processing errors, environmental conditions,
   or intentional manipulation.  An integrity service is one that
   provides sufficient confidence to a data receiver that data has not
   changed since its value was last asserted.

   Confidentiality services ensure that only authorized receivers can
   view those data within a bundle identified as needing to be private
   amongst the data source and data receivers.  A confidentiality
   services is one that provides confidence to a data receiver that
   private data was not viewed by other nodes as the bundle traversed
   the DTN.

   NOTE: Hop-by-hop authentication is NOT a supported security service
   in this specification, for three reasons.

   1.  The term "hop-by-hop" is ambiguous in a BP overlay, as nodes that
       are adjacent in the overlay may not be adjacent in physical
       connectivity.  This condition is difficult or impossible to
       predict in the overlay and therefore makes the concept of hop-by-
       hop authentication difficult or impossible to enforce at the
       overlay.

   2.  Networks in which BPSec may be deployed may have a mixture of
       security-aware and not-security-aware nodes.  Hop-by-hop
       authentication cannot be deployed in a network if adjacent nodes
       in the network have different security capabilities.

   3.  Hop-by-hop authentication can be viewed as a special case of data
       integrity.  As such, a version of authentication can be achieved
       by using the integrity mechanisms defined in this specification.

1.3.  Specification Scope

   This document defines the security services provided by the BPSec.
   This includes the data specification for representing these services
   as BP extension blocks, and the rules for adding, removing, and
   processing these blocks at various points in the bundle's traversal
   of the DTN.

   BPSec applies only to those nodes that implement it, known as
   "security-aware" nodes.  There might be other nodes in the DTN that
   do not implement BPSec.  While all nodes in a BP overlay can exchange
   bundles, BPSec security operations can only happen at BPSec security-
   aware nodes.

   This specification does not address individual cipher suite
   implementations.  Different networking conditions and operational



Birrane & McKeever     Expires September 13, 2017               [Page 4]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   considerations require varying strengths of security mechanism such
   that mandating a cipher suite in this specification may result in too
   much security for some networks and too little security in others.
   The definition and enumeration of cipher suites is assumed to be
   undertaken in other, separate specification documents.

   This specification does not address the implementation of security
   policy and does not provide a security policy for the BPSec.  Similar
   to cipher suites, security policies are based on the nature and
   capabilities of individual networks and network operational concepts.
   This specification does provide policy considerations when building a
   security policy.

   This specification does not address how to combine the BPSec security
   blocks with other protocols, other BP extension blocks, or other best
   practices to achieve security in any particular network
   implementation.

1.4.  Related Documents

   This document is best read and understood within the context of the
   following other DTN documents:

   "Delay-Tolerant Networking Architecture" [RFC4838] defines the
   architecture for DTNs and identifies certain security assumptions
   made by existing Internet protocols that are not valid in a DTN.

   The Bundle Protocol [BPBIS] defines the format and processing of the
   bundles that both carry the data and the security services operating
   on those data.  This document also defines the extension block format
   used to capture BPSec security blocks.

   The Bundle Security Protocol [RFC6257] and Streamlined Bundle
   Security Protocol [SBSP] documents introduced the concepts of BP
   security blocks for security services in a DTN.  The BPSec is a
   continuation and refinement of these documents.

1.5.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   [RFC2119].

   This section defines terminology either unique to the BPSec or
   otherwise necessary for understanding the concepts defined in this
   specification.




Birrane & McKeever     Expires September 13, 2017               [Page 5]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   o  Forwarder - any node that transmits a bundle in the DTN.  The Node
      ID of the Bundle Protocol Agent (BPA) that sent the bundle on its
      most recent hop.

   o  Intermediate Receiver, Waypoint, or "Next Hop" - any node that
      receives a bundle from a Forwarder that is not the Destination.
      The Node ID of the BPA at any such node.

   o  Path - the ordered sequence of nodes through which a bundle passes
      on its way from Source to Destination.  The path is not
      necessarily known in advance by the bundle or any BPAs in the DTN.

   o  Security Block - a BPSec extension block in a bundle.

   o  Security Operation - the application of a security service to a
      security target, notated as OP(security service, security target).
      For example, OP(confidentiality, payload).  Every security
      operation in a bundle MUST be unique, meaning that a security
      service can only be applied to a security target once in a bundle.
      A security operation is implemented by a security block.

   o  Security Service - the security features supported by this
      specification: integrity and confidentiality.

   o  Security Source - a bundle node that adds a security block to a
      bundle.

   o  Security Target - the block within a bundle that receives a
      security-service as part of a security-operation.

   o  Source - the node which originates a bundle.  The Node ID of the
      BPA originating the bundle.

2.  Key Properties

   The application of security services in a DTN is a complex endeavor
   that must consider physical properties of the network, policies at
   each node, and various application security requirements.  This
   section identifies and defines the key properties guiding design
   decisions for the security services provided by this specification.

2.1.  Block-Level Granularity

   Security services within this specification MUST allow different
   blocks within a bundle to have different security services applied to
   them.  As such, each security block within a bundle MUST be
   associated with a specific security operation.




Birrane & McKeever     Expires September 13, 2017               [Page 6]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   Blocks within a bundle represent different types of information.  The
   primary block contains identification and routing information.  The
   payload block carries application data.  Extension blocks carry a
   variety of data that may augment or annotate the payload, or
   otherwise provide information necessary for the proper processing of
   a bundle along a path.  Therefore, applying a single level and type
   of security across an entire bundle fails to recognize that blocks in
   a bundle may represent different types of information with different
   security needs.

   For example, a payload block might be encrypted to protect its
   contents and an extension block containing summary information
   related to the payload might be integrity signed but unencrypted to
   provide waypoints access to payload-related data without providing
   access to the payload.

2.2.  Multiple Security Sources

   A bundle MAY have multiple security blocks and these blocks MAY have
   different security sources.

   The Bundle Protocol allows extension blocks to be added to a bundle
   at any time during its existence in the DTN.  When a waypoint adds a
   new extension block to a bundle, that extension block may have
   security services applied to it by that waypoint.  Similarly, a
   waypoint may add a security service to an existing extension block,
   consistent with its security policy.  For example, a node
   representing a boundary between a trusted part of the network and an
   untrusted part of the network may wish to apply payload encryption
   for bundles leaving the trusted portion of the network.

   When a waypoint adds a security service to the bundle, the waypoint
   is the security source for that service.  The security block(s) which
   represent that service in the bundle may need to record this security
   source as the bundle destination might need this information for
   processing.  For example, a destination node might interpret policy
   as it related to security blocks as a function of the security source
   for that block.

2.3.  Mixed Security Policy

   The security policy enforced by nodes in the DTN MAY differ.

   Some waypoints may not be security aware and will not be able to
   process security blocks.  Therefore, security blocks MUST have their
   processing flags set such that the block will be treated
   appropriately by non-security-aware waypoints




Birrane & McKeever     Expires September 13, 2017               [Page 7]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   Some waypoints will have security policies that require evaluating
   security services even if they are not the bundle destination or the
   final intended destination of the service.  For example, a waypoint
   may choose to verify an integrity service even though the waypoint is
   not the bundle destination and the integrity service will be needed
   by other node along the bundle's path.

   Some waypoints will determine, through policy, that they are the
   intended recipient of the security service and terminate the security
   service in the bundle.  For example, a gateway node may determine
   that, even though it is not the destination of the bundle, it should
   verify and remove a particular integrity service or attempt to
   decrypt a confidentiality service, before forwarding the bundle along
   its path.

   Some waypoints may understand security blocks but refuse to process
   them unless they are the bundle destination.

2.4.  User-Selected Cipher Suites

   The security services defined in this specification rely on a variety
   of cipher suites providing integrity signatures, cipher-text, and
   other information necessary to populate security blocks.  Users MAY
   select different cipher suites to implement security services.  For
   example, some users might prefer a SHA-256 based hash for integrity
   whereas other users may prefer a SHA-384 hash instead.  The security
   services defined in this specification MUST provide a mechanism for
   identifying what cipher suite has been used to populate a security
   block.

2.5.  Deterministic Processing

   Whenever a node determines that it must process more than one
   security block in a received bundle (either because the policy at a
   waypoint states that it should process security blocks or because the
   node is the bundle destination) the order in which security blocks
   are processed MUST be deterministic.  All nodes MUST impose this same
   deterministic processing order for all security blocks.  This
   specification provides determinism in the application and evaluation
   of security services, even when doing so results in a loss of
   flexibility.

3.  Security Blocks








Birrane & McKeever     Expires September 13, 2017               [Page 8]

Internet-Draft   Bundle Protocol Security Specification       March 2017


3.1.  Block Definitions

   This specification defines two types of security block: the Block
   Integrity Block (BIB) and the Block Confidentiality Block (BCB).

      The BIB is used to ensure the integrity of its security target(s).
      The integrity information in the BIB MAY be verified by any node
      in between the BIB security source and the bundle destination.
      Security-aware waypoints may add or remove BIBs from bundles in
      accordance with their security policy.

      The BCB indicates that the security target(s) has been encrypted,
      in whole or in part, at the BCB security source in order to
      protect its content while in transit.  The BCB may be decrypted by
      security-aware nodes in the network, up to and including the
      bundle destination, as a matter of security policy.

3.2.  Uniqueness

   Security operations in a bundle MUST be unique - the same security
   service MUST NOT be applied to a security target more than once in a
   bundle.  Since a security operation is represented as a security
   block, this limits what security blocks may be added to a bundle: if
   adding a security block to a bundle would cause some other security
   block to no longer represent a unique security operation then the new
   block MUST NOT be added.

   If multiple security blocks representing the same security operation
   were allowed in a bundle at the same time, there would exist
   ambiguity regarding block processing order and the property of
   deterministic processing blocks would be lost.

   Using the notation OP(service,target), several examples illustrate
   this uniqueness requirement.

   o  Signing the payload twice: The two operations OP(integrity,
      payload) and OP(integrity, payload) are redundant and cannot both
      be present in the same bundle at the same time.

   o  Signing different blocks: The two operations OP(integrity,
      payload) and OP(integrity, extension_block_1) are not redundant
      and both may be present in the same bundle at the same time.
      Similarly, the two operations OP(integrity, extension_block_1) and
      OP(integrity,extension_block_2) are also not redundant and may
      both be present in the bundle at the same time.

   o  Different Services on same block: The two operations
      OP(integrity,payload) and OP(confidentiality, payload) are not



Birrane & McKeever     Expires September 13, 2017               [Page 9]

Internet-Draft   Bundle Protocol Security Specification       March 2017


      inherently redundant and may both be present in the bundle at the
      same time, pursuant to other processing rules in this
      specification.

3.3.  Target Multiplicity

   Under special circumstances, a single security block can represent
   multiple security operations as a way of reducing the overall number
   of security blocks present in a bundle.  In these circumstances,
   reducing the number of security blocks in the bundle reduces the
   amount of redundant information in the bundle.

   A set of security operations may be represented by a single security
   block if and only if the following conditions are true.

   o  The security operations apply the same security service.  For
      example, they are all integrity operations or all confidentiality
      operations.

   o  The cipher suite parameters and key information for the security
      operations are identical.

   o  The security source for the security operations is the same.
      Meaning the set of operations are being added/removed by the same
      node.

   o  No security operations have the same security target, as that
      would violate the need for security operations to be unique.

   o  None of the security operations conflict with security operations
      already present in the bundle.

   When representing multiple security operations in a single security
   block, the information that is common across all operations is
   represented once in the security block, and the information which is
   different (e.g., the security targets) are represented individually.
   When the security block is processed all security operations
   represented by the security block MUST be applied/evaluated at that
   time.

3.4.  Target Identification

   A security target is a block in the bundle to which a security
   service applies.  This target MUST be uniquely and unambiguously
   identifiable when processing a security block.  The definition of the
   extension block header from [BPBIS] provides a "Block Number" field
   for exactly this purpose.  Therefore, a security target in a security
   block MUST be represented as the Block Number of the target block.



Birrane & McKeever     Expires September 13, 2017              [Page 10]

Internet-Draft   Bundle Protocol Security Specification       March 2017


3.5.  Block Representation

   Each security block uses the Canonical Bundle Block Format as defined
   in [BPBIS].  That is, each security block is comprised of the
   following elements:

   o  Block Type Code

   o  Block Number

   o  Block Processing Control Flags

   o  CRC Type and CRC Field (if present)

   o  Block Data Length

   o  Block Type Specific Data Fields

   Security-specific information for a security block is captured in the
   "Block Type Specific Data Fields".

3.6.  Abstract Security Block

   The structure of the security-specific portions of a security block
   is identical for both the BIB and BCB Block Types.  Therefore, this
   section defines an Abstract Security Block (ASB) data structure and
   discusses the definition, processing, and other constraints for using
   this structure.  An ASB is never directly instantiated within a
   bundle, it is only a mechanism for discussing the common aspects of
   BIB and BCB security blocks.

   The fields of the ASB SHALL be as follows, listed in the order in
   which they MUST appear.

   Security Targets:
         This field identifiers the block or blocks that are the target
         of the security operation(s) represented by this security
         block.  Each security target is identified as the Block Number
         of the target block.  This field SHALL be represented by a CBOR
         array of data items.  Each target within this CBOR array SHALL
         be represented by a CBOR unsigned integer.  This array MUST
         have at least 1 item.

   Cipher Suite Id:
         This field identifies the cipher suite used to implement the
         security service represented by this block and applied to each
         security target.  This field SHALL be represented by a CBOR
         unsigned integer.



Birrane & McKeever     Expires September 13, 2017              [Page 11]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   Cipher Suite Flags:
         This field identifiers which optional fields are present in the
         security block.  This field SHALL be represented as a CBOR
         unsigned integer containing a bit field of 5 bits indicating
         the presence or absence of other security block fields, as
         follows.

         Bit 1  (the most-significant bit, 0x10): reserved.

         Bit 2  (0x08): reserved.

         Bit 3  (0x04): reserved.

         Bit 4  (0x02): Security Source Present Flag.

         Bit 5  (the least-significant bit, 0x01): Cipher Suite
                Parameters Present Flag.

         In this field, a value of 1 indicates that the associated
         security block field MUST be included in the security block.  A
         value of 0 indicates that the associated security block field
         MUST NOT be in the security block.

   Security Source (Optional Field):
         This field identifies the Endpoint that inserted the security
         block in the bundle.  If the security source field is not
         present then the source MAY be inferred from other information,
         such as the bundle source or the previous hop, as defined by
         security policy.  This field SHALL be represented by a CBOR
         array in accordance with [BPBIS] rules for representing
         Endpoint Identifiers (EIDs).

   Cipher Suite Parameters (Optional Field):
         This field captures one or more cipher suite parameters that
         should be provided to security-aware nodes when processing the
         security service described by this security block.  This field
         SHALL be represented by a CBOR array.  Each entry in this array
         is a single cipher suite parameter.  A single cipher suite
         parameter SHALL also be represented as a CBOR array comprising
         a 2-tuple of the type and value of the parameter, as follows.

         *  Parameter Type.  This field identifiers which cipher suite
            parameter is being specified.  This field SHALL be
            represented as a CBOR unsigned integer.  Potential parameter
            types are described in Section 3.10.  Other specifications
            MAY define additional parameter types for use in this field.





Birrane & McKeever     Expires September 13, 2017              [Page 12]

Internet-Draft   Bundle Protocol Security Specification       March 2017


         *  Parameter Value.  This field captures the value associated
            with this parameter.  This field SHALL be represented by the
            applicable CBOR representation of the parameter type.  These
            specifications are given in Section 3.10 for parameter types
            defined in this specification.  Other specifications that
            define other parameter types MUST include the appropriate
            CBOR encoding of the parameter value.

         Therefore, this field SHALL be represented as a CBOR array of
         CBOR arrays.

   Security Results:
         This field captures the results of applying a security service
         to the security targets in this security block.  This field
         SHALL be represented as a CBOR array.  Each entry in this array
         represents a "target list" of security results for a specific
         security target.  There MUST be one "target list" for each
         entry in the Security Targets field and target lists in the
         Security Results field MUST be in the same order as the
         Security Targets field (e.g., the first "target list" MUST hold
         results for the first entry in the Security Targets field, and
         so on).

         A "target list" is also represented as a CBOR array of
         individual security results for that target.  An individual
         security result is also represented as a CBOR array comprising
         the 2-tuple of the result type and result value, defined as
         follows.

         *  Result Type.  This field captures the type of security
            result.  Some security result types capture the primary
            output of a cipher suite.  Other security results contain
            additional annotative information from the cipher suite
            processing.  This field SHALL be represented as a CBOR
            unsigned integer.  Potential result types are described in
            Section 3.10.  Other specifications MAY define additional
            result types for use in this field.

         *  Result Value.  This field captures the value associated with
            this result for this target.  This field SHALL be
            represented by the applicable CBOR representation of the
            result type.  These specifications are given in Section 3.10
            for result types defined in this specification.  Other
            specifications that define other result types MUST include
            the appropriate CBOR encoding of the result value.






Birrane & McKeever     Expires September 13, 2017              [Page 13]

Internet-Draft   Bundle Protocol Security Specification       March 2017


3.7.  Block Integrity Block

   A BIB is a bundle extension block with the following characteristics.

   o  The Block Type Code value is as specified in Section 12.1.

   o  The Block Type Specific Data Fields follow the structure of the
      ASB.

   o  A security target listed in the Security Targets field MUST NOT
      reference a security block defined in this specification (e.g., a
      BIB or a BCB).

   o  The Cipher Suite Id MUST be documented as an end-to-end
      authentication-cipher suite or as an end-to-end error-detection-
      cipher suite.

   o  An EID-reference to the security source MAY be present.  If this
      field is not present, then the security source of the block SHOULD
      be inferred according to security policy and MAY default to the
      bundle source.  The security source may also be specified as part
      of key information described in Section 3.10.

   o  The cipher suite MAY process less than the entire security target.
      If the cipher suite processes less than the complete, original
      security target, the cipher suite parameters MUST specify which
      bytes of the security target are protected.

   Notes:

   o  It is RECOMMENDED that cipher suite designers carefully consider
      the effect of setting flags that either discard the block or
      delete the bundle in the event that this block cannot be
      processed.

   o  Since OP(integrity, target) is allowed only once in a bundle per
      target, it is RECOMMENDED that users wishing to support multiple
      integrity signatures for the same target define a multi-signature
      cipher suite.

   o  For some cipher suites, (e.g., those using asymmetric keying to
      produce signatures or those using symmetric keying with a group
      key), the security information MAY be checked at any hop on the
      way to the destination that has access to the required keying
      information, in accordance with Section 3.9.






Birrane & McKeever     Expires September 13, 2017              [Page 14]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   o  The use of a generally available key is RECOMMENDED if custodial
      transfer is employed and all nodes SHOULD verify the bundle before
      accepting custody.

3.8.  Block Confidentiality Block

   A BCB is a bundle extension block with the following characteristics.

      The Block Type Code value is as specified in Section 12.1.

      The Block Processing Control flags value can be set to whatever
      values are required by local policy, except that this block MUST
      have the "replicate in every fragment" flag set if the target of
      the BCB is the Payload Block.  Having that BCB in each fragment
      indicates to a receiving node that the payload portion of each
      fragment represents cipher-text.

      The Block Type Specific Data Fields follow the structure of the
      ASB.

      A security target listed in the Security Targets field MAY
      reference the payload block, a non-security extension block, or a
      BIB block.  A BCB MUST NOT include another BCB as a security
      target.  A BCB MUST NOT target the primary block.

      The Cipher Suite Id MUST be documented as a confidentiality cipher
      suite.

      Any additional bytes generated from applying the cipher suite to a
      security target (such as additional authenticated text) MAY be
      placed in an appropriate security result (e.g., an Integrity Check
      Value) in accordance with cipher suite and security policy.

      An EID-reference to the security source MAY be present.  If this
      field is not present, then the security source of the block SHOULD
      be inferred according to security policy and MAY default to the
      bundle source.  The security source may also be specified as part
      of key information described in Section 3.10.

   The BCB modifies the contents of its security target(s).  When a BCB
   is applied, the security target body data are encrypted "in-place".
   Following encryption, the security target Block Type Specific Data
   Fields contains cipher-text, not plain-text.  Other block fields
   remain unmodified, with the exception of the Block Data Length field,
   which may be changed if the BCB is allowed to change the length of
   the block (see below).





Birrane & McKeever     Expires September 13, 2017              [Page 15]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   Fragmentation, reassembly, and custody transfer are adversely
   affected by a change in size of the payload block due to ambiguity
   about what byte range of the block is actually in any particular
   fragment.  Therefore, when the security target of a BCB is the bundle
   payload, the BCB MUST NOT alter the size of the payload block body
   data.  This "in-place" encryption allows fragmentation, reassembly,
   and custody transfer to operate without knowledge of whether or not
   encryption has occurred.

   If a BCB cannot alter the size of the security target (e.g., the
   security target is the payload block or block length modifications
   are disallowed by policy) then differences in the size of the cipher-
   text and plain-text MUST be handled in the following way.  If the
   cipher-text is shorter in length than the plain-text, padding must be
   used in accordance with the cipher suite policy.  If the cipher-text
   is larger than the plain-text, overflow bytes MUST be placed in
   overflow parameters in the Security Result field.

   Notes:

   o  It is RECOMMENDED that cipher suite designers carefully consider
      the effect of setting flags that either discard the block or
      delete the bundle in the event that this block cannot be
      processed.

   o  The cipher suite MAY process less than the entire original
      security target body data.  If the cipher suite processes less
      than the complete, original security target body data, the BCB for
      that security target MUST specify, as part of the cipher suite
      parameters, which bytes of the body data are protected.

   o  The BCB block processing control flags MAY be set independently
      from the processing control flags of the security target(s).  The
      setting of such flags SHOULD be an implementation/policy decision
      for the encrypting node.

   o  A BCB MAY include information as part of additional authenticated
      data to address parts of the target block that are not converted
      to cipher-text.

3.9.  Block Interactions

   The security block types defined in this specification are designed
   to be as independent as possible.  However, there are some cases
   where security blocks may share a security target creating processing
   dependencies.





Birrane & McKeever     Expires September 13, 2017              [Page 16]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   If confidentiality is being applied to a target that already has
   integrity applied to it, then an undesirable condition occurs where a
   security aware waypoint would be unable to check the integrity result
   of a block because the block contents have been encrypted after the
   integrity signature was generated.  To address this concern, the
   following processing rules MUST be followed.

   o  If confidentiality is to be applied to a target, it MUST also be
      applied to any integrity operation already defined for that
      target.  This means that if a BCB is added to encrypt a block,
      another BCB MUST also be added to encrypt a BIB also targeting
      that block.

   o  An integrity operation MUST NOT be applied to a security target if
      a BCB in the bundle shares the same security target.  This
      prevents ambiguity in the order of evaluation when receiving a BIB
      and a BCB for a given security target.

   o  An integrity value MUST NOT be evaluated if the BIB providing the
      integrity value is the security target of an existing BCB block in
      the bundle.  In such a case, the BIB data contains cipher-text as
      it has been encrypted.

   o  An integrity value MUST NOT be evaluated if the security target of
      the BIB is also the security target of a BCB in the bundle.  In
      such a case, the security target data contains cipher-text as it
      has been encrypted.

   o  As mentioned in Section 3.7, a BIB MUST NOT have a BCB as its
      security target.  BCBs may embed integrity results as part of
      security results.

   These restrictions on block interactions impose a necessary ordering
   when applying security operations within a bundle.  Specifically, for
   a given security target, BIBs MUST be added before BCBs.  This
   ordering MUST be preserved in cases where the current BPA is adding
   all of the security blocks for the bundle or whether the BPA is a
   waypoint adding new security blocks to a bundle that already contains
   security blocks.

3.10.  Parameters and Result Types

   Cipher suite parameters and security results may capture multiple
   types of information in a security block.  This section identifies a
   set of parameters and results that are available in any BPSec
   implementation for use by any cipher suite.  Individual cipher suites
   MAY define additional parameters and results.  A cipher suite MAY




Birrane & McKeever     Expires September 13, 2017              [Page 17]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   include multiple instances of the same type of parameter or result in
   a security block.

   Parameters and results are represented using CBOR, and any
   identification of a new parameter or result type MUST include how the
   value of the type will be represented using the CBOR specification.
   Types themselves are always represented as a CBOR unsigned integer.

   Cipher suite parameter types, as defined by this specification, are
   as follows.









































Birrane & McKeever     Expires September 13, 2017              [Page 18]

Internet-Draft   Bundle Protocol Security Specification       March 2017


                       Cipher Suite Parameter Types.

   +------+----------------+--------------------------+----------------+
   | Type |      Name      | Description              | CBOR           |
   |      |                |                          | Representation |
   +------+----------------+--------------------------+----------------+
   |  0   | Initialization | A random value,          | Byte String    |
   |      |     Vector     | typically eight to       |                |
   |      |                | sixteen bytes.           |                |
   +------+----------------+--------------------------+----------------+
   |  1   |      Key       | Material encoded or      | Byte String    |
   |      |  Information   | protected by the key     |                |
   |      |                | management system and    |                |
   |      |                | used to transport an     |                |
   |      |                | ephemeral key protected  |                |
   |      |                | by a long-term key.      |                |
   +------+----------------+--------------------------+----------------+
   |  2   | Content Range  | Pair of Unsigned         | CBOR Array     |
   |      |                | Integers (offset,length) | comprising a   |
   |      |                | specifying the range of  | 2-tuple of     |
   |      |                | payload bytes to which   | CBOR unsigned  |
   |      |                | an operation applies.    | integers.      |
   |      |                | The offset MUST be the   |                |
   |      |                | offset within the        |                |
   |      |                | original bundle, even if |                |
   |      |                | the current bundle is a  |                |
   |      |                | fragment.                |                |
   +------+----------------+--------------------------+----------------+
   |  3   |      Salt      | An IV-like value used by | Byte Array     |
   |      |                | certain confidentiality  |                |
   |      |                | suites.                  |                |
   +------+----------------+--------------------------+----------------+
   | 4-31 |    Reserved    | Reserve for future BPSec |                |
   |      |                | protocol expansion       |                |
   +------+----------------+--------------------------+----------------+
   |  >=  |   Unassigned   | Unassigned by this       |                |
   |  32  |                | specification. Can be    |                |
   |      |                | assigned by cipher suite |                |
   |      |                | specifications.          |                |
   +------+----------------+--------------------------+----------------+

                                  Table 1

   Security result parameter types, as defined by this specification,
   are as follows.






Birrane & McKeever     Expires September 13, 2017              [Page 19]

Internet-Draft   Bundle Protocol Security Specification       March 2017


                          Security Result Types.

   +------+----------------+--------------------------+----------------+
   | Type |      Name      | Description              | CBOR           |
   |      |                |                          | Representation |
   +------+----------------+--------------------------+----------------+
   |  0   |   Integrity    | Result of BIB digest or  | Byte String    |
   |      |   Signatures   | other signing operation. |                |
   +------+----------------+--------------------------+----------------+
   |  1   | BCB Integrity  | Output from certain      | Byte String    |
   |      |  Check Value   | confidentiality cipher   |                |
   |      |    (ICV) /     | suite operations to be   |                |
   |      | Authentication | used at the destination  |                |
   |      |      Tag       | to verify that the       |                |
   |      |                | protected data has not   |                |
   |      |                | been modified. This      |                |
   |      |                | value MAY contain        |                |
   |      |                | padding if required by   |                |
   |      |                | the cipher suite.        |                |
   +------+----------------+--------------------------+----------------+
   | 2-31 |    Reserved    | Reserve for future BPSec |                |
   |      |                | protocol expansion       |                |
   +------+----------------+--------------------------+----------------+
   |  >=  |   Unassigned   | Unassigned by this       |                |
   |  32  |                | specification. Can be    |                |
   |      |                | assigned by cipher suite |                |
   |      |                | specifications.          |                |
   +------+----------------+--------------------------+----------------+

                                  Table 2

3.11.  BSP Block Example

   An example of BPSec blocks applied to a bundle is illustrated in
   Figure 1.  In this figure the first column represents blocks within a
   bundle and the second column represents the Block Number for the
   block, using the terminology B1...Bn for the purpose of illustration.














Birrane & McKeever     Expires September 13, 2017              [Page 20]

Internet-Draft   Bundle Protocol Security Specification       March 2017


            Block in Bundle            ID
   +===================================+====+
   |         Primary Block             | B1 |
   +-----------------------------------+----+
   |             BIB                   | B2 |
   |  OP(integrity, target=B1)         |    |
   +-----------------------------------+----+
   |             BCB                   | B3 |
   |  OP(confidentiality, target=B4)   |    |
   +-----------------------------------+----+
   |      Extension Block              | B4 |
   +-----------------------------------+----+
   |             BIB                   | B5 |
   |  OP(integrity, target=B6)         |    |
   +-----------------------------------+----+
   |      Extension Block              | B6 |
   +-----------------------------------+----+
   |             BCB                   | B7 |
   | OP(confidentiality,targets=B8,B9) |    |
   +-----------------------------------+----+
   |   BIB  (encrypted by B7)          | B8 |
   |  OP(integrity, target=B9)         |    |
   +-----------------------------------+----|
   |         Payload Block             | B9 |
   +-----------------------------------+----+

                   Figure 1: Sample Use of BPSec Blocks

   In this example a bundle has four non-security-related blocks: the
   primary block (B1), two extension blocks (B4,B6), and a payload block
   (B9).  The following security applications are applied to this
   bundle.

   o  An integrity signature applied to the canonicalized primary block.
      This is accomplished by a single BIB (B2).

   o  Confidentiality for the first extension block (B4).  This is
      accomplished by a BCB block (B3).

   o  Integrity for the second extension block (B6).  This is
      accomplished by a BIB block (B5).  NOTE: If the extension block B6
      contains a representation of the serialized bundle (such as a hash
      over all blocks in the bundle at the time of its last
      transmission) then the BIB block is also providing an
      authentication service.

   o  An integrity signature on the payload (B10).  This is accomplished
      by a BIB block (B8).



Birrane & McKeever     Expires September 13, 2017              [Page 21]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   o  Confidentiality for the payload block and it's integrity
      signature.  This is accomplished by a BCB block, B7, encrypting B8
      and B9.  In this case, the security source, key parameters, and
      service are identical, so a single security block MAY be used for
      this purpose, rather than requiring two BCBs one to encrypt B8 and
      one to encrypt B9.

4.  Canonical Forms

   By definition, an integrity service determines whether any aspect of
   a block was changed from the moment the security service was applied
   at the security source until the point of evaluation.  To
   successfully verify the integrity of a block, the data passed to the
   verifying cipher suite MUST be the same bits, in the same order, as
   those passed to the signature-generating cipher suite at the security
   source.

   This section provides guidance on how to create a canonical form for
   each type of block in a bundle.  This form MUST be used when
   generating inputs to cipher suites for use by BPSec blocks.

4.1.  Technical Notes

   The following technical considerations hold for all canonicalizations
   in this section.

   o  Any numeric fields defined as variable-length MUST be expanded to
      their largest unpacked form before being used by a cipher suite.
      If a field does not specify a maximum size, a maximum size of 32
      bits for integer and 64 bits for floating point values SHALL be
      assumed.

   o  Canonical forms are not transmitted, they are used to generate
      input to a cipher suite for security processing at a security-
      aware node.

   o  Reserved flags MUST NOT be included in any canonicalization as it
      is not known if those flags will change in transit.

   o  These canonicalization algorithms assume that Endpoint IDs do not
      change from the time at which a security source adds a security
      block to a bundle and the time at which a node processes that
      security block.

   o  Cipher suites MAY define their own canonicalization algorithms and
      require the use of those algorithms over the ones provided in this
      specification.  In the event of conflicting canonicalization




Birrane & McKeever     Expires September 13, 2017              [Page 22]

Internet-Draft   Bundle Protocol Security Specification       March 2017


      algorithms, cipher suite algorithms take precedence over this
      specification.

4.2.  Primary Block Canonicalization

   The canonicalization of the primary block is as specified in [BPBIS]
   with the following exceptions.

   o  The following Bundle Processing Control Flags MAY change as a
      bundle transits the DTN without indicating an integrity error and,
      therefore, MUST NOT be included in the canonicalization of the
      primary block.

      *  Bundle is a fragment.  (Bit 15, 0x0001)

      *  Custody transfer requested for this bundle.  (Bit 12, 0x0008)

      *  Reserved (Bits 0-2, 0xE000)

      Regardless of the value of these flags in the primary block, they
      MUST be set to 0 when canonicalized for security processing.

   o  The CRC field MAY change at each hop - for example, if a bundle
      becomes fragmented, each fragment will have a different CRC value
      from the original signed primary block.  As such, this field MUST
      NOT be included in the canonicalization.

4.3.  Non-Primary-Block Canonicalization

   All non-primary blocks (NPBs) share the same block structure and are
   canonicalized as specified in [BPBIS] with the following exceptions.

   o  If the service being applied is a confidentiality service, then
      the Block Type Code, Block Number, Block Processing Control Flags,
      CRC Type and CRC Field (if present), and Block Data Length fields
      MUST NOT be included in the canonicalization.  Confidentiality
      services are used to convert the Block Type Specific Data Fields
      from plain-text to cipher-text.

   o  The Block Type Specific Data Field is included, without
      modification, for both integrity and confidentiality services,
      with the exception that in some cases only a portion of the
      payload data is to be processed.  In such a case, only those bytes
      are included in the canonical form and additional cipher suite
      parameters are required to specify which part of the field is
      included.





Birrane & McKeever     Expires September 13, 2017              [Page 23]

Internet-Draft   Bundle Protocol Security Specification       March 2017


5.  Security Processing

   This section describes the security aspects of bundle processing.

5.1.  Bundles Received from Other Nodes

   Security blocks MUST be processed in a specific order when received
   by a security-aware node.  The processing order is as follows.

   o  All BCB blocks in the bundle MUST be evaluated prior to evaluating
      any BIBs in the bundle.  When BIBs and BCBs share a security
      target, BCBs MUST be evaluated first and BIBs second.

5.1.1.  Receiving BCB Blocks

   If a received bundle contains a BCB, the receiving node MUST
   determine whether it has the responsibility of decrypting the BCB
   security target and removing the BCB prior to delivering data to an
   application at the node or forwarding the bundle.

   If the receiving node is the destination of the bundle, the node MUST
   decrypt any BCBs remaining in the bundle.  If the receiving node is
   not the destination of the bundle, the node MAY decrypt the BCB if
   directed to do so as a matter of security policy.

   If the security policy of a security-aware node specifies that a
   bundle should have applied confidentiality to a specific security
   target and no such BCB is present in the bundle, then the node MUST
   process this security target in accordance with the security policy.
   This MAY involve removing the security target from the bundle.  If
   the removed security target is the payload block, the bundle MAY be
   discarded.

   If the relevant parts of an encrypted payload block cannot be
   decrypted (i.e., the decryption key cannot be deduced or decryption
   fails), then the bundle MUST be discarded and processed no further.
   If an encrypted security target other than the payload block cannot
   be decrypted then the associated security target and all security
   blocks associated with that target MUST be discarded and processed no
   further.  In both cases, requested status reports (see [BPBIS]) MAY
   be generated to reflect bundle or block deletion.

   When a BCB is decrypted, the recovered plain-text MUST replace the
   cipher-text in the security target Block Type Specific Data Fields.
   If the Block Data Length field was modified at the time of encryption
   it MUST be updated to reflect the decrypted block length.





Birrane & McKeever     Expires September 13, 2017              [Page 24]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   If a BCB contains multiple security targets, all security targets
   MUST be processed when the BCB is processed.  Errors and other
   processing steps SHALL be made as if each security target had been
   represented by an individual BCB with a single security target.

5.1.2.  Receiving BIB Blocks

   If a received bundle contains a BIB, the receiving node MUST
   determine whether it has the final responsibility of verifying the
   BIB security target and removing it prior to delivering data to an
   application at the node or forwarding the bundle.  If a BIB check
   fails, the security target has failed to authenticate and the
   security target SHALL be processed according to the security policy.
   A bundle status report indicating the failure MAY be generated.
   Otherwise, if the BIB verifies, the security target is ready to be
   processed for delivery.

   A BIB MUST NOT be processed if the security target of the BIB is also
   the security target of a BCB in the bundle.  Given the order of
   operations mandated by this specification, when both a BIB and a BCB
   share a security target, it means that the security target MUST have
   been encrypted after it was integrity signed and, therefore, the BIB
   cannot be verified until the security target has been decrypted by
   processing the BCB.

   If the security policy of a security-aware node specifies that a
   bundle should have applied integrity to a specific security target
   and no such BIB is present in the bundle, then the node MUST process
   this security target in accordance with the security policy.  This
   MAY involve removing the security target from the bundle.  If the
   removed security target is the payload or primary block, the bundle
   MAY be discarded.  This action may occur at any node that has the
   ability to verify an integrity signature, not just the bundle
   destination.

   If a receiving node does not have the final responsibility of
   verifying the BIB it MAY still attempt to verify the BIB to prevent
   the needless forwarding of corrupt data.  If the check fails, the
   node SHALL process the security target in accordance to local
   security policy.  It is RECOMMENDED that if a payload integrity check
   fails at a waypoint that it is processed in the same way as if the
   check fails at the destination.  If the check passes, the node MUST
   NOT remove the BIB prior to forwarding.

   If a BIB contains multiple security targets, all security targets
   MUST be processed if the BIB is processed by the Node.  Errors and
   other processing steps SHALL be made as if each security target had
   been represented by an individual BIB with a single security target.



Birrane & McKeever     Expires September 13, 2017              [Page 25]

Internet-Draft   Bundle Protocol Security Specification       March 2017


5.2.  Bundle Fragmentation and Reassembly

   If it is necessary for a node to fragment a bundle payload, and
   security services have been applied to that bundle, the fragmentation
   rules described in [BPBIS] MUST be followed.  As defined there and
   summarized here for completeness, only the payload block may be
   fragmented; security blocks, like all extension blocks, can never be
   fragmented.

   Due to the complexity of payload block fragmentation, including the
   possibility of fragmenting payload block fragments, integrity and
   confidentiality operations are not to be applied to a bundle
   representing a fragment.  Specifically, a BCB or BIB MUST NOT be
   added to a bundle if the "Bundle is a Fragment" flag is set in the
   Bundle Processing Control Flags field.

   Security processing in the presence of payload block fragmentation
   MAY be handled by other mechanisms outside of the BPSec protocol or
   by applying BPSec blocks in coordination with an encapsulation
   mechanism.

6.  Key Management

   There exist a myriad of ways to establish, communicate, and otherwise
   manage key information in a DTN.  Certain DTN deployments might
   follow established protocols for key management whereas other DTN
   deployments might require new and novel approaches.  BPSec assumes
   that key management is handled as a separate part of network design
   and this specification neither defines nor requires a specific key
   management strategy.

7.  Security Policy Considerations

   When implementing BPSec, several policy decisions must be considered.
   This section describes key policies that affect the generation,
   forwarding, and receipt of bundles that are secured using this
   specification.  No single set of policy decisions is envisioned to
   work for all secure DTN deployments.

   o  If a bundle is received that contains more than one security
      operation, in violation of BPSec, then the BPA must determine how
      to handle this bundle.  The bundle may be discarded, the block
      affected by the security operation may be discarded, or one
      security operation may be favored over another.

   o  BPAs in the network MUST understand what security operations they
      should apply to bundles.  This decision may be based on the source




Birrane & McKeever     Expires September 13, 2017              [Page 26]

Internet-Draft   Bundle Protocol Security Specification       March 2017


      of the bundle, the destination of the bundle, or some other
      information related to the bundle.

   o  If a waypoint has been configured to add a security operation to a
      bundle, and the received bundle already has the security operation
      applied, then the receiver MUST understand what to do.  The
      receiver may discard the bundle, discard the security target and
      associated BPSec blocks, replace the security operation, or some
      other action.

   o  It is recommended that security operations only be applied to the
      blocks that absolutely need them.  If a BPA were to apply security
      operations such as integrity or confidentiality to every block in
      the bundle, regardless of need, there could be downstream errors
      processing blocks whose contents must be inspected or changed at
      every hop along the path.

   o  Adding a BIB to a security target that has already been encrypted
      by a BCB is not allowed.  If this condition is likely to be
      encountered, there are (at least) three possible policies that
      could handle this situation.

      1.  At the time of encryption, an integrity signature may be
          generated and added to the BCB for the security target as
          additional information in the security result field.

      2.  The encrypted block may be replicated as a new block and
          integrity signed.

      3.  An encapsulation scheme may be applied to encapsulate the
          security target (or the entire bundle) such that the
          encapsulating structure is, itself, no longer the security
          target of a BCB and may therefore be the security target of a
          BIB.

8.  Security Considerations

   Given the nature of DTN applications, it is expected that bundles may
   traverse a variety of environments and devices which each pose unique
   security risks and requirements on the implementation of security
   within BPSec.  For these reasons, it is important to introduce key
   threat models and describe the roles and responsibilities of the
   BPSec protocol in protecting the confidentiality and integrity of the
   data against those threats.  This section provides additional
   discussion on security threats that BPSec will face and describes how
   BPSec security mechanisms operate to mitigate these threats.





Birrane & McKeever     Expires September 13, 2017              [Page 27]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   It should be noted that BPSEC addresses only the security of data
   traveling over the DTN, not the underlying DTN itself.  Additionally,
   BPSec addresses neither the fitness of externally-defined
   cryptographic methods nor the security of their implementation.  It
   is the responsibility of the BPSec implementer that appropriate
   algorithms and methods are chosen.  Furthermore, the BPSec protocol
   does not address threats which share computing resources with the DTN
   and/or BPSec software implementations.  These threats may be
   malicious software or compromised libraries which intend to intercept
   data or recover cryptographic material.  Here, it is the
   responsibility of the BPSec implementer to ensure that any
   cryptographic material, including shared secret or private keys, is
   protected against access within both memory and storage devices.

   The threat model described here is assumed to have a set of
   capabilities identical to those described by the Internet Threat
   Model in [RFC3552], but the BPSec threat model is scoped to
   illustrate threats specific to BPSec operating within DTN
   environments and therefore focuses on man-in-the-middle (MITM)
   attackers.

8.1.  Attacker Capabilities and Objectives

   BPSec was designed to protect against MITM threats which may have
   access to a bundle during transit from its source, Alice, to its
   destination, Bob.  A MITM node, Mallory, is a non-cooperative node
   operating on the DTN between Alice and Bob that has the ability to
   receive bundles, examine bundles, modify bundles, forward bundles,
   and generate bundles at will in order to compromise the
   confidentiality or integrity of data within the DTN.  For the
   purposes of this section, any MITM node is assumed to effectively be
   security-aware even if it does not implement the BPSec protocol.
   There are three classes of MITM nodes which are differentiated based
   on their access to cryptographic material:

   o  Unprivileged Node: Mallory has not been provisioned within the
      secure environment and only has access to cryptographic material
      which has been publicly-shared.

   o  Legitimate Node: Mallory is within the secure environment and
      therefore has access to cryptographic material which has been
      provisioned to Mallory (i.e., K_M) as well as material which has
      been publicly-shared.

   o  Privileged Node: Mallory is a privileged node within the secure
      environment and therefore has access to cryptographic material
      which has been provisioned to Mallory, Alice and/or Bob (i.e.




Birrane & McKeever     Expires September 13, 2017              [Page 28]

Internet-Draft   Bundle Protocol Security Specification       March 2017


      K_M, K_A, and/or K_B) as well as material which has been publicly-
      shared.

   If Mallory is operating as a privileged node, this is tantamount to
   compromise; BPSec does not provide mechanisms to detect or remove
   Mallory from the DTN or BPSec secure environment.  It is up to the
   BPSec implementer or the underlying cryptographic mechanisms to
   provide appropriate capabilities if they are needed.  It should also
   be noted that if the implementation of BPSec uses a single set of
   shared cryptographic material for all nodes, a legitimate node is
   equivalent to a privileged node because K_M == K_A == K_B.

   A special case of the legitimate node is when Mallory is either Alice
   or Bob (i.e., K_M == K_A or K_M == K_B).  In this case, Mallory is
   able to impersonate traffic as either Alice or Bob, which means that
   traffic to and from that node can be decrypted and encrypted,
   respectively.  Additionally, messages may be signed as originating
   from one of the endpoints.

8.2.  Attacker Behaviors and BPSec Mitigations

8.2.1.  Eavesdropping Attacks

   Once Mallory has received a bundle, she is able to examine the
   contents of that bundle and attempt to recover any protected data or
   cryptographic keying material from the blocks contained within.  The
   protection mechanism that BPSec provides against this action is the
   BCB, which encrypts the contents of its security target, providing
   confidentiality of the data.  Of course, it should be assumed that
   Mallory is able to attempt offline recovery of encrypted data, so the
   cryptographic mechanisms selected to protect the data should provide
   a suitable level of protection.

   When evaluating the risk of eavesdropping attacks, it is important to
   consider the lifetime of bundles on a DTN.  Depending on the network,
   bundles may persist for days or even years.  If a bundle does persist
   on the network for years and the cipher suite used for a BCB provides
   inadequate protection, Mallory may be able to recover the protected
   data before that bundle reaches its intended destination.

8.2.2.  Modification Attacks

   As a node participating in the DTN between Alice and Bob, Mallory
   will also be able to modify the received bundle, including non-BPSec
   data such as the primary block, payload blocks, or block processing
   control flags as defined in [BPBIS].  Mallory will be able to
   undertake activities which include modification of data within the
   blocks, replacement of blocks, addition of blocks, or removal of



Birrane & McKeever     Expires September 13, 2017              [Page 29]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   blocks.  Within BPSec, both the BIB and BCB provide integrity
   protection mechanisms to detect or prevent data manipulation attempts
   by Mallory.

   The BIB provides that protection to another block which is its
   security target.  The cryptographic mechanisms used to generate the
   BIB should be strong against collision attacks and Mallory should not
   have access to the cryptographic material used by the originating
   node to generate the BIB (e.g., K_A).  If both of these conditions
   are true, Mallory will be unable to modify the security target or the
   BIB and lead Bob to validate the security target as originating from
   Alice.

   Since BPSec security operations are implemented by placing blocks in
   a bundle, there is no in-band mechanism for detecting or correcting
   certain cases where Mallory removes blocks from a bundle.  If Mallory
   removes a BCB block, but keeps the security target, the security
   target remains encrypted and there is a possibility that there may no
   longer be sufficient information to decrypt the block at its
   destination.  If Mallory removes both a BCB (or BIB) and its security
   target there is no evidence left in the bundle of the security
   operation.  Similarly, if Mallory removes the BIB but not the
   security target there is no evidence left in the bundle of the
   security operation.  In each of these cases, the implementation of
   BPSec MUST be combined with policy configuration at endpoints in the
   network which describe the expected and required security operations
   that must be applied on transmission and are expected to be present
   on receipt.  This or other similar out-of-band information is
   required to correct for removal of security information in the
   bundle.

   A limitation of the BIB may exist within the implementation of BIB
   validation at the destination node.  If Mallory is a legitimate node
   within the DTN, the BIB generated by Alice with K_A can be replaced
   with a new BIB generated with K_M and forwarded to Bob.  If Bob is
   only validating that the BIB was generated by a legitimate user, Bob
   will acknowledge the message as originating from Mallory instead of
   Alice.  In order to provide verifiable integrity checks, both a BIB
   and BCB should be used.  Alice creates a BIB with the protected data
   block as the security target and then creates a BCB with both the BIB
   and protected data block as its security targets.  In this
   configuration, since Mallory is only a legitimate node and does not
   have access to Alice's key K_A, Mallory is unable to decrypt the BCB
   and replace the BIB.







Birrane & McKeever     Expires September 13, 2017              [Page 30]

Internet-Draft   Bundle Protocol Security Specification       March 2017


8.2.3.  Topology Attacks

   If Mallory is in a MITM position within the DTN, she is able to
   influence how any bundles that come to her may pass through the
   network.  Upon receiving and processing a bundle that must be routed
   elsewhere in the network, Mallory has three options as to how to
   proceed: not forward the bundle, forward the bundle as intended, or
   forward the bundle to one or more specific nodes within the network.

   Attacks that involve re-routing the packets throughout the network
   are essentially a special case of the modification attacks described
   in this section where the attacker is modifying fields within the
   primary block of the bundle.  Given that BPSec cannot encrypt the
   contents of the primary block, alternate methods must be used to
   prevent this situation.  These methods MAY include requiring BIBs for
   primary blocks, using encapsulation, or otherwise strategically
   manipulating primary block data.  The specifics of any such
   mitigation technique are specific to the implementation of the
   deploying network and outside of the scope of this document.

   Furthermore, routing rules and policies may be useful in enforcing
   particular traffic flows to prevent topology attacks.  While these
   rules and policies may utilize some features provided by BPSec, their
   definition is beyond the scope of this specification.

8.2.4.  Message Injection

   Mallory is also able to generate new bundles and transmit them into
   the DTN at will.  These bundles may either be copies or slight
   modifications of previously-observed bundles (i.e., a replay attack)
   or entirely new bundles generated based on the Bundle Protocol,
   BPSec, or other bundle-related protocols.  With these attacks
   Mallory's objectives may vary, but may be targeting either the bundle
   protocol or application-layer protocols conveyed by the bundle
   protocol.

   BPSec relies on cipher suite capabilities to prevent replay or forged
   message attacks.  A BCB used with appropriate cryptographic
   mechanisms (e.g., a counter-based cipher mode) may provide replay
   protection under certain circumstances.  Alternatively, application
   data itself may be augmented to include mechanisms to assert data
   uniqueness and then protected with a BIB, a BCB, or both along with
   other block data.  In such a case, the receiving node would be able
   to validate the uniqueness of the data.







Birrane & McKeever     Expires September 13, 2017              [Page 31]

Internet-Draft   Bundle Protocol Security Specification       March 2017


9.  Cipher Suite Authorship Considerations

   Cipher suite developers or implementers should consider the diverse
   performance and conditions of networks on which the Bundle Protocol
   (and therefore BPSec) will operate.  Specifically, the delay and
   capacity of delay-tolerant networks can vary substantially.  Cipher
   suite developers should consider these conditions to better describe
   the conditions when those suites will operate or exhibit
   vulnerability, and selection of these suites for implementation
   should be made with consideration to the reality.  There are key
   differences that may limit the opportunity to leverage existing
   cipher suites and technologies that have been developed for use in
   traditional, more reliable networks:

   o  Data Lifetime: Depending on the application environment, bundles
      may persist on the network for extended periods of time, perhaps
      even years.  Cryptographic algorithms should be selected to ensure
      protection of data against attacks for a length of time reasonable
      for the application.

   o  One-Way Traffic: Depending on the application environment, it is
      possible that only a one-way connection may exist between two
      endpoints, or if a two-way connection does exist, the round-trip
      time may be extremely large.  This may limit the utility of
      session key generation mechanisms, such as Diffie-Hellman, as a
      two-way handshake may not be feasible or reliable.

   o  Opportunistic Access: Depending on the application environment, a
      given endpoint may not be guaranteed to be accessible within a
      certain amount of time.  This may make asymmetric cryptographic
      architectures which rely on a key distribution center or other
      trust center impractical under certain conditions.

   When developing new cipher suites for use with BPSec, the following
   information SHOULD be considered for inclusion in these
   specifications.

   o  New Parameters.  Cipher suites MAY define new parameter types that
      may appear in security blocks and used to configure the cipher
      suite.

   o  New Results.  Cipher suites MAY define new security result types
      that may appear in security blocks and capture the outputs of the
      cipher suite.

   o  New Canonicalizations.  Cipher suites MAY define new
      canonicalization algorithms as necessary.




Birrane & McKeever     Expires September 13, 2017              [Page 32]

Internet-Draft   Bundle Protocol Security Specification       March 2017


10.  Defining Other Security Blocks

   Other security blocks (OSBs) may be defined and used in addition to
   the security blocks identified in this specification.  Both the usage
   of BIB, BCB, and any future OSBs MAY co-exist within a bundle and MAY
   be considered in conformance with BPSec if each of the following
   requirements are met by any future identified security blocks.

   o  Other security blocks (OSBs) MUST NOT reuse any enumerations
      identified in this specification, to include the block type codes
      for BIB and BCB.

   o  An OSB definition MUST state whether it can be the target of a BIB
      or a BCB.  The definition MUST also state whether the OSB can
      target a BIB or a BCB.

   o  An OSB definition MUST provide a deterministic processing order in
      the event that a bundle is received containing BIBs, BCBs, and
      OSBs.  This processing order MUST NOT alter the BIB and BCB
      processing orders identified in this specification.

   o  An OSB definition MUST provide a canonicalization algorithm if the
      default non-primary-block canonicalization algorithm cannot be
      used to generate a deterministic input for a cipher suite.  This
      requirement MAY be waived if the OSB is defined so as to never be
      the security target of a BIB or a BCB.

   o  An OSB definition MAY NOT require any behavior of a BPSEC-BPA that
      is in conflict with the behavior identified in this specification.
      In particular, the security processing requirements imposed by
      this specification MUST be consistent across all BPSEC-BPAs in a
      network.

   o  The behavior of an OSB when dealing with fragmentation MUST be
      specified and MUST NOT lead to ambiguous processing states.  In
      particular, an OSB definition should address how to receive and
      process an OSB in a bundle fragment that may or may not also
      contain its security target.  An OSB definition should also
      address whether an OSB may be added to a bundle marked as a
      fragment.

   Additionally, policy considerations for the management, monitoring,
   and configuration associated with blocks SHOULD be included in any
   OSB definition.

   NOTE: The burden of showing compliance with processing rules is
   placed upon the standards defining new security blocks and the




Birrane & McKeever     Expires September 13, 2017              [Page 33]

Internet-Draft   Bundle Protocol Security Specification       March 2017


   identification of such blocks shall not, alone, require maintenance
   of this specification.

11.  Conformance

   All implementations are strongly RECOMMENDED to provide some method
   of hop-by-hop verification by generating a hash to some canonical
   form of the bundle and placing an integrity signature on that form
   using a BIB.

12.  IANA Considerations

   Registries of Cipher Suite IDs, Cipher Suite Flags, Cipher Suite
   Parameter Types, and Security Result Types will be required.

12.1.  Bundle Block Types

   This specification allocates two block types from the existing
   "Bundle Block Types" registry defined in [RFC6255] .

       Additional Entries for the Bundle Block-Type Codes Registry:

          +-------+-----------------------------+---------------+
          | Value |         Description         |   Reference   |
          +-------+-----------------------------+---------------+
          |  TBD  |    Block Integrity Block    | This document |
          |  TBD  | Block Confidentiality Block | This document |
          +-------+-----------------------------+---------------+

                                  Table 3

13.  References

13.1.  Normative References

   [BPBIS]    Burleigh, S., Fall, K., and E. Birrane, "Bundle Protocol",
              draft-ietf-dtn-bpbis-06 (work in progress), July 2016.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC3552]  Rescorla, E. and B. Korver, "Guidelines for Writing RFC
              Text on Security Considerations", BCP 72, RFC 3552,
              DOI 10.17487/RFC3552, July 2003,
              <http://www.rfc-editor.org/info/rfc3552>.

   [RFC6255]  Blanchet, M., "Delay-Tolerant Networking Bundle Protocol
              IANA Registries", RFC 6255, May 2011.



Birrane & McKeever     Expires September 13, 2017              [Page 34]

Internet-Draft   Bundle Protocol Security Specification       March 2017


13.2.  Informative References

   [RFC4838]  Cerf, V., Burleigh, S., Hooke, A., Torgerson, L., Durst,
              R., Scott, K., Fall, K., and H. Weiss, "Delay-Tolerant
              Networking Architecture", RFC 4838, April 2007.

   [RFC6257]  Symington, S., Farrell, S., Weiss, H., and P. Lovell,
              "Bundle Security Protocol Specification", RFC 6257, May
              2011.

   [SBSP]     Birrane, E., "Streamlined Bundle Security Protocol",
              draft-birrane-dtn-sbsp-01 (work in progress), October
              2015.

Appendix A.  Acknowledgements

   The following participants contributed technical material, use cases,
   and useful thoughts on the overall approach to this security
   specification: Scott Burleigh of the Jet Propulsion Laboratory, Amy
   Alford and Angela Hennessy of the Laboratory for Telecommunications
   Sciences, and Angela Dalton and Cherita Corbett of the Johns Hopkins
   University Applied Physics Laboratory.

Authors' Addresses

   Edward J. Birrane, III
   The Johns Hopkins University Applied Physics Laboratory
   11100 Johns Hopkins Rd.
   Laurel, MD  20723
   US

   Phone: +1 443 778 7423
   Email: Edward.Birrane@jhuapl.edu


   Kenneth McKeever
   The Johns Hopkins University Applied Physics Laboratory
   11100 Johns Hopkins Rd.
   Laurel, MD  20723
   US

   Phone: +1 443 778 2237
   Email: Ken.McKeever@jhuapl.edu








Birrane & McKeever     Expires September 13, 2017              [Page 35]
