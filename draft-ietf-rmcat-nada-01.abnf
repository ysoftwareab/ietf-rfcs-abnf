d_tilde = <  QTH ----------------, if QTH<d_n<QMAX  (1)
                |     (QMAX - QTH)^4
                |
                \  0,                   otherwise.


x_n = d_tilde + p_mark*DMARK + p_loss*DLOSS.      (2)


x_prev = x_n
t_last = t_curr

gamma = min(GAMMA_MAX, -----------)     (3)
                               rtt+DELTA

r_n  =  (1+gamma) r_recv             (4)

x_offset = x_n - PRIO*X_REF*RMAX/r_n           (5)

x_diff   = x_n - x_prev                        (6)

                          delta    x_offset
r_n = r_n - KAPPA*-------*------------*r_n
                           TAU       TAU

                              x_diff
                 - KAPPA*ETA*---------*r_n            (7)
                               TAU

r_n = min(r_n, RMAX)          (8)

r_n = max(r_n, RMIN)          (9)

p_loss = ALPHA*p_inst + (1-ALPHA)*p_loss.   (10)

r_vin = r_n - BETA_V*8*buffer_len*FPS.     (11)

r_send = r_n + BETA_S*8*buffer_len*FPS.    (12)

q_avg = w*q + (1-w)*q_avg.

p= <  p_max*--------------, if q_lo <= q < q_hi;
              |         q_hi - q_lo
              |
              \ p = 1,                if q >= q_hi.

p = <  p_max* --------------, if b_lo<= b-b_tk <b_hi;
            |           b_hi-b_lo
            |
            \ 1,                     if b-b_tk>=b_hi.
