





      
      
     MMUSIC Working Group                                       F. Andreasen 
     Internet Draft                                            Cisco Systems 
     Expires: July 2007                                     January 28, 2007 
                                         
      
                                           
                             SDP Capability Negotiation 
                 draft-ietf-mmusic-sdp-capability-negotiation-01.txt 


     Status of this Memo 

        By submitting this Internet-Draft, each author represents that       
        any applicable patent or other IPR claims of which he or she is       
        aware have been or will be disclosed, and any of which he or she       
        becomes aware will be disclosed, in accordance with Section 6 of       
        BCP 79. 

        Internet-Drafts are working documents of the Internet Engineering 
        Task Force (IETF), its areas, and its working groups.  Note that 
        other groups may also distribute working documents as Internet-
        Drafts. 

        Internet-Drafts are draft documents valid for a maximum of six months 
        and may be updated, replaced, or obsoleted by other documents at any 
        time.  It is inappropriate to use Internet-Drafts as reference 
        material or to cite them other than as "work in progress." 

        The list of current Internet-Drafts can be accessed at 
             http://www.ietf.org/ietf/1id-abstracts.txt 

        The list of Internet-Draft Shadow Directories can be accessed at 
             http://www.ietf.org/shadow.html 

        This Internet-Draft will expire on July 28, 2007. 

     Abstract 

        The Session Description Protocol (SDP) was intended for describing 
        multimedia sessions for the purposes of session announcement, session 
        invitation, and other forms of multimedia session initiation. SDP was 
        not intended to provide capability indication or capability 
        negotiation, however over the years, SDP has seen widespread adoption 
        and as a result it has been gradually extended to provide limited 
        support for these. SDP and its current extensions however do not have 
        the ability to negotiate one or more alternative transport protocols 
        (e.g. RTP profiles) which makes it particularly difficult to deploy 
        new RTP profiles such as secure RTP or RTP with RTCP-based feedback. 
      
      
      
     Andreasen               Expires July 28, 2007                  [Page 1] 
      







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        The purpose of this document is to address that and other real-life 
        limitations by extending SDP with capability negotiation parameters 
        and associated offer/answer procedures to use those parameters in a 
        backwards compatible manner.  

        The solution provided in this document provides a general SDP 
        capability negotiation framework. It also defines specifically how to 
        provide attributes and transport protocols as capabilities and 
        negotiate them using the framework. Extensions for other types of 
        capabilities (e.g. media types and formats) may be provided in other 
        documents. 

     Conventions used in this document 

        The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", 
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this 
        document are to be interpreted as described in [RFC2119]. 

     Table of Contents 

         
        1. Introduction...................................................3 
        2. SDP Capability Negotiation Solution............................5 
           2.1. Solution Overview.........................................5 
           2.2. Version and Extension Indication Attributes...............8 
              2.2.1. Supported Capability Negotiation Extensions Attribute8 
              2.2.2. Required Capability Negotiation Extension Attribute.10 
           2.3. Capability Attributes....................................11 
              2.3.1. Attribute Capability Attribute......................11 
              2.3.2. Transport Protocol Capability Attribute.............13 
           2.4. Configuration Attributes.................................13 
              2.4.1. Potential Configuration Attribute...................13 
              2.4.2. Actual Configuration Attribute......................17 
           2.5. Offer/Answer Model Extensions............................18 
              2.5.1. Generating the Initial Offer........................18 
              2.5.2. Generating the Answer...............................19 
              2.5.3. Offerer Processing of the Answer....................20 
              2.5.4. Modifying the Session...............................20 
        3. Examples......................................................21 
           3.1. Best-Effort Secure RTP...................................21 
        4. Security Considerations.......................................23 
        5. IANA Considerations...........................................23 
        6. To Do and Open Issues.........................................23 
        7. Acknowledgments...............................................23 
        8. Change Log....................................................24 
           8.1. draft-ietf-mmusic-sdp-capability-negotiation-01..........24 
           8.2. draft-ietf-mmusic-sdp-capability-negotiation-00..........24 
      
      
     Andreasen               Expires July 28, 2007                  [Page 2] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        9. References....................................................26 
           9.1. Normative References.....................................26 
           9.2. Informative References...................................26 
        Author's Addresses...............................................28 
        Intellectual Property Statement..................................28 
        Disclaimer of Validity...........................................29 
        Copyright Statement..............................................29 
        Acknowledgment...................................................29 
         
     1. Introduction 

        The Session Description Protocol (SDP) was intended for describing 
        multimedia sessions for the purposes of session announcement, session 
        invitation, and other forms of multimedia session initiation. The SDP 
        contains one or more media stream descriptions with information such 
        as IP-address and port, type of media stream (e.g. audio or video), 
        transport protocol (possibly including profile information, e.g. 
        RTP/AVP or RTP/SAVP), media formats (e.g. codecs), and various other 
        session and media stream parameters that define the session.  

        Simply providing media stream descriptions is sufficient for session 
        announcements for a broadcast application, where the media stream 
        parameters are fixed for all participants. When a participant wants 
        to join the session, he obtains the session announcement and uses the 
        media descriptions provided, e.g., joins a multicast group and 
        receives media packets in the encoding format specified.  If the 
        media stream description is not supported by the participant, he is 
        unable to receive the media.  

        Such restrictions are not generally acceptable to multimedia session 
        invitations, where two or more entities attempt to establish a media 
        session that uses a set of media stream parameters acceptable to all 
        participants. First of all, each entity must inform the other of its 
        receive address, and secondly, the entities need to agree on the 
        media stream parameters to use for the session, e.g. transport 
        protocols and codecs. We here make a distinction between the 
        capabilities supported by each participant, the way in which those 
        capabilities can be supported and the parameters that can actually be 
        used for the session. More generally, we can say that we have the 
        following: 

        o  A set of capabilities for the session and its associated media 
           stream components, supported by each side.  

        o  A set of potential configurations indicating which of those 
           capabilities can be used for the session and its associated media 
           stream components.  
      
      
     Andreasen               Expires July 28, 2007                  [Page 3] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        o  A set of actual configurations for the session and its associated 
           media stream components, which specifies which session parameters 
           to use and which media stream components to use and with what 
           parameters. 

        o  A negotiation process that takes the set of potential 
           configurations (lists of capabilities) as input and provides the 
           actual configurations as output.  

        SDP by itself was designed to provide only one of these, namely the 
        actual configurations, however over the years, use of SDP has been 
        extended beyond its original scope.  Session negotiation semantics 
        were defined by the offer/answer model in RFC 3264.  It defines how 
        two entities, an offerer and an answerer, exchange session 
        descriptions to negotiate a session. The offerer can include one or 
        more media formats (codecs) per media stream, and the answerer then 
        selects one or more of those offered and returns them in an answer. 
        Both the offer and the answer contain actual configurations - 
        capabilities and potential configurations are not supported. The 
        answer however may reduce the set of actual configurations from the 
        offer. The answer may also extend the set of actual configurations 
        that can be used to receive media by the answerer.  

        Other relevant extensions have been defined. Simple capability 
        declarations, which define how to provide a simple and limited set of 
        capability descriptions in SDP was defined in RFC 3407.  Grouping of 
        media lines, which defines how media lines in SDP can have other 
        semantics than the traditional "simultaneous media streams" 
        semantics, was defined in RFC 3388, etc.   

        Each of these extensions was designed to solve a specific limitation 
        of SDP.  Since SDP had already been stretched beyond its original 
        intent, a more comprehensive capability declaration and negotiation 
        process was intentionally not defined.  Instead, work on a "next 
        generation" of a protocol to provide session description and 
        capability negotiation was initiated [SDPng].  SDPng however has not 
        gained traction and has remained as work in progress for an extended 
        period of time.  Existing real-time multimedia communication 
        protocols such as SIP, RTSP, Megaco, and MGCP continue to use SDP.  
        SDP and its current extensions however do not address an increasingly 
        important problem: the ability to negotiate one or more alternative 
        transport protocols (e.g., RTP profiles).  This makes it difficult to 
        deploy new RTP profiles such as secure RTP (SRTP) [SRTP], RTP with 
        RTCP-Based Feedback [AVPF], etc.  This particular problem is 
        exacerbated by the fact that RTP profiles are defined independently.  
        When a new profile is defined and N other profiles already exist, 
        there is a potential need for defining N additional profiles, since 
      
      
     Andreasen               Expires July 28, 2007                  [Page 4] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        profiles cannot be combined automatically.  For example, in order to 
        support the plain and secure RTP version of RTP with and without 
        RTCP-based feedback, four separate profiles (and hence profile 
        definitions) are needed: RTP/AVP [RFC3551], RTP/SAVP [SRTP], RTP/AVPF 
        [AVPF], and RTP/SAVPF [SAVPF].  In addition to the pressing profile 
        negotiation problem, other important real-life constraints have been 
        found as well.  

        The purpose of this document is to define a mechanism that enables 
        SDP to provide limited support for indicating capabilities and their 
        associated potential configurations and negotiate the use of those 
        potential configurations as actual configurations.  It is not the 
        intent to provide a full-fledged capability indication and 
        negotiation mechanism along the lines of SDPng or ITU-T H.245. 
        Instead, the focus is on addressing a set of well-known real-life 
        limitations. More specifically, the solution provided in this 
        document provides a general SDP capability negotiation framework. It 
        also defines specifically how to provide attributes and transport 
        protocols as capabilities and negotiate them using the framework. 
        Extensions for other types of capabilities (e.g. media types and 
        formats) may be provided in other documents. 

        As mentioned above, SDP is used by several protocols, and hence the 
        mechanism should be usable by all of these.  One particularly 
        important protocol for this problem however is the Session Initiation 
        Protocol (SIP) [RFC3261].  SIP uses the offer/answer model (which is 
        not specific to SIP) to negotiate sessions and hence any mechanism 
        must at least consider how it either interacts with offer/answer, or 
        how it should extend it.  

        The rest of the document is structured as follows. In Section 2. we 
        present our SDP capability negotiation solution followed by examples 
        in Section 3. and security considerations in Section 4.  

     2. SDP Capability Negotiation Solution 

        In this section we first provide an overview of the SDP Capability 
        negotiation solution. This is followed by definitions of new SDP 
        attributes for the solution and its associated updated offer/answer 
        procedures.  

     2.1. Solution Overview  

        The solution consists of the following: 

        o  Two new attributes to support versioning and extensions to the 
           framework itself as follows: 
      
      
     Andreasen               Expires July 28, 2007                  [Page 5] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

            o  A new attribute ("a=csup") that lists the supported base and 
               extension options to the framework. 

            o  A new attribute ("a=creq") that lists the base and or 
               extensions to the framework that are required to be supported 
               by the entity receiving the SDP. 

        o  Two new attributes used to express capabilities as follows 
           (additional attributes can be defined as extensions): 

            o  A new attribute ("a=capar") that defines how to list attribute 
               parameter values ("a=" values) as capabilities.  

            o  A new attribute ("a=ctrpr") that defines how to list transport 
               protocols (e.g. "RTP/AVP") as capabilities. 

        o  Two new attributes to negotiate configurations as follows: 

            o  A new attribute ("a=pcfg") that lists the potential 
               configurations supported. This is done by reference to the 
               capabilities from the SDP in question. Multiple potential 
               configurations have an explicitly indicated ordering 
               associated with them. Extension capabilities can be defined 
               and included in the potential configurations.  

            o  A new attribute ("a=acfg") to be used in an answer SDP. The 
               attribute identifies which of the potential configurations 
               from an offer SDP were used as actual configurations to form 
               the answer SDP. Extension capabilities can included. 

        o  Extensions to the offer/answer model that allow for capabilities 
           and potential configurations to be included in an offer. When 
           included at the session level, they constitute latent capabilities 
           that may be used to guide a subsequent offer. When included at the 
           media level, they constitute offers that may be accepted by the 
           answerer instead of the actual configuration(s) included in the 
           "m=" line(s). The answerer indicates which (if any) of the 
           potential configurations it used to form the answer by including 
           the actual configuration attribute ("a=acfg") in the answer.  
           Capabilities and potential configurations may be included in 
           answers as well, where they can aid in guiding a subsequent new 
           offer. 

        The mechanism is illustrated by the offer/answer exchange below, 
        where Alice sends an offer to Bob:  


      
      
     Andreasen               Expires July 28, 2007                  [Page 6] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

                     Alice                               Bob 

                       | (1) Offer (SRTP and RTP)         | 
                       |--------------------------------->| 
                       |                                  | 
                       | (2) Answer (RTP)                 | 
                       |<---------------------------------| 
                       |                                  | 

        Alice's offer includes RTP and SRTP as alternatives. RTP is the 
        default, but SRTP is the preferred one: 

           v=0 
           o=- 25678 753849 IN IP4 128.96.41.1 
           s=  
           c=IN IP4 128.96.41.1 
           t=0 0 
           m=audio 3456 RTP/AVP 0 18  
           a=creq: v0 
           a=ctrpr:1 RTP/SAVP  
           a=capar:1 a=crypto:1 AES_CM_128_HMAC_SHA1_32    
              inline:NzB4d1BINUAvLEw6UzF3WSJ+PSdFcGdUJShpX1Zj|2^20|1:32  
           a=pcfg:1 t=1 a=1   

        The "m=" line indicates that Alice is offering to use plain RTP with 
        PCMU or G.729.  The required base and extensions are provided by the 
        "a=creq" attribute, which indicates that the option tag "v0", which 
        indicates the base framework defined here, must be supported. The 
        capabilities are provided by the "a=ctrpr" and "a=capar" attributes. 
        The capabilities indicate that secure RTP under the AVP profile 
        ("RTP/SAVP") is supported with an associated transport capability 
        handle of 1. The "capar" attribute provides an attribute capability 
        with a handle of 1. The attribute capability is a "crypto" attribute, 
        which provides the keying material for SRTP using SDP security 
        descriptions [SDES]. The "a=pcfg" attribute provides the potential 
        configuration included in the offer by reference to the capability 
        parameters.  One alternatives is provided; it has a preference of 1 
        and it consists of transport protocol capability 1 (i.e. the RTP/SAVP 
        profile - secure RTP), and the attribute capability 1, i.e. the 
        crypto attribute provided. Potential configurations are always 
        preferred over actual configurations, and hence Alice is expressing a 
        preference for using secure RTP. 

        Bob receives the SDP offer from Alice. Bob supports SRTP and the SDP 
        Capability Negotiation framework, and hence he accepts the 
        (preferred) potential configuration for Secure RTP provided by Alice: 

      
      
     Andreasen               Expires July 28, 2007                  [Page 7] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

           v=0 
           o=- 24351 621814 IN IP4 128.96.41.2 
           s=  
           c=IN IP4 128.96.41.2 
           t=0 0 
           m=audio 4567 RTP/SAVP 0 18  
           a=crypto:1 AES_CM_128_HMAC_SHA1_80 
                 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:4
           a=acfg: t=1 a=1 

        Bob includes the "a=acfg" attribute in the answer to inform Alice 
        that he based his answer on an offer containing the potential 
        configuration with transport protocol capability 1 and attribute 
        capability 1 from the offer SDP (i.e. the RTP/SAVP profile using the 
        keying material provided).  Bob also includes his keying material in 
        a crypto attribute. If Bob supported one or more extensions to the 
        capability negotiation framework, he would have included those in the 
        answer as well. 

        Note that in this particular example, the answerer supported the 
        capability negotiation extensions defined here, however had he not, 
        the answerer would simply have ignored the new attributes and 
        accepted the offer to use normal RTP. In that case, the following 
        answer would have been generated instead: 

           v=0 
           o=- 24351 621814 IN IP4 128.96.41.2 
           s=  
           c=IN IP4 128.96.41.2 
           t=0 0 
           m=audio 4567 RTP/AVP 0 18   

     2.2. Version and Extension Indication Attributes 

        In this section, we present the new attributes associated with 
        indicating the SDP capability negotiation version and extensions 
        supported and required.  

     2.2.1. Supported Capability Negotiation Extensions Attribute 

        The SDP Capability negotiation solution allows for capability 
        negotiation extensions to be defined. Associated with each such 
        extension is an option tag that identifies the extension in question. 
        Option-tags MUST be registered with IANA per the procedures defined 
        in Section 5.  


      
      
     Andreasen               Expires July 28, 2007                  [Page 8] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        The Supported Capability Negotiation Extensions attribute ("a=csup") 
        contains a comma-separated list of option tags identifying the SDP 
        Capability negotiation extensions supported by the entity that 
        generated the SDP. The attribute is defined as follows: 

           a=csup: <option-tag-list> 

        where <option-tag-list> is defined by the following ABNF: 

           option-tag-list   = option-tag *(COMMA option-tag) 
           option-tag        = token    ; defined in [SDP] 
           COMMA             = *WSP "," *WSP  ; defined in [RFC4234] 

        White-space is permitted before the <option-tag-list>. 

          Implementers familiar with SIP should note that the above 
          definition of COMMA differs from the one in [RFC3261].  

        A special base option tag with a value of "v0" is defined for the 
        basic SDP capability negotiation framework specified in this 
        document. Entities can use this option tag with the "a=csup" 
        attribute to indicate support for the SDP capability negotiation 
        framework specified in this document.  

        The following examples illustrates the use of the "a=csup" attribute 
        with two hypothetical option tags, "foo" and "bar": 

           a=csup: foo 
           a=csup: bar 
           a=csup: foo, bar 

        The "a=csup" attribute can be provided at the session and the media-
        level. When provided at the session-level, it applies to the entire 
        SDP. When provided at the media-level, it applies to the media-stream 
        in question only (option-tags provided at the session level apply as 
        well). There can be one or more "a=csup" attributes at both the 
        session and media-level (one or more per media stream in the latter 
        case).  

        Whenever an entity that supports one or more extensions to the SDP 
        Capability Negotiation framework generates an SDP, it SHOULD include 
        the "a=csup" attribute with the option tags for the extensions it 
        supports at the session and/or media-level, unless those option tags 
        are already provided in one or more "a=creq" attribute (see Section 
        2.2.2. ) at the relevant levels. The base option tag MAY be included.  


      
      
     Andreasen               Expires July 28, 2007                  [Page 9] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

     2.2.2. Required Capability Negotiation Extension Attribute 

        The SDP Capability negotiation solution allows for capability 
        negotiation extensions to be defined. Associated with each such 
        extension is an option tag that identifies the extension in question. 
        Option-tags MUST be registered with IANA per the procedures defined 
        in Section 5.  

        The Required Capability Negotiation Extensions attribute ("a=csup") 
        contains a comma-separated list of option tags identifying the SDP 
        Capability negotiation extensions that MUST be supported by the 
        entity receiving the SDP in order for that entity to properly process 
        the SDP Capability negotiation. The attribute is defined as follows: 

           a=creq: <option-tag-list> 

        where <option-tag-list> is defined in Section 2.2.1.  

        White-space is permitted before the <option-tag-list>. 

        The following examples illustrate the use of the "a=creq" attribute 
        with two hypothetical option tags, "foo" and "bar": 

           a=creq: foo 
           a=creq: bar 
           a=creq: foo, bar 

        The "a=creq" attribute can be provided at the session and the media-
        level. When provided at the session-level, it applies to the entire 
        SDP. When provided at the media-level, it applies to the media-stream 
        in question only (required option tags provided at the session level 
        apply as well). There can be one or more "a=creq" attributes at both 
        the session and media-level (one or more per media stream in the 
        latter case).  

        When an entity generates an SDP and it requires the recipient of that 
        SDP to support one or more SDP capability negotiation extensions in 
        order to properly process the SDP Capability negotiation, the 
        "a=creq" attribute MUST be included with option-tags that identify 
        the required extensions at the session and/or media level, unless it 
        is already known that the receiving entity supports those option-tags 
        at the relevant levels (in which case their inclusion is OPTIONAL).  

          An example of this is when generating an answer to an offer. If the 
          answerer supports the required option-tags from the offer, and the 
          answerer does not require any additional option-tags beyond what 
          was listed in either the required ("creq") or supported ("csup")  
      
      
     Andreasen               Expires July 28, 2007                 [Page 10] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

          attributes from the offer, then the answerer is not required to 
          include a required ("creq") attribute with any option-tags that may 
          need to be supported (such as the base option tag - "v0"). 

        A recipient that receives an SDP and does not support one or more of 
        the required extensions listed in a "creq" attribute, MUST NOT 
        perform the SDP capability negotiation defined in this document. For 
        non-supported extensions provided at the session-level, this implies 
        that SDP capability negotiation MUST NOT be performed at all. For 
        non-supported extensions at the media-level, this implies that SDP 
        capability negotiation MUST NOT be performed for the media stream in 
        question.  

        When an entity does not support one or more required SDP capability 
        negotiation extensions, the entity SHOULD proceed as if the SDP 
        capability negotiation attributes were not included in the first 
        place, i.e. all the capability negotiation attributes should be 
        ignored.  

          This ensures that introduction of the SDP capability negotiation 
          mechanism does not introduce any new failure scenarios.  

        The above rules apply to the base option tag as well. Thus, entities 
        compliant to this specification MUST include a "creq" attribute (at 
        least in an offer) that includes the option tag "v0" as illustrated 
        below: 

           a=creq: v0 

     2.3. Capability Attributes 

        In this section, we present the new attributes associated with 
        indicating the capabilities for use by the SDP Capability 
        negotiation. 

     2.3.1. Attribute Capability Attribute 

        Attributes can be expressed as negotiable parameters by use of a new 
        attribute capability attribute ("a=capar"), which is defined as 
        follows: 

           a=capar: <att-cap-num> <att-par> 

        where <att-cap-num> is an integer between 1 and 2^32-1 (both 
        included) used to number the attribute capability and <att-par> is an 
        attribute ("a=") in its full  '<type>=<value>' form (see [SDP]). 

      
      
     Andreasen               Expires July 28, 2007                 [Page 11] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        The "capar" attribute can be provided at the session level for 
        session-level attributes and the media level for media-level 
        attributes. The "capar" attribute MUST NOT be used to provide a 
        media-level attribute at the session-level or vice versa.  

        Each occurrence of the "capar" attribute in the entire session 
        description MUST use a different value of <app-cap-num>.   

          There is a need to be able to reference both session-level and 
          media-level attributes in potential configurations at the media 
          level, and this provides for a simple solution to avoiding overlap 
          between the handle references. 

        The <att-cap-num> values provided are independent of similar <cap-
        num> values provided for other attributes, i.e., they form a separate 
        name-space for attribute parameter capabilities.  

        The following examples illustrate use of the "capar" attribute:  

           a=capar: 1 a=ptime:20 
         
           a=capar: 2 a=ptime:30 

           a=capar: 3 a=key-mgmt:mikey AQAFgM0XflABAAAAAAAAAAAAAAsAyONQ6gAA 
           AAAGEEoo2pee4hp2UaDX8ZE22YwKAAAPZG9uYWxkQGR1Y2suY29tAQAAAAAAAQAk0
           JKpgaVkDaawi9whVBtBt0KZ14ymNuu62+Nv3ozPLygwK/GbAV9iemnGUIZ19fWQUO
           SrzKTAv9zV 
            
           a=capar: 4 a=crypto:1 AES_CM_128_HMAC_SHA1_32    
                 inline:NzB4d1BINUAvLEw6UzF3WSJ+PSdFcGdUJShpX1Zj|2^20|1:32  
            

        The first two provide attribute values for the ptime attribute. The 
        third one provides SRTP parameters by using MIKEY with the key-mgmt 
        attribute [KMGMT]. The fourth one provides SRTP parameters by use of 
        security descriptions with the crypto attribute [SDES]. 

          Readers familiar with RFC 3407 may notice the similarity between 
          the RFC 3407 "cpar" attribute and the above. There are however a 
          couple of important differences, most notably that the "capar" 
          attribute contains a handle that enables referencing it and it 
          furthermore supports attributes only (the "cpar" attribute defined 
          in RFC 3407 supports bandwidth information as well). The "capar" 
          attribute also is not automatically associated with any particular 
          capabilities.  


      
      
     Andreasen               Expires July 28, 2007                 [Page 12] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

     2.3.2. Transport Protocol Capability Attribute 

        Transport Protocols can be expressed as capabilities by use of a new 
        Transport Protocol Capability attribute ("a=ctrpr") defined as 
        follows: 

           a=ctrpr: <trpr-cap-num> <proto-list> 

        where <trpr-cap-num> is an integer between 1 and 2^32-1 (both 
        included) used to number the transport address capability for later 
        reference, and <proto-list> is one or more <proto>, separated by 
        white space, as defined in the SDP "m=" line.  

        The "ctrpr" attribute can be provided at the session- and media-
        level. Each occurrence of the "ctrpr" attribute in the entire session 
        description MUST use a different value of <trpr-cap-num>.  When 
        multiple <proto> values are provided, the first one is associated 
        with the value <trpr-cap-num>, the second one with the value one 
        higher, etc. The <trpr-cap-num> values provided are independent of 
        similar <cap-num> values provided for other attributes, i.e., they 
        form a separate name-space for transport protocol capabilities.  

        Below, we provide examples of the "a=ctrpr" attribute: 

           a=ctrpr: 1 RTP/AVP 
           a=ctrpr: 2 RTP/AVPF 
           a=ctrpr: 3 RTP/SAVP RTP/SAVPF 

        The first one provides a capability for the "RTP/AVP" profile defined 
        in [RFC3551] and the second one provides a capability for the RTP 
        with RTCP-Based Feedback profile defined in [AVPF]. The third one 
        provides capabilities for the "RTP/SAVP" and "RTP/SAVPF" profiles.  

     2.4. Configuration Attributes 

     2.4.1. Potential Configuration Attribute 

        Potential Configurations can be expressed by use of a new Potential 
        Configuration Attribute ("a=pcfg") defined as follows:  

           a=pcfg: <preference> <pot-cfg-list> 

        where <preference> is an integer between 1 and 2^32-1 (both included) 
        and <pot-cfg-list> is defined as 

           pot-cfg-list   =  pot-config *(1*WSP pot-config) 
         
      
      
     Andreasen               Expires July 28, 2007                 [Page 13] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

           pot-config     =  pot-attribute-parameter-config | 
                             pot-transport-protocol-config | 
                             pot-extension-config 

        The potential configuration attribute includes a preference 
        indication (lowest number is most preferred) followed by one or more 
        of potential attribute parameter configuration and transport protocol 
        configuration.  Each of these MUST NOT be present more than once in a 
        particular potential configuration attribute. Potential extension 
        configurations can be included as well.  There can be more than one 
        potential extension configuration, however each particular potential 
        extension configuration MUST NOT be present more than once in a given 
        potential configuration attribute. Together, these values define a 
        potential configuration.  

        There can be multiple potential configurations provided at the 
        session-level as well as the media-level. The semantics for each of 
        these levels differ. A potential configuration at the session level 
        provides a set of latent capabilities. A latent capability is merely 
        an indication that the potential configuration could be supported, 
        however it does not represent a willingness to do so at the current 
        time. A potential configuration at the media level on the other hand 
        indicates not only a willingness, but in fact a desire to use the 
        potential configuration. 

          In the case of offer/answer, this implies that a potential 
          configuration at the session level does not constitute an 
          alternative offer whereas it does at the media level.  

        Associated with each potential configuration is a preference 
        indication, which is an integer between 1 and 2^32-1 (both included) 
        to indicate the relative preference of potential configurations. The 
        scope of the preference (and in fact each occurrence of a potential 
        configuration attribute) is the session-level, when provided there, 
        or the particular media stream it is provided at.  

        Attribute capabilities are included in a potential configuration by 
        use of the pot-attribute-parameter-config parameter, which is defined 
        by the following ABNF: 

           pot-attribute-parameter-config  
                             = "a=" capar-cap-list *(BAR capar-cap-list) 
           capar-cap-list    = att-cap-num *(COMMA att-cap-num) 
           att-cap-num       = 1*DIGIT   ;defined in [RFC4234] 

        Each potential attribute parameter configuration list is a comma-
        separated list of attribute capability numbers where att-cap-num 
      
      
     Andreasen               Expires July 28, 2007                 [Page 14] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        refers to attribute capability numbers defined above and hence MUST 
        be between 1 and 2^32-1 (both included). Alternative potential 
        attribute parameter configurations are separated by a vertical bar 
        ("|"), the scope of which extends to the next alternative (i.e. "," 
        has higher precedence than "|"). The alternatives are ordered by 
        preference.  

        Transport protocol capabilities are included in a potential 
        configuration by use of the pot-transport-protocol-config parameter, 
        which is defined by the following ABNF: 

           pot-transport-protocol-config =  
                                "t=" trpr-cap-num *(BAR trpr-cap-num) 
           trpr-cap-num        = 1*DIGIT   ; defined in [RFC4234] 

        The trpr-cap-num refers to transport protocol capability numbers 
        defined above and hence MUST be between 1 and 2^32-1 (both included). 
        Alternative potential transport protocol configurations are separated 
        by a vertical bar ("|").  The alternatives are ordered by preference. 
        When transport protocol capabilities are not included in a potential 
        configuration at the media level, the transport protocol information 
        from the associated "m=" line will be used.  At the session-level, 
        lack of a transport protocol capability indication simply implies 
        that no such information is provided.  

        Extension capabilities can be included in a potential configuration 
        as well. Such extensions MUST adhere to the following ABNF: 

           pot-extension-config = ext-cap-name "="  
                                      ext-cap-list *(BAR ext-cap-list) 
           ext-cap-name   = token     ; defined in [SDP] 
           ext-cap-list   = ext-cap-num *(COMMA ext-cap-num) 
           ext-cap-num    = 1*DIGIT   ; defined in [RFC4234] 

        The ext-cap-name refers to the type of extension capability and the 
        ext-cap-num refers to a capability number associated with that 
        particular type of extension capability.  The number MUST be between 
        1 and 2^32-1 (both included).  Alternative potential extension 
        configurations for a particular extension are separated by a vertical 
        bar ("|"),the scope of which extends to the next alternative (i.e. 
        "," has higher precedence than "|").  Unsupported or unknown 
        potential extension configs MUST be ignored. 

          The "creq" attribute and its associated rules can be used to ensure 
          that required extensions are supported in the first place.  


      
      
     Andreasen               Expires July 28, 2007                 [Page 15] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        Potential configurations can be provided at the session level and the 
        media level and in either case, it is syntactically possible to 
        reference attribute capabilities provided at either the session or 
        the media level. There are however semantic rules and limitations 
        associated with this: At the session-level, a potential configuration 
        MUST NOT reference any attribute capabilities provided at the media-
        level. The converse however is permitted, i.e. a media-level 
        potential configuration can reference a session-level attribute 
        capability. The semantics of doing so (should that potential 
        configuration be chosen), is that the corresponding attribute 
        (provided within that attribute capability) will be considered part 
        of the active configuration at the *session* level. In other words, 
        it will be as-if that attribute was simply provided at the session-
        level in the first place. Note that individual media streams perform 
        capability negotiation individually, and hence it is possible that 
        another media stream (where the attribute was part of a potential 
        configuration) chose a configuration without that session level 
        attribute. The session-level attribute however remains "active" and 
        hence applies to the entire session. It is up to the entity that 
        generates the SDP to ensure that the resulting active configuration 
        SDP is still meaningful.  

          [EDITOR'S NOTE: There are too many subtle differences between 
          potential configurations at the session and media level. I'm 
          inclined to have two similarly looking (but different) attributes 
          instead as that will make it more straightforward and intuitive. 
          That also leaves the door open to have more than latent 
          capabilities at the session level in case that is needed later] 

        Below, we provide an example of the "a=pcfg" attribute in a complete 
        media description in order to properly indicate the supporting 
        attributes: 

           v=0 
           o=- 25678 753849 IN IP4 128.96.41.1 
           s=  
           c=IN IP4 128.96.41.1 
           t=0 0 
           m=audio 3456 RTP/AVPF 0 18  
           a=creq: v0 
           a=capar:1 crypto:1 AES_CM_128_HMAC_SHA1_32    
              inline:NzB4d1BINUAvLEw6UzF3WSJ+PSdFcGdUJShpX1Zj|2^20|1:32  
           a=ctrpr: 1 RTP/AVPF RTP/AVP 
           a=ctrpr: 3 RTP/SAVPF RTP/SAVP 
           a=pcfg:1 t=3|4 a=1 
           a=pcfg:8 t=1|2 

      
      
     Andreasen               Expires July 28, 2007                 [Page 16] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        We have two potential configurations listed here. The first one (and 
        most preferred, since it's preference is "1") indicates that either 
        of the profiles RTP/SAVPF or RTP/SAVP (specified by the transport 
        protocol capability numbers 3 and 4) can be supported with attribute 
        capability 1 (the "crypto" attribute); RTP/SAVPF is preferred since 
        it is listed first. The second potential configuration indicates that 
        the RTP/AVPF of RTP/AVP profile can be used, with RTP/AVPF being the 
        preferred one. This non secure RTP alternative is the less preferred 
        one since it's preference is "8".  

     2.4.2. Actual Configuration Attribute 

        The actual configuration attribute identifies which of the potential 
        configurations from an offer SDP were used as actual configurations 
        in an answer SDP.  This is done by reference to the attribute 
        capabilities and transport protocol capabilities from the offer that 
        were actually used by the answerer in his offer/answer procedure. If 
        extension capabilities were used, those will be included by reference 
        as well. 

        The Actual Configuration Attribute ("a=acfg") is defined as follows:  

           a=acfg: <act-cfg-list> 

        where <act-cfg-list> is defined as 

           act-cfg-list   =  capability *(1*WSP capability) 
         
           capability        =  act-attribute-parameter-config | 
                                act-transport-protocol-config | 
                                act-extension-config 

        act-attribute-parameter-config is defined by the following ABNF: 

           act-attribute-parameter-config = "a=" capar-cap-list 

        where capar-cap-list is as defined in Section 2.4.1.  

        act-transport-protocol-config is defined by the following ABNF: 

           act-transport-protocol-config = "t=" trpr-cap-num 

        where trpr-cap-num is as defined in Section 2.4.1.  

           trpr-cap-num        = 1*3DIGIT   ; defined in [RFC4234] 

        act-extension-config is defined by the following ABNF: 
      
      
     Andreasen               Expires July 28, 2007                 [Page 17] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

           act-extension-config = ext-cap-name "=" ext-cap-list 

        where ext-cap-name and ext-cap-list are as defined in Section 2.4.1.  

        The actual configuration ("a=acfg") attribute can be provided at the  
        media-level only. There MUST NOT be more than one occurrence of an 
        actual configuration attribute within a given media description.  

        Below, we provide an example of the "a=acfg" attribute (building on 
        the previous example with the potential configuration attribute): 

           v=0 
           o=- 24351 621814 IN IP4 128.96.41.2 
           s=  
           c=IN IP4 128.96.41.2 
           t=0 0 
           m=audio 4567 RTP/SAVPF 0  
           a=creq: 0 
           a=acfg: t=3 a=1 

        It indicates that the answerer used an offer consisting of transport 
        protocol capability 2 from the offer (RTP/SAVPF) and attribute 
        capability 1 (the "crypto" attribute.  

     2.5. Offer/Answer Model Extensions 

        In this section, we define extensions to the offer/answer model 
        defined in [RFC3264] to allow for potential configurations to be 
        included in an offer, where they constitute offers that may be 
        accepted by the answerer instead of the actual configuration(s) 
        included in the "m=" line(s).  

           [EDITOR'S NOTE: Multicast considerations have been omitted for 
           now.] 

           TO DO: Elaborate and firm up offer/answer procedures. 

     2.5.1. Generating the Initial Offer 

        An offerer that wants to use the SDP capability negotiation 
        extensions defined in this document MUST include the following in the 
        offer: 





      
      
     Andreasen               Expires July 28, 2007                 [Page 18] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        o  an SDP capability negotiation required extensions attribute ("a-
           creq") that contains the option tag "v0". It must either be 
           provided at the session-level or for each individual media stream. 
           Option tags for any other required extensions MUST be included as 
           well (in accordance with Section 2.2.2. ) 

        o  one or more attribute capability attributes (as defined in Section 
           2.3.1. ) if alternative attribute parameter values are to be 
           indicated as offerer capabilities or be negotiated. 

        o  one or more transport protocol capability attributes (as defined 
           in Section 2.3.2. ) if alternative transport protocols are to be 
           to be indicated as offerer capabilities or be negotiated. 

        o  one or more potential configuration attributes (as defined in 
           Section 2.4. ) if alternative potential configurations are to be 
           negotiated.  

        o  one or more required capability negotiation extension attributes 
           (as defined in Section 2.2.2. ), if the answerer is required to 
           support one or more SDP capability negotiation extensions.  

        The offerer SHOULD furthermore include the following: 

        o  one or more supported capability negotiation extension attributes 
           ("a=csup" as defined in Section 2.2.1. ), if the offerer supports 
           one or more SDP capability negotiation extensions that have not 
           been included in one or more "a=creq" attributes at the relevant 
           session and media level(s).  

        The capabilities provided merely indicate what the offerer is capable 
        of doing. They do not constitute a commitment or even an indication 
        to actually use them. This applies to potential configurations listed 
        at the session level as well. Conversely, each of the potential 
        configurations listed at the media level constitutes an alternative 
        offer which may be used to negotiate and establish the session.   

        The current actual configuration is included in the "m=" line (as 
        defined by [RFC3264]).  

     2.5.2. Generating the Answer  

        When the answerer receives an offer with valid SDP capability 
        negotiation information in it and in particular with one or more 
        valid potential configuration information attributes present, it may 
        use any of the potential configurations as an alternative offer. A 
        potential configuration information attribute is valid if all of the 
      
      
     Andreasen               Expires July 28, 2007                 [Page 19] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        capabilities (attribute capabilities, transport protocol capabilities 
        and any extension capabilities) it references are present and valid 
        themselves.  

        The actual configuration is contained in the media description's "m=" 
        line. The answerer can send media to the offerer in accordance with 
        the actual configuration, however if it chooses to use one of the 
        alternative potential configurations, media sent to the offerer may 
        be discarded by the offerer until the answer is received.   

        If the answerer chooses to accept one of the alternative potential 
        configurations instead of the actual configuration, the answerer MUST 
        generate an answer as if the offer contained that potential 
        configuration instead of the actual configuration included. The 
        answerer MUST also include an actual configuration attribute in the 
        answer that identifies the potential configuration from the offer 
        used by the answerer. The actual configuration attribute in the 
        answer MUST include information about the attribute capabilities, 
        transport protocol parameters, and extension capabilities from the 
        potential configuration that were used to generate the answer.  

     2.5.3.  Offerer Processing of the Answer  

        When the offerer included potential configurations for a media 
        stream, it MUST examine the answer for the presence of an actual 
        configuration attribute for each such media stream.  If the attribute 
        is missing, offerer processing of the answer MUST proceed as defined 
        by [RFC3264]. If the attribute is present, processing continues as 
        follows: 

        The actual configuration attribute specifies which of the potential 
        configurations were used by the answerer to generate the answer. This 
        includes all the types of capabilities from the potential 
        configuration offered, i.e. the attribute capabilities ("a=capar"), 
        transport protocol capabilities ("a=ctrpr"), and any extension 
        capability parameters included.  

        The offerer MUST now process the answer as if the offer had contained 
        the potential configuration as the actual configuration in the media 
        description ("m=" line) and relevant attributes in the offer.  

     2.5.4. Modifying the Session        

        Potential configurations may be included in subsequent offers as 
        defined in [RFC3264, Section 8].  The procedure for doing so is 
        similar to that described above with the answer including an 
        indication of the actual configuration used by the answerer.  
      
      
     Andreasen               Expires July 28, 2007                 [Page 20] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

     3. Examples 

        In this section, we provide examples showing how to use the SDP 
        Capability Negotiation.  

     3.1. Best-Effort Secure RTP 

        The following example illustrates how to use the SDP Capability 
        negotiation extensions to support so-called Best-Effort Secure RTP. 
        In that scenario, the offerer supports both RTP and Secure RTP. If 
        the answerer does not support secure RTP (or the SDP capability 
        negotiation extensions), an RTP session will be established. However, 
        if the answerer supports Secure RTP and the SDP Capability 
        Negotiation extensions, a Secure RTP session will be established.  

        The best-effort Secure RTP negotiation is illustrated by the 
        offer/answer exchange below, where Alice sends an offer to Bob:  

                     Alice                               Bob 

                       | (1) Offer (SRTP and RTP)         | 
                       |--------------------------------->| 
                       |                                  | 
                       | (2) Answer (RTP)                 | 
                       |<---------------------------------| 
                       |                                  | 

        Alice's offer includes RTP and SRTP as alternatives. RTP is the 
        default, but SRTP is the preferred one: 

           v=0 
           o=- 25678 753849 IN IP4 128.96.41.1 
           s=  
           c=IN IP4 128.96.41.1 
           t=0 0 
           m=audio 3456 RTP/AVP 0 18  
           a=creq: v0 
           a=ctrpr:1 RTP/SAVP RTP/AVP 
           a=capar:1 a=crypto:1 AES_CM_128_HMAC_SHA1_80              
              inline:WVNfX19zZW1jdGwgKCkgewkyMjA7fQp9CnVubGVz|2^20|1:4  
              FEC_ORDER=FEC_SRTP 
           a=pcfg:5 t=1 a=1 
           a=pcfg:10 t=2  
            
        The "m=" line indicates that Alice is offering to use plain RTP with 
        PCMU or G.729.  Alice indicates that support for the base protocol 
        defined here is required by including the "a=creq" attribute 
      
      
     Andreasen               Expires July 28, 2007                 [Page 21] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        containing the value "v0". The capabilities are provided by the 
        "a=ctrpr" and "a=capar" attributes.  The capabilities indicate that 
        both Secure RTP and normal RTP are supported. The "capar" attribute 
        provides a capability parameter with a handle of 1. The capability 
        parameter is a "crypto" attribute in the capability set, which 
        provides the keying material for SRTP using SDP security descriptions 
        [SDES]. The "a=pcfg" attribute provides the potential configurations 
        included in the offer by reference to the capabilities.  Two 
        alternatives are provided; the first one with preference "5" (and 
        hence the preferred one since the preference on the second one is 
        "10") is transport protocol capability 1 (RTP/SAVP, i.e. secure RTP) 
        together with the attribute capability 1, i.e. the crypto attribute 
        provided. The second one is using transport protocol capability 2. 
        Note that we could have omitted the second potential configuration 
        since it equals the actual configuration (which is always the least 
        preferred configuration).  

        Bob receives the SDP offer from Alice. Bob supports SRTP and the SDP 
        Capability Negotiation extensions, and hence he accepts the potential 
        configuration for Secure RTP provided by Alice: 

           v=0 
           o=- 24351 621814 IN IP4 128.96.41.2 
           s=  
           c=IN IP4 128.96.41.2 
           t=0 0 
           m=audio 4567 RTP/SAVP 0 18  
           a=crypto:1 AES_CM_128_HMAC_SHA1_80 
                 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:4 
           a=csup: foo 
           a=acfg: t=1 a=1 

        Bob includes the "a=acfg" attribute in the answer to inform Alice 
        that he based his answer on an offer containing the potential 
        configuration with transport protocol capability 1 and attribute 
        capability 1 from the offer SDP (i.e. the RTP/SAVP profile using the 
        keying material provided).  Bob also includes his keying material in 
        a crypto attribute. Finally, Bob supports an SDP capability 
        negotiation extension with the option tag "foo" and hence he includes 
        the "a=csup" parameter containing value "foo" in the answer.  

         

        Note that in this particular example, the answerer supported the 
        capability extensions defined here, however had he not, the answerer 
        would simply have ignored the new attributes and accepted the offer 

      
      
     Andreasen               Expires July 28, 2007                 [Page 22] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        to use normal RTP. In that case, the following answer would have been 
        generated instead: 

           v=0 
           o=- 24351 621814 IN IP4 128.96.41.2 
           s=  
           c=IN IP4 128.96.41.2 
           t=0 0 
           m=audio 4567 RTP/AVP 0 18  
         

     4. Security Considerations 

        TBD. 

     5. IANA Considerations 

        TBD. 

        [EDITOR'S NOTE: Need to define registry and procedures for option 
        tags] 

        [EIDTOR'S NOTE: Need to define registry and procedures for extension 
        capabilities] 

         

     6. To Do and Open Issues 

        o  Capability descriptions, potential configurations and actual 
           configurations can be provided at both the session level and media 
           level. It needs to be decided what the relationship between the 
           session level and media level parameters are.  

        o  Look for "EDITOR'S NOTE" throughout the document.  

     7. Acknowledgments 

        This document is heavily influenced by the discussions and work done 
        by the SDP Capability Negotiation Design team. The following people 
        in particular provided useful comments and suggestions to either the 
        document itself or the overall direction of the solution defined in 
        here: Roni Even, Robert Gilman, Cullen Jennings, Matt Lepinski, Joerg 
        Ott, Colin Perkins, and Thomas Stach. 

        Francois Audet and Dan Wing provided useful comments on earlier 
        versions of this document. 
      
      
     Andreasen               Expires July 28, 2007                 [Page 23] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

     8. Change Log 

     8.1. draft-ietf-mmusic-sdp-capability-negotiation-01 

        The following are the major changes compared to version -00: 

        o  Media capabilities are no longer considered a core capability and 
           hence have been removed. This leaves transport protocols and 
           attributes as the only capabilities defined by the core. 

        o  Version attribute has been removed and an option tag to indicate 
           the actual version has been defined instead. 

        o  Clarified rules for session-level and media level attributes 
           provided at either level as well how they can be used in potential 
           configurations.  

        o  Potential configuration parameters no longer have implicit 
           ordering; an explicit preference indicator is now included. 

        o  The parameter name for transport protocols in the potential and 
           actual configuration attributes have been changed "p" to "t".  

        o  Clarified operator precedence within potential and actual 
           configuration attributes.  

        o  Potential configurations at the session level now limited to 
           indicate latent capability configurations. Consequently, an actual 
           configuration attribute can no longer be provided at the session 
           level.  

        o  Cleaned up capability and potential configuration terminology - 
           they are now two clearly different things.  

     8.2. draft-ietf-mmusic-sdp-capability-negotiation-00 

        Version 00 is the initial version. The solution provided in this 
        initial version is based on an earlier (individual submission) 
        version of [SDPCapNeg]. The following are the major changes compared 
        to that document: 

        o  Solution no longer based on RFC 3407, but defines a set of similar 
           attributes (with some differences). 

        o  Various minor changes to the previously defined attributes. 


      
      
     Andreasen               Expires July 28, 2007                 [Page 24] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        o  Multiple transport capabilities can be included in a single 
           "ctrpr" attribute 

        o  A version attribute is now included. 

        o  Extensions to the framework are formally supported. 

        o  Option tags and the ability to list supported and required 
           extensions are supported.  

        o  A best-effort SRTP example use case has been added.  

        o  Some terminology change throughout to more clearly indicate what 
           constitutes capabilities and what constitutes configurations.  

































      
      
     Andreasen               Expires July 28, 2007                 [Page 25] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

     9. References 

     9.1. Normative References 

        [RFC2119] Bradner, S., "Key words for use in RFCs to Indicate 
                  Requirement Levels", BCP 14, RFC 2119, March 1997. 

        [RFC2234] Crocker, D. and Overell, P.(Editors), "Augmented BNF for 
                  Syntax Specifications: ABNF", RFC 2234, Internet Mail 
                  Consortium and Demon Internet Ltd., November 1997. 

        [RFC3264] Rosenberg, J., and H. Schulzrinne, "An Offer/Answer Model 
                  with Session Description Protocol (SDP)", RFC 3264, June 
                  2002.  

        [RFC3407] F. Andreasen, "Session Description Protocol (SDP) Simple 
                  Capability Declaration", RFC 3407, October 2002. 

        [RFC3605] C. Huitema, "Real Time Control Protocol (RTCP) attribute in 
                  Session Description Protocol (SDP)", RFC 3605, October 
                  2003.  

        [RFC4234] Crocker, D., and P. Overell, "Augmented BNF for Syntax 
                  Specifications: ABNF", RFC 4234, October 2005. 

        [SDP]     Handley, M., Jacobson, V., and C. Perkins, "SDP: Session 
                  Description Protocol", RFC 4566, July 2006.  

     9.2. Informative References 

        [RFC2046] Freed, N., and N. Borensteain, "Multipurpose Internet Mail 
                  Extensions (MIME) Part Two: Media Types", RFC 2046, 
                  November 1996. 

        [RFC2327] Handley, M., Jacobson, V., and C. Perkins, "SDP: Session 
                  Description Protocol", RFC 2327, April 1998.  

        [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, 
                  A., Peterson, J., Sparks, R., Handley, M., and E. Schooler, 
                  "SIP: Session Initiation Protocol", RFC 3261, June 2002. 

        [RFC3388] Camarillo, G., Eriksson, G., Holler, J., and H. 
                  Schulzrinne, "Grouping of Media Lines in the Session 
                  Description Protocol (SDP)", RFC 3388, December 2002. 



      
      
     Andreasen               Expires July 28, 2007                 [Page 26] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        [RFC3551] Schulzrinne, H., and S. Casner, "RTP Profile for Audio and 
                  Video Conferences with Minimal Control", RFC 3551, July 
                  2003.  

        [SRTP]    Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K. 
                  Norrman, "The Secure Real-time Transport Protocol (SRTP)", 
                  RFC 3711, March 2004. 

        [RFC3851] B. Ramsdell, "Secure/Multipurpose Internet Mail Extensions 
                  (S/MIME) Version 3.1 Message Specification", RFC 3851, July 
                  2004.  

        [RFC4091] Camarillo, G., and J. Rosenberg, The Alternative Network 
                  Address Types (ANAT) Semantics for the Session Description 
                  Protocol (SDP) Grouping Framework, RFC 4091, June 2005.  

        [AVPF]    Ott, J., Wenger, S., Sato, N., Burmeister, C., and J. Rey, 
                  "Extended RTP Profile for RTCP-Based Feedback (RTP/AVPF)", 
                  Work in Progress, August 2004.  

        [I-D.jennings-sipping-multipart] Wing, D., and C. Jennings, "Session 
                  Initiation Protocol (SIP) Offer/Answer with Multipart 
                  Alternative", Work in Progress, March 2006. 

        [SAVPF]   Ott, J., and E Carrara, "Extended Secure RTP Profile for 
                  RTCP-based Feedback (RTP/SAVPF)", Work in Progress, 
                  December 2005.  

        [SDES]    Andreasen, F., Baugher, M., and D. Wing, "Session 
                  Description Protocol Security Descriptions for Media 
                  Streams", RFC 4568, July 2006.  

        [SDPng]   Kutscher, D., Ott, J., and C. Bormann, "Session Description 
                  and Capability Negotiation", Work in Progress, February 
                  2005.  

        [BESRTP]  Kaplan, H., and F. Audet, "Session Description Protocol 
                  (SDP) Offer/Answer Negotiation for Best-Effort Secure Real-
                  Time Transport Protocol, Work in progress, August 2006.  

        [KMGMT]   Arkko, J., Lindholm, F., Naslund, M., Norrman, K., and E. 
                  Carrara, "Key Management Extensions for Session Description 
                  Protocol (SDP) and Real Time Streaming Protocol (RTSP)", 
                  RFC 4567, July 2006.  



      
      
     Andreasen               Expires July 28, 2007                 [Page 27] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        [SDPCapNegRqts]   Andreasen, F. "SDP Capability Negotiation: 
                  Requirementes and Review of Existing Work", work in 
                  progress, December 2006. 

        [SDPCapNeg] Andreasen, F. "SDP Capability Negotiation", work in 
                  progress, December 2006. 

        [MIKEY]   J. Arkko, E. Carrara, F. Lindholm, M. Naslund, and K. 
                  Norrman, "MIKEY: Multimedia Internet KEYing", RFC 3830, 
                  August 2004.  

     Author's Addresses 

        Flemming Andreasen 
        Cisco Systems 
        Edison, NJ 
            
        Email: fandreas@cisco.com 
         

     Intellectual Property Statement 

        The IETF takes no position regarding the validity or scope of any 
        Intellectual Property Rights or other rights that might be claimed to 
        pertain to the implementation or use of the technology described in 
        this document or the extent to which any license under such rights 
        might or might not be available; nor does it represent that it has 
        made any independent effort to identify any such rights.  Information 
        on the procedures with respect to rights in RFC documents can be 
        found in BCP 78 and BCP 79. 

        Copies of IPR disclosures made to the IETF Secretariat and any 
        assurances of licenses to be made available, or the result of an 
        attempt made to obtain a general license or permission for the use of 
        such proprietary rights by implementers or users of this 
        specification can be obtained from the IETF on-line IPR repository at 
        http://www.ietf.org/ipr. 

        The IETF invites any interested party to bring to its attention any 
        copyrights, patents or patent applications, or other proprietary 
        rights that may cover technology that may be required to implement 
        this standard.  Please address the information to the IETF at 
        ietf-ipr@ietf.org. 




      
      
     Andreasen               Expires July 28, 2007                 [Page 28] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

     Disclaimer of Validity 

        This document and the information contained herein are provided on an 
        "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS 
        OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET 
        ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, 
        INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE 
        INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED 
        WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 

     Copyright Statement 

        Copyright (C) The Internet Society (2007). 

        This document is subject to the rights, licenses and restrictions 
        contained in BCP 78, and except as set forth therein, the authors 
        retain all their rights. 

     Acknowledgment 

        Funding for the RFC Editor function is currently provided by the 
        Internet Society. 

         























      
      
     Andreasen               Expires July 28, 2007                 [Page 29] 
         
