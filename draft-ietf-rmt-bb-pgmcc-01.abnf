D = min(N, SSTHRESH - W) // use the first D acks for
    exp.opening
N = N - D		       // and the remaining ones for
    linear opening
T = T + 2*D
W = W + D
      endif
      // do linear window opening with the remaining acks
T = T + N * ( 1 + 1/W )
W = W + N/W


T = T - 1


T = T - W/2 , W = W/2

M = 1/T = RTT_i * sqrt(p) * (1 + 9*p * (1 + 32*(p)^2))



M = 1/T is proportional to the inverse of the throughput for the
p_i = c_p * p_{i-1} + (1 - c_p ) * p_i

T = 1 ; W = 1 ;   /* initialize window and number of tokens */
RETRY = 0 ;	    /* number of consecutive timeouts so far  */
ACKER = NO_ACKER; /* no acker is known		      */
QUEUED = 0;	    /* packets waiting to be transmitted      */

T = 1 ; W = 1 ;   /* initialize window and number of tokens */
RETRY = RETRY + 1
ACKER = NO_ACKER ; /* old acker is not valid anymore      */
RETRY = 0 ;
ACKER = I ;
T = T + 1 ;
T = T - 1 ;
QUEUED = QUEUED - 1 ;
