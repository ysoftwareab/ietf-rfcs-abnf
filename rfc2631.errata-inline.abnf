ZZ = g ^ (xb * xa) mod p

ZZ = (yb ^ xa)  mod p  = (ya ^ xb)  mod p

g = h^{(p-1)/q} mod p, where
KM = H ( ZZ || OtherInfo)

K=48 95 0c 46 e0 53 00 75 40 3c ce 72 88 96 04 e0

U = U + [SHA1(seed + i) Xor SHA1((seed + m' +i ) mod 2^{seedlen})] * 2^{160 * i}

U = [SHA1(seed) Xor SHA1((seed +1) mod 2^{seedlen})], where seedlen
            is the binary length of seed.






U = U + (SHA1[SEED + i] XOR SHA1[(SEED + m' + i)) * 2^(160 * i)

U = SHA1[SEED] XOR SHA1[(SEED+1) mod 2^160 ].

U = U + [SHA1(seed + i) Xor SHA1((seed + m' +i ) mod 2^{seedlen})] * 2^{160 * i}

U = [SHA1(seed) Xor SHA1((seed +1) mod 2^{seedlen})], where seedlen
            is the binary length of seed.

U = U + (SHA1[SEED + i] XOR SHA1[(SEED + m' + i)) * 2^(160 * i)
U = SHA1[SEED] XOR SHA1[(SEED + 1) mod 2^160]
V = V + SHA1(R + i) * 2^(160 * i)

