

SIPPING                                                           K. Ono
Internet-Draft                                              S. Tachimoto
Expires: August 8, 2004                                  NTT Corporation
                                                             Feb 8, 2004


   Key reuse in Secure MIME for the Session Initiation Protocol(SIP)
                  draft-ono-sipping-smime-keyreuse-00

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups. Note that other
   groups may also distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on August 8, 2004.

Copyright Notice

   Copyright (C) The Internet Society (2004). All Rights Reserved.

Abstract

   SIP uses Secure MIME (S/MIME) Cryptographic Message Syntax (CMS)
   EnvelopedData to protect SIP messages for confidentiality. While SIP
   can be encrypted with different keying materials for each message, it
   usually requires a public key operation for each message and the
   computational cost of such operations are relatively expensive. This
   draft proposes a method of bidirectional key exchange to reuse keying
   materials for S/MIME-secured messages in a dialog and use a symmetric
   key mechanism instead of an asymmetric key mechanism such as a public
   key operation. The proposed mechanism also achieves the sharing of
   keying material among multiple entities in a simple way.

Conventions used in this document



Ono & Tachimoto          Expires August 8, 2004                 [Page 1]

Internet-Draft        Key reuse in S/MIME for SIP               Feb 2004


   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC-2119 [1].

Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Overview of proposed solution  . . . . . . . . . . . . . . . .  4
   2.1 Preparation for reuse  . . . . . . . . . . . . . . . . . . . .  4
   2.2 Reuse CEK as KEK . . . . . . . . . . . . . . . . . . . . . . .  4
   2.3 Lifetime of key reuse  . . . . . . . . . . . . . . . . . . . .  5
   3.  Examples . . . . . . . . . . . . . . . . . . . . . . . . . . .  6
   3.1 The reused CEK Lifetime in a dialog  . . . . . . . . . . . . .  6
   3.2 The reused CEK Lifetime when used in the case of a
       subsequent message . . . . . . . . . . . . . . . . . . . . . .  7
   4.  Security Considerations  . . . . . . . . . . . . . . . . . . .  8
   5.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . .  9
       References . . . . . . . . . . . . . . . . . . . . . . . . . . 10
       Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . 10
       Intellectual Property and Copyright Statements . . . . . . . . 11































Ono & Tachimoto          Expires August 8, 2004                 [Page 2]

Internet-Draft        Key reuse in S/MIME for SIP               Feb 2004


1. Introduction

   The SIP [2] supports S/MIME [3] CMS [4] EnvelopedData for
   confidentiality. The CMS EnvelopedData contains content encrypted
   with a content encryption key (CEK) and the CEKs are encrypted with
   key encryption keys (KEKs), which are usually public keys of
   recipients. The confidential service is currently used for ensuring
   end-to-end security, and it is now being considered for use in
   end-to-middle security as described in [5]. In SIP, several messages
   are transmitted among User Agents (UAs) via proxy servers in a
   dialog. While separate keying materials can be used for each
   recipient and each message, public key operations and asymmetric key
   mechanisms are required for each recipient and each message.

   As for end-to-end confidentiality, a User Agent Client (UAC) needs to
   send a User Agent Server (UAS) a request with its own public key
   certificate (PKC) that is a relatively large amount of data in order
   to make sure that the UAC can receive a response properly using the
   CMS EnvelopedData. If multiple UAs join a dialog, all UAs need to
   send other UAs a request with its own PKC and send other UAs
   subsequent messages with multiple KEKs for other UAs. These
   operations increase the data size of the initial request by using the
   originator's PKC and the number of KEKs in subsequent messages.

   As for end-to-middle confidentiality that combines with end-to-end
   one, a UAC needs to send a UAS a request with its own PKC and a
   selected proxy server's one in order to make sure that the UAC and
   the proxy server can receive a response properly using the CMS
   EnvelopedData. The UAS also need to create the response explicitly
   using the two PKCs. This complicates the specification of
   end-to-middle confidentiality.

   This draft proposes a method to reuse keying materials for subsequent
   messages in SIP. This reuse method is based on [6]. Since the reuse
   mechanisms allow UAs to avoid public key operations for each message,
   UAs can create CMS EnvelopedData with low computational cost. In
   addition, the reuse mechanism also achieves the sharing of keying
   materials among multiple entities including proxy servers in a simple
   way. It can also reduce the data size of the initial request, the
   number of KEKs in subsequent messages, and the complication of the
   end-to-middle security's specification.










Ono & Tachimoto          Expires August 8, 2004                 [Page 3]

Internet-Draft        Key reuse in S/MIME for SIP               Feb 2004


2. Overview of proposed solution

   This proposed solution has three phases based on [6].  The first
   phase is preparing for a CEK to be reused as the KEK in a subsequent
   message. The second phase is reusing the KEK derived from a CEK in
   subsequent messages, while the CEK is updated for each message. The
   third phase is ending the reuse when a KEK is updated or the lifetime
   for key reuse ends. The mechanism at the third one needs some
   additional considerations for SIP.

2.1 Preparation for reuse

   A method of preparation is to include a key identifier of a CEK in
   the CMS EnvelopedData in order to reuse the CEK, a symmetric key, as
   a KEK of the EnvelopedData in a subsequent message as described in
   [6]. A "CEKReference" of "unprotectedAttrs" attributes contains the
   key identifier of the symmetric key and the attribute expresses a
   sender's preferences to reuse the CEK as the KEK in subsequent
   messages.

   As a prerequisite for a UAC to send a request using the CMS
   EnvelopedData to a UAS, the UAC needs to know the public key of the
   UAS in order to use this public key as the KEK.  The UAC creates a
   symmetric key to be used as the CEK. If a UAC needs to reuse the CEK
   and/or needs to share the CEK among multiple UASs, it MUST use a
   "CEKReference" attribute in a request message to stipulate reuse of
   the CEK in subsequent messages and indicate its identifier. When a
   UAS needs to reuse the CEK, the UAS MUST use a "CEKReference"
   attribute in a response message to request a UAC to reuse the CEK as
   the KEK of subsequent messages.

2.2 Reuse CEK as KEK

   The following describes the method for KEK reuse, where the KEK is
   derived from a CEK.  After a UAS receives EnvelopedData that contains
   a "CEKReference" attribute in a request message, the UAS creates an
   EnvelopedData with the CEK received from the UAC as the KEK and does
   not set a "CEKReference" attribute. Not setting a "CEKReference"
   attribute indicates that the KEK can be reused as the KEK of
   subsequent messages.

   When a UAC requests to reuse the CEK, the UAC does not know if a UAS
   can support this key reuse mechanism. If the UAS supports this key
   reuse mechanism, the UAS SHOULD use a symmetric key received from the
   UAC as the KEK to encrypt a new CEK of a response message. The CMS
   EnvelopedData that the UAS creates contains a "KEKRecipientInfo" type
   of "recipientInfo" attribute. When receiving the response, the UAC
   will be able to determine that the UAS supports key reuse and uses



Ono & Tachimoto          Expires August 8, 2004                 [Page 4]

Internet-Draft        Key reuse in S/MIME for SIP               Feb 2004


   it. If the UAs support and decide to use this reuse mechanism, the
   UAC does not need to send its own PKC. This is because the UAS can
   create the CMS EnvelopedData with a new CEK and the KEK derived from
   a CEK previously received from the UAC.

   If the UAS does not support this reuse mechanism, or for some reason
   cannot use it based on a policy, the UAS MUST use the UAC's public
   key as a KEK to encrypt a CEK in response. When receiving the
   EnvelopedData, the UAC will be able to determine that the UAS did not
   accept the request to enable key reuse. The UAC will need to send its
   own PKC in a request so that the UAS can create a response with a
   valid the CMS EnvelopedData.

      Open issue: For end-to-middle security, how does a UA know whether
      a proxy server support this key reuse mechanism or not ? One
      option is that the proxy server adds a digital signature in a
      response when it uses the key reuse mechanism.


2.3 Lifetime of key reuse

   The reused CEK is available until the KEK is updated or the maximum
   lifetime ends. The originator and recipients SHOULD maintain the
   "CEKReference" attribute until the reused CEK is expired.

   In [6], the maximum lifetime of the CEK is indicated in a
   "CEKMaxDecrypts" attribute in the "unprotectedAttrs" field of
   EnvelopedData. If "CEKMaxDecrypts" is missing, or has the value "1",
   then each CEK will be reused once as the KEK for the next message.

   Generally, reusing the same key many times is weak from a security
   viewpoint.  When a UA wants to stop reusing the same KEK, the UA can
   update the KEK. The UA MUST follow the method of the preparation for
   reuse as described above.

   In SIP, a UA can know whether a recipient UA receives and reuses the
   CEK, when the UA receives a subsequent message. However, a UA does
   not always receive a subsequent message to a provisional response and
   an ACK request. The UA SHOULD not update the KEK that is derived from
   the CEK in such messages even when the "CEKMaxDecrypts" value is one.
   That results in the situation that the number in "CEKMaxDecrypts"
   does not work correctly in SIP.  Therefore, the maximum lifetime of
   key reuse in SIP equals to the time until the dialog ends . The
   reused CEK is available on several messages until the dialog ends at
   the maximum lifetime of key reuse. If the message that indicates the
   reuse of the CEK does not create a dialog, the reuse is only
   available in a transaction.




Ono & Tachimoto          Expires August 8, 2004                 [Page 5]

Internet-Draft        Key reuse in S/MIME for SIP               Feb 2004


3. Examples

   The following examples illustrate the use of the mechanism described
   in the previous section.

3.1 The reused CEK Lifetime in a dialog

   When a UA needs to protect Session Description Protocol (SDP) in a
   message for end-to-end confidentiality, the messages that include the
   offer/answer procedures use the CMS EnvelopedData. The CEK is reused
   in a dialog as illustrated in Figure 1.


   UAC -> UAS: INVITE
               E-CEK_1(Content), E-pub_key.UAS(CEK_1),CEK_1_id
   UAC <- UAS: 200 OK
               E-CEK_2(Content), E-CEK_1(CEK_2)

   UAC -> UAS: re-INVITE
               E-CEK_3(Content), E-CEK_1(CEK_3)
   UAC <- UAS: 200 OK
               E-CEK_4(Content), E-CEK_1(CEK_4)


       Figure 1: Example of key reuse in a dialog for end-to-end
                            confidentiality

   E-CEK_n(Content)  : Content encrypted using CEK_n
   E-pub_key.x(CEK_n): CEK_n encrypted using x's public key
   E-CEK_n(CEK_m)    : CEK_m encrypted using CEK_n
   CEK_n_id          : Key identifier of CEK_n in "CEKReference"

   When a UA needs to protect SDP in a message for end-to-middle
   confidentiality that combines with end-to-end one, the messages for
   the offer/answer procedures use the CMS EnvelopedData. The CEK is
   reused in a dialog as illustrated in Figure 2.


   UAC -> Proxy: INVITE
                 E-CEK_1(Content), E-pub_key.UAS(CEK_1), E-pub_key.proxy(CEK_1),CEK_1_id
   Proxy -> UAS: INVITE
                 E-CEK_1(Content), E-pub_key.UAS(CEK_1), E-pub_key.proxy(CEK_1),CEK_1_id

   Proxy <- UAS: 200 OK
                 E-CEK_2(Content), E-CEK_1(CEK_2)
   UAC <- Proxy: 200 OK
                 E-CEK_2(Content), E-CEK_1(CEK_2)




Ono & Tachimoto          Expires August 8, 2004                 [Page 6]

Internet-Draft        Key reuse in S/MIME for SIP               Feb 2004


   UAC -> Proxy: re-INVITE
                 E-CEK_3(Content), E-CEK_1(CEK_3)
   Proxy -> UAS: re-INVITE
                 E-CEK_3(Content), E-CEK_1(CEK_3)

   Proxy <- UAS: 200 OK
               E-CEK_4(Content), E-CEK_1(CEK_4)
   UAC <- Proxy: 200 OK
               E-CEK_4(Content), E-CEK_1(CEK_4)


      Figure 2: Example of key reuse in a dialog for end-to-middle
                            confidentiality


3.2 The reused CEK Lifetime when used in the case of a subsequent
    message

   When a UA needs to protect some SIP headers for end-to-end
   confidentiality, all messages in a dialog use the CMS EnvelopedData.
   The CEK is reused in a subsequent message as illustrated in Figure 3.
   When sending a provisional response like 180, the CEK is updated and
   named as CEK_2. CEK_2 may not be received by a UAC. Therefore, when
   sending the final response like 200, UAS must use CEK_1 as the KEK
   again.


   UAC -> UAS: INVITE
               E-CEK_1(Content), E-pub_key.UAS(CEK_1),CEK_1_id
   UAC <- UAS: 180
               E-CEK_2(Content), E-CEK_1(CEK_2),CEK_2_id
   UAC <- UAS: 200 OK
               E-CEK_3(Content), E-CEK_1(CEK_3),CEK_3_id
   UAC -> UAS: ACK
               E-CEK_4(Content), E-CEK_3(CEK_4),CEK_4_id

   UAC -> UAS: BYE
               E-CEK_5(Content), E-CEK_3(CEK_5),CEK_5_id
   UAC <- UAS: 200 OK
               E-CEK_6(Content), E-CEK_4(CEK_6)


         Figure 3: Example of key reuse in a subsequent message








Ono & Tachimoto          Expires August 8, 2004                 [Page 7]

Internet-Draft        Key reuse in S/MIME for SIP               Feb 2004


4. Security Considerations

   TBD.
















































Ono & Tachimoto          Expires August 8, 2004                 [Page 8]

Internet-Draft        Key reuse in S/MIME for SIP               Feb 2004


5. IANA Considerations

   This document introduces no additional considerations for IANA.
















































Ono & Tachimoto          Expires August 8, 2004                 [Page 9]

Internet-Draft        Key reuse in S/MIME for SIP               Feb 2004


References

   [1]  Bradner, S., "Key words for use in RFCs to Indicate Requirement
        Levels", RFC 2119, BCP 14, March 1997.

   [2]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A.,
        Peterson, J., Sparks, R., Handley, M. and E. Schooler, "SIP:
        Session Initiation Protocol", RFC 3261, June 2002.

   [3]  Ramsdell, B., "S/MIME Version 3 Message Specification", RFC
        2633, June 1992.

   [4]  Housley, R., "Cryptographic Message Syntax", RFC 2630, June
        1999.

   [5]  Ono, K. and S. Tachimoto, "Requirements for end-to-middle
        security in the Session Initiation Protocol (SIP)",
        draft-ietf-sipping-e2m-sec-reqs-00  (work in progress), October
        2003.

   [6]  Farrell, S. and S. Turner, "Reuse of CMS Content Encryption
        Keys", RFC 3185, October 2001.


Authors' Addresses

   Kumiko Ono
   Network Service Systems Laboratories
   NTT Corporation
   9-11, Midori-Cho 3-Chome
   Musashino-shi, Tokyo  180-8585
   Japan

   EMail: ono.kumiko@lab.ntt.co.jp


   Shinya Tachimoto
   Network Service Systems Laboratories
   NTT Corporation
   9-11, Midori-Cho 3-Chome
   Musashino-shi, Tokyo  180-8585
   Japan

   EMail: tachimoto.shinya@lab.ntt.co.jp







Ono & Tachimoto          Expires August 8, 2004                [Page 10]

Internet-Draft        Key reuse in S/MIME for SIP               Feb 2004


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights. Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11. Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard. Please address the information to the IETF Executive
   Director.


Full Copyright Statement

   Copyright (C) The Internet Society (2004). All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works. However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assignees.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION



Ono & Tachimoto          Expires August 8, 2004                [Page 11]

Internet-Draft        Key reuse in S/MIME for SIP               Feb 2004


   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.











































Ono & Tachimoto          Expires August 8, 2004                [Page 12]


