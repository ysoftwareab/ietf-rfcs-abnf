challenge-scram   = "SCRAM-SHA-1" 1*SP 1#auth-param
                     ; Complies with <challenge> ABNF from I-D.ietf-httpbis-p7-auth.
                     ; Included in the WWW-Authenticate header field.

credentials-scram = "SCRAM-SHA-1" 1*SP 1#auth-param
                     ; Complies with <credentials> from I-D.ietf-httpbis-p7-auth
                     ; Included in the Authorization header field.



g=n,n=user,r=fyko+d2lbbFgONRv9qkxdawL
realm="testrealm@host.com",sid=AAAABBBBCCCCDDDD,
r=fyko+d2lbbFgONRv9qkxdawL3rfcNHYJY1ZVvWVs7j,s=QSXCR+Q6sek8bf92,
i=4096
c=biws,r=fyko+d2lbbFgONRv9qkxdawL3rfcNHYJY1ZVvWVs7j,
p=v0X8v3Bz2T0CJGbJQyF0X+HI4Ts=
sid=AAAABBBBCCCCDDDD,
v=rmF9pqV8S7suAoZWja4dJRkFsKQ=
ALPHA = <as defined in RFC 5234 appendix B.1>
DIGIT = <as defined in RFC 5234 appendix B.1>
UTF8-2 = <as defined in RFC 3629 (STD 63)>
UTF8-3 = <as defined in RFC 3629 (STD 63)>
UTF8-4 = <as defined in RFC 3629 (STD 63)>

attr-val        = ALPHA "=" value
                        ;; Generic syntax of any attribute sent
                        ;; by server or client

value           = 1*value-char

value-safe-char = %x01-2B / %x2D-3C / %x3E-7F /
                        UTF8-2 / UTF8-3 / UTF8-4
                        ;; UTF8-char except NUL, "=", and ",".

value-char      = value-safe-char / "="

printable       = %x21-2B / %x2D-7E
                        ;; Printable ASCII except ",".
                        ;; Note that any "printable" is also
                        ;; a valid "value".

base64-char     = ALPHA / DIGIT / "/" / "+"

base64-4        = 4base64-char

base64-3        = 3base64-char "="
base64-2        = 2base64-char "=="

base64          = *base64-4 [base64-3 / base64-2]

posit-number = %x31-39 *DIGIT
                        ;; A positive number.

cb-name         = 1*(ALPHA / DIGIT / "." / "-")
                         ;; See RFC 5056, Section 7.
                         ;; E.g., "tls-server-end-point" or
                         ;; "tls-unique".

gs2-cbind-flag  = ("p=" cb-name) / "n" / "y"
                        ;; "n" -> client doesn't support channel binding.
                        ;; "y" -> client does support channel binding
                        ;;        but thinks the server does not.
                        ;; "p" -> client requires channel binding.
                        ;; The selected channel binding follows "p=".

gs2-header      = gs2-cbind-flag ","
                        ;; GS2 header for SCRAM.

username        = "n=" 1*(value-safe-char / "=2C" / "=3D")
                        ;; Conforms to <value>.
                        ;; Usernames are prepared using SASLPrep.

reserved-mext  = "m=" 1*(value-char)
                        ;; Reserved for signaling mandatory extensions.
                        ;; The exact syntax will be defined in
                        ;; the future.

channel-binding = "c=" base64
                        ;; base64 encoding of cbind-input.

proof           = "p=" base64

nonce           = "r=" c-nonce [s-nonce]
                        ;; Second part provided by server.

c-nonce         = printable

s-nonce         = printable

salt            = "s=" base64

verifier        = "v=" base64
                        ;; base-64 encoded ServerSignature.
iteration-count = "i=" posit-number
                        ;; A positive number.

client-first-message-bare =
                        [reserved-mext ","]
                        username "," nonce ["," extensions]

client-first-message =
                        "g=" gs2-header client-first-message-bare

server-first-message =
                        [reserved-mext ","] nonce "," salt ","
                        iteration-count ["," extensions]

client-final-message-without-proof =
                        channel-binding "," nonce [","
                        extensions]

client-final-message =
                        client-final-message-without-proof "," proof

server-error = "e=" server-error-value

server-error-value = "invalid-encoding" /
                     "extensions-not-supported" /  ; unrecognized 'm' value
                     "invalid-proof" /
                     "channel-bindings-dont-match" /
                     "server-does-support-channel-binding" /
                       ; server does not support channel binding
                     "channel-binding-not-supported" /
                     "unsupported-channel-binding-type" /
                     "unknown-user" /
                     "invalid-username-encoding" /
                       ; invalid username encoding (invalid UTF-8 or
                       ; SASLprep failed)
                     "no-resources" /
                     "other-error" /
                     server-error-value-ext
              ; Unrecognized errors should be treated as "other-error".
              ; In order to prevent information disclosure, the server
              ; may substitute the real reason with "other-error".

server-error-value-ext = value
              ; Additional error reasons added by extensions
              ; to this document.

server-final-message = (server-error / verifier)
                        ["," extensions]
extensions = attr-val *("," attr-val)
                        ;; All extensions are optional,
                        ;; i.e., unrecognized attributes
                        ;; not defined in this document
                        ;; MUST be ignored.

cbind-data    = 1*OCTET

cbind-input   = gs2-header [ cbind-data ]
                        ;; cbind-data MUST be present for
                        ;; gs2-cbind-flag of "p" and MUST be absent
                        ;; for "y" or "n".



