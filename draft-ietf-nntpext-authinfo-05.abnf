username = UTF-8 string identifying the user/client
password = UTF-8 string representing the user's password

mechanism         = String identifying a [SASL] authentication
                            mechanism.
initial-response  = Optional initial client response.  If present,
                            the response MUST be encoded as specified in
                            Section 3 of [BASE64].
challenge         = Server challenge.  The challenge MUST be
                            encoded as specified in Section 3 of [BASE64].

aG09bWQ1LXNlc3M=
cmVzcG9uc2U9ZDQzY2Y2NmNmZmE5MDNmOWViMDM1NmMwOGEzZGIwZjI=
command =/ authinfo-user-command /
                authinfo-pass-command /
                authinfo-sasl-command

authinfo-user-command = "AUTHINFO" WS "USER" WS username
authinfo-pass-command = "AUTHINFO" WS "PASS" WS password
authinfo-sasl-command = "AUTHINFO" WS "SASL" WS mechanism
           [WS initial-response]

username = 1*user-pass-char
password = 1*user-pass-char
user-pass-char = P-CHAR
initial-response = base64-opt


user-pass-char =/ SP / TAB

command-continuation =/ authinfo-sasl-continuation
authinfo-sasl-continuation = ("*" / base64-opt) CRLF
           ; client must send a continuation following each
           ; "383" response from the server

simple-response-content =/ response-sasl-content
response-sasl-content = "283" SP base64 / "383" SP base64-opt

extension-descriptor =/ authinfo-extension
authinfo-extension = %x41.55.54.48.49.4E.46.4F  ; "AUTHINFO"
           *(SPA authinfo-extension-arg)
authinfo-extension-arg = "USER" /
           "SASL:" [mechanism *("," mechanism)]

mechanism = 1*20mech-char
mech-char = UPPER / DIGIT / "-" / "_"

base64-opt = "=" / base64

