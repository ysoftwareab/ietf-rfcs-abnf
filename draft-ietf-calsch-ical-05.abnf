method     = 1*(ALPHA / DIGIT / "-")
        ; IANA registered iCalendar object method

component       = "VEVENT" / "VTODO" / "VJOURNAL" / "VFREEBUSY"
                        / x-name / iana-token

contentline = name *(";" [WSP] param ) ":" [WSP] value-list CRLF
        ; Lines longer than 75 characters should be folded
name       = iana-token / x-name

x-name     = "X-" 1*(ALPHA / DIGIT / "-")
        ;Reservered for experimental use.

param      = param-name "=" param-value *("," param-value)

param-name = iana-token

param-value = quoted-string / text

value-list = value-struct *([FOLD] "," value-struct)
        ; permitted values are restricted by valuetype

value-struct = value-elem *([FOLD] ";" value-elem)

value-elem = folded-text / folded-b
        ; encoding determined by encoding parameter

iana-token = 1*(ALPHA / DIGIT / "-")
        ; iCalendar identifier registered with IANA

text       = *SAFE-CHAR

quoted-string = DQUOTE *(QSAFE-CHAR / QUOTED-CHAR) DQUOTE

folded-text = *([FOLD] (SAFE-CHAR / ":" / DQUOTE / ESCAPED-CHAR))

folded-base64 = *([FOLD] 4B-CHAR) [[FOLD] b-end]

base64-end = (2B-CHAR "==") / (3B-CHAR "=")

ESCAPED-CHAR = "\" ("\" / DQUOTE / ";" / "," / "N" / "n")
        ; \\ encodes \, \" encodes ", \N or \n encodes newline
        ; \; encodes ;, \, encodes ,

B-CHAR = ALPHA / DIGIT / "+" / "/"

FOLD       = CRLF WSP
        ; not considered part of the value

NON-ASCII  = %x80-FF
        ; use restricted by charset parameter
        ; on outer MIME object

QSAFE-CHAR = %x20-21 / %x23-5B / %x5D-7E / NON-ASCII
        ; Any character except CTLs, DQUOTE, or "\"

QUOTED-CHAR = "\" ("\" / DQUOTE)
        ; \\ encodes \, \" encodes "

SAFE-CHAR  = %x20-21 / %x23-2B / %x2D-39 / %x3C-5B
                  %x5D-7E / NON-ASCII
        ; Any character except CTLs, DQUOTE, ";", ":", "\", ","
ALPHA      = %x41-5A / %x61-7A   ; A-Z / a-z

BIT        =  "0" / "1"

CHAR       =  %x01-7F
        ; any 7-bit US-ASCII character, excluding NUL

CR =  %x0D
        ; carriage return

CRLF       =  CR LF
        ; Internet standard newline

CTL        =  %x00-1F / %x7F
        ; controls

DIGIT      =  %x30-39
        ; 0-9DQUOTE     = %x22

WSP        = SPACE / HTAB

SPACE      =  %x20

HTAB       =  %x09

parameter  = altrepparm            ;Alternate text representation
                / encodingparm          ;Inline encoding
                / languageparm          ;Text language
                / valuetypeparm         ;Property value data type

altrepparm = "altrep" "=" uri

encodingparam      = "encoding" "=" "8bit" / "b" / iana-token
                        / x-name
        ;"8bit" text encoding is defined in [RFC 2045]
        ;"b" binary encoding format is defined in [RFC 2047]
        ;Some other IANA registered iCalendar encoding type
        ;A non-standard, experimental encoding type

languageparm =     "language" "=" language

language = <Text identifying a language, as defined in [RFC 1766]>

valuetypeparm = "value" "=" valuetype

valuetype  = "boolean"
                / "cal-address"
                / "date"
                / "date-time"
                / "duration"
                / "float"
                / "integer"
                / "period"
                / "recur"
                / "text"
                / "time"
                / "uri"
                / "utc-offset"
                / x-name
                        ;Some experimental iCalendar data type.
                / iana-token
                        ;Some other IANA registered iCalendar data type.

boolean    = "TRUE" / "FALSE"

cal-address        = uri

date-fullyear      = 4DIGIT
date-month         = 2DIGIT        ;01-12
date-mday          = 2DIGIT        ;01-28, 01-29, 01-30, 01-31
                                        ;based on month/year

date               = date-fullyear date-month date-mday
date-time  = date "T" time ;As specified above in date and time

dur-second = 1*DIGIT "S"
dur-minute = 1*DIGIT "M" [dur-second]
dur-hour   = 1*DIGIT "H" [dur-minute]
dur-time   = "T" (dur-hour / dur-minute / dur-second)

dur-week   = 1*DIGIT "W"
dur-day    = 1*DIGIT "D"
dur-month  = 1*DIGIT "M" [dur-day]
dur-year   = 1*DIGIT "Y" [dur-month]
dur-date   = (dur-day / dur-month / dur-year) [dur-time]

duration   = (["+"] / "-") "P" (dur-date / dur-time / dur-week)

float      = (["+"] / "-") 1*DIGIT ["." 1*DIGIT]

integer    = (["+"] / "-") *DIGIT

period-explicit = date-time "/" date-time
period-start = date-time "/" duration
period     = period-explicit / period-start

recur      = "FREQ"=freq ";"
                [("UNTIL" "=" enddate ";") / ("COUNT" "=" 1*DIGIT ";")]
                ["INTERVAL" "=" 1*DIGIT ";"]
                ["BYSECOND" "=" byseclist ";"]
                ["BYMINUTE" "=" byminlist ";"]
                ["BYHOUR" "=" byhrlist ";"]
                ["BYDAY" "=" bywdaylist ";"]
                ["BYMONTHDAY" "=" bymodaylist ";"]
                ["BYYEARDAY" "=" byyrdaylist ";"]
                ["BYWEEKNO" "=" bywknolist ";"]
                ["BYMONTH" "=" bymolist ";"]
                ["BYSETPOS" "=" bysplist ";"]
                ["WKST" "=" weekday ";")]
                *("X-" word "=" word) ";"
        ;Individual components MAY only be specified once.
        ;Rule components need not be specified in particular any order.

freq       = "SECONDLY" / "MINUTELY" / "HOURLY" / "DAILY"
                / "WEEKLY" / "MONTHLY" / "YEARLY"

enddate    = date          ;A UTC value

byseclist  = seconds / ( seconds *("," seconds) )

seconds    = 1DIGIT / 2DIGIT       ;0 to 60

byminlist  = minutes / ( minutes *("," minutes) )

minutes    = 1DIGIT / 2DIGIT       ;0 to 60

byhrlist   = hour / ( hour *("," hour) )
hour       = 1DIGIT / 2DIGIT       ;0 to 24

bywdaylist = weekdaynum / ( weekdaynum *("," weekdaynum) )

weekdaynum = [([plus] ordwk / minus ordwk)] weekday

plus       = "+"

minus      = "-"

ordwk      = 1DIGIT / 2DIGIT       ;1 to 53

weekday    = "SU" / "MO" / "TU" / "WE" / "TH" / "FR" / "SA"
bymodaylist = monthdaynum / ( monthdaynum *("," monthdaynum) )

monthdaynum = ([plus] ordmoday) / (minus ordmoday)

ordmoday   = 1DIGIT / 2DIGIT       ;1 to 31

byyrdaylist = yeardaynum / ( yeardaynum *("," yeardaynum) )

yeardaynum = ([plus] ordyrday) / (minus ordyrday)

ordyrday   = 1DIGIT / 2DIGIT / 3DIGIT      ;1 to 366

bywknolist = weeknum / ( weeknum *("," weeknum) )

weeknum    = ([plus] ordwk) / (minus ordwk)

bymolist   = monthnum / ( monthnum *("," monthnum) )

monthnum   = 1DIGIT / 2DIGIT       ;1 to 12

bysplist   = setposday / ( setposday *("," setposday) )

setposday  = yeardaynum

FREQ=DAILY;COUNT=10;INTERVAL=2

time-hour          = 2DIGIT        ;00-23
time-minute        = 2DIGIT        ;00-59
time-second        = 2DIGIT        ;00-60
time-numzone       = ("+" / "-") time-hour time-minute
time-zone          = "Z" / time-numzone

time               = time-hour time-minute time-second [time-zone]

uri        = <As defined by any IETF RFC>

utc-offset = time-numzone  ;As defined above in time data type

icalobject = "BEGIN" ":" [WSP] "VCALENDAR" CRLF
                  icalbody
                  "END" ":" [WSP] "VCALENDAR" CRLF [icalobject]
icalbody   = calprops 1*component

calprops   = [calscale] prodid method [source] [name] version

component  = 1*(eventc / todoc / journalc / freebusyc /
                / timezonec)

eventc     = "BEGIN" ":" [WSP] "VEVENT" CRLF
                  eventprop *alarmc
                  "END" ":" [WSP] "VEVENT" CRLF

eventprop  = *attach *attendee *categories [class] *comment
                  *contact [created] [description] [dtend / duration]
                  dtstart *exdate *exrule [geo] [last-mod] [location]
                  [priority] [rstatus] [related] *resources *rdate
                  *rrule dtstamp [seq] [status] summary [transp] uid
                  [url] [recurid]

todoc      = "BEGIN" ":" [WSP] "VTODO" CRLF
                  todoprop *alarmc
                  "END" ":" [WSP] "VTODO" CRLF

todoprop   = *attach *attendee *categories [class] *comment
                  [completed] *contact [created] [description] dtstamp
                  dtstart [due / duration] *exdate *exrule [geo]
                  [last-mod] [location] [percent] priority [rstatus]
                  [related] *resources *rdate *rrule [recurid] [seq]
                  [status] summary uid [url]
journalc   = "BEGIN" ":" [WSP] "VJOURNAL" CRLF
                  jourprop
                  "END" ":" [WSP] "VJOURNAL" CRLF

jourprop   = *attach *attendee *categories [class] *comment
                  *contact [created] [description] dtstart dtstamp
                  *exdate *exrule [last-mod] [related] *rdate *rrule
                  [rstatus] [seq] summary uid [url] [recurid]

freebusyc  = "BEGIN" ":" [WSP] "VFREEBUSY" CRLF
                  fbprop
                  "END" ":" [WSP] "VFREEBUSY" CRLF

fbprop     = fbrequest / fbreply

fbrequest  = 1*attendee dtstart dtend [duration] *comment dtstamp
                  [last-mod] *related [seq] uid
fbreply    = 1*attendee [created] *comment [dtstart dtend] dtstamp
                  *freebusy [last-mod] [related] [rstatus] [seq] uid
                  [url]
alarmc     = "BEGIN" ":" [WSP] "VALARM" CRLF
                  alarmprop
                  "END" ":" [WSP] "VALARM" CRLF

alarmprop  = *attendee *attach 1*categories *comment [description]
                  dtstart duration *related repeat [summary]

timezonec  = "BEGIN" ":" [WSP] "VTIMEZONE" CRLF
                  tzprop
                  "END" ":" [WSP] "VTIMEZONE" CRLF

tzprop     = *comment [daylight] dtstart [rdate / rrule]
                  [tzname] tzoffset

calscale   = "CALSCALE" ":" [WSP] calvalue CRLF

calvalue   = "GREGORIAN" / iana-token

method     = "METHOD" ":" [WSP] profvalue CRLF

profvalue  = <Any IANA registered iCalendar object method.>

prodid     = "PRODID" ":" [WSP] pidvalue CRLF

pidvalue   = text
source     = "SOURCE" ":" [WSP] uri CRLF

name       = "NAME" ":" [WSP] text CRLF

version    = "VERSION" ":" [WSP] vervalue CRLF

vervalue   = "2.0"         ;This memo
                / maxver
                / (minver ";" [WSP] maxver)

minver     = <A IANA registered iCalendar version identifier>
maxver     = <A IANA registered iCalendar version identifier>
attach     = ("ATTACH" ":" [WSP] uri  CRLF) /
                  ("ATTACH" ";" [WSP] "ENCODING" "=" "b" ";" [WSP]
                  "VALUE" "=" "text" ":" [WSP] folded-b

attendee   = "ATTENDEE" *(";" [WSP] parameter)
                  *(";" [WSP] attparam) ":" [WSP]
                  (cal-address / uri) CRLF
attparam   = typeparm / roleparm / statusparm / rsvpparm
                / expectparm / memberparm / deletoparm / delefromparm

typeparm   = "TYPE" "="
                ("INDIVIDUAL"   ; An individual
                / "GROUP"       ; A group of individuals
                / "RESOURCE"    ; A physical resource
                / "ROOM"        ; A room resource
                / "UNKNOWN")    ; Otherwise not known
roleparm   = "ROLE" "="
                ("ATTENDEE"     ; Indicates a regular attendee
                / "OWNER"       ; Indicates owner of event or to-do
                / "ORGANIZER"   ; Indicates organizer of event or to-do
                / "DELEGATE")   ; Indicates delegate to event or to-do
statusparm = "STATUS" "="
                ("NEEDS-ACTION" ; Indicates event or to-do needs action
                / "ACCEPTED"    ; Indicates event or to-do accepted
                / "DECLINED"    ; Indicates event or to-do not accepted
                / "TENTATIVE"   ; Indicates event or to-do tentatively
                ; accepted. Status MAY change in the future.
                / "COMPLETED"   ; Indicates to-do was completed.
                ; COMPLETED property has date/time completed.
                / "IN-PROCESS"  ;Indicates to-do is in the process of
                ; being completed.
                / "DELEGATED"   ; Indicates event or to-do delegated
                ; to another ATTENDEE
                / "CANCELLED")  ; Indicates event or to-do cancelled for
                                ; ATTENDEE
rsvpparm   = "RSVP" "="
                  ("TRUE"               ; Indicates response requested
                / "FALSE")              ; Indicates no response needed
expectparm = "EXPECT" "="
                ("FYI"          ; Indicates request is for your info
                / "REQUIRE"     ; Indicates presence is required
                / "REQUEST")    ; Indicates presence is requested
memberparm = "MEMBER" "=" cal-address *("," [WSP] cal-address)
deletoparm = "DELEGATED-TO" "=" cal-address *("," [WSP]
                  cal-address)
delefromparm = "DELEGATED-FROM" "=" cal-address *("," [WSP]
                    cal-address)
categories = "CATEGORIES" *(";" [WSP] parameter) ":" [WSP]
                  catvalue CRLF

catvalue   = cat1value *["," [WSP] cat1value]
                / cat2value *["," [WSP] cat2value]

cat1value  = "ANNIVERSARY" / "APPOINTMENT" / "BUSINESS"
                / "EDUCATION" / "HOLIDAY" / "MEETING" / "MISCELLANEOUS"
                / "NON-WORKING HOURS" / "NOT IN OFFICE" / "PERSONAL"
                / "PHONE CALL"  / "SICK DAY" / "SPECIAL OCCASION"
                / "TRAVEL" / "VACATION" / word
cat2value  = "AUDIO" / "DISPLAY" / "EMAIL" / "PROCEDURE"
                / iana-token / x-name
class      = "CLASS" ":" [WSP] classvalue CRLF

classvalue = "PUBLIC" / "PRIVATE" / "CONFIDENTIAL" / iana-token
                / x-name
comment    = "COMMENT" ":" [WSP] text CRLF

contact    = "CONTACT" *(";" [WSP] parameter) ":" [WSP]
                  text / uri CRLF

c=3DUS??(cn=3DBJim%20Dolittle)

completed  = "COMPLETED" ":" [WSP] date-time CRLF

created    = "CREATED" ":" [WSP] date-time CRLF

due        = "DUE" ":" [WSP] date-time CRLF

dtend      = "DTEND" ":" [WSP] date-time CRLF

dtstamp    = "DTSTAMP" ":" [WSP] date-time CRLF

dtstart    = "DTSTART" *(";" [WSP] parameter) ":" [WSP] (date-time
                / date) CRLF

daylight   = "DAYLIGHT" ":" [WSP] boolean CRLF
description        = "DESCRIPTION" *(";" [WSP] parameter) ":" [WSP]
                          text CRLF

duration   = "DURATION" ":" [WSP] duration CRLF

exdate     = "EXDATE" *(";" [WSP] parameter) ":" [WSP] [date-time /
                  date] *("," [WSP] date-time/date) CRLF
exrule     = "EXRULE" ":" [WSP] recur CRLF

freebusy   = "FREEBUSY" *(";" [WSP] parameter) [";" [WSP]
                  fbparmlist] ":" [WSP] fbvalue CRLF

fbparmlist = fbparam *(";" [WSP] fbparam)

fbparam    = fbtype / fbstatus

fbtype     = "TYPE" "=" ("FREE" or "BUSY")
fbstatus   = "STATUS" "="
                  "BUSY"        ;Represents busy time interval.
                / "UNAVAILABLE" ;Represents busy, but unavailable
                                ;interval for cheduling; such as
                                ;out-of-office or non-working hours.
                / "TENTATIVE"   ;Represents busy, but tentatively
                                ;scheduled interval.
fbvalue    = period *["," [WSP] period]
decimal = degrees + minutes/60 + seconds/3600.

geo        = "GEO" ":" [WSP] geovalue CRLF

geovalue   = float ";" [WSP] float
last-mod   = "LAST-MODIFIED" ":" [WSP] date-time CRLF

location   = "LOCATION *(";" [WSP] parameter) ":" [WSP] locavalue
                  CRLF
locavalue  = text / uri    ;The value MUST be the same type as the
                                ;default or explicit data type.

percent = "PERCENT-COMPLETE" ":" [WSP] integer CRLF

priority   = "PRIORITY" ":" [WSP] integer CRLF
rdate      = "RDATE" *(";" [WSP] parameter) ":" [WSP] rdvalue
                  *("," [WSP] rdvalue) CRLF
rdvalue    = date-time / date / period
recurid    = "RECURRENCE-ID" *(";" [WSP] parameter)
                  [";" [WSP] rangeparm] ":" [WSP] [date-time / date]
        ;Value must match value type.

rangeparm  = "RANGE" "=" ("THISANDPRIOR" / "THISANDFUTURE")
rrule      = "RRULE" ":" [WSP] recur CRLF

BYDAY=MO,WE,FR
related    = "RELATED-TO" [";" [WSP] relparam) ":" [WSP] uid CRLF

relparam   = "RELTYPE" "="
                  "PARENT"      ; Parent relationship. Default.
                / "CHILD"       ; Child relationship.
                / "SIBLING"     ; Sibling relationship.

repeatcnt  = "REPEAT" ":" [WSP] integer CRLF
rstatus    = "REQUEST-STATUS" *(";" [WSP] parameter) ":" [WSP]
                  statcode ";" [WSP] statdesc [";" [WSP] extdata]

statcode   = 1*DIGIT *("." 1*DIGIT)
statdesc   = text
extdata    = text
resource   = "RESOURCES" *(";" [WSP] parameter) ":" [WSP]
                  resvalist CRLF

resvalist  = resvalue / resvalue "," [WSP] resvalist

resvalue   = "CATERING" / "CHAIRS" / "COMPUTER PROJECTOR"
                / "EASEL" / "OVERHEAD PROJECTOR" / "SPEAKER PHONE"
                / "TABLE" / "TV" / "VCR" / "VIDEO PHONE" / "VEHICLE"
                / word

sequence   = "SEQUENCE" ":" [WSP] integer CRLF
status     = "STATUS" ":" [WSP] statvalue CRLF

statvalue  = "NEEDS-ACTION"        ;Indicates to-do needs action.
                / "COMPLETED"           ;Indicates to-do completed.
                / "IN-PROCESS"          ;Indicates to-do in process of
                                        ;being completed.
                / "TENTATIVE"           ;Indicates event or to-do is
                                        ;tentative.
                / "CONFIRMED"           ;Indicates event or to-do is
                                        ;definite.
                / "CANCELLED"           ;Indicates event or to-do was
                                        ;cancelled.

summary    = "SUMMARY" *(";" [WSP] parameter) ":" [WSP] text CRLF

transp     = "TRANSP" ":" [WSP] transvalue CRLF

transvalue = "OPAQUE"      ;Blocks or opaque on busy time searches.
                / "TRANSPARENT" ;Transparent on busy time searches.

        ;Default value is OPAQUE


tzname     = "TZNAME" *(";" [WSP] parameter) ":" [WSP] text CRLF

tzoffset   = "TZOFFSET" ":" [WSP] utc-offset CRLF

url        = "URL" ":" [WSP] uri CRLF

uid        = "UID" ":" [WSP] text CRLF

extension  = "X-" [vendorid] "-" word *(";" [WSP] param) ":"
                  [WSP] value-list CRLF
        ; Lines longer than 75 characters should be folded

vendorid   = 3*char        ;Vendor identification prefix text

