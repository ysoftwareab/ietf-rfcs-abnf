



LISP Working Group                                            V. Ermagan
Internet-Draft                                             Cisco Systems
Intended status: Experimental                         A. Rodriguez-Natal
Expires: July 11, 2017                                          F. Coras
                                       Technical University of Catalonia
                                                               C. Moberg
                                                           Cisco Systems
                                                    A. Cabellos-Aparicio
                                       Technical University of Catalonia
                                                                F. Maino
                                                           Cisco Systems
                                                         January 7, 2017


                     LISP Configuration YANG Model
                        draft-ietf-lisp-yang-04

Abstract

   This document describes a YANG data model to use with the Locator/ID
   Separation Protocol (LISP).

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on July 11, 2017.

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents



Ermagan, et al.           Expires July 11, 2017                 [Page 1]

Internet-Draft                  LISP-YANG                   January 2017


   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  LISP Module . . . . . . . . . . . . . . . . . . . . . . . . .   3
     2.1.  Module Structure  . . . . . . . . . . . . . . . . . . . .   3
     2.2.  Module Definition . . . . . . . . . . . . . . . . . . . .   5
   3.  LISP-ITR Module . . . . . . . . . . . . . . . . . . . . . . .  13
     3.1.  Module Structure  . . . . . . . . . . . . . . . . . . . .  14
     3.2.  Module Definition . . . . . . . . . . . . . . . . . . . .  27
   4.  LISP ETR Module . . . . . . . . . . . . . . . . . . . . . . .  30
     4.1.  Module Structure  . . . . . . . . . . . . . . . . . . . .  31
     4.2.  Module Definition . . . . . . . . . . . . . . . . . . . .  33
   5.  LISP Map Server Module  . . . . . . . . . . . . . . . . . . .  36
     5.1.  Module Structure  . . . . . . . . . . . . . . . . . . . .  36
     5.2.  Module Definition . . . . . . . . . . . . . . . . . . . .  42
   6.  LISP Map Resolver Module  . . . . . . . . . . . . . . . . . .  45
     6.1.  Module Structure  . . . . . . . . . . . . . . . . . . . .  45
     6.2.  Module Definition . . . . . . . . . . . . . . . . . . . .  45
   7.  LISP Proxy ITR Module . . . . . . . . . . . . . . . . . . . .  47
     7.1.  Module Structure  . . . . . . . . . . . . . . . . . . . .  47
     7.2.  Module Definition . . . . . . . . . . . . . . . . . . . .  59
   8.  LISP Proxy ETR Module . . . . . . . . . . . . . . . . . . . .  61
     8.1.  Module Structure  . . . . . . . . . . . . . . . . . . . .  61
     8.2.  Module Definition . . . . . . . . . . . . . . . . . . . .  63
   9.  LISP Address Types  . . . . . . . . . . . . . . . . . . . . .  65
     9.1.  Module Definition . . . . . . . . . . . . . . . . . . . .  65
   10. Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  79
   11. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  79
   12. Security Considerations . . . . . . . . . . . . . . . . . . .  79
   13. Normative References  . . . . . . . . . . . . . . . . . . . .  79
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  80

1.  Introduction

   The Locator/ID Separation Protocol (LISP) defines several network
   elements subject to be configured.  This document presents the YANG
   data models required for basic configuration of all major LISP
   [RFC6830]elements.  The models also capture some essential
   operational data elements as well.






Ermagan, et al.           Expires July 11, 2017                 [Page 2]

Internet-Draft                  LISP-YANG                   January 2017


2.  LISP Module

   This module is the base LISP module that is augmented in multiple
   models to represent various LISP device roles.

2.1.  Module Structure

module: ietf-lisp
   +--rw lisp
   |  +--rw locator-sets
   |  |  +--rw locator-set* [locator-set-name]
   |  |     +--rw locator-set-name    string
   |  |     +--rw (locator-type)?
   |  |        +--:(local-interface)
   |  |        |  +--rw interface* [interface-ref]
   |  |        |     +--rw interface-ref         if:interface-ref
   |  |        |     +--rw priority?             uint8
   |  |        |     +--rw weight?               uint8
   |  |        |     +--rw multicast-priority?   uint8
   |  |        |     +--rw multicast-weight?     uint8
   |  |        +--:(general-locator)
   |  |           +--rw locator* [id]
   |  |              +--rw id                    string
   |  |              +--rw locator-address
   |  |              |  +--rw address-type             lisp-address-family-ref
   |  |              |  +--rw virtual-network-id?      instance-id-type
   |  |              |  +--rw (address)?
   |  |              |     +--:(no-address)
   |  |              |     |  +--rw no-address?              empty
   |  |              |     +--:(ipv4)
   |  |              |     |  +--rw ipv4?                    inet:ipv4-address
   |  |              |     +--:(ipv4-prefix)
   |  |              |     |  +--rw ipv4-prefix?             inet:ipv4-prefix
   |  |              |     +--:(ipv6)
   |  |              |     |  +--rw ipv6?                    inet:ipv6-address
   |  |              |     +--:(ipv6-prefix)
   |  |              |     |  +--rw ipv6-prefix?             inet:ipv6-prefix
   |  |              |     +--:(mac)
   |  |              |     |  +--rw mac?                     yang:mac-address
   |  |              |     +--:(distinguished-name)
   |  |              |     |  +--rw distinguished-name?      distinguished-name-type
   |  |              |     +--:(as-number)
   |  |              |     |  +--rw as-number?               inet:as-number
   |  |              |     +--:(null-address)
   |  |              |     |  +--rw null-address
   |  |              |     |     +--rw address?   empty
   |  |              |     +--:(afi-list)
   |  |              |     |  +--rw afi-list



Ermagan, et al.           Expires July 11, 2017                 [Page 3]

Internet-Draft                  LISP-YANG                   January 2017


   |  |              |     |     +--rw address-list*   simple-address
   |  |              |     +--:(instance-id)
   |  |              |     |  +--rw instance-id
   |  |              |     |     +--rw iid?           instance-id-type
   |  |              |     |     +--rw mask-length?   uint8
   |  |              |     |     +--rw address?       simple-address
   |  |              |     +--:(as-number-lcaf)
   |  |              |     |  +--rw as-number-lcaf
   |  |              |     |     +--rw as?        inet:as-number
   |  |              |     |     +--rw address?   simple-address
   |  |              |     +--:(application-data)
   |  |              |     |  +--rw application-data
   |  |              |     |     +--rw address?            simple-address
   |  |              |     |     +--rw protocol?           uint8
   |  |              |     |     +--rw ip-tos?             int32
   |  |              |     |     +--rw local-port-low?     inet:port-number
   |  |              |     |     +--rw local-port-high?    inet:port-number
   |  |              |     |     +--rw remote-port-low?    inet:port-number
   |  |              |     |     +--rw remote-port-high?   inet:port-number
   |  |              |     +--:(geo-coordinates)
   |  |              |     |  +--rw geo-coordinates
   |  |              |     |     +--rw latitude?            bits
   |  |              |     |     +--rw latitude-degrees?    uint8
   |  |              |     |     +--rw latitude-minutes?    uint8
   |  |              |     |     +--rw latitude-seconds?    uint8
   |  |              |     |     +--rw longitude?           bits
   |  |              |     |     +--rw longitude-degrees?   uint16
   |  |              |     |     +--rw longitude-minutes?   uint8
   |  |              |     |     +--rw longitude-seconds?   uint8
   |  |              |     |     +--rw altitude?            int32
   |  |              |     |     +--rw address?             simple-address
   |  |              |     +--:(nat-traversal)
   |  |              |     |  +--rw nat-traversal
   |  |              |     |     +--rw ms-udp-port?        uint16
   |  |              |     |     +--rw etr-udp-port?       uint16
   |  |              |     |     +--rw global-etr-rloc?    simple-address
   |  |              |     |     +--rw ms-rloc?            simple-address
   |  |              |     |     +--rw private-etr-rloc?   simple-address
   |  |              |     |     +--rw rtr-rlocs*          simple-address
   |  |              |     +--:(explicit-locator-path)
   |  |              |     |  +--rw explicit-locator-path
   |  |              |     |     +--rw hop* [hop-id]
   |  |              |     |        +--rw hop-id      string
   |  |              |     |        +--rw address?    simple-address
   |  |              |     |        +--rw lrs-bits?   bits
   |  |              |     +--:(source-dest-key)
   |  |              |     |  +--rw source-dest-key
   |  |              |     |     +--rw source?   simple-address



Ermagan, et al.           Expires July 11, 2017                 [Page 4]

Internet-Draft                  LISP-YANG                   January 2017


   |  |              |     |     +--rw dest?     simple-address
   |  |              |     +--:(key-value-address)
   |  |              |     |  +--rw key-value-address
   |  |              |     |     +--rw key?     simple-address
   |  |              |     |     +--rw value?   simple-address
   |  |              |     +--:(service-path)
   |  |              |        +--rw service-path
   |  |              |           +--rw service-path-id?   service-path-id-type
   |  |              |           +--rw service-index?     uint8
   |  |              +--rw priority?             uint8
   |  |              +--rw weight?               uint8
   |  |              +--rw multicast-priority?   uint8
   |  |              +--rw multicast-weight?     uint8
   |  +--rw lisp-router-instances
   |     +--rw lisp-router-instance* [lisp-router-instance-id]
   |        +--rw lisp-router-instance-id    int32
   |        +--rw lisp-role* [lisp-role-type]
   |           +--rw lisp-role-type    lisp-role-ref
   |           +--rw enabled?          boolean
   +--ro lisp-state
      +--ro lisp-router-instances
         +--ro lisp-router-instance* [lisp-router-instance-id]
            +--ro lisp-router-instance-id    int32
            +--ro lisp-role* [lisp-role-type]
               +--ro lisp-role-type    lisp-role-ref
               +--ro enabled?          boolean

2.2.  Module Definition

   <CODE BEGINS> file "ietf-lisp@2016-06-30.yang"
   module ietf-lisp {
     namespace "urn:ietf:params:xml:ns:yang:ietf-lisp";
     prefix lisp;
     import ietf-interfaces {
       prefix if;
     }
     import ietf-lisp-address-types {
       prefix lcaf;
     }
     organization
       "IETF LISP (Locator/ID Separation Protocol) Working Group";
     contact
       "lisp@ietf.org";
     description
       "This YANG module defines the generic configuration
        and operational data for LISP. The module can be extended by
        vendors to define vendor-specific LISP configuration
        parameters and policies.



Ermagan, et al.           Expires July 11, 2017                 [Page 5]

Internet-Draft                  LISP-YANG                   January 2017


        Copyright (c) 2014 IETF Trust and the persons identified as
        authors of the code.  All rights reserved.

        Redistribution and use in source and binary forms, with or
        without modification, is permitted pursuant to, and subject
        to the license terms contained in, the Simplified BSD License
        set forth in Section 4.c of the IETF Trust's Legal Provisions
        Relating to IETF Documents
        (http://trustee.ietf.org/license-info).

        This version of this YANG module is part of RFC 6338; see
        the RFC itself for full legal notices.
       ";

     revision 2016-06-30 {
       description
         "Initial revision.";
       reference
         "https://tools.ietf.org/html/rfc6830";
     }
     identity lisp-role {
       description
         "LISP router role.";
     }
     identity mapping-system {
       description
         "Mapping System interface";
     }
     identity single-node-mapping-system {
       base mapping-system;
       description
         "logically singular Map Server";
     }
     typedef mapping-system-ref {
       type identityref {
         base mapping-system;
       }
       description
         "Mapping System reference";
     }

     typedef lisp-role-ref {
       type identityref {
         base lisp-role;
       }
       description
         "LISP role reference";
     }



Ermagan, et al.           Expires July 11, 2017                 [Page 6]

Internet-Draft                  LISP-YANG                   January 2017


     typedef map-reply-action {
       type enumeration {
         enum no-action {
           value 0;
           description
             "Mapping is kept alive and no encapsulation occurs.";
         }
         enum natively-forward {
           value 1;
           description
             "Matching packets are not encapsulated or dropped but
              natively forwarded.";
         }
         enum send-map-request {
           value 2;
           description
             "Matching packets invoke Map-Requests.";
         }
         enum drop {
           value 3;
           description
             "Matching packets are dropped.";
         }
       }
       description
         "Defines the lisp map-cache ACT type";
       reference "https://tools.ietf.org/html/rfc6830#section-6.1.4";
     }
     typedef eid-id {
       type string;
       description
         "Type encoding of lisp-addresses to be generally used in EID
          keyed lists.";
     }
     typedef auth-key-type {
       type enumeration {
         enum none {
           value 0;
           description
             "No authentication.";
         }
         enum hmac-sha-1-96 {
           value 1;
           description
             "HMAC-SHA-1-96 (RFC2404) authentication is used.";
         }
         enum hmac-sha-256-128 {
           value 2;



Ermagan, et al.           Expires July 11, 2017                 [Page 7]

Internet-Draft                  LISP-YANG                   January 2017


           description
             "HMAC-SHA-256-128 (RFC4868) authentication is used.";
         }
       }
       description
         "Enumeration of the authentication mechansms supported by
          LISP.";
       reference
         "https://tools.ietf.org/html/rfc6830#section-6.1.6";
     }

     grouping locator-properties {
       description
         "Properties of a RLOC";
       leaf priority {
         type uint8;
         description
           "Locator priority.";
       }
       leaf weight {
         type uint8;
         description
           "Locator weight.";
       }
       leaf multicast-priority {
         type uint8;
         description
           "Locator's multicast priority";
       }
       leaf multicast-weight {
         type uint8;
         description
           "Locator's multicast weight";
       }
     }

     grouping locators-grouping {
       description
         "Group that defines a list of LISP locators.";
       // vina: container?
         list locator {
           key "id";
           description
             "List of routing locators";
           leaf id {
             type string {
               length "1..64";
             }



Ermagan, et al.           Expires July 11, 2017                 [Page 8]

Internet-Draft                  LISP-YANG                   January 2017


             description
               "Locator id";
           }
           container locator-address {
             uses lcaf:lisp-address;
             description
               "The locator address provided in LISP canonincal
                address format.";
           }
           uses locator-properties;
         }

     }

     grouping local-locators-grouping {
       description
         "Group that defines a list of LISP locators.";
       list interface {
         key "interface-ref";
         description
           "The address type of the locator";
         leaf interface-ref {
           type if:interface-ref;
           description
             "The name of the interface supporting the locator.";
         }
         uses locator-properties;
       }
     }
     grouping servicing-eids-grouping {
       description
         "Group of EIDs serviced by the this lisp device.";
       container servicing-eids {
         description
           "This node defines list of EIDs serviced by the this"
           + " lisp device.";
         list servicing-eid {
           key "id";
           description
             "List of EIDs serviced by the this lisp device.";
           leaf id {
             type lisp:eid-id;
             description
               "Id of serviced EID.";
           }
           container eid-address {
             uses lcaf:lisp-address;
             description



Ermagan, et al.           Expires July 11, 2017                 [Page 9]

Internet-Draft                  LISP-YANG                   January 2017


               "Serviced EID address in generic LISP address format.";
           }
         }
       }
     }
     grouping mappings {
       description
         "Group that defines a list of LISP mappings.";
       list mapping {
         key "id";
         description
           "List of EID to RLOCs mappings.";
         leaf id {
           type eid-id;
           description
             "Id that uniquely identifies a mapping.";
         }
         container eid {
           uses lcaf:lisp-address;
           description
             "End-host Identifier (EID) to be mapped to a list of
              locators";
         }
         leaf ttl {
           type uint32;
           description
             "Mapping validity period.";
         }
         leaf authoritative {
           type bits {
             bit A {
               description
                 "Authoritative bit.";
             }
           }
           description
             "Bit that indicates if mapping comes from an
              authoritative source.";
         }
         leaf static {
           type boolean;
           default "false";
           description
             "This leaf should be true if the mapping is static.";
         }
         choice locator-list {
           description
             "list of locartors are either negative, or positive.";



Ermagan, et al.           Expires July 11, 2017                [Page 10]

Internet-Draft                  LISP-YANG                   January 2017


           case negative-mapping {
             leaf map-reply-action {
               type map-reply-action;
               description
                 "Forwarding action for a negative mapping.";
             }
           }
           case positive-mapping {
             container rlocs {
               uses locators-grouping;
               description
                 "List of locators for a positive mapping.";
             }
           }
         }
       }
     }

     /* Configuration Data */
     container lisp {
       description
         "Configuration parameters for LISP subsystem.";

       container locator-sets {
         description
           "Container that defines a named locator set which can be
           referenced elsewhere.";
         list locator-set {
           key "locator-set-name";
           description
             "Multiple locator sets can be configured.";
           leaf locator-set-name {
             type string {
               length "1..64";
             }
             description
               "Locator set name";
           }
           choice locator-type {
             description
               "Locator sets can be based on local interfaces, or
                general locators.";
             case local-interface {
               uses local-locators-grouping;
               description
                 "List of locators in this set based on local
                 interfaces.";
             }



Ermagan, et al.           Expires July 11, 2017                [Page 11]

Internet-Draft                  LISP-YANG                   January 2017


             case general-locator {
               uses locators-grouping;
               description
                 "List of locators in this set based on lisp-address.";
             }
           }
         }
       }

       container lisp-router-instances {
         description
           "Configuration of LISP router instances.";
         list lisp-router-instance {
           key "lisp-router-instance-id";
           description
             "Each entry contains configuration of a lisp-router
              instance.";
           leaf lisp-router-instance-id {
             type int32;
             description
               "Arbitrary lisp-router id.";
           }
           list lisp-role {
             key lisp-role-type;
             description
               "List of lisp device roles such as MS, MR, ITR,
               ETR, RTR.";
             leaf lisp-role-type {
               type lisp-role-ref;
               description
                 "The type of LISP device - identity derived from the
                  'lisp-device' base identity.";
             }
             leaf enabled {
               type boolean;
               default "true";
               description
                 "Enable/disable the lisp-role.";
             }
           }
         }
       }
     }

     /* Operational state data */
     container lisp-state {
       config false;
       description



Ermagan, et al.           Expires July 11, 2017                [Page 12]

Internet-Draft                  LISP-YANG                   January 2017


         "Operational state of the LISP subsystem.";
       container lisp-router-instances {
         description
           "Configuration of LISP router instances.";
         list lisp-router-instance {
           key "lisp-router-instance-id";
           description
             "Each entry contains configuration of a lisp-router
             instance.";
           leaf lisp-router-instance-id {
             type int32;
             description
               "Arbitrary lisp-router id.";
           }
           list lisp-role {
             key lisp-role-type;
             description
               "List of lisp device roles such as MS, MR, ITR,
               ETR, RTR.";
             leaf lisp-role-type {
               type lisp-role-ref;
               description
                 "The type of LISP device - identity derived from the
                  'lisp-device' base identity.";
             }
             leaf enabled {
               type boolean;
               default "true";
               description
                 "Enable/disable the lisp-role.";
             }
           }
         }
       }
     }

   }

   <CODE ENDS>

3.  LISP-ITR Module

   This module captures the configuration data model of a LISP ITR.  The
   model also captures some operational data elements.







Ermagan, et al.           Expires July 11, 2017                [Page 13]

Internet-Draft                  LISP-YANG                   January 2017


3.1.  Module Structure

module: ietf-lisp-itr
augment /lisp:lisp/lisp:lisp-router-instances/lisp:lisp-router-instance/lisp:lisp-role:
   +--rw itr-cfg!
      +--rw rloc-probing!
      |  +--rw interval?           uint16
      |  +--rw retries?            uint8
      |  +--rw retries-interval?   uint16
      +--rw itr-rlocs?        -> /lisp:lisp/locator-sets/locator-set/locator-set-name
      +--rw map-resolvers
      |  +--rw map-resolver* [id]
      |     +--rw id                      lisp:eid-id
      |     +--rw eid-address
      |     |  +--rw address-type             lisp-address-family-ref
      |     |  +--rw virtual-network-id?      instance-id-type
      |     |  +--rw (address)?
      |     |     +--:(no-address)
      |     |     |  +--rw no-address?              empty
      |     |     +--:(ipv4)
      |     |     |  +--rw ipv4?                    inet:ipv4-address
      |     |     +--:(ipv4-prefix)
      |     |     |  +--rw ipv4-prefix?             inet:ipv4-prefix
      |     |     +--:(ipv6)
      |     |     |  +--rw ipv6?                    inet:ipv6-address
      |     |     +--:(ipv6-prefix)
      |     |     |  +--rw ipv6-prefix?             inet:ipv6-prefix
      |     |     +--:(mac)
      |     |     |  +--rw mac?                     yang:mac-address
      |     |     +--:(distinguished-name)
      |     |     |  +--rw distinguished-name?      distinguished-name-type
      |     |     +--:(as-number)
      |     |     |  +--rw as-number?               inet:as-number
      |     |     +--:(null-address)
      |     |     |  +--rw null-address
      |     |     |     +--rw address?   empty
      |     |     +--:(afi-list)
      |     |     |  +--rw afi-list
      |     |     |     +--rw address-list*   simple-address
      |     |     +--:(instance-id)
      |     |     |  +--rw instance-id
      |     |     |     +--rw iid?           instance-id-type
      |     |     |     +--rw mask-length?   uint8
      |     |     |     +--rw address?       simple-address
      |     |     +--:(as-number-lcaf)
      |     |     |  +--rw as-number-lcaf
      |     |     |     +--rw as?        inet:as-number
      |     |     |     +--rw address?   simple-address



Ermagan, et al.           Expires July 11, 2017                [Page 14]

Internet-Draft                  LISP-YANG                   January 2017


      |     |     +--:(application-data)
      |     |     |  +--rw application-data
      |     |     |     +--rw address?            simple-address
      |     |     |     +--rw protocol?           uint8
      |     |     |     +--rw ip-tos?             int32
      |     |     |     +--rw local-port-low?     inet:port-number
      |     |     |     +--rw local-port-high?    inet:port-number
      |     |     |     +--rw remote-port-low?    inet:port-number
      |     |     |     +--rw remote-port-high?   inet:port-number
      |     |     +--:(geo-coordinates)
      |     |     |  +--rw geo-coordinates
      |     |     |     +--rw latitude?            bits
      |     |     |     +--rw latitude-degrees?    uint8
      |     |     |     +--rw latitude-minutes?    uint8
      |     |     |     +--rw latitude-seconds?    uint8
      |     |     |     +--rw longitude?           bits
      |     |     |     +--rw longitude-degrees?   uint16
      |     |     |     +--rw longitude-minutes?   uint8
      |     |     |     +--rw longitude-seconds?   uint8
      |     |     |     +--rw altitude?            int32
      |     |     |     +--rw address?             simple-address
      |     |     +--:(nat-traversal)
      |     |     |  +--rw nat-traversal
      |     |     |     +--rw ms-udp-port?        uint16
      |     |     |     +--rw etr-udp-port?       uint16
      |     |     |     +--rw global-etr-rloc?    simple-address
      |     |     |     +--rw ms-rloc?            simple-address
      |     |     |     +--rw private-etr-rloc?   simple-address
      |     |     |     +--rw rtr-rlocs*          simple-address
      |     |     +--:(explicit-locator-path)
      |     |     |  +--rw explicit-locator-path
      |     |     |     +--rw hop* [hop-id]
      |     |     |        +--rw hop-id      string
      |     |     |        +--rw address?    simple-address
      |     |     |        +--rw lrs-bits?   bits
      |     |     +--:(source-dest-key)
      |     |     |  +--rw source-dest-key
      |     |     |     +--rw source?   simple-address
      |     |     |     +--rw dest?     simple-address
      |     |     +--:(key-value-address)
      |     |     |  +--rw key-value-address
      |     |     |     +--rw key?     simple-address
      |     |     |     +--rw value?   simple-address
      |     |     +--:(service-path)
      |     |        +--rw service-path
      |     |           +--rw service-path-id?   service-path-id-type
      |     |           +--rw service-index?     uint8
      |     +--rw map-resolver-address*   inet:ip-address



Ermagan, et al.           Expires July 11, 2017                [Page 15]

Internet-Draft                  LISP-YANG                   January 2017


      +--rw proxy-etrs
      |  +--rw proxy-etr* [id]
      |     +--rw id                   lisp:eid-id
      |     +--rw eid-address
      |     |  +--rw address-type             lisp-address-family-ref
      |     |  +--rw virtual-network-id?      instance-id-type
      |     |  +--rw (address)?
      |     |     +--:(no-address)
      |     |     |  +--rw no-address?              empty
      |     |     +--:(ipv4)
      |     |     |  +--rw ipv4?                    inet:ipv4-address
      |     |     +--:(ipv4-prefix)
      |     |     |  +--rw ipv4-prefix?             inet:ipv4-prefix
      |     |     +--:(ipv6)
      |     |     |  +--rw ipv6?                    inet:ipv6-address
      |     |     +--:(ipv6-prefix)
      |     |     |  +--rw ipv6-prefix?             inet:ipv6-prefix
      |     |     +--:(mac)
      |     |     |  +--rw mac?                     yang:mac-address
      |     |     +--:(distinguished-name)
      |     |     |  +--rw distinguished-name?      distinguished-name-type
      |     |     +--:(as-number)
      |     |     |  +--rw as-number?               inet:as-number
      |     |     +--:(null-address)
      |     |     |  +--rw null-address
      |     |     |     +--rw address?   empty
      |     |     +--:(afi-list)
      |     |     |  +--rw afi-list
      |     |     |     +--rw address-list*   simple-address
      |     |     +--:(instance-id)
      |     |     |  +--rw instance-id
      |     |     |     +--rw iid?           instance-id-type
      |     |     |     +--rw mask-length?   uint8
      |     |     |     +--rw address?       simple-address
      |     |     +--:(as-number-lcaf)
      |     |     |  +--rw as-number-lcaf
      |     |     |     +--rw as?        inet:as-number
      |     |     |     +--rw address?   simple-address
      |     |     +--:(application-data)
      |     |     |  +--rw application-data
      |     |     |     +--rw address?            simple-address
      |     |     |     +--rw protocol?           uint8
      |     |     |     +--rw ip-tos?             int32
      |     |     |     +--rw local-port-low?     inet:port-number
      |     |     |     +--rw local-port-high?    inet:port-number
      |     |     |     +--rw remote-port-low?    inet:port-number
      |     |     |     +--rw remote-port-high?   inet:port-number
      |     |     +--:(geo-coordinates)



Ermagan, et al.           Expires July 11, 2017                [Page 16]

Internet-Draft                  LISP-YANG                   January 2017


      |     |     |  +--rw geo-coordinates
      |     |     |     +--rw latitude?            bits
      |     |     |     +--rw latitude-degrees?    uint8
      |     |     |     +--rw latitude-minutes?    uint8
      |     |     |     +--rw latitude-seconds?    uint8
      |     |     |     +--rw longitude?           bits
      |     |     |     +--rw longitude-degrees?   uint16
      |     |     |     +--rw longitude-minutes?   uint8
      |     |     |     +--rw longitude-seconds?   uint8
      |     |     |     +--rw altitude?            int32
      |     |     |     +--rw address?             simple-address
      |     |     +--:(nat-traversal)
      |     |     |  +--rw nat-traversal
      |     |     |     +--rw ms-udp-port?        uint16
      |     |     |     +--rw etr-udp-port?       uint16
      |     |     |     +--rw global-etr-rloc?    simple-address
      |     |     |     +--rw ms-rloc?            simple-address
      |     |     |     +--rw private-etr-rloc?   simple-address
      |     |     |     +--rw rtr-rlocs*          simple-address
      |     |     +--:(explicit-locator-path)
      |     |     |  +--rw explicit-locator-path
      |     |     |     +--rw hop* [hop-id]
      |     |     |        +--rw hop-id      string
      |     |     |        +--rw address?    simple-address
      |     |     |        +--rw lrs-bits?   bits
      |     |     +--:(source-dest-key)
      |     |     |  +--rw source-dest-key
      |     |     |     +--rw source?   simple-address
      |     |     |     +--rw dest?     simple-address
      |     |     +--:(key-value-address)
      |     |     |  +--rw key-value-address
      |     |     |     +--rw key?     simple-address
      |     |     |     +--rw value?   simple-address
      |     |     +--:(service-path)
      |     |        +--rw service-path
      |     |           +--rw service-path-id?   service-path-id-type
      |     |           +--rw service-index?     uint8
      |     +--rw proxy-etr-address*   inet:ip-address
      +--rw map-cache
      |  +--rw mapping* [id]
      |     +--rw id                  eid-id
      |     +--rw eid
      |     |  +--rw address-type             lisp-address-family-ref
      |     |  +--rw virtual-network-id?      instance-id-type
      |     |  +--rw (address)?
      |     |     +--:(no-address)
      |     |     |  +--rw no-address?              empty
      |     |     +--:(ipv4)



Ermagan, et al.           Expires July 11, 2017                [Page 17]

Internet-Draft                  LISP-YANG                   January 2017


      |     |     |  +--rw ipv4?                    inet:ipv4-address
      |     |     +--:(ipv4-prefix)
      |     |     |  +--rw ipv4-prefix?             inet:ipv4-prefix
      |     |     +--:(ipv6)
      |     |     |  +--rw ipv6?                    inet:ipv6-address
      |     |     +--:(ipv6-prefix)
      |     |     |  +--rw ipv6-prefix?             inet:ipv6-prefix
      |     |     +--:(mac)
      |     |     |  +--rw mac?                     yang:mac-address
      |     |     +--:(distinguished-name)
      |     |     |  +--rw distinguished-name?      distinguished-name-type
      |     |     +--:(as-number)
      |     |     |  +--rw as-number?               inet:as-number
      |     |     +--:(null-address)
      |     |     |  +--rw null-address
      |     |     |     +--rw address?   empty
      |     |     +--:(afi-list)
      |     |     |  +--rw afi-list
      |     |     |     +--rw address-list*   simple-address
      |     |     +--:(instance-id)
      |     |     |  +--rw instance-id
      |     |     |     +--rw iid?           instance-id-type
      |     |     |     +--rw mask-length?   uint8
      |     |     |     +--rw address?       simple-address
      |     |     +--:(as-number-lcaf)
      |     |     |  +--rw as-number-lcaf
      |     |     |     +--rw as?        inet:as-number
      |     |     |     +--rw address?   simple-address
      |     |     +--:(application-data)
      |     |     |  +--rw application-data
      |     |     |     +--rw address?            simple-address
      |     |     |     +--rw protocol?           uint8
      |     |     |     +--rw ip-tos?             int32
      |     |     |     +--rw local-port-low?     inet:port-number
      |     |     |     +--rw local-port-high?    inet:port-number
      |     |     |     +--rw remote-port-low?    inet:port-number
      |     |     |     +--rw remote-port-high?   inet:port-number
      |     |     +--:(geo-coordinates)
      |     |     |  +--rw geo-coordinates
      |     |     |     +--rw latitude?            bits
      |     |     |     +--rw latitude-degrees?    uint8
      |     |     |     +--rw latitude-minutes?    uint8
      |     |     |     +--rw latitude-seconds?    uint8
      |     |     |     +--rw longitude?           bits
      |     |     |     +--rw longitude-degrees?   uint16
      |     |     |     +--rw longitude-minutes?   uint8
      |     |     |     +--rw longitude-seconds?   uint8
      |     |     |     +--rw altitude?            int32



Ermagan, et al.           Expires July 11, 2017                [Page 18]

Internet-Draft                  LISP-YANG                   January 2017


      |     |     |     +--rw address?             simple-address
      |     |     +--:(nat-traversal)
      |     |     |  +--rw nat-traversal
      |     |     |     +--rw ms-udp-port?        uint16
      |     |     |     +--rw etr-udp-port?       uint16
      |     |     |     +--rw global-etr-rloc?    simple-address
      |     |     |     +--rw ms-rloc?            simple-address
      |     |     |     +--rw private-etr-rloc?   simple-address
      |     |     |     +--rw rtr-rlocs*          simple-address
      |     |     +--:(explicit-locator-path)
      |     |     |  +--rw explicit-locator-path
      |     |     |     +--rw hop* [hop-id]
      |     |     |        +--rw hop-id      string
      |     |     |        +--rw address?    simple-address
      |     |     |        +--rw lrs-bits?   bits
      |     |     +--:(source-dest-key)
      |     |     |  +--rw source-dest-key
      |     |     |     +--rw source?   simple-address
      |     |     |     +--rw dest?     simple-address
      |     |     +--:(key-value-address)
      |     |     |  +--rw key-value-address
      |     |     |     +--rw key?     simple-address
      |     |     |     +--rw value?   simple-address
      |     |     +--:(service-path)
      |     |        +--rw service-path
      |     |           +--rw service-path-id?   service-path-id-type
      |     |           +--rw service-index?     uint8
      |     +--rw ttl?                uint32
      |     +--rw authoritative?      bits
      |     +--rw static?             boolean
      |     +--rw (locator-list)?
      |        +--:(negative-mapping)
      |        |  +--rw map-reply-action?   map-reply-action
      |        +--:(positive-mapping)
      |           +--rw rlocs
      |              +--rw locator* [id]
      |                 +--rw id                    string
      |                 +--rw locator-address
      |                 |  +--rw address-type             lisp-address-family-ref
      |                 |  +--rw virtual-network-id?      instance-id-type
      |                 |  +--rw (address)?
      |                 |     +--:(no-address)
      |                 |     |  +--rw no-address?              empty
      |                 |     +--:(ipv4)
      |                 |     |  +--rw ipv4?                    inet:ipv4-address
      |                 |     +--:(ipv4-prefix)
      |                 |     |  +--rw ipv4-prefix?             inet:ipv4-prefix
      |                 |     +--:(ipv6)



Ermagan, et al.           Expires July 11, 2017                [Page 19]

Internet-Draft                  LISP-YANG                   January 2017


      |                 |     |  +--rw ipv6?                    inet:ipv6-address
      |                 |     +--:(ipv6-prefix)
      |                 |     |  +--rw ipv6-prefix?             inet:ipv6-prefix
      |                 |     +--:(mac)
      |                 |     |  +--rw mac?                     yang:mac-address
      |                 |     +--:(distinguished-name)
      |                 |     |  +--rw distinguished-name?      distinguished-name-type
      |                 |     +--:(as-number)
      |                 |     |  +--rw as-number?               inet:as-number
      |                 |     +--:(null-address)
      |                 |     |  +--rw null-address
      |                 |     |     +--rw address?   empty
      |                 |     +--:(afi-list)
      |                 |     |  +--rw afi-list
      |                 |     |     +--rw address-list*   simple-address
      |                 |     +--:(instance-id)
      |                 |     |  +--rw instance-id
      |                 |     |     +--rw iid?           instance-id-type
      |                 |     |     +--rw mask-length?   uint8
      |                 |     |     +--rw address?       simple-address
      |                 |     +--:(as-number-lcaf)
      |                 |     |  +--rw as-number-lcaf
      |                 |     |     +--rw as?        inet:as-number
      |                 |     |     +--rw address?   simple-address
      |                 |     +--:(application-data)
      |                 |     |  +--rw application-data
      |                 |     |     +--rw address?            simple-address
      |                 |     |     +--rw protocol?           uint8
      |                 |     |     +--rw ip-tos?             int32
      |                 |     |     +--rw local-port-low?     inet:port-number
      |                 |     |     +--rw local-port-high?    inet:port-number
      |                 |     |     +--rw remote-port-low?    inet:port-number
      |                 |     |     +--rw remote-port-high?   inet:port-number
      |                 |     +--:(geo-coordinates)
      |                 |     |  +--rw geo-coordinates
      |                 |     |     +--rw latitude?            bits
      |                 |     |     +--rw latitude-degrees?    uint8
      |                 |     |     +--rw latitude-minutes?    uint8
      |                 |     |     +--rw latitude-seconds?    uint8
      |                 |     |     +--rw longitude?           bits
      |                 |     |     +--rw longitude-degrees?   uint16
      |                 |     |     +--rw longitude-minutes?   uint8
      |                 |     |     +--rw longitude-seconds?   uint8
      |                 |     |     +--rw altitude?            int32
      |                 |     |     +--rw address?             simple-address
      |                 |     +--:(nat-traversal)
      |                 |     |  +--rw nat-traversal
      |                 |     |     +--rw ms-udp-port?        uint16



Ermagan, et al.           Expires July 11, 2017                [Page 20]

Internet-Draft                  LISP-YANG                   January 2017


      |                 |     |     +--rw etr-udp-port?       uint16
      |                 |     |     +--rw global-etr-rloc?    simple-address
      |                 |     |     +--rw ms-rloc?            simple-address
      |                 |     |     +--rw private-etr-rloc?   simple-address
      |                 |     |     +--rw rtr-rlocs*          simple-address
      |                 |     +--:(explicit-locator-path)
      |                 |     |  +--rw explicit-locator-path
      |                 |     |     +--rw hop* [hop-id]
      |                 |     |        +--rw hop-id      string
      |                 |     |        +--rw address?    simple-address
      |                 |     |        +--rw lrs-bits?   bits
      |                 |     +--:(source-dest-key)
      |                 |     |  +--rw source-dest-key
      |                 |     |     +--rw source?   simple-address
      |                 |     |     +--rw dest?     simple-address
      |                 |     +--:(key-value-address)
      |                 |     |  +--rw key-value-address
      |                 |     |     +--rw key?     simple-address
      |                 |     |     +--rw value?   simple-address
      |                 |     +--:(service-path)
      |                 |        +--rw service-path
      |                 |           +--rw service-path-id?   service-path-id-type
      |                 |           +--rw service-index?     uint8
      |                 +--rw priority?             uint8
      |                 +--rw weight?               uint8
      |                 +--rw multicast-priority?   uint8
      |                 +--rw multicast-weight?     uint8
      +--rw servicing-eids
         +--rw servicing-eid* [id]
            +--rw id             lisp:eid-id
            +--rw eid-address
               +--rw address-type             lisp-address-family-ref
               +--rw virtual-network-id?      instance-id-type
               +--rw (address)?
                  +--:(no-address)
                  |  +--rw no-address?              empty
                  +--:(ipv4)
                  |  +--rw ipv4?                    inet:ipv4-address
                  +--:(ipv4-prefix)
                  |  +--rw ipv4-prefix?             inet:ipv4-prefix
                  +--:(ipv6)
                  |  +--rw ipv6?                    inet:ipv6-address
                  +--:(ipv6-prefix)
                  |  +--rw ipv6-prefix?             inet:ipv6-prefix
                  +--:(mac)
                  |  +--rw mac?                     yang:mac-address
                  +--:(distinguished-name)
                  |  +--rw distinguished-name?      distinguished-name-type



Ermagan, et al.           Expires July 11, 2017                [Page 21]

Internet-Draft                  LISP-YANG                   January 2017


                  +--:(as-number)
                  |  +--rw as-number?               inet:as-number
                  +--:(null-address)
                  |  +--rw null-address
                  |     +--rw address?   empty
                  +--:(afi-list)
                  |  +--rw afi-list
                  |     +--rw address-list*   simple-address
                  +--:(instance-id)
                  |  +--rw instance-id
                  |     +--rw iid?           instance-id-type
                  |     +--rw mask-length?   uint8
                  |     +--rw address?       simple-address
                  +--:(as-number-lcaf)
                  |  +--rw as-number-lcaf
                  |     +--rw as?        inet:as-number
                  |     +--rw address?   simple-address
                  +--:(application-data)
                  |  +--rw application-data
                  |     +--rw address?            simple-address
                  |     +--rw protocol?           uint8
                  |     +--rw ip-tos?             int32
                  |     +--rw local-port-low?     inet:port-number
                  |     +--rw local-port-high?    inet:port-number
                  |     +--rw remote-port-low?    inet:port-number
                  |     +--rw remote-port-high?   inet:port-number
                  +--:(geo-coordinates)
                  |  +--rw geo-coordinates
                  |     +--rw latitude?            bits
                  |     +--rw latitude-degrees?    uint8
                  |     +--rw latitude-minutes?    uint8
                  |     +--rw latitude-seconds?    uint8
                  |     +--rw longitude?           bits
                  |     +--rw longitude-degrees?   uint16
                  |     +--rw longitude-minutes?   uint8
                  |     +--rw longitude-seconds?   uint8
                  |     +--rw altitude?            int32
                  |     +--rw address?             simple-address
                  +--:(nat-traversal)
                  |  +--rw nat-traversal
                  |     +--rw ms-udp-port?        uint16
                  |     +--rw etr-udp-port?       uint16
                  |     +--rw global-etr-rloc?    simple-address
                  |     +--rw ms-rloc?            simple-address
                  |     +--rw private-etr-rloc?   simple-address
                  |     +--rw rtr-rlocs*          simple-address
                  +--:(explicit-locator-path)
                  |  +--rw explicit-locator-path



Ermagan, et al.           Expires July 11, 2017                [Page 22]

Internet-Draft                  LISP-YANG                   January 2017


                  |     +--rw hop* [hop-id]
                  |        +--rw hop-id      string
                  |        +--rw address?    simple-address
                  |        +--rw lrs-bits?   bits
                  +--:(source-dest-key)
                  |  +--rw source-dest-key
                  |     +--rw source?   simple-address
                  |     +--rw dest?     simple-address
                  +--:(key-value-address)
                  |  +--rw key-value-address
                  |     +--rw key?     simple-address
                  |     +--rw value?   simple-address
                  +--:(service-path)
                     +--rw service-path
                        +--rw service-path-id?   service-path-id-type
                        +--rw service-index?     uint8
augment /lisp:lisp-state/lisp:lisp-router-instances/lisp:lisp-router-instance/lisp:lisp-role:
   +--ro itr-state
      +--ro map-cache
         +--ro mapping* [id]
            +--ro id                  eid-id
            +--ro eid
            |  +--ro address-type             lisp-address-family-ref
            |  +--ro virtual-network-id?      instance-id-type
            |  +--ro (address)?
            |     +--:(no-address)
            |     |  +--ro no-address?              empty
            |     +--:(ipv4)
            |     |  +--ro ipv4?                    inet:ipv4-address
            |     +--:(ipv4-prefix)
            |     |  +--ro ipv4-prefix?             inet:ipv4-prefix
            |     +--:(ipv6)
            |     |  +--ro ipv6?                    inet:ipv6-address
            |     +--:(ipv6-prefix)
            |     |  +--ro ipv6-prefix?             inet:ipv6-prefix
            |     +--:(mac)
            |     |  +--ro mac?                     yang:mac-address
            |     +--:(distinguished-name)
            |     |  +--ro distinguished-name?      distinguished-name-type
            |     +--:(as-number)
            |     |  +--ro as-number?               inet:as-number
            |     +--:(null-address)
            |     |  +--ro null-address
            |     |     +--ro address?   empty
            |     +--:(afi-list)
            |     |  +--ro afi-list
            |     |     +--ro address-list*   simple-address
            |     +--:(instance-id)



Ermagan, et al.           Expires July 11, 2017                [Page 23]

Internet-Draft                  LISP-YANG                   January 2017


            |     |  +--ro instance-id
            |     |     +--ro iid?           instance-id-type
            |     |     +--ro mask-length?   uint8
            |     |     +--ro address?       simple-address
            |     +--:(as-number-lcaf)
            |     |  +--ro as-number-lcaf
            |     |     +--ro as?        inet:as-number
            |     |     +--ro address?   simple-address
            |     +--:(application-data)
            |     |  +--ro application-data
            |     |     +--ro address?            simple-address
            |     |     +--ro protocol?           uint8
            |     |     +--ro ip-tos?             int32
            |     |     +--ro local-port-low?     inet:port-number
            |     |     +--ro local-port-high?    inet:port-number
            |     |     +--ro remote-port-low?    inet:port-number
            |     |     +--ro remote-port-high?   inet:port-number
            |     +--:(geo-coordinates)
            |     |  +--ro geo-coordinates
            |     |     +--ro latitude?            bits
            |     |     +--ro latitude-degrees?    uint8
            |     |     +--ro latitude-minutes?    uint8
            |     |     +--ro latitude-seconds?    uint8
            |     |     +--ro longitude?           bits
            |     |     +--ro longitude-degrees?   uint16
            |     |     +--ro longitude-minutes?   uint8
            |     |     +--ro longitude-seconds?   uint8
            |     |     +--ro altitude?            int32
            |     |     +--ro address?             simple-address
            |     +--:(nat-traversal)
            |     |  +--ro nat-traversal
            |     |     +--ro ms-udp-port?        uint16
            |     |     +--ro etr-udp-port?       uint16
            |     |     +--ro global-etr-rloc?    simple-address
            |     |     +--ro ms-rloc?            simple-address
            |     |     +--ro private-etr-rloc?   simple-address
            |     |     +--ro rtr-rlocs*          simple-address
            |     +--:(explicit-locator-path)
            |     |  +--ro explicit-locator-path
            |     |     +--ro hop* [hop-id]
            |     |        +--ro hop-id      string
            |     |        +--ro address?    simple-address
            |     |        +--ro lrs-bits?   bits
            |     +--:(source-dest-key)
            |     |  +--ro source-dest-key
            |     |     +--ro source?   simple-address
            |     |     +--ro dest?     simple-address
            |     +--:(key-value-address)



Ermagan, et al.           Expires July 11, 2017                [Page 24]

Internet-Draft                  LISP-YANG                   January 2017


            |     |  +--ro key-value-address
            |     |     +--ro key?     simple-address
            |     |     +--ro value?   simple-address
            |     +--:(service-path)
            |        +--ro service-path
            |           +--ro service-path-id?   service-path-id-type
            |           +--ro service-index?     uint8
            +--ro ttl?                uint32
            +--ro authoritative?      bits
            +--ro static?             boolean
            +--ro (locator-list)?
               +--:(negative-mapping)
               |  +--ro map-reply-action?   map-reply-action
               +--:(positive-mapping)
                  +--ro rlocs
                     +--ro locator* [id]
                        +--ro id                    string
                        +--ro locator-address
                        |  +--ro address-type             lisp-address-family-ref
                        |  +--ro virtual-network-id?      instance-id-type
                        |  +--ro (address)?
                        |     +--:(no-address)
                        |     |  +--ro no-address?              empty
                        |     +--:(ipv4)
                        |     |  +--ro ipv4?                    inet:ipv4-address
                        |     +--:(ipv4-prefix)
                        |     |  +--ro ipv4-prefix?             inet:ipv4-prefix
                        |     +--:(ipv6)
                        |     |  +--ro ipv6?                    inet:ipv6-address
                        |     +--:(ipv6-prefix)
                        |     |  +--ro ipv6-prefix?             inet:ipv6-prefix
                        |     +--:(mac)
                        |     |  +--ro mac?                     yang:mac-address
                        |     +--:(distinguished-name)
                        |     |  +--ro distinguished-name?      distinguished-name-type
                        |     +--:(as-number)
                        |     |  +--ro as-number?               inet:as-number
                        |     +--:(null-address)
                        |     |  +--ro null-address
                        |     |     +--ro address?   empty
                        |     +--:(afi-list)
                        |     |  +--ro afi-list
                        |     |     +--ro address-list*   simple-address
                        |     +--:(instance-id)
                        |     |  +--ro instance-id
                        |     |     +--ro iid?           instance-id-type
                        |     |     +--ro mask-length?   uint8
                        |     |     +--ro address?       simple-address



Ermagan, et al.           Expires July 11, 2017                [Page 25]

Internet-Draft                  LISP-YANG                   January 2017


                        |     +--:(as-number-lcaf)
                        |     |  +--ro as-number-lcaf
                        |     |     +--ro as?        inet:as-number
                        |     |     +--ro address?   simple-address
                        |     +--:(application-data)
                        |     |  +--ro application-data
                        |     |     +--ro address?            simple-address
                        |     |     +--ro protocol?           uint8
                        |     |     +--ro ip-tos?             int32
                        |     |     +--ro local-port-low?     inet:port-number
                        |     |     +--ro local-port-high?    inet:port-number
                        |     |     +--ro remote-port-low?    inet:port-number
                        |     |     +--ro remote-port-high?   inet:port-number
                        |     +--:(geo-coordinates)
                        |     |  +--ro geo-coordinates
                        |     |     +--ro latitude?            bits
                        |     |     +--ro latitude-degrees?    uint8
                        |     |     +--ro latitude-minutes?    uint8
                        |     |     +--ro latitude-seconds?    uint8
                        |     |     +--ro longitude?           bits
                        |     |     +--ro longitude-degrees?   uint16
                        |     |     +--ro longitude-minutes?   uint8
                        |     |     +--ro longitude-seconds?   uint8
                        |     |     +--ro altitude?            int32
                        |     |     +--ro address?             simple-address
                        |     +--:(nat-traversal)
                        |     |  +--ro nat-traversal
                        |     |     +--ro ms-udp-port?        uint16
                        |     |     +--ro etr-udp-port?       uint16
                        |     |     +--ro global-etr-rloc?    simple-address
                        |     |     +--ro ms-rloc?            simple-address
                        |     |     +--ro private-etr-rloc?   simple-address
                        |     |     +--ro rtr-rlocs*          simple-address
                        |     +--:(explicit-locator-path)
                        |     |  +--ro explicit-locator-path
                        |     |     +--ro hop* [hop-id]
                        |     |        +--ro hop-id      string
                        |     |        +--ro address?    simple-address
                        |     |        +--ro lrs-bits?   bits
                        |     +--:(source-dest-key)
                        |     |  +--ro source-dest-key
                        |     |     +--ro source?   simple-address
                        |     |     +--ro dest?     simple-address
                        |     +--:(key-value-address)
                        |     |  +--ro key-value-address
                        |     |     +--ro key?     simple-address
                        |     |     +--ro value?   simple-address
                        |     +--:(service-path)



Ermagan, et al.           Expires July 11, 2017                [Page 26]

Internet-Draft                  LISP-YANG                   January 2017


                        |        +--ro service-path
                        |           +--ro service-path-id?   service-path-id-type
                        |           +--ro service-index?     uint8
                        +--ro priority?             uint8
                        +--ro weight?               uint8
                        +--ro multicast-priority?   uint8
                        +--ro multicast-weight?     uint8

3.2.  Module Definition

   <CODE BEGINS> file "ietf-lisp-itr@2016-06-30.yang"
   module ietf-lisp-itr {
     namespace "urn:ietf:params:xml:ns:yang:ietf-lisp-itr";
     prefix lisp-itr;
     import ietf-lisp {
       prefix lisp;
     }
     import ietf-lisp-address-types {
       prefix lcaf;
     }
     import ietf-inet-types {
       prefix inet;
     }
     organization
       "IETF LISP (Locator/ID Separation Protocol) Working Group";
     contact
       "lisp@ietf.org";
     description
       "This YANG module defines the generic configuration
        data for a LISP ITR. The module can be extended by vendors
        to define vendor-specific configuration parameters and
        policies.

        Copyright (c) 2015 IETF Trust and the persons identified as
        authors of the code.  All rights reserved.

        Redistribution and use in source and binary forms, with or
        without modification, is permitted pursuant to, and subject
        to the license terms contained in, the Simplified BSD License
        set forth in Section 4.c of the IETF Trust's Legal Provisions
        Relating to IETF Documents
        (http://trustee.ietf.org/license-info).

        This version of this YANG module is part of RFC 6338; see
        the RFC itself for full legal notices.
       ";
     revision 2016-06-30 {
       description



Ermagan, et al.           Expires July 11, 2017                [Page 27]

Internet-Draft                  LISP-YANG                   January 2017


         "Initial revision.";
       reference
         "https://tools.ietf.org/html/rfc6830";
     }
     identity itr {
       base lisp:lisp-role;
       description
         "LISP ITR.";
     }
     augment "/lisp:lisp/lisp:lisp-router-instances/"
     + "lisp:lisp-router-instance/lisp:lisp-role" {
       when "lisp:lisp-role-type = 'lisp-itr:itr'" {
         description
           "Augment is valid when LISP role type is ITR.";
       }
       description
         "This augments LISP devices list with ITR specific
          parameters.";
       container itr-cfg {
         presence "LISP ITR operation enabled";
         description
           "ITR configuration";
         container rloc-probing {
           presence "RLOC probing active";
           description
             "RLOC-probing parameters";
           leaf interval {
             type uint16;
             units "seconds";
             description
               "Interval in seconds";
           }
           leaf retries {
             type uint8;
             description
               "Number of retries";
           }
           leaf retries-interval {
             type uint16;
             units "seconds";
             description
               "Interval in seconds between retries";
           }
         }
         leaf itr-rlocs {
           type leafref {
             path "/lisp:lisp/lisp:locator-sets/lisp:locator-set/"
             + "lisp:locator-set-name";



Ermagan, et al.           Expires July 11, 2017                [Page 28]

Internet-Draft                  LISP-YANG                   January 2017


           }
           description
             "Refrence to a locator set that the ITR includes in
              Map-Requests";
         }
         container map-resolvers {
           description
             "The Map-Resolvers configured for the ITR.";
           list map-resolver {
             key "id";
             min-elements 1;
             description
               "List of Map-Resolvers configured for the ITR.";
             leaf id {
               type lisp:eid-id;
               description
                 "Id of the EID for which the Map-Server is
                  configured.";
             }
             container eid-address {
               uses lcaf:lisp-address;
               description
                 "EID for which the Map-Resolver is configured.";
             }
             leaf-list map-resolver-address {
               type inet:ip-address;
               description
                 "Map-Resolver RLOC address.";
             }
           }
         }
         container proxy-etrs {
           description
             "Proxy ETRs configured for the ITR.";
           list proxy-etr {
             key "id";
             description
               "List of PETR configured for the ITR.";
             leaf id {
               type lisp:eid-id;
               description
                 "Id of the EID for which the PETR is configured.";
             }
             container eid-address {
               uses lcaf:lisp-address;
               description
                 "EID for which the PETR is configured.";
             }



Ermagan, et al.           Expires July 11, 2017                [Page 29]

Internet-Draft                  LISP-YANG                   January 2017


             leaf-list proxy-etr-address{
               type inet:ip-address;
               description
                 "PETR RLOC address.";
             }
           }
         }
         container map-cache{
           uses lisp:mappings;
           description
             "EID to RLOCs mappings cache.";
         }
         uses lisp:servicing-eids-grouping;

       }
     }
     augment "/lisp:lisp-state/lisp:lisp-router-instances/"
     + "lisp:lisp-router-instance/lisp:lisp-role" {
       when "lisp:lisp-role-type = 'lisp-itr:itr'" {
         description
           "Augment is valid when LISP role type is ITR.";
       }
       description
         "This augments LISP devices list state with ITR specific
          parameters.";
       container itr-state {
         config false;
         description
           "ITR state.";
         container map-cache{
           uses lisp:mappings;
           description
             "EID to RLOCs mappings cache.";
         }
       }
     }
   }
   <CODE ENDS>

4.  LISP ETR Module

   This module captures the configuration data model of a LISP ETR.  The
   model also captures some operational data elements.








Ermagan, et al.           Expires July 11, 2017                [Page 30]

Internet-Draft                  LISP-YANG                   January 2017


4.1.  Module Structure

module: ietf-lisp-etr
augment /lisp:lisp/lisp:lisp-router-instances/lisp:lisp-router-instance/lisp:lisp-role:
   +--rw etr-cfg!
      +--rw local-eids
         +--rw local-eid* [id]
            +--rw id                       lisp:eid-id
            +--rw eid-address
            |  +--rw address-type             lisp-address-family-ref
            |  +--rw virtual-network-id?      instance-id-type
            |  +--rw (address)?
            |     +--:(no-address)
            |     |  +--rw no-address?              empty
            |     +--:(ipv4)
            |     |  +--rw ipv4?                    inet:ipv4-address
            |     +--:(ipv4-prefix)
            |     |  +--rw ipv4-prefix?             inet:ipv4-prefix
            |     +--:(ipv6)
            |     |  +--rw ipv6?                    inet:ipv6-address
            |     +--:(ipv6-prefix)
            |     |  +--rw ipv6-prefix?             inet:ipv6-prefix
            |     +--:(mac)
            |     |  +--rw mac?                     yang:mac-address
            |     +--:(distinguished-name)
            |     |  +--rw distinguished-name?      distinguished-name-type
            |     +--:(as-number)
            |     |  +--rw as-number?               inet:as-number
            |     +--:(null-address)
            |     |  +--rw null-address
            |     |     +--rw address?   empty
            |     +--:(afi-list)
            |     |  +--rw afi-list
            |     |     +--rw address-list*   simple-address
            |     +--:(instance-id)
            |     |  +--rw instance-id
            |     |     +--rw iid?           instance-id-type
            |     |     +--rw mask-length?   uint8
            |     |     +--rw address?       simple-address
            |     +--:(as-number-lcaf)
            |     |  +--rw as-number-lcaf
            |     |     +--rw as?        inet:as-number
            |     |     +--rw address?   simple-address
            |     +--:(application-data)
            |     |  +--rw application-data
            |     |     +--rw address?            simple-address
            |     |     +--rw protocol?           uint8
            |     |     +--rw ip-tos?             int32



Ermagan, et al.           Expires July 11, 2017                [Page 31]

Internet-Draft                  LISP-YANG                   January 2017


            |     |     +--rw local-port-low?     inet:port-number
            |     |     +--rw local-port-high?    inet:port-number
            |     |     +--rw remote-port-low?    inet:port-number
            |     |     +--rw remote-port-high?   inet:port-number
            |     +--:(geo-coordinates)
            |     |  +--rw geo-coordinates
            |     |     +--rw latitude?            bits
            |     |     +--rw latitude-degrees?    uint8
            |     |     +--rw latitude-minutes?    uint8
            |     |     +--rw latitude-seconds?    uint8
            |     |     +--rw longitude?           bits
            |     |     +--rw longitude-degrees?   uint16
            |     |     +--rw longitude-minutes?   uint8
            |     |     +--rw longitude-seconds?   uint8
            |     |     +--rw altitude?            int32
            |     |     +--rw address?             simple-address
            |     +--:(nat-traversal)
            |     |  +--rw nat-traversal
            |     |     +--rw ms-udp-port?        uint16
            |     |     +--rw etr-udp-port?       uint16
            |     |     +--rw global-etr-rloc?    simple-address
            |     |     +--rw ms-rloc?            simple-address
            |     |     +--rw private-etr-rloc?   simple-address
            |     |     +--rw rtr-rlocs*          simple-address
            |     +--:(explicit-locator-path)
            |     |  +--rw explicit-locator-path
            |     |     +--rw hop* [hop-id]
            |     |        +--rw hop-id      string
            |     |        +--rw address?    simple-address
            |     |        +--rw lrs-bits?   bits
            |     +--:(source-dest-key)
            |     |  +--rw source-dest-key
            |     |     +--rw source?   simple-address
            |     |     +--rw dest?     simple-address
            |     +--:(key-value-address)
            |     |  +--rw key-value-address
            |     |     +--rw key?     simple-address
            |     |     +--rw value?   simple-address
            |     +--:(service-path)
            |        +--rw service-path
            |           +--rw service-path-id?   service-path-id-type
            |           +--rw service-index?     uint8
            +--rw map-servers
            |  +--rw map-server* [address]
            |     +--rw address          inet:ip-address
            |     +--rw auth-key?        string
            |     +--rw auth-key-type?   lisp:auth-key-type
            +--rw rlocs?                   -> /lisp:lisp/locator-sets/locator-set/locator-set-name



Ermagan, et al.           Expires July 11, 2017                [Page 32]

Internet-Draft                  LISP-YANG                   January 2017


            +--rw record-ttl?              uint32
            +--rw want-map-notify?         boolean
            +--rw proxy-reply?             boolean
            +--rw registration-interval?   uint16

4.2.  Module Definition

   <CODE BEGINS> file "ietf-lisp-etr@2016-06-30.yang"
   module ietf-lisp-etr {
     namespace "urn:ietf:params:xml:ns:yang:ietf-lisp-etr";
     prefix lisp-etr;
     import ietf-lisp {
       prefix lisp;
     }
     import ietf-lisp-address-types {
       prefix lcaf;
     }
     import ietf-inet-types {
       prefix inet;
     }
     organization
       "IETF LISP (Locator/ID Separation Protocol) Working Group";
     contact
       "lisp@ietf.org";
     description
       "This YANG module defines the generic configuration
        data for a LISP ETR. The module can be extended by vendors
        to define vendor-specific configuration parameters and
        policies.

        Copyright (c) 2015 IETF Trust and the persons identified as
        authors of the code.  All rights reserved.

        Redistribution and use in source and binary forms, with or
        without modification, is permitted pursuant to, and subject
        to the license terms contained in, the Simplified BSD License
        set forth in Section 4.c of the IETF Trust's Legal Provisions
        Relating to IETF Documents
        (http://trustee.ietf.org/license-info).

        This version of this YANG module is part of RFC 6338; see
        the RFC itself for full legal notices.
       ";
     revision 2016-06-30 {
       description
         "Initial revision.";
       reference
         "https://tools.ietf.org/html/rfc6830";



Ermagan, et al.           Expires July 11, 2017                [Page 33]

Internet-Draft                  LISP-YANG                   January 2017


     }
     identity etr {
       base lisp:lisp-role;
       description
         "LISP ETR.";
     }
     augment "/lisp:lisp/lisp:lisp-router-instances/"
     + "lisp:lisp-router-instance/lisp:lisp-role" {
       when "lisp:lisp-role-type = 'lisp-etr:etr'" {
         description
           "Augment is valid when LISP device type is ETR.";
       }
       description
         "This augments LISP devices list with ETR specific
          parameters.";
       container etr-cfg {
         presence "LISP ETR operation enabled";
         description
           "ETR configuration parameters.";
         container local-eids {
           description
             "EIDs served by the ETR.";
           list local-eid {
             key "id";
             min-elements 1;
             description
               "List of local EIDs.";
             leaf id {
               type lisp:eid-id;
               description
                 "Unique id of local EID.";
             }
             container eid-address {
               uses lcaf:lisp-address;
               description
                 "EID address in generic LISP address format.";
             }
             container map-servers {
               description
                 "Map-Servers configured for the ETR.";
               list map-server {
                 key "address";
                 description
                   "List of Map-Servers configured for the ETR.";
                 leaf address {
                   type inet:ip-address;
                   description
                     "Map-Server address.";



Ermagan, et al.           Expires July 11, 2017                [Page 34]

Internet-Draft                  LISP-YANG                   January 2017


                 }
                 leaf auth-key {
                   type string;
                   description
                     "Map-Server authentication key.";
                 }
                 leaf auth-key-type {
                   type lisp:auth-key-type;
                   description
                     "Map-Server authentication type.";
                 }
               }
             }
             leaf rlocs {
               type leafref {
                 path "/lisp:lisp/lisp:locator-sets/lisp:locator-set/"
                 + "lisp:locator-set-name";
               }
               description
                 "Locator set mapped to this local EID.";
             }
             leaf record-ttl {
               type uint32;
               description
                 "Validity period of the EID to RLOCs mapping provided
                  in Map-Replies.";
             }
             leaf want-map-notify {
               type boolean;
               default "true";
               description
                 "Flag which if set in a Map-Register requests that a
                  Map-Notify be sent in response.";
             }
             leaf proxy-reply {
               type boolean;
               default "false";
               description
                 "Flag which if set in a Map-Register requests that the
                  Map-Server proxy Map-Replies for the ETR.";
             }
             leaf registration-interval {
               type uint16;
               units "seconds";
               default "60";
               description
                 "Interval between consecutive Map-Register messages.";
             }



Ermagan, et al.           Expires July 11, 2017                [Page 35]

Internet-Draft                  LISP-YANG                   January 2017


           }
         }
       }//etr-cfg
     }//augment
   }// lisp-etr
   <CODE ENDS>

5.  LISP Map Server Module

   This module captures the configuration data model of a LISP Map
   Server [RFC6833].  The model also captures some operational data
   elements.

5.1.  Module Structure

module: ietf-lisp-mapserver
augment /lisp:lisp/lisp:lisp-router-instances/lisp:lisp-router-instance/lisp:lisp-role:
   +--rw map-server-cfg
      +--rw sites
      |  +--rw site* [site-id]
      |     +--rw site-id     uint64
      |     +--rw auth-key
      |     |  +--rw auth-key-value?   string
      |     |  +--rw auth-key-type?    lisp:auth-key-type
      |     +--rw eids
      |        +--rw eid* [id]
      |           +--rw id                            lisp:eid-id
      |           +--rw eid-address
      |           |  +--rw address-type             lisp-address-family-ref
      |           |  +--rw virtual-network-id?      instance-id-type
      |           |  +--rw (address)?
      |           |     +--:(no-address)
      |           |     |  +--rw no-address?              empty
      |           |     +--:(ipv4)
      |           |     |  +--rw ipv4?                    inet:ipv4-address
      |           |     +--:(ipv4-prefix)
      |           |     |  +--rw ipv4-prefix?             inet:ipv4-prefix
      |           |     +--:(ipv6)
      |           |     |  +--rw ipv6?                    inet:ipv6-address
      |           |     +--:(ipv6-prefix)
      |           |     |  +--rw ipv6-prefix?             inet:ipv6-prefix
      |           |     +--:(mac)
      |           |     |  +--rw mac?                     yang:mac-address
      |           |     +--:(distinguished-name)
      |           |     |  +--rw distinguished-name?      distinguished-name-type
      |           |     +--:(as-number)
      |           |     |  +--rw as-number?               inet:as-number
      |           |     +--:(null-address)



Ermagan, et al.           Expires July 11, 2017                [Page 36]

Internet-Draft                  LISP-YANG                   January 2017


      |           |     |  +--rw null-address
      |           |     |     +--rw address?   empty
      |           |     +--:(afi-list)
      |           |     |  +--rw afi-list
      |           |     |     +--rw address-list*   simple-address
      |           |     +--:(instance-id)
      |           |     |  +--rw instance-id
      |           |     |     +--rw iid?           instance-id-type
      |           |     |     +--rw mask-length?   uint8
      |           |     |     +--rw address?       simple-address
      |           |     +--:(as-number-lcaf)
      |           |     |  +--rw as-number-lcaf
      |           |     |     +--rw as?        inet:as-number
      |           |     |     +--rw address?   simple-address
      |           |     +--:(application-data)
      |           |     |  +--rw application-data
      |           |     |     +--rw address?            simple-address
      |           |     |     +--rw protocol?           uint8
      |           |     |     +--rw ip-tos?             int32
      |           |     |     +--rw local-port-low?     inet:port-number
      |           |     |     +--rw local-port-high?    inet:port-number
      |           |     |     +--rw remote-port-low?    inet:port-number
      |           |     |     +--rw remote-port-high?   inet:port-number
      |           |     +--:(geo-coordinates)
      |           |     |  +--rw geo-coordinates
      |           |     |     +--rw latitude?            bits
      |           |     |     +--rw latitude-degrees?    uint8
      |           |     |     +--rw latitude-minutes?    uint8
      |           |     |     +--rw latitude-seconds?    uint8
      |           |     |     +--rw longitude?           bits
      |           |     |     +--rw longitude-degrees?   uint16
      |           |     |     +--rw longitude-minutes?   uint8
      |           |     |     +--rw longitude-seconds?   uint8
      |           |     |     +--rw altitude?            int32
      |           |     |     +--rw address?             simple-address
      |           |     +--:(nat-traversal)
      |           |     |  +--rw nat-traversal
      |           |     |     +--rw ms-udp-port?        uint16
      |           |     |     +--rw etr-udp-port?       uint16
      |           |     |     +--rw global-etr-rloc?    simple-address
      |           |     |     +--rw ms-rloc?            simple-address
      |           |     |     +--rw private-etr-rloc?   simple-address
      |           |     |     +--rw rtr-rlocs*          simple-address
      |           |     +--:(explicit-locator-path)
      |           |     |  +--rw explicit-locator-path
      |           |     |     +--rw hop* [hop-id]
      |           |     |        +--rw hop-id      string
      |           |     |        +--rw address?    simple-address



Ermagan, et al.           Expires July 11, 2017                [Page 37]

Internet-Draft                  LISP-YANG                   January 2017


      |           |     |        +--rw lrs-bits?   bits
      |           |     +--:(source-dest-key)
      |           |     |  +--rw source-dest-key
      |           |     |     +--rw source?   simple-address
      |           |     |     +--rw dest?     simple-address
      |           |     +--:(key-value-address)
      |           |     |  +--rw key-value-address
      |           |     |     +--rw key?     simple-address
      |           |     |     +--rw value?   simple-address
      |           |     +--:(service-path)
      |           |        +--rw service-path
      |           |           +--rw service-path-id?   service-path-id-type
      |           |           +--rw service-index?     uint8
      |           +--rw more-specifics-accepted?      boolean
      |           +--rw mapping-expiration-timeout?   int16
      +--rw mapping-system-type?   lisp:mapping-system-ref
augment /lisp:lisp-state/lisp:lisp-router-instances/lisp:lisp-router-instance/lisp:lisp-role:
   +--ro ms-state
      +--ro registered-mappings
         +--ro mapping* [id]
            +--ro id                  eid-id
            +--ro eid
            |  +--ro address-type             lisp-address-family-ref
            |  +--ro virtual-network-id?      instance-id-type
            |  +--ro (address)?
            |     +--:(no-address)
            |     |  +--ro no-address?              empty
            |     +--:(ipv4)
            |     |  +--ro ipv4?                    inet:ipv4-address
            |     +--:(ipv4-prefix)
            |     |  +--ro ipv4-prefix?             inet:ipv4-prefix
            |     +--:(ipv6)
            |     |  +--ro ipv6?                    inet:ipv6-address
            |     +--:(ipv6-prefix)
            |     |  +--ro ipv6-prefix?             inet:ipv6-prefix
            |     +--:(mac)
            |     |  +--ro mac?                     yang:mac-address
            |     +--:(distinguished-name)
            |     |  +--ro distinguished-name?      distinguished-name-type
            |     +--:(as-number)
            |     |  +--ro as-number?               inet:as-number
            |     +--:(null-address)
            |     |  +--ro null-address
            |     |     +--ro address?   empty
            |     +--:(afi-list)
            |     |  +--ro afi-list
            |     |     +--ro address-list*   simple-address
            |     +--:(instance-id)



Ermagan, et al.           Expires July 11, 2017                [Page 38]

Internet-Draft                  LISP-YANG                   January 2017


            |     |  +--ro instance-id
            |     |     +--ro iid?           instance-id-type
            |     |     +--ro mask-length?   uint8
            |     |     +--ro address?       simple-address
            |     +--:(as-number-lcaf)
            |     |  +--ro as-number-lcaf
            |     |     +--ro as?        inet:as-number
            |     |     +--ro address?   simple-address
            |     +--:(application-data)
            |     |  +--ro application-data
            |     |     +--ro address?            simple-address
            |     |     +--ro protocol?           uint8
            |     |     +--ro ip-tos?             int32
            |     |     +--ro local-port-low?     inet:port-number
            |     |     +--ro local-port-high?    inet:port-number
            |     |     +--ro remote-port-low?    inet:port-number
            |     |     +--ro remote-port-high?   inet:port-number
            |     +--:(geo-coordinates)
            |     |  +--ro geo-coordinates
            |     |     +--ro latitude?            bits
            |     |     +--ro latitude-degrees?    uint8
            |     |     +--ro latitude-minutes?    uint8
            |     |     +--ro latitude-seconds?    uint8
            |     |     +--ro longitude?           bits
            |     |     +--ro longitude-degrees?   uint16
            |     |     +--ro longitude-minutes?   uint8
            |     |     +--ro longitude-seconds?   uint8
            |     |     +--ro altitude?            int32
            |     |     +--ro address?             simple-address
            |     +--:(nat-traversal)
            |     |  +--ro nat-traversal
            |     |     +--ro ms-udp-port?        uint16
            |     |     +--ro etr-udp-port?       uint16
            |     |     +--ro global-etr-rloc?    simple-address
            |     |     +--ro ms-rloc?            simple-address
            |     |     +--ro private-etr-rloc?   simple-address
            |     |     +--ro rtr-rlocs*          simple-address
            |     +--:(explicit-locator-path)
            |     |  +--ro explicit-locator-path
            |     |     +--ro hop* [hop-id]
            |     |        +--ro hop-id      string
            |     |        +--ro address?    simple-address
            |     |        +--ro lrs-bits?   bits
            |     +--:(source-dest-key)
            |     |  +--ro source-dest-key
            |     |     +--ro source?   simple-address
            |     |     +--ro dest?     simple-address
            |     +--:(key-value-address)



Ermagan, et al.           Expires July 11, 2017                [Page 39]

Internet-Draft                  LISP-YANG                   January 2017


            |     |  +--ro key-value-address
            |     |     +--ro key?     simple-address
            |     |     +--ro value?   simple-address
            |     +--:(service-path)
            |        +--ro service-path
            |           +--ro service-path-id?   service-path-id-type
            |           +--ro service-index?     uint8
            +--ro ttl?                uint32
            +--ro authoritative?      bits
            +--ro static?             boolean
            +--ro (locator-list)?
               +--:(negative-mapping)
               |  +--ro map-reply-action?   map-reply-action
               +--:(positive-mapping)
                  +--ro rlocs
                     +--ro locator* [id]
                        +--ro id                    string
                        +--ro locator-address
                        |  +--ro address-type             lisp-address-family-ref
                        |  +--ro virtual-network-id?      instance-id-type
                        |  +--ro (address)?
                        |     +--:(no-address)
                        |     |  +--ro no-address?              empty
                        |     +--:(ipv4)
                        |     |  +--ro ipv4?                    inet:ipv4-address
                        |     +--:(ipv4-prefix)
                        |     |  +--ro ipv4-prefix?             inet:ipv4-prefix
                        |     +--:(ipv6)
                        |     |  +--ro ipv6?                    inet:ipv6-address
                        |     +--:(ipv6-prefix)
                        |     |  +--ro ipv6-prefix?             inet:ipv6-prefix
                        |     +--:(mac)
                        |     |  +--ro mac?                     yang:mac-address
                        |     +--:(distinguished-name)
                        |     |  +--ro distinguished-name?      distinguished-name-type
                        |     +--:(as-number)
                        |     |  +--ro as-number?               inet:as-number
                        |     +--:(null-address)
                        |     |  +--ro null-address
                        |     |     +--ro address?   empty
                        |     +--:(afi-list)
                        |     |  +--ro afi-list
                        |     |     +--ro address-list*   simple-address
                        |     +--:(instance-id)
                        |     |  +--ro instance-id
                        |     |     +--ro iid?           instance-id-type
                        |     |     +--ro mask-length?   uint8
                        |     |     +--ro address?       simple-address



Ermagan, et al.           Expires July 11, 2017                [Page 40]

Internet-Draft                  LISP-YANG                   January 2017


                        |     +--:(as-number-lcaf)
                        |     |  +--ro as-number-lcaf
                        |     |     +--ro as?        inet:as-number
                        |     |     +--ro address?   simple-address
                        |     +--:(application-data)
                        |     |  +--ro application-data
                        |     |     +--ro address?            simple-address
                        |     |     +--ro protocol?           uint8
                        |     |     +--ro ip-tos?             int32
                        |     |     +--ro local-port-low?     inet:port-number
                        |     |     +--ro local-port-high?    inet:port-number
                        |     |     +--ro remote-port-low?    inet:port-number
                        |     |     +--ro remote-port-high?   inet:port-number
                        |     +--:(geo-coordinates)
                        |     |  +--ro geo-coordinates
                        |     |     +--ro latitude?            bits
                        |     |     +--ro latitude-degrees?    uint8
                        |     |     +--ro latitude-minutes?    uint8
                        |     |     +--ro latitude-seconds?    uint8
                        |     |     +--ro longitude?           bits
                        |     |     +--ro longitude-degrees?   uint16
                        |     |     +--ro longitude-minutes?   uint8
                        |     |     +--ro longitude-seconds?   uint8
                        |     |     +--ro altitude?            int32
                        |     |     +--ro address?             simple-address
                        |     +--:(nat-traversal)
                        |     |  +--ro nat-traversal
                        |     |     +--ro ms-udp-port?        uint16
                        |     |     +--ro etr-udp-port?       uint16
                        |     |     +--ro global-etr-rloc?    simple-address
                        |     |     +--ro ms-rloc?            simple-address
                        |     |     +--ro private-etr-rloc?   simple-address
                        |     |     +--ro rtr-rlocs*          simple-address
                        |     +--:(explicit-locator-path)
                        |     |  +--ro explicit-locator-path
                        |     |     +--ro hop* [hop-id]
                        |     |        +--ro hop-id      string
                        |     |        +--ro address?    simple-address
                        |     |        +--ro lrs-bits?   bits
                        |     +--:(source-dest-key)
                        |     |  +--ro source-dest-key
                        |     |     +--ro source?   simple-address
                        |     |     +--ro dest?     simple-address
                        |     +--:(key-value-address)
                        |     |  +--ro key-value-address
                        |     |     +--ro key?     simple-address
                        |     |     +--ro value?   simple-address
                        |     +--:(service-path)



Ermagan, et al.           Expires July 11, 2017                [Page 41]

Internet-Draft                  LISP-YANG                   January 2017


                        |        +--ro service-path
                        |           +--ro service-path-id?   service-path-id-type
                        |           +--ro service-index?     uint8
                        +--ro priority?             uint8
                        +--ro weight?               uint8
                        +--ro multicast-priority?   uint8
                        +--ro multicast-weight?     uint8

5.2.  Module Definition

   <CODE BEGINS> file "ietf-lisp-mapserver@2016-06-30.yang"
   module ietf-lisp-mapserver {
     namespace "urn:ietf:params:xml:ns:yang:ietf-lisp-mapserver";
     prefix lisp-ms;
     import ietf-lisp {
       prefix lisp;
     }
     import ietf-lisp-address-types {
       prefix lcaf;
     }
     organization
       "IETF LISP (Locator/ID Separation Protocol) Working Group";
     contact
       "lisp@ietf.org";
     description
       "This YANG module defines the generic configuration
        data for a LISP Map-Server. The module can be extended by
        vendors to define vendor-specific configuration parameters
        and policies.

        Copyright (c) 2015 IETF Trust and the persons identified as
        authors of the code.  All rights reserved.

        Redistribution and use in source and binary forms, with or
        without modification, is permitted pursuant to, and subject
        to the license terms contained in, the Simplified BSD License
        set forth in Section 4.c of the IETF Trust's Legal Provisions
        Relating to IETF Documents
        (http://trustee.ietf.org/license-info).

        This version of this YANG module is part of RFC 6338; see
        the RFC itself for full legal notices.
       ";

     revision 2016-06-30 {
       description
         "Initial revision.";
       reference



Ermagan, et al.           Expires July 11, 2017                [Page 42]

Internet-Draft                  LISP-YANG                   January 2017


         "https://tools.ietf.org/html/rfc6833";
     }

     identity ms {
       base lisp:lisp-role;
         description
           "LISP Map-Server.";
     }

     augment "/lisp:lisp/lisp:lisp-router-instances"
     + "/lisp:lisp-router-instance/lisp:lisp-role" {
       when "lisp:lisp-role-type = 'lisp-ms:ms'" {
         description
           "Augment is valid when LISP device type is Map-Server.";
       }
       description
         "This augments LISP devices list with Map-Server specific
          parameters.";
       container map-server-cfg {
         description
           "Map-Server configuration parameters.";
         container sites {
           description
             "Sites for which the Map-Server accepts registrations.";
           list site {
             key "site-id";
             description
               "List of sites for which the Map-Server acceptes
                registrations.";
             leaf site-id {
               type uint64;
               description
                 "Site identifier.";
             }
             container auth-key {
               description
                 "Site authentication key.";
               leaf auth-key-value {
                 type string;
                 description
                   "Clear text authentication key";
               }
               leaf auth-key-type {
                 type lisp:auth-key-type;
                 description
                   "Authentication key type.";
               }
             }



Ermagan, et al.           Expires July 11, 2017                [Page 43]

Internet-Draft                  LISP-YANG                   January 2017


             container eids {
               description
                 "EIDs registered by device.";
               list eid {
                 key "id";
                 description
                   "List of EIDs registered by device.";
                 leaf id {
                   type lisp:eid-id;
                   description
                     "Id of the EID registered.";
                 }
                 container eid-address {
                   uses lcaf:lisp-address;
                   description
                     "EID in generic LISP address format registered
                      with the Map-Server.";
                 }
                 leaf more-specifics-accepted {
                     type boolean;
                     default "false";
                     description
                       "Flag indicating if more specific prefixes
                        can be registered.";
                 }
                 leaf mapping-expiration-timeout {
                     type int16;
                     units "seconds";
                     default "180"; //3 times the mapregister int
                     description
                       "Time before mapping is expired if no new
                        registrations are received.";
                 }
       // This model can be augmented to have below for per-eid auth-key
       //          leaf auth-key {
       //            description "clear text authentication key";
       //            type string;
       //          }
               }
             }
           }
         }
         leaf mapping-system-type {
           type lisp:mapping-system-ref;
           description
             "A reference to the mapping system";
         }
       }



Ermagan, et al.           Expires July 11, 2017                [Page 44]

Internet-Draft                  LISP-YANG                   January 2017


     }

     augment "/lisp:lisp-state/lisp:lisp-router-instances"
     + "/lisp:lisp-router-instance/lisp:lisp-role" {
       when "lisp:lisp-role-type = 'lisp-ms:ms'" {
         description
           "Augment is valid when LISP device type is Map-Server.";
       }
       description
         "This augments LISP devices list state with Map-Server
          specific parameters.";
       container ms-state {
         config false;
         description
           "Map-Server state.";
         container registered-mappings {
           uses lisp:mappings;
           description
             "Datastore of registred mappings.";
         }
       }
     }
   }
   <CODE ENDS>

6.  LISP Map Resolver Module

   This module captures the configuration data model of a LISP Map
   Resolver [RFC6833].  The model also captures some operational data
   elements.

6.1.  Module Structure

module: ietf-lisp-mapresolver
augment /lisp:lisp/lisp:lisp-router-instances/lisp:lisp-router-instance/lisp:lisp-role:
   +--rw map-resolver-cfg
      +--rw mapping-system-type?   lisp:mapping-system-ref
      +--rw ms-address?            inet:ip-address

6.2.  Module Definition

<CODE BEGINS> file "ietf-lisp-mapresolver@2016-06-30.yang"
module ietf-lisp-mapresolver {
  namespace "urn:ietf:params:xml:ns:yang:ietf-lisp-mapresolver";
  prefix lisp-mr;
  import ietf-lisp {
    prefix lisp;
  }



Ermagan, et al.           Expires July 11, 2017                [Page 45]

Internet-Draft                  LISP-YANG                   January 2017


  import ietf-inet-types {
    prefix inet;
  }

  organization
    "IETF LISP (Locator/ID Separation Protocol) Working Group";
  contact
    "lisp@ietf.org";
  description
    "This YANG module defines the generic configuration
     data for a LISP Map-Resolver. The module can be extended by
     vendors to define vendor-specific configuration parameters
     and policies.

     Copyright (c) 2015 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 6338; see
     the RFC itself for full legal notices.
    ";
  revision 2016-06-30 {
    description
      "Initial revision.";
    reference
      "https://tools.ietf.org/html/rfc6833";
  }
  identity mr {
    base lisp:lisp-role;
    description
      "LISP Map-Resolver.";
  }
  augment "/lisp:lisp/lisp:lisp-router-instances"
  +"/lisp:lisp-router-instance/lisp:lisp-role" {
    when "lisp:lisp-role-type = 'lisp-mr:mr'" {
      description
        "Augment is valid when LISP device type is Map-Resolver.";
    }
    description
      "This augments LISP devices list with Map-Resolver specific
       parameters.";
    container map-resolver-cfg {



Ermagan, et al.           Expires July 11, 2017                [Page 46]

Internet-Draft                  LISP-YANG                   January 2017


      description
        "Map-Resolver configuration parameters.";
      leaf mapping-system-type {
        type lisp:mapping-system-ref;
        description
        "A reference to the mapping system";
      }
      leaf ms-address {
        when "../mapping-system-type = 'lisp-mr:single-node-mapping-system'";

        type inet:ip-address;
        description
          "address to reach the Map Server when "
          + "lisp-mr:single-node-mapping-system is being used.";
      }
    }//map-resolver-cfg
  }//aug

  // TBD Operational model/container
  //    container cached-mappings {
  //      config false;
  //      uses mappings;
  //    }
}
<CODE ENDS>

7.  LISP Proxy ITR Module

   This module captures the configuration data model of a LISP Proxy ITR
   [RFC6832].  The model may also capture some operational data
   elements.

7.1.  Module Structure

module: ietf-lisp-pitr
augment /lisp:lisp/lisp:lisp-router-instances/lisp:lisp-router-instance/lisp:lisp-role:
   +--rw proxy-itr-cfg!
      +--rw servicing-eids
      |  +--rw servicing-eid* [id]
      |     +--rw id             lisp:eid-id
      |     +--rw eid-address
      |        +--rw address-type             lisp-address-family-ref
      |        +--rw virtual-network-id?      instance-id-type
      |        +--rw (address)?
      |           +--:(no-address)
      |           |  +--rw no-address?              empty
      |           +--:(ipv4)
      |           |  +--rw ipv4?                    inet:ipv4-address



Ermagan, et al.           Expires July 11, 2017                [Page 47]

Internet-Draft                  LISP-YANG                   January 2017


      |           +--:(ipv4-prefix)
      |           |  +--rw ipv4-prefix?             inet:ipv4-prefix
      |           +--:(ipv6)
      |           |  +--rw ipv6?                    inet:ipv6-address
      |           +--:(ipv6-prefix)
      |           |  +--rw ipv6-prefix?             inet:ipv6-prefix
      |           +--:(mac)
      |           |  +--rw mac?                     yang:mac-address
      |           +--:(distinguished-name)
      |           |  +--rw distinguished-name?      distinguished-name-type
      |           +--:(as-number)
      |           |  +--rw as-number?               inet:as-number
      |           +--:(null-address)
      |           |  +--rw null-address
      |           |     +--rw address?   empty
      |           +--:(afi-list)
      |           |  +--rw afi-list
      |           |     +--rw address-list*   simple-address
      |           +--:(instance-id)
      |           |  +--rw instance-id
      |           |     +--rw iid?           instance-id-type
      |           |     +--rw mask-length?   uint8
      |           |     +--rw address?       simple-address
      |           +--:(as-number-lcaf)
      |           |  +--rw as-number-lcaf
      |           |     +--rw as?        inet:as-number
      |           |     +--rw address?   simple-address
      |           +--:(application-data)
      |           |  +--rw application-data
      |           |     +--rw address?            simple-address
      |           |     +--rw protocol?           uint8
      |           |     +--rw ip-tos?             int32
      |           |     +--rw local-port-low?     inet:port-number
      |           |     +--rw local-port-high?    inet:port-number
      |           |     +--rw remote-port-low?    inet:port-number
      |           |     +--rw remote-port-high?   inet:port-number
      |           +--:(geo-coordinates)
      |           |  +--rw geo-coordinates
      |           |     +--rw latitude?            bits
      |           |     +--rw latitude-degrees?    uint8
      |           |     +--rw latitude-minutes?    uint8
      |           |     +--rw latitude-seconds?    uint8
      |           |     +--rw longitude?           bits
      |           |     +--rw longitude-degrees?   uint16
      |           |     +--rw longitude-minutes?   uint8
      |           |     +--rw longitude-seconds?   uint8
      |           |     +--rw altitude?            int32
      |           |     +--rw address?             simple-address



Ermagan, et al.           Expires July 11, 2017                [Page 48]

Internet-Draft                  LISP-YANG                   January 2017


      |           +--:(nat-traversal)
      |           |  +--rw nat-traversal
      |           |     +--rw ms-udp-port?        uint16
      |           |     +--rw etr-udp-port?       uint16
      |           |     +--rw global-etr-rloc?    simple-address
      |           |     +--rw ms-rloc?            simple-address
      |           |     +--rw private-etr-rloc?   simple-address
      |           |     +--rw rtr-rlocs*          simple-address
      |           +--:(explicit-locator-path)
      |           |  +--rw explicit-locator-path
      |           |     +--rw hop* [hop-id]
      |           |        +--rw hop-id      string
      |           |        +--rw address?    simple-address
      |           |        +--rw lrs-bits?   bits
      |           +--:(source-dest-key)
      |           |  +--rw source-dest-key
      |           |     +--rw source?   simple-address
      |           |     +--rw dest?     simple-address
      |           +--:(key-value-address)
      |           |  +--rw key-value-address
      |           |     +--rw key?     simple-address
      |           |     +--rw value?   simple-address
      |           +--:(service-path)
      |              +--rw service-path
      |                 +--rw service-path-id?   service-path-id-type
      |                 +--rw service-index?     uint8
      +--rw map-resolvers
      |  +--rw map-resolver* [id]
      |     +--rw id         lisp:eid-id
      |     +--rw eid
      |     |  +--rw address-type             lisp-address-family-ref
      |     |  +--rw virtual-network-id?      instance-id-type
      |     |  +--rw (address)?
      |     |     +--:(no-address)
      |     |     |  +--rw no-address?              empty
      |     |     +--:(ipv4)
      |     |     |  +--rw ipv4?                    inet:ipv4-address
      |     |     +--:(ipv4-prefix)
      |     |     |  +--rw ipv4-prefix?             inet:ipv4-prefix
      |     |     +--:(ipv6)
      |     |     |  +--rw ipv6?                    inet:ipv6-address
      |     |     +--:(ipv6-prefix)
      |     |     |  +--rw ipv6-prefix?             inet:ipv6-prefix
      |     |     +--:(mac)
      |     |     |  +--rw mac?                     yang:mac-address
      |     |     +--:(distinguished-name)
      |     |     |  +--rw distinguished-name?      distinguished-name-type
      |     |     +--:(as-number)



Ermagan, et al.           Expires July 11, 2017                [Page 49]

Internet-Draft                  LISP-YANG                   January 2017


      |     |     |  +--rw as-number?               inet:as-number
      |     |     +--:(null-address)
      |     |     |  +--rw null-address
      |     |     |     +--rw address?   empty
      |     |     +--:(afi-list)
      |     |     |  +--rw afi-list
      |     |     |     +--rw address-list*   simple-address
      |     |     +--:(instance-id)
      |     |     |  +--rw instance-id
      |     |     |     +--rw iid?           instance-id-type
      |     |     |     +--rw mask-length?   uint8
      |     |     |     +--rw address?       simple-address
      |     |     +--:(as-number-lcaf)
      |     |     |  +--rw as-number-lcaf
      |     |     |     +--rw as?        inet:as-number
      |     |     |     +--rw address?   simple-address
      |     |     +--:(application-data)
      |     |     |  +--rw application-data
      |     |     |     +--rw address?            simple-address
      |     |     |     +--rw protocol?           uint8
      |     |     |     +--rw ip-tos?             int32
      |     |     |     +--rw local-port-low?     inet:port-number
      |     |     |     +--rw local-port-high?    inet:port-number
      |     |     |     +--rw remote-port-low?    inet:port-number
      |     |     |     +--rw remote-port-high?   inet:port-number
      |     |     +--:(geo-coordinates)
      |     |     |  +--rw geo-coordinates
      |     |     |     +--rw latitude?            bits
      |     |     |     +--rw latitude-degrees?    uint8
      |     |     |     +--rw latitude-minutes?    uint8
      |     |     |     +--rw latitude-seconds?    uint8
      |     |     |     +--rw longitude?           bits
      |     |     |     +--rw longitude-degrees?   uint16
      |     |     |     +--rw longitude-minutes?   uint8
      |     |     |     +--rw longitude-seconds?   uint8
      |     |     |     +--rw altitude?            int32
      |     |     |     +--rw address?             simple-address
      |     |     +--:(nat-traversal)
      |     |     |  +--rw nat-traversal
      |     |     |     +--rw ms-udp-port?        uint16
      |     |     |     +--rw etr-udp-port?       uint16
      |     |     |     +--rw global-etr-rloc?    simple-address
      |     |     |     +--rw ms-rloc?            simple-address
      |     |     |     +--rw private-etr-rloc?   simple-address
      |     |     |     +--rw rtr-rlocs*          simple-address
      |     |     +--:(explicit-locator-path)
      |     |     |  +--rw explicit-locator-path
      |     |     |     +--rw hop* [hop-id]



Ermagan, et al.           Expires July 11, 2017                [Page 50]

Internet-Draft                  LISP-YANG                   January 2017


      |     |     |        +--rw hop-id      string
      |     |     |        +--rw address?    simple-address
      |     |     |        +--rw lrs-bits?   bits
      |     |     +--:(source-dest-key)
      |     |     |  +--rw source-dest-key
      |     |     |     +--rw source?   simple-address
      |     |     |     +--rw dest?     simple-address
      |     |     +--:(key-value-address)
      |     |     |  +--rw key-value-address
      |     |     |     +--rw key?     simple-address
      |     |     |     +--rw value?   simple-address
      |     |     +--:(service-path)
      |     |        +--rw service-path
      |     |           +--rw service-path-id?   service-path-id-type
      |     |           +--rw service-index?     uint8
      |     +--rw address*   inet:ip-address
      +--rw itr-rlocs?        -> /lisp:lisp/locator-sets/locator-set/locator-set-name
      +--rw map-cache
         +--rw mapping* [id]
            +--rw id                  eid-id
            +--rw eid
            |  +--rw address-type             lisp-address-family-ref
            |  +--rw virtual-network-id?      instance-id-type
            |  +--rw (address)?
            |     +--:(no-address)
            |     |  +--rw no-address?              empty
            |     +--:(ipv4)
            |     |  +--rw ipv4?                    inet:ipv4-address
            |     +--:(ipv4-prefix)
            |     |  +--rw ipv4-prefix?             inet:ipv4-prefix
            |     +--:(ipv6)
            |     |  +--rw ipv6?                    inet:ipv6-address
            |     +--:(ipv6-prefix)
            |     |  +--rw ipv6-prefix?             inet:ipv6-prefix
            |     +--:(mac)
            |     |  +--rw mac?                     yang:mac-address
            |     +--:(distinguished-name)
            |     |  +--rw distinguished-name?      distinguished-name-type
            |     +--:(as-number)
            |     |  +--rw as-number?               inet:as-number
            |     +--:(null-address)
            |     |  +--rw null-address
            |     |     +--rw address?   empty
            |     +--:(afi-list)
            |     |  +--rw afi-list
            |     |     +--rw address-list*   simple-address
            |     +--:(instance-id)
            |     |  +--rw instance-id



Ermagan, et al.           Expires July 11, 2017                [Page 51]

Internet-Draft                  LISP-YANG                   January 2017


            |     |     +--rw iid?           instance-id-type
            |     |     +--rw mask-length?   uint8
            |     |     +--rw address?       simple-address
            |     +--:(as-number-lcaf)
            |     |  +--rw as-number-lcaf
            |     |     +--rw as?        inet:as-number
            |     |     +--rw address?   simple-address
            |     +--:(application-data)
            |     |  +--rw application-data
            |     |     +--rw address?            simple-address
            |     |     +--rw protocol?           uint8
            |     |     +--rw ip-tos?             int32
            |     |     +--rw local-port-low?     inet:port-number
            |     |     +--rw local-port-high?    inet:port-number
            |     |     +--rw remote-port-low?    inet:port-number
            |     |     +--rw remote-port-high?   inet:port-number
            |     +--:(geo-coordinates)
            |     |  +--rw geo-coordinates
            |     |     +--rw latitude?            bits
            |     |     +--rw latitude-degrees?    uint8
            |     |     +--rw latitude-minutes?    uint8
            |     |     +--rw latitude-seconds?    uint8
            |     |     +--rw longitude?           bits
            |     |     +--rw longitude-degrees?   uint16
            |     |     +--rw longitude-minutes?   uint8
            |     |     +--rw longitude-seconds?   uint8
            |     |     +--rw altitude?            int32
            |     |     +--rw address?             simple-address
            |     +--:(nat-traversal)
            |     |  +--rw nat-traversal
            |     |     +--rw ms-udp-port?        uint16
            |     |     +--rw etr-udp-port?       uint16
            |     |     +--rw global-etr-rloc?    simple-address
            |     |     +--rw ms-rloc?            simple-address
            |     |     +--rw private-etr-rloc?   simple-address
            |     |     +--rw rtr-rlocs*          simple-address
            |     +--:(explicit-locator-path)
            |     |  +--rw explicit-locator-path
            |     |     +--rw hop* [hop-id]
            |     |        +--rw hop-id      string
            |     |        +--rw address?    simple-address
            |     |        +--rw lrs-bits?   bits
            |     +--:(source-dest-key)
            |     |  +--rw source-dest-key
            |     |     +--rw source?   simple-address
            |     |     +--rw dest?     simple-address
            |     +--:(key-value-address)
            |     |  +--rw key-value-address



Ermagan, et al.           Expires July 11, 2017                [Page 52]

Internet-Draft                  LISP-YANG                   January 2017


            |     |     +--rw key?     simple-address
            |     |     +--rw value?   simple-address
            |     +--:(service-path)
            |        +--rw service-path
            |           +--rw service-path-id?   service-path-id-type
            |           +--rw service-index?     uint8
            +--rw ttl?                uint32
            +--rw authoritative?      bits
            +--rw static?             boolean
            +--rw (locator-list)?
               +--:(negative-mapping)
               |  +--rw map-reply-action?   map-reply-action
               +--:(positive-mapping)
                  +--rw rlocs
                     +--rw locator* [id]
                        +--rw id                    string
                        +--rw locator-address
                        |  +--rw address-type             lisp-address-family-ref
                        |  +--rw virtual-network-id?      instance-id-type
                        |  +--rw (address)?
                        |     +--:(no-address)
                        |     |  +--rw no-address?              empty
                        |     +--:(ipv4)
                        |     |  +--rw ipv4?                    inet:ipv4-address
                        |     +--:(ipv4-prefix)
                        |     |  +--rw ipv4-prefix?             inet:ipv4-prefix
                        |     +--:(ipv6)
                        |     |  +--rw ipv6?                    inet:ipv6-address
                        |     +--:(ipv6-prefix)
                        |     |  +--rw ipv6-prefix?             inet:ipv6-prefix
                        |     +--:(mac)
                        |     |  +--rw mac?                     yang:mac-address
                        |     +--:(distinguished-name)
                        |     |  +--rw distinguished-name?      distinguished-name-type
                        |     +--:(as-number)
                        |     |  +--rw as-number?               inet:as-number
                        |     +--:(null-address)
                        |     |  +--rw null-address
                        |     |     +--rw address?   empty
                        |     +--:(afi-list)
                        |     |  +--rw afi-list
                        |     |     +--rw address-list*   simple-address
                        |     +--:(instance-id)
                        |     |  +--rw instance-id
                        |     |     +--rw iid?           instance-id-type
                        |     |     +--rw mask-length?   uint8
                        |     |     +--rw address?       simple-address
                        |     +--:(as-number-lcaf)



Ermagan, et al.           Expires July 11, 2017                [Page 53]

Internet-Draft                  LISP-YANG                   January 2017


                        |     |  +--rw as-number-lcaf
                        |     |     +--rw as?        inet:as-number
                        |     |     +--rw address?   simple-address
                        |     +--:(application-data)
                        |     |  +--rw application-data
                        |     |     +--rw address?            simple-address
                        |     |     +--rw protocol?           uint8
                        |     |     +--rw ip-tos?             int32
                        |     |     +--rw local-port-low?     inet:port-number
                        |     |     +--rw local-port-high?    inet:port-number
                        |     |     +--rw remote-port-low?    inet:port-number
                        |     |     +--rw remote-port-high?   inet:port-number
                        |     +--:(geo-coordinates)
                        |     |  +--rw geo-coordinates
                        |     |     +--rw latitude?            bits
                        |     |     +--rw latitude-degrees?    uint8
                        |     |     +--rw latitude-minutes?    uint8
                        |     |     +--rw latitude-seconds?    uint8
                        |     |     +--rw longitude?           bits
                        |     |     +--rw longitude-degrees?   uint16
                        |     |     +--rw longitude-minutes?   uint8
                        |     |     +--rw longitude-seconds?   uint8
                        |     |     +--rw altitude?            int32
                        |     |     +--rw address?             simple-address
                        |     +--:(nat-traversal)
                        |     |  +--rw nat-traversal
                        |     |     +--rw ms-udp-port?        uint16
                        |     |     +--rw etr-udp-port?       uint16
                        |     |     +--rw global-etr-rloc?    simple-address
                        |     |     +--rw ms-rloc?            simple-address
                        |     |     +--rw private-etr-rloc?   simple-address
                        |     |     +--rw rtr-rlocs*          simple-address
                        |     +--:(explicit-locator-path)
                        |     |  +--rw explicit-locator-path
                        |     |     +--rw hop* [hop-id]
                        |     |        +--rw hop-id      string
                        |     |        +--rw address?    simple-address
                        |     |        +--rw lrs-bits?   bits
                        |     +--:(source-dest-key)
                        |     |  +--rw source-dest-key
                        |     |     +--rw source?   simple-address
                        |     |     +--rw dest?     simple-address
                        |     +--:(key-value-address)
                        |     |  +--rw key-value-address
                        |     |     +--rw key?     simple-address
                        |     |     +--rw value?   simple-address
                        |     +--:(service-path)
                        |        +--rw service-path



Ermagan, et al.           Expires July 11, 2017                [Page 54]

Internet-Draft                  LISP-YANG                   January 2017


                        |           +--rw service-path-id?   service-path-id-type
                        |           +--rw service-index?     uint8
                        +--rw priority?             uint8
                        +--rw weight?               uint8
                        +--rw multicast-priority?   uint8
                        +--rw multicast-weight?     uint8
augment /lisp:lisp/lisp:lisp-router-instances/lisp:lisp-router-instance/lisp:lisp-role:
   +--ro pitr-state
      +--ro map-cache
         +--ro mapping* [id]
            +--ro id                  eid-id
            +--ro eid
            |  +--ro address-type             lisp-address-family-ref
            |  +--ro virtual-network-id?      instance-id-type
            |  +--ro (address)?
            |     +--:(no-address)
            |     |  +--ro no-address?              empty
            |     +--:(ipv4)
            |     |  +--ro ipv4?                    inet:ipv4-address
            |     +--:(ipv4-prefix)
            |     |  +--ro ipv4-prefix?             inet:ipv4-prefix
            |     +--:(ipv6)
            |     |  +--ro ipv6?                    inet:ipv6-address
            |     +--:(ipv6-prefix)
            |     |  +--ro ipv6-prefix?             inet:ipv6-prefix
            |     +--:(mac)
            |     |  +--ro mac?                     yang:mac-address
            |     +--:(distinguished-name)
            |     |  +--ro distinguished-name?      distinguished-name-type
            |     +--:(as-number)
            |     |  +--ro as-number?               inet:as-number
            |     +--:(null-address)
            |     |  +--ro null-address
            |     |     +--ro address?   empty
            |     +--:(afi-list)
            |     |  +--ro afi-list
            |     |     +--ro address-list*   simple-address
            |     +--:(instance-id)
            |     |  +--ro instance-id
            |     |     +--ro iid?           instance-id-type
            |     |     +--ro mask-length?   uint8
            |     |     +--ro address?       simple-address
            |     +--:(as-number-lcaf)
            |     |  +--ro as-number-lcaf
            |     |     +--ro as?        inet:as-number
            |     |     +--ro address?   simple-address
            |     +--:(application-data)
            |     |  +--ro application-data



Ermagan, et al.           Expires July 11, 2017                [Page 55]

Internet-Draft                  LISP-YANG                   January 2017


            |     |     +--ro address?            simple-address
            |     |     +--ro protocol?           uint8
            |     |     +--ro ip-tos?             int32
            |     |     +--ro local-port-low?     inet:port-number
            |     |     +--ro local-port-high?    inet:port-number
            |     |     +--ro remote-port-low?    inet:port-number
            |     |     +--ro remote-port-high?   inet:port-number
            |     +--:(geo-coordinates)
            |     |  +--ro geo-coordinates
            |     |     +--ro latitude?            bits
            |     |     +--ro latitude-degrees?    uint8
            |     |     +--ro latitude-minutes?    uint8
            |     |     +--ro latitude-seconds?    uint8
            |     |     +--ro longitude?           bits
            |     |     +--ro longitude-degrees?   uint16
            |     |     +--ro longitude-minutes?   uint8
            |     |     +--ro longitude-seconds?   uint8
            |     |     +--ro altitude?            int32
            |     |     +--ro address?             simple-address
            |     +--:(nat-traversal)
            |     |  +--ro nat-traversal
            |     |     +--ro ms-udp-port?        uint16
            |     |     +--ro etr-udp-port?       uint16
            |     |     +--ro global-etr-rloc?    simple-address
            |     |     +--ro ms-rloc?            simple-address
            |     |     +--ro private-etr-rloc?   simple-address
            |     |     +--ro rtr-rlocs*          simple-address
            |     +--:(explicit-locator-path)
            |     |  +--ro explicit-locator-path
            |     |     +--ro hop* [hop-id]
            |     |        +--ro hop-id      string
            |     |        +--ro address?    simple-address
            |     |        +--ro lrs-bits?   bits
            |     +--:(source-dest-key)
            |     |  +--ro source-dest-key
            |     |     +--ro source?   simple-address
            |     |     +--ro dest?     simple-address
            |     +--:(key-value-address)
            |     |  +--ro key-value-address
            |     |     +--ro key?     simple-address
            |     |     +--ro value?   simple-address
            |     +--:(service-path)
            |        +--ro service-path
            |           +--ro service-path-id?   service-path-id-type
            |           +--ro service-index?     uint8
            +--ro ttl?                uint32
            +--ro authoritative?      bits
            +--ro static?             boolean



Ermagan, et al.           Expires July 11, 2017                [Page 56]

Internet-Draft                  LISP-YANG                   January 2017


            +--ro (locator-list)?
               +--:(negative-mapping)
               |  +--ro map-reply-action?   map-reply-action
               +--:(positive-mapping)
                  +--ro rlocs
                     +--ro locator* [id]
                        +--ro id                    string
                        +--ro locator-address
                        |  +--ro address-type             lisp-address-family-ref
                        |  +--ro virtual-network-id?      instance-id-type
                        |  +--ro (address)?
                        |     +--:(no-address)
                        |     |  +--ro no-address?              empty
                        |     +--:(ipv4)
                        |     |  +--ro ipv4?                    inet:ipv4-address
                        |     +--:(ipv4-prefix)
                        |     |  +--ro ipv4-prefix?             inet:ipv4-prefix
                        |     +--:(ipv6)
                        |     |  +--ro ipv6?                    inet:ipv6-address
                        |     +--:(ipv6-prefix)
                        |     |  +--ro ipv6-prefix?             inet:ipv6-prefix
                        |     +--:(mac)
                        |     |  +--ro mac?                     yang:mac-address
                        |     +--:(distinguished-name)
                        |     |  +--ro distinguished-name?      distinguished-name-type
                        |     +--:(as-number)
                        |     |  +--ro as-number?               inet:as-number
                        |     +--:(null-address)
                        |     |  +--ro null-address
                        |     |     +--ro address?   empty
                        |     +--:(afi-list)
                        |     |  +--ro afi-list
                        |     |     +--ro address-list*   simple-address
                        |     +--:(instance-id)
                        |     |  +--ro instance-id
                        |     |     +--ro iid?           instance-id-type
                        |     |     +--ro mask-length?   uint8
                        |     |     +--ro address?       simple-address
                        |     +--:(as-number-lcaf)
                        |     |  +--ro as-number-lcaf
                        |     |     +--ro as?        inet:as-number
                        |     |     +--ro address?   simple-address
                        |     +--:(application-data)
                        |     |  +--ro application-data
                        |     |     +--ro address?            simple-address
                        |     |     +--ro protocol?           uint8
                        |     |     +--ro ip-tos?             int32
                        |     |     +--ro local-port-low?     inet:port-number



Ermagan, et al.           Expires July 11, 2017                [Page 57]

Internet-Draft                  LISP-YANG                   January 2017


                        |     |     +--ro local-port-high?    inet:port-number
                        |     |     +--ro remote-port-low?    inet:port-number
                        |     |     +--ro remote-port-high?   inet:port-number
                        |     +--:(geo-coordinates)
                        |     |  +--ro geo-coordinates
                        |     |     +--ro latitude?            bits
                        |     |     +--ro latitude-degrees?    uint8
                        |     |     +--ro latitude-minutes?    uint8
                        |     |     +--ro latitude-seconds?    uint8
                        |     |     +--ro longitude?           bits
                        |     |     +--ro longitude-degrees?   uint16
                        |     |     +--ro longitude-minutes?   uint8
                        |     |     +--ro longitude-seconds?   uint8
                        |     |     +--ro altitude?            int32
                        |     |     +--ro address?             simple-address
                        |     +--:(nat-traversal)
                        |     |  +--ro nat-traversal
                        |     |     +--ro ms-udp-port?        uint16
                        |     |     +--ro etr-udp-port?       uint16
                        |     |     +--ro global-etr-rloc?    simple-address
                        |     |     +--ro ms-rloc?            simple-address
                        |     |     +--ro private-etr-rloc?   simple-address
                        |     |     +--ro rtr-rlocs*          simple-address
                        |     +--:(explicit-locator-path)
                        |     |  +--ro explicit-locator-path
                        |     |     +--ro hop* [hop-id]
                        |     |        +--ro hop-id      string
                        |     |        +--ro address?    simple-address
                        |     |        +--ro lrs-bits?   bits
                        |     +--:(source-dest-key)
                        |     |  +--ro source-dest-key
                        |     |     +--ro source?   simple-address
                        |     |     +--ro dest?     simple-address
                        |     +--:(key-value-address)
                        |     |  +--ro key-value-address
                        |     |     +--ro key?     simple-address
                        |     |     +--ro value?   simple-address
                        |     +--:(service-path)
                        |        +--ro service-path
                        |           +--ro service-path-id?   service-path-id-type
                        |           +--ro service-index?     uint8
                        +--ro priority?             uint8
                        +--ro weight?               uint8
                        +--ro multicast-priority?   uint8
                        +--ro multicast-weight?     uint8






Ermagan, et al.           Expires July 11, 2017                [Page 58]

Internet-Draft                  LISP-YANG                   January 2017


7.2.  Module Definition

   <CODE BEGINS> file "ietf-lisp-pitr@2016-06-30.yang"
   module ietf-lisp-pitr {
     namespace "urn:ietf:params:xml:ns:yang:ietf-lisp-pitr";
     prefix lisp-pitr;
     import ietf-lisp {
       prefix lisp;
     }
     import ietf-lisp-address-types {
       prefix lcaf;
     }
     import ietf-inet-types {
       prefix inet;
     }
     organization
       "IETF LISP (Locator/ID Separation Protocol) Working Group";
     contact
       "lisp@ietf.org";
     description
       "This YANG module defines the generic configuration
        data for a LISP PITR. The module can be extended by vendors
        to define vendor-specific configuration parameters and
        policies.

        Copyright (c) 2015 IETF Trust and the persons identified as
        authors of the code.  All rights reserved.

        Redistribution and use in source and binary forms, with or
        without modification, is permitted pursuant to, and subject
        to the license terms contained in, the Simplified BSD License
        set forth in Section 4.c of the IETF Trust's Legal Provisions
        Relating to IETF Documents
        (http://trustee.ietf.org/license-info).

        This version of this YANG module is part of RFC 6338; see
        the RFC itself for full legal notices.
       ";
     revision 2016-06-30 {
       description
         "Initial revision.";
       reference
         "https://tools.ietf.org/html/rfc6832";
     }
     identity pitr {
       base lisp:lisp-role;
       description
         "LISP PITR.";



Ermagan, et al.           Expires July 11, 2017                [Page 59]

Internet-Draft                  LISP-YANG                   January 2017


     }
     augment "/lisp:lisp/lisp:lisp-router-instances"
     + "/lisp:lisp-router-instance/lisp:lisp-role" {
       when "lisp:lisp-role-type = 'lisp-pitr:pitr'" {
         description
           "Augment is valid when LISP device type is PITR.";
       }
       description
         "This augments LISP devices list with PITR specific
          parameters.";
       container proxy-itr-cfg {
         presence "LISP PITR operation enabled";
         description
           "Proxy-ITR configuration parameters.";

         uses lisp:servicing-eids-grouping;

         container map-resolvers {
           description
             "Map-Resolvers configured for PITR.";
           list map-resolver {
             key "id";
             description
               "List of Map-Resolvers configured for PITR.";
             leaf id {
               type lisp:eid-id;
               description
                 "Id of EID for which the Map-Resolver is used.";
             }
             container eid {
               uses lcaf:lisp-address;
               description
                 "EID for which the Map-Resolver is used.";
             }
             leaf-list address {
               type inet:ip-address;
               min-elements 1;
               description
                 "List of Map-Resolver's addresses.";
             }
           }
         }
         leaf itr-rlocs {
           type leafref {
             path "/lisp:lisp/lisp:locator-sets/lisp:locator-set/"
             + "lisp:locator-set-name";
           }
           description



Ermagan, et al.           Expires July 11, 2017                [Page 60]

Internet-Draft                  LISP-YANG                   January 2017


             "Refrence to a locator set that the PITR includes in
              Map-Requests";
         }
         container map-cache{
           uses lisp:mappings;
           description
             "EID to RLOCs mappings cache.";
         }
       }
     }
     augment "/lisp:lisp/lisp:lisp-router-instances"
     + "/lisp:lisp-router-instance/lisp:lisp-role" {
       when "lisp:lisp-role-type = 'lisp-pitr:pitr'" {
         description
           "Augment is valid when LISP device type is PITR.";
       }
       description
         "This augments LISP devices list state with PITR specific
          parameters.";
       container pitr-state {
         config false;
         description
           "ITR state.";
         container map-cache {
           uses lisp:mappings;
           description
             "EID to RLOCs mappings cache.";
         }
       }
     }
   }
   <CODE ENDS>

8.  LISP Proxy ETR Module

   This module captures the configuration data model of a LISP Proxy ETR
   [RFC6832].  The model may also capture some operational data
   elements.

8.1.  Module Structure

module: ietf-lisp-petr
augment /lisp:lisp/lisp:lisp-router-instances/lisp:lisp-router-instance/lisp:lisp-role:
   +--rw proxy-etr-cfg!
      +--rw servicing-eids
         +--rw servicing-eid* [id]
            +--rw id             lisp:eid-id
            +--rw eid-address



Ermagan, et al.           Expires July 11, 2017                [Page 61]

Internet-Draft                  LISP-YANG                   January 2017


               +--rw address-type             lisp-address-family-ref
               +--rw virtual-network-id?      instance-id-type
               +--rw (address)?
                  +--:(no-address)
                  |  +--rw no-address?              empty
                  +--:(ipv4)
                  |  +--rw ipv4?                    inet:ipv4-address
                  +--:(ipv4-prefix)
                  |  +--rw ipv4-prefix?             inet:ipv4-prefix
                  +--:(ipv6)
                  |  +--rw ipv6?                    inet:ipv6-address
                  +--:(ipv6-prefix)
                  |  +--rw ipv6-prefix?             inet:ipv6-prefix
                  +--:(mac)
                  |  +--rw mac?                     yang:mac-address
                  +--:(distinguished-name)
                  |  +--rw distinguished-name?      distinguished-name-type
                  +--:(as-number)
                  |  +--rw as-number?               inet:as-number
                  +--:(null-address)
                  |  +--rw null-address
                  |     +--rw address?   empty
                  +--:(afi-list)
                  |  +--rw afi-list
                  |     +--rw address-list*   simple-address
                  +--:(instance-id)
                  |  +--rw instance-id
                  |     +--rw iid?           instance-id-type
                  |     +--rw mask-length?   uint8
                  |     +--rw address?       simple-address
                  +--:(as-number-lcaf)
                  |  +--rw as-number-lcaf
                  |     +--rw as?        inet:as-number
                  |     +--rw address?   simple-address
                  +--:(application-data)
                  |  +--rw application-data
                  |     +--rw address?            simple-address
                  |     +--rw protocol?           uint8
                  |     +--rw ip-tos?             int32
                  |     +--rw local-port-low?     inet:port-number
                  |     +--rw local-port-high?    inet:port-number
                  |     +--rw remote-port-low?    inet:port-number
                  |     +--rw remote-port-high?   inet:port-number
                  +--:(geo-coordinates)
                  |  +--rw geo-coordinates
                  |     +--rw latitude?            bits
                  |     +--rw latitude-degrees?    uint8
                  |     +--rw latitude-minutes?    uint8



Ermagan, et al.           Expires July 11, 2017                [Page 62]

Internet-Draft                  LISP-YANG                   January 2017


                  |     +--rw latitude-seconds?    uint8
                  |     +--rw longitude?           bits
                  |     +--rw longitude-degrees?   uint16
                  |     +--rw longitude-minutes?   uint8
                  |     +--rw longitude-seconds?   uint8
                  |     +--rw altitude?            int32
                  |     +--rw address?             simple-address
                  +--:(nat-traversal)
                  |  +--rw nat-traversal
                  |     +--rw ms-udp-port?        uint16
                  |     +--rw etr-udp-port?       uint16
                  |     +--rw global-etr-rloc?    simple-address
                  |     +--rw ms-rloc?            simple-address
                  |     +--rw private-etr-rloc?   simple-address
                  |     +--rw rtr-rlocs*          simple-address
                  +--:(explicit-locator-path)
                  |  +--rw explicit-locator-path
                  |     +--rw hop* [hop-id]
                  |        +--rw hop-id      string
                  |        +--rw address?    simple-address
                  |        +--rw lrs-bits?   bits
                  +--:(source-dest-key)
                  |  +--rw source-dest-key
                  |     +--rw source?   simple-address
                  |     +--rw dest?     simple-address
                  +--:(key-value-address)
                  |  +--rw key-value-address
                  |     +--rw key?     simple-address
                  |     +--rw value?   simple-address
                  +--:(service-path)
                     +--rw service-path
                        +--rw service-path-id?   service-path-id-type
                        +--rw service-index?     uint8

8.2.  Module Definition

   <CODE BEGINS> file "ietf-lisp-petr@2016-06-30.yang"
   module ietf-lisp-petr {
     namespace "urn:ietf:params:xml:ns:yang:ietf-lisp-petr";
     prefix lisp-petr;
     import ietf-lisp {
       prefix lisp;
     }
     organization
       "IETF LISP (Locator/ID Separation Protocol) Working Group";
     contact
       "lisp@ietf.org";
     description



Ermagan, et al.           Expires July 11, 2017                [Page 63]

Internet-Draft                  LISP-YANG                   January 2017


       "This YANG module defines the generic configuration
        data for a LISP PETR. The module can be extended by vendors to
        define vendor-specific configuration parameters and policies.

        Copyright (c) 2015 IETF Trust and the persons identified as
        authors of the code.  All rights reserved.

        Redistribution and use in source and binary forms, with or
        without modification, is permitted pursuant to, and subject
        to the license terms contained in, the Simplified BSD License
        set forth in Section 4.c of the IETF Trust's Legal Provisions
        Relating to IETF Documents
        (http://trustee.ietf.org/license-info).

        This version of this YANG module is part of RFC 6338; see
        the RFC itself for full legal notices.
       ";
     revision 2016-06-30 {
       description
         "Initial revision.";
       reference
         "https://tools.ietf.org/html/rfc6832";
     }
     identity petr {
       base lisp:lisp-role;
       description
         "LISP PETR.";
     }
     augment "/lisp:lisp/lisp:lisp-router-instances"
     + "/lisp:lisp-router-instance/lisp:lisp-role" {
       when "lisp:lisp-role-type = 'lisp-petr:petr'" {
         description
           "Augment is valid when LISP device type is PETR.";
       }
       description
         "This augments LISP devices list with PETR specific
          parameters.";
       container proxy-etr-cfg {
         presence "LISP PETR operation enabled";
         description
           "Proxy ETR configuration parameters.";

         uses lisp:servicing-eids-grouping;
       }//proxy-etr-cfg
     }
   }
   <CODE ENDS>




Ermagan, et al.           Expires July 11, 2017                [Page 64]

Internet-Draft                  LISP-YANG                   January 2017


9.  LISP Address Types

   This module captures the various LISP address types, and is an
   essential building block used in other LISP modules.

9.1.  Module Definition

   <CODE BEGINS> file "ietf-lisp-address-types@2015-11-05.yang"
   module ietf-lisp-address-types {
     namespace "urn:ietf:params:xml:ns:yang:ietf-lisp-address-types";
     prefix laddr;
     import ietf-inet-types {
       prefix inet;
       revision-date 2013-07-15;
     }
     import ietf-yang-types {
       prefix yang;
       revision-date 2013-07-15;
     }
     organization
       "IETF LISP (Locator/ID Separation Protocol) Working Group";
     contact
       "lisp@ietf.org";
     description
       "This YANG module defines the LISP Canonical Address Formats
        (LCAF) for LISP. The module can be extended by vendors to
        define vendor-specific parameters.

        Copyright (c) 2014 IETF Trust and the persons identified as
        authors of the code.  All rights reserved.

        Redistribution and use in source and binary forms, with or
        without modification, is permitted pursuant to, and subject
        to the license terms contained in, the Simplified BSD License
        set forth in Section 4.c of the IETF Trust's Legal Provisions
        Relating to IETF Documents
        (http://trustee.ietf.org/license-info).

        This version of this YANG module is part of RFC 6338; see
        the RFC itself for full legal notices.

       ";
     revision 2015-11-05 {
       description
         "Initial revision.";
       reference
         "http://tools.ietf.org/html/draft-ietf-lisp-lcaf-10";
     }



Ermagan, et al.           Expires July 11, 2017                [Page 65]

Internet-Draft                  LISP-YANG                   January 2017


     identity lisp-address-family {
       description
         "Base identity from which identities describing LISP address
          families are derived.";
     }
     identity no-address-afi {
       base lisp-address-family;
       description
         "IANA Reserved.";
       }
     identity ipv4-afi {
       base lisp-address-family;
       description
         "IANA IPv4 address family.";
     }
     identity ipv4-prefix-afi {
       base lisp-address-family;
       description
         "IANA IPv4 address family prefix.";
     }
     identity ipv6-afi {
       base lisp-address-family;
       description
         "IANA IPv6 address family.";
     }
     identity ipv6-prefix-afi {
       base lisp-address-family;
       description
         "IANA IPv6 address family prefix.";
     }
     identity mac-afi {
       base lisp-address-family;
       description
         "IANA MAC address family.";
     }
     identity distinguished-name-afi {
       base lisp-address-family;
       description
         "IANA Distinguished Name address family.";
     }
     identity as-number-afi {
         base lisp-address-family;
         description
           "IANA AS Number address family.";
     }
     identity lcaf {
       base lisp-address-family;
       description



Ermagan, et al.           Expires July 11, 2017                [Page 66]

Internet-Draft                  LISP-YANG                   January 2017


         "IANA LISP Canonical Address Format address family.";
     }
     identity null-address-lcaf {
       base lcaf;
       description
         "Null body LCAF type.";
     }
     identity afi-list-lcaf {
       base lcaf;
       description
         "AFI-List LCAF type.";
     }
     identity instance-id-lcaf {
       base lcaf;
       description
         "Instance-ID LCAF type.";
     }
     identity as-number-lcaf {
       base lcaf;
       description
         "AS Number LCAF type.";
     }
     identity application-data-lcaf {
       base lcaf;
       description
         "Application Data LCAF type.";
     }
     identity geo-coordinates-lcaf {
       base lcaf;
       description
         "Geo-coordinates LCAF type.";
     }
     identity opaque-key-lcaf {
       base lcaf;
       description
         "Opaque Key LCAF type.";
     }
     identity nat-traversal-lcaf {
       base lcaf;
       description
         "NAT-Traversal LCAF type.";
     }
     identity nonce-locator-lcaf {
       base lcaf;
       description
         "Nonce-Locator LCAF type.";
     }
     identity multicast-info-lcaf {



Ermagan, et al.           Expires July 11, 2017                [Page 67]

Internet-Draft                  LISP-YANG                   January 2017


       base lcaf;
       description
         "Multicast Info LCAF type.";
     }
     identity explicit-locator-path-lcaf {
       base lcaf;
       description
         "Explicit Locator Path LCAF type.";
     }
     identity security-key-lcaf {
       base lcaf;
       description
         "Security Key LCAF type.";
     }
     identity source-dest-key-lcaf {
       base lcaf;
       description
         "Source/Dest LCAF type.";
     }
     identity replication-list-lcaf {
       base lcaf;
       description
         "Replication-List LCAF type.";
     }
     identity json-data-model-lcaf {
       base lcaf;
       description
         "JSON Data Model LCAF type.";
     }
     identity key-value-address-lcaf {
       base lcaf;
       description
         "Key/Value Address LCAF type.";
     }
     identity encapsulation-format-lcaf {
       base lcaf;
       description
         "Encapsulation Format LCAF type.";
     }
     identity service-path-lcaf {
       base lcaf;
       description
         "Service Path LCAF type.";
     }
     typedef instance-id-type {
       type uint32 {
         range "0..16777215";
       }



Ermagan, et al.           Expires July 11, 2017                [Page 68]

Internet-Draft                  LISP-YANG                   January 2017


       description
         "Defines the range of values for an Instance ID.";
     }
     typedef service-path-id-type {
       type uint32 {
         range "0..16777215";
       }
       description
         "Defines the range of values for a Service Path ID.";
     }
      typedef distinguished-name-type {
       type string;
       description
         "Distinguished Name address.";
       reference
         "http://www.iana.org/assignments/address-family-numbers/
          address-family-numbers.xhtml";
     }
     typedef simple-address {
       type union {
         type inet:ip-address;
         type inet:ip-prefix;
         type yang:mac-address;
         type distinguished-name-type;
         type inet:as-number;
       }
       description
         "Union of address types that can be part of LCAFs.";
     }

     typedef lisp-address-family-ref {
       type identityref {
         base lisp-address-family;
       }
       description
         "LISP address family reference.";
     }
     typedef lcaf-ref {
       type identityref {
         base lcaf;
       }
       description
         "LCAF types reference.";
     }

     grouping lisp-address {
       description
         "Generic LISP address.";



Ermagan, et al.           Expires July 11, 2017                [Page 69]

Internet-Draft                  LISP-YANG                   January 2017


       leaf address-type {
         type lisp-address-family-ref;
         mandatory true;
         description
           "Type of the LISP address.";
       }
       leaf virtual-network-id {
         type instance-id-type;
         description
           "Virtual Network Identifier (instance-id) of the address.";
       }
       choice address {
         description
           "Various LISP address types, including IP, MAC, and LCAF.";

         leaf no-address {
           when "../address-type = 'laddr:no-addr-afi'" {
             description
               "When AFI is 0.";
           }
           type empty;
           description
             "No address.";
         }
         leaf ipv4 {
           when "../address-type = 'laddr:ipv4-afi'" {
             description
               "When AFI is IPv4.";
           }
           type inet:ipv4-address;
           description
             "IPv4 address.";
         }
         leaf ipv4-prefix {
           when "../address-type = 'laddr:ipv4-prefix-afi'" {
             description
               "When AFI is IPv4.";
           }
           type inet:ipv4-prefix;
           description
             "IPv4 prefix.";
         }
         leaf ipv6 {
           when "../address-type = 'laddr:ipv6-afi'" {
             description
               "When AFI is IPv6.";
           }
           type inet:ipv6-address;



Ermagan, et al.           Expires July 11, 2017                [Page 70]

Internet-Draft                  LISP-YANG                   January 2017


           description
             "IPv6 address.";
         }
         leaf ipv6-prefix {
           when "../address-type = 'laddr:ipv6-prefix-afi'" {
             description
               "When AFI is IPv6.";
           }
           type inet:ipv6-prefix;
           description
             "IPv6 address.";
         }
         leaf mac {
           when "../address-type = 'laddr:mac-afi'" {
             description
               "When AFI is MAC.";
           }
           type yang:mac-address;
           description
             "MAC address.";
         }
         leaf distinguished-name {
           when "../address-type = 'laddr:distinguished-name-afi'" {
             description
               "When AFI is distinguished-name.";
           }
           type distinguished-name-type;
           description
             "Distinguished Name address.";
         }
         leaf as-number {
           when "../address-type = 'laddr:as-number-afi'" {
             description
               "When AFI is as-number.";
           }
           type inet:as-number;
           description
             "AS Number.";
         }
         container null-address {
           when "../address-type = 'laddr:null-address-lcaf'" {
             description
               "When LCAF type is null.";
           }
           description
             "Null body LCAF type";
           leaf address {
             type empty;



Ermagan, et al.           Expires July 11, 2017                [Page 71]

Internet-Draft                  LISP-YANG                   January 2017


             description
               "AFI address.";
           }
         }
         container afi-list {
           when "../address-type = 'laddr:afi-list-lcaf'" {
             description
               "When LCAF type is AFI-List.";
           }
           description
             "AFI-List LCAF type.";
           reference
             "http://tools.ietf.org/html/draft-ietf-lisp-lcaf-10
              #section-4.16.1";
           leaf-list address-list {
             type simple-address;
             description
               "List of AFI addresses.";
           }
         }
         container instance-id {
           when "../address-type = 'laddr:instance-id-lcaf'" {
             description
               "When LCAF type is Instance-ID";
           }
           description
             "Instance ID LCAF type.";
           reference
             "http://tools.ietf.org/html/draft-ietf-lisp-lcaf-10
              #section-4.2";
           leaf iid {
             type instance-id-type;
             description
               "Instance ID value.";
           }
           leaf mask-length {
               type uint8;
               description
                 "Mask length.";
           }
           leaf address {
             type simple-address;
             description
               "AFI address.";
           }
         }
         container as-number-lcaf {
           when "../address-type = 'laddr:as-number-lcaf'" {



Ermagan, et al.           Expires July 11, 2017                [Page 72]

Internet-Draft                  LISP-YANG                   January 2017


             description
               "When LCAF type is AS-Number.";
           }
           description
             "AS Number LCAF type.";
           reference
             "http://tools.ietf.org/html/draft-ietf-lisp-lcaf-10
              #section-4.3";
           leaf as {
             type inet:as-number;
             description
               "AS number.";
           }
           leaf address {
             type simple-address;
             description
               "AFI address.";
           }
         }
         container application-data {
           when "../address-type = 'laddr:application-data-lcaf'" {
             description
               "When LCAF type is Application Data.";
           }
           description
             "Application Data LCAF type.";
           reference
             "http://tools.ietf.org/html/draft-ietf-lisp-lcaf-10
              #section-4.4";
           leaf address {
               type simple-address;
               description
                 "AFI address.";
           }
           leaf protocol {
               type uint8;
               description
                 "Protocol number.";
           }
           leaf ip-tos {
               type int32;
               description
                 "Type of service field.";
           }
           leaf local-port-low {
               type inet:port-number;
               description
                 "Low end of local port range.";



Ermagan, et al.           Expires July 11, 2017                [Page 73]

Internet-Draft                  LISP-YANG                   January 2017


           }
           leaf local-port-high {
               type inet:port-number;
               description
                 "High end of local port range.";
           }
           leaf remote-port-low {
               type inet:port-number;
               description
                 "Low end of remote port range.";
           }
           leaf remote-port-high {
               type inet:port-number;
               description
                 "High end of remote port range.";
           }
         }
         container geo-coordinates {
           when "../address-type = 'laddr:geo-coordinates-lcaf'" {
             description
               "When LCAF type is Geo-coordinates.";
           }
           description
             "Geo-coordinates LCAF type.";
           reference
             "http://tools.ietf.org/html/draft-ietf-lisp-lcaf-10
              #section-4.5";
           leaf latitude {
             type bits {
               bit N {
                 description
                   "Latitude bit.";
               }
             }
             description
               "Bit that selects between North and South latitude.";
           }
           leaf latitude-degrees {
             type uint8 {
               range "0 .. 90";
             }
             description
               "Degrees of latitude.";
           }
           leaf latitude-minutes {
             type uint8 {
               range "0..59";
             }



Ermagan, et al.           Expires July 11, 2017                [Page 74]

Internet-Draft                  LISP-YANG                   January 2017


             description
               "Minutes of latitude.";
           }
           leaf latitude-seconds {
             type uint8 {
               range "0..59";
             }
             description
               "Seconds of latitude.";
           }
           leaf longitude {
             type bits {
               bit E {
                 description
                   "Longitude bit.";
               }
             }
             description
               "Bit that selects between East and West longitude.";
           }
           leaf longitude-degrees {
             type uint16 {
               range "0 .. 180";
             }
             description
               "Degrees of longitude.";
           }
           leaf longitude-minutes {
             type uint8 {
               range "0..59";
             }
             description
               "Minutes of longitude.";
           }
           leaf longitude-seconds {
             type uint8 {
               range "0..59";
             }
             description
               "Seconds of longitude.";
           }
           leaf altitude {
             type int32;
             description
               "Height relative to sea level in meters.";
           }
           leaf address {
             type simple-address;



Ermagan, et al.           Expires July 11, 2017                [Page 75]

Internet-Draft                  LISP-YANG                   January 2017


             description
               "AFI address.";
           }
         }
         container nat-traversal {
           when "../address-type = 'laddr:nat-traversal-lcaf'" {
             description
               "When LCAF type is NAT-Traversal.";
           }
           description
             "NAT-Traversal LCAF type.";
           reference
             "http://tools.ietf.org/html/draft-ietf-lisp-lcaf-10
              #section-4.6";
           leaf ms-udp-port {
             type uint16;
             description
               "Map-Server UDP port (set to 4342).";
           }
           leaf etr-udp-port {
             type uint16;
             description
               "ETR UDP port.";
           }
           leaf global-etr-rloc {
             type simple-address;
             description
               "Global ETR RLOC address.";
           }
           leaf ms-rloc {
             type simple-address;
             description
               "Map-Server RLOC address.";
           }
           leaf private-etr-rloc {
             type simple-address;
             description
               "Private ETR RLOC address.";
           }
           leaf-list rtr-rlocs {
             type simple-address;
             description
               "List of RTR RLOC addresses.";
           }
         }
         container explicit-locator-path {
           when "../address-type = 'laddr:explicit-locator-path-lcaf'" {
             description



Ermagan, et al.           Expires July 11, 2017                [Page 76]

Internet-Draft                  LISP-YANG                   January 2017


               "When LCAF type type is Explicit Locator Path.";
           }
           description
             "Explicit Locator Path LCAF type.";
           reference
             "http://tools.ietf.org/html/draft-ietf-lisp-lcaf-10
              #section-4.9";
           list hop {
             key "hop-id";
             ordered-by user;
             description
               "List of locator hops forming the explicit path.";
             leaf hop-id {
               type string {
                 length "1..64";
               }
               description
                 "Unique identifier for the hop.";
             }
             leaf address {
               type simple-address;
               description
                 "AFI address.";
             }
             leaf lrs-bits {
               type bits{
                 bit lookup {
                   description
                     "Lookup bit.";
                 }
                 bit rloc-probe {
                   description
                     "RLOC-probe bit.";
                 }
                 bit strict {
                   description
                     "Strict bit.";
                 }
               }
               description
                 "Flag bits per hop.";
             }
           }
         }
         container source-dest-key {
           when "../address-type = 'laddr:source-dest-key-lcaf'" {
             description
               "When LCAF type type is Source/Dest.";



Ermagan, et al.           Expires July 11, 2017                [Page 77]

Internet-Draft                  LISP-YANG                   January 2017


           }
           description
             "Source/Dest LCAF type.";
           reference
               "http://tools.ietf.org/html/draft-ietf-lisp-lcaf-10
               #section-4.11";
           leaf source {
             type simple-address;
             description
               "Source address.";
           }
           leaf dest {
             type simple-address;
             description
               "Destination address.";
           }
         }
         container key-value-address {
           when "../address-type = 'laddr:key-value-address-lcaf'" {
             description
               "When LCAF type type is Key/Value Address.";
           }
           description
             "Key/Value Address LCAF type.";
           reference
             "http://tools.ietf.org/html/draft-ietf-lisp-lcaf-10
              #section-4.11";
           leaf key {
             type simple-address;
             description
               "Address as Key.";
           }
           leaf value {
             type simple-address;
             description
               "Address as Value.";
           }
         }
         container service-path {
           when "../address-type = 'laddr:service-path-lcaf'" {
           description
             "When LCAF type service path identifier.";
               }
           description
             "Service Path LCAF type.";
           reference
             "http://tools.ietf.org/html/draft-ermagan-lisp-nsh-00";
           leaf service-path-id {



Ermagan, et al.           Expires July 11, 2017                [Page 78]

Internet-Draft                  LISP-YANG                   January 2017


             type service-path-id-type;
             description
               "Service path identifier for the path for NSH header";
           }
           leaf service-index {
             type uint8;
             description
               "Service path index for NSH header";
           }
         }
       }
     }
   }

   <CODE ENDS>

10.  Acknowledgments

   The tree view and the YANG model shown in this document have been
   formated with the 'pyang' tool.

11.  IANA Considerations

   This memo includes no request to IANA.

12.  Security Considerations

   Security Considerations TBD

13.  Normative References

   [I-D.ietf-lisp-ddt]
              Fuller, V., Lewis, D., Ermagan, V., Jain, A., and A.
              Smirnov, "LISP Delegated Database Tree", draft-ietf-lisp-
              ddt-08 (work in progress), September 2016.

   [I-D.ietf-lisp-lcaf]
              Farinacci, D., Meyer, D., and J. Snijders, "LISP Canonical
              Address Format (LCAF)", draft-ietf-lisp-lcaf-22 (work in
              progress), November 2016.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.






Ermagan, et al.           Expires July 11, 2017                [Page 79]

Internet-Draft                  LISP-YANG                   January 2017


   [RFC6830]  Farinacci, D., Fuller, V., Meyer, D., and D. Lewis, "The
              Locator/ID Separation Protocol (LISP)", RFC 6830,
              DOI 10.17487/RFC6830, January 2013,
              <http://www.rfc-editor.org/info/rfc6830>.

   [RFC6832]  Lewis, D., Meyer, D., Farinacci, D., and V. Fuller,
              "Interworking between Locator/ID Separation Protocol
              (LISP) and Non-LISP Sites", RFC 6832.

   [RFC6833]  Fuller, V. and D. Farinacci, "Locator/ID Separation
              Protocol (LISP) Map-Server Interface", RFC 6833,
              DOI 10.17487/RFC6833, January 2013,
              <http://www.rfc-editor.org/info/rfc6833>.

   [RFC6836]  Fuller, V., Farinacci, D., Meyer, D., and D. Lewis,
              "Locator/ID Separation Protocol Alternative Logical
              Topology (LISP+ALT)", RFC 6836, DOI 10.17487/RFC6836,
              January 2013, <http://www.rfc-editor.org/info/rfc6836>.

Authors' Addresses

   Vina Ermagan
   Cisco Systems
   170 Tasman Drive
   San Jose, CA
   USA

   Email: vermagan@cisco.com


   Alberto Rodriguez-Natal
   Technical University of Catalonia
   Barcelona
   Spain

   Email: arnatal@ac.upc.edu


   Florin Coras
   Technical University of Catalonia
   Barcelona
   Spain

   Email: fcoras@ac.upc.edu







Ermagan, et al.           Expires July 11, 2017                [Page 80]

Internet-Draft                  LISP-YANG                   January 2017


   Carl Moberg
   Cisco Systems
   170 W Tasman Dr
   San Jose, CA
   USA

   Email: camoberg@cisco.com


   Albert Cabellos-Aparicio
   Technical University of Catalonia
   Barcelona
   Spain

   Email: acabello@ac.upc.edu


   Fabio Maino
   Cisco Systems
   170 Tasman Drive
   San Jose, CA
   USA

   Email: fmaino@cisco.com



























Ermagan, et al.           Expires July 11, 2017                [Page 81]
