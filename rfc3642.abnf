sp  =  *%x20  ; zero, one or more space characters
msp = 1*%x20  ; one or more space characters

sep = [ "," ]

BIT-STRING = bstring / hstring

hstring           = squote *hexadecimal-digit squote %x48 ; '...'H
hexadecimal-digit = %x30-39 /  ; "0" to "9"
                          %x41-46    ; "A" to "F"

bstring           = squote *binary-digit squote %x42  ; '...'B
binary-digit      = "0" / "1"

squote            =  %x27  ; ' (single quote)

BOOLEAN = %x54.52.55.45 /   ; "TRUE"
                %x46.41.4C.53.45  ; "FALSE"

CHARACTER-STRING = "{" sp id-identification msp Identification ","
                             sp id-data-value msp OCTET-STRING
                             sp "}"

id-identification = %x69.64.65.6E.74.69.66.69.63.61.74.69.6F.6E
                             ; "identification"
id-data-value     = %x64.61.74.61.2D.76.61.6C.75.65 ; "data-value"

Identification = ( id-syntaxes ":" Syntaxes ) /
                       ( id-syntax ":" OBJECT-IDENTIFIER ) /
                       ( id-presentation-context-id ":" INTEGER ) /
                       ( id-context-negotiation ":"
                            ContextNegotiation ) /
                       ( id-transfer-syntax ":" OBJECT-IDENTIFIER ) /
                       ( id-fixed ":" NULL )
id-syntaxes                = %x73.79.6E.74.61.78.65.73
                                      ; "syntaxes"
id-syntax                  = %x73.79.6E.74.61.78 ; "syntax"
id-presentation-context-id = %x70.72.65.73.65.6E.74.61.74.69.6F.6E
                                      %x2D.63.6F.6E.74.65.78.74.2D.69.64
                                      ; "presentation-context-id"
id-context-negotiation     = %x63.6F.6E.74.65.78.74.2D.6E.65.67.6F
                                      %x74.69.61.74.69.6F.6E
                                      ; "context-negotiation"
id-transfer-syntax         = %x74.72.61.6E.73.66.65.72.2D.73.79.6E
                                      %x74.61.78 ; "transfer-syntax"
id-fixed                   = %x66.69.78.65.64 ; "fixed"

Syntaxes = "{" sp id-abstract msp OBJECT-IDENTIFIER ","
                     sp id-transfer msp OBJECT-IDENTIFIER
                     sp "}"
id-abstract = %x61.62.73.74.72.61.63.74 ; "abstract"
id-transfer = %x74.72.61.6E.73.66.65.72 ; "transfer"

ContextNegotiation = "{" sp id-presentation-context-id msp
                                     INTEGER ","
                               sp id-transfer-syntax msp
                                     OBJECT-IDENTIFIER
                               sp "}"

INTEGER         = "0" / positive-number / ("-" positive-number)
INTEGER-0-MAX   = "0" / positive-number
INTEGER-1-MAX   = positive-number
positive-number = non-zero-digit *decimal-digit
decimal-digit   = %x30-39  ; "0" to "9"
non-zero-digit  = %x31-39  ; "1" to "9"

EMBEDDED-PDV = "{" sp id-identification msp Identification ","
                         sp id-data-value msp OCTET-STRING
                         sp "}"

EXTERNAL = "{" [ sp id-direct-reference msp
                             OBJECT-IDENTIFIER "," ]
                     [ sp id-indirect-reference msp INTEGER "," ]
                     [ sp id-data-value-descriptor msp
                             ObjectDescriptor "," ]
                       sp id-encoding msp Encoding
                       sp "}"

id-direct-reference      = %x64.69.72.65.63.74.2D.72.65.66.65.72
                                    %x65.6E.63.65
                                    ; "direct-reference"
id-indirect-reference    = %x69.6E.64.69.72.65.63.74.2D.72.65.66
                                    %x65.72.65.6E.63.65
                                    ; "indirect-reference"
id-data-value-descriptor = %x64.61.74.61.2D.76.61.6C.75.65.2D.64
                                    %x65.73.63.72.69.70.74.6F.72
                                    ; "data-value-descriptor"
id-encoding              = %x65.6E.63.6F.64.69.6E.67
                                    ; "encoding"

Encoding = ( id-single-ASN1-type ":" Value ) /
                 ( id-octet-aligned ":" OCTET-STRING ) /
                 ( id-arbitrary ":" BIT-STRING )

id-single-ASN1-type = %x73.69.6E.67.6C.65.2D.41.53.4E.31.2D.74.79
                               %x70.65
                               ; "single-ASN1-type"
id-octet-aligned    = %x6F.63.74.65.74.2D.61.6C.69.67.6E.65.64
                               ; "octet-aligned"

id-arbitrary        = %x61.72.62.69.74.72.61.72.79
                               ; "arbitrary"

NULL = %x4E.55.4C.4C  ; "NULL"

OBJECT-IDENTIFIER = numeric-oid / descr
numeric-oid       = oid-component 1*( "." oid-component )
oid-component     = "0" / positive-number
OCTET-STRING = hstring

REAL = "0"                    ; zero
             / PLUS-INFINITY        ; positive infinity
             / MINUS-INFINITY       ; negative infinity
             / realnumber           ; positive base 10 REAL value
             / ( "-" realnumber )   ; negative base 10 REAL value
             / real-sequence-value  ; non-zero base 2 or 10 REAL value

PLUS-INFINITY  = %x50.4C.55.53.2D.49.4E.46.49.4E.49.54.59
                          ; "PLUS-INFINITY"

MINUS-INFINITY = %x4D.49.4E.55.53.2D.49.4E.46.49.4E.49.54.59
                          ; "MINUS-INFINITY"

realnumber = mantissa exponent
mantissa   = (positive-number [ "." *decimal-digit ])
                   / ( "0." *("0") positive-number )
exponent   = "E" ( "0" / ([ "-" ] positive-number))

real-sequence-value = "{" sp id-mantissa msp INTEGER ","
                                sp id-base msp ( "2" / "10" ) ","
                                sp id-exponent msp INTEGER sp "}"
id-mantissa         = %x6D.61.6E.74.69.73.73.61 ; "mantissa"
id-base             = %x62.61.73.65             ; "base"
id-exponent         = %x65.78.70.6F.6E.65.6E.74 ; "exponent"

RELATIVE-OID = oid-component *( "." oid-component )

UTF8String        = StringValue
StringValue       = dquote *SafeUTF8Character dquote

dquote            = %x22 ; " (double quote)

SafeUTF8Character = %x00-21 / %x23-7F /   ; ASCII minus dquote
                          dquote dquote /       ; escaped double quote
                          %xC0-DF %x80-BF /     ; 2 byte UTF-8 character
                          %xE0-EF 2(%x80-BF) /  ; 3 byte UTF-8 character
                          %xF0-F7 3(%x80-BF)    ; 4 byte UTF-8 character

NumericString        = dquote *(decimal-digit / space) dquote
space                = %x20
PrintableString      = dquote *PrintableCharacter dquote
PrintableCharacter   = decimal-digit / space
                             / %x41-5A ; A to Z
                             / %x61-7A ; a to z
                             / %x27-29 ; ' ( )
                             / %x2B-2F ; + , - . /
                             / %x3A    ; :
                             / %x3D    ; =
                             / %x3F    ; ?

ISO646String         = VisibleString
VisibleString        = dquote *SafeVisibleCharacter dquote
SafeVisibleCharacter = %x20-21
                             / %x23-7E ; printable ASCII minus dquote
                             / dquote dquote   ; escaped double quote

IA5String            = dquote *SafeIA5Character dquote
SafeIA5Character     = %x00-21 / %x23-7F ; ASCII minus dquote
                             / dquote dquote   ; escaped double quote

century = 2(%x30-39) ; "00" to "99"
year    = 2(%x30-39) ; "00" to "99"
month   =   ( %x30 %x31-39 ) ; "01" (January) to "09"
                / ( %x31 %x30-32 ) ; "10" to "12"
day     =   ( %x30 %x31-39 )    ; "01" to "09"
                / ( %x31-32 %x30-39 ) ; "10" to "29"
                / ( %x32 %x30-31 )    ; "30" to "31"
hour    = ( %x30-31 %x30-39 ) / ( %x32 %x30-33 ) ; "00" to "23"
minute  = %x30-35 %x30-39                        ; "00" to "59"
second  =   ( %x30-35 %x30-39 )  ; "00" to "59"
                / ( %x36 %x30 )        ; "60" (a leap second)

UTCTime         = dquote year month day hour minute [ second ]
                           [ %x5A / u-differential ] dquote
u-differential  = ( "-" / "+" ) hour minute

GeneralizedTime = dquote century year month day hour
                           [ minute [ second ] ] [ fraction ]
                           [ %x5A / g-differential ] dquote
fraction        = ( "." / "," ) 1*(%x30-39)
g-differential  = ( "-" / "+" ) hour [ minute ]

BMPString       = StringValue
UniversalString = StringValue

TeletexString    = StringValue
T61String        = StringValue
VideotexString   = StringValue
GraphicString    = StringValue
GeneralString    = StringValue
ObjectDescriptor = GraphicString

AttributeType  = OBJECT-IDENTIFIER

DirectoryString = StringValue /
                        ( id-teletexString   ":" TeletexString ) /
                        ( id-printableString ":" PrintableString ) /
                        ( id-bmpString       ":" BMPString ) /
                        ( id-universalString ":" UniversalString ) /
                        ( id-uTF8String      ":" UTF8String )

id-teletexString   = %x74.65.6C.65.74.65.78.53.74.72.69.6E.67
                              ; "teletexString"
id-printableString = %x70.72.69.6E.74.61.62.6C.65
                              %x53.74.72.69.6E.67 ; "printableString"
id-bmpString       = %x62.6D.70.53.74.72.69.6E.67 ; "bmpString"
id-universalString = %x75.6E.69.76.65.72.73.61.6C
                              %x53.74.72.69.6E.67 ; "universalString"
id-uTF8String      = %x75.54.46.38.53.74.72.69.6E.67
                                 ; "uTF8String"
DistinguishedName = RDNSequence
LocalName         = RDNSequence
RDNSequence       = dquote *SafeUTF8Character dquote

RelativeDistinguishedName = dquote *SafeUTF8Character dquote

ORAddress = dquote *SafeIA5Character dquote

