<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-acme-star-11" number="8739" category="std" obsoletes="" updates="" submissionType="IETF" consensus="true" xml:lang="en" tocInclude="true" sortRefs="true" symRefs="true" version="3">

  <front>
    <title abbrev="Support for ACME STAR">Support for Short-Term,
    Automatically Renewed (STAR) Certificates in the Automated Certificate
    Management Environment (ACME)</title>
    <seriesInfo name="RFC" value="8739"/>
    <author initials="Y." surname="Sheffer" fullname="Yaron Sheffer">
      <organization>Intuit</organization>
      <address>
        <email>yaronf.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="D." surname="Lopez" fullname="Diego Lopez">
      <organization>Telefonica I+D</organization>
      <address>
        <email>diego.r.lopez@telefonica.com</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica I+D</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="A." surname="Pastor Perales" fullname="Antonio Agustin Pastor Perales">
      <organization>Telefonica I+D</organization>
      <address>
        <email>antonio.pastorperales@telefonica.com</email>
      </address>
    </author>
    <author initials="T." surname="Fossati" fullname="Thomas Fossati">
      <organization>ARM</organization>
      <address>
        <email>thomas.fossati@arm.com</email>
      </address>
    </author>
    <date month="March" year="2020" />
    <area>Security</area>
    <workgroup>ACME Working Group</workgroup>

<keyword>OCSP</keyword>
<keyword>CRL</keyword>
<keyword>revocation</keyword>

    <abstract>
      <t>Public key certificates need to be revoked when they are compromised,
      that is, when the associated private key is exposed to an unauthorized
      entity.  However, the revocation process is often unreliable. An
      alternative to revocation is issuing a sequence of certificates, each
      with a short validity period, and terminating the sequence upon
      compromise.  This memo proposes an Automated Certificate Management
      Environment (ACME) extension to enable the issuance of Short-Term,
      Automatically Renewed (STAR) X.509 certificates.</t>
    </abstract>
  </front>
  <middle>

    <section anchor="introduction" numbered="true" toc="default">
      <name>Introduction</name>
      <t>The ACME protocol <xref target="RFC8555" format="default"/> automates
      the process of issuing a certificate to a named entity (an Identifier
      Owner or IdO). Typically, but not always, the identifier is a domain
      name.</t>
      <t>If the IdO wishes to obtain a string of short-term certificates
      originating from the same private key (see <xref target="TOPALOVIC"
      format="default"/> about why using short-lived certificates might be
      preferable to explicit revocation), she must go through the whole ACME
      protocol each time a new short-term certificate is needed, e.g., every
      2-3 days.  If done this way, the process would involve frequent
      interactions between the registration function of the ACME Certification
      Authority (CA) and the identity provider infrastructure (e.g., DNS, web
      servers), therefore making the issuance of short-term certificates
      exceedingly dependent on the reliability of both.</t>
      <t>This document presents an extension of the ACME protocol that
      optimizes this process by making short-term certificates first-class
      objects in the ACME ecosystem.  Once the Order for a string of
      short-term certificates is accepted, the CA is responsible for
      publishing the next certificate at an agreed upon URL before the
      previous one expires.  The IdO can terminate the automatic renewal
      before the negotiated deadline if needed, e.g., on key compromise.</t>
      <t>For a more generic treatment of STAR certificates, readers are referred to <xref target="I-D.nir-saag-star" format="default"/>.</t>
      <section anchor="name-delegation-use-case" numbered="true" toc="default">
        <name>Name Delegation Use Case</name>

        <t>The proposed mechanism can be used as a building block of an
        efficient name-delegation protocol, for example, one that exists between a
        Content Distribution Network (CDN) or a cloud provider and its
        customers <xref target="I-D.ietf-acme-star-delegation"
        format="default"/>.  At any time, the service customer (i.e., the IdO)
        can terminate the delegation by simply instructing the CA to stop the
        automatic renewal and letting the currently active certificate expire
        shortly thereafter.</t>
        <t>Note that in the name delegation use case, the delegated entity needs to access
the auto-renewed certificate without being in possession of the ACME account
key that was used for initiating the STAR issuance.  This leads to the optional
use of unauthenticated GET in this protocol (<xref target="certificate-get-nego" format="default"/>).</t>
      </section>
      <section anchor="terminology" numbered="true" toc="default">
        <name>Terminology</name>
        <dl newline="false" spacing="compact" indent="8">
          <dt>IdO</dt>
          <dd>
  Identifier Owner, the owner of an identifier, e.g., a domain name, a
	  telephone number, etc.</dd>
          <dt>STAR</dt>
          <dd>
  Short-Term, Automatically Renewed X.509 certificates.</dd>
        </dl>
      </section>
      <section anchor="conventions-used-in-this-document" numbered="true" toc="default">
        <name>Conventions Used in This Document</name>


        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>

      </section>
    </section>
    <section anchor="protocol-flow" numbered="true" toc="default">
      <name>Protocol Flow</name>
      <t>The following subsections describe the three main phases of the protocol:</t>
      <ul spacing="compact">
        <li>Bootstrap: the IdO asks an ACME CA to create a short-term,
	automatically renewed (STAR) certificate (<xref target="proto-bootstrap" format="default"/>);</li>
        <li>Auto-renewal: the ACME CA periodically reissues the short-term
	certificate and posts it to the star-certificate URL (<xref target="proto-auto-renewal" format="default"/>);</li>
        <li>Termination: the IdO requests the ACME CA to discontinue the
	automatic renewal of the certificate (<xref target="proto-termination" format="default"/>).</li>
      </ul>
      <section anchor="proto-bootstrap" numbered="true" toc="default">
        <name>Bootstrap</name>
        <t>The IdO, in its role as an
ACME client, requests the CA to issue a STAR certificate, i.e., one that:</t>
        <ul spacing="compact">
          <li>Has a short validity, e.g., 24 to 72 hours. Note that the exact definition of "short" depends on the use case;</li>
          <li>Is automatically renewed by the CA for a certain period of time;</li>
          <li>Is downloadable from a (highly available) location.</li>
        </ul>
        <t>Other than that, the ACME protocol flows as usual between IdO and CA.
In particular, IdO is responsible for satisfying the requested ACME challenges until the CA is willing to issue the requested certificate.
Per normal ACME processing, the IdO is given back an Order resource associated with the STAR certificate to be used in subsequent interaction with the CA (e.g., if
the certificate needs to be terminated.)</t>
        <t>The bootstrap phase ends when the ACME CA updates the Order resource to include the URL for the issued STAR certificate.</t>
      </section>
      <section anchor="proto-auto-renewal" numbered="true" toc="default">


        <name>Auto Renewal</name>


        <t>The CA issues the initial certificate after the authorization
        completes successfully.  It then automatically reissues the
        certificate using the same Certificate Signing Request (CSR) (and therefore the same identifier and
        public key) before the previous one expires and publishes it to the
        URL that was returned to the IdO at the end of the bootstrap phase.
        The certificate user, which could be either the IdO itself or a
        delegated third party as described in <xref
        target="I-D.ietf-acme-star-delegation" format="default"/>, obtains the
        certificate (<xref target="fetching-certificates" format="default"/>)
        and uses it.</t>
        <t>The auto-renewal process (<xref target="figprotorefresh" format="default"/>) goes on until either:</t>
        <ul spacing="compact">
          <li>IdO explicitly terminates the automatic renewal (<xref target="proto-termination" format="default"/>); or</li>
          <li>Automatic renewal expires.</li>
        </ul>

        <figure anchor="figprotorefresh">
          <name>Auto-renewal</name>
          <artwork name="" type="" align="left" alt=""><![CDATA[
   Certificate             ACME/STAR
   User                    Server
   |     Retrieve cert     |                     [...]
   |---------------------->|                      |
   |                       +------.              /
   |                       |      |             /
   |                       | Automatic renewal :
   |                       |      |             \
   |                       |<-----'              \
   |     Retrieve cert     |                      |
   |---------------------->|            short validity period
   |                       |                      |
   |                       +------.              /
   |                       |      |             /
   |                       | Automatic renewal :
   |                       |      |             \
   |                       |<-----'              \
   |     Retrieve cert     |                      |
   |---------------------->|            short validity period
   |                       |                      |
   |                       +------.              /
   |                       |      |             /
   |                       | Automatic renewal :
   |                       |      |             \
   |                       |<-----'              \
   |                       |                      |
   |         [...]         |                    [...]
]]></artwork>
        </figure>
      </section>
      <section anchor="proto-termination" numbered="true" toc="default">
        <name>Termination</name>
        <t>The IdO may request early termination of the STAR certificate by
        sending a cancellation request to the Order resource as described in
        <xref target="protocol-details-canceling" format="default"/>.  After
        the CA receives and verifies the request, it shall:</t>
        <ul spacing="compact">
          <li>Cancel the automatic renewal process for the STAR certificate;</li>
          <li>Change the certificate publication resource to return an error indicating the termination of the issuance;</li>
          <li>Change the status of the Order to "canceled".</li>
        </ul>
        <t>Note that it is not necessary to explicitly revoke the short-term certificate.</t>
        <figure anchor="figprototerm">
          <name>Termination</name>
          <artwork name="" type="" align="left" alt=""><![CDATA[
   Certificate                                     ACME/STAR
   User                    IdO                     Server
   |                       |                       |
   |                       |      Cancel Order     |
   |                       +---------------------->|
   |                       |                       +-------.
   |                       |                       |       |
   |                       |                       | End auto-renewal  
   |                       |                       | Remove cert link
   |                       |                       | etc.
   |                       |                       |       |
   |                       |         Done          |<------'
   |                       |<----------------------+
   |                       |                       |
   |                                               |
   |              Retrieve cert                    |
   +---------------------------------------------->|
   |              Error: autoRenewalCanceled       |
   |<----------------------------------------------+
   |                                               |
]]></artwork>
        </figure>
      </section>
    </section>

    <section anchor="protocol-details" numbered="true" toc="default">
      <name>Protocol Details</name>
      <t>This section describes the protocol details, namely the extensions
to the ACME protocol required to issue STAR certificates.</t>
      <section anchor="acme-extensions" numbered="true" toc="default">
        <name>ACME Extensions</name>
        <t>This protocol extends the ACME protocol to allow for automatically renewed Orders.</t>
        <section anchor="star-order-ext" numbered="true" toc="default">
          <name>Extending the Order Resource</name>
          <t>The Order resource is extended with a new "auto-renewal" object
          that <bcp14>MUST</bcp14> be present for STAR certificates.  The
          "auto-renewal" object has the following structure:</t>
          <ul spacing="compact">
            <li>start-date (optional, string): The earliest date of validity
            of the first certificate issued, in <xref target="RFC3339"
            format="default"/> format.  When omitted, the start date is as
            soon as authorization is complete.</li>
            <li>end-date (required, string): The latest date of validity of
            the last certificate issued, in <xref target="RFC3339"
            format="default"/> format.</li>
            <li>lifetime (required, integer): The maximum validity period of
            each STAR certificate, an integer that denotes a number of
            seconds.  This is a nominal value that does not include any extra
            validity time due to server or client adjustment (see below).</li>
            <li>lifetime-adjust (optional, integer): The amount of "left pad"
            added to each STAR certificate, an integer that denotes a number
            of seconds.  The default is 0.  If present, the value of the
            notBefore field that would otherwise appear in the STAR
            certificates is pre-dated by the specified number of seconds.  See
            <xref target="operational-cons-clocks" format="default"/> for
            why a client might want to use this control, and <xref
            target="computing-effective-cert-lifetime" format="default"/> for
            how the effective certificate lifetime is computed.  The value
            reflected by the server, together with the value of the lifetime
            attribute, can be used by the client as a hint to configure its
            polling timer.</li>
            <li>allow-certificate-get (optional, boolean): See <xref
            target="certificate-get-nego" format="default"/>.</li>
          </ul>

          <t>These attributes are included in a POST message when creating the
          Order as part of the object encoded as "payload".  They are returned
          when the Order has been created. The ACME server <bcp14>MAY</bcp14>
          adjust them at will according to its local policy (see also <xref
          target="capability-discovery" format="default"/>).</t>
          <t>The optional notBefore and notAfter fields defined in <xref
          target="RFC8555" sectionFormat="of" section="7.1.3"/> <bcp14>MUST
          NOT</bcp14> be present in a STAR Order.  If they are included, the
          server <bcp14>MUST</bcp14> return an error with status code 400 (Bad
          Request) and type "malformedRequest".</t>
          <t><xref target="RFC8555" sectionFormat="of" section="7.1.6"/>
          defines the following values for the Order resource's status:
          "pending", "ready", "processing", "valid", and "invalid".  In the
          case of auto-renewal Orders, the status <bcp14>MUST</bcp14> be
          "valid" as long as STAR certificates are being issued.  This
          document adds a new status value: "canceled" (see <xref
          target="protocol-details-canceling" format="default"/>).</t>
          <t>A STAR certificate is by definition a dynamic resource, i.e., it
          refers to an entity that varies over time.  Instead of overloading
          the semantics of the "certificate" attribute, this document defines
          a new attribute, "star-certificate", to be used instead of
          "certificate".</t>
          <ul spacing="compact">
            <li>star-certificate (optional, string): A URL for the (rolling)
            STAR certificate that has been issued in response to this
            Order.</li>
          </ul>
        </section>
        <section anchor="protocol-details-canceling" numbered="true" toc="default">
          <name>Canceling an Auto-renewal Order</name>
          <t>An important property of the auto-renewal Order is that it can be
          canceled by the IdO with no need for certificate revocation. To
          cancel the Order, the ACME client sends a POST to the Order URL as
          shown in <xref target="figcancelingstarorder"
          format="default"/>.</t>
          <figure anchor="figcancelingstarorder">
            <name>Canceling an Auto-renewal Order</name>
<sourcecode>
  POST /acme/order/ogfr8EcolOT HTTP/1.1
  Host: example.com
  Content-Type: application/jose+json

  {
    "protected": base64url({
      "alg": "ES256",
      "kid": "https://example.com/acme/acct/gw06UNhKfOve",
      "nonce": "Alc00Ap6Rt7GMkEl3L1JX5",
      "url": "https://example.com/acme/order/ogfr8EcolOT"
    }),
    "payload": base64url({
      "status": "canceled"
    }),
    "signature": "g454e3hdBlkT4AEw...nKePnUyZTjGtXZ6H"
  }
</sourcecode>
          </figure>
          <t>After a successful cancellation, the server <bcp14>MUST NOT</bcp14> issue any additional certificates for this Order.</t>
          <t>When the Order is canceled, the server:</t>
          <ul spacing="compact">
            <li><bcp14>MUST</bcp14> update the status of the Order resource to "canceled" and <bcp14>MUST</bcp14> set an appropriate "expires" date;</li>
            <li><bcp14>MUST</bcp14> respond with 403 (Forbidden) to any
            requests to the star-certificate endpoint.  The response
            <bcp14>SHOULD</bcp14> provide additional information using a
            problem document <xref target="RFC7807" format="default"/> with
            type "urn:ietf:params:acme:error:autoRenewalCanceled".</li>
          </ul>
          <t>Issuing a cancellation for an Order that is not in "valid" state
          is not allowed.  A client <bcp14>MUST NOT</bcp14> send such a
          request, and a server <bcp14>MUST</bcp14> return an error response
          with status code 400 (Bad Request) and type
          "urn:ietf:params:acme:error:autoRenewalCancellationInvalid".</t>
          <t>The state machine described in <xref
          target="RFC8555" sectionFormat="of" section="7.1.6"/> is extended as illustrated in
          <xref target="fig-order-state-transitions-ext" format="default"/>.</t>

          <figure anchor="fig-order-state-transitions-ext">
	    <name>State Transitions for STAR Order Objects</name>
            <artwork name="" type="" align="left" alt=""><![CDATA[
    pending --------------+
       |                  |
       | All authz        |
       | "valid"          |
       V                  |
     ready ---------------+
       |                  |
       | Receive          |
       | finalize         |
       | request          |
       V                  |
   processing ------------+
       |                  |
       | First            |
       | certificate      | Error or
       | issued           | Authorization failure
       |                  |
       |                  V
       |               invalid
       V               
     valid----------------+             
       |                  |
       | STAR             |
       | Certificate      | Natural
       | canceled         | Expiration
       V                  |
    canceled             ='=
]]></artwork>
          </figure>
          <t>Explicit certificate revocation using the revokeCert interface
          (<xref target="RFC8555" sectionFormat="of" section="7.6"/>) is not
          supported for STAR certificates.  A server receiving a revocation
          request for a STAR certificate <bcp14>MUST</bcp14> return an error
          response with status code 403 (Forbidden) and type
          "urn:ietf:params:acme:error:autoRenewalRevocationNotSupported".</t>
        </section>
      </section>
      <section anchor="capability-discovery" numbered="true" toc="default">
        <name>Capability Discovery</name>
        <t>In order to support the discovery of STAR capabilities, the "meta"
        field inside the directory object defined in <xref
        target="RFC8555" sectionFormat="of" section="9.7.6"/> is extended with a new
        "auto-renewal" object.  The "auto-renewal" object <bcp14>MUST</bcp14>
        be present if the server supports STAR.  Its structure is as
        follows:</t>
        <ul spacing="compact">
          <li>min-lifetime (required, integer): Minimum acceptable value for
          auto-renewal lifetime, in seconds.</li>
          <li>max-duration (required, integer): Maximum allowed delta between
          the end-date and start-date attributes of the Order's auto-renewal
	  object.</li>
          <li>allow-certificate-get (optional, boolean): See <xref
          target="certificate-get-nego" format="default"/>.</li>
        </ul>
        <t>An example directory object advertising STAR support with one-day
        min-lifetime and one-year max-duration and supporting certificate
        fetching with an HTTP GET is shown in <xref target="figstardir"
        format="default"/>.</t>
        <figure anchor="figstardir">
          <name>Directory Object with STAR Support</name>

<sourcecode type="JSON">
 {
    "new-nonce": "https://example.com/acme/new-nonce",
    "new-account": "https://example.com/acme/new-account",
    "new-order": "https://example.com/acme/new-order",
    "new-authz": "https://example.com/acme/new-authz",
    "revoke-cert": "https://example.com/acme/revoke-cert",
    "key-change": "https://example.com/acme/key-change",
    "meta": {
      "terms-of-service": "https://example.com/acme/terms/2017-5-30",
      "website": "https://www.example.com/",
      "caa-identities": ["example.com"],
      "auto-renewal": {
        "min-lifetime": 86400,
        "max-duration":  31536000,
        "allow-certificate-get": true
      }
    }
 }
</sourcecode>

        </figure>
      </section>
      <section anchor="fetching-certificates" numbered="true" toc="default">
        <name>Fetching the Certificates</name>
        <t>The certificate is fetched from the star-certificate endpoint with
        POST-as-GET as per <xref target="RFC8555" sectionFormat="of"
        section="7.4.2"/> unless the client and server have successfully
        negotiated the "unauthenticated GET" option described in <xref
        target="certificate-get-nego" format="default"/>.  In such case, the
        client can simply issue a GET to the star-certificate resource without
        authenticating itself to the server as illustrated in <xref
        target="figunauthgetstarcert" format="default"/>.</t>
        <figure anchor="figunauthgetstarcert">
          <name>Fetching a STAR Certificate with Unauthenticated GET</name>
          <artwork name="" type="" align="left" alt=""><![CDATA[
  GET /acme/cert/g7m3ZQeTEqa HTTP/1.1
  Host: example.com
  Accept: application/pem-certificate-chain

  HTTP/1.1 200 OK
  Content-Type: application/pem-certificate-chain
  Link: <https://example.com/acme/some-directory>;rel="index"
  Cert-Not-Before: Thu, 3 Oct 2019 00:00:00 GMT
  Cert-Not-After: Thu, 10 Oct 2019 00:00:00 GMT

  -----BEGIN CERTIFICATE-----
  [End-entity certificate contents]
  -----END CERTIFICATE-----
  -----BEGIN CERTIFICATE-----
  [Issuer certificate contents]
  -----END CERTIFICATE-----
  -----BEGIN CERTIFICATE-----
  [Other certificate contents]
  -----END CERTIFICATE-----
]]></artwork>
        </figure>
        <t>The server <bcp14>SHOULD</bcp14> include the "Cert-Not-Before" and
        "Cert-Not-After" HTTP header fields in the response.  When they exist,
        they <bcp14>MUST</bcp14> be equal to the respective fields inside the
        end-entity certificate. Their format is "HTTP-date" as defined in
        <xref target="RFC7231" sectionFormat="of" section="7.1.1.2"/>.  Their
        purpose is to enable client implementations that do not parse the
        certificate.</t>
        <t>The following are further clarifications regarding usage of these
        header fields as per <xref target="RFC7231" sectionFormat="of"
	section="8.3.1"/>. All apply to both headers.</t>
        <ul spacing="compact">
          <li>This header field is a single value, not a list.</li>
          <li>The header field is used only in responses to GET, HEAD, and
          POST-as-GET requests, and only for MIME types that denote public key
          certificates.</li>
          <li>Header field semantics are independent of context.</li>
          <li>The header field is not hop-by-hop.</li>
          <li>Intermediaries <bcp14>MAY</bcp14> insert or delete the value;</li>
          <li>If an intermediary inserts the value, it <bcp14>MUST</bcp14>
          ensure that the newly added value matches the corresponding value in
          the certificate.</li>
          <li>The header field is not appropriate for a Vary field.</li>
          <li>The header field is allowed within message trailers.</li>
          <li>The header field is not appropriate within redirects.</li>
          <li>The header field does not introduce additional security
          considerations. It discloses in a simpler form information that is
	  already available inside the certificate.</li>
        </ul>

<t>To improve robustness, the next certificate <bcp14>MUST</bcp14> be made
available by the ACME CA at the URL indicated by "star-certificate" halfway
through the lifetime of the currently active certificate at the latest.  It is
worth noting that this has an implication in case of cancellation; in fact,
from the time the next certificate is made available, the cancellation is not
completely effective until the "next" certificate also expires.  To avoid the
client accidentally entering a broken state, the notBefore of the "next"
certificate <bcp14>MUST</bcp14> be set so that the certificate is already
valid when it is published at the "star-certificate" URL.  Note that the
server might need to increase the auto-renewal lifetime-adjust value to
satisfy the latter requirement.  For a detailed description of the renewal
scheduling logic, see <xref target="computing-effective-cert-lifetime"
format="default"/>.  For further rationale on the need for adjusting the
certificate validity, see <xref target="operational-cons-clocks"
format="default"/>.</t>
        <t>The server <bcp14>MUST NOT</bcp14> issue any certificates for this
        Order with notAfter after the auto-renewal end-date.</t>
        <t>For expired Orders, the server <bcp14>MUST</bcp14> respond with 403
        (Forbidden) to any requests to the star-certificate endpoint.  The
        response <bcp14>SHOULD</bcp14> provide additional information using a
        problem document <xref target="RFC7807" format="default"/> with type
        "urn:ietf:params:acme:error:autoRenewalExpired". Note that the Order
        resource's state remains "valid", as per the base protocol.</t>
      </section>

      <section anchor="certificate-get-nego" numbered="true" toc="default">
        <name>Negotiating an Unauthenticated GET</name>
        <t>In order to enable the name delegation workflow defined in <xref
        target="I-D.ietf-acme-star-delegation" format="default"/> and to
        increase the reliability of the STAR ecosystem (see <xref
        target="dependability" format="default"/> for details), this document
        defines a mechanism that allows a server to advertise support for
        accessing star-certificate resources via unauthenticated GET (in
        addition to POST-as-GET), and a client to enable this service with
        per-Order granularity.</t>

        <t>Specifically, a server states its availability to grant
        unauthenticated access to a client's Order star-certificate by setting
        the allow-certificate-get attribute to "true" in the auto-renewal object
        of the meta field inside the directory object:</t>
        <ul spacing="compact">
          <li>allow-certificate-get (optional, boolean): If this field is
          present and set to "true", the server allows GET (and HEAD) requests
          to star-certificate URLs.</li>
        </ul>
        <t>A client states its desire to access the issued star-certificate
        via unauthenticated GET by adding an allow-certificate-get attribute
        to the auto-renewal object of the payload of its newOrder request and
        setting it to "true".</t>
        <ul spacing="compact">
          <li>allow-certificate-get (optional, boolean): If this field is
          present and set to "true", the client requests the server to allow
          unauthenticated GET (and HEAD) to the star-certificate associated
          with this Order.</li>
        </ul>
        <t>If the server accepts the request, it <bcp14>MUST</bcp14> reflect
        the attribute setting in the resulting order object.</t>

        <t>Note that even when the use of unauthenticated GET has been agreed
        upon, the server <bcp14>MUST</bcp14> also allow POST-as-GET requests
        to the star-certificate resource.</t>
      </section>
      <section anchor="computing-effective-cert-lifetime" numbered="true" toc="default">
        <name>Computing notBefore and notAfter of STAR Certificates</name>
        <t>We define "nominal renewal date" as the point in time when a new
        short-term certificate for a given STAR Order is due.  Its cadence is
        a multiple of the Order's auto-renewal lifetime that starts with the
        issuance of the first short-term certificate and is upper-bounded by
        the Order's auto-renewal end-date (<xref target="fignrd"
        format="default"/>).</t>
        <figure anchor="fignrd">
          <name>Nominal Renewal Date</name>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    T      - STAR Order's auto-renewal lifetime
    end    - STAR Order's auto-renewal end-date
    nrd[i] - nominal renewal date of the i-th STAR certificate


                 .- T -.   .- T -.   .- T -.   .__.
                /       \ /       \ /       \ /  end
    -----------o---------o---------o---------o----X-------> t
              nrd[0]    nrd[1]    nrd[2]    nrd[3]
]]></artwork>
        </figure>
        <t>The rules to determine the notBefore and notAfter values of the i-th STAR
certificate are as follows:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
    notAfter  = min(nrd[i] + T, end)
    notBefore = nrd[i] - max(adjust_client, adjust_server)
]]></artwork>

        <t>Where "adjust_client" is the minimum value between the auto-renewal
        lifetime-adjust value ("la"), optionally supplied by the client, and
        the auto-renewal lifetime of each short-term certificate ("T");
        "adjust_server" is the amount of padding added by the ACME server to
        make sure that all certificates being published are valid at the time
        of publication.  The server padding is a fraction (f) of T (i.e., f
        * T with .5 &lt;= f &lt; 1; see <xref target="fetching-certificates"
        format="default"/>):</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
    adjust_client = min(T, la)
    adjust_server = f * T
]]></artwork>
        <t>Note that the ACME server <bcp14>MUST NOT</bcp14> set the notBefore of the first STAR
certificate to a date prior to the auto-renewal start-date.</t>
        <section anchor="example" numbered="true" toc="default">
          <name>Example</name>
          <t>Given a server that intends to publish the next STAR certificate halfway
through the lifetime of the previous one, and a STAR Order with the following
attributes:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
     "auto-renewal": {
       "start-date": "2019-01-10T00:00:00Z",
       "end-date": "2019-01-20T00:00:00Z",
       "lifetime": 345600,          // 4 days
       "lifetime-adjust": 259200    // 3 days
     }
]]></artwork>
          <t>The amount of time that needs to be subtracted from each nominal renewal
date is 3 days, i.e., max(min(345600, 259200), 345600 * .5).</t>
          <t>The notBefore and notAfter of each short-term certificate are:</t>
          <table align="center">
            <thead>
              <tr>
                <th align="left">notBefore</th>
                <th align="left">notAfter</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">2019-01-10T00:00:00Z</td>
                <td align="left">2019-01-14T00:00:00Z</td>
              </tr>
              <tr>
                <td align="left">2019-01-11T00:00:00Z</td>
                <td align="left">2019-01-18T00:00:00Z</td>
              </tr>
              <tr>
                <td align="left">2019-01-15T00:00:00Z</td>
                <td align="left">2019-01-20T00:00:00Z</td>
              </tr>
            </tbody>
          </table>
          <t>The value of the notBefore is also the time at which the client should expect
the new certificate to be available from the star-certificate endpoint.</t>
        </section>
      </section>
    </section>
    <section anchor="operational-considerations" numbered="true" toc="default">
      <name>Operational Considerations</name>
      <section anchor="operational-cons-clocks" numbered="true" toc="default">
        <name>The Meaning of "Short Term" and the Impact of Skewed Clocks</name>
        <t>"Short Term" is a relative concept; therefore, trying to define a
        cutoff point that works in all cases would be a useless exercise.  In
        practice, the expected lifetime of a STAR certificate will be counted
        in minutes, hours, or days, depending on different factors: the
        underlying requirements for revocation, how much clock synchronization
        is expected among relying parties and the issuing CA, etc.</t>
        <t>Nevertheless, this section attempts to provide reasonable
        suggestions for the Web use case, informed by current operational and
        research experience.</t>
        <t>Acer et al.&nbsp;<xref target="ACER" format="default"/> find that one of
        the main causes of "HTTPS error" warnings in browsers is misconfigured
        client clocks.  In particular, they observe that roughly 95% of the
        "severe" clock skews -- the 6.7% of clock-related breakage reports
        that account for clients that are more than 24 hours behind -- happen
        to be within 6-7 days.</t>

        <t>In order to avoid these spurious warnings about a not yet valid
        server certificate, site owners could use the auto-renewal
        lifetime-adjust attribute to control the effective lifetime of their
        Web-facing certificates.  The exact number depends on the percentage
        of the "clock-skewed" population that the site owner expects to
        protect -- 5 days cover 97.3%, 7 days cover 99.6% -- as well as the
        nominal auto-renewal lifetime of the STAR Order.  Note that exact
        choice is also likely to depend on the kinds of client that are
        prevalent for a given site or app -- for example, Android and Mac OS
        clients are known to behave better than Windows clients.  These
        considerations are clearly out of scope of this document.</t>

        <t>In terms of security, STAR certificates and certificates with the
        Online Certificate Status Protocol (OCSP) "must-staple" flag asserted <xref
        target="RFC7633" format="default"/> can be considered roughly
        equivalent if the STAR certificate's and the OCSP response's lifetimes
        are the same. (Here, "must-staple" refers to a certificate carrying a
	TLS feature extension with the "status_request" extension identifier
	<xref target="RFC6066"/>.)  Given OCSP responses can be cached, on average, for 4
        days <xref target="STARK" format="default"/>, it is
        <bcp14>RECOMMENDED</bcp14> that a STAR certificate that is used on the
        Web has an "effective" lifetime (excluding any adjustment to account
        for clock skews) no longer than 4 days.</t>
      </section>
      <section anchor="impact-on-certificate-transparency-ct-logs" numbered="true" toc="default">
        <name>Impact on Certificate Transparency (CT) Logs</name>
        <t>Even in the highly unlikely case STAR becomes the only certificate
        issuance model, discussion with the IETF TRANS Working Group and
        implementers of Certificate Transparency (CT) logs suggests that existing
        CT Log server implementations are capable of sustaining the resulting
        100-fold increase in ingestion rate. Additionally, such a future
        higher load could be managed with a variety of techniques (e.g.,
        sharding by modulo of certificate hash, using "smart" load-balancing
        CT proxies, etc.). With regards to the increase in the log size,
        current CT log growth is already being managed with schemes like
        Chrome's Log Policy <xref target="OBRIEN" format="default"/>, which
        allow Operators to define their log life cycle, as well as allowing the CAs,
        User Agents, Monitors, and any other interested entities to build in
        support for that life cycle ahead of time.</t>
      </section>
      <section anchor="dependability" numbered="true" toc="default">
        <name>HTTP Caching and Dependability</name>
        <t>When using authenticated POST-as-GET, the HTTPS endpoint from where
        the STAR certificate is fetched can't be easily replicated by an
        on-path HTTP cache.  Reducing the caching properties of the protocol
        makes STAR clients increasingly dependent on the ACME server
        availability.  This might be problematic given the relatively high
        rate of client-server interactions in a STAR ecosystem, especially
        when multiple endpoints (e.g., a high number of CDN edge nodes) end up
        requesting the same certificate.  Clients and servers should consider
        using the mechanism described in <xref target="certificate-get-nego"
        format="default"/> to mitigate the risk.</t>
        <t>When using unauthenticated GET to fetch the STAR certificate, the server <bcp14>SHALL</bcp14>
use the appropriate cache directives to set the freshness lifetime of the
response (<xref target="RFC7234" sectionFormat="of" section="5.2"/>) such that on-path caches will consider
it stale before or at the time its effective lifetime is due to expire.</t>
      </section>
    </section>
   
    <section anchor="iana-considerations" numbered="true" toc="default">
      <name>IANA Considerations</name>

      <section anchor="new-registries" numbered="true" toc="default">
        <name>New Registries</name>
        <t>Per this document, IANA has created the following new registries:</t>
        <ul spacing="compact">
          <li>ACME Order Auto-Renewal Fields (<xref target="iana-order-auto-renewal-registry" format="default"/>)</li>
          <li>ACME Directory Metadata Auto-Renewal Fields (<xref target="iana-metadata-auto-renewal-registry" format="default"/>)</li>
        </ul>
        <t>These registries are administered under a Specification Required policy
<xref target="RFC8126" format="default"/>.</t>
      </section>
      <section anchor="new-error-types" numbered="true" toc="default">
        <name>New Error Types</name>
        <t>Per this document, IANA has added the following entries to the "ACME Error Types" registry:</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left">Type</th>
              <th align="left">Description</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">autoRenewalCanceled</td>
              <td align="left">The short-term certificate is no longer available because the auto-renewal Order has been explicitly canceled by the IdO</td>
              <td align="left">RFC 8739</td>
            </tr>
            <tr>
              <td align="left">autoRenewalExpired</td>
              <td align="left">The short-term certificate is no longer available because the auto-renewal Order has expired</td>
              <td align="left">RFC 8739</td>
            </tr>
            <tr>
              <td align="left">autoRenewalCancellationInvalid</td>
              <td align="left">A request to cancel an auto-renewal Order that is not in state "valid" has been received</td>
              <td align="left">RFC 8739</td>
            </tr>
            <tr>
              <td align="left">autoRenewalRevocationNotSupported</td>
              <td align="left">A request to revoke an auto-renewal Order has been received</td>
              <td align="left">RFC 8739</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="new-fields-in-order-objects" numbered="true" toc="default">
        <name>New Fields in Order Objects</name>
        <t>Per this document, IANA has added the following entries to the
        "ACME Order Object Fields" registry:</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left">Field Name</th>
              <th align="left">Field Type</th>
              <th align="left">Configurable</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">auto-renewal</td>
              <td align="left">object</td>
              <td align="left">true</td>
              <td align="left">RFC 8739</td>
            </tr>
            <tr>
              <td align="left">star-certificate</td>
              <td align="left">string</td>
              <td align="left">false</td>
              <td align="left">RFC 8739</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="iana-order-auto-renewal-registry" numbered="true" toc="default">
        <name>Fields in the "auto-renewal" Object within an Order Object</name>
        <t>The "ACME Order Auto-Renewal Fields" registry lists field names that are
defined for use in the JSON object included in the "auto-renewal" field of an
ACME order object.</t>
        <t>Template:</t>
        <ul spacing="compact">
          <li>Field name: The string to be used as a field name in the JSON object</li>
          <li>Field type: The type of value to be provided, e.g., string, boolean, array of
string</li>
          <li>Configurable: Boolean indicating whether the server should accept values
provided by the client</li>
          <li>Reference: Where this field is defined</li>
        </ul>
        <t>Initial contents: The fields and descriptions defined in <xref target="star-order-ext" format="default"/>.</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left">Field Name</th>
              <th align="left">Field Type</th>
              <th align="left">Configurable</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">start-date</td>
              <td align="left">string</td>
              <td align="left">true</td>
              <td align="left">RFC 8739</td>
            </tr>
            <tr>
              <td align="left">end-date</td>
              <td align="left">string</td>
              <td align="left">true</td>
              <td align="left">RFC 8739</td>
            </tr>
            <tr>
              <td align="left">lifetime</td>
              <td align="left">integer</td>
              <td align="left">true</td>
              <td align="left">RFC 8739</td>
            </tr>
            <tr>
              <td align="left">lifetime-adjust</td>
              <td align="left">integer</td>
              <td align="left">true</td>
              <td align="left">RFC 8739</td>
            </tr>
            <tr>
              <td align="left">allow-certificate-get</td>
              <td align="left">boolean</td>
              <td align="left">true</td>
              <td align="left">RFC 8739</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="new-fields-in-the-meta-object-within-a-directory-object" numbered="true" toc="default">
        <name>New Fields in the "meta" Object within a Directory Object</name>
        <t>Per this document, IANA has added the following entry to the "ACME Directory Metadata Fields":</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left">Field Name</th>
              <th align="left">Field Type</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">auto-renewal</td>
              <td align="left">object</td>
              <td align="left">RFC 8739</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="iana-metadata-auto-renewal-registry" numbered="true" toc="default">
        <name>Fields in the "auto-renewal" Object within a Directory Metadata Object</name>
        <t>The "ACME Directory Metadata Auto-Renewal Fields" registry lists field names
that are defined for use in the JSON object included in the "auto-renewal"
field of an ACME directory "meta" object.</t>
        <t>Template:</t>
        <ul spacing="compact">
          <li>Field name: The string to be used as a field name in the JSON object</li>
          <li>Field type: The type of value to be provided, e.g., string, boolean, array of
string</li>
          <li>Reference: Where this field is defined</li>
        </ul>
        <t>Initial contents: The fields and descriptions defined in <xref target="capability-discovery" format="default"/>.</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left">Field Name</th>
              <th align="left">Field Type</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">min-lifetime</td>
              <td align="left">integer</td>
              <td align="left">RFC 8739</td>
            </tr>
            <tr>
              <td align="left">max-duration</td>
              <td align="left">integer</td>
              <td align="left">RFC 8739</td>
            </tr>
            <tr>
              <td align="left">allow-certificate-get</td>
              <td align="left">boolean</td>
              <td align="left">RFC 8739</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="iana-http-headers" numbered="true" toc="default">
        <name>Cert-Not-Before and Cert-Not-After HTTP Headers</name>
        <t>The "Message Headers" registry has been updated with the following additional values:</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left">Header Field Name</th>
              <th align="left">Protocol</th>
              <th align="left">Status</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">Cert-Not-Before</td>
              <td align="left">http</td>
              <td align="left">standard</td>
              <td align="left">RFC 8739, <xref target="fetching-certificates" format="default"/></td>
            </tr>
            <tr>
              <td align="left">Cert-Not-After</td>
              <td align="left">http</td>
              <td align="left">standard</td>
              <td align="left">RFC 8739, <xref target="fetching-certificates" format="default"/></td>
            </tr>
          </tbody>
        </table>
      </section>
    </section>
    <section anchor="security-considerations" numbered="true" toc="default">
      <name>Security Considerations</name>
      <section anchor="no-revocation" numbered="true" toc="default">
        <name>No Revocation</name>
        <t>STAR certificates eliminate an important security feature of PKI,
        which is the ability to revoke certificates.  Revocation allows the
        administrator to limit the damage done by a rogue node or an adversary
        who has control of the private key.  With STAR certificates,
        expiration replaces revocation so there is potential for lack of
        timeliness in the revocation taking effect.  To that end, see also the
        discussion on clock skew in <xref target="operational-cons-clocks"
        format="default"/>.</t>
        <t>It should be noted that revocation also has timeliness issues
        because both Certificate Revocation Lists (CRLs) and OCSP responses
        have nextUpdate fields that tell relying parties (RPs) how long they
        should trust this revocation data.  These fields are typically set to
        hours, days, or even weeks in the future.  Any revocation that happens
        before the time in nextUpdate goes unnoticed by the RP.</t>
        <t>One situation where the lack of explicit revocation could create a
        security risk to the IdO is when the Order is created with a
        start-date of some appreciable amount of time in the future.  Recall
        that when authorizations have been fulfilled, the Order moves to the
        "valid" state and the star-certificate endpoint is populated with the
        first cert (<xref target="fig-order-state-transitions-ext"
        format="default"/>).  So, if an attacker manages to get hold of the
        private key as well as the first (post-dated) certificate, there is
        a time window in the future when they will be able to successfully
        impersonate the IdO.  Note that cancellation is pointless in this
        case.  In order to mitigate the described threat, it is
        <bcp14>RECOMMENDED</bcp14> that IdO place their Orders at a time that
        is close to the Order's start-date.</t>
        <t>More discussion of the security of STAR certificates is available in
<xref target="TOPALOVIC" format="default"/>.</t>
      </section>
      <section anchor="denial-of-service-considerations" numbered="true" toc="default">
        <name>Denial-of-Service Considerations</name>
        <t>STAR adds a new attack vector that increases the threat of
        denial-of-service attacks, caused by the change to the CA's
        behavior. Each STAR request amplifies the resource demands upon the
        CA, where one Order produces not one but potentially dozens or
        hundreds of certificates, depending on the auto-renewal "lifetime"
        parameter. An attacker can use this property to aggressively reduce
        the auto-renewal "lifetime" (e.g., 1 second) jointly with other ACME
        attack vectors identified in <xref target="RFC8555"
        sectionFormat="of" section="10"/>. Other collateral impact is related to the
        certificate endpoint resource where the client can retrieve the
        certificates periodically. If this resource is external to the CA
        (e.g., a hosted web server), the previous attack will be reflected to
        that resource.</t>

        <t>Mitigation recommendations from ACME still apply, but some of them
        need to be adjusted. For example, applying rate limiting to the
        initial request, due to the nature of the auto-renewal behavior,
        cannot solve the above problem. The CA server needs complementary
        mitigation, and specifically, it <bcp14>SHOULD</bcp14> enforce a
        minimum value on auto-renewal "lifetime". Alternatively, the CA can
        set a rate limit for internal certificate generation processes. Note
        that this limit has to take account of already scheduled renewal
        issuances as well as new incoming requests.</t>
      </section>

      <section anchor="privacy-considerations" numbered="true" toc="default">
        <name>Privacy Considerations</name>
        <t>In order to avoid correlation of certificates by account, if
        unauthenticated GET is negotiated (<xref target="certificate-get-nego"
        format="default"/>), the recommendation in <xref target="RFC8555"
        sectionFormat="of" section="10.5"/> regarding the choice of URL
        structure applies, i.e., servers <bcp14>SHOULD</bcp14> choose URLs of
        certificate resources in a non-guessable way, for example, using
        capability URLs <xref target="W3C.CAPABILITY-URLS"
        format="default"/>.</t>
      </section>
    </section>

  </middle>
  <back>
   

<displayreference target="I-D.ietf-acme-star-delegation" to="STAR-DELEGATION"/>
<displayreference target="I-D.nir-saag-star" to="SHORT-TERM-CERTS"/>

 <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3339.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7231.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7807.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8555.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7234.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml"/>
      </references>
      <references>
        <name>Informative References</name>

        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7633.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6066.xml"/>


<!--I-D.draft-ietf-acme-star-delegation-01; IESG state I-D Exists -->
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-acme-star-delegation.xml"/>

<!--I-D.draft-nir-saag-star; IESG state Expired -->
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.nir-saag-star.xml"/>


        <reference anchor="STARK" target="https://crypto.stanford.edu/~dabo/pubs/abstracts/ssl-prefetch.html">
          <front>
            <title>The case for prefetching and prevalidating TLS server certificates</title>
            <author initials="E." surname="Stark" fullname="Emily Stark">
              <organization>Google</organization>
            </author>
            <author initials="L.S." surname="Huang" fullname="Lin-Shung Huang">
              <organization>Carnegie Mellon University</organization>
            </author>
            <author initials="D." surname="Israni" fullname="Dinesh Israni">
              <organization>Carnegie Mellon University</organization>
            </author>
            <author initials="C." surname="Jackson" fullname="Collin Jackson">
              <organization>Carnegie Mellon University</organization>
            </author>
            <author initials="D." surname="Boneh" fullname="Dan Boneh">
              <organization>Stanford University</organization>
            </author>
            <date month="February" year="2012"/>
          </front>
        </reference>


        <reference anchor="ACER" target="https://acmccs.github.io/papers/p1407-acerA.pdf">
          <front>
            <title>Where the Wild Warnings Are: Root Causes of Chrome HTTPS Certificate Errors</title>
            <seriesInfo name="DOI" value="10.1145/3133956.3134007"/>
            <author initials="M.E." surname="Acer" fullname="Mustafa Emre Acer">
              <organization>Google</organization>
            </author>
            <author initials="E." surname="Stark" fullname="Emily Stark">
              <organization>Google</organization>
            </author>
            <author initials="A.P." surname="Felt" fullname="Adrienne Porter Felt">
              <organization>Google</organization>
            </author>
            <author initials="S." surname="Fahl" fullname="Sascha Fahl">
              <organization>Leibniz University Hannover</organization>
            </author>
            <author initials="R." surname="Bhargava" fullname="Radhika Bhargava">
              <organization>Purdue University</organization>
            </author>
            <author initials="B." surname="Dev" fullname="Bhanu Dev">
              <organization>International Institute of Information Technology Hyderabad</organization>
            </author>
            <author initials="M." surname="Braithwaite" fullname="Matt Braithwaite">
              <organization>Google</organization>
            </author>
            <author initials="R." surname="Sleevi" fullname="Ryan Sleevi">
              <organization>Google</organization>
            </author>
            <author initials="P." surname="Tabriz" fullname="Parisa Tabriz">
              <organization>Google</organization>
            </author>
            <date month="October" year="2017"/>
          </front>
        </reference>


        <reference anchor="TOPALOVIC" target="https://www.ieee-security.org/TC/W2SP/2012/papers/w2sp12-final9.pdf">
          <front>
            <title>Towards Short-Lived Certificates</title>
            <author initials="E." surname="Topalovic" fullname="Emin Topalovic">
              <organization>Stanford University</organization>
            </author>
            <author initials="B." surname="Saeta" fullname="Brennan Saeta">
              <organization>Stanford University</organization>
            </author>
            <author initials="L.S." surname="Huang" fullname="Lin-Shung Huang">
              <organization>Carnegie Mellon University</organization>
            </author>
            <author initials="C." surname="Jackson" fullname="Colling Jackson">
              <organization>Carnegie Mellon University</organization>
            </author>
            <author initials="D." surname="Boneh" fullname="Dan Boneh">
              <organization>Stanford University</organization>
            </author>
            <date year="2012"/>
          </front>
        </reference>

        <reference anchor="OBRIEN" target="https://github.com/chromium/ct-policy">
          <front>
            <title>Chromium Certificate Transparency Policy</title>
            <author initials="D." surname="O'Brien" fullname="Devon O'Brien">
              <organization>Google</organization>
            </author>
            <author initials="R." surname="Sleevi" fullname="Ryan Sleevi">
              <organization>Google</organization>
            </author>
            <date month="April" year="2017"/>
          </front>
        </reference>
     
   <reference anchor="W3C.CAPABILITY-URLS" target="https://www.w3.org/TR/2014/WD-capability-urls-20140218">
          <front>
            <title>Good Practices for Capability URLs</title>
            <author initials="J." surname="Tennison" fullname="Jeni Tennison">
              <organization/>
            </author>
            <date month="February"  year="2014"/>
          </front>
            <refcontent>W3C First Public Working Draft</refcontent>
<refcontent>Latest version available at &lt;https://www.w3.org/TR/capability-urls/&gt;
</refcontent>
        </reference>
      </references>
    </references>

    <section anchor="acknowledgments" numbered="false" toc="default">
      <name>Acknowledgments</name>
      <t>This work is partially supported by the European Commission under
      Horizon 2020 grant agreement no. 688421 Measurement and Architecture for
      a Middleboxed Internet (MAMI). This support does not imply
      endorsement.</t>
      <t>Thanks to <contact fullname="Ben Kaduk"/>, <contact fullname="Richard
      Barnes"/>, <contact fullname="Roman Danyliw"/>, <contact fullname="Jon
      Peterson"/>, <contact fullname="Eric Rescorla"/>, <contact
      fullname="Ryan Sleevi"/>, <contact fullname="Sean Turner"/>, <contact
      fullname="Alexey Melnikov"/>, <contact fullname="Adam Roach"/>, <contact
      fullname="Martin Thomson"/>, and <contact fullname="Mehmet Ersue"/> for helpful comments and
      discussions that have shaped this document.</t>
    </section>
  </back>

</rfc>
