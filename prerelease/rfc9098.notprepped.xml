<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

<rfc ipr="trust200902" category="info" docName="draft-ietf-v6ops-ipv6-ehs-packet-drops-08" number="9098" obsoletes="" updates="" submissionType="IETF" xml:lang="en" tocInclude="true" tocDepth="2" symRefs="true" sortRefs="true" version="3" consensus="true" xmlns:xi="http://www.w3.org/2001/XInclude">

  <front>
    <title abbrev="IPv6 Extension Headers">Operational Implications of IPv6 Packets with Extension Headers</title>
    <seriesInfo name="RFC" value="9098"/>
    <author fullname="Fernando Gont" initials="F." surname="Gont">
      <organization abbrev="SI6 Networks">SI6 Networks</organization>
      <address>
        <postal>
          <street>Segurola y Habana 4310, 7mo Piso</street>
          <city>Villa Devoto</city>
          <region>Ciudad Autonoma de Buenos Aires</region>
          <country>Argentina</country>
        </postal>
        <email>fgont@si6networks.com</email>
        <uri>https://www.si6networks.com</uri>
      </address>
    </author>
    <author fullname="Nick Hilliard" initials="N" surname="Hilliard">
      <organization>INEX</organization>
      <address>
        <postal>
          <street>4027 Kingswood Road</street>
          <city>Dublin</city>
          <code>24</code>
          <country>Ireland</country>
        </postal>
        <email>nick@inex.ie</email>
      </address>
    </author>
    <author fullname="Gert Doering" initials="G" surname="Doering">
      <organization>SpaceNet AG</organization>
      <address>
        <postal>
          <street>Joseph-Dollinger-Bogen 14</street>
          <city>Muenchen</city>
          <code>D-80807</code>
          <country>Germany</country>
        </postal>
        <email>gert@space.net</email>
      </address>
    </author>
    <author fullname="Warren Kumari" initials="W." surname="Kumari">
      <organization>Google</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View</city>
	   <region>CA</region>
          <code>94043</code>
          <country>US</country>
        </postal>
        <email>warren@kumari.net</email>
      </address>
    </author>
    <author fullname="Geoff Huston" initials="G." surname="Huston">
      <organization abbrev="APNIC"/>
      <address>
        <email>gih@apnic.net</email>
        <uri>https://www.apnic.net</uri>
      </address>
    </author>
    <author fullname="Will (Shucheng) Liu" initials="W." surname="Liu">
      <organization>Huawei Technologies</organization>
      <address>
        <postal>
          <street>Bantian, Longgang District</street>
          <city>Shenzhen</city>
          <code>518129</code>
          <country>China</country>
        </postal>
        <email>liushucheng@huawei.com</email>
      </address>
    </author>
    <date month="September" year="2021"/>
    <area>Operations and Management</area>
    <workgroup>IPv6 Operations Working Group (v6ops)</workgroup>


    <abstract>
      <t>
This document summarizes the operational implications of IPv6 extension headers specified in the IPv6 protocol specification (RFC 8200) and attempts to analyze reasons why packets with IPv6 extension headers are often dropped in the public Internet.
</t>
    </abstract>
  </front>
  <middle>
    <section anchor="intro" numbered="true" toc="default">
      <name>Introduction</name>
      <t>
IPv6 extension headers (EHs) allow for the extension of the IPv6 protocol and provide support for core functionality such as IPv6 fragmentation. However, common implementation limitations suggest that EHs present a challenge for IPv6 packet routing equipment and middleboxes, and evidence exists that IPv6 packets with EHs are intentionally dropped in the public Internet in some circumstances.
</t>
      <t>This document has the following goals:
</t>
      <ul spacing="normal">
        <li>Raise awareness about the operational and security implications of IPv6 extension headers specified in <xref target="RFC8200" format="default"/> and present reasons why some networks resort to intentionally dropping packets containing IPv6 extension headers.</li>
        <li>Highlight areas where current IPv6 support by networking devices may be suboptimal, such that the aforementioned support is improved.</li>
        <li>Highlight operational issues associated with IPv6 extension headers, such that those issues are considered in IETF standardization efforts.</li>
      </ul>
      <t>
<xref target="background" format="default"/> of this document provides background information about the IPv6 packet structure and associated implications. <xref target="previous-work" format="default"/> summarizes previous work that has been carried out in the area of IPv6 extension headers. <xref target="pfe-constraints" format="default"/> discusses packet-forwarding engine constraints in contemporary routers. <xref target="inability" format="default"/> discusses why intermediate systems may need to access Layer 4 information to make a forwarding decision. Finally, <xref target="operational-implications" format="default"/> discusses operational implications of IPv6 EHs.
</t>
    </section>
    <section numbered="true" toc="default">
      <name>Terminology</name>
      <t>
This document uses the term "intermediate system" to describe both routers and middleboxes when there is no need to distinguish between the two and where the important issue is that the device being discussed forwards packets.</t>
    </section>
    <section anchor="disclaimer" numbered="true" toc="default">
      <name>Disclaimer</name>
      <t>This document analyzes the operational challenges represented by packets that employ IPv6 extension headers and documents some of the operational reasons why these packets are often dropped in the public Internet. This document is not a recommendation to drop such packets, but rather an analysis of why they are currently dropped.
</t>
    </section>
    <section anchor="background" numbered="true" toc="default">
      <name>Background Information</name>
      <t>
It is useful to compare the basic structure of IPv6 packets against that of IPv4 packets and analyze the implications of the two different packet structures.
</t>

      <t>
    IPv4 packets have a variable-length header size that allows for the
    use of IPv4 "options" -- optional information that may be of use to
    nodes processing IPv4 packets.  The IPv4 header length is specified
    in the "Internet Header Length" (IHL) field of the mandatory IPv4 header and must be in
    the range of 20 octets (the minimum IPv4 header size) to 60 octets, accommodating at most 40 octets of options. The upper-layer protocol type is specified via the "Protocol" field of the mandatory IPv4 header.
</t>
      <figure anchor="ipv4-packet">
        <name>IPv4 Packet Structure</name>
        <artwork name="" type="" align="left" alt=""><![CDATA[
               Protocol, IHL
                    +--------+
                    |        |
                    |        v
               +------//-----+------------------------+
               |             |                        |
               |    IPv4     |       Upper-Layer      |
               |    Header   |       Protocol         |
               |             |                        |
               +-----//------+------------------------+

               variable length
               <------------->
]]></artwork>
      </figure>
      <t>
IPv6 took a different approach to the IPv6 packet structure. Rather than employing a variable-length header as IPv4 does, IPv6 employs a packet structure similar to a linked list, where a mandatory fixed-length IPv6 header is followed by an arbitrary number of optional extension headers, with the upper-layer header being the last header in the IPv6 header chain. Each extension header typically specifies its length (unless it is implicit from the extension header type) and the "next header" (NH) type that follows in the IPv6 header chain.
</t>
      <figure anchor="ipv6-packet">
        <name>IPv6 Packet Structure</name>
        <artwork name="" type="" align="left" alt=""><![CDATA[
       NH          NH, EH-length      NH, EH-length
        +-------+      +------+            +-------+
        |       |      |      |            |       |
        |       v      |      v            |       v
  +-------------+-------------+-//-+---------------+--------------+
  |             |             |    |               |              |
  |    IPv6     |    Ext.     |    |     Ext.      |  Upper-Layer |
  |    header   |    Header   |    |     Header    |  Protocol    |
  |             |             |    |               |              |
  +-------------+-------------+-//-+---------------+--------------+

   fixed length    variable number of EHs & length
  <------------> <-------------------------------->
]]></artwork>
      </figure>
      <t>This packet structure has the following implications:

</t>
      <ul spacing="normal">
        <li>
          <xref target="RFC8200" format="default"/> requires the entire IPv6 header chain to be contained in the first fragment of a packet, therefore limiting the IPv6 header chain to the size of the path MTU.
</li>
        <li>Other than the path MTU constraints, there are no other limits to the number of IPv6 EHs that may be present in a packet. Therefore, there is no upper limit regarding how deep into the IPv6 packet the upper-layer protocol header may be found.
</li>
        <li>The only way for a node to obtain the upper-layer protocol
       type or find the upper-layer protocol header is to parse and
       process the entire IPv6 header chain, in sequence, starting from
       the mandatory IPv6 header until the last header in the IPv6
       header chain is found.
</li>
      </ul>
    </section>
    <section anchor="previous-work" numbered="true" toc="default">
      <name>Previous Work on IPv6 Extension Headers</name>
      <t>Some of the operational and security implications of IPv6 extension headers have been discussed in the IETF:
</t>
      <ul spacing="normal">
        <li>

          <xref target="I-D.taylor-v6ops-fragdrop" format="default"/> discusses a rationale for which operators drop IPv6 fragments.</li>
        <li>
          <xref target="I-D.wkumari-long-headers" format="default"/> discusses possible issues arising from "long" IPv6 header chains.</li>
        <li>
          <xref target="I-D.kampanakis-6man-ipv6-eh-parsing" format="default"/> describes how inconsistencies in the way IPv6 packets with extension headers are parsed by different implementations could result in evasion of security controls and presents guidelines for parsing IPv6 extension headers, with the goal of providing a common and consistent parsing methodology for IPv6 implementations.
</li>
        <li>
          <xref target="I-D.ietf-opsec-ipv6-eh-filtering" format="default"/> analyzes the security implications of IPv6 EHs, as well as the operational implications of dropping packets that employ IPv6 EHs and associated options.
</li>
        <li>
          <xref target="RFC7113" format="default"/> discusses how some popular Router Advertisement Guard (RA-Guard) implementations are subject to evasion by means of IPv6 extension headers.</li>
        <li>
          <xref target="RFC8900" format="default"/> analyzes the fragility introduced by IP fragmentation.</li>
      </ul>

      <t>A number of recent RFCs have discussed issues related to IPv6 extension headers and have specified updates to RFC 2460 <xref target="RFC2460" format="default"/> (an earlier version of the IPv6 standard). Many of these updates have now been incorporated into the current IPv6 core standard <xref target="RFC8200" format="default"/> or the IPv6 node requirements <xref target="RFC8504" format="default"/>. Namely,
      </t>

      <ul spacing="normal">
        <li>
          <xref target="RFC5095" format="default"/> discusses the security implications of Routing Header Type 0 (RHT0) and deprecates it.</li>
        <li>
          <xref target="RFC5722" format="default"/> analyzes the security implications of overlapping fragments and provides recommendations in this area.</li>
        <li>
          <xref target="RFC7045" format="default"/> clarifies how intermediate nodes should deal with IPv6 extension headers.</li>
        <li>
          <xref target="RFC7112" format="default"/> discusses the issues arising in a specific fragmentation case where the IPv6 header chain is fragmented into two or more fragments and formally forbids such fragmentation.</li>
        <li>
          <xref target="RFC6946" format="default"/> discusses a flawed (but common) processing of the so-called IPv6 "atomic fragments" and specifies improved processing of such packets.</li>
        <li>
          <xref target="RFC8021" format="default"/> deprecates the generation of IPv6 atomic fragments.</li>
        <li>
          <xref target="RFC8504" format="default"/> clarifies processing rules for packets with extension headers and also allows hosts to enforce limits on the number of options included in IPv6 EHs.</li>
        <li>
          <xref target="RFC7739" format="default"/> discusses the security implications of predictable fragment Identification values and provides recommendations for the generation of these values.</li>
        <li>
          <xref target="RFC6980" format="default"/> analyzes the security implications of employing IPv6 fragmentation with Neighbor Discovery for IPv6 and formally recommends against such usage.</li>
      </ul>

      <t>Additionally, <xref target="RFC8200" format="default"/> has relaxed the requirement that "all nodes must examine and process the Hop-by-Hop Options header" from <xref target="RFC2460" format="default"/>, by specifying that only nodes that have been explicitly configured to process the Hop-by-Hop Options header are required to do so.</t>
      <t>A number of studies have measured the extent to which packets employing IPv6 extension headers are dropped in the public Internet:

</t>
      <ul spacing="normal">
        <li>
          <xref target="PMTUD-Blackholes" format="default"/> and <xref target="Linkova-Gont-IEPG90" format="default"/> present some preliminary measurements regarding the extent to which packets containing IPv6 EHs are dropped in the public Internet.</li>
        <li>
          <xref target="RFC7872" format="default"/> presents more comprehensive results and documents the methodology used to obtain these results.</li>
        <li>
          <xref target="Huston-2017" format="default"/> and <xref target="Huston-2020" format="default"/> measure packet drops resulting from IPv6 fragmentation when communicating with DNS servers.</li>
      </ul>
    </section>
    <section anchor="pfe-constraints" numbered="true" toc="default">
      <name>Packet-Forwarding Engine Constraints</name>
      <t>

Most contemporary carrier-grade routers use dedicated hardware, e.g., Application-Specific
Integrated Circuits (ASICs) or Network Processing Units (NPUs), to determine how to forward
packets across their internal fabrics (see <xref target="IEPG94-Scudder" format="default"/> and <xref target="APNIC-Scudder" format="default"/> for details).  One common method of handling next-hop lookups is to send a small portion of the
ingress packet to a lookup engine with specialized hardware, e.g., ternary
content-addressable memory (TCAM) or reduced latency dynamic random-access memory
(RLDRAM), to determine the packet's next hop.  Technical constraints
mean that there is a trade-off between the amount of data sent to the lookup
engine and the overall packet-forwarding rate of the lookup engine.  If more data is
sent, the lookup engine can inspect further into the packet, but the overall
packet-forwarding rate of the system will be reduced.  If less data is sent, the
overall packet-forwarding rate of the router will be increased, but the packet lookup
engine may not be able to inspect far enough into a packet to determine how
it should be handled.
</t>

<aside>
<t>NOTE:</t>
<t indent="3">
For example, some contemporary high-end routers are known to inspect up to 192 bytes, while others are known to parse up to 384 bytes of header.
</t>
</aside>

      <t>If a hardware-forwarding engine on a contemporary router cannot make a
forwarding decision about a packet because critical information is not sent
to the lookup engine, then the router will normally drop the packet. <xref target="inability" format="default"/> discusses some of the reasons for which a contemporary router might need to access Layer 4 information to make a forwarding decision.</t>
      <t>
Historically, some packet-forwarding engines punted packets of this kind to
the control plane for more in-depth analysis, but this is unfeasible on most
contemporary router architectures as a result of the vast difference between the hardware-based forwarding
capacity of the router and the processing capacity of the control plane and the size of the management link that connects the control plane to the forwarding plane.  Other platforms may have a separate software-based forwarding plane that is
   distinct both from the hardware-based forwarding plane and the control
   plane. However, the limited CPU resources of this software-based
   forwarding plane, as well as the limited bandwidth of the associated
   link, results in similar throughput constraints. </t>
      <t>

   If an IPv6 header chain is sufficiently long such that it exceeds the
   packet lookup capacity of the router, the router might be unable to
   determine how the packet should be handled and thus could resort to
   dropping the packet.

</t>
      <section anchor="recirculation" numbered="true" toc="default">
        <name>Recirculation</name>
        <t>

Although type-length-value (TLV) chains are amenable to iterative processing on architectures
that have packet lookup engines with deep inspection capabilities, some
packet-forwarding engines manage IPv6 header chains using
recirculation.  This approach processes extension headers one at a time:
when processing on one extension header is completed, the packet is looped
back through the processing engine again.  This recirculation process
continues repeatedly until there are no more extension headers left to be
processed.

</t>
        <t>

Recirculation is typically used on packet-forwarding engines with limited
lookup capability, because it allows arbitrarily long header chains to be
processed without the complexity and cost associated with packet-forwarding
engines, which have deep lookup capabilities.  However, recirculation can
impact the forwarding capacity of hardware, as each packet will pass through
the processing engine multiple times.  Depending on configuration, the type
of packets being processed, and the hardware capabilities of the packet-forwarding
engine, the data-plane throughput performance on the
router might be negatively affected.

</t>
      </section>
    </section>
    <section anchor="inability" numbered="true" toc="default">
      <name>Requirement to Process Layer 3 / Layer 4 Information in Intermediate Systems</name>
      <t>The following subsections discuss some of the reasons for which intermediate systems may need to process Layer 3 / Layer 4 information to make a forwarding decision.</t>
      <section anchor="ecmp-load-balancing" numbered="true" toc="default">
        <name>ECMP and Hash-Based Load Sharing</name>
        <t>In the case of Equal Cost Multipath (ECMP) load sharing, the intermediate system
needs to make a decision regarding which of its interfaces to
use to forward a given packet.  Since round-robin usage of the links is usually
avoided to prevent packet reordering, forwarding engines need to
use a mechanism that will consistently forward the same data streams down
the same forwarding paths.  Most forwarding engines achieve this by
calculating a simple hash using an n-tuple gleaned from a combination of
Layer 2 through to Layer 4 protocol header information.  This n-tuple will
typically use the src/dst Media Access Control (MAC) addresses, src/dst IP addresses, and, if possible,
further Layer 4 src/dst port information.
</t>
        <t>In the IPv6 world, flows are expected to be identified by means of the IPv6 "Flow Label" <xref target="RFC6437" format="default"/>. Thus, ECMP and hash-based load sharing should be possible without the need to process the entire IPv6 header chain to obtain upper-layer information to identify flows. <xref target="RFC7098" format="default"/> discusses how the IPv6 Flow Label can be used to enhance Layer 3/4 load distribution and balancing for large server farms.
</t>
        <t>Historically, many IPv6 implementations failed to set the Flow Label, and hash-based ECMP/load-sharing devices also did not employ the Flow Label for performing their task. While support of <xref target="RFC6437" format="default"/> is currently widespread for current versions of all popular host implementations, there is still only marginal usage of the IPv6 Flow Label for ECMP and load balancing <xref target="Almeida-2020" format="default"/>. A contributing factor could be the issues that have been found in host implementations and middleboxes <xref target="Jaeggli-2018" format="default"/>.</t>
        <t>
Clearly, widespread support of <xref target="RFC6437" format="default"/> would relieve intermediate systems from having to process the entire IPv6 header chain, making Flow Label-based ECMP and load sharing <xref target="RFC6438" format="default"/> feasible.
</t>
        <t>
If an intermediate system cannot determine consistent n-tuples for calculating flow hashes, data streams are more likely to end up being distributed unequally across ECMP and load-shared links.  This may lead to packet drops or reduced performance.
</t>
      </section>
      <section anchor="enforcing-infrastructure-acls" numbered="true" toc="default">
        <name>Enforcing Infrastructure ACLs</name>
        <t>Infrastructure Access Control Lists (iACLs) drop unwanted packets destined
to a network's infrastructure.  Typically, iACLs are deployed because external direct access to a network's infrastructure addresses is operationally unnecessary and can be used for attacks of different sorts against router
control planes.  To this end, traffic usually needs to be differentiated on the basis of Layer 3
or Layer 4 criteria to achieve a useful balance of protection and functionality.  For example, an infrastructure may be configured with the following policy:
</t>
        <ul spacing="normal">
          <li>Permit some amount of ICMP echo (ping) traffic towards a router's
 addresses for troubleshooting.</li>
 
          <li>Permit BGP sessions on the shared network of an exchange point (potentially differentiating between the amount of packets/second permitted for established sessions and for connection establishment), but do not permit other traffic from the same peer IP addresses.</li>
        </ul>
        <t>
If a forwarding router cannot determine consistent n-tuples for calculating flow hashes, data streams are more likely to end up being distributed unequally across ECMP and load-shared links.  This may lead to packet drops or reduced performance.
</t>
        <t>
If a network cannot deploy infrastructure ACLs, then the security of the network may be compromised as a result of the increased attack surface.
</t>
      </section>
      <section anchor="ddos-management" numbered="true" toc="default">
        <name>DDoS Management and Customer Requests for Filtering</name>
        <t>The case of customer Distributed Denial-of-Service (DDoS) protection and edge-to-core customer protection
filters is similar in nature to the iACL protection.  Similar
to iACL protection, Layer 4 ACLs generally need to be applied as close to the
edge of the network as possible, even though the intent is usually to protect the
customer edge rather than the provider core.  Application of Layer 4 DDoS protection
to a network edge is often automated using BGP Flowspec <xref target="RFC8955" format="default"/> <xref target="RFC8956" format="default"/>.
</t>
        <t>For example, a website that normally only handles traffic on TCP ports
80 and 443 could be subject to a volumetric DDoS attack using NTP and DNS
packets with a randomized source IP address, thereby rendering
source-based remote triggered black hole <xref target="RFC5635"/>
mechanisms useless.  In this situation, ACLs that provide DDoS protection could be configured to
block all UDP traffic at the network edge without impairing the web server
functionality in any way.  Thus, being able to block arbitrary
protocols at the network edge can avoid DDoS-related problems both in the provider
network and on the customer edge link.
</t>
      </section>
      <section anchor="nids" numbered="true" toc="default">
        <name>Network Intrusion Detection and Prevention</name>

        <t>Network Intrusion Detection Systems (NIDS) examine network traffic and try to identify traffic patterns that can be correlated to network-based attacks. These systems generally attempt to inspect application-layer traffic (if possible) but, at the bare minimum, inspect Layer 4 flows. When attack activity is inferred, the operator is notified of the potential intrusion attempt.
</t>
        <t>Network Intrusion Prevention Systems (IPS) operate similarly to NIDSs, but they can also prevent intrusions by reacting to detected attack attempts by e.g., triggering packet filtering policies at firewalls and other devices.</t>
        <t>Use of extension headers can be problematic for NIDS/IPS, since:
</t>
        <ul spacing="normal">
          <li>Extension headers increase the complexity of resulting traffic and the associated work and system requirements to process it.</li>
          <li>Use of unknown extension headers can prevent a NIDS or IPS from processing Layer 4 information.</li>
          <li>Use of IPv6 fragmentation requires a stateful fragment-reassembly operation, even for decoy traffic employing forged source addresses (see, e.g., <xref target="nmap" format="default"/>).</li>
        </ul>
        <t>As a result, in order to increase the efficiency or effectiveness of these systems, packets employing IPv6 extension headers are often dropped at the network ingress point(s) of networks that deploy these systems.</t>
      </section>
      <section anchor="firewalls" numbered="true" toc="default">
        <name>Firewalling</name>
        <t>Firewalls enforce security policies by means of packet filtering. These systems usually inspect Layer 3 and Layer 4 traffic but can often also examine application-layer traffic flows.</t>
        <t>As with a NIDS or IPS (<xref target="nids" format="default"/>), use of IPv6 extension headers can represent a challenge to network firewalls, since:
</t>
        <ul spacing="normal">
          <li>Extension headers increase the complexity of resulting traffic and the associated work and system requirements to process it, as outlined in <xref target="Zack-FW-Benchmark" format="default"/>.</li>
          <li>Use of unknown extension headers can prevent firewalls from processing Layer 4 information.</li>
          <li>Use of IPv6 fragmentation requires a stateful fragment-reassembly operation, even for decoy traffic employing forged source addresses (see, e.g., <xref target="nmap" format="default"/>).</li>
        </ul>
        <t>Additionally, a common firewall filtering policy is the so-called "default deny", where all traffic is blocked (by default), and only expected traffic is added to an "allow/accept list".</t>
        <t>As a result, packets employing IPv6 extension headers are often
dropped by network firewalls, either because of the challenges
represented by extension headers or because the use of IPv6 extension
headers has not been explicitly allowed.</t>
        <t>Note that although the data presented in <xref target="Zack-FW-Benchmark" format="default"/> was several years old at the time of publication of this document, many contemporary firewalls use comparable hardware and software architectures; consequently, the conclusions of this benchmark are still relevant, despite its age.</t>
      </section>
    </section>
    <section anchor="operational-implications" numbered="true" toc="default">
      <name>Operational and Security Implications</name>

<section anchor="inability-layer-4-info" numbered="true" toc="default">
        <name>Inability to Find Layer 4 Information</name>
        <t>As discussed in <xref target="inability" format="default"/>, intermediate systems that need to find the Layer 4 header must process the entire IPv6 header chain.  When such devices are unable to obtain the required information, the forwarding device has the option to drop the packet unconditionally, forward the packet unconditionally, or process the packet outside the normal forwarding path.  Forwarding packets unconditionally will usually allow for the circumvention of security controls (see, e.g., <xref target="firewalls" format="default"/>), while processing packets outside of the normal forwarding path will usually open the door to Denial-of-Service (DoS) attacks (see, e.g., <xref target="pfe-constraints" format="default"/>). Thus, in these scenarios, devices often simply resort to dropping such packets unconditionally.
</t>
      </section>
      <section anchor="route-processor-protection" numbered="true" toc="default">
        <name>Route-Processor Protection</name>
        <t>Most contemporary carrier-grade routers have a fast hardware-assisted forwarding plane
and a loosely coupled control plane, connected together with a link that
has much less capacity than the forwarding plane could handle.  Traffic
differentiation cannot be performed by the control plane because this would
overload the internal link connecting the forwarding plane to the control
plane.
</t>
        <t>The Hop-by-Hop Options header has been particularly challenging since, in most circumstances, the corresponding packet is punted to the control plane for processing. As a result, many operators drop IPv6 packets containing this extension header <xref target="RFC7872" format="default"/>. <xref target="RFC6192" format="default"/> provides advice regarding protection of a router's control plane.</t>
      </section>
      <section anchor="finer-grained" numbered="true" toc="default">
        <name>Inability to Perform Fine-Grained Filtering</name>
        <t>Some intermediate systems do not have support for fine-grained filtering of IPv6 extension headers. For example, an operator that wishes to drop packets containing RHT0 may only be able to filter on the extension header type (Routing Header). This could result in an operator enforcing a coarser filtering policy (e.g., "drop all packets containing a Routing Header" vs. "only drop packets that contain a Routing Header Type 0").
</t>

</section>
      <section anchor="security-implications" numbered="true" toc="default">
        <name>Security Concerns Associated with IPv6 Extension Headers</name>
        <t>The security implications of IPv6 extension headers generally fall into one or more of these categories:
</t>
        <ul spacing="normal">
          <li>Evasion of security controls</li>
          <li>DoS due to processing requirements</li>
          <li>DoS due to implementation errors</li>
          <li>Issues specific to the extension header type</li>
        </ul>

<t>Unlike IPv4 packets where the upper-layer protocol can be trivially found by means of the IHL field of the IPv4 header, the structure of IPv6 packets is more flexible and complex.  This can represent a challenge for devices that need to find this information, since locating upper-layer protocol information requires that all IPv6 extension headers be examined. In turn, this presents implementation difficulties, since some packet-filtering mechanisms that require upper-layer information (even if just the upper-layer protocol type) can be trivially circumvented by inserting IPv6 extension headers between the main IPv6 header and the upper-layer protocol header. <xref target="RFC7113" format="default"/> describes this issue for the RA-Guard case, but the same techniques could be employed to circumvent other IPv6 firewall and packet-filtering mechanisms.  Additionally, implementation inconsistencies in packet-forwarding engines can result in evasion of security controls <xref target="I-D.kampanakis-6man-ipv6-eh-parsing" format="default"/> <xref target="Atlasis2014" format="default"/> <xref target="BH-EU-2014" format="default"/>.
</t>
        <t>Sometimes, packets with IPv6 extension headers can impact throughput performance on intermediate systems. Unless appropriate mitigations are put in place (e.g., packet dropping and/or rate limiting), an attacker could simply send a large amount of IPv6 traffic employing IPv6 extension headers with the purpose of performing a DoS attack (see Sections <xref target="recirculation" format="counter"/> and <xref target="operational-implications" format="counter"/> for further details). The extent to which performance is affected on these devices is implementation dependent.
</t>

<aside>
<t>NOTE:</t>
<t indent="3">
In the most trivial case, a packet that includes a Hop-by-Hop Options header might go through the slow forwarding path, to be processed by the router's CPU. Alternatively, a router configured to enforce an ACL based on upper-layer information (e.g., upper-layer protocol type or TCP Destination Port) may need to process the entire IPv6 header chain in order to find the required information, thereby causing the packet to be processed in the slow path <xref target="Cisco-EH-Cons" format="default"/>. We note that, for obvious reasons, the aforementioned performance issues can affect devices such as firewalls, NIDSs, etc. <xref target="Zack-FW-Benchmark" format="default"/>. 
</t>
</aside>

        <t>IPv6 implementations, like all other software, tend to mature with time and wide-scale deployment. While the IPv6 protocol itself has existed for over 20 years, serious bugs related to IPv6 extension header processing continue to be discovered (see, e.g., <xref target="Cisco-Frag" format="default"/>, <xref target="Microsoft-SA" format="default"/>, and <xref target="FreeBSD-SA" format="default"/>).  Because there is currently little operational reliance on IPv6 extension headers, the corresponding code paths are rarely exercised, and there is the potential for bugs that still remain to be discovered in some implementations.</t>
        <t>The IPv6 Fragment Header is employed for the fragmentation and reassembly of IPv6 packets. While many of the security implications of the fragmentation/reassembly mechanism are known from the IPv4 world, several related issues have crept into IPv6 implementations. These range from DoS attacks to information leakages, as discussed in <xref target="RFC7739" format="default"/>, <xref target="Bonica-NANOG58" format="default"/>, and <xref target="Atlasis2012" format="default"/>.
</t>
      </section>
    </section>
    <section anchor="iana-cons" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>This document has no IANA actions.
</t>
    </section>
    <section numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>The security implications of IPv6 extension headers are discussed in <xref target="security-implications" format="default"/>.  This document does not introduce any new security issues.
</t>
    </section>
  </middle>
  <back>
<displayreference target="I-D.ietf-opsec-ipv6-eh-filtering" to="IPV6-EH"/>
<displayreference target="I-D.kampanakis-6man-ipv6-eh-parsing" to="PARSING"/>
<displayreference target="I-D.taylor-v6ops-fragdrop" to="OPERATORS"/>
<displayreference target="I-D.wkumari-long-headers" to="HEADERS"/>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6946.xml"/>

 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5095.xml"/>

 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5722.xml"/>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7112.xml"/>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8021.xml"/>

 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8200.xml"/>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8504.xml"/>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6980.xml"/>
      </references>
      <references>
        <name>Informative References</name>

 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2460.xml"/>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5635.xml"/>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6192.xml"/>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6437.xml"/>

 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6438.xml"/>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7098.xml"/>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7045.xml"/>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7113.xml"/>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7739.xml"/>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7872.xml"/>

 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8900.xml"/>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8955.xml"/>
 <xi:include                                                             
href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8956.xml"/>


<reference anchor='I-D.ietf-opsec-ipv6-eh-filtering'>
<front>
<title>Recommendations on the Filtering of IPv6 Packets Containing IPv6 Extension Headers at Transit Routers</title>
<author initials='F' surname='Gont' fullname='Fernando Gont'>
<organization />
</author>
<author initials='W' surname='Liu' fullname='Will Liu'>
<organization />
</author>
<date year='2021' month='June' day='3' />
</front>
<seriesInfo name='Internet-Draft' value='draft-ietf-opsec-ipv6-eh-filtering-08'/>
<format type='TXT' target='https://www.ietf.org/internet-drafts/draft-ietf-opsec-ipv6-eh-filtering-08.txt'/>
</reference>

<reference anchor='I-D.taylor-v6ops-fragdrop'>
<front>
<title>Why Operators Filter Fragments and What It Implies</title>

<author initials='J' surname='Jaeggli' fullname='Joel Jaeggli'>
    <organization />
</author>

<author initials='L' surname='Colitti' fullname='Lorenzo Colitti'>
    <organization />
</author>

<author initials='W' surname='Kumari' fullname='Warren Kumari'>
    <organization />
</author>

<author initials='E' surname='Vyncke' fullname='Eric Vyncke'>
    <organization />
</author>

<author initials='M' surname='Kaeo' fullname='Merike Kaeo'>
    <organization />
</author>

<author initials='T' surname='Taylor' fullname='Tom Taylor' role="editor">
    <organization />
</author>

<date month='December' day='3' year='2013' />
</front>

<seriesInfo name='Internet-Draft' value='draft-taylor-v6ops-fragdrop-02' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-taylor-v6ops-fragdrop-02.txt' />
</reference>



<xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.wkumari-long-headers.xml"/>


<reference anchor='I-D.kampanakis-6man-ipv6-eh-parsing'>
<front>
<title>Implementation Guidelines for Parsing IPv6 Extension Headers</title>
<author initials='P' surname='Kampanakis' fullname='Panos Kampanakis'>
    <organization />
</author>
<date month='August' day='5' year='2014' />
</front>
<seriesInfo name='Internet-Draft' value='draft-kampanakis-6man-ipv6-eh-parsing-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-kampanakis-6man-ipv6-eh-parsing-01.txt' />
</reference>

        <reference anchor="Atlasis2014" target="http://www.insinuator.net/2014/05/a-novel-way-of-abusing-ipv6-extension-headers-to-evade-ipv6-security-devices/">
          <front>
            <title>A Novel Way of Abusing IPv6 Extension Headers to Evade IPv6 Security Devices</title>
            <author initials="A." surname="Atlasis" fullname="Antonios Atlasis">
              <organization/>
            </author>
            <date month="May" year="2014"/>
          </front>
        </reference>
	
        <reference anchor="nmap" target="https://nmap.org/book/man-bypass-firewalls-ids.html">
          <front>
            <title>Firewall/IDS Evasion and Spoofing</title>
            <author fullname="Gordon 'Fyodor' Lyon" initials="G." surname="Lyon">
            </author>
            <date/>
          </front>
          <refcontent>Chapter 15. Nmap Reference Guide</refcontent>
        </reference>

	
        <reference anchor="Huston-2017" target="https://blog.apnic.net/2017/08/22/dealing-ipv6-fragmentation-dns/">
          <front>
            <title>Dealing with IPv6 fragmentation in the DNS</title>
            <author fullname="Geoff Huston" initials="G." surname="Huston">
              <organization abbrev="APNIC"/>
            </author>
            <date year="2017" month="August"/>
          </front>
          <refcontent>APNIC Blog</refcontent>
	</reference>

	
        <reference anchor="Huston-2020" target="https://www.cmand.org/workshops/202006-v6/slides/2020-06-16-xtn-hdrs.pdf">
          <front>
            <title>Measurement of IPv6 Extension Header Support</title>
            <author fullname="Geoff Huston" initials="G." surname="Huston">
              <organization abbrev="APNIC"/>
            </author>
            <date year="2020" month="June"/>
          </front>
          <refcontent>NPS/CAIDA 2020 Virtual IPv6 Workshop</refcontent>
        </reference>

	
        <reference anchor="Jaeggli-2018" target="https://blog.apnic.net/2018/01/11/ipv6-flow-label-misuse-hashing/">
          <front>
            <title>IPv6 flow label: misuse in hashing</title>
            <author fullname="Joel Jaeggli" initials="J." surname="Jaeggli">
    </author>
            <date year="2018" month="January"/>
          </front>
          <refcontent>APNIC Blog</refcontent>
        </reference>

        <reference anchor="Almeida-2020" target="https://homepages.dcc.ufmg.br/~cunha/papers/almeida20infocom-mca.pdf">
          <front>
            <title>Classification of Load Balancing in the Internet</title>
            
         
            <author fullname="Rafael Almeida" initials="R." surname="Almeida">
              <organization abbrev="UFMG"/>
            </author>

            <author fullname="Italo Cunha" initials="I." surname="Cunha">
              <organization abbrev="UFMG"/>
            </author>

            <author fullname="Renata Teixeira" initials="R" surname="Teixeira">
              <organization abbrev="INRIA"/>
            </author>
               
            <author fullname="Darryl Veitch" initials="D." surname="Veitch">
              <organization abbrev="UTS"/>
            </author>
            
            <author fullname="Christophe Diot" initials="C." surname="Diot">
              <organization abbrev="Google"/>
            </author>
            
            <date year="2020" month="July"/>
          </front>
          <refcontent>IEEE INFOCOM 2020</refcontent>
<seriesInfo name="DOI" value="10.1109/INFOCOM41043.2020.9155387"/>
        </reference>

	
        <reference anchor="BH-EU-2014" target="https://www.ernw.de/download/eu-14-Atlasis-Rey-Schaefer-briefings-Evasion-of-HighEnd-IPS-Devices-wp.pdf">
          <front>
            <title>Evasion of High-End IDPS Devices at the IPv6 Era</title>
            <author initials="A." surname="Atlasis" fullname="Antonios Atlasis">
              <organization/>
            </author>
            <author initials="E." surname="Rey" fullname="Enno Rey">
              <organization/>
            </author>
            <author initials="R." surname="Schaefer" fullname="Rafael Schaefer">
              <organization/>
            </author>
            <date year="2014"/>
          </front>
          <refcontent>Black Hat Europe 2014</refcontent>
        </reference>

	
        <reference anchor="Atlasis2012" target="https://void.gr/kargig/ipv6/bh-eu-12-Atlasis-Attacking_IPv6-Slides.pdf">
          <front>
            <title>Attacking IPv6 Implementation Using Fragmentation</title>
            <author initials="A." surname="Atlasis" fullname="Antonios Atlasis">
              <organization/>
            </author>
            <date month="March" year="2012"/>
          </front>
          <refcontent>Black Hat Europe 2012</refcontent>
        </reference>

        <reference anchor="Linkova-Gont-IEPG90" target="http://www.iepg.org/2014-07-20-ietf90/iepg-ietf90-ipv6-ehs-in-the-real-world-v2.0.pdf">
          <front>
            <title>IPv6 Extension Headers in the Real World v2.0</title>
            <author initials="J." surname="Linkova" fullname="Jen Linkova">
              <organization/>
            </author>
            <author initials="F." surname="Gont" fullname="Fernando Gont">
              <organization/>
            </author>
            <date year="2014" month="July"/>
          </front>
          <refcontent>IEPG 90</refcontent>
        </reference>
	
        <reference anchor="IEPG94-Scudder" target="http://www.iepg.org/2015-11-01-ietf94/IEPG-RouterArchitecture-jgs.pdf">
          <front>
            <title>Modern Router Architecture for Protocol Designers</title>
            <author initials="B." surname="Petersen" fullname="Brian Petersen">
              <organization>Juniper Networks</organization>
            </author>
            <author initials="J." surname="Scudder" fullname="John Scudder">
              <organization>Juniper Networks</organization>
            </author>
            <date year="2015" month="November"/>
          </front>
          <refcontent>IEPG 94</refcontent>
        </reference>

	
        <reference anchor="APNIC-Scudder" target="https://blog.apnic.net/2020/06/04/modern-router-architecture-and-ipv6/">
          <front>
            <title>Modern router architecture and IPv6</title>
            <author initials="J." surname="Scudder" fullname="John Scudder">
              <organization>Juniper Networks</organization>
            </author>
            <date year="2020" month="June"/>
          </front>
<refcontent>APNIC Blog</refcontent>
        </reference>

        <reference anchor="Bonica-NANOG58" target="https://www.nanog.org/sites/default/files/mon.general.fragmentation.bonica.pdf">
          <front>
            <title>IPv6 Fragmentation: The Case For Deprecation</title>
            <author initials="R." surname="Bonica" fullname="Ron Bonica">
              <organization/>
            </author>
            <date year="2013" month="June"/>
          </front>
          <refcontent>NANOG 58</refcontent>
        </reference>
	
        <reference anchor="Cisco-Frag" target="http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20150611-iosxr">
          <front>
            <title>Cisco IOS XR Software Crafted IPv6 Packet Denial of Service Vulnerability</title>
            <author>
              <organization>Cisco</organization>
            </author> 
            <date month="June" year="2015"/>
          </front>
        </reference>

	
        <reference anchor="FreeBSD-SA" target="https://www.freebsd.org/security/advisories/FreeBSD-SA-20:24.ipv6.asc">
          <front>
            <title>IPv6 Hop-by-Hop options use-after-free bug</title>
            <author>
              <organization>The FreeBSD Project</organization>
            </author>
            <date month="September" year="2020"/>
          </front>
        </reference>

	
        <reference anchor="Microsoft-SA" target="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-24094">
          <front>
            <title>Windows TCP/IP Remote Code Execution Vulnerability</title>
            <author>
              <organization>Microsoft</organization>
            </author>
            <date month="February" year="2021"/>
          </front>
	 <refcontent>CVE-2021-24094</refcontent>
        </reference>

	
        <reference anchor="Cisco-EH-Cons" target="http://www.cisco.com/en/US/technologies/tk648/tk872/technologies_white_paper0900aecd8054d37d.pdf">
          <front>
            <title>IPv6 Extension Headers Review and Considerations</title>
            <author>
              <organization>Cisco</organization>
            </author>
            <date month="October" year="2006"/>
          </front>
        </reference>

	
        <reference anchor="Zack-FW-Benchmark" target="https://www.ipv6hackers.org/files/meetings/ipv6-hackers-1/zack-ipv6hackers1-firewall-security-assessment-and-benchmarking.pdf">
          <front>
            <title abbrev="Firewall Benchmarking">Firewall Security Assessment and Benchmarking IPv6 Firewall Load Tests</title>
            <author initials="E." surname="Zack" fullname="Eldad Zack">
  </author>
            <date year="2013" month="June"/>
          </front>
          <refcontent>IPv6 Hackers Meeting #1</refcontent>
	</reference>

	
        <reference anchor="PMTUD-Blackholes" target="http://www.nlnetlabs.nl/downloads/publications/pmtu-black-holes-msc-thesis.pdf">
          <front>
            <title>Discovering Path MTU black holes on the Internet using RIPE Atlas</title>
            <author initials="M." surname="De Boer" fullname="Maikel De Boer">
              <organization/>
            </author>
            <author initials="J." surname="Bosma" fullname="Jeffrey Bosma">
              <organization/>
            </author>
            <date month="July" year="2012"/>
          </front>
	 <refcontent>University of Amsterdam, MSc. Systems &amp; Network Engineering</refcontent>
        </reference>
      </references>
    </references>
    <section numbered="false" toc="default">
      <name>Acknowledgements</name>
      <t>The authors would like to thank (in alphabetical order) <contact fullname="Mikael Abrahamsson"/>, <contact fullname="Fred Baker"/>, <contact fullname="Dale W. Carder"/>, <contact fullname="Brian Carpenter"/>, <contact fullname="Tim Chown"/>, <contact fullname="Owen DeLong"/>, <contact fullname="Gorry Fairhurst"/>, <contact fullname="Guillermo Gont"/>, <contact fullname="Tom Herbert"/>, <contact fullname="Lee Howard"/>, <contact fullname="Tom Petch"/>, <contact fullname="Sander Steffann"/>, <contact fullname="Eduard Vasilenko"/>, <contact fullname="Éric Vyncke"/>, <contact fullname="Rob Wilton"/>, <contact fullname="Jingrong Xie"/>, and <contact fullname="Andrew Yourtchenko"/> for providing valuable comments on earlier draft versions of this document. </t>
      <t><contact fullname="Fernando Gont"/> would like to thank <contact fullname="Jan Zorz"/> / Go6 Lab <eref brackets="angle" target="https://go6lab.si/"/>, <contact fullname="Jared Mauch"/>, and <contact fullname="Sander Steffann"/> <eref brackets="angle" target="https://steffann.nl/"/> for providing access to systems and networks that were employed to perform experiments and measurements involving packets with IPv6 extension headers.</t>
    </section>

  </back>
</rfc>
