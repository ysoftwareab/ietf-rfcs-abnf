<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902"
     updates="2563" obsoletes="" category="std"
     docName="draft-ietf-dhc-v6only-08" number="8925" submissionType="IETF"
     consensus="true"  xml:lang="en" tocInclude="true" tocDepth="4" symRefs="true" sortRefs="true" version="3">

<!-- xml2rfc v2v3 conversion 2.47.0 -->

  <front>
    <title>IPv6-Only Preferred Option for DHCPv4</title>
    <seriesInfo name="RFC" value="8925"/>
    <author fullname="Lorenzo Colitti" initials="L." surname="Colitti">
      <organization>Google</organization>
      <address>
        <postal>
          <street>Shibuya 3-21-3</street>
          <region>Shibuya, Tokyo</region>
          <code>150-0002</code>
          <country>Japan</country>
        </postal>
        <email>lorenzo@google.com</email>
      </address>
    </author>
    <author fullname="Jen Linkova" initials="J." surname="Linkova">
      <organization>Google</organization>
      <address>
        <postal>
          <street>1 Darling Island Rd</street>
          <city>Pyrmont</city>
          <region>NSW</region>
          <code>2009</code>
          <country>Australia</country>
        </postal>
        <email>furry@google.com</email>
      </address>
    </author>
    <author fullname="Michael C. Richardson" initials="M." surname="Richardson">
      <organization abbrev="Sandelman">Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>https://www.sandelman.ca/</uri>
      </address>
    </author>
    <author fullname="Tomek Mrugalski" initials="T." surname="Mrugalski">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>PO Box 360</street>
          <city>Newmarket</city>
          <region>NH</region>
          <code>03857</code>
          <country>United States of America</country>
        </postal>
        <email>tomasz.mrugalski@gmail.com</email>
      </address>
    </author>
    <date month="October" year="2020"/>

    <abstract>
      <t>
          This document specifies a DHCPv4 option to indicate that a host supports an IPv6-only mode and is willing to forgo obtaining an IPv4 address if the network provides IPv6 connectivity.
          It also updates RFC 2563 to specify DHCPv4 server behavior when the server receives a DHCPDISCOVER not containing the Auto-Configure option but containing the new option defined in this document.
      </t>
    </abstract>
  </front>
  <middle>
    <section numbered="true" toc="default">
      <name>Introduction</name>
      <t>
          One of the biggest challenges of deploying IPv6-only LANs is that
          such networks might contain a rather heterogeneous collection of hosts.
          While some hosts are capable of operating in IPv6-only mode (either
          because the OS and all applications are IPv6-only capable or because
          the host has some form of 464XLAT <xref target="RFC6877"
          format="default"/> deployed), others might still have IPv4 dependencies and need IPv4 addresses to operate properly.
          To incrementally roll out IPv6-only, network operators might need to provide IPv4 on demand, whereby a host receives an IPv4 address if it needs it, while IPv6-only-capable hosts (such as modern mobile devices) are not allocated IPv4 addresses.
Traditionally, that goal is achieved by placing IPv6-only-capable devices in
a dedicated IPv6-only network segment or Wi-Fi Service Set Identifier (SSID),
while dual-stack devices reside in another network with IPv4 and DHCPv4
enabled. However, such an approach has a number of drawbacks, including, but not
limited to, the following:
      </t>
      <ul spacing="normal">
        <li>
          Doubling the number of network segments leads to operational
          complexity and impact on performance -- for instance, due to high
          memory utilization caused by an increased number of Access Control
          List (ACL) entries.
          </li>
        <li>
          Placing a host in the correct network segment is problematic.
          For example, in the case of 802.11 Wi-Fi, the user might select the wrong SSID.
          In the case of wired 802.1x authentication, the authentication
          server might not have all the information required to make the
          correct decision and choose between an IPv6-only VLAN and a dual-stack VLAN.
          </li>
      </ul>
      <t>
          It would be beneficial for IPv6 deployment if operators could implement IPv6-mostly (or IPv4-on-demand) segments where IPv6-only hosts coexist with legacy dual-stack devices.
          The trivial solution of disabling the IPv4 stack on IPv6-only-capable hosts is not feasible, as those clients must be able to operate on IPv4-only networks as well.
          While IPv6-only-capable devices might use a heuristic approach to
          learning if the network provides IPv6-only functionality and stop
          using IPv4 if it does, such an approach might be undesirable in practice.
          One important reason is that when a host connects to a network, it does not know whether the network is IPv4-only, dual-stack, or IPv6-only.
          To ensure that connectivity over whatever protocol is present becomes available as soon as possible, the host usually starts configuring both IPv4 and IPv6 immediately.
          If hosts were to delay requesting IPv4 until IPv6 reachability is confirmed, that would penalize IPv4-only and dual-stack networks, which does not seem practical.
          Requesting IPv4 and then releasing it later, after IPv6 reachability
          is confirmed, might cause errors that are visible to users, as it would be
          disruptive for applications that have already started using the assigned IPv4 address.
          Instead, it would be useful to have a mechanism that would allow a host to indicate that its request for an IPv4 address is optional and a network to signal that IPv6-only functionality (such as NAT64 <xref target="RFC6146" format="default"/>) is available.
          This document provides such a solution via a new DHCPv4 option that
          a client uses to indicate that it does not need an IPv4 address if
          the network provides IPv6-only connectivity (as NAT64 and DNS64).
If the particular network segment provides IPv4 on demand, such clients would
not be supplied with IPv4 addresses, while IPv4 addresses would be provided on IPv4-only or dual-stack segments without NAT64 services.
      </t>
      <t>
          <xref target="RFC2563" format="default"/> introduced the Auto-Configure DHCPv4 option and describes DHCPv4 server behavior if no address is chosen for a host. This document updates <xref target="RFC2563" format="default"/> to modify server behavior if the DHCPOFFER contains the IPv6-Only Preferred option.
      </t>
      <section numbered="true" toc="default">
        <name>Requirements Language</name>
       <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
       "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>",
       "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>",
       "<bcp14>SHOULD NOT</bcp14>",
       "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
       "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document
       are to be interpreted as described in BCP&nbsp;14
       <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only
       when, they appear in all capitals, as shown here.</t>
      </section>
      <section numbered="true" toc="default">
        <name>Terminology</name>
        <dl newline="false" spacing="normal">
        <dt>Dual-stack network or device:</dt>
        <dd>A network or device that has both versions of the Internet Protocol (IPv4 and IPv6) enabled and operational.</dd>
        <dt>IPv6-only-capable host:</dt><dd>A host that does not require an IPv4 address and can operate on IPv6-only networks.
            More precisely, IPv6-only capability is specific to a given
            interface of the host: if some applications on a host require IPv4
            and the 464XLAT CLAT (customer-side translator) <xref target="RFC6877"
            format="default"/> is only enabled on one interface, the host is
            IPv6-only capable if connected to a NAT64 network via that
            interface. This document implies that IPv6-only-capable hosts
            reach IPv4-only destinations via a NAT64 service provided by the
            network. <xref target="v6onlydef" format="default"/> discusses
            hypothetical scenarios for other transition technologies being used.</dd>
        <dt>IPv4-requiring host:</dt><dd>A host that is not IPv6-only capable and cannot operate in an IPv6-only network providing NAT64 service.</dd>
        <dt>IPv4 on demand:</dt><dd>A deployment scenario where end hosts are
        expected to operate in IPv6-only mode by default and IPv4 addresses
        can be assigned to some hosts if those hosts explicitly opt in to receive IPv4 addresses.
</dd>
        <dt>IPv6-mostly network:</dt><dd>A network that provides NAT64
        (possibly with DNS64) service as well as IPv4 connectivity and allows
        the coexistence of IPv6-only, dual-stack, and IPv4-only hosts on the same segment.
            Such a deployment scenario allows operators to incrementally turn off IPv4 on end hosts, while still providing IPv4 to devices that require IPv4 to operate.
            But IPv6-only-capable devices need not be assigned IPv4 addresses.</dd>
        <dt>IPv6-only mode:</dt><dd>A mode of operation where a host acts as an IPv6-only-capable host and does not have IPv4 addresses assigned (except that IPv4 link-local addresses <xref target="RFC3927" format="default"/> may have been configured).</dd>
        <dt>IPv6-only network:</dt><dd>A network that does not provide routing functionality for IPv4 packets.
            Such networks may or may not allow intra-LAN IPv4 connectivity.
            An IPv6-only network usually provides access to IPv4-only resources via NAT64 <xref target="RFC6146" format="default"/>.</dd>
        <dt>NAT64:</dt><dd>Network Address and Protocol Translation from IPv6 Clients to IPv4 Servers <xref target="RFC6146" format="default"/>.</dd>
        <dt>Router Advertisement (RA):</dt><dd>A message used by IPv6 routers to advertise their presence, together
            with various link and Internet parameters <xref target="RFC4861" format="default"/>.</dd>
        <dt>DNS64:</dt><dd>A mechanism for synthesizing AAAA records from A records <xref target="RFC6147" format="default"/>.</dd>
        <dt>Network attachment event:</dt><dd>A link up event, as described by
        <xref target="RFC4957" format="default"/>, that results in a host detecting an available network.</dd>
        <dt>Disabling the IPv4 stack on the host interface:</dt><dd>
        <t>Host behavior when the host</t>
        <ul>
          <li>does not send any IPv4 packets from that interface,</li>
          <li>drops all IPv4 packets received on that interface, and</li>
          <li>does not forward any IPv4 packets to that interface.</li>
        </ul>
      </dd>
    </dl>
      </section>
    </section>
    <section numbered="true" toc="default">
      <name>Reasons to Signal IPv6-Only Support in DHCPv4 Packets</name>
      <t>
          For networks that contain a mix of both IPv6-only-capable hosts and
          IPv4-requiring hosts and that utilize DHCPv4 for configuring the IPv4 network stack on hosts, it seems natural to leverage the same protocol to signal that IPv4 is discretional on a given segment.
          An ability to remotely disable IPv4 on a host can be seen as a new denial-of-service attack vector.
          The approach provided in this document limits the attack surface to DHCPv4-related
          attacks without introducing new vulnerable elements.
      </t>
      <t>
          Another benefit of using DHCPv4 for signaling is that IPv4 will be disabled only if both the client and the server indicate IPv6-only capability.
          It allows IPv6-only-capable hosts to turn off IPv4 only upon receiving an explicit signal from the network and operate in dual-stack or IPv4-only mode otherwise.
          In addition, the mechanism defined in this document does not introduce any
          additional delays to the process of configuring an IP stack on
          hosts.
          If the network does not support IPv6-only/IPv4-on-demand mode, an
          IPv6-only-capable host would configure an IPv4 address as quickly as
          any other host.
      </t>
      <t>
          Being a client/server protocol, DHCPv4 allows IPv4 to be selectively disabled on a per-host basis on a given network segment.
          The coexistence of IPv6-only, dual-stack, and even IPv4-only hosts on the same LAN would not only allow network administrators to preserve scarce IPv4 addresses but would also drastically simplify incremental deployment of IPv6-only networks, positively impacting IPv6 adoption.
      </t>
    </section>
    <section numbered="true" toc="default">
      <name>IPv6-Only Preferred Option</name>
      <section anchor="Format" numbered="true" toc="default">
        <name>Option Format</name>
        <figure anchor="fig_Option">
          <name>IPv6-Only Preferred Option Format</name>
          <artwork align="center" name="" type="" alt=""><![CDATA[
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |     Code      |   Length      |           Value               |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |         Value (cont.)         |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+]]></artwork>
        </figure>
        <t>Fields:</t>
        <dl newline="false" spacing="normal">
              <dt>Code:</dt>

              <dd>8-bit identifier of the IPv6-Only Preferred option code as
              assigned by IANA: 108.
            The client includes the Code in the Parameter Request List in DHCPDISCOVER and DHCPREQUEST messages as described in <xref target="v4client" format="default"/>.</dd>
              <dt>Length:</dt>
              <dd>8-bit unsigned integer.  The length of the option, excluding the Code and Length Fields.  The server <bcp14>MUST</bcp14> set the length field to 4. The client <bcp14>MUST</bcp14> ignore the IPv6-Only Preferred option if the length field value is not 4.</dd>
              <dt>Value:</dt>
              <dd><t>32-bit unsigned integer.
            The number of seconds for which the client should disable DHCPv4 (V6ONLY_WAIT configuration variable).
            If the server pool is explicitly configured with a V6ONLY_WAIT timer, the server <bcp14>MUST</bcp14> set the field to that configured value. Otherwise, the server <bcp14>MUST</bcp14> set it to zero.
            The client <bcp14>MUST</bcp14> process that field as described in <xref target="v4client" format="default"/>.</t>
            <t>The client never sets this field, as it never sends the full option but includes the option code in the Parameter Request List as described in <xref target="v4client" format="default"/>.</t></dd>
        </dl>
      </section>
      <section anchor="v4client" numbered="true" toc="default">
        <name>DHCPv4 Client Behavior</name>
        <t>
        A DHCPv4 client <bcp14>SHOULD</bcp14> allow a device
        administrator to configure IPv6-only capability either for a specific
        interface (to indicate that the device is IPv6-only capable if
        connected to a NAT64 network via that interface) or for all interfaces.

        If only a specific interface is configured as IPv6-only capable, the
        DHCPv4 client <bcp14>MUST NOT</bcp14> consider the host an
        IPv6-only-capable host for the purpose of sending/receiving DHCPv4 packets over any other interfaces.
        </t>
        <t>
             The DHCPv4 client on an IPv4-requiring host <bcp14>MUST
	     NOT</bcp14> include the IPv6-Only Preferred option code in the Parameter Request List of any DHCPv4 packets and <bcp14>MUST</bcp14> ignore that option in packets received from DHCPv4 servers.
        </t>
        <t>
             DHCPv4 clients running on IPv6-only-capable hosts <bcp14>SHOULD</bcp14> include the IPv6-Only Preferred option code in the Parameter Request List in DHCPDISCOVER and DHCPREQUEST messages for interfaces so enabled and follow the processing as described below on a per-enabled-interface basis.
        </t>
        <t>
             If the client did not include the IPv6-Only Preferred option code
             in the Parameter Request List in the DHCPDISCOVER or
             DHCPREQUEST message, it <bcp14>MUST</bcp14> ignore the IPv6-Only
             Preferred option in any messages received from the server.
        </t>
        <t>
             If the client includes the IPv6-Only Preferred option code in the Parameter Request List and the DHCPOFFER message from the server contains a valid IPv6-Only Preferred option, the client <bcp14>SHOULD NOT</bcp14> request the IPv4 address provided in the DHCPOFFER.
             If the IPv6-Only Preferred option returned by the server contains
             a value greater than or equal to MIN_V6ONLY_WAIT, the client <bcp14>SHOULD</bcp14> set the V6ONLY_WAIT timer to that value.
             Otherwise, the client <bcp14>SHOULD</bcp14> set the V6ONLY_WAIT timer to MIN_V6ONLY_WAIT.
             The client <bcp14>SHOULD</bcp14> stop the DHCPv4 configuration process for V6ONLY_WAIT seconds or until a network attachment event, whichever happens first.
             The host <bcp14>MAY</bcp14> disable the IPv4 stack completely on the affected interface for V6ONLY_WAIT seconds or until the network attachment event, whichever happens first.
        </t>
        <t>
             The IPv6-Only Preferred option <bcp14>SHOULD</bcp14> be included in the Parameter Request List in DHCPREQUEST messages (after receiving a DHCPOFFER without this option, for an INIT-REBOOT, or when renewing or rebinding a leased address).
             If the DHCPv4 server responds with a DHCPACK that includes the
             IPv6-Only Preferred option, the client's behavior depends on the client's state.
             If the client is in the INIT-REBOOT state, it
             <bcp14>SHOULD</bcp14> stop the DHCPv4 configuration process or
             disable the IPv4 stack completely for V6ONLY_WAIT seconds or
             until the network attachment event, whichever happens first.
             It also <bcp14>MAY</bcp14> send a DHCPRELEASE message.
             If the client is in any other state, it <bcp14>SHOULD</bcp14> continue to use the assigned IPv4 address until further DHCPv4 reconfiguration events.
        </t>
        <t>
             If the client includes the IPv6-Only Preferred option code in the
             Parameter Request List and the server responds with a DHCPOFFER message without a valid IPv6-Only Preferred option, the client <bcp14>MUST</bcp14> proceed as normal with a DHCPREQUEST.
        </t>
        <t>
             If the client waits for multiple DHCPOFFER responses and selects one of them, it <bcp14>MUST</bcp14> follow the processing for the IPv6-Only Preferred option based on the selected response.
             A client <bcp14>MAY</bcp14> use the presence of the IPv6-Only Preferred option as a selection criterion.
        </t>
        <t>
             When an IPv6-only-capable client receives the IPv6-Only Preferred
             option from the server, the client <bcp14>MAY</bcp14> configure an IPv4 link-local address <xref target="RFC3927" format="default"/>.
             In that case, IPv6-only-capable devices might still be able to communicate over IPv4 to other devices on the link.
             The Auto-Configure option <xref target="RFC2563"
             format="default"/> can be used to control the autoconfiguration
             of IPv4 link-local addresses.
             <xref target="autoconf" format="default"/> discusses the
             interaction between the IPv6-Only Preferred option and the Auto-Configure option.
        </t>
      </section>
      <section anchor="v4srv" numbered="true" toc="default">
        <name>DHCPv4 Server Behavior</name>
        <t>
             The DHCPv4 server <bcp14>SHOULD</bcp14> be able to configure all or individual pools to include the IPv6-Only Preferred option in DHCPv4 responses if the client included the option code in the Parameter Request List.
             The DHCPv4 server <bcp14>MAY</bcp14> have a configuration option to specify the V6ONLY_WAIT timer for all or individual IPv6-mostly pools.
        </t>
        <t>
             The server <bcp14>MUST NOT</bcp14> include the IPv6-Only
	     Preferred  option in the DHCPOFFER or DHCPACK message if the
	     selected pool is not configured as IPv6-mostly.
             The server <bcp14>MUST NOT</bcp14> include the IPv6-Only Preferred  option in the DHCPOFFER or DHCPACK message if the option was not present in the Parameter Request List sent by the client.
        </t>
        <t>
             If the IPv6-Only Preferred option is present in the Parameter Request List received from the client and the corresponding DHCPv4 pool is explicitly configured as belonging to an IPv6-mostly network segment, the server <bcp14>MUST</bcp14> include the IPv6-Only Preferred option when responding with the DHCPOFFER or DHCPACK message.
             If the server responds with the IPv6-Only Preferred option and the V6ONLY_WAIT timer is configured for the pool, the server <bcp14>MUST</bcp14> copy the configured value to the IPv6-Only Preferred option value field.
             Otherwise, it <bcp14>MUST</bcp14> set the field to zero.

             The server <bcp14>SHOULD NOT</bcp14> assign an address from the pool.
             Instead, it <bcp14>SHOULD</bcp14> return 0.0.0.0 as the offered address.
             Alternatively, if offering 0.0.0.0 is not feasible -- for
             example, due to some limitations of the server or the network
             infrastructure -- the server <bcp14>MAY</bcp14> include in the
             DHCPOFFER an available IPv4 address from the pool, as per recommendations in <xref target="RFC2131" format="default"/>.
             In this case, the offered address <bcp14>MUST</bcp14> be a valid address that is not committed to any other client.
             Because the client is not ever expected to request this address, the server <bcp14>SHOULD NOT</bcp14> reserve the address and <bcp14>SHOULD NOT</bcp14> verify its uniqueness.
             If the client then issues a DHCPREQUEST for the address, the
             server <bcp14>MUST</bcp14> process it per <xref target="RFC2131"
             format="default"/>, including replying with a DHCPACK for the
             address if it has not been committed to another
             client in the meantime.
        </t>
        <t>
             If a client includes both a Rapid Commit option <xref
             target="RFC4039" format="default"/> and an IPv6-Only Preferred
             option in the DHCPDISCOVER message, the server <bcp14>SHOULD
             NOT</bcp14> honor the Rapid Commit option if the response to the client would contain the IPv6-Only Preferred option.
             It <bcp14>SHOULD</bcp14> instead respond with a DHCPOFFER as indicated above.
        </t>
        <t>
             If the server receives a DHCPREQUEST containing the IPv6-Only Preferred option for the address from a pool configured as IPv6-mostly, the server <bcp14>MUST</bcp14> process it per <xref target="RFC2131" format="default"/>.
        </t>
        <section anchor="autoconf" numbered="true" toc="default">
          <name>Interaction with RFC 2563</name>
          <t>
<xref target="RFC2563" format="default"/> defines an Auto-Configure DHCPv4
option to disable IPv4 link-local address configuration for IPv4
clients. Clients can support both the IPv6-Only Preferred option and the
Auto-Configure option, just one of the options, or neither option.
If a client sends both the IPv6-Only Preferred option and the Auto-Configure option, the network administrator can prevent the host from configuring an IPv4 link-local address on an IPv6-mostly network.
To achieve this, the server needs to send a DHCPOFFER that contains a 'yiaddr'
of 0.0.0.0, and the Auto-Configure flag set to "DoNotAutoConfigure".
</t>
          <t>
However, special care should be taken in a situation where a server supports
both options and receives just an IPv6-Only Preferred option from a client.
<xref target="RFC2563" sectionFormat="of" section="2.3"/>
 states that if no address is chosen for the host (which would be the case for
 IPv6-only-capable clients on an IPv6-mostly network), then
"If the DHCPDISCOVER does not contain the Auto-Configure option, it is not answered."
Such behavior would be undesirable for clients supporting the IPv6-Only
Preferred option without supporting the Auto-Configure option, as they would
not receive any response from the server and would keep requesting a response instead of disabling DHCPv4 for V6ONLY_WAIT seconds.
Therefore, the following update is made to <xref target="RFC2563" sectionFormat="of" section="2.3"/>.
</t>
          <t>
OLD TEXT:
</t>
     <blockquote><t>However, if no address is chosen for the host, a few additional steps <bcp14>MUST</bcp14> be taken.</t>
          <t>
If the DHCPDISCOVER does not contain the Auto-Configure option, it is not answered.
</t>
</blockquote>
          <t>
NEW TEXT:
</t>

     <blockquote><t>However, if no address is chosen for the host, a few additional steps <bcp14>MUST</bcp14> be taken.
</t>
          <t>
If the DHCPDISCOVER does not contain the Auto-Configure option and the IPv6-Only Preferred option is not present, it is not answered.
If the DHCPDISCOVER does not contain the Auto-Configure option but contains the IPv6-Only Preferred option, the processing rules for the IPv6-Only Preferred option apply.
</t>
</blockquote>
        </section>
      </section>
      <section anchor="vars" numbered="true" toc="default">
        <name>Constants and Configuration Variables</name>
        <dl newline="false" spacing="normal">
              <dt>V6ONLY_WAIT:</dt>
              <dd>The time for which the client <bcp14>SHOULD</bcp14> stop the DHCPv4 configuration process. The value <bcp14>MUST NOT</bcp14> be less than MIN_V6ONLY_WAIT seconds. Default: 1800 seconds</dd>
              <dt>MIN_V6ONLY_WAIT:</dt>
              <dd>The lower boundary for V6ONLY_WAIT. Value: 300 seconds</dd>
        </dl>
      </section>
    </section>
    <section anchor="v6onlydef" numbered="true" toc="default">
      <name>IPv6-Only Transition Technology Considerations</name>
      <t>
Until IPv6 adoption in the Internet reaches 100%, communication between an
IPv6-only host and an IPv4-only destination requires some form of a transition mechanism deployed in the network.
At the time of writing, the only such mechanism that is widely supported by end hosts is NAT64 <xref target="RFC6146" format="default"/> (either with or without 464XLAT).
Therefore, the IPv6-Only Preferred option is only sent by hosts capable of operating on NAT64 networks.
In a typical deployment scenario, a network administrator would not configure the DHCPv4 server to return the IPv6-Only Preferred option unless the network provides NAT64 service.
</t>
      <t>
Hypothetically, it is possible for multiple transition technologies to
coexist. In such a scenario, some form of negotiation would be required between a client and a server to ensure that the transition technology supported by the client is the one the network provides.
                However, it seems unlikely that any new transition technology would arise and be widely adopted in the foreseeable future.
                Therefore, adding support for non-existing technologies seems
                to be suboptimal, so this document implies that NAT64 is used to facilitate
connectivity between IPv6 and IPv4.
                In the unlikely event that a new transition mechanism becomes widely deployed, the applicability of the IPv6-Only Preferred option to that mechanism will depend on the nature of the new mechanism.
                If the new mechanism is designed in such a way that it's fully transparent for hosts that support NAT64 and the IPv6-Only Preferred option, then the option can continue to be used with the new mechanism.
                If the new mechanism is not compatible with NAT64 and implementation on the host side is required to support it, then a new DHCPv4 option needs to be defined.
</t>
      <t>
It should also be noted that declaring a host (technically, a host interface) IPv6-only capable is a policy decision. For example,
      </t>
      <ul spacing="normal">
        <li>
An OS vendor may make such a decision and configure their DHCPv4
clients to send the IPv6-Only Preferred option by default if the OS has
a 464XLAT CLAT <xref target="RFC6877" format="default"/> enabled.
</li>
        <li>
An enterprise network administrator may provision the corporate hosts as
IPv6-only capable if all applications that users are supposed to run have been
tested in an IPv6-only environment (or if a 464XLAT CLAT is enabled on the devices).
</li>
        <li>
Internet of Things (IoT) devices may be shipped in IPv6-only-capable mode if they are designed to
connect to an IPv6-enabled cloud destination only.
</li>
      </ul>
    </section>
    <section anchor="IANA" numbered="true" toc="default">
      <name>IANA Considerations</name>

      <t>The IANA has assigned a new DHCPv4 option code for the IPv6-Only Preferred option
      from the "BOOTP Vendor Extensions and DHCP Options" registry, located at
      <eref target="https://www.iana.org/assignments/bootp-dhcp-parameters/" brackets="angle"/>.
      </t>

      <dl newline="false" spacing="compact">
        <dt>Tag:</dt>
            <dd>108</dd>
        <dt>Name:</dt>
            <dd>IPv6-Only Preferred</dd>
        <dt>Data Length:</dt>
            <dd>4</dd>
        <dt>Meaning:</dt>
            <dd>Number of seconds that DHCPv4 should be disabled</dd>
        <dt>Reference:</dt>
            <dd>RFC 8925</dd>
      </dl>
    </section>
    <section anchor="Security" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>
          An attacker might send a spoofed DHCPOFFER containing an IPv6-Only Preferred option with the value field set to a large number, such as 0xffffffff, effectively disabling DHCPv4 on clients supporting the option.
          If the network is IPv4-only, such clients would lose connectivity, while on a dual-stack network without NAT64 service, only connectivity to IPv4-only destinations would be affected.
          Recovery from such an attack would require triggering a network attachment event.

However, it should be noted that if the network does not provide
protection from a rogue DHCPv4 server, the similar attack vector can
be executed by offering an invalid address and setting the Lease Time
option <xref target="RFC2132"/> value field to 0xffffffff.
          The latter attack would affect all hosts -- not just hosts that support the IPv6-Only Preferred option.
          Therefore, the security measures against rogue DHCPv4 servers would
          be sufficient to prevent attacks specific to the IPv6-Only Preferred option.
          Additionally, such attacks can only be executed if the victim
          prefers the rogue DHCPOFFER over legitimate offers.
          Therefore, for the attack to be successful, the attacker needs to
          know the selection criteria used by the client and be able to make
          its rogue offer preferable to other offers.
      </t>
      <t>
          It should be noted that disabling IPv4 on a host upon receiving the IPv6-Only Preferred option from the DHCPv4 server protects the host from IPv4-related attacks and therefore could be considered a security feature, as it reduces the attack surface.
      </t>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2131.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2563.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3927.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4039.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
      </references>
      <references>
        <name>Informative References</name>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4861.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4957.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6146.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6147.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6877.xml"/>
      </references>
    </references>
    <section anchor="Acknowledgements" numbered="false" toc="default">
      <name>Acknowledgements</name>
      <t>
      Thanks to the following people (in alphabetical order) for their review
      and feedback: <contact fullname="Mohamed Boucadair"/>, <contact
      fullname="Martin Duke"/>, <contact fullname="Russ Housley"/>, <contact
      fullname="Sheng Jiang"/>, <contact fullname="Benjamin Kaduk"/>, <contact
      fullname="Murray Kucherawy"/>, <contact fullname="Ted Lemon"/>, <contact
      fullname="Roy Marples"/>, <contact fullname="Bjorn Mork"/>, <contact
      fullname="Alvaro Retana"/>, <contact fullname="Peng Shuping"/>, <contact
      fullname="Pascal Thubert"/>, <contact fullname="Bernie Volz"/>, <contact
      fullname="Éric Vyncke"/>, and <contact fullname="Robert Wilton"/>.
      The authors would like to thank <contact fullname="Bob Hinden"/> and <contact fullname="Brian Carpenter"/> for the initial idea of signaling IPv6-only capability to hosts.
      Special thanks to <contact fullname="Erik Kline"/>, <contact fullname="Mark Townsley"/>, and <contact fullname="Maciej Zenczykowski"/> for the discussion that led to the idea of signaling IPv6-only capability over DHCPv4.
      </t>
    </section>
  </back>
</rfc>
