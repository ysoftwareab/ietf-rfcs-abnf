<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" category="std" number="8825"
     docName="draft-ietf-rtcweb-overview-19" ipr="trust200902" obsoletes=""
     updates="" submissionType="IETF" consensus="true" xml:lang="en"
     tocInclude="true" symRefs="true" sortRefs="true" version="3"> 
  <!-- xml2rfc v2v3 conversion 2.32.0 -->
  <front>
    <title abbrev="WebRTC Overview">Overview: Real-Time Protocols for
    Browser-Based Applications</title>
    <seriesInfo name="RFC" value="8825"/>
    <author fullname="Harald T. Alvestrand" initials="H." surname="Alvestrand">
      <organization>Google</organization>
      <address>
        <postal>
          <street>Kungsbron 2</street>
          <city>Stockholm</city>
          <region/>
          <code>11122</code>
          <country>Sweden</country>
        </postal>
        <email>harald@alvestrand.no</email>
      </address>
    </author>
    <date month="January" year="2021"/>

    <abstract>
      <t>This document gives an overview and context of a protocol suite
      intended for use with real-time applications that can be deployed in
      browsers -- "real-time communication on the Web".</t>
      <t>It intends to serve as a starting and coordination point to make sure
      that (1) all the parts that are needed to achieve this goal are findable
      and (2) the parts that belong in the Internet protocol suite are fully
      specified and on the right publication track.</t>
      <t>This document is an applicability statement -- it does not itself
      specify any protocol, but it specifies which other specifications
      implementations are supposed to follow to be compliant with Web
      Real-Time Communication (WebRTC).</t>

    </abstract>
  </front>
  <middle>
    <section anchor="intro" numbered="true" toc="default">
      <name>Introduction</name>
      <t>The Internet was, from very early in its lifetime, considered a
      possible vehicle for the deployment of real-time, interactive
      applications -- with the most easily imaginable being audio conversations
      (aka "Internet telephony") and video conferencing.</t>
      <t>The first attempts to build such applications were dependent on special networks,
      special hardware, and custom-built software, often at very high prices or
      of low quality, placing great demands on the infrastructure.
</t>
      <t>As the available bandwidth has increased, and as processors and other
      hardware have become ever faster, the barriers to participation have
      decreased, and it has become possible to deliver a satisfactory
      experience on commonly available computing hardware.</t>
      <t>Still, there are a number of barriers to the ability to communicate
      universally -- one of these is that there is, as of yet, no single set of
      communication protocols that all agree should be made available for
      communication; another is the sheer lack of universal identification
      systems (such as is served by telephone numbers or email addresses in
      other communications systems).</t>
      <t>Development of "The Universal Solution" has, however, proved hard.</t>
      <t>The last few years have also seen a new platform rise for deployment
      of services: the browser-embedded application, or "web application". It
      turns out that as long as the browser platform has the necessary
      interfaces, it is possible to deliver almost any kind of service
      on&nbsp;it.</t>
      <t>Traditionally, these interfaces have been delivered by plugins, which
      had to be downloaded and installed separately from the browser; in the
      development of HTML5 <xref target="HTML5"/>, application developers see much promise in the
      possibility of making those interfaces available in a standardized way
      within the browser.</t>
      <t>This memo describes a set of building blocks that (1) can be made
      accessible and controllable through a JavaScript API in a browser and
      (2) together form a sufficient set of functions to allow the use of
      interactive audio and video in applications that communicate directly
      between browsers across the Internet. The resulting protocol suite is
      intended to enable all the applications that are described as required
      scenarios in the WebRTC "use cases" document <xref target="RFC7478" format="default"/>.</t>
      <t>Other efforts -- for instance, the W3C Web Real-Time Communications,
      Web Applications Security, and Devices and Sensors Working Groups -- focus
      on making standardized APIs and interfaces available, within or
      alongside the HTML5 effort, for those functions.  This memo concentrates
      on specifying the protocols and subprotocols that are needed to specify
      the interactions over the network.</t>
      <t>Operators should note that deployment of WebRTC will result in a
      change in the nature of signaling for real-time media on the network
      and may result in a shift in the kinds of devices used to create and
      consume such media. In the case of signaling, WebRTC session setup
      will typically occur over TLS-secured web technologies using
      application-specific protocols.  Operational techniques that involve
      inserting network elements to interpret the Session Description Protocol
      (SDP) -- through either (1)&nbsp;the endpoint asking the network for a SIP server <xref target="RFC3361" format="default"/> or (2)&nbsp;the transparent
      insertion of SIP Application Layer Gateways (ALGs) -- will not work
      with such signaling. In the case of networks using cooperative
      endpoints, the approaches defined in <xref target="RFC8155" format="default"/> may serve
      as a suitable replacement for <xref target="RFC3361" format="default"/>. The increase in
      browser-based communications may also lead to a shift away from
      dedicated real-time-communications hardware, such as SIP
      desk phones. This will diminish the efficacy of operational
      techniques that place dedicated real-time devices on their own
      network segment, address range, or VLAN for purposes such as
      applying traffic filtering and QoS. Applying the markings
      described in <xref target="RFC8837" format="default"/> may be
      appropriate replacements for such techniques.</t>

      <t>While this document formally relies on <xref target="RFC8445"/>,
at the time of its publication, the majority of WebRTC implementations
support the version of Interactive Connectivity Establishment (ICE)
that is described in <xref target="RFC5245"/> and use a
pre-standard version of the Trickle ICE mechanism described in
<xref target="RFC8838"/>. The "ice2" attribute defined in <xref
target="RFC8445"/> can be used to detect the version in use by a
remote endpoint and to provide a smooth transition from the older
specification to the newer one.</t>

      <t>This memo uses the term "WebRTC" (note the case used) to refer to the
      overall effort consisting of both IETF and W3C efforts.</t>
    </section>
    <section numbered="true" toc="default">
      <name>Principles and Terminology</name>
      <t/>
      <section numbered="true" toc="default">
        <name>Goals of This Document</name>
        <t>The goal of the WebRTC protocol specification is to specify a set
        of protocols that, if all are implemented, will allow an
        implementation to communicate with another implementation using audio,
        video, and data sent along the most direct possible path between the
        participants.</t>
        <t>This document is intended to serve as the roadmap to the WebRTC
        specifications. It defines terms used by other parts of the WebRTC
        protocol specifications, lists references to other specifications that
        don't need further elaboration in the WebRTC context, and gives
        pointers to other documents that form part of the WebRTC suite.</t>
        <t>By reading this document and the documents it refers to, it should
        be possible to have all information needed to implement a
        WebRTC-compatible implementation.</t>
      </section>
      <section numbered="true" toc="default">
        <name>Relationship between API and Protocol</name>
        <t>The total WebRTC effort consists of two major parts, each
        consisting of multiple documents:</t>
        <ul spacing="normal">
          <li>A protocol specification, done in the IETF</li>
          <li>A JavaScript API specification, defined in a series of W3C
            documents <xref target="W3C.WD-webrtc" format="default"/>
          <xref target="W3C.WD-mediacapture-streams" format="default"/></li>
        </ul>
        <t>Together, these two specifications aim to provide an
        environment where JavaScript embedded in any page, when suitably
        authorized by its user, is able to set up communication using audio,
        video, and auxiliary data, as long as the browser supports these
        specifications. The browser environment does not constrain the types of
        application in which this functionality can be used.</t>
        <t>The protocol specification does not assume that all implementations
        implement this API; it is not intended to be necessary for
        interoperation to know whether the entity one is communicating with is
        a browser or another device implementing the protocol specification.</t>
        <t>The goal of cooperation between the protocol specification and the
        API specification is that for all options and features of the protocol
        specification, it should be clear which API calls to make to exercise
        that option or feature; similarly, for any sequence of API calls, it
        should be clear which protocol options and features will be invoked.
        Both are subject to constraints of the implementation, of course.</t>
        <t>The following terms are used across the documents specifying the
        WebRTC suite, with the specific meanings given here. Not all terms are
        used in this document. Other terms are used per their commonly used
        meanings.</t>
        <dl newline="false" spacing="normal">
          <dt>Agent:</dt>
          <dd>Undefined term. See "SDP Agent" and "ICE
            Agent".</dd>
          <dt>Application Programming Interface (API):</dt>
          <dd>A
            specification of a set of calls and events, usually tied to a
            programming language or an abstract formal specification such as
            WebIDL, with its defined semantics.</dd>
          <dt>Browser:</dt>
          <dd>Used synonymously with "interactive user
            agent" as defined in <xref target="HTML5" format="default"/>.
 See also the "WebRTC Browser" (aka "WebRTC User Agent") definition below.</dd>
          <dt>Data Channel:</dt>
          <dd>An abstraction that allows data to be
            sent between WebRTC endpoints in the form of messages. Two
            endpoints can have multiple data channels between them.</dd>
          <dt>ICE Agent:</dt>
          <dd>An implementation of the Interactive Connectivity Establishment (ICE) protocol <xref target="RFC8445" format="default"/>. An ICE Agent may also
            be an SDP Agent, but there exist ICE Agents that do not use SDP
            (for instance, those that use Jingle <xref target="XEP-0166" format="default">
            </xref>).</dd>
          <dt>Interactive:</dt>
          <dd>Communication between multiple parties,
            where the expectation is that an action from one party can cause a
            reaction by another party, and the reaction can be observed by the
            first party, where the total time required for the
            action/reaction/observation is on the order of no more than
            hundreds of milliseconds.</dd>
          <dt>Media:</dt>
          <dd>Audio and video content. Not to be confused
            with "transmission media" such as wires.</dd>
          <dt>Media Path:</dt>
          <dd>The path that media data follows from
            one WebRTC endpoint to another.</dd>
          <dt>Protocol:</dt>
          <dd>A specification of a set of data units,
            their representation, and rules for their transmission, with their
            defined semantics. A protocol is usually thought of as going
            between systems.</dd>
          <dt>Real-Time Media:</dt>
          <dd>Media where the generation
            and display of content are intended to occur closely together in
            time (on the order of no more than hundreds of milliseconds).
            Real-time media can be used to support interactive
            communication.</dd>
          <dt>SDP Agent:</dt>
          <dd>The protocol implementation involved in
            the Session Description Protocol (SDP) offer/answer exchange, as
            defined in <xref target="RFC3264" sectionFormat="comma" section="3"/>.</dd>
          <dt>Signaling:</dt>
          <dd>Communication that happens in order to
            establish, manage, and control media paths and data paths.</dd>
          <dt>Signaling Path:</dt>
          <dd>The communication channels used
            between entities participating in signaling to transfer signaling.
            There may be more entities in the signaling path than in the media
            path.</dd>
          <dt>WebRTC Browser (also called a "WebRTC User Agent" or "WebRTC UA"):</dt>
          <dd>&zwsp; Something that conforms to both the protocol
            specification and the JavaScript API cited above.</dd>
          <dt>WebRTC Non-Browser:</dt>
          <dd> Something that conforms to
            the protocol specification but does not claim to implement the
            JavaScript API.  This can also be called a "WebRTC device" or
            "WebRTC native application".</dd>
          <dt>WebRTC Endpoint:</dt>
          <dd> Either a WebRTC browser or a
            WebRTC non-browser. It conforms to the protocol specification.</dd>
          <dt>WebRTC-Compatible Endpoint:</dt>
          <dd> An endpoint that is able
            to successfully communicate with a WebRTC endpoint but may fail to
            meet some requirements of a WebRTC endpoint. This may limit where
            in the network such an endpoint can be attached or may limit the
            security guarantees that it offers to others. It is not
            constrained by this specification; when it is mentioned at all, it
            is to note the implications on WebRTC-compatible endpoints of the
            requirements placed on WebRTC endpoints.</dd>
          <dt>WebRTC Gateway:</dt>
          <dd> A WebRTC-compatible endpoint that
            mediates media traffic to non-WebRTC entities.</dd>
        </dl>
        <t>All WebRTC browsers are WebRTC endpoints, so any requirement
        on a WebRTC endpoint also applies to a WebRTC browser.</t>
        <t>A WebRTC non-browser may be capable of hosting applications in a
        way that is similar to the way in which a browser can host JavaScript
        applications, typically by offering APIs in other languages. For
        instance, it may be implemented as a library that offers a C++ API
        intended to be loaded into applications. In this case, 
        security considerations similar to those for JavaScript may be needed; however,
        since such APIs are not defined or referenced here, this document
        cannot give any specific rules for those interfaces.</t>
        <t>WebRTC gateways are described in a separate document <xref target="I-D.ietf-rtcweb-gateways" format="default"/>.</t>
      </section>
      <section numbered="true" toc="default">
        <name>On Interoperability and Innovation</name>
        <t>The "Mission statement for the IETF" <xref target="RFC3935" format="default"/> states
        that "The benefit of a standard to the Internet is in interoperability
        - that multiple products implementing a standard are able to work
        together in order to deliver valuable functions to the Internet's
        users."</t>
        <t>Communication on the Internet frequently occurs in two phases:</t>
        <ul spacing="normal">
          <li>Two parties communicate, through some mechanism, what
            functionality they are both able to support.</li>
          <li>They use that shared communicative functionality to
            communicate or, failing to find anything in common, give up on
            communication.</li>
        </ul>
        <t>There are often many choices that can be made for
        communicative functionality; the history of the Internet is rife with
        the proposal, standardization, implementation, and success or failure
        of many types of options, in all sorts of protocols.</t>
        <t>The goal of having a mandatory-to-implement function set is to
        prevent negotiation failure, not to preempt or prevent
        negotiation.</t>
        <t>The presence of a mandatory-to-implement function set serves as a
        strong changer of the marketplace of deployment in that it gives a
        guarantee that you can communicate successfully as long as (1)&nbsp;you conform to a specification and
        (2)&nbsp;the other party is willing to accept communication at the base level of
        that specification.</t>
        <t>The alternative (that is, not having a mandatory-to-implement
 function) does not mean that you cannot communicate; it merely
 means that in order to be part of the communications partnership,
 you have to implement the standard "and then some". The "and then some" is usually called a
        profile of some sort; in the version most antithetical to the Internet
        ethos, that "and then some" consists of having to use a specific
        vendor's product only.</t>
      </section>
      <section numbered="true" toc="default">
        <name>Terminology</name>
    <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>",
    "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>",
    "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are
    to be interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/>
    <xref target="RFC8174"/> when, and only when, they appear in all capitals,
    as shown here.</t>
      </section>
    </section>
    <section anchor="arch-func-grps" numbered="true" toc="default">
      <name>Architecture and Functionality Groups</name>
      <t>For browser-based applications, the model for real-time support does
     not assume that the browser will contain all the functions needed for
     an application such as a telephone or a video conference.  The vision is
     that the browser will have the functions needed for a web application,
     working in conjunction with its backend servers, to implement these
     functions.</t>
      <t>This means that two vital interfaces need specification: the
      protocols that browsers use to talk to each other, without any
      intervening servers; and the APIs that are offered for a JavaScript
      application to take advantage of the browser's functionality.</t>
      <figure anchor="fig-browser-model">
        <name>Browser Model</name>
        <artwork name="" type="" align="left" alt=""><![CDATA[
                  +------------------------+  On-the-wire
                  |                        |  Protocols
                  |      Servers           |--------->
                  |                        |
                  |                        |
                  +------------------------+
                              ^
                              |
                              |
                              | HTTPS/
                              | WebSockets
                              |
                              |
                +----------------------------+
                |    JavaScript/HTML/CSS     |
                +----------------------------+
             Other  ^                 ^ RTC
             APIs   |                 | APIs
                +---|-----------------|------+
                |   |                 |      |
                |                 +---------+|
                |                 | Browser ||  On-the-wire
                | Browser         | RTC     ||  Protocols
                |                 | Function|----------->
                |                 |         ||
                |                 |         ||
                |                 +---------+|
                +---------------------|------+
                                      |
                                      V
                                 Native OS Services ]]></artwork>
      </figure>
      <t>Note that HTTPS and WebSockets are also offered to the JavaScript
      application through browser APIs.</t>
      <t>As for all protocol and API specifications, there is no restriction
      that the protocols can only be used to talk to another browser; since
      they are fully specified, any endpoint that implements the protocols
      faithfully should be able to interoperate with the application running
      in the browser.</t>
      <t>A commonly imagined model of deployment is depicted in <xref
      target="fig-webtrapezoid"/>. ("JS" stands for JavaScript.)</t>
      <figure anchor="fig-webtrapezoid">
        <name>Browser RTC Trapezoid</name>
        <artwork name="" type="" align="left" alt=""><![CDATA[
        +-----------+                  +-----------+
        |   Web     |                  |   Web     |
        |           |                  |           |
        |           |------------------|           |
        |  Server   |  Signaling Path  |  Server   |
        |           |                  |           |
        +-----------+                  +-----------+
             /                                \
            /                                  \ Application-defined
           /                                    \ over
          /                                      \ HTTPS/WebSockets
         /  Application-defined over              \
        /   HTTPS/WebSockets                       \
       /                                            \
 +-----------+                                +-----------+
 |JS/HTML/CSS|                                |JS/HTML/CSS|
 +-----------+                                +-----------+
 +-----------+                                +-----------+
 |           |                                |           |
 |           |                                |           |
 |  Browser  |--------------------------------|  Browser  |
 |           |          Media Path            |           |
 |           |                                |           |
 +-----------+                                +-----------+ ]]></artwork>
      </figure>
      <t>In this drawing, the critical part to note is that the media path
      ("low path") goes directly between the browsers, so it has to be
      conformant to the specifications of the WebRTC protocol suite; the
      signaling path ("high path") goes via servers that can modify, translate,
      or manipulate the signals as needed.</t>
      <t>If the two web servers are operated by different entities, the
      inter-server signaling mechanism needs to be agreed upon, by either
      standardization or other means of agreement. Existing protocols
      (e.g., SIP <xref target="RFC3261" format="default"/> or the Extensible
      Messaging and Presence Protocol (XMPP) <xref target="RFC6120" format="default"/>)
      could be used between servers, while either a standards-based or
      proprietary protocol could be used between the browser and the web
      server.</t>
      <t>For example, if both operators' servers implement SIP, SIP could be
      used for communication between servers, along with either a standardized
      signaling mechanism (e.g., SIP over WebSockets) or a proprietary
      signaling mechanism used between the application running in the browser
      and the web server. Similarly, if both operators' servers implement
      XMPP, XMPP could be used
      for communication between XMPP servers, with either a standardized
      signaling mechanism (e.g., XMPP over WebSockets or Bidirectional-streams
      Over Synchronous HTTP (BOSH) <xref target="XEP-0124" format="default"/>) or a proprietary signaling mechanism used between the
      application running in the browser and the web server.</t>
      <t>The choice of protocols for client-server and inter-server
      signaling, and the definition of the translation between them, are outside
      the scope of the WebRTC protocol suite described in this document.</t>
      <t>The functionality groups that are needed in the browser can be
      specified, more or less from the bottom up, as:</t>
       <dl newline="false" spacing="normal">
        <dt>Data transport:</dt>
         <dd>For example, TCP and UDP, and the means to securely set up
          connections between entities, as well as the functions for deciding
          when to send data: congestion management, bandwidth estimation, and
          so on.</dd>
        <dt>Data framing:</dt>
         <dd>RTP, the Stream Control Transmission Protocol (SCTP), DTLS, and other data formats that serve
          as containers, and their functions for data confidentiality and
          integrity.</dd>
        <dt>Data formats:</dt>
         <dd>Codec specifications, format specifications, and
          functionality specifications for the data passed between systems.
          Audio and video codecs, as well as formats for data and document
          sharing, belong in this category. In order to make use of data
          formats, a way to describe them (e.g., a session description) is
          needed.</dd>
        <dt>Connection management:</dt>
         <dd>For example, setting up connections, agreeing on data
          formats, changing data formats during the duration of a call. SDP,
          SIP, and Jingle/XMPP belong in this category.</dd>
        <dt>Presentation and control:</dt>
         <dd>What needs to happen in order to ensure
          that interactions behave in an unsurprising manner. This can
          include floor control, screen layout, voice-activated image
          switching, and other such functions, where part of the system
          requires cooperation between parties. Centralized Conferencing
          (XCON) <xref target="RFC6501"/> and Cisco&wj;/Tandberg's Telepresence Interoperability Protocol
          (TIP) were some attempts at specifying this kind of functionality;
          many applications have been built without standardized interfaces to
          these functions.</dd>
        <dt>Local system support functions:</dt>
         <dd>Functions that need not be
          specified uniformly, because each participant may implement these
          functions as they choose, without affecting the bits
          on the wire in a way that others have to be cognizant of. Examples
          in this category include echo cancellation (some forms of it), local
          authentication and authorization mechanisms, OS access control, and
          the ability to do local recording of conversations.</dd>
       </dl>
      <t>Within each functionality group, it is important to preserve
      both freedom to innovate and the ability for global communication.
      Freedom to innovate is helped by doing the specification in terms of
      interfaces, not implementation; any implementation able to communicate
      according to the interfaces is a valid implementation. The ability to
      communicate globally is helped by both (1) having core specifications be
      unencumbered by IPR issues and (2) having the formats and protocols be
      fully enough specified to allow for independent implementation.</t>
      <t>One can think of the first three groups as forming a "media transport
      infrastructure" and of the last three groups as forming a "media
      service". In many contexts, it makes sense to use a common specification
      for the media transport infrastructure, which can be embedded in
      browsers and accessed using standard interfaces, and "let a thousand
      flowers bloom" in the "media service" layer; to achieve interoperable
      services, however, at least the first five of the six groups need to be
      specified.</t>
    </section>
    <section anchor="ch-transport" numbered="true" toc="default">
      <name>Data Transport</name>
      <t>Data transport refers to the sending and receiving of data over the
      network interfaces, the choice of network-layer addresses at each end of
      the communication, and the interaction with any intermediate entities
      that handle the data but do not modify it (such as Traversal Using
      Relays around NAT (TURN) relays).</t>
      <t>It includes necessary functions for congestion control,
      retransmission, and in-order delivery.</t>
      <t>WebRTC endpoints <bcp14>MUST</bcp14> implement the transport protocols described in
      <xref target="RFC8835" format="default"/>.</t>
    </section>
    <section numbered="true" toc="default">
      <name>Data Framing and Securing</name>
      <t>The format for media transport is RTP <xref target="RFC3550" format="default"/>.
      Implementation of the Secure Real-time Transport Protocol (SRTP) <xref target="RFC3711" format="default"/> is <bcp14>REQUIRED</bcp14> for all
      implementations.</t>
      <t>The detailed considerations for usage of functions from RTP and SRTP
      are given in <xref target="RFC8834" format="default"/>. The security
      considerations for the WebRTC use case are provided in <xref target="RFC8826" format="default"/>, and the resulting security
      functions are described in <xref target="RFC8827" format="default"/>.</t>
      <t>Considerations for the transfer of data that is not in RTP format are
      described in <xref target="RFC8831" format="default"/>, and a
      supporting protocol for establishing individual data channels is
      described in <xref target="RFC8832" format="default"/>. WebRTC
      endpoints <bcp14>MUST</bcp14> implement these two specifications.</t>
      <t>WebRTC endpoints <bcp14>MUST</bcp14> implement <xref target="RFC8834" format="default"/>, <xref target="RFC8826" format="default"/>, <xref target="RFC8827" format="default"/>, and the requirements they
      include.</t>
    </section>
    <section anchor="ch-data" numbered="true" toc="default">
      <name>Data Formats</name>
      <t>The intent of this specification is to allow each communications
      event to use the data formats that are best suited for that particular
      instance, where a format is supported by both sides of the connection.
      However, a minimum standard is greatly helpful in order to ensure that
      communication can be achieved. This document specifies a minimum
      baseline that will be supported by all implementations of this
      specification and leaves further codecs to be included at the will of
      the implementer.</t>
      <t>WebRTC endpoints that support audio and/or video <bcp14>MUST</bcp14> implement the
      codecs and profiles required in <xref target="RFC7874" format="default"/> and <xref target="RFC7742" format="default"/>.</t>
    </section>
    <section numbered="true" toc="default">
      <name>Connection Management</name>
      <t>The methods, mechanisms, and requirements for setting up, negotiating,
      and tearing down connections comprise a large subject, and one where it is
      desirable to have both interoperability and freedom to innovate.</t>
      <t>The following principles apply:</t>
      <ol spacing="normal" type="1">
        <li>The WebRTC media negotiations will be capable of representing the
          same SDP offer/answer semantics <xref target="RFC3264" format="default"/> that are
          used in SIP, in such a way that it is possible to build a
          signaling gateway between SIP and the WebRTC media negotiation.</li>
        <li>It will be possible to gateway between legacy SIP devices that
          support ICE and appropriate RTP/SDP mechanisms, codecs, and
          security mechanisms without using a media gateway. A signaling
          gateway to convert between the signaling on the web side and the SIP
          signaling may be needed.</li>
        <li>When an SDP for a new codec is specified, no other standardization
          should be required for it to be possible to use that codec in the web
          browsers. Adding new codecs that might have new SDP parameters should
          not change the APIs between the browser and the JavaScript application. As
          soon as the browsers support the new codecs, old applications
          written before the codecs were specified should automatically be
          able to use the new codecs where appropriate, with no changes to the
          JavaScript applications.</li>
      </ol>
      <t>The particular choices made for WebRTC, and their implications
      for the API offered by a browser implementing WebRTC, are described in
      <xref target="RFC8829" format="default"/>.</t>
      <t>WebRTC browsers <bcp14>MUST</bcp14> implement <xref target="RFC8829" format="default"/>.</t>
      <t>WebRTC endpoints <bcp14>MUST</bcp14> implement those functions
      described in <xref target="RFC8829"/> that relate to the network layer (e.g., BUNDLE <xref
      target="RFC8843" format="default"/>, "rtcp-mux" <xref target="RFC5761"
      format="default"/>, and Trickle ICE <xref target="RFC8838"
      format="default"/>), but these endpoints do not need to support the API
      functionality described in <xref target="RFC8829"/>.</t>
    </section>
    <section numbered="true" toc="default">
      <name>Presentation and Control</name>
      <t>The most important part of control is the users' control over the
      browser's interaction with input/output devices and communications
      channels. It is important that the users have some way of figuring out
      where their audio, video, or texting is being sent; for what purported
      reason; and what guarantees are made by the parties that form part of
      this control channel. This is largely a local function between the
      browser, the underlying operating system, and the user interface; this is
      specified in the peer connection API <xref target="W3C.WD-webrtc" format="default"/> and the media capture API <xref target="W3C.WD-mediacapture-streams" format="default"/>.</t>
      <t>WebRTC browsers <bcp14>MUST</bcp14> implement these two specifications.</t>
    </section>
    <section numbered="true" toc="default">
      <name>Local System Support Functions</name>
      <t>These functions are characterized by the fact that the quality of an implementation strongly influences the user experience, but the exact
      algorithm does not need coordination. In some cases (for instance, echo
      cancellation, as described below), the overall system definition may
      need to specify that the overall system needs to have some
      characteristics for which these facilities are useful, without requiring
      them to be implemented a certain way.</t>
      <t>Local functions include echo cancellation; volume control; camera
      management, including focus, zoom, and pan/tilt controls (if available); and
      more.</t>
      <t>One would want to see certain parts of the system conform to certain
      properties; for instance:</t>
      <ul spacing="normal">
        <li>Echo cancellation should be good enough to achieve the
          suppression of acoustical feedback loops below a perceptually
          noticeable level.</li>
        <li>Privacy concerns <bcp14>MUST</bcp14> be satisfied; for instance, if remote
          control of a camera is offered, the APIs should be available to let
          the local participant figure out who's controlling the camera and
          possibly decide to revoke the permission for camera usage.</li>
        <li>Automatic Gain Control (AGC), if present, should normalize a speaking
          voice into a reasonable dB range.</li>
      </ul>
      <t>The requirements on WebRTC systems with regard to audio
      processing are found in <xref target="RFC7874" format="default"/>,
and that document includes more
      guidance about echo cancellation and AGC; the APIs for control
      of local devices are found in <xref
      target="W3C.WD-mediacapture-streams" format="default"/>.</t>
      <t>WebRTC endpoints <bcp14>MUST</bcp14> implement the processing functions in <xref target="RFC7874" format="default"/>. (Together with the requirement in <xref target="ch-data" format="default"/>, this means that WebRTC endpoints <bcp14>MUST</bcp14> implement the
      whole document.)</t>
    </section>
    <section anchor="IANA" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>This document has no IANA actions.</t>
    </section>
    <section anchor="Security" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>Security of the web-enabled real-time communications comes in several
      pieces:</t>
       <dl newline="false" spacing="normal">
        <dt>Security of the components:</dt>
         <dd>The browsers, and other servers
          involved. The most target-rich environment here is probably the
          browser; the aim here should be that the introduction of these
          components introduces no additional vulnerability.</dd>
        <dt>Security of the communication channels:</dt>
         <dd>It should be easy for participants to reassure themselves of the
	 security of their communication
          -- by verifying the crypto parameters of the links that they
          participate in, and to get reassurances from the other parties to
          the communication that those parties promise that appropriate measures are
          taken.</dd>
        <dt>Security of the partners' identities:</dt>
         <dd>Verifying that the
          participants are who they say they are (when positive identification
          is appropriate) or that their identities cannot be uncovered (when
          anonymity is a goal of the application).</dd>
       </dl>
      <t>The security analysis, and the requirements derived from that
      analysis, are contained in <xref target="RFC8826" format="default"/>.</t>
      <t>It is also important to read the security sections of <xref target="W3C.WD-mediacapture-streams" format="default"/> and <xref target="W3C.WD-webrtc" format="default"/>.</t>
    </section>
  </middle>
  <back>
<displayreference target="I-D.ietf-rtcweb-gateways" to="WebRTC-Gateways"/>

    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3550.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3264.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3711.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7742.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7874.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8445.xml"/>

<!-- draft-ietf-rtcweb-security (RFC 8826) -->
 <reference anchor="RFC8826" target="https://www.rfc-editor.org/info/rfc8826">
 <front>
 <title>Security Considerations for WebRTC</title>
 <author initials='E.' surname='Rescorla' fullname='Eric Rescorla'>
   <organization/>
 </author>
 <date month='January' year='2021'/>
 </front>
 <seriesInfo name="RFC" value="8826"/>
 <seriesInfo name="DOI" value="10.17487/RFC8826"/>
 </reference>

<!-- draft-ietf-rtcweb-transports-17 (RFC 8835) -->
<reference anchor="RFC8835" target="https://www.rfc-editor.org/info/rfc8835">
  <front>
    <title>Transports for WebRTC</title>
    <author initials="H." surname="Alvestrand" fullname="Harald Alvestrand">
      <organization />
    </author>
    <date month="January" year="2021" />
  </front>
  <seriesInfo name="RFC" value="8835" />
  <seriesInfo name="DOI" value="10.17487/RFC8835"/>
</reference>

<!-- draft-ietf-rtcweb-rtp-usage (RFC 8834) -->
<reference anchor="RFC8834" target="https://www.rfc-editor.org/info/rfc8834">
  <front>
    <title>Media Transport and Use of RTP in WebRTC</title>
    <author initials="C." surname="Perkins" fullname="Colin Perkins">
      <organization />
    </author>
    <author initials="M." surname="Westerlund" fullname="Magnus Westerlund">
      <organization />
    </author>
    <author initials="J." surname="Ott" fullname="Jörg Ott">
      <organization />
    </author>
    <date month="January" year="2021" />
  </front>
  <seriesInfo name="RFC" value="8834" />
  <seriesInfo name="DOI" value="10.17487/RFC8834"/>
</reference>

<!-- draft-ietf-rtcweb-data-channel (RFC 8831) -->
<reference anchor="RFC8831" target="https://www.rfc-editor.org/info/rfc8831">
<front>
<title>WebRTC Data Channels</title>
<author initials="R" surname="Jesup" fullname="Randell Jesup">
  <organization/>
</author>
<author initials="S" surname="Loreto" fullname="Salvatore Loreto">
  <organization/>
</author>
<author initials="M" surname="Tüxen" fullname="Michael Tüxen">
  <organization/>
</author>
<date month='January' year='2021'/>
</front>
<seriesInfo name="RFC" value="8831"/>
<seriesInfo name="DOI" value="10.17487/RFC8831"/>
</reference>

<!-- draft-ietf-rtcweb-data-protocol (RFC 8832) -->
<reference anchor="RFC8832" target="https://www.rfc-editor.org/info/rfc8832">
<front>
<title>WebRTC Data Channel Establishment Protocol</title>
<author initials='R.' surname='Jesup' fullname='Randell Jesup'>
  <organization/>
</author>
<author initials='S.' surname='Loreto' fullname='Salvatore Loreto'>
  <organization/>
</author>
<author initials='M' surname='Tüxen' fullname='Michael Tüxen'>
  <organization/>
</author>
<date month='January' year='2021'/>
</front>
<seriesInfo name="RFC" value="8832"/>
<seriesInfo name="DOI" value="10.17487/RFC8832"/>
</reference>

<!-- draft-ietf-rtcweb-security-arch (RFC 8827) -->
 <reference anchor="RFC8827" target="https://www.rfc-editor.org/info/rfc8827">
 <front>
 <title>WebRTC Security Architecture</title>
 <author initials='E.' surname='Rescorla' fullname='Eric Rescorla'>
   <organization/>
 </author>
 <date month='January' year='2021'/>
 </front>
 <seriesInfo name="RFC" value="8827"/>
 <seriesInfo name="DOI" value="10.17487/RFC8827"/>
 </reference>

<!-- draft-ietf-rtcweb-jsep (RFC 8829) -->
 <reference anchor="RFC8829" target="https://www.rfc-editor.org/info/rfc8829">
 <front>
 <title>JavaScript Session Establishment Protocol (JSEP)</title>
 <author initials='J.' surname='Uberti' fullname='Justin Uberti'>
   <organization/>
 </author>
 <author initials="C." surname="Jennings" fullname="Cullen Jennings">
   <organization/>
 </author>
 <author initials="E." surname="Rescorla" fullname="Eric Rescorla"
         role="editor">
 <organization/>
 </author>
 <date month='January' year='2021'/>
 </front>
 <seriesInfo name="RFC" value="8829"/>
 <seriesInfo name="DOI" value="10.17487/RFC8829"/>
 </reference>

   <reference anchor="W3C.WD-webrtc" target="https://www.w3.org/TR/webrtc/">
     <front>
       <title>WebRTC 1.0: Real-time Communication Between Browsers</title>
       <author initials="C." surname="Jennings" fullname="Cullen Jennings">
         <organization/>
       </author>
       <author initials="H." surname="Boström" fullname="Henrik Boström">
         <organization/>
       </author>
       <author initials="J-I." surname="Bruaroey" fullname="Jan-Ivar Bruaroey">
         <organization/>
       </author>
       <date/>
     </front>
       <refcontent>W3C Proposed Recommendation</refcontent>
   </reference>

        <reference anchor="W3C.WD-mediacapture-streams"  target="https://www.w3.org/TR/mediacapture-streams/">
          <front>
            <title>Media Capture and Streams</title>
            <author initials="C." surname="Jennings" fullname="Cullen Jennings">
             <organization/>
            </author>
            <author initials="B." surname="Aboba" fullname="Bernard Aboba">
             <organization/>
            </author>
            <author initials="J-I." surname="Bruaroey" fullname="Jan-Ivar Bruaroey">
             <organization/>
            </author>
            <author initials="H." surname="Boström" fullname="Henrik Boström">
             <organization/>
            </author>
            <date/>
          </front>
          <refcontent>W3C Candidate Recommendation</refcontent>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3935.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3261.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3361.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5761.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6120.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6501.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7478.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8155.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5245.xml"/>

      <reference anchor="HTML5" target="https://html.spec.whatwg.org/">
          <front>
            <title>HTML - Living Standard</title>
           <author>
            <organization>WHATWG</organization>
           </author>
            <date month="January" year="2021" />
          </front>
        </reference>

<!-- draft-ietf-ice-trickle (RFC 8838) -->
<reference anchor="RFC8838" target="https://www.rfc-editor.org/info/rfc8838">
  <front>
    <title>Trickle ICE: Incremental Provisioning of Candidates for the
    Interactive Connectivity Establishment (ICE) Protocol</title>
    <author initials="E" surname="Ivov" fullname="Emil Ivov">
      <organization />
    </author>
    <author initials="J" surname="Uberti" fullname="Justin Uberti">
      <organization />
    </author>
    <author initials="P" surname="Saint-Andre" fullname="Peter Saint-Andre">
      <organization />
    </author>
    <date month="January" year="2021" />
  </front>
  <seriesInfo name="RFC" value="8838" />
  <seriesInfo name="DOI" value="10.17487/RFC8838"/>
</reference>

<!-- draft-ietf-mmusic-sdp-bundle-negotiation (RFC 8843) -->
    <reference anchor="RFC8843" target="https://www.rfc-editor.org/info/rfc8843">
      <front>
        <title>Negotiating Media Multiplexing Using the Session Description Protocol (SDP)</title>
        <author initials="C" surname="Holmberg" fullname="Christer Holmberg">
          <organization/>
        </author>
        <author initials="H" surname="Alvestrand" fullname="Harald Alvestrand">
          <organization/>
        </author>
        <author initials="C" surname="Jennings" fullname="Cullen Jennings">
          <organization/>
        </author>
        <date month="January" year="2021"/>
      </front>
        <seriesInfo name="RFC" value="8843"/>
        <seriesInfo name="DOI" value="10.17487/RFC8843"/>
    </reference>

<!-- draft-ietf-rtcweb-gateways (Expired) -->
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-rtcweb-gateways.xml"/>

<!-- draft-ietf-tsvwg-rtcweb-qos-18 (RFC 8837) -->
<reference anchor="RFC8837" target="https://www.rfc-editor.org/info/rfc8837">
  <front>
    <title>Differentiated Services Code Point (DSCP) Packet Markings for
    WebRTC QoS</title>
    <author initials="P." surname="Jones" fullname="Paul Jones">
      <organization/>
    </author>
    <author initials="S." surname="Dhesikan" fullname="Subha Dhesikan">
      <organization/>
    </author>
    <author initials="C." surname="Jennings" fullname="Cullen Jennings">
      <organization/>
    </author>
    <author initials="D." surname="Druta" fullname="Dan Druta">
      <organization/>
    </author>
    <date month="January" year="2021"/>
  </front>
     <seriesInfo name="RFC" value="8837" />
     <seriesInfo name="DOI" value="10.17487/RFC8837"/>
</reference>

        <reference anchor="XEP-0166" target="https://xmpp.org/extensions/xep-0166.html">
          <front>
            <title>Jingle</title>
            <author fullname="Scott Ludwig" initials="S." surname="Ludwig">
              <organization/>
              <address>
                <email>scottlu@google.com</email>
              </address>
            </author>
            <author fullname="Joe Beda" initials="J." surname="Beda">
              <organization/>
              <address>
                <email>jbeda@google.com</email>
              </address>
            </author>
            <author fullname="Peter Saint-Andre" initials="P." surname="Saint-Andre">
              <organization/>
              <address>
                <email>stpeter@jabber.org</email>
              </address>
            </author>
            <author fullname="Robert McQueen" initials="R." surname="McQueen">
              <organization/>
              <address>
                <email>robert.mcqueen@collabora.co.uk</email>
              </address>
            </author>
            <author fullname="Sean Egan" initials="S." surname="Egan">
              <organization/>
              <address>
                <email>seanegan@google.com</email>
              </address>
            </author>
            <author fullname="Joe Hildebrand" initials="J." surname="Hildebrand">
              <organization/>
              <address>
                <email>jhildebr@cisco.com</email>
              </address>
            </author>
            <date month="September" year="2018"/>
          </front>
            <seriesInfo name="XSF XEP" value="0166"/>
        </reference>

        <reference anchor="XEP-0124" target="https://xmpp.org/extensions/xep-0124.html">
          <front>
            <title>Bidirectional-streams Over Synchronous HTTP (BOSH)</title>
            <author fullname="Ian Paterson" initials="I." surname="Paterson">
              <organization/>
              <address>
                <email>ian.paterson@clientside.co.uk</email>
              </address>
            </author>
            <author fullname="Dave Smith" initials="D." surname="Smith">
              <organization/>
              <address>
                <email>dizzyd@jabber.org</email>
              </address>
            </author>
            <author fullname="Peter Saint-Andre" initials="P." surname="Saint-Andre">
              <organization/>
              <address>
                <email>stpeter@jabber.org</email>
              </address>
            </author>
            <author fullname="Jack Moffitt" initials="J." surname="Moffitt">
              <organization/>
              <address>
                <email>jack@chesspark.com</email>
              </address>
            </author>
            <author fullname="Lance Stout" initials="L." surname="Stout">
              <organization/>
              <address>
                <email>lance@andyet.com</email>
              </address>
            </author>
            <author fullname="Winifried Tilanus" initials="W." surname="Tilanus">
              <organization/>
              <address>
                <email>winfried@tilanus.com</email>
              </address>
            </author>
            <date month="November" year="2016"/>
          </front>
            <seriesInfo name="XSF XEP" value="0124"/>
        </reference>

      </references>
    </references>
    <section anchor="Acknowledgements" numbered="false" toc="default">
      <name>Acknowledgements</name>
      <t>The number of people who have taken part in the discussions
      surrounding this document are too numerous to list, or even to identify.
      The people listed below have made special, identifiable contributions; this does
      not mean that others' contributions are less important.</t>
      <t>Thanks to <contact fullname="Cary Bran"/>, <contact fullname="Cullen
      Jennings"/>, <contact fullname="Colin Perkins"/>, <contact fullname="Magnus
      Westerlund"/>, and <contact fullname="Jörg Ott"/>, who offered technical contributions to various
      draft versions of this document.</t>
      <t>Thanks to <contact fullname="Jonathan Rosenberg"/>, <contact fullname="Matthew Kaufman"/>, and others at Skype for
      the ASCII drawings in <xref target="arch-func-grps"/>.</t>
      <t>Thanks to <contact fullname="Alissa Cooper"/>, <contact
      fullname="Björn Höhrmann"/>, <contact fullname="Colin Perkins"/>,
      <contact fullname="Colton Shields"/>, <contact fullname="Eric
      Rescorla"/>, <contact fullname="Heath Matlock"/>, <contact fullname="Henry Sinnreich"/>,
      <contact fullname="Justin Uberti"/>, <contact fullname="Keith Drage"/>,
      <contact fullname="Magnus Westerlund"/>, <contact fullname="Olle E.&nbsp;Johansson"/>,
      <contact fullname="Sean Turner"/>, and <contact fullname="Simon Leinen"/> for document review.</t>
    </section>
  </back>
</rfc>
