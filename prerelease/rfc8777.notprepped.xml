<?xml version="1.0" encoding="utf-8"?>

 <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.12 -->
 <!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

 <rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-mboned-driad-amt-discovery-13" number="8777" submissionType="IETF" category="std" consensus="true" updates="7450" obsoletes="" xml:lang="en" tocInclude="true" sortRefs="true" symRefs="true" version="3">

   <!-- xml2rfc v2v3 conversion 2.39.0 -->
   <front>
     <title abbrev="DRIAD">DNS Reverse IP Automatic Multicast
     Tunneling (AMT) Discovery</title>
     <seriesInfo name="RFC" value="8777"/>
     <author initials="J." surname="Holland" fullname="Jake Holland">
       <organization>Akamai Technologies, Inc.</organization>
       <address>
	 <postal>
	   <street>150 Broadway</street>
	   <city>Cambridge</city><region>MA</region><code>02144</code>
	   <country>United States of America</country>
	 </postal>
	 <email>jakeholland.net@gmail.com</email>
       </address>
     </author>
     <date year="2020" month="April"/>
     <area>Ops</area>
     <workgroup>Mboned</workgroup>

<keyword>example</keyword>        

     <abstract>
       <t>This document updates RFC 7450, "Automatic Multicast Tunneling" (or AMT), by
 modifying the relay discovery process.  A new DNS resource record named
 AMTRELAY is defined for publishing AMT relays for source-specific multicast
 channels.  The reverse IP DNS zone for a multicast sender's IP address is
 configured to use AMTRELAY resource records to advertise a set of AMT relays
 that can receive and forward multicast traffic from that sender over an AMT
 tunnel.  Other extensions and clarifications to the relay discovery
 process are also defined.</t>
     </abstract>
   </front>
   <middle>
     <section anchor="intro" numbered="true" toc="default">
       <name>Introduction</name>
       <t>This document defines DNS Reverse IP AMT Discovery (DRIAD), a mechanism for
 AMT gateways to discover AMT relays that are capable of forwarding multicast
 traffic from a known source IP address.</t>
       <t>AMT (Automatic Multicast Tunneling) is defined in <xref target="RFC7450" format="default"/> and provides
 a method to transport multicast traffic over a unicast tunnel in order to
 traverse network segments that are not multicast capable.</t>
       <t><xref target="RFC7450" sectionFormat="of" section="4.1.5"/> explains that the relay selection process
 for AMT is intended to be more flexible than the particular discovery method
 described in that document. That section further explains that the selection process
 might need to depend on the source of the multicast traffic in some
 deployments, since a relay must be able to receive multicast traffic from the
 desired source in order to forward it.</t>
       <t><xref target="RFC7450" sectionFormat="of" section="4.1.5"/> goes on
       to suggest DNS-based queries as a possible solution: DRIAD is DNS based.  This solution also
 addresses the relay discovery issues in the "Disadvantages of this configuration" lists in Sections
 <xref target="RFC8313" sectionFormat="bare" section="3.3"/> and
 <xref target="RFC8313" sectionFormat="bare" section="3.4"/> of <xref
 target="RFC8313"/>.</t>
       <t>The goal for DRIAD is to enable multicast connectivity between separate
 multicast-enabled networks without preconfiguring any
 peering arrangements between the networks when neither the sending nor the receiving network
 is connected to a multicast-enabled backbone.</t>
       <t>This document extends the relay discovery procedure described in <xref target="RFC7450" sectionFormat="of" section="5.2.3.4"/>.</t>
       <section anchor="background" numbered="true" toc="default">
	 <name>Background</name>
	 <t>The reader is assumed to be familiar with the basic DNS concepts
 described in <xref target="RFC1034" format="default"/>, <xref target="RFC1035"
 format="default"/>, and the subsequent documents that update them, particularly <xref target="RFC2181" format="default"/>.</t>
	 <t>The reader is also assumed to be familiar with the concepts and terminology
 regarding source-specific multicast as described in <xref target="RFC4607" format="default"/> and the
 use of Internet Group Management Protocol Version 3 (IGMPv3) <xref
 target="RFC3376" format="default"/> and Multicast Listener Discovery Version 2
 (MLDv2) <xref target="RFC3810" format="default"/> for group management of
 source-specific multicast channels, as described in <xref target="RFC4604" format="default"/>.</t>
	 <t>The reader should also be familiar with AMT, particularly the terminology
 listed in Sections <xref target="RFC7450" sectionFormat="bare" section="3.2"/>
	 and <xref target="RFC7450" sectionFormat="bare" section="3.3"/> of <xref target="RFC7450"/>.</t>
       </section>
       <section anchor="terminology" numbered="true" toc="default">
	 <name>Terminology</name>
	 <section anchor="relays-and-gateways" numbered="true" toc="default">
	   <name>Relays and Gateways</name>
	   <t>When reading this document, it's especially helpful to recall that once
 an AMT tunnel is established, the relay receives native multicast traffic
 and sends unicast tunnel-encapsulated traffic to the gateway. The gateway
 receives the tunnel-encapsulated packets, decapsulates them, and forwards
 them as native multicast packets, as illustrated in <xref target="figtunnel" format="default"/>.</t>
	   <figure anchor="figtunnel">
	     <name>AMT Tunnel Illustration</name>
	     <artwork name="" type="" align="left" alt=""><![CDATA[

  Multicast  +-----------+  Unicast  +-------------+  Multicast
 >---------> | AMT relay | >=======> | AMT gateway | >--------->
	     +-----------+           +-------------+
 ]]></artwork>
	   </figure>
	 </section>
	 <section anchor="definitions" numbered="true" toc="default">
	   <name>Definitions</name>
	   <table align="center">
	     <name>Definitions</name>
	     <thead>
	       <tr>
		 <th align="right">Term</th>
		 <th align="left">Definition</th>
	       </tr>
	     </thead>
	     <tbody>
	       <tr>
		 <td align="right">(S,G)</td>
		 <td align="left">A source-specific multicast channel, as described in <xref target="RFC4607" format="default"/>. A pair of IP addresses with a source host IP and destination group IP.</td>
	       </tr>
	       <tr>
		 <td align="right">CMTS</td>
		 <td align="left">Cable Modem Termination System</td>
	       </tr>
	       <tr>
		 <td align="right">discovery broker</td>
		 <td align="left">A broker or load balancer for AMT relay
		 discovery, as mentioned in <xref
		 target="RFC7450" sectionFormat="of" section="4.2.1.1"/>.</td>
	       </tr>
	       <tr>
		 <td align="right">downstream</td>
		 <td align="left">Further from the source of traffic, as described in <xref target="RFC7450" format="default"/>.</td>
	       </tr>
	       <tr>
		 <td align="right">FQDN</td>
		 <td align="left">Fully Qualified Domain Name, as described in <xref target="RFC8499" format="default"/>.</td>
	       </tr>
	       <tr>
		 <td align="right">gateway</td>
		 <td align="left">An AMT gateway, as described in <xref target="RFC7450" format="default"/>.</td>
	       </tr>
	       <tr>
		 <td align="right">L flag</td>
		 <td align="left">The "Limit" flag described in <xref target="RFC7450" sectionFormat="of" section="5.1.4.4"/>.</td>
	       </tr>
	       <tr>
		 <td align="right">OLT</td>
		 <td align="left">Optical Line Terminal</td>
	       </tr>
	       <tr>
		 <td align="right">relay</td>
		 <td align="left">An AMT relay, as described in <xref target="RFC7450" format="default"/>.</td>
	       </tr>
	       <tr>
		 <td align="right">RPF</td>
		 <td align="left">Reverse Path Forwarding, as described in <xref target="RFC5110" format="default"/>.</td>
	       </tr>
	       <tr>
		 <td align="right">RR</td>
		 <td align="left">A DNS Resource Record, as described in <xref target="RFC1034" format="default"/>.</td>
	       </tr>
	       <tr>
		 <td align="right">RRType</td>
		 <td align="left">A DNS Resource Record Type, as described in <xref target="RFC1034" format="default"/>.</td>
	       </tr>
	       <tr>
		 <td align="right">SSM</td>
		 <td align="left">Source-specific multicast, as described in <xref target="RFC4607" format="default"/>.</td>
	       </tr>
	       <tr>
		 <td align="right">upstream</td>
		 <td align="left">Closer to the source of traffic, as described in <xref target="RFC7450" format="default"/>.</td>
	       </tr>
	     </tbody>
	   </table>
	 </section>
<section anchor="reqs" numbered="true" toc="default">
<name>Requirements Language</name>
	 <t>
     The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
     NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
     "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
     described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
     when, and only when, they appear in all capitals, as shown here.
	 </t>
	 </section>
       </section>
     </section>
     <section anchor="relay-discovery-overview" numbered="true" toc="default">
       <name>Relay Discovery Overview</name>
       <section anchor="basic-mechanics" numbered="true" toc="default">
	 <name>Basic Mechanics</name>
	 <t>The AMTRELAY resource record (RR) defined in this document is used to
 publish the IP address or domain name of a set of AMT relays or discovery
 brokers that can receive, encapsulate, and forward multicast traffic from
 a particular sender.</t>
	 <t>The sender is the owner of the RR and configures the zone so that it
 contains a set of RRs that provide the addresses or domain names of AMT
 relays (or discovery brokers that advertise relays) that can receive
 multicast IP traffic from that sender.</t>
	 <t>This enables AMT gateways in remote networks to discover an AMT relay that
 is capable of forwarding traffic from the sender.  This, in turn, enables those
 AMT gateways to receive the multicast traffic tunneled over a unicast AMT
 tunnel from those relays and then pass the multicast packets into
 networks or applications that are using the gateway to subscribe to traffic
 from that sender.</t>
	 <t>This mechanism only works for source-specific multicast (SSM) channels.  The
 source address of the (S,G) is reversed and used as an index into one of the
 reverse mapping trees (in-addr.arpa for IPv4, as described in <xref
 target="RFC1035" sectionFormat="of" section="3.5"/>, or ip6.arpa for IPv6, as
	 described in <xref target="RFC3596" sectionFormat="of" section="2.5"/>).</t>
	 <t>This mechanism should be treated as an extension of the AMT relay discovery
 procedure described in <xref target="RFC7450" sectionFormat="of" section="5.2.3.4"/>.  A gateway that
 supports this method of AMT relay discovery <bcp14>SHOULD</bcp14> use this method
 whenever it's performing the relay discovery procedure, the source IP
 addresses for desired (S,G)s are known to the gateway, and conditions match
 the requirements outlined in <xref target="priority" format="default"/>.</t>
	 <t>Some detailed example use cases are provided in <xref target="exampledeployments" format="default"/>, and
 other applicable example topologies appear in Sections <xref
 target="RFC8313" sectionFormat="bare" section="3.3"/>,
 <xref target="RFC8313" sectionFormat="bare" section="3.4"/>, and <xref
 target="RFC8313" sectionFormat="bare" section="3.5"/> of <xref target="RFC8313"/>.</t>
       </section>
       <section anchor="signaling-and-discovery" numbered="true" toc="default">
	 <name>Signaling and Discovery</name>
	 <t>This section describes a typical example of the end-to-end process for
 signaling a receiver's join of an SSM channel that relies on an AMTRELAY
 RR.</t>
	 <t>The example in <xref target="figmessaging" format="default"/> contains two multicast-enabled
 networks that are both connected to the internet with non-multicast-capable
 links and which have no direct association with each other.</t>
	 <t>A content provider operates a sender, which is a source of multicast traffic
 inside a multicast-capable network.</t>
	 <t>An end user who is a customer of the content provider has a multicast-capable
 Internet Service Provider (ISP), which operates a receiving network that uses an
 AMT gateway.  The AMT gateway is DRIAD capable.</t>
	 <t>The content provider provides the user with a receiving application that
 tries to subscribe to at least one (S,G).  This receiving application could,
 for example, be a file transfer system using File Delivery over Unidirectional
 Transport (FLUTE) <xref target="RFC6726" format="default"/>, a live
 video stream using RTP <xref target="RFC3550" format="default"/>, or any other application that might
 subscribe to an SSM channel.</t>
	 <figure anchor="figmessaging">
	   <name>DRIAD Messaging</name>
	   <artwork name="" type="" align="left" alt=""><![CDATA[
		  +---------------+
		  |    Sender     |
   |    |         |  2001:db8::a  |
   |    |         +---------------+
   |Data|                 |
   |Flow|      Multicast  |
  \|    |/      Network   |
   \    /                 |        5: Propagate RPF for Join(S,G)
    \  /          +---------------+
     \/           |   AMT relay   |
		  | 2001:db8:c::f |
		  +---------------+
			  |        4: Gateway connects to Relay,
				      sends Join(S,G) over tunnel
			  |
		 Unicast          
		  Tunnel  |        3: --> DNS Query: type=AMTRELAY,
				  /        a.0.0.0.0.0.0.0.0.0.0.0.
      ^                   |      /         0.0.0.0.0.0.0.0.0.0.0.0.
      |                         /          8.b.d.0.1.0.0.2.ip6.arpa
      |                   |    /      <-- Response:
  Join/Leave       +-------------+         AMTRELAY=2001:db8:c::f
   Signals         | AMT gateway |
      |            +-------------+
      |                   |        2: Propagate RPF for Join(S,G)
      |        Multicast  |
		Network   |
        	          |     1: Join(S=2001:db8::a,G=ff3e::8000:d)
		   +-------------+
		   |   Receiver  |
		   |  (end user) |
		   +-------------+
 ]]></artwork>
	 </figure>
	 <t>In this simple example, the sender IP is 2001:db8::a, which is sending
 traffic to the group address ff3e::8000:d, and the relay IP is
 2001:db8::c:f.</t>
	 <t>The content provider has previously configured the DNS zone that
 contains the reverse IP domain name for the sender's IP address
 so that it provides an AMTRELAY RR with the relay's IP address
 (see <xref target="rpformat" format="default"/> for details about the AMTRELAY RR format and
 semantics).  As described in <xref target="RFC3596"
 sectionFormat="of" section="2.5"/>, the
 reverse IP FQDN of the sender's address "2001:db8::a" is:</t>
	 <sourcecode name="" type=""><![CDATA[
 a.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.           
                                                                arpa.           
 ]]></sourcecode>
	 <t>The sequence of events depicted in <xref target="figmessaging" format="default"/> is as follows:</t>
	 <ol spacing="normal" type="1">
	   <li>The end user starts the app, which issues a join to the (S,G):
 (2001:db8::a, ff3e::8000:d).</li>
	   <li>The join propagates with RPF through the receiver's multicast-enabled
 network with PIM <xref target="RFC7761" format="default"/> or another
	   multicast routing mechanism until the AMT gateway receives a signal to join the (S,G).</li>
	   <li>
	     <t>The AMT gateway performs a reverse DNS lookup for the AMTRELAY
	     RRType by sending an AMTRELAY RRType query for the reverse IP domain name
 for the sender's source IP address (the S from the (S,G)).  </t>
	     <t>
 The DNS resolver for the AMT gateway uses ordinary DNS recursive
 resolution until it has the authoritative result that the content
 provider configured, which informs the AMT gateway that the relay address
 is 2001:db8::c:f.</t>
	   </li>
	   <li>The AMT gateway performs AMT handshakes with the AMT relay as described
 in <xref target="RFC7450" section="4" sectionFormat="of"/>, then forwards a membership report to the
 relay, indicating subscription to the (S,G).</li>
	   <li>The relay propagates the join through its network toward the
	   sender and then forwards the appropriate AMT-encapsulated traffic to the
 gateway, which decapsulates and forwards it as a native multicast through
 its downstream network to the end user.</li>
	 </ol>
	 <t>In the case of an IPv4 (S,G), the only difference in the AMT relay
 discovery process is the use of the in-addr.arpa reverse IP domain name,
 as described in <xref target="RFC1035" sectionFormat="of" section="3.5"/>, instead of the in6.arpa
 domain name.  For example, if the (S,G) is (198.51.100.12, 232.252.0.2),
 the reverse IP FQDN for the AMTRELAY query would be
 "12.100.51.198.in-addr.arpa.".</t>
	 <t>Note that the address family of the AMT tunnel is independent of the
 address family for the multicast traffic.</t>
       </section>
       <section anchor="exampledeployments" numbered="true" toc="default">
	 <name>Example Deployments</name>
	 <section anchor="exrx" numbered="true" toc="default">
	   <name>Example Receiving Networks</name>
	   <section anchor="exrxisp" numbered="true" toc="default">
	     <name>Internet Service Provider</name>
	     <t>One example of a receiving network is an Internet Service Provider (ISP)
 that offers multicast ingest services to its subscribers, illustrated in
 <xref target="figrxisp" format="default"/>.</t>
	     <t>In the example network below, subscribers can join (S,G)s with MLDv2 or
 IGMPv3 as described in <xref target="RFC4604" format="default"/>, and the AMT gateway in this
 ISP can receive and forward multicast traffic from one of the example sending
 networks in <xref target="extx" format="default"/> by discovering the appropriate AMT relays with a DNS
 lookup for the AMTRELAY RR with the reverse IP of the source in the (S,G).</t>
	     <figure anchor="figrxisp">
	       <name>Receiving ISP Example</name>
	       <artwork name="" type="" align="left" alt=""><![CDATA[
		     Internet
		  ^            ^      Multicast-enabled
		  |            |      Receiving Network
	   +------|------------|-------------------------+
	   |      |            |                         |
	   |  +--------+   +--------+    +=========+     |
	   |  | Border |---| Border |    |   AMT   |     |
	   |  | Router |   | Router |    | gateway |     |
	   |  +--------+   +--------+    +=========+     |
	   |      |            |              |          |
	   |      +-----+------+-----------+--+          |
	   |            |                  |             |
	   |      +-------------+    +-------------+     |
	   |      | Agg Routers | .. | Agg Routers |     |
	   |      +-------------+    +-------------+     |
	   |            /     \ \     /         \        |
	   | +---------------+         +---------------+ |
	   | |Access Systems | ....... |Access Systems | |
	   | |(CMTS/OLT/etc.)|         |(CMTS/OLT/etc.)| |
	   | +---------------+         +---------------+ |
	   |        |                        |           |
	   +--------|------------------------|-----------+
		    |                        |
	      +---+-+-+---+---+        +---+-+-+---+---+
	      |   |   |   |   |        |   |   |   |   |
	     /-\ /-\ /-\ /-\ /-\      /-\ /-\ /-\ /-\ /-\
	     |_| |_| |_| |_| |_|      |_| |_| |_| |_| |_|

			    Subscribers
 ]]></artwork>
	     </figure>
	   </section>
	   <section anchor="exoffice" numbered="true" toc="default">
	     <name>Small Office</name>
	     <t>Another example receiving network is a small branch office that regularly
 accesses some multicast content, illustrated in <xref target="figrxofficenm" format="default"/>.</t>
	     <t>This office has desktop devices that need to receive some multicast traffic,
 so an AMT gateway runs on a LAN with these devices to pull traffic in
 through a non-multicast next hop.</t>
	     <t>The office also hosts some mobile devices that have AMT gateway instances
 embedded inside apps in order to receive multicast traffic over their
 non-multicast wireless LAN.  (Note that the "Legacy Router" is a
 simplification that's meant to describe a variety of possible conditions;
 for example, it could be a device providing a split-tunnel VPN as described
 in <xref target="RFC7359" format="default"/>, deliberately excluding multicast traffic for a VPN
 tunnel, rather than a device that is incapable of multicast forwarding.)</t>
	     <figure anchor="figrxofficenm">
	       <name>Small Office (No Multicast Up)</name>
	       <artwork name="" type="" align="left" alt=""><![CDATA[
		  Internet
	       (non-multicast)
		      ^
		      |                  Office Network
	   +----------|----------------------------------+
	   |          |                                  |
	   |    +---------------+ (Wifi)   Mobile apps   |
	   |    | Modem+ | Wifi | - - - -  w/ embedded   |
	   |    | Router |  AP  |          AMT gateways  |
	   |    +---------------+                        |
	   |          |                                  |
	   |          |                                  |
	   |     +----------------+                      |
	   |     | Legacy Router  |                      |
	   |     |   (unicast)    |                      |
	   |     +----------------+                      |
	   |      /        |      \                      |
	   |     /         |       \                     |
	   | +--------+ +--------+ +--------+=========+  |
	   | | Phones | | ConfRm | | Desks  |   AMT   |  |
	   | | subnet | | subnet | | subnet | gateway |  |
	   | +--------+ +--------+ +--------+=========+  |
	   |                                             |
	   +---------------------------------------------+
 ]]></artwork>
	     </figure>
	     <t>By adding an AMT relay to this office network as in <xref target="figrxoffice" format="default"/>, it's
 possible to make use of multicast services from the example multicast-capable
 ISP in <xref target="exrxisp" format="default"/>.</t>
	     <figure anchor="figrxoffice">
	       <name>Small Office Example</name>
	       <artwork name="" type="" align="left" alt=""><![CDATA[
	    Multicast-capable ISP
		      ^
		      |                  Office Network
	   +----------|----------------------------------+
	   |          |                                  |
	   |    +---------------+ (Wifi)   Mobile apps   |
	   |    | Modem+ | Wifi | - - - -  w/ embedded   |
	   |    | Router |  AP  |          AMT gateways  |
	   |    +---------------+                        |
	   |          |               +=======+          |
	   |          +---Wired LAN---|  AMT  |          |
	   |          |               | relay |          |
	   |     +----------------+   +=======+          |
	   |     | Legacy Router  |                      |
	   |     |   (unicast)    |                      |
	   |     +----------------+                      |
	   |      /        |      \                      |
	   |     /         |       \                     |
	   | +--------+ +--------+ +--------+=========+  |
	   | | Phones | | ConfRm | | Desks  |   AMT   |  |
	   | | subnet | | subnet | | subnet | gateway |  |
	   | +--------+ +--------+ +--------+=========+  |
	   |                                             |
	   +---------------------------------------------+
 ]]></artwork>
	     </figure>
	     <t>When multicast-capable networks are chained like this, with a network like
 the one in <xref target="figrxoffice" format="default"/> receiving Internet services from a
 multicast-capable network like the one in <xref target="figrxisp" format="default"/>, it's important for
 AMT gateways to reach the more local AMT relay in order to avoid
 accidentally tunneling multicast traffic from a more distant AMT relay with
 unicast and failing to utilize the multicast transport capabilities of the
 network in <xref target="figrxisp" format="default"/>.</t>
	   </section>
	 </section>
	 <section anchor="extx" numbered="true" toc="default">
	   <name>Example Sending Networks</name>
	   <section anchor="extxsnd" numbered="true" toc="default">
	     <name>Sender-Controlled Relays</name>
	     <t>When a sender network is also operating AMT relays to distribute multicast
 traffic, as in <xref target="figtxrelay" format="default"/>, each address could appear as an AMTRELAY RR
 for the reverse IP of the sender. Alternately, one or more domain names could appear
 in AMTRELAY RRs, and the AMT relay addresses can be discovered by finding
 A or AAAA records from those domain names.</t>
	     <figure anchor="figtxrelay">
	       <name>Small Office Example</name>
	       <artwork name="" type="" align="left" alt=""><![CDATA[
				       Sender Network
		 +-----------------------------------+
		 |                                   |
		 | +--------+   +=======+  +=======+ |
		 | | Sender |   |  AMT  |  |  AMT  | |
		 | +--------+   | relay |  | relay | |
		 |     |        +=======+  +=======+ |
		 |     |            |          |     |
		 |     +-----+------+----------+     |
		 |           |                       |
		 +-----------|-----------------------+
			     v
			  Internet
		       (non-multicast)
 ]]></artwork>
	     </figure>
	   </section>
	   <section anchor="extxprv" numbered="true" toc="default">
	     <name>Provider-Controlled Relays</name>
	     <t>When an ISP offers a service to transmit outbound multicast traffic through
 a forwarding network, it might also offer AMT relays in order to reach
 receivers without multicast connectivity to the forwarding network, as in
 <xref target="figtxisp" format="default"/>. In this case, it's recommended that the ISP also provide at
 least one domain name for the AMT relays for use with the AMTRELAY RR.</t>
	     <t>When the sender wishes to use the relays provided by the ISP for
 forwarding multicast traffic, an AMTRELAY RR should be configured to use
 the domain name provided by the ISP to allow for address reassignment of the
 relays without forcing the sender to reconfigure the corresponding AMTRELAY
 RRs.</t>
	     <figure anchor="figtxisp">
	       <name>Sending ISP Example</name>
	       <artwork name="" type="" align="left" alt=""><![CDATA[
		   +--------+
		   | Sender |
		   +---+----+        Multicast-enabled
		       |              Sending Network
	   +-----------|-------------------------------+
	   |           v                               |
	   |    +------------+     +=======+ +=======+ |
	   |    | Agg Router |     |  AMT  | |  AMT  | |
	   |    +------------+     | relay | | relay | |
	   |           |           +=======+ +=======+ |
	   |           |               |         |     |
	   |     +-----+------+--------+---------+     |
	   |     |            |                        |
	   | +--------+   +--------+                   |
	   | | Border |---| Border |                   |
	   | | Router |   | Router |                   |
	   | +--------+   +--------+                   |
	   +-----|------------|------------------------+
		 |            |
		 v            v
		    Internet
		 (non-multicast)
 ]]></artwork>
	     </figure>
	   </section>
	 </section>
       </section>
     </section>
     <section anchor="relay-discovery-operation" numbered="true" toc="default">
       <name>Relay Discovery Operation</name>
       <section anchor="priority" numbered="true" toc="default">
	 <name>Optimal Relay Selection</name>
	 <section anchor="overview" numbered="true" toc="default">
	   <name>Overview</name>
	   <t>The reverse source IP DNS query of an AMTRELAY RR is a good way for a gateway
 to discover a relay that is known to the sender.</t>
	   <t>However, it is *not* necessarily a good way to discover the best relay for that
 gateway to use, because the RR will only provide information about relays
 known to the source.</t>
	   <t>If there is an upstream relay in a network that is topologically closer to
 the gateway and is able to receive and forward multicast traffic from the sender,
 that relay is better for the gateway to use since more of the network path
 uses native multicast, allowing more chances for packet replication.  But since
 that relay is not known to the sender, it won't be advertised in the sender's
 reverse IP DNS record.  An example network that illustrates this scenario is
 outlined in <xref target="figrxoffice" format="default"/> from <xref target="exoffice" format="default"/>.</t>
	   <t>It's only appropriate for an AMT gateway to discover an AMT relay by querying
 an AMTRELAY RR owned by a sender when all of these conditions are met:</t>
	   <ol spacing="normal" type="1">
	     <li>The gateway needs to propagate a join of an (S,G) over AMT because in
 the gateway's network, no RPF next hop toward the source can
 propagate a native multicast join of the (S,G);</li>
	     <li>The gateway is not already connected to a relay that forwards multicast
 traffic from the source of the (S,G);</li>
	     <li>The gateway is not configured to use a particular IP address for AMT
 discovery, or a relay discovered with that IP is not able to forward
 traffic from the source of the (S,G);</li>
	     <li>The gateway is not able to find an upstream AMT relay with
	     DNS-based Service Discovery (DNS-SD)
 <xref target="RFC6763" format="default"/> using "_amt._udp" as the Service section of the queries, or a
 relay discovered this way is not able to forward traffic from the source of
 the (S,G) (as described in <xref target="trafficabsent" format="default"/> and <xref target="loaded" format="counter"/>); and</li>
	     <li>The gateway is not able to find an upstream AMT relay with the well-known
 anycast addresses from <xref target="RFC7450" sectionFormat="of" section="7"/>.</li>
	   </ol>
	   <t>When all of the above conditions are met, the gateway has no path within its local
 network that can receive multicast traffic from the source IP of the (S,G).</t>
	   <t>In this situation, the best way to find a relay that can forward the
 required traffic is to use information that comes from the operator of the
 sender.  When the sender has configured an AMTRELAY RR, gateways can use the
 DRIAD mechanism defined in this document to discover the relay information
 provided by the sender.</t>
	   <t>Note that the above conditions are designed to prefer the use of
	   a local AMT relay if one can be discovered.  However, note also
	   that the network upstream of the locally discovered relay would
	   still need to receive traffic from the sender of the (S,G) in order
	   to forward it.  Therefore, unless the upstream network contains the
	   sender or has a multicast-capable peering with a network that can
	   forward traffic from the sender, the upstream network might still
	   use AMT to ingest the traffic from a network that can receive
	   traffic from the sender.  If this is the case, the upstream AMT
	   gateway could still rely on the AMTRELAY RR provided by the sender,
	   even though the AMTRELAY RR is not directly used by gateways
	   topologically closer to the receivers.  For a concrete example of
	   such a situation, consider the network in <xref target="figrxoffice"/> connected as one
	   of the customers to the network in <xref target="figrxisp"/>.</t>
	 </section>
	 <section anchor="ordering" numbered="true" toc="default">
	   <name>Preference Ordering</name>
	   <t>This section defines a preference ordering for relay addresses during
 the relay discovery process.  Gateways are encouraged to implement a
 Happy Eyeballs <xref target="RFC8305"/> algorithm to try candidate relays
 concurrently (see <xref target="happy"/>), but even
 gateways that do not implement a Happy Eyeballs algorithm <bcp14>SHOULD</bcp14> use
 this ordering, except as noted.</t>
	   <t>When establishing an AMT tunnel to forward multicast data, it's
 very important for the discovery process to prioritize network
 topology considerations ahead of address selection considerations in
 order to gain the packet replication benefits from using multicast
 instead of unicast tunneling in the multicast-capable portions of the
 network path.</t>
	   <t>The intent of the advice and requirements in this section is to describe
 how a gateway should make use of the concurrency provided by a Happy
 Eyeballs algorithm to reduce the join latency while still prioritizing
 network efficiency considerations over address selection considerations.</t>
	   <t><xref target="RFC8305" sectionFormat="of" section="4"/> requires a Happy Eyeballs algorithm to sort
 the addresses with the Destination Address Selection defined in <xref target="RFC6724" sectionFormat="of" section="6"/>, but for the above reasons, that requirement is superseded
 in the AMT discovery use case by the following considerations:</t>
	   <ul spacing="normal">
	     <li>
	       <t>Prefer Local Relays  </t>
	       <t><xref target="figrxoffice" format="default"/> and <xref target="exoffice" format="default"/> provide a motivating example to prefer
  DNS-SD <xref target="RFC6763" format="default"/> for discovery strictly ahead of using the AMTRELAY RR
  controlled by the sender for AMT discovery.</t>
	       <t>
 For this reason, it's <bcp14>RECOMMENDED</bcp14> that AMT gateways by default perform
  service discovery using DNS Service Discovery (DNS-SD) <xref target="RFC6763" format="default"/> for
  _amt._udp.&lt;domain&gt; (with &lt;domain&gt; chosen as described in <xref target="RFC6763" sectionFormat="of" section="11"/>) and use the AMT relays discovered that way in preference to
  AMT relays discoverable via the mechanism defined in this document
  (DRIAD).</t>
	     </li>
	     <li>
	       <t>Prefer Relays Managed by the Containing Network  </t>
	       <t>
 When no local relay is discoverable with DNS-SD, it still may be the
  case that a relay local to the receiver is operated by the network
  providing transit services to the receiver.  </t>
	       <t>
 In this case, when the network cannot make the relay discoverable via
  DNS-SD, the network <bcp14>SHOULD</bcp14> use the well-known anycast addresses from <xref target="RFC7450" format="default" section="7"/> to route discovery traffic to the relay most
  appropriate to the receiver's gateway.</t>
	       <t>
 Accordingly, the gateway <bcp14>SHOULD</bcp14> by default discover a relay with the
  well-known AMT anycast addresses as the next-best option after DNS-SD
  when searching for a local relay.</t>
	     </li>
	     <li>
	       <t>Let Sender Manage Relay Provisioning  </t>
	       <t>
 A related motivating example is provided by considering a sender whose
  traffic can be forwarded by relays in a sender-controlled network
  like <xref target="figtxrelay" format="default"/> in <xref target="extxsnd" format="default"/> and by relays in a
  provider-controlled network like <xref target="figtxisp" format="default"/> in <xref target="extxprv" format="default"/>, with
  different cost and scalability profiles for the different options.  </t>
	       <t>
 In this example about the sending-side network, the precedence field
  described in <xref target="rrdef-precedence" format="default"/> is a critical method of control so
  that senders can provide the appropriate guidance to gateways
  during the discovery process in order to manage load and failover
  scenarios in a manner that operates well with the sender's
  provisioning strategy for horizontal scaling of AMT relays.  </t>
	       <t>
 Therefore, after DNS-SD, the precedence from the RR <bcp14>MUST</bcp14> be used for
  sorting preference ahead of the Destination Address Selection ordering
  from <xref target="RFC6724" section="6" sectionFormat="of"/> so that only relay IPs with the same
  precedence are directly compared according to the Destination Address
  Selection ordering.</t>
	     </li>
	   </ul>
	   <t>Accordingly, AMT gateways <bcp14>SHOULD</bcp14> by default prefer relays in this
	   order:</t>
 <ol>
 <li>DNS-SD</li>
 <li>Anycast addresses from <xref target="RFC7450" sectionFormat="of" section="7"/></li>
 <li>DRIAD</li>
 </ol>
	   <t>This default behavior <bcp14>MAY</bcp14> be overridden by administrative configuration where
 other behavior is more appropriate for the gateway within its network.</t>
	   <t>Among relay addresses that have an equivalent preference as described above, a
 Happy Eyeballs algorithm for AMT <bcp14>SHOULD</bcp14> use the Destination Address Selection
 defined in <xref target="RFC6724" sectionFormat="of" section="6"/>.</t>
	   <t>Among relay addresses that still have an equivalent preference after the
 above orderings, a gateway <bcp14>SHOULD</bcp14> make a non-deterministic choice (such as
 a pseudorandom selection) for relay preference ordering in order to
 support load balancing by DNS configurations that provide many relay
 options.</t>
	   <t>The gateway <bcp14>MAY</bcp14> introduce a bias in the non-deterministic choice according
 to information that indicates expected benefits from selecting some relays in
 preference to others. Details about the structure and collection of this
 information are out of scope for this document but could, for example, be
 obtained by out-of-band methods or from a historical record about
 network topology, timing information, or the response to a probing
 mechanism. A gateway in possession of such information <bcp14>MAY</bcp14> use it to prefer topologically closer relays.</t>
	   <t>Within the above constraints, gateways <bcp14>MAY</bcp14> make use of other considerations
 from <xref target="RFC8305" sectionFormat="of" section="4"/>, such as the address family interleaving
 strategies, to produce a final ordering of candidate relay addresses.</t>
	   <t>Note also that certain relay addresses might be excluded from consideration
 by the hold-down timers described in <xref target="trafficabsent" format="default"/> or <xref target="loaded" format="counter"/>.  These
 relays constitute "unusable destinations" under Rule 1 of the Destination
 Address Selection and are also not part of the superseding considerations
 described above.</t>
	   <t>The discovery and connection process for the relay addresses in the above
 described ordering <bcp14>MAY</bcp14> operate in parallel, subject to delays prescribed
 by the Happy Eyeballs requirements described in <xref
 target="RFC8305" sectionFormat="of" section="5"/>
 for successively launched concurrent connection attempts.</t>
	 </section>
	 <section anchor="connecting-to-multiple-relays" numbered="true" toc="default">
	   <name>Connecting to Multiple Relays</name>
	   <t>In some deployments, it may be useful for a gateway to connect to
 multiple upstream relays and subscribe to the same traffic in order to
 support an active/active failover model.  A gateway <bcp14>SHOULD NOT</bcp14> be
 configured to do so without guaranteeing that adequate bandwidth is
 available.</t>
	   <t>A gateway configured to do this <bcp14>SHOULD</bcp14> still use the same preference-ordering logic from <xref target="ordering" format="default"/> for each connection.  (Note that
 this ordering allows for overriding by explicit administrative
 configuration where required.)</t>
	 </section>
       </section>
       <section anchor="happy" numbered="true" toc="default">
	 <name>Happy Eyeballs</name>
	 <section anchor="overview-1" numbered="true" toc="default">
	   <name>Overview</name>
	   <t>Often, multiple choices of relay will exist for a gateway using DRIAD
 for relay discovery.  Happy Eyeballs <xref target="RFC8305" format="default"/> provides a widely
 deployed and generalizable strategy for probing multiple possible
 connections in parallel. Therefore, it is <bcp14>RECOMMENDED</bcp14> that DRIAD-capable
 gateways implement a Happy Eyeballs algorithm to support fast discovery
 of the most preferred available relay by probing multiple relays
 concurrently.</t>
	   <t>The parallel discovery logic of a Happy Eyeballs algorithm serves to
 reduce join latency for the initial join of an SSM channel.  This section
 and the preference ordering of relays defined in <xref target="ordering"
 format="default"/> together provide guidance on use of a Happy Eyeballs algorithm for the
 case of establishing AMT connections.</t>
	   <t>Note that according to the definition in <xref target="connection-def" format="default"/> of this
 document, establishing the connection occurs before sending a membership
 report.  As described in <xref target="RFC8305"
 sectionFormat="of" section="5"/>, only one of the
 successful connections will be used, and the others are all canceled
 or ignored.  In the context of an AMT connection, this means the gateway
 will send the membership reports that subscribe to traffic only for the
 chosen connection after the Happy Eyeballs algorithm resolves.</t>
	 </section>
	 <section anchor="algorithm-guidelines" numbered="true" toc="default">
	   <name>Algorithm Guidelines</name>
	   <t>During the "Initiation of asynchronous DNS queries" phase
	   described in <xref target="RFC8305" sectionFormat="of" section="3"/>, a gateway attempts to resolve the domain names
 listed in <xref target="priority" format="default"/>.  This consists of resolving the SRV queries for
 DNS-SD domains for the AMT service, as well as the AMTRELAY query for the
	   reverse IP domain defined in this document.</t>
	   
	   <t>Each of the SRV and AMTRELAY responses might contain:</t>

	   <ul
	   spacing="normal"> <li>one
	   or more IP addresses (as with type 1 or type 2 AMTRELAY
	   responses or when the SRV Additional Data section of the
	   SRV response contains the address records for the target,
	   as urged by <xref target="RFC2782" format="default"/>),
	   or</li>
	   <li>
	   only domain names (as with type 3
	   responses from <xref target="rtype" format="default"/> or
	   an SRV response without an additional data section).</li></ul>
	   <t>When present, IP addresses in the initial response provide resolved
 destination address candidates for the "Sorting of resolved
 destination addresses" phase described in <xref target="RFC8305"
 sectionFormat="of" section="4"/>),
 whereas domain names without IP addresses in the initial response result
 in another set of queries for AAAA and A records, whose responses provide
 the candidate resolved destination addresses.</t>
	   <t>Since the SRV or AMTRELAY responses don't have a bound on the count of
 queries that might be generated aside from the bounds imposed by the
 DNS resolver, it's important for the gateway to provide a rate limit on
 the DNS queries.  The DNS query functionality is expected to follow
 ordinary standards and best practices for DNS clients.  A gateway <bcp14>MAY</bcp14>
 use an existing DNS client implementation that does so and <bcp14>MAY</bcp14> rely on
 that client's rate-limiting logic to avoid issuing excessive queries.
 Otherwise, a gateway <bcp14>MUST</bcp14> provide a rate limit for the DNS queries, and
 its default settings <bcp14>SHOULD NOT</bcp14> permit more than 10 queries for any
 100-millisecond period (though this <bcp14>MAY</bcp14> be overridable by the administrative
 configuration).</t>
	   <t>As the resolved IP addresses arrive, the Happy Eyeballs algorithm
 sorts them according to the requirements and recommendations given in
 <xref target="ordering" format="default"/> and attempts connections with the corresponding relays
 under the algorithm restrictions and guidelines given in <xref target="RFC8305" format="default"/> for
 the "Establishment of one connection, which cancels all other attempts"
 phase.  As described in <xref target="RFC8305" sectionFormat="of" section="3"/>, DNS resolution is
 treated as asynchronous, and connection initiation does not wait
 for lagging DNS responses.</t>
	 </section>
	 <section anchor="connection-def" numbered="true" toc="default">
	   <name>Connection Definition</name>
	   <t><xref target="RFC8305" sectionFormat="of" section="5"/>
	   non-normatively describes a successful connection attempt as "generally when the TCP handshake completes".</t>
	   <t>There is no normative definition of a connection in the AMT specification
 <xref target="RFC7450" format="default"/>, and there is no TCP connection involved in an AMT tunnel.</t>
	   <t>However, the concept of an AMT connection in the context of a Happy
 Eyeballs algorithm is a useful one, and so this section provides the
 following normative definition:</t>
	   <ul spacing="normal">

	     <li>An AMT connection is established successfully when the gateway receives
 from a newly discovered relay a valid Membership Query message
 (<xref target="RFC7450" sectionFormat="of" section="5.1.4"/>) that does not have the L flag set.</li>
	   </ul>
	   <t>See <xref target="loaded" format="default"/> of this document for further information about the
 relevance of the L flag to the establishment of a Happy Eyeballs
 connection.  See <xref target="flowhealth" format="default"/> for an overview of how to respond
 if the connection does not provide multicast connectivity to the
 source.</t>
	   <t>To "cancel" this kind of AMT connection for the Happy Eyeballs algorithm,
 a gateway that has not sent a membership report with a subscription
 would simply stop sending AMT packets for that connection.  A
 gateway only sends a membership report to a connection it has chosen as
 the most preferred available connection.</t>
	 </section>
       </section>
       <section anchor="guidelines-for-restarting-discovery" numbered="true" toc="default">
	 <name>Guidelines for Restarting Discovery</name>
	 <section anchor="overview-2" numbered="true" toc="default">
	   <name>Overview</name>
	   <t>It's expected that gateways deployed in different environments will use a
 variety of heuristics to decide when it's appropriate to restart the relay
 discovery process in order to meet different performance goals (for example,
 to fulfill different kinds of service level agreements).</t>
	   <t>In general, restarting the discovery process is always safe for
 the gateway and relay during any of the events listed in this section
 but may cause a disruption in the forwarded traffic if the discovery
 process results in choosing a different relay because this changes
 the RPF forwarding tree for the multicast traffic upstream of the gateway.
 This is likely to result in some dropped or duplicated packets from channels
	   actively being tunneled from the old relay to the gateway.</t>
	   <t>The degree of impact on the traffic from choosing a different relay may
 depend on network conditions between the gateway and the new relay, as well
 as the network conditions and topology between the sender and the new relay,
 as this may cause the relay to propagate a new RPF join toward the sender.</t>
	   <t>Balancing the expected impact on the tunneled traffic against likely
 or observed problems with an existing connection to the relay is the goal
 of the heuristics that gateways use to determine when to restart the
 discovery process.</t>
	   <t>The non-normative advice in this section should be treated as guidelines to
 operators and implementors working with AMT systems that can use DRIAD as
 part of the relay discovery process.</t>
	 </section>
	 <section anchor="updates-to-restarting-events" numbered="true" toc="default">
	   <name>Updates to Restarting Events</name>
	   <t><xref target="RFC7450" sectionFormat="of" section="5.2.3.4.1"/> lists several events that may cause a
 gateway to start or restart the discovery procedure.</t>
	   <t>This document provides some updates and recommendations regarding the
 handling of these and similar events.  The first five events are copied
 here and numbered for easier reference, and the remaining four events are
 newly added for consideration in this document:</t>
	   <ol spacing="normal" type="1">
	     <li>When a gateway pseudo-interface is started (enabled).</li>
	     <li>When the gateway wishes to report a group subscription when none
 currently exists.</li>
	     <li>Before sending the next Request message in a membership update
 cycle.</li>
	     <li>After the gateway fails to receive a response to a Request
 message.</li>
	     <li>After the gateway receives a Membership Query message with the
 L flag set to 1.</li>
	     <li>When the gateway wishes to report an (S,G) subscription with a source
 address that does not currently have other group subscriptions.</li>
            <li>When there is a network change detected; for example, when a gateway is
operating inside an end user device or application and the device
joins a different network or when the domain portion of a DNS-SD
domain name changes in response to a DHCP message or administrative
configuration.</li>
            <li>When substantial loss, persistent congestion, or network overload is
detected in the stream of AMT packets from a relay.</li>
            <li>When the gateway has reported one or more (S,G) subscriptions but
no traffic is received from the source for some timeout (see
<xref target="trafficabsent" format="default"/>).</li>
          </ol>
          <t>This list is not exhaustive, nor are any of the listed events strictly
required to always force a restart of the discovery process.</t>
          <t>Note that during event #1, a gateway may use DNS-SD but does not
have sufficient information to use DRIAD, since no source is known.</t>
        </section>
        <section anchor="stability" numbered="true" toc="default">
          <name>Tunnel Stability</name>
          <t>In general, subscribers to active traffic flows that are being forwarded
by an AMT gateway are less likely to experience a degradation in service
(for example, from missing or duplicated packets) when the gateway continues
using the same relay as long as the relay is not overloaded and the network
conditions remain stable.</t>
          <t>Therefore, gateways <bcp14>SHOULD</bcp14> avoid performing a full restart of the discovery
process during routine cases of event #3 (sending a new Request message),
since it occurs frequently in normal operation.</t>
          <t>However, see Sections <xref target="flowhealth" format="counter"/>, <xref target="discoverymessage" format="counter"/>, and <xref target="ancient" format="counter"/> for more
information about exceptional cases when it may be appropriate to use
event #3.</t>
        </section>
        <section anchor="flowhealth" numbered="true" toc="default">
          <name>Traffic Health</name>
          <section anchor="trafficabsent" numbered="true" toc="default">
            <name>Absence of Traffic</name>
            <t>If a gateway indicates one or more (S,G) subscriptions in a Membership
Update message but no traffic for any of the (S,G)s is received in a
reasonable time, it's appropriate for the gateway to restart the
discovery process.</t>
            <t>If the gateway restarts the discovery process multiple times consecutively
for this reason, the timeout period <bcp14>SHOULD</bcp14> be adjusted to provide a random
exponential back-off.</t>
            <t>The <bcp14>RECOMMENDED</bcp14> timeout is a random value in the range
[initial_timeout, MIN(initial_timeout * 2^retry_count, maximum_timeout)],
with a <bcp14>RECOMMENDED</bcp14> initial_timeout of 4 seconds and a <bcp14>RECOMMENDED</bcp14>
maximum_timeout of 120 seconds (which is the recommended minimum NAT
mapping timeout described in <xref target="RFC4787" format="default"/>).</t>
            <t>Note that the recommended initial_timeout is larger than the initial 
timeout recommended in the similar algorithm from <xref target="RFC7450" sectionFormat="of" section="5.2.3.4.3"/>.  This is to provide time for RPF Join propagation in the
sending network.  Although the timeout values may be administratively
adjusted to support performance requirements, operators are advised to
consider the possibility of join propagation delays between the sender
and the relay when choosing an appropriate timeout value.</t>
            <t>Gateways restarting the discovery process because of an absence of
traffic <bcp14>MUST</bcp14> use a hold-down timer that removes this relay from
consideration during subsequent rounds of discovery while active.
The hold-down <bcp14>SHOULD</bcp14> last for no less than 3 minutes and no more than
10 minutes.</t>
          </section>
          <section anchor="loss-and-congestion" numbered="true" toc="default">
            <name>Loss and Congestion</name>
            <t>In some gateway deployments, it is also feasible to monitor the health of
traffic flows through the gateway -- for example, by detecting the rate of
packet loss by communicating out of band with receivers or monitoring the
packets of known protocols with sequence numbers.  Where feasible,
it's encouraged for gateways to use such traffic health information to
trigger a restart of the discovery process during event #3 (before
sending a new Request message).</t>
            <t>However, if a transient network event that affects the tunneled
	    multicast stream -- as opposed to an event that affects the tunnel
	    connection between the relay and gateway -- occurs, poor health
	    detection could be triggered for many gateways simultaneously. In
	    this situation, adding a random delay to avoid synchronized
	    rediscovery by many gateways is recommended.</t>
            <t>The span of the random portion of the delay should be no less than 10
seconds by default but may be administratively configured
to support different performance requirements.</t>
          </section>
          <section anchor="ancient" numbered="true" toc="default">
            <name>Ancient Discovery Information</name>
            <t>In most cases, a gateway actively receiving healthy traffic from a relay
that has not indicated load with the L flag should prefer to remain
connected to the same relay, as described in <xref target="stability" format="default"/>.</t>
            <t>However, a relay that appears healthy but has been forwarding traffic for
days or weeks may have an increased chance of becoming unstable.  Gateways
may benefit from restarting the discovery process during event #3 (before
sending a Request message) after the expiration of a long-term timeout on
the order of multiple hours or even days in some deployments.</t>
            <t>It may be beneficial for such timers to consider the amount of traffic
currently being forwarded and to give a higher probability of restarting
discovery during periods with an unusually low data rate to reduce the
impact on active traffic while still avoiding relying on the results of a
very old discovery.</t>
            <t>Other issues may also be worth considering as part of this heuristic; for
example, if the DNS expiry time of the record that was used to discover
the current relay has not passed, the long-term timer might be restarted
without restarting the discovery process.</t>
          </section>
        </section>
        <section anchor="loaded" numbered="true" toc="default">
          <name>Relay Loaded or Shutting Down</name>
          <t>The L flag (see <xref target="RFC7450" sectionFormat="of" section="5.1.4.4"/>) is the preferred mechanism for
a relay to signal overloading or a graceful shutdown to gateways.</t>
          <t>A gateway that supports handling of the L flag should generally restart the
discovery process when it processes a Membership Query packet with the
L flag set.  If an L flag is received while a concurrent Happy Eyeballs
discovery process is underway for multiple candidate relays (<xref target="happy" format="default"/>),
the relay sending the L flag <bcp14>SHOULD NOT</bcp14> be considered for the relay selection.</t>
          <t>It is also <bcp14>RECOMMENDED</bcp14> that gateways avoid choosing a relay
that has recently sent an L flag, with approximately a 10-minute hold-down.
Gateways <bcp14>SHOULD</bcp14> treat this hold-down timer in the same way as the hold-down
in <xref target="trafficabsent" format="default"/> so that the relay is removed from consideration
for subsequent short-term rounds of discovery.</t>
        </section>
        <section anchor="discoverymessage" numbered="true" toc="default">
          <name>Relay Discovery Messages vs. Restarting Discovery</name>
          <t>All AMT relays are required by <xref target="RFC7450"
	  format="default"/> to support handling of
Relay Discovery messages (e.g., in <xref target="RFC7450" sectionFormat="of" section="5.3.3.2"/>).</t>
          <t>So a gateway with an existing connection to a relay can send a Relay
Discovery message to the unicast address of that AMT relay.  Under stable
conditions with an unloaded relay, it's expected that the relay will
return its own unicast address in the Relay Advertisement in response
to such a Relay Discovery message.  Since this will not result in the
gateway changing to another relay unless the relay directs the gateway
away, this is a reasonable exception to the advice against handling event #3
described in <xref target="stability" format="default"/>.</t>
          <t>This behavior is discouraged for gateways that do support the L flag to
avoid sending unnecessary packets over the network.</t>
          <t>However, gateways that do not support the L flag may be able to avoid a
disruption in the forwarded traffic by sending such Relay Discovery
messages regularly.  When a relay is under load or has started a graceful
shutdown, it may respond with a different relay address, which the gateway
can use to connect to a different relay.  This kind of coordinated handoff
will likely result in a smaller disruption to the traffic than if the relay
simply stops responding to Request messages and stops forwarding traffic.</t>
          <t>This style of Relay Discovery message (one sent to the unicast address
of a relay that's already forwarding traffic to this gateway) <bcp14>SHOULD NOT</bcp14> be
considered a full restart of the relay discovery process.  It is <bcp14>RECOMMENDED</bcp14>
that gateways support the L flag, but for gateways that do not support the
L flag, sending this message during event #3 may help mitigate service
degradation when relays become unstable.</t>
        </section>
        <section anchor="independent-discovery-per-traffic-source" numbered="true" toc="default">
          <name>Independent Discovery per Traffic Source</name>
          <t>Relays discovered via the AMTRELAY RR are source-specific relay addresses and
may use different pseudo-interfaces from each other and from relays
discovered via DNS-SD or via a non-source-specific address, as described in
<xref target="RFC7450" sectionFormat="of" section="4.1.2.1"/>.</t>
          <t>Restarting the discovery process for one pseudo-interface does not require
restarting the discovery process for other pseudo-interfaces.  Gateway
heuristics about restarting the discovery process should operate
independently for different tunnels to relays when responding to events
that are specific to the different tunnels.</t>
        </section>
      </section>
      <section anchor="dns-configuration" numbered="true" toc="default">
        <name>DNS Configuration</name>
        <t>Often, an AMT gateway will only have access to the source and group IP addresses
of the desired traffic and will not know any other name for the source of the
traffic.  Because of this, typically, the best way of looking up AMTRELAY RRs
will be by using the source IP address as an index into one of the reverse
mapping trees (in-addr.arpa for IPv4, as described in <xref target="RFC1035" sectionFormat="of" section="3.5"/>, or ip6.arpa for IPv6, as described in <xref target="RFC3596" sectionFormat="of" section="2.5"/>).</t>
        <t>Therefore, it is <bcp14>RECOMMENDED</bcp14> that AMTRELAY RRs be added to reverse IP
zones as appropriate.  AMTRELAY records <bcp14>MAY</bcp14> also appear in other zones,
since this may be necessary to perform delegation from the reverse zones
(see, for example, <xref target="RFC2317" sectionFormat="of" section="5.2"/>), but the use case enabled
by this document requires a reverse IP mapping for the source from an
(S,G) in order to be useful to most AMT gateways.  This document does
not define semantics for the use of AMTRELAY records obtained in a way
other than by a reverse IP lookup.</t>
        <t>When performing the AMTRELAY RR lookup, any CNAMEs or DNAMEs found <bcp14>MUST</bcp14> be
followed.  This is necessary to support zone delegation.  Some examples
outlining this need are described in <xref target="RFC2317" format="default"/>.</t>
        <t>See Sections <xref target="rrdef" format="counter"/> and <xref target="rpformat" format="counter"/> for a detailed explanation of the contents
of a DNS zone file.</t>
      </section>
      <section anchor="waiting-for-dns-resolution" numbered="true" toc="default">
        <name>Waiting for DNS Resolution</name>
        <t>DNS query functionality is expected to follow ordinary standards and best
practices for DNS clients.  A gateway <bcp14>MAY</bcp14> use an existing DNS client
implementation that does so and <bcp14>MAY</bcp14> rely on that client's retry logic
to determine the timeouts between retries.</t>
        <t>Otherwise, a gateway <bcp14>MAY</bcp14> resend a DNS query if it does not receive an
appropriate DNS response within some timeout period.  If the gateway retries
multiple times, the timeout period <bcp14>SHOULD</bcp14> be adjusted to provide a random
exponential back-off.</t>
        <t>As with the waiting process for the Relay Advertisement message from
<xref target="RFC7450" sectionFormat="of" section="5.2.3.4.3"/>, the <bcp14>RECOMMENDED</bcp14> timeout is a random value
in the range [initial_timeout, MIN(initial_timeout * 2^retry_count,
maximum_timeout)], with a <bcp14>RECOMMENDED</bcp14> initial_timeout of 1 second and
a <bcp14>RECOMMENDED</bcp14> maximum_timeout of 120 seconds.</t>
      </section>
    </section>
    <section anchor="rrdef" numbered="true" toc="default">
      <name>AMTRELAY Resource Record Definition</name>
      <section anchor="amtrelay-rrtype" numbered="true" toc="default">
        <name>AMTRELAY RRType</name>
        <t>The AMTRELAY RRType has the mnemonic AMTRELAY and type code 260 (decimal).</t>
        <t>The AMTRELAY RR is class independent.</t>
      </section>
      <section anchor="amtrelay-rdata-format" numbered="true" toc="default">
        <name>AMTRELAY RData Format</name>
        <t>The AMTRELAY RData consists of an 8-bit precedence field, a 1-bit
"Discovery Optional" field, a 7-bit type field, and a variable
length relay field.</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   precedence  |D|    type     |                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +
~                            relay                              ~
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
        <section anchor="rrdef-precedence" numbered="true" toc="default">
          <name>RData Format - Precedence</name>
          <t>This is an 8-bit precedence for this record.  It is interpreted in
the same way as the PREFERENCE field described in <xref target="RFC1035" sectionFormat="of" section="3.3.9"/>.</t>
          <t>Relays listed in AMTRELAY records with a lower value for precedence are to be
attempted first.</t>
        </section>
        <section anchor="rrdef-dbit" numbered="true" toc="default">
          <name>RData Format - Discovery Optional (D-bit)</name>
          <t>The D-bit is a "Discovery Optional" flag.</t>
          <t>If the D-bit is set to 0, a gateway using this RR <bcp14>MUST</bcp14> perform AMT relay
discovery as described in <xref target="RFC7450" sectionFormat="of" section="4.2.1.1"/> rather than directly
sending an AMT Request message to the relay.</t>
          <t>That is, the gateway <bcp14>MUST</bcp14> receive an AMT Relay Advertisement message (<xref target="RFC7450" sectionFormat="of" section="5.1.2"/>) for an address before sending an AMT Request message
(<xref target="RFC7450" sectionFormat="of" section="5.1.3"/>) to that address. Before receiving the Relay
Advertisement message, this record has only indicated that the address can be
used for AMT relay discovery, not for a Request message.  This is necessary for
devices that are not fully functional AMT relays but rather load balancers or
brokers, as mentioned in <xref target="RFC7450" sectionFormat="of" section="4.2.1.1"/>.</t>
          <t>If the D-bit is set to 1, the gateway <bcp14>MAY</bcp14> send an AMT Request message directly
to the discovered relay address without first sending an AMT Discovery message.</t>
          <t>This bit should be set according to advice from the AMT relay operator. The
D-bit <bcp14>MUST</bcp14> be set to zero when no information is available from the AMT relay
operator about its suitability.</t>
        </section>
        <section anchor="rtype" numbered="true" toc="default">
          <name>RData Format - Type</name>
          <t>The type field indicates the format of the information that
is stored in the relay field.</t>
          <t>The following values are defined:</t>
          <ul spacing="normal">
            <li>type = 0:
The relay field is empty (0 bytes).</li>
            <li>type = 1:
The relay field contains a 4-octet IPv4 address.</li>
            <li>type = 2:
The relay field contains a 16-octet IPv6 address.</li>
            <li>type = 3:
The relay field contains a wire-encoded domain name. The wire-encoded
format is self-describing, so the length is implicit. The domain name
<bcp14>MUST NOT</bcp14> be compressed (see <xref target="RFC1035" sectionFormat="of"
section="3.3"/> and <xref target="RFC3597" sectionFormat="of" section="4"/>).</li>
          </ul>
          <t>RRs with an undefined value in the Type field <bcp14>SHOULD NOT</bcp14> be considered
by receiving gateways for AMT relay discovery.</t>
        </section>
        <section anchor="rdformat" numbered="true" toc="default">
          <name>RData Format - Relay</name>
          <t>The relay field is the address or domain name of the AMT relay. It is
formatted according to the type field.</t>
          <t>When the type field is 0, the length of the relay field is 0, and it
indicates that no AMT relay should be used for multicast traffic from this
source.</t>
          <t>When the type field is 1, the length of the relay field is 4 octets, and a
32-bit IPv4 address is present. This is an IPv4 address as described in
<xref target="RFC1035" sectionFormat="of" section="3.4.1"/>. This is a 32-bit number in network byte
order.</t>
          <t>When the type field is 2, the length of the relay field is 16 octets, and
a 128-bit IPv6 address is present. This is an IPv6 address as described in
<xref target="RFC3596" sectionFormat="of" section="2.2"/>. This is a 128-bit number in network byte order.</t>
          <t>When the type field is 3, the relay field is a normal wire-encoded domain
name, as described in <xref target="RFC1035" sectionFormat="of"
section="3.3"/>. For the reasons given in <xref target="RFC3597"
sectionFormat="of" section="4"/>, compression <bcp14>MUST NOT</bcp14> be
used.</t>
          <t>For a type 3 record, the D-bit and preference fields carry over to all
A or AAAA records for the domain name.  There is no difference in the
result of the discovery process when it's obtained by type 1 or type 2
AMTRELAY records with identical D-bit and preference fields vs. when
the result is obtained by a type 3 AMTRELAY record that resolves
to the same set of IPv4 and IPv6 addresses via A and AAAA lookups.</t>
        </section>
      </section>
      <section anchor="rpformat" numbered="true" toc="default">
        <name>AMTRELAY Record Presentation Format</name>
        <section anchor="representation-of-amtrelay-rrs" numbered="true" toc="default">
          <name>Representation of AMTRELAY RRs</name>
          <t>AMTRELAY RRs may appear in a zone data master file. The precedence, D-bit,
relay type, and relay fields are <bcp14>REQUIRED</bcp14>.</t>
          <t>If the relay type field is 0, the relay field <bcp14>MUST</bcp14> be ".".</t>
          <t>The presentation for the record is as follows:</t>
          <sourcecode name="" type=""><![CDATA[
  IN AMTRELAY precedence D-bit type relay
]]></sourcecode>
        </section>
        <section anchor="examples" numbered="true" toc="default">
          <name>Examples</name>
          <t>In a DNS authoritative nameserver that understands the AMTRELAY type,
the zone might contain a set of entries like this:</t>
          <sourcecode name="" type=""><![CDATA[
    $ORIGIN 100.51.198.in-addr.arpa.
    12     IN AMTRELAY  10 0 1 203.0.113.15
    12     IN AMTRELAY  10 0 2 2001:db8::15
    12     IN AMTRELAY 128 1 3 amtrelays.example.com.
]]></sourcecode>
          <t>This configuration advertises an IPv4 discovery address, an IPv6
discovery address, and a domain name for AMT relays that can receive
traffic from the source 198.51.100.12.  The IPv4 and IPv6 addresses
are configured with a D-bit of 0 (meaning discovery is mandatory, as
described in <xref target="rrdef-dbit" format="default"/>) and a precedence 10 (meaning they're
preferred ahead of the last entry, which has precedence 128).</t>
          <t>For zone files in name servers that don't support the AMTRELAY RRType
natively, it's possible to use the format for unknown RR types, as
described in <xref target="RFC3597" format="default"/>.  This approach would replace the AMTRELAY
entries in the example above with the entries below:</t>
          <sourcecode name="" type=""><![CDATA[
    10   IN TYPE260  \# (
           6  ; length
           0a ; precedence=10
           01 ; D=0, relay type=1, an IPv4 address
           cb00710f ) ; 203.0.113.15
    10   IN TYPE260  \# (
           18 ; length
           0a ; precedence=10
           02 ; D=0, relay type=2, an IPv6 address
           20010db800000000000000000000000f ) ; 2001:db8::15
    10   IN TYPE260  \# (
           24 ; length
           80 ; precedence=128
           83 ; D=1, relay type=3, a wire-encoded domain name
         09616d7472656c617973076578616d706c6503636f6d ) ; domain name
]]></sourcecode>
          <t>See <xref target="extranslate" format="default"/> for more details.</t>
        </section>
      </section>
    </section>
    <section anchor="iana" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>This document updates the DNS "Resource Record (RR) TYPEs" registry
by assigning type 260 to the AMTRELAY record.</t>
      <t>This document creates a new registry named "AMTRELAY Resource Record
Parameters" with a subregistry for the "Relay Type Field".  The initial
values in the subregistry are:</t>
<table align="left">
         <name>Initial Contents of the &quot;Relay Type Field&quot; Registry</name>
  <thead>
          <tr>
            <th align="left">Value</th>
            <th align="left">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="left">0</td>
            <td align="left">No relay is present</td>
          </tr>
          <tr>
            <td align="left">1</td>
            <td align="left">A 4-byte IPv4 address is present</td>
          </tr>
<tr>
            <td align="left">2</td>
            <td align="left">A 16-byte IPv6 address is present</td>
</tr>
<tr>
            <td align="left">3</td>
            <td align="left">A wire-encoded domain name is present</td>
</tr>
<tr>
            <td align="left">4-255</td>
            <td align="left">Unassigned</td>
</tr>
        </tbody>
</table>
      <t>Values 0, 1, 2, and 3 are further explained in Sections <xref target="rtype" format="counter"/> and <xref target="rdformat" format="counter"/>.
Relay type numbers 4 through 255 can be assigned with a policy of
Specification Required (as described in <xref target="RFC8126" format="default"/>).</t>
    </section>
    <section anchor="security-considerations" numbered="true" toc="default">
      <name>Security Considerations</name>
      <section anchor="use-of-amt" numbered="true" toc="default">
        <name>Use of AMT</name>
        <t>This document defines a mechanism that enables a more widespread and
automated use of AMT, even without access to a multicast backbone.
Operators of networks and applications that include a DRIAD-capable
AMT gateway are advised to carefully consider the security considerations
in <xref target="RFC7450" sectionFormat="of" section="6"/>.</t>
        <t>AMT gateway operators also are encouraged to take appropriate steps to
ensure the integrity of the data received via AMT, for example, by the
opportunistic use of IPsec <xref target="RFC4301" format="default"/> to secure traffic received from AMT
relays when IPSECKEY records <xref target="RFC4025" format="default"/> are available or when a trust
relationship with the AMT relays can be otherwise established and secured.</t>
        <t>Note that AMT does not itself provide any integrity protection for
Multicast Data packets (<xref target="RFC7450" sectionFormat="of" section="5.1.6"/>), so absent
protections like those mentioned above, even an off-path attacker who
discovers the gateway IP, the relay IP, and the relay source port for
an active AMT connection can inject multicast data packets for a
joined (S,G) into the data stream if he can get data packets delivered
to the gateway IP that spoof the relay as the source.</t>
      </section>
      <section anchor="record-spoofing" numbered="true" toc="default">
        <name>Record-Spoofing</name>
        <t>The AMTRELAY resource record contains information that <bcp14>SHOULD</bcp14> be
communicated to the DNS client without being modified.  The
method used to ensure the result was unmodified is up to the client.</t>
        <t>There must be a trust relationship between the end consumer of this
resource record and the DNS server.  This relationship may be end-to-end
DNSSEC validation or a secure connection to a trusted DNS server that
provides end-to-end safety to prevent record-spoofing of the response
from the trusted server.  The connection to the trusted server can use
any secure channel, such as with a TSIG <xref target="RFC2845" format="default"/> or SIG(0) <xref target="RFC2931" format="default"/>
channel, a secure local channel on the host, DNS over TLS <xref target="RFC7858" format="default"/>,
DNS over HTTPS <xref target="RFC8484" format="default"/>, or some other mechanism that provides
authentication of the RR.</t>
        <t>If an AMT gateway accepts a maliciously crafted AMTRELAY record,
the result could be a Denial of Service or receivers processing
multicast traffic from a source under the attacker's control.</t>
      </section>
      <section anchor="congestion" numbered="true" toc="default">
        <name>Congestion</name>
        <t>Multicast traffic, particularly interdomain multicast traffic, carries
some congestion risks, as described in <xref target="RFC8085" sectionFormat="of" section="4"/>.</t>
        <t>Application implementors and network operators that use AMT gateways
are advised to take precautions, including monitoring of application
traffic behavior, traffic authentication at ingest, rate-limiting of
multicast traffic, and the use of circuit-breaker techniques such as
those described in <xref target="RFC8085" sectionFormat="of" section="3.1.10"/> and similar
protections at the network level in order to ensure network health
in the event of misconfiguration, poorly written applications that
don't follow UDP congestion control principles, or a deliberate attack.</t>
        <t><xref target="RFC7450" sectionFormat="of" section="4.1.4.2"/> and <xref target="RFC7450" sectionFormat="of" section="6.1"/>
provide some further considerations and advice about mitigating
congestion risk.</t>
      </section>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2782.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3376.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3596.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3597.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3810.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4604.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4607.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6724.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7450.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8085.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8305.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8499.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2317.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2845.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2931.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3550.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4025.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4301.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4787.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5110.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6726.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7359.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7761.xml"/>
        <xi:include
	    href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml"/>
 <xi:include
     href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8313.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8484.xml"/>
      </references>
    </references>
    <section anchor="extranslate" numbered="true" toc="default">
      <name>Unknown RRType Construction</name>
      <t>In a DNS resolver that understands the AMTRELAY type, the zone file might
contain this line:</t>
      <sourcecode name="" type=""><![CDATA[
  IN AMTRELAY 128 0 3 amtrelays.example.com.
]]></sourcecode>
      <t>In order to translate this example to appear as an unknown RRType
as defined in <xref target="RFC3597" format="default"/>, one could run the following program:</t>
      <sourcecode name="" type="python" markers="true"><![CDATA[
  $ cat translate.py 
  #!/usr/bin/env python3
  import sys
  name=sys.argv[1]
  wire=''
  for dn in name.split('.'):
    if len(dn) > 0:
      wire += ('%02x' % len(dn))
      wire += (''.join('%02x'%ord(x) for x in dn))
  print(len(wire)//2) + 2
  print(wire)

  $ ./translate.py amtrelays.example.com
  24
  09616d7472656c617973076578616d706c6503636f6d
]]></sourcecode>
      <t>The length of the RData and the hex string for the domain name
"amtrelays.example.com" are the outputs of this program.</t>
      <t>The length of the wire-encoded domain name is 22, so 2 was added to
that value (1 for the precedence field and 1 for the combined D-bit and
relay type fields) to get the full length 24 of the RData.  For the 2
octets ahead of the domain name, we encode the precedence, D-bit, and
relay type fields, as described in <xref target="rrdef" format="default"/>.</t>
      <t>This results in a zone file entry like this:</t>

      <artwork name="" type="" align="left" alt=""><![CDATA[
  IN TYPE260  \# ( 24 ; length
          80 ; precedence = 128
          03 ; D-bit=0, relay type=3 (wire-encoded domain name)
        09616d7472656c617973076578616d706c6503636f6d ) ; domain name
]]></artwork>
    </section>

    <section anchor="acknowledgements" numbered="false" toc="default">
      <name>Acknowledgements</name>
      <t>This specification was inspired by the previous work of <contact
      fullname="Doug Nortz"/>, <contact fullname="Robert Sayko"/>, <contact fullname="David Segelstein"/>, and <contact fullname="Percy Tarapore"/>, presented in
the MBONED Working Group at IETF 93.</t>
      <t>Thanks to <contact fullname="Jeff Goldsmith"/>, <contact fullname="Toerless Eckert"/>, <contact fullname="Mikael Abrahamsson"/>, <contact fullname="Lenny
Giuliano"/>, <contact fullname="Mark Andrews"/>, <contact fullname="Sandy
Zheng"/>, <contact fullname="Kyle Rose"/>, <contact fullname="Ben Kaduk"/>,
      <contact fullname="Bill Atwood"/>, <contact fullname="Tim Chown"/>, <contact fullname="Christian Worm Mortensen"/>, <contact fullname="Warren Kumari"/>, <contact fullname="Dan
Romanescu"/>, <contact fullname="Bernard Aboba"/>, <contact fullname="Carlos
Pignataro"/>, <contact fullname="Niclas Comstedt"/>, <contact fullname="Mirja Kühlewind"/>, <contact fullname="Henning Rogge"/>, <contact fullname="Eric Vyncke"/>, <contact fullname="Barry Lieba"/>,
<contact fullname="Roman Danyliw"/>, <contact fullname="Alissa Cooper"/>,
<contact fullname="Suresh Krishnan"/>, <contact fullname="Adam Roach"/>,
and <contact fullname="Daniel Franke"/> for their very helpful reviews and comments.</t>
    </section>
  </back>
</rfc>
