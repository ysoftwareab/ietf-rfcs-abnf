<?xml version='1.0' encoding='UTF-8'?>

<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" number="8737" consensus="true"  ipr="trust200902" docName="draft-ietf-acme-tls-alpn-07" category="std" obsoletes="" updates="" submissionType="IETF" xml:lang="en" tocInclude="true" sortRefs="true" symRefs="true" version="3">

  <front>
    <title abbrev="ACME-TLS-ALPN">Automated Certificate Management Environment
    (ACME) TLS Application&nbhy;Layer Protocol
    Negotiation (ALPN) Challenge Extension</title>

    <seriesInfo name="RFC" value="8737"/>

   <author initials="R.B." surname="Shoemaker" fullname="Roland Bracewell Shoemaker">
      <organization abbrev="ISRG">Internet Security Research Group</organization>
      <address>
        <email>roland@letsencrypt.org</email>
      </address>
    </author>
    <date month="February" year="2020"/>
    <area>Security</area>
    <workgroup>ACME Working Group</workgroup>

<keyword>acme</keyword>
<keyword>pki</keyword>

    <abstract>
      <t>This document specifies a new challenge for the Automated Certificate Management Environment (ACME) protocol that allows for domain control validation using TLS.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="introduction" numbered="true" toc="default">
      <name>Introduction</name>
      <t>The Automatic Certificate Management Environment (ACME) <xref
      target="RFC8555" format="default"/> specification describes methods for
      validating control of domain names via HTTP and DNS. Deployment
      experience has shown it is also useful to be able to validate domain
      control using the TLS layer alone. In particular, this allows hosting
      providers, Content Distribution Networks (CDNs), and TLS-terminating
      load balancers to validate domain control without modifying the HTTP handling behavior of their backends.</t>


      <t>This document specifies a new TLS-based challenge type,
      tls-alpn-01. This challenge requires negotiating a new application-layer
      protocol using the TLS Application-Layer Protocol Negotiation (ALPN)
      Extension <xref target="RFC7301" format="default"/>. 

Because this protocol does not build on a pre-existing deployment base, the
ability to complete tls-alpn-01 challenges requires changes by service
providers, making it explicitly an opt-in process. Because service providers must
proactively deploy new code in order to implement tls-alpn-01, we can specify
stronger controls in that code, resulting in a stronger validation method.
</t>
    </section> 
    <section anchor="terminology" numbered="true" toc="default">
      <name>Terminology</name>


        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>


    </section>
    <section anchor="tls-with-application-layer-protocol-negotiation-tls-alpn-challenge" numbered="true" toc="default">
      <name>TLS with Application-Layer Protocol Negotiation (TLS ALPN) Challenge</name>

      <t>The TLS with Application-Layer Protocol Negotiation (TLS ALPN) validation method proves control over a domain name by requiring the ACME client to configure a TLS server to respond to specific connection attempts using the ALPN extension with identifying information. The ACME server validates control of the domain name by connecting to a TLS server at one of the addresses resolved for the domain name and verifying that a certificate with specific content is presented.</t>
      <t>The tls-alpn-01 ACME challenge object has the following format:</t>
      <dl newline="false" spacing="normal">
        <dt>type (required, string):</dt>
        <dd>
  The string "tls-alpn-01"</dd>
        <dt>token (required, string):</dt>
        <dd>
  A random value that uniquely identifies the challenge. This value
	<bcp14>MUST</bcp14> have at least 128 bits of entropy. It <bcp14>MUST
	NOT</bcp14> contain any characters outside the base64url alphabet as
	described in <xref target="RFC4648" sectionFormat="of" section="5"/>. Trailing '=' padding characters <bcp14>MUST</bcp14> be stripped. See <xref target="RFC4086" format="default"/> for additional information on randomness requirements.</dd>
      </dl>
      <t>The client prepares for validation by constructing a self-signed certificate that <bcp14>MUST</bcp14> contain an acmeIdentifier extension and a subjectAlternativeName extension <xref target="RFC5280" format="default"/>. The subjectAlternativeName extension <bcp14>MUST</bcp14> contain a single dNSName entry where the value is the domain name being validated. The acmeIdentifier extension <bcp14>MUST</bcp14> contain the SHA-256 digest <xref target="FIPS180-4" format="default"/> of the key authorization <xref target="RFC8555" format="default"/> for the challenge. The acmeIdentifier extension <bcp14>MUST</bcp14> be critical so that the certificate isn't inadvertently used by non-ACME software.</t>
      <t>The acmeIdentifier extension is identified by the id-pe-acmeIdentifier object identifier (OID) in the id-pe arc <xref target="RFC5280" format="default"/>:</t>
      <sourcecode type="asn.1"><![CDATA[
id-pe-acmeIdentifier OBJECT IDENTIFIER ::=  { id-pe 31 }
]]></sourcecode>
      <t>The extension has the following ASN.1 <xref target="X.680" format="default"/> format :</t>
      <sourcecode type="asn.1"><![CDATA[
Authorization ::= OCTET STRING (SIZE (32))
]]></sourcecode>
      <t>The extnValue of the id-pe-acmeIdentifier extension is the ASN.1 DER encoding <xref target="X.690" format="default"/> of the Authorization structure, which contains the SHA-256 digest of the key authorization for the challenge.</t>
      <t>Once this certificate has been created, it <bcp14>MUST</bcp14> be provisioned such that it is returned during a TLS handshake where the "acme-tls/1" application-layer protocol has been negotiated and a Server Name Indication (SNI) extension <xref target="RFC6066" format="default"/> has been provided containing the domain name being validated.</t>
      <t>A client responds by POSTing an empty JSON object ({}) to the
      challenge URL to acknowledge that the challenge is ready to be validated
      by the server. The base64url encoding of the protected headers and
      payload is described in <xref target="RFC8555" sectionFormat="of" section="6.1"/>.</t> 


      <sourcecode>
POST /acme/authz/1234/1
Host: example.com
Content-Type: application/jose+json

{
  "protected": base64url({
    "alg": "ES256",
    "kid": "https://example.com/acme/acct/1",
    "nonce": "JHb54aT_KTXBWQOzGYkt9A",
    "url": "https://example.com/acme/authz/1234/1"
  }),
  "payload": base64url({}),
  "signature": "Q1bURgJoEslbD1c5...3pYdSMLio57mQNN4"
}      </sourcecode>
      <t>On receiving this request from a client, the server constructs and stores the key authorization from the challenge "token" value and the current client account key.</t>
      <t>The server then verifies the client's control over the domain by verifying that the TLS server was configured as expected using the following steps:</t>
      <ol spacing="normal" type="1">
        <li>The ACME server computes the expected SHA-256 digest of the key authorization.</li>
        <li>The ACME server resolves the domain name being validated and chooses one of the IP addresses returned for validation (the server <bcp14>MAY</bcp14> validate against multiple addresses if more than one is returned).</li>
        <li>The ACME server initiates a TLS connection to the chosen IP address. This connection <bcp14>MUST</bcp14> use TCP port 443. The ACME server <bcp14>MUST</bcp14> provide an ALPN extension with the single protocol name "acme-tls/1" and an SNI extension containing only the domain name being validated during the TLS handshake.</li>
        <li>
          <t>The ACME server verifies that during the TLS handshake the application-layer protocol "acme-tls/1" was successfully negotiated (and that the ALPN extension contained only the value "acme-tls/1") and that the certificate returned contains:
          </t>
          <ul spacing="normal">
            <li>a subjectAltName extension containing the dNSName being validated and no other entries</li>
            <li>a critical acmeIdentifier extension containing the expected SHA-256 digest computed in step 1</li>
          </ul>
        </li>
      </ol>
      <t>The comparison of dNSNames <bcp14>MUST</bcp14> be case insensitive
      <xref target="RFC4343" format="default"/>. Note that as ACME doesn't
      support Unicode identifiers, all dNSNames <bcp14>MUST</bcp14> be encoded
      using the rules of <xref target="RFC3492" format="default"/>.</t>
      <t>If all of the above steps succeed, then the validation is
      successful. Otherwise, it fails.</t>
    </section>
    <section anchor="acme-tls1-protocol-definition" numbered="true" toc="default">
      <name>acme-tls/1 Protocol Definition</name>
      <t>The "acme-tls/1" protocol <bcp14>MUST</bcp14> only be used for
      validating ACME tls-alpn-01 challenges. The protocol consists of a TLS
      handshake in which the required validation information is
      transmitted. The "acme-tls/1" protocol does not carry application data.
      Once the handshake is completed, the client <bcp14>MUST NOT</bcp14>
      exchange any further data with the server and <bcp14>MUST</bcp14>
      immediately close the connection. While this protocol uses X.509
      certificates, it does not use the authentication method described in
      <xref target="RFC5280" format="default"/> and, as such, does not require a
      valid signature on the provided certificate nor require the TLS
      handshake to complete successfully. An ACME server may wish to use an
      off-the-shelf TLS stack where it is not simple to allow these
      divergences in the protocol as defined. Because of this, an ACME server
      <bcp14>MAY</bcp14> choose to withhold authorization if either the
      certificate signature is invalid or the handshake doesn't fully
      complete.</t> 
      <t>ACME servers that implement "acme-tls/1" <bcp14>MUST</bcp14> only negotiate TLS 1.2 <xref target="RFC5246" format="default"/> or higher when connecting to clients for validation.</t>
    </section>
    <section anchor="security-considerations" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>The design of this challenge relies on some assumptions centered around how an HTTPS server behaves during validation.</t>
      <t>The first assumption is that when an HTTPS server is being used to
      serve content for multiple DNS names from a single IP address, it
      properly segregates control of those names to the users that own
      them. This means that if User A registers Host A and User B registers
      Host B, the HTTPS server should not allow a TLS request using an SNI
      value for Host A to be served by User B or a TLS connection with a
      server_name extension identifying Host B to be answered by User A. If
      the HTTPS server allows User B to serve this request, it allows them to
      illegitimately validate control of Host A to the ACME server.</t> 
      <t>The second assumption is that a server will not violate <xref target="RFC7301" format="default"/> by blindly agreeing to use the "acme-tls/1" protocol without actually understanding it.</t>
      <t>To further mitigate the risk of users claiming domain names used by other users on the same infrastructure hosting providers, CDNs, and other service providers <bcp14>SHOULD NOT</bcp14> allow users to provide their own certificates for the TLS ALPN validation process. If providers wish to implement TLS ALPN validation, they <bcp14>SHOULD</bcp14> only generate certificates used for validation themselves and not expose this functionality to users.</t>
      <t>The extensions to the ACME protocol described in this document build
      upon the Security Considerations and threat model defined in <xref
      target="RFC8555" sectionFormat="of" section="10.1"/>.</t> 
    </section>
    <section anchor="iana-considerations" numbered="true" toc="default">
      <name>IANA Considerations</name>

      <section anchor="smi-security-for-pkix-certificate-extension-oid" numbered="true" toc="default">
        <name>SMI Security for PKIX Certificate Extension OID</name>

        <t>Within the "Structure of Management Information (SMI) Numbers (MIB
	Module Registrations)" registry, the following entry has been added to
	the  "SMI Security for PKIX
	Certificate Extension" (1.3.6.1.5.5.7.1) table.</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left">Decimal</th>
              <th align="left">Description</th>
              <th align="left">References</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">31</td>
              <td align="left">id-pe-acmeIdentifier</td>
              <td align="left">RFC 8737</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="alpn-protocol-id" numbered="true" toc="default">
        <name>ALPN Protocol ID</name>
        <t>Within the "Transport Layer Security (TLS) Extensions" registry,
	the following entry has been added to the "TLS Application-Layer Protocol Negotiation (ALPN) Protocol IDs" table.</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left">Protocol</th>
              <th align="left">Identification Sequence</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">acme-tls/1</td>
              <td align="left">0x61 0x63 0x6d 0x65 0x2d 0x74 0x6c 0x73 0x2f 0x31 ("acme-tls/1")</td>
              <td align="left">RFC 8737</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="acme-validation-method" numbered="true" toc="default">
        <name>ACME Validation Method</name>
        <t>Within the "Automated Certificate Management Environment (ACME)
	Protocol" registry, the following entry has been added to the "ACME Validation Methods" registry.</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left">Label</th>
              <th align="left">Identifier Type</th>
              <th align="left">ACME</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">tls-alpn-01</td>
              <td align="left">dns</td>
              <td align="left">Y</td>
              <td align="left">RFC 8737</td>
            </tr>
          </tbody>
        </table>
      </section>
    </section>

  </middle>
  <back>
    <references>
      <name>Normative References</name>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3492.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4343.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml"/>



      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5246.xml"/>

      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5280.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6066.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7301.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8555.xml"/>
 
      <reference anchor="FIPS180-4" target="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf">
        <front>
          <title>Secure Hash Standard (SHS)</title>
          <author>
            <organization>National Institute of Standards and Technology (NIST)</organization>
          </author>
          <date year="2015" month="August"/>
        </front>
	<seriesInfo name="FIPS PUB" value="180-4"/>
	<seriesInfo name='DOI' value='10.6028/NIST.FIPS.180-4' />
      </reference>

      <reference anchor="X.690" target="https://www.itu.int/rec/T-REC-X.690-201508-I/en">
        <front>
          <title>Information Technology -- ASN.1 encoding rules: Specification of Basic Encoding Rules (BER), Canonical Encoding Rules (CER) and Distinguished Encoding Rules (DER)</title>
          <author>
            <organization>ITU-T
	    </organization>
          </author>
          <date month="August" year="2015"/>
        </front>
<seriesInfo name="ITU-T Recommendation" value="X.690"/>
<seriesInfo name="ISO/IEC" value="8825-1:2015"/>

      </reference>

      <reference anchor="X.680" target="https://www.itu.int/rec/T-REC-X.680-201508-I/en">
        <front>
          <title>Information technology -- Abstract Syntax Notation One (ASN.1): Specification of basic notation</title>
          <author>
            <organization>ITU-T
	    </organization>
          </author>
          <date month="August" year="2015"/>
        </front>
<seriesInfo name="ITU-T Recommendation" value="X.680"/>
<seriesInfo name="ISO/IEC" value="8824-1:2015"/>

      </reference>

      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4086.xml"/>

    </references>

    <section anchor="design-rationale" numbered="true" toc="default">
      <name>Design Rationale</name>
      <t>The TLS ALPN challenge exists to iterate on the TLS SNI challenge
      defined in the early ACME drafts. The TLS SNI challenge was
      convenient for service providers who were either operating large
      TLS-layer load balancing systems at which they wanted to perform
      validation or running servers fronting large numbers of DNS names from a
      single host as it allowed validation purely within the TLS layer. The
      value provided by the TLS SNI challenge was considered large enough that
      this document was written in order to provide a new challenge type that
      addressed the existing security concerns.</t>
      <t>A security issue in the TLS SNI challenge was discovered by Frans
      Rosen, which allowed users of various service providers to
      illegitimately validate control of the DNS names of other users of the
      provider. When the TLS SNI challenge was designed, it was assumed that a
      user would only be able to respond to TLS traffic via SNI for domain
      names they had registered with a service provider (i.e., if a user
      registered 'a.example', they would only be able to respond to SNI
      requests for 'a.example' and not for SNI requests for 'b.example'). It
      turns out that a number of large service providers do not honor this
      property. Because of this, users were able to respond to SNI requests
      for the names used by the TLS SNI challenge validation process. 




This meant that (1) if User A and User B had registered Host A and Host B,
respectively, User A would be able to claim the constructed SNI challenge name
for Host B, and (2) when the validation connection was made, User A would be
able to answer, thereby proving 'control' of Host B.

As the SNI name used was a subdomain of the domain name being validated,
rather than the domain name itself, it was likely to not already be registered
with the service provider for traffic routing, making it much easier for a
hijack to occur.</t>
    </section>

    <section anchor="acknowledgments" numbered="false" toc="default">
      <name>Acknowledgments</name>

      <t>The author would like to thank all those that provided design
      insights and editorial review of this document, including 
      <contact fullname="Richard Barnes" />,
      <contact fullname="Ryan Hurst" />,
      <contact fullname="Adam Langley" />,
      <contact fullname="Ryan Sleevi" />,
      <contact fullname="Jacob Hoffman-Andrews" />,
      <contact fullname="Daniel McCarney" />,
      <contact fullname="Marcin Walas" />,
      <contact fullname="Martin Thomson" />,
      and especially 
      <contact fullname="Frans Rosen" />, who discovered the vulnerability in the
TLS SNI method that necessitated the writing of this specification.</t>
    </section>

  </back>
 
</rfc>
