<?xml version='1.0' encoding='utf-8'?>

<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" submissionType="IETF"
     category="std" consensus="true" docName="draft-ietf-lamps-rfc6844bis-07" number="8659" ipr="trust200902" obsoletes="6844" updates="" xml:lang="en" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 2.31.0 -->
  <front>
    <title abbrev="CAA">DNS Certification Authority Authorization (CAA) Resource Record</title>
    <seriesInfo name="RFC" value="8659"/>
    <author initials="P." surname="Hallam-Baker" fullname="Phillip Hallam-Baker">
      <organization>Venture Cryptography</organization>
      <address>
        <email>phill@hallambaker.com</email>
      </address>
    </author>
    <author initials="R." surname="Stradling" fullname="Rob Stradling">
      <organization abbrev="Sectigo">Sectigo Ltd.</organization>
      <address>
        <email>rob@sectigo.com</email>
      </address>
    </author>
    <author initials="J." surname="Hoffman-Andrews" fullname="Jacob Hoffman-Andrews">
      <organization>Let's Encrypt</organization>
      <address>
        <email>jsha@letsencrypt.org</email>
      </address>
    </author>
    <date year="2019" month="November"/>
    <keyword>certificate</keyword>
    <keyword>ca</keyword>
    <keyword>pki</keyword>
    <keyword>issue</keyword>
    <keyword>issuance</keyword>
    <keyword>wildcard</keyword>
 
   <abstract>
      <t>The Certification Authority Authorization (CAA) DNS Resource Record
allows a DNS domain name holder to specify one or more Certification
Authorities (CAs) authorized to issue certificates for that domain name.
CAA Resource Records allow a public CA to
implement additional controls to reduce the risk of unintended
certificate mis-issue.  This document defines the syntax of the CAA
record and rules for processing CAA records by CAs.</t>
      <t>This document obsoletes RFC 6844.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="introduction" numbered="true" toc="default">
      <name>Introduction</name>
      <t>The Certification Authority Authorization (CAA) DNS Resource Record
allows a DNS domain name holder to specify the Certification
Authorities (CAs) authorized to issue certificates for that domain name.
Publication of CAA Resource Records allows a public CA to implement additional controls to reduce the risk of
unintended certificate mis-issue.</t>
      <t>Like the TLSA record defined in DNS-Based Authentication of Named
Entities (DANE) <xref target="RFC6698" format="default"/>, CAA records are used as a part of a
mechanism for checking PKIX <xref target="RFC6698" format="default"/> certificate data.  The distinction
between CAA and TLSA is that CAA records specify an
authorization control to be performed by a CA before
issuing a certificate and TLSA records specify a verification
control to be performed by a Relying Party after the certificate is
issued.

</t>
      <t>Conformance with a published CAA record is a necessary, but not
sufficient, condition for the issuance of a certificate.</t>
      <t>Criteria for the inclusion of embedded trust anchor certificates in
applications are outside the scope of this document.  Typically, such
criteria require the CA to publish a Certification Practices Statement
(CPS) that specifies how the requirements of the Certificate Policy
(CP) are achieved.  It is also common for a CA to engage an
independent third-party auditor to prepare an annual audit statement
of its performance against its CPS.</t>
      <t>A set of CAA records describes only current grants of authority to
issue certificates for the corresponding DNS domain name.  Since
certificates are valid for a period of time, it is possible
that a certificate that is not conformant with the CAA records
currently published was conformant with the CAA records published at
the time that the certificate was issued.  Relying Parties <bcp14>MUST
NOT</bcp14> use CAA records as part of certificate validation.</t>
      <t>CAA records <bcp14>MAY</bcp14> be used by Certificate Evaluators as a possible
indicator of a security policy violation.  Such use <bcp14>SHOULD</bcp14> take into
account the possibility that published CAA records changed between
the time a certificate was issued and the time at which the
certificate was observed by the Certificate Evaluator.</t>
    </section>
    <section anchor="definitions" numbered="true" toc="default">
      <name>Definitions</name>
      <section anchor="requirements-language" numbered="true" toc="default">
        <name>Requirements Language</name>
        <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>",
"<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>",
"<bcp14>NOT RECOMMENDED</bcp14>", "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document
are to be interpreted as described in BCP&nbsp;14
<xref target="RFC2119" format="default"/> <xref target="RFC8174" format="default"/> when,
and only when, they appear in all capitals, as shown here.</t>
      </section>
      <section anchor="defined-terms" numbered="true" toc="default">
        <name>Defined Terms</name>
        <t>The following terms are used in this document:</t>
<dl>
          <dt>Certificate:</dt><dd>An X.509 Certificate, as specified in <xref target="RFC5280" format="default"/>.</dd>
          <dt>Certificate Evaluator:</dt><dd>A party other than a Relying Party that
   evaluates the trustworthiness of certificates issued by
   Certification Authorities.</dd>
          <dt>Certification Authority (CA):</dt><dd>An Issuer that issues certificates in
   accordance with a specified Certificate Policy.</dd>
          <dt>Certificate Policy (CP):</dt><dd>Specifies the criteria that a CA
   undertakes to meet in its issue of certificates.  See
   <xref target="RFC3647" format="default"/>.</dd>
          <dt>Certification Practices Statement (CPS):</dt><dd>Specifies the means by
   which the criteria of the CP are met.  In most
   cases, this will be the document against which the operations of
   the CA are audited.  See <xref target="RFC3647" format="default"/>.</dd>
          <dt>Domain Name:</dt><dd>The label assigned to a node in the Domain Name System.</dd>
          <dt>Domain Name System (DNS):</dt><dd>The Internet naming system specified in
   <xref target="RFC1034" format="default"/> and <xref target="RFC1035" format="default"/>.</dd>
          <dt>DNS Security (DNSSEC):</dt><dd>Extensions to the DNS that provide
   authentication services as specified in <xref target="RFC4033" format="default"/>, <xref target="RFC4034" format="default"/>,
   <xref target="RFC4035" format="default"/>, <xref target="RFC5155" format="default"/>, and
   any revisions to these specifications.</dd>
          <dt>Fully Qualified Domain Name (FQDN):</dt><dd>A domain name that includes the labels of all
  superior nodes in the DNS.</dd>
          <dt>Issuer:</dt><dd>An entity that issues certificates.  See <xref target="RFC5280" format="default"/>.</dd>
          <dt>Property:</dt><dd>The tag-value portion of a CAA Resource Record.</dd>
          <dt>Property Tag:</dt><dd>The tag portion of a CAA Resource Record.</dd>
          <dt>Property Value:</dt><dd>The value portion of a CAA Resource Record.</dd>
          <dt>Relevant Resource Record Set (Relevant RRset):</dt><dd>A set of CAA 
   Resource Records resulting
   from applying the algorithm in <xref target="relevant-resource-record-set"
   format="default"/> to a specific FQDN or Wildcard Domain Name.</dd>
          <dt>Relying Party:</dt><dd>A party that makes use of an application whose
   operation depends on the use of a certificate for making a security
   decision.  See <xref target="RFC5280" format="default"/>.</dd>
          <dt>Resource Record (RR):</dt><dd>A particular entry in the DNS, including the
   owner name, class, type, time to live, and data, as defined in
   <xref target="RFC1034" format="default"/> and <xref target="RFC2181" format="default"/>.</dd>
          <dt>Resource Record Set (RRset):</dt><dd>A set of RRs of a
   particular owner name, class, and type.  The time to live on all
   RRs within an RRset is always the same, but the data may be
   different among RRs in the RRset.</dd>
          <dt>Wildcard Domain Name:</dt><dd>A domain name consisting of a single asterisk
   character followed by a single "full stop" character ("*.") followed
   by an FQDN.</dd>
        </dl>
      </section>
    </section>
    <section anchor="relevant-resource-record-set" numbered="true" toc="default">
      <name>Relevant Resource Record Set</name>
      <t>Before issuing a certificate, a compliant CA <bcp14>MUST</bcp14> check for
publication of a Relevant RRset.  If such an RRset
exists, a CA <bcp14>MUST&nbsp;NOT</bcp14> issue a certificate unless the CA
determines that either (1)&nbsp;the certificate request is consistent with
the applicable CAA RRset or (2)&nbsp;an exception specified
in the relevant CP or CPS applies. If the Relevant RRset for an FQDN
or Wildcard Domain Name contains no Property Tags that restrict issuance
(for instance, if it contains only iodef Property Tags or only Property
Tags unrecognized by the CA), CAA does not restrict issuance.</t>
      <t>A certificate request <bcp14>MAY</bcp14> specify more than one FQDN and <bcp14>MAY</bcp14>
specify Wildcard Domain Names.  Issuers <bcp14>MUST</bcp14> verify authorization for all
the FQDNs and Wildcard Domain Names specified in the request.</t>
      <t>The search for a CAA RRset climbs the DNS name tree from the
specified label up to, but not including, the DNS root "."
until a CAA RRset is found.</t>
      <t>Given a request for a specific FQDN X or a request for a Wildcard Domain
Name *.X, the Relevant RRset RelevantCAASet(X) is determined as follows (in pseudocode):</t>
      <ul empty="true" spacing="normal">
        <li>Let CAA(X) be the RRset returned by performing a CAA record query for the
FQDN X, according to the lookup algorithm
specified in <xref target="RFC1034" sectionFormat="of" section="4.3.2" /> (in particular, chasing
aliases). Let Parent(X) be the FQDN produced by
removing the leftmost label of X.</li>
      </ul>
      <sourcecode name="pseudocode-1" type="pseudocode"><![CDATA[
   RelevantCAASet(domain):
     while domain is not ".":
       if CAA(domain) is not Empty:
         return CAA(domain)
       domain = Parent(domain)
     return Empty ]]></sourcecode>

      <ul empty="true" spacing="normal">
        <li>For example, processing CAA for the FQDN "X.Y.Z" where there are
no CAA records at any level in the tree RelevantCAASet would have the
following steps:</li>
      </ul>
      <artwork name="" type="" align="left" alt=""><![CDATA[
   CAA("X.Y.Z.") = Empty; domain = Parent("X.Y.Z.") = "Y.Z."
   CAA("Y.Z.")   = Empty; domain = Parent("Y.Z.")   = "Z."
   CAA("Z.")     = Empty; domain = Parent("Z.")     = "."
   return Empty ]]></artwork>
      <ul empty="true" spacing="normal">
        <li>Processing CAA for the FQDN "A.B.C" where there is a CAA record
"issue example.com" at "B.C" would terminate early upon finding the CAA
record:</li>
      </ul>
      <artwork name="" type="" align="left" alt=""><![CDATA[
   CAA("A.B.C.") = Empty; domain = Parent("A.B.C.") = "B.C."
   CAA("B.C.")   = "issue example.com"
   return "issue example.com" ]]></artwork>
    </section>
    <section anchor="mechanism" numbered="true" toc="default">
      <name>Mechanism</name>
      <section anchor="syntax" numbered="true" toc="default">
        <name>Syntax</name>
        <t>A CAA RR contains a single Property consisting of a tag&#8209;value
pair. An FQDN <bcp14>MAY</bcp14> have multiple CAA RRs associated with it, and a
given Property Tag <bcp14>MAY</bcp14> be specified more than once across those RRs.</t>
        <t>The RDATA section for a CAA RR contains one Property. A Property
consists of the following:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
+0-1-2-3-4-5-6-7-|0-1-2-3-4-5-6-7-|
| Flags          | Tag Length = n |
+----------------|----------------+...+---------------+
| Tag char 0     | Tag char 1     |...| Tag char n-1  |
+----------------|----------------+...+---------------+
+----------------|----------------+.....+----------------+
| Value byte 0   | Value byte 1   |.....| Value byte m-1 |
+----------------|----------------+.....+----------------+
]]></artwork>
        <t>Where n is the length specified in the Tag Length field and m is the
number of remaining octets in the Value field. They are related by
(m&nbsp;=&nbsp;d&nbsp;-&nbsp;n&nbsp;-&nbsp;2)
where d is the length of the RDATA section.</t>
        <t>The fields are defined as follows:</t>
        <dl newline="false" spacing="normal">
          <dt>Flags:</dt>
          <dd>
            <t>One octet containing the following field:

            </t>
            <dl newline="false" spacing="normal">
              <dt>Bit 0, Issuer Critical Flag:</dt>
              <dd>If the value is set to "1", the
 Property is critical. A CA <bcp14>MUST NOT</bcp14> issue
 certificates for any FQDN if the Relevant RRset for
 that FQDN contains a CAA critical
 Property for an unknown or unsupported Property Tag.

 </dd>
            </dl>
          </dd>
        </dl>
        <t>Note that according to the conventions set out in <xref target="RFC1035" format="default"/>, bit 0
is the Most Significant Bit and bit 7 is the Least Significant
Bit. Thus, according to those conventions, the Flags value 1 means that bit 7 is
set, while a value of 128 means that bit 0 is set.</t>
        <t>All other bit positions are reserved for future use.</t>
        <t>To ensure compatibility with future extensions to CAA, DNS records
compliant with this version of the CAA specification <bcp14>MUST</bcp14> clear
(set to "0") all reserved flag bits.

  Applications that interpret
CAA records <bcp14>MUST</bcp14> ignore the value of all reserved flag bits.</t>
        <dl newline="false" spacing="normal">
          <dt>Tag Length:</dt>
          <dd>A single octet containing an unsigned integer specifying
the tag length in octets.  The tag length <bcp14>MUST</bcp14> be at least 1.</dd>
          <dt>Tag:</dt>
          <dd>The Property identifier -- a sequence of ASCII characters.</dd>
        </dl>
        <t>Tags <bcp14>MAY</bcp14> contain ASCII characters "a" through "z", "A"
through "Z", and the numbers 0 through 9.  Tags <bcp14>MUST NOT</bcp14>
contain any other characters.  Matching of tags is case
insensitive.</t>
        <t>Tags submitted for registration by IANA <bcp14>MUST NOT</bcp14> contain any
characters other than the (lowercase) ASCII characters "a"
through "z" and the numbers 0 through 9.</t>
        <dl newline="false" spacing="normal">
          <dt>Value:</dt>
          <dd>A sequence of octets representing the Property Value.
Property Values are encoded as binary values and <bcp14>MAY</bcp14> employ
sub&#8209;formats.</dd>
        </dl>
        <t>The length of the Value field is specified implicitly as the
remaining length of the enclosing RDATA section.</t>
        <section anchor="canonical-presentation-format" numbered="true" toc="default">
          <name>Canonical Presentation Format</name>
          <t>The canonical presentation format of the CAA record is:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
   CAA <flags> <tag> <value>
]]></artwork>
          <t>Where:</t>
          <dl newline="false" spacing="normal">
            <dt>Flags:</dt>
            <dd>An unsigned integer between 0 and 255.</dd>
            <dt>Tag:</dt>
            <dd>A non-zero-length sequence of ASCII letters and numbers in lowercase.</dd>
            <dt>Value:</dt>
            <dd>The Value field, expressed as either (1)&nbsp;a contiguous set of characters
   without interior spaces or (2)&nbsp;a quoted string.  See the
   &lt;character-string&gt; format specified in <xref target="RFC1035" sectionFormat="comma" section="5.1"/>,
   but note that the Value field contains no length byte and is not
   limited to 255 characters.</dd>
          </dl>
        </section>
      </section>
      <section anchor="caa-issue-property" numbered="true" toc="default">
        <name>CAA issue Property</name>
        <t>If the issue Property Tag is present in the Relevant RRset for an
FQDN, it is a request that Issuers:</t>
        <ol spacing="normal" type="1">
          <li>Perform CAA issue restriction processing for the FQDN, and</li>
          <li>Grant authorization to issue certificates containing that FQDN
 to the holder of the issuer-domain-name
 or a party acting under the explicit authority of the holder of the
 issuer-domain-name.</li>
        </ol>
        <t>The CAA issue Property Value has the following sub&#8209;syntax (specified
in ABNF as per <xref target="RFC5234" format="default"/>).</t>
        <sourcecode name="caa-issue-prop-value-abnf" type="abnf"><![CDATA[
issue-value = *WSP [issuer-domain-name *WSP]
   [";" *WSP [parameters *WSP]]

issuer-domain-name = label *("." label)
label = (ALPHA / DIGIT) *( *("-") (ALPHA / DIGIT))

parameters = (parameter *WSP ";" *WSP parameters) / parameter
parameter = tag *WSP "=" *WSP value
tag = (ALPHA / DIGIT) *( *("-") (ALPHA / DIGIT))
value = *(%x21-3A / %x3C-7E)
]]></sourcecode>
        <t>For consistency with other aspects of DNS administration, FQDN
values are specified in letter-digit-hyphen Label (LDH-Label) form.</t>
        <t>The following CAA RRset requests that no
certificates be issued for the FQDN "certs.example.com" by any
Issuer other than ca1.example.net or ca2.example.org.</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
certs.example.com         CAA 0 issue "ca1.example.net"
certs.example.com         CAA 0 issue "ca2.example.org"
]]></artwork>
        <t>Because the presence of an issue Property Tag in the Relevant RRset
for an FQDN restricts issuance, FQDN owners can use an issue
Property Tag with no issuer-domain-name to request no issuance.</t>
        <t>For example, the following RRset requests that no
certificates be issued for the FQDN "nocerts.example.com" by any
Issuer.</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
nocerts.example.com       CAA 0 issue ";"
]]></artwork>
        <t>An issue Property Tag where the issue-value does not match the ABNF
grammar <bcp14>MUST</bcp14> be treated the same as one specifying an empty issuer&#8209;domain-name. For
example, the following malformed CAA RRset forbids issuance:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
malformed.example.com     CAA 0 issue "%%%%%"
]]></artwork>
        <t>CAA authorizations are additive; thus, the result of specifying both
an empty issuer-domain-name and a non-empty issuer-domain-name  is the
same as specifying just the non-empty issuer-domain-name.</t>
        <t>An Issuer <bcp14>MAY</bcp14> choose to specify parameters that further
constrain the issue of certificates by that Issuer -- for example,
specifying that certificates are to be subject to specific validation
policies, billed to certain accounts, or issued under specific trust
anchors.</t>
        <t>For example, if ca1.example.net has requested that its customer
account.example.com specify their account number "230123" in each
of the customer's CAA records using the (CA-defined) "account" parameter,
it would look like this:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
account.example.com   CAA 0 issue "ca1.example.net; account=230123"
]]></artwork>
        <t>The semantics of parameters to the issue Property Tag are determined by
the Issuer alone.</t>
      </section>
      <section anchor="caa-issuewild-property" numbered="true" toc="default">
        <name>CAA issuewild Property</name>
        <t>The issuewild Property Tag has the same syntax and semantics as the issue
Property Tag except that it only grants authorization to
issue certificates that specify a Wildcard Domain Name and each issuewild
Property takes precedence over each issue Property when specified.
Specifically:</t>
        <t>Each issuewild Property <bcp14>MUST</bcp14> be ignored when processing a request for
an FQDN that is not a Wildcard Domain Name.</t>
        <t>If at least one issuewild Property is specified in the Relevant
RRset for a Wildcard Domain Name, each issue Property <bcp14>MUST</bcp14>
be ignored when processing a request for that Wildcard Domain Name.</t>
        <t>For example, the following RRset requests that <em>only</em>
ca1.example.net issue certificates for "wild.example.com" or
"sub.wild.example.com", and that <em>only</em> ca2.example.org issue certificates for
"*.wild.example.com" or "*.sub.wild.example.com". Note that this presumes
that there are no CAA RRs for sub.wild.example.com.</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
wild.example.com          CAA 0 issue "ca1.example.net"
wild.example.com          CAA 0 issuewild "ca2.example.org"
]]></artwork>
        <t>The following RRset requests that <em>only</em> ca1.example.net issue
certificates for "wild2.example.com", "*.wild2.example.com", or
"*.sub.wild2.example.com".</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
wild2.example.com         CAA 0 issue "ca1.example.net"
]]></artwork>
        <t>The following RRset requests that <em>only</em> ca2.example.org issue
certificates for "*.wild3.example.com" or "*.sub.wild3.example.com". It
does not permit any Issuer to issue for "wild3.example.com" or
"sub.wild3.example.com".</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
wild3.example.com         CAA 0 issuewild "ca2.example.org"
wild3.example.com         CAA 0 issue ";"
]]></artwork>
        <t>The following RRset requests that <em>only</em> ca2.example.org issue
certificates for "*.wild3.example.com" or "*.sub.wild3.example.com". It
permits any Issuer to issue for "wild3.example.com" or "sub.wild3.example.com".</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
wild3.example.com         CAA 0 issuewild "ca2.example.org"
]]></artwork>
      </section>
      <section anchor="caa-iodef-property" numbered="true" toc="default">
        <name>CAA iodef Property</name>
        <t>The iodef Property specifies a means of reporting certificate issue
requests or cases of certificate issue for domains for which the Property
appears in the Relevant RRset, when those requests or issuances
violate the security policy of the Issuer or the FQDN holder.</t>
        <t>The Incident Object Description Exchange Format (IODEF) <xref target="RFC7970" format="default"/> is
used to present the incident report in machine-readable form.</t>
        <t>The iodef Property Tag takes a URL as its Property Value.  The URL scheme type
determines the method used for reporting:</t>
        <dl newline="false" spacing="normal">
          <dt>mailto:</dt>
          <dd>The IODEF report is reported as a MIME email
   attachment to an SMTP email that is submitted to the mail address
   specified.  The mail message sent <bcp14>SHOULD</bcp14> contain a brief text
   message to alert the recipient to the nature of the attachment.</dd>
          <dt>http or https:</dt>
          <dd>The IODEF report is submitted as a web service
   request to the HTTP address specified using the protocol specified
   in <xref target="RFC6546" format="default"/>.</dd>
        </dl>
        <t>These are the only supported URL schemes.</t>
        <t>The following RRset specifies
that reports may be made by means of email with the IODEF data as an
attachment, a web service <xref target="RFC6546" format="default"/>, or both:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
report.example.com         CAA 0 issue "ca1.example.net"
report.example.com         CAA 0 iodef "mailto:security@example.com"
report.example.com         CAA 0 iodef "https://iodef.example.com/"
]]></artwork>
      </section>
      <section anchor="critical-flag" numbered="true" toc="default">
        <name>Critical Flag</name>
        <t>The critical flag is intended to permit future versions of CAA to
introduce new semantics that <bcp14>MUST</bcp14> be understood for correct
processing of the record, preventing conforming CAs that do not
recognize the new semantics from issuing certificates for the
indicated FQDNs.</t>
        <t>In the following example, the Property with a Property Tag of
"tbs" is flagged as critical.
Neither the ca1.example.net CA nor any other Issuer is authorized to
issue for "new.example.com" (or any other domains for which this is
the Relevant RRset) unless the Issuer has implemented the
processing rules for the "tbs" Property Tag.</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
new.example.com       CAA 0 issue "ca1.example.net"
new.example.com       CAA 128 tbs "Unknown"
]]></artwork>
      </section>
    </section>
    <section anchor="security-considerations" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>CAA records assert a security policy that the holder of an FQDN
wishes to be observed by Issuers.  The effectiveness of
CAA records as an access control mechanism is thus dependent on
observance of CAA constraints by Issuers.</t>
      <t>The objective of the CAA record properties described in this document
is to reduce the risk of certificate mis-issue rather than avoid
reliance on a certificate that has been mis-issued.  DANE <xref target="RFC6698" format="default"/>
describes a mechanism for avoiding reliance on mis-issued
certificates.</t>
      <section anchor="use-of-dns-security" numbered="true" toc="default">
        <name>Use of DNS Security</name>
        <t>The use of DNSSEC to authenticate CAA RRs is strongly <bcp14>RECOMMENDED</bcp14> but not
required.  An Issuer <bcp14>MUST NOT</bcp14> issue certificates if doing so would
conflict with the Relevant RRset, irrespective of
whether the corresponding DNS records are signed.</t>
        <t>DNSSEC provides a proof of non-existence for both DNS FQDNs and
RRsets within FQDNs.  DNSSEC verification thus enables an Issuer to
determine whether the answer to a CAA record query (1)&nbsp;is empty because
the RRset is empty or (2)&nbsp;is non-empty but the response has been
suppressed.</t>
        <t>The use of DNSSEC allows an Issuer to acquire and archive a proof that
they were authorized to issue certificates for the FQDN.
Verification of such archives may be an audit requirement to verify
CAA record-processing compliance.  Publication of such archives may
be a transparency requirement to verify CAA record-processing
compliance.</t>
      </section>
      <section anchor="non-compliance-by-certification-authority" numbered="true" toc="default">
        <name>Non-compliance by Certification Authority</name>
        <t>CAA records offer CAs a cost-effective means of mitigating the risk
of certificate mis-issue: the cost of implementing CAA checks is very
small, and the potential costs of a mis-issue event include the
removal of an embedded trust anchor.</t>
      </section>
      <section anchor="mis-issue-by-authorized-certification-authority" numbered="true" toc="default">
        <name>Mis-Issue by Authorized Certification Authority</name>
        <t>The use of CAA records does not prevent mis-issue by an authorized
CA, i.e., a CA that is authorized to issue
certificates for the FQDN in question by CAA records.</t>
        <t>FQDN holders <bcp14>SHOULD</bcp14> verify that the CAs they authorize to
issue certificates for their FQDNs employ appropriate controls to
ensure that certificates are issued only to authorized parties within
their organization.</t>
        <t>Such controls are most appropriately determined by the FQDN
holder and the authorized CA(s) directly and are thus outside the scope of
this document.</t>
      </section>
      <section anchor="suppression-or-spoofing-of-caa-records" numbered="true" toc="default">
        <name>Suppression or Spoofing of CAA Records</name>
        <t>Suppression of a CAA record or insertion of a bogus CAA record
could enable an attacker to obtain a certificate from an Issuer that
was not authorized to issue for an affected FQDN.</t>
        <t>Where possible, Issuers <bcp14>SHOULD</bcp14> perform DNSSEC validation to detect
missing or modified CAA RRsets.</t>
        <t>In cases where DNSSEC is not deployed for a corresponding FQDN, an
Issuer <bcp14>SHOULD</bcp14> attempt to mitigate this risk by employing appropriate
DNS security controls.  For example, all portions of the DNS lookup
process <bcp14>SHOULD</bcp14> be performed against the authoritative nameserver.
Data cached by third parties <bcp14>MUST NOT</bcp14> be relied on as the sole source of DNS CAA
information but <bcp14>MAY</bcp14> be used to
support additional anti&#8209;spoofing or anti-suppression controls.</t>
      </section>
      <section anchor="denial-of-service" numbered="true" toc="default">
        <name>Denial of Service</name>
        <t>Introduction of a malformed or malicious CAA RR could, in theory,
enable a Denial-of-Service (DoS) attack. This could happen by modification of
authoritative DNS records or by spoofing inflight DNS responses.</t>
        <t>This specific threat is not considered to add significantly to the
risk of running an insecure DNS service.</t>
        <t>An attacker could, in principle, perform a DoS attack against an
Issuer by requesting a certificate with a maliciously long DNS name.
In practice, the DNS protocol imposes a maximum name length, and CAA
processing does not exacerbate the existing need to mitigate DoS
attacks to any meaningful degree.</t>
      </section>
      <section anchor="abuse-of-the-critical-flag" numbered="true" toc="default">
        <name>Abuse of the Critical Flag</name>
        <t>A CA could make use of the critical flag to
trick customers into publishing records that prevent competing CAs
from issuing certificates even though the
customer intends to authorize multiple providers. This could happen if the
customers were setting CAA records based on data provided by the CA rather than
generating those records themselves.</t>
        <t>In practice, such an attack would be of minimal effect, since any
competent competitor that found itself unable to issue certificates
due to lack of support for a Property marked critical should
investigate the cause and report the reason to the customer.  The
customer will thus discover that they had been deceived.</t>
      </section>
    </section>
    <section anchor="deployment-considerations" numbered="true" toc="default">
      <name>Deployment Considerations</name>
      <t>A CA implementing CAA may find that they receive errors looking up CAA records.
The following are some common causes of such errors, so that CAs may provide
guidance to their subscribers on fixing the underlying problems.</t>
      <section anchor="blocked-queries-or-responses" numbered="true" toc="default">
        <name>Blocked Queries or Responses</name>
        <t>Some middleboxes -- in particular, anti-DDoS appliances -- may be configured to
drop DNS packets of unknown types, or they may start dropping such packets when
they consider themselves under attack. This generally manifests as a timed-out
DNS query or as a SERVFAIL at a local recursive resolver.</t>
      </section>
      <section anchor="rejected-queries-and-malformed-responses" numbered="true" toc="default">
        <name>Rejected Queries and Malformed Responses</name>
        <t>Some authoritative nameservers respond with REJECTED or NOTIMP when queried
for an RR type they do not recognize. At least one authoritative
resolver produces a malformed response (with the QR (Query/Response) bit set to "0") when queried
for unknown RR types.  Per <xref target="RFC1034"/>, the correct response RCODE for
unknown RR types is 0 ("No error condition").

</t>
      </section>
      <section anchor="delegation-to-private-nameservers" numbered="true" toc="default">
        <name>Delegation to Private Nameservers</name>
        <t>Some FQDN administrators make the contents of a subdomain unresolvable on the
public Internet by delegating that subdomain to a nameserver whose IP address is
private. A CA processing CAA records for such subdomains will receive
SERVFAIL from its recursive resolver. The CA <bcp14>MAY</bcp14> interpret that as preventing
issuance. FQDN administrators wishing to issue certificates for private
FQDNs <bcp14>SHOULD</bcp14> use split-horizon DNS with a publicly available nameserver, so
that CAs can receive a valid, empty CAA response for those FQDNs.</t>
      </section>
      <section anchor="bogus-dnssec-responses" numbered="true" toc="default">
        <name>Bogus DNSSEC Responses</name>
        <t>Queries for CAA RRs are different from most DNS RR&nbsp;types, because
a signed, empty response to a query for CAA RRs is meaningfully different
from a bogus response. A signed, empty response indicates that there is
definitely no CAA policy set at a given label. A bogus response may mean
either a misconfigured zone or an attacker tampering with records. DNSSEC
implementations may have bugs with signatures on empty responses that go
unnoticed, because for more common RR types like A and AAAA,
the difference to an end user between empty and bogus is irrelevant; they
both mean a site is unavailable.</t>
        <t>In particular, at least two authoritative resolvers that implement live signing
had bugs when returning empty RRsets for DNSSEC-signed zones, in
combination with mixed-case queries. Mixed&#8209;case queries, also known as DNS 0x20,
are used by some recursive resolvers to increase resilience against DNS
poisoning attacks. DNSSEC-signing authoritative resolvers are expected to copy
the same capitalization from the query into their ANSWER section but also to sign the
response as if they had used all lowercase. In particular, PowerDNS versions
prior to 4.0.4 had this bug.</t>
      </section>
    </section>
    <section anchor="differences-versus-rfc6844" numbered="true" toc="default">
      <name>Differences from RFC 6844</name>
      <t>This document obsoletes <xref target="RFC6844"/>. The most important change is to
the "Certification Authority Processing" section (now called
"Relevant Resource Record Set" (<xref target="relevant-resource-record-set"/>), as noted below). <xref target="RFC6844"/> specified an
algorithm that performed DNS tree-climbing not only on the FQDN
being processed but also on all CNAMEs and DNAMEs encountered along
the way. This made the processing algorithm very inefficient when used
on FQDNs that utilize many CNAMEs and would have made it difficult
for hosting providers to set CAA policies on their own FQDNs without
setting potentially unwanted CAA policies on their customers' FQDNs.
This document specifies a simplified processing algorithm that only
performs tree-climbing on the FQDN being processed, and it leaves the
processing of CNAMEs and DNAMEs up to the CA's recursive resolver.</t>
      <t>This document also includes a "Deployment Considerations" section
(<xref target="deployment-considerations"/>) detailing experience gained with practical deployment of CAA enforcement
among CAs in the WebPKI.</t>
      <t>This document clarifies the ABNF grammar for the issue and issuewild tags
and resolves some inconsistencies with the document text. In particular,
it specifies that parameters are separated with semicolons. It also allows
hyphens in Property Tags.</t>
      <t>This document also clarifies the processing of a CAA RRset that is not empty
but that does not contain any issue or issuewild tags.</t>
      <t>This document removes the section titled "The CAA RR Type," merging it with
"Mechanism" (<xref target="mechanism"/>) because the definitions were mainly duplicates. It moves the "Use of
DNS Security" section into Security Considerations (<xref target="security-considerations"/>). It renames "Certification
Authority Processing" to "Relevant Resource Record Set" (<xref target="relevant-resource-record-set"/>) and emphasizes the use
of that term to more clearly define which domains are affected by a given RRset.</t>
    </section>
    <section anchor="iana-considerations" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>IANA has added this document as
a reference for the "Certification Authority Restriction Flags" and
"Certification Authority Restriction Properties" registries and updated
references to <xref target="RFC6844" format="default"/> within those registries to refer instead to
this document. IANA has also updated the CAA TYPE in the 
"Resource Record (RR) TYPEs" subregistry of the "Domain Name System (DNS) Parameters" registry with a reference
to this document.</t>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6698.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5280.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4033.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4034.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4035.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5155.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7970.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6546.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6844.xml"/>
      </references>
      <references>
        <name>Informative References</name>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3647.xml"/>
      </references>
    </references>
    <section anchor="acknowledgements" numbered="false" toc="default">
      <name>Acknowledgements</name>
      <t>The authors would like to thank the following people who contributed
to the design and documentation of this work item: Corey Bonnell, Chris Evans,
Stephen Farrell, Jeff Hodges, Paul Hoffman, Tim Hollebeek, Stephen Kent, Adam
Langley, Ben Laurie, James Manger, Chris Palmer, Scott Schmit, Sean Turner, and
Ben Wilson.</t>
    </section>
  </back>
</rfc>
