<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" submissionType="IETF"
     category="std" consensus="true" number="8663" ipr="trust200902"
     obsoletes="" updates="" xml:lang="en" tocInclude="true" symRefs="true"
     sortRefs="true" version="3" docName="draft-ietf-mpls-sr-over-ip-07">
 
  <front>
    <title abbrev="SR-MPLS-over-IP">MPLS Segment Routing over IP</title>
    <seriesInfo name="RFC" value="8663"/>
    <author fullname="Xiaohu Xu" initials="X." surname="Xu">
      <organization>Alibaba, Inc</organization>
      <address>
        <email>xiaohu.xxh@alibaba-inc.com</email>
      </address>
    </author>
    <author fullname="Stewart Bryant" initials="S." surname="Bryant ">
      <organization>Futurewei Technologies</organization>
      <address>
        <email>stewart.bryant@gmail.com</email>
      </address>
    </author>
    <author fullname="Adrian Farrel" initials="A." surname="Farrel ">
      <organization>Old Dog Consulting</organization>
      <address>
        <email>adrian@olddog.co.uk</email>
      </address>
    </author>
    <author fullname="Syed Hassan" initials="S." surname="Hassan">
      <organization>Cisco</organization>
      <address>
        <email>shassan@cisco.com</email>
      </address>
    </author>
    <author fullname="Wim Henderickx" initials="W" surname="Henderickx">
      <organization>Nokia</organization>
      <address>
        <email>wim.henderickx@nokia.com</email>
      </address>
    </author>
    <author fullname="Zhenbin Li" initials="Z." surname="Li">
      <organization>Huawei</organization>
      <address>
        <email>lizhenbin@huawei.com</email>
      </address>
    </author>
    <date month="December" year="2019"/>


    <keyword>MPLS-SR-over-IP</keyword>
    <keyword>SR-MPLS-over-IP</keyword>
    <keyword>MPLS-SR-over-UDP</keyword>
    <keyword>SR-MPLS-over-UDP</keyword>


    <abstract>
      <t>MPLS Segment Routing (SR-MPLS) is a method of source routing a packet
      through an MPLS data plane by imposing a stack of MPLS labels on the
      packet to specify the path together with any packet-specific
      instructions to be executed on it.
  
       SR-MPLS can be leveraged to realize a source-routing mechanism across
       MPLS, IPv4, and IPv6 data planes by using an MPLS label stack as a
       source-routing instruction set while making no changes to SR-MPLS
       specifications and interworking with SR-MPLS implementations.</t>
      <t>This document describes how SR-MPLS-capable routers and IP-only
      routers can seamlessly coexist and interoperate through the use of
      SR-MPLS label stacks and IP encapsulation/tunneling such as MPLS-over-UDP
      as defined in RFC 7510.</t>
    </abstract>
  </front>
  <middle>
    <section numbered="true" toc="default">
      <name>Introduction</name>
      <t>MPLS Segment Routing (SR-MPLS) <xref target="RFC8660"
      format="default"/> is a method of source routing a packet through an
      MPLS data plane. This is achieved by the sender imposing a stack of MPLS
      labels that partially or completely specify the path that the packet is
      to take and any instructions to be executed on the packet as it passes
      through the network.

      SR-MPLS uses an MPLS label stack to encode a sequence of source-routing
      instructions. This can be used to realize a source-routing mechanism
      that can operate across MPLS, IPv4, and IPv6 data planes. This approach
      makes no changes to SR-MPLS specifications and allows interworking with
      SR-MPLS implementations. More specifically, the source-routing
      instructions in a source-routed packet could be
      uniformly encoded as an MPLS label stack regardless of whether the
      underlay is IPv4, IPv6 (including Segment Routing for IPv6 (SRv6) <xref
      target="RFC8354"/>), or MPLS.</t>
      <t>This document describes how SR-MPLS-capable routers and IP-only
      routers can seamlessly coexist and interoperate through the use of
      SR-MPLS label stacks and IP encapsulation/tunneling such as MPLS-over-UDP
      <xref target="RFC7510" format="default"/>.</t>
      <t><xref target="usecases" format="default"/> describes various use
      cases for tunneling SR-MPLS over IP. <xref target="procs"
      format="default"/> describes a typical application scenario and how the
      packet forwarding happens.</t>
      <section anchor="Abbreviations_Terminology" numbered="true" toc="default">
        <name>Terminology</name>
        <t>This memo makes use of the terms defined in <xref target="RFC3031" format="default"/> and <xref target="RFC8660" format="default"/>.</t>

        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
    "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
    interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/> <xref
    target="RFC8174"/> when, and only when, they appear in all capitals, as
    shown here.
        </t>
      </section>
    </section>
    <section anchor="usecases" numbered="true" toc="default">
      <name>Use Cases</name>
      <t>Tunneling SR-MPLS using IPv4 and/or IPv6 (including SRv6) tunnels is
      useful at least in the use cases listed below. In all cases, this can be
      enabled using an IP tunneling mechanism such as MPLS-over-UDP as described
      in <xref target="RFC7510" format="default"/>. The tunnel selected <bcp14>MUST</bcp14> have its remote
      endpoint (destination) address equal to the address of the next
      node capable of SR-MPLS identified as being on the SR path (i.e., the
      egress of the active segment). The local endpoint (source) address is
      set to an address of the encapsulating node. <xref target="RFC7510" format="default"/>
      gives further advice on how to set the source address if the UDP
      zero-checksum mode is used with MPLS-over-UDP. Using UDP as the
      encapsulation may be particularly beneficial because it is agnostic of
      the underlying transport.</t>
      <ul spacing="normal">
        <li>
          <t>Incremental deployment of the SR-MPLS technology may be
          facilitated by tunneling SR-MPLS packets across parts of a network
          that are not SR-MPLS as shown in <xref target="islandsFig" format="default"/>. This
          demonstrates how islands of SR-MPLS may be connected across a legacy
          network. It may be particularly useful for joining sites (such as
          data centers).

          </t>
          <figure anchor="islandsFig">
            <name>SR-MPLS-over-UDP to Tunnel between SR-MPLS Sites</name>
            <artwork name="" type="" align="left" alt=""><![CDATA[
                   ________________________
    _______       (                        )       _______
   (       )     (        IP Network        )     (       )
  ( SR-MPLS )   (                            )   ( SR-MPLS )
 (  Network  ) (                              ) (  Network  )
(         --------                          --------         )
(        | Border |    SR-in-UDP Tunnel    | Border |        )
(        | Router |========================| Router |        )
(        |   R1   |                        |   R2   |        )
(         --------                          --------         )
 (           ) (                              ) (           )
  (         )   (                            )   (         )
   (_______)     (                          )     (_______)
                  (________________________)
]]></artwork>
          </figure>
        </li>
        <li>If the encoding of entropy <xref target="RFC6790"
        format="default"/> is desired, IP-tunneling mechanisms that allow the
        encoding of entropy, such as MPLS-over-UDP encapsulation <xref
        target="RFC7510" format="default"/> where the source port of the UDP
        header is used as an entropy field, may be used to maximize the
        utilization of Equal-Cost Multipath (ECMP) and/or Link Aggregation
        Groups (LAGs), especially when it is difficult to make use of the
        entropy-label mechanism. This is to be contrasted with <xref
        target="RFC4023" format="default"/> where MPLS-over-IP does not provide
        for an entropy mechanism. Refer to <xref target="RFC8662"
        format="default"/>) for more discussion about using entropy labels in
        SR-MPLS.</li>
        <li>
          <t>Tunneling MPLS over IP provides a technology that enables Segment
          Routing (SR) in an IPv4 and/or IPv6 network where the routers do not
          support SRv6 capabilities <xref
          target="I-D.ietf-6man-segment-routing-header" format="default"/> and
          where MPLS forwarding is not an option. This is shown in <xref
          target="transitionFig" format="default"/>. </t>

          <figure anchor="transitionFig">
            <name>SR-MPLS Enabled within an IP Network</name>
            <artwork name="" type="" align="left" alt=""><![CDATA[
                __________________________________
             __(           IP Network             )__
          __(                                        )__
         (               --        --        --         )
    --------   --   --  |SR|  --  |SR|  --  |SR|  --   --------
   | Ingress| |IR| |IR| |  | |IR| |  | |IR| |  | |IR| | Egress|
-->| Router |===========|  |======|  |======|  |======| Router|-->
   |   SR   | |  | |  | |  | |  | |  | |  | |  | |  | |   SR  |
    --------   --   --  |  |  --  |  |  --  |  |  --   --------
         (__             --        --        --       __)
            (__                                    __)
               (__________________________________)

  Key:
    IR : IP-only Router
    SR : SR-MPLS-capable Router
    == : SR-MPLS-over-UDP Tunnel
]]></artwork></figure>
        </li>
      </ul>
    </section>
    <section anchor="procs" numbered="true" toc="default">
      <name>Procedures of SR-MPLS-over-IP</name>
      <t>This section describes the construction of forwarding information
      base (FIB) entries and the forwarding behavior that allow the deployment
      of SR-MPLS when some routers in the network are IP only (i.e., do not
      support SR-MPLS). Note that the examples in Sections <xref target="fibeg" format="counter"/> and <xref target="fwd" format="counter"/> assume that
      OSPF or IS-IS is enabled; in fact, other mechanisms of discovery and
      advertisement could be used including other routing protocols (such as
      BGP) or a central controller.</t>
      <section anchor="fib" numbered="true" toc="default">
        <name>Forwarding Entry Construction</name>
        <t>This subsection describes how to construct the forwarding
        information base (FIB) entry on an SR-MPLS-capable router when some or
        all of the next hops along the shortest path towards a prefix Segment
        Identifier (Prefix-SID) are IP-only routers. <xref target="fibeg" format="default"/>
        provides a concrete example of how the process applies when using OSPF
        or IS-IS.</t>
        <t>Consider router A that receives a labeled packet with top label
        L(E) that corresponds to the Prefix-SID SID(E) of prefix P(E)
        advertised by router E. Suppose the i-th next-hop router (termed NHi)
        along the shortest path from router A toward SID(E) is not SR-MPLS
        capable while both routers A and E are SR-MPLS capable. The following
        processing steps apply:</t>
        <ul spacing="normal">
          <li>Router E is SR-MPLS capable, so it advertises a Segment Routing
            Global Block (SRGB). The SRGB is defined in <xref target="RFC8402" format="default"/>.
            There are a number of ways that the advertisement can be achieved
            including IGPs, BGP, and configuration/management protocols. For
            example, see <xref target="I-D.ietf-bess-datacenter-gateway" format="default"/>.</li>
        
<li>When Router E advertises the Prefix-SID SID(E) of prefix P(E), it <bcp14>MUST</bcp14>
also advertise the egress endpoint address and the encapsulation type of any
tunnel used to reach E.  This information is flooded domain wide.
</li>


          <li>If A and E are in different routing domains, then the information <bcp14>MUST</bcp14>
            be flooded into both domains. How this is achieved depends on the
            advertisement mechanism being used. The objective is that router A
            knows the characteristics of router E that originated the
            advertisement of SID(E).</li>
          <li>
            <t>Router A programs the FIB entry for prefix P(E) corresponding
            to the SID(E) according to whether a pop or swap action is advertised
            for the prefix. The resulting action may be:
            </t>
            <ul spacing="normal">
              <li>pop the top label</li>
              <li>swap the top label to a value equal to SID(E) plus the
                  lower bound of the SRGB of E</li>
            </ul>
          </li>
        </ul>
        <t>Once constructed, the FIB can be used by a router to tell it how to
        process packets. It encapsulates the packets according to the
        appropriate encapsulation advertised for the segment and then sends
        the packets towards the next hop NHi.</t>

        <section anchor="fibeg" numbered="true" toc="default">
          <name>FIB Construction Example</name>
          <t>This section is non-normative and provides a worked example of how
          a FIB might be constructed using OSPF and IS-IS extensions. It is based
          on the process described in <xref target="fib" format="default"/>.</t>
          <ul spacing="normal">
            <li>Router E is SR-MPLS capable, so it advertises a Segment Routing
              Global Block (SRGB) using
              <xref target="RFC8665" format="default"/> or
              <xref target="RFC8667" format="default"/>.</li>
            <li>When Router E advertises the Prefix-SID SID(E) of prefix P(E),
              it also advertises the encapsulation endpoint address and the tunnel
              type of any tunnel used to reach E using
              <xref target="I-D.ietf-isis-encapsulation-cap" format="default"/> or
              <xref target="I-D.ietf-ospf-encapsulation-cap" format="default"/>.</li>

            <li>
              <t>If A and E are in different domains, then the information is
              flooded into both domains and any intervening domains.
              </t>
              <ul spacing="normal">
                <li>The OSPF Tunnel Encapsulations TLV
                  <xref target="I-D.ietf-ospf-encapsulation-cap" format="default"/> or the IS-IS
                  Tunnel Encapsulation Type sub-TLV
                  <xref target="I-D.ietf-isis-encapsulation-cap" format="default"/> is flooded
                  domain wide.</li>
                <li>The OSPF SID/Label Range TLV
                  <xref target="RFC8665" format="default"/> or
                  the IS-IS SR-Capabilities sub-TLV
                  <xref target="RFC8667" format="default"/> is
                  advertised domain wide so that router A knows the
                  characteristics of router E.</li>
                <li>
                  <t>When router E advertises the prefix P(E):
                  </t>
                  <ul spacing="normal">
                    <li>If router E is running IS-IS, it uses the extended
                      reachability TLV (TLVs 135, 235, 236, 237) and associates
                      the IPv4/IPv6 or IPv4/IPv6 Source Router ID sub-TLV(s)
                      <xref target="RFC7794" format="default"/>.</li>
                    <li>If router E is running OSPF, it uses the OSPFv2 Extended
                      Prefix Opaque Link-State Advertisement (LSA) <xref target="RFC7684" format="default"/> and sets the
                      flooding scope to Autonomous System (AS) wide.</li>
                  </ul>
                </li>


                <li>If router E is running IS-IS and advertises the IS-IS
                  Router CAPABILITY TLV (TLV 242) <xref target="RFC7981" format="default"/>, it sets the
                  "Router ID" field to a valid value or includes an IPv6
                  TE Router ID sub-TLV (TLV 12), or it does both. The "S" bit
                  (flooding scope) of the IS-IS Router CAPABILITY TLV (TLV 242) is set
                  to "1".</li>
              </ul>
            </li>


            <li>
              <t>Router A programs the FIB entry for prefix P(E) corresponding
              to the SID(E) according to whether a pop or swap action is advertised
              for the prefix as follows:
              </t>
              <ul spacing="normal">
                <li>
                  <t>If the No-PHP (NP) Flag in OSPF or the Persistent (P) Flag in IS-IS is clear:
                  </t>
                  <ul empty="true" spacing="normal">
                    <li>pop the top label</li>
                  </ul>
                </li>
                <li>
                  <t>If the No-PHP (NP) Flag in OSPF or the Persistent (P) Flag in IS-IS is set:
                  </t>
                  <ul empty="true" spacing="normal">
                    <li>swap the top label to a value equal to SID(E) plus the
                      lower bound of the SRGB of E</li>
                  </ul>
                </li>
              </ul>
            </li>
          </ul>
          <t>When forwarding the packet according to the constructed FIB entry, the
          router encapsulates the packet according to the encapsulation as advertised
          using the mechanisms described in <xref target="I-D.ietf-isis-encapsulation-cap" format="default"/>
          or <xref target="I-D.ietf-ospf-encapsulation-cap" format="default"/>. It then sends the
          packets towards the next hop NHi.</t>
          <t>Note that <xref target="RFC7510" format="default"/> specifies the use of port number 6635
          to indicate that the payload of a UDP packet is MPLS, and port number 6636 for
          MPLS-over-UDP utilizing DTLS. However, <xref target="I-D.ietf-isis-encapsulation-cap" format="default"/>
          and <xref target="I-D.ietf-ospf-encapsulation-cap" format="default"/> provide dynamic protocol
          mechanisms to configure the use of any Dynamic Port for a tunnel that uses UDP
          encapsulation. Nothing in this document prevents the use of an IGP or any other
          mechanism to negotiate the use of a Dynamic Port when UDP encapsulation is used
          for SR-MPLS, but if no such mechanism is used, then the port numbers specified in
          <xref target="RFC7510" format="default"/> are used.</t>
        </section>
      </section>
      <section anchor="fwd" numbered="true" toc="default">
        <name>Packet-Forwarding Procedures</name>
        <t><xref target="RFC7510" format="default"/> specifies an IP-based encapsulation for
        MPLS, i.e., MPLS-over-UDP. This approach is applicable where IP-based
        encapsulation for MPLS is required and further fine-grained load
        balancing of MPLS packets over IP networks over 
        ECMP and/or LAGs is also required. This
        section provides details about the forwarding procedure when
        UDP encapsulation is adopted for SR-MPLS-over-IP. Other encapsulation
        and tunneling mechanisms can be applied using similar techniques,
        but for clarity, this section uses UDP encapsulation as the exemplar.</t>
        <t>Nodes that are SR-MPLS capable can process SR-MPLS packets. Not all
        of the nodes in an SR-MPLS domain are SR-MPLS capable. Some nodes may
        be "legacy routers" that cannot handle SR-MPLS packets but can forward
        IP packets. A node capable of SR-MPLS <bcp14>MAY</bcp14> advertise its capabilities
        using the IGP as described in <xref target="procs" format="default"/>. There are six
        types of nodes in an SR-MPLS domain: </t>
        <ul spacing="normal">
          <li>Domain ingress nodes that receive packets and encapsulate them
            for transmission across the domain. Those packets may be any
            payload protocol including native IP packets or packets that are
            already MPLS encapsulated.</li>
          <li>Legacy transit nodes that are IP routers but that are not
          SR-MPLS capable (i.e., are not able to perform Segment
          Routing).</li>
          <li>Transit nodes that are SR-MPLS capable but that are not
            identified by a SID in the SID stack.</li>
          <li>Transit nodes that are SR-MPLS capable and need to perform
            SR-MPLS routing because they are identified by a SID in the SID
            stack.</li>
          <li>The penultimate node capable of SR-MPLS on the path that processes
            the last SID on the stack on behalf of the domain egress node.</li>
          <li>The domain egress node that forwards the payload packet for
            ultimate delivery.</li>
        </ul>
        <section anchor="phpfwd" numbered="true" toc="default">
          <name>Packet Forwarding with Penultimate Hop Popping</name>
          <t>The description in this section assumes that the label associated
          with each Prefix-SID is advertised by the owner of the Prefix-SID as
          a Penultimate Hop-Popping (PHP) label. That is, if one of the IGP
          flooding mechanisms is used, the NP-Flag in OSPF or the P-Flag in
          IS-IS associated with the Prefix-SID is not set.</t>
          <figure anchor="phpfwdeg">
            <name>Packet-Forwarding Example with PHP</name>
            <artwork align="center" name="" type="" alt=""><![CDATA[
 +-----+       +-----+       +-----+       +-----+       +-----+
 |  A  +-------+  B  +-------+  C  +-------+  D  +-------+  H  |
 +-----+       +--+--+       +--+--+       +--+--+       +-----+
                  |             |             |
                  |             |             |
               +--+--+       +--+--+       +--+--+
               |  E  +-------+  F  +-------+  G  |
               +-----+       +-----+       +-----+


      +--------+
      |IP(A->E)|
      +--------+                 +--------+        +--------+
      |  UDP   |                 |IP(E->G)|        |IP(G->H)|
      +--------+                 +--------+        +--------+
      |  L(G)  |                 |  UDP   |        |  UDP   |
      +--------+                 +--------+        +--------+
      |  L(H)  |                 |  L(H)  |        |Exp Null|
      +--------+                 +--------+        +--------+
      | Packet |     --->        | Packet |  --->  | Packet |
      +--------+                 +--------+        +--------+
]]></artwork>
          </figure>
          <t>In the example shown in <xref target="phpfwdeg" format="default"/>, assume that
          routers A, E, G, and H are capable of SR-MPLS while the remaining
          routers (B, C, D, and F) are only capable of forwarding IP packets.
          Routers A, E, G, and H advertise their Segment Routing related
          information, such as via IS-IS or OSPF.</t>
          <t>Now assume that router A (the Domain ingress) wants to send a
          packet to router H (the Domain egress) via the explicit path
          {E-&gt;G-&gt;H}. Router A will impose an MPLS label stack on the
          packet that corresponds to that explicit path. Since the next hop
          toward router E is only IP capable (B is a legacy transit node),
          router A replaces the top label (that indicated router E) with a
          UDP-based tunnel for MPLS (i.e., MPLS-over-UDP <xref target="RFC7510" format="default"/>) to router E and then sends the packet. In other
          words, router A pops the top label and then encapsulates the MPLS
          packet in a UDP tunnel to router E.</t>
          <t>When the IP-encapsulated MPLS packet arrives at router E (which
          is a transit node capable of SR-MPLS), router E strips the IP-based
          tunnel header and then processes the decapsulated MPLS packet. The top
          label indicates that the packet must be forwarded toward router G.
          Since the next hop toward router G is only IP capable, router E
          replaces the current top label with an MPLS-over-UDP tunnel toward
          router G and sends it out. That is, router E pops the top label and
          then encapsulates the MPLS packet in a UDP tunnel to router G.</t>
          <t>When the packet arrives at router G, router G will strip the
          IP-based tunnel header and then process the decapsulated MPLS
          packet. The top label indicates that the packet must be forwarded
          toward router H. Since the next hop toward router H is only
          IP capable (D is a legacy transit router), router G would replace
          the current top label with an MPLS-over-UDP tunnel toward router H
          and send it out. However, since router G reaches the bottom of the
          label stack (G is the penultimate node capable of SR-MPLS on the path),
          this would leave the original packet that router A wanted to send to
          router H encapsulated in UDP as if it was MPLS (i.e., with a UDP
          header and destination port indicating MPLS) even though the
          original packet could have been any protocol. That is, the final
          SR-MPLS has been popped exposing the payload packet.</t>
          <t>To handle this, when a router (here it is router G) pops the
          final SR-MPLS label, it inserts an explicit NULL label <xref target="RFC3032" format="default"/> before encapsulating the packet in an
          MPLS-over-UDP tunnel toward router H and sending it out. That is,
          router G pops the top label, discovers it has reached the bottom of
          stack, pushes an explicit NULL label, and then encapsulates the MPLS
          packet in a UDP tunnel to router H.</t>
        </section>
        <section anchor="nophpfwd" numbered="true" toc="default">
          <name>Packet Forwarding without Penultimate Hop Popping</name>
          <t><xref target="nophpfwdeg" format="default"/> demonstrates the packet walk in the
          case where the label associated with each Prefix-SID advertised by
          the owner of the Prefix-SID is not a Penultimate Hop-Popping (PHP)
          label (e.g., the NP-Flag in OSPF or the P-Flag in IS-IS
          associated with the Prefix-SID is set). Apart from the PHP function,
          the roles of the routers are unchanged from <xref target="phpfwd" format="default"/>.</t>
          <figure anchor="nophpfwdeg">
            <name>Packet-Forwarding Example without PHP</name>
            <artwork align="center" name="" type="" alt=""><![CDATA[
 +-----+       +-----+       +-----+        +-----+        +-----+
 |  A  +-------+  B  +-------+  C  +--------+  D  +--------+  H  |
 +-----+       +--+--+       +--+--+        +--+--+        +-----+
                  |             |              |
                  |             |              |
               +--+--+       +--+--+        +--+--+
               |  E  +-------+  F  +--------+  G  |
               +-----+       +-----+        +-----+

      +--------+
      |IP(A->E)|
      +--------+                 +--------+
      |  UDP   |                 |IP(E->G)|
      +--------+                 +--------+        +--------+
      |  L(E)  |                 |  UDP   |        |IP(G->H)|
      +--------+                 +--------+        +--------+
      |  L(G)  |                 |  L(G)  |        |  UDP   |
      +--------+                 +--------+        +--------+
      |  L(H)  |                 |  L(H)  |        |  L(H)  |
      +--------+                 +--------+        +--------+
      | Packet |     --->        | Packet |  --->  | Packet |
      +--------+                 +--------+        +--------+
]]></artwork>
          </figure>
          <t>As can be seen from the figure, the SR-MPLS label for each
          segment is left in place until the end of the segment where it is
          popped and the next instruction is processed.</t>
        </section>
        <section anchor="addnlfwd" numbered="true" toc="default">
          <name>Additional Forwarding Procedures</name>
          <dl newline="false" spacing="normal">
            <dt>Non-MPLS Interfaces:</dt>
            <dd>Although the description in
              the previous two sections is based on the use of Prefix-SIDs,
              tunneling SR-MPLS packets is useful when the top label of a
              received SR-MPLS packet indicates an Adjacency SID and the
              corresponding adjacent node to that Adjacency SID is not capable
              of MPLS forwarding but can still process SR-MPLS packets. In
              this scenario, the top label would be replaced by an IP tunnel
              toward that adjacent node and then forwarded over the
              corresponding link indicated by the Adjacency SID.</dd>
            <dt>When to Use IP-Based Tunnels:</dt>
            <dd>The description in
              the previous two sections is based on the assumption that
              an MPLS-over-UDP tunnel is used when the next hop towards the next
              segment is not MPLS enabled. However, even in the case where the
              next hop towards the next segment is MPLS capable, an
              MPLS-over-UDP tunnel towards the next segment could still be
              used instead due to local policies. For instance, in the example
              as described in <xref target="nophpfwdeg" format="default"/>, assume F is now a
	      transit node capable of SR-MPLS while all the other assumptions
              remain unchanged; since F is not identified by a SID in the stack
              and an MPLS-over-UDP tunnel is preferred to an MPLS LSP
              according to local policies, router E replaces the current
              top label with an MPLS-over-UDP tunnel toward router G and sends
              it out. (Note that if an MPLS LSP was preferred, the packet
              would be forwarded as native SR-MPLS.)</dd>
            <dt>IP Header Fields:</dt>
            <dd>When encapsulating an MPLS
              packet in UDP, the resulting packet is further encapsulated in
              IP for transmission. IPv4 or IPv6 may be used according to the
              capabilities of the network. The address fields are set as
              described in <xref target="usecases" format="default"/>. The other IP header
              fields (such as the ECN field <xref target="RFC6040" format="default"/>, the
              Differentiated Services Code Point (DSCP) <xref target="RFC2983" format="default"/>, or IPv6 Flow Label) on each UDP-encapsulated
              segment <bcp14>SHOULD</bcp14> be configurable according to the operator's
              policy; they may be copied from the header of the incoming
              packet; they may be promoted from the header of the payload
              packet; they may be set according to instructions programmed to
              be associated with the SID; or they may be configured dependent
              on the outgoing interface and payload. The TTL field setting in
              the encapsulating packet header is handled as described in
              <xref target="RFC7510"/>, which refers to <xref target="RFC4023"/>.</dd>
            <dt>Entropy and ECMP:</dt>
            <dd>When encapsulating an MPLS
              packet with an IP tunnel header that is capable of encoding
              entropy (such as <xref target="RFC7510" format="default"/>), the corresponding
              entropy field (the source port in the case of a UDP tunnel) <bcp14>MAY</bcp14>
              be filled with an entropy value that is generated by the
              encapsulator to uniquely identify a flow. However, what
              constitutes a flow is locally determined by the encapsulator. For
              instance, if the MPLS label stack contains at least one entropy
              label and the encapsulator is capable of reading that entropy
              label, the entropy label value could be directly copied to the
              source port of the UDP header. Otherwise, the encapsulator may
              have to perform a hash on the whole label stack or the five-tuple
              of the SR-MPLS payload if the payload is determined as an IP packet.
              To avoid recalculating the hash or hunting for the entropy label
              each time the packet is encapsulated in a UDP tunnel, it <bcp14>MAY</bcp14> be
              desirable that the entropy value contained in the incoming
              packet (i.e., the UDP source port value) is retained when
              stripping the UDP header and is reused as the entropy value of
              the outgoing packet.</dd>
            <dt>Congestion Considerations:</dt>
            <dd><xref target="RFC7510" sectionFormat="of" section="5"/> provides a detailed analysis of the
              implications of congestion in MPLS-over-UDP systems and builds
              on <xref target="RFC8085" sectionFormat="of" section="3.1.3"/>, which describes
              the congestion implications of UDP tunnels. All of those
              considerations apply to SR-MPLS-over-UDP tunnels as described
              in this document. In particular, it should be noted that the
              traffic carried in SR-MPLS flows is likely to be IP traffic.</dd>
          </dl>
        </section>
      </section>
    </section>
    <section anchor="IANA" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>This document has no IANA actions.</t>
    </section>
    <section anchor="Security" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>The security consideration of <xref target="RFC8354" format="default"/> (which redirects
      the reader to <xref target="RFC5095" format="default"/>) and <xref target="RFC7510" format="default"/>
      apply. DTLS <xref target="RFC6347" format="default"/> <bcp14>SHOULD</bcp14> be used where security is
      needed on an SR-MPLS-over-UDP segment including when the IP segment crosses
      the public Internet or some other untrusted environment. <xref target="RFC8402" format="default"/>
      provides security considerations for Segment Routing, and <xref
      target="RFC8402" sectionFormat="of" section="8.1"/> is particularly applicable to SR-MPLS.</t>
      <t>It is difficult for an attacker to pass a raw MPLS-encoded packet
      into a network, and operators have considerable experience in excluding
      such packets at the network boundaries, for example, by excluding all
      packets that are revealed to be carrying an MPLS packet as the payload
      of IP tunnels. Further discussion of MPLS security is found in
      <xref target="RFC5920" format="default"/>.</t>
      <t>It is easy for a network ingress node to detect any attempt to smuggle an IP
      packet into the network since it would see that the UDP destination port
      was set to MPLS, and such filtering <bcp14>SHOULD</bcp14> be applied. If, however, the
      mechanisms described in <xref target="RFC8665" format="default"/>
      or <xref target="RFC8667" format="default"/> are applied,
      a wider variety of UDP port numbers might be in use making port filtering
      harder.</t>
      <t>SR packets not having a destination address terminating in the network
      would be transparently carried and would pose no different security risk to
      the network under consideration than any other traffic.</t>
      <t>Where control-plane techniques are used (as described in <xref target="procs" format="default"/>), it is important that these protocols are adequately
      secured for the environment in which they are run as discussed in
      <xref target="RFC6862" format="default"/> and <xref target="RFC5920" format="default"/>.</t>
    </section>
  </middle>
  <back>

<displayreference target="I-D.ietf-bess-datacenter-gateway" to="DC-GATEWAY"/>
<displayreference target="I-D.ietf-ospf-encapsulation-cap" to="OSPF-ENCAP"/>
<displayreference target="I-D.ietf-isis-encapsulation-cap" to="ISIS-ENCAP"/>
<displayreference target="I-D.ietf-6man-segment-routing-header" to="IPv6-SRH"/>

    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3031.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3032.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4023.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5095.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6040.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6347.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7510.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7684.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7794.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7981.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8402.xml"/>
        <!-- <?rfc include="reference.I-D.ietf-spring-segment-routing-mpls"?>; companion document RFC 8660-->
        <reference anchor="RFC8660" target="https://www.rfc-editor.org/info/rfc8660">
          <front>
            <title>Segment Routing with the MPLS Data Plane</title>
            <seriesInfo name="DOI" value="10.17487/RFC8660"/>
            <seriesInfo name="RFC" value="8660"/>
            <author initials="A" surname="Bashandy" fullname="Ahmed Bashandy">
              <organization/>
            </author>
            <author initials="C" surname="Filsfils" fullname="Clarence Filsfils">
              <organization/>
            </author>
            <author initials="S" surname="Previdi" fullname="Stefano Previdi">
              <organization/>
            </author>
            <author initials="B" surname="Decraene" fullname="Bruno Decraene">
              <organization/>
            </author>
            <author initials="S" surname="Litkowski" fullname="Stephane Litkowski">
              <organization/>
            </author>
            <author initials="R" surname="Shakir" fullname="Rob Shakir">
              <organization/>
            </author>
            <date month="December" year="2019"/>
          </front>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2983.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5920.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6790.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6862.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8085.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8354.xml"/>

        <!-- draft-ietf-bess-datacenter-gateway I-D Exists -->
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-bess-datacenter-gateway-04.xml"/>

        <!-- draft-ietf-ospf-segment-routing-extensions
	will be RFC 8665-->
        <reference anchor="RFC8665" target="https://www.rfc-editor.org/info/rfc8665">
          <front>
            <title>OSPF Extensions for Segment Routing</title>
            <seriesInfo name="DOI" value="10.17487/RFC8665"/>
            <seriesInfo name="RFC" value="8665"/>
            <author initials="P" surname="Psenak" fullname="Peter Psenak" role="editor">
              <organization/>
            </author>
            <author initials="S" surname="Previdi" fullname="Stefano Previdi" role="editor">
              <organization/>
            </author>
            <author initials="C" surname="Filsfils" fullname="Clarence Filsfils">
              <organization/>
            </author>
            <author initials="H" surname="Gredler" fullname="Hannes Gredler">
              <organization/>
            </author>
            <author initials="R" surname="Shakir" fullname="Rob Shakir">
              <organization/>
            </author>
            <author initials="W" surname="Henderickx" fullname="Wim Henderickx">
              <organization/>
            </author>
            <author initials="J" surname="Tantsura" fullname="Jeff Tantsura">
              <organization/>
            </author>
            <date month="December" year="2019"/>
          </front>
        </reference>

        <!-- draft-ietf-isis-segment-routing-extensions will be RFC 8667 -->
        <reference anchor="RFC8667" target="https://www.rfc-editor.org/info/rfc8667">
          <front>
            <title>IS-IS Extensions for Segment Routing</title>
            <seriesInfo name="DOI" value="10.17487/RFC8667"/>
            <seriesInfo name="RFC" value="8667"/>
            <author initials="S" surname="Previdi" fullname="Stefano Previdi" role="editor">
              <organization/>
            </author>
            <author initials="L" surname="Ginsberg" fullname="Les Ginsberg" role="editor">
              <organization/>
            </author>
            <author initials="C" surname="Filsfils" fullname="Clarence Filsfils">
              <organization/>
            </author>
            <author initials="A" surname="Bashandy" fullname="Ahmed Bashandy">
              <organization/>
            </author>
            <author initials="H" surname="Gredler" fullname="Hannes Gredler">
              <organization/>
            </author>
            <author initials="B" surname="Decraene" fullname="Bruno Decraene">
              <organization/>
            </author>
            <date month="December" year="2019"/>
          </front>
        </reference>

        <!-- draft-ietf-ospf-encapsulation-cap in queue in MISSREF -->
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-ospf-encapsulation-cap-09.xml"/>

        <!-- draft-ietf-isis-encapsulation-cap : Expired -->
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-isis-encapsulation-cap-01.xml"/>

        <!-- draft-ietf-mpls-spring-entropy-label will
	     be RFC 8662 -->
        <reference anchor="RFC8662" target="https://www.rfc-editor.org/info/rfc8662">
          <front>
            <title>Entropy Label for Source Packet Routing in Networking (SPRING) Tunnels</title>
            <seriesInfo name="DOI" value="10.17487/RFC8662"/>
            <seriesInfo name="RFC" value="8662"/>
            <author initials="S" surname="Kini" fullname="Sriganesh Kini">
              <organization/>
            </author>
            <author initials="K" surname="Kompella" fullname="Kireeti Kompella">
              <organization/>
            </author>
            <author initials="S" surname="Sivabalan" fullname="Siva Sivabalan">
              <organization/>
            </author>
            <author initials="S" surname="Litkowski" fullname="Stephane Litkowski">
              <organization/>
            </author>
            <author initials="R" surname="Shakir" fullname="Rob Shakir">
              <organization/>
            </author>
            <author initials="J" surname="Tantsura" fullname="Jeff Tantsura">
              <organization/>
            </author>
            <date month="December" year="2019"/>
          </front>
        </reference>

        <!-- draft-ietf-6man-segment-routing-header:
	     IESG Evaluation::AD Followup -->

 <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6man-segment-routing-header.xml"/> 

      </references>
    </references>
    <section anchor="Acknowledgements" numbered="false" toc="default">
      <name>Acknowledgements</name>
      <t>Thanks to Joel Halpern, Bruno Decraene, Loa Andersson,
      Ron Bonica, Eric Rosen, Jim Guichard, Gunter Van De Velde,
      Andy Malis, Robert Sparks, and Al Morton for their insightful
      comments on this document.</t>
      <t>Additional thanks to Mirja Kuehlewind, Alvaro Retana, Spencer Dawkins,
      Benjamin Kaduk, Martin Vigoureux, Suresh Krishnan, and Eric Vyncke
      for careful reviews and resulting comments.</t>
    </section>
    <section numbered="false" toc="default">
      <name>Contributors</name>
      <artwork name="" type="" align="left" alt="">
Ahmed Bashandy
Individual
Email: abashandy.ietf@gmail.com
</artwork>
      <artwork name="" type="" align="left" alt="">
Clarence Filsfils
Cisco
Email: cfilsfil@cisco.com
</artwork>
      <artwork name="" type="" align="left" alt="">
John Drake
Juniper
Email: jdrake@juniper.net
</artwork>
      <artwork name="" type="" align="left" alt="">
Shaowen Ma
Mellanox Technologies
Email: mashaowen@gmail.com
</artwork>
      <artwork name="" type="" align="left" alt="">
Mach Chen
Huawei
Email: mach.chen@huawei.com
</artwork>
      <artwork name="" type="" align="left" alt="">
Hamid Assarpour
Broadcom
Email:hamid.assarpour@broadcom.com
</artwork>
      <artwork name="" type="" align="left" alt="">
Robert Raszuk
Bloomberg LP
Email: robert@raszuk.net
</artwork>
      <artwork name="" type="" align="left" alt="">
Uma Chunduri
Huawei
Email: uma.chunduri@gmail.com
</artwork>
      <artwork name="" type="" align="left" alt="">
Luis M. Contreras
Telefonica I+D
Email: luismiguel.contrerasmurillo@telefonica.com
</artwork>
      <artwork name="" type="" align="left" alt="">
Luay Jalil
Verizon
Email: luay.jalil@verizon.com
</artwork>
      <artwork name="" type="" align="left" alt="">
Gunter Van De Velde
Nokia
Email: gunter.van_de_velde@nokia.com
</artwork>
      <artwork name="" type="" align="left" alt="">
Tal Mizrahi
Marvell
Email: talmi@marvell.com
</artwork>
      <artwork name="" type="" align="left" alt="">
Jeff Tantsura
Apstra, Inc.
Email: jefftant.ietf@gmail.com
</artwork>
    </section>

  </back>
</rfc>
