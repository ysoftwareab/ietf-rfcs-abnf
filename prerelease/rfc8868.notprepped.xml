<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" 
ipr="trust200902" 
docName="draft-ietf-rmcat-eval-criteria-14" 
number="8868" 
submissionType="IETF" 
category="info" 
consensus="true" 
obsoletes="" 
updates="" 
xml:lang="en" 
tocInclude="true" 
symRefs="true" 
sortRefs="true"
version="3">

  <!-- xml2rfc v2v3 conversion 2.43.0 -->
    <front>
    <title abbrev="Evaluating Congestion Control for Interactive Real-Time Media">
      Evaluating Congestion Control for Interactive Real-Time Media
    </title>
    <seriesInfo name="RFC" value="8868"/>
    <author initials="V." surname="Singh" fullname="Varun Singh">
      <organization abbrev="callstats.io">
            CALLSTATS I/O Oy
      </organization>
      <address>
        <postal>
          <street>Rauhankatu 11 C</street>
          <code>00100</code>
          <city>Helsinki</city>
          <country>Finland</country>
        </postal>
        <email>varun.singh@iki.fi</email>
        <uri>
              https://www.callstats.io/
        </uri>
      </address>
    </author>
    <author initials="J." surname="Ott" fullname="JÃ¶rg Ott">
      <organization>Technical University of Munich</organization>
      <address>
        <postal>
          <extaddr>Department of Informatics</extaddr>
          <extaddr>Chair of Connected Mobility</extaddr>
          <street>Boltzmannstrasse 3</street>
          <city>Garching</city>
          <code>85748</code>
          <country>Germany</country>
        </postal>
        <email>ott@in.tum.de</email>
      </address>
    </author>
    <author fullname="Stefan Holmer" initials="S." surname="Holmer">
      <organization abbrev="Google">Google</organization>
      <address>
        <postal>
          <street>Kungsbron 2</street>
          <code>11122</code>
          <city>Stockholm</city>
          <country>Sweden</country>
        </postal>
        <email>holmer@google.com</email>
      </address>
    </author>
    <date year="2021" month="January" />
    <area>TSV</area>
    <workgroup>RMCAT</workgroup>
    <keyword>RTP</keyword>
    <keyword>RTCP</keyword>
    <keyword>Congestion Control</keyword>
    <abstract>
      <t>The Real-Time Transport Protocol (RTP) is used to transmit
            media in telephony and video conferencing applications. This
            document describes the guidelines to evaluate new congestion
            control algorithms for interactive point-to-point real-time
            media.</t>
    </abstract>
  </front>
  <middle>
    <section numbered="true" toc="default">
      <name>Introduction</name>
      <t>This memo describes the guidelines to help with evaluating
            new congestion control algorithms for interactive
            point-to-point real-time media. The requirements for the
            congestion control algorithm are outlined in <xref target="RFC8836" format="default"/>. This document
            builds upon previous work at the IETF: <xref target="RFC5033" format="default">Specifying New Congestion Control
            Algorithms</xref> and <xref target="RFC5166" format="default">Metrics for the
            Evaluation of Congestion Control Algorithms</xref>.</t>
      <t>The guidelines proposed in the document are intended to help
            prevent a congestion collapse, to promote fair capacity usage, and
            to optimize the media flow's throughput.  Furthermore, the proposed
            congestion control algorithms are expected to operate within the envelope of the
            circuit breakers defined in RFC 8083 <xref target="RFC8083" format="default"/>.</t>
      <t>This document only provides the broad set of network
            parameters and traffic models for evaluating a new
            congestion control algorithm.  The minimal requirement
            for congestion control proposals is to produce or present
            results for the test scenarios described in <xref target="RFC8867" format="default"/> (Basic Test Cases),
            which also defines the specifics for the test cases.
            Additionally, proponents may produce evaluation results
            for the <xref target="RFC8869" format="default">
            wireless test scenarios</xref>.
      </t>
      <t>
	      This document does not cover application-specific
	      implications of congestion control algorithms and how
	      those could be evaluated.  Therefore, no quality metrics
	      are defined for performance evaluation; quality metrics
	      and the algorithms to infer those vary between media types.
	      Metrics and algorithms to assess, e.g., the quality of
	      experience, evolve continuously so that determining
	      suitable choices is left for future work. However, there
	      is consensus that each congestion control algorithm
	      should be able to show that it is useful for interactive
	      video by performing analysis using real codecs and
	      video sequences and state-of-the-art quality metrics.
      </t>
      <t>
	      Beyond optimizing individual metrics, real-time
	      applications may have further options to trade off
	      performance, e.g., across multiple media; refer to the
	      <xref target="RFC8836" format="default">RMCAT
	      requirements</xref> document.  Such trade-offs may be
	      defined in the future.
      </t>
    </section>
    <section anchor="sec-terminology" numbered="true" toc="default">
      <name>Terminology</name>

            <t> The terminology defined in <xref target="RFC3550" format="default">RTP</xref>,
            <xref target="RFC3551" format="default">RTP Profile for Audio and Video Conferences
            with Minimal Control</xref>, <xref target="RFC3611" format="default">RTCP Extended
            Report (XR)</xref>, <xref target="RFC4585" format="default">Extended RTP Profile
            for RTCP-Based Feedback (RTP/AVPF)</xref> and <xref target="RFC5506" format="default">Support for Reduced-Size RTCP</xref> applies.</t>
    </section>
    <section anchor="cc-metrics" numbered="true" toc="default">
      <name>Metrics</name>

	<t> This document specifies testing criteria for evaluating
	congestion control algorithms for RTP media flows.  Proposed
	algorithms are to prove their performance by means of
	simulation and/or emulation experiments for all the cases
	described.</t>
      <t>Each experiment is expected to log every incoming and outgoing
         packet (the RTP logging format is described in <xref target="rtp-logging" format="default"/>). The logging can be done inside the
         application or at the endpoints using PCAP (packet capture, e.g.,
         tcpdump <xref target="tcpdump" format="default"/>, Wireshark <xref target="wireshark" format="default"/>).
	 The following metrics are calculated based on the
         information in the packet logs:
      </t>
      <ol spacing="normal" type="1">
        <li>Sending rate, receiver rate, goodput (measured at 200ms intervals)</li>
        <li>Packets sent, packets received</li>
        <li>Bytes sent, bytes received</li>
        <li>Packet delay</li>
        <li>Packets lost, packets discarded (from the playout or de-jitter buffer)</li>
        <li>If using retransmission or FEC: post-repair loss</li>
	    <li>
          <t>Self-fairness and fairness with respect to cross
	    traffic: Experiments testing a given congestion control proposal must
	    report on relative ratios of the average throughput
	    (measured at coarser time intervals) obtained by each
	    RTP media stream. In the presence of background cross-traffic
	    such as TCP, the report must also include the relative
	    ratio between average throughput of RTP media streams and
	    cross-traffic streams.
          </t>
          <t>
	    During static periods of a test (i.e., when bottleneck
	    bandwidth is constant and no arrival/departure of
	    streams), these reports on relative ratios serve as an
	    indicator of how fairly the RTP streams share bandwidth
	    amongst themselves and against cross-traffic streams. The
	    throughput measurement interval should be set at a few
	    values (for example, at 1 s, 5 s, and 20 s) in order to
	    measure fairness across different timescales.
          </t>
          <t>
	    As a general guideline, the relative ratio between congestion-controlled RTP
	    flows with the same priority level and similar path RTT
	    should be bounded between 0.333 and 3.  For example, see
	    the test scenarios described in <xref target="RFC8867" format="default"/>.</t>
        </li>
        <li>Convergence time: The time taken to reach a stable rate at startup,
            after the available link capacity changes, or when new flows get added
            to the bottleneck link.</li>
        <li>Instability or oscillation in the sending rate: The frequency or
            number of instances when the sending rate oscillates between an
            high watermark level and a low watermark level, or vice-versa in
            a defined time window. For example, the watermarks can be set at 4x
            interval: 500 Kbps, 2 Mbps, and a time window of 500 ms.</li>
            <li>Bandwidth utilization, defined as the ratio of the instantaneous
            sending rate to the instantaneous bottleneck capacity: This metric is
            useful only when a congestion-controlled RTP flow is by itself or is competing with similar
            cross-traffic.</li>
      </ol>
      <t>
	  Note that the above metrics are all objective
	  application-independent metrics.  Refer to 
	  <xref target="I-D.ietf-netvc-testing" section="3" sectionFormat="of" format="default"/> 
          for objective metrics for evaluating codecs.
      </t>
      <t>From the logs, the statistical measures (min, max, mean, standard
        deviation, and variance) for the whole duration or any specific part of
        the session can be calculated. Also the metrics (sending rate,
        receiver rate, goodput, latency) can be visualized in graphs as
        variation over time; the measurements in the plot are at one-second
        intervals. Additionally, from the logs, it is possible to plot the
        histogram or cumulative distribution function (CDF) of packet delay.</t>

        <section anchor="rtp-logging" numbered="true" toc="default">
        <name>RTP Log Format</name>
	<t>
		Having a common log format simplifies running analyses across 
		different measurement setups and comparing their results. 
        </t>

        <artwork name="" type="" align="left" alt=""><![CDATA[
Send or receive timestamp (Unix): <int>.<int>  -- sec.usec decimal 
RTP payload type                  <int>        -- decimal
SSRC                              <int>        -- hexadecimal
RTP sequence no                   <int>        -- decimal
RTP timestamp                     <int>        -- decimal
marker bit                        0|1          -- character
Payload size                      <int>        -- # bytes, decimal
	]]></artwork>
        <t>Each line of the log file should be terminated with CRLF,
          CR, or LF characters. Empty lines are disregarded.</t>
        <t>If the congestion control implements retransmissions or Forward Error Correction (FEC), the
          evaluation should report both packet loss (before applying
          error resilience) and residual packet loss (after applying
          error resilience).</t>
        <t>These data should suffice to compute the media-encoding independent
	  metrics described above.  Use of a common log will allow simplified
	  post-processing and analysis across different implementations.
        </t>
        </section>
    </section>

    <section anchor="add-params" numbered="true" toc="default">
      <name>List of Network Parameters</name>
      <t>The implementors are encouraged to choose evaluation settings
      from the following values initially:</t>
      <section anchor="scen-delay" numbered="true" toc="default">
        <name>One-Way Propagation Delay</name>

        <t>Experiments are expected to verify that the congestion control is
        able to work across a broad range of path characteristics, including challenging situations, for example, over
        transcontinental and/or satellite links.  Tests thus account for the following different latencies:

        </t>
        <ol spacing="normal" type="1">
          <li>Very low latency: 0-1 ms</li>
          <li>Low latency: 50 ms</li>
          <li>High latency: 150 ms</li>
          <li>Extreme latency: 300 ms</li>
        </ol>
      </section>
      <section anchor="scen-loss" numbered="true" toc="default">
        <name>End-to-End Loss</name>
<t>   Many paths in the Internet today are largely lossless;
   however, in scenarios featuring interference in wireless
   networks, sending to and receiving from remote regions,
   or high/fast mobility, media flows may exhibit substantial 
   packet loss. This variety needs
	to be reflected appropriately by the tests.</t>
        <t>To model a wide range of lossy links, the experiments can choose one of the
        following loss rates; the fractional loss is the ratio of packets lost
        and packets sent: </t>
        <ol spacing="normal" type="1">
          <li>no loss: 0%</li>
          <li>1%</li>
          <li>5%</li>
          <li>10%</li>
          <li>20%</li>
        </ol>
      </section>
      <section anchor="scen-queue" numbered="true" toc="default">
        <name>Drop-Tail Router Queue Length</name>
        <t>Routers should be configured to use drop-tail queues in
	the experiments due to their (still) prevalent nature.  
	Experimentation with Active Queue Management (AQM) schemes is encouraged but not mandatory.
        </t>
        <t>The router queue length is measured as the time taken to drain the
        FIFO queue. It has been noted in various discussions that the queue
        length in the currently deployed Internet varies significantly. While
        the core backbone network has very short queue length, the home
        gateways usually have larger queue length. Those various queue lengths
        can be categorized in the following way: </t>
        <ol spacing="normal" type="1">
          <li>QoS-aware (or short): 70 ms</li>
          <li>Nominal: 300-500 ms</li>
          <li>Buffer-bloated: 1000-2000 ms</li>
        </ol>
        <t> Here the size of the queue is measured in bytes or packets.
        To convert the queue length measured in seconds to queue length in
        bytes:</t>
        <t>QueueSize (in bytes) = QueueSize (in sec) x Throughput (in
        bps)/8</t>

      </section>
      <section numbered="true" toc="default">
        <name>Loss Generation Model</name>
<t>
	Many models for generating packet loss are available: some
   generate correlated packet losses, others generate independent packet losses. In addition,  
 packet losses can also be extracted from packet traces. 
	   As a (simple) minimum loss
	  model with minimal parameterization (i.e., the loss rate),
	  independent random losses must be used in the evaluation.
        </t>
        <t>
	  It is known that independent loss models may reflect reality poorly,
	  and hence more sophisticated loss models could be
	  considered.  
   Suitable models for correlated losses include the Gilbert-Elliot
   model <xref target="gilbert-elliott" format="default"/> and models that generate losses by 
   modeling a queue with its (different) drop behaviors.
        </t>
      </section>
      <section anchor="JM" numbered="true" toc="default">
        <name>Jitter Models</name>
        <t>This section defines jitter models for the purposes of this
        document. When jitter is to be applied to both the congestion-controlled RTP flow and any
        competing flow (such as a TCP competing flow), the competing flow will
        use the jitter definition below that does not allow for reordering of
        packets on the competing flow (see NR-BPDV definition below).</t>
        <t>Jitter is an overloaded term in communications. It is
        typically used to refer to the variation of a metric (e.g.,
        delay) with respect to some reference metric (e.g., average
        delay or minimum delay). For example in RFC 3550, jitter is
        computed as the smoothed difference in packet arrival times
        relative to their respective expected arrival times, which is
        particularly meaningful if the underlying packet delay
        variation was caused by a Gaussian random process.</t>
        <t>Because jitter is an overloaded term, we use the term
        Packet Delay Variation (PDV) instead to describe the variation
        of delay of individual packets in the same sense as the IETF
        IP Performance Metrics (IPPM) working group has defined PDV in their documents (e.g., RFC 3393)
        and as the ITU-T SG16 has defined IP Packet Delay Variation
        (IPDV) in their documents (e.g., Y.1540).</t>
        <t>Most PDV distributions in packet network systems are
        one-sided distributions, the measurement of which with a
        finite number of measurement samples results in one-sided
        histograms. In the usual packet network transport case, there
        is typically one packet that transited the network with the
        minimum delay; a (large) number of packets transit the network
        within some (smaller) positive variation from this minimum
        delay, and a (small) number of the packets transit the network
        with delays higher than the median or average transit time
        (these are outliers). Although infrequent, outliers can cause
        significant deleterious operation in adaptive systems and
        should be considered in rate adaptation designs for RTP
        congestion control.</t>
        <t>In this section we define two different bounded PDV
        characteristics, 1) Random Bounded PDV and 2) Approximately Random
        Subject to No-Reordering Bounded PDV.</t>
        <t>The former, 1) Random Bounded PDV, is presented for
        information only, while the latter, 2) Approximately Random
        Subject to No-Reordering Bounded PDV, must be used in the
        evaluation.</t>
        <section numbered="true" toc="default">
          <name>Random Bounded PDV (RBPDV)</name>
          <t>The RBPDV probability distribution function (PDF) is specified to
        be of some mathematically describable function that includes some
        practical minimum and maximum discrete values suitable for testing.
        For example, the minimum value, x_min, might be specified as the
        minimum transit time packet, and the maximum value, x_max, might be
        defined to be two standard deviations higher than the mean.</t>
          <t>Since we are typically interested in the distribution relative to
        the mean delay packet, we define the zero mean PDV sample, z(n), to be
        z(n) = x(n) - x_mean, where x(n) is a sample of the RBPDV random
        variable x and x_mean is the mean of x.</t>
          <t>We assume here that s(n) is the original source time of packet n
        and the post-jitter induced emission time, j(n), for packet n is:
          </t>
          <t>j(n) = {[z(n) + x_mean] + s(n)}.</t>
          <t>
	  It follows that the separation in the post-jitter time of
	  packets n and n+1 is {[s(n+1)-s(n)] - [z(n)-z(n+1)]}. Since
	  the first term is always a positive quantity, we note that
	  packet reordering at the receiver is possible whenever the
	  second term is greater than the first. Said another way,
	  whenever the difference in possible zero mean PDV sample
	  delays (i.e., [x_max-x_min]) exceeds the inter-departure
	  time of any two sent packets, we have the possibility of
	  packet reordering.</t>
          <t>There are important use cases in real networks where packets can
        become reordered, such as in load-balancing topologies and during
        route changes. However, for the vast majority of cases, there is no
        packet reordering because most of the time packets follow the same
        path. Due to this, if a packet becomes overly delayed, the packets
        after it on that flow are also delayed. This is especially true for
        mobile wireless links where there are per-flow queues prior to base
        station scheduling. Owing to this important use case, we define
        another PDV profile similar to the above, but one that does not allow
        for reordering within a flow.</t>
        </section>
        <section numbered="true" toc="default">
          <name>Approximately Random Subject to No-Reordering Bounded PDV (NR-BPDV)</name>
          <t>No Reordering BPDV, NR-BPDV, is defined similarly to the above with
          one important exception. Let serial(n) be defined as the serialization
          delay of packet n at the lowest bottleneck link rate (or other
          appropriate rate) in a given test. Then we produce all the post-jitter
          values for j(n) for n = 1, 2, ... N, where N is the length of the
          source sequence s to be offset. The exception can be stated as
          follows: We revisit all j(n) beginning from index n=2, and if j(n) is
          determined to be less than [j(n-1)+serial(n-1)], we redefine j(n) to
          be equal to [j(n-1)+serial(n-1)] and continue for all remaining n
          (i.e., n = 3, 4, .. N). This models the case where the packet n is
          sent immediately after packet (n-1) at the bottleneck link rate.
          Although this is generally the theoretical minimum in that it assumes
          that no other packets from other flows are in between packet n and n+1
          at the bottleneck link, it is a reasonable assumption for per-flow
          queuing.</t>
          <t>We note that this assumption holds for some important exception
          cases, such as packets immediately following outliers. There are a
          multitude of software-controlled elements common on end-to-end
          Internet paths (such as firewalls, application-layer gateways, and other middleboxes) that
          stop processing packets while servicing other functions (e.g., garbage
          collection). Often these devices do not drop packets, but rather queue
          them for later processing and cause many of the outliers. Thus NR-BPDV
          models this particular use case (assuming serial(n+1) is defined
          appropriately for the device causing the outlier) and is believed
          to be important for adaptation development for congestion-controlled RTP streams.</t>
        </section>
        <section numbered="true" toc="default">
          <name>Recommended Distribution</name>
          <t>Whether Random Bounded PDV or Approximately Random
          Subject to No-Reordering Bounded PDV, it is recommended that
          z(n) is distributed according to a truncated Gaussian for
          the above jitter models:</t>
	  <t>z(n) ~ |max(min(N(0, std<sup>2</sup>), N_STD * std), -N_STD * std)|</t>
	  <t>where N(0, std<sup>2</sup>) is the Gaussian distribution with zero mean and
          std is standard deviation. Recommended values:</t>
          <ul empty="true">
            <li>std = 5 ms</li>
            <li>N_STD = 3</li>
          </ul>
        </section>
      </section>
    </section>

    <section anchor="app-additional" numbered="true" toc="default">
      <name>Traffic Models</name>
      <section numbered="true" toc="default">
        <name>TCP Traffic Model</name>
        <t>Long-lived TCP flows will download data throughout the
        session and are expected to have infinite amount of data to
        send or receive.  This roughly applies, for example, when
        downloading software distributions.</t>
        <t>Each short TCP flow is modeled as a sequence of file downloads
        interleaved with idle periods.  Not all short TCP flows start at the same
        time, i.e., some start in the ON state while others start in the OFF
        state.</t>
        <t>The short TCP flows can be modeled as follows: 30
        connections start simultaneously fetching small (30-50 KB)
        amounts of data, evenly distributed.  This covers the case
        where the short TCP flows are fetching web page resources rather
        than video files.</t>
        <t>The idle period between bursts of starting a group of TCP flows is
        typically derived from an exponential distribution with the mean value of
        10 seconds.</t>
<aside><t>These values were picked based on the data available at
	<eref target="https://httparchive.org/reports/state-of-the-web?start=2015_10_01&amp;end=2015_11_01&amp;view=list" brackets="angle"/> 
         as of October 2015.</t></aside>
        <t>
	  Many different TCP congestion control schemes are deployed
	  today.  Therefore, experimentation with a range of different
	  schemes, especially including CUBIC <xref target="RFC8312"/>, is encouraged.
	  Experiments must document in detail which congestion control
	  schemes they tested against and which parameters were used.
        </t>
      </section>
      <section numbered="true" toc="default">
        <name>RTP Video Model</name>
        <t>
          <xref target="RFC8593" format="default"/>
	  describes two
          types of video traffic models for evaluating candidate algorithms for RTP congestion control.
          The first model statistically characterizes the behavior of a video
          encoder, whereas the second model uses video traces.
        </t>
        <t>
	  Sample video test sequences are available at <xref target="xiph-seq" format="default"/>.  The following two video streams
	  are the recommended minimum for testing: Foreman (CIF
	  sequence) and FourPeople (720p); both come as raw video data
	  to be encoded dynamically.  As these video sequences are
	  short (300 and 600 frames, respectively), they shall be
	  stitched together repeatedly until the desired length is
	  reached.
        </t>
      </section>
      <section numbered="true" toc="default">
        <name>Background UDP</name>
        <t>Background UDP flow is modeled as a constant
            bit rate (CBR) flow. It will download data at a particular CBR
            for the complete session, or will change to particular
            CBR at predefined intervals. The inter-packet interval is
            calculated based on the CBR and the packet size (typically
            set to the path MTU size, the default value can be 1500 bytes).
        </t>
        <t>Note that new transport protocols such as QUIC may use UDP;
       however, due to their congestion control algorithms, they will exhibit
       behavior conceptually similar in nature to TCP flows above and
       can thus be subsumed by the above, including the division into
       short-lived and long-lived flows.  As QUIC evolves independently of
       TCP congestion control algorithms, its future congestion
       control should be considered as competing traffic as appropriate.
        </t>
      </section>
    </section>
    <section numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>
	    This document specifies evaluation criteria and parameters
	    for assessing and comparing the performance of congestion
	    control protocols and algorithms for real-time
	    communication.  This memo itself is thus not subject to
	    security considerations but the protocols and algorithms
	    evaluated may be.  In particular, successful operation
	    under all tests defined in this document may suffice for a
	    comparative evaluation but must not be interpreted that
	    the protocol is free of risks when deployed on the
	    Internet as briefly described in the following by example.
      </t>
      <t>
	    Such evaluations are expected to be
	    carried out in controlled environments for limited numbers
	    of parallel flows.  As such, these evaluations are by
	    definition limited and will not be able to systematically
	    consider possible interactions or very large groups of
	    communicating nodes under all possible circumstances, so
	    that careful protocol design is advised to avoid
	    incidentally contributing traffic that could lead to
	    unstable networks, e.g., (local) congestion collapse.
      </t>
      <t>
	   This specification focuses on assessing the regular
	   operation of the protocols and algorithms under
	   consideration.  It does not suggest checks against
	   malicious use of the protocols -- by the sender, the
	   receiver, or intermediate parties, e.g., through faked,
	   dropped, replicated, or modified congestion signals.  It is
	   up to the protocol specifications themselves to ensure that
	   authenticity, integrity, and/or plausibility of received
	   signals are checked, and the appropriate actions (or
	   non-actions) are taken.
      </t>
    </section>

    <section numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>This document has no IANA actions.</t>
    </section>

  </middle>
  <back>

<displayreference target="I-D.ietf-netvc-testing" to="netvc-testing"/>

    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3550.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3551.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3611.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4585.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5506.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8083.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8593.xml"/>

<reference anchor="RFC8836" target="https://www.rfc-editor.org/info/rfc8836">
  <front>
    <title>Congestion Control Requirements for Interactive Real-Time Media</title>
    <author initials="R" surname="Jesup" fullname="Randell Jesup">
      <organization/>
    </author>
    <author initials="Z" surname="Sarker" fullname="Zaheduzzaman Sarker" role="editor">
      <organization/>
    </author>
    <date month="January" year="2021"/>
  </front>
  <seriesInfo name="RFC" value="8836" />
  <seriesInfo name="DOI" value="10.17487/RFC8836"/>
</reference>

      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5033.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5166.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8312.xml"/>


<reference anchor="RFC8867" target="https://www.rfc-editor.org/info/rfc8867">
<front>
<title>Test Cases for Evaluating Congestion Control for Interactive Real-Time Media</title>

<author initials='Z' surname='Sarker' fullname='Zaheduzzaman Sarker'>
    <organization />
</author>

<author initials='V' surname='Singh' fullname='Varun Singh'>
    <organization />
</author>

<author initials='X' surname='Zhu' fullname='Xiaoqing Zhu'>
    <organization />
</author>

<author initials='M' surname='Ramalho' fullname='Michael A. Ramalho'>
    <organization />
</author>

<date month='January' year='2021' />
</front>

<seriesInfo name="RFC" value="8867"/>
<seriesInfo name="DOI" value="10.17487/RFC8867"/>
</reference>

<reference anchor="RFC8869" target="https://www.rfc-editor.org/info/rfc8869">
<front>
<title>Evaluation Test Cases for Interactive Real-Time Media over Wireless Networks</title>

<author initials="Z" surname="Sarker" fullname="Zaheduzzaman Sarker">
    <organization/>
</author>

<author initials="X" surname="Zhu" fullname="Xiaoqing Zhu">
    <organization/>
</author>

<author initials="J" surname="Fu" fullname="Jiantao Fu">
    <organization/>
</author>

<date month='January' year='2021' />

</front>
<seriesInfo name="RFC" value="8869"/>
<seriesInfo name="DOI" value="10.17487/RFC8869"/>
</reference>

        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-netvc-testing-09.xml"/>


        <reference anchor="gilbert-elliott" target="https://ieeexplore.ieee.org/document/5755057">
          <front>
            <title>The Gilbert-Elliott Model for Packet Loss in Real Time Services on the Internet</title>
            <author surname="Hasslinger" fullname="Gerhard Hasslinger">
              <organization/>
            </author>
            <author surname="Hohlfeld" fullname="Oliver Hohlfeld">
              <organization/>
            </author>
            <date month="3" year="2008"/>
            <abstract>
              <t>The estimation of quality for real-time services over telecommunication networks requires realistic models for impairments and failures during transmission. We focus on the classical Gilbert-Elliott model whose second order statistics is derived over arbitrary time scales and used to fit packet loss processes of traffic traces measured in the IP back- bone of Deutsche Telekom. The results show that simple Markov models are appropriate to capture the observed loss pattern.
              </t>
            </abstract>
          </front>
            <refcontent>14th GI/ITG Conference - Measurement, Modelling and Evalutation [sic] of Computer and Communication Systems</refcontent>
        </reference>

        <reference anchor="tcpdump" target="https://www.tcpdump.org/index.html">
          <front>
            <title>Homepage of tcpdump and libpcap</title>
            <author>
              <organization/>
            </author>
          </front>
        </reference>

        <reference anchor="wireshark" target="https://www.wireshark.org">
          <front>
            <title>Homepage of Wireshark</title>
            <author>
              <organization/>
            </author>
          </front>
  </reference>

            <reference anchor="xiph-seq" target="https://media.xiph.org/video/derf/">
          <front>
            <title>Video Test Media Set</title>
            <author fullname="Daede, T." initials="T." surname="Daede"/>
          </front>
        </reference>
</references>
    </references>
    <section anchor="contrib" numbered="false" toc="default">
      <name>Contributors</name>
      <t>The content and concepts within this document are a product of
            the discussion carried out in the Design Team.</t>
      <t><contact fullname="Michael Ramalho"/> provided the text for the jitter models (<xref target="JM" format="default"/>).</t>
    </section>
    <section numbered="false" toc="default">
      <name>Acknowledgments</name>
      <t> Much of this document is derived from previous work on
          congestion control at the IETF.</t>

      <t> The authors would like to thank
          <contact fullname="Harald Alvestrand"/>,
          <contact fullname="Anna Brunstrom"/>,
          <contact fullname="Luca De Cicco"/>,
          <contact fullname="Wesley Eddy"/>,
          <contact fullname="Lars Eggert"/>,
          <contact fullname="Kevin Gross"/>,
          <contact fullname="Vinayak Hegde"/>,
          <contact fullname="Randell Jesup"/>,
          <contact fullname="Mirja KÃ¼hlewind"/>,
          <contact fullname="Karen Nielsen"/>,
          <contact fullname="Piers O'Hanlon"/>,
          <contact fullname="Colin Perkins"/>,
          <contact fullname="Michael Ramalho"/>,
          <contact fullname="Zaheduzzaman Sarker"/>,
          <contact fullname="Timothy B. Terriberry"/>,
          <contact fullname="Michael Welzl"/>,
          <contact fullname="Mo Zanaty"/>, and
	  <contact fullname="Xiaoqing Zhu"/>
          for providing valuable feedback on draft versions of this document.
          Additionally, thanks to the participants of the Design Team for
          their comments and discussion related to the evaluation
          criteria.</t>
    </section>

  </back>
</rfc>
