<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-jmap-mdn-17" number="9007" obsoletes="" updates="" submissionType="IETF" category="std" consensus="true" xml:lang="en" tocInclude="true" symRefs="true" sortRefs="true" version="3">

  <!-- xml2rfc v2v3 conversion 3.5.0 -->

  <front>
    <title abbrev="JMAP MDN Handling">Handling Message Disposition Notification with the JSON Meta Application Protocol (JMAP)</title>
    <seriesInfo name="RFC" value="9007"/>
    <author role="editor" initials="R." surname="Ouazana" fullname="Raphaël Ouazana">
      <organization>Linagora</organization>
      <address>
        <postal>
          <street>100 Terrasse Boieldieu - Tour Franklin</street>
          <city>Paris - La Défense CEDEX</city>
          <code>92042</code>
          <country>France</country>
          <region/>
        </postal>
        <phone/>
        <email>rouazana@linagora.com</email>
        <uri>https://www.linagora.com</uri>
      </address>
    </author>
    <date year="2021" month="March"/>
    <area>Applications</area>
    <workgroup>JMAP</workgroup>
    <keyword>JMAP</keyword>
    <keyword>JSON</keyword>
    <keyword>email</keyword>
    <keyword>MDN</keyword>
    <abstract>
      <t>This document specifies a data model for handling Message Disposition Notifications (MDNs) (see RFC 8098) in the JSON Meta Application Protocol (JMAP) (see RFCs 8620 and 8621).
</t>
    </abstract>
  </front>
  <middle>
    <section anchor="introduction" numbered="true" toc="default">
      <name>Introduction</name>
      <t>JMAP ("<xref target="RFC8620" format="title"/>" <xref target="RFC8620" format="default"/>) is a generic protocol for synchronising data, such as mail, calendars, or contacts, between a client and a server. It is optimised for mobile and web environments, and it provides a consistent interface to different data types.
</t>
      <t>JMAP for Mail ("<xref target="RFC8621" format="title"/>" <xref target="RFC8621" format="default"/>) specifies a data model for synchronising email data with a server using JMAP. Clients can use this to efficiently search, access, organise, and send messages.
</t>
      <t>Message Disposition Notifications (MDNs) are defined in <xref target="RFC8098" format="default"/> and are used as "read receipts", "acknowledgements", or "receipt notifications".
</t>
      <t>A client can come across MDNs in different ways:
</t>
<ol spacing="normal" type="1"><li>When receiving an email message, an MDN can be sent to the sender. This specification defines an "MDN/send" method to cover this case.</li>

        <li>When sending an email message, an MDN can be requested. This must be done with the help of a header field, as already specified by <xref target="RFC8098" format="default"/>; the header field can already be handled by guidance in <xref target="RFC8621" format="default"/>.</li>
        <li>When receiving an MDN, the MDN could be related to an existing sent message. This is already covered by <xref target="RFC8621" format="default"/> in the EmailSubmission object. A client might want to display detailed information about a received MDN. This specification defines an "MDN/parse" method to cover this case.</li>
      </ol>
      <section anchor="notational-conventions" numbered="true" toc="default">
        <name>Notational Conventions</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
        <t>Type signatures, examples, and property descriptions in this document follow the conventions established in <xref target="RFC8620" section="1.1" sectionFormat="of" format="default"/>. Data types defined in the core specification are also used in this document.
</t>
        <t>Servers <bcp14>MUST</bcp14> support all properties specified for the new data types defined in this document.
</t>
      </section>
      <section anchor="terminology" numbered="true" toc="default">
        <name>Terminology</name>
        <t>The same terminology is used in this document as in the core JMAP specification.
</t>
        <t>Because keywords are case insensitive in IMAP but case sensitive in JMAP, the <tt>$mdnsent</tt> keyword <bcp14>MUST</bcp14> always be used in lowercase.
</t>
      </section>
      <section anchor="addition-to-the-capabilities-object" numbered="true" toc="default">
        <name>Addition to the Capabilities Object</name>
        <t>Capabilities are announced as part of the standard JMAP Session resource; see <xref target="RFC8620" section="2" sectionFormat="comma" format="default"/>. This defines a new capability, "urn:ietf:params:jmap:mdn".
</t>
        <t>The capability "urn:ietf:params:jmap:mdn" being present in the "accountCapabilities" property of an account represents support for the "MDN" data type, parsing MDNs via the "MDN/parse" method, and creating and sending MDN messages via the "MDN/send" method.
Servers that include the capability in one or more "accountCapabilities" properties <bcp14>MUST</bcp14> also include the property in the "capabilities" property.
</t>
        <t>The value of this "urn:ietf:params:jmap:mdn" property is an empty object both in the account's "accountCapabilities" property and in the "capabilities" property.
</t>
      </section>
    </section>
    <section anchor="mdn" numbered="true" toc="default">
      <name>MDN</name>
      <t>An <strong>MDN</strong> object has the following properties:
</t>
      <ul spacing="normal">
       <li><t>forEmailId: <tt>Id|null</tt></t>
<t>The Email id of the received message to which this MDN is related. This property <bcp14>MUST NOT</bcp14> be null for "MDN/send" but <bcp14>MAY</bcp14> be null in the response from the "MDN/parse" method.</t></li>
       <li><t>subject: <tt>String|null</tt></t>
<t>The subject used as "Subject" header field for this MDN.</t></li>
       <li><t>textBody: <tt>String|null</tt></t>
<t>The human-readable part of the MDN, as plain text.</t></li>
       <li><t>includeOriginalMessage: <tt>Boolean</tt> (default: false)</t> 
<t>If <tt>true</tt>, the content of the original message will appear in the third component of the multipart/report generated for the MDN. See <xref target="RFC8098" format="default"/> for details and security considerations.</t></li>
        <li><t>reportingUA: <tt>String|null</tt></t>
<t>The name of the Mail User Agent (MUA) creating this MDN. It is used to build the MDN report part of the MDN. Note that a <tt>null</tt> value may have better privacy properties.</t></li>
        <li><t>disposition: <tt>Disposition</tt></t>
<t>The object containing the diverse MDN disposition options.</t></li>
        <li><t>mdnGateway: <tt>String|null</tt> (server-set)</t>
<t>The name of the gateway or Message Transfer Agent (MTA) that translated a foreign (non-Internet) message disposition notification into this MDN.</t></li>
        <li><t>originalRecipient: <tt>String|null</tt> (server-set)</t>
<t>The original recipient address as specified by the sender of the message for which the MDN is being issued.</t></li>
        <li><t>finalRecipient: <tt>String|null</tt></t>
<t>The recipient for which the MDN is being issued.  If set, it overrides the value that would be calculated by the server from the Identity defined in the "MDN/send" method, unless explicitly set by the client.</t></li>
        <li><t>originalMessageId: <tt>String|null</tt> (server-set)</t>
<t>The "Message-ID" header field <xref target="RFC5322" format="default"/> (not the JMAP id) of the message for which the MDN is being issued.</t></li>
        <li><t>error: <tt>String[]|null</tt> (server-set)</t>
<t>Additional information in the form of text messages when the "error" disposition modifier appears.</t></li>
        <li><t>extensionFields: <tt>String[String]|null</tt></t>
<t>The object where keys are extension-field names, and values are extension-field values (see <xref target="RFC8098" section="3.3" sectionFormat="comma" format="default"/>).</t></li>
      </ul>
      <t>A <strong>Disposition</strong> object has the following properties:
</t>
      <ul spacing="normal">
        <li><t>actionMode: <tt>String</tt></t>
<t>This <bcp14>MUST</bcp14> be one of the following strings: <tt>manual-action</tt> / <tt>automatic-action</tt></t></li>
        <li><t>sendingMode: <tt>String</tt></t>
<t>This <bcp14>MUST</bcp14> be one of the following strings: <tt>mdn-sent-manually</tt> / <tt>mdn-sent-automatically</tt></t></li>
        <li><t>type: <tt>String</tt></t>
<t>This <bcp14>MUST</bcp14> be one of the following strings: <tt>deleted</tt> / <tt>dispatched</tt> / <tt>displayed</tt> / <tt>processed</tt></t></li>
      </ul>
      <t>See <xref target="RFC8098" format="default"/> for the exact meaning of these different fields. These fields are defined as case insensitive in <xref target="RFC8098" format="default"/> but are case sensitive in this RFC and <bcp14>MUST</bcp14> be converted to lowercase by "MDN/parse".
</t>
      <section anchor="mdnsend" numbered="true" toc="default">
        <name>MDN/send</name>
        <t>The "MDN/send" method sends a message in the style of <xref target="RFC5322" format="default"/> from an MDN object. When calling this method, the "using" property of the Request object <bcp14>MUST</bcp14> contain the capabilities "urn:ietf:params:jmap:mdn" and "urn:ietf:params:jmap:mail"; the latter because of the implicit call to "Email/set" and the use of Identity objects, which is described below.
The method takes the following arguments:
</t>
        <ul spacing="normal">
          <li><t>accountId: <tt>Id</tt></t>
<t>The id of the account to use.</t></li>
          <li><t>identityId: <tt>Id</tt></t>
<t>The id of the Identity to associate with these MDNs. The server will use this identity to define the sender of the MDNs and to set the "finalRecipient" field.</t></li>
          <li><t>send: <tt>Id[MDN]</tt></t>
<t>A map of the creation id (client specified) to MDN objects.</t></li>
          <li><t>onSuccessUpdateEmail: <tt>Id[PatchObject]|null</tt></t>
<t>A map of the id to an object containing properties to update on the Email object referenced by the "MDN/send" if the sending succeeds. This will always be a backward reference to the creation id (see the example below in <xref target="sending-an-mdn-for-a-received-email-message" format="default"/>).</t></li>
        </ul>
        <t>The response has the following arguments:
</t>
        <ul spacing="normal">
          <li><t>accountId: <tt>Id</tt></t>
<t>The id of the account used for the call.</t></li>
          <li><t>sent: <tt>Id[MDN]|null</tt></t>
<t>A map of the creation id to an MDN containing any properties that were not set by the client. This includes any properties that were omitted by the client and thus set to a default by the server. This argument is null if no MDN objects were successfully sent.</t></li>
          <li><t>notSent: <tt>Id[SetError]|null</tt></t>
<t>A map of the creation id to a SetError object for each record that failed to be sent or null if all successful.</t></li>
        </ul>
        <t>In this context, the existing SetError types defined in <xref target="RFC8620" format="default"/> and <xref target="RFC8621" format="default"/> are interpreted as follows:
</t>
        <dl spacing="normal">
          <dt>notFound:</dt><dd> The reference "forEmailId" cannot be found or has no valid "Disposition-Notification-To" header field.</dd>
          <dt>forbidden:</dt><dd> "MDN/send" would violate an Access Control List (ACL) or other permissions policy.</dd>
          <dt>forbiddenFrom:</dt><dd> The user is not allowed to use the given "finalRecipient" property.</dd>
          <dt>overQuota:</dt><dd> "MDN/send" would exceed a server-defined limit on the number or total size of sent MDNs. It could include limitations on sent messages.</dd>
          <dt>tooLarge:</dt><dd> "MDN/send" would result in an MDN that exceeds a server-defined limit for the maximum size of an MDN or more generally, on email message.</dd>
          <dt>rateLimit:</dt><dd> Too many MDNs or email messages have been created recently, and a server-defined rate limit has been reached. It may work if tried again later.</dd>
          <dt>invalidProperties:</dt><dd> The record given is invalid in some way.</dd>
        </dl>
        <t>The following is a new SetError:
</t>
        <dl spacing="normal">
          <dt>mdnAlreadySent:</dt><dd> The message has the <tt>$mdnsent</tt> keyword already set.</dd>
        </dl>
        <t>If the "accountId" or "identityId" given cannot be found, the method call is rejected with an <tt>invalidArguments</tt> error.
</t>
        <t>The client <bcp14>MUST NOT</bcp14> issue an "MDN/send" request if the message has the <tt>$mdnsent</tt> keyword set.
</t>
        <t>When sending the MDN, the server is in charge of generating the "originalRecipient" and "originalMessageId" fields according to <xref target="RFC8098" format="default"/>. "finalRecipient" will also generally be generated by the server based on the provided identity, but if specified by the client and allowed (see <xref target="security-considerations" format="default"/>), the server will use the client-provided value.
</t>
        <t>The client is expected to explicitly update each "Email" for which an "MDN/send" has been invoked in order to set the <tt>$mdnsent</tt> keyword on these messages. To ensure that, the server <bcp14>MUST</bcp14> reject an "MDN/send" that does not result in setting the keyword <tt>$mdnsent</tt>. Thus, the server <bcp14>MUST</bcp14> check that the "onSuccessUpdateEmail" property of the method is correctly set to update this keyword.
</t>
      </section>
      <section anchor="mdnparse" numbered="true" toc="default">
        <name>MDN/parse</name>
        <t>This method allows a client to parse blobs as messages in the style of <xref target="RFC5322" format="default"/> to get MDN objects. This can be used to parse and get detailed information about blobs referenced in the "mdnBlobIds" of the EmailSubmission object or any email message the client could expect to be an MDN.
</t>
        <t>The "forEmailId" property can be null or missing if the "originalMessageId" property is missing or does not refer to an existing message or if the server cannot efficiently calculate the related message (for example, if several messages get the same "Message-ID" header field).
</t>
        <t>The "MDN/parse" method takes the following arguments:
</t>
        <ul spacing="normal">
          <li><t>accountId: <tt>Id</tt></t>
<t>The id of the account to use.</t></li>
          <li><t>blobIds: <tt>Id[]</tt></t>
<t>The ids of the blobs to parse.</t></li>
        </ul>
        <t>The response has the following arguments:
</t>
        <ul spacing="normal">
          <li><t>accountId: <tt>Id</tt></t>
<t>The id of the account used for the call.</t></li>
          <li><t>parsed: <tt>Id[MDN]|null</tt></t>
<t>A map of the blob id to a parsed MDN representation for each successfully parsed blob or null if none.</t></li>
          <li><t>notParsable: <tt>Id[]|null</tt></t>
<t>A list of ids given that corresponds to blobs that could not be parsed as MDNs or null if none.</t></li>
          <li><t>notFound: <tt>Id[]|null</tt></t>
<t>A list of blob ids given that could not be found or null if none.</t></li>
        </ul>
        <t>The following additional errors may be returned instead of the "MDN/parse" response:
</t>
        <dl spacing="normal">
          <dt>requestTooLarge:</dt><dd>The number of ids requested by the client exceeds the maximum number the server is willing to process in a single method call.</dd>
          <dt>invalidArguments:</dt><dd> If the given "accountId" cannot be found, the MDN parsing is rejected with an <tt>invalidArguments</tt> error.</dd>
        </dl>
      </section>
    </section>
    <section anchor="samples" numbered="true" toc="default">
      <name>Samples</name>
      <section anchor="sending-an-mdn-for-a-received-email-message" numbered="true" toc="default">
        <name>Sending an MDN for a Received Email Message</name>
        <t>A client can use the following request to send an MDN back to the sender:
</t>
        <artwork align="center" name="" type="" alt=""><![CDATA[
[[ "MDN/send", {
  "accountId": "ue150411c",
  "identityId": "I64588216",
  "send": {
    "k1546": {
      "forEmailId": "Md45b47b4877521042cec0938",
      "subject": "Read receipt for: World domination",
      "textBody": "This receipt shows that the email has been 
          displayed on your recipient's computer.  There is no 
          guarantee it has been read or understood.",
      "reportingUA": "joes-pc.cs.example.com; Foomail 97.1",
      "disposition": {
        "actionMode": "manual-action",
        "sendingMode": "mdn-sent-manually",
        "type": "displayed"
      },
      "extension": {
        "EXTENSION-EXAMPLE": "example.com"
      }
    }
  },
  "onSuccessUpdateEmail": {
    "#k1546": {
      "keywords/$mdnsent": true
    }
  }
}, "0" ]]
]]></artwork>
        <t>If the email id matches an existing email message without the <tt>$mdnsent</tt> keyword, the server can answer:
</t>
        <artwork align="center" name="" type="" alt=""><![CDATA[
[[ "MDN/send", {
  "accountId": "ue150411c",
  "sent": {
    "k1546": {
      "finalRecipient": "rfc822; john@example.com",
      "originalMessageId": "<199509192301.23456@example.org>"
    }
  }
}, "0" ],
[ "Email/set", {
  "accountId": "ue150411c",
  "oldState": "23",
  "newState": "42",
  "updated": {
    "Md45b47b4877521042cec0938": {}
  }
}, "0" ]]
]]></artwork>
        <t>If the <tt>$mdnsent</tt> keyword has already been set, the server can answer an error:
</t>
        <artwork align="center" name="" type="" alt=""><![CDATA[
[[ "MDN/send", {
  "accountId": "ue150411c",
  "notSent": {
    "k1546": {
      "type": "mdnAlreadySent",
      "description" : "$mdnsent keyword is already present"
    }
  }
}, "0" ]]
]]></artwork>
      </section>
      <section anchor="asking-for-mdn-when-sending-an-email-message" numbered="true" toc="default">
        <name>Asking for an MDN When Sending an Email Message</name>
        <t>This is done with the "Email/set" "create" method of  <xref target="RFC8621" format="default"/>.
</t>
        <artwork align="center" name="" type="" alt=""><![CDATA[
[[ "Email/set", {
  "accountId": "ue150411c",
  "create": {
    "k2657": {
      "mailboxIds": {
        "2ea1ca41b38e": true
      },
      "keywords": {
        "$seen": true,
        "$draft": true
      },
      "from": [{
        "name": "Joe Bloggs",
        "email": "joe@example.com"
      }],
      "to": [{
        "name": "John",
        "email": "john@example.com"
      }],
      "header:Disposition-Notification-To:asText": "joe@example.com",
      "subject": "World domination",
      ...
    }
  }
}, "0" ]]
]]></artwork>
        <t>Note the specified "Disposition-Notification-To" header field indicating where to send the MDN (usually the sender of the message).
</t>
      </section>
      <section anchor="parsing-a-received-mdn" numbered="true" toc="default">
        <name>Parsing a Received MDN</name>
        <t>The client issues a parse request:
</t>
        <artwork align="center" name="" type="" alt=""><![CDATA[
[[ "MDN/parse", {
  "accountId": "ue150411c",
  "blobIds": [ "0f9f65ab-dc7b-4146-850f-6e4881093965" ]
}, "0" ]]
]]></artwork>
        <t>The server responds:
</t>
        <artwork align="center" name="" type="" alt=""><![CDATA[
[[ "MDN/parse", {
  "accountId": "ue150411c",
  "parsed": {
    "0f9f65ab-dc7b-4146-850f-6e4881093965": {
      "forEmailId": "Md45b47b4877521042cec0938",
      "subject": "Read receipt for: World domination",
      "textBody": "This receipt shows that the email has been 
          displayed on your recipient's computer.  There is no 
          guarantee it has been read or understood.",
      "reportingUA": "joes-pc.cs.example.com; Foomail 97.1",
      "disposition": {
        "actionMode": "manual-action",
        "sendingMode": "mdn-sent-manually",
        "type": "displayed"
      },
      "finalRecipient": "rfc822; john@example.com",
      "originalMessageId": "<199509192301.23456@example.org>"
    }
  }
}, "0" ]]
]]></artwork>
        <t>In the case that a blob id is not found, the server would respond:
</t>
        <artwork align="center" name="" type="" alt=""><![CDATA[
[[ "MDN/parse", {
  "accountId": "ue150411c",
  "notFound": [ "0f9f65ab-dc7b-4146-850f-6e4881093965" ]
}, "0" ]]
]]></artwork>
        <t>If the blob id has been found but is not parsable, the server would respond:
</t>
        <artwork align="center" name="" type="" alt=""><![CDATA[
[[ "MDN/parse", {
  "accountId": "ue150411c",
  "notParsable": [ "0f9f65ab-dc7b-4146-850f-6e4881093965" ]
}, "0" ]]
]]></artwork>
      </section>
    </section>
    <section anchor="iana-considerations" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <section anchor="jmap-capability-registration-for-mdn" numbered="true" toc="default">
        <name>JMAP Capability Registration for "mdn"</name>
        <t>This section registers the "mdn" JMAP Capability in the "JMAP Capabilities" registry as follows:
</t>
<dl spacing="compact">
        <dt>Capability Name:</dt><dd> <tt>urn:ietf:params:jmap:mdn</tt>
        </dd>
        <dt>Intended Use:</dt><dd> common
</dd>
        <dt>Change Controller:</dt><dd> IETF
</dd>
        <dt>Security and Privacy Considerations:</dt><dd> This document, <xref target="security-considerations" format="default"/>.
</dd>
        <dt>Reference:</dt><dd> This document
</dd>
</dl>
      </section>
      <section anchor="jmap-error-codes-registry" numbered="true" toc="default">
        <name>JMAP Error Codes Registration for "mdnAlreadySent"</name>
        <t>IANA has registered one new error code in the "JMAP Error Codes" registry, as defined in <xref target="RFC8620" format="default"/>.
</t>
<dl spacing="compact">
        <dt>JMAP Error Code:</dt><dd> mdnAlreadySent
</dd>
        <dt>Intended Use:</dt><dd> common
</dd>
        <dt>Change Controller:</dt><dd> IETF
</dd>
        <dt>Description:</dt><dd> The message has the <tt>$mdnsent</tt> keyword already set. The client <bcp14>MUST NOT</bcp14> try again to send an MDN for this message.
</dd>
        <dt>Reference:</dt><dd> This document, <xref target="mdnsend" format="default"/>
</dd>
</dl>
      </section>
    </section>
    <section anchor="security-considerations" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>The same considerations regarding MDN (see <xref target="RFC8098" format="default"/> and <xref target="RFC3503" format="default"/>) apply to this document.
</t>
      <t>In order to reinforce trust regarding the relation between the user sending an email message and the identity of this user, the server <bcp14>SHOULD</bcp14> validate in conformance to the provided Identity that the user is permitted to use the "finalRecipient" value and return a <tt>forbiddenFrom</tt> error if not.
</t>
    </section>
  </middle>
  <back>
    <references>
      <name>Normative References</name>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3503.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5322.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8098.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8620.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8621.xml"/>
    </references>
  </back>
</rfc>
