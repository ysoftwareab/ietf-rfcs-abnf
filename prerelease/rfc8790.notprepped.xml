<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902"
     docName="draft-ietf-core-senml-etch-07" category="std" obsoletes=""
     updates="" submissionType="IETF" xml:lang="en" tocInclude="true"
     tocDepth="3" symRefs="true" sortRefs="true" consensus="true" version="3" number="8790">

  <!-- xml2rfc v2v3 conversion 2.41.0 -->
  <front>
    <title abbrev="FETCH and PATCH with SenML">FETCH and PATCH with Sensor Measurement Lists (SenML)</title>
    <seriesInfo name="RFC" value="8790"/>
    <author initials="A." surname="Keränen" fullname="Ari Keränen">
      <organization>Ericsson</organization>
      <address>
<postal>
<street/>
<city>Jorvas</city><code>02420</code>
<country>Finland</country>
</postal>
        <email>ari.keranen@ericsson.com</email>
      </address>
    </author>
    <author initials="M." surname="Mohajer" fullname="Mojan Mohajer">
      <organization/>
      <address>
        <email>mojanm@hotmail.com</email>
      </address>
    </author>
    <date month="June" year="2020"/>

<keyword>CoAP</keyword>
<keyword>IoT</keyword>
<keyword>data model</keyword>

    <abstract>
      <t>The Sensor Measurement Lists (SenML) media type and data model can be
      used to send collections of resources, such as batches of sensor data or
      configuration parameters. The Constrained Application Protocol (CoAP)
      FETCH, PATCH, and iPATCH methods enable accessing and updating parts of
      a resource or multiple resources with one request. This document defines
      new media types for the CoAP FETCH, PATCH, and iPATCH methods for
      resources represented using the SenML data model.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="intro" numbered="true" toc="default">
      <name>Introduction</name>
      <t>The Sensor Measurement Lists (SenML) media type <xref target="RFC8428" format="default"/> and data
model can be used to transmit collections of resources, such as
batches of sensor data or configuration parameters.</t>
      <t>An example of a SenML collection is shown below:</t>

      <sourcecode name="" type="json"><![CDATA[
[
 {"bn":"2001:db8::2/3311/0/", "n":"5850", "vb":true},
 {"n":"5851", "v":42},
 {"n":"5750", "vs":"Ceiling light"}
]
]]></sourcecode>
      <t>Here, three resources, "3311/0/5850", "3311/0/5851", and "3311/0/5750",
of a dimmable light smart object <xref target="IPSO" format="default"/> are represented using
a single SenML Pack with three SenML Records. All resources share the
same base name "2001:db8::2/3311/0/"; hence, full names for the resources
are "2001:db8::2/3311/0/5850", etc.</t>
      <t>The CoAP <xref target="RFC7252" format="default"/> FETCH, PATCH, and iPATCH methods <xref target="RFC8132" format="default"/>
enable accessing and updating parts of a resource or multiple resources
with one request.</t>
      <t>This document defines two new media types, one using the JavaScript
Object Notation (JSON) <xref target="RFC8259" format="default"/> and one using the Concise Binary
Object Representation (CBOR) <xref target="RFC7049" format="default"/>, which can be used with the
CoAP FETCH, PATCH, and iPATCH methods for resources represented using the
SenML data model (i.e., for both SenML and Sensor Streaming Measurement
Lists (SenSML) data). The rest of the document uses the term "(i)PATCH" when
referring to both methods as the semantics of the new media types are the
same for the CoAP PATCH and iPATCH methods.</t>
    </section>
    <section anchor="terminology" numbered="true" toc="default">
      <name>Terminology</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are
    to be interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/>
    <xref target="RFC8174"/> when, and only when, they appear in all capitals,
    as shown here.
        </t>
      <t>Readers should also be familiar with the terms and concepts discussed
in <xref target="RFC8132" format="default"/> and <xref target="RFC8428" format="default"/>. The following additional terms are used in
this document:</t>
      <dl newline="false" spacing="normal">
        <dt>Fetch Record:</dt>
        <dd>
  One set of parameters that is used to match SenML Record(s).</dd>
        <dt>Fetch Pack:</dt>
        <dd>
  One or more Fetch Records in an array structure.</dd>
        <dt>Patch Record:</dt>
        <dd>
  One set of parameters similar to Fetch Record but also containing
instructions on how to change existing SenML Pack(s).</dd>
        <dt>Patch Pack:</dt>
        <dd>
  One or more Patch Records in an array structure.</dd>
        <dt>Target Record:</dt>
        <dd>
  A Record in a SenML Pack that matches the selection criteria of
a Fetch or Patch Record and hence is a target for a Fetch or Patch
operation.</dd>
        <dt>Target Pack:</dt>
        <dd>
  A SenML Pack that is a target for a Fetch or Patch operation.</dd>
        <dt>(i)PATCH:</dt>
        <dd>
  A term that refers to both CoAP "PATCH" and "iPATCH" methods when
there is no difference in this specification as to which one is used.</dd>
      </dl>
    </section>
    <section anchor="using-fetch-and-ipatch-with-senml" numbered="true" toc="default">
      <name>Using FETCH and (i)PATCH with SenML</name>
      <t>The FETCH/(i)PATCH media types for SenML are modeled as extensions to the
SenML media type to enable reuse of existing SenML parsers and
generators, in particular on constrained devices. Unless mentioned
otherwise, FETCH and PATCH Packs are constructed with the same rules and
constraints as SenML Packs.</t>
      <t>The key differences from the SenML media type are allowing the use of a
"null" value for removing Records with the (i)PATCH method and the lack of
value fields in Fetch Records. Also, the Fetch and Patch Records do not
have a default time or base version when the fields are omitted.</t>
      <section anchor="senml-fetch" numbered="true" toc="default">
        <name>SenML FETCH</name>
        <t>The FETCH method can be used to select and return a subset of Records, in
sequence, of one or more SenML Packs. The SenML Records are selected by
giving a set of names that, when resolved, match resolved names in a
Target SenML Pack. The names for a Fetch Pack are given using the SenML
"name" and/or "base name" fields. The names are resolved by concatenating
the base name with the name field as defined in <xref target="RFC8428" format="default"/>.</t>
        <t>A Fetch Pack <bcp14>MUST</bcp14> contain at least one Fetch Record. A Fetch Record <bcp14>MUST</bcp14>
contain a name and/or base name field.</t>
        <t>For example, to select the resources "5850" and "5851" from the
example in <xref target="intro" format="default"/>, the following Fetch Pack can be used:</t>
        <sourcecode name="" type="json"><![CDATA[
[
 {"bn":"2001:db8::2/3311/0/", "n":"5850"},
 {"n":"5851"}
]
]]></sourcecode>

        <t>The result of a FETCH request with the example above would be:</t>
        <sourcecode name="" type="json"><![CDATA[
[
 {"bn":"2001:db8::2/3311/0/", "n":"5850", "vb":true},
 {"n":"5851", "v":42},
]
]]></sourcecode>
        <t>The SenML time and unit fields can be used in a Fetch Record to further
narrow the selection of matched SenML Records. When no time or unit is
given in a Fetch Record, all SenML Records with the given name are
matched (i.e., unlike with SenML Records, the lack of time field in a Fetch
Record does not imply a time value of zero). 

When time is given in the Fetch
Record, a Target Record is matched only when its resolved time value and name
are equal to those of the Fetch Record. Similarly, when unit is given, a
Target Record is matched only when its resolved unit and name are equal to
those of the Fetch Record. If both the time and unit are given in the Fetch
Record, a Target Record is matched only when both are equal to those of the
Fetch Record. Each Target Record <bcp14>MUST</bcp14> be included in the response at
most once, even if multiple Fetch Records match with the same Target
Record.</t>
        <t>For example, if the resource "5850" had multiple sensor
	readings (SenML Records) with different time values, the following Fetch
Pack can be used to retrieve the Record with time "1.276020091e+09":</t>
        <sourcecode name="" type="json"><![CDATA[
[
 {"bn":"2001:db8::2/3311/0/", "n":"5850", "t":1.276020091e+09}
]
]]></sourcecode>
        <t>The resolved form of Records (<xref target="RFC8428"
	sectionFormat="of" section="4.6"/>) is used when
comparing the names, times, and units of the Target and Fetch Records to
accommodate differences in the use of the base values. In the resolved form,
the SenML name in the example above becomes "2001:db8::2/3311/0/5850".
Since there is no base time in the Pack, the time in resolved form is
equal to the time in the example.</t>
        <t>If no SenML Records match, an empty SenML Pack (i.e., array with no
elements) is returned as a response.</t>
        <t>Fetch Records <bcp14>MUST NOT</bcp14> contain other fields than
	name, base name, time,
base time, unit, and base unit. Implementations <bcp14>MUST</bcp14> reject and generate
an error for a Fetch Pack with other fields. <xref target="RFC8132"
sectionFormat="comma" section="2.2"/> provides guidance for FETCH request error handling, e.g., using the 4.22
(Unprocessable Entity) CoAP error response code.</t>
      </section>
      <section anchor="senml-ipatch" numbered="true" toc="default">
        <name>SenML (i)PATCH</name>
        <t>The (i)PATCH method can be used to change the fields of SenML Records, to
add new Records, and to remove existing Records. The names, times, and
units of the Patch Records are given and matched in the same way as for the
Fetch Records, except each Patch Record <bcp14>MUST</bcp14> match at most one Target
Record. A Patch Record matching more than one Target Record is considered
invalid (patching multiple Target Records with one Patch Record would
result in multiple copies of the same Record). Patch Packs can also
include new values and other SenML fields for the Records. Application of
Patch Packs is idempotent; hence, the PATCH and iPATCH methods for SenML Packs
are equivalent.</t>
        <t>When the name in a Patch Record matches with the name in an existing
Record, the resolved time values and units (if any) are compared. If the
time values and units either do not exist in both Records or are equal,
the Target Record is replaced with the contents of the Patch Record. All
Patch Records <bcp14>MUST</bcp14> contain at least a SenML Value or Sum field.</t>
        <t>If a Patch Record contains a name, or the combination of a time value, unit,
and  name, that does not exist in any existing Record in the Pack, the
given Record, with all the fields it contains, is added to the Pack.</t>
        <t>If a Patch Record has a value ("v") field with a null value, it <bcp14>MUST NOT</bcp14> be
added, but the matched Record (if any) is removed from the Target Pack.</t>
        <t>The Patch Records <bcp14>MUST</bcp14> be applied in the same
	sequence as they are in the
Patch Pack. If multiple Patch Packs are being processed at the same time,
the result <bcp14>MUST</bcp14> be equivalent to applying them in one sequence.</t>
        <t>Implementations <bcp14>MUST</bcp14> reject and generate an error for Patch Packs with
invalid Records. If a Patch Pack is rejected, the state of the Target
Pack is not changed, i.e., either all or none of the Patch Records are
applied. <xref target="RFC8132" sectionFormat="comma" section="3.4"/> provides guidance for error handling
with PATCH and iPATCH requests, e.g., using the 4.22 (Unprocessable
Entity) and 4.09 (Conflict) CoAP error response codes.</t>
        <t>For example, the following document could be given as an (i)PATCH payload
to change/set the values of two SenML Records for the example in
<xref target="intro" format="default"/>:</t>
        <sourcecode name="" type="json"><![CDATA[
[
 {"bn":"2001:db8::2/3311/0/", "n":"5850", "vb":false},
 {"n":"5851", "v":10}
]
]]></sourcecode>
        <t>If the request is successful, the resulting representation of the
example SenML Pack would be as follows:</t>
        <sourcecode name="" type="json"><![CDATA[
[
 {"bn":"2001:db8::2/3311/0/", "n":"5850", "vb":false},
 {"n":"5851", "v":10},
 {"n":"5750", "vs":"Ceiling light"}
]
]]></sourcecode>
        <t>As another example, the following document could be given as an (i)PATCH
payload to remove the two SenML Records:</t>
        <sourcecode name="" type="json"><![CDATA[
[
 {"bn":"2001:db8::2/3311/0/", "n":"5850", "v":null},
 {"n":"5851", "v":null}
]
]]></sourcecode>
      </section>
    </section>
    <section anchor="fragment-identification" numbered="true" toc="default">
      <name>Fragment Identification</name>
      <t>Fragment identification for Records of Fetch and Patch Packs uses the
same mechanism as SenML JSON/CBOR fragment identification (see <xref
target="RFC8428" sectionFormat="of" section="9"/>), i.e., the "rec" scheme followed by a comma-separated list of
Record positions or range(s) of Records. For example, to select the 3rd
and 5th Record of a Fetch or Patch Pack, a fragment identifier "rec=3,5"
can be used in the URI of the Fetch or Patch Pack resource.</t>
    </section>
    <section anchor="extensibility" numbered="true" toc="default">
      <name>Extensibility</name>
      <t>The SenML mandatory-to-understand field extensibility mechanism (see
<xref target="RFC8428" sectionFormat="of" section="4.4"/>) does not apply to Patch Packs, i.e., unknown
fields <bcp14>MUST NOT</bcp14> generate an error, but such fields are treated like any
other field (e.g., added to Patch target Records where applicable).</t>
      <t>This specification allows only a small subset of SenML fields in Fetch
Records, but future specifications may enable new fields for Fetch Records
and possibly also new fields for selecting targets for Patch Records.</t>
    </section>
    <section anchor="seccons" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>The security and privacy considerations of SenML also apply to the
FETCH and (i)PATCH methods. CoAP's security mechanisms are used to
provide security for the FETCH and (i)PATCH methods.</t>
      <t>In FETCH and (i)PATCH requests, the client can pass arbitrary names to
the target resource for manipulation. The resource implementer must take
care to only allow access to names that are actually part of (or
accessible through) the target resource. In particular, the receiver needs
to ensure that any input does not lead to uncontrolled special
interpretation by the system.</t>
      <t>If the client is not allowed to do a GET or PUT on the full target
resource (and thus all the names accessible through it), access
control rules must be evaluated for each Record in the Pack.</t>
    </section>
    <section anchor="iana" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>This document registers two new media types and CoAP Content-Format IDs
for both media types.</t>
      <section anchor="coap-content-format-registration" numbered="true" toc="default">
        <name>CoAP Content-Format Registration</name>
        <t>IANA has assigned CoAP Content-Format IDs for the SenML PATCH
and FETCH media types in the "CoAP Content-Formats" subregistry, within
the "Constrained RESTful Environments (CoRE) Parameters" registry <xref target="RFC7252" format="default"/>. The assigned IDs are shown in
<xref target="tbl-coap-content-formats" format="default"/>.</t>
        <table anchor="tbl-coap-content-formats" align="center">
          <name>CoAP Content-Format IDs</name>
          <thead>
            <tr>
              <th align="left">Media Type</th>
              <th align="left">Encoding</th>
              <th align="left">ID</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">application/senml-etch+json</td>
              <td align="left">-</td>
              <td align="left">320</td>
            </tr>
            <tr>
              <td align="left">application/senml-etch+cbor</td>
              <td align="left">-</td>
              <td align="left">322</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="senml-etchjson-media-type" numbered="true"
	       toc="default">
        <name>senml-etch+json Media Type</name>
<dl newline="false">
<dt>Type name:</dt><dd>application</dd>
<dt>Subtype name:</dt><dd>senml-etch+json</dd>
<dt>Required parameters:</dt><dd>N/A</dd>
<dt>Optional parameters:</dt><dd>N/A</dd>
<dt>Encoding considerations:</dt><dd>binary</dd>
<dt>Security considerations:</dt><dd>See <xref target="seccons" format="default"/> of RFC 8790.</dd>
<dt>Interoperability considerations:</dt><dd>N/A</dd>
<dt>Published specification:</dt><dd>RFC 8790</dd>
<dt>Applications that use this media type:</dt><dd>Applications that use the
SenML media type for resource representation.</dd>
<dt>Fragment identifier considerations:</dt><dd>Fragment identification for
application/senml-etch+json is supported by using fragment identifiers as
specified by <xref target="fragment-identification"/> of RFC 8790.</dd>
<dt>Additional information:</dt>
<dd><t><br/></t>
<dl>
  <dt>Deprecated alias names for this type:</dt><dd>N/A</dd>
  <dt>Magic number(s):</dt><dd>N/A</dd>
  <dt>File extension(s):</dt><dd>senml-etchj</dd>
  <dt>Windows Clipboard Name:</dt><dd>"SenML FETCH/PATCH format"</dd>
  <dt>Macintosh file type code(s):</dt><dd>N/A</dd>
  <dt>Macintosh Universal Type Identifier code:</dt><dd><t><br/>org.ietf.senml-etch-json
  conforms to public.text</t></dd>
</dl>
</dd>
<dt>Person &amp; email address to contact for further
information:</dt><dd><t><br/><contact fullname="Ari Keränen"/> &lt;ari.keranen@ericsson.com&gt;</t></dd>
<dt>Intended usage:</dt><dd>COMMON</dd>
<dt>Restrictions on usage:</dt><dd>N/A</dd>
<dt>Author:</dt><dd><t><contact fullname="Ari Keränen"/> &lt;ari.keranen@ericsson.com&gt;</t></dd>
<dt>Change controller:</dt><dd>IESG</dd>
</dl>
      </section>
      <section anchor="senml-etchcbor-media-type" numbered="true"
	       toc="default">
        <name>senml-etch+cbor Media Type</name>
<dl newline="false">
<dt>Type name:</dt><dd>application</dd>
<dt>Subtype name:</dt><dd>senml-etch+cbor</dd>
<dt>Required parameters:</dt><dd>N/A</dd>
<dt>Optional parameters:</dt><dd>N/A</dd>
<dt>Encoding considerations:</dt><dd>binary</dd>
<dt>Security considerations:</dt><dd>See <xref target="seccons" format="default"/> of RFC 8790.</dd>
<dt>Interoperability considerations:</dt><dd>N/A</dd>
<dt>Published specification:</dt><dd>RFC 8790</dd>
<dt>Applications that use this media type:</dt><dd>Applications that use the
SenML media type for resource representation.</dd>
<dt>Fragment identifier considerations:</dt><dd>Fragment identification for
application/senml-etch+cbor is supported by using fragment identifiers as
specified by <xref target="fragment-identification"/> of RFC 8790.</dd>
<dt>Additional information:</dt>
<dd><t><br/></t>
    <dl newline="false">
      <dt>Deprecated alias names for this type:</dt><dd>N/A</dd>
      <dt>Magic number(s):</dt><dd>N/A</dd>
      <dt>File extension(s):</dt><dd>senml-etchc</dd>
      <dt>Macintosh file type code(s):</dt><dd>N/A</dd>
      <dt>Macintosh Universal Type Identifier code:</dt>
      <dd><t><br/>org.ietf.senml-etch-cbor conforms to public.data</t></dd>
    </dl>
 </dd>
<dt>Person &amp; email address to contact for further information:</dt>
<dd><t><br/><contact fullname="Ari Keränen"/> &lt;ari.keranen@ericsson.com&gt;</t></dd>
<dt>Intended usage:</dt><dd>COMMON</dd>
<dt>Restrictions on usage:</dt><dd>N/A</dd>
<dt>Author:</dt><dd><t><contact fullname="Ari Keränen"/> &lt;ari.keranen@ericsson.com&gt;</t></dd>
<dt>Change controller:</dt><dd>IESG</dd>
</dl>
      </section>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8428.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7252.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8132.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8259.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7049.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
      </references>
      <references>
        <name>Informative References</name>

        <reference anchor="IPSO" target="http://www.openmobilealliance.org/tech/profiles/lwm2m/3311.xml">
          <front>
            <title>IPSO Light Control Smart Object</title>
            <author>
              <organization>IPSO</organization>
            </author>
            <date year="2019"/>
          </front>
        </reference>
      </references>
    </references>
    <section anchor="acks" numbered="false" toc="default">
      <name>Acknowledgements</name>
      <t>The use of the FETCH and (i)PATCH methods with SenML was first
      introduced by the OMA SpecWorks Lightweight Machine to Machine (LwM2M)
      v1.1 specification. This document generalizes the use to any SenML
      representation. The authors would like to thank <contact
      fullname="Carsten Bormann"/>, <contact fullname="Christian Amsüss"/>,
      <contact fullname="Jaime Jiménez"/>, <contact fullname="Klaus Hartke"/>,
      <contact fullname="Michael Richardson"/>, and other participants from
      the IETF CoRE and OMA SpecWorks DMSE working groups who have contributed
      ideas and reviews.</t>
    </section>
  </back>

</rfc>
