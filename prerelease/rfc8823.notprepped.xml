<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-acme-email-smime-14" number="8823" obsoletes="" updates="" submissionType="IETF" category="info" consensus="true" xml:lang="en" tocInclude="true" symRefs="true" sortRefs="true" version="3">

  <!-- xml2rfc v2v3 conversion 3.5.0 -->
  <front>
    <title abbrev="ACME for S/MIME">
      Extensions to Automatic Certificate Management Environment for End-User S/MIME Certificates
    </title>
    <seriesInfo name="RFC" value="8823"/>
    <author initials="A." surname="Melnikov" fullname="Alexey Melnikov">
      <organization>Isode Ltd</organization>
      <address>
        <postal>
          <street>14 Castle Mews</street>
          <city>Hampton, Middlesex</city>
          <code>TW12 2NP</code>
          <country>United Kingdom</country>
        </postal>
        <email>alexey.melnikov@isode.com</email>
      </address>
    </author>
    <date year="2021" month="April" />
    <keyword>ACME</keyword>
    <keyword>S/MIME</keyword>
    <abstract>
      <t>
    This document specifies identifiers and challenges required to enable
    the Automated Certificate Management Environment (ACME) to issue
    certificates for use by email users
    that want to use S/&wj;MIME.
      </t>
    </abstract>
  </front>
  <middle>
    <section numbered="true" toc="default">
      <name>Introduction</name>
      <t>
        ACME <xref target="RFC8555" format="default"/> is a mechanism for automating certificate
        management on the Internet.  It enables administrative entities to
        prove effective control over resources like domain names, and it
        automates the process of generating and issuing certificates.
      </t>
      <t>
        This document describes an extension to ACME for use by S/MIME.
        <xref target="smime" format="default"/> defines extensions for issuing end-user S/MIME <xref target="RFC8550" format="default"/> certificates.
      </t>
      <t>
        This document aims to support both:</t>
      <ol spacing="normal" type="1">
	<li>A Mail User Agent (MUA) that has a built-in ACME client that is aware 
	of the extension described in this document. (We will call such MUAs "ACME-email-aware".) 
	Such an MUA can present a nice user interface to the user and automate certificate issuance.</li>
        <li>An MUA that is not ACME aware, with a separate ACME client implemented in a command-line tool or as a part of a website. While S/MIME certificate issuance is not going to 
	be as painless as in the case of the ACME-email-aware MUA, the extra burden on a user is 
	going to be minimal.</li>
      </ol>
    </section>
    <section numbered="true" toc="default">
      <name>Conventions Used in This Document</name>        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
    </section>
    <section anchor="smime" numbered="true" toc="default">
      <name>Use of ACME for Issuing End-User S/MIME Certificates</name>
      <t>
      ACME <xref target="RFC8555" format="default"/> defines a "dns" identifier type that is used to verify that a particular entity
      has control over a domain or specific service associated with the domain.
      In order to be able to issue end-user S/MIME certificates, ACME needs a new identifier type that
      proves ownership of an email address.
      </t>
      <t>
      This document defines a new identifier type, "email", which corresponds to an email address.
      The address can be all ASCII <xref target="RFC5321" format="default"/> or internationalized <xref target="RFC6531" format="default"/>;
      when an internationalized email address is used, the domain part can contain both U-labels and A-labels <xref target="RFC5890" format="default"/>.
      This can be used with S/MIME or another similar service that requires possession of a certificate tied to an email address.
      </t>
      <t>
      Any identifier of type "email" in a newOrder request <bcp14>MUST NOT</bcp14> have a wildcard ("*") character in its value.
      </t>
      <t>
      A new challenge type, "email-reply-00", is used with the "email" identifier type,
      which provides proof that an ACME client has control over an email address.
      </t>
      <t>
      The process of issuing an S/MIME certificate works as follows. Note that the ACME client can be a standalone
      application (if the MUA is not ACME-email-aware) or can be a component of the MUA.
      </t>
      <ol spacing="normal" type="1">
	<li>An end user initiates issuance of an S/MIME certificate for one of their email addresses.
          This might be done by using an email client UI, by running a command-line tool, by
          visiting a certificate authority web page, etc.
	  This document doesn't prescribe a specific UI
          used to initiate S/MIME certificate issuance or where the ACME client is located.
          </li>
        <li>
          The ACME-email-aware client component begins the certificate issuance process by sending a POST
          request to the server's newOrder resource, including the identifier of type "email".
          See <xref target="RFC8555" sectionFormat="of" section="7.4"/> for more details.
          </li>
        <li>
          <t>
          The ACME server
          responds to the POST request, including an "authorizations" URL for the requested email address.
          The ACME client then retrieves information about the corresponding "email-reply-00" challenge,
          as specified in <xref target="RFC8555" sectionFormat="of" section="7.5"/>.
          The "token" field of the corresponding challenge object (from the "challenges" array)
          contains token-part2. token-part2 should contain at least 128 bits of entropy.
          The "type" field of the challenge object is "email-reply-00". The challenge object
          also contains the "from" field, with the email address that would be used in the From header field
          of the "challenge" email message (see the next step).  
          </t>
	  <t>An example challenge object might look like this:</t>
<sourcecode type=""><![CDATA[
    {
      "type": "email-reply-00",
      "url": "https://example.com/acme/chall/ABprV_B7yEyA4f",
      "from": "acme-challenge+2i211oi1204310@example.com",
      "token": "DGyRejmCefe7v4NfDGDKfA"
    }            
]]></sourcecode>
            </li>
        <li>
          After responding to the authorization request, the ACME server
          generates another token and a "challenge" email message with the subject "ACME: &lt;token-part1&gt;",
          where &lt;token-part1&gt; is the base64url-encoded <xref target="RFC4648" format="default"/> form of the token.
          The ACME server <bcp14>MUST</bcp14> generate a fresh token for each S/MIME issuance request (authorization request),
          and token-part1 <bcp14>MUST</bcp14> contain at least 128 bits of entropy.
          The "challenge" email message structure is described in more details in <xref target="acme-smime-challenge-email" format="default"/>.
          </li>
        <li>
          The MUA retrieves and parses the "challenge" email message.
          
          If the MUA is ACME-email-aware, it ignores any "challenge" email that is not expected,
          e.g., if there is no ACME certificate issuance pending.
          The ACME-email-aware MUA also ignores any "challenge" email that has the Subject header field
          that indicates that it is an email reply, e.g., a subject starting with the reply prefix "Re:".
          </li>
        <li>
          The ACME client concatenates "token-part1" (received over email) and "token-part2"
          (received over HTTPS <xref target="RFC2818" format="default"/>) to create the ACME "token" and calculates
          keyAuthorization (as per <xref target="RFC8555" sectionFormat="of" section="8.1"/>).
          Then, it returns the base64url-encoded SHA-256 digest <xref target="RFC6234" format="default"/> of the key authorization.
          The MUA returns the base64url-encoded SHA-256 digest obtained from the ACME client
          in the body of a "response" email message. The "response" email message structure
          is described in more details in <xref target="acme-smime-response-email" format="default"/>.
          If the MUA is ACME-email-aware, it <bcp14>MUST NOT</bcp14> respond to the same "challenge" email more than once.
          </li>
        <li>
          Once the MUA sends the "response" email, the ACME client notifies the ACME server
          by POST to the challenge URL ("url" field).
          </li>
        <li>
          The ACME client can start polling the authorization URL
          (using POST-as-GET requests) to see if the ACME server received and validated the "response" email message. (See <xref target="RFC8555" sectionFormat="of" section="7.5.1"/> for more details.)
          
          If the "status" field of the challenge switches to "valid",
          then the ACME client can proceed with request finalization.
          The Certificate Signing Request (CSR) <bcp14>MUST</bcp14> indicate the exact same
          set of requested identifiers as the initial newOrder request.
          For an identifier of type "email", the PKCS#10 <xref target="RFC2986" format="default"/>
          CSR <bcp14>MUST</bcp14> contain the requested email address in an extensionRequest
          attribute <xref target="RFC2985" format="default"/> requesting a subjectAltName extension.
          The email address <bcp14>MUST</bcp14> also match the From header field value of the "response" email message.
          </li>
        <li>
          In order to request generation of signing-only or encryption-only S/MIME certificates
          (as opposed to requesting generation of S/MIME certificates suitable for both),
          the CSR needs to include the key usage extension (see <xref target="RFC8550" sectionFormat="of" section="4.4.2"/>).
          This is described in more details in <xref target="acme-smime-sign-or-encrypt-only" format="default"/>.
          </li>
        <li>
          If a request to finalize an order is successful, the ACME server will
          return a 200 (OK) with an updated order object.
          If the certificate is issued successfully, i.e., if the order "status"
          is "valid", then the ACME client can download the issued S/MIME certificate
          from the URL specified in the "certificate" field.
          </li>
      </ol>
      <section anchor="acme-smime-challenge-email" numbered="true" toc="default">
        <name>ACME "Challenge" Email</name>
        <t>
          A "challenge" email message <bcp14>MUST</bcp14> have the following structure:

        </t>
        <ol spacing="normal" type="1">
	  <li>
            The Subject header field has the following syntax: "ACME: &lt;token-part1&gt;",
            where the prefix "ACME:" is followed by folding white space (FWS; see <xref target="RFC5322" format="default"/>)
            and then by &lt;token-part1&gt;, which is the base64url-encoded first part of the ACME token
            that <bcp14>MUST</bcp14> be at least 128 bits long after decoding.
            Due to the recommended 78-octet line-length limit
            in <xref target="RFC5322" format="default"/>, the subject line can be folded, so white spaces (if any) within
            the &lt;token-part1&gt; <bcp14>MUST</bcp14> be ignored. <xref target="RFC2231" format="default"/> encoding of the Subject header field <bcp14>MUST</bcp14> be supported,
            and, when used, only the "UTF-8" and "US-ASCII" charsets are allowed; other charsets <bcp14>MUST NOT</bcp14> be used. The US-ASCII charset <bcp14>SHOULD</bcp14> be used.
            </li>
          <li>
            The From header field <bcp14>MUST</bcp14> be the same email address as specified in the "from" field of the challenge object.
            </li>
          <li>
            The To header field <bcp14>MUST</bcp14> be the email address of the entity that requested the S/MIME certificate to be generated.</li>
          <li>The message <bcp14>MAY</bcp14> contain a Reply-To and/or CC header field.</li>
          <li>
            The message <bcp14>MUST</bcp14> include the Auto-Submitted header field with the value "auto-generated" <xref target="RFC3834" format="default"/>.
            To aid in debugging (and, for some implementations, to make automated processing easier), the Auto-Submitted header field <bcp14>SHOULD</bcp14> include the "type=acme" parameter.
            It <bcp14>MAY</bcp14> include other optional parameters, as allowed by the syntax of the Auto-Submitted header field.</li>
          <li>
            <t>
            In order to prove authenticity of a challenge message, it <bcp14>MUST</bcp14> be signed using either DomainKeys Identified Mail (DKIM) <xref target="RFC6376" format="default"/>
            or S/MIME <xref target="RFC8551" format="default"/>.
            </t>
            <ul spacing="normal">
              <li>
              If DKIM signing is used, the resulting DKIM-Signature header field <bcp14>MUST</bcp14> contain the "h=" tag that includes
              at least the From, Sender, Reply-To, To, CC, Subject, Date, In-Reply-To, References,
              Message-ID, Auto-Submitted, Content-Type, and Content-Transfer-Encoding header fields.
              The DKIM-Signature header field's "h=" tag <bcp14>SHOULD</bcp14> also include the
              Resent-Date, Resent-From, Resent-To, Resent-Cc, List-Id, List-Help, List-Unsubscribe,
              List-Subscribe, List-Post, List-Owner, List-Archive, and List-Unsubscribe-Post header fields.
              The domain from the "d=" tag of the DKIM-Signature header field <bcp14>MUST</bcp14> be the same as the domain from
              the From header field of the "challenge" email.
              </li>
              <li>
              If S/MIME signing is used, the certificate corresponding to the signer <bcp14>MUST</bcp14> have an rfc822Name subjectAltName extension
              with the value equal to the From header field email address of the "challenge" email.
              </li>
            </ul>
          </li>
          <li>
            The body of the challenge message is not used for automated processing, so it can be any media type.
            (However, there are extra requirements on S/MIME signing, if used. See below.)
            Typically, it is text/plain or text/html containing a human-readable explanation of the purpose of the message.
            If S/MIME signing is used to prove authenticity of the challenge message,
            then the multipart/signed or "application/pkcs7-mime; smime-type=signed-data;" media type should be used.
            Either way, it <bcp14>MUST</bcp14> use S/MIME header protection. 
            </li>
        </ol>
        <t>
        An email client compliant with this specification that detects that a particular "challenge" email
        fails the validation described above <bcp14>MUST</bcp14> ignore the challenge and thus will not generate a "response" email.
        To aid in debugging, such failed validations <bcp14>SHOULD</bcp14> be logged.
        </t>
        <t keepWithNext="true">
          Here is an example of an ACME "challenge" email (note that, for simplicity, DKIM-related header fields are not included).
        </t>
        <figure>
<artwork name="" type="" align="left" alt=""><![CDATA[  
  Auto-Submitted: auto-generated; type=acme
  Date: Sat, 5 Dec 2020 10:08:55 +0100
  Message-ID: <A2299BB.FF7788@example.org>
  From: acme-generator@example.org
  To: alexey@example.com
  Subject: ACME: LgYemJLy3F1LDkiJrdIGbEzyFJyOyf6vBdyZ1TG3sME=
  Content-Type: text/plain
  MIME-Version: 1.0
   
  This is an automatically generated ACME challenge for email address
  "alexey@example.com". If you haven't requested an S/MIME
  certificate generation for this email address, be very afraid.
  If you did request it, your email client might be able to process
  this request automatically, or you might have to paste the first
  token part into an external program.
]]></artwork>
        </figure>
        <t keepWithPrevious="true"/>
      </section>
      <section anchor="acme-smime-response-email" numbered="true" toc="default">
        <name>ACME "Response" Email</name>
        <t>
          A valid "response" email message <bcp14>MUST</bcp14> have the following structure:

        </t>
        <ol spacing="normal" type="1">
            <li>
            The Subject header field is formed as a reply to the ACME "challenge" email
            (see <xref target="acme-smime-challenge-email" format="default"/>).
            Its syntax is the same as that of the challenge message except that it may be prefixed
            by a US-ASCII reply prefix (typically "Re:") and FWS (see <xref target="RFC5322" format="default"/>), as is normal in reply messages. When
            parsing the subject, ACME servers <bcp14>MUST</bcp14> decode <xref target="RFC2231" format="default"/> encoding (if any), and
            then they can ignore any prefix before the "ACME:" label.
            </li>
          <li>The From header field contains the email address of the user that is requesting S/MIME certificate issuance.</li>
          <li>The To header field of the response contains the value from the Reply-To header field from the
	  challenge message (if set). Otherwise, it contains the value from the From header field of the
	  challenge message.</li>
          <li>The Cc header field is ignored if present in the "response" email message.</li>
          <li>The In-Reply-To header field <bcp14>SHOULD</bcp14> be set to the Message-ID header field of the challenge message
            according to rules in <xref target="RFC5322" sectionFormat="of" section="3.6.4"/>.</li>
          <li>List-* header fields <xref target="RFC4021" format="default"/><xref target="RFC8058" format="default"/> <bcp14>MUST</bcp14> be absent (i.e., the reply can't come from a mailing list).</li>
            <li>
            <t>The media type of the "response" email message is either text/plain or multipart/alternative <xref target="RFC2046" format="default"/>, containing
            text/plain as one of the alternatives. (Note that the requirement to support multipart/alternative is to allow use of ACME-unaware MUAs,
            which can't always generate pure text/plain, e.g., if they reply to a text/html).
            The text/plain body part (whether or not it is inside multipart/alternative)
            <bcp14>MUST</bcp14> contain a block of lines starting with the line "-----BEGIN ACME RESPONSE-----", followed by one
            or more lines containing the base64url-encoded SHA-256 digest <xref target="RFC6234" format="default"/>
            of the key authorization, calculated from concatenated token-part1 (received over email)
            and token-part2 (received over HTTPS), as outlined in the 5th bullet in <xref target="smime" format="default"/>.
            (Note that each line of text/plain is terminated by CRLF. Bare LFs or bare CRs are not allowed.)
            Due to historical line-length limitations in email, line endings (CRLFs)
            can be freely inserted in the middle of the encoded digest,
            so they <bcp14>MUST</bcp14> be ignored when processing it. The final line of the encoded digest
            is followed by a line containing:</t>
<artwork name="" type="" align="left" alt=""><![CDATA[
-----END ACME RESPONSE-----
]]></artwork>
            <t>Any text before and after this block is ignored. For example, such text might explain what
            to do with it for ACME-unaware clients.</t>
            </li>
          <li>There is no need to use any Content-Transfer-Encoding other than 7bit for the text/plain body part.
            Use of quoted-printable or base64 in a "response" email message is not necessary and should be avoided,
            though it is permitted.
            </li>
          <li>
            In order to prove authenticity of a response message, it <bcp14>MUST</bcp14> be DKIM <xref target="RFC6376" format="default"/>
            signed. The resulting DKIM-Signature header field <bcp14>MUST</bcp14> contain the "h=" tag that includes
            at least the From, Sender, Reply-To, To, CC, Subject, Date, In-Reply-To, References,
            Message-ID, Content-Type, and Content-Transfer-Encoding header fields.
            The DKIM-Signature header field's "h=" tag <bcp14>SHOULD</bcp14> also include the
            Resent-Date, Resent-From, Resent-To, Resent-Cc, List-Id, List-Help, List-Unsubscribe,
            List-Subscribe, List-Post, List-Owner, List-Archive, and List-Unsubscribe-Post header fields.
            The domain from the "d=" tag of DKIM-Signature header field <bcp14>MUST</bcp14> be the same as the domain from
            the From header field of the "response" email.
            </li>
        </ol>
        <t keepWithNext="true">
          Here is an example of an ACME "response" email (note that, for simplicity, DKIM-related header fields are not included).
        </t>
        <figure>
<artwork name="" type="" align="left" alt=""><![CDATA[
   Date: Sat, 5 Dec 2020 12:01:45 +0100
   Message-ID: <111-22222-3333333@example.com>
   In-Reply-To: <A2299BB.FF7788@example.org>
   From: alexey@example.com
   To: acme-generator@example.org
   Subject: Re: ACME: LgYemJLy3F1LDkiJrdIGbEzyFJyOyf6vBdyZ1TG3sME=
   Content-Type: text/plain
   MIME-Version: 1.0
   
   -----BEGIN ACME RESPONSE-----
   LoqXcYV8q5ONbJQxbmR7SCTNo3tiAXDfowy
   jxAjEuX0=
   -----END ACME RESPONSE-----
]]></artwork>
        </figure>
        <t keepWithPrevious="true"/>
      </section>
      <section anchor="acme-smime-sign-or-encrypt-only" numbered="true" toc="default">
        <name>Generating Encryption-Only or Signing-Only S/MIME Certificates</name>
        <t>
          ACME extensions specified in this document can be used to request signing-only or
          encryption-only S/MIME certificates.
        </t>
        <t>
          In order to request signing-only S/MIME certificates, the CSR <bcp14>MUST</bcp14> include the key usage
          extension with digitalSignature and/or nonRepudiation bits set and no other bits set.
        </t>
        <t>
          In order to request encryption-only S/MIME certificates, the CSR <bcp14>MUST</bcp14> include the key usage
          extension with keyEncipherment or keyAgreement bits set and no other bits set.
        </t>
        <t>
          Presence of both of the above sets of key usage bits in the CSR,
          as well as absence of the key usage extension in the CSR,
          signals to the ACME server to issue an S/MIME certificate suitable for both signing
          and encryption. 
        </t>
      </section>
    </section>
    <section numbered="true" toc="default">
      <name>Internationalization Considerations</name>
      <t>
      <xref target="RFC8616" format="default"/> updated/clarified use of DKIM with internationalized email addresses <xref target="RFC6531" format="default"/>.
        Please consult <xref target="RFC8616" format="default"/> in regards to any changes that need to be implemented.
      </t>
      <t>
        Use of non-ASCII characters in left-hand sides of internationalized email addresses requires putting
        internationalized email addresses in X.509 certificates <xref target="RFC8398" format="default"/>.
      </t>
    </section>
    <section numbered="true" toc="default">
      <name>IANA Considerations</name>
      <section numbered="true" toc="default">
        <name>ACME Identifier Type</name>
        <t>
        IANA has registered a new identifier type in the "ACME Identifier
        Types" registry defined in <xref target="RFC8555" sectionFormat="of"
        section="9.7.7"/> with Label "email" and a Reference to this document,
        <xref target="RFC5321" format="default"/>, and <xref target="RFC6531"
        format="default"/>.  The new identifier type corresponds to an (all
        ASCII) email address <xref target="RFC5321" format="default"/> or
        internationalized email addresses <xref target="RFC6531"
        format="default"/>.
        </t>
      </section>
      <section numbered="true" toc="default">
        <name>ACME Challenge Type</name>
        <t>
          IANA has registered a new entry in the "ACME Validation Methods" registry
          defined in <xref target="RFC8555" sectionFormat="of" section="9.7.8"/>.
          This entry is as follows:
        </t>
        <table align="center">
          <thead>
            <tr>
              <th align="center">Label</th>
              <th align="center">Identifier Type</th>
              <th align="center">ACME</th>
              <th align="center">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="center">email-reply-00</td>
              <td align="center">email</td>
              <td align="center">Y</td>
              <td align="center">RFC 8823</td>
            </tr>
          </tbody>
        </table>
      </section>
    </section>
    <section anchor="seccons" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>
        Please see the Security Considerations section of <xref
        target="RFC8555" format="default"/> for general security
        considerations related to the use of ACME. This challenge/response
        protocol demonstrates that an entity that controls the private key
        (corresponding to the public key in the certificate) also controls the
        named email account.  The ACME server is confirming that the requested
        email address belongs to the entity that requested the certificate,
        but this makes no claim to address correctness or fitness for purpose.
        If such claims are needed, they must be obtained by some other
        mechanism.
      </t>
      <t>
        The security of the "email-reply-00" challenge type depends on the security of the email system.
        A third party that can read and reply to user's email messages (by possessing a user's password
        or a secret derived from it that can give read and reply access, such as "password equivalent" information,
        or by being given permissions to act on a user's behalf using email delegation features common
        in some email systems) can request S/MIME certificates using the protocol specified in this document
        and is indistinguishable from the email account owner.
        This has several possible implications:
        
      </t>
      <ol spacing="normal" type="1">
	<li>An entity that compromised an email account would be able to request S/MIME certificates
          using the protocol specified in this document, and such entity couldn't be distinguished from
          the legitimate email account owner (unless some external sources of information are consulted).</li>
        <li>For email addresses with legitimate shared access/control by
        multiple users, any such user would be able to request S/MIME
        certificates using the protocol specified in this document; such
        requests can't be attributed to a specific user without consulting
        external systems (such as IMAP/SMTP access logs).</li>
        <li>The protocol specified in this document is not suitable for use with email addresses
          associated with mailing lists <xref target="RFC5321" format="default"/>. While it is not always
          possible to guarantee that a particular S/MIME certificate request is not from a mailing list
          address, prohibition on inclusion of List-* header fields helps certificate issuers
          to handle most common cases.</li>
      </ol>
      <t>
        An email system in its turn depends on DNS. A third party that can manipulate DNS MX records
        for a domain might be able to redirect an email and can get (at least temporary) read and reply access to it.
        Similar considerations apply to DKIM TXT records in DNS.
        Use of DNSSEC by email system administrators is recommended to avoid making it easy to spoof
        DNS records affecting an email system. However, use of DNSSEC is not ubiquitous at the time of
        publishing of this document, so it is not required here.

        Also, many existing systems that rely on verification of ownership of an email address --
        for example, 2-factor authentication systems used by banks or traditional certificate issuance
        systems -- send email messages to email addresses, expecting the owner to click on the link supplied
        in them (or to reply to a message), without requiring use of DNSSEC. So the risk of not requiring
        DNSSEC is presumed acceptable in this document.
      </t>
      <t>
      An ACME email challenge message can be forged by an attacker.
      
      As per requirements on an ACME-email-aware MUA specified in <xref target="smime" format="default"/>,
      the MUA will not respond to requests it is not expecting.
      Even if the attacker causes the erroneous "response" email to go to
      an attacker-controlled email address, very little information is leaked --
      the SHA-256 hash of the key authorization would be leaked, not the key
      authorization itself, so no parts of the token or the account key
      thumbprint are leaked.
      </t>
      <t>
      An attacker that can read the "response" email has only one chance to guess the
      token-part2. Even if the attacker can guess it right, it still needs to know
      the ACME account key to be able to make use of the intercepted SHA-256 hash of
      the key authorization.
      </t>
      <t>
        Also see the Security Considerations section of <xref target="RFC6376" format="default"/> for details on how DKIM depends
        on the DNS and the respective vulnerabilities this dependence has.
      </t>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2046.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2231.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2985.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2986.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3834.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5321.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5322.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5890.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6376.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6531.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8398.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8550.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8551.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8555.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8616.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6234.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4021.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8058.xml"/>
      
    </references>
    </references>
    <section numbered="false" toc="default">
      <name>Acknowledgements</name>
      <t>Thank you to <contact fullname="Andreas Schulze"/>, <contact fullname="Gerd v. Egidy"/>, 
      <contact fullname="James A. Baker"/>, <contact fullname="Ben Schwartz"/>,
      <contact fullname="Peter Yee"/>, <contact fullname="Hilarie Orman"/>, 
      <contact fullname="Michael Jenkins"/>, <contact fullname="Barry Leiba"/>, 
      <contact fullname="Fraser Tweedale"/>, <contact fullname="Daniel Kahn Gillmor"/>, and 
      <contact fullname="Benjamin Kaduk"/> for their suggestions, comments, and corrections of this document.</t>
    </section>
  </back>
</rfc>
