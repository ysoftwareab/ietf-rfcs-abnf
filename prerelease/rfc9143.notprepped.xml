<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc [
<!ENTITY nbsp "&#160;">
<!ENTITY zwsp "&#8203;">
<!ENTITY nbhy "&#8209;">
<!ENTITY wj "&#8288;">
]>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" docName="draft-ietf-mmusic-rfc8843bis-05" number="9143" ipr="pre5378Trust200902" sortRefs="true" submissionType="IETF" category="std" consensus="true" symRefs="true" tocDepth="3" tocInclude="true" obsoletes="8843" updates="3264, 5888, 7941" xml:lang="en" scripts="Common,Latin" indexInclude="true">
  
  <front>
    <title abbrev="Bundled Media">Negotiating Media Multiplexing Using the Session Description Protocol (SDP)</title>
    <seriesInfo name="RFC" value="9143"/>
    <author initials="C." surname="Holmberg" fullname="Christer Holmberg">
      <organization>Ericsson</organization>
      <address>
        <postal>
          <street>Hirsalantie 11</street>
          <code>02420</code>
          <city>Jorvas</city>
          <country>Finland</country>
        </postal>
        <email>christer.holmberg@ericsson.com</email>
      </address>
    </author>
    <author fullname="Harald Tveit Alvestrand" initials="H." surname="Alvestrand">
      <organization>Google</organization>
      <address>
        <postal>
          <street>Kungsbron 2</street>
          <city>Stockholm</city>
          <code>11122</code>
          <country>Sweden</country>
        </postal>
        <email>harald@alvestrand.no</email>
      </address>
    </author>
    <author fullname="Cullen Jennings" initials="C." surname="Jennings">
      <organization>Cisco</organization>
      <address>
        <postal>
          <street>400 3rd Avenue SW</street>
          <extaddr>Suite 350</extaddr>
          <city>Calgary</city>
          <region>AB</region>
          <code>T2P 4H2</code>
          <country>Canada</country>
        </postal>
        <email>fluffy@iii.ca</email>
      </address>
    </author>
    <date month="February" year="2022"/>
    <area>Transport</area>
    <workgroup>MMUSIC Working Group</workgroup>
    <keyword>RTP</keyword>
    <keyword>SDP</keyword>
    <keyword>Bundle</keyword>
    <keyword>Multiplexing</keyword>
    <keyword>RTCWEB</keyword>
    <keyword>CLUE</keyword>
    <keyword>RTCWEB</keyword>
    <keyword>MMUSIC</keyword>
    <keyword>AVT</keyword>
    <keyword>WEB</keyword>
    <keyword>Browser</keyword>
    <abstract>
      <t>
        This specification defines a new Session Description
        Protocol (SDP) Grouping Framework extension called 'BUNDLE'. 
        The extension can be used with the SDP offer/answer mechanism 
        to negotiate the usage of a single transport (5-tuple) for 
        sending and receiving media described by multiple SDP media descriptions 
        ("m=" sections). Such transport is referred to as a "BUNDLE transport", 
        and the media is referred to as "bundled media". The "m=" sections that
        use the BUNDLE transport form a BUNDLE group.
      </t>
      <t>
        This specification defines a new RTP Control Protocol (RTCP) Source
        Description (SDES) item and a new RTP header extension.</t>
      <t>
        This specification updates RFCs 3264, 5888, and 7941.
      </t>
      <t>
        This specification obsoletes RFC 8843.
      </t>
    </abstract>
  </front>
  <middle>
    <section>
      <name>Introduction</name>
      <section>
        <name>Background</name>
        <t>
        When the SDP offer/answer mechanism <xref target="RFC3264"/>  
        is used to negotiate the establishment of multimedia communication sessions, if separate 
        transports (5-tuples) are negotiated for each individual media stream, each transport consumes 
        additional resources (especially when Interactive Connectivity Establishment (ICE)
        <xref target="RFC8445"/> is used). 
        For this reason, it is attractive to use a single transport for multiple media streams.
        </t>
      </section>
      <section>
        <name>BUNDLE Mechanism</name>
        <t>
        This specification defines a way to use a single transport (BUNDLE transport) 
        for sending and receiving media (bundled media) described by multiple SDP media descriptions 
        ("m=" sections). The address:port combination used by an endpoint for sending and receiving 
        bundled media is referred to as the "BUNDLE address:port". The set of SDP attributes that are 
        applied to each "m=" section within a BUNDLE group is referred to as "BUNDLE attributes". 
        The same BUNDLE transport is used for sending and receiving bundled media, which
        means that the symmetric Real-time Transport Protocol (RTP) mechanism <xref target="RFC4961"/> is always used for RTP-based bundled media.
        </t>
        <t>
        This specification defines a new SDP Grouping Framework <xref target="RFC5888"/> extension called 'BUNDLE'. The extension can be used with the Session Description
        Protocol (SDP) offer/answer mechanism <xref target="RFC3264"/>
        to negotiate which "m=" sections will become part of a BUNDLE group. In addition, the offerer and 
        answerer <xref target="RFC3264"/> use the BUNDLE extension to negotiate 
        the BUNDLE addresses:ports (offerer BUNDLE address:port and answerer BUNDLE address:port) and the 
        set of BUNDLE attributes (offerer BUNDLE attributes and answerer BUNDLE attributes) that will be applied to
        each "m=" section within the BUNDLE group.
        </t>
        <t>
        The use of a BUNDLE transport allows the usage of a single set of
        ICE candidates <xref target="RFC8445"/> for the whole BUNDLE group.
        </t>
        <t>
        A given BUNDLE address:port <bcp14>MUST</bcp14> only be associated with a single BUNDLE group. If an SDP offer 
        or SDP answer (hereafter referred to as "offer" and "answer") contains multiple BUNDLE groups, the procedures in this specification apply to each 
        group independently. All RTP-based bundled media associated with a given BUNDLE group belong to a single
        RTP session <xref target="RFC3550"/>.
        </t>
        <t>
        The BUNDLE extension is backward compatible. Endpoints that do not support the extension
        are expected to generate offers and answers without an SDP 'group:BUNDLE' attribute and
        assign a unique address:port to each "m=" section within an offer and answer, according
        to the procedures in
       <xref target="RFC3264"/> and <xref target="RFC4566"/>.
        </t>
      </section>
      <section>
        <name>Protocol Extensions</name>
        <t>
        In addition to defining the new SDP Grouping Framework extension, this specification defines
        the following protocol extensions and makes the following updates to RFCs.  This specification:
        </t>
        <ul>
          <li>
          defines a new SDP attribute, 'bundle-only', which can be used to
          request that a specific "m=" section (and the associated media) be used only if kept 
          within a BUNDLE group.
        </li>
          <li>  
          updates RFC 3264 <xref target="RFC3264"/> to also allow assigning a zero port value to an "m=" section 
          in cases where the media described by the "m=" section is not disabled or rejected.
        </li>
          <li>
          defines a new RTCP <xref target="RFC3550"/> SDES item, Media Identification ('MID'), and a new RTP SDES header
          extension that can be used to associate RTP streams with "m=" sections.
        </li>
          <li>
          updates <xref target="RFC7941"/> by adding an exception,
          for the MID RTP header extension, to the requirement regarding protection 
          of an SDES RTP header extension carrying an SDES item for the MID RTP 
          header extension.
        </li>
          <li>
          updates <xref target="RFC5888"/> by allowing an SDP 'group'
          attribute to contain an identification-tag that identifies an "m=" section with the port value set to zero.
        </li>
        </ul>
      </section>
      <section anchor="sec-changes-8843">
        <name>Changes from RFC 8843</name>

        <t>
  When <xref target="RFC8843"/> and <xref target="RFC8829"/>
  were published, an inconsistency between the specifications was identified. The procedures regarding assigning 
  the port value to a bundled "m=" section in an answer (initial or subsequent) and a subsequent offer
  were inconsistent. This specification removes the inconsistency by aligning the port value assignment
  procedure with the procedure in <xref target="RFC8829"/>.
</t>
        <t>
  In addition, this document implements changes from the following errata reports: <xref target="Err6431"/>, <xref target="Err6437"/>.
</t>
      </section>
    </section>
    <section anchor="sec-term">
      <name>Terminology</name>
          <dl>
            <dt>"m=" section:</dt>
            <dd> SDP bodies contain one or more media descriptions, referred to
      as "m=" sections. Each "m=" section is represented by an SDP "m=" line and zero or more
      SDP attributes associated with the "m=" line. A local address:port combination is
      assigned to each "m=" section.</dd>
            <dt>5-tuple:</dt>
            <dd>A collection of the following values: source address, source
      port, destination address, destination port, and transport-layer
      protocol.</dd>
            <dt>Unique address:port:</dt>
            <dd>An address:port combination that is assigned to
      only one "m=" section in an offer or answer.</dd>
            <dt>Offerer BUNDLE-tag:</dt>
            <dd>The first identification-tag in a given
      SDP 'group:BUNDLE' attribute identification-tag list in an offer.</dd>
            <dt>Answerer BUNDLE-tag:</dt>
            <dd>The first identification-tag in a given
      SDP 'group:BUNDLE' attribute identification-tag list in an answer.</dd>
            <dt> Suggested offerer-tagged "m=" section:</dt>
            <dd> The bundled "m=" section identified by the offerer BUNDLE-tag in an initial BUNDLE offer,
      before a BUNDLE group has been negotiated.</dd>
            <dt>Offerer-tagged "m=" section:</dt>
            <dd>The bundled "m=" section identified by the offerer BUNDLE-tag in a subsequent offer.
      The "m=" section contains characteristics (offerer BUNDLE address:port and offerer BUNDLE attributes) that are applied to
      each "m=" section within the BUNDLE group.</dd>
            <dt>Answerer-tagged "m=" section:</dt>
            <dd>The bundled "m=" section identified by the answerer BUNDLE-tag in an answer 
      (initial BUNDLE answer or subsequent). The "m=" section contains characteristics (answerer BUNDLE address:port and answerer BUNDLE attributes) 
      that are applied to each "m=" section within the BUNDLE group.</dd>
            <dt>BUNDLE address:port:</dt>
            <dd>An address:port combination that an endpoint uses for sending and receiving 
      bundled media.</dd>
            <dt>Offerer BUNDLE address:port:</dt>
            <dd>The address:port combination used by the offerer
      for sending and receiving media.</dd>
            <dt>Answerer BUNDLE address:port:</dt>
            <dd>The address:port combination used by the answerer
      for sending and receiving media.</dd>
            <dt>BUNDLE attributes:</dt>
            <dd> IDENTICAL and TRANSPORT multiplexing category SDP 
      attributes. Once a BUNDLE group has been created, the attribute values apply
      to each bundled "m=" section within the BUNDLE group.</dd>
            <dt>Offerer BUNDLE attributes:</dt>
            <dd>IDENTICAL and TRANSPORT multiplexing category SDP 
      attributes included in the offerer-tagged "m=" section. </dd>
            <dt>Answerer BUNDLE attributes:</dt>
            <dd>IDENTICAL and TRANSPORT multiplexing category SDP 
      attributes included in the answerer-tagged "m=" section.</dd>
            <dt>BUNDLE transport:</dt>
            <dd>The transport (5-tuple) used by all media described by the
      "m=" sections within a BUNDLE group.</dd>
            <dt>BUNDLE group:</dt>
            <dd>A set of bundled "m=" sections, created using an SDP offer/answer
      exchange, that uses a single BUNDLE transport and a single set of BUNDLE attributes
      for sending and receiving all media (bundled media) described by the set of "m=" sections. 
      The same BUNDLE transport is used for sending and receiving bundled media. </dd>
            <dt>Bundled "m=" section:</dt>
            <dd>An "m=" section, whose identification-tag
      is placed in an SDP 'group:BUNDLE' attribute identification-tag list
      in an offer or answer.</dd>
            <dt>Bundle-only "m=" section:</dt>
            <dd>A bundled "m=" section that contains an
      SDP 'bundle-only' attribute.</dd>
            <dt>Bundled media:</dt>
            <dd>All media associated with a given BUNDLE group.</dd>
            <dt>Initial BUNDLE offer:</dt>
            <dd>The first offer, within an SDP session (e.g., a SIP dialog
      when SIP <xref target="RFC3261"/> is used to carry SDP), in which
      the offerer indicates that it wants to negotiate a given BUNDLE group.</dd>
            <dt>Initial BUNDLE answer:</dt>
            <dd>The answer to an initial BUNDLE offer in which the offerer indicates that it wants to negotiate
      a BUNDLE group, and the answerer accepts the creation of the BUNDLE group. The BUNDLE group is 
      created once the answerer sends the initial BUNDLE answer.</dd>
            <dt>Subsequent offer:</dt>
            <dd>An offer that contains a BUNDLE group that
      has been created as part of a previous offer/answer exchange.</dd>
            <dt>Subsequent answer:</dt>
            <dd>An answer to a subsequent offer.</dd>
            <dt>Identification-tag:</dt>
            <dd>A unique token value that is used to identify an
      "m=" section. The SDP 'mid' attribute <xref target="RFC5888"/> in an "m=" section carries the unique identification-tag 
      assigned to that "m=" section. The session-level SDP 'group' attribute 
      <xref target="RFC5888"/> carries a list of 
      identification-tags, identifying the "m=" sections associated with that
      particular 'group' attribute.</dd>
          </dl>
    </section>
    <section>
      <name>Conventions</name>
              <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
    "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
    interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/> <xref
    target="RFC8174"/> when, and only when, they appear in all capitals, as
    shown here.
        </t>
    </section>
    <section>
      <name>Applicability Statement</name>
      <t>
      The mechanism in this specification only applies to SDP <xref target="RFC4566"/>, when used together with the SDP offer/answer
      mechanism <xref target="RFC3264"/>.
      Declarative usage of SDP is out of scope of this document and is
      thus undefined.
      </t>
    </section>
    <section anchor="sec-group">
      <name>SDP Grouping Framework BUNDLE Extension</name>
      <t>
       This section defines a new SDP Grouping Framework <xref target="RFC5888"/> extension, 'BUNDLE'. The BUNDLE extension can be used with the SDP
       offer/answer mechanism to negotiate a set of "m=" sections that will become part of a BUNDLE 
       group. Within a BUNDLE group, each "m=" section uses a BUNDLE transport for sending and 
       receiving bundled media. Each endpoint uses a single address:port combination for sending and
       receiving the bundled media.
      </t>
      <t>
       The BUNDLE extension is indicated using an SDP 'group' attribute with a semantics value 
       <xref target="RFC5888"/> of "BUNDLE".
       An identification-tag is assigned to each bundled
       "m=" section, and each identification-tag is listed in the SDP 'group:BUNDLE'
       attribute identification-tag list. Each "m=" section whose identification-tag
       is listed in the identification-tag list is associated with a given
       BUNDLE group.
      </t>
      <t>
       SDP bodies can contain multiple BUNDLE groups. Any given bundled "m="
       section <bcp14>MUST NOT</bcp14> be associated with more than one BUNDLE group at any given
       time.
      </t>

      <t>
       NOTE: The order of the "m=" sections listed in the SDP 'group:BUNDLE' attribute
       identification-tag list does not have to be the same as the order in which
       the "m=" sections occur in the SDP.
      </t>
      <t>
       The multiplexing category <xref target="RFC8859"/> for the 'group:BUNDLE'
       attribute is 'NORMAL'.
      </t>
      <t>
       <xref target="sec-sdp-oa"/> defines the
       detailed SDP offer/answer procedures for the BUNDLE extension.
      </t>
    </section>
    <section anchor="sec-bundle-only">
      <name>SDP 'bundle-only' Attribute</name>
      <t>
      This section defines a new SDP media-level attribute <xref target="RFC4566"/>, 'bundle-only'. 'bundle-only' is a property attribute
      <xref target="RFC4566"/>; hence, it has no value.
      </t>
      <t>
      In order to ensure that an answerer that does not support the BUNDLE extension always
      rejects a bundled "m=" section in an offer, the offerer can assign a zero port value to the "m="
      section. According to <xref target="RFC3264"/>, an answerer
      will reject such an "m=" section.
      By including an SDP 'bundle-only' attribute in a bundled "m=" section, the offerer can
      request that the answerer accept the "m=" section only if the answerer supports the BUNDLE
      extension and if the answerer keeps the "m=" section within the associated BUNDLE group.
      </t>
          <dl>
            <dt>Name:</dt>
            <dd>bundle-only</dd>
            <dt>Value:</dt>
            <dd>N/A</dd>
            <dt>Usage Level:</dt>
            <dd>media</dd>
            <dt>Charset Dependent:</dt>
            <dd>no</dd>
            <dt>Example:</dt>
            <dd>a=bundle-only</dd>
          </dl>
      <t>
      The usage of the 'bundle-only' attribute is only defined for a
      bundled "m=" section with a zero port value. Other usage is
      unspecified. If an offerer or answerer receives a 'bundle-only'
      attribute in a non-bundled "m=" section, the offerer or answerer
      <bcp14>MUST</bcp14> discard the attribute.
      </t>
      <t>
      <xref target="sec-sdp-oa"/> defines the detailed SDP
      offer/answer procedures for the 'bundle-only' attribute.
      </t>
    </section>
    <section anchor="sec-sdp-oa">
      <name>SDP Offer/Answer Procedures</name>
      <t>
        This section describes the SDP offer/answer <xref target="RFC3264"/> procedures for:
      </t>
      <ul>
        <li>
            Negotiating a BUNDLE group;
          </li>
        <li>
            Suggesting and selecting the tagged "m=" sections (offerer-tagged "m=" section and answerer-tagged "m=" section);
          </li>
        <li>
            Adding an "m=" section to a BUNDLE group;
          </li>
        <li>
            Moving an "m=" section out of a BUNDLE group; and
          </li>
        <li>
            Disabling an "m=" section within a BUNDLE group.
          </li>
      </ul>
      <t>
        The generic rules and procedures defined in <xref target="RFC3264"/> and <xref target="RFC5888"/>
        also apply to the BUNDLE extension. For example, if an offer is rejected
        by the answerer, the previously negotiated addresses:ports, SDP parameters, and characteristics
        (including those associated with a BUNDLE group) apply. Hence, if an offerer
        generates an offer in order to negotiate a BUNDLE group
        and the answerer rejects the offer, the BUNDLE group is not created.
      </t>
      <t>
        The procedures in this section are independent of the media type or
        "m=" line proto value assigned to a bundled "m=" section. <xref target="sec-bundle-only"/> defines
        additional considerations for the usage of the SDP 'bundle-only' attribute.
        <xref target="sec-rtp"/> defines additional
        considerations for RTP-based media.
      
        <xref target="sec-ice"/> defines additional
        considerations for the usage of the ICE mechanism
        <xref target="RFC8445"/>.
      </t>
      <t>
        Offers and answers can contain multiple BUNDLE groups. The procedures in this
        section apply independently to a given BUNDLE group.
      </t>
      <section anchor="sec-sdp-cons">
        <name>Generic SDP Considerations</name>
        <t>
          This section describes generic restrictions associated with the usage of
          SDP parameters within a BUNDLE group. It also describes how to calculate a 
          value for the whole BUNDLE group, when parameter and attribute values have been assigned 
          to each bundled "m=" section.
        </t>
        <section anchor="sec-sdp-cons-c">
          <name>Connection Data ("c=")</name>
          <t>
            The "c=" line nettype value <xref target="RFC4566"/> associated with a bundled "m=" section <bcp14>MUST</bcp14> be 'IN'.
          </t>
          <t>
            The "c=" line addrtype value <xref target="RFC4566"/> associated with a bundled "m=" section <bcp14>MUST</bcp14> be 'IP4' or
            'IP6'. The same value <bcp14>MUST</bcp14> be associated with each "m=" section.
          </t>

          <t indent="3">
            NOTE: Extensions to this specification can specify usage of the BUNDLE
            mechanism for other nettype and addrtype values than the ones listed above.
          </t>
        </section>
        <section anchor="sec-sdp-cons-b">
          <name>Bandwidth ("b=")</name>
          <t>
            An offerer and answerer <bcp14>MUST</bcp14> use the rules and restrictions defined
            in <xref target="RFC8859"/> for
            associating the SDP bandwidth ("b=") line with bundled "m=" sections.
          </t>
        </section>
        <section anchor="sec-sdp-oa-cat">
          <name>Attributes ("a=")</name>
          <t>
            An offerer and answerer <bcp14>MUST</bcp14> include SDP attributes in every bundled "m=" section where applicable,
            following the normal offer/answer procedures for each attribute, with the following exceptions:
          </t>
          <ul>
            <li>
              In the initial BUNDLE offer, the offerer <bcp14>MUST NOT</bcp14>
              include IDENTICAL and TRANSPORT multiplexing category SDP
              attributes (BUNDLE attributes) in bundle-only "m=" sections. The
              offerer <bcp14>MUST</bcp14> include such attributes in all other
              bundled "m=" sections. In the initial BUNDLE offer, each bundled
              "m=" line can contain a different set of BUNDLE attributes and
              attribute values. Once the offerer-tagged "m=" section has been
              selected, the BUNDLE attributes contained in the offerer-tagged
              "m=" section will apply to each bundled "m=" section within the
              BUNDLE group.
            </li>
            <li>
              In a subsequent offer or in an answer (initial or subsequent),
              the offerer and answerer <bcp14>MUST</bcp14> include IDENTICAL
              and TRANSPORT multiplexing category SDP attributes (BUNDLE
              attributes) only in the tagged "m=" section (offerer-tagged "m="
              section or answerer-tagged "m=" section). The offerer and
              answerer <bcp14>MUST NOT</bcp14> include such attributes in any
              other bundled "m=" section. The BUNDLE attributes contained in
              the tagged "m=" section will apply to each bundled "m=" section
              within the BUNDLE group.
            </li>
            <li>
              In an offer (initial BUNDLE offer or subsequent) or in an
              answer (initial BUNDLE answer or subsequent), the offerer and
              answerer <bcp14>MUST</bcp14> include SDP attributes from
              categories other than IDENTICAL and TRANSPORT in each bundled
              "m=" section that a given attribute applies to. Each bundled
              "m=" line can contain a different set of such attributes and
              attribute values, as such attributes only apply to the given
              bundled "m=" section in which they are included.
            </li>
          </ul>
          <t indent="3">
            NOTE: A consequence of the rules above is that media-specific
            IDENTICAL and TRANSPORT multiplexing category SDP attributes that
            are applicable only to some of the bundled "m=" sections within
            the BUNDLE group might appear in the tagged "m=" section for which
            they are not applicable. For instance, the tagged "m=" section
            might contain an SDP 'rtcp-mux' attribute even if the tagged "m="
            section does not describe RTP-based media (but another bundled
            "m=" section within the BUNDLE group does describe RTP-based
            media).
          </t>
        </section>
      </section>
      <section anchor="sec-sdp-oa-ino">
        <name>Generating the Initial BUNDLE Offer</name>
        <t>
          The procedures in this section apply to the first offer within an SDP session (e.g., a SIP
          dialog when SIP <xref target="RFC3261"/> is used to carry SDP) in which the 
          offerer indicates that it wants to negotiate a given BUNDLE group. This could occur in the 
          initial offer, or in a subsequent offer, of the SDP session.
        </t>
        <t>
          When an offerer generates an initial BUNDLE offer, in order to negotiate a
          BUNDLE group, it <bcp14>MUST</bcp14>:
        </t>
        <ul>
          <li>
              Assign a unique address:port to each bundled "m=" section
              following the procedures in <xref target="RFC3264"/>, excluding any bundle-only "m=" sections (see below);
            </li>
          <li>
              Pick a bundled "m=" section as the suggested offerer-tagged "m=" (<xref target="sec-sdp-oa-ino-req"/>);
            </li>
          <li>
              Include SDP attributes in the bundled "m=" sections following the rules 
              in <xref target="sec-sdp-oa-cat"/>;
            </li>
          <li>
              Include an SDP 'group:BUNDLE' attribute in the offer; and
            </li>
          <li>
              Place the identification-tag of each bundled "m=" section in the
              SDP 'group:BUNDLE' attribute identification-tag list. The offerer BUNDLE-tag
              indicates the suggested offerer-tagged "m=" section.
            </li>
        </ul>
        <t indent="3">
          NOTE: When the offerer assigns unique addresses:ports to multiple bundled "m=" sections, the offerer needs to be prepared
          to receive bundled media on each unique address:port until it receives the associated answer and finds out which
          bundled "m=" section (and associated address:port combination) the answerer has selected as the offerer-tagged "m=" section.
        </t>
        <t>
          If the offerer wants to request that the answerer accept a given bundled "m=" section only if
          the answerer keeps the "m=" section within the negotiated BUNDLE group, the offerer <bcp14>MUST</bcp14>:
        </t>
        <ul>
          <li>
              Include an SDP 'bundle-only' attribute (<xref target="sec-sdp-oa-ino-req"/>) in the "m=" section, and
            </li>
          <li>
              Assign a zero port value to the "m=" section.
            </li>
        </ul>
        <t indent="3">
          NOTE: If the offerer assigns a zero port value to a bundled "m=" section but does not include an
          SDP 'bundle-only' attribute in the "m=" section, it is an indication that the offerer wants
          to disable the "m=" section (<xref target="sec-sdp-oa-mod-dis"/>).
        </t>
        <t>
          Sections <xref target="sec-sdp-oa-ino-ex" format="counter"/> and <xref target="sec-example-add" format="counter"/> show
          an example of an initial BUNDLE offer.
        </t>
        <section anchor="sec-sdp-oa-ino-req">
          <name>Suggesting the Offerer-Tagged "m=" Section</name>
          <t>
          In the initial BUNDLE offer, the bundled "m=" section indicated by the offerer BUNDLE-tag is the suggested offerer-tagged "m=" section. 
          The address:port combination associated with the "m=" section will be used by the offerer for sending and receiving bundled
          media if the answerer selects the "m=" section as the offerer-tagged "m=" section (<xref target="sec-sdp-oa-ans-off"/>). In addition, if the answerer selects the "m=" section as the offerer-tagged "m=" section, 
          the BUNDLE attributes included in the "m=" section will be applied to each "m=" section within the negotiated BUNDLE group.
          </t>
          <t>
          The offerer <bcp14>MUST NOT</bcp14> suggest a bundle-only "m=" section as the offerer-tagged "m=" section.
          </t>
          <t>
          It is <bcp14>RECOMMENDED</bcp14> that the suggested offerer-tagged "m=" section be a bundled "m=" section 
          which the offerer believes is unlikely to be rejected or moved out of the BUNDLE group by the answerer. 
          How such an assumption is made is outside the scope of this document.
          </t>
        </section>
        <section anchor="sec-sdp-oa-ino-ex">
          <name>Example: Initial BUNDLE Offer</name>
          <t>
          The following example shows an initial BUNDLE offer. The offer includes two
          "m=" sections in the offer and suggests that both "m=" sections be included in a BUNDLE group. 
          The audio "m=" section is the suggested offerer-tagged "m=" section, indicated by placing the 
          identification-tag associated with the "m=" section (offerer BUNDLE-tag) first in the SDP 'group:BUNDLE' 
          attribute identification-id list.
          </t>
          <t keepWithNext="true">SDP Offer</t>
          <sourcecode type="sdp">
  v=0
  o=alice 2890844526 2890844526 IN IP6 2001:db8::3
  s=
  c=IN IP6 2001:db8::3
  t=0 0
  a=group:BUNDLE foo bar

  m=audio 10000 RTP/AVP 0 8 97
  b=AS:200
  a=mid:foo
  a=rtcp-mux
  a=rtpmap:0 PCMU/8000
  a=rtpmap:8 PCMA/8000
  a=rtpmap:97 iLBC/8000
  a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

  m=video 10002 RTP/AVP 31 32
  b=AS:1000
  a=mid:bar
  a=rtcp-mux
  a=rtpmap:31 H261/90000
  a=rtpmap:32 MPV/90000
  a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid
</sourcecode>
<t>


          The following example shows an initial BUNDLE offer. The offer includes two
          "m=" sections in the offer and suggests that both "m=" sections are included in a BUNDLE group. 
          The offerer includes an SDP 'bundle-only' attribute in the video "m=" section to request that the
          answerer accept the "m=" section only if the answerer supports the BUNDLE extension and if the
          answerer keeps the "m=" section within the associated BUNDLE group.
          The audio "m=" section is the suggested offerer-tagged "m=" section, indicated by placing the 
          identification-tag associated with the "m=" section (offerer BUNDLE-tag) first in the SDP 'group:BUNDLE' 
          attribute identification-id list.
          </t>
          <t keepWithNext="true">SDP Offer</t>
          <sourcecode type="sdp">
  v=0
  o=alice 2890844526 2890844526 IN IP6 2001:db8::3
  s=
  c=IN IP6 2001:db8::3
  t=0 0
  a=group:BUNDLE foo bar

  m=audio 10000 RTP/AVP 0 8 97
  b=AS:200
  a=mid:foo
  a=rtcp-mux
  a=rtpmap:0 PCMU/8000
  a=rtpmap:8 PCMA/8000
  a=rtpmap:97 iLBC/8000
  a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

  m=video 0 RTP/AVP 31 32
  b=AS:1000
  a=mid:bar
  a=bundle-only
  a=rtpmap:31 H261/90000
  a=rtpmap:32 MPV/90000
  a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid
</sourcecode>
        </section>
      </section>
      <section anchor="sec-sdp-oa-ans">
        <name>Generating the SDP Answer</name>
        <t>
          When an answerer generates an answer (initial BUNDLE answer or subsequent) that contains a BUNDLE group, the following general
          SDP Grouping Framework restrictions, defined in <xref target="RFC5888"/>, also apply to the BUNDLE group:
        </t>
        <ul>
          <li>
              The answerer is only allowed to include a BUNDLE group in an
              initial BUNDLE answer if the offerer requested the BUNDLE group
              to be created in the corresponding initial BUNDLE offer;
            </li>
          <li>
              The answerer is only allowed to include a BUNDLE group in a
              subsequent answer if the corresponding subsequent offer contains
              a previously negotiated BUNDLE group;
            </li>
          <li>
              The answerer is only allowed to include a bundled "m=" section
              in an answer if the "m=" section was indicated as bundled in the
              corresponding offer; and
            </li>
          <li>
              The answerer is only allowed to include a bundled "m=" section
              in the same BUNDLE group as the bundled "m=" line in the
              corresponding offer.
            </li>
        </ul>
        <t>
          In addition, when an answerer generates an answer (initial BUNDLE
          answer or subsequent) that contains a BUNDLE group, the answerer
          <bcp14>MUST</bcp14>:
        </t>
        <ul>
          <li>
              In case of an initial BUNDLE answer, select the offerer-tagged
              "m=" section using the procedures in <xref target="sec-sdp-oa-ans-off"/>. In case of a
              subsequent answer, the offerer-tagged "m=" section is indicated
              in the corresponding subsequent offer and <bcp14>MUST NOT</bcp14> be changed by the answerer;
            </li>
          <li>
              Select the answerer-tagged "m=" section (<xref target="sec-sdp-oa-ans-off"/>);
            </li>
          <li>
             Assign the answerer BUNDLE address:port to the answerer-tagged
             "m=" section and to every other bundled "m=" section within the BUNDLE
             group;
            </li>
          <li>
              Include SDP attributes in the bundled "m=" sections following the rules 
              in <xref target="sec-sdp-oa-cat"/>; 
            </li>
          <li>
              Include an SDP 'group:BUNDLE' attribute in the answer; and
            </li>
          <li>
              Place the identification-tag of each bundled "m=" section in the
              SDP 'group:BUNDLE' attribute identification-tag list. The answerer BUNDLE-tag
              indicates the answerer-tagged "m=" section (<xref target="sec-sdp-oa-ans-off"/>).
            </li>
        </ul>
        <t>
          If the answerer does not want to keep an "m=" section within a BUNDLE group, it <bcp14>MUST</bcp14>:
        </t>
        <ul>
          <li>
              Move the "m=" section out of the BUNDLE group (<xref target="sec-sdp-oa-ans-mov"/>); or
            </li>
          <li>
              Reject the "m=" section (<xref target="sec-sdp-oa-ans-rej"/>).
            </li>
        </ul>
        <t>
          The answerer can modify the answerer BUNDLE address:port, add and remove SDP attributes, or modify
          SDP attribute values in a subsequent answer. Changes to the answerer BUNDLE address:port 
          and the answerer BUNDLE attributes will be applied to each bundled "m=" section within the BUNDLE group.
        </t>
        <t indent="3">
          NOTE: If a bundled "m=" section in an offer contains a zero port value, but the "m=" section 
          does not contain an SDP 'bundle-only' attribute, it is an indication that the offerer wants 
          to disable the "m=" section (<xref target="sec-sdp-oa-mod-dis"/>).
        </t>
        <section anchor="sec-sdp-oa-ans-off">
          <name>Answerer Selection of Tagged "m=" Sections</name>
          <t>
          When selecting the offerer-tagged "m=" section, the answerer <bcp14>MUST</bcp14> 
          first check whether the "m=" section fulfills the following criteria 
          (<xref target="sec-sdp-oa-ino-req"/>):
          </t>
          <ul>
            <li>
              The answerer will not move the "m=" section out of the BUNDLE group
              (<xref target="sec-sdp-oa-ans-mov"/>);
            </li>
            <li>
              The answerer will not reject the "m=" section (<xref target="sec-sdp-oa-ans-rej"/>); and
            </li>
            <li>
              The "m=" section does not contain a zero port value.
            </li>
          </ul>
          <t>
          If all of the criteria above are fulfilled, the answerer <bcp14>MUST</bcp14> select
          the "m=" section as the offerer-tagged "m=" section and <bcp14>MUST</bcp14> also mark
          the corresponding "m=" section in the answer as the answerer-tagged "m=" section.
          In the answer, the answerer BUNDLE-tag indicates the answerer-tagged "m=" section.
          </t>
          <t>
          If one or more of the criteria are not fulfilled, the answerer <bcp14>MUST</bcp14> pick the next
          identification-tag in the identification-tag list in the offer and perform the same criteria
          check for the "m=" section indicated by that identification-tag. If there are no
          more identification-tags in the identification-tag list, the answerer <bcp14>MUST NOT</bcp14>
          create the BUNDLE group. In addition, unless the answerer rejects the whole offer,
          the answerer <bcp14>MUST</bcp14> apply the answerer procedures for moving an "m=" section out of a
          BUNDLE group (<xref target="sec-sdp-oa-ans-mov"/>) or
          rejecting an "m=" section within a BUNDLE group (<xref target="sec-sdp-oa-ans-rej"/>) to every bundled "m=" section in the offer when 
          creating the answer.
          </t>
          <t>
          <xref target="sec-example-add"/> shows an
          example of an offerer BUNDLE address:port selection.
          </t>
          <t>
          Sections <xref target="sec-sdp-oa-ans-ex" format="counter"/> and 
          <xref target="sec-example-add" format="counter"/> show an example of an
          answerer-tagged "m=" section selection.
          </t>
        </section>
        <section anchor="sec-sdp-oa-ans-mov">
          <name>Moving a Media Description Out of a BUNDLE Group</name>
          <t>
          When an answerer generates the answer, the answerer <bcp14>MUST</bcp14> first check the following criteria if it wants to move a bundled "m=" section out of
          the negotiated BUNDLE group:
          </t>
          <ul>
            <li>
              In the corresponding offer, the "m=" section is within a previously negotiated BUNDLE group, and
            </li>
            <li>
              In the corresponding offer, the "m=" section contains an SDP 'bundle-only' attribute.
            </li>
          </ul>
          <t>
          If either criterion above is fulfilled, the answerer cannot move the "m=" section out of 
          the BUNDLE group in the answer. The answerer can reject the whole offer, reject each
          bundled "m=" section within the BUNDLE group (<xref target="sec-sdp-oa-ans-rej"/>), 
          or keep the "m=" section within the BUNDLE group in the answer and later create an offer where 
          the "m=" section is moved out of the BUNDLE group (<xref target="sec-sdp-oa-mod-mov"/>).
          </t>
          <t indent="3">
          NOTE: One consequence of the rules above is that, once a BUNDLE group has been negotiated, a bundled "m=" section
          cannot be moved out of the BUNDLE group in an answer. Instead, an offer is needed.
          </t>
          <t>
          When the answerer generates an answer in which it moves a bundled "m=" section out
          of a BUNDLE group, the answerer:
          </t>
          <ul>
            <li>
              <bcp14>MUST</bcp14> assign a unique address:port to the "m=" section;
          </li>
            <li>
              <bcp14>MUST</bcp14> include any applicable SDP attribute in the "m=" section using the normal
            offer/answer procedures for each attribute;
          </li>
            <li>
              <bcp14>MUST NOT</bcp14> place the identification-tag associated with the "m=" section in
            the SDP 'group:BUNDLE' attribute identification-tag list associated with
            the BUNDLE group; and
          </li>
            <li>
              <bcp14>MUST NOT</bcp14> include an SDP 'bundle-only' attribute to the "m=" section.
          </li>
          </ul>
          <t>
          Because an answerer is not allowed to move an "m=" section from one BUNDLE group to another within an answer
          (<xref target="sec-sdp-oa-ans"/>), if
          the answerer wants to move an "m=" section from one BUNDLE group to another, it <bcp14>MUST</bcp14> first move the
          "m=" section out of the current BUNDLE group and then generate an offer where the "m=" section is
          added to another BUNDLE group (<xref target="sec-sdp-oa-mod-add"/>).
          </t>
        </section>
        <section anchor="sec-sdp-oa-ans-rej">
          <name>Rejecting a Media Description in a BUNDLE Group</name>
          <t>
          When an answerer wants to reject a bundled "m=" section in an answer, it <bcp14>MUST</bcp14> first check 
          the following criterion:
          </t>
          <ul>
            <li>
            In the corresponding offer (subsequent), the "m=" section is the offerer-tagged "m=" section.
          </li>
          </ul>
          <t>
          If the criterion above is fulfilled, the answerer cannot reject the "m=" section in 
          the answer. The answerer can reject the whole offer, reject each bundled "m=" section 
          within the BUNDLE group, or keep the "m=" section within the BUNDLE group in the answer and later create
          an offer where the "m=" section is disabled within the BUNDLE group (<xref target="sec-sdp-oa-mod-dis"/>).
          </t>
          <t>
          When an answerer generates an answer in which it rejects a bundled "m=" section, 
          the answerer:
          </t>
          <ul>
            <li>
              <bcp14>MUST</bcp14> assign a zero port value to the "m=" section, according to the procedures in 
            <xref target="RFC3264"/>;
          </li>
            <li>
              <bcp14>MUST NOT</bcp14> place the identification-tag associated with the "m=" section in
            the SDP 'group:BUNDLE' attribute identification-tag list associated with
            the BUNDLE group; and
          </li>
            <li>
              <bcp14>MUST NOT</bcp14> include an SDP 'bundle-only' attribute in the "m=" section.
          </li>
          </ul>
        </section>
        <section anchor="sec-sdp-oa-ans-ex">
          <name>Example: SDP Answer</name>
          <t>
          The example below shows an answer based on the corresponding offer in
          <xref target="sec-sdp-oa-ino-ex"/>.
          The answerer accepts both bundled "m=" sections within the created 
          BUNDLE group. The audio "m=" section is the answerer-tagged "m=" section, indicated
          by placing the identification-tag associated with the "m=" section
          (answerer BUNDLE-tag) first in the SDP 'group:BUNDLE' attribute
          identification-id list.
          </t>
          <t keepWithNext="true">SDP Answer</t>
          <sourcecode type="sdp">
  v=0
  o=bob 2808844564 2808844564 IN IP6 2001:db8::1
  s=
  c=IN IP6 2001:db8::1
  t=0 0
  a=group:BUNDLE foo bar

  m=audio 20000 RTP/AVP 0
  b=AS:200
  a=mid:foo
  a=rtcp-mux
  a=rtpmap:0 PCMU/8000
  a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

  m=video 20000 RTP/AVP 32
  b=AS:1000
  a=mid:bar
  a=rtpmap:32 MPV/90000
  a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid
</sourcecode>
        </section>
        <section anchor="sec-sdp-oa-ans-8843">
          <name>RFC 8843 Considerations</name>
          <t>
            In <xref target="RFC8843"/>, instead of assigning the offerer BUNDLE address:port to
            each "m=" section within the BUNDLE group when modifying the session
            (<xref target="sec-sdp-oa-mod"/>), the offerer only assigned the offerer BUNDLE
            address:port to the offerer-tagged "m=" section.  For every other "m=" section
            within the BUNDLE group, the offerer included an SDP 'bundle-only' attribute in,
            and assigned a zero port value to, the "m=" section. The way an answerer compliant
            with this specification processes such offer is considered an implementation issue
            (e.g., based on whether the answerer needs to be backward compatible with offerers compliant with <xref target="RFC8843"/>) and is outside the scope of this specification. The example below
            shows such an SDP Offer:
          </t>
          <t keepWithNext="true">SDP Offer</t>
          <sourcecode type="sdp">
  v=0
  o=alice 2890844526 2890844526 IN IP6 2001:db8::3
  s=
  c=IN IP6 2001:db8::3
  t=0 0
  a=group:BUNDLE foo bar

  m=audio 10000 RTP/AVP 0 8 97
  b=AS:200
  a=mid:foo
  a=rtcp-mux
  a=rtpmap:0 PCMU/8000
  a=rtpmap:8 PCMA/8000
  a=rtpmap:97 iLBC/8000
  a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

  m=video 0 RTP/AVP 31 32
  b=AS:1000
  a=mid:bar
  a=bundle-only
  a=rtpmap:31 H261/90000
  a=rtpmap:32 MPV/90000
  a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid
</sourcecode>
        </section>
      </section>
      <section anchor="sec-sdp-oa-off-ans">
        <name>Offerer Processing of the SDP Answer</name>
        <t>
        When an offerer receives an answer, if the answer contains a BUNDLE group, the offerer
        <bcp14>MUST</bcp14> check that any bundled "m=" section in the answer was indicated as bundled in the
        corresponding offer (for the same BUNDLE group). If there is no mismatch, the offerer <bcp14>MUST</bcp14> apply the properties (BUNDLE address:port,
        BUNDLE attributes, etc.) of the offerer-tagged "m=" section (selected by the answerer; see 
        <xref target="sec-sdp-oa-ans-off"/>) to each bundled "m=" section
        within the BUNDLE group.
        </t>
        <t indent="3">
        NOTE: As the answerer might reject one or more bundled "m=" sections in an initial BUNDLE offer 
        or move a bundled "m=" section out of a BUNDLE group, a given bundled "m=" section in the 
        offer might not be indicated as bundled in the corresponding answer.
        </t>
        <t>
        If the answer does not contain a BUNDLE group, the offerer <bcp14>MUST</bcp14> process the answer
        as a normal answer.
        </t>
        <section anchor="sec-sdp-oa-off-8843">
          <name>RFC 8843 Considerations</name>
          <t>
            In <xref target="RFC8843"/>, instead of assigning the answerer BUNDLE address:port to
            each "m=" section within the BUNDLE group when generating the
            SDP Answer (<xref target="sec-sdp-oa-ans"/>), the answerer only assigned the
            answerer BUNDLE address:port to the answerer-tagged "m=" section.
            For every other "m=" section within the BUNDLE group, the answerer
            included an SDP 'bundle-only' attribute in, and assigned a zero port
            value to, the "m=" section. The way an offerer compliant
            with this specification processes such an SDP Answer is considered an implementation issue
            (e.g., based on whether the answerer needs to be backward compatible with offerers compliant with <xref target="RFC8843"/>) and is outside the scope of this specification. The example below
            shows such an SDP Answer:
          </t>
          <t keepWithNext="true">SDP Answer</t>
          <sourcecode type="sdp">
  v=0
  o=bob 2808844564 2808844564 IN IP6 2001:db8::1
  s=
  c=IN IP6 2001:db8::1
  t=0 0
  a=group:BUNDLE foo bar

  m=audio 20000 RTP/AVP 0
  b=AS:200
  a=mid:foo
  a=rtcp-mux
  a=rtpmap:0 PCMU/8000
  a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

  m=video 0 RTP/AVP 32
  b=AS:1000
  a=mid:bar
  a=bundle-only
  a=rtpmap:32 MPV/90000
  a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid
</sourcecode>
        </section>
      </section>
      <section anchor="sec-sdp-oa-mod">
        <name>Modifying the Session</name>
        <t>
          When a BUNDLE group has been previously negotiated and an offerer generates a subsequent
          offer, the offerer <bcp14>MUST</bcp14>:
        </t>
        <ul>
          <li>
              Pick one bundled "m=" section as the offerer-tagged "m=" section. The offerer
              can pick either the "m=" section that was previously selected by the answerer
              as the offerer-tagged "m=" section or another bundled "m=" section within the
              BUNDLE group;
            </li>
          <li>
              Assign a BUNDLE address:port (previously negotiated or newly
              suggested) to the offerer-tagged "m=" section and to every other
              bundled "m=" section within the BUNDLE group;
            </li>
          <li>
              Include SDP attributes in the bundled "m=" sections following the rules in 
              <xref target="sec-sdp-oa-cat"/>;
            </li>
          <li>
              Include an SDP 'group:BUNDLE' attribute in the offer; and
            </li>
          <li>
              Place the identification-tag of each bundled "m=" section in the
              SDP 'group:BUNDLE' attribute identification-tag list. The offerer BUNDLE-tag
              indicates the offerer-tagged "m=" section.
            </li>
        </ul>
        <t>  
          The offerer <bcp14>MUST NOT</bcp14> pick a given bundled "m=" section as the offerer-tagged "m=" section if:
        </t>
        <ul>
          <li>
              The offerer wants to move the "m=" section out of the BUNDLE group
              (<xref target="sec-sdp-oa-mod-mov"/>), or
            </li>
          <li>
              The offerer wants to disable the "m=" section (<xref target="sec-sdp-oa-mod-dis"/>).
            </li>
        </ul>
        <t>
          The offerer can modify the offerer BUNDLE address:port, add and remove SDP attributes, or modify
          SDP attribute values in the subsequent offer. Changes to the offerer BUNDLE address:port and the
          offerer BUNDLE attributes will (if the offer is accepted by the answerer) be applied to each 
          bundled "m=" section within the BUNDLE group.
        </t>
        <section anchor="sec-sdp-oa-mod-add">
          <name>Adding a Media Description to a BUNDLE Group</name>
          <t>
          When an offerer generates a subsequent offer in which it wants to add a bundled "m=" section to
          a previously negotiated BUNDLE group, the offerer follows the procedures in <xref target="sec-sdp-oa-mod"/>. The offerer picks either the added "m=" section or an "m=" section
          previously added to the BUNDLE group as the offerer-tagged "m=" section.
          </t>
          <t indent="3">
          NOTE: As described in <xref target="sec-sdp-oa-ans-mov"/>, the answerer cannot move the added "m=" section 
          out of the BUNDLE group in its answer. If the answerer wants to move the "m=" section out of the BUNDLE group, it will have to first accept 
          it into the BUNDLE group in the answer and then send a subsequent offer where the "m=" section is moved out of the BUNDLE group
          (<xref target="sec-sdp-oa-mod-mov"/>).
          </t>
        </section>
        <section anchor="sec-sdp-oa-mod-mov">
          <name>Moving a Media Description Out of a BUNDLE Group</name>
          <t>
          When an offerer generates a subsequent offer in which it wants to remove a bundled "m=" section from
          a BUNDLE group, the offerer:
          </t>
          <ul>
            <li>
              <bcp14>MUST</bcp14> assign a unique address:port to the "m=" section;
          </li>
            <li>
              <bcp14>MUST</bcp14> include SDP attributes in the "m=" section following the
            normal offer/answer rules for each attribute;
          </li>
            <li>
              <bcp14>MUST NOT</bcp14> place the identification-tag associated with the "m=" section in
            the SDP 'group:BUNDLE' attribute identification-tag list associated with
            the BUNDLE group; and
          </li>
            <li>
              <bcp14>MUST NOT</bcp14> assign an SDP 'bundle-only' attribute to the "m=" section.
          </li>
          </ul>
          <t>
          For the other bundled "m=" sections within the BUNDLE group, the offerer follows the procedures 
          in <xref target="sec-sdp-oa-mod"/>. 
          </t>
          <t>
          An offerer <bcp14>MUST NOT</bcp14> move an "m=" section from one BUNDLE group to another within a 
          single offer. If the offerer wants to move an "m=" section from one BUNDLE group to 
          another, it <bcp14>MUST</bcp14> first move the BUNDLE group out of the current BUNDLE group and then 
          generate a second offer where the "m=" section is added to another BUNDLE group 
          (<xref target="sec-sdp-oa-mod-add"/>).
          </t>
          <t>
          <xref target="sec-example-off-mov"/>
          shows an example of an offer for moving an "m=" section out of a BUNDLE group.
          </t>
        </section>
        <section anchor="sec-sdp-oa-mod-dis">
          <name>Disabling a Media Description in a BUNDLE Group</name>
          <t>
          When an offerer generates a subsequent offer in which it wants to disable a bundled "m=" section from
          a BUNDLE group, the offerer:
          </t>
          <ul>
            <li>
              <bcp14>MUST</bcp14> assign a zero port value to the "m=" section, following the procedures 
            in <xref target="RFC4566"/>;
          </li>
            <li>
              <bcp14>MUST NOT</bcp14> place the identification-tag associated with the "m=" section in
            the SDP 'group:BUNDLE' attribute identification-tag list associated with
            the BUNDLE group; and
          </li>
            <li>
              <bcp14>MUST NOT</bcp14> assign an SDP 'bundle-only' attribute to the "m=" section.
          </li>
          </ul>
          <t>
          For the other bundled "m=" sections within the BUNDLE group, the offerer follows the procedures 
          in <xref target="sec-sdp-oa-mod"/>. 
          </t>
          <t>
          <xref target="sec-example-off-dis"/>
          shows an example of an offer and answer for disabling an "m=" section within a
          BUNDLE group.
          </t>
        </section>
      </section>
      <section anchor="sec-sdp-oa-sip">
        <name>3PCC Considerations</name>
	<t>
  In some third-party call control (3PCC) scenarios, a new session will be
   established between an endpoint that is currently part of an ongoing
   session and an endpoint that is not currently part of an ongoing
   session.  In this situation, the endpoint that is not part of a
   session, while expecting an initial offer, can receive an SDP offer
   created as a subsequent offer.  The text below describes how this can
   occur with the Session Initiation Protocol (SIP) <xref target="RFC3261"/>.
	</t>
        <t>
          SIP <xref target="RFC3261"/> allows 
          a User Agent Client (UAC) to send a re-INVITE request without an SDP body (sometimes referred to as an "empty re-INVITE").
          In such cases, the User Agent Server (UAS) will include an SDP Offer in the associated 200 (OK) response; when the UAS is a part of an
   ongoing SIP session, this offer will be a subsequent offer.  This
   offer will be received by the 3PCC controller (UAC) and then
   forwarded to another User Agent (UA).  When that UA is not part of an
   ongoing SIP session, as noted above, it will process the offer as an
   initial SDP offer. </t>
<t>
   When the BUNDLE mechanism is used, an initial BUNDLE offer is
   constructed using different rules than subsequent BUNDLE offers, and
   it cannot be assumed that a UA is able to correctly process a
   subsequent BUNDLE offer as an initial BUNDLE offer.  Therefore, the
   3PCC controller <bcp14>SHOULD</bcp14> take action to mitigate this problem,
   e.g., rewrite the subsequent BUNDLE offer into a valid initial BUNDLE
   offer (<xref target="sec-sdp-oa-ino"/>), before it forwards the BUNDLE offer to a UA.
        </t>
      </section>
    </section>
    <section anchor="sec-protocol-id">
      <name>Protocol Identification</name>
      <t>
      Each "m=" section within a BUNDLE group <bcp14>MUST</bcp14> use the same transport-
      layer protocol. If bundled "m=" sections use different upper-layer protocols 
      on top of the transport-layer protocol, there <bcp14>MUST</bcp14> exist a publicly
      available specification that describes how a mechanism associates 
      received data with the correct protocol for this particular protocol combination.
      </t>
      <t>
      In addition, if received data can be associated with more than
      one bundled "m=" section, there <bcp14>MUST</bcp14> exist a publicly available
      specification that describes a mechanism for associating the
      received data with the correct "m=" section.
      </t>
      <t>
      This document describes a mechanism to identify the
      protocol of received data among the Session Traversal Utilities for NAT (STUN), Datagram Transport Layer Security (DTLS), and the Secure Real-time Transport Protocol (SRTP)
      (in any combination) when UDP is used as a transport-layer protocol,
      but it does not describe how to identify different protocols transported on
      DTLS. 
      While the mechanism is generally applicable to other protocols and
      transport-layer protocols, any such use requires further specification 
      that encompasses how to multiplex multiple protocols on a given transport-layer protocol
      and how to associate received data with the correct protocols.
      </t>
      <section anchor="sec-packets-id-sds">
        <name>STUN, DTLS, and SRTP</name>
        <t>
        <xref target="RFC5764" sectionFormat="of" section="5.1.2"/> describes a
        mechanism to identify the protocol of a received packet among the STUN, DTLS, and 
        SRTP protocols (in any combination).
        If an offer or answer includes a bundled "m=" section that represents these protocols, the offerer
        or answerer <bcp14>MUST</bcp14> support the mechanism described in <xref target="RFC5764"/>, and no explicit negotiation is required in order to indicate support
        and usage of the mechanism.
        </t>
        <t>
        <xref target="RFC5764"/> does not describe how to identify
        different protocols transported on DTLS, only how to identify the DTLS protocol itself. If
        multiple protocols are transported on DTLS, there <bcp14>MUST</bcp14> exist a specification describing a
        mechanism for identifying each individual protocol. In addition, if a received DTLS packet
        can be associated with more than one "m=" section, there <bcp14>MUST</bcp14> exist a specification that
        describes a mechanism for associating the received DTLS packets with the correct "m=" section.
        </t>
        <t>
        <xref target="sec-rtp-pt"/> describes how to
        associate the packets in a received SRTP stream with the correct "m=" section.
        </t>
      </section>
    </section>
    <section anchor="sec-rtp">
      <name>RTP Considerations</name>
      <section anchor="sec-rtp-sessions">
        <name>Single RTP Session</name>
        <t>
            All RTP-based media within a single BUNDLE group belong to a
            single RTP session <xref target="RFC3550"/>.
        </t>
        <t>
            Since a single BUNDLE transport is used for sending and receiving bundled media,
            the symmetric RTP mechanism <xref target="RFC4961"/>
          <bcp14>MUST</bcp14> be used for RTP-based bundled media.
        </t>
        <t>
            Since a single RTP session is used for each BUNDLE group, all
            "m=" sections representing RTP-based media within a BUNDLE group will
            share a single synchronization source (SSRC) numbering space <xref target="RFC3550"/>.
        </t>
        <t>
            The following rules and restrictions apply for a single RTP
            session:
        </t>
        <ul>
          <li>
                A specific payload type value can be used in multiple bundled "m=" sections
                only if each codec associated with the payload type number shares an identical
                codec configuration (<xref target="sec-rtp-sessions-pt"/>).
              </li>
          <li>
                The proto value in each bundled RTP-based "m=" section <bcp14>MUST</bcp14> be identical
                (e.g., RTP/AVPF).
          </li>
	  
          <li>
                The RTP MID header extension <bcp14>MUST</bcp14> be enabled by including
                an SDP 'extmap' attribute <xref target="RFC8285"/>,
                with a 'urn:ietf:params:rtp- hdrext:sdes:mid' URI value defined in this specification in each
                bundled RTP-based "m=" section in every offer and answer.
              </li>
          <li>
                A given SSRC <bcp14>MUST NOT</bcp14> transmit RTP packets using payload types that
                originate from different bundled "m=" sections.
              </li>
        </ul>
        <t indent="3">
            NOTE: The last bullet above is to avoid sending multiple media types
            from the same SSRC. If transmission of multiple media types is done
            with time overlap, RTP and RTCP fail to function. Even if done in the proper sequence, this causes RTP timestamp rate switching issues
            <xref target="RFC7160"/>. However,
            once an SSRC has left the RTP session (by sending an RTCP BYE packet),
            that SSRC can be reused by another source (possibly associated
            with a different bundled "m=" section) after a delay of 5 RTCP reporting intervals
            (the delay is to ensure the SSRC has timed out in case the RTCP BYE
            packet was lost <xref target="RFC3550"/>).
        </t>
        <t>
            <xref target="RFC7657"/> defines Differentiated Services 
            (Diffserv) considerations for RTP-based bundled media sent using a mixture of Diffserv Codepoints.
        </t>
        <section anchor="sec-rtp-sessions-pt">
          <name>Payload Type (PT) Value Reuse</name>
          <t>
            Multiple bundled "m=" sections might describe RTP-based media. As all RTP-based
            media associated with a BUNDLE group belong to the same RTP session, in order
            for a given payload type value to be used inside more than one bundled "m=" section,
            all codecs associated with the payload type number <bcp14>MUST</bcp14> share an identical codec
            configuration. This means that the codecs <bcp14>MUST</bcp14> share the same media type,
            encoding name, clock rate, and any parameter that can affect the codec configuration
            and packetization. <xref target="RFC8859"/> lists SDP attributes whose attribute
            values are required to be identical for all codecs that use the
	    same payload type value.
          </t>
        </section>
      </section>
      <section anchor="sec-rtp-pt">
        <name>Associating RTP/RTCP Streams with the Correct SDP Media Description</name>
        <t>
            As described in <xref target="RFC3550"/>, RTP packets are associated with RTP
            streams <xref target="RFC7656"/>. Each RTP stream is identified by an SSRC
            value, and each RTP packet includes an SSRC field that is
            used to associate the packet with the correct RTP stream.
            RTCP packets also use SSRCs to identify which RTP streams the
            packet relates to. However, an RTCP packet can contain multiple SSRC
            fields in the course of providing feedback or reports on different RTP
            streams; therefore, they can be associated with multiple such streams.
        </t>
        <t>
            In order to be able to process received RTP/RTCP packets
            correctly, it <bcp14>MUST</bcp14> be possible to associate an RTP stream with
            the correct "m=" section, as the "m=" section and SDP attributes
            associated with the "m=" section contain information needed to
            process the packets.
        </t>
        <t>
            As all RTP streams associated with a BUNDLE group use the
            same transport for sending and receiving RTP/RTCP
            packets, the local address:port combination part of the transport
            cannot be used to associate an RTP stream with the correct "m=" section. 
            In addition, multiple RTP streams might be associated with the same "m="
            section.
        </t>
        <t>
            An offerer and answerer can inform each other which SSRC
            values they will use for an RTP stream by using the SDP 'ssrc'
            attribute <xref target="RFC5576"/>.
            However, an offerer will not know which SSRC values the
            answerer will use until the offerer has received the answer
            providing that information. Due to this, before the offerer has
            received the answer, the offerer will not be able to associate
            an RTP stream with the correct "m=" section using the SSRC value
            associated with the RTP stream. In addition, the offerer and
            answerer may start using new SSRC values mid-session, without
            informing each other about using the SDP 'ssrc' attribute.
        </t>
        <t>
            In order for an offerer and answerer to always be able to
            associate an RTP stream with the correct "m=" section, the offerer
            and answerer using the BUNDLE extension <bcp14>MUST</bcp14> support the
            mechanism defined in <xref target="sec-receiver-id"/>, 
            where the offerer and answerer insert the identification-tag associated 
            with an "m=" section (provided by the remote peer) into RTP and RTCP 
            packets associated with a BUNDLE group.
        </t>
        <t>
             When using this mechanism, the mapping from an SSRC to an
             identification-tag is carried in RTP header extensions or RTCP SDES
             packets, as specified in <xref target="sec-receiver-id"/>. 
             Since a compound RTCP packet can contain multiple RTCP SDES packets 
             and each RTCP SDES packet can contain multiple chunks, a single RTCP 
             packet can contain several mappings of SSRC to identification-tag. The 
             offerer and answerer maintain tables used for routing that are updated 
             each time an RTP/RTCP packet contains new information that affects how 
             packets are to be routed.
        </t>
        <t>
            However, some legacy implementations may not include this identification-tag
            in their RTP and RTCP traffic when using the BUNDLE mechanism and
            instead use a mechanism based on the payload type to associate RTP streams
            with SDP "m=" sections.  In this situation, each "m=" section needs to
            use unique payload type values in order for the payload type to be a
            reliable indicator of the relevant "m=" section for the RTP stream. If an
            implementation fails to ensure unique payload type values, it will be 
            impossible to associate the RTP stream using that payload type value
            to a particular "m=" section. 
            Note that when using the payload type to associate RTP streams with
            "m=" sections, an RTP stream, identified by its SSRC, will be mapped
            to an "m=" section when the first packet of that RTP stream is
            received, and the mapping will not be changed even if the payload
            type used by that RTP stream changes.  In other words, the SSRC
            cannot "move" to a different "m=" section simply by changing the
            payload type.
        </t>
        <t>
             Applications can implement RTP stacks in different
             ways. The algorithm below details one way that RTP streams can be
             associated with "m=" sections, but it is not meant to be prescriptive
             about exactly how an RTP stack needs to be implemented.
             Applications <bcp14>MAY</bcp14> use any algorithm that achieves equivalent results to
             those described in the algorithm below.
        </t>
        <t>
             To prepare to associate RTP streams with the correct
             "m=" section, the following steps <bcp14>MUST</bcp14> be followed for each BUNDLE group:
        </t>
        <ul>
          <li>
                 Construct a table mapping a MID to an "m=" section for each "m="
                 section in this BUNDLE group. Note that an "m=" section may only
                 have one MID.
             </li>
          <li>
                 Construct a table mapping SSRCs of incoming RTP streams to an "m=" section for
                 each "m=" section in this BUNDLE group and for each SSRC
                 configured for receiving in that "m=" section.
             </li>
          <li>
                 Construct a table mapping the SSRC of each outgoing RTP stream 
                 to an "m=" section for each "m=" section in this BUNDLE group and for each SSRC
                 configured for sending in that "m=" section.
             </li>
          <li>
                 Construct a table mapping a payload type to an "m=" section for
                 each "m=" section in the BUNDLE group and for each payload type
                 configured for receiving in that "m=" section. If any payload
                 type is configured for receiving in more than one "m=" section
                 in the BUNDLE group, do not include it in the table, as it
                 cannot be used to uniquely identify an "m=" section.
             </li>
          <li>
                 Note that for each of these tables, there can only be one
                 mapping for any given key (MID, SSRC, or PT). In other
                 words, the tables are not multimaps.
             </li>
        </ul>
        <t>
             As "m=" sections are added or removed from the BUNDLE groups or
             their configurations are changed, the tables above <bcp14>MUST</bcp14> also be
             updated.
        </t>
        <t>
             When an RTP packet is received, it <bcp14>MUST</bcp14> be delivered to the RTP
             stream corresponding to its SSRC. That RTP stream <bcp14>MUST</bcp14> then be
             associated with the correct "m=" section within a BUNDLE group for
             additional processing, according to the following steps:
        </t>
        <ul>
          <li>
                 If the MID associated with the RTP stream is not in the
                 table mapping a MID to an "m=" section, then the RTP stream is not
                 decoded, and the payload data is discarded.
             </li>
          <li>
                 If the packet has a MID and the packet's extended sequence number
                 is greater than that of the last MID update, as discussed in
                 <xref target="RFC7941" sectionFormat="comma" section="4.2.6"/>, update the MID associated
                 with the RTP stream to match the MID carried in the RTP packet and then
                 update the mapping tables to include an entry that maps the SSRC of
                 that RTP stream to the "m=" section for that MID.
             </li>
          <li>
                 If the SSRC of the RTP stream is in the incoming SSRC
                 mapping table, check that the payload type used by the RTP
                 stream matches a payload type included in the matching
                 "m=" section. If so, associate the RTP stream with that
                 "m=" section. Otherwise, the RTP stream is not decoded, and the
                 payload data is discarded.
             </li>
          <li>
                 If the payload type used by the RTP stream is in the
                 payload type table, update the incoming SSRC mapping table
                 to include an entry that maps the RTP stream's SSRC to the
                 "m=" section for that payload type. Associate the RTP stream
                 with the corresponding "m=" section.
             </li>
          <li>
                 Otherwise, mark the RTP stream as "not for decoding" and
                 discard the payload.
             </li>
        </ul>
        <t>
           If the RTP packet contains one or more contributing source (CSRC)
           identifiers, then each CSRC is looked up in the incoming SSRC table,
           and a copy of the RTP packet is associated with the corresponding
           "m=" section for additional processing.
        </t>
        <t>
              For each RTCP packet received (including each RTCP
              packet that is part of a compound RTCP packet), the
              packet is processed as usual by the RTP layer, then
              associated with the appropriate "m=" sections and
              processed for the RTP streams represented by those "m="
              sections.  This routing is type dependent, as each kind
              of RTCP packet has its own mechanism for associating it
              with the relevant RTP streams.
        </t>
        <t>
              RTCP packets that cannot be associated with an
              appropriate "m=" section <bcp14>MUST</bcp14> still be
              processed as usual by the RTP layer, which updates the
              metadata associated with the corresponding RTP
              streams. This situation can occur with certain
              multiparty RTP topologies or when RTCP packets are sent
              containing a subset of the SDES information.
        </t>
        <t>
              Additional rules for processing various types of RTCP packets are
              explained below.
        </t>
        <ul>
          <li>
                If the RTCP packet is of type SDES, for each chunk in the packet
                whose SSRC is found in the incoming SSRC table, deliver a copy
                of the SDES packet to the "m=" section associated with that SSRC.
                In addition, for any SDES MID items contained in these chunks,
                if the MID is found in the table mapping a MID to an "m=" section,
                update the incoming SSRC table to include an entry that
                maps the RTP stream associated with the chunk's SSRC to the "m=" section 
                associated with that MID, unless the packet is older than the packet 
                that most recently updated the mapping for this SSRC, as discussed in
                <xref target="RFC7941" sectionFormat="comma" section="4.2.6"/>.
            </li>
          <li>
                Note that if an SDES packet is received as part of a
                compound RTCP packet, the SSRC to "m=" section mapping
                might not exist until the SDES packet is handled
                (e.g., in the case where RTCP for a source is received
                before any RTP packets).

		Therefore, it can be
                beneficial for an implementation to delay RTCP packet
                routing, such that it either prioritizes processing of
                the SDES item to generate or update the mapping or
                buffers the RTCP information that needs to be routed
                until the SDES item(s) has been processed.

		If the
                implementation is unable to follow this
                recommendation, the consequence could be that some
                RTCP information from this particular RTCP compound
                packet is not provided to higher layers.  The impact
                from this is likely minor when this information
                relates to a future incoming RTP stream.
            </li>
          <li>
                If the RTCP packet is of type BYE, it indicates that the RTP streams
                referenced in the packet are ending. Therefore, for each SSRC
                indicated in the packet that is found in the incoming SSRC table,
                first deliver a copy of the BYE packet to the "m=" section associated
                with that SSRC, and then remove the entry for that SSRC from the
                incoming SSRC table after an appropriate delay to
                account for "straggler packets", as specified in <xref target="RFC3550" sectionFormat="comma" section="6.2.1"/>.
            </li>
          <li>
                If the RTCP packet is of type sender report (SR) or receiver report (RR), for each report block in
                the report whose "SSRC of source" is found in the outgoing
                SSRC table, deliver a copy of the SR or RR packet to the "m=" section
                associated with that SSRC. In addition, if the packet is of type
                SR and the sender SSRC for the packet is found in the
                incoming SSRC table, deliver a copy of the SR packet to the "m=" section
                associated with that SSRC.
            </li>
          <li>
                If the implementation supports the RTCP Extended Report (XR) and the packet is of
                type XR, as defined in <xref target="RFC3611"/>,
                for each report block in the report whose "SSRC of source"
                is found in the outgoing SSRC table, deliver a copy of the
                XR packet to the "m=" section associated with that SSRC.
                In addition, if the sender SSRC for the packet is found in the
                incoming SSRC table, deliver a copy of the XR packet to the "m=" section
                associated with that SSRC.
            </li>
          <li>
                If the RTCP packet is a feedback message of type RTPFB (transport-layer FB
   message) or PSFB (payload-specific FB message),
                as defined in <xref target="RFC4585"/>, it will contain a
                media source SSRC, and this SSRC is used for routing certain
                subtypes of feedback messages. However, several subtypes of
                PSFB and RTPFB messages include a target SSRC(s) in a section called
                Feedback Control Information (FCI). For these messages,
                the target SSRC(s) is used for routing.
            </li>
          <li>
            <t>
                If the RTCP packet is a feedback packet that does not include
                target SSRCs in its FCI section, and the media source SSRC is
                found in the outgoing SSRC table, deliver the
                feedback packet to the "m=" section associated with that SSRC.
                RTPFB and PSFB types that are handled in this way include:
            </t>
                <dl>
                  <dt>Generic NACK:</dt>
                  <dd>(PT=RTPFB, FMT=1) <xref target="RFC4585"/></dd>
                  <dt>Picture Loss Indication (PLI):</dt>
                  <dd>(PT=PSFB, FMT=1) <xref target="RFC4585"/></dd>
                  <dt>Slice Loss Indication (SLI):</dt>
                  <dd> (PT=PSFB, FMT=2) <xref target="RFC4585"/></dd>
                  <dt>Reference Picture Selection Indication (RPSI):</dt>
                  <dd>(PT=PSFB, FMT=3) <xref target="RFC4585"/></dd>
                </dl>
              </li>
            </ul>
        <ul>
          <li>
                If the RTCP packet is a feedback message that does include a target
                SSRC(s) in its FCI section, it can either be a request or a
                notification. Requests reference an RTP stream that is being
                sent by the message recipient, whereas notifications are responses
                to an earlier request and therefore reference an RTP stream that
                is being received by the message recipient.
            </li>
          <li>
            <t>
                If the RTCP packet is a feedback request that includes a target SSRC(s),
                for each target SSRC that is found in the outgoing SSRC table,
                deliver a copy of the RTCP packet to the "m=" section associated with
                that SSRC. PSFB and RTPFB types that are handled in this way include:
            </t>
                <dl>
                  <dt>Full Intra Request (FIR):</dt>
                  <dd>(PT=PSFB, FMT=4) <xref target="RFC5104"/>
                    </dd>
                  <dt>Temporal-Spatial Trade-off Request (TSTR):</dt>
                  <dd>(PT=PSFB, FMT=5) <xref target="RFC5104"/>
                    </dd>
                  <dt>H.271 Video Back Channel Message (VBCM):</dt>
                  <dd>(PT=PSFB, FMT=7) <xref target="RFC5104"/>
                    </dd>
                  <dt>Temporary Maximum Media Stream Bit Rate Request (TMMBR):</dt>
                  <dd>(PT=RTPFB, FMT=3) <xref target="RFC5104"/>
                    </dd>
                  <dt>Layer Refresh Request (LRR):</dt>
                  <dd>(PT=PSFB, FMT=10) <xref target="I-D.ietf-avtext-lrr"/>.
                    </dd>
                </dl>
              </li>
            </ul>
        <ul>
          <li>
            <t>
                If the RTCP packet is a feedback notification that includes a target SSRC(s),
                for each target SSRC that is found in the incoming SSRC table,
                deliver a copy of the RTCP packet to the "m=" section associated with
                the RTP stream with a matching SSRC. PSFB and RTPFB types that are handled in this way include:
            </t>
                <dl>
                  <dt>Temporal-Spatial Trade-off Notification (TSTN):</dt>
                  <dd>(PT=PSFB, FMT=6) <xref target="RFC5104"/>. This message
                        is a notification in response to a prior TSTR.
                    </dd>
                  <dt>Temporary Maximum Media Stream Bit Rate Notification (TMMBN):</dt>
                  <dd>(PT=RTPFB, FMT=4) <xref target="RFC5104"/>. This message is a 
                        notification in response to a prior TMMBR, but it can also be sent 
                        unsolicited.
                    </dd>
                </dl>
              </li>
            </ul>
        <ul empty="true">
          <li>
              If the RTCP packet is of type APP, then it is handled in an application-specific
              manner. If the application does not recognize the APP packet,
              then it <bcp14>MUST</bcp14> be discarded.
            </li>
        </ul>
      </section>
      <section anchor="sec-rtprtcp-mux">
        <name>RTP/RTCP Multiplexing</name>
        <t>
          Within a BUNDLE group, the offerer and answerer <bcp14>MUST</bcp14> enable
          RTP/RTCP multiplexing <xref target="RFC5761"/> for the RTP-based bundled media (i.e., the
          same transport will be used for both RTP packets and RTCP packets). 
          In addition, the offerer and answerer <bcp14>MUST</bcp14> support the 
          SDP 'rtcp-mux-only' attribute <xref target="RFC8858"/>.
        </t>
        <section anchor="sec-rtprtcp-mux-oa">
          <name>SDP Offer/Answer Procedures</name>
          <t>
            This section describes how an offerer and answerer use the
            SDP 'rtcp-mux' <xref target="RFC5761"/> and SDP 'rtcp-mux-only' attributes
            <xref target="RFC8858"/>
            to negotiate usage of RTP/RTCP multiplexing for RTP-based bundled media.
          </t>
          <t>
            RTP/RTCP multiplexing only applies to RTP-based media. However, as described in
            <xref target="sec-sdp-oa-cat"/>, within an offer
            or answer, the SDP 'rtcp-mux' and SDP 'rtcp-mux-only' attributes might be included in
            a bundled "m=" section for non-RTP-based media (if such an "m=" section is the offerer-tagged 
            "m=" section or answerer-tagged "m=" section).
          </t>
          <section anchor="sec-rtprtcp-mux-oa-ino">
            <name>Generating the Initial BUNDLE Offer</name>
            <t>
            When an offerer generates an initial BUNDLE offer, if the offer contains
            one or more bundled "m=" sections for RTP-based  media (or if there is a chance that "m=" sections
            for RTP-based media will later be added to the BUNDLE group), the offerer <bcp14>MUST</bcp14>
            include an SDP 'rtcp-mux' attribute <xref target="RFC5761"/> in each 
            bundled "m=" section (excluding any bundle-only "m=" sections). In addition, the offerer <bcp14>MAY</bcp14> include an
            SDP 'rtcp-mux-only' attribute <xref target="RFC8858"/> 
            in one or more bundled "m=" sections for RTP-based media.
            </t>
            <t indent="3">
            NOTE: Whether the offerer includes the SDP 'rtcp-mux-only' attribute
            depends on whether the offerer supports fallback to usage of a separate
            port for RTCP in case the answerer moves one or more "m=" sections for RTP-based media 
            out of the BUNDLE group in the answer.
            </t>
            <t indent="3">
            NOTE: If the offerer includes an SDP 'rtcp-mux' attribute in the bundled "m=" sections but does not include an SDP 'rtcp-mux-only' attribute,
            the offerer can also include an SDP 'rtcp' attribute <xref target="RFC3605"/> in one or more RTP-based bundled "m=" sections in order 
            to provide a fallback port for RTCP, as described in <xref target="RFC5761"/>. However, the fallback port will only be applied to "m=" sections for RTP-based
            media that are moved out of the BUNDLE group by the answerer.
            </t>
            <t>
            In the initial BUNDLE offer, the address:port combination for RTCP <bcp14>MUST</bcp14> be unique in each
            bundled "m=" section for RTP-based media (excluding a bundle-only "m=" section), similar to RTP.
            </t>
          </section>
          <section anchor="sec-rtprtcp-mux-oa-ans">
            <name>Generating the SDP Answer</name>
            <t>
            When an answerer generates an answer, if the answerer supports RTP-based media
            and if a bundled "m=" section in the corresponding offer contained an SDP 'rtcp-mux' attribute,
            the answerer <bcp14>MUST</bcp14> enable usage of RTP/RTCP multiplexing, even if there currently
            are no bundled "m=" sections for RTP-based media within the BUNDLE group. The answerer <bcp14>MUST</bcp14> include
            an SDP 'rtcp-mux' attribute in the answerer-tagged "m=" section, following the procedures for 
            BUNDLE attributes (<xref target="sec-sdp-oa-cat"/>). 
            In addition, if the "m=" section that is selected as the offerer-tagged "m=" section contained
            an SDP 'rtcp-mux-only' attribute, the answerer <bcp14>MUST</bcp14> include an SDP 'rtcp-mux-only' attribute 
            in the answerer-tagged "m=" section.
            </t>
            <t>
            In an initial BUNDLE offer, if the suggested offerer-tagged "m=" section contained an
            SDP 'rtcp-mux-only' attribute, the "m=" section was for RTP-based media. If the
            answerer does not accept the "m=" section in the created BUNDLE group and moves the
            "m=" section out of the BUNDLE group (<xref target="sec-sdp-oa-ans-mov"/>),
            the answerer <bcp14>MUST</bcp14> include the attribute in the moved "m=" section and enable RTP/RTCP
            multiplexing for the media associated with the "m=" section. If the answerer rejects the "m=" section 
            (<xref target="sec-sdp-oa-ans-rej"/>),
            the answerer <bcp14>MUST NOT</bcp14> include the attribute.
            </t>
            <t>
            The answerer <bcp14>MUST NOT</bcp14> include an SDP 'rtcp' attribute in any bundled "m=" section
            in the answer. The answerer will use the port value of the offerer-tagged 
            "m=" section sending RTP and RTCP packets associated with RTP-based bundled media
            towards the offerer.
            </t>
            <t>
            If the usage of RTP/RTCP multiplexing within a BUNDLE group has been
            negotiated in a previous offer/answer exchange, the answerer <bcp14>MUST</bcp14>
            include an SDP 'rtcp-mux' attribute in the answerer-tagged "m=" section. 
            It is not possible to disable RTP/RTCP multiplexing within a BUNDLE group.
            </t>
          </section>
          <section anchor="sec-rtprtcp-mux-oa-pra">
            <name>Offerer Processing of the SDP Answer</name>
            <t>
            When an offerer receives an answer, if the answerer has accepted
            the usage of RTP/RTCP multiplexing (<xref target="sec-rtprtcp-mux-oa-ans"/>),
            the answerer follows the procedures for RTP/RTCP multiplexing defined
            in <xref target="RFC5761"/>. The
            offerer will use the port value of the answerer-tagged "m=" section
            for sending RTP and RTCP packets associated with
            RTP-based bundled media towards the answerer.
            </t>
            <t indent="3">
            NOTE: It is considered a protocol error if the answerer has not
            accepted the usage of RTP/RTCP multiplexing for RTP-based "m=" sections
            that the answerer included in the BUNDLE group.
            </t>
          </section>
          <section anchor="sec-rtprtcp-mux-oa-mod">
            <name>Modifying the Session</name>
            <t>
            When an offerer generates a subsequent offer, the offerer <bcp14>MUST</bcp14> include
            an SDP 'rtcp-mux' attribute in the offerer-tagged "m=" section, following 
            the procedures for IDENTICAL multiplexing category attributes in 
            <xref target="sec-sdp-oa-cat"/>.
            </t>
          </section>
        </section>
      </section>
    </section>
    <section anchor="sec-ice">
      <name>ICE Considerations</name>
      <t>
        This section describes how to use the BUNDLE grouping extension together
        with the ICE mechanism <xref target="RFC8445"/>.
      </t>
      <t>
        The generic procedures for negotiating the usage of ICE using SDP, defined
        in <xref target="RFC8839"/>, also apply to the usage of ICE
        with BUNDLE, with the following exceptions:
      </t>
      <ul>
        <li>
            When the BUNDLE transport has been established, ICE connectivity checks and keepalives 
            only need to be performed for the BUNDLE transport, instead of per individual bundled "m=" section 
            within the BUNDLE group.
          </li>
        <li>
            The generic SDP attribute offer/answer considerations (<xref target="sec-sdp-oa-cat"/>) also apply to ICE-related 
            attributes. Therefore, when an offerer sends an initial BUNDLE offer (in order to negotiate a BUNDLE group), the offerer
            includes ICE-related media-level attributes in each bundled "m=" section (excluding any bundle-only "m=" sections),
            and each "m=" section <bcp14>MUST</bcp14> contain unique ICE properties. When an answerer generates an answer (initial BUNDLE answer or subsequent) 
            that contains a BUNDLE group and when an offerer sends a subsequent offer that contains a BUNDLE group, ICE-related media-level 
            attributes are only included in the tagged "m=" section (suggested offerer-tagged "m=" section or answerer-tagged "m=" section), and
            the ICE properties are applied to each bundled "m=" section within the BUNDLE group.
          </li>
      </ul>
      <t indent="3">
        NOTE: Most ICE-related media-level SDP attributes belong to the TRANSPORT multiplexing category
        <xref target="RFC8859"/>, and the generic SDP attribute offer/answer
        considerations for the TRANSPORT multiplexing category apply to the attributes. However, in the case of
        ICE-related attributes, the same considerations also apply to ICE-related media-level attributes that
        belong to other multiplexing categories.
      </t>
      <t indent="3">
        NOTE: The following ICE-related media-level SDP attributes are defined in
        <xref target="RFC8839"/>: 'candidate', 'remote-candidates', 'ice-mismatch',
        'ice-ufrag', 'ice-pwd', and 'ice-pacing'.
      </t>
      <t>
        Initially, before ICE has produced selected candidate pairs that will be used for media, there might
        be multiple transports established (if multiple candidate pairs are tested). Once ICE has selected
        candidate pairs, they form the BUNDLE transport.
      </t>
      <t>
        Support and usage of the ICE mechanism together with the BUNDLE extension
        is <bcp14>OPTIONAL</bcp14>, and the procedures in this section only apply when the
        ICE mechanism is used. Note that applications might mandate usage
        of the ICE mechanism even if the BUNDLE extension is not used.
      </t>
      <t indent="3">
        NOTE: If the Trickle ICE mechanism <xref target="RFC8840"/>
        is used, an offerer and answerer might assign a port value of '9' and an IPv4 
        address of '0.0.0.0' (or, the IPv6 equivalent '::') to multiple bundled "m=" sections
        in the initial BUNDLE offer. The offerer and answerer will follow the normal procedures
        for generating the offers and answers, including picking a bundled "m=" section as the
        suggested offerer-tagged "m=" section, selecting the tagged "m=" sections, etc. The only
        difference is that media cannot be sent until one or more candidates have been provided.
        Once a BUNDLE group has been negotiated, trickled candidates associated with a bundled
        "m=" section will be applied to all bundled "m=" sections within the BUNDLE group.
      </t>
    </section>
    <section anchor="sec-dtls">
      <name>DTLS Considerations</name>
      <t>
        One or more media streams within a BUNDLE group might use
        the DTLS protocol
        <xref target="RFC6347"/>
        in order to encrypt the data or negotiate encryption keys
        if another encryption mechanism is used to encrypt media.
      </t>
      <t>
        When DTLS is used within a BUNDLE group, the following rules
        apply:
      </t>
      <ul>
        <li>
          There can only be one DTLS association
          <xref target="RFC6347"/>
          associated with the BUNDLE group; 
        </li>
        <li>
          Each usage of the DTLS association within the BUNDLE
          group <bcp14>MUST</bcp14> use the same mechanism for determining
          which endpoints (the offerer or answerer) become
          DTLS client and DTLS server; 
        </li>
        <li>

	  
          Each usage of the DTLS association within the BUNDLE
          group <bcp14>MUST</bcp14> use the same mechanism for determining
          whether an offer or answer will trigger the
          establishment of a new DTLS association or if 
          an existing DTLS association will be used instead; and
        </li>
        <li>
          If the DTLS client supports DTLS-SRTP,
          it <bcp14>MUST</bcp14> include the 'use_srtp' extension
          in the DTLS ClientHello message
          <xref target="RFC5764"/>.
          The client <bcp14>MUST</bcp14> include the extension even if the usage
          of DTLS-SRTP is not negotiated as part of the
          multimedia session (e.g., the SIP session <xref target="RFC3261"/>).
        </li>
      </ul>
      <t indent="3">
        NOTE: The inclusion of the 'use_srtp' extension during the initial
        DTLS handshake ensures that a DTLS renegotiation will not be required
        in order to include the extension in case DTLS-SRTP encrypted media
        is added to the BUNDLE group later during the multimedia session.
      </t>
    </section>
    <section anchor="sec-extmap">
      <name>RTP Header Extensions Consideration</name>
      <t>When RTP header extensions <xref target="RFC8285"/> are used in the context of this
       specification, the identifier used for a given extension <bcp14>MUST</bcp14> identify the same
       extension across all the bundled media descriptions. </t>
    </section>
    <section anchor="sec-3264">
      <name>Updates to RFC 3264</name>
      <t>
        This section updates <xref target="RFC3264"/> in order to allow extensions to define the usage of 
        a zero port value in offers and answers for purposes other than removing or disabling 
        media streams. The following sections are being updated:
      </t>
      <ul>
        <li>"Unicast Streams"; see <xref target="RFC3264" section="5.1"/>.</li>
        <li>"Putting a Unicast Media Stream on Hold"; see <xref target="RFC3264" section="8.4"/>. </li>
      </ul>
      <section anchor="sec-3264-old-5_1">
        <name>Original Text from RFC 3264, Section 5.1, Paragraph 2</name>
        <blockquote>
        For recvonly and sendrecv streams, the port number and address in the
        offer indicate where the offerer would like to receive the media
        stream. For sendonly RTP streams, the address and port number
        indirectly indicate where the offerer wants to receive RTCP reports.
        Unless there is an explicit indication otherwise, reports are sent to
        the port number one higher than the number indicated.  The IP address
        and port present in the offer indicate nothing about the source IP
        address and source port of RTP and RTCP packets that will be sent by
        the offerer. A port number of zero in the offer indicates that the
        stream is offered but <bcp14>MUST NOT</bcp14> be used.  This has no useful semantics
        in an initial offer, but is allowed for reasons of completeness,
        since the answer can contain a zero port indicating a rejected stream
        (Section <xref target="RFC3264" sectionFormat="bare" section="6"/>). Furthermore, existing streams can be terminated by
        setting the port to zero (Section <xref target="RFC3264" sectionFormat="bare" section="8"/>). In general, a port number of
        zero indicates that the media stream is not wanted.
        </blockquote>
      </section>
      <section anchor="sec-3264-new-5_1">
        <name>New Text Replacing RFC 3264, Section 5.1, Paragraph 2</name>
        <blockquote><t>
        For recvonly and sendrecv streams, the port number and address in the
        offer indicate where the offerer would like to receive the media
        stream. For sendonly RTP streams, the address and port number
        indirectly indicate where the offerer wants to receive RTCP reports.
        Unless there is an explicit indication otherwise, reports are sent to
        the port number one higher than the number indicated. The IP address
        and port present in the offer indicate nothing about the source IP
        address and source port of the RTP and RTCP packets that will be sent by
        the offerer. By default, a port number of zero in the offer indicates that the
        stream is offered but <bcp14>MUST NOT</bcp14> be used, but an extension mechanism
        might specify different semantics for the usage of a zero port value.
        Furthermore, existing streams can be terminated by setting the port to
        zero (Section <xref target="RFC3264" sectionFormat="bare" section="8"/>). In general, a port number of zero by default indicates
        that the media stream is not wanted.
        </t></blockquote>
      </section>
      <section anchor="sec-3264-old-8_4">
        <name>Original Text from RFC 3264, Section 8.4, Paragraph 6</name>
        <blockquote>RFC 2543 [10] specified that placing a user on hold was accomplished
   by setting the connection address to 0.0.0.0.  Its usage for putting
   a call on hold is no longer recommended, since it doesn't allow for
   RTCP to be used with held streams, doesn't work with IPv6, and breaks
   with connection oriented media.  However, it can be useful in an
   initial offer when the offerer knows it wants to use a particular set
   of media streams and formats, but doesn't know the addresses and
   ports at the time of the offer.  Of course, when used, the port
   number <bcp14>MUST NOT</bcp14> be zero, which would specify that the stream has been
   disabled.  An agent <bcp14>MUST</bcp14> be capable of receiving SDP with a
   connection address of 0.0.0.0, in which case it means that neither
   RTP nor RTCP should be sent to the peer.
        </blockquote>
      </section>
      <section anchor="sec-3264-new-8_4">
        <name>New Text Replacing RFC 3264, Section 8.4, Paragraph 6</name>
        <blockquote><t> RFC 2543 <xref target="RFC2543"/> specifies
        that placing a user on hold was accomplished by setting the
        connection address to 0.0.0.0.  Its usage for putting a call
        on hold is no longer recommended, since it doesn't allow for
        RTCP to be used with held streams, doesn't work with IPv6, and
        breaks with connection oriented media. However, it can be
        useful in an initial offer when the offerer knows it wants to
        use a particular set of media streams and formats, but doesn't
        know the addresses and ports at the time of the offer. Of
        course, when used, the port number <bcp14>MUST NOT</bcp14> be
        zero, if it would specify that the stream has been
        disabled. However, an extension mechanism might specify
        different semantics of the zero port number usage. An agent
        <bcp14>MUST</bcp14> be capable of receiving SDP with a
        connection address of 0.0.0.0, in which case it means that
        neither RTP nor RTCP is to be sent to the peer.
        </t></blockquote>
      </section>
    </section>
    <section anchor="sec-5888">
      <name>Update to RFC 5888</name>
      <t>
        This section updates RFC 5888 <xref target="RFC5888"/> 
        in order for extensions to allow an SDP 'group' attribute containing
        an identification-tag that identifies an "m=" section with the port set to zero.
        "Group Value in Answers" (<xref target="RFC5888" section="9.2"/>) 
        is updated.
      </t>
      <section anchor="sec-5888-old-9_2">
        <name>Original Text from RFC 5888, Section 9.2, Paragraph 3</name>
        <blockquote>SIP entities refuse media streams by setting the port to zero in the corresponding
        "m" line. "a=group" lines <bcp14>MUST NOT</bcp14> contain identification-tags that correspond to 
        "m" lines with the port set to zero.</blockquote>
      </section>
      <section anchor="sec-5888-new-9_2">
        <name>New Text Replacing RFC 5888, Section 9.2, Paragraph 3</name>
        <blockquote><t> SIP entities refuse media streams by setting
        the port to zero in the corresponding "m" line. "a=group"
        lines <bcp14>MUST NOT</bcp14> contain identification-tags that
        correspond to "m" lines with the port set to zero, but an
        extension mechanism might specify different semantics for
        including identification-tags that correspond to such "m="
        lines.  </t></blockquote>
      </section>
    </section>
    <section anchor="sec-receiver-id">
      <name>RTP/RTCP Extensions for identification-tag Transport</name>
      <t>
        Offerers and answerers <xref target="RFC3264"/> can associate
        identification-tags with "m=" sections within offers and
        answers using the procedures in <xref
        target="RFC5888"/>. Each identification-tag uniquely
        represents an "m=" section.
      </t>
      <t>
        This section defines a new RTCP SDES item <xref target="RFC3550"/>, 'MID', which is used to carry identification-tags within RTCP
        SDES packets. This section also defines a new RTP SDES header extension
        <xref target="RFC7941"/>, which
        is used to carry the 'MID' RTCP SDES item in RTP packets.
      </t>
      <t>
        The SDES item and RTP SDES header extension make it possible for a receiver to associate
        each RTP stream with a specific "m=" section with which the receiver has
        associated an identification-tag, even if those "m=" sections are part of the same RTP session.
        The RTP SDES header extension also ensures that the media recipient gets the identification-tag
        upon receipt of the first decodable media and is able to associate the media with the
        correct application.
      </t>
      <t>
        A media recipient informs the media sender about the identification-tag
        associated with an "m=" section through the use of a 'mid' attribute
        <xref target="RFC5888"/>. The media sender then
        inserts the identification-tag in RTCP and RTP packets sent to the media recipient.
      </t>
      <t indent="3">
        NOTE: The text above defines how identification-tags are carried in offers
        and answers. The usage of other signaling protocols for carrying identification-tags
        is not prevented, but the usage of such protocols is outside the scope of this document.
      </t>
      <t>
        <xref target="RFC3550"/> defines general procedures
        regarding the RTCP transmission interval. The RTCP MID SDES item <bcp14>SHOULD</bcp14> be sent in
        the first few RTCP packets after joining the session and <bcp14>SHOULD</bcp14> be sent regularly
        thereafter. The exact number of RTCP packets in which this SDES item is sent is
        intentionally not specified here, as it will depend on the expected packet-loss
        rate, the RTCP reporting interval, and the allowable overhead.
      </t>
      <t>
        The RTP SDES header extension for carrying the 'MID' RTCP SDES <bcp14>SHOULD</bcp14> be included
        in some RTP packets at the start of the session and whenever the SSRC changes. It might
        also be useful to include the header extension in RTP packets that comprise access points in the media
        (e.g., with video I-frames). The exact number of RTP packets in which this header
        extension is sent is intentionally not specified here, as it will depend on expected
        packet-loss rate and loss patterns, the overhead the application can tolerate, and
        the importance of immediate receipt of the identification-tag.
      </t>
      <t>
        For robustness, endpoints need to be prepared for situations where the
        reception of the identification-tag is delayed and <bcp14>SHOULD NOT</bcp14> terminate sessions
        in such cases, as the identification-tag is likely to arrive soon.
      </t>
      <section anchor="sec-receiver-id-sdes-item">
        <name>RTCP MID SDES Item</name>
        <artwork name="" type="" alt="">
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |      MID=15   |     length    | identification-tag          ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
        <t>
          The identification-tag payload is UTF-8 encoded <xref target="RFC3629"/>, as in SDP.
        </t>
        <t>
          The identification-tag is not zero terminated.
        </t>
      </section>
      <section anchor="sec-receiver-id-rtp-he">
        <name>RTP SDES Header Extension for MID</name>
        <t>
          The payload, containing the identification-tag, of the RTP SDES header extension element
          can be encoded using either the 1-byte or the 2-byte header <xref target="RFC7941"/>. The identification-tag payload is UTF-8
          encoded, as in SDP.
        </t>
        <t>
          The identification-tag is not zero terminated. Note that the set of header extensions
          included in the packet needs to be padded to the next 32-bit boundary using zero
          bytes <xref target="RFC8285"/>.
        </t>
        <t>
          As the identification-tag is included in an RTCP SDES item, an RTP SDES header
          extension, or both, there needs to be some consideration about the packet expansion
          caused by the identification-tag. To avoid Maximum Transmission Unit (MTU) issues
          for the RTP packets, the header extension's size needs to be taken into account when
          encoding the media.
        </t>
        <t>
          It is recommended that the identification-tag be kept short. Due to the properties of
          the RTP header extension mechanism, when using the 1-byte header, a tag that is 1-3 bytes
          will result in a minimal number of 32-bit words used for the RTP SDES header extension,
          in case no other header extensions are included at the same time. Note: do take into
          account that some single characters when UTF-8 encoded will result in multiple octets.
          The identification-tag <bcp14>MUST NOT</bcp14> contain any user information, and applications <bcp14>SHALL</bcp14> avoid 
          generating the identification-tag using a pattern that enables user or application 
          identification.
        </t>
      </section>
    </section>
    <section anchor="sec-receiver-id-iana">
      <name>IANA Considerations</name>
      <t>NOTE: Apart from the references, the IANA considerations in this section are identical to those in <xref target="RFC8843"/>.</t>
      <section anchor="sec-receiver-id-iana-sdes-item">
        <name>SDES Item</name>
        <t>
        This document updates the MID SDES entry in the "RTP SDES Item
        Types" registry as follows:
        </t>
            <dl spacing="compact">
              <dt>Value:</dt>
              <dd>15</dd>
              <dt>Abbrev.:</dt>
              <dd>MID</dd>
              <dt>Name:</dt>
              <dd>Media Identification</dd>
              <dt>Reference:</dt>
              <dd>RFC 9143</dd>
            </dl>
      </section>
      <section anchor="sec-receiver-id-iana-rtp-uri">
        <name>RTP SDES Header Extension URI</name>
        <t>
        This document updates the extension URI in the "RTP SDES
        Compact Header Extensions" subregistry of the "RTP Compact
        Header Extensions" sub-registry, according to the
        following data:
        </t>
            <dl spacing="compact">
              <dt>Extension URI:</dt>
              <dd>urn:ietf:params:rtp-hdrext:sdes:mid</dd>
              <dt>Description:</dt>
              <dd>Media identification</dd>
              <dt>Contact:</dt>
              <dd>IESG (iesg@ietf.org)</dd>
              <dt>Reference:</dt>
              <dd>RFC 9143</dd>
            </dl>
        <t>
  The SDES item does not reveal privacy information about the users.
  It is simply used to associate RTP-based media with the correct SDP
  media description ("m=" section) in the SDP used to negotiate the 
  media.</t>
        <t> The purpose of the extension is for the offerer to be able to
  associate received multiplexed RTP-based media before the offerer
  receives the associated answer.</t>
      </section>
      <section anchor="sec-receiver-id-iana-sdp-attribute">
        <name>SDP Attribute</name>
        <t>
        This document updates the SDP media-level attribute,
        'bundle-only', in the "attribute-name (formerly 'att-field')" subregistry of the "Session Description Protocol (SDP) Parameters" registry according to the following data:
        </t>
            <dl spacing="compact">
              <dt>Attribute name:</dt>
              <dd>bundle-only</dd>
              <dt>Type of attribute:</dt>
              <dd>media</dd>
              <dt>Subject to charset:</dt>
              <dd>No</dd>
              <dt>Purpose:</dt>
              <dd>Request a media description to be accepted
                      in the answer only if kept within a BUNDLE
                      group by the answerer.</dd>
              <dt>Appropriate values:</dt>
              <dd>N/A</dd>
              <dt>Contact name:</dt>
              <dd>IESG</dd>
              <dt>Contact e-mail:</dt>
              <dd>iesg@ietf.org</dd>
              <dt>Reference:</dt>
              <dd>RFC 9143</dd>
              <dt>Mux category:</dt>
              <dd>NORMAL</dd>
            </dl>
      </section>
      <section anchor="sec-receiver-id-iana-sdp-group-semantics">
        <name>SDP Group Semantics</name>
        <t>
        This document updates the following semantics in the
        "Semantics for the 'group' SDP Attribute" subregistry (under the
        "Session Description Protocol (SDP) Parameters" registry):
        </t>
        <table anchor="Table_1" align="left">
	  <name>Update to SDP Group Semantics</name>
          <thead>
            <tr>
              <th>Semantics</th>
              <th>Token</th>
              <th>Mux Category</th>
              <th>Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>Media bundling</td>
              <td>BUNDLE</td>
              <td>NORMAL</td>
              <td>RFC 9143</td>
            </tr>
          </tbody>
        </table>
      </section>
    </section>
    <section anchor="sec-security">
      <name>Security Considerations</name>
      <t>The security considerations defined in <xref target="RFC3264"/> and <xref target="RFC5888"/> apply to the BUNDLE extension. BUNDLE
      does not change which information, e.g., RTP streams, flows over
      the network, except for the usage of the MID SDES item as
      discussed below.
      Primarily, it changes which addresses and ports, and
      thus in which (RTP) sessions, the information flows to. This
      affects the security contexts being used and can cause previously
      separated information flows to share the same security context. This has very
      little impact on the performance of the security mechanism of the RTP
      sessions. In cases where one would have applied different security
      policies on the different RTP streams being bundled or where the
      parties having access to the security contexts would have differed
      between the RTP streams, additional analysis of the implications is
      needed before selecting to apply BUNDLE.</t>

      <t>The identification-tag, independent of transport, RTCP SDES packet, or
      RTP header extension, can expose the value to parties beyond the
      signaling chain. Therefore, the identification-tag values <bcp14>MUST</bcp14> be
      generated in a fashion that does not leak user information, e.g.,
      randomly or using a per-bundle group counter, and <bcp14>SHOULD</bcp14> be 3 bytes or
      fewer to allow them to efficiently fit into the MID RTP header
      extension. Note that if implementations use different methods for
      generating identification-tags, this could enable fingerprinting of the
      implementation, making it vulnerable to targeted attacks. The
      identification-tag is exposed on the RTP stream level when included in
      the RTP header extensions; however, what it reveals of the RTP media
      stream structure of the endpoint and application was already possible to
      deduce from the RTP streams without the MID SDES header extensions. As
      the identification-tag is also used to route the media stream to the
      right application functionality, it is important that the value
      received is the one intended by the sender; thus, integrity and the
      authenticity of the source are important to prevent denial of service on
      the application. Existing SRTP configurations and other security
       mechanisms protecting the whole RTP/RTCP packets will provide the
      necessary protection.</t>
      <t>When the BUNDLE extension is used, the set of configurations of the
	  security mechanism used in all the bundled media descriptions will need to
	  be compatible so that they can be used simultaneously, at least
	  per direction or endpoint. When using SRTP, this will be the case, at least
	  for the IETF-defined key-management solutions due to their SDP attributes
	  ("a=crypto", "a=fingerprint", "a=mikey") and their classification in <xref target="RFC8859"/>.</t>
      <t>The security considerations of "RTP Header
	  Extension for the RTP Control Protocol (RTCP) Source Description Items"
	  <xref target="RFC7941"/> require that when RTCP is confidentiality protected, any SDES
	  RTP header extension carrying an SDES item, such as the MID RTP header
      extension, is also protected using commensurate strength algorithms.
      However, assuming the above requirements and recommendations are
      followed, there are no known significant security risks with leaving the
      MID RTP header extension without confidentiality protection. 
      Therefore, this specification updates <xref target="RFC7941"/> by adding the exception that this requirement 
      <bcp14>MAY</bcp14> be ignored for the MID RTP header extension. Security mechanisms for RTP/RTCP are 
      discussed in "Options for Securing RTP Sessions" <xref target="RFC7201"/>; 
      for example, SRTP <xref target="RFC3711"/> can provide the necessary security 
      functions of ensuring the integrity and source authenticity.
      </t>
    </section>
    <section anchor="sec-example-alt1">
      <name>Examples</name>
      <section anchor="sec-example-add">
        <name>Example: Tagged "m=" Section Selections</name>
        <t>
        The example below shows:
        </t>
        <ul>
          <li>An initial BUNDLE offer, in which the offerer wants to
          negotiate a BUNDLE group and indicates the audio "m="
          section as the suggested offerer-tagged "m=" section.</li>
          <li>An initial BUNDLE answer, in which the answerer accepts
          the creation of the BUNDLE group, selects the audio "m="
          section in the offer as the offerer-tagged "m=" section,
          selects the audio "m=" section in the answer as the
          answerer-tagged "m=" section, and assigns the answerer BUNDLE
          address:port to that "m=" section.</li>
        </ul>
        <t keepWithNext="true">SDP Offer (1)</t>
        <sourcecode type="sdp">
    v=0
    o=alice 2890844526 2890844526 IN IP6 2001:db8::3
    s=
    c=IN IP6 2001:db8::3
    t=0 0
    a=group:BUNDLE foo bar

    m=audio 10000 RTP/AVP 0 8 97
    b=AS:200
    a=mid:foo
    a=rtcp-mux
    a=rtpmap:0 PCMU/8000
    a=rtpmap:8 PCMA/8000
    a=rtpmap:97 iLBC/8000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 10002 RTP/AVP 31 32
    b=AS:1000
    a=mid:bar
    a=rtcp-mux
    a=rtpmap:31 H261/90000
    a=rtpmap:32 MPV/90000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid
</sourcecode>
        <t keepWithNext="true">SDP Answer (2)</t>
        <sourcecode type="sdp">
    v=0
    o=bob 2808844564 2808844564 IN IP6 2001:db8::1
    s=
    c=IN IP6 2001:db8::1
    t=0 0
    a=group:BUNDLE foo bar

    m=audio 20000 RTP/AVP 0
    b=AS:200
    a=mid:foo
    a=rtcp-mux
    a=rtpmap:0 PCMU/8000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 20000 RTP/AVP 32
    b=AS:1000
    a=mid:bar
    a=rtpmap:32 MPV/90000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid
</sourcecode>
      </section>
      <section anchor="sec-example-bunrej">
        <name>Example: BUNDLE Group Rejected</name>
        <t>
        The example below shows:
        </t>
        <ul>
          <li>An initial BUNDLE offer, in which the offerer wants to
          negotiate a BUNDLE group and indicates the audio "m=" section
          as the suggested offerer-tagged "m=" section.</li>
          <li>An initial BUNDLE answer, in which the answerer rejects
          the creation of the BUNDLE group, generates a normal answer,
          and assigns a unique address:port to each "m=" section in
          the answer.</li>
        </ul>
        <t keepWithNext="true">SDP Offer (1)</t>
        <sourcecode type="sdp">
    v=0
    o=alice 2890844526 2890844526 IN IP6 2001:db8::3
    s=
    c=IN IP6 2001:db8::3
    t=0 0
    a=group:BUNDLE foo bar

    m=audio 10000 RTP/AVP 0 8 97
    b=AS:200
    a=mid:foo
    a=rtcp-mux
    a=rtpmap:0 PCMU/8000
    a=rtpmap:8 PCMA/8000
    a=rtpmap:97 iLBC/8000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 10002 RTP/AVP 31 32
    b=AS:1000
    a=mid:bar
    a=rtcp-mux
    a=rtpmap:31 H261/90000
    a=rtpmap:32 MPV/90000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid
</sourcecode>
        <t keepWithNext="true">SDP Answer (2)</t>
        <sourcecode type="sdp">
    v=0
    o=bob 2808844564 2808844564 IN IP6 2001:db8::1
    s=
    c=IN IP6 2001:db8::1
    t=0 0

    m=audio 20000 RTP/AVP 0
    b=AS:200
    a=rtcp-mux
    a=rtpmap:0 PCMU/8000

    m=video 30000 RTP/AVP 32
    b=AS:1000
    a=rtcp-mux
    a=rtpmap:32 MPV/90000
</sourcecode>
      </section>
      <section anchor="sec-example-off-add">
        <name>Example: Offerer Adds a Media Description to a BUNDLE Group</name>
        <t>
        The example below shows:
        </t>
        <ul>
          <li>A subsequent offer, in which the offerer adds a new bundled "m=" section (video), indicated by the "zen"
          identification-tag, to a previously negotiated BUNDLE group; indicates the new "m=" section as the
          offerer-tagged "m=" section; and assigns the offerer BUNDLE address:port to that "m=" section.</li>
          <li>A subsequent answer, in which the answerer indicates the new video "m=" section in the answer as the answerer-tagged "m=" section
          and assigns the answerer BUNDLE address:port to that "m=" section.</li>
        </ul>
        <t keepWithNext="true">SDP Offer (1)</t>
        <sourcecode type="sdp">
    v=0
    o=alice 2890844526 2890844526 IN IP6 2001:db8::3
    s=
    c=IN IP6 2001:db8::3
    t=0 0
    a=group:BUNDLE zen foo bar

    m=audio 10000 RTP/AVP 0 8 97
    b=AS:200
    a=mid:foo
    a=rtpmap:0 PCMU/8000
    a=rtpmap:8 PCMA/8000
    a=rtpmap:97 iLBC/8000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 10000 RTP/AVP 31 32
    b=AS:1000
    a=mid:bar
    a=rtpmap:31 H261/90000
    a=rtpmap:32 MPV/90000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 10000 RTP/AVP 66
    b=AS:1000
    a=mid:zen
    a=rtcp-mux
    a=rtpmap:66 H261/90000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid
</sourcecode>
        <t keepWithNext="true">SDP Answer (2)</t>
        <sourcecode type="sdp">
    v=0
    o=bob 2808844564 2808844564 IN IP6 2001:db8::1
    s=
    c=IN IP6 2001:db8::1
    t=0 0
    a=group:BUNDLE zen foo bar

    m=audio 20000 RTP/AVP 0
    b=AS:200
    a=mid:foo
    a=rtpmap:0 PCMU/8000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 20000 RTP/AVP 32
    b=AS:1000
    a=mid:bar
    a=rtpmap:32 MPV/90000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 20000 RTP/AVP 66
    b=AS:1000
    a=mid:zen
    a=rtcp-mux
    a=rtpmap:66 H261/90000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid
</sourcecode>
      </section>
      <section anchor="sec-example-off-mov">
        <name>Example: Offerer Moves a Media Description Out of a BUNDLE Group</name>
        <t>
        The example below shows:
        </t>
        <ul>
          <li>A subsequent offer, in which the offerer removes an "m=" section (video), indicated by the "zen"
          identification-tag, from a previously negotiated BUNDLE group; indicates one of the bundled "m=" sections (audio) 
          remaining in the BUNDLE group as the offerer-tagged "m=" section; and assigns the offerer BUNDLE address:port to that "m=" section.</li>
          <li>A subsequent answer, in which the answerer removes the "m=" section from the BUNDLE group, indicates the audio "m=" section 
          in the answer as the answerer-tagged "m=" section, and assigns the answerer BUNDLE address:port to that "m=" section.</li>
        </ul>
        <t keepWithNext="true">SDP Offer (1)</t>
        <sourcecode type="sdp">
    v=0
    o=alice 2890844526 2890844526 IN IP6 2001:db8::3
    s=
    c=IN IP6 2001:db8::3
    t=0 0
    a=group:BUNDLE foo bar

    m=audio 10000 RTP/AVP 0 8 97
    b=AS:200
    a=mid:foo
    a=rtcp-mux
    a=rtpmap:0 PCMU/8000
    a=rtpmap:8 PCMA/8000
    a=rtpmap:97 iLBC/8000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 10000 RTP/AVP 31 32
    b=AS:1000
    a=mid:bar
    a=rtpmap:31 H261/90000
    a=rtpmap:32 MPV/90000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 50000 RTP/AVP 66
    b=AS:1000
    a=mid:zen
    a=rtcp-mux
    a=rtpmap:66 H261/90000
</sourcecode>
        <t keepWithNext="true">SDP Answer (2)</t>
        <sourcecode type="sdp">
    v=0
    o=bob 2808844564 2808844564 IN IP6 2001:db8::1
    s=
    c=IN IP6 2001:db8::1
    t=0 0
    a=group:BUNDLE foo bar

    m=audio 20000 RTP/AVP 0
    b=AS:200
    a=mid:foo
    a=rtcp-mux
    a=rtpmap:0 PCMU/8000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 20000 RTP/AVP 32
    b=AS:1000
    a=mid:bar
    a=rtpmap:32 MPV/90000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 60000 RTP/AVP 66
    b=AS:1000
    a=mid:zen
    a=rtcp-mux
    a=rtpmap:66 H261/90000
</sourcecode>
      </section>
      <section anchor="sec-example-off-dis">
        <name>Example: Offerer Disables a Media Description within a BUNDLE Group</name>
        <t>
        The example below shows:
        </t>
        <ul>
          <li>A subsequent offer, in which the offerer disables (by assigning a zero port value) an "m=" section (video), indicated by the "zen"
          identification-tag, from a previously negotiated BUNDLE group; indicates one of the bundled "m=" sections (audio) 
          remaining active in the BUNDLE group as the offerer-tagged "m=" section; and assigns the offerer BUNDLE address:port to that "m=" section.</li>
          <li>A subsequent answer, in which the answerer disables the "m=" section, indicates the audio "m=" section 
          in the answer as the answerer-tagged "m=" section, and assigns the answerer BUNDLE address:port to that "m=" section.</li>
        </ul>
        <t keepWithNext="true">SDP Offer (1)</t>
        <sourcecode type="sdp">
    v=0
    o=alice 2890844526 2890844526 IN IP6 2001:db8::3
    s=
    t=0 0
    a=group:BUNDLE foo bar

    m=audio 10000 RTP/AVP 0 8 97
    c=IN IP6 2001:db8::3
    b=AS:200
    a=mid:foo
    a=rtcp-mux
    a=rtpmap:0 PCMU/8000
    a=rtpmap:8 PCMA/8000
    a=rtpmap:97 iLBC/8000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 10000 RTP/AVP 31 32
    c=IN IP6 2001:db8::3
    b=AS:1000
    a=mid:bar
    a=rtpmap:31 H261/90000
    a=rtpmap:32 MPV/90000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 0 RTP/AVP 66
    a=mid:zen
    a=rtpmap:66 H261/90000
</sourcecode>
        <t keepWithNext="true">SDP Answer (2)</t>
        <sourcecode type="sdp">
    v=0
    o=bob 2808844564 2808844564 IN IP6 2001:db8::1
    s=
    t=0 0
    a=group:BUNDLE foo bar

    m=audio 20000 RTP/AVP 0
    c=IN IP6 2001:db8::1
    b=AS:200
    a=mid:foo
    a=rtcp-mux
    a=rtpmap:0 PCMU/8000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 20000 RTP/AVP 32
    c=IN IP6 2001:db8::1
    b=AS:1000
    a=mid:bar
    a=rtpmap:32 MPV/90000
    a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:mid

    m=video 0 RTP/AVP 66
    a=mid:zen
    a=rtpmap:66 H261/90000
</sourcecode>
      </section>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.ietf-avtext-lrr" to="LLR-RTCP"/>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>

<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3264.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3550.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3605.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3629.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3711.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4566.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4961.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5761.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5764.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5888.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6347.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7941.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8285.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8445.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8839.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8840.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8858.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8859.xml"/>


      </references>
      <references>
        <name>Informative References</name>

	
<xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-avtext-lrr.xml"/>

<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2543.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3261.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3611.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4585.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5104.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5576.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7160.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7201.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7656.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7657.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8829.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8838.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8843.xml"/>


<reference anchor="Err6431" quote-title="false" target="https://www.rfc-editor.org/errata/eid6431"> 
   <front> 
      <title>Erratum ID 6431</title>
      <author>
         <organization>RFC Errata</organization>
      </author> 
   </front> 
   <refcontent>RFC 8843</refcontent>
</reference>

<reference anchor="Err6437" quote-title="false" target="https://www.rfc-editor.org/errata/eid6437"> 
   <front> 
      <title>Erratum ID 6437</title>
      <author>
         <organization>RFC Errata</organization>
      </author> 
   </front> 
   <refcontent>RFC 8843</refcontent>
</reference>


      </references>
    </references>
    <section anchor="appendix">
      <name>Design Considerations</name>
      <t>
        One of the main issues regarding the BUNDLE grouping
        extensions has been whether, in offers and answers, the same
        port value can be inserted in "m=" lines associated with a
        BUNDLE group, as the purpose of the extension is to negotiate
        the usage of a single transport for media specified by the
        "m=" sections. Issues with both approaches, discussed in <xref
        target="appendix"/>, have been raised. The outcome was to
        specify a mechanism that uses offers with both different and
        identical port values.
      </t>
      <t>
        Below are the primary issues that have been considered when defining the "BUNDLE"
        grouping extension:
      </t>
      <ol type="%d)">
        <li>Interoperability with existing User Agents (UAs).</li>
        <li>Interoperability with intermediary Back-to-Back User Agent (B2BUA) and proxy entities.</li>
        <li>The number of ICE candidates and the time to gather them.</li>
        <li>Different error scenarios and when they occur.</li>
        <li>SDP offer/answer impacts, including usage of port number value zero.</li>
      </ol>
      <section>
        <name>UA Interoperability</name>
        <t>
        Consider the following SDP offer/answer exchange, where Alice sends an offer to Bob:
        </t>
        <t keepWithNext="true">SDP Offer</t>
        <sourcecode type="sdp">
    v=0
    o=alice 2890844526 2890844526 IN IP4 atlanta.example.com
    s=
    c=IN IP4 atlanta.example.com
    t=0 0

    m=audio 10000 RTP/AVP 97
    a=rtpmap:97 iLBC/8000
    m=video 10002 RTP/AVP 97
    a=rtpmap:97 H261/90000
</sourcecode>
        <t keepWithNext="true">SDP Answer</t>
        <sourcecode type="sdp">
    v=0
    o=bob 2808844564 2808844564 IN IP4 biloxi.example.com
    s=
    c=IN IP4 biloxi.example.com
    t=0 0

    m=audio 20000 RTP/AVP 97
    a=rtpmap:97 iLBC/8000
    m=video 20002 RTP/AVP 97
    a=rtpmap:97 H261/90000
</sourcecode>
        <t>
        <xref target="RFC4961"/> specifies a way of doing symmetric RTP, but that is a later
        extension to RTP, and Bob cannot assume that Alice supports <xref target="RFC4961"/>. This
        means that Alice may be sending RTP from a different port than 10000 or
        10002 -- some implementations simply send the RTP from an ephemeral
        port. When Bob's endpoint receives an RTP packet, the only way that Bob
        knows if the packet is to be passed to the video or audio codec is by looking at
        the port it was received on.
        This prompted some SDP implementations to use a port number as an index to find the 
        correct "m=" line in the SDP, since each "m"= section contains a different port number. As a result, some
        implementations that do support symmetric RTP and ICE still use an SDP data
        structure where SDP with "m=" sections with the same port such as:
        </t>
        <t keepWithNext="true">SDP Offer</t>
        <sourcecode type="sdp">
    v=0
    o=alice 2890844526 2890844526 IN IP4 atlanta.example.com
    s=
    c=IN IP4 atlanta.example.com
    t=0 0

    m=audio 10000 RTP/AVP 97
    a=rtpmap:97 iLBC/8000
    m=video 10000 RTP/AVP 98
    a=rtpmap:98 H261/90000
</sourcecode>
        <t>
        will result in the second "m=" section being considered an SDP error
        because it has the same port as the first line.
        </t>
      </section>
      <section>
        <name>Usage of Port Number Value Zero</name>
        <t>
        In an offer or answer, the media specified by an "m=" section can be
        disabled/rejected by setting the port number value to zero. This is different
        from, e.g., using the SDP direction attributes, where RTCP traffic will
        continue even if the SDP 'inactive' attribute is indicated for the
        associated "m=" section.
        </t>
        <t>
        If each "m=" section associated with a BUNDLE group were to contain different
        port values and one of those port values were used for a BUNDLE address:port
        associated with the BUNDLE group, problems would occur if an endpoint wants to
        disable/reject the "m=" section associated with that port by setting the port
        value to zero. After that, no "m=" section would contain the port value that
        is used for the BUNDLE address:port. In addition, it is unclear what would happen
        to the ICE candidates associated with the "m=" section, as they are also used for
        the BUNDLE address:port.
        </t>
      </section>
      <section>
        <name>B2BUA and Proxy Interoperability</name>
        <t>
        Some back-to-back user agents may be configured in a mode where if
        the incoming call leg contains an SDP attribute the B2BUA does not
        understand, the B2BUA still generates that SDP attribute in the Offer
        for the outgoing call leg. Consider a B2BUA that did not understand
        the SDP 'rtcp' attribute, defined in <xref target="RFC3605"/>, yet acted this way.
        Further, assume that the B2BUA was configured to tear down any call
        where it did not see any RTCP for 5 minutes. In this case, if the B2BUA
        received an Offer like:
        </t>
        <t keepWithNext="true">SDP Offer</t>
        <sourcecode type="sdp">
    v=0
    o=alice 2890844526 2890844526 IN IP4 atlanta.example.com
    s=
    c=IN IP4 atlanta.example.com
    t=0 0

    m=audio 49170 RTP/AVP 0
    a=rtcp:53020
</sourcecode>
        <t>
      it would be looking for RTCP on port 49171 but would not see any
      because the RTCP would be on port 53020, and after five minutes, it would
      tear down the call. Similarly, a B2BUA that did not understand BUNDLE yet
      put it in its offer may be looking for media on the wrong port and
      tear down the call. It is worth noting that a B2BUA that generated an
      Offer with capabilities it does not understand is not compliant with the
      specifications.
        </t>
        <section>
          <name>Traffic Policing</name>
          <t>
          Sometimes intermediaries do not act as B2BUAs, in the sense that
          they don't modify SDP bodies nor do they terminate SIP dialogs.
          However, they may still use SDP information (e.g., IP address and
          port) in order to control traffic gating functions and to set
          traffic policing rules. There might be rules that will trigger
          a session to be terminated in case media is not sent or received
          on the ports retrieved from the SDP. This typically occurs once the
          session is already established and ongoing.
          </t>
        </section>
        <section>
          <name>Bandwidth Allocation</name>
          <t>
          Sometimes, intermediaries do not act as B2BUAs, in the sense that
          they don't modify SDP bodies nor do they terminate SIP dialogs.
          However, they may still use SDP information (e.g., codecs and
          media types) in order to control bandwidth allocation functions.
          The bandwidth allocation is done per "m=" section, which means that
          it might not be enough if media specified by all "m=" sections
          try to use that bandwidth. That may simply lead to either a bad
          user experience or termination of the call.
          </t>
        </section>
      </section>
      <section>
        <name>Candidate Gathering</name>
        <t>
        When using ICE, a candidate needs to be gathered for each port. This
        takes approximately 20 ms extra for each extra "m=" section due to the NAT
        pacing requirements.


	All of this gathering can be overlapped with other
        things while, e.g., a web page is loading to minimize the impact. If the client
        only wants to generate Traversal Using Relays around NAT (TURN) or STUN ICE candidates for one of the "m="
        lines and then use Trickle ICE <xref target="RFC8838"/>
        to get the non-host ICE candidates for the rest of the "m=" sections, it <bcp14>MAY</bcp14> do
        that and will not need any additional gathering time.
        </t>
        <t>
        Some people have suggested a TURN extension to get a bunch of TURN
        allocations at once. This would only provide a single STUN result, so in
        cases where the other end did not support BUNDLE, it may cause more use of
        the TURN server, but it would be quick in the cases where both sides
        supported BUNDLE and would fall back to a successful call in the other
        cases.
        </t>
      </section>
      </section>
      <section anchor="sec-acks" numbered="false">
        <name>Acknowledgements</name>
        <t>
      The usage of the SDP grouping extension for negotiating bundled media is
      based on similar alternatives proposed by <contact fullname="Harald       Alvestrand"/> and <contact fullname="Cullen Jennings"/>. The BUNDLE
      extension described in this document is based on the different
      alternative proposals, and text (e.g., SDP examples) has been borrowed
      (and, in some cases, modified) from those alternative proposals.
        </t>
        <t>
      The SDP examples are also modified versions from the ones in the Alvestrand
      proposal.
        </t>
        <t>
      Thanks to <contact fullname="Paul Kyzivat"/>, <contact fullname="Martin Thomson"/>, <contact fullname="Flemming Andreasen"/>, <contact fullname="Thomas Stach"/>, <contact fullname="Ari Keränen"/>, <contact fullname="Adam Roach"/>, <contact fullname="Christian Groves"/>,
      <contact fullname="Roman Shpount"/>, <contact fullname="Suhas       Nandakumar"/>, <contact fullname="Nils Ohlmeier"/>, <contact fullname="Jens Guballa"/>, <contact fullname="Raju Makaraju"/>, <contact fullname="Justin Uberti"/>, <contact fullname="Taylor Brandstetter"/>,
      <contact fullname="Byron Campen"/>, and <contact fullname="Eric       Rescorla"/> for reading the text and providing useful feedback.
        </t>
        <t>
	Thanks to <contact fullname="Bernard Aboba"/>, <contact fullname="Peter  Thatcher"/>, <contact fullname="Justin Uberti"/>, and <contact fullname="Magnus Westerlund"/> for providing the text for the section on
	RTP/RTCP stream association.
        </t>
        <t>
      Thanks to <contact fullname="Magnus Westerlund"/>, <contact fullname="Colin Perkins"/>, and <contact fullname="Jonathan Lennox"/>
      for providing help and text on the RTP/RTCP procedures.
        </t>
        <t>
       Thanks to <contact fullname="Charlie Kaufman"/> for performing the Sec-Dir review.
        </t>
        <t>
       Thanks to <contact fullname="Linda Dunbar"/> for performing the Gen-ART review.
        </t>
        <t>
      Thanks to Spotify for providing music for the countless hours of
      document editing.
        </t>
    </section>
  </back>
</rfc>
