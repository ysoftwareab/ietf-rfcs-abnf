<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

<rfc consensus="true" xmlns:xi="http://www.w3.org/2001/XInclude"
     ipr="trust200902" docName="draft-ietf-capport-api-08" number="8908" category="std"
     obsoletes="" updates="" submissionType="IETF" xml:lang="en"
     tocInclude="true" sortRefs="true" symRefs="true" version="3"> 
  <!-- xml2rfc v2v3 conversion 2.39.0 -->
  <front>
    <title abbrev="Captive Portal API">Captive Portal API</title>
    <seriesInfo name="RFC" value="8908"/>
    <author initials="T." surname="Pauly" fullname="Tommy Pauly" role="editor">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino</city> 
	  <region>CA</region>
	  <code>95014</code>
          <country>United States of America</country>
        </postal>
        <email>tpauly@apple.com</email>
      </address>
    </author>
    <author initials="D." surname="Thakore" fullname="Darshak Thakore" role="editor">
      <organization>CableLabs</organization>
      <address>
        <postal>
          <street>858 Coal Creek Circle</street>
          <city>Louisville</city> 
	  <region>CO</region> 
	  <code>80027</code>
          <country>United States of America</country>
        </postal>
        <email>d.thakore@cablelabs.com</email>
      </address>
    </author>
    <date month="September" year="2020" />
    <workgroup>Captive Portal Interaction</workgroup>

    <abstract>
      <t>This document describes an HTTP API that allows clients to interact
      with a Captive Portal system. With this API, clients can discover how to
      get out of captivity and fetch state about their Captive Portal
      sessions.</t> 
    </abstract>
  </front>
  <middle>
    <section anchor="introduction" numbered="true" toc="default">
      <name>Introduction</name>
      <t>This document describes a HyperText Transfer Protocol (HTTP)
      Application Programming Interface (API) that allows clients to interact with
      a Captive Portal system. The API defined in this document has been
      designed to meet the requirements in the Captive Portal Architecture
      <xref target="I-D.ietf-capport-architecture"
	    format="default"/>. Specifically, the API provides:</t> 
      <ul spacing="normal">
        <li>The state of captivity (whether or not the client has access to
	the Internet).</li> 
        <li>A URI of a user-facing web portal that can be used to get out of
	captivity.</li> 
        <li>Authenticated and encrypted connections, using TLS for connections
	to both the API and user-facing web portal.</li> 
      </ul>
    </section>
    <section anchor="terms" numbered="true" toc="default">
      <name>Terminology</name>
      <t>This document leverages the terminology and components described in
      <xref target="I-D.ietf-capport-architecture" format="default"/> and
      additionally defines the following terms:</t> 
      <dl newline="true" spacing="normal">
        <dt>Captive Portal Client</dt>
	<dd>The client that interacts with the Captive
	Portal API is typically some application running on the user equipment
	that is connected to the captive network. This is also referred to as
	the "client" in this document.</dd> 
        <dt>Captive Portal API Server</dt> 
	<dd>The server exposing the APIs defined in
	this document to the client. This is also referred to as the "API
	server" in this document.</dd> 
      </dl>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL 
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>", 
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are
    to be interpreted as 
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
    </section>

    <section anchor="workflow" numbered="true" toc="default">
      <name>Workflow</name>
      <t>The Captive Portal Architecture defines several categories of
      interaction between clients and Captive Portal systems:</t> 
      <ol spacing="normal">
        <li>Provisioning, in which a client discovers that a network has a
	captive portal and learns the URI of the API server.</li> 
        <li>API Server interaction, in which a client queries the state of
	captivity and retrieves the necessary information to get out of
	captivity</li> 
        <li>Enforcement, in which the enforcement device in the network blocks
	disallowed traffic.</li> 
      </ol>
      <t>This document defines the mechanisms used in the second category. It
      is assumed that the location of the Captive Portal API server has been
      discovered by the client as part of provisioning. A set of mechanisms
      for discovering the API server endpoint is defined in <xref
      target="RFC8910" format="default"/>.</t> 
    </section>
    <section anchor="api-details" numbered="true" toc="default">
      <name>API Connection Details</name>
      <t>The API server endpoint <bcp14>MUST</bcp14> be accessed over HTTP
      using an https URI <xref target="RFC2818" format="default"/> and
      <bcp14>SHOULD</bcp14> use the default https port. For example, if the
      Captive Portal API server is hosted at "example.org", the URI of the API
      could be "https://example.org/captive-portal/api".</t> 
      <t>The client <bcp14>SHOULD NOT</bcp14> assume that the URI of the API
      server for a given network will stay the same and <bcp14>SHOULD</bcp14>
      rely on the discovery or provisioning process each time it joins the
      network.</t> 
      <t>As described in <xref target="I-D.ietf-capport-architecture"
      sectionFormat="of" section="3"/>, the identity 
      of the client needs to be visible to the Captive Portal API server in
      order for the server to correctly reply with the client's portal
      state. If the identifier used by the Captive Portal system is the
      client's set of IP addresses, the system needs to ensure that the same
      IP addresses are visible to both the API server and the enforcement
      device.</t> 
      <t>If the API server needs information about the client identity that is
      not otherwise visible to it, the URI provided to the client during
      provisioning <bcp14>SHOULD</bcp14> be distinct per client. Thus,
      depending on how the Captive Portal system is configured, the URI will
      be unique for each client host and between sessions for the same client
      host.</t> 
      <t>For example, a Captive Portal system that uses per-client session
      URIs could use "https://example.org/captive-portal/api/X54PD39JV" as its
      API URI.</t> 
      <section anchor="server-auth" numbered="true" toc="default">
        <name>Server Authentication</name>
        <t>The purpose of accessing the Captive Portal API over an HTTPS
	connection is twofold: first, the encrypted connection protects the
	integrity and confidentiality of the API exchange from other parties
	on the local network; second, it provides the client of the API an
	opportunity to authenticate the server that is hosting the API. This
	authentication allows the client to ensure that the entity providing
	the Captive Portal API has a valid certificate for the hostname
	provisioned by the network using the mechanisms defined in <xref
	target="RFC8910" format="default"/>, by validating
	that a DNS-ID <xref target="RFC6125" format="default"/> on the
	certificate is equal to the provisioned hostname.</t> 
        <t>Clients performing revocation checking will need some means of
	accessing revocation information for certificates presented by the API
	server. Online Certificate Status Protocol <xref target="RFC6960"
	format="default"/> (OCSP) stapling, using the TLS Certificate Status
	Request extension <xref target="RFC6066" format="default"/>,
	<bcp14>SHOULD</bcp14> be used. OCSP stapling allows a client to
	perform revocation checks without initiating new connections. To allow
	for other forms of revocation checking, especially for clients that do
	not support OCSP stapling, a captive network <bcp14>SHOULD</bcp14>
	permit connections to OCSP responders or Certificate Revocation Lists
	(CRLs) that are referenced by certificates provided by the API
	server. For more discussion on certificate revocation checks, see
	<xref target="RFC7525" sectionFormat="of" section="6.5">BCP 195</xref>. In
	addition to connections to OCSP responders and CRLs, a captive network
	<bcp14>SHOULD</bcp14> also permit connections to Network Time Protocol
	(NTP) <xref target="RFC5905" format="default"/> servers or other
	time-sync mechanisms to allow clients to accurately validate
	certificates.</t> 
        <t>Certificates with missing intermediate certificates that rely on
	clients validating the certificate chain using the URI specified in
	the Authority Information Access (AIA) extension <xref
	target="RFC5280" format="default"/> <bcp14>SHOULD NOT</bcp14> be used
	by the Captive Portal API server. If the certificates do require the
	use of AIA, the captive network <bcp14>MUST</bcp14> allow client
	access to the host specified in the URI.</t> 
        <t>If the client is unable to validate the certificate presented by
	the API server, it <bcp14>MUST NOT</bcp14> proceed with any of the
	behavior for API interaction described in this document. The client
	will proceed to interact with the captive network as if the API
	capabilities were not present. It may still be possible for the user
	to access the network if the network redirects a cleartext webpage to
	a web portal.</t> 
      </section>
    </section>
    <section anchor="json-keys" numbered="true" toc="default">
      <name>API State Structure</name>
      <t>The Captive Portal API data structures are specified in JavaScript
      Object Notation (JSON) <xref target="RFC8259"
      format="default"/>. Requests and responses for the Captive Portal API
      use the "application/captive+json" media type. Clients
      <bcp14>SHOULD</bcp14> include this media type as an Accept header in
      their GET requests, and servers <bcp14>MUST</bcp14> mark this media type
      as their Content-Type header in responses.</t> 
      <t>The following key <bcp14>MUST</bcp14> be included in the top level of
      the JSON structure returned by the API server:</t> 
<table anchor="tab1"> 
  <thead>
    <tr>
      <th>Key</th>   
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody> 
    <tr>
      <td>captive</td>
      <td>boolean</td>
      <td>Indicates whether the client is in a state of
        captivity, i.e, it has not satisfied the conditions to access the
        external network. If the client is captive (i.e., captive=true), it
        will still be allowed enough access for it to perform server
        authentication (<xref target="server-auth" format="default"/>).
      </td>
    </tr>
  </tbody>
</table>

<!--      <dl newline="true" spacing="normal">
        <dt>"captive" (boolean)</dt>
	<dd>This indicates whether the client is in a state of
	captivity, i.e, it has not satisfied the conditions to access the
	external network. If the client is captive (i.e., captive=true), it
	will still be allowed enough access for it to perform server
	authentication (<xref target="server-auth" format="default"/>).</dd> 
      </dl>-->
      <t>The following keys can be optionally included in the top level of the
      JSON structure returned by the API server:</t> 

<table anchor="tab2"> 
  <thead>
    <tr>
      <th>Key</th>   
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>         
    <tr>
      <td>user-portal-url</td>
      <td>string</td>
      <td>Provides the URL of a web portal that <bcp14>MUST</bcp14> be accessed over TLS with
      which a user can interact.</td>
    </tr>
    <tr>
      <td>venue-info-url</td>
      <td>string</td>
      <td>Provides the URL of a webpage or site that <bcp14>SHOULD</bcp14> be accessed over
      TLS on which the operator of the network has information that it wishes
      to share with the user (e.g., store info, maps, flight status, or entertainment).</td>
    </tr>
    <tr>
      <td>can-extend-session</td>
      <td>boolean</td>
      <td>Indicates that the URL specified
        as "user-portal-url" allows the user to extend a session once the
        client is no longer in a state of captivity. This provides a hint that
        a client system can suggest accessing the portal URL to the user when
        the session is near its limit in terms of time or bytes.
      </td>
    </tr>
    <tr>
      <td>seconds-remaining</td>
      <td>number</td>
      <td>An integer that indicates the number 
        of seconds remaining, after which the client will be placed into a 
        captive state. The API server <bcp14>SHOULD</bcp14> include this value
        if the client is not captive (i.e., captive=false) and the client
        session is time-limited and <bcp14>SHOULD</bcp14> omit this value for
        captive clients (i.e., captive=true) or when the session is not
        time-limited.
      </td>
    </tr>
    <tr>
      <td>bytes-remaining</td>
      <td>number</td>
      <td>An integer that indicates the number of bytes remaining, after
        which the client will be placed into a captive state. The byte 
        count represents the sum of the total number of IP packet (layer 3)
        bytes sent and received by the client, including IP headers. Captive
        Portal systems might not count traffic to whitelisted servers, such as
        the API server, but clients cannot rely on such behavior. The API 
        server <bcp14>SHOULD</bcp14> include this value if the client is not
        captive (i.e., captive=false) and the client session is byte-limited
        and <bcp14>SHOULD</bcp14> omit this value for captive clients
        (i.e., captive=true) or when the session is not byte-limited.
      </td>
    </tr>
  </tbody>
</table>

<!--
      <dl newline="true" spacing="normal">
        <dt>"user-portal-url" (string)</dt> 
	<dd>This provides the URL of a web portal that <bcp14>MUST</bcp14> be
	accessed over TLS with which a user can interact.</dd> 
        <dt>"venue-info-url" (string)</dt>
	<dd>This provides the URL of a webpage or site
	that <bcp14>SHOULD</bcp14> be accessed over TLS on which the operator
	of the network has information that it wishes to share with the user
	(e.g., store info, maps, flight status, or entertainment).</dd> 
        <dt>"can-extend-session" (boolean)</dt>
	<dd>This indicates that the URL specified
	as "user-portal-url" allows the user to extend a session once the
	client is no longer in a state of captivity. This provides a hint that
	a client system can suggest accessing the portal URL to the user when
	the session is near its limit in terms of time or bytes.</dd> 
        <dt>"seconds-remaining" (number)</dt>
	<dd>This is an integer that indicates the number
	of seconds remaining, after which the client will be placed into a
	captive state. The API server <bcp14>SHOULD</bcp14> include this value
	if the client is not captive (i.e., captive=false) and the client
	session is time-limited and <bcp14>SHOULD</bcp14> omit this value for
	captive clients (i.e., captive=true) or when the session is not
	time-limited.</dd> 
        <dt>"bytes-remaining" (number)</dt> 
	<dd>This is an integer that indicates the number of bytes remaining, after
	which the client will be in placed into a captive state. The byte
	count represents the sum of the total number of IP packet (layer 3)
	bytes sent and received by the client, including IP headers. Captive
	Portal systems might not count traffic to whitelisted servers, such as
	the API server, but clients cannot rely on such behavior. The API
	server <bcp14>SHOULD</bcp14> include this value if the client is not
	captive (i.e., captive=false) and the client session is byte-limited
	and <bcp14>SHOULD</bcp14> omit this value for captive clients
	(i.e., captive=true) or when the session is not byte-limited.</dd> 
      </dl>
-->
      <t>The valid JSON keys can be extended by adding entries to the Captive
      Portal API Keys Registry (<xref target="iana-field-reg"
      format="default"/>). If a client receives a key that it does not
      recognize, it <bcp14>MUST</bcp14> ignore the key and any associated
      values. All keys other than the ones defined in this document as
      "required" will be considered optional.</t> 
      <t>Captive Portal JSON content can contain per-client data that is not
      appropriate to store in an intermediary cache. Captive Portal API
      servers <bcp14>SHOULD</bcp14> set the Cache-Control header field in any
      responses to "private" or a more restrictive value, such as "no-store"
      <xref target="RFC7234" format="default"/>.</t> 
      <t>Client behavior for issuing requests for updated JSON content is
      implementation specific and can be based on user interaction or the
      indications of seconds and bytes remaining in a given session. If at any
      point the client does not receive valid JSON content from the API
      server, either due to an error or due to receiving no response, the
      client <bcp14>SHOULD</bcp14> continue to apply the most recent valid
      content it had received or, if no content had been received previously,
      proceed to interact with the captive network as if the API capabilities
      were not present.</t> 
    </section>
    <section anchor="example" numbered="true" toc="default">
      <name>Example Interaction</name>
      <t>Upon discovering the URI of the API server, 
      a client connected to a captive network
      will query the API server to retrieve information about
      its captive state and conditions to escape captivity. In this example,
      the client discovered the URI
      "https://example.org/captive-portal/api/X54PD39JV" using one of the
      mechanisms defined in <xref target="RFC8910"
      format="default"/>.</t> 
      <t>To request the Captive Portal JSON content, a client sends an HTTP
      GET request:</t>

<sourcecode type="http-message"><![CDATA[
GET /captive-portal/api/X54PD39JV HTTP/1.1
Host: example.org
Accept: application/captive+json
]]></sourcecode>
      <t>The server then responds with the JSON content for that client:</t>
<sourcecode type="http-message"><![CDATA[
HTTP/1.1 200 OK
Cache-Control: private
Date: Mon, 02 Mar 2020 05:07:35 GMT
Content-Type: application/captive+json

{
   "captive": true,
   "user-portal-url": "https://example.org/portal.html"
}
]]></sourcecode>
      <t>Upon receiving this information, the client will use it
      to direct the user to the web portal (as specified by the
      user-portal-url value) to enable access to the external network. Once
      the user satisfies the requirements for external network access, the
      client <bcp14>SHOULD</bcp14> query the API server again to verify that
      it is no longer captive.</t> 
      <t>When the client requests the Captive Portal JSON content after
      gaining external network access, the server responds with updated JSON
      content:</t> 
<sourcecode type="http-message"><![CDATA[
HTTP/1.1 200 OK
Cache-Control: private
Date: Mon, 02 Mar 2020 05:08:13 GMT
Content-Type: application/captive+json

{
   "captive": false,
   "user-portal-url": "https://example.org/portal.html",
   "venue-info-url": "https://flight.example.com/entertainment",
   "seconds-remaining": 326,
   "can-extend-session": true
}
]]></sourcecode>
    </section>
    <section anchor="security" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>One of the goals of this protocol is to improve the security of the
      communication between client hosts and Captive Portal systems. Client
      traffic is protected from passive listeners on the local network by
      requiring TLS-encrypted connections between the client and the Captive
      Portal API server, as described in <xref target="api-details"
      format="default"/>. All communication between the clients and the API
      server <bcp14>MUST</bcp14> be encrypted.</t> 
      <t>In addition to encrypting communications between clients and Captive
      Portal systems, this protocol requires a basic level of authentication
      from the API server, as described in <xref target="server-auth"
      format="default"/>. Specifically, the API server <bcp14>MUST</bcp14>
      present a valid certificate on which the client can perform revocation
      checks. This allows the client to ensure that the API server has
      authority for the hostname that was provisioned by the network using
      <xref target="RFC8910" format="default"/>. Note that
      this validation only confirms that the API server matches what the
      network's provisioning mechanism (such as DHCP or IPv6 Router
      Advertisements) provided; it is not validating the security of those
      provisioning mechanisms or the user's trust relationship to the
      network.</t> 
      <section anchor="privacy" numbered="true" toc="default">
        <name>Privacy Considerations</name>
        <t>Information passed between a client and the user-facing web portal
	may include a user's personal information, such as a full name and
	credit card details. Therefore, it is important that both the
	user-facing web portal and the API server that points a client to the
	web portal are only accessed over encrypted connections.</t> 
        <t>It is important to note that although communication to the
	user-facing web portal requires use of TLS, the authentication only
	validates that the web portal server matches the name in the URI
	provided by the API server. Since this is not a name that a user typed
	in, the hostname of the website that would be presented to the user
	may include "confusable characters", which can mislead the user. See
	<xref target="RFC8264" sectionFormat="of" section="12.5"/> for a
	discussion of confusable characters.</t> 
      </section>
    </section>
    <section anchor="iana-section" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>IANA has registered the
      "application/captive+json" media type (<xref target="iana-json"
      format="default"/>) and created a registry for fields in that format (<xref
      target="iana-field-reg" format="default"/>).</t> 
      <section anchor="iana-json" numbered="true" toc="default">
        <name>Captive Portal API JSON Media Type Registration</name>
        <t>This document registers the media type for Captive Portal API JSON
	text, "application/captive+json".</t> 
	<dl newline="false" spacing="normal">
        <dt>Type name:</dt>
	<dd>application</dd>
        <dt>Subtype name:</dt>
	<dd>captive+json</dd>
        <dt>Required parameters:</dt>
	<dd>N/A</dd>
        <dt>Optional parameters:</dt>
	<dd>N/A</dd>
        <dt>Encoding considerations:</dt>
	<dd>Encoding considerations are identical to those specified for the
	"application/json" media type.</dd> 
        <dt>Security considerations:</dt>
	<dd>See <xref target="security" format="default"/></dd>
        <dt>Interoperability considerations:</dt>
	<dd>This document specifies format of conforming messages and the
	interpretation thereof.</dd> 
        <dt>Published specification:</dt> 
	<dd>RFC 8908</dd>
        <dt>Applications that use this media type:</dt>
	<dd>This media type is intended to be used by servers presenting the
	Captive Portal API, and clients connecting to such captive
	networks.</dd> 
        <dt>Fragment identifier considerations:</dt>
	<dd>N/A</dd>
        <dt>Additional Information:</dt>
	<dd>N/A</dd>
        <dt>Person and email address to contact for further information:</dt>
	<dd><br/>See Authors' Addresses section</dd>
        <dt>Intended usage:</dt>
	<dd>COMMON</dd>
        <dt>Restrictions on usage:</dt>
	<dd>N/A</dd>
        <dt>Author:</dt>
	<dd>CAPPORT IETF WG</dd>
        <dt>Change controller:</dt>
	<dd>IETF</dd>
	</dl>
      </section>
      <section anchor="iana-field-reg" numbered="true" toc="default">
        <name>Captive Portal API Keys Registry</name>
        <t>IANA has created a new registry called "Captive
	Portal API Keys", which reserves JSON keys for use in Captive
	Portal API data structures. The initial contents of this registry are
	provided in <xref target="json-keys" format="default"/>.</t> 
        <t>Each entry in the registry contains the following fields:</t>
        <dl newline="false" spacing="normal">
          <dt>Key:</dt>
          <dd>The JSON key being registered in string format.</dd>
          <dt>Type:</dt>
          <dd>The type of the JSON value to be stored, as one of the value
	  types defined in <xref target="RFC8259" format="default"/>.</dd> 
          <dt>Description:</dt>
          <dd>A brief description explaining the meaning of the value, how it
	  might be used, and/or how it should be interpreted by clients.</dd> 
          <dt>Reference:</dt>
          <dd>A reference to a specification that defines the key and explains
	  its usage.</dd> 
        </dl>
        <t>New assignments for the "Captive Portal API Keys" registry will be
	administered by IANA using the Specification Required policy <xref
	target="RFC8126" format="default"/>. The designated expert is expected
	to validate the existence of documentation describing new keys in a
	permanent, publicly available specification, such as an Internet-Draft
	or RFC. The expert is expected to validate that new keys have a clear
	meaning and do not create unnecessary confusion or overlap with
	existing keys. Keys that are specific to nongeneric use cases,
	particularly ones that are not specified as part of an IETF document,
	are encouraged to use a domain-specific prefix.</t>
      </section>
    </section>
  </middle>
  <back>
<displayreference target="I-D.ietf-capport-architecture" to="CAPPORT-ARCH"/>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6125.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6960.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6066.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5905.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5280.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8259.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7234.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml"/>
      </references>
      <references>
        <name>Informative References</name>
<!--  draft-ietf-capport-architecture-08: Submitted to IESG for Publication -->
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-capport-architecture-08.xml"/>

<!-- [rfced] Note that we have updated the reference for
draft-ietf-capport-rfc7710bis to refer to RFC-to-be 8910.  We expect to
initiate AUTH48 for RFC 8910 next week.   
-->

<!-- draft-ietf-capport-rfc7710bis-07: Submitted to IESG for Publication -->
<reference anchor='RFC8910' target="https://www.rfc-editor.org/info/rfc8910">
<front>
<title>Captive-Portal Identification in DHCP and Router Advertisement (RA)</title>
<author initials='W' surname='Kumari' fullname='Warren Kumari'>
    <organization />
</author>
<author initials='E' surname='Kline' fullname='Erik Kline'>
    <organization />
</author>
<date month='September' year='2020' />
</front>
<seriesInfo name='RFC' value='8910' />
<seriesInfo name="DOI" value="10.17487/RFC8910"/>
</reference>

        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7525.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8264.xml"/>
      </references>
    </references>
    <section anchor="thanksall" numbered="false" toc="default">
      <name>Acknowledgments</name>
      <t>This work was started by <contact fullname="Mark
      Donnelly"/> and <contact fullname="Margaret Cullen"/>. Thanks to
      everyone in the CAPPORT Working Group who has given input.</t> 
    </section>
  </back>
</rfc>
