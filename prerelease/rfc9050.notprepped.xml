<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" number="9050" consensus="true" ipr="trust200902" category="std" docName="draft-ietf-pce-pcep-extension-for-pce-controller-14" obsoletes="" updates="" submissionType="IETF" xml:lang="en" tocInclude="true" tocDepth="4" symRefs="true" sortRefs="false" version="3">
  <!-- xml2rfc v2v3 conversion 3.5.0 -->
  <front>
    <title abbrev="PCECC">Path Computation Element Communication Protocol (PCEP) Procedures and Extensions for Using the PCE as a Central Controller (PCECC) of LSPs</title>
    <seriesInfo name="RFC" value="9050"/>
    <author initials="Z" surname="Li" fullname="Zhenbin Li">
      <organization>Huawei Technologies</organization>
      <address>
        <postal>
          <street>Huawei Bld., No.156 Beiqing Rd.</street>
          <city>Beijing  </city>
          <region/>
          <code>100095</code>
          <country>China</country>
        </postal>
        <email>lizhenbin@huawei.com</email>
      </address>
    </author>
    <author initials="S" surname="Peng" fullname="Shuping Peng">
      <organization>Huawei Technologies</organization>
      <address>
        <postal>
          <street>Huawei Bld., No.156 Beiqing Rd.</street>
          <city>Beijing</city>
          <region/>
          <code>100095</code>
          <country>China</country>
        </postal>
        <email>pengshuping@huawei.com</email>
      </address>
    </author>
    <author initials="M" surname="Negi" fullname="Mahendra Singh Negi">
      <organization>RtBrick Inc</organization>
      <address>
        <postal>
          <street>N-17L, 18th Cross Rd, HSR Layout</street>
          <city>Bangalore</city>
          <region>Karnataka</region>
          <code>560102</code>
          <country>India</country>
        </postal>
        <email>mahend.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="Q" surname="Zhao" fullname="Quintin Zhao">
      <organization>Etheric Networks</organization>
      <address>
        <postal>
          <street>1009 S Claremont St.</street>
          <city>San Mateo</city>
          <region>CA</region>
          <code>94402</code>
          <country>United States of America</country>
        </postal>
        <email>qzhao@ethericnetworks.com</email>
      </address>
    </author>
    <author initials="C" surname="Zhou" fullname="Chao Zhou">
      <organization>HPE</organization>
      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country/>
        </postal>
        <email>chaozhou_us@yahoo.com</email>
      </address>
    </author>
    <date month="July" year="2021"/>
    <area>Routing</area>
    <workgroup>PCE Working Group</workgroup>
<keyword>SDN</keyword>
<keyword>CCI</keyword>
<keyword>Central Control</keyword>
    <abstract>
      <t>The Path Computation Element (PCE) is a core component of Software-Defined Networking (SDN) systems.</t>
      <t>A PCE as a Central Controller (PCECC) can
   simplify the processing of a distributed control plane by blending it
   with elements of SDN and without necessarily completely replacing it. 
   Thus, the Label Switched Path (LSP) can be
   calculated/set up/initiated and the label-forwarding entries can also be
   downloaded through a centralized PCE server to each network device
   along the path while leveraging the existing PCE technologies as
   much as possible.</t>
      <t>This document specifies the procedures and Path Computation Element Communication Protocol (PCEP) extensions for
   using the PCE as the central controller for provisioning labels along the path of the static LSP.
      </t>
    </abstract>
  </front>
  <middle>
    <section toc="default" numbered="true">
      <name>Introduction</name>
      <t>The Path Computation Element (PCE) <xref target="RFC4655" format="default"/> was developed to offload the
   path computation function from routers in an MPLS traffic-engineered (TE)
   network.  It can compute optimal paths for
   traffic across a network and can also update the paths to reflect
   changes in the network or traffic demands. Since then, the role and function of the PCE have grown to
   cover a number of other uses (such as GMPLS <xref target="RFC7025" format="default"/>) and to allow
   delegated control <xref target="RFC8231" format="default"/> and PCE-initiated use of network
   resources <xref target="RFC8281" format="default"/>.</t>
      <t>According to <xref target="RFC7399" format="default"/>, Software-Defined Networking (SDN) refers to a
   separation between the control elements and the forwarding components
   so that software running in a centralized system, called a
   controller, can act to program the devices in the network to behave
   in specific ways.  A required element in an SDN architecture is a
   component that plans how the network resources will be used and how
   the devices will be programmed.  It is possible to view this
   component as performing specific computations to place traffic flows
   within the network given knowledge of the availability of network
   resources, how other forwarding devices are programmed, and the way
   that other flows are routed.  This is the function and purpose of a
   PCE, and the way that a PCE integrates into a wider network control
   system (including an SDN system) is presented in <xref target="RFC7491" format="default"/>.</t>
      <t>In early PCE implementations, where the PCE was used to derive paths
   for MPLS Label Switched Paths (LSPs), paths were requested by network
   elements (known as Path Computation Clients (PCCs)), and the results
   of the path computations were supplied to network elements using the
   Path Computation Element Communication Protocol (PCEP) <xref target="RFC5440" format="default"/>.
   This protocol was later extended to allow a PCE to send unsolicited
   requests to the network for LSP establishment <xref target="RFC8281" format="default"/>.</t>
      <t>The PCE was developed to derive paths for MPLS LSPs, which are supplied to the head end of the LSP using the PCEP. But SDN has a broader 
   applicability than signaled MPLS and GMPLS TE networks, and the PCE may be used to determine paths in a range
   of use cases. PCEP has been proposed as a control protocol for
   use in these environments to allow the PCE to be fully enabled as a
   central controller.</t>
      <t><xref target="RFC8283" format="default"/> introduces the architecture for the PCE as a central
   controller as an extension to the architecture described in <xref target="RFC4655" format="default"/>
   and assumes the continued use of PCEP as the protocol used between the PCE and PCC. <xref target="RFC8283" format="default"/>  further examines the motivations and applicability
   for PCEP as a Southbound Interface (SBI) and introduces the implications for the
   protocol.  <xref target="I-D.ietf-teas-pcecc-use-cases" format="default"/> describes the use cases for
   the PCECC architecture.</t>
      <t>A PCECC can
   simplify the processing of a distributed control plane by blending it
   with elements of SDN and without necessarily completely replacing it. 
   Thus, the LSP can be
   calculated/set up/initiated and the label-forwarding entries can also be
   downloaded through a centralized PCE server to each network device
   along the path while leveraging the existing PCE technologies as
   much as possible.</t>
      <t>This document specifies the procedures and PCEP extensions for
   using the PCE as the central controller for static LSPs, where 
   LSPs can be provisioned as explicit label instructions at each
   hop on the end-to-end path.  Each router along the path must be
   told what label-forwarding instructions to program and what resources
   to reserve.  The PCE-based controller keeps a view of the network and
   determines the paths of the end-to-end LSPs, and the controller uses PCEP to
   communicate with each router along the path of the end-to-end LSP. </t>
      <t>While this document is focused on the procedures for the static LSPs (referred to as the basic PCECC mode in <xref target="SEC_M" format="default"/>), the mechanisms and protocol encodings are specified in such a way that extensions for other use cases are easy to achieve. For example, the extensions for the PCECC for Segment Routing (SR) are specified in <xref target="I-D.ietf-pce-pcep-extension-pce-controller-sr" format="default"/> and <xref target="I-D.dhody-pce-pcep-extension-pce-controller-srv6" format="default"/>.</t>
    </section>
    <section toc="default" numbered="true">
      <name>Terminology</name>
      <t>The terminology used in this document is the same as that described in the 
       <xref target="RFC8283" format="default"/>.</t>
      <section toc="default" numbered="true">
        <name>Requirements Language</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
      </section>
    </section>
    <section toc="default" anchor="SEC_M" numbered="true">
      <name>Basic PCECC Mode</name>
      <t>In this mode, LSPs are provisioned as explicit label instructions at each
   hop on the end-to-end path. Each router along the path must be
   told what label-forwarding instructions to program and what resources
   to reserve. The controller uses PCEP to communicate with each router
   along the path of the end-to-end LSP.</t>
      <t><xref target="RFC8283" format="default"/> examines the motivations and applicability for the
   PCECC and use of PCEP as an SBI. <xref target="RFC8283" sectionFormat="of" section="3.1.2"/> 
   highlights the use of the PCECC for label allocation along the static LSPs, and 
   it simplifies the processing of a distributed
   control plane by blending it with elements of SDN and without
   necessarily completely replacing it. This allows the operator to introduce 
   the advantages of SDN (such as programmability) into the network. Further, <xref target="I-D.ietf-teas-pcecc-use-cases" sectionFormat="of" section="3.3"/> describes some of the scenarios where the PCECC technique could be useful. <xref target="RFC8283" sectionFormat="of" section="4"/> 
   also describes the implications on the protocol when used as an SDN SBI. The operator needs to evaluate the advantages offered by the PCECC against the operational and scalability needs of the PCECC.  </t>
      <t>As per <xref target="RFC8283" sectionFormat="of" section="3.1.2"/>, the PCE-based controller will take responsibility for
   managing some part of the MPLS label space for each of the routers
   that it controls and may take wider responsibility for partitioning
   the label space for each router and allocating different parts for
   different uses. The PCC <bcp14>MUST NOT</bcp14> make allocations from the label space set aside for the PCE to avoid overlap and collisions of label allocations. It is <bcp14>RECOMMENDED</bcp14> that the PCE makes allocations (from the label space set aside for the PCE) for all nodes along the path. For the purpose
   of this document, it is assumed that the exclusive label range to be used by a PCE
   is known and set on both PCEP peers. A future extension could add the capability to
   advertise this range via a possible PCEP extension as well (see <xref target="I-D.li-pce-controlled-id-space" format="default"/>). 
   The rest of the processing is similar
   to the existing stateful PCE mechanism.</t>
      <t>This document also allows a case where the label space is maintained by the PCC and the labels are  
     allocated by it. In this case, the PCE should request the allocation from the 
     PCC, as described in <xref target="PCC" format="default"/>.</t>
    </section>
    <section toc="default" anchor="SEC_R" numbered="true">
      <name>PCEP Requirements</name>
      <t>The following key requirements should be considered when
   designing the PCECC-based solution:</t>
      <ol spacing="normal" type="1">
	<li>A PCEP speaker supporting this document needs to have the capability to
       advertise its PCECC capability to its peers.</li>
   <li>A PCEP speaker needs means to identify PCECC-based LSPs in the
       PCEP messages.</li>
        <li>PCEP procedures need to allow for PCC-based label allocations.</li>
        <li>PCEP procedures need to provide a means to update (or clean up) label entries downloaded to the PCC.</li>
        <li>PCEP procedures need to provide a means to synchronize the labels between
       the PCE and the PCC via PCEP messages.</li>
      </ol>
    </section>
    <section toc="default" anchor="Procedures" numbered="true">
      <name>Procedures for Using the PCE as a Central Controller (PCECC)</name>
      <section toc="default" numbered="true">
        <name>Stateful PCE Model</name>
        <t>Active stateful PCE is described in <xref target="RFC8231" format="default"/>. A PCE
    as a Central Controller (PCECC) reuses the existing active stateful PCE
    mechanism as much as possible to control LSPs.</t>
      </section>
      <section toc="default" numbered="true">
        <name>New LSP Functions</name>
        <t>Several new functions are required in PCEP to support the PCECC. This document extends the
   existing messages to support the new functions required by the PCECC:</t>
        <dl newline="false" spacing="normal">
          <dt>PCInitiate:</dt>
          <dd>A PCEP message described in <xref target="RFC8281" format="default"/>.
          A PCInitiate message is used to set up a PCE-initiated LSP based on a PCECC mechanism. 
          It is also extended for Central Controller Instructions (CCI) (download or clean up the label-forwarding instructions in the context of this document) on all nodes along the path, as described in <xref target="SEC_PCInitiate" format="default"/>.</dd>
          <dt>PCRpt:</dt>
          <dd>A PCEP message described in <xref target="RFC8231" format="default"/>.
          A PCRpt message is used to send the PCECC LSP Reports. It is also extended to report the set of CCI (label-forwarding instructions in the context of this document) received 
          from the PCE, as described in <xref target="SEC_PCRpt" format="default"/>. <xref target="sec_label_db_sync" format="default"/> describes the use of a PCRpt message during synchronization.</dd>
          <dt>PCUpd:</dt>
          <dd>A PCEP message described in <xref target="RFC8231" format="default"/>.
          A PCUpd message is used to send the PCECC LSP Updates.</dd>
        </dl>
    <t>The new functions defined in this document are mapped onto the PCEP messages, as
    shown in <xref target="SEC_FIG1" format="default"/>.</t>
        <table anchor="SEC_FIG1" align="center">
          <name>Functions Mapped to the PCEP Messages</name>
          <thead>
            <tr>
              <th align="left">Function</th>
              <th align="left">Message</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">PCECC Capability advertisement </td>
              <td align="left">Open </td>
            </tr>
            <tr>
              <td align="left">Label entry Add </td>
              <td align="left">PCInitiate </td>
            </tr>
            <tr>
              <td align="left">Label entry Clean up </td>
              <td align="left">PCInitiate </td>
            </tr>
            <tr>
              <td align="left">PCECC-Initiated LSP </td>
              <td align="left">PCInitiate </td>
            </tr>
            <tr>
              <td align="left">PCECC LSP Update </td>
              <td align="left">PCUpd </td>
            </tr>
            <tr>
              <td align="left">PCECC LSP State Report </td>
              <td align="left">PCRpt </td>
            </tr>
            <tr>
              <td align="left">PCECC LSP Delegation </td>
              <td align="left">PCRpt </td>
            </tr>
            <tr>
              <td align="left">PCECC Label Report </td>
              <td align="left">PCRpt </td>
            </tr>
          </tbody>
        </table>
      </section>
      <section toc="default" numbered="true">
        <name>New PCEP Object</name>
        <t>This document defines a new PCEP object called CCI (<xref target="SEC_CCI" format="default"/>) to specify the Central Controller Instructions. In the scope of this document, this is limited to label-forwarding instructions. Future documents can create new CCI object-types for other types of Central Controller Instructions. The CC-ID is the unique identifier for the CCI in PCEP. The PCEP messages are extended in this document to handle the PCECC operations.</t>
      </section>
      <section toc="default" numbered="true">
        <name>PCECC Capability Advertisement</name>
        <t>During the PCEP initialization phase, PCEP speakers (PCE or PCC) advertise their support of and willingness to use PCEP extensions for the PCECC using these elements in the OPEN message:</t>
        <ul spacing="normal">
          <li>a new Path Setup Type (PST) (<xref target="SEC_PATH" format="default"/>) in the PATH-SETUP-TYPE-CAPABILITY TLV to indicate support for PCEP extensions for the PCECC - 2 (Traffic engineering path is set up using PCECC mode)</li>
          <li>a new PCECC-CAPABILITY sub-TLV (<xref target="SEC_PCECC_CAP_TLV" format="default"/>) with the L bit set to '1' inside the PATH-SETUP-TYPE-CAPABILITY TLV to indicate a willingness to use PCEP extensions for the PCECC-based Central Controller Instructions for label download</li>
          <li>the STATEFUL-PCE-CAPABILITY TLV <xref target="RFC8231" format="default"/> (with the I flag set <xref target="RFC8281" format="default"/>)</li>
        </ul>
        <t>The new PST is to be listed in the PATH-SETUP-TYPE-CAPABILITY TLV by all PCEP speakers that support the PCEP extensions for the PCECC in this document.</t>
        <t>The new PCECC-CAPABILITY sub-TLV is included in the PATH-SETUP-TYPE-CAPABILITY TLV in the OPEN object to indicate a willingness to use the PCEP extensions for the PCECC during the established PCEP session. Using the L bit in this TLV, the PCE shows the intention to function as a PCECC server, and the PCC shows a willingness to act as a PCECC client for label download instructions (see <xref target="SEC_PCECC_CAP_TLV" format="default"/>).</t>
        <t>If the PCECC-CAPABILITY sub-TLV is advertised and the STATEFUL-PCE-CAPABILITY TLV is not advertised, or is advertised without the I flag set, in the OPEN object, the receiver <bcp14>MUST</bcp14>:</t>
        <ul spacing="normal">
          <li>send a PCErr message with Error-Type=19 (Invalid Operation) and Error-value=17 (Stateful PCE capability was not advertised) and</li>
          <li>terminate the session.</li>
        </ul>
        <t>If a PCEP speaker receives the PATH-SETUP-TYPE-CAPABILITY TLV with the PCECC PST but without the PCECC-CAPABILITY sub-TLV, it <bcp14>MUST</bcp14>:</t>
        <ul spacing="normal">
          <li>send a PCErr message with Error-Type=10 (Reception of an invalid object) and Error-value=33 (Missing PCECC Capability sub-TLV) and</li>
          <li>terminate the PCEP session.</li>
        </ul>
        <t>The PCECC-CAPABILITY sub-TLV <bcp14>MUST NOT</bcp14> be used without the corresponding PST being listed in the PATH-SETUP-TYPE-CAPABILITY TLV. If it is present without the corresponding PST listed in the PATH-SETUP-TYPE-CAPABILITY TLV, it <bcp14>MUST</bcp14> be ignored.</t>
        <t>If one or both speakers (PCE and PCC) have not indicated support and willingness to use the PCEP extensions for the PCECC, the PCEP extensions for the PCECC <bcp14>MUST NOT</bcp14> be used. If a PCECC operation is attempted when both speakers have not agreed in the OPEN messages, the receiver of the message <bcp14>MUST</bcp14>:</t>
        <ul spacing="normal">
          <li>send a PCErr message with Error-Type=19 (Invalid Operation) and Error-value=16 (Attempted PCECC operations when PCECC capability was not advertised) and</li>
          <li>terminate the PCEP session.</li>
        </ul>
        <t>A legacy PCEP speaker (that does not recognize the PCECC Capability sub-TLV) will ignore the sub-TLV in accordance with <xref target="RFC8408" format="default"/> and <xref target="RFC5440" format="default"/>. As per <xref target="RFC8408" format="default"/>, the legacy PCEP speaker, on receipt of an unsupported PST in a Request Parameter (RP) / Stateful PCE Request Parameter (SRP) object, will:</t>
        <ul spacing="normal">
          <li>send a PCErr message with Error-Type=21 (Invalid traffic engineering path setup type) and Error-value=1 (Unsupported path setup type) and </li>
          <li>terminate the PCEP session.</li>
        </ul>
   </section>
      <section toc="default" numbered="true">
        <name>LSP Operations</name>
        <t> The PCEP messages pertaining to a PCECC <bcp14>MUST</bcp14> include the PATH-SETUP-TYPE
   TLV <xref target="RFC8408" format="default"/> in the SRP object <xref target="RFC8231" format="default"/> with the PST set to '2'
   to clearly identify that the PCECC LSP is intended.</t>
        <section toc="default" anchor="PCE-I" numbered="true">
          <name>PCE-Initiated PCECC LSP</name>
          <t>The LSP instantiation operation is defined in <xref target="RFC8281" format="default"/>. In order to set up a PCE-initiated LSP based on the PCECC mechanism, a PCE
    sends a PCInitiate message with the PST set to '2' for the PCECC
    (see <xref target="SEC_PATH" format="default"/>) to the ingress PCC.</t>
          <t>The label-forwarding instructions (see <xref target="CCI" format="default"/>) from the PCECC are sent after the initial PCInitiate and PCRpt message exchange with the ingress PCC, as per <xref target="RFC8281" format="default"/> (see <xref target="SEC_FIG4" format="default"/>). This is done so that the PCEP-specific identifier for the LSP (PLSP-ID) and other LSP identifiers can be obtained from the ingress and can be included in the label-forwarding instruction in the next set of PCInitiate messages along the path, as described below.</t>
          <t>An LSP-IDENTIFIERS TLV <xref target="RFC8231" format="default"/> <bcp14>MUST</bcp14> be included for the PCECC LSPs; it uniquely identifies the LSP in the network. Note that the fields in the LSP-IDENTIFIERS TLV are described for the RSVP-signaled LSPs but are applicable to the PCECC LSP as well. The LSP object is included in the CCI (label download <xref target="SEC_CCI" format="default"/>) to identify the PCECC LSP for  this instruction. The PLSP-ID is the original identifier used by the ingress PCC, so a transit/egress Label Switching Router (LSR) could have multiple Central Controller Instructions that have the same PLSP-ID. The PLSP-ID in combination with the source (in the LSP-IDENTIFIERS TLV) <bcp14>MUST</bcp14> be unique. The PLSP-ID is included for maintainability reasons to ease debugging. As per <xref target="RFC8281" format="default"/>, the LSP object could also include the SPEAKER-ENTITY-ID TLV to identify the PCE that initiated these instructions. Also, the CC-ID is unique in each PCEP session, as described in <xref target="SEC_CCI" format="default"/>.</t>
          <t>On receipt of a PCInitiate message for the PCECC LSP, the PCC responds with a PCRpt message with the status set to 'Going-up' and carrying the assigned PLSP-ID (see <xref target="SEC_FIG4" format="default"/>). The ingress PCC also sets the D (Delegate) flag (see <xref target="RFC8231" format="default"/>) and C (Create) flag (see <xref target="RFC8281" format="default"/>) in the LSP object. When the PCE receives this PCRpt message with the PLSP-ID, it assigns labels along the path and sets up the path by sending a PCInitiate message to each node along the path of the LSP, as per the PCECC technique. The CC-ID uniquely identifies the Central Controller Instructions within a PCEP session. Each node along the path (PCC) responds with a PCRpt message to acknowledge the CCI with the PCRpt messages including the CCI and LSP objects. </t>
          <t>The ingress node would receive one CCI object with the O bit (out-label) set. The transit node(s) would receive two CCI objects with the in-label CCI without the O bit set and the out-label CCI with the O bit set. The egress node would receive one CCI object without the O bit set (see <xref target="SEC_FIG4" format="default"/>). A node can determine its role based on the setting of the O bit in the CCI object(s) and the LSP-IDENTIFIERS TLV in the LSP object.</t>
          <t>The LSP deletion operation for the PCE-initiated PCECC LSP is the same as defined
    in <xref target="RFC8281" format="default"/>. The PCE should further
    perform the label entry cleanup operation, as described in
	  <xref target="SEC_CLEANUP" format="default"/>, for the corresponding LSP.</t>

          <figure anchor="SEC_FIG4">
            <name>PCE-Initiated PCECC LSP</name>
<artwork align="left" alt="" name="" type=""><![CDATA[
              +-------+                              +-------+
              |PCC    |                              |  PCE  |
              |ingress|                              +-------+
       +------|       |                                  |
       | PCC  +-------+                                  |
       | transit| |                                      |
+------|        | |<--PCInitiate,PLSP-ID=0,PST=2---------| PCECC LSP
|PCC   +--------+ |                                      | Initiate
|egress  |  |     |----PCRpt,PLSP-ID=2,D=1,C=1---------->| PCECC LSP
+--------+  |     |       (GOING-UP)                     |
    |       |     |                                      |
    |<-------PCInitiate,CC-ID=X,PLSP-ID=2----------------| Label
    |       |     |                                      | download
    |--------PCRpt,CC-ID=X,PLSP-ID=2-------------------->| CCI
    |       |     |                                      |
    |       |<------PCInitiate,CC-ID=Y1,Y2,PLSP-ID=2-----| Label
    |       |     |                                      | download
    |       |-------PCRpt,CC-ID=Y1,Y2,PLSP-ID=2--------->| CCI
    |       |     |                                      |
    |       |     |<----PCInitiate,CC-ID=Z,PLSP-ID=2-----| Label
    |       |     |                                      | download
    |       |     |-----PCRpt,CC-ID=Z,PLSP-ID=2--------->| CCI
    |       |     |                                      |
    |       |     |<---PCUpd,PLSP-ID=2,PST=2,D=1---------| PCECC LSP
    |       |     |      (UP)                            | Update
    |       |     |----PCRpt,PLSP-ID=2,D=1,C=1---------->|
    |       |     |      (UP)                            |
]]></artwork>
          </figure>
          <t>Once the label operations are completed, the PCE <bcp14>MUST</bcp14> send a PCUpd message to the
    ingress PCC. As per <xref target="RFC8231" format="default"/>, the PCUpd message is with the D flag set.</t>
          <t>The PCECC LSPs are considered to be 'up' by default (on receipt of a PCUpd message from the PCE).
        The ingress could further choose to deploy a data-plane check
        mechanism and report the status back to the PCE via a PCRpt message to make sure that the correct label instructions are made along the path of the PCECC LSP (and it is ready to carry traffic). The exact mechanism is out of scope of this document.</t>
          <t>In the case where the label allocations are made by the PCC itself (see <xref target="PCC" format="default"/>), the PCE could request an allocation to be made by the PCC; then, the PCC would send a PCRpt message with the allocated label encoded in  
     the CC-ID object (as shown in <xref target="SEC_FIG4b" format="default"/>) in the configuration sequence from the egress towards the ingress along the path.</t>
          <figure anchor="SEC_FIG4b">
            <name>PCE-Initiated PCECC LSP (PCC Allocation)</name>
<artwork align="left" alt="" name="" type=""><![CDATA[
              +-------+                              +-------+
              |PCC    |                              |  PCE  |
              |ingress|                              +-------+
       +------|       |                                  |
       | PCC  +-------+                                  |
       | transit| |                                      |
+------|        | |<--PCInitiate,PLSP-ID=0,PST=2,--------| PCECC LSP
|PCC   +--------+ |                                      | Initiate
|egress  |  |     |----PCRpt,PLSP-ID=2,D=1,C=1---------->| PCECC LSP
+--------+  |     |       (GOING-UP)                     |
    |       |     |                                      |
    |<-------PCInitiate,CC-ID=X,PLSP-ID=2----------------| Label
    |       |     |     C=1,O=0                          | download
    |--------PCRpt,CC-ID=X,PLSP-ID=2-------------------->| CCI
    |       |     |     Label=L1                         |
    |       |<------PCInitiate,PLSP-ID=2,----------------| Labels
    |       |     |            CC-ID=Y1,C=1,O=0          | download
    |       |     |            CC-ID=Y2,C=0,O=1,L1       | CCI
    |       |-------PCRpt,PLSP-ID=2--------------------->|
    |       |     |       CC-ID=Y1,O=0,Label=L2          |
    |       |     |       CC-ID=Y2,O=1                   |
    |       |     |<----PCInitiate,CC-ID=Z,PLSP-ID=2-----| Label
    |       |     |                C=0,O=1,L2            | download
    |       |     |-----PCRpt,CC-ID=Z,PLSP-ID=2--------->| CCI
    |       |     |                                      |
    |       |     |<---PCUpd,PLSP-ID=2,PST=2,D=1---------| PCECC LSP
    |       |     |      (UP)                            | Update
]]></artwork>
          </figure>
          <t>In this example, it should be noted that the request is made to the  
     egress node with the C bit set in the CCI object to indicate that the  
     label allocation needs to be done by the egress, and the egress responds with the 
     allocated label to the PCE.  The PCE further informs the  
     transit PCC without setting the C bit to '1' in the CCI object for the out-label, but the C bit is set to '1' for the in-label, so the transit node makes the label allocation (for the in-label) and reports to the PCE. Similarly, the C bit is unset towards the ingress to complete all the label allocations for the PCECC LSP. </t>
    </section>
        <section toc="default" anchor="SEC_BASIC_SETUP" numbered="true">
          <name>PCC-Initiated PCECC LSP</name>
          <t>In order to set up an LSP based on the PCECC mechanism where the LSP is configured at the PCC, a PCC <bcp14>MUST</bcp14> delegate the LSP by
    sending a PCRpt message with the PST set for the PCECC (see <xref target="SEC_PATH" format="default"/>) and D (Delegate)
    flag (see <xref target="RFC8231" format="default"/>) set in the LSP object (see <xref target="SEC_FIG2" format="default"/>).</t>
    <t>When a PCE receives the initial PCRpt message with the D flag and PST set to '2', it <bcp14>SHOULD</bcp14> calculate the path and assign labels along the path in addition to setting up the path by sending a PCInitiate message to each node along the path of the LSP, as per the PCECC technique (see <xref target="SEC_FIG2" format="default"/>). The CC-ID uniquely identifies the CCI within a PCEP session. Each PCC further responds with the PCRpt messages, including the CCI and LSP objects.</t>
    <t>Once the CCI (label operations) are completed, the PCE <bcp14>MUST</bcp14> send the PCUpd message to the
    ingress PCC. As per <xref target="RFC8231" format="default"/>, this PCUpd message should include the path information calculated by the PCE. </t>
          <t>Note that the PCECC LSPs <bcp14>MUST</bcp14> be delegated to a PCE at all times. </t>
          <t>The LSP deletion operation for the PCECC LSPs
    is the same as defined in <xref target="RFC8231" format="default"/>. If the PCE receives
    a PCRpt message for LSP deletion, then it does label the cleanup operation, as
    described in <xref target="SEC_CLEANUP" format="default"/>, for the corresponding LSP.</t>
<t>The basic PCECC LSP setup sequence is as shown in <xref target="SEC_FIG2" format="default"/>.</t>
          <figure anchor="SEC_FIG2">
            <name>PCC-Initiated PCECC LSP</name>
<artwork align="left" alt="" name="" type=""><![CDATA[
               +-------+                             +-------+
               |PCC    |                             |  PCE  |
               |ingress|                             +-------+
        +------|       |                                 |
        | PCC  +-------+                                 |
        | transit| |                                     |
 +------|        | |---PCRpt,PLSP-ID=1,PST=2,D=1-------->| PCECC LSP
 |PCC   +--------+ |                                     |          
 |egress  |  |     |                                     |
 +--------+  |     |                                     |
     |       |     |                                     |
     |<-------PCInitiate,CC-ID=X,PLSP-ID=1---------------| Label
     |       |     |     L1,O=0                          | download
     |--------PCRpt,CC-ID=X,PLSP-ID=1------------------->| CCI
     |       |     |                                     |
     |       |<------PCInitiate,PLSP-ID=1,---------------| Labels
     |       |     |            CC-ID=Y1,O=0,L2          | download
     |       |     |            CC-ID=Y2,O=1,L1          | CCI
     |       |-------PCRpt,CC-ID=Y1,Y2,PLSP-ID=1-------->|
     |       |     |                                     |
     |       |     |<----PCInitiate,CC-ID=Z,PLSP-ID=1----| Label
     |       |     |                L2,O=1               | download
     |       |     |-----PCRpt,CC-ID=Z,PLSP-ID=1-------->| CCI
     |       |     |                                     |
     |       |     |<---PCUpd,PLSP-ID=1,PST=2,D=1--------| PCECC LSP
     |       |     |                                     | Update
     |       |     |                                     |
]]></artwork>
          </figure>
        <t>In the case where the label allocations are made by the PCC itself (see <xref target="PCC" format="default"/>), the PCE could request an allocation to be made by the PCC; then,	
 	   the PCC would send a PCRpt message with the allocated label encoded in	
 	   the CC-ID object, as shown in <xref target="SEC_FIG2b" format="default"/>.</t>
          <figure anchor="SEC_FIG2b">
            <name>PCC-Initiated PCECC LSP (PCC Allocation)</name>
<artwork align="left" alt="" name="" type=""><![CDATA[
               +-------+                             +-------+
               |PCC    |                             |  PCE  |
               |ingress|                             +-------+
        +------|       |                                 |
        | PCC  +-------+                                 |
        | transit| |                                     |
 +------|        | |---PCRpt,PLSP-ID=1,PST=2,D=1-------->| PCECC LSP
 |PCC   +--------+ |                                     |          
 |egress  |  |     |                                     |
 +--------+  |     |                                     |
     |       |     |                                     |
     |<-------PCInitiate,CC-ID=X,PLSP-ID=1---------------| Label
     |       |     |     C=1                             | download
     |--------PCRpt,CC-ID=X,PLSP-ID=1------------------->| CCI
     |       |     |     Label=L1                        |
     |       |<------PCInitiate,PLSP-ID=1,---------------| Labels
     |       |     |            CC-ID=Y1,C=1             | download
     |       |     |            CC-ID=Y2,C=0,L1          | CCI
     |       |-------PCRpt,PLSP-ID=1-------------------->|
     |       |     |       CC-ID=Y1,Label=L2             |
     |       |     |       CC-ID=Y2                      |
     |       |     |<----PCInitiate,CC-ID=Z,PLSP-ID=1----| Label
     |       |     |                C=0,L2               | download
     |       |     |-----PCRpt,CC-ID=Z,PLSP-ID=1-------->| CCI
     |       |     |                                     |
     |       |     |<---PCUpd,PLSP-ID=1,PST=2,D=1--------| PCECC LSP
     |       |     |                                     | Update
     |       |     |                                     |
]]></artwork>
          </figure>
<aside>
<t>Note:</t>
<t>The O bit is set as before (and thus not included).</t>
</aside>
          <t>In the case where the label allocations are made by the PCC itself (see <xref target="PCC" format="default"/>), the procedure remains the same, with just an additional
 constraint on the configuration sequence.</t>
          <t>The rest of the PCC-initiated PCECC LSP setup operations are the same as those described in <xref target="PCE-I" format="default"/>.</t>
    </section>
        <section toc="default" anchor="CCI" numbered="true">
          <name>Central Controller Instructions</name>
          <t>The new CCI for the label operations in PCEP are done via the PCInitiate message (<xref target="SEC_PCInitiate" format="default"/>) by
   defining a new PCEP object for CCI operations. The local label range of
   each PCC is assumed to be known by both the PCC and the PCE. </t>
          <section toc="default" anchor="LabelDownloadCCI" numbered="true">
            <name>Label Download CCI</name>
            <t>In order to set up an LSP based on the PCECC, the PCE sends a PCInitiate message
    to each node along the path to download the label instructions, as described in Sections <xref target="PCE-I" format="counter"/> and 
    <xref target="SEC_BASIC_SETUP" format="counter"/>.
            </t>
            <t>The CCI object <bcp14>MUST</bcp14> be included, along with the LSP object in the PCInitiate message. The LSP-IDENTIFIERS TLV <bcp14>MUST</bcp14> be included in the LSP object. The SPEAKER-ENTITY-ID TLV
<bcp14>SHOULD</bcp14> be included in the LSP object.</t>
            <t>If a node (PCC) receives a PCInitiate message that includes a label to download (as part of CCI) that is out
    	of the range set aside for the PCE, it <bcp14>MUST</bcp14> send a PCErr message with Error-Type=31
   (PCECC failure) and Error-value=1 (Label out of range) and <bcp14>MUST</bcp14> include the
   SRP object to specify the error is for the corresponding label update via a PCInitiate message.
    If a PCC receives a PCInitiate message but fails to download
   the label entry, it <bcp14>MUST</bcp14> send a PCErr message with Error-Type=31
   (PCECC failure) and Error-value=2 (Instruction failed) and <bcp14>MUST</bcp14> include the
   SRP object to specify the error is for the corresponding label update via a PCInitiate message.</t>
            <t>A new PCEP object for CCI is defined in <xref target="SEC_CCI" format="default"/>.</t>
          </section>
          <section toc="default" anchor="SEC_CLEANUP" numbered="true">
            <name>Label Cleanup CCI</name>
            <t>In order to delete an LSP based on the PCECC, the PCE sends Central Controller Instructions via a PCInitiate
    message to each node along the path of the LSP to clean up the label-forwarding instruction. 
            </t>
            <t>If the PCC receives a PCInitiate message but does not recognize the
   label in the CCI, the PCC <bcp14>MUST</bcp14> generate a PCErr message with Error-Type=19 (Invalid operation) and Error-value=18 (Unknown Label) and 
   <bcp14>MUST</bcp14> include the SRP object to specify the error is for the
   corresponding label cleanup (via a PCInitiate message).
            </t>
            <t>The R flag in the SRP object defined in <xref target="RFC8281" format="default"/> specifies
    the deletion of the label entry in the PCInitiate message.</t>
            <figure anchor="SEC_FIG3">
              <name>Label Cleanup</name>
<artwork align="left" alt="" name="" type=""><![CDATA[
               +-------+                              +-------+
               |PCC    |                              |  PCE  |
               |ingress|                              +-------+
        +------|       |                                  |
        | PCC  +-------+                                  |
        | transit| |                                      |
 +------|        | |                                      | 
 |PCC   +--------+ |                                      | 
 |egress  |  |     |                                      |
 +--------+  |     |                                      |
     |       |     |                                      |
     |<-------PCInitiate,CC-ID=X,PLSP-ID=2----------------| Label
     |       |     |                   R=1                | cleanup
     |--------PCRpt,CC-ID=X,PLSP-ID=2-------------------->| CCI
     |       |     |              R=1                     |
     |       |<------PCInitiate,CC-ID=Y1,Y2,PLSP-ID=2-----| Label
     |       |     |                          R=1         | cleanup
     |       |-------PCRpt,CC-ID=Y1,Y2,PLSP-ID=2--------->| CCI
     |       |     |                         R=1          |
     |       |     |<----PCInitiate,CC-ID=Z,PLSP-ID=2-----| Label
     |       |     |                              R=1     | cleanup
     |       |     |-----PCRpt,CC-ID=Z,PLSP-ID=2--------->| CCI
     |       |     |                         R=1          |
     |       |     |<--PCInitiate,PLSP-ID=2,PST=2,R=1-----| PCECC LSP
     |       |     |                                      | remove
]]></artwork>
            </figure>
            <t>As per <xref target="RFC8281" format="default"/>, following the removal of the label-forwarding instruction, the PCC <bcp14>MUST</bcp14> send a PCRpt message. 
        The SRP object in the PCRpt message <bcp14>MUST</bcp14> include the
   SRP-ID-number from the PCInitiate message that triggered the removal.
   The R flag in the SRP object <bcp14>MUST</bcp14> be set.</t>
            <t>In the case where the label allocation is made by the PCC itself (see <xref target="PCC" format="default"/>), the removal procedure remains the same, adding the sequence constraint.</t>
          </section>
        </section>
        <section toc="default" numbered="true">
          <name>PCECC LSP Update</name>
          <t>The update is done as per the make-before-break procedures, i.e., the PCECC first updates new label instructions based on the updated path and then informs the ingress to switch traffic before cleaning up the former instructions. New CC-IDs are used to identify the updated instructions; the identifiers in the LSP object uniquely identify the existing LSP. Once new instructions are downloaded, the PCE further updates the new path at the ingress, which triggers the traffic switch on the updated path. The ingress PCC acknowledges with a PCRpt message, on receipt of the PCRpt message, the PCE does the cleanup operation for the former LSP, as described in <xref target="SEC_CLEANUP" format="default"/>.</t>
          <figure anchor="SEC_FIG5">
            <name>PCECC LSP Update</name>
<artwork align="left" alt="" name="" type=""><![CDATA[
              +-------+                             +-------+
              |PCC    |                             |  PCE  |
              |ingress|                             +-------+
       +------|       |                                 |
       | PCC  +-------+                                 |
       | transit| |                                     |
+------|        | |                                     |
|PCC   +--------+ |                                     |
|egress  |  |     |                                     |
+--------+  |     |                                     |
    |       |     |                                     | New Path 
    |<------ PCInitiate,CC-ID=XX,PLSP-ID=1 -------------| for LSP 
    |       |     |                                     | trigger 
    |--------PCRpt,CC-ID=XX,PLSP-ID=1------------------>| new CCI
    |       |     |                                     |
    |       |<------PCInitiate,CC-ID=YY1,YY2,PLSP-ID=1--| Label
    |       |     |                                     | download
    |       |-------PCRpt,CC-ID=YY1,YY2,PLSP-ID=1------>| CCI
    |       |     |                                     |
    |       |     |<----PCInitiate,CC-ID=ZZ,PLSP-ID=1---| Label
    |       |     |                                     | download
    |       |     |-----PCRpt,CC-ID=ZZ,PLSP-ID=1------->| CCI
    |       |     |                                     |
    |       |     |<---PCUpd,PLSP-ID=1,PST=2,D=1--------| PCECC
    |       |     |    SRP=S                            | LSP Update
    |       |     |                                     |
    |       |     |---PCRpt,PLSP-ID=1,PST=2,D=1-------->| Trigger
    |       |     |       (SRP=S)                       | Delete 
    |       |     |                                     | former CCI
    |       |     |                                     |  
    |<-------PCInitiate,CC-ID=X,PLSP-ID=1---------------| Label
    |       |     |                   R=1               | cleanup
    |--------PCRpt,CC-ID=X,PLSP-ID=1------------------->| CCI
    |       |     |              R=1                    |
    |       |<------PCInitiate,CC-ID=Y1,Y2,PLSP-ID=1----| Label
    |       |     |                              R=1    | cleanup
    |       |-------PCRpt,CC-ID=Y1,Y2,PLSP-ID=1-------->| CCI
    |       |     |                         R=1         |
    |       |     |<----PCInitiate,CC-ID=Z,PLSP-ID=1----| Label
    |       |     |                              R=1    | cleanup
    |       |     |-----PCRpt,CC-ID=Z,PLSP-ID=1-------->| CCI
    |       |     |                         R=1         |     
]]></artwork>
          </figure>
          <t>The modified PCECC LSPs are considered to be 'up' by default.
        The ingress could further choose to deploy a data-plane check
        mechanism and report the status back to the PCE via a PCRpt message. The exact mechanism is out of scope of this document.</t>
          <t>In the case where the label allocations are made by the PCC itself (see <xref target="PCC" format="default"/>), the procedure remains the same.</t>
    </section>
        <section toc="default" numbered="true">
          <name>Re-delegation and Cleanup</name>
          <t>As described in <xref target="RFC8281" format="default"/>, a new PCE can gain control over an orphaned LSP. In the case of a PCECC LSP, the new PCE <bcp14>MUST</bcp14> also gain control over the CCI in the same way by sending a PCInitiate
   message that includes the SRP, LSP, and CCI objects and carries the
   CC-ID and PLSP-ID identifying the instructions that it wants to take control of. </t>
          <t>Further, as described in <xref target="RFC8281" format="default"/>, the State Timeout Interval timer ensures that a PCE crash does not
   result in automatic and immediate disruption for the services using
   PCE-initiated LSPs. Similarly the Central Controller Instructions are not removed immediately
   upon PCE failure.  Instead, they are cleaned up on the expiration of
   this timer. This allows for network cleanup without manual
   intervention. The PCC <bcp14>MUST</bcp14> support the removal of CCI as
   one of the behaviors applied on expiration of the State Timeout
   Interval timer.</t>
          <t>In the case of the PCC-initiated PCECC LSP, the control over the orphaned LSP at the ingress PCC is taken over by the mechanism specified in <xref target="RFC8741" format="default"/> to request delegation. The control over the CCI is described above using <xref target="RFC8281" format="default"/>.</t>
        </section>
        <section toc="default" anchor="sec_label_db_sync" numbered="true">
          <name>Synchronization of Central Controller Instructions</name>
          <t>The purpose of CCI synchronization (labels in the context of this document) is to make sure that the
   PCE's view of CCI (labels) matches with the PCC's label allocation. 
   This synchronization is performed as part of the LSP State Synchronization,
   as described in <xref target="RFC8231" format="default"/> and 
   <xref target="RFC8232" format="default"/>.</t>
          <t>As per LSP State Synchronization <xref target="RFC8231" format="default"/>, a PCC reports the state of
   its LSPs to the PCE using PCRpt messages and, as per <xref target="RFC8281" format="default"/>, the PCE would 
   initiate any missing LSPs and/or remove any LSPs that are not wanted. The same PCEP messages and procedures are 
   also used for the CCI synchronization. The PCRpt message includes the CCI and the LSP object to report the label-forwarding instructions. The PCE would further 
   remove any unwanted instructions or initiate any missing instructions.</t>
    </section>
        <section toc="default" numbered="true">
          <name>PCECC LSP State Report</name>
          <t>As mentioned before, an ingress PCC <bcp14>MAY</bcp14> choose to apply any Operations, Administration, and Maintenance (OAM) mechanism to check the status
    of the LSP in the data plane and <bcp14>MAY</bcp14> further send its status in a PCRpt message to the PCE. </t>
        </section>
        <section toc="default" anchor="PCC" numbered="true">
          <name>PCC-Based Allocations</name>
          <t>
             The PCE can request the PCC to allocate the label using the 
     PCInitiate message.  The C flag in the  
     CCI object is set to '1' to indicate that the allocation needs to be made by the PCC.  
     The PCC <bcp14>MUST</bcp14> try to allocate the label and <bcp14>MUST</bcp14> report to the PCE via a PCRpt or PCErr message.
          </t>
          <t>If the value of the label is 0 and the C flag is set to '1', it  
     indicates that the PCE is requesting the allocation to be made by the PCC.  If the 
     label is 'n' and the C flag is set to '1' in the CCI object, it 
     indicates that the PCE requests a specific value 'n' for the label. 
     If  
     the allocation is successful, the PCC <bcp14>MUST</bcp14> report  
     via the PCRpt message with the CCI object.  If the value of the label in the CCI object is invalid, it <bcp14>MUST</bcp14> send a PCErr message with Error-Type=31 (PCECC failure) and Error-value=3 (Invalid CCI).  If  
     it is valid but the PCC is unable to  
     allocate it, it <bcp14>MUST</bcp14> send a PCErr message with Error-Type=31 (PCECC failure) and Error-value=4 (Unable to 
     allocate the specified CCI).
          </t>
          <t>If the PCC wishes to withdraw or modify the previously assigned label, it <bcp14>MUST</bcp14> send a PCRpt message without any label
     or with the label containing the new value, respectively, in 
     the CCI object.  The PCE would further trigger the label cleanup of the older label, as per <xref target="SEC_CLEANUP" format="default"/>.</t>
        </section>
    </section>
    </section>
    <section toc="default" numbered="true">
      <name>PCEP Messages</name>
      <t>As defined in <xref target="RFC5440" format="default"/>, a PCEP message consists of a common header
   followed by a variable-length body made of a set of objects that can
   be either mandatory or optional.  An object is said to be mandatory
   in a PCEP message when the object must be included for the message to
   be considered valid.  For each PCEP message type, a set of rules is
   defined, which specifies the set of objects that the message can carry.
   An implementation <bcp14>MUST</bcp14> form the PCEP messages using the object
   ordering specified in this document.</t>
      <t>The LSP-IDENTIFIERS TLV <bcp14>MUST</bcp14> be included in the LSP object for the PCECC
   LSP.</t>
      <t>The message formats in this document are specified using Routing
   Backus-Naur Form (RBNF) encoding, as specified in <xref target="RFC5511" format="default"/>.</t>
    <section toc="default" anchor="SEC_PCInitiate" numbered="true">
        <name>The PCInitiate Message</name>
        <t>The PCInitiate message <xref target="RFC8281" format="default"/> can be used to download or remove the labels; this document extends the message, as shown below.</t>
<sourcecode type=""><![CDATA[
     <PCInitiate Message> ::= <Common Header>
                              <PCE-initiated-lsp-list>
]]></sourcecode>
  <t>Where:</t>
  <ul spacing="normal">
     <li>&lt;Common Header&gt; is defined in <xref target="RFC5440" format="default"/>.</li>
  </ul>
<sourcecode type=""><![CDATA[
     <PCE-initiated-lsp-list> ::= <PCE-initiated-lsp-request>
                                  [<PCE-initiated-lsp-list>]

     <PCE-initiated-lsp-request> ::= 
                            (<PCE-initiated-lsp-instantiation>|
                             <PCE-initiated-lsp-deletion>|
                             <PCE-initiated-lsp-central-control>)

     <PCE-initiated-lsp-central-control> ::= <SRP>
                                             <LSP>
                                             <cci-list>

     <cci-list> ::=  <CCI>
                     [<cci-list>]
]]></sourcecode>
  <t>Where:</t>
  <ul spacing="normal">
     <li>&lt;PCE-initiated-lsp-instantiation&gt; and 
     &lt;PCE-initiated-lsp-deletion&gt; are as per 
      <xref target="RFC8281" format="default"/>.</li>
     <li>The LSP and SRP object is defined in <xref target="RFC8231" format="default"/>.</li>
  </ul>
        <t>When a PCInitiate message is used for the CCI (labels), the SRP, LSP, and CCI objects <bcp14>MUST</bcp14> be present. 
        The SRP object is defined in <xref target="RFC8231" format="default"/>; if the SRP object is missing, the receiving PCC <bcp14>MUST</bcp14> send
    a PCErr message with Error-Type=6 (Mandatory Object missing) and
    Error-value=10 (SRP object missing). The LSP object is defined in <xref target="RFC8231" format="default"/>, and if the LSP object is missing, the receiving PCC <bcp14>MUST</bcp14> send
    a PCErr message with Error-Type=6 (Mandatory Object missing) and
    Error-value=8 (LSP object missing). The CCI object is defined in <xref target="SEC_CCI" format="default"/>, and if the CCI object is
    missing, the receiving PCC <bcp14>MUST</bcp14> send a PCErr message with Error-Type=6
    (Mandatory Object missing) and Error-value=17 (CCI object missing).
    More than one CCI object <bcp14>MAY</bcp14> be included in the PCInitiate message
    for a transit LSR.</t>
        <t>To clean up entries, the R (remove) bit <bcp14>MUST</bcp14> be set in the SRP object to be encoded along with the LSP and CCI objects.</t>
        <t>The CCI object received at the ingress node <bcp14>MUST</bcp14> have the O bit (out-label) set. The CCI object received at the egress <bcp14>MUST</bcp14> have the O bit unset. If this is not the case, the PCC <bcp14>MUST</bcp14> send a PCErr message with Error-Type=31 (PCECC failure) and Error-value=3 (Invalid CCI). Other instances of the CCI object, if present, <bcp14>MUST</bcp14> be ignored.</t>
        <t>For the point-to-point (P2P) LSP setup via the PCECC technique, at the transit LSR, two CCI objects are expected for incoming and outgoing labels associated with the LSP object. If any other CCI object is included in the PCInitiate message, it <bcp14>MUST</bcp14> be ignored. If the transit LSR did not receive two CCI objects, with one of them having the O bit set and another with the O bit unset, it <bcp14>MUST</bcp14> send a PCErr message with Error-Type=31 (PCECC failure) and Error-value=3 (Invalid CCI).</t>
        <t>Note that, on receipt of the PCInitiate message with CCI object, the ingress, egress, or transit role of the PCC is identified via the ingress and egress IP address encoded in the LSP-IDENTIFIERS TLV.</t>
      </section>
      <section toc="default" anchor="SEC_PCRpt" numbered="true">
        <name>The PCRpt Message</name>
        <t>The PCRpt message can be used to report the labels that were allocated by the PCE to be used during the State Synchronization phase or as an acknowledgment to a PCInitiate message.
        </t>
<sourcecode type=""><![CDATA[
      <PCRpt Message> ::= <Common Header>
                          <state-report-list>
]]></sourcecode>
   <t>Where:</t>
<sourcecode type=""><![CDATA[
      <state-report-list> ::= <state-report>[<state-report-list>]

      <state-report> ::= (<lsp-state-report>|
                          <central-control-report>) 

      <lsp-state-report> ::= [<SRP>]
                             <LSP>
                             <path>

      <central-control-report> ::= [<SRP>]
                                   <LSP>
                                   <cci-list>

      <cci-list> ::=  <CCI>
                      [<cci-list>]                  
]]></sourcecode>
    <t>Where:</t>
    <ul spacing="normal">
      <li>&lt;path&gt; is as per <xref target="RFC8231" format="default"/>, and the LSP and SRP objects are 
      also defined in <xref target="RFC8231" format="default"/>.</li>
    </ul>
        <t>When a PCRpt message is used to report the CCI (labels), the LSP and CCI objects <bcp14>MUST</bcp14> be present. 
        The LSP object is defined in <xref target="RFC8231" format="default"/>, and if the LSP object is missing, the receiving PCE <bcp14>MUST</bcp14> send
    a PCErr message with Error-Type=6 (Mandatory Object missing) and
    Error-value=8 (LSP object missing). The CCI object is defined in <xref target="SEC_CCI" format="default"/>, and if the CCI object is
    missing, the receiving PCE <bcp14>MUST</bcp14> send a PCErr message with Error-Type=6
    (Mandatory Object missing) and Error-value=17 (CCI object missing).
    Two CCI objects can be included in the PCRpt message
    for a transit LSR.</t>
      </section>
    </section>
    <section toc="default" numbered="true">
      <name>PCEP Objects</name>
      <t>The PCEP objects defined in this document are compliant with the PCEP object
    format defined in <xref target="RFC5440" format="default"/>.
      </t>
      <section toc="default" numbered="true">
        <name>OPEN Object</name>
        <t>This document defines a new PST (2) to be included in the PATH-SETUP-TYPE-CAPABILITY TLV in the OPEN object. Further, a new sub-TLV for the PCECC capability exchange is also defined.</t>
        <section toc="default" anchor="SEC_PCECC_CAP_TLV" numbered="true">
          <name>PCECC Capability Sub-TLV</name>
          <t>The PCECC-CAPABILITY sub-TLV is an optional TLV for use in the OPEN object in the PATH-SETUP-TYPE-CAPABILITY TLV when the Path Setup Type list includes the PCECC Path Setup Type 2. A PCECC-CAPABILITY sub-TLV <bcp14>MUST</bcp14> be ignored if the PST list does not contain PST=2.</t>
    <t>Its format is shown in <xref target="SEC_FIG8" format="default"/>.</t>
          <figure anchor="SEC_FIG8">
            <name>PCECC Capability Sub-TLV</name>
<artwork align="left" alt="" name="" type=""><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |               Type=1          |          Length=4             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             Flags                           |L|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
          </figure>
          <t>The type of the TLV is 1, and it has a fixed length of 4 octets.</t>
          <t>The value comprises a single field: Flags (32 bits).
      Currently, the following flag bit is
    defined: </t>
	    <dl newline="false" spacing="normal">
            <dt>L bit (Label):</dt> 
	    <dd>If set to '1' by a PCEP speaker, the L flag
      indicates that the PCEP speaker will support and is willing to handle the PCEC-based Central Controller Instructions for label download. The bit <bcp14>MUST</bcp14> be set to '1' by both a PCC and a PCE for the PCECC label download/report on a PCEP session.</dd></dl>
            <t>Unassigned bits <bcp14>MUST</bcp14> be set to '0' on
    transmission and <bcp14>MUST</bcp14> be ignored on receipt.</t>
        </section>
      </section>
      <section toc="default" anchor="SEC_PATH" numbered="true">
        <name>PATH-SETUP-TYPE TLV</name>
        <t>The PATH-SETUP-TYPE TLV is defined in <xref target="RFC8408" format="default"/>;
      this document defines a new PST value:
        </t>
        <dl newline="false" spacing="normal">
          <dt>PST=2:</dt>
	  <dd>Path is set up via the PCECC mode.</dd>
        </dl>
        <t>On a PCRpt/PCUpd/PCInitiate message, the PST=2 in the PATH-SETUP-TYPE TLV
   in the SRP object <bcp14>MUST</bcp14> be included for an LSP set up via the PCECC-based mechanism.</t>
      </section>
      <section toc="default" anchor="SEC_CCI" numbered="true">
        <name>CCI Object</name>
        <t>The CCI object is used by the PCE to specify the forwarding instructions (label information in the context of this document) to the PCC and
    <bcp14>MAY</bcp14> be carried within a PCInitiate or PCRpt message for label download/report.</t>
        <t>CCI Object-Class is 44.</t>
        <t>CCI Object-Type is 1 for the MPLS label.</t>
        <figure anchor="SEC_FIG9">
          <name>CCI Object</name>
<artwork align="left" alt="" name="" type=""><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                            CC-ID                              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Reserved1            |             Flags         |C|O|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                 Label                 |     Reserved2         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
//                        Optional TLV                         //
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
        </figure>
        <t>The fields in the CCI object are as follows:
        </t>
        <dl newline="false" spacing="normal">
          <dt>CC-ID:</dt>
          <dd> A PCEP-specific identifier for the CCI
   information.  A PCE creates a CC-ID for each instruction; the value is
   unique within the scope of the PCE and is constant for the lifetime
   of a PCEP session.  The values 0 and 0xFFFFFFFF are reserved
   and <bcp14>MUST NOT</bcp14> be used. Note
   that <xref target="I-D.gont-numeric-ids-sec-considerations" format="default"/> gives advice on
   assigning transient numeric identifiers, such as the CC-ID, so as to
   minimize security risks.</dd>
          <dt>Reserved1 (16 bit):</dt>
          <dd>Set to 'zero' while sending; ignored on receipt.</dd>
          <dt>Flags (16 bit):</dt>
          <dd>
            <t> A field used to carry any additional information
    pertaining to the CCI. Currently, the following flag bits are
    defined: </t>
            <ul spacing="normal">
              <li>O bit (out-label) : If the bit is set to '1', it specifies the label is
    the out-label, and it is mandatory to encode the next-hop
    information (via Address TLVs (<xref target="AddressTLVs" format="default"/>) in
    the CCI object). If the bit is not set, it specifies the label is
    the in-label, and it is optional to encode the local interface
    information (via Address TLVs in
    the CCI object).</li>
              <li>C Bit (PCC allocation): If the bit is set to '1', it indicates that 
        the label allocation needs to be done by the PCC for the Central 
        Controller Instruction.  A PCE sets this bit to request the PCC to 
        make an allocation from its label space.  A PCC would set 
        this bit to indicate that it has allocated the label and report it  
        to the PCE.</li>
              <li>All unassigned bits <bcp14>MUST</bcp14> be set to 'zero' at transmission and ignored at receipt.</li>
            </ul>
          </dd>
          <dt>Label (20-bit):</dt>
          <dd>The label information.</dd>
          <dt>Reserved2 (12 bit):</dt>
          <dd>Set to 'zero' while sending; ignored on receive.</dd>
        </dl>
        <section toc="default" anchor="AddressTLVs" numbered="true">
          <name>Address TLVs</name>
          <t><xref target="RFC8779" format="default"/> defines the IPV4-ADDRESS, IPV6-ADDRESS, and UNNUMBERED-ENDPOINT TLVs for the use of Generalized Endpoint. The same TLVs can also be used in the CCI object to
    associate the next-hop information in the case of an outgoing label and
    local interface information in the case of an incoming label. The next-hop information encoded in these TLVs needs to be a directly connected IP address/interface information. If the PCC is not able to resolve the next-hop information, it <bcp14>MUST</bcp14> reject the CCI and respond with a PCErr message with Error-Type=31 (PCECC failure) and Error-value=5 (Invalid next-hop information).</t>
    </section>
      </section>
    </section>
    <section toc="default" numbered="true">
      <name>Security Considerations</name>
      <t>As per <xref target="RFC8283" format="default"/>, the security considerations for a PCE-based controller are a little
   different from those for any other PCE system.  That is, the
   operation relies heavily on the use and security of PCEP, so
   consideration should be given to the security features discussed in
   <xref target="RFC5440" format="default"/> and the additional mechanisms described in <xref target="RFC8253" format="default"/>. It further lists the vulnerability of a central controller architecture, such as a central
   point of failure, denial of service, and a focus for
   interception and modification of messages sent to individual Network Elements (NEs).</t>
      <t>In the PCECC operations, the PCEP sessions are also required to the internal routers, thus increasing the resources required for the session management at the PCE. </t>
      <t>The PCECC extension builds on the existing PCEP messages; thus, the security considerations described in <xref target="RFC5440" format="default"/>, <xref target="RFC8231" format="default"/>, and 
       <xref target="RFC8281" format="default"/> continue to apply. <xref target="RFC8253" format="default"/> specifies the support of Transport Layer Security (TLS) in PCEP, as it
   provides support for peer authentication, message encryption, and
   integrity. It further provides mechanisms for
   associating peer identities with different levels of access and/or
   authoritativeness via an attribute in X.509 certificates or a local policy with a specific accept-list of X.509 certificates. This can be used to check the authority for the PCECC operations. 
       Additional considerations are discussed in following sections.</t>
      <section toc="default" numbered="true">
        <name>Malicious PCE</name>
        <t>In this extension, the PCE has complete control over the PCC to download/remove the labels and can
   cause the LSPs to behave inappropriately and cause a major impact
   to the network. As a general precaution, it is <bcp14>RECOMMENDED</bcp14> that
   this PCEP extension be activated on mutually authenticated and encrypted
   sessions across PCEs and PCCs belonging to the same administrative
   authority, using TLS <xref target="RFC8253" format="default"/>,
   as per the recommendations and best current practices in BCP 195 <xref target="RFC7525" format="default"/>. </t>
        <t>Further, an attacker may flood the PCC
   with the PCECC-related messages at a rate that exceeds either the PCC's ability
   to process them or the network's ability to send them, by
   either spoofing messages or compromising the PCE itself. <xref target="RFC8281" format="default"/> provides a mechanism to protect the PCC by imposing a limit. The same can be used for the PCECC operations as well.</t>
        <t>As specified in <xref target="LabelDownloadCCI" format="default"/>, a PCC needs to check if the label in the CCI object is in the range set aside for the PCE; otherwise, it <bcp14>MUST</bcp14> send a PCErr message with Error-Type=31
   (PCECC failure) and Error-value=1 (Label out of range).</t>
      </section>
      <section toc="default" numbered="true">
        <name>Malicious PCC</name>
        <t>The PCECC mechanism described in this document requires
   the PCE to keep labels (CCI) that it downloads and relies on the
   PCC responding (with either an acknowledgment or an error message) to
   request for LSP instantiation. This is an additional attack surface by
   placing a requirement for the PCE to keep a CCI/label replica for
   each PCC.  It is <bcp14>RECOMMENDED</bcp14> that PCE implementations provide a limit
   on resources (in this case the CCI) a single PCC can occupy. <xref target="RFC8231" format="default"/> provides a notification mechanism when such threshold is reached. </t>
      </section>
    </section>
    <section toc="default" numbered="true">
      <name>Manageability Considerations</name>
      <section toc="default" numbered="true">
        <name>Control of Function and Policy</name>
        <t>A PCE or PCC implementation <bcp14>SHOULD</bcp14> allow the PCECC capability to be enabled/disabled as part of the global configuration. <xref target="RFC8664" sectionFormat="of" section="6.1"/> list various controlling factors regarding the Path Setup Type. They are also applicable to the PCECC Path Setup Types. Further, <xref target="RFC8664" sectionFormat="of" section="6.2"/> describes the migration steps when the Path Setup Type of an existing LSP is changed.</t>
      </section>
      <section toc="default" numbered="true">
        <name>Information and Data Models</name>
        <t><xref target="RFC7420" format="default"/> describes the PCEP MIB; this MIB can be extended to get the
           PCECC capability status.</t>
        <t>The PCEP YANG module <xref target="I-D.ietf-pce-pcep-yang" format="default"/> could be extended
           to enable/disable the PCECC capability.</t>
      </section>
      <section toc="default" numbered="true">
        <name>Liveness Detection and Monitoring</name>
        <t>Mechanisms defined in this document do not imply any new liveness
           detection and monitoring requirements in addition to those already
           listed in <xref target="RFC5440" format="default"/>.</t>
      </section>
      <section toc="default" numbered="true">
        <name>Verify Correct Operations</name>
   <t>The operator needs the following information to verify that PCEP is
   operating correctly with respect to the PCECC Path Setup
   Type.</t>
        <ul spacing="normal">
          <li>An implementation <bcp14>SHOULD</bcp14> allow the operator to view whether the
      PCEP speaker sent the PCECC PST capability to its peer.</li>
          <li>An implementation <bcp14>SHOULD</bcp14> allow the operator to view whether the
      peer sent the PCECC PST capability. </li>
          <li>An implementation <bcp14>SHOULD</bcp14> allow the operator to view whether the
      PCECC PST is enabled on a PCEP session.</li>
          <li>If one PCEP speaker advertises the PCECC PST capability,
      but the other does not, then the implementation <bcp14>SHOULD</bcp14> create a
      log to inform the operator of the capability mismatch.</li>
          <li>If a PCEP speaker rejects a CCI, then it <bcp14>SHOULD</bcp14>
      create a log to inform the operator, giving the reason for the
      decision (local policy, label issues, etc.).</li>
        </ul>
      </section>
      <section toc="default" numbered="true">
        <name>Requirements on Other Protocols</name>
        <t>PCEP extensions defined in this document do not put new requirements
   on other protocols.</t>
      </section>
      <section toc="default" numbered="true">
        <name>Impact on Network Operations</name>
        <t>PCEP extensions defined in this document do not put new requirements
   on network operations.</t>
      </section>
    </section>
    <section toc="default" numbered="true">
      <name>IANA Considerations</name>
      <section toc="default" numbered="true">
        <name>PATH-SETUP-TYPE-CAPABILITY Sub-TLV Type Indicators</name>
        <t><xref target="RFC8408" format="default"/> detailed the creation of the "PATH-SETUP-TYPE-CAPABILITY Sub-TLV Type Indicators" subregistry. Further, IANA has allocated the following codepoint:</t>
        <table anchor="PCEP-SUBTYPE-IND" align="center">
	  <name>PATH-SETUP-TYPE-CAPABILITY Sub-TLV Type Indicators Subregistry Addition</name>
          <thead>
            <tr>
              <th align="left">Value</th>
              <th align="left">Meaning</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">1</td>
              <td align="left">PCECC-CAPABILITY</td>
              <td align="left">RFC 9050</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section toc="default" numbered="true">
        <name>PCECC-CAPABILITY Sub-TLV's Flag Field</name>
        <t>This document defines the
      PCECC-CAPABILITY sub-TLV; IANA has created a new subregistry to
      manage the value of the PCECC-CAPABILITY sub-TLV's 32-bit Flag field.   New
   values are to be assigned by Standards Action <xref target="RFC8126" format="default"/>.  Each bit
   should be tracked with the following qualities:</t>
        <ul spacing="normal">
          <li>bit number (counting from bit 0 as the most significant bit)</li>
          <li>capability description</li>
          <li>defining RFC</li>
        </ul>
        <t>Currently, there is one allocation in this registry.</t>
        <table anchor="PCEP-CAP-SubTLv" align="center">
	  <name>Initial Contents of the PCECC-CAPABILITY Sub-TLV Subregistry</name>
          <thead>
            <tr>
              <th align="left">Bit</th>
              <th align="left">Name</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
	      <tr>
              <td align="left">0-30</td>
              <td align="left">Unassigned</td>
              <td align="left">RFC 9050</td>
            </tr>
            <tr>
              <td align="left">31</td>
              <td align="left">Label</td>
              <td align="left">RFC 9050</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section toc="default" numbered="true">
        <name>PCEP Path Setup Type Registry</name>
        <t><xref target="RFC8408" format="default"/> created a subregistry within the "Path Computation Element
   Protocol (PCEP) Numbers" registry called "PCEP Path Setup Types".
   IANA has allocated a new codepoint within this registry,
   as follows:</t>
   <table anchor="PCEP-PATH-TYPE" align="center">
       <name>Path Setup Type Registry Codepoint Addition</name>
          <thead>
            <tr>
              <th align="left">Value</th>
              <th align="left">Description</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">2</td>
              <td align="left">Traffic engineering path is set up using PCECC mode</td>
              <td align="left">RFC 9050</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section toc="default" numbered="true">
        <name>PCEP Object</name>
        <t>IANA has allocated new codepoints in the "PCEP Objects" subregistry for the CCI object as follows:</t>

	
        <table anchor="PCEP-OBJECT" align="center">
	  <name>PCEP Objects Subregistry Additions</name>
          <thead>
            <tr>
              <th align="left">Object-Class Value</th>
              <th align="left">Name</th>
	      <th align="left">Object-Type</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">44</td>
              <td align="left">CCI Object-Type</td>
	      <td align="left"><ul empty="true" spacing="compact" bare="true"><li>0: Reserved</li><li>1: MPLS Label</li><li>2-15: Unassigned</li></ul></td>
              <td align="left">RFC 9050</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section toc="default" numbered="true">
        <name>CCI Object Flag Field</name>
        <t>IANA has created a new subregistry to manage the Flag field
           of the CCI object called "CCI Object Flag Field for MPLS Label". New
   values are to be assigned by Standards Action <xref target="RFC8126" format="default"/>.  Each bit
   should be tracked with the following qualities:</t>
        <ul spacing="normal">
          <li>bit number (counting from bit 0 as the most significant bit)</li>
          <li>capability description</li>
          <li>defining RFC</li>
        </ul>
        <t>Two bits are defined for the CCI Object flag field in this document as follows:</t>
        <table anchor="CCI-FLAG" align="center">
	  <name>CCI Object Flag Field for MPLS Label Initial Contents</name>
          <thead>
            <tr>
              <th align="left">Bit</th>
              <th align="left">Description</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">0-13</td>
              <td align="left">Unassigned</td>
              <td align="left"></td>
            </tr>
            <tr>
              <td align="left">14</td>
              <td align="left">C Bit - PCC allocation</td>
              <td align="left">RFC 9050</td>
            </tr>
            <tr>
              <td align="left">15</td>
              <td align="left">O Bit - Specifies label is out-label</td>
              <td align="left">RFC 9050</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section toc="default" numbered="true">
        <name>PCEP-Error Object</name>
        <t>IANA has allocated new error types and error values within
         the "PCEP-ERROR Object Error Types and Values" subregistry of the
         "Path Computation Element Protocol (PCEP) Numbers" registry for the following errors:</t>
	 <table anchor="error-type">
	   <name>PCEP-ERROR Object Error Types and Values Additions</name>
  <thead>
    <tr>
      <th>Error-Type</th>
      <th>Meaning</th>
      <th>Error-value</th>
      <th>Reference</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>6</td>
      <td>Mandatory Object missing</td>
      <td>17: CCI object missing</td>
      <td>RFC 9050</td>
    </tr>
    <tr>
      <td>10</td>
      <td>Reception of an invalid object</td>
      <td>33: Missing PCECC Capability sub-TLV</td>
      <td>RFC 9050</td>
    </tr>
    <tr>
      <td>19</td>
      <td>Invalid Operation</td>
      <td>
	<t>16: Attempted PCECC operations when PCECC capability was not advertised</t>
        <t>17: Stateful PCE capability was not advertised</t>
        <t>18: Unknown Label</t>
      </td>
      <td>RFC 9050</td>
    </tr>
    
    <tr>
      <td>31</td>
      <td>PCECC failure</td>
      <td>
	<t>1: Label out of range</t>
	<t>2: Instruction failed</t>
	<t>3: Invalid CCI</t>
	<t>4: Unable to allocate the specified CCI</t>
	<t>5: Invalid next-hop information</t>
      </td>
      <td>RFC 9050</td>
    </tr>
  </tbody>
</table>
      </section>
    </section>

  </middle>
  <back>
<displayreference target="I-D.ietf-teas-pcecc-use-cases" to="PCECC"/>
<displayreference target="I-D.ietf-pce-pcep-yang" to="PCEP-YANG"/>
<displayreference target="I-D.ietf-pce-pcep-extension-pce-controller-sr" to="PCECC-SR"/>
<displayreference target="I-D.dhody-pce-pcep-extension-pce-controller-srv6" to="PCECC-SRv6"/>
<displayreference target="I-D.li-pce-controlled-id-space" to="PCE-ID"/>
<displayreference target="I-D.gont-numeric-ids-sec-considerations" to="SECURITY-ID"/>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5440.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5511.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7525.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8231.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8253.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8281.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8408.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8664.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8779.xml"/>
      </references>
      <references>
        <name>Informative References</name>
<reference  anchor='RFC4655' target='https://www.rfc-editor.org/info/rfc4655'>
<front>
<title>A Path Computation Element (PCE)-Based Architecture</title>
<author initials='A.' surname='Farrel' fullname='A. Farrel'><organization /></author>
<author initials='JP.' surname='Vasseur' fullname='JP. Vasseur'><organization /></author>
<author initials='J.' surname='Ash' fullname='J. Ash'><organization /></author>
<date year='2006' month='August' />
</front>
<seriesInfo name='RFC' value='4655'/>
<seriesInfo name='DOI' value='10.17487/RFC4655'/>
</reference>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7025.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7399.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7420.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7491.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8232.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8283.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8741.xml"/>

<xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-teas-pcecc-use-cases.xml"/>

<reference anchor='I-D.ietf-pce-pcep-yang'>
<front>
<title>A YANG Data Model for Path Computation Element Communications Protocol (PCEP)</title>
<author initials='D' surname='Dhody' fullname='Dhruv Dhody' role='editor'>
</author>
<author initials='J' surname='Hardwick' fullname='Jonathan Hardwick'>
</author>
<author initials='V' surname='Beeram' fullname='Vishnu Beeram'>
</author>
<author initials='J' surname='Tantsura' fullname='Jeff Tantsura'>
</author>
<date month='February' day='22' year='2021' />
</front>
<seriesInfo name='Internet-Draft' value='draft-ietf-pce-pcep-yang-16' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-pce-pcep-yang-16.txt' />
</reference>

<xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-pce-pcep-extension-pce-controller-sr.xml"/>

<xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.dhody-pce-pcep-extension-pce-controller-srv6.xml"/>

        <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.li-pce-controlled-id-space.xml"/>

        <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.gont-numeric-ids-sec-considerations.xml"/>
      </references>
    </references>
    <section toc="default" numbered="false">
      <name>Acknowledgments</name>
      <t>We would like to thank <contact fullname="Robert Tao"/>, <contact fullname="Changjing Yan"/>, <contact fullname="Tieying Huang"/>, <contact fullname="Avantika"/>, and <contact fullname="Aijun Wang"/> for
   their useful comments and suggestions.</t>
      <t>Thanks to <contact fullname="Julien Meuric"/> for shepherding this document and providing valuable comments. Thanks to <contact fullname="Deborah Brungard"/> for being the responsible AD.</t>
      <t>Thanks to <contact fullname="Victoria Pritchard"/> for a very detailed RTGDIR review. Thanks to <contact fullname="Yaron Sheffer"/> for the   
SECDIR review. Thanks to <contact fullname="Gyan Mishra"/> for the Gen-ART review.</t>
      <t>Thanks to <contact fullname="Alvaro Retana"/>, <contact fullname="Murray Kucherawy"/>, <contact fullname="Benjamin Kaduk"/>, <contact fullname="Roman Danyliw"/>, <contact fullname="Robert Wilton"/>, <contact fullname="Éric Vyncke"/>, and <contact fullname="Erik Kline"/> for the IESG review.</t>
    </section>
    <section toc="default" numbered="false">
      <name>Contributors</name>
<contact fullname="Dhruv Dhody">
  <organization>Huawei Technologies</organization>
  <address>
    <postal>
      <street>Divyashree Techno Park, Whitefield</street>
      <city>Bangalore</city> 
      <region>Karnataka</region>  
      <code>560066</code>
      <country>India</country>
    </postal>
    <email>dhruv.ietf@gmail.com</email>
  </address>
</contact>

<contact fullname="Satish Karunanithi">
  <organization>Huawei Technologies</organization>
  <address>
    <postal>
      <street>Divyashree Techno Park, Whitefield</street>
      <city>Bangalore</city> 
      <region>Karnataka</region>  
      <code>560066</code>
      <country>India</country>
    </postal>
    <email>satishk@huawei.com</email>
  </address>
</contact>

<contact fullname="Adrian Farrel">
  <organization>Old Dog Consulting</organization>
  <address>
    <postal>
      <country>United Kingdom</country>
    </postal>
    <email>adrian@olddog.co.uk</email>
  </address>
</contact>

<contact fullname="Xuesong Geng">
  <organization>Huawei Technologies</organization>
  <address>
    <postal>
      <country>China</country>
    </postal>
    <email>gengxuesong@huawei.com  </email>
  </address>
</contact>

<contact fullname="Udayasree Palle">
  <organization/>
  <address>
    <postal/>
    <email>udayasreereddy@gmail.com</email>
  </address>
</contact>

<contact fullname="Katherine Zhao">
  <organization>Futurewei Technologies</organization>
  <address>
    <postal/>
    <email>katherine.zhao@futurewei.com</email>
  </address>
</contact>

<contact fullname="Boris Zhang">
  <organization>Telus Ltd.</organization>
  <address>
    <postal>
      <city>Toronto</city>
      <country>Canada</country>
    </postal>
    <email>boris.zhang@telus.com</email>
  </address>
</contact>

<contact fullname="Alex Tokar">
  <organization>Cisco Systems</organization>
  <address>
    <postal>
      <country>Slovakia</country>
    </postal>
    <email>atokar@cisco.com</email>
  </address>
</contact>
    </section>
  </back>
</rfc>
