<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" submissionType="IETF"
     consensus="true" docName="draft-ietf-pce-stateful-hpce-15" number="8751"
     category="info" ipr="trust200902" obsoletes="" updates="" xml:lang="en"
     sortRefs="false" symRefs="true" tocInclude="true" version="3">

  <!-- xml2rfc v2v3 conversion 2.35.0 -->
  <!-- Generated by id2xml 1.5.0 on 2019-11-08T17:24:21Z -->
  <front>


    <title abbrev="Hierarchical Stateful PCE">Hierarchical Stateful Path
    Computation Element (PCE)</title>

<seriesInfo name="RFC" value="8751"/>

    <author fullname="Dhruv Dhody" initials="D." surname="Dhody">
      <organization>Huawei Technologies</organization>
      <address>
        <postal>
          <street>Divyashree Techno Park, Whitefield</street>
          <city>Bangalore</city> <region>Karnataka</region> <code> 560066</code>
          <country>India</country>
        </postal>
        <email>dhruv.ietf@gmail.com</email>
      </address>
    </author>

    <author fullname="Young Lee" initials="Y." surname="Lee">
      <organization>Samsung Electronics</organization>
      <address>
        <email>younglee.tx@gmail.com</email>
      </address>
    </author>

    <author fullname="Daniele Ceccarelli" initials="D." surname="Ceccarelli">
      <organization>Ericsson</organization>
      <address>
        <postal>
          <street>Torshamnsgatan, 48</street>
          <city>Stockholm</city>
          <country>Sweden</country>
        </postal>
        <email>daniele.ceccarelli@ericsson.com</email>
      </address>
    </author>

    <author fullname="Jongyoon Shin" initials="J." surname="Shin">
      <organization>SK Telecom</organization>
      <address>
        <postal>
          <extaddr>6 Hwangsaeul-ro, 258 beon-gil</extaddr>
          <street> Bundang-gu, Seongnam-si,</street>
          <region>Gyeonggi-do</region> <code>463-784</code>
          <country>Republic of Korea</country>
        </postal>
        <email>jongyoon.shin@sk.com</email>
      </address>
    </author>

    <author fullname="Daniel King" initials="D." surname="King">
      <organization>Lancaster University</organization>
      <address>
        <postal>
          <country>UK</country>
        </postal>
        <email>d.king@lancaster.ac.uk</email>
      </address>
    </author>

    <date month="March" year="2020"/>
    <workgroup>PCE Working Group</workgroup>


    <abstract>
      <t>
   A stateful Path Computation Element (PCE) maintains information on
   the current network state received from the Path Computation Clients
   (PCCs), including computed Label Switched Paths (LSPs), reserved
   resources within the network, and pending path computation requests.
   This information may then be considered when computing the path for a
   new traffic-engineered LSP or for any associated/dependent LSPs. The
   path-computation response from a PCE helps the PCC to
   gracefully establish the computed LSP.</t>
      <t>
   The Hierarchical Path Computation Element (H-PCE) architecture
   allows the optimum sequence of
   interconnected domains to be selected and network policy to be
   applied if applicable, via the use of a hierarchical relationship
   between PCEs.</t>
      <t>
   Combining the capabilities of stateful PCE and the hierarchical PCE
   would be advantageous. This document describes general considerations
   and use cases for the deployment of stateful, but not stateless, PCEs
   using the hierarchical PCE architecture.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="sect-1" numbered="true" toc="default">
      <name>Introduction</name>
      <section anchor="sect-1.1" numbered="true" toc="default">
        <name>Background</name>
        <t>
   The Path Computation Element communication Protocol (PCEP) <xref target="RFC5440" format="default"/>
   provides mechanisms for Path Computation Elements (PCEs) to perform
   path computations in response to the requests of Path Computation Clients (PCCs).</t>
        <t>
   A stateful PCE is capable of considering, for the purposes of path
   computation, not only the network state in terms of links and nodes
   (referred to as the Traffic Engineering Database or TED) but also the
   status of active services (previously computed paths, and currently
   reserved resources, stored in the Label Switched Paths Database
   (LSPDB).</t>
        <t>
   <xref target="RFC8051" format="default"/> describes general considerations for a stateful PCE
   deployment; it also examines its applicability and benefits as well as
   its challenges and limitations through a number of use cases.</t>
        <t>
   <xref target="RFC8231" format="default"/> describes a set of extensions to PCEP to provide stateful
   control. For its computations, a stateful PCE has access to not only the information
   carried by the network's Interior Gateway Protocol (IGP), but also
   the set of active paths and their reserved resources.  The additional state
   allows the PCE to compute
   constrained paths while considering individual LSPs and their
   interactions.  <xref target="RFC8281" format="default"/> describes the setup, maintenance, and
   teardown of PCE-initiated LSPs under the stateful PCE model.</t>
        <t>
   <xref target="RFC8231" format="default"/> also describes the active stateful PCE. The
   active PCE functionality allows a PCE to reroute an existing LSP, make
   changes to the attributes of an existing LSP, or delegate control of
   specific LSPs to a new PCE.</t>
        <t>
   The ability to compute constrained paths for Traffic Engineering (TE) LSPs in Multiprotocol
   Label Switching (MPLS) and Generalized MPLS (GMPLS) networks across
   multiple domains has been identified as a key motivation for PCE
   development.  <xref target="RFC6805" format="default"/> describes a Hierarchical PCE (H-PCE)
   architecture that can be used for computing end-to-end paths for
   interdomain MPLS TE and GMPLS Label Switched
   Paths (LSPs).  Within the H-PCE architecture
   <xref target="RFC6805" format="default"/>, the Parent PCE (P-PCE) is used to compute a multidomain
   path based on the domain connectivity information.  A Child PCE
   (C-PCE) may be responsible for a single domain or multiple domains.
   The C-PCE is used to compute the intradomain path based on its
   domain topology information.</t>
        <t>
   This document presents general considerations for stateful PCEs, and
   not stateless PCEs, in the hierarchical PCE architecture.  It focuses
   on the behavior changes and additions to the existing stateful PCE
   mechanisms (including PCE-initiated LSP setup and active stateful PCE
   usage) in the context of networks using the H-PCE architecture.</t>
        <t>
   In this document, Sections <xref target="sect-3.1" format="counter"/> and
   <xref target="sect-3.2" format="counter" /> focus on end-to-end (E2E)
   interdomain TE LSP. <xref target="sect-3.3.1" format="default"/> describes the operations for
   stitching per-domain LSPs.</t>
      </section>
      <section anchor="sect-1.2" numbered="true" toc="default">
        <name>Use Cases and Applicability of Hierarchical Stateful PCE</name>
        <t>
   As per <xref target="RFC6805" format="default"/>, in the hierarchical PCE architecture, a P-PCE
   maintains a domain topology map that contains the child domains and
   their interconnections.  Usually, the P-PCE has no information about
   the content of the child domains.  But, if the PCE is applied to the
   Abstraction and Control of TE Networks (ACTN) <xref target="RFC8453"
   format="default"/> as described
   in <xref target="RFC8637" format="default"/>, the Provisioning Network
   Controller (PNC) can provide
   an abstract topology to the Multi-Domain Service Coordinator (MDSC).
   Thus, the P-PCE in MDSC could be aware of topology information in much
   more detail than just the domain topology.</t>
        <t>
   In a PCEP session between a PCC (ingress) and a C-PCE, the C-PCE acts
   as per the stateful PCE operations described in <xref target="RFC8231" format="default"/> and
   <xref target="RFC8281" format="default"/>. The same C-PCE behaves as a PCC on the PCEP session
   towards the P-PCE. The P-PCE is stateful in nature; thus, it maintains
   the state of the interdomain LSPs that are reported to it. The
   interdomain LSP could also be delegated by the C-PCE to the P-PCE,
   so that the P-PCE could update the interdomain path. The trigger for
   this update could be the LSP state change reported for this LSP or
   any other LSP. It could also be a change in topology at the P-PCE,
   such as interdomain link status change. In case of use of stateful
   H-PCE in ACTN, a change in abstract topology learned by the P-PCE
   could also trigger the update. Some other external factors (such as a
   measurement probe) could also be a trigger at the P-PCE. Any such
   update would require an interdomain path recomputation as described
   in <xref target="RFC6805" format="default"/>.</t>
        <t>
   The end-to-end interdomain path computation and setup is described in
   <xref target="RFC6805" format="default"/>. Additionally, a per-domain
   stitched-LSP model is
   also applicable in a P-PCE initiation model. Sections <xref target="sect-3.1"
   format="counter"/>, <xref target="sect-3.2" format="counter"/>, and
   <xref target="sect-3.3" format="counter"/> describe the
   end-to-end contiguous LSP setup, whereas <xref target="sect-3.3.1" format="default"/>
   describes the per-domain stitching.</t>
        <section anchor="sect-1.2.1" numbered="true" toc="default">
          <name>Applicability to ACTN</name>
          <t>
   <xref target="RFC8453" format="default"/> describes a framework for the
   Abstraction and Control of TE
   Networks (ACTN), where each Provisioning Network Controller (PNC) is
   equivalent to a C-PCE, and the P-PCE is the Multi-Domain Service
   Coordinator (MDSC).  The per-domain stitched LSP is well suited for ACTN
   deployments, as per the
   hierarchical PCE architecture described in <xref target="sect-3.3.1"
   format="default"/> of this document and <xref target="RFC8453" sectionFormat="of"
   section="4.1" />.</t>
          <t>
   <xref target="RFC8637" format="default"/> examines the applicability of PCE to the ACTN framework. To
   support the function of multidomain coordination via hierarchy, the
   hierarchy of stateful PCEs plays a crucial role.</t>
          <t>
   In the ACTN framework, a Customer Network Controller (CNC) can request the
   MDSC to check whether there is a possibility to meet Virtual Network (VN)
   requirements before requesting that the VN be provisioned. The H-PCE
   architecture as described in <xref target="RFC6805" format="default"/> can support this
   function using Path Computation Request and Reply (PCReq and PCRep,
   respectively) messages between the P-PCE and C-PCEs. When
   the CNC requests VN provisioning, the MDSC decomposes this request into
   multiple interdomain LSP provisioning requests, which might be further
   decomposed into per-domain path segments. This is described in
   <xref target="sect-3.3.1" format="default"/>. The MDSC uses the LSP
   initiate request (PCInitiate)
   message from the P-PCE towards the C-PCE, and the C-PCE reports the state
   back to the P-PCE via a Path Computation State Report (PCRpt) message. The
   P-PCE could make changes to the LSP via the use of a Path Computation
   Update Request (PCUpd) message.</t>
          <t>
   In this case, the P-PCE (as MDSC) interacts with multiple C-PCEs (as
   PNCs) along the interdomain path of the LSP.</t>
        </section>
        <section anchor="sect-1.2.2" numbered="true" toc="default">
          <name>End-to-End Contiguous LSP</name>
          <t>
	Different signaling options for interdomain RSVP-TE are identified in
	<xref target="RFC4726" format="default"/>. Contiguous LSPs are achieved using the
	procedures of <xref target="RFC3209" format="default"/> and <xref target="RFC3473" format="default"/> to
	create a single end-to-end LSP that spans all domains. <xref target="RFC6805" format="default"/> describes the technique for establishing the optimum
	path when the sequence of domains is not known in advance.</t>
          <t>
   That document shows how the PCE architecture can be extended to allow the
   optimum sequence of domains to be selected and the optimum
   end-to-end path to be derived.</t>
          <t>
   A stateful P-PCE has to be aware of the interdomain LSPs for it to
   consider them during path computation. For instance, when a domain-diverse
   path is required from another LSP, the P-PCE needs to be aware of the
   LSP. This is the passive stateful P-PCE, as described in <xref
   target="sect-3.1" format="default"/>. Additionally, the interdomain LSP
   could be delegated
   to the P-PCE, so that P-PCE could trigger an update via a PCUpd message.
   The update could be triggered on receipt of the PCRpt message that
   indicates a status change of this LSP or some other LSP. The other LSP
   could be an associated LSP (such as a protection LSP <xref target="RFC8745"
   format="default"/>) or an unrelated LSP whose
   resource change leads to reoptimization at the P-PCE. This is the active
   stateful operation, as described in <xref target="sect-3.2" format="default"/>. Further, the
   P-PCE could be instructed to create an interdomain LSP on its own using
   the PCInitiate message for an E2E contiguous LSP. The P-PCE would send the
   PCInitiate message to the ingress domain C-PCE, which would further
   instruct the ingress PCC.</t>
          <t>
   In this document, for the contiguous LSP, the above interactions are
   only between the ingress domain C-PCE and the P-PCE. The use of
   stateful operations for an interdomain LSP between the
   transit/egress domain C-PCEs and the P-PCE is out of the scope of this
   document.</t>
        </section>
        <section anchor="sect-1.2.3" numbered="true" toc="default">
          <name>Applicability of a Stateful P-PCE</name>
          <t> <xref target="RFC8051" format="default"/> describes general
	considerations for a stateful PCE deployment and examines its
	applicability and benefits, as well as its challenges and limitations,
	through a number of use cases. These are also applicable to the
	stateful P-PCE when used for the interdomain LSP path computation and
	setup. It should be noted that though the stateful P-PCE has limited
	direct visibility inside the child domain, it could still trigger
	reoptimization with the help of child PCEs based on LSP state
	changes, abstract topology changes, or some other external
	factors.</t>
          <t>
   The C-PCE would delegate control of the interdomain LSP to the P-PCE
   so that the P-PCE can make changes to it. Note that, if the C-PCE
   becomes aware of a topology change that is hidden from the P-PCE, it
   could take back the delegation from the P-PCE to act on it itself.
   Similarly, a P-PCE could also request delegation if it needs to make
   a change to the LSP (refer to <xref target="RFC8741" format="default"/>).</t>
        </section>
      </section>
    </section>
    <section anchor="sect-2" numbered="true" toc="default">
      <name>Terminology</name>
      <t> The terminology is as
      per <xref target="RFC4655" format="default"/>, <xref target="RFC5440"
      format="default"/>, <xref target="RFC6805" format="default"/>, <xref
      target="RFC8051" format="default"/>, <xref target="RFC8231"
      format="default"/>, and <xref target="RFC8281" format="default"/>.</t>
      <t>Some key terms are listed below for easy reference.</t>
      <dl newline="false" spacing="normal" indent="9">
        <dt>ACTN:</dt>
        <dd> Abstraction and Control of Traffic Engineering Networks</dd>
        <dt>CNC:</dt>
        <dd> Customer Network Controller</dd>
        <dt>C-PCE:</dt>
        <dd> Child Path Computation Element</dd>
        <dt>H-PCE:</dt>
        <dd> Hierarchical Path Computation Element</dd>
        <dt>IGP:</dt>
        <dd> Interior Gateway Protocol</dd>
        <dt>LSP:</dt>
        <dd> Label Switched Path</dd>
        <dt>LSPDB:</dt>
        <dd> Label Switched Path Database</dd>
        <dt>LSR:</dt>
        <dd> Label Switching Router</dd>
        <dt>MDSC:</dt>
        <dd> Multi-Domain Service Coordinator</dd>
        <dt>PCC:</dt>
        <dd> Path Computation Client</dd>
        <dt>PCE:</dt>
        <dd> Path Computation Element</dd>
        <dt>PCEP:</dt>
        <dd> Path Computation Element communication Protocol</dd>
        <dt>PNC:</dt>
        <dd> Provisioning Network Controller</dd>
        <dt>P-PCE:</dt>
        <dd> Parent Path Computation Element</dd>
        <dt>TED:</dt>
        <dd> Traffic Engineering Database</dd>
        <dt>VN:</dt>
        <dd> Virtual Network</dd>
      </dl>
      <section anchor="sect-2.1" numbered="true" toc="default">
        <name>Requirements Language</name>
        <t>
	  The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
	  "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
	  NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
	  "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
	  "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document
	  are to be interpreted as
	  described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
	  when, and only when, they appear in all capitals, as shown here.
        </t>
      </section>
    </section>
    <section anchor="sect-3" numbered="true" toc="default">
      <name>Hierarchical Stateful PCE</name>
      <t> As described in <xref target="RFC6805" format="default"/>, in the hierarchical PCE
	architecture, a P-PCE maintains a domain topology map that contains the
	child domains (seen as vertices in the topology) and their
	interconnections (links in the topology). Usually, the P-PCE has no
	information about the content of the child domains. Each child domain
	has at least one PCE capable of computing paths across the domain.
	These PCEs are known as Child PCEs (C-PCEs) <xref target="RFC6805" format="default"/>
	and have a direct relationship with the P-PCE. The P-PCE builds the
	domain topology map either via direct configuration or from learned
	information received from each C-PCE. The network policy could be
	applied while building the domain topology map. This has been
	described in detail in <xref target="RFC6805" format="default"/>.</t>
      <t>
   Note that, in the scope of this document, both the C-PCEs and the P-PCE are
   stateful in nature.</t>
      <t>
   <xref target="RFC8231" format="default"/> specifies new functions to support a stateful PCE.
   It also specifies that a function can be initiated either from a PCC
   towards a PCE (C-E) or from a PCE towards a PCC (E-C).</t>
      <t>
   This document extends these functions to support H-PCE Architecture
   from a C-PCE towards P-PCE (EC-EP) or from a P-PCE towards C-PCE
   (EP-EC). All PCE types herein (EC-EP and EP-EC) are assumed to be
   "stateful PCE".</t>
      <t>
   A number of interactions are expected in the hierarchical stateful
   PCE architecture. These include:</t>
      <dl newline="false" spacing="normal" indent="3">
        <dt>LSP State Report (EC-EP):</dt>
        <dd>A child stateful PCE sends an
        LSP state report to a parent stateful PCE to indicate the state of an LSP.
	</dd>
        <dt>LSP State Synchronization (EC-EP):</dt>
        <dd>After the session
	between the child and parent stateful PCEs is initialized, the P-PCE
	must learn the state of the C-PCE's TE LSPs.
	</dd>
        <dt>LSP Control Delegation (EC-EP, EP-EC):</dt>

	
        <dd>A C-PCE grants to the P-PCE
     the right to update LSP attributes on one or more LSPs; at any
     time, the C-PCE
     may withdraw the delegation or the P-PCE may give up the
     delegation.</dd>
        <dt>LSP Update Request (EP-EC):</dt>
        <dd>A stateful P-PCE requests
	modification of attributes on a C-PCE's TE LSP.
	</dd>
        <dt>PCE LSP Initiation Request (EP-EC):</dt>
        <dd>A stateful P-PCE requests a C-PCE to initiate a TE LSP.
	</dd>
      </dl>
      <t>
   Note that this hierarchy is recursive, so a Label Switching Router
   (LSR), as a PCC, could delegate control to a PCE. That PCE may, in turn,
   delegate to its parent, which may further delegate to its parent (if
   it exists). Similarly, update operations can also be applied
   recursively.</t>
      <t>
   <xref target="RFC8685" format="default"/> defines the H-PCE-CAPABILITY TLV that is used in the Open message to advertise the H-PCE
   capability. <xref target="RFC8231" format="default"/> defines the STATEFUL-PCE-CAPABILITY
   TLV used in the Open message to indicate stateful support. To indicate the
   support for stateful H-PCE operations described in this document, a PCEP
   speaker <bcp14>MUST</bcp14> include both TLVs in an Open message. It is <bcp14>RECOMMENDED</bcp14> that
   any implementation that supports stateful operations <xref target="RFC8231" format="default"/> and H-PCE <xref target="RFC8685" format="default"/> also implement the
   stateful H-PCE operations as described in this document.</t>
      <t>
   Further consideration may be made for optional procedures for stateful
   communication coordination between PCEs, including procedures to minimize
   computational loops. The procedures described in <xref target="I-D.litkowski-pce-state-sync" format="default"/> facilitate stateful communication
   between PCEs for various use cases. The procedures and extensions as
   described in <xref target="I-D.litkowski-pce-state-sync"
   sectionFormat="of" section="3"/> are
   also applicable to child and parent PCE communication. The
   SPEAKER-IDENTITY-ID TLV (defined in <xref target="RFC8232" format="default"/>) is included in
   the LSP object to identify the ingress (PCC). The PCEP-specific identifier
   for the LSP (PLSP-ID <xref target="RFC8231" format="default"/>) used in the
   forwarded PCRpt by the C-PCE to the P-PCE is the same as the original one used by
   the PCC.</t>
      <section anchor="sect-3.1" numbered="true" toc="default">
        <name>Passive Operations</name>
        <t> Procedures described in <xref target="RFC6805" format="default"/> are applied, where the
	ingress PCC triggers a path computation request for the destination
	towards the C-PCE in the domain where the LSP originates. The C-PCE
	further forwards the request to the P-PCE. The P-PCE selects a set of
	candidate domain paths based on the domain topology and the state of
	the interdomain links. It then sends computation requests to the
	C-PCEs responsible for each of the domains on the candidate domain
	paths. Each C-PCE computes a set of candidate path segments across
	its domain and sends the results to the P-PCE. The P-PCE uses this
	information to select path segments and concatenate them to derive the
	optimal end-to-end interdomain path. The end-to-end path is then
	sent to the C-PCE that received the initial path request, and this
	C-PCE passes the path on to the PCC that issued the original
	request.</t>
        <t>
   As per <xref target="RFC8231" format="default"/>, the PCC sends an LSP State
   Report carried on a PCRpt
   message to the C-PCE, indicating the LSP's status.  The C-PCE may
   further propagate the State Report to the P-PCE.  A local policy at the
   C-PCE may dictate which LSPs are reported to the P-PCE.  The PCRpt
   message is sent from C-PCE to P-PCE.</t>
        <t>
   State synchronization mechanisms as described in <xref target="RFC8231" format="default"/> and
   <xref target="RFC8232" format="default"/> are applicable to a PCEP session between C-PCE and P-PCE as
   well.</t>
        <t>
   We use the hierarchical domain topology example from <xref target="RFC6805" format="default"/> as the
   reference topology for the entirety of this document.  It is shown in
   Figure 1.</t>

   
        <figure anchor="ure-hierarchical-domain-topology-example">
          <name>Hierarchical Domain Topology Example</name>
          <artwork name="" type="" align="left" alt=""><![CDATA[
   -----------------------------------------------------------------
  |   Domain 5                                                      |
  |                              -----                              |
  |                             |PCE 5|                             |
  |                              -----                              |
  |                                                                 |
  |    ----------------     ----------------     ----------------   |
  |   | Domain 1       |   | Domain 2       |   | Domain 3       |  |
  |   |                |   |                |   |                |  |
  |   |        -----   |   |        -----   |   |        -----   |  |
  |   |       |PCE 1|  |   |       |PCE 2|  |   |       |PCE 3|  |  |
  |   |        -----   |   |        -----   |   |        -----   |  |
  |   |                |   |                |   |                |  |
  |   |            ----|   |----        ----|   |----            |  |
  |   |           |BN11+---+BN21|      |BN23+---+BN31|           |  |
  |   |   -        ----|   |----        ----|   |----        -   |  |
  |   |  |S|           |   |                |   |           |D|  |  |
  |   |   -        ----|   |----        ----|   |----        -   |  |
  |   |           |BN12+---+BN22|      |BN24+---+BN32|           |  |
  |   |            ----|   |----        ----|   |----            |  |
  |   |                |   |                |   |                |  |
  |   |         ----   |   |                |   |   ----         |  |
  |   |        |BN13|  |   |                |   |  |BN33|        |  |
  |    -----------+----     ----------------     ----+-----------   |
  |                \                                /               |
  |                 \       ----------------       /                |
  |                  \     |                |     /                 |
  |                   \    |----        ----|    /                  |
  |                    ----+BN41|      |BN42+----                   |
  |                        |----        ----|                       |
  |                        |                |                       |
  |                        |        -----   |                       |
  |                        |       |PCE 4|  |                       |
  |                        |        -----   |                       |
  |                        |                |                       |
  |                        | Domain 4       |                       |
  |                         ----------------                        |
  |                                                                 |
   -----------------------------------------------------------------
]]></artwork>
        </figure>
        <t>
   Steps 1 to 11 are exactly as described in <xref
   target="RFC6805" sectionFormat="of" section="4.6.2"/>
   ("Hierarchical PCE End-to-End Path Computation Procedure"); the
   following additional steps are added for stateful PCE, to be executed
   at the end:</t>
        <dl newline="false" spacing="normal" indent="5">
          <dt>(A)</dt>
          <dd>The ingress LSR initiates the setup of the LSP as
        per the path and reports the LSP status to PCE1 ("GOING-UP").</dd>
          <dt>(B)</dt>
          <dd>PCE1 further reports the status of the LSP to
	the P-PCE (PCE5).</dd>
          <dt>(C)</dt>
          <dd>The ingress LSR notifies PCE1 of the LSP state when the
	  state is "UP".</dd>
          <dt>(D)</dt>
          <dd>PCE1 further reports the status of the LSP to the P-PCE
	(PCE5).	</dd>
        </dl>
        <t>
   The ingress LSR could trigger path reoptimization by sending the
   path computation request as described in <xref target="RFC6805"
   format="default"/>; at this time, it
   can include the LSP object in the PCReq message, as described in
   <xref target="RFC8231" format="default"/>.</t>
      </section>
      <section anchor="sect-3.2" numbered="true" toc="default">
        <name>Active Operations</name>
        <t> <xref target="RFC8231" format="default"/> describes the case of an
	active stateful PCE. The
	active PCE functionality uses two specific PCEP messages:</t>
        <ul spacing="normal">
          <li>Update Request (PCUpd)</li>
          <li>State Report (PCRpt)</li>
        </ul>
        <t>
   The first is sent by the PCE to a PCC for modifying LSP attributes.
   The PCC sends back a PCRpt to acknowledge the requested operation or
   report any change in the LSP's state.</t>
        <t>
   As per <xref target="RFC8051" format="default"/>, delegation is an
   operation to grant a PCE temporary
   rights to modify a subset of LSP parameters on the LSPs of one or more
   PCCs.  The C-PCE may further choose to delegate to its P-PCE based on
   a local policy.  The PCRpt message with the "D" (delegate) flag is
   sent from C-PCE to P-PCE.</t>
        <t>
   To update an LSP, a PCE sends an LSP Update Request to the PCC using
   a PCUpd message.  For an LSP delegated to a P-PCE via the C-PCE, the
   P-PCE can use the same PCUpd message to request a change to the C-PCE
   (the ingress domain PCE).  The C-PCE further propagates the update
   request to the PCC.</t>
        <t>
   The P-PCE uses the same mechanism described in <xref target="sect-3.1" format="default"/> to
   compute the end-to-end path using PCReq and PCRep messages.</t>
        <t>
   For active operations, the following steps are required when
   delegating the LSP, again using the reference architecture described
   in Figure 1 ("Hierarchical Domain Topology Example").</t>
        <dl newline="false" spacing="normal" indent="5">
          <dt>(A)</dt>
          <dd>The ingress LSR delegates the LSP to PCE1 via a
        PCRpt message with D flag set.</dd>
          <dt>(B)</dt>
          <dd>PCE1 further delegates the LSP to the P-PCE
	(PCE5).</dd>
          <dt>(C)</dt>
          <dd>Steps 4 to 10 in <xref target="RFC6805"
	  sectionFormat="of" section="4.6.2"/> are executed at P-PCE (PCE5) to
	  determine the end-to-end path.</dd>
          <dt>(D)</dt>
          <dd>The P-PCE (PCE5) sends the update request to the
	C-PCE (PCE1) via PCUpd message.</dd>
          <dt>(E)</dt>
          <dd>PCE1 further updates the LSP to the ingress LSR
	(PCC).</dd>
          <dt>(F)</dt>
          <dd>The ingress LSR initiates the setup of the LSP as
	per the path and reports the LSP status to PCE1 ("GOING-UP").</dd>
          <dt>(G)</dt>
          <dd>PCE1 further reports the status of the LSP to
	the P-PCE (PCE5).</dd>
          <dt>(H)</dt>
          <dd>The ingress LSR notifies PCE1 of the LSP state when
	the state is "UP".</dd>
          <dt>(I)</dt>
          <dd>PCE1 further reports the status of the LSP to
	the P-PCE (PCE5).</dd>
        </dl>
      </section>
      <section anchor="sect-3.3" numbered="true" toc="default">
        <name>PCE Initiation of LSPs</name>
        <t> <xref target="RFC8281" format="default"/> describes the setup,
	maintenance, and teardown of
	PCE-initiated LSPs under the stateful PCE model, without the need for
	local configuration on the PCC, thus allowing for a dynamic network
	that is centrally controlled and deployed.  To instantiate or delete
	an LSP, the PCE sends the Path Computation LSP initiate request
	(PCInitiate) message to the PCC.  In the case of an interdomain LSP in
	hierarchical PCE architecture, the initiation operations can be
	carried out at the P-PCE.  In that case, after the P-PCE finishes the
	E2E path computation, it can send the PCInitiate message to the C-PCE
	(the ingress domain PCE), and the C-PCE further propagates the initiate
	request to the PCC.</t>
        <t>
   The following steps are performed for PCE-initiated operations, again
   using the reference architecture described in Figure 1 ("Hierarchical
   Domain Topology Example"):</t>
        <dl newline="false" spacing="normal" indent="5">
          <dt>(A)</dt>
          <dd> The P-PCE (PCE5) is requested to initiate an
        LSP. Steps 4 to 10 in <xref target="RFC6805"
	sectionFormat="of" section="4.6.2"/> are
        executed to determine the end-to-end path.</dd>
          <dt>(B)</dt>
          <dd> The P-PCE (PCE5) sends the initiate request to the
	child PCE (PCE1) via PCInitiate message.</dd>
          <dt>(C)</dt>
          <dd>PCE1 further propagates the initiate message to
	the ingress LSR (PCC).</dd>
          <dt>(D)</dt>
          <dd>The ingress LSR initiates the setup of the LSP as per the path
	and reports to PCE1 the LSP status ("GOING-UP").</dd>
          <dt>(E)</dt>
          <dd>PCE1 further reports the status of the LSP to the P-PCE
	(PCE5).</dd>
          <dt>(F)</dt>
          <dd>The ingress LSR notifies PCE1 of the LSP state when the state is
	"UP".</dd>
          <dt>(G)</dt>
          <dd>PCE1 further reports the status of the LSP to the P-PCE
	(PCE5).</dd>
        </dl>
        <t>
   The ingress LSR (PCC) generates the PLSP-ID for the LSP and
   inform the C-PCE, which is propagated to the P-PCE.</t>
        <section anchor="sect-3.3.1" numbered="true" toc="default">
          <name>Per-Domain Stitched LSP</name>
          <t> The hierarchical PCE architecture, as per <xref target="RFC6805"
	  format="default"/>, is
	primarily used for E2E LSP.  With PCE-initiated capability, another
	mode of operation is possible, where multiple intradomain LSPs are
	initiated in each domain and are further stitched to form an E2E
	LSP.  The P-PCE sends PCInitiate message to each C-PCE separately to
	initiate individual LSP segments along the domain path. These
	individual per-domain LSPs are stitched together by some mechanism,
	which is out of the scope of this document (Refer to <xref
	target="I-D.dugeon-pce-stateful-interdomain" format="default"/>).</t>
          <t>
   The following steps are performed for the per-domain stitched LSP
   operation, again using the reference architecture described in Figure
   1 ("Hierarchical Domain Topology Example"):</t>
          <dl newline="false" spacing="normal" indent="5">
            <dt>(A)</dt>
            <dd>
              <t> The P-PCE (PCE5) is requested to initiate an LSP. Steps 4 to
	      10 in <xref target="RFC6805"
	sectionFormat="of" section="4.6.2"/> are
        executed to determine the end-to-end path, which is broken into
        per-domain LSPs. For example:
              </t>
              <ul spacing="normal">
                <li>S-BN41</li>
                <li>BN41-BN33</li>
                <li>BN33-D</li>
              </ul>
            </dd>
          </dl>
          <t>
   It should be noted that the P-PCE may use other mechanisms to
   determine the suitable per-domain LSPs (apart from <xref target="RFC6805" format="default"/>).</t>
          <t>
   For LSP (BN33-D):</t>
          <dl newline="false" spacing="normal" indent="5">
            <dt>(B)</dt>
            <dd>The P-PCE (PCE5) sends the initiate request to the
        child PCE (PCE3) via a PCInitiate message for the LSP (BN33-D).</dd>
            <dt>(C)</dt>
            <dd>PCE3 further propagates the initiate message to
	BN33. </dd>
            <dt>(D)</dt>
            <dd>BN33 initiates the setup of the LSP as per the path
	and reports to PCE3 the LSP status ("GOING-UP").</dd>
            <dt>(E)</dt>
            <dd>PCE3 further reports the status of the LSP to
	the P-PCE (PCE5).</dd>
            <dt>(F)</dt>
            <dd>The node BN33 notifies PCE3 of the LSP state when
	the state is "UP".</dd>
            <dt>(G)</dt>
            <dd>PCE3 further reports the status of the LSP to the P-PCE
	(PCE5).</dd>
          </dl>
          <t>
   For LSP (BN41-BN33):</t>
          <dl newline="false" spacing="normal" indent="5">
            <dt>(H)</dt>
            <dd>The P-PCE (PCE5) sends the initiate request to the
        child PCE (PCE4) via PCInitiate message for LSP (BN41-BN33).</dd>
            <dt>(I)</dt>
            <dd>PCE4 further propagates the initiate message to
	BN41.</dd>
            <dt>(J)</dt>
            <dd>BN41 initiates the setup of the LSP as per the path
	and reports to PCE4 the LSP status ("GOING-UP").</dd>
            <dt>(K)</dt>
            <dd>PCE4 further reports the status of the LSP to
	the P-PCE (PCE5).</dd>
            <dt>(L)</dt>
            <dd>The node BN41 notifies PCE4 of the LSP state when
	the state is "UP".</dd>
            <dt>(M)</dt>
            <dd>PCE4 further reports the status of the LSP to the P-PCE
	(PCE5).</dd>
          </dl>
          <t>
   For LSP (S-BN41):</t>
          <dl newline="false" spacing="normal" indent="5">
            <dt>(N)</dt>
            <dd>The P-PCE (PCE5) sends the initiate request to the
        child PCE (PCE1) via a PCInitiate message for the LSP (S-BN41).</dd>
            <dt>(O)</dt>
            <dd>PCE1 further propagates the initiate message to
	node S.</dd>
            <dt>(P)</dt>
            <dd>S initiates the setup of the LSP as per the path and
	reports to PCE1 the LSP status ("GOING-UP").</dd>
            <dt>(Q)</dt>
            <dd>PCE1 further reports the status of the LSP to
	the P-PCE (PCE5).</dd>
            <dt>(R)</dt>
            <dd>The node S notifies PCE1 of the LSP state when the state is
	"UP".</dd>
            <dt>(S)</dt>
            <dd>PCE1 further reports the status of the LSP to
	the P-PCE (PCE5).</dd>
          </dl>
          <t>
   Additionally:</t>
          <dl newline="false" spacing="normal" indent="5">
            <dt>(T)</dt>
            <dd>Once the P-PCE receives a report of each per-domain LSP,
        it should use a suitable stitching mechanism, which is out of the scope of
        this document. In this step, the P-PCE (PCE5) could also initiate an E2E
        LSP (S-D) by sending the PCInitiate message to the ingress C-PCE
        (PCE1).</dd>
          </dl>
          <t>
   Note that each per-domain LSP can be set up in parallel. Further, it
   is also possible to stitch the per-domain LSP at the same time as the
   per-domain LSPs are initiated. This option is defined in
   <xref target="I-D.dugeon-pce-stateful-interdomain" format="default"/>.</t>
        </section>
      </section>
    </section>
    <section anchor="sect-4" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t> The
	security considerations listed in <xref target="RFC8231"
	format="default"/>, <xref target="RFC6805" format="default"/>, and
	<xref target="RFC5440" format="default"/> apply to this document,
	as well. As per <xref target="RFC6805" format="default"/>, it is expected that the
	parent PCE will require all child PCEs to use full security (i.e., the
	highest security mechanism available for PCEP) when communicating with
	the parent.</t>
      <t>
   Any multidomain operation necessarily involves the exchange of information
   across domain boundaries.  This is bound to represent a significant
   security and confidentiality risk, especially when the child domains are
   controlled by different commercial concerns.  PCEP allows individual PCEs
   to maintain the confidentiality of their domain-path information using
   path-keys <xref target="RFC5520" format="default"/>, and the hierarchical PCE architecture
   is specifically designed to enable as much isolation of information about domain topology and
   capabilities as is possible. The LSP state in the PCRpt message
   must continue to maintain the internal domain confidentiality when
   required.</t>
      <t>
   The security considerations for PCE-initiated LSP in <xref
   target="RFC8281" format="default"/> are
   also applicable from P-PCE to C-PCE.</t>
      <t>
   Further, <xref target="sect-6.3" /> describes the use of a path-key <xref
   target="RFC5520" format="default"/> for
   confidentiality between C-PCE and P-PCE.</t>
      <t>
   Thus, it is <bcp14>RECOMMENDED</bcp14> to secure the PCEP session (between the P-PCE and
   the C-PCE) using Transport Layer Security (TLS) <xref target="RFC8446" format="default"/>
   (per the recommendations and best current practices in BCP 195 <xref target="RFC7525" format="default"/>) and/or TCP Authentication Option (TCP-AO) <xref target="RFC5925" format="default"/>. The guidance for implementing PCEP with TLS can be
   found in <xref target="RFC8253" format="default"/>.</t>
      <t>
   In the case of TLS, due care needs to be taken while exposing the parameters of
   the X.509 certificate -- such as subjectAltName:otherName, which is set to
   Speaker Entity Identifier <xref target="RFC8232" format="default"/> as per
      <xref target="RFC8253" format="default"/> -- to ensure uniqueness and
      avoid any mismatch.</t>
    </section>
    <section anchor="sect-5" numbered="true" toc="default">
      <name>Manageability Considerations</name>
      <t> All
	manageability requirements and considerations listed in <xref target="RFC5440" format="default"/>, <xref target="RFC6805" format="default"/>, <xref target="RFC8231" format="default"/>, and <xref target="RFC8281" format="default"/> apply to stateful
	H-PCE defined in this document. In addition, requirements and
	considerations listed in this section apply.</t>
      <section anchor="sect-5.1" numbered="true" toc="default">
        <name>Control of Function and Policy</name>
        <t>
   Support of the hierarchical procedure will be controlled by the
   management organization responsible for each child PCE. The parent
   PCE must only accept path-computation requests from authorized child
   PCEs. If a parent PCE receives a report from an unauthorized child
   PCE, the report should be dropped. All mechanisms described in
   <xref target="RFC8231" format="default"/> and <xref target="RFC8281" format="default"/> continue to apply.</t>
      </section>
      <section anchor="sect-5.2" numbered="true" toc="default">
        <name>Information and Data Models</name>
        <t>
   An implementation should allow the operator to view the stateful and
   H-PCE capabilities advertised by each peer. The "ietf-pcep" PCEP YANG
   module is specified in <xref target="I-D.ietf-pce-pcep-yang" format="default"/>. This YANG module
   will be required to be augmented to also include details for stateful
   H-PCE deployment and operation. The exact model and attributes are
   out of scope for this document.</t>
      </section>
      <section anchor="sect-5.3" numbered="true" toc="default">
        <name>Liveness Detection and Monitoring</name>
        <t>
   Mechanisms defined in this document do not imply any new liveness-detection
   or monitoring requirements in addition to those already
   listed in <xref target="RFC5440" format="default"/>.</t>
      </section>
      <section anchor="sect-5.4" numbered="true" toc="default">
        <name>Verification of Correct Operations</name>
        <t>
   Mechanisms defined in this document do not imply any new
   operation-verification requirements in addition to those already listed in
   <xref target="RFC5440" format="default"/> and <xref target="RFC8231" format="default"/>.</t>
      </section>
      <section anchor="sect-5.5" numbered="true" toc="default">
        <name>Requirements on Other Protocols</name>
        <t>
   Mechanisms defined in this document do not imply any new requirements
   on other protocols.</t>
      </section>
      <section anchor="sect-5.6" numbered="true" toc="default">
        <name>Impact on Network Operations</name>
        <t>
   Mechanisms defined in <xref target="RFC5440" format="default"/> and <xref target="RFC8231" format="default"/> also apply to PCEP
   extensions defined in this document.</t>

        <t>
   The stateful H-PCE technique brings the applicability of stateful PCE
   (described in <xref target="RFC8051" format="default"/>) to the LSP traversing multiple domains.</t>
        <t>
   As described in <xref target="sect-3" format="default"/>, a PCEP speaker includes both the
   H-PCE-CAPABILITY TLV <xref target="RFC8685" format="default"/> and
   STATEFUL-PCE-CAPABILITY TLV <xref target="RFC8231" format="default"/> to indicate support
   for stateful H-PCE. Note that there is a possibility of a PCEP speaker that
   does not support the stateful H-PCE feature but does provide support for
   stateful-PCE <xref target="RFC8231" format="default"/> and H-PCE <xref target="RFC8685" format="default"/> features. This PCEP speaker
   will also include both the TLVs; in this case, a PCEP peer could falsely
   assume that the stateful H-PCE feature is also supported. On further PCEP
   message exchange, the stateful messages will not be propagated further (as
   described in this document), and a stateful H-PCE-based "parent" control of
   the LSP will not happen. A PCEP peer should be prepared for this
   eventuality as a part of normal procedures.</t>
      </section>
      <section anchor="sect-5.7" numbered="true" toc="default">
        <name>Error Handling between PCEs</name>
        <t>
	Apart from the basic error handling described in this document, an
	implementation could also use the enhanced error and notification
	mechanism for stateful H-PCE operations described in <xref
	target="I-D.ietf-pce-enhanced-errors" format="default"/>. Enhanced
	features such as
	error-behavior propagation, notification, and error-criticality level
	are further defined in <xref target="I-D.ietf-pce-enhanced-errors" format="default"/>.</t>
      </section>
    </section>
    <section anchor="sect-6" numbered="true" toc="default">
      <name>Other Considerations</name>
      <section anchor="sect-6.1" numbered="true" toc="default">
        <name>Applicability to Interlayer Traffic Engineering</name>
        <t>
   <xref target="RFC5623" format="default"/> describes a framework for applying the PCE-based
   architecture to interlayer (G)MPLS traffic engineering.  The H-PCE
   stateful architecture with stateful P-PCE coordinating with the
   stateful C-PCEs of higher and lower layer is shown in <xref
   target="ure-sample-inter-layer-topology" />.</t>
        <figure anchor="ure-sample-inter-layer-topology">
          <name>Sample Interlayer Topology</name>
          <artwork name="" type="" align="left" alt=""><![CDATA[
                                              +----------+
                                              | Parent   |
                                             /| PCE      |
                                            / +----------+
                                           /     /   Stateful
                                          /     /    P-PCE
                                         /     /
                                        /     /
                       Stateful+-----+ /     /
                       C-PCE   | PCE |/     /
                       Hi      | Hi  |     /
                               +-----+    /
       +---+    +---+                    /     +---+    +---+
      + LSR +--+ LSR +........................+ LSR +--+ LSR +
      + H1  +  + H2  +                 /      + H3  +  + H4  +
       +---+    +---+\         +-----+/       /+---+    +---+
                      \        | PCE |       /
                       \       | Lo  |      /
             Stateful   \      +-----+     /
             C-PCE       \                /
             Lo           \+---+    +---+/
                          + LSR +--+ LSR +
                          + L1  +  + L2  +
                           +---+    +---+
]]></artwork>
        </figure>
        <t>
   All procedures described in <xref target="sect-3" format="default"/> are also
   applicable to interlayer path setup, and therefore to separate domains.</t>
      </section>
      <section anchor="sect-6.2" numbered="true" toc="default">
        <name>Scalability Considerations</name>
        <t>
   It should be noted that if all the C-PCEs were to report all the LSPs
   in their domain, it could lead to scalability issues for the P-PCE.
   Thus, it is recommended to only report the LSPs that are involved in
   H-PCE -- i.e., the LSPs that are either delegated to the P-PCE or
   initiated by the P-PCE. Scalability considerations for PCEP as per
   <xref target="RFC8231" format="default"/> continue to apply for the PCEP session between child and
   parent PCE.</t>
      </section>
      <section anchor="sect-6.3" numbered="true" toc="default">
        <name>Confidentiality</name>
        <t>
   As described in <xref target="RFC6805" sectionFormat="of" section="4.2"/>,
   information about the
   content of child domains is not shared, for both scaling and
   confidentiality reasons. The child PCE could also conceal the path
   information during path computation. A C-PCE may replace a path
   segment with a path-key <xref target="RFC5520" format="default"/>, effectively hiding the content of
   a segment of a path.</t>
      </section>
    </section>
    <section anchor="sect-7" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>
      This document has no IANA actions.</t>
    </section>
  </middle>
  <back>

<displayreference target="I-D.litkowski-pce-state-sync" to="PCE-STATE-SYNC"/>
<displayreference target="I-D.ietf-pce-pcep-yang" to="PCE-PCEP-YANG"/>
<displayreference target="I-D.dugeon-pce-stateful-interdomain" to="STATEFUL-INTERDOMAIN"/>
<displayreference target="I-D.ietf-pce-enhanced-errors" to="PCE-ENHANCED-ERRORS"/>

    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4655.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5440.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5520.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5925.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6805.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7525.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8231.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8253.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8281.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3209.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3473.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4726.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5623.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8051.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8232.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8453.xml"/>
        <xi:include
	    href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8637.xml"/>
        <xi:include
	    href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8685.xml"/>

 <xi:include
	    href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8741.xml"/>


  <xi:include
	    href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8745.xml"/>

<!-- draft-ietf-pce-enhanced-errors; I-D Exists -->
        <xi:include
	    href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-pce-enhanced-errors-06.xml"/>

	<!-- draft-ietf-pce-pcep-yang; I-D Exists -->
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-pce-pcep-yang-13.xml"/>

<!-- draft-litkowski-pce-state-sync; I-D Exists -->
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-litkowski-pce-state-sync-07.xml"/>


<!-- draft-dugeon-pce-stateful-interdomain; I-D Exists -->
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-dugeon-pce-stateful-interdomain-02.xml"/>






      </references>
    </references>

    <section anchor="sect-8" numbered="false" toc="default">
      <name>Acknowledgments</name>
      <t>
   Thanks to <contact fullname="Manuela Scarella"></contact>, <contact fullname="Haomian Zheng"></contact>, <contact fullname="Sergio Marmo"></contact>, <contact fullname="Stefano
   Parodi"></contact>, <contact fullname="Giacomo Agostini"></contact>, <contact fullname="Jeff Tantsura"></contact>, <contact fullname="Rajan Rao"></contact>, <contact fullname="Adrian Farrel"></contact>, and
   <contact fullname="Haomian Zheng"></contact> for their reviews and suggestions.</t>
      <t>
   Thanks to <contact fullname="Tal Mazrahi"></contact> for the RTGDIR
   review, <contact fullname="Paul Kyzivat"></contact> for the
   GENART review, and <contact fullname="Stephen Farrell"></contact>
      for the SECDIR review.</t>
      <t>
   Thanks to <contact fullname="Barry Leiba"></contact>, <contact fullname="Martin Vigoureux"></contact>, <contact fullname="Benjamin Kaduk"></contact>, and <contact fullname="Roman
   Danyliw"></contact> for the IESG review.</t>
    </section>

    <section numbered="false" anchor="contributors" toc="default">
      <name>Contributors</name>

<contact fullname="Avantika">
  <organization>ECI Telecom</organization>
  <address><postal><country>India</country></postal>

<email>avantika.srm@gmail.com</email></address></contact>

<contact fullname="Xian Zhang">
<organization>Huawei Technologies</organization>
<address>
  <postal>
    <street>Bantian, Longgang District</street>
    <region>Shenzhen</region>
    <city>Guangdong</city>
    <code>518129</code>
    <country>China</country>
  </postal>

<email>zhang.xian@huawei.com</email></address></contact>

<contact fullname="Udayasree Palle">
<address>
<email>udayasreereddy@gmail.com</email></address></contact>

<contact fullname="Oscar Gonzalez de Dios">
  <organization>Telefonica I+D</organization>
  <address>
    <postal>
<street>Don Ramon de la Cruz 82-84</street>
<city>Madrid</city>   <code>28045</code>
<country>Spain</country></postal>
<phone>+34913128832</phone>

<email>oscar.gonzalezdedios@telefonica.com</email>
</address>
</contact>

    </section>

  </back>
</rfc>
