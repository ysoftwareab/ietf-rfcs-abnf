<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" 
     submissionType="IETF"
     category="std" 
     consensus="true" 
     docName="draft-ietf-6lo-deadline-time-05"
     number="9034" 
     ipr="trust200902" 
     obsoletes="" 
     updates=""  
     xml:lang="en"
     tocInclude="true" 
     tocDepth="2" 
     symRefs="true" 
     sortRefs="true"
     version="3"> 

  <!-- xml2rfc v2v3 conversion 2.47.0 -->

<front>

    <title abbrev="6lo Delivery Deadline Time">
	Packet Delivery Deadline Time in the Routing Header for IPv6 over Low&nbhy;Power Wireless Personal Area Networks (6LoWPANs)</title>
	<seriesInfo name="RFC" value="9034"/>

   <author fullname="Lijo Thomas" initials="L." surname="Thomas">
      <organization abbrev="C-DAC">Centre for Development of Advanced Computing</organization>
      <address>
        <postal>
          <street>Vellayambalam</street>
          <city>Trivandrum</city>
          <code>695033</code>
          <country>India</country>
        </postal>
        <email>lijo@cdac.in</email>

      </address>
    </author>
    <author fullname="Satish Anamalamudi" initials="S." surname="Anamalamudi">
      <organization>SRM University-AP</organization>
      <address>
        <postal>
          <street>Amaravati Campus</street>
          <city>Amaravati, Andhra Pradesh</city>
          <code>522 502</code>
          <country>India</country>
        </postal>
        <email>satishnaidu80@gmail.com</email>
      </address>
    </author>
   <author fullname="S.V.R. Anand" initials="S.V.R." surname="Anand">
      <organization>Indian Institute of Science</organization>
      <address>
        <postal>
          <city>Bangalore</city>
          <code>560012</code>
          <country>India</country>
        </postal>
        <email>anandsvr@iisc.ac.in</email>

      </address>
    </author>
   <author fullname="Malati Hegde" initials="M." surname="Hegde">
      <organization>Indian Institute of Science</organization>
      <address>
        <postal>
          <city>Bangalore</city>
          <code>560012</code>
          <country>India</country>
        </postal>
        <email>malati@iisc.ac.in</email>
      </address>
    </author>

    <author fullname="Charles E. Perkins" initials="C." surname="Perkins">
      <organization>Lupin Lodge</organization>
      <address>
        <postal>
          <street>20600 Aldercroft Heights Rd.</street>
          <city>Los Gatos</city>
          <region>CA</region>
          <code>95033</code>
          <country>United States of America</country>
        </postal>
        <email>charliep@computer.org</email>
      </address>
    </author>
    <date year="2021" month="June" />

    <area>Internet</area>
    <workgroup>6lo</workgroup>

    <keyword>Routing header</keyword>
    <keyword>Timestamp</keyword>

    <abstract>

      <t>
	This document specifies a new type for the 6LoWPAN routing header
	containing the deadline time for data packets, designed for use over
	constrained networks. The deadline time enables forwarding and
	scheduling decisions for time-critical machine-to-machine (M2M)
	applications running on Internet-enabled devices that operate within 
	time-synchronized networks. This document also specifies a 
	representation for the deadline time values in such networks.
      </t>

    </abstract>
  </front>
  <middle>
    <section anchor="Intro" numbered="true" toc="default">
      <name>Introduction</name>
      <t>
	Low-Power and Lossy Networks (LLNs) are likely to be deployed for
	real-time industrial applications requiring end-to-end
	delay guarantees <xref target="RFC8578" format="default"/>.
	A Deterministic Network ("DetNet") typically requires some data packets
	to reach their receivers within strict time bounds.
	Intermediate nodes use the deadline information to make
        appropriate packet forwarding and scheduling decisions to meet the
        time bounds.
      </t>
      <t>
	This document specifies a new type for the Elective 6LoWPAN Routing
	Header (6LoRHE), Deadline-6LoRHE, so that the deadline time (i.e., the time of latest
	acceptable delivery) of data
	packets can be included within the 6LoRHE.
	<xref target="RFC8138" format="default"/> specifies the 6LoWPAN Routing Header (6LoRH),
	compression schemes for RPL (Routing Protocol for Low-Power and Lossy Networks) source routing <xref target="RFC6554" format="default"/>, header compression of RPL packet
	information <xref target="RFC6553" format="default"/>, and IP-in-IP encapsulation.    
	This document also specifies the handling of the deadline
	time when packets traverse time-synchronized networks
	operating in different time zones or distinct reference clocks.
	Time-synchronization techniques are outside the scope of this
	document.  There are a number of standards available for this
	purpose, including IEEE 1588 <xref target="IEEE.1588.2008" format="default"/>,
	IEEE 802.1AS <xref target="IEEE.802.1AS.2011" format="default"/>,
	IEEE 802.15.4-2015 Time-Slotted Channel Hopping (TSCH) <xref target="IEEE.802.15.4" format="default"/>, and more.
      </t>
    <t>
	The Deadline-6LoRHE can be used in any time-synchronized 6LoWPAN network.
	A 6TiSCH (IPv6 over the TSCH mode of IEEE 802.15.4) network is used to describe the implementation of the
	Deadline-6LoRHE, but this does not preclude its use in scenarios other
	than 6TiSCH.  For instance, there is a growing interest in using 6LoWPAN 
	over a Bluetooth Low Energy (BLE) mesh network <xref target="I-D.ietf-6lo-blemesh" format="default"/> in
	industrial IoT (Internet of Things) <xref target="IEEE-BLE-MESH" format="default"/>. BLE mesh time
	synchronization is being explored by the Bluetooth
	community.  There are also cases under consideration in Wi-SUN
	<xref target="PHY-SPEC" format="default"/> <xref target="Wi-SUN" format="default"/>.
      </t>
    </section>

<section anchor="acronyms_terms" numbered="true" toc="default">
      <name>Terminology</name>

        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
    "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
    interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/> <xref
    target="RFC8174"/> when, and only when, they appear in all capitals, as
    shown here.
        </t>

      <t>
	This document uses the terminology defined in
	<xref target="RFC6550" format="default"/> and
	<xref target="RFC9030" format="default"/>.
      </t>
    </section>

<section numbered="true" toc="default">
      <name>6LoRHE Generic Format</name>
      <t>
	Note: this section is not normative and is included for convenience.
	The generic header format of the 6LoRHE is specified in
	<xref target="RFC8138" format="default"/>.
	<xref target="fig1" format="default"/> illustrates the 6LoRHE generic format.
      </t>
      <figure anchor="fig1">
        <name>6LoRHE Format</name>
        <artwork name="" type="" align="left" alt=""><![CDATA[
   0                   1
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-        ...              -+
  |1|0|1| Length  |      Type     |        Options            |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-        ...              -+
                                   <---    length         --->
]]></artwork>
      </figure>

<dl>
   <dt>Length:</dt>
   <dd>Length of the 6LoRHE expressed in bytes, excluding the first 2 bytes. This
       enables a node to skip a 6LoRHE if the Type is not recognized or supported.</dd>
   <dt>Type (variable length):</dt>
   <dd>Type of the 6LoRHE (see <xref target="iana" format="default"/>).</dd>
</dl>
     
    </section>

<section anchor="Description" numbered="true" toc="default">
      <name>Deadline-6LoRHE</name>
      <t>
	    The Deadline-6LoRHE (see <xref target="fig2" format="default"/>) is  
	    a 6LoRHE <xref target="RFC8138" format="default"/> that provides
	    the Deadline Time (DT) for an IPv6 datagram in a compressed form.
	    Along with the DT, the header can include the 
	    Origination Time Delta (OTD) packet, which contains the time when the packet was
	    enqueued for transmission (expressed as a value to be subtracted
	    from DT); this enables a close estimate of the total delay
	    incurred by a packet.  The OTD field is initialized by the sender
	    based on the current time at the outgoing network interface through
	    which the packet is forwarded.  Since the OTD is a delta,
	    the length of the OTD field (i.e., OTL) will require fewer
	    bits than the length of the DT field (i.e., DTL).
      </t>
	<t> The DT field contains the value of the deadline time for the
	    packet -- in other words, the time by which the application expects
	    the packet to be delivered to the receiver.
      </t>
      <t indent="3">
        packet_deadline_time = packet_origination_time + max_delay 
      </t>
      <t>
	    In order to support delay-sensitive, deterministic applications,
	    all nodes within the network should process the Deadline-6LoRHE.
	    The DT and OTD packets are
	    represented in time units determined by a scaling parameter in
	    the Routing Header.  The Network ASN (Absolute Slot Number)
	    can be used as a time unit in a time-slotted
            synchronized network (for instance, a 6TiSCH network, where global
	    time is maintained in the units of slot lengths of a certain
            resolution).
      </t>
      <t> The delay experienced by packets in the network is a useful
	    metric for network diagnostics and performance monitoring.
	    Whenever a packet crosses into a network using
	    a different reference clock, the DT field is updated
	    to represent the same deadline time, but expressed using the
	    reference clock of the interface into the new network.  Then the
	    origination time is the same as the current time when the packet
	    is transmitted into the new network, minus the delay already
	    experienced by the packet, say 'current_dly'.  In this way, within
	    the newly entered network, the packet will appear to have
	    originated 'current_dly' time units earlier with respect
	    to the reference clock of the new network.</t>

<t indent="3">
	 new_network_origin_time = time_now_in_new_network - current_dly
</t>
      <t>
	    The following example illustrates these calculations
	    when a packet travels between three networks, each in a different
	    time zone (TZ). 'x' can be 1, 2, or 3.  Suppose that the deadline time
	    as measured in TZ1 is 1050, and the origination time is 50.
	    Suppose that the difference between TZ2 and TZ1 is 900, and the
	    difference between TZ2 and TZ3 is 3600.  In the figure, OT
	    is the origination time as measured in the current time zone, and
	    is equal to DT - OTD, that is, DT - 1000.
	    <xref target="time-update" format="default"/> uses the following abbreviations:
      </t>

  <dl>
     <dt>TxA:</dt>
     <dd>Time of arrival of packet in the network 'x' </dd>
     <dt>TxD:</dt>
     <dd>Departure time of packet from the network 'x' </dd>
     <dt>dlyx:</dt>
     <dd>Delay experienced by the packet in the previous network(s) </dd>
     <dt>TZx:</dt>
     <dd>The time zone of network 'x' </dd>
  </dl>

      <figure anchor="time-update">
        <name>Deadline Time Update Example</name>
        <artwork name="" type="" align="left" alt=""><![CDATA[ 
            TZ1                      TZ2                    TZ3
  T1A=50|                 |                             |
        |----  dly1=50    |                             |
        |     \           |                             |
        |      \          |                             |
        |       \ T1D=100 |T2A=1000                     |
        |        -------->|-----           dly2=450     |
        |                 |     \                       |
        |                 |      \                      |
        |                 |       \          T2D=1400   | T3A=5000
        |                 |         ------------------->|---------->
        |                 |                             |
        v                 v                             v

   dly0 = 0          dly1 = T1D-OT1      dly2 = T2D-OT2
                          = 100-50            = 1400 - 950
                          = 50                = 450

   OT1 = T1A-dly0     OT2 = T2A-dly1     OT3 = T3A-dly2
       = 50               = 1000-50          = 5000 - 450
                          = 950              = 4550
]]></artwork>
      </figure>
      <t> There are multiple ways that a packet can be delayed, including
	queuing delay, Media Access Control (MAC) layer contention delay, serialization delay, and
	propagation delay.  Sometimes there are processing delays as well.
	For the purpose of determining whether or not the deadline has
	already passed, these various delays are not distinguished.
      </t>
    </section>

<section anchor="Format" numbered="true" toc="default">
      <name>Deadline-6LoRHE Format</name>
      <figure anchor="fig2">
        <name>Deadline-6LoRHE Format</name>
        <artwork name="" type="" align="left" alt=""><![CDATA[
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |1|0|1| Length  |  6LoRH Type   |D| TU|  DTL  | OTL | BinaryPt  |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |      DT (variable length)     | OTD(variable length)(optional)|
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        ]]></artwork>
      </figure>

<dl>
<dt>Length (5 bits):
</dt>
<dd>Length represents the total length of the Deadline-6LoRHE Type measured in octets.
</dd>
<dt>6LoRH Type:</dt>
<dd>7 (See <xref target="iana" format="default"/>.)
</dd>

<dt>D flag (1 bit): 
</dt>
<dd><t>The 'D' flag, set by the sender, qualifies the action to be taken when a
6LoWPAN Router (6LR) detects that the deadline time has elapsed.</t>  
<t>If 'D' bit is 1, then the 6LR
<bcp14>MUST</bcp14> drop the packet if the deadline time is elapsed.</t>  
<t>If 'D'
bit is 0, the packet <bcp14>MAY</bcp14> be forwarded on an exception basis, if
the forwarding node is NOT in a situation of constrained resource, and if
there are reasons to suspect that downstream nodes might find it useful (delay
measurements, interpolations, etc.).</t>
</dd>

<dt>TU (2 bits):
</dt>
<dd>
   <t>Indicates the time units for DT and OTD fields.  The encodings for the 
      DT and OTD fields use the same time units and precision.  </t>
          <dl spacing="compact">
            <dt>00</dt><dd>Time represented in seconds and fractional seconds</dd>
            <dt>01</dt><dd>Reserved</dd>
            <dt>10</dt><dd>Network ASN</dd>
            <dt>11</dt><dd>Reserved</dd>
          </dl>
</dd>

<dt>DTL (4 bits):
</dt>
<dd>Length of the DT field as an unsigned 4-bit integer, encoding the length of
the field in hex digits, minus one.
</dd>

<dt>OTL (3 bits):
</dt>
<dd><t>Length of the OTD field as an unsigned 3-bit integer,
encoding the length of the field in hex digits.  If OTL == 0, the OTD field is
not present.  The value of OTL <bcp14>MUST NOT</bcp14> exceed the value of DTL
plus one.
      </t>
            <t>For example, DTL = 0b0000 means the DT field in the
            6LoRHE is 1 hex digit (4 bits) long.  OTL = 0b111 means the
            OTD field is 7 hex digits (28 bits) long.</t>
</dd>
<dt>BinaryPt (6 bits):
</dt>
<dd><t>If zero, the number of bits of the integer part
        the DT is equal to the number of bits of the fractional part of
	the DT.  If nonzero, the BinaryPt is a (2's complement) signed
	integer determining the position of the binary point within the value
	for the DT.  This allows BinaryPt to be within the range [-32,31].</t>
<ul>
            <li> If BinaryPt value is positive, then the number of bits for
            the integer part of the DT is increased by the value of BinaryPt,
            and the number of bits for the fractional part of the DT is
            correspondingly reduced.  This increases the range of DT.</li>
            <li> If BinaryPt value is negative, then the number of bits for
            the integer part of the DT is decreased by the value of BinaryPt,
            and the number of bits for the fractional part of the DT is
            correspondingly increased.  This increases the precision of the
            fractional seconds part of DT.</li>
</ul>
</dd>

<dt>DT Value (4..64 bits):
</dt>
<dd>An unsigned integer of DTL+1 hex digits giving the DT value.
</dd>

<dt>OTD Value (4..28 bits):
</dt>
<dd>If present, an unsigned integer of OTL hex digits giving the origination time as a
negative offset from the DT value.
</dd>

</dl>
 
  <t> Whenever a sender initiates the IP datagram, it includes the
  Deadline-6LoRHE along with other 6LoRH information.  For information about
  the time-synchronization requirements between sender and receiver, see <xref
  target="sync" format="default"/>.
      </t>
      <t>

	For the chosen time unit, a compressed time representation is
	available as follows.  First, the application on the originating node
	determines
	how many time bits are needed to represent the difference between the
	time at which the packet is launched and the deadline time, including
	the representation of fractional time units.  That number of bits
	(say, N_bits) determines DTL as follows:
      </t>
      <t indent="3">
        DTL = ((N_bits - 1) / 4)
      </t>
      <t>
	The number of bits determined by DTL allows the counting of any number of
	fractional time units in the range of interest determined by DT and the
	OT.  Denote this number of fractional time units to
	be Epoch_Range(DTL) (i.e., Epoch_Range is a function of DTL):
      </t>
      <t indent="3">
        Epoch_Range(DTL) = 2<sup>4*(DTL+1)</sup> 
      </t>
      <t>
	Each point of time between OT and DT is represented by a time unit and
	a fractional time unit; in this section, this combined representation
	is called a rational time unit (RTU).  1 RTU measures the smallest
	fractional time that can be represented between two points of time
	in the epoch (i.e., within the range of interest). 
      </t>
      <t>
	DT - OT cannot exceed 2<sup>4*(DTL+1)</sup> == 16<sup>DTL+1</sup>.  A low value of DTL
	leads to a small Epoch_Range; if DTL = 0, there will only be 16 RTUs
	within the Epoch_Range (i.e., Epoch_Range(DTL) = 16<sup>1</sup>) for any TU.  The
	values that can be represented in the current epoch are in the range
	[0, (Epoch_Range(DTL) - 1)].</t>  
    <t>
        Assuming wraparound does not occur, OT is represented by the value (OT mod Epoch_Range),
        and DT is represented by the value (DT mod Epoch_Range).  All arithmetic is
        to be performed modulo (Epoch_Range(DTL)), yielding only positive
        values for DT - OT.
    </t>
	<t>
        In order to allow fine-grained control over the setting of the
    deadline time, the fields for DT and OTD use fractional seconds. This is done by specifying
	a binary point, which allocates some of the bits for fractional times.
	Thus, all such fractions are restricted to be negative powers of 2.
	Each point of time between OT and DT is then represented by a time
	unit (either seconds or ASNs) and a fractional time unit.
    </t>
    <t>
        Let OT_abs, DT_abs, and CT_abs denote the true (absolute) values (on the
	synchronized timelines) for OT, DT, and
	current time.  Let N be the number of bits to be used to represent
	the integer parts of OT_abs, DT_abs, and CT_abs: 
    </t>
         <t indent="6">N = {4*(DTL+1)/2} + BinaryPt </t>
    <t>
	The originating node has to pick a segment size (2^N) so that
	DT_abs - OT_abs &lt; 2^N, and so that intermediate network nodes
	can detect whether or not CT_abs &gt; DT_abs.
    </t>
    <t>
	Given a value for N, the value for DT is represented in the
	deadline-time format by DT = (DT_abs mod 2^N).  DT is typically
	represented as a positive value (even though negative modular
	values make sense).  Also, let OT = OT_abs mod 2^N and
	CT = CT_abs mod 2^N, where both OT and CT are also considered as
	non-negative values.
    </t>
    <t>
	When the packet is launched by the originating node,
	CT_abs == OT_abs and CT == OT.  Given a particular value for N,
	then in order for downstream nodes to detect whether or not the
	deadline has expired (i.e., whether DT_abs > CT_abs), the following is 
	required: 
    </t>
    <t indent="6" anchor="assumption">Assumption 1: DT_abs - OT_abs &lt; 2^N.</t>
    <t>
        Otherwise the ambiguity
	inherent in the modulus arithmetic yielding OT and DT will cause
	failure: one cannot measure time differences greater than 2^N using
	numbers in a time segment of length less than 2^N.
    </t>
    <t>
	Under <xref target="assumption" format="none">Assumption 1</xref>, downstream nodes must effectively check
	whether or not their current time is later than the DT -- but
	the value of the DT has to be inferred from the
	value of DT in the 6LoRHE, which is a number less than 2^N.  This
	inference cannot be expected to reliably succeed unless <xref target="assumption" format="none">Assumption 1</xref> 
	is valid, which means that the originating node has to be careful to pick proper
	values for DTL and for BinaryPt.
    </t>

    <t>
	Since OT is not necessarily provided in the 6loRHE, there may be a
	danger of ambiguity.  Surely, when DT = CT, the deadline time
	is expiring and the packet should be dropped. However, what if an
	intermediate node measures that CT = DT+1?  Was the packet
	launched a short time before arrival at the intermediate node,
	or has the current time wrapped around so that
	CT_abs - OT_abs &gt; 2^N?
    </t>

    <t>
	In order to solve this problem, a safety margin has to be provided,
	in addition to requiring that DT_abs - OT_abs &lt; 2^N.  The value
	of this safety margin is proportional to 2^N and is determined by
	a new parameter, called the "SAFETY_FACTOR".  Then, for safety the
	originating node MUST further ensure that
	(DT_abs - OT_abs) &lt; 2^N*(1-SAFETY_FACTOR).
    </t>
    <t>
	Each intermediate node that receives the packet with the
	Deadline-6LoRHE must determine whether
	((CT - DT) mod 2^N) &gt; SAFETY_FACTOR*2^N.
	If this test condition is not satisfied, the deadline time has expired.
	See <xref target="modular"/> for more explanation about the test
	condition.
	All nodes that receive a packet with a Deadline-6LoRHE included
	MUST use the same value for the SAFETY_FACTOR.  The SAFETY_FACTOR
	is to be chosen so that a packet with the Deadline-6LoRHE included
	will be tested against the current time at least once during every
	subinterval of length SAFETY_FACTOR*2^N.  In this way, it can be
	guaranteed that the packet will be tested often enough to make
	sure it can be dropped whenever CT_abs &gt; DT_abs.  The value of
	SAFETY_FACTOR is specified in this document to be 20%.
    </t>

          <t indent="3">Example: Consider a 6TiSCH network with time-slot length of 10 ms.
	    Let the time units be ASNs (TU == (binary)0b10).  Let the
	    current ASN when the packet is originated be 54400, and the
            maximum allowable delay (max_delay) for the packet delivery be 1
	    second from the packet origination, then:
          </t>
          <t indent="6"> deadline_time = packet_origination_time + max_delay</t>
             <t indent="9"> = 0xD480 + 0x64 (Network ASNs) </t>
             <t indent="9"> = 0xD4E4 (Network ASNs) </t>

          <t indent="6"> Then, the Deadline-6LoRHE encoding with nonzero OTL is:</t>
             <t indent="9"> DTL = 3, OTL = 2, TU = 0b10, BinaryPt = 8, DT = 0xD4E4, OTD&nbsp;=&nbsp;0x64</t>

    </section>

<section numbered="true" toc="default">
      <name>Deadline-6LoRHE in Three Network Scenarios</name>
      <t>
	In this section, the Deadline-6LoRHE operation is described for three
	network scenarios.  <xref target="fig3" format="default"/> depicts a
	constrained time-synchronized LLN that has two subnets, N1 and N2,
	connected through 6LoWPAN Border Routers (6LBRs) <xref target="RFC8929" format="default"/>
	with different reference clock times, T1 and T2.
      </t>
      <figure anchor="fig3">
        <name>Intra-Network Time Zone Scenario</name>
        <artwork name="" type="" align="left" alt=""><![CDATA[
                       +-------------------+
                       | Time-Synchronized |
                       |      Network      |
                       +---------+---------+
                                 |
                                 |
                                 |
                  +--------------+--------------+
                  |                             |
               +-----+                       +-----+
               |     | Backbone              |     | Backbone
          o    |     | router                |     | router
               +-----+                       +-----+
          o                  o               o
              o    o   o               o  o   o  o   o  o
         o      LLN    o                 o  LLN   o  o
            o   o    o      o             o o o     o  o
      6LoWPAN Network (subnet N1)   6LoWPAN Network (subnet N2)
                   ]]></artwork>
      </figure>
      <section numbered="true" toc="default">
        <name>Scenario 1: Endpoints in the Same DODAG (N1)</name>
        <t>
	In Scenario 1, shown in <xref target="fig4" format="default"/>, the Sender 'S' has an
	IP datagram to be routed to a Receiver 'R' within
	the same Destination-Oriented Directed Acyclic Graph (DODAG).  
        For the route segment from the sender to the 6LBR, the sender
	includes a Deadline-6LoRHE by encoding the deadline time
	contained in the packet. Subsequently, each 6LR will perform hop-by-hop
	routing to forward the packet towards the 6LBR.  Once the 6LBR receives
	the IP datagram, it sends the packet downstream towards 'R'.
        </t>
        <t>
	In the case of a network running in RPL non-storing mode, the 6LBR generates
	an IPv6-in-IPv6 encapsulated packet when sending the packet downwards
	to the receiver <xref target="RFC9008" format="default"/>.
	The 6LBR copies the Deadline-6LoRHE from the sender-originated IP
	header to the outer IP header. The Deadline-6LoRHE contained in
	the inner IP header is removed.
        </t>
        <figure anchor="fig4">
          <name>Endpoints within the Same DODAG (Subnet N1)</name>
          <artwork name="" type="" align="left" alt=""><![CDATA[
                           +-------+
                ^          | 6LBR  |       |
                |          |       |       |
                |          +-------+       |
        Upward  |         /      /| \      | Downward
        routing |      (F)      / |  \     | routing
                |     /  \    (C) |  (D)   |
                |    /    \    |  | / |\   |
                |  (A)    (B)  : (E)  : R  |
                |  /|\     | \   / \       |
                | S : :    : :  :  :       v ]]></artwork>
        </figure>
        <t>
	At the tunnel endpoint of the encapsulation, the
	Deadline-6LoRHE is copied back from the outer header to inner
	header, and the inner IP packet is delivered to 'R'.
        </t>
      </section>

<section numbered="true" toc="default">
        <name>Scenario 2: Endpoints in Networks with Dissimilar L2 Technologies</name>
        <t>
	In Scenario 2, shown in <xref target="fig5" format="default"/>,
	the Sender 'S' (belonging to DODAG 1) has an IP datagram to be routed to
	a Receiver 'R' over a time-synchronized IPv6 network.  For the route
	segment from 'S' to 6LBR, 'S' includes a Deadline-6LoRHE.
	Subsequently, each 6LR will perform hop-by-hop routing to forward the
	packet towards the 6LBR.  Once the deadline time information reaches
	the 6LBR, the packet will be encoded according to the
	mechanism prescribed in the other time-synchronized network depicted
	as "Time-Synchronized Network" in <xref target="fig5" format="default"/>.
 	The specific data encapsulation mechanisms followed in the new network 	
	are beyond the scope of this document.
        </t>
        <figure anchor="fig5">
          <name>Packet Transmission in Dissimilar L2 Technologies or Internet</name>
          <artwork name="" type="" align="left" alt=""><![CDATA[
                           +----------------+
                           | Time-          |
                           | Synchronized   |------R
                           | Network        |
                           +----------------+
                                   |
                                   |
                         ----------+-----------
                  ^                |
                  |            +---+---+
                  |            | 6LBR  |
         Upward   |            |       |
         routing  |            +------++
                  |        (F)/      /| \
                  |       /  \      / |  \
                  |      /    \   (C) |  (D)
                  |    (A)    (B)  |  | / |\
                  |    /|\     |\  : (E)  : :
                  |   S : :    : :   / \
                                    :   :
        ]]></artwork>
        </figure>
        <t>
	For instance, the IP datagram could be routed to another time-synchronized, 
        deterministic network using the mechanism specified in
	In-situ Operations, Administration, and Maintenance (IOAM)  
        <xref target="I-D.ietf-ippm-ioam-data" format="default"/>, and then
	the deadline time would be updated according to the measurement
	of the current time in the new network.
        </t>
      </section>

<section numbered="true" toc="default">
        <name>Scenario 3: Packet Transmission across Different DODAGs (N1 to N2)</name>
        <t>
	Consider the scenario depicted in <xref target="fig6" format="default"/>, in which
	the Sender 'S' (belonging to DODAG 1) has an IP datagram to be
	sent to Receiver 'R' belonging to another DODAG (DODAG 2).  The
	operation of this scenario can be decomposed into a combination of 
	Scenarios 1 and 2. For the route segment from 'S' to 6LBR1,
	'S' includes the Deadline-6LoRHE.  Subsequently, each 6LR will
	perform hop-by-hop operations to forward the packet towards 6LBR1.
	Once the IP datagram reaches 6LBR1 of DODAG1, 6LBR1 applies the same rule
	as described in Scenario 2 while routing the packet to 6LBR2 over a (likely)
	time-synchronized wired backhaul.  The wired side of 6LBR2 can be mapped
	to the receiver of Scenario 2. Once the packet reaches 6LBR2, it updates the
	Deadline-6LoRHE by adding or subtracting the difference of time of
	DODAG2 and sends the packet downstream towards 'R'.
        </t>
        <figure anchor="fig6">
          <name>Packet Transmission in Different DODAGs (N1 to N2)</name>
          <artwork name="" type="" align="left" alt=""><![CDATA[
                 Time-Synchronized Network
               -+---------------------------+-
                |                           |
   DODAG1   +---+---+                   +---+---+   DODAG2
            | 6LBR1 |                   | 6LBR2 |
            |       |                   |       |
            +-------+                   +-------+
        (F)/      /| \              (F)/      /| \
       /  \      / |  \            /  \      / |  \
      /    \   (C) |  (D)         /    \   (C) |  (D)
    (A)    (B)  |  | / |\       (A)    (B)  |  |   |\
    /|\     |\  : (E)  : :      /|\     |\  : (E)  : :
   S : :    : :   / \          : : :    : :   / \
                 :   :                       :   R
Network N1, time zone T1      Network N2, time zone T2
    ]]></artwork>
        </figure>
        <t>
	Consider an example of a 6TiSCH network in which S in DODAG1
	generates the packet at ASN 20000 to R in DODAG2. Let the maximum
	allowable delay be 1 second. The time-slot length in DODAG1 and DODAG2
	is assumed to be 10 ms.  Once the deadline time is encoded in
	Deadline-6LoRHE, the packet is forwarded to 6LBR1 of DODAG1.
	Suppose the packet reaches 6LBR1 of DODAG1 at ASN 20030.
        </t>
          <t indent="3"> current_time = ASN at 6LBR * slot_length_value </t>
          <t indent="3"> remaining_time = deadline_time - current_time</t>
             <t indent="6"> = ((packet_origination_time + max_delay) - current time)</t>
             <t indent="6"> = (20000 + 100) - 20030 </t>
             <t indent="6"> = 30 (in Network ASNs)</t>
             <t indent="6"> = 30 * 10<sup>3</sup> milliseconds </t>

        <t>
	Once the deadline time information reaches 6LBR2,
	the packet will be encoded according to the mechanism prescribed
	in the other time-synchronized network.
        </t>
      </section>
</section>

<section anchor="iana" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>
	This document defines a new Elective 6LoWPAN Routing Header Type,
	and IANA has assigned the value 7 from the 6LoWPAN
	Dispatch Page 1 number space for this purpose.

      </t>

<table anchor="iana_reg">  
  <name>Entry in the "Elective 6LoWPAN Routing Header Type" Registry</name> 
  <thead>
    <tr>
      <th>Value</th>    
      <th>Description</th>
      <th>Reference</th>
    </tr>
  </thead>
  <tbody>         
    <tr>
      <td>7</td>
      <td>Deadline-6LoRHE</td>
      <td>RFC 9034</td>
    </tr>
  </tbody>
</table>
    </section>

<section anchor="sync" numbered="true" toc="default">
      <name>Synchronization Aspects</name>
      <t>
	The document supports time representation of the deadline and
	origination times carried in the packets traversing networks
	of different time zones having different time-synchronization
	mechanisms. For instance, in a 6TiSCH network where the time is
	maintained as ASN time slots, the time synchronization is achieved
	through beaconing among the nodes as described in
	<xref target="RFC7554" format="default"/>.
	There could be 6lo networks that employ NTP where the nodes are
	synchronized with an external reference clock from an NTP server.
	The specification of the time-synchronization method that needs to
	be followed by a network is beyond the scope of the document.
      </t>
  
    <t> 
	The number of hex digits chosen to represent DT, and the portion of
	that field allocated to represent the integer number of seconds, determines
	the meaning of t<sub>0</sub>, i.e., the meaning of DT == 0 in the chosen
	representation.  If DTL == 0, then there are only 4 bits that can
	be used to count the time units, so that DT == 0 can never be more
	than 16 time units (or fractional time units) in the past.  This then
	requires that the time
	synchronization between sender and receiver has to be tighter than
	16 units.  If the binary point were moved so that all the bits
	were used for fractional time units (e.g., fractional seconds or
	fractional ASNs), the time-synchronization requirement would be
	correspondingly tighter.
      </t>
      <t> 
	A 4-bit field for DT allows up to 16 hex digits, which is 64 bits.
	That is enough to represent the NTP 64-bit timestamp format <xref target="RFC5905" format="default"/>,
	which is more than enough for the purposes
	of establishing deadline times.  Unless the binary point is moved,
	this is enough to represent time since year 1900.
      </t>
      <t> 
	For example, suppose that DTL = 0b0000 and the DT bits are split
	evenly; then we can count up to 3.75 seconds by quarter-seconds.

      </t>
      <t> 
	If DTL = 3 and the DT bits are again split evenly, then we can count
	up to 256 seconds (in steps of 1/256 of a second).
      </t>
      <t> 
	In all cases, t<sub>0</sub> is defined as specified in <xref target="Format" format="default"/>.
      </t>

        <t indent="3">t<sub>0</sub> = [current_time - (current_time mod (2<sup>4*(DTL+1)</sup>))] </t>

      <t>
	regardless of the choice of TU.
      </t>
      <t> 

	For TU = 0b00, the time units are seconds.  With DTL == 15,
	and BinaryPt == 0, the epoch is (by default) January 1,
	1900, at 00:00 UTC.  The resolution is then 2<sup>-32</sup> seconds,
	which is the maximum possible.
	This time format wraps around every 2<sup>32</sup> seconds, which is
	roughly 136 years.
      </t>
      <t> 
	For TU = 0b10, the time units are ASNs.  The start time is relative,
	and updated by a mechanism that is out of scope for this document.
	With 10 ms slots, DTL = 15, and BinaryPt == 0, it would take over
	a year for the ASN to wrap around.  Typically, the number of hex
	digits allocated for TU = 0b10 would be less than 15.
      </t>
    </section>

<section numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>
	The security considerations of 
        <xref target="RFC4944" section="13" sectionFormat="parens" format="default"/>,
	<xref target="RFC6282" section="6" sectionFormat="parens" format="default"/>, and 
        <xref target="RFC6553" section="5" sectionFormat="parens" format="default"/> apply.
	Using a compressed format as opposed to the full inline format is
	logically equivalent and does not create an opening for a new threat
	when compared to <xref target="RFC6550" format="default"/>, <xref target="RFC6553" format="default"/>,
	and <xref target="RFC6554" format="default"/>.
      </t>
      <t>
	The protocol elements specified in this document are designed to work
	in controlled operational environments (e.g., industrial process
	control and automation).  In order to avoid misuse of the deadline
	information that could potentially result in a Denial of Service (DoS)
	attack, proper functioning of this deadline time mechanism requires
	the provisioning and management of network resources for supporting 
	traffic flows with deadlines, performance monitoring, and admission
	control policy enforcement.  The network provisioning can be done
	either centrally or in a distributed fashion.  For example, tracks in
	a 6TiSCH network could be established by a centralized Path Computation Element (PCE), as
	described in the 6TiSCH architecture
	<xref target="RFC9030" format="default"/>. 
      </t>
      <t>
	The security considerations of DetNet architecture
	<xref target="RFC8655" section="5" sectionFormat="parens" format="default"/> mostly apply to
	this document as well, as follows.  To secure the request and control
	of resources allocated for tracks, authentication and authorization
	can be used for each device and network controller devices.
	In the case of distributed control protocols, security is expected
	to be provided by the security properties of the protocols in use.
      </t>
      <t>
          The identification of deadline-bearing flows on a per-flow basis 
          may provide attackers with additional information about the data
          flows compared to networks that do not include per-flow
          identification. The security implications of disclosing that additional 
          information deserve consideration when implementing this deadline 
          specification.
      </t>
      <t>
	Because of the requirement of precise time synchronization, the
	accuracy, availability, and integrity of time synchronization is of
	critical importance.  Extensive discussion of this topic can be found
	in <xref target="RFC7384" format="default"/>.  
      </t>

</section>


</middle>
  <back>

<displayreference target="I-D.ietf-ippm-ioam-data" to="IOAM-DATA"/>
<displayreference target="I-D.ietf-6lo-blemesh" to="6LO-BLEMESH"/>

<references>
      <name>References</name>
      <references>
        <name>Normative References</name>

        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.9030.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8655.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4944.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5905.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6282.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6550.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6553.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6554.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7384.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7554.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8138.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
      </references>
      <references>
        <name>Informative References</name>

      <reference anchor="IEEE.802.15.4"
target="https://ieeexplore.ieee.org/document/7460875">
        <front>
            <title>IEEE Standard for Low-Rate Wireless Networks</title>
            <author>
              <organization>IEEE</organization>
            </author>
            <date month="April" year="2016"/>
        </front>
        <seriesInfo name="IEEE Standard" value="802.15.4-2015"/>
        <seriesInfo name="DOI" value="10.1109/IEEESTD.2016.7460875"/>
      </reference>

      <reference anchor="IEEE.1588.2008">
          <front>
            <title>IEEE Standard for a Precision Clock
		Synchronization
		Protocol for Networked Measurement and Control Systems</title>
            <author>
              <organization>IEEE</organization>
            </author>
            <date month="July" year="2008"/>
          </front>
          <seriesInfo name="DOI" value="10.1109/IEEESTD.2008.4579760"/>
        </reference>

      <reference anchor="IEEE-BLE-MESH">
          <front>
            <title>
		Multi-Hop Real-Time Communications Over Bluetooth Low Energy
		Industrial Wireless Mesh Networks
            </title>
            <author fullname="Luca Leonardi" initials="L." surname="Leonardi">
              <organization> </organization>
            </author>
            <author fullname="Gaetano Patti" initials="G." surname="Patti">
              <organization> </organization>
            </author>
            <author fullname="Lucia Lo Bello" initials="L." surname="Lo Bello">
              <organization> </organization>
            </author>
            <date month="May" year="2018"/>
          </front>
          <refcontent>IEEE Access, Vol 6, pp. 26505-26519</refcontent>
          <seriesInfo name="DOI" value="10.1109/ACCESS.2018.2834479"/>
        </reference>


        <reference anchor="IEEE.802.1AS.2011">
          <front>
            <title>IEEE Standard for Local and Metropolitan Area Networks -
		Timing and Synchronization for Time-Sensitive Applications
		in Bridged Local Area Networks
            </title>
            <author surname="IEEE 802.1AS Working Group">
              <organization>IEEE</organization>
            </author>
            <date month="March" year="2011"/>
          </front>
          <refcontent>IEEE Std 802.1AS-2011</refcontent>
          <seriesInfo name="DOI" value="10.1109/IEEESTD.2011.5741898"/>
        </reference>


        <reference anchor="PHY-SPEC" target="http://wi-sun.org">
          <front>
            <title>Wi-SUN PHY Specification V1.0</title>
            <author>
              <organization>Wi-SUN Alliance</organization>
            </author>
            <date month="March" year="2016"/>
          </front>
        </reference>

	<reference anchor="Wi-SUN">
          <front>
            <title>IEEE 802.15.4g Based Wi-SUN Communication Systems</title>
            <author fullname="Hiroshi Harada" initials="H." surname="Harada">
              <organization> </organization>
            </author>
            <author fullname="Keiichi Mizutani" initials="K." surname="Mizutani">
              <organization> </organization>
            </author>
            <author fullname="Jun Fujiwara" initials="J." surname="Fujiwara">
              <organization> </organization>
            </author>
            <author fullname="Kentaro Mochizuki" initials="K." surname="Mochizuki">
              <organization> </organization>
            </author>
            <author fullname="Kentaro Obata" initials="K." surname="Obata">
              <organization> </organization>
            </author>
            <author fullname="Ryota Okumura" initials="R." surname="Okumura">
              <organization> </organization>
            </author>
            <date month="January" year="2017"/>
          </front>
          <refcontent>IEICE Transactions on Communications</refcontent>
          <refcontent>Volume E100.B, Issue 7, pp. 1032-1043</refcontent>
          <seriesInfo name="DOI" value="10.1587/transcom.2016SCI0002"/>
        </reference>

<reference anchor="I-D.ietf-ippm-ioam-data">
<front>
<title>Data Fields for In-situ OAM</title>
<author initials="F." surname="Brockners" fullname="Frank Brockners" role="editor">
<organization>Cisco Systems, Inc.</organization>
</author>
<author initials="S." surname="Bhandari" fullname="Shwetha Bhandari"  role="editor">
<organization>Thoughtspot</organization>
</author>
<author initials="T." surname="Mizrahi" fullname="Tal Mizrahi"  role="editor">
<organization>Huawei</organization>
</author>
<date month="February" day="21" year="2021"/>
</front>
<seriesInfo name="Internet-Draft" value="draft-ietf-ippm-ioam-data-12"/>
<format type="TXT" target="https://www.ietf.org/archive/id/draft-ietf-ippm-ioam-data-12.txt"/>
</reference>

        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8578.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8929.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.9008.xml"/>

        <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-6lo-blemesh-10.xml"/>

      </references>
    </references>
	
<section anchor="modular" title="Modular Arithmetic Considerations">
    <t>
	Graphically, one might visualize the timeline as follows:
    </t>
	<figure anchor="fig7" title="Absolute Timeline Representation">
	<artwork><![CDATA[
           OT_abs        CT_abs        DT_abs
      -------|-------------|-------------|------------------>]]>
        </artwork>
	</figure>
    <t>
	In <xref target="fig7"/>, the value of CT_abs is envisioned
	as traveling to the right as time progresses, getting farther away
	from OT_abs and getting closer to DT_abs.   The timeline is considered
	to be subdivided into time subintervals [i,j] starting and ending at
	absolute times equal to k*(2^N), for integer values of k.  Let
	I_k = k*(2^N) and I_(k+1) = (k+1)*2^N.  Intervals starting at I_k
	and I_(k+1) may occur at various placements in the above timeline.
	Even though OT_abs is <em>always</em> less than DT_abs, it could be that
	DT &lt; OT because of the way that DT and OT are represented within
	the range [0, 2^N) and similarly for CT_abs and CT compared to OT and DT.
    </t>
    <t>
	Representing the above situation in time segments of length 2^N
	(and values OT, CT, DT) results in several cases where the deadline
	time has not elapsed:
    </t>
	 <dl>
	 <dt>  1) OT &lt; CT &lt; DT </dt>
	 <dd> (e.g., I_k &lt; OT_abs &lt;  CT_abs  &lt;  DT_abs  &lt;  I_(k+1) ) </dd>

	 <dt> 2) DT &lt; OT &lt; CT </dt> <dd>(e.g., I_k &lt; OT_abs &lt; CT_abs  &lt; I_(k+1) &lt; DT_abs ) </dd>
	 <dt> 3) CT &lt; DT &lt; OT </dt> <dd> (e.g., I_k &lt; OT_abs &lt; I_(k+1) &lt; CT_abs  &lt; DT_abs ) </dd>
	</dl>
         <t>
	    In the following cases, the deadline time has elapsed and the
	    packet should be dropped.
         </t>
	<dl>
	    <dt> 4) DT &lt; CT &lt; OT </dt> <dd></dd>
	    <dt> 5) OT &lt; DT &lt; CT </dt> <dd></dd>
	    <dt> 6) CT &lt; OT &lt; DT </dt> <dd></dd>
	</dl>

    <t>
	Again in <xref target="fig7"/>, consider CT_abs as time
	moving away from OT_abs and towards DT_abs.
	For times CT_abs before the expiration of the deadline time, we also
	have CT_abs - OT_abs == CT - OT mod 2^N and similarly for DT_abs -
	CT_abs.
    </t>

    <t>
	As time proceeds, DT_abs - CT_abs gets smaller.  When the deadline time
	expires, DT_abs - CT_abs begins to grow negative.  A proper selection
	for SAFETY_FACTOR allows it to go
	<em>slightly negative</em> but for an intermediate point to <em>detect</em> that it
	has gone negative.
	Note that in modular arithmetic, "slightly negative" means <em>exactly</em>
	the same as "almost as large as the modulus (i.e., 2^N)".
	Now consider the test condition
	((CT - DT) mod 2^N) > SAFETY_FACTOR*2^N.
    </t>

    <t>
	(DT_abs - OT_abs) &lt;  2^N*(1-SAFETY_FACTOR) satisfies the test
	condition when CT_abs == OT_abs (i.e., when the packet is launched).
	In modular arithmetic, 2^N*(1-SAFETY_FACTOR) ==
	2^N - 2^N*SAFETY_FACTOR  == -2^N*(SAFETY_FACTOR).
	Then DT_abs - OT_abs &lt; -2^N*(1-SAFETY_FACTOR).
	Inverting the inequality,
	OT_abs - DT_abs > 2^N*(1-SAFETY_FACTOR), and thus at
	launch CT_abs - DT_abs > 2^N*(1-SAFETY_FACTOR).
    </t>

    <t>
	As CT_abs grows larger, CT_abs - DT_abs gets LARGER in (non-negative)
	modular arithmetic until the time at which CT_ABS == DT_ABS, and
	suddenly CT_ABS - DT_abs becomes zero.  Also suddenly, the test
	condition is no longer fulfilled.
    </t>

    <t>
	As CT_abs grows still larger, CT_abs > DT_abs, and we need to detect
	this condition as soon as possible.  Requiring the SAFETY_FACTOR
	enables this detection until CT_abs exceeds DT_abs
	by an amount equal to SAFETY_FACTOR*2^N.
    </t>

    <t>
	A note about "inverting the inequality".  Observe that a &lt; b
	implies that -a > -b on the real number line.  Also,
	(a - b) == -(b - a).  These facts hold also for modular arithmetic.
    </t>

    <t>
	During the times prior to the expiration of the deadline, for
	Safe = 2^N*SAFETY_FACTOR we have:
    </t>

    <t indent="6">
(DT_abs - 2^N)  &lt; OT_abs  &lt;  CT_abs  &lt;  DT_abs  &lt;  DT_abs+Safe
    </t>

    <t>
	Naturally, DT_abs - 2^N  ==  DT_abs mod 2^N == DT.
    </t>

    <t>
	Again considering <xref target="fig7"/>,  it is easy to see
	that {CT_abs - (DT_abs - 2^N)} gets larger and larger until the time
	at which CT_abs = DT_abs, which is the first time at which
	CT - DT == 0 mod 2^N.  As CT_abs increases past the deadline time,
	0 &lt; CT_abs - DT_abs &lt; Safe.  In this range, any intermediate
	node can detect that the deadline has expired.  As CT_abs increases
	past DT_abs+Safe, it is no longer possible for an intermediate node
	to determine with certainty whether or not the deadline time has
	expired.  These statements
	also apply when reduced to modular arithmetic in the modulus 2^N.
    </t>

    <t>
	In particular, the test condition no longer allows
	detection of deadline expiration when the current
	time becomes later than (DT_abs+Safe).  In order to maintain
	correctness even for packets that are forwarded after expiration
	(i.e., the 'D' flag), N has to be chosen to be so large that
	the test condition will not fail -- i.e., that in all scenarios
	of interest, the packet will be dropped before the current time
	becomes equal to DT_abs+2^N*SAFETY_FACTOR.
    </t>

	</section>

<section numbered="false" toc="default">
      <name>Acknowledgments</name>
      <t>
	The authors thank <contact fullname="Pascal Thubert"/> for suggesting the idea and
	encouraging the work. Thanks to <contact fullname="Shwetha Bhandari"/>'s suggestions, which
	were instrumental in extending the timing information to heterogeneous
	networks. The authors acknowledge the 6TiSCH WG members for their
	inputs on the mailing list.  Special thanks to
		<contact fullname="Jerry Daniel"/>,
		<contact fullname="Dan Frost"/> (Routing Directorate),
		<contact fullname="Charlie Kaufman"/> (Security Directorate),
		<contact fullname="Seema Kumar"/>,
		<contact fullname="Tal Mizrahi"/>,
		<contact fullname="Avinash Mohan"/>,
		<contact fullname="Shalu Rajendran"/>,
		<contact fullname="Anita Varghese"/>, and 
                <contact fullname="Dale Worley"/> (General Area Review Team (Gen-ART) review)
	for their support and valuable feedback.
      </t>
    </section>

  </back>
</rfc>
