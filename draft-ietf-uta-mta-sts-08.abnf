sts-text-record = sts-version field-delim sts-id
                  *(field-delim sts-extension) [field-delim]

field-delim     = *WSP ";" *WSP

sts-version     = %s"v=STSv1"

sts-id          = %s"id=" 1*32(ALPHA / DIGIT)        ; id=...

sts-extension   = sts-ext-name "=" sts-ext-value     ; name=value

sts-ext-name    = (ALPHA / DIGIT) *31(ALPHA / DIGIT / "_" / "-" / ".")

sts-ext-value   = 1*(%x21-3A / %x3C / %x3E-7E)       ; chars excluding
                                                     ; "=", ";", SP, and
                                                     ; control chars

   If multiple TXT records for "_mta-sts" are returned by the resolver,
   records which do not begin with "v=STSv1;" are discarded.  If the
   number of resulting records is not one, senders MUST assume the
   recipient domain does not implement MTA-STS and skip the remaining
   steps of policy discovery.

sts-policy-record        = sts-policy-version CRLF
                                 sts-policy-mode CRLF
                                 1*(sts-policy-mx CRLF)
                                 sts-policy-max-age

field-delim              = ":" *WSP

sts-policy-version       = sts-policy-version-field field-delim
                                 sts-policy-version-value

sts-policy-version-field = %s"version"

sts-policy-version-value = %s"STSv1"

sts-policy-mode          = sts-policy-mode-field field-delim
                                 sts-policy-mode-value

sts-policy-mode-field    = %s"mode"

sts-policy-model-value   =  %s"report" / %s"enforce"

sts-policy-mx            = sts-policy-mx-field field-delim
                                 sts-policy-mx-value

sts-policy-mx-field      = %s"mx"

sts-policy-mx-value      = 1*(ALPHA / DIGIT / "_" / "-" / ".")

sts-policy-max-age       = sts-policy-max-age-field field-delim
                                 sts-policy-max-age-value

sts-policy-max-age-field = %s"max_age"

sts-policy-max-age-value = 1*10(DIGIT)

san = san[1:]
secure = false
secure = false
policy = tryGetCachedPolicy(domain)
