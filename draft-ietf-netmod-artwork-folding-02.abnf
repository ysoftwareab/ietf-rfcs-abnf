xmlns="urn:ietf:params:xml:ns:yang:ietf-yang-library"
xmlns="urn:ietf:params:xml:ns:yang:ietf-yang-library"
xmlns="urn:ietf:params:xml:ns:yang:ietf-yang-library"
xmlns="urn:ietf:params:xml:ns:yang:ietf-yang-library"
strategy=0 # auto
debug=0
reversed=0
infile=""
outfile=""
maxcol=69  # default, may be overridden by param
hdr_txt_1="NOTE: '\\' line wrapping per BCP XX (RFC XXXX)"
hdr_txt_2="NOTE: '\\\\' line wrapping per BCP XX (RFC XXXX)"
equal_chars="=============================================="
space_chars="                                              "

testcol=`expr "$maxcol" + 1`
foldcol=`expr "$maxcol" - 1` # for the inserted '\' char

length=`expr ${#hdr_txt_1} + 2`
left_sp=`expr \( "$maxcol" - "$length" \) / 2`
right_sp=`expr "$maxcol" - "$length" - "$left_sp"`
header=`printf "%.*s %s %.*s" "$left_sp" "$equal_chars"\
                      "$hdr_txt_1" "$right_sp" "$equal_chars"`

length=`expr ${#hdr_txt_2} + 2`
left_sp=`expr \( "$maxcol" - "$length" \) / 2`
right_sp=`expr "$maxcol" - "$length" - "$left_sp"`
header=`printf "%.*s %s %.*s" "$left_sp" "$equal_chars"\
                      "$hdr_txt_2" "$right_sp" "$equal_chars"`

testcol=`expr "$maxcol" + 1`
foldcol=`expr "$maxcol" - 1` # for the inserted '\' char
testcol=`expr "$maxcol" + 1`
line=`head -n 1 $infile`
result=`echo $line | fgrep "$hdr_txt_1"`
result=`echo $line | fgrep "$hdr_txt_2"`
debug=1
strategy="$2"
maxcol="$2"
reversed=1
infile="$2"
outfile="$2"
min_supported=`expr ${#hdr_txt_2} + 8`
min_supported=`expr ${#hdr_txt_1} + 8`
max_supported=`expr ${#equal_chars} + 1 + ${#hdr_txt_1} + 1\
          + ${#equal_chars}`
code=$?
code=$?
