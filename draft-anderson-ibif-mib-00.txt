INTERNET DRAFT                                               B. Anderson
                                                            InfiniSwitch
Expiration Date: January 12, 2002                          July 12, 2001


                        Definitions of Managed Objects
                           Infiniband Interface Type
                       <draft-anderson-ibif-mib-00.txt>
                Please send comments to banderson@infiniswitch.com

Status of this memo

        This document is an Internet-Draft and is in full conformance
        with all provisions of Section 10 of RFC 2026.

        Internet-Drafts are working documents of the Internet
        Engineering Task Force (IETF), its areas, and its working
        groups. Note that other groups may also distribute working
        documents as Internet- Drafts.

        Internet-Drafts are draft documents valid for a maximum of six
        months and may be updated, replaced, or obsoleted by other
        documents at any time. It is inappropriate to use
        Internet-Drafts as Reference material or to cite them other
        than as ``work in progress''.

        The list of current Internet-Drafts can be accessed at
        http://www.ietf.org/ietf/1id-abstracts.txt

        The list of Internet-Draft Shadow Directories can be accessed
        at http://www.ietf.org/shadow.html

        This memo provides information for the Internet community.
        This memo does not specify an Internet standard of any kind.
        Distribution of this memo is unlimited.

Copyright Notice

   Copyright (C) The Internet Society (2001).  All Rights Reserved.



Abstract

      InfiniBand Architecture (IBA) specifies a high speed, channel
    based, switched fabric architecture to deliver scalable
    performance in data centers.
        
     This memo defines a portion of Management Information Base (MIB)
   for use with network management protocols in TCP/IP-based internets.
   In particular, it defines objects for managing IBA defined 
   Infiniband interfaces.






Anderson                                                        [Page 1]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001

Table of Contents

   1.0 The SNMP Management Framework .............................    3
   1.1 Conventions used in this document .........................    3 
   2.0 Introduction to InfiniBand ................................    4 
   2.1  Relation to MIB-2 ........................................    5
   2.2  Relation to the Interfaces MIB ...........................    5
   2.2.1.  Layering Model ........................................    5 
   2.2.2.  Virtual Circuits ......................................    5 
   2.2.3.  ifTestTable ...........................................    5 
   2.2.4.  ifRcvAddressTable .....................................    6 
   2.2.5.  ifPhysAddress .........................................    6 
   2.2.6.  ifType ................................................    6 
   2.2.7.  Specific Interface MIB Objects ........................    6 
   2.3  Structure of the MIB .....................................    9 
   2.4  Mapping of IBA managed attribute fields ..................    10
   3.0  Definition ...............................................    11 
   4.0  Security Considerations ..................................    19
   5.0  Full Copyright Statement .................................    19
   6.0  Intellectual Property ....................................    20
   7.0  Author's Address .........................................    20
   8.0  References ...............................................    20

































Anderson                                                        [Page 2]

1.0 The SNMP Management Framework

   The SNMP Management Framework presently consists of five major
   components:

    o   An overall architecture, described in RFC 2571 [RFC2571].

    o   Mechanisms for describing and naming objects and events for the
        purpose of management.  The first version of this Structure of
        Management Information (SMI) is called SMIv1 and described in
        STD 16, RFC 1155 [RFC1155], STD 16, RFC 1212 [RFC1212] and RFC
        1215 [RFC1215].  The second version, called SMIv2, is described
        in STD 58, RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and
        STD 58, RFC 2580 [RFC2580].

    o   Message protocols for transferring management information.  The
        first version of the SNMP message protocol is called SNMPv1 and
        described in STD 15, RFC 1157 [RFC1157].  A second version of
        the SNMP message protocol, which is not an Internet standards
        track protocol, is called SNMPv2c and described in RFC 1901
        [RFC1901] and RFC 1906 [RFC1906].  The third version of the
        message protocol is called SNMPv3 and described in RFC 1906
        [RFC1906], RFC 2572 [RFC2572] and RFC 2574 [RFC2574].

    o   Protocol operations for accessing management information.  The
        first set of protocol operations and associated PDU formats is
        described in STD 15, RFC 1157 [RFC1157].  A second set of
        protocol operations and associated PDU formats is described in
        RFC 1905 [RFC1905].

    o   A set of fundamental applications described in RFC 2573
        [RFC2573] and the view-based access control mechanism described
        in RFC 2575 [RFC2575].

   A more detailed introduction to the current SNMP Management Framework
   can be found in RFC 2570 [RFC2570].

   Managed objects are accessed via a virtual information store, termed
   the Management Information Base or MIB.  Objects in the MIB are
   defined using the mechanisms defined in the SMI.

   This memo specifies a MIB module that is compliant to the SMIv2.  A
   MIB conforming to the SMIv1 can be produced through the appropriate
   translations.  The resulting translated MIB must be semantically
   equivalent, except where objects or events are omitted because no
   translation is possible (use of Counter64).  Some machine readable
   information in SMIv2 will be converted into textual descriptions in
   SMIv1 during the translation process.  However, this loss of machine
   readable information is not considered to change the semantics of the
   MIB.

1.1 Conventions used in this document
 
   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC-2119].   

Anderson                                                        [Page 3]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 

2.0 Introduction to InfiniBand
 
   This memo defines a portion of the Management Information Base (MIB)
   for use with network management protocols in the Internet community.
   In particular, it defines objects for managing Infiniband interfaces.
   The managed objects provide extensions to the objects defined in
   the interface group mib [RFC2863].  This memo provides managed
   objects based on Sections 14 - 16 of the Infiniband Architecture
   specification [Infini v1.0]  The intent of this memo is to define
   value added manageability of IBA devices by defining SNMP managed
   objects and at the same time avoid making SNMP management a
   requirement for device operation.
 
   IBA unlike most physical layer network protocols specifies a non-SNMP
   external management protocol which controls a wide range of functions
   necessary for IBA devices to operate.  The functions performed by IBA
   Subnet Manager(SM) and Subnet Management Agents (SMA) in the managed
   devices include but are not limited to device configuration, fault
   detection, performance monitoring and  device configuration
   persistence.

   Even given this native management capability SNMP manageability of
   any networking components in today's networks is highly desirable
   or even a requirement especially in the area of fault and performance
   management.  Obviously having two management paradigms simultaneously
   controlling a device or portions there of would require a high 
   degree of cooperation between paradigms to avoid conflicts.
   Therefore, to give maximum visibility but avoid these conflicts the
   managed objects defined in this memo offer read-only access to the
   attributes define by Infiniband native management wherever a
   conflicts with IBA defined management exists. 
 
   The counters defined in this memo are based on IBA defined counters.
   But in order to support the semantic behavior defined by SNMP SMI
   [RFC2578] conversions are required in several aspects of numerous 
   Infiniband specified counters.  These changes deal primarily with
   counter width differences, latch-on-wrap (aka saturate at all 1's),
   clear-on-read (reset to zero) and writeability of the Infiniband 
   Architecture native counters as defined in [Infini v1.0]
   Mechanisms for doing the required conversion are not defined by 
   this memo.

   Instances of the managed object types defined herein represent
   attributes of a port on an Infiniband communications medium
   device (IBA specification prefers the term port to interface).
   IBA defined ports can be paralleled/striped over multiple
   physical links. Aggregations of 1x, 4x, and 12x links are defined by
   the IBA. The IBA treats these aggregations as one port. The objects 
   defined herein do the same.  Thus no exposure to per physical 
   link info is defined. 





Anderson                                                        [Page 4]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 

   At present, Inifinband media are identified by the following values 
   of the ifType object in the Interfaces Group MIB [RFC2863]:
 
            infiniband(ianaIfType-TBD)  --To be assigned by IANA

2.1  Relation to MIB-2
 
   This section applies only when this MIB is used in conjunction with
   the "old" (RFC 1213) [24] interface group.
 
   The relationship between an Infiniband interface and an interface
   in the context of MIB-2 is one-to-one.  As such, the value of an
   ifIndex object instance can be directly used to identify
   corresponding instances of the objects defined herein.
 
   For agents which implement the (now deprecated) ifSpecific object, an
   instance of that object that is associated with an Infiniband
   interface has the OBJECT IDENTIFIER value:
 
       infiniband OBJECT IDENTIFER
       ::= { transmission ianaIfType-TBD } --To be assigned by IANA 
                                     
   
2.2  Relation to the Interfaces MIB
 
   The Interface MIB [RFC2863] requires that any MIB which is an adjunct
   of the Interface MIB clarify specific areas within the Interface MIB.
   These areas were intentionally left vague in the Interface MIB to
   avoid over constraining the MIB, thereby precluding management of
   certain media-types.
 
   Section 3.3 of [RFC2863] enumerates several areas which a
   media-specific MIB must clarify.  Each of these areas is addressed
   in a following subsection.  The implementor is referred 
   to [RFC2863] in order to understand the general intent of these
   areas.
                                                    
2.2.1.  Layering Model
 
   This MIB does not provide for layering.  There are no sublayers
   defined by this memo.  Higher Layer protocol stacking on the
   interfaces is not defined by this memo.
   
2.2.2.  Virtual Circuits
 
   This medium does not support virtual circuits and this area is not
   applicable to this MIB. 
                                                                        
2.2.3.  ifTestTable
 
   This MIB defines no tests for media which are instrumented with this
   MIB.



Anderson                                                        [Page 5]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 

2.2.4.  ifRcvAddressTable 

   For IBA Routers and CAs: 
   Routers and CAs which have been programmed by IBA Subnet Manager
   to have more than one address  use this table to display
   the set of additional address beyond the "base" LID for which the 
   interface will receive packets.  To avoid conflicts with the IBA 
   Subnet Manager this table should be implemented as read-only.
   See 2.2.5 for encoding of the Physical Address.

   For IBA Switches:
   Additionally for switches since the ifRcvAddressTable table is 
   explicitly not intended to provide a bridge address filtering
   mechanism there is no need to expose the multicast and unicast 
   forwarding table address here.
    
2.2.5.  ifPhysAddress
 
   This object contains the 16 bit "base" Local Identifier (LID) 
   currently in effect, on this port. Whether the address was assigned
   by the IBA Subnet Manager or through some other mechanism does not
   matter.  In the Event that no LID is currently in affect an 
   Octet String of zero length is returned.  For switches the "base"
   LID of the (conceptual) management port (port 0) shall be used.
 
   The address is stored in binary in this object.  The address is
   stored in IBA defined bit order, that is, the High Order Bit of
   the Local Identifier byte 0 is positioned as the high-order bit of
   the first byte of ifPhysAddress.

2.2.6.  ifType
 
   This MIB applies to interfaces which have any of the following 
   ifType values:
 
            infiniband(ianaIfType-TBD)   --To be assigned by IANA 

   Information regarding the number of physical links that comprise the
   port may be included in the ifDescr object. (i.e. 1x, 4x, or 12x)
    
2.2.7.  Specific Interface MIB Objects
 
   The following table provides specific implementation guidelines for
   applying the interface group objects to Infiniband media.
 
      Object                     Guidelines
 
      ifIndex                    Each Infiniband interface is
                                 represented by an ifEntry. 
 
      ifDescr                    Refer to [RFC2863]. 
 
      ifType                     Refer to section 2.2.6.


Anderson                                                        [Page 6]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001  

      ifMtu                      The size of the largest packet which
                                 which is capable of being either
                                 sent/received over this interface
                                 specified in octets.  Actual MTU in use
                                 is determined by comparing value to the
                                 corresponding neighbor's interface 
                                 ifMtu value and selecting the smaller.

      ifSpeed                    The current effective operational speed
                                 of the interface in bits per second. 
                                 The speed reported compensates for the 
                                 8B10B encoding used on the links. 
                                 For current infiniband interfaces, this
                                 will be equal to 2,000,000,000
                                 (2 billion), 8,000,000,000 
                                 (8 billion), or 24,000,000,000 
                                 (24 billion) for the 1x, 4x, and 12x 
                                 ports respectively.  Since both the
                                 4x and 12x value are greater than the 
                                 maximum reportable by this object then
                                 this object should report its maximum 
                                 value (4,294,967,295) and ifHighSpeed
                                 must be used to report the interace's
                                 speed. 
 
      ifPhysAddress              Refer to section 2.2.5.
 
      ifAdminStatus              Default is 'up'.
                                 If write access is implemented the
                                 default value for this attribute 
                                 should be 'up' to avoid requiring the
                                 use of a SNMP manager to enable the
                                 interface.  Support for 'testing' 
                                 is not required. Write access to this
                                 object is recommended.
 
      ifOperStatus               The operational state of the interface.
                                 Support for 'testing' is not required.
 
      ifLastChange               Refer to [RFC2863].
 
      ifInOctets                 The number of octets in valid 
                                 packets received on this interface,
                                 including the START and END delimiters
                                 and the VCRC. This count should also
                                 include the number of octets
                                 in valid Link packets received on
                                 this interface.  
 
      ifInUcastPkts              Refer to [RFC2863]. Note that this does
                                 not include Link packets, since
                                 link Control packets are consumed by 
                                 the interface layer and are not passed
                                 to any higher layer protocol.
 

Anderson                                                        [Page 7]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001  

      ifInDiscards               Refer to [RFC2863].

      ifInErrors                 Total number of packets received that
                                 were discarded. 
 
      ifInUnknownProtos          Always zero. Refer to [RFC2863].
 
      ifOutOctets                The number of octets transmitted in
                                 valid packets on this interface,
                                 including the START and END delimiters
                                 and the VCRC. This count should also
                                 include the number of octets
                                 in valid Link packets sent on
                                 this interface.  
 
      ifOutUcastPkts             Refer to [RFC2863]. Note that this does
                                 not include link packets, since link
                                 packets are generated by the interface 
                                 layer, and are not passed down from any
                                 higher layer protocol.
 
      ifOutDiscards              Refer to [RFC2863].
 
      ifOutErrors                Refer to [RFC2863].
 
      ifName                     Locally-significant textual name for
                                 the interface (e.g. lan0).
 
      ifInMulticastPkts          Refer to [RFC2863]. Note that this does
                                 not include Link packets, since
                                 link Control packets are consumed by 
                                 the interface layer and are not passed
                                 to any higher layer protocol.

 
      ifOutMulticastPkts         Refer to [RFC2863]. Note that this does
                                 not include Link packets, since
                                 Link packets are created by the
                                 interface layer and are not passed in by
                                 any higher layer protocol.
 
      ifInBroadcastPkts          Always zero. Refer to [RFC2863].
      ifOutBroadcastPkts         
      ifHCInBroadcastPkts        Always zero.
      ifHCOutBroadcastPkts       Always zero.
 
      ifHCInOctets               64-bit versions of counters.  Required
      ifHCOutOctets              for interfaces that are
                                 capable of operating at 20Mbit/sec or
                                 faster, even if the interface is
                                 currently operating at less than
                                 20Mbit/sec.



Anderson                                                        [Page 8]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001  

      ifHCInUcastPkts            64-bit versions of packet counters.
      ifHCInMulticastPkts        Required for interfaces
      ifHCOutUcastPkts           that are capable of operating at
      ifHCOutMulticastPkts       640Mbit/sec or faster, even if the
                                 interface is currently operating at
                                 less than 640Mbit/sec.
 

      ifLinkUpDownTrapEnable     Refer to [RFC2863].  Default is 
                                 'enabled'

      ifHighSpeed                The current effective operational 
                                 speed of the interface in millions 
                                 of bits per second. For current 
                                 Infiniband interfaces, this will be 
                                 equal to 2,000, 8,000, or 24,000. 
 
      ifPromiscuousMode          Always "false". Refer to [RFC2863].
 
      ifConnectorPresent         This will be 'true'.
 
      ifAlias                    Refer to [RFC2863].
 
      ifCounterDiscontinuityTime Refer to [RFC2863].  Note that a
                                 discontinuity in the Interface MIB
                                 counters may also indicate a
                                 discontinuity in some or all of the
                                 counters in this MIB that are
                                 associated with that interface.
 
      ifStackHigherLayer         Refer to section 2.2.1.
      ifStackLowerLayer
      ifStackStatus
 
      ifRcvAddressAddress        Refer to section 2.2.4.
      ifRcvAddressStatus
      ifRcvAddressType     


2.3  Structure of the MIB
 
   This MIB is structured as two groups: 

   o   Detail error statics on a per interface basis (ibIfPortStats).
       This table provides visibility into error counters defined by
       the IBA.

   o   Detail traffic statics on a per interface and virtual lane pair 
       basis (ibIfVLTraffic).  This table provides visibility into 
       data flow counters kept on a per VL basis defined by the IBA.
       




Anderson                                                        [Page 9]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 

2.4  Mapping of IBA managed attribute fields

   This section lists the correlation and conversion between the SNMP
   managed objects defined by this memo and the IBA defined attributes 
   they are based on.  Note that the relationship expressed below does
   not address issues relating to counter widths, latching and 
   resetability differences between the SNMP SMI and IBA object
   definitions.

   The following table is organized by the IBA Attributes that fields
   belong in.  In the case where fields from multiple attributes are 
   required the supplemental attributes are then fully qualified 
   in the formula below.  A second section covering Port Sample 
   counters is also included.

   Some Abreviations used:
   POH =  packet overhead = 4 =  1 START + 1 END  + 2 VCRC Octets;
   SLP = size link flowcntl packet = 8 = 1 START + 1 END +
         6 Flow cntrl Octets;
   MHB = max header bytes = 126 Octets; includes all packet fields
         except framing characters --see [Infini v1.0] sec 7.7.8

   _____________________________________________________________________
   IBA Attribute and Field                     Corresponding SNMP Object
   _____________________________________________________________________
   ------------
   PortCounters see [Infini v1.0] table:189
   ------------
    (.PortRcvData * 4) +
    (.PortRcvPkts * POH) +
    (PortFlowCtlCounters.
             PortRcvFlowPkts * SLP ) =             IF-MIB:ifInOctets

    .PortRcvConstraintErrors +
    .VL15Dropped +
    PortRcvErrDetails.PortBufferOverrunErrors =    IF-MIB:ifInDiscards

    .PortRcvRemotePhysicalErrors +                                   
    PortRcvErrorDetails.PortLocalPhysicalErrors +
    PortRcvErrorDetails.PortMalformedPacketErrors =  IF-MIB:ifInErrors

    .PortXmitData * 4 +
    (PortFlowCtlCounters.PortXmitFlowPkts * SLP) +
    (.PortXmitPkts * POH) =                        IF-MIB:ifOutOctets

    .PortXmitDiscards =                            IF-MIB:ifOutDiscards

    .PortXmitConstraintErrors =                    IF-MIB:ifOutErrors


    .PortRcvPkts =                                IF-MIB:ifInUcastPkts +
                                                IF-MIB:ifInMultiCastPkts



Anderson                                                       [Page 10]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 

    .PortXmitPkts +
    .PortXmitDiscards +
    .PortXmitConstraintErrors =                  IF-MIB:ifOutUcastPkts +
                                               IF-MIB:ifOutMultiCastPkts

    .SymbolErrorCounter =                            ibIfPortSymbolErrs

    .LinkErrorRecoveryCounter =                 ibIfPortLinkErrRecovery

    .PortRcvRemotePhysicalErrors =            ibIfPortStatRcvRemPhyErrs

    .LinkDownedCounter =                             ibIfPortLinkDowned

    .LocalLinkIntegrityErrors =          ibIfPortStatLinkIntergrityErrs

    .ExcessiveBufferOverrunErrors =       ibIfPortStatExcBufOverrunErrs

    .VL15Dropped =                              ibIfPortStatVL15Dropped
  
   -----------------
   PortRcvErrDetails see [Infini v1.0] table:192 
   -----------------
    .PortLocalPhysicalErrors =                 ibIfPortStatLocalPhyErrs
    .PortMalformedPacketErrors =                 ibIfPortStatMalPktErrs
    

   ----------------------
   PortXmitDiscardDetails see [Infini v1.0] table:193 
   ----------------------
    .PortInactiveDiscards =                   ibIfPortStatInactDiscards
    .PortNeighborMTUDiscards =             ibIfPortStatNeighMTUDiscards
    .PortSwLifetimeLimitDiscards =       ibIfPortStatSwLifetimeDiscards
    .PortSwHOQLimitDiscards =           ibIfPortStatHOQLifetimeDiscards
   

   
   --------
   PortInfo see [Infini v1.0] table:127 
   --------
      .MTUCap + MHB =                              IF-MIB:ifMtu


   _____________________________________________________________________
   IBA Port Sample Counter                     Corresponding SNMP Object
   _____________________________________________________________________
   --------------------
   Sample Select Values see [Infini v1.0] table:187 
   --------------------
   PortRcvDataVL * 4 +
     ( PortXmitPktsVL  * POH) =                    ibIfVLInOctets
   PortRcvPktsVL =                                 ibIfVLInPkts
   PortXmitDataVL * 4 +
     ( PortXmitPktsVL  * POH) =                    ibIfVLOutOctets
   PortXmitPktsVL =                                ibIfVLOutPkts

Anderson                                                       [Page 11]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 

    Note that PortCounters.PortRcvSwitchRelayErrors is not counted in
    either IF-MIB:ifInDiscards or IF-MIB:ifOutDiscards.
    These discards counters will someday probably go into a separate
    switch MIB. 

3.0 Definitions

IB-IF-MIB DEFINITIONS ::= BEGIN

IMPORTS
    MODULE-COMPLIANCE, OBJECT-GROUP       FROM SNMPv2-CONF
    MODULE-IDENTITY, OBJECT-TYPE,
    experimental,                          
    Integer32, Counter32, Counter64       FROM SNMPv2-SMI 
    TEXTUAL-CONVENTION                    FROM SNMPv2-TC  
    ifIndex                               FROM IF-MIB
    ;

ibIfMIB MODULE-IDENTITY
   LAST-UPDATED "200107121200Z"  -- 12 July 2001 12:00:00 EST 
   ORGANIZATION "Individual submission"
   CONTACT-INFO 
       "Bill Anderson (banderson@infiniswitch.com)
        InfiniSwitch Corporation"
   DESCRIPTION
       "This MIB contains managed object definitions for 
        managing Infiniband interfaces."
   -- Revision history.
   REVISION
       "200107121200Z"  -- 12 July 2001 12:00:00 EST
   DESCRIPTION
      "Initial draft version." 
   ::= { experimental xxxx } -- to be assigned by IANA 

--Textual Conventions
VLIndexTC ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
       "Identifies a Virtual Lane instance on a given interface."
    SYNTAX       Integer32(0..15)

     ibIfObjects        OBJECT IDENTIFIER ::= { ibIfMIB 1}
     ibIfNotifications  OBJECT IDENTIFIER ::= { ibIfMIB 2}
     ibIfConformance    OBJECT IDENTIFIER ::= { ibIfMIB 3}
     ibIfCompliances    OBJECT IDENTIFIER ::= { ibIfConformance 1}
     ibIfMIBGroups      OBJECT IDENTIFIER ::= { ibIfConformance 2}









Anderson                                                       [Page 12]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 
     --****************************************************************
     -- IPoIB Detailed per interface/port statistics 
     -- ibIfPortStat
     --****************************************************************
ibIfPortStatTable OBJECT-TYPE
    SYNTAX       SEQUENCE OF IpoibPortStatEntry
    MAX-ACCESS   not-accessible
    STATUS       current
    DESCRIPTION
       "This table provides detail statistics for all Infiniband
        interfaces attached to a particular system. There will be
        one row in this table for each Infiniband  interfaces in
         the system."
    ::= { ibIfObjects 1 } 

ibIfPortStatEntry OBJECT-TYPE
           SYNTAX     IpoibPortStatEntry
           MAX-ACCESS not-accessible
           STATUS     current
           DESCRIPTION 
              "Statistics for a particular interface to an 
               Infiniband medium."
           INDEX       { ifIndex }
           ::= { ibIfPortStatTable 1 } 

IpoibPortStatEntry ::= SEQUENCE {
    ibIfPortSymbolErrs               Counter32,
    ibIfPortLinkErrRecovery          Counter32,
    ibIfPortLinkDowned               Counter32,
    ibIfPortStatLocalPhyErrs         Counter32,
    ibIfPortStatMalPktErrs           Counter32,
    ibIfPortStatRcvRemPhyErrs        Counter32,
    ibIfPortStatRcvConstrErrs        Counter32,
    ibIfPortStatInactDiscards        Counter32,
    ibIfPortStatNeighMTUDiscards     Counter32,
    ibIfPortStatSwLifetimeDiscards   Counter32,
    ibIfPortStatHOQLifetimeDiscards  Counter32,
    ibIfPortStatLinkIntergrityErrs   Counter32,
    ibIfPortStatExcBufOverrunErrs    Counter32,
    ibIfPortStatVL15Dropped          Counter32 
}

ibIfPortSymbolErrs OBJECT-TYPE
    SYNTAX       Counter32
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "Total number of symbol errors detected on one or virtual 
        more lanes."
    ::= { ibIfPortStatEntry 1 } 






Anderson                                                       [Page 13]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 

ibIfPortLinkErrRecovery OBJECT-TYPE
    SYNTAX       Counter32
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "Total number of times the Port Training state machine has
        successfully completed the link error recovery process."
    ::= { ibIfPortStatEntry 2 } 

ibIfPortLinkDowned OBJECT-TYPE
    SYNTAX       Counter32
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "Total number of times the Port Training state machine
        has failed the link error recovery process and downed
        the link."
    ::= { ibIfPortStatEntry 3 } 
       
ibIfPortStatLocalPhyErrs OBJECT-TYPE
    SYNTAX       Counter32
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "Total number of packets received on the port that contain
        local physical errors (ICRC, VCRC, FCCRC, and
        all physical errors that cause entry into the BAD
        PACKET or BAD PACKET DISCARD states of the
        packet receiver state machine)."
    ::= { ibIfPortStatEntry 4 }  

ibIfPortStatMalPktErrs OBJECT-TYPE
    SYNTAX       Counter32
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "Total number of packets received on the port that contain
        malformed packet errors
        - data packets: LVer, length, VL
        - link packets: operand, length, VL"

    ::= { ibIfPortStatEntry 5 }  

ibIfPortStatRcvRemPhyErrs OBJECT-TYPE
    SYNTAX       Counter32
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "Total number of packets marked with the EBP delimiter received
        on the port."
    ::= { ibIfPortStatEntry 6 }  




Anderson                                                       [Page 14]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 

ibIfPortStatRcvConstrErrs OBJECT-TYPE
    SYNTAX       Counter32
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "Total number of packets received on the port that are
        discarded for the following reasons:
        - FilterRawInbound is true and packet is raw
        - PartitionEnforcementInbound is true and packet fails
        partition key check, IP version check, or transport
        header version check."
    ::= { ibIfPortStatEntry 7 }  

ibIfPortStatInactDiscards OBJECT-TYPE
    SYNTAX       Counter32
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "Total number of outbound packets discarded by the port because
        it is in the inactive state."
    ::= { ibIfPortStatEntry 8 }  

ibIfPortStatNeighMTUDiscards OBJECT-TYPE
    SYNTAX       Counter32
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "Total number of outbound packets discarded by the
        port because packet length exceeded the neighbor MTU."
    ::= { ibIfPortStatEntry 9 }  

ibIfPortStatSwLifetimeDiscards OBJECT-TYPE
    SYNTAX       Counter32
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "Total number of outbound packets discarded by the port because
        the switch lifetime limit was exceeded. 
        Applies to switches only."
    ::= { ibIfPortStatEntry 10 }  

ibIfPortStatHOQLifetimeDiscards OBJECT-TYPE
    SYNTAX       Counter32
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "Total number of outbound packets discarded by the
        port because the switch HOQ lifetime was exceeded.
        Applies to switches only."
    ::= { ibIfPortStatEntry 11 }  





Anderson                                                       [Page 15]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 

ibIfPortStatLinkIntergrityErrs OBJECT-TYPE
    SYNTAX       Counter32
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "The number of times that the frequency of packets containing 
        local physical errors exceeded local_phy_errors."
    ::= { ibIfPortStatEntry 12 }  

ibIfPortStatExcBufOverrunErrs OBJECT-TYPE
    SYNTAX       Counter32
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "The number of times that overrun_errors consecutive
        flow control update periods occurred with at least one
        overrun error in each period."
    ::= { ibIfPortStatEntry 13 }  

ibIfPortStatVL15Dropped OBJECT-TYPE
    SYNTAX       Counter32
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "Number of incoming VL15 packets dropped due to
        resource limitations on port selected by the port 
        selected (due to lack of buffers)."
    ::= { ibIfPortStatEntry 14 }  

     --****************************************************************
     -- IPoIB per port VL Traffic Objects
     -- ibIfVLTraffic
     --****************************************************************

ibIfVLTrafficTable OBJECT-TYPE
    SYNTAX       SEQUENCE OF IpoibVLTrafficEntry
    MAX-ACCESS   not-accessible
    STATUS       current
    DESCRIPTION 
       "This table provides traffic statistics for all 
        virtual lanes which are configured on an Infiniband 
        interface.  There will always be atleast one virtual 
        lane on in the range VL0-VL14 configured on an interfaces 
        as well as the control channel VL15.  Configuration 
        of what VLs are available on a particular Interface 
        is done by IBA native management."
    ::= { ibIfObjects 2 } 

ibIfVLTrafficEntry OBJECT-TYPE
    SYNTAX       IpoibVLTrafficEntry
    MAX-ACCESS   not-accessible
    STATUS       current
    DESCRIPTION "Information about a particular VL."
    INDEX       { ifIndex, vlIndex }
    ::= { ibIfVLTrafficTable 1 }  
Anderson                                                       [Page 16]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 

IpoibVLTrafficEntry ::= SEQUENCE {
    vlIndex                       VLIndexTC,
    ibIfVLOutOctets              Counter64,       
    ibIfVLOutPkts                Counter64,       
    ibIfVLInOctets               Counter64,       
    ibIfVLInPkts                 Counter64
}
         
vlIndex OBJECT-TYPE
    SYNTAX       VLIndexTC
    MAX-ACCESS   not-accessible
    STATUS       current
    DESCRIPTION 
       "Identifies what Virtual Lane instance is being
        addressed."
    ::= { ibIfVLTrafficEntry 1 } 

ibIfVLOutOctets OBJECT-TYPE
    SYNTAX       Counter64
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "The number of octets transmitted in valid data packets on this
        interface, including the START and END delimiters and the 
        VCRC."
    ::= { ibIfVLTrafficEntry 2 } 
        
ibIfVLOutPkts OBJECT-TYPE
    SYNTAX       Counter64
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "The number of packets successfully sent on this VL."
    ::= { ibIfVLTrafficEntry 3 } 


ibIfVLInOctets OBJECT-TYPE
    SYNTAX       Counter64
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "The number of octets in valid data packets received on this 
        interface, including the START and END delimiters and the VCRC."
    ::= { ibIfVLTrafficEntry 4 } 
         
ibIfVLInPkts OBJECT-TYPE
    SYNTAX       Counter64
    MAX-ACCESS   read-only
    STATUS       current
    DESCRIPTION
       "The number of packets successfully sent on this VL. Note that
        this does not include link packets, since link packets are
        generated by the interface layer, and are not passed from any
        higher layer protocol."
    ::= { ibIfVLTrafficEntry 5 } 
Anderson                                                       [Page 17]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 

     --****************************************************************
     -- Compliance Statement
     --****************************************************************
ibIfCompliance MODULE-COMPLIANCE
           STATUS      current
           DESCRIPTION "The compliance statement for managed network
                       entities which have Infiniband network
                       interfaces."
 
           MODULE  -- this module
               MANDATORY-GROUPS { ibIfStatGroup }

               GROUP ibIfVLTrafficGroup
               DESCRIPTION
                  "This group is optional. It is appropriate for all 
                   devices which implement the corresponding 
                   Infiniband performance counters."
     ::= { ibIfCompliances 1 }  
     --****************************************************************
     -- Units of Conformance
     --****************************************************************
ibIfStatGroup OBJECT-GROUP
    OBJECTS {
       ibIfPortSymbolErrs,
       ibIfPortLinkErrRecovery,
       ibIfPortLinkDowned,
       ibIfPortStatLocalPhyErrs,
       ibIfPortStatMalPktErrs,
       ibIfPortStatRcvRemPhyErrs,
       ibIfPortStatRcvConstrErrs,
       ibIfPortStatInactDiscards,
       ibIfPortStatNeighMTUDiscards,
       ibIfPortStatSwLifetimeDiscards,
       ibIfPortStatHOQLifetimeDiscards,
       ibIfPortStatLinkIntergrityErrs,
       ibIfPortStatExcBufOverrunErrs,
       ibIfPortStatVL15Dropped
   }
     STATUS current
     DESCRIPTION
          "Detailed error statistics group"
     ::= { ibIfMIBGroups 1 }  

ibIfVLTrafficGroup OBJECT-GROUP
    OBJECTS {
       ibIfVLOutOctets,
       ibIfVLOutPkts,
       ibIfVLInOctets,
       ibIfVLInPkts
   }
     STATUS current
     DESCRIPTION
          "Detailed per VL traffic statistics group"
     ::= { ibIfMIBGroups 2 }  
END
Anderson                                                       [Page 18]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 

4.0 Security Considerations

   SNMPv1 by itself is not a secure environment.  Even if the network
   itself is secure (for example by using IPSec), even then, there is no
   control as to who on the secure network is allowed to access and
   GET/SET (read/change/create/delete) the objects in this MIB.

   It is recommended that the implementers consider the security
   features as provided by the SNMPv3 framework.  Specifically, the use
   of the User-based Security Model RFC 2574 [RFC2574] and the View-
   based Access Control Model RFC 2575 [RFC2575] is recommended.

   It is then a customer/user responsibility to ensure that the SNMP
   entity giving access to an instance of this MIB, is properly
   configured to give access to the objects only to those principals
   (users) that have legitimate rights to indeed GET or SET
   (change/create/delete) them.

5.0 Full Copyright Statement
 
   Copyright (C) The Internet Society (2000).  All Rights Reserved.
 
   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.
 
   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.
 
   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.            










Anderson                                                       [Page 19]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 

6.0  Intellectual Property
 
   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights.  Information on the
   IETF's procedures with respect to rights in standards-track and
   standards- related documentation can be found in BCP-11.  Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat. 

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard.  Please address the information to the IETF Executive
   Director. 
 
7.0  Author's Address
 
   Name:    Bill Anderson
   Company: Infiniswitch Corporation
   Address: 134 Flanders Road
            Westborough, MA 01581
   Phone:   978-599-6336
   EMail:   banderson@infiniswitch.com

8.0  References

[RFC2571]   Harrington, D., Presuhn, R., and B. Wijnen, "An Architecture
            for Describing SNMP Management Frameworks", RFC 2571, April
            1999.

[RFC1155]   Rose, M., and K. McCloghrie, "Structure and Identification
            of Management Information for TCP/IP-based Internets", STD
            16, RFC 1155, May 1990.

[RFC1212]   Rose, M., and K. McCloghrie, "Concise MIB Definitions", STD
            16, RFC 1212, March 1991.

[RFC1215]   M. Rose, "A Convention for Defining Traps for use with the
            SNMP", RFC 1215, March 1991.

[RFC2578]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
            Rose, M., and S. Waldbusser, "Structure of Management
            Information Version 2 (SMIv2)", STD 58, RFC 2578, April
            1999.

[RFC2579]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
            Rose, M., and S. Waldbusser, "Textual Conventions for
            SMIv2", STD 58, RFC 2579, April 1999.
Anderson                                                       [Page 20]

Internet Draft      draft-anderson-ibif-mib-00.txt         July 12, 2001 

[RFC2580]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
            Rose, M., and S. Waldbusser, "Conformance Statements for
            SMIv2", STD 58, RFC 2580, April 1999.

[RFC1157]   Case, J., Fedor, M., Schoffstall, M., and J. Davin, "Simple
            Network Management Protocol", STD 15, RFC 1157, May 1990.

[RFC1901]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
            "Introduction to Community-based SNMPv2", RFC 1901, January
            1996.

[RFC1906]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
            "Transport Mappings for Version 2 of the Simple Network
            Management Protocol (SNMPv2)", RFC 1906, January 1996.

[RFC2572]   Case, J., Harrington D., Presuhn R., and B. Wijnen, "Message
            Processing and Dispatching for the Simple Network Management
            Protocol (SNMP)", RFC 2572, April 1999.

[RFC2574]   Blumenthal, U., and B. Wijnen, "User-based Security Model
            (USM) for version 3 of the Simple Network Management
            Protocol (SNMPv3)", RFC 2574, April 1999.

[RFC1905]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
            "Protocol Operations for Version 2 of the Simple Network
            Management Protocol (SNMPv2)", RFC 1905, January 1996.

[RFC2573]   Levi, D., Meyer, P., and B. Stewart, "SNMPv3 Applications",
            RFC 2573, April 1999.

[RFC2575]   Wijnen, B., Presuhn, R., and K. McCloghrie, "View-based
            Access Control Model (VACM) for the Simple Network
            Management Protocol (SNMP)", RFC 2575, April 1999.

[RFC2570]   Case, J., Mundy, R., Partain, D., and B. Stewart,
            "Introduction to Version 3 of the Internet-standard Network
            Management Framework", RFC 2570, April 1999.

--- end of Framework references

[RFC2863]   McCloghrie, K., and Kasenholz F.,
            "The Interfaces Group MIB", RFC 2863, June 2000

[RFC2665]   Flick J.,and Johnson J.,
            "Definitions of Managed Objects for the Ethernet-like
            Interface Types", RFC 2863, August 1999

[Infini v1.0]         InfiniBand Architecture Specification, Volume 1.0


This Internet draft has an expiration date  of January 12, 2002




Anderson                                                       [Page 21]
