COSE_MSG = [sign:1, COSE_Sign] /
           [encrypt:2, COSE_encrypt] /
           [mac:3, COSE_mac]


COSE_MSG = COSE_SignedMessage /
           #6.998([COSE_encrypt]) /
           #6.999([COSE_mac])


COSE_Sign = (
       protected : (bstr / nil),
       unprotected : (header_map / nil),
       payload : (bstr / nil),
       ? signatures: ([+[COSE_signature]] / nil),
       ? COSE_signature
COSE_SignMessage = #6.997([ COSE_Sign ])

keys = int / tstr
header_map = {+ keys => any }


COSE_signature =  (
       protected : (bstr / nil),
       unprotected : (header_map / nil),
       signature : bstr
Sig_structure = [
       body_protected : (bstr / nil),
       sign_protected : (bstr / nil),
       payload : bstr
COSE_encrypt = (
     protected : (bstr / nil),  ; Contains header_map
     unprotected : (header_map / nil),
     iv : (bstr / nil),
     aad : (bstr / nil),
     ciphertext : (bstr / nil),
     ? recipients : ([+COSE_encrypt_a] / nil)
     ? COSE_encrypt
COSE_encrypt_a = [COSE_encrypt]


Enc_structure = [
      protected : (bstr / nil),
      aad : (bstr / nil)
COSE_mac = (
      protected : (bstr / nil),
      unprotected : (header_map / nil),
      payload : bstr,
      tag : bstr,
      ?recipients : ([+COSE_encrypt_a] / nil)
      ? COSE_encrypt
MAC_structure = {
      protected : (bstr / nil),
      payload : bstr
COSE_Key = {
       "kty" : tstr,
       ? "use" : tstr,
       ? "key_ops" : [+tstr],
       ? "alg" : tstr,
       ? "kid" : tstr,
       * keys => values
COSE_KeySet = [+COSE_Key]


