token          = <token, defined in [Part1], Section 1.2.2>
word           = <word, defined in [Part1], Section 1.2.2>
OWS            = <OWS, defined in [Part1], Section 1.2.2>

absolute-URI   = <absolute-URI, defined in [Part1], Section 2.6>
partial-URI    = <partial-URI, defined in [Part1], Section 2.6>
qvalue         = <qvalue, defined in [Part1], Section 6.4>

charset = token

content-coding   = token

media-type = type "/" subtype *( OWS ";" OWS parameter )
type       = token
subtype    = token

parameter      = attribute "=" value
attribute      = token
value          = word

language-tag = <Language-Tag, defined in [RFC5646], Section 2.1>

Accept = #( media-range [ accept-params ] )

media-range    = ( "*/*"
                      / ( type "/" "*" )
                      / ( type "/" subtype )
                      ) *( OWS ";" OWS parameter )
accept-params  = OWS ";" OWS "q=" qvalue *( accept-ext )
accept-ext     = OWS ";" OWS token [ "=" word ]

Accept-Charset = 1#( ( charset / "*" )
                            [ OWS ";" OWS "q=" qvalue ] )

Accept-Encoding  = #( codings [ OWS ";" OWS "q=" qvalue ] )
codings          = ( content-coding / "*" )

q=1.

Accept-Language =
                       1#( language-range [ OWS ";" OWS "q=" qvalue ] )
language-range  =
               <language-range, defined in [RFC4647], Section 2.1>

Content-Encoding = 1#content-coding

Content-Language = 1#language-tag

Content-Location = absolute-URI / partial-URI

Content-Type = media-type

MIME-Version = 1*DIGIT "." 1*DIGIT

Accept = [ ( "," / ( media-range [ accept-params ] ) ) *( OWS "," [
    OWS media-range [ accept-params ] ] ) ]
Accept-Charset = *( "," OWS ) ( charset / "*" ) [ OWS ";" OWS "q="
    qvalue ] *( OWS "," [ OWS ( charset / "*" ) [ OWS ";" OWS "q="
    qvalue ] ] )
Accept-Encoding = [ ( "," / ( codings [ OWS ";" OWS "q=" qvalue ] ) )
    *( OWS "," [ OWS codings [ OWS ";" OWS "q=" qvalue ] ] ) ]
Accept-Language = *( "," OWS ) language-range [ OWS ";" OWS "q="
    qvalue ] *( OWS "," [ OWS language-range [ OWS ";" OWS "q=" qvalue ]
    ] )

Content-Encoding = *( "," OWS ) content-coding *( OWS "," [ OWS
    content-coding ] )
Content-Language = *( "," OWS ) language-tag *( OWS "," [ OWS
    language-tag ] )
Content-Location = absolute-URI / partial-URI





Content-Type = media-type

MIME-Version = 1*DIGIT "." 1*DIGIT

OWS = <OWS, defined in [Part1], Section 1.2.2>

absolute-URI = <absolute-URI, defined in [Part1], Section 2.6>
accept-ext = OWS ";" OWS token [ "=" word ]
accept-params = OWS ";" OWS "q=" qvalue *accept-ext
attribute = token

charset = token
codings = ( content-coding / "*" )
content-coding = token

language-range = <language-range, defined in [RFC4647], Section 2.1>
language-tag = <Language-Tag, defined in [RFC5646], Section 2.1>

media-range = ( "*/*" / ( type "/*" ) / ( type "/" subtype ) ) *( OWS
    ";" OWS parameter )
media-type = type "/" subtype *( OWS ";" OWS parameter )

parameter = attribute "=" value
partial-URI = <partial-URI, defined in [Part1], Section 2.6>

qvalue = <qvalue, defined in [Part1], Section 6.4>

subtype = token

token = <token, defined in [Part1], Section 1.2.2>
type = token

value = word

word = <word, defined in [Part1], Section 1.2.2>

