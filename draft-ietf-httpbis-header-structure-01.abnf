common-structure = 1* ( identifier dictionary )

dictionary = * ( identifier [ value ] )

value = identifier /
             integer /
             number /
             ascii-string /
             unicode-string /
             blob /
             timestamp /
             common-structure

identifier = token  [ "/" token ]

integer = ["-"] 1*19 DIGIT

number = ["-"] DIGIT '.' 1*14DIGIT /
              ["-"] 2DIGIT '.' 1*13DIGIT /
              ["-"] 3DIGIT '.' 1*12DIGIT /
              ... /
              ["-"] 12DIGIT '.' 1*3DIGIT /
              ["-"] 13DIGIT '.' 1*2DIGIT /
              ["-"] 14DIGIT '.' 1DIGIT

ascii-string = * %x20-7e

unicode-string = * UNICODE

UNICODE = <U+0000-U+D7FF / U+E000-U+10FFFF>
blob = * %0x00-ff

timestamp = number

h1-common-structure-header =
             h1-common-structure-legacy-header /
             h1-common-structure-self-identifying-header

h1-common-structure-legacy-header =
             field-name ":" OWS h1-common-structure

h1-common-structure = h1-element * ("," h1-element)

h1-element = identifier * (";" identifier ["=" h1-value])

h1-value = identifier /
             integer /
             number /
             h1-ascii-string /
             h1-unicode-string /
             h1-blob /
             h1-timestamp /
             ">" h1-common-structure "<"

h1-ascii-string = DQUOTE *(
                       ( "\" DQUOTE ) /
                       ( "\" "\" ) /
                       0x20-21 /
                       0x23-5B /
                       0x5D-7E
                       ) DQUOTE

h1-unicode-string = DQUOTE *(
                         ( "\" DQUOTE )
                         ( "\" "\" ) /
                         EmbeddedUnicodeChar /
                         0x20-21 /
                         0x23-5B /
                         0x5D-7E /
                         ) DQUOTE

h1-blob = ":" base64 ":"
h1-timestamp = number

qualified-token = token-or-asterix [ "/" token-or-asterix ]

token-or-asterix = token from RFC7230, but also allowing "*"

qualified-token = token-or-asterix [ "/" token-or-asterix ]

Common-Structure-Header = field-name ":" 1#named-dictionary

named-dictionary = qualified-token [ *(";" param) ]

param = token [ "=" value ]

value = we'll get back to this in a moment.

