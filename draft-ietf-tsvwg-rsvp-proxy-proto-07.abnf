Notify = Notify message


     Figure 4: Reservation Failure With Sender Notification via Notify

   For local failures on the Receiver Proxy node, if a similar failure
   on an RSVP midpoint would cause the generation of a ResvErr (for
   example, CAC failure), the Receiver Proxy MUST generate a Notify
   towards the sender.  The Receiver Proxy MAY additionally generate a
   Notify upon local failures which would not ordinarily cause
   generation of a ResvErr message, such as described in Appendix B of
   [RFC2205].

   When the method of sender notification via Notify message is used, it
   is RECOMMENDED that the RSVP Receiver Proxy also issues sender
   notification via a PathErr message.  This maximizes the chances that
   the notification reaches the sender in all situations (e.g. even if
   some RSVP routers do not support the Notify procedure, or if a Notify
   message gets dropped).  However, for controlled environments (e.g.
   where all RSVP routers are known to support Notify procedures) and
   where it is desirable to minimize the volume of signaling, the RSVP
   Receiver Proxy MAY rely exclusively on sender notification via Notify
   message and thus not issue sender notification via PathErr message.

   In environments where there are both RSVP-capable receivers and RSVP
   Receiver Proxies acting on behalf of non RSVP-capable receivers, a
   sender does not know whether a given reservation is established with
   an RSVP-capable receiver or with an RSVP Receiver Proxy.  Thus, a
   sender that supports the procedures defined in this section may very
   well include a Notify Request object in Path messages for a
   reservation that happens to be controlled by an RSVP-capable
   receiver.  This document does not define, nor expect, any change in
   existing receiver behavior.  As a result, in this case, the sender
   will actually not receive Notify messages conveying downstream
   notifications.  However, this is perfectly fine because the
   synchronisation between the RSVP reservation state and the
   application requirement can be performed by the actual receiver in
   this case as per the regular end-to-end RSVP model, so that in this
   case, the sender need not care about downstream notifications.

   A sender that does not support the procedures defined in this section
   could happen to include a Notify Request object in Path messages for
   a reservation simply because it is interested in getting upstream
   notifications faster.  If the reservation happens to be controlled by
   an RSVP Receiver Proxy supporting the procedures defined in this
   section, the sender will then also receive unexpected Notify messages
   containing downstream notifications.  It is expected that such a
   sender will simply naturally drop such downstream notifications as
   invalid.  Because it is RECOMMENDED above that the RSVP Receiver
   Proxy also issues sender notification via a PathErr message even when
   sender notification via Notify message is used, the sender will still
   be notified of reservation failure in accordance with the "sender
   notification via PathErr" method.  In summary, activating the
   OPTIONAL "sender notification via Notify" method on a Receiver Proxy,
   does not prevent a sender that does not support this method, to rely
   on the MANDATORY "sender notification via PathErr" method.  It would,
   however, allow a sender supporting the "sender notification via
   Notify" method to take advantage of this OPTIONAL method.
