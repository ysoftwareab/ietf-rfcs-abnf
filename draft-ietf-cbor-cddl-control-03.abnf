BASE => int             ; lower bound
X = 0
Y = 3
rect = {
     interval<X>
     interval<Y>
a = "foo" .cat '
     bar
     baz
b = "foo\n  bar\n  baz\n"
          Figure 2: Example: concatenation of text and byte string

oid = bytes .abnfb ("oid" .det cbor-tags-oid)
roid = bytes .abnfb ("roid" .det cbor-tags-oid)

cbor-tags-oid = '
oid = 1*arc
roid = *arc
arc = [nlsb] %x00-7f
nlsb = %x81-ff *%x80-ff
CRLF = %x0A / %x0D.0A
Tag1004 = #6.1004(text .abnf full-date)
Tag0 = #6.0(text .abnf date-time)

full-date = "full-date" .det rfc3339
date-time = "date-time" .det rfc3339

rfc3339 = '
date-fullyear   = 4DIGIT
date-month      = 2DIGIT  ; 01-12
date-mday       = 2DIGIT  ; 01-28, 01-29, 01-30, 01-31 based on
                                ; month/year
time-hour       = 2DIGIT  ; 00-23
time-minute     = 2DIGIT  ; 00-59
time-second     = 2DIGIT  ; 00-58, 00-59, 00-60 based on leap sec
                                ; rules
time-secfrac    = "." 1*DIGIT
time-numoffset  = ("+" / "-") time-hour ":" time-minute
time-offset     = "Z" / time-numoffset

partial-time    = time-hour ":" time-minute ":" time-second
                        [time-secfrac]
full-date       = date-fullyear "-" date-month "-" date-mday
full-time       = partial-time time-offset

date-time       = full-date "T" full-time
rfc5234-core = '
DIGIT          =  %x30-39 ; 0-9
foo = {
     kind: bar / baz .feature (["foo-extensions", "bazify"])
bar = ...
baz = ... ; complex stuff that doesn't all need to be in the detail

person = {
     ? name: text
     ? organization: text
     $$person-extensions
     * (text .feature "further-person-extension") => any
allowed-types = number / text / bool / null
                 / [* number] / [* text] / [* bool]
                 / (any .feature "allowed-type-extension")

                 Figure 6: Type extensibility with .feature

SenML-Record = {
v = JC<"v", 2>
