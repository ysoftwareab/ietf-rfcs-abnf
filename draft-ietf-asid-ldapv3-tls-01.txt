
ASID Working Group                               Jeff Hodges, Stanford
INTERNET-DRAFT                               RL "Bob" Morgan, Stanford
                                        Mark Wahl, Critical Angle Inc.
                                                            June, 1997


              Lightweight Directory Access Protocol (v3):
                 Extension for Transport Layer Security
                   draft-ietf-asid-ldapv3-tls-01.txt



1.  Status of this Memo

This document is an Internet-Draft.  Internet-Drafts are  working  docu-
ments  of the Internet Engineering Task Force (IETF), its areas, and its
working groups.  Note that other  groups  may  also  distribute  working
documents as Internet-Drafts.

Internet-Drafts are draft documents valid for a maximum  of  six  months
and  may  be  updated,  replaced, or obsoleted by other documents at any
time.  It is inappropriate to use Internet- Drafts as reference material
or to cite them other than as ``work in progress.''

To learn the current status of  any  Internet-Draft,  please  check  the
``1id-abstracts.txt''  listing  contained in the Internet- Drafts Shadow
Directories on ds.internic.net (US East Coast), nic.nordu.net  (Europe),
ftp.isi.edu (US West Coast), or munnari.oz.au (Pacific Rim).

2.  Abstract

This document defines the "Start Transport Layer Security  (TLS)  Opera-
tion" for LDAP [LDAPv3, TLS]. This operation provides for TLS establish-
ment in an LDAP association and is defined in terms of an LDAP  extended
request.

The key words "MUST", "SHOULD", and "MAY" used in this document  are  to
be interpreted as described in [Bradner97].

3.  The Start TLS Operation

3.1.  Requesting TLS Establishment

A client may perform a Start TLS operation by transmitting an  LDAP  PDU
containing  an ExtendedRequest [LDAPv3] specifying the OID for the Start
TLS operation:

     1.3.6.1.4.1.1466.20037



Hodges, Morgan, Wahl                                            [Page 1]

LDAPv3: Extension for Transport Layer Security                 June 1997


An LDAP ExtendedRequest is defined as follows:

     ExtendedRequest ::= [APPLICATION 23] SEQUENCE {
             requestName             [0] LDAPOID,
             requestValue            [1] OCTET STRING OPTIONAL }

A Start TLS extended request is formed by setting the requestName  field
to  the  OID string given above.  The requestValue field is absent.  The
client MUST NOT send any PDUs on this connection following this  request
until it receives a Start TLS extended response.

When a Start TLS extended request is made, the  server  MUST  return  an
LDAP  PDU  containing  a  Start  TLS  extended response.  An LDAP Exten-
dedResponse is defined as follows:

     ExtendedResponse ::= [APPLICATION 24] SEQUENCE {
             responseName            [0] LDAPOID OPTIONAL,
             response                [1] OCTET STRING OPTIONAL,
             standardResponse        [2] LDAPResult }

A Start TLS extended response MUST contain a  responseName  field  which
MUST be set to the same string as that present in the Start TLS extended
request.  The  response  field  is  absent.  The  server  MUST  set  the
resultCode of the standardResponse field to either success or one of the
other values outlined in section 3.3.

3.2.  "Success" Response

If the standardResponse field contains a  resultCode  of  success,  this
indicates that the server is willing and able to negotiate TLS.  At this
point the client, which has ceased to transfer LDAP requests on the con-
nection,  MUST  either begin a TLS negotiation, or close the connection.
In the former case, the client will send PDUs in the TLS Record Protocol
directly over the underlying TCP bytestream to the server.

After the TLS connection is established, both parties MUST  individually
decide  whether  or not to continue based on the privacy level achieved.
Ascertaining the TLS connection's privacy level is implementation depen-
dent,  and accomplished by communicating with one's respective local TLS
implementation.

If the client or server decides that  the  level  of  authentication  or
privacy  is  not high enough for it to continue, it SHOULD close the TLS
connection immediately after  the  TLS  negotiation  has  completed,  to
disconnect  the  TLS service and return to an LDAP state (see section 5,
below). This will cause the client's  authorization identity to be reset
to  anonymous. The client MAY attempt to Start TLS again, or MAY send an
unbind request, or send any other LDAP request.



Hodges, Morgan, Wahl                                            [Page 2]

LDAPv3: Extension for Transport Layer Security                 June 1997


3.3.  Response other than "success"

If the standardResponse field contains a resultCode other than  success,
this indicates that the server is unwilling or unable to negotiate TLS.

If the Start TLS extended request was  not  successful,  the  resultCode
will be one of:

     - operationsError (operations sequencing incorrect; e.g. TLS already
                        established)
     - protocolError (TLS not supported or incorrect PDU structure)
     - referral (this server doesn't do TLS, try this one)
     - unavailable (e.g. some major problem with TLS, or server is
                    shutting down)

The server MUST return operationsError if the client violates any of the
Start  TLS  extended operation sequencing requirements described in sec-
tion 4, below.

If the server does not support TLS (whether by design or by current con-
figuration),  it  MUST  set the resultCode to protocolError (see section
4.1.1 of [LDAPv3]), or to referral. The server MUST  include  an  actual
referral  value  in the LDAP Result if it returns a resultCode of refer-
ral. The client's current session is unaffected if the server  does  not
support  TLS.  The client MAY proceed with any LDAP operation, or it MAY
close the connection.

The server MUST return unavailable if it supports TLS but cannot  estab-
lish  a  TLS connection for some reason, e.g. the certificate server not
responding, it cannot contact its TLS implementation, or if  the  server
is in process of shutting down. The client MAY retry the StartTLS opera-
tion, or it MAY proceed with any other LDAP operation, or it  MAY  close
the connection.

4.  Sequencing of the Start TLS Operation

The client MAY send the Start TLS extended request  at  any  time  after
establishing an LDAP association, except that in the following cases the
client MUST NOT send a Start TLS extended request:

     - if TLS is currently established on the connection, or
     - during a multi-stage SASL negotiation, or
     - if there are any LDAP operations outstanding on the connection.

The result of violating any of these requirements is described above  in
section 3.3.





Hodges, Morgan, Wahl                                            [Page 3]

LDAPv3: Extension for Transport Layer Security                 June 1997


The client MAY have already perfomed a Bind operation when  it  sends  a
Start TLS request, or the client might have not yet bound.

If the client did not establish a  TLS  connection  before  sending  any
other  requests,  and  the server requires the client to establish a TLS
connection before performing  a  particular  request,  the  server  MUST
reject that request with a confidentialityRequired or strongAuthRequired
result. The client MAY send a Start TLS  extended  request,  or  it  MAY
choose to close the connection.

5.  Closing a TLS Connection

5.1.  Graceful Closure

Either the client or server MAY terminate the TLS connection on an  LDAP
association  by  sending  a  TLS closure alert. This will leave the LDAP
association intact.

Before closing a TLS connection, the client MUST  either  wait  for  any
outstanding  LDAP  operations  to  complete,  or explicitly abandon them
[LDAPv3].

After the initiator of a close has sent a closure alert, it MUST discard
any  TLS  messages  until it has received an alert from the other party.
It will cease to send  TLS  Record  Protocol  PDUs,  and  following  the
reciept of the alert, MAY send and receive LDAP PDUs.

The other party, if  it  receives  a  closure  alert,  MUST  immediately
transmit  a  TLS  closure  alert.  It will subequently cease to send TLS
Record Protocol PDUs, and MAY send and receive LDAP PDUs.

5.2.  Abrupt Closure

Either the client or server MAY abruptly close the entire LDAP  associa-
tion and any TLS connection established on it by dropping the underlying
TCP connection. A server MAY beforehand send  the  client  a  Notice  of
Disconnection [LDAPv3] in this case.

6.  Effects of TLS Establishment on the Client's Authorization Identity

Upon establishment of the TLS connection onto the LDAP association,  the
server  MAY  base  the  client's  authorization identity on the client's
negotiated  TLS  credentials,  overriding  any  previously   established
credentials  and authorization identity. Otherwise, any previously esta-
blished credentials and authorization identity  MUST  remain  in  force,
including anonymous cedentials and identity in the case where the client
had not previously bound.




Hodges, Morgan, Wahl                                            [Page 4]

LDAPv3: Extension for Transport Layer Security                 June 1997


A client MAY explicitly request that its authenticated  TLS  credentials
be  used  as  the  source  for  its LDAP authorization identity. This is
accomplished after TLS establishment by invoking a Bind request  of  the
SASL  form  with  a  negotiated mechanism name of "EXTERNAL" [SASL]. The
credentials field MAY contain the client's  distinguished  name  (as  an
LDAP  string),  or  it MAY be empty.  If it does contain a distinguished
name, this name MUST match the authorization identity negotiated by  TLS
as  the  client's  identity. It is a matter of local policy what consti-
tutes a match. In the absence of local policy, the default matching pol-
icy  compares  for  equality.  The server MUST reject the Bind operation
with an invalidCredentials resultCode in the Bind response  if  they  do
not match.

Closure of the TLS connection MUST cause the LDAP association to move to
an  anonymous  authentication  and authorization state regardless of the
state established over TLS and  regardless  of  the  authentication  and
authorization state prior to TLS connection establishment.

7.  Security Considerations

The goals of using the TLS protocol with LDAP are to  ensure  connection
confidentiality and integrity, and to optionally provide for authentica-
tion. TLS expressly provides these capabilities, as described in [TLS].

All security gained via use of the Start TLS operation is gained by  the
use of TLS itself. The Start TLS operation, on its own, does not provide
any additional security.

The use of TLS does not provide or  ensure  for  confidentiality  and/or
non-repudiation  of  the  data housed by an LDAP-based directory server.
Once established, TLS only provides for and ensures confidentiality  and
integrity  of  the operations and data in transit over the LDAP associa-
tion, and only if the implementations on the client and  server  support
and negotiate it.

The level of security provided though the use of TLS depends directly on
both  the  quality of the TLS implementation used and the style of usage
of that implementation. Both parties SHOULD independently ascertain  and
consent to the privacy level achieved once TLS is established and before
begining use of the TLS connection. For example, the  privacy  level  of
the TLS connection might have been negotiated down to plaintext.

Client and server implementors SHOULD take  measures  to  ensure  proper
protection  of  credentials and other confidential data where such meas-
ures are not otherwise provided by the TLS implementation.

Server implementors SHOULD allow  for  server  administrators  to  elect
whether and when connection confidentiality is required.



Hodges, Morgan, Wahl                                            [Page 5]

LDAPv3: Extension for Transport Layer Security                 June 1997


8.  Acknowledgements

The authors thank Tim Howes and Paul Hoffman for their contributions  to
this document.

9.  References

[Bradner97]
     Scott Bradner, "Key Words for use in RFCs to  Indicate  Requirement
     Levels", Internet Draft, RFC 2119.

[LDAPv3]
     M. Wahl, S. Kille and T. Howes, "Lightweight Directory Access  Pro-
     tocol  (v3)",  Internet  Draft, February, 1997. Available as draft-
     ietf-asid-ldapv3-protocol-04.txt.

[TLS]Tim Dierks, C. Allen, "The  TLS  Protocol  Version  1.0",  Internet
     Draft, March 1997. Available as draft-ietf-tls-protocol-03.txt

[SASL]J. Myers,  "Simple  Authentication  and  Security  Layer  (SASL)",
     Internet  Draft,  April  1997.  Available as draft-myers-auth-sasl-
     10.txt

10.  Author's Address

   Jeff Hodges
   Computing & Communication Services
   Stanford University
   115 Pine Hall
   Stanford, CA 94305-4122
   USA

   Phone: +1-415-723-2452
   EMail: Jeff.Hodges@Stanford.edu


   RL "Bob" Morgan
   Computing & Communication Services
   Stanford University
   115 Pine Hall
   Stanford, CA 94305-4122
   USA

   Phone: +1-415-723-9711
   EMail: Bob.Morgan@Stanford.edu


   Mark Wahl



Hodges, Morgan, Wahl                                            [Page 6]

LDAPv3: Extension for Transport Layer Security                 June 1997


   Critical Angle Inc.
   4815 W. Braker Lane #502-385
   Austin, TX 78759
   USA

   EMail:  M.Wahl@critical-angle.com













































Hodges, Morgan, Wahl                                            [Page 7]





