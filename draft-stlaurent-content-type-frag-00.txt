


Network Working Group                                      S. St.Laurent
Internet-Draft                                     O'Reilly & Associates
Expires: April 28, 2003                                 October 28, 2002


                   The XPointer content-type() Scheme
                draft-stlaurent-content-type-frag-00.txt

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on April 28, 2003.

Copyright Notice

   Copyright (C) The Internet Society (2002).  All Rights Reserved.

Abstract

   This document specifies a content-type() scheme for use in XPointer-
   based fragment identifiers.  This scheme, like other XPointer
   Framework [12] schemes, is designed primarily for use with the XML
   Media Types defined in RFC 3023 [5], to identify locations within a
   given XML representation of a resource, though it may potentially be
   used to mix schemes for XML and non-XML representations.  The
   content-type() scheme notifies an XPointer processor whether the
   creator of the XPointer intended for a particular pointer part to
   apply to a resource representation which uses a particular MIME
   content type identifier.





St.Laurent               Expires April 28, 2003                 [Page 1]

Internet-Draft           content-type() scheme              October 2002


Table of Contents

   1. Introduction . . . . . . . . . . . . . . . . . . . . . . . . .   3
   2. Justification  . . . . . . . . . . . . . . . . . . . . . . . .   4
   3. Syntax . . . . . . . . . . . . . . . . . . . . . . . . . . . .   5
   4. Processing . . . . . . . . . . . . . . . . . . . . . . . . . .   6
   5. Relation to MIME Media Types . . . . . . . . . . . . . . . . .   7
   6. Other MIME issues  . . . . . . . . . . . . . . . . . . . . . .   8
   7. Conformance  . . . . . . . . . . . . . . . . . . . . . . . . .   9
   8. Security Considerations  . . . . . . . . . . . . . . . . . . .  10
   9. IANA Considerations  . . . . . . . . . . . . . . . . . . . . .  11
      References . . . . . . . . . . . . . . . . . . . . . . . . . .  12
      Author's Address . . . . . . . . . . . . . . . . . . . . . . .  13
   A. Acknowledgements . . . . . . . . . . . . . . . . . . . . . . .  14
   B. Revision History . . . . . . . . . . . . . . . . . . . . . . .  15
      Full Copyright Statement . . . . . . . . . . . . . . . . . . .  16



































St.Laurent               Expires April 28, 2003                 [Page 2]

Internet-Draft           content-type() scheme              October 2002


1. Introduction

   The content-type() scheme is intended to be used within the XPointer
   Framework [12] to support the addressing of nodes within XML (and
   potentially other) documents.  Pointer parts using the content-type()
   scheme will always fail, as they do not identify portions of an XML
   document, but they can communicate (though not enforce) expectations
   for processing of later parts of an XPointer.











































St.Laurent               Expires April 28, 2003                 [Page 3]

Internet-Draft           content-type() scheme              October 2002


2. Justification

   Even if all of the possible representations of a resource are
   themselves XML, they may contain very different structures and
   labels.  The impact of that variability will vary with the nature of
   the representations, but it may cause various schemes used within the
   XPointer Framework [12] (including xpointer() [15], element() [14],
   and xpath1() [16]) to return different answers if the representation
   of the resource is of an unexpected type.

   While content-type() pointer parts can never provide more than a
   suggestion, they may be helpful in coordinating program behavior or
   at least giving a human reader a clue as to why fragment identifiers
   are behaving differently than expected.





































St.Laurent               Expires April 28, 2003                 [Page 4]

Internet-Draft           content-type() scheme              October 2002


3. Syntax

   The scheme name is "content-type".  The scheme data syntax is as
   follows; if scheme data in a pointer part with the content-type()
   scheme does not conform to the syntax defined in this section, it is
   an error and the pointer part fails.

   content-type() Scheme Syntax:

     ptrpart                 ::=    content-type( content-typeschemedata )
     content-typeschemedata  ::=    type

   type must be a MIME Content-Type identifier conforming to RFC 2046
   [1], and should preferably be a registered type, as registration
   provides a medium in which to describe the different kinds of
   fragment identifiers which may apply to a particular type.



































St.Laurent               Expires April 28, 2003                 [Page 5]

Internet-Draft           content-type() scheme              October 2002


4. Processing

   The XPointer Framework provides limited support for specifying XML
   processing context.  The xmlns() [13] scheme provides support for
   identifying mappings between prefixes used in pointer parts and
   namespace URIs, changing the processing context of later pointer
   parts.  By definition, the xmlns() scheme "never identifies a
   subresource and thus always fails".  The content-type() scheme relies
   on a similar mechanism, but because of the XPointer framework's
   consumption of failures inside an XPointer expression, there is no
   way for content-type() generally to signal an error.

   A typical use for content-type would just signal to which
   representation a given XPointer is likely to apply:

   #content-type(application/xhtml+xml) element(framework/1/7)

   In this case, the XPointer may fail if fed the wrong representation,
   but at least a developer might have a chance of figuring out why the
   failure is taking place.

   In the event that an XPointer processor provides explicit support for
   the content-type() scheme, it should do its best to find a
   representation specified by each content-type() part, conceivably
   making multiple attempts to retrieve an acceptable representation.
   For example, if an XPointer using content-type() looked like:

   #content-type(application/xhtml+xml) element(/1/7) content-type(image/svg+xml) element(/1/4) content-type(application/mathml+xml) element(/1/3)

   then the processor should first attempt to retrieve an XHTML
   representation of the resource, then find the seventh child of the
   first element in the document.  If that didn't return a node, it
   would attempt to retrieve an SVG representation, then find the fourth
   child of the first element in the document.  If that didn't return a
   node, it would attempt to retrieve a MathML representation, and
   return the the third child of the first element in the document.

   This will not likely work in most XPointer processors, as the
   representation of the resource will likely have been set at some
   point earlier in the process without fragment identifier
   consultation, and the XPointer processor will likely grab the seventh
   child element of the first element in the document regardless of
   whether it was represented as XHTML, SVG, or MathML.  It does,
   however, raise the question of how XPointer and content-negotiation
   interact (or don't.)






St.Laurent               Expires April 28, 2003                 [Page 6]

Internet-Draft           content-type() scheme              October 2002


5. Relation to MIME Media Types

   This scheme is somewhat separate from association with any particular
   MIME type, but it could conceivably be used with any registration
   made in accordance with RFC 2046 [1] and RFC 2048 [2].














































St.Laurent               Expires April 28, 2003                 [Page 7]

Internet-Draft           content-type() scheme              October 2002


6. Other MIME issues

   There may be other aspects of MIME content-negotiation worth
   considering in this context.  Content-features, charset, and other
   parameters may in some circumstances affect XPointer processing.
   Consideration of those issues is left for other drafts.













































St.Laurent               Expires April 28, 2003                 [Page 8]

Internet-Draft           content-type() scheme              October 2002


7. Conformance

   This specification normatively depends on the XPointer Framework
   [12], except insofar as it rejects the claim in Section 3.3 that
   "this specification reserves all scheme names for definition in
   additional W3C XPointer scheme specifications".

   While XPointer processors may simply ignore content-type() pointer
   parts with only occasional damage, those explicitly claiming support
   for the content-type() scheme should support content-negotiation and
   attempt to supply the context requested by the content-type() pointer
   part or parts.







































St.Laurent               Expires April 28, 2003                 [Page 9]

Internet-Draft           content-type() scheme              October 2002


8. Security Considerations

   There may be security considerations involved in content-negotiation,
   but they are outside of the scope of this document.















































St.Laurent               Expires April 28, 2003                [Page 10]

Internet-Draft           content-type() scheme              October 2002


9. IANA Considerations

   None.
















































St.Laurent               Expires April 28, 2003                [Page 11]

Internet-Draft           content-type() scheme              October 2002


References

   [1]   Freed, N. and N. Borenstein, "Multipurpose Internet Mail
         Extensions (MIME) Part Two: Media Types", RFC 2046, November
         1996.

   [2]   Freed, N., Klensin, J. and J. Postel, "Multipurpose Internet
         Mail Extensions (MIME) Part Four: Registration Procedures", RFC
         2048, November 1996.

   [3]   Berners-Lee, T., Fielding, R. and L. Masinter, "Uniform
         Resource Identifiers (URI): Generic Syntax", RFC 2396, August
         1998.

   [4]   Rose, M., "Writing I-Ds and RFCs using XML", RFC 2629, June
         1999.

   [5]   Murata, M., St.Laurent, S. and D. Kohn, "XML Media Types", RFC
         3023, January 2001.

   [6]   Bray, T., Paoli, J. and C. Sperberg-McQueen, "Extensible Markup
         Language (XML) 1.0", World Wide Web Consortium Recommendation
         REC-xml, February 1998, <http://www.w3.org/TR/REC-xml>.

   [7]   DeRose, S. and J. Clark, "XML Path Language (XPath) Version
         1.0", World Wide Web Consortium Recommendation REC-xpath-
         19991116, November 1999, <http://www.w3.org/TR/1999/REC-xpath-
         19991116>.

   [8]   Berglund, A., Boag, S., Chamberlin, D., Fernandez, M., Kay, M.,
         Robie, J. and J. Simeon, "XML Path Language (XPath) 2.0", World
         Wide Web Consortium Working Draft WD-xpath20-20020816, November
         1999, <http://www.w3.org/TR/xpath20/>.

   [9]   Bray, T., Hollander, D. and A. Layman, "Namespaces in XML",
         World Wide Web Consortium Recommendation REC-xml-names, January
         1999, <http://www.w3.org/TR/REC-xml-names/>.

   [10]  DeRose, S., Maler, E. and D. Orchard, "XML Linking Language
         (XLink)", World Wide Web Consortium Recommendation XLink, June
         2001, <http://www.w3.org/TR/xlink/>.

   [11]  Marsh, J. and D. Orchard, "XML Inclusions (XInclude) Version
         1.0", World Wide Web Consortium Candidate Recommendation CR-
         xinclude-20020221/, September 2002, <http://www.w3.org/TR/
         xinclude/>.

   [12]  Grosso, P., Maler, E., Marsh, J. and N. Walsh, "XPointer



St.Laurent               Expires April 28, 2003                [Page 12]

Internet-Draft           content-type() scheme              October 2002


         Framework", World Wide Web Consortium Working Draft XPointer
         Framework, July 2002, <http://www.w3.org/TR/xptr-framework/>.

   [13]  DeRose, S., Daniel Jr., R. and E. Maler, "XPointer xmlns()
         Scheme", World Wide Web Consortium Working Draft XPointer
         xmlns() Scheme, July 2002, <http://www.w3.org/TR/xptr-xmlns/>.

   [14]  Grosso, P., Maler, E., Marsh, J. and N. Walsh, "XPointer
         element() Scheme", World Wide Web Consortium Working Draft
         XPointer element() Scheme, July 2002, <http://www.w3.org/TR/
         xptr-element/>.

   [15]  DeRose, S., Daniel Jr., R. and E. Maler, "XPointer xpointer()
         Scheme", World Wide Web Consortium Working Draft XPointer
         xpointer() Scheme, July 2002, <http://www.w3.org/TR/xptr-
         xpointer/>.

   [16]  St.Laurent, S., "The XPointer xpath1() Scheme", I-D draft-
         stlaurent-xpath-frag-00.txt, October 2002.

   [17]  St.Laurent, S., "The XPointer xinclude1() Scheme", I-D draft-
         stlaurent-xinclude-frag-00.txt, October 2002, <http://
         www.ietf.org/internet-drafts/draft-stlaurent-xinclude-frag-
         00.txt>.


Author's Address

   Simon St.Laurent
   O'Reilly & Associates
   1259 Dryden Road
   Ithaca, New York  14850
   USA

   EMail: simonstl@simonstl.com
   URI:   http://www.simonstl.com/















St.Laurent               Expires April 28, 2003                [Page 13]

Internet-Draft           content-type() scheme              October 2002


Appendix A. Acknowledgements

   Thanks to Uche Ogbuji and Eric van der Vlist for inspiration.
















































St.Laurent               Expires April 28, 2003                [Page 14]

Internet-Draft           content-type() scheme              October 2002


Appendix B. Revision History

   00 - First version.

   [To be deleted before publication.]














































St.Laurent               Expires April 28, 2003                [Page 15]

Internet-Draft           content-type() scheme              October 2002


Full Copyright Statement

   Copyright (C) The Internet Society (2002).  All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.



















St.Laurent               Expires April 28, 2003                [Page 16]


