deflist   =  1*( def / (*c-wsp c-nl) )

c-wsp     =  WSP / (c-nl WSP)

c-nl      =  comment / CRLF
                ; comment or newline

comment   =  comment1 / comment2

comment1  =  ( "//" / "#" ) *(WSP / VCHAR) CRLF
                ; single-line comments use // or #


comment2  =  "/*" *( ( %x20-29 / %x2B-7E ) /
                  *( ( %x20-2E / %x30-7E / UTFMB ) ) ) "*/"
                ; multi-line comments use /* ... */

def       =  typedef / struct1 / union1


typedef   =  %s"typedef" *c-wsp type *c-wsp name
                (*c-wsp "," *c-wsp name) ";"

name      =  ( ALPHA / "_" / "$" ) *( ALPHA / DIGIT / "_" / "$" )
                ; uses characters from [A-Za-z0-9_$] and first MUST NOT
                ; be a digit

type      =  type0 *(c-wsp "*")
                ; pointers can be used in the presentation language

type0     =  primitive / struct2 / union2 / name

primitive =  ( u-len / [u-len] %s"int" ) /
                ( ["unsigned"] (%s"char" / %s"wchar_t" / ( %s"__int"
                  ( "8" | "16" | "32" | "64" ) ) ) ) / %s"__m128" /
                %s"float" / ( [%s"long"] %s"double" ) /
                %s"void"
                ; 1. int is always 32 bits.
                ; 2. Microsoft convention: wchar_t is 16 bits.
                ; 3. float is 32 bits, double is 64 bits, long double is
                ; 80 bits. See sections 2.2.7, 2.2.8 and 2.2.9 for more
                ; details.
                ; 4. __m128 is 128 bits.

u-len     =  "unsigned" / ["unsigned"] length

length    =  %s"short" / 1*2( %s"long" )
                ; short 16 bits, long 32 bits, long long 64 bits

struct2   =  struct1 / ( %s"struct" *c-wsp struct *c-wsp ";" )

struct1   =  %s"struct" *c-wsp name *c-wsp struct *c-wsp ";"

struct    =  "{" *c-wsp *( type *c-wsp name
                ["[" number "]"]
                ";" / c-wsp ) "}"

union2    =  union1 / ( %s"union" *c-wsp union *c-wsp ";" )

union1    =  %s"union" *c-wsp name *c-wsp union *c-wsp ";"

union     =  "{" *c-wsp *( type *c-wsp name ";" / c-wsp ) "}"

AAAAAAAAAAAAAAAAAAAAAA==

