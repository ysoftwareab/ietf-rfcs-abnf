indexSequenceLength == 0);
subidVal = indexSequence[off];
indexSequenceLength == 0);
first = &indexSequence[off];

exact = 0;

last = &indexSequence[off+3];
last = &indexSequence[indexSequenceLength-1];
exact = 1;
tmp = 0;

tmp = 0;
exact = 1;
inBump = 1;

inBump = 0;
indexSequenceLength == 0);
maxStringLength = 128;
indexSequenceLength == 0);
maxStringLength = 128;
len = (int)indexSequence[off];

first = &indexSequence[off];

last = &indexSequence[off+len-1];
resetStart = NULL;
last = &indexSequence[indexSequenceLength-1];
resetStart = stringVal + (indexSequenceLength
resetStart = s;
inBump = 1;

inBump = 0;
exact = 0;

bump = nextprocSubid2Int(indexSequence,
   			   indexSequenceLength, 10,
   			   0, 0xffff, &remotePort,
   			   &curExact);

exact = 1;
bump = nextprocSubid2IpAddr(indexSequence,
   			      indexSequenceLength, 6,
   			      bump, &remoteAddr,
   			      &curExact);
exact = 1;
remotePort = 0;
bump = nextprocSubid2Int(indexSequence,
   			   indexSequenceLength, 4,
   			   bump, 0xffff,
   			   &localPort, &curExact);
exact = 1;
remotePort = 0;
remoteAddr = 0;
bump = nextprocSubid2IpAddr(indexSequence,
   			      indexSequenceLength, 0,
   			      bump, &localAddr,
   			      &curExact);
exact = 1;
remotePort = 0;
remoteAddr = 0;
localPort  = 0;
ret = NOTFOUND;

ret = retrieveTcpConnection(localAddr,
ret = retrieveNextTcpConnection(localAddr,
   				      localPort,
   				      remoteAddr,
   				      remotePort,
   				      e);
