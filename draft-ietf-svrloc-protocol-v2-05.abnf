string-list = string / string `,' string-list

attr-list = attribute / attribute `,' attr-list
attribute = `(' attr-tag `=' attr-val-list `)' / attr-tag
attr-val-list = attr-val / attr-val `,' attr-val-list
attr-tag = 1*safe-tag
attr-val = intval / strval / boolval / opaque
intval = [-]1*DIGIT
strval = 1*safe-val
boolval = "TRUE" / "FALSE"
opaque = "\FF" 1* ( `\' HEXDIGIT HEXDIGIT )
safe-val = ; Any character except reserved.
safe-tag = ; Any character except reserved, star and bad-tag.
reserved = `(' / `)' / `,' / `\' / `!'  / `<' / `=' / `>' / `~' / CTL
escape-val = `\' HEXDIG HEXDIG
bad-tag = CR / LF / HT / `_'
star =`*'

LANGUAGE_NOT_SUPPORTED = 1: There is data for the service type in
         the scope in the AttrRqst or SrvRqst, but not in the requested
         language.
PARSE_ERROR = 2: The message fails to obey SLP syntax.
INVALID_REGISTRATION = 3: The SrvReg has problems i.e., a 0 lifetime,
         an omitted language tag, etc.
SCOPE_NOT_SUPPORTED = 4: The SLP message did not include a scope in
         its scope list the SA or DA was configured to use.
AUTHENTICATION_ABSENT = 6: The DA expects URL and ATTR authentication
         in the SrvReg and did not receive it.
AUTHENTICATION_FAILED = 7: The DA determines the URL or ATTR
         signature in the SrvReg came out bad
VER_NOT_SUPPORTED = 9: Ver was set to an unsupported version number.
INTERNAL_ERROR = 10: The DA (or SA) is too sick to respond.
DA_BUSY_NOW = 11: UA or SA SHOULD retry, using exponential back off.
OPTION_NOT_UNDERSTOOD = 12: The DA (or SA) received an Option from
         the Mandatory range which is not understood.
INVALID_UPDATE = 13: The DA received a SrvReg without FRESH set, for
         an unregistered service.  See Section 9.5.
RQST_NOT_SUPPORTED = 14: The SA received an AttrRqst or SrvTypeRqst
         and does not support it.


BSD=0x0001 indicates that md5withRSAEncryption is selected as the
BSD=0x0002 is defined to be DSA with SHA-1.  The signature
BSD=0x0003 is defined to be HMAC [16] using keyed-MD5 [20].
tag-filter = simple-tag / substring
simple-tag = 1*filt-char
substring = [initial] any [final]
initial = 1*filt-char
any = `*' *(filt-char `*')
final = 1*filt-char
filt-char = Any character excluding <reserved> and <bad-tag> (see
         grammar in Section 5).

URL        = service:printer:lpr://igore.wco.ftp.com/draft
scope-list = Development
Attributes = (Name=Igore),(Description=For developers only),
                  (Protocol=LPR),(location-description=12th floor),
                  (Operator=James Dornan \3cdornan@monster\3e),
                  (media-size=na-letter),(resolution=res-600),x-OK

URL        = service:printer:lpr://igore.wco.ftp.com/draft
scope-list = Entwicklung
Attributes = (Name=Igore),(Beschreibung=Nur fuer Entwickler),
                  (Protocol=LPR),(Standort-beschreibung=13te Etage),
                  (Techniker=James Dornan \3cdornan@monster\3e),
                  (Format=na-letter),(Resolution=res-600),x-OK

URL        = service:printer:http://not.wco.ftp.com/cgi-bin/pub-prn
scope-list = Development
Attributes = (Name=Not),(Description=Experimental IPP printer),
                  (Protocol=http),(location-description=QA bench),
                  (media-size=na-letter),(resolution=other),x-BUSY

URL        = service:printer:lpr://igore.wco.ftp.com/draft
scope-list = Entwicklung
tag-list   = Resolution,St*

URL        = service:printer
scope-list = Development
tag-list   = x-*,resolution,protocols

