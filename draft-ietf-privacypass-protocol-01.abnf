commit_req = Prepare(info)

                              commit_req
                         ------------------->

commit_resp = Commit(skS, pkS, commit_req)

                             commit_resp
                         <-------------------

cInput = Generate(m, commit_resp)
req = cInput.req

                                 req
                         ------------------->

issueResp = Issue(pkS, skS, req)

tokens = Process(pkS, cInput, serverResp)
cInput = Generate(m, "")
token = store[server.id].pop()
req = Redeem(token, info)

                                  req
                           ------------------>

                                  if (dsIdx.includes(req.data)) {
                                    raise ERR_DOUBLE_SPEND
                                  }
resp = Verify(pkS, skS, req)
tokens = []
blindedTokens = []
x = random_bytes()
unblindedTokens = Unblind(input.data, resp.elements,
                                 input.req, pkS, resp.proof)
redemptionTokens = []
rt = RedemptionToken { data: input.data, issued: bt }
tag = Finalize(token.data, token.issued, info)
resp = VerifyFinalize(skS, req.data, req.info, req.tag)
