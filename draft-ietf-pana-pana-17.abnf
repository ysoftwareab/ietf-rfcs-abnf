PANA_AUTH_KEY = prf+(MSK, PaC_nonce|PAA_nonce|Session_ID|Key_ID)

message-def      = Message-Name "::=" PANA-message

message-name     = PANA-name

PANA-name        = ALPHA *(ALPHA / DIGIT / "-")

PANA-message     = header  [ *fixed] [ *required] [ *optional]
                      [ *fixed]

header           = "< PANA-Header: " Message-Type
                      [r-bit] [s-bit] [c-bit] [a-bit] [p-bit] ">"

Message-Type     = 1*DIGIT
                      ; The Message Type assigned to the message

r-bit            = ", REQ"
                      ; If present, the 'R' (Request) bit in the Message
                      ; Flags is set, indicating that the message
                      ; is a request, as opposed to an answer.

s-bit            = ", STA"
                      ; If present, the 'S' (Start) bit in the Message
                      ; Flags is set, indicating that the message
                      ; is the initial PAR or PAN in authentication
                      ; and authorization phase.

c-bit            = ", COM"
                      ; If present, the 'C' bit in the Message
                      ; Flags is set, indicating that the message
                      ; is the final PAR and PAN in authentication
                      ; and authorization phase or re-authentication
                      ; phase.

a-bit            = ", REA"
                      ; If present, the 'A' (re-Authentication) bit
                      ; in the Message Flags is set, indicating that
                      ; the message is a re-authentication request or
                      ; answer.

p-bit            = ", PIN"
                      ; If present, the 'P' (Ping) bit in the Message
                      ; Flags is set, indicating that the message
                      ; is a ping request or answer.

fixed            = [qual] "<" avp-spec ">"
                      ; Defines the fixed position of an AVP.

required         = [qual] "{" avp-spec "}"
                      ; The AVP MUST be present and can appear
                      ; anywhere in the message.

optional         = [qual] "[" avp-name "]"
                      ; The avp-name in the 'optional' rule cannot
                      ; evaluate to any AVP Name which is included
                      ; in a fixed or required rule.  The AVP can
                      ; appear anywhere in the message.

qual             = [min] "*" [max]
                      ; See ABNF conventions, RFC 4234 Section 3.6.
                      ; The absence of any qualifiers depends on whether
                      ; it precedes a fixed, required, or optional
                      ; rule.  If a fixed or required rule has no
                      ; qualifier, then exactly one such AVP MUST
                      ; be present.  If an optional rule has no
                      ; qualifier, then 0 or 1 such AVP may be
                      ; present.
                      ;
                      ; NOTE:  "[" and "]" have a different meaning
                      ; than in ABNF (see the optional rule, above).
                      ; These braces cannot be used to express
                      ; optional fixed rules (such as an optional
                      ; AUTH at the end).  To do this, the convention
                      ; is '0*1fixed'.

min              = 1*DIGIT
                      ; The minimum number of times the element may
                      ; be present.  The default value is zero.

max              = 1*DIGIT
                      ; The maximum number of times the element may
                      ; be present.  The default value is infinity.  A
                      ; value of zero implies the AVP MUST NOT be
                      ; present.

avp-spec         = PANA-name
                      ; The avp-spec has to be an AVP Name, defined
                      ; in the base or extended PANA protocol
                      ; specifications.

avp-name         = avp-spec / "AVP"
                      ; The string "AVP" stands for *any* arbitrary
                      ; AVP Name, which does not conflict with the
                      ; required or fixed position AVPs defined in
                      ; the message definition.

RT = IRT + RAND*IRT

RT = 2*RTprev + RAND*RTprev

RT = MRT + RAND*MRT

RT = REQ_IRT + RAND*REQ_IRT
