Fragment       = FragProtocolID FragProtocolData
FragProtocolID = <BeginEndFragmentsProtocolID> | (other protocols' ids)
FragProtocolData = BeginEndFragmentsData | (other protocols' data)
BeginEndFragmentsData = Flags FragSeqNo FragLength FragData
Flags          = B / E / BE / I
B              = <begin flag>
E              = <end flag>
BE             = <begin and end flag>
I              = <idle flag>
FragSeqNo      = 1*OCTETS
FragLength     = <Octets of fragment data>
FragData       = <Continuous octets (portion of Packet)>

   The fragmentation protocol is run between a sender and a "peer",
   which can be one or more, potentially passive, receivers.  They
   execute first an Initialization Protocol (Section 2.1), then use a
   Sender Protocol (Section 2.2) and Receiver Protocol (Section 2.3) to
   exchange frames.

   The initialization protocol uses a reliable messages exchange to
   reset the the FragSeqNo to 0 on both peers.  This ensures that when
   one or another peer restarts both peers will reset their state.

   The sender breaks a packet P (typically an Interest- or Content
   packet in the embedding wire encoding) into one or more fragments
   which are tagged with monotonically increasing sequence numbers.  The
   B, E and BE flags are used to signal the start of a fragment series
   (B), its end (E), or a single fragment (BE) for the given packet P.

   It is advisable that the 'B' fragment contains enough information in
   its Fragment Data to let the receiver know the total length of the
   packet to be reconstructed (and size of the reassembly buffer to be
   allocated) and the type of the expected packet.

   The receivers listen to the fragment stream and reconstruct from a
   valid fragment series the original packet, and reject fragments with
   invalid sequence numbers, flags, or validation data.

   The 'I' flag allows the sender to send idle frames that do not
   contain any Fragment Data, but do increment the fragment sequence
   number.  This is useful on lossy links to indicate that the sender is
   past the end of the previous packet in case the 'E' fragment was
   lost.  Moreover, as a possible extension of the protocol, this allows
   for periodic keepalives, measuring for example link quality when
   there is no other traffic to send.

