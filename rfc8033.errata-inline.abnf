p = alpha * (current_qdelay - QDELAY_REF) +
                beta * (current_qdelay - PIE->qdelay_old_);

p = p;
current_qdelay = queue_.byte_length()/dequeue_rate;

current_qdelay = queue_.byte_length() *
                       PIE->avg_dq_time_/DQ_THRESHOLD;

weight = DQ_THRESHOLD/2^16
weight = DQ_THRESHOLD/2^16
weight = DQ_THRESHOLD/2^16
p = 0.02;
alpha = 1/8, beta = 1 + 1/4) such that the multiplications can be
current_qdelay = packet.timestamp_delay();
p = alpha * (current_qdelay - QDELAY_REF) + \
              beta * (current_qdelay - PIE->qdelay_old_);

p = p;
current_qdelay = queue_.byte_length() *
p = alpha * (current_qdelay - QDELAY_REF) + \
              beta * (current_qdelay - PIE->qdelay_old_);

p = p;
p = 0.02;
dq_time = now - PIE->measurement_start_;
weight = DQ_THRESHOLD/2^16
