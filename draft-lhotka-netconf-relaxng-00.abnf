message-id="101">
base-capability-uri = "urn:ietf:params:netconf:base:1.0"

hello-element = element hello { hello-content }

hello-content =
     element capabilities {
       element capability { base-capability-uri }
       &amp; element capability { extra-capability-choice }*
     }

extra-capability-choice =
     "urn:ietf:params:netconf:capability:writable-running:1.0"
     | "urn:ietf:params:netconf:capability:candidate:1.0"
     | "urn:ietf:params:netconf:capability:confirmed-commit:1.0"
     | "urn:ietf:params:netconf:capability:rollback-on-error:1.0"
     | "urn:ietf:params:netconf:capability:validate:1.0"
     | "urn:ietf:params:netconf:capability:startup:1.0"
     | xsd:anyURI {
pattern =
           "urn:ietf:params:netconf:capability:url:1\.0" ~
           "[?]scheme=(http|ftp|file)"
message-id-attribute =
     attribute message-id {
       xsd:string { maxLength = "4095" }
     }

session-id-element = element session-id { xsd:positiveInteger }

arbitrary-content =
     (element * { arbitrary-content }
      | attribute * { text }
      | text)*

wrapped-arbitrary-content = element * { arbitrary-content }

start = hello-element | rpc-element

rpc-element =
    element rpc {
      message-id-attribute,
      attribute * { text }*,
      rpc-operation-choice
    }

rpc-operation-choice =
    element get-config { get-config-content }
    | element edit-config { edit-config-content }
    | element copy-config { copy-config-content }
    | element delete-config { delete-config-content }
    | element lock { lock-content }
    | element unlock { unlock-content }
    | element get { get-content }
    | element close-session { close-session-content }
    | element kill-session { kill-session-content }

get-config-content =
    element source { source-choice }
    &amp; element filter { filter-content-choice }?

running-element = element running { empty }

source-choice = running-element | extra-datastore-choice

extra-datastore-choice = empty

filter-content-choice =
    attribute type { "subtree" }?,
    subtree-filter-content

subtree-filter-content = wrapped-arbitrary-content

edit-config-content =
    element target { target-choice }
    &amp; element default-operation { default-operation-choice }?
    &amp; element error-option { error-option-choice }?
    &amp; config-data-spec

edit-config-operation-attribute =
    attribute operation { "merge" | "replace" | "create" | "delete" }
target-choice = extra-datastore-choice

default-operation-choice = "merge" | "replace" | "none"

error-option-choice = "stop-on-error" | "ignore-error"

config-data-spec = element config { wrapped-arbitrary-content }

copy-config-content =
    element source { source-choice }
    &amp; element target { target-choice }

delete-config-content = element target { extra-datastore-choice }

lock-content = element target { target-choice }

unlock-content = element target { target-choice }

get-content = element filter { filter-content-choice }?

close-session-content = empty

kill-session-content = session-id-element

start = hello-element | rpc-reply-element

rpc-reply-element =
     element rpc-reply {
       attribute * { text }*,
       ((# Positive response
         message-id-attribute,
         element rpc-reply { rpc-reply-choice })
        | (# error reply to a rpc without message-id is special
           missing-message-id-error
           | (# Negative response
              message-id-attribute,
              element rpc-error { rpc-error-choice }+)))
     }

missing-message-id-error =
     element rpc-error {
       element error-tag { "missing-attribute" }
       &amp; element error-type { "rpc" }
       &amp; element error-severity { "error" }
       &amp; element error-info {
           element bad-attribute { "message-id" }
           &amp; element bad-element { "rpc" }
         }
       &amp; optional-error-content
     }

rpc-reply-choice = ok-element | data-element
ok-element = element ok { empty }

data-element = element data { wrapped-arbitrary-content }

rpc-error-choice =
     in-use-error-content
     | too-big-error-content
     | missing-attribute-error-content
     | bad-attribute-error-content
     | bad-attribute-error-content
     | unknown-attribute-error-content
     | missing-element-error-content
     | bad-element-error-content
     | unknown-element-error-content
     | unknown-namespace-error-content
     | access-denied-error-content
     | lock-denied-error-content
     | resource-denied-error-content
     | rollback-failed-error-content
     | data-exists-error-content
     | data-missing-error-content
     | operation-not-supported-error-content
     | operation-failed-error-content
     | partial-operation-error-content
error-types-pa = "protocol" | "application"
error-types-rpa = error-types-pa | "rpc"
error-types-all = error-types-rpa | "transport"
optional-error-content =
     element error-app-tag { xsd:string }?
     &amp; element error-path { xsd:string }?
     &amp; element error-message {
         attribute xml:lang { xsd:token }?,
         xsd:string
       }?
element-error-info = element bad-element { xsd:QName }
attribute-error-info =
     element bad-attribute { xsd:QName }
     &amp; element-error-info

in-use-error-content =
     element error-tag { "in-use" }
     &amp; element error-type { error-types-pa }
     &amp; element error-severity { "error" }
     &amp; optional-error-content
too-big-error-content =
     element error-tag { "too-big" }
     &amp; element error-type { error-types-all }
     &amp; element error-severity { "error" }
     &amp; optional-error-content

missing-attribute-error-content =
     element error-tag { "missing-attribute" }
     &amp; element error-type { error-types-rpa }
     &amp; element error-severity { "error" }
     &amp; element error-info { attribute-error-info }
     &amp; optional-error-content

bad-attribute-error-content =
     element error-tag { "bad-attribute" }
     &amp; element error-type { error-types-rpa }
     &amp; element error-severity { "error" }
     &amp; element error-info { attribute-error-info }
     &amp; optional-error-content

unknown-attribute-error-content =
     element error-tag { "unknown-attribute" }
     &amp; element error-type { error-types-rpa }
     &amp; element error-severity { "error" }
     &amp; element error-info { attribute-error-info }
     &amp; optional-error-content

missing-element-error-content =
     element error-tag { "missing-element" }
     &amp; element error-type { error-types-rpa }
     &amp; element error-severity { "error" }
     &amp; element error-info { element-error-info }
     &amp; optional-error-content

bad-element-error-content =
     element error-tag { "bad-element" }
     &amp; element error-type { error-types-rpa }
     &amp; element error-severity { "error" }
     &amp; element error-info { element-error-info }
     &amp; optional-error-content

unknown-element-error-content =
     element error-tag { "unknown-element" }
     &amp; element error-type { error-types-rpa }
     &amp; element error-severity { "error" }
     &amp; element error-info { element-error-info }
     &amp; optional-error-content

unknown-namespace-error-content =
     element error-tag { "unknown-element" }
     &amp; element error-type { error-types-rpa }
     &amp; element error-severity { "error" }
     &amp; element error-info {
         element-error-info
         &amp; element bad-namespace { xsd:Name }
       }
     &amp; optional-error-content

access-denied-error-content =
     element error-tag { "access-denied" }
     &amp; element error-type { error-types-rpa }
     &amp; element error-severity { "error" }
     &amp; optional-error-content

lock-denied-error-content =
     element error-tag { "lock-denied" }
     &amp; element error-type { "protocol" }
     &amp; element error-severity { "error" }
     &amp; element error-info {
         element session-id { xsd:nonNegativeInteger }
       }
     &amp; optional-error-content

resource-denied-error-content =
     element error-tag { "resource-denied" }
     &amp; element error-type { error-types-all }
     &amp; element error-severity { "error" }
     &amp; optional-error-content

rollback-failed-error-content =
     element error-tag { "rollback-failed" }
     &amp; element error-type { error-types-pa }
     &amp; element error-severity { "error" }
     &amp; optional-error-content

data-exists-error-content =
     element error-tag { "data-exists" }
     &amp; element error-type { "application" }
     &amp; element error-severity { "error" }
     &amp; optional-error-content

data-missing-error-content =
     element error-tag { "data-missing" }
     &amp; element error-type { "application" }
     &amp; element error-severity { "error" }
     &amp; optional-error-content

operation-not-supported-error-content =
     element error-tag { "operation-not-supported" }
     &amp; element error-type { error-types-rpa }
     &amp; element error-severity { "error" }
     &amp; optional-error-content

operation-failed-error-content =
     element error-tag { "operation-failed" }
     &amp; element error-type { error-types-rpa }
     &amp; element error-severity { "error" }
     &amp; optional-error-content

partial-operation-error-content =
     element error-tag { "partial-operation" }
     &amp; element error-type { "application" }
     &amp; element error-severity { "error" }
     &amp; element error-info {
         element ok-element { xsd:QName }*
         &amp; element err-element { xsd:QName }*
         &amp; element noop-element { xsd:QName }*
       }
     &amp; optional-error-content

commit-content = empty

discard-changes-content = empty

validate-content = element source { source-choice | config-data-spec }

