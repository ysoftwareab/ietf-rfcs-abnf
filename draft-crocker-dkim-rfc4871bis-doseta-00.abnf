i=   The Agent or User Identifier (AUID) on behalf of which the
         SDID is taking responsibility (DOSETA-quoted-printable;
         OPTIONAL, default is an empty <local-part> followed by an "@"
         followed by the domain from the "d=" tag).

         The syntax is a standard email address where the <local-part>
         MAY be omitted.  The domain part of the address MUST be the
         same as, or a subdomain of, the value of the "d=" tag.

         Internationalized domain names MUST be converted using the
         steps listed in Section 4 of [RFC5890] using the "ToASCII"
         function.













            ABNF:
sig-i-tag       = %x69 [FWS] "=" [FWS]
                     [ local-part ] "@" domain-name

         The AUID is specified as having the same syntax as an email
         address, but is not required to have the same semantics.
         Notably, the domain name is not required to be registered in
         the DNS -- so it might not resolve in a query -- and the
         <local-part> MAY be drawn from a namespace unrelated to any
         mailbox.  The details of the structure and semantics for the
         namespace are determined by the Signer.  Any knowledge or use
         of those details by verifiers or assessors is outside the scope
         of the DOSETA Signing specification.  The Signer MAY choose to
         use the same namespace for its AUIDs as its users' email
         addresses or MAY choose other means of representing its users.
         However, the signer SHOULD use the same AUID for each message
         intended to be evaluated as being within the same sphere of
         responsibility, if it wishes to offer receivers the option of
         using the AUID as a stable identifier that is finer grained
         than the SDID.

         NOTE:   The <local-part> of the "i=" tag is optional because in
            some cases a signer might not be able to establish a
            verified individual identity.  In such cases, the signer
            might wish to assert that although it is willing to go as
            far as signing for the domain, it is unable or unwilling to
            commit to an individual user name within their domain.  It
            can do so by including the domain part but not the <local-
            part> of the identity.

         NOTE:   Absent public standards for the semantics of an AUID,
            an assessment based on AUID requires a non-standardized
            basis.

         NOTE:   This specification does not require the value of the
            "i=" tag to match the identity in any Header field.  This is
            considered to be an assessment-time policy issue.
            Constraints between the value of the "i=" tag and other
            identities in other Header fields might seek to apply basic
            authentication into the semantics of trust associated with a
            role such as content author.  Trust is a broad and complex
            topic and trust mechanisms are subject to highly creative
            attacks.  The real-world efficacy of any but the most basic
            bindings between the "i=" value and other identities is not





            well established, nor is its vulnerability to subversion by
            an attacker.  Hence reliance on the use of these options
            needs to be strictly limited.  In particular, it is not at
            all clear to what extent a typical end-user recipient can
            rely on any assurances that might be made by successful use
            of the "i=" options.

l=    Content length count (plain-text unsigned decimal integer;
         OPTIONAL, default is entire Content).  This tag informs the
         verifier of the number of octets in the Content of the data
         after canonicalization included in the cryptographic hash,
         starting from 0 immediately following the CRLF preceding the
         Content.  This value MUST NOT be larger than the actual number
         of octets in the canonicalized Content.



            ABNF:
sig-l-tag    = %x6c [FWS] "=" [FWS]
                  1*76DIGIT

         NOTE:   Use of the "l=" tag might allow display of fraudulent
            content without appropriate warning to end users.  The "l="
            tag is intended for increasing signature robustness when
            sending to intermediaries that append data to Content, such
            as mailing lists that both modify their content and do not
            sign their messages.  However, using the "l=" tag enables
            attacks in which an intermediary with malicious intent
            modifies a message to include content that solely benefits
            the attacker.  It is possible for the appended content to
            completely replace the original content in the end
            recipient's eyes and to defeat duplicate message detection
            algorithms.  Examples are described in Security
            Considerations Section 4.1.  To avoid this attack, signers
            need be extremely wary of using this tag, and verifiers
            might wish to ignore the tag or remove text that appears
            after the specified content length.

         NOTE:   The value of the "l=" tag is constrained to 76 decimal
            digits.  This constraint is not intended to predict the size
            of future data or to require implementations to use an
            integer representation large enough to represent the maximum
            possible value, but is intended to remind the implementer to
            check the length of this and all other tags during
            verification and to test for integer overflow when decoding
            the value.  Implementers might need to limit the actual
            value expressed to a value smaller than 10^76, for example,
            to allow a message to fit within the available storage





            space.

z=    Copied Header fields (DOSETA-quoted-printable, but see
         description; OPTIONAL, default is null).  A vertical-bar-
         separated list of selected Header fields present when the
         message was signed, including both the field name and value.
         It is not required to include all Header fields present at the
         time of signing.  This field need not contain the same Header
         fields listed in the "h=" tag.  The Header field text itself
         MUST encode the vertical bar ("|", %x7C) character.  That is,
         vertical bars in the "z=" text are meta-characters, and any
         actual vertical bar characters in a copied header field MUST be
         encoded.  Note that all whitespace MUST be encoded, including
         whitespace between the colon and the header field value.  After
         encoding, FWS MAY be added at arbitrary locations in order to
         avoid excessively long lines; such whitespace is NOT part of
         the value of the header field, and MUST be removed before
         decoding.

         The Header fields referenced by the "h=" tag refer to the
         fields in the [RFC5322] Header, not to any copied fields in the
         "z=" tag.  Copied header field values are for diagnostic use.

         Header fields with characters requiring conversion (perhaps
         from legacy MTAs that are not [RFC5322] compliant) SHOULD be
         converted as described in MIME Part Three [RFC2047].





            ABNF:

sig-z-tag      = %x7A [FWS] "=" [FWS]
                    sig-z-tag-copy
                    *( "|" [FWS] sig-z-tag-copy )
sig-z-tag-copy = hdr-name [FWS] ":"
                    qp-hdr-value















s=brisbane;   c=simple; q=dns/txt; i=@eng.example.net;
t=1117574938; x=1118006938;
h=from:to:subject:date;
z=From:foo@eng.example.net|To:joe@example.com|
      Subject:demo=20run|
      Date:July=205,=202005=203:44:08=20PM=20-0700;
bh=MTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTI=;
b=dzdVyOfAKCdLXdJOc9G2q8LoXSlEniSbav+yuU4zGeeruD00lszZVoG4ZHRNiYzR

g=    Granularity of the key (plain-text; OPTIONAL, default is
         "*").  This value MUST match the Local-part of the "i=" tag of
         the DKIM- Signature header field (or its default value of the
         empty string if "i=" is not specified), with a single, optional
         "*" character matching a sequence of zero or more arbitrary
         characters ("wildcarding").  An email with a signing address
         that does not match the value of this tag constitutes a failed
         verification.  The intent of this tag is to constrain which
         signing address can legitimately use this selector, for
         example, when delegating a key to a third party that should
         only be used for special purposes.  Wildcarding allows matching
         for addresses such as "user+*" or "*-offer".  An empty "g="
         value never matches any addresses.



            ABNF:
key-g-tag       = %x67 [FWS] "=" [FWS] key-g-tag-lpart
key-g-tag-lpart = [dot-atom-text]
                                          ["*" [dot-atom-text] ]

h=    Acceptable hash algorithms (plain-text; OPTIONAL, defaults
         to allowing all algorithms).  A colon-separated list of hash
         algorithms that might be used.  Signers and Verifiers MUST
         support the "sha256" hash algorithm.  Verifiers MUST also
         support the "sha1" hash algorithm.  Unrecognized hash





         algorithms MUST be ignored.





            ABNF:

key-h-tag       = %x68 [FWS] "=" [FWS]
                     key-h-tag-alg
                     0*( [FWS] ":" [FWS]
                     key-h-tag-alg )
key-h-tag-alg   = "sha1" / "sha256" /
                     x-key-h-tag-alg
x-key-h-tag-alg = hyphenated-word
                          ; for future extension

s=    Service Type (plain-text; OPTIONAL; default is "*").  A
         colon-separated list of service types to which this record
         applies.  Verifiers for a given service type MUST ignore this
         record if the appropriate type is not listed.  Unrecognized
         service types MUST be ignored.  Currently defined service types
         are as follows:



         *  matches all service types

         email   electronic mail (not necessarily limited to SMTP)

         This tag is intended to constrain the use of keys for other
         purposes, if use of DOSETA is defined by other services in the
         future.





            ABNF:

key-s-tag        = %x73 [FWS] "=" [FWS]
                      key-s-tag-type
                      0*( [FWS] ":" [FWS]
                      key-s-tag-type )
key-s-tag-type   = "email" / "*" /
                      x-key-s-tag-type
x-key-s-tag-type = hyphenated-word
                           ; for future extension





t=    Flags, represented as a colon-separated list of names
         (plain-text; OPTIONAL, default is no flags set).  Unrecognized
         flags MUST be ignored.  The defined flags are as follows:

         y    This domain is testing DOSETA.  Verifiers MUST NOT treat
            data from signers in testing mode differently from unsigned
            data, even if the signature fails to verify.  Verifiers MAY
            wish to track testing mode results to assist the signer.

         s    Any DOSETA-Signature Header fields using the "i=" tag MUST
            have the same domain value on the right-hand side of the "@"
            in the "i=" tag and the value of the "d=" tag.  That is, the
            "i=" domain MUST NOT be a subdomain of "d=".  Use of this
            flag is RECOMMENDED unless subdomaining is required.





            ABNF:
key-t-tag        = %x74 [FWS] "=" [FWS]
                      key-t-tag-flag
                      0*( [FWS] ":" [FWS]
                      key-t-tag-flag )
key-t-tag-flag   = "y" / "s" /
                      x-key-t-tag-flag
x-key-t-tag-flag = hyphenated-word
                           ; for future extension


width=578 height=370> </div>

c=simple/simple; q=dns/txt; i=joe@football.example.com;
h=Received : From : To : Subject : Date : Message-ID;
bh=2jUSOH9NhtVGCQWNr9BrIAPreKQjO6Sn7XIkfJVOzv8=;
b=AuUoFEfDxTDkHlLXSZEpZj79LICEps6eda7W3deTVFOk4yAUoqOB
c=simple/simple; q=dns/txt; i=joe@football.example.com;
h=Received : From : To : Subject : Date : Message-ID;
bh=2jUSOH9NhtVGCQWNr9BrIAPreKQjO6Sn7XIkfJVOzv8=;
b=AuUoFEfDxTDkHlLXSZEpZj79LICEps6eda7W3deTVFOk4yAUoqOB
       4nujc7YopdG5dWLSdNg6xNAZpOPr+kHxt1IrE+NahM6L/LbvaHut
       KVdkLLkpVaVVQPzeRDI009SO2Il5Lu7rDNH6mZckBdrIx0orEtZV
       4bmp/YzhwvcubU4=;
