value = (byte[0] << 8*(n-1)) | (byte[1] << 8*(n-2)) |
               ... | byte[n-1];

L_S = length in bytes of secret;
L_S1 = L_S2 = ceil(L_S / 2);

key_block = PRF(SecurityParameters.master_secret,
                          "key expansion",
                          SecurityParameters.server_random +
                          SecurityParameters.client_random);

final_client_write_key =
final_server_write_key =
iv_block = PRF("", "IV block", SecurityParameters.client_random
key_block               = PRF(master_secret,
                                     "key expansion",
                                     server_random +
                                     client_random)[0..41]
client_write_MAC_secret = key_block[0..15]
server_write_MAC_secret = key_block[16..31]
client_write_key        = key_block[32..36]
server_write_key        = key_block[37..41]
final_client_write_key  = PRF(client_write_key,
                                     "client write key",
                                     client_random +
                                     server_random)[0..15]
final_server_write_key  = PRF(server_write_key,
                                     "server write key",
                                     client_random +
                                     server_random)[0..15]
iv_block                = PRF("", "IV block", client_random +
                                     server_random)[0..15]
client_write_IV = iv_block[0..7]
server_write_IV = iv_block[8..15]

master_secret = PRF(pre_master_secret, "master secret",
                           ClientHello.random + ServerHello.random)
RSA = none
RSA = none
