

Network Working Group                                          T. Iijima
Internet-Draft                                                K. Toumura
Intended status: Informational                                  H. Okita
Expires: April 19, 2007                     Central Research Laboratory,
                                                           Hitachi, Ltd.
                                                             Y. Atarashi
                                                               H. Kimura
                                                    Alaxala Networks Co.
                                                        October 16, 2006


             Experience of NETCONF over SOAP Implementation
              draft-iijima-netconf-soap-implementation-00

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on April 19, 2007.

Copyright Notice

   Copyright (C) The Internet Society (2006).









Iijima, et al.           Expires April 19, 2007                 [Page 1]

Internet-Draft             SOAP implementation              October 2006


Abstract

   NETCONF protocol is standardized to be exchanged over SSH, SOAP, or
   BEEP.  We actually developed network management system based on
   NETCONF protocol.  For several reasons, we chose SOAP protocol as a
   transport protocol of the NETCONF.  This document describes why we
   chose SOAP as a transport protocol and the insight gained from actual
   development.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1.  NETCONF over SOAP  . . . . . . . . . . . . . . . . . . . .  3
     1.2.  Conventions  . . . . . . . . . . . . . . . . . . . . . . .  3
     1.3.  Motivation . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Framework of Web service . . . . . . . . . . . . . . . . . . .  4
     2.1.  SOAP as a Messaging technology . . . . . . . . . . . . . .  4
     2.2.  WSDL as a Interface Description Language . . . . . . . . .  5
   3.  The insight from our Implementation  . . . . . . . . . . . . .  6
     3.1.  SOAP implementation of the NMS . . . . . . . . . . . . . .  6
     3.2.  SOAP implementation of the Network Equipment . . . . . . .  7
       3.2.1.  SOAP Header  . . . . . . . . . . . . . . . . . . . . .  7
       3.2.2.  SOAP Fault . . . . . . . . . . . . . . . . . . . . . .  7
   4.  Security Consideration . . . . . . . . . . . . . . . . . . . .  8
   5.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . .  9
   6.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 10
     6.1.  Normative References . . . . . . . . . . . . . . . . . . . 10
     6.2.  Informative References . . . . . . . . . . . . . . . . . . 10
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 11
   Intellectual Property and Copyright Statements . . . . . . . . . . 13




















Iijima, et al.           Expires April 19, 2007                 [Page 2]

Internet-Draft             SOAP implementation              October 2006


1.  Introduction

1.1.  NETCONF over SOAP

   In order to enable network equipment configuration automatically from
   network systems, NETCONF is designed to use XML as its description
   language since XML is easy to understand for systems.  XML is
   suitable technology to cope with flexible specification change and it
   can make automatic operation possible.

   SOAP is also designed to use XML and expected to become indespensable
   technology of Web service.  For this reason, SOAP is a prospective
   technology and suit well with NETCONF protocol.

1.2.  Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC2119 [3].

1.3.  Motivation

   This document describes why SOAP is practical as a transport protocol
   of the NETCONF when we develop network management system.  And also
   this document describes the experience of NETCONF over SOAP
   implementation.

























Iijima, et al.           Expires April 19, 2007                 [Page 3]

Internet-Draft             SOAP implementation              October 2006


2.  Framework of Web service

   SOAP is placed as an indespensable technology of Web service.  So if
   we use SOAP as a transport protocol of the NETCONF, network
   configuration made by NETCONF is achieved on a framework of Web
   service.  In this section, we describe the overall architecture of
   the Web service.


+---+ +-----------+ +----------------+ +--------------+ +--------+
|   | | Security  | |Reliable Message| | Transaction  | | Search |
|XML| |           | |                | |              | |        |
|   | |WS-Security| | WS-Reliability | |WS-Transaction| |  UDDI  |
|   | |           | |                | |              | +--------+
|   | |           | |                | |              | +--------+ +---------+
|   | |           | |                | |              | |language| |   API   |
|   | |           | |                | |              | |        | |         |
|   | |           | |                | |              | |  WSDL  | |  JAXM   |
|   | +-----------+ +----------------+ +--------------+ +--------+ | JAX-RPC |
|   | +----------------------------------------------------------+ |  .NET   |
|   | |                    Fundamental Messaging                 | |         |
|   | |                                                          | |         |
|   | |                        SOAP                              | |         |
+---+ +----------------------------------------------------------+ +---------+
      +----------------------------------------------------------+
      |                      Transport                           |
      |                                                          |
      |                     HTTP, HTTPS...                       |
      +----------------------------------------------------------+


               Figure 1: Overall architecture of Web service

   As depicted in figure 1, peripheral technologies around SOAP/HTTP is
   well developed, including security technology.  For instance, WS-
   Security and WS-Transaction technology are installed on SOAP only by
   inserting particular messages in SOAP Header.  If we don't choose
   SOAP/HTTP as a transport layer of the NETCONF protocol, we have to
   develop each surrounding technology from scratch.  Hence, in the case
   of introducing additional technologies around SOAP, the development
   of NETCONF-based network management system is relatively easy when we
   choose SOAP as a transport protocol of the NETCONF.

2.1.  SOAP as a Messaging technology

   SOAP is basically designed to use distributed object scattered around
   the internet regardless of platform.  Therefore, SOAP is developed as
   a messaging technology which uses standardized internet technology



Iijima, et al.           Expires April 19, 2007                 [Page 4]

Internet-Draft             SOAP implementation              October 2006


   such as HTTP and XML.

   In addition, SOAP is so flexible that it's easy to incorporate other
   technologies.  For instance, the notion of session can be easily
   incorporated in SOAP by inserting message ID into SOAP Header.

2.2.  WSDL as a Interface Description Language

   WSDL is designed so as to bind easily with SOAP.  WSDL is an
   innovative technology for Web service since the development tool
   automatically generate interfaces toward Web service by just
   importing WSDL into the development tool.  Things left to developers
   is just to customize the programs by putting generated interfaces
   together.

   As for the development tool which understands WSDL, useful
   technologies are available in the case of SOAP.  For instance, Apache
   Axis is an interface generator from WSDL as well as widely used SOAP
   implementation.  If we choose SOAP as a transport protocol, we don't
   need to develop interfaces by ourselves owing to the development tool































Iijima, et al.           Expires April 19, 2007                 [Page 5]

Internet-Draft             SOAP implementation              October 2006


3.  The insight from our Implementation

   In this section, we describe the architecure of NETCONF
   implementation using SOAP as its transport protocol.  Figure 2 is the
   architecture of the NETCONF implementation using SOAP.  In the
   following section, we explain the SOAP implementation in both network
   management system and network equipment



         +-------------------------------------------------------+
         |                Network Management System              |
         |                                                       |
         |     +--------------------------------------------+    |
         |     |             NETCONF application            |    |
         |     +--------------------------------------------+    |
         |     +--------------------------------------------+    |
         |     |                Java library                |    |
         |     +--------------------------------------------+    |
         |     +--------------------------------------------+    |
         |     |              SOAP Implementation           |    |
         |     |                                            |    |
         |     |                Apache Axis                 |    |
         |     +--------------------------------------------+    |
         +---------------------|----------^----------------------+
                               |          |
                   rpc-request |          |
                    / SOAP     |          | rpc-reply
                               |          |  / SOAP
                               |          |
         +---------------------v----------|----------------------+
         |     +--------------------------------------------+    |
         |     |             SOAP Implementation            |    |
         |     +--------------------------------------------+    |
         |                                                       |
         |                    Network Equipment                  |
         +-------------------------------------------------------+


        Figure 2: Architecture of NETCONF implementation using SOAP

3.1.  SOAP implementation of the NMS

   Several SOAP implementations capable of being installed on NMS are
   available today.  For instance, Apache Axis is a practical free
   software implementation of SOAP implementation when we choose SOAP as
   a transport protocol.  Rapid parsing in the NMS is realized since
   Axis uses SAX as its parser.



Iijima, et al.           Expires April 19, 2007                 [Page 6]

Internet-Draft             SOAP implementation              October 2006


   And also, Axis is not only the SOAP implementation but useful tools
   to develop network management system.  For instance, Java2WSDL, one
   of the Axis's tool, can generates WSDL from Java's class file.  After
   we develop Java library which can configure network equipment, the
   interface toward network equipment can be opened to the public in a
   form of WSDL.  The another tool called WSDL2Java does the opposite.
   We can generate Java library from WSDL file provided from other
   vendor.  Conclusively, various kinds of benefits can be acquired if
   we introduce Axis as a SOAP implementation.

3.2.  SOAP implementation of the Network Equipment

   SOAP must be implemented also in the network equipmet so as to accept
   SOAP messages sent from network management system.  Like the NMS,
   some free SOAP implementations are availlable.  However, in the case
   of network equipment, memory capacity might be limited.  Therefore
   memory saving method might be required when we implement SOAP in the
   network equipment.

3.2.1.  SOAP Header

   SOAP Header is defined as optional.  Therefore, when memory capacity
   in network equipment is not sufficient, the module which process SOAP
   Header can be omitted.

3.2.2.  SOAP Fault

   SOAP Fault is designed to return errors to clients when malfunction
   occurred in servers.  However, SAOP Fault is also optional and error
   messages can be written in SOAP body as well.  So when there's memory
   constraint, implementation of SOAP Fault processor is not always
   necessary, either.  After all, SOAP engine in network equipment is
   allowed to have only SOAP body parser.


















Iijima, et al.           Expires April 19, 2007                 [Page 7]

Internet-Draft             SOAP implementation              October 2006


4.  Security Consideration

   Security should be considered from 2 angles.  One is transport-level
   security, and the other is message-level security.  Transport-level
   security such as encryption of entire message is the matter of SSL/
   TLS.  However, the message-level security such as partial encryption
   of message or signature should be realized by other technologies.  To
   fulfill that need, WS-security has been defined.

   WS-Security is one of the Web service technolgoy and is dependent on
   SOAP technology.  WS-Security technology can be incorporated by
   inserting XML encryption and XML signature into the SOAP header.

   Also, WS-Reliability realizes confirmation of sent message and
   resending.  WS-Reliability is also achieved by inserting particular
   messages into SOAP header.



































Iijima, et al.           Expires April 19, 2007                 [Page 8]

Internet-Draft             SOAP implementation              October 2006


5.  IANA Considerations

   This document has no actions for IANA.
















































Iijima, et al.           Expires April 19, 2007                 [Page 9]

Internet-Draft             SOAP implementation              October 2006


6.  References

6.1.  Normative References

   [1]  Enns, R., "NETCONF Configuration Protocol",
        draft-ietf-netconf-prot-12 (work in progress), March 2006.

   [2]  Goddard, T., "Using the Network Configuration Protocol (NETCONF)
        Over the Simple Object  Access Protocol (SOAP)",
        draft-ietf-netconf-soap-08 (work in progress), March 2006.

 6.2.   Informative References

   [3]   Bradner, S. , "Key words for use in RFCs to Indicate
        Requirement Levels" , BCP 14 , RFC 2119 , March 1997 .

   [4]   Paoli, J. , Bray, T. , and C. Sperberg-McQueen , "XML 1.0
        Recommendation" , World Wide Web Consortium FirstEdition REC-
        xml-19980210 , February 1998 ,
        <http://www.w3.org/TR/1998/REC-xml-19980210> .

   [5]   "Web Services - Axis" .

        <http://ws.apache.org/axis/>

   [6]  "Web Service Description Language (WSDL) 1.1".

        <http://www.w3.org/TR/wsdl/>























Iijima, et al.           Expires April 19, 2007                [Page 10]

Internet-Draft             SOAP implementation              October 2006


Authors' Addresses

   Iijima Tomoyuki
   Central Research Laboratory, Hitachi, Ltd.
   1-280 Higashi-Koigakubo
   Kokubunji, Tokyo  185-8601
   Japan

   Phone: +81-42-323-1111
   Fax:   +81-42-327-7868
   Email: tomoyuki.iijima.fg@hitachi.com


   Toumura Kunihiko
   Central Research Laboratory, Hitachi, Ltd.
   1-280 Higashi-Koigakubo
   Kokubunji, Tokyo  185-8601
   Japan

   Phone: +81-42-323-1111
   Fax:   +81-42-327-7868
   Email: kunihiko.toumura.yv@hitachi.com


   Hideki Okita
   Central Research Laboratory, Hitachi, Ltd.
   1-280 Higashi-Koigakubo
   Kokubunji, Tokyo  185-8601
   Japan

   Phone: +81-42-323-1111
   Fax:   +81-42-327-7868
   Email: hideki.okita.pf@hitachi.com


   Yoshifumi Atarashi
   Alaxala Networks Co.
   Shin-Kawasaki Mitsui Bldg.
   890 Saiwai-ku Kashimada
   Kawasaki, Kanagawa  212-0058
   Japan

   Phone: +81-44-549-1200
   Fax:   +81-44-549-1272
   Email: atarashi@alaxala.net






Iijima, et al.           Expires April 19, 2007                [Page 11]

Internet-Draft             SOAP implementation              October 2006


   Hiroyasu Kimura
   Alaxala Networks Co.
   Shin-Kawasaki Mitsui Bldg.
   890 Saiwai-ku Kashimada
   Kawasaki, Kanagawa  212-0058
   Japan

   Phone: +81-44-549-1200
   Fax:   +81-44-549-1272
   Email: h-kimura@alaxala.net









































Iijima, et al.           Expires April 19, 2007                [Page 12]

Internet-Draft             SOAP implementation              October 2006


Full Copyright Statement

   Copyright (C) The Internet Society (2006).

   This document is subject to the rights, licenses and restrictions
   contained in BCP 78, and except as set forth therein, the authors
   retain all their rights.

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Acknowledgment

   Funding for the RFC Editor function is provided by the IETF
   Administrative Support Activity (IASA).





Iijima, et al.           Expires April 19, 2007                [Page 13]


