ead = 1* (
     type : int,
     ext_authz_data : any,
PRK = Extract( salt, IKM )

G_XY = X25519( Y, G_X ) = X25519( X, G_Y )

PRK_2e = HMAC-SHA-256( salt, G_XY )

PRK_3e2m = Extract( PRK_2e, G_RX ), where G_RX is the ECDH shared
PRK_4x3m = Extract( PRK_3e2m, G_IY ), where G_IY is the ECDH shared
OKM = EDHOC-KDF( PRK, transcript_hash, label, context, length )
          = Expand( PRK, info, length )

info = [
      edhoc_aead_id : int / tstr,
      transcript_hash : bstr,
      label : tstr,
      * context : any,
      length : uint,
TH_4 = H( TH_3, CIPHERTEXT_3 )

PRK_4x3m = Extract( nonce, PRK_4x3m )

message_1 = (
     METHOD : int,
     SUITES_I : [ selected : suite, supported : 2* suite ] / suite,
     G_X : bstr,
     C_I : bstr / int,
     ? EAD_1 : ead,
suite = int

message_2 = (
     G_Y_CIPHERTEXT_2 : bstr,
     C_R : bstr / int,
message_3 = (
     CIPHERTEXT_3 : bstr,
message_4 = (
     CIPHERTEXT_4 : bstr,
error = (
     ERR_CODE : int,
     ERR_INFO : any,
suite = int

ead = 1* (
     type : int,
     ext_authz_data : any,
message_1 = (
     METHOD : int,
     SUITES_I : [ selected : suite, supported : 2* suite ] / suite,
     G_X : bstr,
     C_I : bstr / int,
     ? EAD_1 : ead,
message_2 = (
     G_Y_CIPHERTEXT_2 : bstr,
     C_R : bstr / int,
message_3 = (
     CIPHERTEXT_3 : bstr,
message_4 = (
     CIPHERTEXT_4 : bstr,
error = (
     ERR_CODE : int,
     ERR_INFO : any,
info = [
      edhoc_aead_id : int / tstr,
      transcript_hash : bstr,
      label : tstr,
      * context : any,
      length : uint,
