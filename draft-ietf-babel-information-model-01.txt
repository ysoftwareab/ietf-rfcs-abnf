



Babel routing protocol                                          B. Stark
Internet-Draft                                                      AT&T
Intended status: Informational                           January 2, 2018
Expires: July 6, 2018


                        Babel Information Model
                 draft-ietf-babel-information-model-01

Abstract

   This Babel Information Model can be used to create data models under
   various data modeling regimes (e.g., YANG).  It allows a Babel
   implementation (via a management protocol such as netconf) to report
   on its current state and may allow some limited configuration of
   protocol constants.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on July 6, 2018.

Copyright Notice

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.



Stark                     Expires July 6, 2018                  [Page 1]

Internet-Draft           Babel Information Model            January 2018


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Requirements Language . . . . . . . . . . . . . . . . . .   3
     1.2.  Notation  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  The Information Model . . . . . . . . . . . . . . . . . . . .   4
     2.1.  Definition of babel-information . . . . . . . . . . . . .   4
     2.2.  Definition of babel-constants . . . . . . . . . . . . . .   4
     2.3.  Definition of babel-interfaces  . . . . . . . . . . . . .   5
     2.4.  Definition of babel-neighbors . . . . . . . . . . . . . .   6
     2.5.  Definition of babel-security  . . . . . . . . . . . . . .   6
     2.6.  Definition of babel-trust . . . . . . . . . . . . . . . .   7
     2.7.  Definition of babel-sources . . . . . . . . . . . . . . .   7
     2.8.  Definition of babel-routes  . . . . . . . . . . . . . . .   7
   3.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   8
   4.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   9
     4.1.  Normative References  . . . . . . . . . . . . . . . . . .   9
     4.2.  Informative References  . . . . . . . . . . . . . . . . .   9
   Appendix A.  Open Issues  . . . . . . . . . . . . . . . . . . . .  10
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  10

1.  Introduction

   Babel is a loop-avoiding distance-vector routing protocol defined in
   RFC 6126bis [RFC6126bis].  Babel Hashed Message Authentication Code
   (HMAC) Cryptographic Authentication, defined in RFC 7298 [RFC7298],
   describes a cryptographic authentication mechanism for the Babel
   routing protocol.  This document describes an information model for
   Babel (including HMAC) that can be used to created management
   protocol data models (such as a netconf [RFC6241] YANG data model).
   Other Babel extensions may be included in this document when they
   become working group drafts.

   Due to the simplicity of the Babel protocol and the fact that it is
   designed to be used in non-professionally administered environments
   (such as home networks), most of the information model is focused on
   reporting status of the Babel protocol, and very little of that is
   considered mandatory to implement (conditional on a management
   protocol with Babel support being implemented).  Some parameters may
   be configurable; however, it is up to the Babel implementation
   whether to allow any of these to be configured within its
   implementation.  Where the implementation does not allow
   configuration of these parameters, it may still choose to expose them
   as read-only.







Stark                     Expires July 6, 2018                  [Page 2]

Internet-Draft           Babel Information Model            January 2018


1.1.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

1.2.  Notation

   This document uses a programming language-like notation to define the
   properties of the objects of the information model.  An optional
   property is enclosed by square brackets, [ ], and a list property is
   indicated by two numbers in angle brackets, <m..n>, where m indicates
   the minimal number of values, and n is the maximum.  The symbol * for
   n means no upper bound.

   The object definitions use base types that are defined as follows:

   base64      An opaque array of bytes.

   boolean     A type representing a boolean value.

   counter     A non-negative integer that monotonically increases.
               Counters may have discontinuities and they are not
               expected to persist across restarts.

   credentials An opaque type representing credentials needed by a
               cryptographic mechanism to secure communication.  Data
               models must expand this opaque type as needed and
               required by the security protocols utilized.

   datetime    A type representing a date and time using the Gregorian
               calendar.  The datetime format MUST conform to RFC 3339
               [RFC3339].

   int         A type representing signed or unsigned integer numbers.
               This information model does not define a precision nor
               does it make a distinction between signed and unsigned
               number ranges.  This type is also used to represent
               enumerations.

   ip-address  A type representing an IP address.  This type supports
               both IPv4 and IPv6 addresses.

   string      A type representing a human-readable string consisting of
               a (possibly restricted) subset of Unicode and ISO/IEC
               10646 [ISO.10646] characters.





Stark                     Expires July 6, 2018                  [Page 3]

Internet-Draft           Babel Information Model            January 2018


   uri         A type representing a Uniform Resource Identifier as
               defined in STD 66 [RFC3986].

2.  The Information Model

2.1.  Definition of babel-information

        object {
             string                babel-implementation-version;
             base64                babel-self-router-id;
            [int                   babel-self-seqno;]
             string                babel-cost-comp-algorithms<1..*>;
             babel-constants-obj   babel-constants;
             babel-interfaces-obj  babel-interfaces<0..*>;
             babel-sources-obj     babel-sources<0..*>;
             babel-routes-obj      babel-routes<0..*>;
         }babel-information-obj;

      babel-version: the version of this implementation of the Babel
      protocol

      babel-self-router-id: the router-id used by this instance of the
      Babel protocol to identify itself; RFC 6126bis [RFC6126bis]
      describes this as an arbitrary string of 8 octets

      babel-self-seqno: the current sequence number included in route
      updates for routes originated by this node

      babel-cost-comp-algorithm: a set of names of supported cost
      computation algorithms; possible values include "k-out-of-j",
      "ETX"

      babel-constants: a babel-constants object

      babel-interfaces: a set of babel-interface objects

      babel-sources: a set of babel-source objects

      babel-routes: a set of babel-route objects

2.2.  Definition of babel-constants

        object {
             int          babel-udp-port;
            [ip-address   babel-multicast-group-ipv6;]
            [ip-address   babel-multicast-group-ipv4;]
         }babel-constants-obj;




Stark                     Expires July 6, 2018                  [Page 4]

Internet-Draft           Babel Information Model            January 2018


      babel-udp-port: UDP port for sending and listening for Babel
      messages; default is 6696; MAY be configurable

      babel-multicast-group-ipv6: multicast group for sending and
      listening to multicast announcements on IPv6; default is
      ff02:0:0:0:0:0:1:6; MAY be configurable

      babel-multicast-group-ipv4: multicast group for sending and
      listening to multicast announcements on IPv4; default is
      224.0.0.111; MAY be configurable

2.3.  Definition of babel-interfaces

        object {
             uri                  babel-interface-reference;
            [int                  babel-interface-seqno;]
            [int                  babel-interface-hello-interval;]
            [int                  babel-interface-update-interval;]
             boolean              babel-request-trigger-ack;
             boolean              babel-lossy-link;
            [int                  babel-external-cost;]
             babel-neighbors-obj  babel-neighbors<1..*>;
            [babel-security-obj   babel-security<1..*>;]
         }babel-interfaces-obj;

      babel-interface-reference: reference to an interface object as
      defined by the data model

      babel-interface-seqno: the current sequence number in use for this
      interface

      babel-interface-hello-interval: the current hello interval in use
      for this interface

      babel-interface-update-interval: the current update interval in
      use for this interface

      babel-request-trigger-ack: requests acknowledgement of triggered
      updates (if number of neighbors less than babel-ack-limit); MAY be
      configurable

      babel-lossy-link: indicates (if true) that the link of this
      interface is considered lossy; MAY be configurable

      babel-external-cost: external input to cost of link of this
      interface (need to determine how to express this);MUST be
      configurable if implemented




Stark                     Expires July 6, 2018                  [Page 5]

Internet-Draft           Babel Information Model            January 2018


2.4.  Definition of babel-neighbors

        object {
             ip-address           babel-neighbor-address;
             string               babel-hello-history;
             int                  babel-txcost;
             int                  babel-hello-seqno;
             int                  babel-neighbor-ihu-interval;
            [int                  babel-rxcost]
         }babel-neighbors-obj;

      babel-neighbor-address: (IPv4 or v6) address the neighbor sends
      messages from

      babel-hello-history: the Hello history (do we want a human
      readable format?)

      babel-txcost: transmission cost value from the last IHU packet
      received from this neighbor, or meximum value (infinity) to
      indicates the IHU hold timer for this neighbor has expired

      babel-hello-seqno: expected Hello sequence number

      babel-neighbor-ihu-interval: current IHU interval for this
      neighbor

      babel-router-id: router-id of the neighbor

      babel-rxcost: reception cost calculated for this neighbor

2.5.  Definition of babel-security

        object {
             string                babel-security-supported;
             string                babel-security-enabled-protocol;
             credentials           babel-security-self-cred;
             babel-trust-obj       babel-trust<1..*>;
       }babel-security-obj;

      babel-security-supported: list of supported security mechanisms

      babel-security-enabled-protocol: the currently enabled security
      protocol; empty if none is enabled

      babel-security-self-cred: the credentials this router presents to
      participate in the enabled security protocol





Stark                     Expires July 6, 2018                  [Page 6]

Internet-Draft           Babel Information Model            January 2018


      babel-trust-obj: a set of babel-trust objects that identify the
      credentials of a router whose babel messages are trusted

2.6.  Definition of babel-trust

        object {
             credentials           babel-trust-cred;
       }babel-trust-obj;

      babel-trust-cred: the credentials of a router whose babel messages
      can be trusted

2.7.  Definition of babel-sources

        object {
             ip-address           babel-source-prefix;
             int                  babel-source-prefix-length;
             base64               babel-source-router-id;
             int                  babel-source-seqno;
             int                  babel-source-metric;
            [int                  babel-source-garbage-collection-time;]
         }babel-sources-obj;

      babel-source-prefix: Prefix this entry applies to

      babel-source-prefix-length: Length of the source prefix

      babel-source-router-id: router-id of the router originating this
      prefix

      babel-source-seqno: last sequence number used by this source

      babel-source-metric: this source's feasibility distance

      babel-source-garbage-collection-time: garbage-collection timer for
      this source

2.8.  Definition of babel-routes













Stark                     Expires July 6, 2018                  [Page 7]

Internet-Draft           Babel Information Model            January 2018


        object {
             ip-address           babel-route-prefix;
             int                  babel-route-prefix-length;
             base64               babel-route-router-id;
             base64               babel-route-neighbor;
             int                  babel-route-metric;
             int                  babel-route-seqno;
             ip-address           babel-route-next-hop;
             boolean              babel-route-selected;
         }babel-routes-obj;

      babel-route-prefix: Prefix (expressed in IP address format) for
      which this route is advertised

      babel-route-prefix-length: Length of the prefix for which this
      route is advertised

      babel-route-router-id: router-id of the source router for which
      this route is advertised

      babel-route-neighbor: neighbor that advertised this route (a
      router-id)

      babel-route-metric: the metric with which this route was
      advertised by the neighbor, or maximum value (infinity) to
      indicate a recently retracted route

      babel-route-seqno: the sequence number with which this route was
      advertised

      babel-route-next-hop: the next-hop address of this route

      babel-route-selected: a boolean flag indicating whether this route
      is selected, i.e., whether it is currently being used for
      forwarding and is being advertised

3.  Acknowledgements

   Juliusz Chroboczek review has been very helpful in refining this
   information model.

   The language in the Notation section was mostly taken from RFC 8193
   [RFC8193].








Stark                     Expires July 6, 2018                  [Page 8]

Internet-Draft           Babel Information Model            January 2018


4.  References

4.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC6126bis]
              Chroboczek, J., "The Babel Routing Protocol", Work in
              Progress, draft-ietf-babel-rfc6126bis, October 2017.

4.2.  Informative References

   [ISO.10646]
              International Organization for Standardization,
              "Information Technology - Universal Multiple-Octet Coded
              Character Set (UCS)", ISO Standard 10646:2014, 2014.

   [RFC3339]  Klyne, G. and C. Newman, "Date and Time on the Internet:
              Timestamps", RFC 3339, DOI 10.17487/RFC3339, July 2002,
              <https://www.rfc-editor.org/info/rfc3339>.

   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, "Uniform
              Resource Identifier (URI): Generic Syntax", STD 66,
              RFC 3986, DOI 10.17487/RFC3986, January 2005,
              <https://www.rfc-editor.org/info/rfc3986>.

   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,
              and A. Bierman, Ed., "Network Configuration Protocol
              (NETCONF)", RFC 6241, DOI 10.17487/RFC6241, June 2011,
              <https://www.rfc-editor.org/info/rfc6241>.

   [RFC7298]  Ovsienko, D., "Babel Hashed Message Authentication Code
              (HMAC) Cryptographic Authentication", RFC 7298,
              DOI 10.17487/RFC7298, July 2014,
              <https://www.rfc-editor.org/info/rfc7298>.

   [RFC8193]  Burbridge, T., Eardley, P., Bagnulo, M., and J.
              Schoenwaelder, "Information Model for Large-Scale
              Measurement Platforms (LMAPs)", RFC 8193,
              DOI 10.17487/RFC8193, August 2017,
              <https://www.rfc-editor.org/info/rfc8193>.







Stark                     Expires July 6, 2018                  [Page 9]

Internet-Draft           Babel Information Model            January 2018


Appendix A.  Open Issues

   This draft must be reviewed against draft-ietf-babel-rfc6126bis.

   Following are some issues where a conscious decision may be useful:

      Closed by defining base64 type and using it for all router IDs:
      "babel-self-router-id: Should this be an opaque 64-bit value
      instead of int?"

      babel-interfaces-obj: "This needs further discussion, I fear some
      of these are implementation details."

      Would it be useful to define some parameters for reporting
      statistics or logs?  [Yes, but these need to be proposed.]

      Would it be useful to define some parameters specifically for
      security anomalies?  [Yes, but these need to be proposed.]

      I created a basic security model.  It's useful for single (or no)
      active security mechanism; but not multiple active.  OK?

      Do we need a registry for the supported security mechanisms?

Author's Address

   Barbara Stark
   AT&T
   Atlanta, GA
   US

   Email: barbara.stark@att.com



















Stark                     Expires July 6, 2018                 [Page 10]
