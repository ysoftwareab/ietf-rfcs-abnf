jid             = [ node "@" ] domain [ "/" resource ]
node            = 1*(nodepoint)
                        ; a "nodepoint" is a UTF-8 encoded Unicode code
                        ; point that satisfies the Nodeprep profile of
                        ; stringprep
domain          = fqdn / address-literal / idnlabel
fqdn            = (idnlabel 1*("." idnlabel))
                        ; an "idnlabel" is an internationalized domain
                        ; label as described in RFC 3490
address-literal = IPv4address / IPv6address
                        ; the "IPv4address" and "IPv6address" rules are
                        ; defined in Appendix B of RFC 3513
resource        = 1*(resourcepoint)
                        ; a "resourcepoint" is a UTF-8 encoded Unicode
                        ; code point that satisfies the Resourceprep
                        ; profile of stringprep

xmlns='urn:ietf:params:xml:ns:xmpp-streams'/>
xmlns='jabber:client'
from='juliet@example.com'
to='example.com'
version='1.0'>
xmlns='jabber:client'
from='example.com'
id='someid'
to='juliet@example.com'
version='1.0'>
to='romeo@example.net'
to='juliet@example.com/balcony'
xmlns='jabber:client'
from='juliet@example.com'
to='example.com'
version='1.0'>
xmlns='jabber:client'
from='example.com'
id='someid'
to='juliet@example.com'
version='1.0'>
xmlns='urn:ietf:params:xml:ns:xmpp-streams'/>
xmlns='jabber:client'
from='example.com'
id='c2s_345'
to='juliet@example.com'
version='1.0'>
xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'>
xmlns='jabber:client'
from='juliet@example.com'
to='example.com'
version='1.0'>
xmlns='jabber:client'
from='example.com'
id='c2s_123'
to='juliet@example.com'
version='1.0'>

xmlns='jabber:client'
from='juliet@example.com'
to='example.com'
version='1.0'>

xmlns='jabber:client'
from='example.com'
id='c2s_234'
to='juliet@example.com'
version='1.0'>
mechanism='DIGEST-MD5'/>

realm="example.com",nonce="OA6MG9tEQGm2hh",
qop="auth",charset=utf-8,algorithm=md5-sess

username="juliet",realm="example.com",
nonce="OA6MG9tEQGm2hh",cnonce="OA6MHXh6VqTrRk",
nc=00000001,qop=auth,digest-uri="xmpp/example.com",
response=d388dad90d4bbd760a152321f2143af7,charset=utf-8

cnNwYXV0aD1lYTQwZjYwMzM1YzQyN2I1NTI3Yjg0ZGJhYmNkZmZmZAo=
rspauth=ea40f60335c427b5527b84dbabcdfffd
xmlns='jabber:client'
from='juliet@example.com'
to='example.com'
version='1.0'>

xmlns='jabber:client'
from='example.com'
id='c2s_345'
to='juliet@example.com'
version='1.0'>
to='juliet@example.com/balcony'
id='bind_1'>
to='romeo@example.net'
to='juliet@example.com/balcony'
xmlns='jabber:server'
from='example.com'
to='example.net'
version='1.0'>

xmlns='jabber:server'
from='example.net'
id='s2s_123'
to='example.com'
version='1.0'>

xmlns='jabber:server'
from='example.com'
to='example.net'
version='1.0'>

xmlns='jabber:server'
from='example.net'
id='s2s_234'
to='example.com'
version='1.0'>
mechanism='EXTERNAL'/>ZXhhbXBsZS5jb20K</auth>

xmlns='jabber:server'
from='example.com'
to='example.net'
version='1.0'>

xmlns='jabber:server'
from='example.net'
id='s2s_345'
to='example.com'
version='1.0'>
to='romeo@example.net'
to='juliet@example.com/balcony'
xmlns='jabber:server'
from='Originating Server'
to='Receiving Server'>

        Note: The inclusion of the xmlns:db namespace declaration with
        the name shown indicates to the Receiving Server that the
        Originating Server supports dialback.  If the namespace name is
        incorrect, then the Receiving Server MUST generate an <invalid-
        namespace/> stream error condition and terminate both the XML
        stream and the underlying TCP connection.
xmlns='jabber:server'
from='Receiving Server'
id='457F9224A0...'
to='Originating Server'>

        If the namespace name is incorrect, then the Originating Server
        MUST generate an <invalid-namespace/> stream error condition and
        terminate both the XML stream and the underlying TCP connection.
        Note well that the Receiving Server SHOULD reply but MAY
        silently terminate the XML stream and underlying TCP connection
        depending on security policies in place; however, if the
        Receiving Server desires to proceed, it MUST send a stream
        header back to the Originating Server.
to='Receiving Server'
from='Originating Server'>
xmlns='jabber:server'
from='Receiving Server'
to='Authoritative Server'>

        Note: If the namespace name is incorrect, then the Authoritative
        Server MUST generate an <invalid-namespace/> stream error
        condition and terminate both the XML stream and the underlying
        TCP connection.
xmlns='jabber:server'
from='Authoritative Server'
id='1251A342B...'
to='Receiving Server'>

        Note: If the namespace name is incorrect, then the Receiving
        Server MUST generate an <invalid-namespace/> stream error
        condition and terminate both the XML stream and the underlying
        TCP connection between it and the Authoritative Server.  If a
        stream error occurs between the Receiving Server and the
        Authoritative Server, then the Receiving Server MUST generate a
        <remote-connection-failed/> stream error condition and terminate
        both the XML stream and the underlying TCP connection between it
        and the Originating Server.
from='Receiving Server'
to='Originating Server'
id='457F9224A0...'>
from='Originating Server'
to='Receiving Server'
type='valid'
id='457F9224A0...'/>

        or

from='Originating Server'
to='Receiving Server'
type='invalid'
id='457F9224A0...'/>

        Note: If the ID does not match that provided by the Receiving
        Server in Step 3, then the Receiving Server MUST generate an
        <invalid-id/> stream error condition and terminate both the XML
        stream and the underlying TCP connection.  If the value of the
        'to' address does not match a hostname recognized by the
        Receiving Server, then the Receiving Server MUST generate a
        <host-unknown/> stream error condition and terminate both the
        XML stream and the underlying TCP connection.  If the value of
        the 'from' address does not match the hostname represented by
        the Originating Server when opening the TCP connection (or any
        validated domain thereof, such as a validated subdomain of the
        Originating Server's hostname or another validated domain hosted
        by the Originating Server), then the Receiving Server MUST
        generate an <invalid-from/> stream error condition and terminate
        both the XML stream and the underlying TCP connection.  After
        returning the verification to the Receiving Server, the
        Authoritative Server SHOULD terminate the stream between them.
from='Receiving Server'
to='Originating Server'
type='valid'/>

        Note: At this point, the connection has either been validated
        via a type='valid', or reported as invalid.  If the connection
        is invalid, then the Receiving Server MUST terminate both the
        XML stream and the underlying TCP connection.  If the connection
        is validated, data can be sent by the Originating Server and
        read by the Receiving Server; before that, all XML stanzas sent
        to the Receiving Server SHOULD be silently dropped.

xmlns='jabber:server'
from='example.com'
to='example.net'>

targetNamespace='http://etherx.jabber.org/streams'
xmlns='http://etherx.jabber.org/streams'
elementFormDefault='unqualified'>

minOccurs='0'
maxOccurs='unbounded'/>
minOccurs='0'
maxOccurs='unbounded'/>
minOccurs='0'
maxOccurs='1'/>
targetNamespace='urn:ietf:params:xml:ns:xmpp-streams'
xmlns='urn:ietf:params:xml:ns:xmpp-streams'
elementFormDefault='qualified'>

targetNamespace='urn:ietf:params:xml:ns:xmpp-tls'
xmlns='urn:ietf:params:xml:ns:xmpp-tls'
elementFormDefault='qualified'>

minOccurs='0'
type='empty'/>
targetNamespace='urn:ietf:params:xml:ns:xmpp-sasl'
xmlns='urn:ietf:params:xml:ns:xmpp-sasl'
elementFormDefault='qualified'>
maxOccurs='unbounded'
type='xs:string'/>
minOccurs='0'
type='empty'/>
type='xs:string'
use='optional'/>
targetNamespace='urn:ietf:params:xml:ns:xmpp-bind'
xmlns='urn:ietf:params:xml:ns:xmpp-bind'
elementFormDefault='qualified'>

minOccurs='0'
maxOccurs='1'
type='empty'/>
targetNamespace='jabber:server:dialback'
xmlns='jabber:server:dialback'
elementFormDefault='qualified'>

targetNamespace='http://jabber.org/features/dialback'
xmlns='http://jabber.org/features/dialback'
elementFormDefault='qualified'>

minOccurs='0'
maxOccurs='1'
type='empty'/>
targetNamespace='urn:ietf:params:xml:ns:xmpp-stanzas'
xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'
elementFormDefault='qualified'>

