


Network Working Group                                        A. Hathcock
Internet-Draft                                                 J. Merkel
Intended Status: Informational                        Alt-N Technologies
Expires: September 6, 2007                                 March 6, 2007


              The Minger Email Address Verification Protocol
                       draft-hathcock-minger-00.txt

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on September 6, 2007.

Copyright Notice

   Copyright (C) The IETF Trust (2007).

Abstract

   This document describes the Minger protocol.  Minger is a protocol 
   for determining whether an email address exists and, optionally, 
   retrieving some basic information about the user of that address.  
   It includes security in the form of a username/password combination 
   but can also be used anonymously if desired.
 
Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].


Hathcock                Expires September 6, 2007              [Page 1]
Internet-Draft                     Minger                     March 2007


Table of Contents

   1       Introduction . . . . . . . . . . . . . . . . . . . . . . .  3
   1.1     The problem  . . . . . . . . . . . . . . . . . . . . . . .  3
   1.2     Existing solutions . . . . . . . . . . . . . . . . . . . .  3
   1.2.1   Finger . . . . . . . . . . . . . . . . . . . . . . . . . .  3
   1.2.2   SMTP "call-back" / "call-forward"  . . . . . . . . . . . .  3
   1.3     The solution . . . . . . . . . . . . . . . . . . . . . . .  4 
   2.      The Minger protocol  . . . . . . . . . . . . . . . . . . .  4
   2.1     The Minger query process . . . . . . . . . . . . . . . . .  4
   2.2     Minger responses . . . . . . . . . . . . . . . . . . . . .  5
   2.2.1   Example responses  . . . . . . . . . . . . . . . . . . . .  5
   3.      Anonymous mode . . . . . . . . . . . . . . . . . . . . . .  6
   4.      Security Considerations  . . . . . . . . . . . . . . . . .  7
   5.      IANA Considerations  . . . . . . . . . . . . . . . . . . .  7
   6.      Informative References . . . . . . . . . . . . . . . . . .  8
   
   Appendix A.  Acknowledgements  . . . . . . . . . . . . . . . . . .  9
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . .  9
   Intellectual Property and Copyright Statements . . . . . . . . . . 10

































Hathcock                Expires September 6, 2007               [Page 2]
Internet-Draft                     Minger                     March 2007


1.  Introduction

1.1 The problem

   It is common for elements within a typical email handling topology 
   to be unaware of whether individual local-parts are valid for the   
   mail it accepts.  For example, so-called "edge" servers which provide 
   security oriented services for downstream mail handling elements 
   often do not have an exhaustive listing of all valid local-parts for 
   a given domain.  Thus, they are sometimes forced to accept messages 
   which might otherwise be rejected as "user unknown".  Similarly, 
   entities offering "backup MX" mail services are rarely privy to a 
   complete local-part listing and are therefore forced to accept 
   messages which might otherwise be rejected.  Finally, even within a 
   common administrative framework of several locally maintained and 
   controlled SMTP servers in a load balanced configuration, it is not
   always possible for all servers to access a common local-part 
   database.

1.2 Existing solutions

   The need to determine whether an email address contains a valid local
   part has lead to the use of at least two existing mechanisms - Finger 
   [RFC1288] and SMTP "call-back" / "call-forward".  

1.2.1 Finger

   Finger [RFC1288] describes a protocol for the exchange of user 
   information.  In theory, Finger could be used to determine whether an 
   account exists by careful examination of the results of a Finger 
   query.  However, Finger suffers from a lack of security which makes 
   its modern day use problematic.  For example, it is possible for 
   attackers to obtain information about the users of an email system 
   which they can then sell or use as targets for spam and viruses.  
   Also, Finger requires the use of TCP rather than UDP which seems ill  
   suited to a simple verification scheme.

1.2.2 SMTP "call-back" / "call-forward"

   These terms are used to describe a widespread practice whereby SMTP 
   servers place an incoming SMTP session on hold while they attempt to 
   use an outbound SMTP session to determine whether or not a given 
   email address is valid.  The theory behind this is as follows:  if an 
   SMTP server responds positively to an SMTP RCPT or MAIL command 
   [RFC2821] with a given email address then this potentially means that 
   the address local part is valid.  One problem with such a scheme is 
   the lack of efficiency inherent in the need to tear-up and tear-down 
   an SMTP session over TCP.  Also, because these types of SMTP sessions 
   are not purposed to deliver mail, they typically drop connection 
   after the RCPT command is processed.  This leads to a large number of 
   SMTP sessions which appear in logs to have simply failed for no 
   reason.

Hathcock                Expires September 6, 2007               [Page 3]
Internet-Draft                     Minger                     March 2007


1.3 The solution

   What's needed is a UDP based protocol which is secure, has little 
   overhead, and can be easily invoked to determine whether a given 
   email address is valid or not.  Minger fulfills this need.


2.  The Minger protocol
 
   Minger is a UDP protocol that operates on port 49152.

     Editor's note:  The authors have applied to IANA for a
     registered port.  Until then, implementations will test
     using the above private port.     

   Syntax descriptions use the form described in Augmented Backus-Naur 
   Form for Syntax Specifications (ABNF) [RFC4234].

2.1  The Minger query process

   A Minger client constructs a query string comprised of either two or 
   four elements and transmits it over UDP to a Minger server.  The 
   format of the query is as follows:

  ABNF:

    Query string = id SP mailbox [SP username SP password]

    id = 1 * 50(VCHAR)                ; used to match a query to a 
                                      ; response

    mailbox = Local-part "@" Domain   ; as defined in RFC2821

    username = 1 * 50(VCHAR)          ; optional username for security

    password = 1 * 50(VCHAR)          ; optional password for security

  id - This is a randomly generated value which Minger clients include 
       in each query.  This same value will be echoed back in the 
       response returned by the Minger server and can therefore be used 
       to match responses with the proper query.

  mailbox - This is the email address for which verification of 
       existence is desired. 

  username and password - These values are pre-arranged elements 
       determined and configured in advance so that Minger servers 
       provide service only to authorized clients.  When not provided, 
       Minger is operating in anonymous mode.




Hathcock                Expires September 6, 2007               [Page 4]
Internet-Draft                     Minger                     March 2007


2.2  Minger responses

   Minger servers return responses in a simple XML format.  Despite the 
   overhead of including XML tags within the limited space available 
   with UDP, XML allows for very easy parsing by the receiving client 
   and the data returned would rarely approach the UDP space limit.  The 
   XML format returned by the Minger server has certain required 
   elements but can include other elements as desired by particular 
   implementations.

  ABNF:

    Response = "<MingerResponse>" minger-data "</MingerResponse>"

    Minger-data = "<ID>" id "</ID>" (status user-data / error)

    id = 1 * 50(VCHAR)           ; id of the query being responded to

    status = "<Status>" ("Active" / "Not found" / "Disabled" / 
              1*(ALPHA / DIGIT)) "</Status>"

    error = "<Error>" 1 * (ALPHA / DIGIT) "</Error>"

    user-data = *("<" tag-name ">" 1 * (VCHAR) "</" tag-name ">")

    tag-name = 1 * (VCHAR)    


   Minger servers MUST support "status" values of "active", "not found", 
   and "disabled".

   Minger servers MAY return additional XML nodes containing data not 
   defined in this specification. 


2.2.1  Example responses


  A.  Minger response when email address "not found" (returned when the 
      queried email address does not exist):

      <MingerResponse>
      <ID>12345</ID>
      <Status>not found</Status>
      </MingerResponse>








Hathcock                Expires September 6, 2007               [Page 5]
Internet-Draft                     Minger                     March 2007


  B.  Minger response for error conditions (in this case, invalid 
      credentials):

      <MingerResponse>
      <ID>54321</ID>
      <Error>bad username or password</Error>
      </MingerResponse>
   
  C.  Minger response for "active" email addresses (returned when the 
      queried email address exists and is ready to receive mail):

      <MingerResponse>
      <ID>abc123def</ID>
      <Status>Active</Status>
      </MingerResponse>
   
  D.  Minger response returning optional extra data:

      <MingerResponse>
      <ID>gfs54ad4fs</ID>
      <Status>Active</Status>
      <FullName>Arvel Hathcock</FullName>
      <Email>arvel@altn.com</Email>
      </MingerResponse>



3.  Anonymous mode

   Minger clients MAY attempt anonymous queries; that is, queries which 
   do not contain a username or password within the query string.  
   Minger servers SHOULD respond to anonymous queries in the same way 
   they respond to authenticated queries.  However, Minger servers MAY 
   be configured to refuse anonymous queries.  If so, they MUST respond 
   with an error as described above.  Additionally, Minger responses to 
   anonymous queries may contain a sub-set or none of the optional extra 
   XML data that would otherwise be present.  However, any response must 
   meet the minimums required by this specification.















Hathcock                Expires September 6, 2007               [Page 6]
Internet-Draft                     Minger                     March 2007


4.  Security Considerations

   Minger is used to obtain information about the validity of an email 
   address.  It can also be used to retrieve implementation specific 
   "extra" data about the user of an email address.  Minger include a 
   username/password concept to prevent unauthorized use.  However, it 
   also supports an anonymous mode in which use of these credentials may 
   not be required.  It's conceivable that the use of anonymous mode or 
   the compromise of authentication credentials could lead to the 
   undesired provision of information which could then be used for 
   nefarious purposes.  Care must be taken to secure the credentials 
   used by Minger and to police the provision of information when using 
   anonymous mode.


5.  IANA Considerations

   Minger requires allocation of a Registered Port by IANA. 



































Hathcock                Expires September 6, 2007               [Page 7]
Internet-Draft                     Minger                     March 2007


6.  Informative References

   [RFC1288]  Zimmerman, D., "The Finger User Information Protocol",
              RFC 1288, December 1991.

   [RFC2821]  Klensin, J., Editor, "Simple Mail Transfer Protocol", RFC
              2821, March 2001.

   [RFC4234]  Crocker, D., Ed. And P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", RFC 4234, October 2005.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.








































Hathcock                Expires September 6, 2007               [Page 8]
Internet-Draft                     Minger                     March 2007


Appendix A.  Acknowledgements

  We wish to thank the members of the MDaemon Beta Community 
  (subscribe-md-beta@altn.com) for their ideas and help.


Authors' Addresses

   Arvel Hathcock
   Alt-N Technologies 
   http://www.altn.com

   Email: arvel.hathcock@altn.com


   Jonathan Merkel
   Alt-N Technologies
   http://www.altn.com

   Email: jon.merkel@altn.com

































Hathcock                Expires September 6, 2007               [Page 9]
Internet-Draft                     Minger                     March 2007


Full Copyright Statement

   Copyright (C) The IETF Trust (2007).

   This document is subject to the rights, licenses and restrictions
   contained in BCP 78, and except as set forth therein, the authors
   retain all their rights.

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND
   THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Acknowledgment

   Funding for the RFC Editor function is provided by the IETF
   Administrative Support Activity (IASA).







Hathcock                Expires September 6, 2007              [Page 10]



