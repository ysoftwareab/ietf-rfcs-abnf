


Network Working Group                                           L. Blunk
Internet-Draft                                             Merit Network
Expires: November 5, 2003                                       J. Damas
                                            Internet Software Consortium
                                                               F. Parent
                                                                Viagenie
                                                          A. Robachevski
                                                                RIPE NCC
                                                             May 7, 2003


                                 RPSLng
                       draft-blunk-rpslng-00.txt

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups. Note that other
   groups may also distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on November 5, 2003.

Copyright Notice

   Copyright (C) The Internet Society (2003). All Rights Reserved.

Abstract

   This memo presents a new set of simple extensions to the RPSL
   language enabling the language to document routing policies for the
   IPv6 and multicast address families currently used in the Internet.







Blunk, et al.           Expires November 5, 2003                [Page 1]

Internet-Draft                   RPSLng                         May 2003


1. Introduction

   RFC 2622 [1] defines the RPSL language for the IPv4 unicast routing
   protocols and a series of guidelines for extending the RPSL language
   itself.  Additionally, security extensions to the RPSL language are
   specificed in RFC 2725 [2].

   This document proposes to extend RPSL according to the following
   goals and requirements:

      provide RPSL extensibility in the dimension of address families.
      Specifically, to allow users to document routing policy for ipv6
      and multicast.

      the extensions must be backwards compatible and minimise the risk
      of breaking existing tools. For instance, introducing a new class
      or attribute would less likely impact a tool or script than
      changing the syntax of an existing attribute. Section 10 of RFC
      2622 [1] provides guidelines for extending RPSL.

      clarity and non-ambiguity: RPSL information is used by software
      tools and by humans.

      minimise duplication of information, particularly when routing
      policies for different address families are the same.

      Internet Routing Registry (IRR) system requirements -- It is
      important to consider the ramifications of RPSL extensions on IRR
      systems. The capabilities of IRR servers, as well as the
      established operational practices of users who interact with these
      servers, must be considered.

   An important point to note is the fact that there are two address
   families, corresponding to the two versions of the IP protocol
   currently in use in the Internet, but there are at least four
   distinct routing policies that need to be described (IPv4
   {unicast|multicast}, IPv6 {unicast|multicast}).














Blunk, et al.           Expires November 5, 2003                [Page 2]

Internet-Draft                   RPSLng                         May 2003


2. Specifying routing policy for different address families

   Routing policy is currently specified in the aut-num class using
   "import:", "export:", and "default:" attributes. Sometimes it is
   important to distinguish policy for different address families, as
   well as a unicast routing policy from a multicast one.

   Use of existing import, export, and default attributes is not a good
   option since it breaks backward compatibility and could undermine
   clarity in the expressions.

   Keeping this in mind, the "import:", "export:", and "default:"
   attributes implicitly specify ipv4 unicast policy and remain as
   defined previously in RPSL, and new multi-protocol (prefixed with the
   string "mp-") attributes are introduced. These will be described
   below.

2.1 The afi dictionary attribute

   In this section we introduce a new dictionary attribute:

   Address family, <afi>, is an RPSL list of address families for which
   the policy expression should be evaluated. <afi> is mandatory within
   the new multi-protocol attributes introduced in this document.

   The possible values for <afi> are:

      ipv4
      ipv4.unicast (equivalent to ipv4)
      ipv4.multicast
      ipv6
      ipv6.unicast (equivalent to ipv6)
      ipv6.multicast

   Appearance of these values in an attribute's value must be preceded
   by the keyword afi.

   An <afi-list> is defined as a comma separated list of one or more afi
   values.

2.2 ipv6_address predefined type and next-hop dictionary extension

   In order to support IPv6 addresses specificied with the next-hop
   rp-attribute, a new predefined dictionary type entitled ipv6_address
   is added to the RPSL dictionary.  In addition, the next-hop
   rp-attribute is re-defined in the dictionary as follows:





Blunk, et al.           Expires November 5, 2003                [Page 3]

Internet-Draft                   RPSLng                         May 2003


   rp-attribute: # next hop router in a static route
                 next-hop
                 operator=(union ipv4_address, ipv6_address, enum[self])


2.3 mp-import, mp-export, and mp-default

   Three new policy attributes are introduced:

      mp-import:
      mp-export:
      mp-default:

   These attributes incorporate the afi (address-family) specification.
   The mp-import and mp-export attributes have both a basic policy
   specification and a more powerful structured policy specification.

   The syntax for the basic policy specification of the mp-import and
   mp-export attributes is as follows:


   mp-import: [protocol <protocol-1>] [into <protocol-2>]
           afi <afi-list>
           from <peering-1> [action <action-1>]
           . . .
           from <peering-N> [action <action-N>]
           accept <filter>
   mp-export: [protocol <protocol-1>] [into <protocol-2>]
           afi <afi-list>
           to <peering-1> [action <action-1>]
           . . .
           to <peering-N> [action <action-N>]
           announce <filter>


   The mp-import and mp-export policies can be structured.  As with RFC
   2622 [1], structured policies are recommended only to advanced RPSL
   users.  For the sake of brevity, only the mp-import structured policy
   syntax is defined below.   The mp-export structured policy syntax is
   expressed in a symmetric way to the mp-import attribute.











Blunk, et al.           Expires November 5, 2003                [Page 4]

Internet-Draft                   RPSLng                         May 2003


   mp-import ::=
          [protocol <protocol1>] [into <protocol2>] <importexpression>

   <importexpression> ::=
          afi <afi-list> <import-term> accept <filter> |
          afi <afi-list> <import-term> accept <filter> except
                                                 <importexpression> |
          afi <afi-list> <import-term> accept <filter> refine
                                                 <importexpression>

   <import-term> ::=  <import-factor> |
                      {
                        <import-factor>
                        ...
                        <import-factor>
                      }

   <import-factor> ::= from <peering> [action <action>];


   The <peering> specification indicates the AS (and the router if
   present)


   <peering> ::= <as-expression> [<router-expression-1>]
                                 [at <router-expression-2>] |
                 <peering-set-name>


   with <router-expression-1> and <router-expression-2> being
   expressions over router IPv4 or IPv6 addresses (specifying their
   address family with the use of the appropriate "afi <afi>" term),
   inet-rtr names, and rtr-set names using operators AND, OR, and
   EXCEPT.

   In the same manner, the <filter> expression is the extension of the
   RPSL <filter> expression [section 5.4 of RFC 2622 [1]], requiring the
   presence of an "afi <afi>" term before each address or address-prefix
   set.

   The address family may be specified at any level of nesting of
   <importexpression>, and is valid only within the <importexpression>
   that contains it.

   Therefore in the example






Blunk, et al.           Expires November 5, 2003                [Page 5]

Internet-Draft                   RPSLng                         May 2003


   aut-num:    AS65534
   mp-import: afi ipv6.unicast,ipv4 from AS1 action pref = 1; accept as-foo
               except { afi ipv6.unicast,ipv4
               from AS2 action pref = 2; accept AS226
                  except { afi ipv6.unicast
                  from AS3 action pref = 3; accept {3FFE:FFFF::/35}
                         }
                       }

   the last (rightmost) "except" is evaluated only for the ipv6 unicast
   address family, while other import-expressions are evaluated for both
   the ipv6 and ipv4 unicast address families.

   The evaluation of an <importexpression> is done by evaluating all of
   its components. Evaluation of peering-sets and filter-sets is
   constrained by the address family. Such constraints may result in a
   {NOT ANY} <filter> or invalid <peering> depending on implicit or
   explicit definitions of the address family in the set. In the latter
   case an error is returned. {NOT ANY} filter may issue a warning.

   Conflicts with explicit or implicit declarations are resolved at
   runtime, that is during evaluation of a policy expression. For
   example, when evaluating the following import policy:

   aut-num: AS2
   mp-import: afi ipv6 from AS1 accept {193.0.0.0/22}

   the filter should be evaluated as {NOT ANY}.

   aut-num: AS2
   mp-import: afi ipv6.unicast {
      from AS-ANY action med = 0; accept {3FFE:FFFF::/35};
      } refine { afi ipv6.unicast
           from AS1 at 3FFE:FFFF::1 action pref = 1; accept AS-UPSTREAM;
           from prng6-ebgp-peers action pref = 2; accept AS1;
      }

   In this example only ipv6 prefixes originated by AS1 will be
   collected, and while evaluating AS-UPSTREAM, an as-set, only ipv6
   prefixes of the member ASes will be considered.

   The "mp-default:" attribute is defined as


   mp-default: afi <afi-list> to <peering> [action <action>]
                                                 [networks <filter>]





Blunk, et al.           Expires November 5, 2003                [Page 6]

Internet-Draft                   RPSLng                         May 2003


   using the definitions above for <peering> and <filter>

2.4 Additional value for <protocol>

   A new value has been added for the <protocol> specification:

      MPBGP

   MPBGP is understood to be BGP4 with multi-protocol extensions (often
   referred to as BGP4+).  BGP4+ could not be used as the '+' character
   is not allowed by the RPSL specification in protocol names.








































Blunk, et al.           Expires November 5, 2003                [Page 7]

Internet-Draft                   RPSLng                         May 2003


3. New classes and attributes to support the extensions

3.1 as-set Class

   The as-set class defines a set of Autonomous Systems (AS), specified
   either directly by listing them in the members attribute, or
   indirectly by referring to another as-sets or using the mbrs-by-ref
   facility. More importantly, "In a context that expects a route set
   (e.g.  members attribute of the route-set class), [...] an as-set
   AS-X defines the set of routes that are originated by the ASes in
   AS-X.", [section 5.3 of RFC2622].

   The as-set class is therefore used to collect a set of route
   prefixes, which may be restricted to a specific address family.

   The existing as-set class does not need any modifications. The
   evaluation of the class must be filtered to obtain prefixes belonging
   to a particular address family using the traditional filtering
   mechanism in use in IRR systems today.

3.2 route6 Class

   The route6 class is the ipv6 equivalent of the route class. As with
   the route class, the class key for the route6 class is specified by
   the route6 and origin attribute pair.  Other than the route6
   attribute, the route6 class shares the same attributes and meanings
   with the route class.  The exception being the inject, holes,
   components, and exports-comps attributes must specify ipv6 prefixes
   and addresses rather than ipv4 prefixes and addresses.


   Attribute      Value                     Type
   route6         <ipv6-address-prefix>     mandatory, single-valued,
                                            class key

   ... (rest an in the route class, with exception listed above)

   Example:

   route6:   2001:610:240::/48
   origin:   AS3333



3.3 route-set Class

   This class is used in <filter> expressions to specify a set of route
   prefixes.



Blunk, et al.           Expires November 5, 2003                [Page 8]

Internet-Draft                   RPSLng                         May 2003


   A new attribute "mp-members:" is defined for this class with the
   following syntax:


   Attribute   Value                                             Type
   mp-members  afi <afi-list> list of <address-prefix-range> or  optional,
                              <route-set-name> or                multi-valued
                              <route-set-name><range-operator>

   Example:

   route-set:  rs-foo
   mp-members: afi ipv6 rs-bar          # common members with afi constraint
   mp-members: afi ipv6 rs-foo2, 3FFE:FFFF::/35  # v6 only members...
   mp-members: afi ipv4 rs-foo3, 128.9.0.0/16



3.4 filter-set Class

   The new "mp-filter:" attribute defines the set's policy filter.  A
   policy filter is a logical expression which when applied to a set of
   routes returns a subset of these routes.

   <filter> is defined in section Section 2.3.

   The relevant parts of the updated filter-set class are shown below:


   Attribute   Value                  Type
   filter-set  <object-name>          mandatory, single-valued, class key
   filter      <filter>               optional, single-valued
   mp-filter   afi <afi> <filter>     optional, single-valued
   ...


   While the filter and mp-filter attributes are of type "optional", a
   filter-set must contain one of these two attributes.  Implementations
   should reject instances where both attributes are defined in an
   object as the interpretation of such a filter-set is undefined.

3.5 peering-set Class

   The peering set class is updated with a "mp-peering:" attribute, with
   <peering> defined as in section Section 2.3






Blunk, et al.           Expires November 5, 2003                [Page 9]

Internet-Draft                   RPSLng                         May 2003


   Attribute    Value                 Type
   peering-set  <object-name>         mandatory, single-valued, class key
   peering      <peering>             optional, multi-valued
   mp-peering   afi <afi> <peering>   optional, multi-valued
   ...

   Example:

   peering-set:   prng-ebgp-peers
   mp-peering:    afi ipv6 AS2 3FFE:FFFF::1 at 3FFE:FFFF::2



3.6 inet-rtr Class

   This class gets two new attributes: "interface:" which allows the
   definition of generic interfaces, including the information
   previously contained in the "ifaddr:" attribute ,as well as support
   for tunnel definitions. And, "mp-peer:", which includes and extends
   the functionality of the exisiting "peer:" attribute.

   Below is the syntax definition for the new "interface:" attribure.

   Attribute  Value                                         Type
   interface  afi <afi-list> <address> masklen <mask>       optional,
              [action <action>]				 multi-valued
              [tunnel <remote-endpoint-address>,<encapsulation>]

   The new syntax allows native IPv4 and IPv6 interface definitions as
   well as the definition of tunnels as virtual interfaces. Without the
   optional part, this attribute allows the same functionality as the
   "ifaddr:" attribute but extends it to allow IPv6 addresses.

   In the case of the interface being a tunnel, the optional part
   describes the tunnel configuration as follows:

   <remote-endpoint-address> indicates the IP address of the remote
   endpoint of the tunnel. The address family must match that of the
   local endpoint. <encapsulation> denotes the encapsulation used in the
   tunnel and is one of {GRE,IPv6inIPv4,IPinIP,DVMRP}.  Routing policies
   for these routers should be described in the appropriate classes (eg.
   peering and autnum).

   The new "mp-peer:" attribute is defined below.  The sole difference
   between this attribute and the "peer:" attribute is the addition of
   an <afi> specification to allow the use of IPv6 addresses.





Blunk, et al.           Expires November 5, 2003               [Page 10]

Internet-Draft                   RPSLng                         May 2003


   Attribute  Value                                         Type
   mp-peer    <protocol> afi <afi> <address> <options> or   optional,
              <protocol> <inet-rtr-name>     <options> or   multi-valued
              <protocol> <rtr-set-name>      <options> or
              <protocol> <peering-set-name>  <options>



3.7 rtr-set Class

   The rtr-set class is extended with a new attribute, "mp-members:",
   defined as

   Attribute   Value                               Type
   mp-members  list of <inet-rtr-name> or          optional, multi-valued
               <rtr-set-name> or
               afi <afi> list of <address-prefix>


   This allows specification of ipv4 or ipv6 as values for afi when
   listing the routers that are members of the set name, or by
   specifying their IPv4 of IPv6 addresses directly.





























Blunk, et al.           Expires November 5, 2003               [Page 11]

Internet-Draft                   RPSLng                         May 2003


4. RFC 2725 extensions

   RFC 2725 [2] introduces an authorization model to address the
   integrity of policy expressed in routing registries.  In particular,
   two new attributes were defined to support this authorization model,
   namely, the "mnt-routes" and "mnt-lower" attributes.

   In RPSLng, these attributes are extended to the route6 and inet6num
   (described below) classes.  Further, the syntax of the existing
   mnt-routes attribute is modified to allow the optional specification
   of IPv6 prefix lists when present in inet6num, route6, and aut-num
   class objects. This optional list of prefixes is a comma-separated
   list enclosed in curly braces.  In the aut-num class, the IPv6
   prefixes may be mixed with IPv4 prefixes.

   Note the inclusion of IPv6 prefixes within a mnt-routes attribute in
   an aut-num object may conflict with existing implementations of RPSL
   which support only IPv4 prefixes.  However, given the perceived lack
   of implementation of this optional prefix list, it was considered
   acceptable to extend the existing definition of the mnt-routes
   attribute in the aut-num class rather than creating a new attribute
   type.


   Attribute     Value                    Type
   inet6num      <ipv6-address-prefix>    mandatory, single-valued, class key
   netname       <netname>                mandatory, single-valued
   descr         <free-form>              mandatory, multi-valued
   country       <country-code>           mandatory, multi-valued
   admin-c       <nic-handle>             mandatory, multi-valued
   tech-c        <nic-handle>             mandatory, multi-valued
   remarks       <free-form>              optional, multi-valued
   notify        <email-address>          optional, multi-valued
   mnt-lower     list of <mntner-name>    optional, multi-valued
   mnt-routes    list of <mntner-name>    optional, multi-valued
   mnt-by	      list of <mntner-name>    mandatory, multi-valued
   changed       <email-address> <date>   mandatory, multi-valued
   source        <registry-name>          mandatory, single-valued


   The <country-code> must be a valid two-letter ISO 3166 country code
   identifier.  <netname> is a symbolic name for the specified IPv6
   address space.  It does not have a restriction on RPSL reserved
   prefixes. These definitions are taken from the RIPE Database
   Reference Manual [3].






Blunk, et al.           Expires November 5, 2003               [Page 12]

Internet-Draft                   RPSLng                         May 2003


5. Security Considerations

   This document describes extensions to RPSL, a language for expressing
   routing policies.  The extensions introduce ways of making the
   configurations currently available for describing IPv4 routing
   policies to IPv6.  They introduce no additional security mechanisms
   or threats.












































Blunk, et al.           Expires November 5, 2003               [Page 13]

Internet-Draft                   RPSLng                         May 2003


6. Acknowledgments

   The authors wish to thank all the people who have contributed to this
   document through numerous discussions.

   Particularly Ekaterina Petrusha for highly valuable discussions and
   suggestions. Shane Kerr, Engin Gunduz, Mark Blanchet and David
   Kessens participated constructively in many discussions. Finally,
   Cengiz Alaettinoglu who is still the reference in all things RPSL.










































Blunk, et al.           Expires November 5, 2003               [Page 14]

Internet-Draft                   RPSLng                         May 2003


References

   [1]  Alaettinoglu, C., Villamizar, C., Gerich, E., Kessens, D.,
        Meyer, D., Bates, T., Karrenberg, D. and M. Terpstra, "Routing
        Policy Specification Language (RPSL)", RFC 2622, June 1999.

   [2]  Villamizar, C., Alaettinoglu, C., Meyer, D. and S. Murphy,
        "Routing Policy System Security", RFC 2725, December 1999.

   [3]  Damas, J. and A. Robachevski, "RIPE Database Reference Manual",
        August 2002.


Authors' Addresses

   Larry Blunk
   Merit Network

   EMail: ljb@merit.edu


   Joao Damas
   Internet Software Consortium

   EMail: joao@psg.com


   Florent Parent
   Viagenie

   EMail: Florent.Parent@viagenie.qc.ca


   Andrei Robachevski
   RIPE NCC

   EMail: andrei@ripe.net














Blunk, et al.           Expires November 5, 2003               [Page 15]

Internet-Draft                   RPSLng                         May 2003


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights. Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11. Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard. Please address the information to the IETF Executive
   Director.


Full Copyright Statement

   Copyright (C) The Internet Society (2003). All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works. However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assignees.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION



Blunk, et al.           Expires November 5, 2003               [Page 16]

Internet-Draft                   RPSLng                         May 2003


   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.











































Blunk, et al.           Expires November 5, 2003               [Page 17]

