

TN3270E Working Group                                     T. Murphy, Jr.
Internet Draft: <draft-murphy-tn5250e-00.txt>                   P. Rieth
Updates:  RFC 1205                                            J. Stevens
Expiration Date: August, 1998                            IBM Corporation
                                                           February 1998


                        5250 Telnet Enhancements


Status of this Memo

   This document is an Internet Draft.  Internet Drafts are working
   documents of the Internet Engineering Task Force (IETF), its Areas,
   and its Working Groups.  Note that other groups may also distribute
   working documents as Internet Drafts.

   Internet Drafts are draft documents valid for a maximum of six
   months.  Internet Drafts may be updated, replaced, or obsoleted by
   other documents at any time.  It is not appropriate to use Internet
   Drafts as reference material or to cite them other than as a "working
   draft" or "work in progress."

   Please check the I-D abstract listing contained in each Internet
   Draft directory to learn the current status of this or any Internet
   Draft.  Distribution of this document is unlimited.

Copyright Notice

   Copyright (C) The Internet Society (1998).  All Rights Reserved.

Abstract

   This draft describes the interface to the IBM 5250 Telnet server that
   allows client Telnet to request a Telnet terminal or printer session
   using a specific device name.  If a requested device name is not
   available, a method to retry the request using a new device name is
   described.  Methods to request specific Telnet session settings and
   auto-signon function are also described.

   By allowing a Telnet client to select the device name, the 5250
   Telnet server opens the door for applications to set and/or extract
   useful information about the Telnet client.  Some possibilities are
   1) selecting a customized device name associated with a particular
   user profile name for National Language Support or subsystem routing,
   2) connecting PC and network printers as clients and 3) auto-signon
   using password exchange.




Murphy, Rieth & Stevens                                         [Page 1]


Internet Draft          5250 Telnet Enhancements           February 1998


   Applications may need to use system API's on the AS/400 in order to
   extract Telnet session settings from the device name description.
   Refer to the Retrieve Device Description (QDCRDEVD) API described in
   the AS/400 System API book [3] on how to extract information using
   the DEVD0600 and DEVD1100 templates.

   This draft describes how the IBM 5250 Telnet server supports Work
   Station Function (WSF) printers using 5250 Display Station Pass-
   Through.  A response code is returned by the Telnet server to
   indicate success or failure of the WSF printer session.









































Murphy, Rieth & Stevens                                         [Page 2]


Internet Draft          5250 Telnet Enhancements           February 1998


1. Table of Contents

                                CONTENTS

          1.  Table of Contents..................................   3
          2.  Enhancing Telnet Negotiations......................   4
          3.  Standard Telnet Option Negotiation.................   5
          4.  Enhanced Telnet Option Negotiation................    7
          5.  Enhanced Display Emulation Support.................   9
          6.  Enhanced Display Auto-Signon and Password
              Exchange...........................................  10
          7.  Device Name Collision Processing...................  12
          8.  Enhanced Printer Emulation Support.................  14
          9.  Telnet Printer Terminal Types......................  15
         10.  Telnet Printer Startup Response Record for Printer
              Emulators..........................................  18
              10.1  Example of a Success Response Record.........  19
              10.2  Example of an Error Response Record..........  20
              10.3  Response Codes...............................  21
         11.  Author's Note......................................  22
         12.  References.........................................  22
         13.  Security Considerations............................  23
         14.  Author's Address...................................  23
         15.  Relation to Other RFC's............................  24

                             LIST OF FIGURES


         Figure 1.  Example of a success status response
                    record.......................................  19
         Figure 2.  Example of an error response record..........  20




















Murphy, Rieth & Stevens                                         [Page 3]


Internet Draft          5250 Telnet Enhancements           February 1998


2. Enhancing Telnet Negotiations

   The 5250 Telnet server enables clients to negotiate both terminal and
   printer device names through Telnet Environment Options Negotiations,
   defined in the Standards Track RFC 1572 [13].

   The purpose of RFC 1572 is to exchange environment information using
   a set of standard or custom variables.  By using a combination of
   both standard VAR's and custom USERVAR's, the 5250 Telnet server
   allows client Telnet to request a pre-defined specific device by
   name.

   If no pre-defined device exists then the device will be created, with
   client Telnet having the option to negotiate device attributes, such
   as the code page, character set, keyboard type, etc.

   Since printers can now be negotiated as a device name, new terminal
   types have been defined to request printers.  For example, you can
   now negotiate "IBM-3812-1" and "IBM-5553-B01" as valid TERMINAL-TYPE
   options [11].

   Finally, the 5250 Telnet server will allow exchange of user profile
   and password information.  If a valid combination of profile and
   password is received, then the client is allowed to bypass the sign-
   on panel.  The setting of the QRMTSIGN system value must be either
   *VERIFY or *SAMEPRF for the bypass of the sign-on panel to succeed.

























Murphy, Rieth & Stevens                                         [Page 4]


Internet Draft          5250 Telnet Enhancements           February 1998


3. Standard Telnet Option Negotiation

   Telnet server option negotiation typically begins with the issuance,
   by the server, of an invitation to engage in terminal type
   negotiation with the Telnet client (DO TERMINAL-TYPE) [11].  The
   client and server then enter into a series of sub-negotiations to
   determine the level of terminal support that will be used.  After the
   terminal type is agreed upon, the client and server will normally
   negotiate a required set of additional options (EOR [12], BINARY
   [10], SGA [15]) that are required to support "transparent mode" or
   full screen 5250/3270 block mode support.  As soon as the required
   options have been negotiated, the server will suspend further
   negotiations, and begin with initializing the actual virtual device
   on the AS/400.  A typical exchange might start like the following:

   AS/400 Telnet server              Enhanced Telnet client
   --------------------------        -------------------------
   IAC DO TERMINAL-TYPE        -->
                               <--   IAC WILL TERMINAL-TYPE
   IAC SB TERMINAL-TYPE SEND
   IAC SE                      -->
                                     IAC SB TERMINAL-TYPE IS
                               <--   IBM-5555-C01 IAC SE
   IAC DO EOR                  -->
                               <--   IAC WILL EOR
                               <--   IAC DO EOR
   IAC WILL EOR                -->
                                .
                                .
   (other negotiations)         .

   Actual bytes transmitted in the above example are shown in hex below.

   AS/400 Telnet server              Enhanced Telnet client
   --------------------------        -------------------------
   FF FD 18                    -->
                               <--   FF FB 18
   FF FA 18 01 FF F0           -->
                                     FF FA 18 00 49 42 4D 2D
                                     35 35 35 35 2D 43 30 31
                               <--   FF F0
   FF FD 19                    -->
                               <--   FF FB 19
                               <--   FF FD 19
   FF FB 19                    -->
                                .
                                .
   (other negotiations)         .



Murphy, Rieth & Stevens                                         [Page 5]


Internet Draft          5250 Telnet Enhancements           February 1998


   Some negotiations are symmetrical between client and server and some
   are negotiated in one direction only.  Also, it is permissible and
   common practice to bundle more than one response or request, or
   combine a request with a response, so the actual exchange may look
   different in practice to what is shown above.














































Murphy, Rieth & Stevens                                         [Page 6]


Internet Draft          5250 Telnet Enhancements           February 1998


4. Enhanced Telnet Option Negotiation

   In order to accommodate the new environment option negotiations, the
   server will bundle an environment option invitation along with the
   standard terminal type invitation request to the client.

   A client should either send a negative acknowledgment (WONT NEW-
   ENVIRON), or at some point after completing terminal type
   negotiations, but before completing the full set of negotiations
   required for transparent mode, engage in environment option sub-
   negotiation with the server.  A maximum or 1024 bytes of environment
   strings may be sent to the server.  A recommended sequence might look
   like the following:

   AS/400 Telnet server              Enhanced Telnet client
   --------------------------        -------------------------
   IAC DO NEW-ENVIRON
   IAC DO TERMINAL-TYPE        -->
   (2 requests bundled)
                               <--   IAC WILL TERMINAL-TYPE
                                     (do the terminal type
                                     sequence first)
   IAC SB TERMINAL-TYPE SEND
   IAC SE                      -->
                                     IAC SB TERMINAL-TYPE IS
                               <--   IBM-5555-C01 IAC SE
                                     (terminal type negotiations
                                     completed)
   IAC DO EOR                  -->
   (server will continue
   with normal transparent
   mode negotiations)
                               <--   IAC WILL NEW-ENVIRON
                                     (client goes back to the
                                     deferred NEW-ENVIRON request
                                     and defers the EOR)
   IAC SB NEW-ENVIRON SEND
   VAR IAC SE                  -->
                                     IAC SB NEW-ENVIRON IS
                                     VAR "USER" VALUE "JONES"
                                     VAR "DEVNAME" VALUE "MYDEVICE07"
                                     IAC SE

                               <--   IAC WILL EOR
                                .
                                .
     (other negotiations)       .




Murphy, Rieth & Stevens                                         [Page 7]


Internet Draft          5250 Telnet Enhancements           February 1998


   Actual bytes transmitted in the above example are shown in hex below.

   AS/400 Telnet server              Enhanced Telnet client
   --------------------------        -------------------------
   FF FD 27
   FF FD 18                    -->
   (2 requests bundled)
                               <--   FF FB 18
                                     (do the terminal type
                                     sequence first)
   FF FA 18 01 FF F0           -->
                                     FF FA 18 00 49 42 4D 2D
                                     35 35 35 35 2D 43 30 31
                               <--   FF F0
   FF FD 19                    -->
   (server will continue
   with normal transparent
   mode negotiations)
                               <--   FF FB 27
                                     (client goes back to the
                                     deferred NEW-ENVIRON request
                                     and defers the EOR)
   FF FA 27 01 00 FF F0        -->
                                     FF FA 27 00 00 55 53 45
                                     52 01 4A 4F 4E 45 53 00
                                     44 45 56 4E 41 4D 45 01
                                     4D 59 44 45 56 49 43 45
                                     30 37 FF F0
                               <--   FF FB 19
                                .
                                .
   (other negotiations)         .

   RFC 1572 defines 6 standard VAR's: USER, JOB, ACCT, PRINTER,
   SYSTEMTYPE, and DISPLAY.  The USER standard VAR will hold the value
   of the AS/400 user profile name to be used in auto-signon requests.
   The Telnet server will make no direct use of the additional 5 VAR's,
   nor are any of them required to be sent.  All standard VAR's and
   their values that are received by the Telnet server will be placed in
   a buffer, along with any USERVAR's received (described below), and
   made available to a registered initialization exit program to be used
   for any purpose desired.









Murphy, Rieth & Stevens                                         [Page 8]


Internet Draft          5250 Telnet Enhancements           February 1998


5. Enhanced Display Emulation Support

   RFC 1572 style USERVAR variables have been defined to allow a
   compliant Telnet client more control over the Telnet server virtual
   device on the AS/400.  These USERVAR's allow the client Telnet to
   create or select a previously created virtual device.  If the virtual
   device does not exist and must be created, then the USERVAR variables
   are used to create and initialize the device attributes.  If the
   virtual device already exists, the device attributes are modified.

   The USERVAR's defined to accomplish this are:

   USERVAR    VALUE              EXAMPLE           DESCRIPTION
   --------   ----------------   ----------------  -------------------
   DEVNAME    us-ascii char(x)   MYDEVICE07        Display device name
   KBDTYPE    us-ascii char(3)   USB               Keyboard type
   CODEPAGE   us-ascii char(y)   437               Code page
   CHARSET    us-ascii char(y)   1212              Character set

   x - up to a maximum of 10 characters
   y - up to a maximum of 5 characters

   For a description of the KBDTYPE, CODEPAGE and CHARSET parameters and
   their permissible values, refer to Chapter 8 in the Communications
   Configuration Reference [5] and also to Appendix C in National
   Language Support [16].

























Murphy, Rieth & Stevens                                         [Page 9]


Internet Draft          5250 Telnet Enhancements           February 1998


6. Enhanced Display Auto-Signon and Password Exchange

   Several 5250 Telnet server specific USERVAR's will be defined for
   auto-signon and password exchange.

   It should be noted that security of the password exchange cannot be
   guaranteed unless the network is physically protected or a trusted
   network (such as an intranet).

   Additional VAR's and USERVAR's have also been defined to allow an
   auto-signon user greater control over their startup environment,
   similar to what is supported using the Open Virtual Terminal
   (QTVOPNVT) API [3].

   The standard VAR's supported to accomplish this are:

   VAR        VALUE              EXAMPLE           DESCRIPTION
   --------   ----------------   ----------------  -------------------
   USER       us-ascii char(x)   USERXYZ           User profile name

   x - up to a maximum of 10 characters

   The custom USERVAR's defined to accomplish this are:

   USERVAR    VALUE              EXAMPLE           DESCRIPTION
   --------   ----------------   ----------------  -------------------
   IBMRSEED   binary(8)          8-byte hex field  Reserved
   IBMSUBSPW  binary(10)         10-byte hex field Password
   IBMCURLIB  us-ascii char(x)   QGPL              Current library
   IBMIMENU   us-ascii char(x)   MAIN              Initial menu
   IBMPROGRAM us-ascii char(x)   QCMD              Program to call

   x - up to a maximum of 10 characters

   The client can send the password for auto-signon using the
   "IBMSUBSPW" USERVAR.  RFC 1572 rules will need to be adhered to when
   transmitting the client password to the server.  Specifically, since
   a typical environment string is a variable length hexadecimal field,
   the hexadecimal fields are required to be escaped and/or byte stuffed
   according to the RFC 854 [8], where any single byte could be mis-
   construed as a Telnet IAC or other Telnet option negotiation control
   character.  The client must escape and/or byte stuff any bytes which
   could be seen as a RFC 1572 [13] option, specifically VAR, VALUE, ESC
   and USERVAR.







Murphy, Rieth & Stevens                                        [Page 10]


Internet Draft          5250 Telnet Enhancements           February 1998


   The following illustrates the exchange:

   AS/400 Telnet server             Enhanced Telnet client
   --------------------------       -------------------------------
   IAC DO NEW-ENVIRON          -->
                               <--  IAC WILL NEW-ENVIRON
   IAC SB NEW-ENVIRON SEND
   USERVAR "IBMRSEEDxxxxxxxx"
   USERVAR "IBMSUBSPW"
   VAR USERVAR IAC SE          -->
                                    IAC SB NEW-ENVIRON IS
                                    VAR "USER" VALUE "SMITH"
                                    USERVAR "IBMSUBSPW" VALUE "yyyyyyyy"
                               <--  IAC SE
                                .
                                .
   (other negotiations)         .

   In this example, "xxxxxxxx" is an 8-byte hexadecimal reserved value,
   "yyyyyyyyyy" is a 10-byte us-ascii client password.  If the password
   is not valid, then the sign-on panel is displayed.  If the password
   is expired, then the Change Password panel is displayed.

   Actual bytes transmitted in the above example are shown in hex below.

   AS/400 Telnet server             Enhanced Telnet client
   --------------------------       -------------------------------
   FF FD 27                    -->
                               <--  FF FB 27
   FF FA 27 01 03 49 42 4D
   52 53 45 45 44 78 78 78
   78 78 78 78 78 03 49 42
   4D 53 55 42 53 50 57 03
   00 FF F0                    -->
                                    FF FA 27 00 00 55 53 45 52 03
                                    53 4D 49 54 48 03 49 42 4D 53
                                    55 42 53 50 57 01 7A 7A 7A 7A
                               <--  7A 7A 7A 7A FF F0













Murphy, Rieth & Stevens                                        [Page 11]


Internet Draft          5250 Telnet Enhancements           February 1998


7. Device Name Collision Processing

   Device name collision occurs when a Telnet client sends the Telnet
   server a virtual device name that it wants to use, but that device is
   already in use on the server.  When this occurs, the Telnet server
   sends a request to the client asking it to try another device name.
   The environment option negotiation uses the USERVAR name of DEVNAME
   to communicate the virtual device name.  The following shows how the
   Telnet server will request the Telnet client to send a different
   DEVNAME when device name collision occurs.

   AS/400 Telnet server             Enhanced Telnet client
   --------------------------       -------------------------------
   IAC SB NEW-ENVIRON SEND
   VAR USERVAR IAC SE         -->

   Server requests all environment variables be sent.

                                    IAC SB NEW-ENVIRON IS USERVAR
                                    "DEVNAME" VALUE "MYDEVICE1"
                                    USERVAR "xxxxx" VALUE "xxx"
                                    ...
                              <--   IAC SE

   Client sends all environment variables, including DEVNAME.  Server
   tries to select device MYDEVICE1.  If the device is already in use,
   server requests DEVNAME be sent again.

   IAC SB NEW-ENVIRON SEND
   USERVAR "DEVNAME" IAC SE   -->

   Server sends a request for a single environment variable: DEVNAME

                                    IAC SB NEW-ENVIRON IS USERVAR
                              <--   "DEVNAME" VALUE "MYDEVICE2" IAC SE

   Client sends one environment variable, calculating a new value of
   MYDEVICE2.  If MYDEVICE2 is different from the last request, then
   server tries to select device MYDEVICE2, else server disconnects
   client.  If MYDEVICE2 is also in use, server will send DEVNAME request
   again, and keep doing so until it receives a device that is not in
   use, or the same device name twice in row.









Murphy, Rieth & Stevens                                        [Page 12]


Internet Draft          5250 Telnet Enhancements           February 1998


8. Enhanced Printer Emulation Support

   RFC 1572 style USERVAR variables have been defined to allow a
   compliant Telnet client more control over the Telnet server virtual
   device on the AS/400.  These USERVAR's allow the client Telnet to
   select a previously created virtual device or auto-create a new
   virtual device with requested attributes.

   This makes the enhancements available to any Telnet client that
   chooses to support the new negotiations.

   The USERVAR's defined to accomplish this are:

   USERVAR       VALUE            EXAMPLE           DESCRIPTION
   ------------- ---------------- ----------------  -------------------
   DEVNAME       us-ascii char(x) PRINTER1          Printer device name
   IBMIGCFEAT    us-ascii char(6) 2424J0            IGC feature (DBCS)
   IBMMSGQNAME   us-ascii char(x) QSYSOPR           *MSGQ name
   IBMMSGQLIB    us-ascii char(x) QSYS              *MSGQ library
   IBMFONT       us-ascii char(x) 12                Font
   IBMFORMFEED   us-ascii char(1) C | U | A         Formfeed
   IBMBUFFERSIZE us-ascii char(y) 4096              Reserved
   IBMTRANSFORM  us-ascii char(1) 1 | 0             Transform
   IBMMFRTYPMDL  us-ascii char(x) *IBM42023         Mfg. type and model
   IBMPPRSRC1    binary(1)        1-byte hex field  Paper source 1
   IBMPPRSRC2    binary(1)        1-byte hex field  Paper source 2
   IBMENVELOPE   binary(1)        1-byte hex field  Envelope
   IBMASCII899   us-ascii char(1) 1 | 0             ASCII 899 support
   IBMWSCSTNAME  us-ascii char(x) *NONE             WCS name
   IBMWSCSTLIB   us-ascii char(x) *LIBL             WCS library
   IBMIGCFEAT    us-ascii char(6) 2424J0            IGC feature (DBCS)

   x - up to a maximum of 10 characters
   y - up to a maximum of 5 characters

   The "IBM" prefix on the USERVAR's denotes AS/400 specific attributes.

   For a description of most of these parameters (drop the "IBM" from
   the USERVAR) and their permissible values, refer to Chapter 8 in the
   Communications Configuration Reference [5].











Murphy, Rieth & Stevens                                        [Page 13]


Internet Draft          5250 Telnet Enhancements           February 1998


   The IBMPPRSRC1, IBMPPRSRC2 and IBMENVELOPE custom USERVAR's do not
   map directly to their descriptions in Chapter 8 in the Communications
   Configuration Reference [5].  To map these, use the index listed
   here:

   IBMPPRSRC1    HEX     IBMPPRSRC2    HEX     IBMENVELOPE    HEX
   ----------   -----    ----------   -----    -----------   -----
   *NONE        'FF'X    *NONE        'FF'X    *NONE         'FF'X
   *LETTER      '01'X    *LETTER      '01'X    *B5           '06'X
   *LEGAL       '02'X    *LEGAL       '02'X    *MONARCH      '09'X
   *EXECUTIVE   '03'X    *EXECUTIVE   '03'X    *NUMBER9      '0A'X
   *A4          '04'X    *A4          '04'X    *NUMBER10     '0B'X
   *A5          '05'X    *A5          '05'X    *C5           '0C'X
   *B5          '06'X    *B5          '06'X    *DL           '0D'X
   *CONT80      '07'X
   *CONT132     '08'X



































Murphy, Rieth & Stevens                                        [Page 14]


Internet Draft          5250 Telnet Enhancements           February 1998


9. Telnet Printer Terminal Types

   New Telnet options are defined for the printer pass-through mode of
   operation.  To enable printer pass-through mode, both the client and
   server must agree to at least support the Transmit-Binary, End-Of-
   Record, and Terminal-Type Telnet options.  The following are new
   terminal types for printers:

   TERMINAL-TYPE  DESCRIPTION
   -------------  -------------------
   IBM-5553-B01   Double-Byte printer
   IBM-3812-1     Single-Byte printer

   Specific characteristics of the IBM-5553-B01 or IBM-3812-1 printers
   are specified through the USERVAR IBMMFRTYPMDL, which specifies the
   manufacturer type and model.

   An example of a typical negotiation process to establish printer
   pass-through mode of operation is shown below.  In this example, the
   server initiates the negotiation by sending the DO TERMINAL-TYPE
   request.






























Murphy, Rieth & Stevens                                        [Page 15]


Internet Draft          5250 Telnet Enhancements           February 1998


   AS/400 Telnet server             Enhanced Telnet client
   --------------------------       -------------------------------
   IAC DO TERMINAL-TYPE
   IAC DO NEW-ENVIRON         -->
                              <--   IAC WILL TERMINAL-TYPE
   IAC SB TERMINAL-TYPE SEND
   IAC SE                     -->
                                    IAC SB TERMINAL-TYPE IS IBM-3812-1
                              <--   IAC SE
   IAC DO EOR                 -->
                              <--   IAC WILL EOR
                              <--   IAC WILL NEW-ENVIRON
   IAC SB NEW-ENVIRON SEND
   VAR USERVAR IAC SE         -->
                                    IAC SB NEW-ENVIRON IS
                                    USERVAR "DEVNAME" VALUE "PCPRINTER"
                                    USERVAR "IBMMSGQNAME" VALUE "QSYSOPR"
                                    USERVAR "IBMMSGQLIB" VALUE "*LIBL"
                                    USERVAR "IBMTRANSFORM" VALUE "0"
                                    USERVAR "IBMFONT" VALUE "12"
                                    USERVAR "IBMFORMFEED" VALUE "C"
                                    USERVAR "IBMBUFFERSIZE" VALUE "1024"
                                    USERVAR "IBMPPRSRC1" VALUE ESC '01'X
                                    USERVAR "IBMPPRSRC2" VALUE '04'X
                                    USERVAR "IBMENVELOPE" VALUE IAC 'FF'X
                              <--   IAC SE
   IAC DO BINARY              -->
                              <--   IAC WILL BINARY


   Some points about the above example.  The IBMPPRSRC1 value requires
   escaping the value using ESC according to RFC 1572 [13].  The
   IBMPPRSRC2 does not require an ESC character since '04'X has no
   conflict with RFC 1572 options.  Finally, to send 'FF'X for the
   IBMENVELOPE value, escape the 'FF'X value by using another 'FF'X
   (called "doubling"), so as not to have the value interpreted as a
   Telnet character per RFC 854 [8].

   Actual bytes transmitted in the above example are shown in hex below.












Murphy, Rieth & Stevens                                        [Page 16]


Internet Draft          5250 Telnet Enhancements           February 1998


   AS/400 Telnet server             Enhanced Telnet client
   --------------------------       -------------------------------
   FF FD 18
   FF FD 27                    -->
                               <--  FF FB 18
   FF FA 27 01 FF F0
                               -->  FF FA 18 00 49 42 4D 2D 33 38
                               <--  31 32 2D 31 FF F0
   FF FD 19                    -->
                                    FF FB 19
                               <--  FF FB 27
   FF FA 27 01 00 03 FF F0     -->
                                    FF FA 27 00 03 44 45 56 4E 41
                                    4D 45 01 50 43 50 52 49 4E 54
                                    45 52 03 49 42 4D 4D 53 47 51
                                    4E 41 4D 45 01 51 53 59 53 4F
                                    50 52 03 49 42 4D 4D 53 47 51
                                    4C 49 42 01 2A 4C 49 42 4C 03
                                    49 42 4D 54 52 41 4E 53 46 4F
                                    52 4D 01 30 03 49 42 4D 46 4F
                                    4E 54 01 31 32 03 49 42 4D 46
                                    4F 52 4D 46 45 45 44 01 43 03
                                    49 42 4D 42 55 46 46 45 52 53
                                    49 5A 45 01 31 30 32 34 03 49
                                    42 4D 50 50 52 53 52 43 31 01
                                    02 01 03 49 42 4D 50 50 52 53
                                    52 43 32 01 04 03 49 42 4D 45
                                    4E 56 45 4C 4F 50 45 01 FF FF
                               <--  FF F0
   FF FD 00                    -->
                               <--  FF FB 00




















Murphy, Rieth & Stevens                                        [Page 17]


Internet Draft          5250 Telnet Enhancements           February 1998


10. Telnet Printer Startup Response Record for Printer Emulators

   Once Telnet negotiation for a 5250 pass-through mode is completed,
   the 5250 Telnet server will initiate a virtual printer power-on
   sequence on behalf of the Telnet client.  The Telnet server will
   supply a Startup Response Record to the Telnet client with the status
   of the printer power-on sequence, indicating success or failure of
   the virtual printer power-on sequence.

   This section shows an example of two Startup Response Records.  The
   source device is a type 3812 model 01 printer with name "PCPRINTER"
   on the target system "TARGET".

   Figure 1 shows an example of a successful response; Figure 2 shows an
   example of an error response.




































Murphy, Rieth & Stevens                                        [Page 18]


Internet Draft          5250 Telnet Enhancements           February 1998


10.1 Example of a Success Response Record

   The response record in Figure 1 was sent by an AS/400 at Release
   V4R2.  It is an example of the target sending back a successful
   Startup Response Record.

   +--------------------------------------------------------------------+
   |       +-----  Pass-Through header                                  |
   |       |          +---  Response data                               |
   |       |          |            +----  Start diagnostic information  |
   |       |          |            |                                    |
   | +----------++----------++---------------------------------------   |
   | |          ||          ||                                          |
   | 004912A090000560060020C0003D0000C9F9F0F2E3C1D9C7C5E34040D7C3D7D9   |
   |                                 |      | T A R G E T     P C P R   |
   |                                 +------+                           |
   |                           Response Code (I902)                     |
   |                                                                    |
   | ----------------------------------------------------------------   |
   |                                                                    |
   | C9D5E3C5D9400000000000000000000000000000000000000000000000000000   |
   |  I N T E R                                                         |
   |                                                                    |
   |                  +------- End of diagnostic information            |
   |                  |                                                 |
   | -----------------+                                                 |
   |                  |                                                 |
   | 000000000000000000                                                 |
   +--------------------------------------------------------------------+
    Figure 1. Example of a success response record.

   - '0049'X = Length pass-through data, including this length field
   - '12A0'X = GDS LU6.2 header
   - '90000560060020C0003D0000'X = Fixed value fields
   - 'C9F9F0F2'X                 = Response Code (I902)
   - 'E3C1D9C7C5E34040'X         = System Name (TARGET)
   - 'D7C3D7D9C9D5E3C5D940'X     = Object Name (PCPRINTER)














Murphy, Rieth & Stevens                                        [Page 19]


Internet Draft          5250 Telnet Enhancements           February 1998


10.2 Example of an Error Response Record

   The response record in Figure 2 is one that reports an error.  The
   virtual device named "PCPRINTER", is not available on the target
   system "TARGET", because the device is not available.  You would
   normally see this error if the printer was already assigned to
   another Telnet session.

   +--------------------------------------------------------------------+
   |       +-----  Pass-Through header                                  |
   |       |          +---  Response data                               |
   |       |          |            +----  Start diagnostic information  |
   |       |          |            |                                    |
   | +----------++----------++---------------------------------------   |
   | |          ||          ||                                          |
   | 004912A09000056006008200003D0000F8F9F0F2E3C1D9C7C5E34040D7C3D7D9   |
   |                                 |      | T A R G E T     P C P R   |
   |                                 +------+                           |
   |                           Response Code (8902)                     |
   |                                                                    |
   | ----------------------------------------------------------------   |
   |                                                                    |
   | C9D5E3C5D9400000000000000000000000000000000000000000000000000000   |
   |  I N T E R                                                         |
   |                                                                    |
   |                  +------- End of diagnostic information            |
   |                  |                                                 |
   | -----------------+                                                 |
   |                  |                                                 |
   | 000000000000000000                                                 |
   +--------------------------------------------------------------------+
    Figure 2. Example of an error response record.

   - '0049'X = Length pass-through data, including this length field
   - '12A0'X = GDS LU6.2 header
   - '9000056006008200003D0000'X = Fixed value fields
   - 'F8F9F0F2'X                 = Response Code (8902)
   - 'E3C1D9C7C5E34040'X         = System Name (TARGET)
   - 'D7C3D7D9C9D5E3C5D940'X     = Object Name (PCPRINTER)












Murphy, Rieth & Stevens                                        [Page 20]


Internet Draft          5250 Telnet Enhancements           February 1998


10.3 Response Codes

   The Start-Up Response Record success response codes:

   CODE    DESCRIPTION
   ----    ------------------------------------------------------
   I901    Virtual device has less function than source device
   I902    Session successfully started
   I903    Session successfully started.
   I906    Automatic sign-on requested, but not allowed.
           Session still allowed; a sign-on screen will be
           coming.

   The Start-Up Response Record error response codes:

   CODE    DESCRIPTION
   ----    ------------------------------------------------------
   2702    Device description not found.
   2703    Controller description not found.
   2777    Damaged device description.
   8901    Device not varied on.
   8902    Device not available.
   8903    Device not valid for session.
   8906    Session initiation failed.
   8907    Session failure.
   8910    Controller not valid for session.
   8916    No matching device found.
   8917    Not authorized to object.
   8918    Job canceled.
   8920    Object partially damaged.
   8921    Communications error.
   8922    Negative response received.
   8923    Start-up record built incorrectly.
   8925    Creation of device failed.
   8928    Change of device failed.
   8929    Vary on or vary off failed.
   8930    Message queue does not exist.
   8934    Start-up for S/36 WSF received.
   8935    Session rejected.
   8936    Security failure on session attempt.
   8937    Automatic sign-on rejected.
   8940    Automatic configuration failed or not allowed.
   I904    Source system at incompatible release.








Murphy, Rieth & Stevens                                        [Page 21]


Internet Draft          5250 Telnet Enhancements           February 1998


11. Author's Note


   Discussion of this draft should occur in one of these mailing lists:

      TN3270E List (Roger Fajman raf@cu.nih.gov).  Send subscription
      requests as e-mail with "subscribe tn3270e your_full_name" to
      listserv@list.nih.gov.

      Midrange-L List (David Gibbs david@midrange.com).  Send
      subscription requests as email with "subscribe midrange-l
      your_internet_address" to majordomo@midrange.com.

      Telnet Working Group Mailing List:  Send subscription requests as
      email with "subscribe telnet-ietf" to telnet-ietf-
      request@bsdi.com.

12. References

   [1]  IBM, "IBM 5250 Information Display System, Functions Reference
   Manual", SA21-9247-6, March 1987.

   [2]  IBM, "5494 Remote Control Unit, Functions Reference", SC30-
   3533-03, November 1994.

   [3]  IBM, "AS/400 System API Reference", SC41-5801, February 1998.

   [4]  IBM, "AS/400 TCP/IP Configuration and Reference", SC41-5420-01,
   February 1998.

   [5]  IBM, "AS/400 Communications Configuration", SC41-5401-00, August
   1997.

   [6] IBM, "SNA Formats", GA27-3136-13, November 1993.

   [7] IBM, "Using the Pageprinter 3812 with System/36 or System/38",
   S544-3343-01, September 1997.

   [8]  Postel, J. and J. Reynolds, "TELNET PROTOCOL SPECIFICATION", RFC
   854, USC/Information Sciences Institute, May 1983.

   [9]  Postel, J. and J. Reynolds, "TELNET OPTION SPECIFICATIONS", RFC
   855, USC/Information Sciences Institute, May 1983.

   [10]  Postel, J. and J. Reynolds, "TELNET BINARY TRANSMISSION", RFC
   856, USC/Information Sciences Institute, May 1983.

   [11]  VanBokkeln, J., "Telnet Terminal-Type Option", RFC 1091, FTP



Murphy, Rieth & Stevens                                        [Page 22]


Internet Draft          5250 Telnet Enhancements           February 1998


   Software, Inc., February 1989.

   [12]  Postel, J. and J. Reynolds, "TELNET END OF RECORD OPTION", RFC
   885, USC/Information Sciences Institute, December 1983.

   [13]  Alexander, S., "Telnet Environment Option", RFC 1572, Lachman
   Technology, Inc., January 1994.

   [14]  Chmielewski, P., "5250 Telnet Interface", RFC 1205, IBM
   Corporation, February 1991.

   [15]  Postel, J. and J. Reynolds, "TELNET SUPPRESS GO AHEAD OPTION",
   RFC 858, Information Sciences Institute, May 1983.

   [16]  IBM, "AS/400 National Language Support", SC41-5101-01, February
   1998.

   [17] Reynolds, J., and J. Postel, "Assigned Numbers", RFC 1700, STD
   2, USC/Information Sciences Institute, October 1994.

13. Security Considerations

   Security considerations of passwords are discussed in Section 6.

14. Author's Address

   Thomas E. Murphy, Jr.                 Phone:  (607) 752-5482
   IBM Corporation                       Fax:    (607) 752-5421
   1701 North Street                     Email:  murphyte@us.ibm.com
   Endicott, NY 13760

   Paul F. Rieth                         Phone:  (607) 752-5474
   IBM Corporation                       Fax:    (607) 752-5421
   1701 North Street                     Email:  rieth@us.ibm.com
   Endicott, NY 13760

   Jeffrey S. Stevens                    Phone:  (607) 752-5488
   IBM Corporation                       Fax:    (607) 752-5421
   1701 North Street                     Email:  jssteven@us.ibm.com
   Endicott, NY 13760











Murphy, Rieth & Stevens                                        [Page 23]


Internet Draft          5250 Telnet Enhancements           February 1998


15. Relation to Other RFC's

   UPDATES

      This draft is an update to RFC 1205 [14], which describes the 5250
      Telnet Interface.  This update enhances that description to
      include device negotiation as well as printer support.

      This draft makes use of RFC 1572 [13] to enhance communications
      with 5250 Telnet clients.  RFC 1572 is currently on the Standards
      Track as a Proposed Standard, and is listed in Assigned Numbers
      [17].







































Murphy, Rieth & Stevens                                        [Page 24]


