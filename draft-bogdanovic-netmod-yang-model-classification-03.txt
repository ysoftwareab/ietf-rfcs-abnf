



NETMOD                                                     D. Bogdanovic
Internet-Draft                                          Juniper Networks
Intended status: Informational                                 B. Claise
Expires: December 5, 2015                                      C. Moberg
                                                     Cisco Systems, Inc.
                                                            June 3, 2015


                       YANG model classification
          draft-bogdanovic-netmod-yang-model-classification-03

Abstract

   The YANG [RFC6020] data modeling language is currently being
   considered for a wide variety of applications throughout the
   networking industry at large.  Many standards organizations and open
   source projects are using YANG to develop and publish models of
   configuration, state data and operations for a wide variety of
   networking applications.  At the same time, there is currently no
   well-known terminology to categorize the various types of YANG models
   that are being worked on.

   A consistent terminology would help with the categorization of
   models, assist in the analysis the YANG data modeling efforts in the
   IETF and in other places, and bring clarity to the YANG-related
   discussions between the different groups.

   This document describes a set of concepts and associated terms to
   support consistent classification of YANG models.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on December 5, 2015.





Bogdanovic, et al.      Expires December 5, 2015                [Page 1]

Internet-Draft          YANG model classification              June 2015


Copyright Notice

   Copyright (c) 2015 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  First Dimension: YANG Data Model Layering . . . . . . . . . .   3
     2.1.  Network Service YANG Data Models  . . . . . . . . . . . .   4
     2.2.  Network Element YANG Data models  . . . . . . . . . . . .   5
   3.  Second Dimension: Model Type  . . . . . . . . . . . . . . . .   6
     3.1.  Standard YANG model . . . . . . . . . . . . . . . . . . .   7
     3.2.  Standard Extension YANG Model . . . . . . . . . . . . . .   7
     3.3.  Proprietary Extension to Standard YANG Model  . . . . . .   7
     3.4.  Vendor configuration model  . . . . . . . . . . . . . . .   7
     3.5.  Proprietary YANG Model  . . . . . . . . . . . . . . . . .   9
   4.  Typical Architecture  . . . . . . . . . . . . . . . . . . . .   9
   5.  IETF, Other SDOs, and open source . . . . . . . . . . . . . .  10
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .  11
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  11
   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  11
   9.  Change log [RFC Editor: Please remove]  . . . . . . . . . . .  11
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  12
     10.1.  Normative References . . . . . . . . . . . . . . . . . .  12
     10.2.  Informative References . . . . . . . . . . . . . . . . .  12
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  13

1.  Introduction

   The Internet Engineering Steering Group (IESG) has been actively
   encouraging IETF working groups to use the NETCONF [RFC6241] and YANG
   standards for configuration management purposes, especially in new
   charters [Writable-MIB-Module-IESG-Statement].

   YANG is also gaining wide acceptance as the de-facto standard
   modeling language in the broader industry.  This extends beyond the




Bogdanovic, et al.      Expires December 5, 2015                [Page 2]

Internet-Draft          YANG model classification              June 2015


   IETF, including many standard development organizations, industry
   consortia, ad hoc groups, and open source projects.

   There are no clear guidelines on how to classify the layering of YANG
   models according to abstraction, or how to classify models along the
   continuum spanning industry standard and vendor-specific models.

   This document presents a set of concepts and terms to form a useful
   taxonomy for consistent classification of YANG models in two
   dimensions:

   o  Based on the level of abstraction in the model

   o  Based on the applicability of the model

   The two categories are covered in the next two sections.

2.  First Dimension: YANG Data Model Layering

   Model developers have taken two approaches to development: top-down
   and bottom-up.  The top-down approach starts with high level
   abstractions modeling business or customer requirements and maps them
   to specific networking technologies.  The bottom-up approach starts
   with fundamental networking technologies and maps them into more
   abstract constructs.

   There are currently no specific requirements on, or well-defined best
   practices around the develoment of models.  For the purpose of this
   document we assume that both approaches (bottom-up and top-down) will
   be used as they both provide benefits that appeals to different
   groups.

   For layering purposes, this documents suggests the classification of
   data models into two distinct abstraction layers:

   o  Network Element YANG Models describe the configuration, state data
      and operations of a specific device-centric technology or feature.

   o  Network Service YANG Models describes the configuration, state
      data and operations of an abstract representation of a service
      implemented on one or multiple network elements

   Figure 1 illustrates the application of YANG models at different
   layers of abstraction.  Layering of models allow for reusability of
   existing lower layer models in higher level models while limiting
   duplication of features across layers.





Bogdanovic, et al.      Expires December 5, 2015                [Page 3]

Internet-Draft          YANG model classification              June 2015


   For model developers, per-layer modeling allows for separation of
   concern across editing teams focusing on specific areas.

   As an example, experience from the IETF shows that creating useful
   network element YANG models for e.g routing or switching protocols
   requires teams that include developers with experience from
   implementing those protocols.

   On the other hand, network service models are best developed by
   people experienced in defining network services for consumption by
   programmers developing e.g. flow-through provisioning systems or
   self-service portals.


                        +-----------------------+
                        |                       |
                        |        OSS/BSS        |
                        |                       |
                        +-----------------------+

      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      Network Service YANG data models

           +------------+      +-------------+      +-------------+
           |            |      |             |      |             |
           |  - VPWS    |      |   - VPLS    |      |    L3VPN    |
           |  - L2VPN   |      |   - L2VPN   |      |             |
           |            |      |             |      |             |
           +------------+      +-------------+      +-------------+

      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      Network Element YANG data models

      +------------+    +-----------+   +-------------+  +-----------+
      |            |    |           |   |             |  |           |
      |     MPLS   |    |    BGP    |   |  Interface  |  |  Routing  |
      |            |    |           |   |             |  |           |
      +------------+    +-----------+   +-------------+  +-----------+

      Fig. 1 YANG Model Layers


2.1.  Network Service YANG Data Models

   Network Service YANG Data Models are created to describe the
   characteristics of a service, as agreed upon with consumers of that
   service.  That is, a service model does not expose the detailed
   configuration parameters of all participating network elements, but



Bogdanovic, et al.      Expires December 5, 2015                [Page 4]

Internet-Draft          YANG model classification              June 2015


   describes an abstract model that allows instances of the service to
   be decomposed into instance data according to the Network Element
   data models of the participating network elements.  The service-to-
   element decomposition is a separate process with details depending on
   how the network operator chooses to realize the service.

   As an example, the Network Service model included in
   http://datatracker.ietf.org/doc/draft-l3vpn-service-yang/ provides an
   abstracted view of a Layer 3 IP VPN service configuration components.
   An orchestrator receives operations on instances according to the
   service model as input and decomposes the data into specific Network
   Element models to configure the participating network elements to
   perform the service.

   Network Service YANG models defines complete service to be consumed
   by external systems.  These models are commonly designed, developed
   and deployed by network infrastructure teams.

   YANG allows for different design patterns to describe network
   services, ranging from monolithic to component-based approaches.

   The monolithic approach captures the entire service in a single model
   and does not put focus on reusability of internal data definitions
   and groupings.  The monolithic approach has the advantages of single-
   purpose development including speed at the expense of reusability.

   The component-based approach captures device-centric features (e.g.
   the definition of a VRF, routing protocols, or packet filtering) in a
   vendor-independent manner.  The components are designed for reuse
   across many services.  The set of components required for a specific
   service is then composed into the higher-level service.  The
   component-based approach has the advantages of modular development
   including a higher degree of reusability at the expense of initial
   speed.

   As an example, an L2VPN service can be built on many different types
   of transport network technologies, including e.g.  MPLS or carrier
   ethernet.  A component-based approach would allow for reuse of e.g.
   UNI-interface definitions independent of the underlying transport
   network (e.g.  MEF UNI interface or MPLS interface).  The monolithic
   approach would assume a specific set of transport technologies and
   interface definitions.

2.2.  Network Element YANG Data models

   Network Element YANG Data Models describe the configuration, state
   data and operations of a network device as defined by the vendor of
   that device.  The models are commonly structured around features of



Bogdanovic, et al.      Expires December 5, 2015                [Page 5]

Internet-Draft          YANG model classification              June 2015


   the device, e.g. interface configuration [RFC7223], OSPF
   configuration [I-D.ietf-ospf-yang], and firewall rules definitions
   [I-D.ietf-netmod-acl-model].  The model provides a coherent
   representation of what is commonly a very mixed software environment
   that consists of the operating system and applications running on the
   device.

   The decomposition, ordering and execution of changes to the operating
   system, and application configuration is the task of the management
   framework that implements the YANG model.

3.  Second Dimension: Model Type

   At very high level, models can be divided into proprietary and
   standard.  Each vendor, consortium, open source project can publish
   their models and those are considered proprietary models.  When an
   SDO, such as IETF or IEEE, publishes an accepted model document, then
   this is a standard model.  There are use cases where a consortium has
   published work which de facto became standard, such as Linux kernel,
   but for the clarity in this document, authors are making a separation
   between models based on the above description.

      Standard YANG Model: YANG model defined by an Standard Development
      organization (SDO), e.g.  IETF, IEEE.

      Standard Extension YANG Model: YANG Model that describes a
      standard extension, example route filter, to standard filter YANG
      model.

      Proprietary Extension to Standard YANG Model: As the Standard YANG
      Models contains a subset of all the Vendor Configuration Models,
      proprietary extensions must complement the Standard YANG Models to
      represent a Vendor Configuration Model.

      Proprietary YANG Model: A non Standard YANG Model.

      Vendor Configuration Model: It describes all configurable
      capabilities of the device and what device vendor exposes for
      configuration.  The vendor configuration model can be CLI or YANG-
      based.

   As mentioned earlier in this document, there are two ways of
   designing models, top down and bottom up with one restriction.
   Everything is dependent on the vendor data model.  That model
   describes all the possibilities and if model developers prefers, they
   can use vendor model only to design service components, network
   service and business service.  Using vendor model provides all
   capabilities today, but it comes with restrictions of portability



Bogdanovic, et al.      Expires December 5, 2015                [Page 6]

Internet-Draft          YANG model classification              June 2015


   between vendors and to certain extent devices.  On the other hand,
   only standard models and standard extensions can be used, but this
   might result in less feature rich or less efficient services.
   Service model developer has a choice to reuse service components or
   write a model completely based on vendor data model.

3.1.  Standard YANG model

   With YANG we have a common language, that enables different
   communities to express data models that are widely understandable
   without lot of additional explanation.  This enables different
   groups, such as IETF, to standardize data models, defined as an IETF
   RFC, and vendors to support them, which will make it easier to for
   network operators to manage their network configuration
   programmatically.  The Standard YANG Models can distinguished between
   the core YANG models, such as the YANG Data Model for Interface
   Management [RFC7223], and the technology specific YANG models, such
   as the Configuration Data Model for the IP Flow Information Export
   (IPFIX) and Packet Sampling (PSAMP) Protocols [RFC6728].

3.2.  Standard Extension YANG Model

   Standard Extension is the conditional portion of a Standard YANG
   Model, expressed with the feature, if-feature, augment YANG
   statements [RFC6020].  An example of such standard extension is
   policy based routing (PBR).  PBR is found in many vendor
   implementations and have many common features, but not all vendors
   support PBR on all of their devices.

3.3.  Proprietary Extension to Standard YANG Model

   Proprietary extension is a conditional portion of a Standard YANG
   Model, expressed with feature, if-feature, augment YANG statements
   [RFC6020].  Proprietary extensions are required as the Standard YANG
   model will not cover all the possible configuration parameters of the
   different vendors.  Proprietary extension can be a feature depending
   on hardware platform capabilities and it is not available by other
   vendors.  Such an example could be match condition for packet
   classification used for PBR.

3.4.  Vendor configuration model

   Base model for all other models is the vendor configuration model.
   It describes all configurable capabilities of the device and what
   device vendor exposes for configuration.

   The standard configuration model is a subset of vendor configuration
   model.  The standard configuration model can be broken into base



Bogdanovic, et al.      Expires December 5, 2015                [Page 7]

Internet-Draft          YANG model classification              June 2015


   model and standard extension models, where the base is common data
   model and standard extensions are standard features that are not
   implemented by all vendors.  Example of standard base model is Access
   Control List and routing filter is a standard extension on ACL.  Or
   another example: encryption algorithm is standard feature, but the
   different types, like md5, hmac-md5, hmac-sha1, etc are standard
   extensions, as it is not that all vendors have all encryption
   algorithm types implemented.

   Although all vendors provide very similar functionality using
   standards, implementations are different.  One of basic examples are
   dynamic routing protocols.  We can see today two main types of
   routing protocol configuration.

      protocol centric - all the protocol related config is contained
      with the protocol itself.  Especially in case of multiple
      instances of the routing protocol running in different routing-
      instances (routing-instance as described in core routing model
      [I-D.ietf-netmod-routing-cfg]), all the routing-instance protocol
      config is contained in the default routing instance.

               Router ospf 10
               Default-metric 100
               Address-family ipv4 vrf VRF1
                   Network x.x.x.x area 0

               Address-family ipv4 vrf VRF2
                   Network x.x.x.x area 0

               Address-family ipv4
                   Network x.x.x.x area 1

      In term of YANG model, the routing protocol configuration will be
      defined within the default routing-instance and the routing-
      protocol config will contain multiple instances referring to other
      routing-instances.

      VRF centric - All the protocol related config for a routing-
      instance is contained within this routing-instance.












Bogdanovic, et al.      Expires December 5, 2015                [Page 8]

Internet-Draft          YANG model classification              June 2015


               Routing-instance VRF1 {
                 Protocols isis {

                 }
               }
               Routing-instance VRF2 {
                 Protocols isis {

                 }
               }

      In terms of YANG model, the routing protocol configuration for a
      routing-instance will be defined within the associated routing-
      instance.

      The bottom line message is that, even if YANG models are
      standardized, they will provide different CLI outcomes, simply
      because the CLI among vendors is not standardized.

3.5.  Proprietary YANG Model

   While waiting for the Standard YANG Models to be published, the
   different vendors might offer Proprietary YANG Models.

4.  Typical Architecture


























Bogdanovic, et al.      Expires December 5, 2015                [Page 9]

Internet-Draft          YANG model classification              June 2015


            +--------------------------------------------------------+
            |                      OSS/BSS                           |
            +--------------------------------------------------------+

            +--------------------------------------------------------+
            | Orchestrator                                           |
            |   +------------------------------------------------+   |
            |   | Network Service Model                          |   |
            |   |                                                |   |
            |   +------------------------------------------------+   |
            +--------------------------------------------------------+

            +--------------------------------------------------------+
            | Network Element                                        |
            |                             |                          |
            |  +-----------------------+  |  +-------------------+   |
            |  | Standard YANG model   |  |  |   Proprietary     |   |
            |  |                       |  |  |   YANG Model      |   |
            |  +-----------------------+  |  |                   |   |
            |                             |  |                   |   |
            |  +-----------------------+  |  |                   |   |
            |  | Proprietary Extension |  |  |                   |   |
            |  | To YANG Standard      |  |  |                   |   |
            |  | Model                 |  |  |                   |   |
            |  +-----------------------+  |  +-------------------+   |
            |                             |                          |
            |  +-------------------------------------------------+   |
            |  |          Vendor Configuration Model             |   |
            |  +-------------------------------------------------+   |
            +--------------------------------------------------------+

                            Fig. 2 Typical Architecture



   The OSS/BSS may contains business related models.  Those models,
   which may or may not be written in YANG, are outside the scope of the
   IETF work

5.  IETF, Other SDOs, and open source

   IETF, as a standard defining organization (SDO), is well positioned
   to standardize Network Element YANG models.  With a wide range of
   expertise found within its working groups focused on those technology
   definitions.  As IETF participants implement those protocols, they
   have deep expertise about the implementation and finding a common
   base standard configuration model between vendors should be a very
   viable goal.



Bogdanovic, et al.      Expires December 5, 2015               [Page 10]

Internet-Draft          YANG model classification              June 2015


   In some situation where the protocols are standardized by different
   SDOs, those SDOs should be responsible for its YANG data modeling
   effort.  For example, the IETF has transferred the responsibility for
   some IEEE technology-related MIB modules to the IEEE 802.1 and 802.3
   Working Group [RFC4663], [RFC7448].  Similarly, the IEEE should be
   responsible for similar YANG data modeling efforts.

   Developing Network Service YANG Models requires network operations
   expertise.  When those operators participate in IETF work, the right
   working group can be formed, and those Service YANG Models can be
   developed within IETF.  However, some other groups, like Metro
   Ethernet Forum or CableLabs, could be better positioned for service
   modeling related to their area of expertise.

   Today there are many open source projects and some of them are
   becoming de facto standards, like the Linux kernel.  Many such open
   source projects, like Open Daylight, OpenStack, etc, are doing very
   good work and their work is being accepted and deployed in production
   environments.  They bring a lot of very valuable experience to other
   groups.  From IETF perspective, if there is such a work present, it
   can be used as a very good starting point for modeling within IETF.

6.  Security Considerations

   At this stage, authors of the draft didn't look into security
   considerations.

7.  IANA Considerations

   This document requests no action by IANA.

8.  Acknowledgements

   Thanks to David Ball for his enlightenments on Metro Ethernet Forum
   service aspects.

9.  Change log [RFC Editor: Please remove]

   version 1: restructure the document, add the two dimensions, add the
   interaction with the different SDOs and opensource projects, add the
   definitions.

   version 2: added definitions for config and service models clarified
   second dimension of model classification.  fixed typos







Bogdanovic, et al.      Expires December 5, 2015               [Page 11]

Internet-Draft          YANG model classification              June 2015


10.  References

10.1.  Normative References

   [RFC6020]  Bjorklund, M., "YANG - A Data Modeling Language for the
              Network Configuration Protocol (NETCONF)", RFC 6020,
              October 2010.

10.2.  Informative References

   [I-D.ietf-netmod-acl-model]
              Bogdanovic, D., Sreenivasa, K., Huang, L., and D. Blair,
              "Network Access Control List (ACL) YANG Data Model",
              draft-ietf-netmod-acl-model-02 (work in progress), March
              2015.

   [I-D.ietf-netmod-routing-cfg]
              Lhotka, L. and A. Lindem, "A YANG Data Model for Routing
              Management", draft-ietf-netmod-routing-cfg-19 (work in
              progress), May 2015.

   [I-D.ietf-ospf-yang]
              Yeung, D., Qu, Y., Zhang, J., Bogdanovic, D., and K.
              Sreenivasa, "Yang Data Model for OSPF Protocol", draft-
              ietf-ospf-yang-00 (work in progress), March 2015.

   [RFC4663]  Harrington, D., "Transferring MIB Work from IETF Bridge
              MIB WG to IEEE 802.1 WG", RFC 4663, September 2006.

   [RFC6241]  Enns, R., Bjorklund, M., Schoenwaelder, J., and A.
              Bierman, "Network Configuration Protocol (NETCONF)", RFC
              6241, June 2011.

   [RFC6728]  Muenz, G., Claise, B., and P. Aitken, "Configuration Data
              Model for the IP Flow Information Export (IPFIX) and
              Packet Sampling (PSAMP) Protocols", RFC 6728, October
              2012.

   [RFC7223]  Bjorklund, M., "A YANG Data Model for Interface
              Management", RFC 7223, May 2014.

   [RFC7448]  Taylor, T. and D. Romascanu, "MIB Transfer from the IETF
              to the IEEE 802.3 WG", RFC 7448, February 2015.

   [Writable-MIB-Module-IESG-Statement]
              "Writable MIB Module IESG Statement",
              <https://www.ietf.org/iesg/statement/writable-mib-
              module.html>.



Bogdanovic, et al.      Expires December 5, 2015               [Page 12]

Internet-Draft          YANG model classification              June 2015


Authors' Addresses

   Dean Bogdanovic
   Juniper Networks

   Email: deanb@juniper.net


   Benoit Claise
   Cisco Systems, Inc.

   Email: bclaise@cisco.com


   Carl Moberg
   Cisco Systems, Inc.

   Email: camoberg@cisco.com

































Bogdanovic, et al.      Expires December 5, 2015               [Page 13]
