profile = x-name / iana-token

x-name = ("x-" / "X-") 1*(ALPHA / DIGIT / "-")
          ; Reservered for experimental use, not intended for released
          ; products, or for use in bilateral agreements.

iana-token = <a publicly-defined extension token, registered
                     with IANA, as specified in Section 9 of this
                     document>


contentline  = [group "."] name *(";" *WSP param) ":" value CRLF
              ; When parsing a content line, folded lines must first
              ; be unfolded according to the unfolding procedure
              ; described above.
              ; When generating a content line, lines longer than 75
              ; characters should be folded according to the folding
              ; procedure described above.

group        = 1*(ALPHA / DIGIT / "-")

name         = x-name / iana-token

iana-token   = 1*(ALPHA / DIGIT / "-")
              ; identifier registered with IANA

x-name       = ("x-" / "X-") 1*(ALPHA / DIGIT / "-")
              ; Reservered for experimental use, not intended for released
              ; products, or for use in bilateral agreements.

param        = param-name "=" param-value *("," *WSP param-value)

param-name   = x-name / iana-token

param-value  = text / quoted-string

text  = *SAFE-CHAR

value = *VALUE-CHAR

quoted-string = DQUOTE 1*qtext DQUOTE

qtext         = QSAFE-CHAR / QUOTED-CHAR

NON-ASCII    = %x80-FF
              ; use restricted by charset parameter
              ; on outer MIME object (UTF-8 preferred)

QSAFE-CHAR   = WSP / %x21 / %x23-5B / %x5D-7E / NON-ASCII
              ; Any character except CTLs, DQUOTE, or "\"

QUOTED-CHAR  = "\" ("\" / DQUOTE)
              ; \\ encodes \, \" encodes "

SAFE-CHAR    = WSP / %x21 / %x23-2B / %x2D-39 / %x3C-7E / NON-ASCII
              ; Any character except CTLs, DQUOTE, ";", ":", ","

VALUE-CHAR   = WSP / VCHAR / NON-ASCII
              ; any textual character
predefined-param = encodingparm
                          / valuetypeparm
                          / languageparm
                          / contextparm

encodingparm = "encoding" "=" encodingtype
encodingtype = "b"       ; from RFC 2047
                    / iana-token  ; registered as described in
                                  ; section 15 of this document

valuetypeparm = "value" "=" valuetype

valuetype = "uri"        ; genericurl from secion 5 of RFC 1738
                    / "text"
                    / "date"
                    / "time"
                    / "date-time" ; date time
                    / "integer"
                    / "boolean"
                    / "float"
                    / x-name
                    / iana-token  ; registered as described in
                                  ; section 15 of this document

languageparm = "language" "=" Language-Tag
             ; Language-Tag is defined in section 2 of RFC 1766

contextparm = "context" "=" context

context = x-name
                 / iana-token

valuespec =  text-list
                    / genericurl       ; from section 5 of RFC 1738
                    / date-list
                    / time-list
                    / date-time-list
                    / boolean
                    / integer-list
                    / float-list
                    / iana-valuespec

text-list = 1*TEXT-LIST-CHAR *("," *WSP 1*TEXT-LIST-CHAR)

TEXT-LIST-CHAR = "\," / "\n" / "\N"
                        / <any VALUE-CHAR except , or newline>
             ; newlines and commas must be encoded

date-list = date *("," *WSP date)

time-list = time *("," *WSP time)
date-time-list = date "T" time

boolean = "TRUE" / "FALSE"

integer-list = integer *("," *WSP integer)

integer = [sign] 1*DIGIT

float-list = float *("," *WSP float)

float = [sign] 1*DIGIT ["." 1*DIGIT]

sign = "+" / "-"

date = date-fullyear ["-"] date-month ["-"] date-mday

date-fullyear = 4 DIGIT

date-month = 2 DIGIT     ;01-12

date-mday = 2 DIGIT      ;01-28, 01-29, 01-30, 01-31
                                  ;based on month/year

time = time-hour [":"] time-minute [":"] time-second [time-secfrac]
                 [time-zone]

time-hour = 2 DIGIT      ;00-23

time-minute = 2 DIGIT    ;00-59

time-second = 2 DIGIT    ;00-59

time-secfrac = "," 1*DIGIT

time-zone = "Z" / time-numzome

time-numzome = sign time-hour [":"] time-minute

iana-valuespec = <a publicly-defined valuetype format, registered
                           with IANA, as defined in section 15 of this
                           document>

charset="iso-8859-1";
profile="vCard"
UMk1U7jt8LYpo4YULU7UZHPYVUaSgVttImOHZIKi4hlPXBOhcUQ==
boundary=woof;
type="text/directory";
start="<id5@host.com>"
name="myvoice.au";
site="myhost.com";
access-type=ANON-FTP;
directory="pub/myname";
mode="image"

