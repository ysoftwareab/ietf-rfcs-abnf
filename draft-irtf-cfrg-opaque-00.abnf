record = FinalizeRequest(idU, pwdU, skU, metadata, request, response)

                                      record
                                ------------------>

                                               StoreUserRecord(record)

Km2 = HKDF-Expand-Label(handshake_secret, "client mac", "", Hash.length)
Km3 = HKDF-Expand-Label(handshake_secret, "server mac", "", Hash.length)
Ke2 = HKDF-Expand-Label(handshake_secret, "client enc", "", key_length)
Ke3 = HKDF-Expand-Label(handshake_secret, "server enc", "", key_length)

   "key_length" is the length of the key required for the AKE handshake
   encryption algorithm.

   Values "IKM" and "info" are defined for each instantiation in the
   following sections.

info = "HMQV keys" || I2OSP(len(nonceU), 2) || nonceU
                      || I2OSP(len(nonceS), 2) || nonceS
                      || I2OSP(len(idU), 2) || idU
                      || I2OSP(len(idS), 2) || idS
hashInput = I2OSP(len(epkU), 2) || epkU ||
               I2OSP(len(info), 2) || info ||
               I2OSP(len("client"), 2) || "client"
u = Hash(hashInput) mod (len(p)-1)

hashInput = I2OSP(len(epkS), 2) || epkS ||
               I2OSP(len(info), 2) || info ||
               I2OSP(len("server"), 2) || "server"
s = Hash(hashInput) mod (len(p)-1)

info = "3DH keys" || I2OSP(len(nonceU), 2) || nonceU
                     || I2OSP(len(nonceS), 2) || nonceS
                     || I2OSP(len(idU), 2) || idU
                     || I2OSP(len(idS), 2) || idS

K3dh = epkS^eskU || pkS^eskU || epkS^skU

K3dh = epkU^eskS || epkU^skS || pkU^eskS
info = "SIGMA-I keys" || I2OSP(len(nonceU), 2) || nonceU
                         || I2OSP(len(nonceS), 2) || nonceS
                         || I2OSP(len(idU), 2) || idU
                         || I2OSP(len(idS), 2) || idS

