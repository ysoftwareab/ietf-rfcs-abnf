



DMARC Working Group                                          K. Andersen
Internet-Draft                                                  LinkedIn
Intended status: Experimental                               B. Long, Ed.
Expires: September 19, 2018                                       Google
                                                           S. Jones, Ed.
                                                                     TDP
                                                           S. Blank, Ed.
                                                                ValiMail
                                                       M. Kucherawy, Ed.
                                                                     TDP
                                                          March 18, 2018


              Authenticated Received Chain (ARC) Protocol
                    draft-ietf-dmarc-arc-protocol-12

Abstract

   The Authenticated Received Chain (ARC) protocol creates a mechanism
   whereby a series of handlers of an email message can conduct
   authentication of the email message as it passes among them on the
   way to its destination, and create an attached, authenticated record
   of the status at each step along the handling path, for use by the
   final recipient in making choices about the disposition of the
   message.  Changes in the message that might break existing
   authentication mechanisms can be identified through the ARC set of
   header fields.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 19, 2018.







Andersen, et al.       Expires September 19, 2018               [Page 1]

Internet-Draft                ARC-Protocol                    March 2018


Copyright Notice

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   4
     1.1.  Overview  . . . . . . . . . . . . . . . . . . . . . . . .   5
       1.1.1.  High Level Summary  . . . . . . . . . . . . . . . . .   5
       1.1.2.  Technical Summary . . . . . . . . . . . . . . . . . .   7
     1.2.  Definitions and Terminology . . . . . . . . . . . . . . .   7
     1.3.  Referenced Definitions  . . . . . . . . . . . . . . . . .   7
   2.  Protocol Elements and Features  . . . . . . . . . . . . . . .   8
     2.1.  Features of the ARC Protocol  . . . . . . . . . . . . . .   8
       2.1.1.  Chain of Custody  . . . . . . . . . . . . . . . . . .   9
       2.1.2.  Optional Participation  . . . . . . . . . . . . . . .   9
       2.1.3.  Only one ARC Chain (One Chain to Rule Them All) . . .   9
       2.1.4.  All Failures are Permanent  . . . . . . . . . . . . .  10
       2.1.5.  Benign nature of an ARC Set . . . . . . . . . . . . .  10
       2.1.6.  Key Management  . . . . . . . . . . . . . . . . . . .  10
       2.1.7.  Trace Information . . . . . . . . . . . . . . . . . .  11
       2.1.8.  Instance Tags . . . . . . . . . . . . . . . . . . . .  11
       2.1.9.  Chain Validation Status . . . . . . . . . . . . . . .  11
   3.  The ARC Header Fields . . . . . . . . . . . . . . . . . . . .  11
     3.1.  Instance ('i=') Tag . . . . . . . . . . . . . . . . . . .  11
       3.1.1.  Valid Range for Instance Tags . . . . . . . . . . . .  12
     3.2.  ARC-Authentication-Results (AAR)  . . . . . . . . . . . .  12
     3.3.  ARC-Message-Signature (AMS) . . . . . . . . . . . . . . .  12
     3.4.  ARC-Seal (AS) . . . . . . . . . . . . . . . . . . . . . .  13
       3.4.1.  The 'cv' Tag  . . . . . . . . . . . . . . . . . . . .  13
       3.4.2.  Implicit Header Fields  . . . . . . . . . . . . . . .  14
   4.  Verifier Actions  . . . . . . . . . . . . . . . . . . . . . .  14
     4.1.  ARC Authentication-Results Stamp  . . . . . . . . . . . .  16
     4.2.  Handling DNS Problems While Validating ARC  . . . . . . .  16
     4.3.  Responding to ARC Validity Violations During the SMTP
           Transaction . . . . . . . . . . . . . . . . . . . . . . .  16
   5.  Signer Actions  . . . . . . . . . . . . . . . . . . . . . . .  16



Andersen, et al.       Expires September 19, 2018               [Page 2]

Internet-Draft                ARC-Protocol                    March 2018


     5.1.  Marking and Sealing "cv=fail" (Invalid) Chains  . . . . .  17
   6.  Usage of ARC and Chain Validity . . . . . . . . . . . . . . .  17
     6.1.  Relationship between DKIM-Signature and AMS signing
           scopes  . . . . . . . . . . . . . . . . . . . . . . . . .  17
     6.2.  Assessing Chain Validity Violations . . . . . . . . . . .  17
   7.  Recording and Reporting the Results of ARC Evaluation . . . .  18
     7.1.  Information from an ARC Evaluation  . . . . . . . . . . .  18
     7.2.  Recording (local) ARC Evaluation Results  . . . . . . . .  18
     7.3.  DMARC Reporting of ARC Findings - Interim . . . . . . . .  18
   8.  Supporting Alternate Signing Algorithms . . . . . . . . . . .  19
   9.  Privacy Considerations  . . . . . . . . . . . . . . . . . . .  19
   10. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  19
     10.1.  Authentication-Results Method Registry Update  . . . . .  19
     10.2.  Definitions of the ARC header fields . . . . . . . . . .  21
   11. Security Considerations . . . . . . . . . . . . . . . . . . .  21
     11.1.  Header Size  . . . . . . . . . . . . . . . . . . . . . .  22
     11.2.  DNS Operations . . . . . . . . . . . . . . . . . . . . .  22
     11.3.  Message Content Suspicion  . . . . . . . . . . . . . . .  22
   12. Evaluating the Efficacy of the ARC Protocol . . . . . . . . .  23
     12.1.  Success Consideration  . . . . . . . . . . . . . . . . .  23
     12.2.  Failure Considerations . . . . . . . . . . . . . . . . .  23
     12.3.  Open Questions . . . . . . . . . . . . . . . . . . . . .  23
       12.3.1.  Value of the ARC-Seal (AS) Header  . . . . . . . . .  24
       12.3.2.  DNS Overhead . . . . . . . . . . . . . . . . . . . .  24
       12.3.3.  Distinguishing Valuable from Worthless Trace
                Information  . . . . . . . . . . . . . . . . . . . .  24
   13. Implementation Status . . . . . . . . . . . . . . . . . . . .  25
     13.1.  GMail test reflector and incoming validation . . . . . .  25
     13.2.  AOL test reflector and internal tagging  . . . . . . . .  26
     13.3.  dkimpy . . . . . . . . . . . . . . . . . . . . . . . . .  26
     13.4.  OpenARC  . . . . . . . . . . . . . . . . . . . . . . . .  26
     13.5.  Mailman 3.2 patch  . . . . . . . . . . . . . . . . . . .  27
     13.6.  Copernica/MailerQ web-based validation . . . . . . . . .  27
     13.7.  Rspamd . . . . . . . . . . . . . . . . . . . . . . . . .  28
     13.8.  PERL MAIL::DKIM module . . . . . . . . . . . . . . . . .  29
     13.9.  PERL Mail::Milter::Authentication module . . . . . . . .  29
     13.10. Sympa List Manager . . . . . . . . . . . . . . . . . . .  30
     13.11. Oracle Messaging Server  . . . . . . . . . . . . . . . .  30
     13.12. MessageSystems Momentum  . . . . . . . . . . . . . . . .  30
   14. References  . . . . . . . . . . . . . . . . . . . . . . . . .  31
     14.1.  Normative References . . . . . . . . . . . . . . . . . .  31
     14.2.  Informative References . . . . . . . . . . . . . . . . .  32
     14.3.  URIs . . . . . . . . . . . . . . . . . . . . . . . . . .  33
   Appendix A.  Appendix A - Design Requirements . . . . . . . . . .  34
     A.1.  Primary Design Criteria . . . . . . . . . . . . . . . . .  34
     A.2.  Out of Scope  . . . . . . . . . . . . . . . . . . . . . .  34
   Appendix B.  Appendix B - Example Usage . . . . . . . . . . . . .  34
     B.1.  Example 1: Simple mailing list  . . . . . . . . . . . . .  35



Andersen, et al.       Expires September 19, 2018               [Page 3]

Internet-Draft                ARC-Protocol                    March 2018


       B.1.1.  Here's the message as it exits the Origin:  . . . . .  35
       B.1.2.  Message is then received at example.org . . . . . . .  35
       B.1.3.  Example 1: Message received by Recipient  . . . . . .  37
     B.2.  Example 2: Mailing list to forwarded mailbox  . . . . . .  38
       B.2.1.  Here's the message as it exits the Origin:  . . . . .  38
       B.2.2.  Message is then received at example.org . . . . . . .  39
       B.2.3.  Example 2: Message received by Recipient  . . . . . .  43
     B.3.  Example 3: Mailing list to forwarded mailbox with source   45
       B.3.1.  Here's the message as it exits the Origin:  . . . . .  45
       B.3.2.  Message is then received at example.org . . . . . . .  46
       B.3.3.  Example 3: Message received by Recipient  . . . . . .  51
   Appendix C.  Acknowledgements . . . . . . . . . . . . . . . . . .  53
   Appendix D.  Comments and Feedback  . . . . . . . . . . . . . . .  54
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  54

1.  Introduction

   Modern email authentication techniques such as the Sender Policy
   Framework (SPF) [RFC7208] and DomainKeys Identified Mail (DKIM)
   [RFC6376] have become common.
   However, their end-to-end utility is limited by the effects of
   intermediaries along the transmission path, which either are not
   listed (for SPF) or which break digital signatures (for DKIM).  These
   issues are described in substantial detail in those protocols'
   defining documents as well as in [RFC6377] and [RFC7960].

   Technologies that build upon the use of SPF and DKIM can reduce the
   success of fraudulent email campaigns.  To this end, Domain-based
   Mail Authentication, Reporting and Compliance (DMARC) [RFC7489],
   validates the domain of the RFC5322.From author header field.
   However its use along email transmission paths that have independent
   intermediaries, such as some forwarders and essentially all mailing
   list services, produces false positive rejections that are
   problematic, both for the message authors, the intermediary
   service(s), and for those they are interacting with.

   What is needed is a mechanism by which legitimate alteration of a
   message, which invalidates associated SPF and DKIM information, does
   not ultimately result in a rejection of an email message on delivery.
   Authenticated Receive Chain (ARC) builds upon DKIM mechanisms to
   provide a sequence of signatures that provide a view of the handling
   sequence for a message, especially the points where alterations of
   the content might have occurred.  Equipped with this more complete
   information, the recipient system(s) can make a more informed
   handling choice, reducing or eliminating the false negatives inherent
   in use of DKIM and/or SPF themselves.





Andersen, et al.       Expires September 19, 2018               [Page 4]

Internet-Draft                ARC-Protocol                    March 2018


1.1.  Overview

   ARC provides a "chain of custody" for a message, allowing each entity
   that handles the message to see what entities handled it before, and
   to see what the authentication status of the message was at each step
   in the handling.  The handling entity can then put its own entry into
   the chain of custody and then relay the message to the next handler.

   When the message reaches final delivery, the decision to accept and
   deliver the message, or, alternatively, to reject, discard, or
   quarantine it, can take the chain of custody into account, applying
   local policy in addition to policies advertised by the (purported)
   sending domain.  Consider, for example, this scenario:

   1.  A sender from mysender.example posts a message to a mailing list
       hosted at listmania.example;

   2.  The mailing list modifies the message by prepending the list name
       to the subject line, then sends it to the subscribers;

   3.  One of the subscribers is alice@mail.service.example, which
       receives the message from listmania.example.

   Assuming the original message was DKIM-signed and mysender.example
   published an SPF record, the handling by the mailing list will break
   the DKIM signature because of the message modification, and the
   forwarding will cause SPF check to fail in the next step.  But
   listmania.example can add ARC headers to the message to add itself to
   the document's chain of custody.  When mail.service.example sees the
   message, it can see that SPF and DKIM validation fail, but it can
   also see that both of these succeeded when they were checked by
   listmania.example, and can verify listmania's assertion.

   As part of its evaluation of the message for delivery,
   mail.service.example can see that mysender.example publishes a DMARC
   policy asking that unauthenticated messages be rejected.  But is can
   also see the assertion by listmania.example that the message was
   correctly authenticated when the message arrived there, and if it
   accepts that assertion and that modifications made were benign, it
   can deliver the message, rather than reject it, based on the
   additional information that ARC has provided.

1.1.1.  High Level Summary

   In DKIM, every participating signing agent attaches a signature that
   is based on the some of the content of the message, local policy, and
   the domain name of the participating Administrative Management Domain
   (ADMD).  Any verifier can process such a signature; a verified



Andersen, et al.       Expires September 19, 2018               [Page 5]

Internet-Draft                ARC-Protocol                    March 2018


   signature means that the domain referenced in the DKIM's "d="
   parameter has some responsibility for handling the message.  An
   artifact of using digital signature technology for this means that
   verification also ensures that the portion of the message that was
   "covered" by the signature has not been altered since the signature
   was applied.  The signatures themselves are generally independent of
   one another.

   By contrast, an ARC signature conveys the following pieces of
   information:

   1.  An assertion that, at the time that the intermediary ADMD
       processed the message, the various assertions (DKIM-Signature(s)
       and/or ARC sets) already attached to the message by other ADMDs
       were or were not valid;

   2.  As with DKIM, an assertion that, for a validated ARC signature,
       the domain name in the signature takes some responsibility for
       handling of the message and that the message is unchanged since
       that signature was applied;

   3.  A further assertion that binds the ARC evaluation results into
       the ARC chain sequence.

   This protocol accomplishes each of these by adding new header fields
   to the message with these pieces of information:

   o  ARC-Authentication-Results (referred to below as "AAR"): virtually
      identical in syntax to an Authentication-Results field [RFC7601],
      this field records the results of all message authentication
      checks done by the recording ADMD at the time the message arrived.
      Additional information is placed in this field compared to a
      standard Authentication-Results field in order to support a more
      complete DMARC report (see Section 3.2);

   o  ARC-Message-Signature (referred to below as "AMS"): virtually
      identical in syntax to DKIM-Signature, this field contains the
      signature about the message header and body as they existed at the
      time of handling by the ADMD adding it; and

   o  ARC-Seal (referred to below as "AS"): highly similar in structure
      and format to a DKIM-Signature, this field applies a digital
      signature that protects the integrity of all three of these new
      fields when they are added by an ADMD, plus all instances of these
      fields added by prior ADMDs.

   A distinguishing feature of all of these is that an ARC participant
   always adds all of them before relaying a message to the next



Andersen, et al.       Expires September 19, 2018               [Page 6]

Internet-Draft                ARC-Protocol                    March 2018


   handling agent en route to its destination.  Moreover, as described
   in Section 3.1, they each have an "instance" number that increases
   with each ADMD in the handling chain so that their original order can
   be preserved and the three related header fields can be processed as
   a group.

1.1.2.  Technical Summary

   [[ possibly including a diagram - this may not be needed any more ]]

1.2.  Definitions and Terminology

   This section defines terms used in the rest of the document.

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119][RFC8174].

   Because many of the core concepts and definitions are found in
   [RFC5598], readers SHOULD to be familiar with the contents of
   [RFC5598], and in particular, the potential roles of intermediaries
   in the delivery of email.

   Syntax descriptions use Augmented BNF (ABNF) [RFC5234].

   o  "ARC set" - A single group of the header fields introduced in
      Section 1.1 is called an "ARC set".

   o  "ARC chain" - The complete sequence of these groups (ARC sets) is
      called an "ARC chain".  Although the "Received" header field is
      typically not included in the signed content, the name is based on
      the notion that this is in essence a cryptographically signed
      series of header fields that attest to the handling chain of a
      message much as Received fields always have.

1.3.  Referenced Definitions

   The following terms are defined in other RFCs.  Those definitions can
   be found as follows:

   o  ADMD - [RFC5598], Section 2.3

   o  MTA - [RFC5598], Section 4.3.2

   o  MSA - [RFC5598], Section 4.3.1

   o  MDA - [RFC5598], Section 4.3.3




Andersen, et al.       Expires September 19, 2018               [Page 7]

Internet-Draft                ARC-Protocol                    March 2018


   The three header fields that are part of this specification borrow
   heavily from existing specifications.  Rather than repeating all of
   the formal definitions that are being reused in ARC, this document
   only describes and specifies changes in syntax and semantics.

   Language, syntax, and other details are imported from DKIM [RFC6376].
   Specific references can be found below.

2.  Protocol Elements and Features

   As with other domain authentication technologies (such as SPF, DKIM,
   and DMARC), ARC makes no claims about the contents of the email
   message it has sealed.  However, for a valid and passing ARC chain, a
   Final Receiver is able to ascertain:

   o  all (participating) domains that claim responsibility for handling
      (and possibly modifying) the email message in transit;

   o  trace information, including:

      *  the [RFC7601] authentication results each participating ADMD
         saw; and

      *  additional data needed to compile a DMARC report for the
         sending domain.

   Given this information, a Final Receiver is able to make a more-
   informed local policy decision regarding message delivery to the end
   user in spite of an authentication failure.

   Every participant in an ARC chain, except for the originating sender
   and Final Receiver, is both an ARC Validator (when receiving) and
   then an ARC Sealer (when sending a message onward).  The validated
   chain status as determined at message receipt must be passed to the
   sealer function in order for sealing to occur properly; how this is
   done is considered ADMD-specific and an implementation detail.

   _INFORMATIONAL_: It is important to understand that validating and
   then immediately sealing a message leaves no room for message
   modification, and many early implementations of ARC did not initially
   work because both operations were performed in a single pass over the
   message.

2.1.  Features of the ARC Protocol

   The following protocol features are functional parts and design
   decisions related the protocol that are not specific to either




Andersen, et al.       Expires September 19, 2018               [Page 8]

Internet-Draft                ARC-Protocol                    March 2018


   Validators or Sealers, but ensure the ARC chain conveys this
   information to a Final Receiver.

2.1.1.  Chain of Custody

   At a high level, an ARC chain represents a chain of custody of
   authentication and other trace information (AAR) related to a
   message, signed by each handler of the message.  Each link in the
   chain (AMS) is designed to be brittle, insofar as it survives only
   until the next modification of the message.  However, the sequence of
   intermediaries in the handling chain (AS) is designed to remain
   intact over the entirety of the chain.

   The ARC chain can be conceptualized through an analogy with the chain
   of custody for legal evidence.  The material evidence itself is
   sealed within an tamper-proof bag (AMS) each time.  When handed to a
   new party, that party both vouches for the state of the received
   evidence container (AAR) and signs for the evidence on a chain of
   custody report form (AS).  As with all analogies, this one should not
   be taken to interpretive extremes, but primarily used as a conceptual
   framework.

   An ARC chain that is valid and passing has the attributes listed
   above in Section 2.

   Recipients of an ARC chain that is invalid or does not pass SHOULD
   NOT draw negative conclusions without a good understanding of the
   wider handling context.  Until ARC usage is widespread,
   intermediaries will continue to modify messages without ARC seals.
   As with a failing DKIM signature ([RFC6376] Section-6.3), a failing
   ARC chain SHOULD be treated the same as a message with no ARC chain.
   [[ NOTE TO WORKING GROUP: This paragraph probably is better placed in
   Verifier actions.  Ref issue 10 [1] ]]

2.1.2.  Optional Participation

   Validating an existing chain and then adding your own ARC set to a
   message allows you to claim responsibility for handling the message
   and modifications, if any, done by your ADMD to benefit message
   delivery downstream.  However, no ADMD is obligated to perform these
   actions.

2.1.3.  Only one ARC Chain (One Chain to Rule Them All)

   A message can have only one ARC chain on it at a time (see
   Section 3.1).  Once broken, the chain cannot be continued, as the
   chain of custody is no longer valid and responsibility for the
   message has been lost.  For further discussion of this topic and the



Andersen, et al.       Expires September 19, 2018               [Page 9]

Internet-Draft                ARC-Protocol                    March 2018


   designed restriction which prevents chain continuation or re-
   establishment, see [ARC-USAGE].

2.1.4.  All Failures are Permanent

   Because ARC chains are transmitted across multiple intermediaries,
   all errors, even temporary ones, become unrecoverable and are
   considered permanent.

   Any error validating or sealing a chain, for whatever reason, MUST
   result in a "cv=fail" verdict.

2.1.5.  Benign nature of an ARC Set

   Even when an ARC chain is valid and passes, its value is limited to
   very specific cases.  An ARC chain is specifically designed to
   provide value to a Final Receiver evaluating message delivery in the
   context of an authentication failure.  An ARC chain in general, and
   each ARC set in particular, provide additional information, and
   otherwise is benign.  Specifically:

   o  properly adding an ARC set to a message does not damage or
      invalidate an existing chain, and

   o  validating a message exposes no new threat vectors (see
      Section 11).

   _INFORMATIONAL_: If an ADMD is unsure whether it will be re-emitting
   and/or modifying a message, it may elect to seal all inbound mail.
   For complex or nested ADMD relationships such as found in some hosted
   mail solutions, this "inbound seal" can be used to facilitate
   traversal of internal boundaries as well as properly conveying
   incoming state to any egress MTAs that may need to assert a seal upon
   exit from the ADMD.  Since these internal relationships are highly
   implementation dependent, this protocol definition can not usefully
   explore such usage except to note that it is intentionally allowed
   within the scope of this specification.

2.1.6.  Key Management

   The public keys for ARC header fields follow the same requirements,
   syntax and semantics as those for DKIM signatures, described in
   Section 3.6 of [RFC6376].  ARC places no requirements on the
   selectors and/or domains used for the ARC header field signatures.







Andersen, et al.       Expires September 19, 2018              [Page 10]

Internet-Draft                ARC-Protocol                    March 2018


2.1.7.  Trace Information

   ARC includes trace information encoded in the AAR.  While section
   Section 3.2 defines what information must be provided, sealing ADMDs
   may provide additional information, and validating receivers may use
   or ignore this trace information as they wish.

2.1.8.  Instance Tags

   ARC introduces an indicator to its header fields to show the order in
   which the header fields comprising an ARC set were added, and the
   specific members of an ARC Set.  This is known as an "instance", and
   the indicator is an "i=".  That is, the members of the first ARC set
   affixed to a message will all include "i=1".  This is described in
   detail in section Section 3.1.

2.1.9.  Chain Validation Status

   ARC introduces a mechanism, also via a new tag, which indicates the
   state of the ARC Chain at each step.  This is the "chain validation
   status".  This is described in detail in section Section 3.4.1.

3.  The ARC Header Fields

3.1.  Instance ('i=') Tag

   The header fields comprising a single ARC set are identified by the
   presence of a string in the value portion of the header field that
   complies with the "tag-spec" ABNF found in Section 3.2 of [RFC6376].
   The tag-name is "i" and the value is the text representation of a
   positive integer, indicating the position in the ARC sequence this
   set occupies, where the first ARC set is numbered 1.  In ABNF terms:

      instance = [FWS] %x69 [FWS] "=" [FWS] position [FWS] ";"
      position = 1*2DIGIT ; 1 - 50

   Valid ARC sets must have exactly one instance of each header field
   for a given position value and signing algorithm.  (Initial
   development of ARC is only being done with a single allowed signing
   algorithm, but parallel work in the DCRUP working group [2] is
   expanding that.  For handling multiple signing algorithms, see
   [ARC-MULTI].)

   Because the AMS and AS header field values are made up of tag-spec
   constructs, the i= tag may be found anywhere within the header field
   value, but is represented throughout this spec in the initial
   position for convenience.  Implementers are encouraged to place the




Andersen, et al.       Expires September 19, 2018              [Page 11]

Internet-Draft                ARC-Protocol                    March 2018


   i= tag at the beginning of the field value to facilitate human
   inspection of the headers.

3.1.1.  Valid Range for Instance Tags

   The 'i' tag value can range from 1-50 (inclusive).

   ARC implementations MUST support at least ten (10) ARC sets.

   An effective operational maximum will have to be developed through
   deployment experience in the field and will be documented within
   [ARC-USAGE] once determined.

   ARC chains with more than the defined operational maximum count MUST
   be marked with "cv=fail".

3.2.  ARC-Authentication-Results (AAR)

   The ARC-Authentication-Results header field is syntactically and
   semantically identical to an Authentication-Results header field
   (defined in Section 2.2 of [I-D-7601bis] (A-R)).  Note that several
   optional data fields SHOULD be added (smtp.client-ip, dkim header.s,
   arc.oldest-pass) to enable completeness for DMARC reporting.

   Formally, the header field is specified as follows using ABNF
   [RFC5234]:

arc-authres-header-prefix = "ARC-Authentication-Results:" [CFWS] arc-info
arc-info = instance *([CFWS] propspec) [CFWS] ";" authres-payload

   The purpose of this header field is to transmit the results of any
   authentication done on the message downstream to participating ADMDs
   validating and continuing the chain.

   The AAR MUST contain all A-R results from within the participating
   ADMD, regardless of how many A-R headers are on the message.

3.3.  ARC-Message-Signature (AMS)

   The ARC-Message-Signature header field is syntactically and
   semantically identical to a DKIM-Signature header field [RFC6376],
   with the following exceptions:

   o  There is an "i" tag, as described in Section 3.1.

   o  There is no "v" tag defined for the AMS header.  As required for
      undefined tags, if seen, it MUST be ignored.




Andersen, et al.       Expires September 19, 2018              [Page 12]

Internet-Draft                ARC-Protocol                    March 2018


   ARC-Seal header fields MUST NOT be included in the content covered by
   the signature in this header field.

   The AMS SHOULD include any DKIM-Signature header fields already
   present on the message in the header fields covered by this
   signature.

   The AMS header field SHOULD not include (sign) the AAR header
   field(s).  (Early drafts of this protocol and some older examples
   included the AAR header(s) within the signing scope for the AMS, but
   ambiguity regarding which of the potentially multiple AAR headers
   (one per ARC set) argues against such practice.)

   Authentication-Results header fields SHOULD NOT be included since
   they are likely to be deleted by downstream ADMDs (per Section XXX of
   [RFC7601]), thereby breaking the AMS signature.

   As with a DKIM-Signature, the purpose of this header field is to
   allow the ADMD generating it to take some responsibility for handling
   this message as it progresses toward delivery.

3.4.  ARC-Seal (AS)

   The ARC-Seal header field is syntactically and semantically similar
   to a DKIM-Signature field, with the following exceptions:

   o  There is an "i" tag, as described in Section 3.1.

   o  The ARC-Seal covers none of the body content of the message.  It
      only covers specific header fields.  (See below: Section 3.4.2.)
      As a result, no body canonicalization is done.  Further, only
      "relaxed" header canonicalization (Section 3.4.2 of [RFC6376]) is
      used.

   o  The only supported tags are "i" (Section 3.1 supercedes the
      [RFC6376] definition), and "a", "b", "d, "s", "t".  The latter 5
      tag definitions are copied from Section 3.5 of [RFC6376].

   o  An additional tag, "cv" is defined.  (See below: Section 3.4.1)

3.4.1.  The 'cv' Tag

   A new tag "cv" (chain validation) indicates the the outcome of
   evaluating the existing ARC chain upon arrival at the ADMD that is
   adding this header field.  It accepts one of three possible values:

   o  none: There was no chain on the message when it arrived for
      validation; typically occurs when the message arrives at a Message



Andersen, et al.       Expires September 19, 2018              [Page 13]

Internet-Draft                ARC-Protocol                    March 2018


      Transfer Agent (MTA) from a Message Submission Agent (MSA) or when
      any upstream MTAs may not be participating in ARC handling;

   o  fail: The message has a chain whose validation failed;

   o  pass: The message has a chain whose validation succeeded.

   In ABNF terms:

    seal-cv-tag = %x63.76 [FWS] "=" [FWS] ("none" / "fail" / "pass")

3.4.2.  Implicit Header Fields

   The ARC-Seal signs a canonicalized form of the ARC set header values.
   The ARC set header values are compiled in increasing instance order,
   starting at 1, and inclue the set being added at the time of sealing
   the message.

   Within a set, the header fields are listed in the following order:

   1.  ARC-Authentication-Results

   2.  ARC-Message-Signature

   3.  ARC-Seal

   Where the ARC-Seal is the one being generated, it is input to the
   hash function in its final form except with an empty "b=" value, in
   the same manner by which a DKIM-Signature signs itself.

   Note that the signing scope for the ARC-Seal is modified in the
   situation where a chain has failed validation (see Section 5.1).

4.  Verifier Actions

   A verifier takes the following steps to determine the state of the
   ARC chain on a message (cv value).  Canonicalization, hash functions,
   and signature validation methods are imported from Section 5 of
   [RFC6376].

   [[ Note: need markdown flag to have subordinate numbering distinction
   issue 11 [3] ]]

   1.  Collect all ARC sets currently on the message.  If there were
       none, the ARC state is "none" and the algorithm stops here.

   2.  If the form of any ARC set is invalid (e.g., does not contain
       exactly one of each of the three ARC-specific header fields),



Andersen, et al.       Expires September 19, 2018              [Page 14]

Internet-Draft                ARC-Protocol                    March 2018


       then the chain state is "fail" and the algorithm stops here.  a.
       To avoid the overhead of unnecessary computation and delay from
       crypto and DNS operations, the cv value for all ARC-Seal(s) MAY
       be checked at this point.  If any of the values are "fail", then
       the overall state of the chain is "fail" and the algorithm stops
       here.

   3.  Conduct verification of the ARC-Message-Signature header field
       bearing the highest instance number.  If this verification fails,
       then the chain state is "fail" and the algorithm stops here.

   4.  For each ARC-Seal from the "N"th instance to the first, apply the
       following logic: a.  If the value of the "cv" tag on that seal is
       "fail", the chain state is "fail" and the algorithm stops here.
       (This step SHOULD be skipped if the earlier step (2.1) was
       performed) b.  In Boolean nomenclature: if ((i == 1 && cv !=
       "none") or (cv == "none" && i != 1)) then the chain state is
       "fail" and the algorithm stops here (note that the ordering of
       the logic is structured for short-circuit evaluation).  c.
       Initialize a hash function corresponding to the "a" tag of the
       ARC-Seal.  d.  Compute the canonicalized form of the ARC header
       fields, in the order described in Section 3.4.2, using the
       "relaxed" header canonicalization defined in Section 3.4.2 of
       [RFC6376].  Pass the canonicalized result to the hash function.
       e.  Retrieve the final digest from the hash function.  f.
       Retrieve the public key identified by the "s" and "d" tags in the
       ARC-Seal, as described in Section 2.1.6.  g.  Determine whether
       the signature portion ("b" tag) of the ARC-Seal and the digest
       computed above are valid according to the public key.  (See also
       Section Section 4.2 for failure case handling) h.  If the
       signature is not valid, the chain state is "fail" and the
       algorithm stops here.

   5.  If all seals pass validation, then the chain state is "pass", and
       the algorithm is complete.

   6.  Results from the determination of this algorithm SHOULD be
       recorded in the Authentication-Results header

   Whatever the end result of the verifier's checks via the algorithm
   specified above, the results MUST be added into the Authentication-
   Results header(s) for the ADMD.

   [[ See issue 12 [4] regarding the final paragraph ]]

   The verifier should save the cv state for subsequent use by any
   sealing which may be done later (potentially after message
   modification) within the same trust boundary.  The cv state may be



Andersen, et al.       Expires September 19, 2018              [Page 15]

Internet-Draft                ARC-Protocol                    March 2018


   recorded by sealing at the time of verification in an initial ARC set
   (for the ADMD) or may be recorded out of band depending on the
   architecture of the ADMD.

4.1.  ARC Authentication-Results Stamp

   Certain information pertinent to ascertaining message disposition can
   be lost in transit when messages are handled by intermediaries.  For
   example, failing DKIM signatures are sometimes removed by MTAs, and
   most DKIM signatures on messages modified by intermediaries will
   fail.  Stamping the following information in the A-R provides a
   mechanism for this information to survive transit.

   The ptypes and properties defined in this section SHOULD be recorded
   in the AR:

   o  smtp.client-ip - The connecting client IP address from which the
      message is received;

   o  header.s - Defined in [RFC6376] section 7.2

   o  arc.oldest-pass - The instance number of the oldest AMS that still
      validates, or 0 if all pass.

4.2.  Handling DNS Problems While Validating ARC

   DNS-based failures to verify a chain are treated no differently than
   any other ARC violation.  They result in a "cv=fail" verdict.

4.3.  Responding to ARC Validity Violations During the SMTP Transaction

   If a receiver determines that the ARC chain has failed, the receiver
   MAY signal the breakage through the extended SMTP response code 5.7.7
   [RFC3463] "message integrity failure" [ENHANCED-STATUS] and
   corresponding SMTP response code.

5.  Signer Actions

   [[ See issue 13 [5] for critique ]]

   This section includes a specification of the actions an ARC signer
   takes when presented with a message.

   The signer MUST undertake the following steps:

   1.  Before creating an ARC signature, perform any other, normal
       authentication and/or signing, so that the ARC signature can
       cover those results.



Andersen, et al.       Expires September 19, 2018              [Page 16]

Internet-Draft                ARC-Protocol                    March 2018


   2.  Build and attach the new ARC set:

       1.  If an ARC chain exists on the message, then set "N" equal to
           the highest instance number found on the chain (i=);
           otherwise set "N" equal to zero for the following steps.

       2.  Generate and attach to the message an ARC-Authentication-
           Results header field using instance number N+1 and the same
           content from the previous step.

       3.  Generate and attach to the message an ARC-Message-Signature
           header field as defined in Section 3.3 above, using instance
           number N+1.

       4.  Generate and attach to the message an ARC-Seal header field
           using the general algorithm described in Section 3.4 above,
           the chain validation status as determined in Section 4, and
           instance number N+1.

5.1.  Marking and Sealing "cv=fail" (Invalid) Chains

   The header fields signed by the AS header field b= value in the case
   of a chain failure MUST be only the matching 'i=' instance headers
   created by the MTA which detected the malformed chain, as if this
   newest ARC set was the only set present.

6.  Usage of ARC and Chain Validity

6.1.  Relationship between DKIM-Signature and AMS signing scopes

   [[ See issue 14 [6] for critique of this section ]]

   DKIM-Signatures SHOULD never sign any ARC header fields.

6.2.  Assessing Chain Validity Violations

   [[ Issue 15 [7] ]]

   Email transit can produce broken signatures for a wide variety of
   benign reasons.  This includes possibly breaking one or more ARC
   signatures.  Therefore, receivers need to be wary of ascribing motive
   to such breakage although patterns of common behaviour may provide
   some basis for adjusting local policy decisions.

   ARC does not attempt to protect an entire message.  There are various
   ways that a message can still be problematic, in spite of having a
   valid ARC chain.  Consequently, all normal, content-based analysis




Andersen, et al.       Expires September 19, 2018              [Page 17]

Internet-Draft                ARC-Protocol                    March 2018


   SHOULD still be performed on any message having a valid chain of ARC
   header sets.

7.  Recording and Reporting the Results of ARC Evaluation

   The evaluation of an ARC chain provides information which will be
   useful to both the receiver (or intermediary) and to the initial
   sender of the message.  This information should be preserved and
   reported as follows.

7.1.  Information from an ARC Evaluation

   The evaluation of an ARC chain produces a list of domain names for
   participating intermediaries which handled the message, to wit:

   o  A list of the "d=" domains found in the validated ARC-Seal header
      fields

   o  The "d=" domain found in the most recent (highest instance number)
      AMS header field (since that is the only one necessarily
      validated)

   In the case of a failed chain, only the terminal ARC set is covered
   by the ARC-Seal so the reporting is limited to the findings in that
   terminal ARC set.

7.2.  Recording (local) ARC Evaluation Results

   Receivers MAY add an "arc=[pass|fail|policy]" method annotation into
   a locally-affixed Authentication-Results [RFC7601] header field along
   with any salient comment(s).

   Details of the ARC chain which was evaluated should be included in
   the Authentication-Results and AAR headers per Section Section 4.1.

7.3.  DMARC Reporting of ARC Findings - Interim

   [[ Note: Move to separate document? [8] (see the additional fields
   specified in Section 4.1) ]]

   Receivers SHOULD indicate situations in which ARC evaluation
   influenced the results of their local policy determination.  DMARC
   reporting of ARC-informed decisions can be accomplished by adding a
   local_policy comment explanation containing the list of data
   discovered in the ARC evaluation (Section 7.1 and Section 4.1):






Andersen, et al.       Expires September 19, 2018              [Page 18]

Internet-Draft                ARC-Protocol                    March 2018


 <policy_evaluated>
   <disposition>delivered</disposition>
   <dkim>fail</dkim>
   <spf>fail <comment>source.ip=10.0.0.1</comment></spf>
   <reason>
    <type>local_policy</type>
    <comment>arc=pass ams[2].d=d2.example ams[2].s=s1 as[2].d=d2.example
      as[2].s=s2 as[1].d=d1.example as[1].s=s3</comment>
   </reason>
 </policy_evaluated>

   In the suggested sample, d2.example is the sealing domain for ARC[2]
   and d1.example is the sealing domain for ARC[1].

   Mediators SHOULD generate DMARC reports on messages which transit
   their system just like any other message which they receive.  This
   will result in multiple reports for each mediated message as they
   transit the series of handlers.  DMARC report consumers should be
   aware of this behaviour and make the necessary accommodations.

8.  Supporting Alternate Signing Algorithms

   This section has been moved to [ARC-MULTI]

9.  Privacy Considerations

   The ARC chain provides a verifiable record of the handlers for a
   message.  Anonymous remailers will probably not find this compatible
   with their operating goals.

10.  IANA Considerations

   This specification adds three new header fields as defined below.

10.1.  Authentication-Results Method Registry Update

   This draft adds one item to the IANA "Email Authentication Methods"
   registry:

   o  Method : arc

      Defined: [I-D.ARC]

      ptype: header

      Property: chain evaluation result

      Value: chain evaluation result status (see Section 3.4)



Andersen, et al.       Expires September 19, 2018              [Page 19]

Internet-Draft                ARC-Protocol                    March 2018


      Status: active

      Version: 1

   o  Method : dkim

      Defined: [I-D.ARC]

      ptype: header

      Property: selector

      Value: value of signature "s" tag (see [RFC6376])

      Status: active

      Version: 1

   o  Method : spf

      Defined: [I-D.ARC]

      ptype: smtp

      Property: client-ip

      Value: the connecting client IP address from which the message is
      received

      Status: active

      Version: 1

   o  Method : arc

      Defined: [I-D.ARC]

      ptype: header

      Property: oldest-pass

      Value: the oldest instance with a still validating AMS signature

      Status: active

      Version: 1





Andersen, et al.       Expires September 19, 2018              [Page 20]

Internet-Draft                ARC-Protocol                    March 2018


10.2.  Definitions of the ARC header fields

   This specification adds three new header fields to the "Permanent
   Message Header Field Registry", as follows:

   o  Header field name: ARC-Seal

      Applicable protocol: mail

      Status: draft

      Author/Change controller: IETF

      Specification document(s): [I-D.ARC]

      Related information: [RFC6376]

   o  Header field name: ARC-Message-Signature

      Applicable protocol: mail

      Status: draft

      Author/Change controller: IETF

      Specification document(s): [I-D.ARC]

      Related information: [RFC6376]

   o  Header field name: ARC-Authentication-Results

      Applicable protocol: mail

      Status: standard

      Author/Change controller: IETF

      Specification document(s): [I-D.ARC]

      Related information: [RFC7601]

11.  Security Considerations

   The Security Considerations of [RFC6376] and [RFC7601] apply directly
   to this specification.






Andersen, et al.       Expires September 19, 2018              [Page 21]

Internet-Draft                ARC-Protocol                    March 2018


11.1.  Header Size

   Inclusion of ARC sets in the header of emails may cause problems for
   some older or more constrained MTAs if they are unable to accept the
   greater size of the header.

11.2.  DNS Operations

   Operators who receive a message bearing N ARC sets have to complete
   up to N+1 DNS queries to evaluate the chain (barring DNS redirection
   mechanisms which can increase the lookups for a given target value).
   This has at least two effects:

   1.  An attacker can send a message to an ARC partipant with a
       concocted sequence of ARC sets bearing the domains of intended
       victims, and all of them will be queried by the participant until
       a failure is discovered.  The difficulty of forging the signature
       values should limit the extent of this load to domains under
       control of the attacker.

   2.  DKIM only does one DNS check per signature, while this one can do
       many (per chain).  Absent caching, slow DNS responses can cause
       SMTP timeouts; and backlogged delivery queues on mediating
       systems.  This could be exploited as a DoS attack.

11.3.  Message Content Suspicion

   Recipients are cautioned to treat messages bearing ARC sets with the
   same suspicion that they apply to all other email messages.  This
   includes appropriate content scanning and other checks for
   potentially malicious content.  The handlers which are identified
   within the ARC chain may be used to provide input to local policy
   engines in cases where DMARC validation fails (due to mediation
   impacting SPF attribution, DKIM validity or alignment).

   Note that a passing ARC chain may not adequately mean that the
   message is safe because:

   1.  You have to trust all signatories; and

   2.  Even trusted systems may have become compromised or may not
       properly authenticate messages, so even with a chain of trusted
       participants, the message might still never have authenticated in
       the first place (which is why you have the AAR to inspect) or
       could have been subject to unintended modifications.






Andersen, et al.       Expires September 19, 2018              [Page 22]

Internet-Draft                ARC-Protocol                    March 2018


12.  Evaluating the Efficacy of the ARC Protocol

   The ARC protocol is designed to mitigate some of the most common
   failure conditions for email which transits intermediary handlers en
   route to the final recipient.  Some of these problems have happened
   due to the adoption of the DMARC protocol [RFC7489] and are listed in
   [RFC6377] and [RFC7960].

   As the ARC protocol becomes standardized and implemented amongst
   intermediary handlers, the following aspects should be evaluated in
   order to determine the success of the protocol in accomplishing the
   intended benefits.

   NOTE: Terminology within this section does NOT follow [RFC2119]
   interpretation.  This section represents the current thoughts of the
   working group regarding unanswered questions related to the protocol.
   Wider deployment will inform these topics and probably expand them.

12.1.  Success Consideration

   Currently, many receivers have heuristically determined overrides in
   order to rescue mail from intermediary-caused failures.  Many of
   those overrides rely on inferrence rather than direct evidence.

   ARC will be a success if, for ARC sealed messages, receivers are able
   to implment ARC-based algorithmic decisions based on the direct
   evidence found within the ARC chain.  This is especially relevant for
   DMARC processing when the DKIM d= value is aligned with the
   rfc5322.From author domain.

12.2.  Failure Considerations

   The intent of ARC is to be at most value-add and at worst benign.  If
   ARC opens up significant new vectors for abuse (see Section 11) then
   this protocol will be a failure.  Note that weaknesses inherent in
   the mail protocols ARC is built upon (such as DKIM replay attacks and
   other known issues) are not new vectors which can be attributed to
   this specification.

12.3.  Open Questions

   The following open questions are academic and have no clear answer at
   the time of the development of the protocol.  However, wide-spread
   deployment should be able to gather the necessary data to answer some
   or all of them.






Andersen, et al.       Expires September 19, 2018              [Page 23]

Internet-Draft                ARC-Protocol                    March 2018


12.3.1.  Value of the ARC-Seal (AS) Header

   Data should be collected to show if the ARC-Seal (AS) provides value
   beyond the ARC Message Signature (AMS) for either making delivery
   decisions or catching malicious actors trying to craft or replay
   malicious chains.

12.3.2.  DNS Overhead

   Longer ARC chains will require more queries to retrieve the keys for
   validating the chain.  While this is not believed to be a security
   issue (see Section 11.2), it is unclear how much overhead will truly
   be added.  This is similar to some of the initial processing and
   query load concerns which were debated at the time of the DKIM
   specification development.

   Data should be collected to better understand usable length and
   distribution of lengths found in valid ARC chains along with the the
   DNS impact of processing ARC chains.

12.3.3.  Distinguishing Valuable from Worthless Trace Information

   There are several edge cases where the information in the AAR can
   make the difference between message delivery or rejection.  For
   example, if there is a well known mailing list that ARC seals but
   doesn't do its own initial DMARC enforcement, a Final Receiver with
   this knowledge could make a delivery decision based upon the
   authentication information it sees in the corresponding AAR header.

   Certain trace information in the AAR is useful/necessary in the
   construction of DMARC reports.  It would be beneficial to identify
   the value-add of having intermediary-handled mail flow information
   added into the DMARC reports going back to senders.

   Certain receivers believe the entire set of trace information would
   be valuable to feed into machine learning systems to identify fraud
   and/or provide other signals related to message delivery.

   It is unclear what trace information will be valuable for all
   receivers, regardless of size.

   Data should be collected on what trace information receivers are
   using that provides useful signals that affect deliverability, and
   what portions of the trace data are left untouched or provide no
   useful information.

   Since many such systems are intentionly proprietary or confidential
   to prevent gaming by abusers, it may not be viable to reliably answer



Andersen, et al.       Expires September 19, 2018              [Page 24]

Internet-Draft                ARC-Protocol                    March 2018


   this particular question.  The evolving nature of attacks can also
   shift the landscape of "useful" information over time.

13.  Implementation Status

   [[ Note to the RFC Editor: Please remove this section before
   publication along with the reference to [RFC6982]. ]]

   This section records the status of known implementations of the
   protocol defined by this specification at the time of posting of this
   Internet-Draft, and is based on a proposal described in [RFC6982].
   The description of implementations in this section is intended to
   assist the IETF in its decision processes in progressing drafts to
   RFCs.  Please note that the listing of any individual implementation
   here does not imply endorsement by the IETF.  Furthermore, no effort
   has been spent to verify the information presented here that was
   supplied by IETF contributors.  This is not intended as, and must not
   be construed to be, a catalog of available implementations or their
   features.  Readers are advised to note that other implementations may
   exist.

   This information is known to be correct as of the seventh
   interoperability test event which was held on 2017-07-15 & 16 at
   IETF99.

   For a few of the implementations, later status information was
   available as of December 2017.

13.1.  GMail test reflector and incoming validation

   Organization: Google

   Description: Internal production implementation with both debug
   analysis and validating + sealing pass-through function

   Status of Operation: Production - Incoming Validation

   Coverage: Full spec implemented as of [ARC-DRAFT-06]

   Licensing: Proprietary - Internal only

   Implementation Notes:

   o  Full functionality was demonstrated during the interop testing on
      2017-07-15.

   Contact Info: arc-discuss@dmarc.org [9]




Andersen, et al.       Expires September 19, 2018              [Page 25]

Internet-Draft                ARC-Protocol                    March 2018


13.2.  AOL test reflector and internal tagging

   Organization: AOL

   Description: Internal prototype implementation with both debug
   analysis and validating + sealing pass-through function

   Status of Operation: Beta

   Coverage: ARC chain validity status checking is operational, but only
   applied to email addresses enrolled in the test program.  This system
   conforms to [ARC-DRAFT-06]

   Licensing: Proprietary - Internal only

   Implementation Notes:

   o  2017-07-15: Full functionality verified during the interop
      testing.

   Contact Info: arc-discuss@dmarc.org [10]

13.3.  dkimpy

   Organization: dkimpy developers/Scott Kitterman

   Description: Python DKIM package

   Status of Operation: Production

   Coverage:

   o  2017-07-15: The internal test suite is incomplete, but the command
      line developmental version of validator was demonstrated to
      interoperate with the Google and AOL implementations during the
      interop on 2017-07-15 and the released version passes the tests in
      [ARC-TEST] arc_test_suite [11] with both python and python3.

   Licensing: Open/Other (same as dkimpy package = BCD version 2)

   Contact Info: https://launchpad.net/dkimpy

13.4.  OpenARC

   Organization: TDP/Murray Kucherawy

   Description: Implemention of milter functionality related to the
   OpenDKIM and OpenDMARC packages



Andersen, et al.       Expires September 19, 2018              [Page 26]

Internet-Draft                ARC-Protocol                    March 2018


   Status of Operation: Beta

   Coverage: Built to support [ARC-DRAFT-10]

   Licensing: Open/Other (same as OpenDKIM and OpenDMARC packages)

   Implementation Notes:

   o  The build is FreeBSD oriented but some packages have been built
      for easier deployment on RedHat-based Linux platforms.

   o  Some issues still exist when deploying in a chained milter
      arrangement (such as OpenSPF -> OpenDKIM -> OpenDMARC -> OpenARC)
      with coordination between the stages.  When deployed in a
      "sandwich" configuration around an MLM, there is no effective
      mechanism to convey trust from the ingress (validator) to egress
      (signer) instances.  (_NOTE_: this is expected to resolved with a
      new release of OpenDMARC expected in January 2018.)

   Contact Info: arc-discuss@dmarc.org [12]

13.5.  Mailman 3.2 patch

   Organization: Mailman development team

   Description: Integrated ARC capabilities within the Mailman 3.2
   package

   Status of Operation: Patch submitted

   Coverage: Based on OpenARC

   Licensing: Same as mailman package - GPL

   Implementation Notes:

   o  Appears to work properly in at least one beta deployment, but
      waiting on acceptance of the pull request into the mainline of
      mailman development

   Contact Info: https://www.gnu.org/software/mailman/contact.html

13.6.  Copernica/MailerQ web-based validation

   Organization: Copernica

   Description: Web-based validation of ARC-signed messages




Andersen, et al.       Expires September 19, 2018              [Page 27]

Internet-Draft                ARC-Protocol                    March 2018


   Status of Operation: Beta

   Coverage: Built to support [ARC-DRAFT-05]

   Licensing: On-line usage only

   Implementation Notes:

   o  Released 2016-10-24

   o  Requires full message content to be pasted into a web form found
      at http://arc.mailerq.com/ (warning - https is not supported).

   o  An additional instance of an ARC signature can be added if one is
      willing to paste a private key into an unsecured web form.

   o  2017-07-15: Testing shows that results match the other
      implementations listed in this section.

   Contact Info: https://www.copernica.com/

13.7.  Rspamd

   Organization: Rspamd community

   Description: ARC signing and verification module

   Status of Operation: Production, though deployment usage is unknown

   Coverage: Built to support [ARC-DRAFT-06]

   Licensing: Open source

   Implementation Notes:

   o  2017-06-12: Released with version 1.6.0

   o  2017-07-15: Testing during the interop showed that the validation
      functionality interoperated with the Google, AOL, dkimpy and
      MailerQ implementations

   Contact Info: https://rspamd.com/doc/modules/arc.html and
   https://github.com/vstakhov/rspamd








Andersen, et al.       Expires September 19, 2018              [Page 28]

Internet-Draft                ARC-Protocol                    March 2018


13.8.  PERL MAIL::DKIM module

   Organization: FastMail

   Description: Email domain authentication (sign and/or verify) module,
   previously included SPF / DKIM / DMARC, now has ARC added

   Status of Operation: Production, deployment usage unknown

   Coverage: Built to support [ARC-DRAFT-10]

   Licensing: Open Source

   Implementation Notes:

   o  2017-12-15: v0.50 released with full test set passing for ARC

   Contact Info: http://search.cpan.org/~mbradshaw/Mail-DKIM-0.50/

13.9.  PERL Mail::Milter::Authentication module

   Organization: FastMail

   Description: Email domain authentication milter, uses MAIL::DKIM (see
   above)

   Status of Operation: Intial validation completed during IETF99
   hackathon with some follow-on work during the week

   Coverage: Built to support [I-D.ARC]

   Licensing: Open Source

   Implementation Notes:

   o  2017-07-15: Validation functionality which interoperates with
      Gmail, AOL, dkimpy was demonstrated; later in the week of IETF99,
      the signing functionality was reported to be working

   o  2017-07-20: ARC functionality has not yet been pushed back to the
      github repo but should be showing up soon

   Contact Info: https://github.com/fastmail/authentication_milter








Andersen, et al.       Expires September 19, 2018              [Page 29]

Internet-Draft                ARC-Protocol                    March 2018


13.10.  Sympa List Manager

   Organization: Sympa Dev Community

   Description: Work in progress

   Status of Operation: Work in progress

   Coverage: unknown

   Licensing: open source

   Implementation Notes:

   o  2018-01-05: Tracked as https://github.com/sympa-community/sympa/
      issues/153

   Contact Info: https://github.com/sympa-community

13.11.  Oracle Messaging Server

   Organization: Oracle

   Description:

   Status of Operation: Intial development work during IETF99 hackathon.
   Status since then unknown.

   Coverage: Built to support [ARC-DRAFT-06]

   Licensing: Unknown

   Implementation Notes:

   o  2018-01: Protocol handling components are completed, but crypto is
      not yet functional.

   Contact Info: Chris Newman

13.12.  MessageSystems Momentum

   Organization: MessageSystems/SparkPost

   Description: OpenARC integration into the LUA-enabled Momentum
   processing space

   Status of Operation: Beta




Andersen, et al.       Expires September 19, 2018              [Page 30]

Internet-Draft                ARC-Protocol                    March 2018


   Coverage: Built to support [ARC-DRAFT-10]

   Licensing: Unknown

   Implementation Notes:

   o  Initial deployments for validation expected in early 2018.

   Contact Info:

14.  References

14.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC3463]  Vaudreuil, G., "Enhanced Mail System Status Codes",
              RFC 3463, DOI 10.17487/RFC3463, January 2003,
              <https://www.rfc-editor.org/info/rfc3463>.

   [RFC5234]  Crocker, D., Ed. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", STD 68, RFC 5234,
              DOI 10.17487/RFC5234, January 2008,
              <https://www.rfc-editor.org/info/rfc5234>.

   [RFC5598]  Crocker, D., "Internet Mail Architecture", RFC 5598,
              DOI 10.17487/RFC5598, July 2009,
              <https://www.rfc-editor.org/info/rfc5598>.

   [RFC6376]  Crocker, D., Ed., Hansen, T., Ed., and M. Kucherawy, Ed.,
              "DomainKeys Identified Mail (DKIM) Signatures", STD 76,
              RFC 6376, DOI 10.17487/RFC6376, September 2011,
              <https://www.rfc-editor.org/info/rfc6376>.

   [RFC6377]  Kucherawy, M., "DomainKeys Identified Mail (DKIM) and
              Mailing Lists", BCP 167, RFC 6377, DOI 10.17487/RFC6377,
              September 2011, <https://www.rfc-editor.org/info/rfc6377>.

   [RFC7208]  Kitterman, S., "Sender Policy Framework (SPF) for
              Authorizing Use of Domains in Email, Version 1", RFC 7208,
              DOI 10.17487/RFC7208, April 2014,
              <https://www.rfc-editor.org/info/rfc7208>.






Andersen, et al.       Expires September 19, 2018              [Page 31]

Internet-Draft                ARC-Protocol                    March 2018


   [RFC7601]  Kucherawy, M., "Message Header Field for Indicating
              Message Authentication Status", RFC 7601,
              DOI 10.17487/RFC7601, August 2015,
              <https://www.rfc-editor.org/info/rfc7601>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

14.2.  Informative References

   [ARC-DRAFT-05]
              Andersen, K., "Authenticated Received Chain (ARC) Protocol
              (I-D-05)", n.d., <https://tools.ietf.org/html/
              draft-ietf-dmarc-arc-protocol-05>.

   [ARC-DRAFT-06]
              Andersen, K., "Authenticated Received Chain (ARC) Protocol
              (I-D-06)", n.d., <https://tools.ietf.org/html/
              draft-ietf-dmarc-arc-protocol-06>.

   [ARC-DRAFT-10]
              Andersen, K., "Authenticated Received Chain (ARC) Protocol
              (I-D-10)", n.d., <https://tools.ietf.org/html/
              draft-ietf-dmarc-arc-protocol-10>.

   [ARC-MULTI]
              Andersen, K., "Using Multiple Signing Algorithms with
              ARC", January 2018, <https://tools.ietf.org/html/
              draft-ietf-dmarc-arc-multi-01>.

   [ARC-TEST]
              Blank, S., "ARC Test Suite", January 2017,
              <https://github.com/ValiMail/arc_test_suite>.

   [ARC-USAGE]
              Jones, S., Adams, T., Rae-Grant, J., and K. Andersen,
              "Recommended Usage of the ARC Headers", December 2017,
              <https://tools.ietf.org/html/
              draft-ietf-dmarc-arc-usage-01>.

   [ENHANCED-STATUS]
              "IANA SMTP Enhanced Status Codes", n.d.,
              <http://www.iana.org/assignments/smtp-enhanced-status-
              codes/smtp-enhanced-status-codes.xhtml>.






Andersen, et al.       Expires September 19, 2018              [Page 32]

Internet-Draft                ARC-Protocol                    March 2018


   [I-D-7601bis]
              Kucherawy, M., "Message Header Field for Indicating
              Message Authentication Status", February 2018,
              <https://datatracker.ietf.org/doc/
              draft-ietf-dmarc-rfc7601bis/>.

   [RFC6982]  Sheffer, Y. and A. Farrel, "Improving Awareness of Running
              Code: The Implementation Status Section", RFC 6982,
              DOI 10.17487/RFC6982, July 2013,
              <https://www.rfc-editor.org/info/rfc6982>.

   [RFC7489]  Kucherawy, M., Ed. and E. Zwicky, Ed., "Domain-based
              Message Authentication, Reporting, and Conformance
              (DMARC)", RFC 7489, DOI 10.17487/RFC7489, March 2015,
              <https://www.rfc-editor.org/info/rfc7489>.

   [RFC7960]  Martin, F., Ed., Lear, E., Ed., Draegen. Ed., T., Zwicky,
              E., Ed., and K. Andersen, Ed., "Interoperability Issues
              between Domain-based Message Authentication, Reporting,
              and Conformance (DMARC) and Indirect Email Flows",
              RFC 7960, DOI 10.17487/RFC7960, September 2016,
              <https://www.rfc-editor.org/info/rfc7960>.

14.3.  URIs

   [1] https://trac.ietf.org/trac/dmarc/ticket/10

   [2] https://datatracker.ietf.org/wg/dcrup/about/

   [3] https://trac.ietf.org/trac/dmarc/ticket/11

   [4] https://trac.ietf.org/trac/dmarc/ticket/12

   [5] https://trac.ietf.org/trac/dmarc/ticket/13

   [6] https://trac.ietf.org/trac/dmarc/ticket/14

   [7] https://trac.ietf.org/trac/dmarc/ticket/15

   [8] https://trac.ietf.org/trac/dmarc/ticket/16

   [9] mailto:arc-discuss@dmarc.org

   [10] mailto:arc-discuss@dmarc.org

   [11] https://github.com/ValiMail/arc_test_suite

   [12] mailto:arc-discuss@dmarc.org



Andersen, et al.       Expires September 19, 2018              [Page 33]

Internet-Draft                ARC-Protocol                    March 2018


   [13] https://trac.ietf.org/trac/dmarc/ticket/17

   [14] mailto:dmarc@ietf.org

   [15] mailto:arc-discuss@dmarc.org

Appendix A.  Appendix A - Design Requirements

   (This section is re-inserted for background information from
   [ARC-DRAFT-06] and earlier versions.)

   The specification of the ARC framework is driven by the following
   high-level goals, security considerations, and practical operational
   requirements.

A.1.  Primary Design Criteria

   o  Provide a verifiable "chain of custody" for email messages;

   o  Not require changes for originators of email;

   o  Support the verification of the ARC header field set by each hop
      in the handling chain;

   o  Work at Internet scale; and

   o  Provide a trustable mechanism for the communication of
      Authentication-Results across trust boundaries.

A.2.  Out of Scope

   ARC is not a trust framework.  Users of the ARC header fields are
   cautioned against making unsubstantiated conclusions when
   encountering a "broken" ARC sequence.

Appendix B.  Appendix B - Example Usage

   [[ Note: The following examples were mocked up early in the
   definition process for the spec.  They no longer reflect the current
   definition and need various updates which will be included in a
   future draft.  Issue 17 [13] ]]

   (Obsolete but retained for illustrative purposes)








Andersen, et al.       Expires September 19, 2018              [Page 34]

Internet-Draft                ARC-Protocol                    March 2018


B.1.  Example 1: Simple mailing list

B.1.1.  Here's the message as it exits the Origin:

 Return-Path: <jqd@d1.example>
 Received: from [10.10.10.131] (w-x-y-z.dsl.static.isp.com [w.x.y.z])
     (authenticated bits=0)
     by segv.d1.example with ESMTP id t0FN4a8O084569;
     Thu, 14 Jan 2015 15:00:01 -0800 (PST)
     (envelope-from jqd@d1.example)
 DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=d1.example;
     s=20130426; t=1421363082;
     bh=EoJqaaRvhrngQxmQ3VnRIIMRBgecuKf1pdkxtfGyWaU=;
     h=Message-ID:Date:From:MIME-Version:To:CC:Subject:Content-Type:
      Content-Transfer-Encoding;
     b=HxsvPubDE+R96v9dM9Y7V3dJUXvajd6rvF5ec5BPe/vpVBRJnD4I2weEIyYijrvQw
      bv9uUA1t94kMN0Q+haFo6hiQPnkuDxku5+oxyZWOqtNH7CTMgcBWWTp4QD4Gd3TRJl
      gotsX4RkbNcUhlfnoQ0p+CywWjieI8aR6eof6WDQ=
 Message-ID: <54B84785.1060301@d1.example>
 Date: Thu, 14 Jan 2015 15:00:01 -0800
 From: John Q Doe <jqd@d1.example>
 To: arc@dmarc.org
 Subject: Example 1

 Hey gang,
 This is a test message.
 --J.

B.1.2.  Message is then received at example.org

B.1.2.1.  Example 1, Step A: Message forwarded to list members

   Processing at example.org:

   o  example.org performs authentication checks

   o  No previous Authentication-Results or ARC-Seal headers are present

   o  example.org adds ARC-Authentication-Results header

   o  example.org adds Received: header

   o  example.org adds a ARC-Seal header

   Here's the message as it exits example.org:






Andersen, et al.       Expires September 19, 2018              [Page 35]

Internet-Draft                ARC-Protocol                    March 2018


 Return-Path: <jqd@d1.example>
 ARC-Seal: i=1; a=rsa-sha256; t=1421363107;
     s=seal2015; d=example.org; cv=none;
     b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz61
      TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L69
      EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0A=
 ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed;
     d=example.org; s=clochette; t=1421363105;
     bh=FjQYm3HhXStuzauzV4Uc02o55EzATNfL4uBvEoy7k3s=;
     h=List-Id:List-Unsubscribe:List-Archive:List-Post:
      List-Help:List-Subscribe:Reply-To:DKIM-Signature;
     b=Wb4EiVANwAX8obWwrRWpmlhxmdIvj0dv0psIkiaGOOug32iTAcc74/iWvlPXpF1F5
      vYVF0mw5cmKOa824tKkUOOE3yinTAekqnly7GJuFCDeSA1fQHhStVV7BzAr3A+m4bw
      a6RIDgr3rOPJil678dZTHfztFWyjwIUxB5Ajxj/M=
 Received: from segv.d1.example (segv.d1.example [72.52.75.15])
     by lists.example.org (8.14.5/8.14.5) with ESMTP id t0EKaNU9010123
     for <arc@example.org>; Thu, 14 Jan 2015 15:01:30 -0800 (PST)
     (envelope-from jqd@d1.example)
 ARC-Authentication-Results: i=1; lists.example.org;
     spf=pass smtp.mfrom=jqd@d1.example;
     dkim=pass (1024-bit key) header.i=@d1.example;
     dmarc=pass
 Received: from [10.10.10.131] (w-x-y-z.dsl.static.isp.com [w.x.y.z])
     (authenticated bits=0)
     by segv.d1.example with ESMTP id t0FN4a8O084569;
     Thu, 14 Jan 2015 15:00:01 -0800 (PST)
     (envelope-from jqd@d1.example)
 DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=d1.example;
     s=20130426; t=1421363082;
     bh=EoJqaaRvhrngQxmQ3VnRIIMRBgecuKf1pdkxtfGyWaU=;
     h=Message-ID:Date:From:MIME-Version:To:CC:Subject:Content-Type:
      Content-Transfer-Encoding;
     b=HxsvPubDE+R96v9dM9Y7V3dJUXvajd6rvF5ec5BPe/vpVBRJnD4I2weEIyYijr
      vQwbv9uUA1t94kMN0Q+haFo6hiQPnkuDxku5+oxyZWOqtNH7CTMgcBWWTp4QD4G
      d3TRJlgotsX4RkbNcUhlfnoQ0p+CywWjieI8aR6eof6WDQ=
 Message-ID: <54B84785.1060301@d1.example>
 Date: Thu, 14 Jan 2015 15:00:01 -0800
 From: John Q Doe <jqd@d1.example>
 To: arc@example.org
 Subject: [Lists] Example 1

 Hey gang,
 This is a test message.
 --J.







Andersen, et al.       Expires September 19, 2018              [Page 36]

Internet-Draft                ARC-Protocol                    March 2018


B.1.3.  Example 1: Message received by Recipient

   Let's say that the Recipient is example.com

   Processing at example.com:

   o  example.com performs usual authentication checks

   o  example.com adds Authentication-Results: header, Received header

   o  Determines that message fails DMARC

   o  Checks for ARC-Seal: header; finds one

   o  Validates the signature in the ARC-Seal: header, which covers the
      ARC-Authentication-Results: header

   o  example.com can use the ARC-Authentication-Results values or
      verify the DKIM-Signature from lists.example.org

   Here's what the message looks like at this point:

 Return-Path: <jqd@d1.example>
 Received: from example.org (example.org [208.69.40.157])
     by clothilde.example.com with ESMTP id
     d200mr22663000ykb.93.1421363207
     for <fmartin@example.com>; Thu, 14 Jan 2015 15:02:40 -0800 (PST)
 Authentication-Results: clothilde.example.com; spf=fail
     smtp.from=jqd@d1.example; dkim=pass (1024-bit key)
     header.i=@example.org; dmarc=fail; arc=pass
 ARC-Seal: i=1; a=rsa-sha256; t=1421363107;
     s=seal2015; d=example.org; cv=none;
     b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz61
      TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L69
      EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0A=
 ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed;
     d=example.org; s=clochette; t=1421363105;
     bh=FjQYm3HhXStuzauzV4Uc02o55EzATNfL4uBvEoy7k3s=;
     h=List-Id:List-Unsubscribe:List-Archive:List-Post:
      List-Help:List-Subscribe:Reply-To:DKIM-Signature;
     b=Wb4EiVANwAX8obWwrRWpmlhxmdIvj0dv0psIkiaGOOug32iTAcc74/iWvlPXpF
      1F5vYVF0mw5cmKOa824tKkUOOE3yinTAekqnly7GJuFCDeSA1fQHhStVV7BzAr3
      A+m4bwa6RIDgr3rOPJil678dZTHfztFWyjwIUxB5Ajxj/M=
 Received: from segv.d1.example (segv.d1.example [72.52.75.15])
     by lists.example.org (8.14.5/8.14.5) with ESMTP id t0EKaNU9010123
     for <arc@example.org>; Thu, 14 Jan 2015 15:01:30 -0800 (PST)
     (envelope-from jqd@d1.example)
 ARC-Authentication-Results: i=1; lists.example.org;



Andersen, et al.       Expires September 19, 2018              [Page 37]

Internet-Draft                ARC-Protocol                    March 2018


     spf=pass smtp.mfrom=jqd@d1.example;
     dkim=pass (1024-bit key) header.i=@d1.example;
     dmarc=pass
 Received: from [10.10.10.131] (w-x-y-z.dsl.static.isp.com [w.x.y.z])
     (authenticated bits=0)
     by segv.d1.example with ESMTP id t0FN4a8O084569;
     Thu, 14 Jan 2015 15:00:01 -0800 (PST)
     (envelope-from jqd@d1.example)
 DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=d1.example;
     s=20130426; t=1421363082;
     bh=EoJqaaRvhrngQxmQ3VnRIIMRBgecuKf1pdkxtfGyWaU=;
     h=Message-ID:Date:From:MIME-Version:To:CC:Subject:Content-Type:
      Content-Transfer-Encoding;
     b=HxsvPubDE+R96v9dM9Y7V3dJUXvajd6rvF5ec5BPe/vpVBRJnD4I2weEIyYijrvQw
      bv9uUA1t94kMN0Q+haFo6hiQPnkuDxku5+oxyZWOqtNH7CTMgcBWWTp4QD4Gd3TRJl
      gotsX4RkbNcUhlfnoQ0p+CywWjieI8aR6eof6WDQ=
 Message-ID: <54B84785.1060301@d1.example>
 Date: Thu, 14 Jan 2015 15:00:01 -0800
 From: John Q Doe <jqd@d1.example>
 To: arc@example.org
 Subject: [Lists] Example 1

 Hey gang,
 This is a test message.
 --J.

B.2.  Example 2: Mailing list to forwarded mailbox

B.2.1.  Here's the message as it exits the Origin:






















Andersen, et al.       Expires September 19, 2018              [Page 38]

Internet-Draft                ARC-Protocol                    March 2018


 Return-Path: <jqd@d1.example>
 Received: from [10.10.10.131] (w-x-y-z.dsl.static.isp.com [w.x.y.z])
     (authenticated bits=0)
     by segv.d1.example with ESMTP id t0FN4a8O084569;
     Thu, 14 Jan 2015 15:00:01 -0800 (PST)
     (envelope-from jqd@d1.example)
 DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=d1.example;
     s=20130426; t=1421363082;
     bh=EoJqaaRvhrngQxmQ3VnRIIMRBgecuKf1pdkxtfGyWaU=;
     h=Message-ID:Date:From:MIME-Version:To:CC:Subject:Content-Type:
      Content-Transfer-Encoding;
     b=HxsvPubDE+R96v9dM9Y7V3dJUXvajd6rvF5ec5BPe/vpVBRJnD4I2weEIyYijrvQw
      bv9uUA1t94kMN0Q+haFo6hiQPnkuDxku5+oxyZWOqtNH7CTMgcBWWTp4QD4Gd3TRJl
      gotsX4RkbNcUhlfnoQ0p+CywWjieI8aR6eof6WDQ=
 Message-ID: <54B84785.1060301@d1.example>
 Date: Thu, 14 Jan 2015 15:00:01 -0800
 From: John Q Doe <jqd@d1.example>
 To: arc@example.org
 Subject: Example 1

 Hey gang,
 This is a test message.
 --J.

B.2.2.  Message is then received at example.org

B.2.2.1.  Example 2, Step A: Message forwarded to list members

   Processing at example.org:

   o  example.org performs authentication checks

   o  example.org applies standard DKIM signature

   o  No previous Authentication-Results or ARC-Seal headers are present

   o  example.org adds ARC-Authentication-Results header

   o  example.org adds usual Received: header

   o  example.org adds a ARC-Seal header

   Here's the message as it exits Step A:








Andersen, et al.       Expires September 19, 2018              [Page 39]

Internet-Draft                ARC-Protocol                    March 2018


   Return-Path: <jqd@d1.example>
   ARC-Seal: i=1; a=rsa-sha256; t=1421363107;
       s=seal2015; d=example.org; cv=none;
       b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz6
        1TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L
        69EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0A=
   ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed;
       d=example.org; s=clochette; t=1421363105;
       bh=FjQYm3HhXStuzauzV4Uc02o55EzATNfL4uBvEoy7k3s=;
       h=List-Id:List-Unsubscribe:List-Archive:List-Post:
        List-Help:List-Subscribe:Reply-To:DKIM-Signature;
       b=Wb4EiVANwAX8obWwrRWpmlhxmdIvj0dv0psIkiaGOOug32iTAcc74/iWvlPXpF
        1F5vYVF0mw5cmKOa824tKkUOOE3yinTAekqnly7GJuFCDeSA1fQHhStVV7BzAr3
        A+m4bwa6RIDgr3rOPJil678dZTHfztFWyjwIUxB5Ajxj/M=
   Received: from segv.d1.example (segv.d1.example [72.52.75.15])
       by lists.example.org (8.14.5/8.14.5) with ESMTP id t0EKaNU9010123
       for <arc@example.org>; Thu, 14 Jan 2015 15:01:30 -0800 (PST)
       (envelope-from jqd@d1.example)
   ARC-Authentication-Results: i=1; lists.example.org;
       spf=pass smtp.mfrom=jqd@d1.example;
       dkim=pass (1024-bit key) header.i=@d1.example;
       dmarc=pass
   Received: from [10.10.10.131] (w-x-y-z.dsl.static.isp.com [w.x.y.z])
       (authenticated bits=0)
       by segv.d1.example with ESMTP id t0FN4a8O084569;
       Thu, 14 Jan 2015 15:00:01 -0800 (PST)
       (envelope-from jqd@d1.example)
   DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=d1.example;
       s=20130426; t=1421363082;
       bh=EoJqaaRvhrngQxmQ3VnRIIMRBgecuKf1pdkxtfGyWaU=;
       h=Message-ID:Date:From:MIME-Version:To:CC:Subject:Content-Type:
        Content-Transfer-Encoding;
       b=HxsvPubDE+R96v9dM9Y7V3dJUXvajd6rvF5ec5BPe/vpVBRJnD4I2weEIyYijr
        vQwbv9uUA1t94kMN0Q+haFo6hiQPnkuDxku5+oxyZWOqtNH7CTMgcBWWTp4QD4G
        d3TRJlgotsX4RkbNcUhlfnoQ0p+CywWjieI8aR6eof6WDQ=
   Message-ID: <54B84785.1060301@d1.example>
   Date: Thu, 14 Jan 2015 15:00:01 -0800
   From: John Q Doe <jqd@d1.example>
   To: arc@example.org
   Subject: [Lists] Example 1

   Hey gang,
   This is a test message.
   --J.







Andersen, et al.       Expires September 19, 2018              [Page 40]

Internet-Draft                ARC-Protocol                    March 2018


B.2.2.2.  Example 2, Step B: Message from list forwarded

   The message is delivered to a mailbox at gmail.com
   Processing at gmail.com:

   o  gmail.com performs usual authentication checks

   o  gmail.com adds Authentication-Results: and Received: header

   o  Determines that message fails DMARC

   o  Checks for ARC-Seal: header; finds one

   o  Validates the signature in the ARC-Seal: header, which covers the
      ARC-Authentication-Results: header

   o  Uses the ARC-Authentication-Results: values, but:

   o  Instead of delivering message, prepares to forward message per
      user settings

   o  Applies usual DKIM signature

   o  gmail.com adds it's own ARC-Seal: header, contents of which are

      *  version

      *  sequence number ("i=2")

      *  hash algorithm (SHA256 as example)

      *  timestamp ("t=")

      *  selector for key ("s=notary01")

      *  domain for key ("d=gmail.com")

      *  headers included in hash ("h=ARC-Authentication-Results:ARC-
         Seal")

      *  Note: algorithm requires only ARC-Seals with lower sequence #
         be included, in ascending order

      *  signature of the header hash

   Here's what the message looks like at this point:

   Return-Path: <jqd@d1.example>



Andersen, et al.       Expires September 19, 2018              [Page 41]

Internet-Draft                ARC-Protocol                    March 2018


   ARC-Seal: i=2; a=rsa-sha256; t=1421363253;
       s=notary01; d=gmail.com; cv=pass;
       b=sjHDMriRZ0Mui5eVEOGscRHWbQHcy97lvrduHQ8h+f2CfIrxUiKOE44x3LQwDWR
        YbDjf5fcM9MdcIahC+cP59BQ9Y9DHwMDzwRTnM7NVb4kY+tSaVnLoIOaP9lF/sut
        txO+RRNr0fCFw==
   ARC-Message-Signature: i=2; a=rsa-sha256; c=relaxed/relaxed;
       d=gmail.com; s=20120806;
       h=mime-version:content-type:x-original-sender:
        x-original-authentication-results:precedence:mailing-list:
        list-id:list-post:list-help:list-archive:sender:reply-to:
        list-unsubscribe:DKIM-Signature;
       bh=2+gZwZhUK2V7JbpoO2MTrU19WvhcA4JnjiohFm9ZZ/g=;
       b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz61
        TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L69
        EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0Ab8Oi1ebYV/hIBmfhS
        LF1E80hMPcMijONfTQB6g5Hoh/kE6N2fgp6aSngL/WA3+g3Id8ElhXHvIGcJRFeM
        KdJqiW5cxdqPTRW+BnR5ee6Tzg06kr265NTDIAU8p8fQNuLfZj49MMA+QwDBJtXw
        bQoZyRtb6X6q0mYaszUB8kw==
   Received: by mail-yk0-f179.google.com with SMTP id 19so2728865ykq.10
       for <mailbox@gmail.com>; Thu, 14 Jan 2015 15:02:45 -0800 (PST)
   Authentication-Results: i=2; gmail.com; spf=fail
       smtp.from=jqd@d1.example; dkim=pass (1024-bit key)
       header.i=@example.org; dmarc=fail; arc=pass
   ARC-Seal: i=1; a=rsa-sha256; t=1421363107;
       s=seal2015; d=example.org; cv=none:
       b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz61
        TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L69
        EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0A=
   ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed;
       d=example.org; s=clochette; t=1421363105;
       bh=FjQYm3HhXStuzauzV4Uc02o55EzATNfL4uBvEoy7k3s=;
       h=List-Id:List-Unsubscribe:List-Archive:List-Post:
        List-Help:List-Subscribe:Reply-To:DKIM-Signature;
       b=Wb4EiVANwAX8obWwrRWpmlhxmdIvj0dv0psIkiaGOOug32iTAcc74/iWvlPXpF
        1F5vYVF0mw5cmKOa824tKkUOOE3yinTAekqnly7GJuFCDeSA1fQHhStVV7BzAr3
        A+m4bwa6RIDgr3rOPJil678dZTHfztFWyjwIUxB5Ajxj/M=
   Received: from segv.d1.example (segv.d1.example [72.52.75.15])
       by lists.example.org (8.14.5/8.14.5) with ESMTP id t0EKaNU9010123
       for <arc@example.org>; Thu, 14 Jan 2015 15:01:30 -0800 (PST)
       (envelope-from jqd@d1.example)
   ARC-Authentication-Results: i=1; lists.example.org;
       spf=pass smtp.mfrom=jqd@d1.example;
       dkim=pass (1024-bit key) header.i=@d1.example;
       dmarc=pass
   Received: from [10.10.10.131] (w-x-y-z.dsl.static.isp.com [w.x.y.z])
       (authenticated bits=0)
       by segv.d1.example with ESMTP id t0FN4a8O084569;
       Thu, 14 Jan 2015 15:00:01 -0800 (PST)



Andersen, et al.       Expires September 19, 2018              [Page 42]

Internet-Draft                ARC-Protocol                    March 2018


       (envelope-from jqd@d1.example)
   DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=d1.example;
       s=20130426; t=1421363082;
       bh=EoJqaaRvhrngQxmQ3VnRIIMRBgecuKf1pdkxtfGyWaU=;
       h=Message-ID:Date:From:MIME-Version:To:CC:Subject:Content-Type:
        Content-Transfer-Encoding;
       b=HxsvPubDE+R96v9dM9Y7V3dJUXvajd6rvF5ec5BPe/vpVBRJnD4I2weEIyYijr
        vQwbv9uUA1t94kMN0Q+haFo6hiQPnkuDxku5+oxyZWOqtNH7CTMgcBWWTp4QD4G
        d3TRJlgotsX4RkbNcUhlfnoQ0p+CywWjieI8aR6eof6WDQ=
   Message-ID: <54B84785.1060301@d1.example>
   Date: Thu, 14 Jan 2015 15:00:01 -0800
   From: John Q Doe <jqd@d1.example>
   To: arc@example.org
   Subject: [Lists] Example 1

   Hey gang,
   This is a test message.
   --J.

B.2.3.  Example 2: Message received by Recipient

   Let's say that the Recipient is example.com
   Processing at example.com:

   o  example.com performs usual authentication checks

   o  example.com adds Authentication-Results: header, Received header

   o  Determines that message fails DMARC

   o  Checks for ARC-Seal: header; finds two

   o  Validates the signature in the highest numbered ("i=2") ARC-Seal:
      header, which covers all previous ARC-Seal: and ARC-
      Authentication-Results: headers

   o  Validates the other ARC-Seal header ("i=1"), which covers the ARC-
      Authentication-Results: header

   o  example.com uses the ARC-Authentication-Results: values

   Here's what the message looks like at this point:

   Return-Path: <jqd@d1.example>
   Received: from mail-ob0-f188.google.com (mail-ob0-f188.google.com
       [208.69.40.157]) by clothilde.example.com with ESMTP id
       d200mr22663000ykb.93.1421363268
       for <fmartin@example.com>; Thu, 14 Jan 2015 15:03:15 -0800 (PST)



Andersen, et al.       Expires September 19, 2018              [Page 43]

Internet-Draft                ARC-Protocol                    March 2018


   Authentication-Results: clothilde.example.com; spf=fail
       smtp.from=jqd@d1.example; dkim=pass (1024-bit key)
       header.i=@gmail.com; dmarc=fail; arc=pass
   ARC-Seal: i=2; a=rsa-sha256; t=1421363253;
       s=notary01; d=gmail.com; cv=pass;
       b=sjHDMriRZ0Mui5eVEOGscRHWbQHcy97lvrduHQ8h+f2CfIrxUiKOE44x3LQwDWR
        YbDjf5fcM9MdcIahC+cP59BQ9Y9DHwMDzwRTnM7NVb4kY+tSaVnLoIOaP9lF/sut
        txO+RRNr0fCFw==
   ARC-Message-Signature: i=2; a=rsa-sha256; c=relaxed/relaxed;
       d=gmail.com; s=20120806;
       h=mime-version:content-type:x-original-sender:
        x-original-authentication-results:precedence:mailing-list:
        list-id:list-post:list-help:list-archive:sender:reply-to:
        :list-unsubscribe:DKIM-Signature;
       bh=2+gZwZhUK2V7JbpoO2MTrU19WvhcA4JnjiohFm9ZZ/g=;
       b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz61
        TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L69
        EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0Ab8Oi1ebYV/hIBmfhS
        LF1E80hMPcMijONfTQB6g5Hoh/kE6N2fgp6aSngL/WA3+g3Id8ElhXHvIGcJRFeM
        KdJqiW5cxdqPTRW+BnR5ee6Tzg06kr265NTDIAU8p8fQNuLfZj49MMA+QwDBJtXw
        bQoZyRtb6X6q0mYaszUB8kw==
   Received: by mail-yk0-f179.google.com with SMTP id 19so2728865ykq.10
       for <mailbox@gmail.com>; Thu, 14 Jan 2015 15:02:45 -0800 (PST)
   Authentication-Results: i=2; gmail.com; spf=fail
       smtp.from=jqd@d1.example; dkim=pass (1024-bit key)
       header.i=@example.org; dmarc=fail; arc=pass
   ARC-Seal: i=1; a=rsa-sha256; t=1421363107;
       s=seal2015; d=example.org; cv=none;
       b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz61
        TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L69
        EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0A=
   ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed;
       d=example.org; s=clochette; t=1421363105;
       bh=FjQYm3HhXStuzauzV4Uc02o55EzATNfL4uBvEoy7k3s=;
       h=List-Id:List-Unsubscribe:List-Archive:List-Post:
        List-Help:List-Subscribe:Reply-To:DKIM-Signature;
       b=Wb4EiVANwAX8obWwrRWpmlhxmdIvj0dv0psIkiaGOOug32iTAcc74/iWvlPXpF
        1F5vYVF0mw5cmKOa824tKkUOOE3yinTAekqnly7GJuFCDeSA1fQHhStVV7BzAr3
        A+m4bwa6RIDgr3rOPJil678dZTHfztFWyjwIUxB5Ajxj/M=
   Received: from segv.d1.example (segv.d1.example [72.52.75.15])
       by lists.example.org (8.14.5/8.14.5) with ESMTP id t0EKaNU9010123
       for <arc@example.org>; Thu, 14 Jan 2015 15:01:30 -0800 (PST)
       (envelope-from jqd@d1.example)
   ARC-Authentication-Results: i=1; lists.example.org;
       spf=pass smtp.mfrom=jqd@d1.example;
       dkim=pass (1024-bit key) header.i=@d1.example;
       dmarc=pass
   Received: from [10.10.10.131] (w-x-y-z.dsl.static.isp.com [w.x.y.z])



Andersen, et al.       Expires September 19, 2018              [Page 44]

Internet-Draft                ARC-Protocol                    March 2018


       (authenticated bits=0)
       by segv.d1.example with ESMTP id t0FN4a8O084569;
       Thu, 14 Jan 2015 15:00:01 -0800 (PST)
       (envelope-from jqd@d1.example)
   DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=d1.example;
       s=20130426; t=1421363082;
       bh=EoJqaaRvhrngQxmQ3VnRIIMRBgecuKf1pdkxtfGyWaU=;
       h=Message-ID:Date:From:MIME-Version:To:CC:Subject:Content-Type:
        Content-Transfer-Encoding;
       b=HxsvPubDE+R96v9dM9Y7V3dJUXvajd6rvF5ec5BPe/vpVBRJnD4I2weEIyYijr
        vQwbv9uUA1t94kMN0Q+haFo6hiQPnkuDxku5+oxyZWOqtNH7CTMgcBWWTp4QD4G
        d3TRJlgotsX4RkbNcUhlfnoQ0p+CywWjieI8aR6eof6WDQ=
   Message-ID: <54B84785.1060301@d1.example>
   Date: Thu, 14 Jan 2015 15:00:01 -0800
   From: John Q Doe <jqd@d1.example>
   To: arc@example.org
   Subject: [Lists] Example 1

   Hey gang,
   This is a test message.
   --J.

B.3.  Example 3: Mailing list to forwarded mailbox with source

B.3.1.  Here's the message as it exits the Origin:


























Andersen, et al.       Expires September 19, 2018              [Page 45]

Internet-Draft                ARC-Protocol                    March 2018


  Return-Path: <jqd@d1.example>
  Received: from [10.10.10.131] (w-x-y-z.dsl.static.isp.com [w.x.y.z])
      (authenticated bits=0)
      by segv.d1.example with ESMTP id t0FN4a8O084569;
      Thu, 14 Jan 2015 15:00:01 -0800 (PST)
      (envelope-from jqd@d1.example)
  ARC-Seal: i=1; a=rsa-sha256; t=1421363107;
      s=origin2015; d=d1.example; cv=none;
      b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz61T
       X6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L69EU
       8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0A=
  ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed;
      d=d1.example; s=20130426; t=1421363082;
      bh=EoJqaaRvhrngQxmQ3VnRIIMRBgecuKf1pdkxtfGyWaU=;
      h=MIME-Version:CC:Content-Type:Content-Transfer-Encoding;
      b=HxsvPubDE+R96v9dM9Y7V3dJUXvajd6rvF5ec5BPe/vpVBRJnD4I2weEIyYijrv
       Qwbv9uUA1t94kMN0Q+haFo6hiQPnkuDxku5+oxyZWOqtNH7CTMgcBWWTp4QD4Gd3
       TRJlgotsX4RkbNcUhlfnoQ0p+CywWjieI8aR6eof6WDQ=
  Message-ID: <54B84785.1060301@d1.example>
  Date: Thu, 14 Jan 2015 15:00:01 -0800
  From: John Q Doe <jqd@d1.example>
  To: arc@example.org
  Subject: Example 1

  Hey gang,
  This is a test message.
  --J.

B.3.2.  Message is then received at example.org

B.3.2.1.  Example 3, Step A: Message forwarded to list members with
          source

   Processing at example.org:

   o  example.org performs authentication checks

   o  example.org applies standard DKIM signature

   o  Checks for ARC-Seal: header; finds one (i=1)

   o  Validates the signature in the ARC-Seal (i=1): header, which
      covers the d1.example ARC-Message-Signature: header

   o  example.org adds ARC-Authentication-Results header

   o  example.org adds usual Received: header




Andersen, et al.       Expires September 19, 2018              [Page 46]

Internet-Draft                ARC-Protocol                    March 2018


   o  example.org adds a DKIM-Signature

   o  example.org adds a ARC-Seal header, contents of which are

      *  sequence number ("i=2")

      *  hash algorithm (SHA256 as example)

      *  timestamp ("t=")

      *  chain validity ("cv=")

      *  selector for key ("s=seal2015")

      *  domain for key ("d=example.org")

      *  signature ("b=")

   Here's the message as it exits Step A:
































Andersen, et al.       Expires September 19, 2018              [Page 47]

Internet-Draft                ARC-Protocol                    March 2018


   Return-Path: <jqd@d1.example>
   ARC-Seal: i=2; a=rsa-sha256; t=1421363107;
       s=seal2015; d=example.org; cv=pass;
       b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz6
        1TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L
        69EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0A=
   ARC-Message-Signature: i=2; a=rsa-sha256; c=relaxed/relaxed;
       d=example.org; s=clochette; t=1421363105;
       bh=FjQYm3HhXStuzauzV4Uc02o55EzATNfL4uBvEoy7k3s=;
       h=List-Id:List-Unsubscribe:List-Archive:List-Post:
        List-Help:List-Subscribe:From:Reply-To:DKIM-Signature;
       b=Wb4EiVANwAX8obWwrRWpmlhxmdIvj0dv0psIkiaGOOug32iTAcc74/iWvlPXpF
        1F5vYVF0mw5cmKOa824tKkUOOE3yinTAekqnly7GJuFCDeSA1fQHhStVV7BzAr3
        A+m4bwa6RIDgr3rOPJil678dZTHfztFWyjwIUxB5Ajxj/M=
   Received: from segv.d1.example (segv.d1.example [72.52.75.15])
       by lists.example.org (8.14.5/8.14.5) with ESMTP id t0EKaNU9010123
       for <arc@example.org>; Thu, 14 Jan 2015 15:01:30 -0800 (PST)
       (envelope-from jqd@d1.example)
   ARC-Authentication-Results: i=2; lists.example.org;
       spf=pass smtp.mfrom=jqd@d1.example;
       dkim=pass (1024-bit key) header.i=@d1.example;
       dmarc=pass
   Received: from [10.10.10.131] (w-x-y-z.dsl.static.isp.com [w.x.y.z])
       (authenticated bits=0)
       by segv.d1.example with ESMTP id t0FN4a8O084569;
       Thu, 14 Jan 2015 15:00:01 -0800 (PST)
       (envelope-from jqd@d1.example)
   ARC-Seal: i=1; a=rsa-sha256; t=1421363107;
       s=origin2015; d=d1.example; cv=none;
       b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz61
        TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L69
        EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0A=
   ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed;
       d=d1.example; s=20130426; t=1421363082;
       bh=EoJqaaRvhrngQxmQ3VnRIIMRBgecuKf1pdkxtfGyWaU=;
       h=MIME-Version:CC:Content-Type:Content-Transfer-Encoding;
       b=HxsvPubDE+R96v9dM9Y7V3dJUXvajd6rvF5ec5BPe/vpVBRJnD4I2weEIyYijr
        vQwbv9uUA1t94kMN0Q+haFo6hiQPnkuDxku5+oxyZWOqtNH7CTMgcBWWTp4QD4G
        d3TRJlgotsX4RkbNcUhlfnoQ0p+CywWjieI8aR6eof6WDQ=
   Message-ID: <54B84785.1060301@d1.example>
   Date: Thu, 14 Jan 2015 15:00:01 -0800
   From: John Q Doe <jqd@d1.example>
   To: arc@example.org
   Subject: [Lists] Example 1

   Hey gang,
   This is a test message.
   --J.



Andersen, et al.       Expires September 19, 2018              [Page 48]

Internet-Draft                ARC-Protocol                    March 2018


B.3.2.2.  Example 3, Step B: Message from list forwarded with source

   The message is delivered to a mailbox at gmail.com
   Processing at gmail.com:

   o  gmail.com performs usual authentication checks

   o  gmail.com adds Authentication-Results: and Received: header

   o  Determines that message fails DMARC

   o  Checks for ARC-Seal: header; finds two

   o  Validates the signature in the ARC-Seal (i=2): header, which
      covers the ARC-Authentication-Results: header

   o  Validates the signature in the ARC-Seal (i=1): header, which
      covers the d1.example ARC-Message-Signature: header

   o  Uses the ARC-Authentication-Results: values, but:

   o  Instead of delivering message, prepares to forward message per
      user settings

   o  Applies usual DKIM signature

   o  gmail.com adds it's own ARC-Seal: header, contents of which are

      *  version

      *  sequence number ("i=2")

      *  hash algorithm (SHA256 as example)

      *  timestamp ("t=")

      *  selector for key ("s=notary01")

      *  domain for key ("d=gmail.com")

      *  Note: algorithm requires only ARC-Seals with lower sequence #
         be included, in ascending order

      *  signature of the chain

   Here's what the message looks like at this point:

   Return-Path: <jqd@d1.example>



Andersen, et al.       Expires September 19, 2018              [Page 49]

Internet-Draft                ARC-Protocol                    March 2018


   ARC-Seal: i=3; a=rsa-sha256; t=1421363253;
       s=notary01; d=gmail.com; cv=pass;
       b=sjHDMriRZ0Mui5eVEOGscRHWbQHcy97lvrduHQ8h+f2CfIrxUiKOE44x3LQwD
        WRYbDjf5fcM9MdcIahC+cP59BQ9Y9DHwMDzwRTnM7NVb4kY+tSaVnLoIOaP9lF
        /suttxO+RRNr0fCFw==
   ARC-Message-Signature: i=3; a=rsa-sha256; c=relaxed/relaxed;
       d=gmail.com; s=20120806;
       h=mime-version:content-type:x-original-sender
        :x-original-authentication-results:precedence:mailing-list
        :list-id:list-post:list-help:list-archive:sender
        :list-unsubscribe:reply-to;
       bh=2+gZwZhUK2V7JbpoO2MTrU19WvhcA4JnjiohFm9ZZ/g=;
       b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz6
        1TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L
        69EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0Ab8Oi1ebYV/hIBm
        fhSLF1E80hMPcMijONfTQB6g5Hoh/kE6N2fgp6aSngL/WA3+g3Id8ElhXHvIGcJ
        RFeMKdJqiW5cxdqPTRW+BnR5ee6Tzg06kr265NTDIAU8p8fQNuLfZj49MMA+QwD
        BJtXwbQoZyRtb6X6q0mYaszUB8kw==
   Received: by mail-yk0-f179.google.com with SMTP id 19so2728865ykq.10
       for <mailbox@gmail.com>; Thu, 14 Jan 2015 15:02:45 -0800 (PST)
   Authentication-Results: i=3; gmail.com; spf=fail
       smtp.from=jqd@d1.example; dkim=pass (1024-bit key)
       header.i=@example.org; dmarc=fail; arc=pass
   ARC-Seal: i=2; a=rsa-sha256; t=1421363107;
       s=seal2015; d=example.org; cv=pass;
       b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz61
        TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L69
        EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0A=
   ARC-Message-Signature: i=2; a=rsa-sha256; c=relaxed/relaxed;
       d=example.org; s=clochette; t=1421363105;
       bh=FjQYm3HhXStuzauzV4Uc02o55EzATNfL4uBvEoy7k3s=;
       h=List-Id:List-Unsubscribe:List-Archive:List-Post:
        List-Help:List-Subscribe:Reply-To:DKIM-Signature;
       b=Wb4EiVANwAX8obWwrRWpmlhxmdIvj0dv0psIkiaGOOug32iTAcc74/iWvlPXpF1
        F5vYVF0mw5cmKOa824tKkUOOE3yinTAekqnly7GJuFCDeSA1fQHhStVV7BzAr3A+
        m4bwa6RIDgr3rOPJil678dZTHfztFWyjwIUxB5Ajxj/M=
   Received: from segv.d1.example (segv.d1.example [72.52.75.15])
       by lists.example.org (8.14.5/8.14.5) with ESMTP id t0EKaNU9010123
       for <arc@example.org>; Thu, 14 Jan 2015 15:01:30 -0800 (PST)
       (envelope-from jqd@d1.example)
   ARC-Authentication-Results: i=2; lists.example.org;
       spf=pass smtp.mfrom=jqd@d1.example;
       dkim=pass (1024-bit key) header.i=@d1.example;
       dmarc=pass
   Received: from [10.10.10.131] (w-x-y-z.dsl.static.isp.com [w.x.y.z])
       (authenticated bits=0)
       by segv.d1.example with ESMTP id t0FN4a8O084569;
       Thu, 14 Jan 2015 15:00:01 -0800 (PST)



Andersen, et al.       Expires September 19, 2018              [Page 50]

Internet-Draft                ARC-Protocol                    March 2018


       (envelope-from jqd@d1.example)
   ARC-Seal: i=1; a=rsa-sha256; t=1421363107;
       s=origin2015; d=d1.example; cv=none;
       b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz61
        TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L69
        EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0A=
   ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed;
       d=d1.example; s=20130426; t=1421363082;
       bh=EoJqaaRvhrngQxmQ3VnRIIMRBgecuKf1pdkxtfGyWaU=;
       h=MIME-Version:CC:Content-Type:Content-Transfer-Encoding;
       b=HxsvPubDE+R96v9dM9Y7V3dJUXvajd6rvF5ec5BPe/vpVBRJnD4I2weEIyYij
        rvQwbv9uUA1t94kMN0Q+haFo6hiQPnkuDxku5+oxyZWOqtNH7CTMgcBWWTp4QD
        4Gd3TRJlgotsX4RkbNcUhlfnoQ0p+CywWjieI8aR6eof6WDQ=
   Message-ID: <54B84785.1060301@d1.example>
   Date: Thu, 14 Jan 2015 15:00:01 -0800
   From: John Q Doe <jqd@d1.example>
   To: arc@example.org
   Subject: [Lists] Example 1

   Hey gang,
   This is a test message.
   --J.

B.3.3.  Example 3: Message received by Recipient

   Let's say that the Recipient is example.com
   Processing at example.com:

   o  example.com performs usual authentication checks

   o  example.com adds Authentication-Results: header, Received header

   o  Determines that message fails DMARC

   o  Checks for ARC-Seal: header; finds three

   o  Validates the signature in the highest numbered ("i=2") ARC-Seal:
      header, which covers all previous ARC-Seal: and ARC-
      Authentication-Results: headers

   o  Validates the other ARC-Seal header ("i=2"), which covers the ARC-
      Authentication-Results: header

   o  Validates the other ARC-Seal header ("i=1"), which covers the
      d1.example ARC-Message-Signature: header

   o  example.com uses the ARC-Authentication-Results: values




Andersen, et al.       Expires September 19, 2018              [Page 51]

Internet-Draft                ARC-Protocol                    March 2018


   Here's what the message looks like at this point:

Return-Path: <jqd@d1.example>
Received: from mail-ob0-f188.google.com (mail-ob0-f188.google.com
    [208.69.40.157]) by clothilde.example.com with ESMTP id
    d200mr22663000ykb.93.1421363268
    for <fmartin@example.com>; Thu, 14 Jan 2015 15:03:15 -0800 (PST)
Authentication-Results: clothilde.example.com; spf=fail
    smtp.from=jqd@d1.example; dkim=pass (1024-bit key)
    header.i=@gmail.com; dmarc=fail; arc=pass
ARC-Seal: i=3; a=rsa-sha256; t=1421363253;
    s=notary01; d=gmail.com; cv=pass;
    b=sjHDMriRZ0Mui5eVEOGscRHWbQHcy97lvrduHQ8h+f2CfIrxUiKOE44x3LQwDW
     RYbDjf5fcM9MdcIahC+cP59BQ9Y9DHwMDzwRTnM7NVb4kY+tSaVnLoIOaP9lF/s
     uttxO+RRNr0fCFw==
ARC-Message-Signature: i=3; a=rsa-sha256; c=relaxed/relaxed;
    d=gmail.com; s=20120806;
    h=mime-version:content-type:x-original-sender
     :x-original-authentication-results:precedence
     :mailing-list:list-id:list-post:list-help:list-archive:sender
     :list-unsubscribe:reply-to;
    bh=2+gZwZhUK2V7JbpoO2MTrU19WvhcA4JnjiohFm9ZZ/g=;
    b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz6
     1TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L
     69EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0Ab8Oi1ebYV/hIBm
     fhSLF1E80hMPcMijONfTQB6g5Hoh/kE6N2fgp6aSngL/WA3+g3Id8ElhXHvIGcJ
     RFeMKdJqiW5cxdqPTRW+BnR5ee6Tzg06kr265NTDIAU8p8fQNuLfZj49MMA+QwD
     BJtXwbQoZyRtb6X6q0mYaszUB8kw==
Received: by mail-yk0-f179.google.com with SMTP id 19so2728865ykq.10
    for <mailbox@gmail.com>; Thu, 14 Jan 2015 15:02:45 -0800 (PST)
Authentication-Results: i=3; gmail.com; spf=fail
    smtp.from=jqd@d1.example; dkim=pass (1024-bit key)
    header.i=@example.org; dmarc=fail; arc=pass
ARC-Seal: i=2; a=rsa-sha256; t=1421363107;
    s=seal2015; d=example.org; cv=pass;
    b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz6
     1TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L
     69EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0A=
ARC-Message-Signature: i=2; a=rsa-sha256; c=relaxed/relaxed;
    d=example.org; s=clochette; t=1421363105;
    bh=FjQYm3HhXStuzauzV4Uc02o55EzATNfL4uBvEoy7k3s=;
    h=List-Id:List-Unsubscribe:List-Archive:List-Post:
     List-Help:List-Subscribe:Reply-To:DKIM-Signature;
    b=Wb4EiVANwAX8obWwrRWpmlhxmdIvj0dv0psIkiaGOOug32iTAcc74/iWvlPXpF1
     F5vYVF0mw5cmKOa824tKkUOOE3yinTAekqnly7GJuFCDeSA1fQHhStVV7BzAr3A+
     m4bwa6RIDgr3rOPJil678dZTHfztFWyjwIUxB5Ajxj/M=
Received: from segv.d1.example (segv.d1.example [72.52.75.15])
    by lists.example.org (8.14.5/8.14.5) with ESMTP id t0EKaNU9010123



Andersen, et al.       Expires September 19, 2018              [Page 52]

Internet-Draft                ARC-Protocol                    March 2018


    for <arc@example.org>; Thu, 14 Jan 2015 15:01:30 -0800 (PST)
    (envelope-from jqd@d1.example)
ARC-Authentication-Results: i=2; lists.example.org;
    spf=pass smtp.mfrom=jqd@d1.example;
    dkim=pass (1024-bit key) header.i=@d1.example;
    dmarc=pass
Received: from [10.10.10.131] (w-x-y-z.dsl.static.isp.com [w.x.y.z])
    (authenticated bits=0)
    by segv.d1.example with ESMTP id t0FN4a8O084569;
    Thu, 14 Jan 2015 15:00:01 -0800 (PST)
    (envelope-from jqd@d1.example)
ARC-Seal: i=1; a=rsa-sha256; t=1421363107;
    s=origin2015; d=d1.example; cv=none;
    b=pCw3Qxgfs9E1qnyNZ+cTTF3KHgAjWwZz++Rju0BceSiuwIg0Pkk+3RZH/kaiz61
     TX6RVT6E4gs49Sstp41K7muj1OR5R6Q6llahLlQJZ/YfDZ3NImCU52gFWLUD7L69
     EU8TzypfkUhscqXjOJgDwjIceBNNOfh3Jy+V8hQZrVFCw0A=
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed;
    d=d1.example; s=20130426; t=1421363082;
    bh=EoJqaaRvhrngQxmQ3VnRIIMRBgecuKf1pdkxtfGyWaU=;
    h=MIME-Version:To:CC:Subject:Content-Type:Content-Transfer-Encoding;
    b=HxsvPubDE+R96v9dM9Y7V3dJUXvajd6rvF5ec5BPe/vpVBRJnD4I2weEIyYijr
     vQwbv9uUA1t94kMN0Q+haFo6hiQPnkuDxku5+oxyZWOqtNH7CTMgcBWWTp4QD4G
     d3TRJlgotsX4RkbNcUhlfnoQ0p+CywWjieI8aR6eof6WDQ=
Message-ID: <54B84785.1060301@d1.example>
Date: Thu, 14 Jan 2015 15:00:01 -0800
From: John Q Doe <jqd@d1.example>
To: arc@example.org
Subject: [Lists] Example 1

Hey gang,
This is a test message.
--J.

Appendix C.  Acknowledgements

   This draft is the work of OAR-Dev Group.

   The authors thank all of the OAR-Dev group for the ongoing help and
   though-provoking discussions from all the participants, especially:
   Alex Brotman, Brandon Long, Dave Crocker, Elizabeth Zwicky, Franck
   Martin, Greg Colburn, J.  Trent Adams, John Rae-Grant, Mike Hammer,
   Mike Jones, Steve Jones, Terry Zink, Tim Draegen.

   Grateful appreciation is extended to the people who provided feedback
   through the discuss mailing list.






Andersen, et al.       Expires September 19, 2018              [Page 53]

Internet-Draft                ARC-Protocol                    March 2018


Appendix D.  Comments and Feedback

   Please address all comments, discussions, and questions to
   dmarc@ietf.org [14].  Earlier discussions can be found at arc-
   discuss@dmarc.org [15].

Authors' Addresses

   Kurt Andersen
   LinkedIn
   1000 West Maude Ave
   Sunnyvale, California  94085
   USA

   Email: kurta@linkedin.com


   Brandon Long (editor)
   Google

   Email: blong@google.com


   Steven Jones (editor)
   TDP

   Email: smj@crash.com


   Seth Blank (editor)
   ValiMail

   Email: seth@valimail.com


   Murray Kucherawy (editor)
   TDP

   Email: superuser@gmail.com












Andersen, et al.       Expires September 19, 2018              [Page 54]
