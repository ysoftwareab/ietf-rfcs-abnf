state-machine = 1*(statement / (*comment-wsp))

statement = (declaration / transition / assignment)
               *comment-wsp ";" *comment-wsp

colon = *comment-wsp ":" *comment-wsp
comma = *comment-wsp "," *comment-wsp
equal = *comment-wsp "=" *comment-wsp
arrow = *comment-wsp "->" *comment-wsp

declaration = names colon value
assignment = name equal value

names = name *(comma name)

name = quoted-name / regular-identifier

quoted-name = DQUOTE 1*(identifier-chars) DQUOTE

regular-identifier =
               ALPHA /
               (ALPHA *(ALPHA / DIGIT / "-") (ALPHA / DIGIT))

transition = current-states colon
                messages arrow next-state
                [colon action]

current-states = name *(comma name)
messages = name *(comma name)
next-state = name
action = name

value = regular-identifier / quoted-name

identifier-chars = ALPHA / DIGIT /
                      "-" / "_" / "'" / "," / ";" / SP
                     ; All letters and digits and
                     ; some (a bit arbitrary) chars

comment        =  "#" *(WSP / VCHAR) CRLF

comment-nl           =  comment / CRLF

comment-wsp          =  *(WSP / comment-nl)
Title = "Transmission Control Protocol";

Initial = "Waiting for client";

    "Waiting for client": "Connected or hello" -> "Prepare greeting";

    "End session" : "Close connection or idle" ->
                 "Waiting for client";

