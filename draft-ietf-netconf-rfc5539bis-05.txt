


NETCONF Working Group                                           M. Badra
Internet-Draft                                          LIMOS Laboratory
Obsoletes: 5539 (if approved)                                  A. Luchuk
Intended status: Standards Track                     SNMP Research, Inc.
Expires: August 2, 2014                                 J. Schoenwaelder
                                                Jacobs University Bremen
                                                        January 29, 2014


     Using the NETCONF Protocol over Transport Layer Security (TLS)
                    draft-ietf-netconf-rfc5539bis-05

Abstract

   The Network Configuration Protocol (NETCONF) provides mechanisms to
   install, manipulate, and delete the configuration of network devices.
   This document describes how to use the Transport Layer Security (TLS)
   protocol to secure the exchange of NETCONF messages.  This document
   obsoletes RFC 5539 and it adds an optional mechanism to establish the
   underlying TCP connection from the NETCONF server to the NETCONF
   client (call home).

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on August 2, 2014.

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents



Badra, et al.            Expires August 2, 2014                 [Page 1]

Internet-Draft              NETCONF over TLS                January 2014


   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1.  Applicability Statement  . . . . . . . . . . . . . . . . .  3
   2.  NETCONF over TLS . . . . . . . . . . . . . . . . . . . . . . .  3
     2.1.  Connection Initiation  . . . . . . . . . . . . . . . . . .  3
       2.1.1.  Client to Server . . . . . . . . . . . . . . . . . . .  4
       2.1.2.  Server to Client (Call Home) . . . . . . . . . . . . .  4
       2.1.3.  Port Number Usage  . . . . . . . . . . . . . . . . . .  4
     2.2.  Message Framing  . . . . . . . . . . . . . . . . . . . . .  5
     2.3.  Connection Closure . . . . . . . . . . . . . . . . . . . .  5
     2.4.  X.509-based Authentication, Identification and
           Authorization  . . . . . . . . . . . . . . . . . . . . . .  5
       2.4.1.  Server Identity  . . . . . . . . . . . . . . . . . . .  5
       2.4.2.  Client Identity  . . . . . . . . . . . . . . . . . . .  6
     2.5.  Pre-Shared-Key-based Authentication, Identification
           and Authorization  . . . . . . . . . . . . . . . . . . . .  7
     2.6.  Cipher Suites  . . . . . . . . . . . . . . . . . . . . . .  7
   3.  Security Considerations  . . . . . . . . . . . . . . . . . . .  7
   4.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . .  8
   5.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . .  8
   6.  Contributor's Address  . . . . . . . . . . . . . . . . . . . .  9
   7.  References . . . . . . . . . . . . . . . . . . . . . . . . . .  9
     7.1.  Normative References . . . . . . . . . . . . . . . . . . .  9
     7.2.  Informative References . . . . . . . . . . . . . . . . . . 10
   Appendix A.  Change Log (to be removed by RFC Editor before
                publication)  . . . . . . . . . . . . . . . . . . . . 10
     A.1.  draft-ietf-netconf-rfc5539bis-05 . . . . . . . . . . . . . 10
     A.2.  draft-ietf-netconf-rfc5539bis-04 . . . . . . . . . . . . . 11
     A.3.  draft-ietf-netconf-rfc5539bis-03 . . . . . . . . . . . . . 11
     A.4.  draft-ietf-netconf-rfc5539bis-02 . . . . . . . . . . . . . 11
     A.5.  draft-ietf-netconf-rfc5539bis-00 . . . . . . . . . . . . . 12
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 12











Badra, et al.            Expires August 2, 2014                 [Page 2]

Internet-Draft              NETCONF over TLS                January 2014


1.  Introduction

   The NETCONF protocol [RFC6241] defines a mechanism through which a
   network device can be managed.  NETCONF is connection-oriented,
   requiring a persistent connection between peers.  This connection
   must provide integrity, confidentiality, peer authentication, and
   reliable, sequenced data delivery.

   This document defines "NETCONF over TLS", which includes support for
   certificate and pre-shared key (PSK)-based authentication and key
   derivation, utilizing the protected ciphersuite negotiation, mutual
   authentication, and key management capabilities of the TLS (Transport
   Layer Security) protocol, described in [RFC5246].  It also provides
   an optional mechanism to establish the underlying TCP connection from
   the NETCONF server to the NETCONF client (call home).

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

1.1.  Applicability Statement

   The "call home" technique described in Section 2.1.2 of this document
   MUST only be used for a NETCONF server to initiate a connection to a
   NETCONF client, as described in this document.

   The reason for this restriction is that different protocols have
   different security assumptions.  This specification requires NETCONF
   clients and servers to verify the identity of the other party before
   the NETCONF session is started.  Further, strong cryptographic
   authentication is used for both the NETCONF client and server.  This
   reduces the risk that a malicious party could impersonate a NETCONF
   server and contact the NETCONF client using the "call home"
   technique.  Protocols other than NETCONF might not be so well
   protected.


2.  NETCONF over TLS

   Since TLS is application-protocol-independent, NETCONF can operate on
   top of the TLS protocol transparently.  This document defines how
   NETCONF can be used within a TLS session.

2.1.  Connection Initiation

   In many deployments, the NETCONF client will initiate the connection
   to a NETCONF server as described in Section 2.1.1.  However, in order
   to use NETCONF in environments where middleboxes [RFC3234] prevent



Badra, et al.            Expires August 2, 2014                 [Page 3]

Internet-Draft              NETCONF over TLS                January 2014


   the client from establishing the connection, the server may initiate
   the connection as described in Section 2.1.2 (call home).

2.1.1.  Client to Server

   The peer acting as the NETCONF client MUST act as the TLS client.
   The TLS client actively opens the TLS connection and the TLS server
   passively listens for the incoming TLS connection on the TCP port
   6513.  The TLS client MUST therefore send the TLS ClientHello message
   to begin the TLS handshake.  Once the TLS handshake has finished, the
   client and the server MAY begin to exchange NETCONF messages.  Client
   and server identity verification (as described in Section 2.4 and
   Section 2.5) is done before the <hello> message is sent.  This means
   that the identity verification is completed before the NETCONF
   session has started.

2.1.2.  Server to Client (Call Home)

   The peer acting as the NETCONF server first actively opens a TCP
   connection to the NETCONF client using the default port number YYYY.
   Once the connection has been established, the NETCONF client, which
   has accepted the incoming TCP connection, takes initiative.  It from
   now on MUST act as the TLS client and it therefore sends the TLS
   ClientHello message to begin the TLS handshake.  Once the TLS
   handshake has finished, the client and the server MAY begin to
   exchange NETCONF messages.  Client and server identity verification
   (as described in Section 2.4 and Section 2.5) is done before the
   <hello> message is sent.  This means that the identity verification
   is completed before the NETCONF session has started.

2.1.3.  Port Number Usage

   A NETCONF client and a NETCONF server provide two different services.
   The NETCONF server executes RPC requests and manipulates local
   datastores while the NETCONF client invokes RPC requests.  It is
   possible to have both a NETCONF server and a NETCONF client running
   on the same node.

   The well-known port number 6513 is used by NETCONF servers to listen
   for connections established by NETCONF clients.  NETCONF clients
   connect to the server on the server port 6513 in order to execute RPC
   calls on the server.

   The port number YYYY is used by NETCONF clients that support call-
   home to listen for incoming connections.  A NETCONF server using
   call-home will connect to a NETCONF client in order to let the client
   subsequently initiate RPC calls.




Badra, et al.            Expires August 2, 2014                 [Page 4]

Internet-Draft              NETCONF over TLS                January 2014


2.2.  Message Framing

   All NETCONF messages MUST be sent as TLS "application data".  It is
   possible that multiple NETCONF messages be contained in one TLS
   record, or that a NETCONF message be transferred in multiple TLS
   records.

   The previous version [RFC5539] of this document used the framing
   sequence defined in [RFC4742], under the assumption that it could not
   be found in well-formed XML documents.  However, this assumption is
   not correct [RFC6242].  In order to solve this problem, this document
   adopts the framing protocol defined in [RFC6242] as follows:

   The <hello> message MUST be followed by the character sequence
   ]]>]]>.  Upon reception of the <hello> message, the receiving peer's
   TLS Transport layer conceptually passes the <hello> message to the
   Messages layer.  If the :base:1.1 capability is advertised by both
   peers, the chunked framing mechanism defined in Section 4.2 of
   [RFC6242] is used for the remainder of the NETCONF session.
   Otherwise, the old end-of-message-based mechanism (see Section 4.3 of
   [RFC6242]) is used.

2.3.  Connection Closure

   A NETCONF server will process NETCONF messages from the NETCONF
   client in the order in which they are received.  A NETCONF session is
   closed using the <close-session> operation.  When the NETCONF server
   processes a <close-session> operation, the NETCONF server SHALL
   respond and close the TLS session as described in [RFC5246] Section
   7.2.1.  The NETCONF server MUST NOT process any NETCONF messages
   received after the <close-session> operation.

2.4.  X.509-based Authentication, Identification and Authorization

   Implementations MAY optionally support TLS certificate-based
   authentication [RFC5246].  If the implementation supports TLS
   certificate-based authentication, then the following sections apply.

2.4.1.  Server Identity

   If the certificate presented by a NETCONF server has passed
   certification path validation [RFC5280] to a configured trust anchor,
   the NETCONF client MUST carefully examine the certificate presented
   by the server to determine if it meets the client's expectations.
   Particularly, the NETCONF client MUST check its understanding of the
   NETCONF server hostname against the server's identity as presented in
   the server Certificate message, in order to prevent man-in-the-middle
   attacks.



Badra, et al.            Expires August 2, 2014                 [Page 5]

Internet-Draft              NETCONF over TLS                January 2014


   Matching is performed according to the rules and guidelines defined
   in [RFC6125].  If the match fails, the NETCONF client MUST either ask
   for explicit user confirmation or terminate the connection and
   indicate the NETCONF server's identity is suspect.

   Additionally, NETCONF clients MUST verify the binding between the
   identity of the NETCONF servers to which they connect and the public
   keys presented by those servers.  NETCONF clients SHOULD implement
   the algorithm in Section 6 of [RFC5280] for general certificate
   validation, but MAY supplement that algorithm with other validation
   methods that achieve equivalent levels of verification (such as
   comparing the NETCONF server certificate against a local store of
   already-verified certificates and identity bindings).

   If the NETCONF client has external information as to the expected
   identity of the NETCONF server, the hostname check MAY be omitted.

2.4.2.  Client Identity

   The NETCONF server MUST verify the identity of the NETCONF client to
   ensure that the incoming request to establish a NETCONF session is
   legitimate before the NETCONF session is started.

   The NETCONF protocol [RFC6241] requires that the transport protocol's
   authentication process MUST result in an authenticated NETCONF client
   identity whose permissions are known to the server.  The
   authenticated identity of a client is commonly referred to as the
   NETCONF username.

   The username provided by the NETCONF over TLS implementation will be
   made available to the NETCONF message layer as the NETCONF username
   without modification.  If the username does not comply to the NETCONF
   requirements on usernames [RFC6241], i.e., the username is not
   representable in XML, the TLS session MUST be dropped.

2.4.2.1.  Deriving NETCONF Usernames from X.509 Certificates

   After completing the TLS handshake, the NETCONF server attempts to
   derive a NETCONF username from the X.509 certificate presented by the
   NETCONF client.  If the NETCONF server cannot derive a valid NETCONF
   username from the presented certificate, then the NETCONF server MUST
   close the TLS connection, and MUST NOT accept NETCONF messages over
   it.  The NETCONF server uses the algorithm defined in
   [I-D.ietf-netmod-snmp-cfg] to extract a NETCONF username from the
   X.509 certificate presented by the NETCONF client.  The cert-to-name
   list in the ietf-netconf-server YANG module, defined in
   [I-D.kwatsen-netconf-server], specifies how a NETCONF server
   transforms a certificate into a NETCONF username.



Badra, et al.            Expires August 2, 2014                 [Page 6]

Internet-Draft              NETCONF over TLS                January 2014


2.5.  Pre-Shared-Key-based Authentication, Identification and
      Authorization

   Implementations MAY optionally support TLS Pre-Shared Key (PSK)
   authentication [RFC4279].  RFC4279 describes pre-shared key
   ciphersuites for TLS.  The description of the psk-maps container in
   the ietf-netconf-server YANG module, defined in
   [I-D.kwatsen-netconf-server], specifies how a NETCONF server
   associates a TLS pre-shared key with a NETCONF username.

2.6.  Cipher Suites

   Implementations of the protocol specified in this document MAY
   implement any TLS cipher suite that provides mutual authentication
   [RFC5246].  However, implementations MUST support TLS 1.2 [RFC5246]
   and are REQUIRED to support the mandatory-to-implement cipher suite,
   which is TLS_RSA_WITH_AES_128_CBC_SHA.  This document is assumed to
   apply to future versions of TLS; in which case, the mandatory-to-
   implement cipher suite for the implemented version MUST be supported.


3.  Security Considerations

   The security considerations described throughout [RFC5246] and
   [RFC6241] apply here as well.

   This document in its current version does not support third-party
   authentication (e.g., backend Authentication, Authorization, and
   Accounting (AAA) servers) due to the fact that TLS does not specify
   this way of authentication and that NETCONF depends on the transport
   protocol for the authentication service.  If third-party
   authentication is needed, SSH transport can be used.

   An attacker might be able to inject arbitrary NETCONF messages via
   some application that does not carefully check exchanged messages.
   When the :base:1.1 capability is not advertised by both peers, an
   attacker might be able to deliberately insert the delimiter sequence
   ]]>]]> in a NETCONF message to create a DoS attack.  If the :base:1.1
   capability is not advertised by both peers, applications and NETCONF
   APIs MUST ensure that the delimiter sequence ]]>]]> never appears in
   NETCONF messages; otherwise, those messages can be dropped, garbled,
   or misinterpreted.  More specifically, if the delimiter sequence is
   found in a NETCONF message by the sender side, a robust
   implementation of this document SHOULD warn the user that illegal
   characters have been discovered.  If the delimiter sequence is found
   in a NETCONF message by the receiver side (including any XML
   attribute values, XML comments, or processing instructions), a robust
   implementation of this document MUST silently discard the message



Badra, et al.            Expires August 2, 2014                 [Page 7]

Internet-Draft              NETCONF over TLS                January 2014


   without further processing and then stop the NETCONF session.

   Finally, this document does not introduce any new security
   considerations compared to [RFC6242].


4.  IANA Considerations

   Based on the previous version of this document, RFC 5539, IANA has
   assigned a TCP port number (6513) in the "Registered Port Numbers"
   range with the service name "netconf-tls".  This port will be the
   default port for NETCONF over TLS, as defined in Section 2.1.1.
   Below is the registration template following the rules in [RFC6335].


      Service Name:           netconf-tls
      Transport Protocol(s):  TCP
      Assignee:               IESG <iesg@ietf.org>
      Contact:                IETF Chair <chair@ietf.org>
      Description:            NETCONF over TLS
      Reference:              RFC XXXX
      Port Number:            6513


   This document requests that IANA assigns a TCP port number in the
   "Registered Port Numbers" range with the service name
   "netconf-tls-ch".  This port will be the default port for NETCONF
   over TLS when the NETCONF server calls home, as defined in
   Section 2.1.2.  Below is the registration template following the
   rules in [RFC6335].


      Service Name:           netconf-tls-ch
      Transport Protocol(s):  TCP
      Assignee:               IESG <iesg@ietf.org>
      Contact:                IETF Chair <chair@ietf.org>
      Description:            NETCONF over TLS (call home)
      Reference:              RFC XXXX
      Port Number:            YYYY



5.  Acknowledgements

   A significant amount of the text in Section 2.4 was lifted from
   [RFC4642].

   The authors like to acknowledge Martin Bjorklund, Olivier Coupelon,



Badra, et al.            Expires August 2, 2014                 [Page 8]

Internet-Draft              NETCONF over TLS                January 2014


   Mehmet Ersue, Miao Fuyou, David Harrington, Alfred Hoenes, Simon
   Josefsson, Eric Rescorla, Dan Romascanu, Kent Watsen, Bert Wijnen and
   the NETCONF mailing list members for their comments on this document.
   Charlie Kaufman, Pasi Eronen, and Tim Polk provided a the thorough
   review of previous versions of this document.  Stephen Hanna wrote
   the initial text for the applicability statement.

   Juergen Schoenwaelder and was partly funded by Flamingo, a Network of
   Excellence project (ICT-318488) supported by the European Commission
   under its Seventh Framework Programme.


6.  Contributor's Address

   Ibrahim Hajjeh
   Ineovation
   France

   EMail: ibrahim.hajjeh@ineovation.fr


7.  References

7.1.  Normative References

   [I-D.ietf-netmod-snmp-cfg]
              Bjorklund, M. and J. Schoenwaelder, "A YANG Data Model for
              SNMP Configuration", draft-ietf-netmod-snmp-cfg-03 (work
              in progress), November 2013.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC4279]  Eronen, P. and H. Tschofenig, "Pre-Shared Key Ciphersuites
              for Transport Layer Security (TLS)", RFC 4279,
              December 2005.

   [RFC5246]  Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.2", RFC 5246, August 2008.

   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,
              Housley, R., and W. Polk, "Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 5280, May 2008.

   [RFC6125]  Saint-Andre, P. and J. Hodges, "Representation and
              Verification of Domain-Based Application Service Identity
              within Internet Public Key Infrastructure Using X.509



Badra, et al.            Expires August 2, 2014                 [Page 9]

Internet-Draft              NETCONF over TLS                January 2014


              (PKIX) Certificates in the Context of Transport Layer
              Security (TLS)", RFC 6125, March 2011.

   [RFC6241]  Enns, R., Bjorklund, M., Schoenwaelder, J., and A.
              Bierman, "Network Configuration Protocol (NETCONF)",
              RFC 6241, June 2011.

   [RFC6242]  Wasserman, M., "Using the NETCONF Protocol over Secure
              Shell (SSH)", RFC 6242, June 2011.

   [RFC6335]  Cotton, M., Eggert, L., Touch, J., Westerlund, M., and S.
              Cheshire, "Internet Assigned Numbers Authority (IANA)
              Procedures for the Management of the Service Name and
              Transport Protocol Port Number Registry", BCP 165,
              RFC 6335, August 2011.

7.2.  Informative References

   [I-D.kwatsen-netconf-server]
              Watsen, K. and J. SchoeCnwaelder, "A YANG Data Model for
              NETCONF Server Configuration",
              draft-kwatsen-netconf-server-00 (work in progress),
              January 2014.

   [RFC3234]  Carpenter, B. and S. Brim, "Middleboxes: Taxonomy and
              Issues", RFC 3234, February 2002.

   [RFC4642]  Murchison, K., Vinocur, J., and C. Newman, "Using
              Transport Layer Security (TLS) with Network News Transfer
              Protocol (NNTP)", RFC 4642, October 2006.

   [RFC4742]  Wasserman, M. and T. Goddard, "Using the NETCONF
              Configuration Protocol over Secure SHell (SSH)", RFC 4742,
              December 2006.

   [RFC5539]  Badra, M., "NETCONF over Transport Layer Security (TLS)",
              RFC 5539, May 2009.


Appendix A.  Change Log (to be removed by RFC Editor before publication)

A.1.  draft-ietf-netconf-rfc5539bis-05

   o  Removed the YANG configuration data model since it became a
      separate document.

   o  Added reference to RFC 3234 plus editorial updates.




Badra, et al.            Expires August 2, 2014                [Page 10]

Internet-Draft              NETCONF over TLS                January 2014


A.2.  draft-ietf-netconf-rfc5539bis-04

   o  Added the applicability statement proposed by Stephen Hanna.

   o  Added call-home configuration objects and a tls-call-home feature.

   o  Rewrote the text such that the role swap happens right after the
      TCP connection has been established.

A.3.  draft-ietf-netconf-rfc5539bis-03

   o  Added support for call home (allocation of a new port number,
      rewrote text to allow a NETCONF client to be a TLS server and a
      NETCONF server to be a TLS client).

   o  Merged sections 2 and 3 into a new section 2 and restructured the
      text.

   o  Extended the IANA considerations section.

   o  Using the cert-to-name mapping grouping from the SNMP
      configuration data model and updated the examples.

   o  Creating an extensible set of YANG (sub)modules for NETCONF
      following the (sub)module structure of the SNMP configuration
      model.

A.4.  draft-ietf-netconf-rfc5539bis-02

   o  Addressed remaining issues identified at IETF 85

      *  Harmonized the cert-maps container of the YANG module in this
         draft with the tlstm container in the ietf-snmp-tls sub-module
         specified in draft-ietf-netmod-snmp-cfg.  Replaced the children
         of the cert-maps container with the children copied from the
         tlstm container of the ietf-snmp-tls sub-module.

      *  Added an overview of data model in the ietf-netconf-tls YANG
         module.

      *  Added example configurations.

   o  Addessed issues posted on NETCONF WG E-mail list.

   o  Deleted the superfluous tls container that was directly below the
      netconf-config container.





Badra, et al.            Expires August 2, 2014                [Page 11]

Internet-Draft              NETCONF over TLS                January 2014


   o  Added a statement to the text indicating that support for mapping
      X.509 certificates to NETCONF usernames is optional.  This is
      analogous to existing text indicating that support for mapping
      pre-shared keys to NETCONF usernames is optional.  Resource-
      constrained systems now can omit support for mapping X.509
      certificates to NETCONF usernames and still comply with this
      specification.

   o  Clarified the document structure by promoting the sections of the
      document related to the data model.

   o  Updated author's addresses.

A.5.  draft-ietf-netconf-rfc5539bis-00

   o  Remove the reference to BEEP.

   o  Rename host-part to domain-part in the description of RFC822.


Authors' Addresses

   Mohamad Badra
   LIMOS Laboratory

   Email: mbadra@gmail.com


   Alan Luchuk
   SNMP Research, Inc.
   3001 Kimberlin Heights Road
   Knoxville, TN  37920
   US

   Phone: +1 865 573 1434
   Email: luchuk@snmp.com
   URI:   http://www.snmp.com/














Badra, et al.            Expires August 2, 2014                [Page 12]

Internet-Draft              NETCONF over TLS                January 2014


   Juergen Schoenwaelder
   Jacobs University Bremen
   Campus Ring 1
   28759 Bremen
   Germany

   Phone: +49 421 200 3587
   Email: j.schoenwaelder@jacobs-university.de
   URI:   http://www.jacobs-university.de/










































Badra, et al.            Expires August 2, 2014                [Page 13]

