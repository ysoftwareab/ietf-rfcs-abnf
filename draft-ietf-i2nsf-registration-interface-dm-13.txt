



I2NSF Working Group                                         S. Hyun, Ed.
Internet-Draft                                        Myongji University
Intended status: Standards Track                           J. Jeong, Ed.
Expires: 7 April 2022                                             T. Roh
                                                                   S. Wi
                                                 Sungkyunkwan University
                                                                 J. Park
                                                                    ETRI
                                                          4 October 2021


              I2NSF Registration Interface YANG Data Model
             draft-ietf-i2nsf-registration-interface-dm-13

Abstract

   This document defines an information model and a YANG data model for
   Registration Interface between Security Controller and Developer's
   Management System (DMS) in the Interface to Network Security
   Functions (I2NSF) framework to register Network Security Functions
   (NSF) of the DMS with the Security Controller.  The objective of
   these information and data models is to support NSF capability
   registration and query via I2NSF Registration Interface.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 7 April 2022.

Copyright Notice

   Copyright (c) 2021 IETF Trust and the persons identified as the
   document authors.  All rights reserved.






Hyun, et al.              Expires 7 April 2022                  [Page 1]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Simplified BSD License text
   as described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Objectives  . . . . . . . . . . . . . . . . . . . . . . . . .   4
   4.  Information Model . . . . . . . . . . . . . . . . . . . . . .   4
     4.1.  NSF Capability Registration . . . . . . . . . . . . . . .   5
       4.1.1.  NSF Capability Information  . . . . . . . . . . . . .   6
       4.1.2.  NSF Access Information  . . . . . . . . . . . . . . .   8
     4.2.  NSF Capability Query  . . . . . . . . . . . . . . . . . .   9
   5.  Data Model  . . . . . . . . . . . . . . . . . . . . . . . . .   9
     5.1.  YANG Tree Diagram . . . . . . . . . . . . . . . . . . . .   9
       5.1.1.  Definition of Symbols in Tree Diagrams  . . . . . . .   9
       5.1.2.  I2NSF Registration Interface  . . . . . . . . . . . .   9
       5.1.3.  NSF Capability Information  . . . . . . . . . . . . .  11
       5.1.4.  NSF Access Information  . . . . . . . . . . . . . . .  12
     5.2.  YANG Data Modules . . . . . . . . . . . . . . . . . . . .  12
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  17
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .  18
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  19
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .  19
     8.2.  Informative References  . . . . . . . . . . . . . . . . .  21
   Appendix A.  XML Examples of I2NSF Registration Interface Data
           Model . . . . . . . . . . . . . . . . . . . . . . . . . .  22
     A.1.  Example 1: Registration for the Capabilities of a General
           Firewall  . . . . . . . . . . . . . . . . . . . . . . . .  22
     A.2.  Example 2: Registration for the Capabilities of a
           Time-based Firewall . . . . . . . . . . . . . . . . . . .  26
     A.3.  Example 3: Registration for the Capabilities of a Web
           Filter  . . . . . . . . . . . . . . . . . . . . . . . . .  30
     A.4.  Example 4: Registration for the Capabilities of a VoIP/
           VoLTE Filter  . . . . . . . . . . . . . . . . . . . . . .  33
     A.5.  Example 5: Registration for the Capabilities of a DDoS
           Mitigator . . . . . . . . . . . . . . . . . . . . . . . .  36
     A.6.  Example 6: Query for the Capabilities of a Time-based
           Firewall  . . . . . . . . . . . . . . . . . . . . . . . .  41
   Appendix B.  NSF Lifecycle Management in NFV Environments . . . .  43
   Appendix C.  Acknowledgments  . . . . . . . . . . . . . . . . . .  44
   Appendix D.  Contributors . . . . . . . . . . . . . . . . . . . .  44



Hyun, et al.              Expires 7 April 2022                  [Page 2]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   Appendix E.  Changes from
           draft-ietf-i2nsf-registration-interface-dm-11 . . . . . .  44
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  44

1.  Introduction

   A number of Network Security Functions (NSF) may exist in the
   Interface to Network Security Functions (I2NSF) framework [RFC8329].
   Since each of these NSFs likely has different security capabilities
   from each other, it is important to register the security
   capabilities of the NSF with the security controller.  In addition,
   it is required to search NSFs of some required security capabilities
   on demand.  As an example, if additional security capabilities are
   required to serve some security service request(s) from an I2NSF
   user, the security controller SHOULD be able to request the DMS for
   NSFs that have the required security capabilities.

   This document describes an information model (see Section 4) and a
   YANG [RFC7950] data model (see Section 5) for the I2NSF Registration
   Interface [RFC8329] between the security controller and the
   developer's management system (DMS) to support NSF capability
   registration and query via the registration interface.  It also
   describes the operations which SHOULD be performed by the security
   controller and the DMS via the Registration Interface using the
   defined model.

2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   This document uses the following terms defined in [RFC8329] and
   [I-D.ietf-i2nsf-capability-data-model].

   *  Network Security Function (NSF): A function that is responsible
      for a specific treatment of received packets.  A Network Security
      Function can act at various layers of a protocol stack (e.g., at
      the network layer or other OSI layers).  Sample Network Security
      Service Functions are as follows: Firewall, Intrusion Prevention/
      Detection System (IPS/IDS), Deep Packet Inspection (DPI),
      Application Visibility and Control (AVC), network virus and
      malware scanning, sandbox, Data Loss Prevention (DLP), Distributed
      Denial of Service (DDoS) mitigation and TLS proxy.





Hyun, et al.              Expires 7 April 2022                  [Page 3]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   *  Data Model: A data model is a representation of concepts of
      interest to an environment in a form that is dependent on data
      repository, data definition language, query language,
      implementation language, and protocol.

   *  Information Model: An information model is a representation of
      concepts of interest to an environment in a form that is
      independent of data repository, data definition language, query
      language, implementation language, and protocol.

   *  YANG: This document follows the guidelines of [RFC8407], uses the
      common YANG types defined in [RFC6991], and adopts the Network
      Management Datastore Architecture (NMDA) [RFC8342].  The meaning
      of the symbols in tree diagrams is defined in [RFC8340].

3.  Objectives

   *  Registering NSFs to I2NSF framework: Developer's Management System
      (DMS) in I2NSF framework is typically run by an NSF vendor, and
      uses Registration Interface to provide NSFs developed by the NSF
      vendor to Security Controller.  DMS registers NSFs and their
      capabilities to I2NSF framework through Registration Interface.
      For the registered NSFs, Security Controller maintains a catalog
      of the capabilities of those NSFs.

   *  Updating the capabilities of registered NSFs: After an NSF is
      registered into Security Controller, some modifications on the
      capability of the NSF MAY be required later.  In this case, DMS
      uses Registration Interface to update the capability of the NSF,
      and this update SHOULD be reflected in the catalog of NSFs.

   *  Asking DMS about some required capabilities: In cases that some
      security capabilities are required to serve the security service
      request from an I2NSF user, Security Controller searches through
      the registered NSFs to find ones that can provide the required
      capabilities.  But Security Controller might fail to find any NSFs
      having the required capabilities among the registered NSFs.  In
      this case, Security Controller needs to request DMS for additional
      NSF(s) that can provide the required security capabilities via
      Registration Interface.

4.  Information Model

   The I2NSF registration interface is used by Security Controller and
   Developer's Management System (DMS) in I2NSF framework.  The
   following summarizes the operations done through the registration
   interface:




Hyun, et al.              Expires 7 April 2022                  [Page 4]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   1)  DMS registers NSFs and their capabilities to Security Controller
       via the registration interface.  DMS also uses the registration
       interface to update the capabilities of the NSFs registered
       previously.

   2)  In case that Security Controller fails to find some required
       capabilities from any registered NSF that can provide , Security
       Controller queries DMS about NSF(s) having the required
       capabilities via the registration interface.

   Figure 1 shows the information model of the I2NSF registration
   interface, which consists of two submodels: NSF capability
   registration and NSF capability query.  Each submodel is used for the
   operations listed above.  The remainder of this section will provide
   in-depth explanations of each submodel.

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |      I2NSF Registration Interface Information Model       |
     |                                                           |
     |         +-+-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+-+          |
     |         | NSF Capability  |  | NSF Capability  |          |
     |         | Registration    |  | Query           |          |
     |         +-+-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+-+          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

          Figure 1: I2NSF Registration Interface Information Model

4.1.  NSF Capability Registration

   This submodel is used by DMS to register an NSF with Security
   Controller.  Figure 2 shows how this submodel is constructed.  The
   most important part in Figure 2 is the NSF capability, and this
   specifies the set of capabilities that the NSF to be registered can
   offer.  The NSF Name contains a unique name of this NSF with the
   specified set of capabilities.  When registering the NSF, DMS
   additionally includes the network access information of the NSF which
   is required to enable network communications with the NSF.

   The following will further explain the NSF capability information and
   the NSF access information in more detail.











Hyun, et al.              Expires 7 April 2022                  [Page 5]

Internet-Draft   Registration Interface YANG Data Model     October 2021


                          +-+-+-+-+-+-+-+-+-+
                          | NSF Capability  |
                          | Registration    |
                          +-+-+-+-+^+-+-+-+-+
                                   |
             +---------------------+--------------------+
             |                     |                    |
             |                     |                    |
       +-+-+-+-+-+-+       +-+-+-+-+-+-+-+-+      +-+-+-+-+-+-+-+
       |   NSF     |       | NSF Capability|      | NSF Access  |
       |   Name    |       | Information   |      | Information |
       +-+-+-+-+-+-+       +-+-+-+-+-+-+-+-+      +-+-+-+-+-+-+-+

              Figure 2: NSF Capability Registration Sub-Model

4.1.1.  NSF Capability Information

   NSF Capability Information basically describes the security
   capabilities of an NSF.  In Figure 3, we show capability objects of
   an NSF.  Following the information model of NSF capabilities defined
   in [I-D.ietf-i2nsf-capability-data-model], we share the same I2NSF
   security capabilities: Time Capabilities, Event Capabilities,
   Condition Capabilities, Action Capabilities, Resolution Strategy
   Capabilities, Default Action Capabilities, and IPsec Method
   [RFC9061].  Also, NSF Capability Information additionally contains
   the performance capabilities of an NSF as shown in Figure 3.

























Hyun, et al.              Expires 7 April 2022                  [Page 6]

Internet-Draft   Registration Interface YANG Data Model     October 2021


                           +-+-+-+-+-+-+-+-+-+
                           | NSF Capability  |
                           |   Information   |
                           +-+-+-+-^-+-+-+-+-+
                                   |
                                   |
            +----------------------+----------------------+
            |                                             |
            |                                             |
    +-+-+-+-+-+-+-+-+                             +-+-+-+-+-+-+-+-+
    |    I2NSF      |                             |  Performance  |
    | Capabilities  |                             |  Capabilities |
    +-+-+-+-+-+-+-+-+                             +-+-+-+-+-+-+-+-+
            |
     +------+--------------+-----------------+-----------------+-------+
     |                     |                 |                 |       |
 +-+-+-+-+-+-+-+   +-+-+-+-+-+-+-+   +-+-+-+-+-+-+-+   +-+-+-+-+-+-+-+ |
 |     Time    |   |    Event    |   |  Condition  |   |   Action    | |
 | Capabilities|   | Capabilities|   | Capabilities|   | Capabilities| |
 +-+-+-+-+-+-+-+   +-+-+-+-+-+-+-+   +-+-+-+-+-+-+-+   +-+-+-+-+-+-+-+ |
                                                                       |
                   +---------------------+---------------------+-------+
                   |                     |                     |
             +-+-+-+-+-+-+-+       +-+-+-+-+-+-+-+       +-+-+-+-+-+-+
             | Resolution  |       |   Default   |       |   IPsec   |
             | Strategy    |       |   Action    |       |   Method  |
             | Capabilities|       | Capabilities|       +-+-+-+-+-+-+
             +-+-+-+-+-+-+-+       +-+-+-+-+-+-+-+

                  Figure 3: NSF Capability Information





















Hyun, et al.              Expires 7 April 2022                  [Page 7]

Internet-Draft   Registration Interface YANG Data Model     October 2021


4.1.1.1.  Performance Capabilities

   This information represents the processing capability of an NSF.
   Assuming that the current workload status of each NSF is being
   collected through NSF monitoring
   [I-D.ietf-i2nsf-nsf-monitoring-data-model], this capability
   information of the NSF can be used to determine whether the NSF is in
   congestion by comparing it with the current workload of the NSF.
   Moreover, this information can specify an available amount of each
   type of resource, such as processing power which are available on the
   NSF.  (The registration interface can control the usages and
   limitations of the created instance and make the appropriate request
   according to the status.)  As illustrated in Figure 4, this
   information consists of two items: Processing and Bandwidth.
   Processing information describes the NSF's available processing
   power.  Bandwidth describes the information about available network
   amount in two cases, outbound, inbound.  These two information can be
   used for the NSF's instance request.

                            +-+-+-+-+-+-+-+-+-+
                            |   Performance   |
                            |   Capabilities  |
                            +-+-+-+-^-+-+-+-+-+
                                    |
                        +----------------------------+
                        |                            |
                        |                            |
                +-+-+-+-+-+-+-+-+            +-+-+-+-+-+-+-+
                |  Processing   |            |  Bandwidth  |
                +-+-+-+-+-+-+-+-+            +-+-+-+-+-+-+-+

                 Figure 4: Performance Capability Overview

4.1.2.  NSF Access Information

   NSF Access Information contains the followings that are required to
   communicate with an NSF: IPv4 address, IPv6 address, port number, and
   supported transport protocol(s) (e.g., Virtual Extensible LAN (VXLAN)
   [RFC7348], Generic Protocol Extension for VXLAN (VXLAN-GPE)
   [I-D.ietf-nvo3-vxlan-gpe], Generic Route Encapsulation (GRE),
   Ethernet etc.).  In this document, NSF Access Information is used to
   identify a specific NSF instance (i.e.  NSF Access Information is the
   signature(unique identifier) of an NSF instance in the overall
   system).







Hyun, et al.              Expires 7 April 2022                  [Page 8]

Internet-Draft   Registration Interface YANG Data Model     October 2021


4.2.  NSF Capability Query

   Security Controller MAY require some additional capabilities to serve
   the security service request from an I2NSF user, but none of the
   registered NSFs has the required capabilities.  In this case,
   Security Controller makes a description of the required capabilities
   by using the NSF capability information sub-model in Section 4.1.1,
   and sends DMS a query about which NSF(s) can provide these
   capabilities.

5.  Data Model

5.1.  YANG Tree Diagram

   This section provides the YANG Tree diagram of the I2NSF registration
   interface.

5.1.1.  Definition of Symbols in Tree Diagrams

   A simplified graphical representation of the data model is used in
   this section.  The meaning of the symbols used in the following
   diagrams [RFC8431] is as follows:

      Brackets "[" and "]" enclose list keys.

      Abbreviations before data node names: "rw" means configuration
      (read-write) and "ro" state data (read-only).

      Symbols after data node names: "?" means an optional node and "*"
      denotes a "list" and "leaf-list".

      Parentheses enclose choice and case nodes, and case nodes are also
      marked with a colon (":").

      Ellipsis ("...") stands for contents of subtrees that are not
      shown.

5.1.2.  I2NSF Registration Interface

           module : ietf-i2nsf-reg-interface
                 +--rw nsf-capability-registration
                 |  uses nsf-registrations

           rpcs :
                 +---x i2nsf-capability-query
                 |  uses nsf-capability-query

            Figure 5: YANG Tree of I2NSF Registration Interface



Hyun, et al.              Expires 7 April 2022                  [Page 9]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   The I2NSF registration interface is used for the following purposes.
   Developer's Management System (DMS) registers NSFs and their
   capabilities into Security Controller via the registration interface.
   In case that Security Controller fails to find any NSF among the
   registered NSFs which can provide some required capabilities,
   Security Controller uses the registration interface to query DMS
   about NSF(s) having the required capabilities.  The following
   sections describe the YANG data models to support these operations.

5.1.2.1.  NSF Capability Registration

   This section expands the i2nsf-nsf-registrations in Figure 5.

         NSF Capability Registration
          +--rw nsf-registrations
              +--rw nsf-information*  [nsf-name]
                 +--rw nsf-name       string
                 +--rw nsf-capability-info
                 |  uses nsf-capability-info
                       +--rw security-capability
                       |  uses ietf-i2nsf-capability
                       +--rw performance-capability
                       |  uses performance-capability
                 +--rw nsf-access-info
                    +--rw ip
                    +--rw port

         Figure 6: YANG Tree of NSF Capability Registration Module

   When registering an NSF to Security Controller, DMS uses this module
   to describe what capabilities the NSF can offer.  DMS includes the
   network access information of the NSF which is required to make a
   network connection with the NSF as well as the capability description
   of the NSF.

5.1.2.2.  NSF Capability Query

   This section expands the nsf-capability-query in Figure 5.













Hyun, et al.              Expires 7 April 2022                 [Page 10]

Internet-Draft   Registration Interface YANG Data Model     October 2021


         I2NSF Capability Query
           +---x nsf-capability-query
               +---w input
               |  +---w query-nsf-capability
               |  |   uses ietf-i2nsf-capability
               +--ro output
                   +--ro nsf-access-info
                       +--rw nsf-name
                       +--rw ip
                       +--rw port

             Figure 7: YANG Tree of NSF Capability Query Module

   Security Controller MAY require some additional capabilities to
   provide the security service requested by an I2NSF user, but none of
   the registered NSFs has the required capabilities.  In this case,
   Security Controller makes a description of the required capabilities
   using this module and then queries DMS about which NSF(s) can provide
   these capabilities.  Use NETCONF RPCs to send a NSF capability query.
   Input data is query-i2nsf-capability-info and output data is nsf-
   access-info.  In Figure 7, the ietf-i2nsf-capability refers to the
   module defined in [I-D.ietf-i2nsf-capability-data-model].

5.1.3.  NSF Capability Information

   This section expands the nsf-capability-info in Figure 6 and
   Figure 7.

         NSF Capability Information
           +--rw nsf-capability-info
             +--rw security-capability
             |  uses ietf-i2nsf-capability
             +--rw performance-capability
             |  uses nsf-performance-capability

          Figure 8: YANG Tree of I2NSF NSF Capability Information

   In Figure 8, the ietf-i2nsf-capability refers to the module defined
   in [I-D.ietf-i2nsf-capability-data-model].  The performance-
   capability is used to specify the performance capability of an NSF.

5.1.3.1.  NSF Performance Capability

   This section expands the nsf-performance-capability in Figure 8.







Hyun, et al.              Expires 7 April 2022                 [Page 11]

Internet-Draft   Registration Interface YANG Data Model     October 2021


         NSF Performance Capability
           +--rw nsf-performance-capability
            +--rw processing
            |   +--rw processing-average  uint16
            |   +--rw processing-peak     uint16
            +--rw bandwidth
            |   +--rw outbound
            |   |  +--rw outbound-average  uint16
            |   |  +--rw outbound-peak     uint16
            |   +--rw inbound
            |   |  +--rw inbound-average   uint16
            |   |  +--rw inbound-peak      uint16

          Figure 9: YANG Tree of I2NSF NSF Performance Capability

   This module is used to specify the performance capabilities of an NSF
   when registering or initiating the NSF.

5.1.4.  NSF Access Information

   This section expands the nsf-access-info in Figure 6.

         NSF Access Information
           +--rw nsf-access-info
             +--rw ip      inet:ip-address-no-zone
             +--rw port    inet:port-number

           Figure 10: YANG Tree of I2NSF NSF Access Informantion

   This module contains the network access information of an NSF that is
   required to enable network communications with the NSF.  The field of
   ip can have either an IPv4 address or an IPv6 address.

5.2.  YANG Data Modules

   This section provides a YANG module of the data model for the
   registration interface between Security Controller and Developer's
   Management System, as defined in Section 4.

   This YANG module imports from [RFC6991], and makes a reference to
   [I-D.ietf-i2nsf-capability-data-model].

   <CODE BEGINS> file "ietf-i2nsf-reg-interface@2021-10-04.yang"
   module ietf-i2nsf-reg-interface {
     yang-version 1.1;

     namespace "urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface";




Hyun, et al.              Expires 7 April 2022                 [Page 12]

Internet-Draft   Registration Interface YANG Data Model     October 2021


     prefix nsfreg;

     //RFC Ed.: replace occurences of XXXX with actual RFC number and
     //remove this note

     import ietf-inet-types {
       prefix inet;
       reference "RFC 6991";
     }
     import ietf-i2nsf-capability {
       prefix nsfcap;
     // RFC Ed.: replace YYYY with actual RFC number of
     // draft-ietf-i2nsf-capability-data-model and remove this note.
       reference "RFC YYYY: I2NSF Capability YANG Data Model";
     }

     organization
      "IETF I2NSF (Interface to Network Security Functions)
       Working Group";

     contact
       "WG Web: <https://tools.ietf.org/wg/i2nsf>
        WG List: <mailto:i2nsf@ietf.org>

        Editor: Sangwon Hyun
        <mailto:shyun@mju.ac.kr>

        Editor: Jaehoon Paul Jeong
        <mailto:pauljeong@skku.edu>";

     description
       "This module defines a YANG data model for I2NSF
        Registration Interface.

        The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL',
        'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED',
        'NOT RECOMMENDED', 'MAY', and 'OPTIONAL' in this
        document are to be interpreted as described in BCP 14
        (RFC 2119) (RFC 8174) when, and only when, they appear
        in all capitals, as shown here.

        Copyright (c) 2021 IETF Trust and the persons
        identified as authors of the code. All rights reserved.

        Redistribution and use in source and binary forms, with or
        without modification, is permitted pursuant to, and subject
        to the license terms contained in, the Simplified BSD License
        set forth in Section 4.c of the IETF Trust's Legal Provisions



Hyun, et al.              Expires 7 April 2022                 [Page 13]

Internet-Draft   Registration Interface YANG Data Model     October 2021


        Relating to IETF Documents
        (https://trustee.ietf.org/license-info).

        This version of this YANG module is part of RFC XXXX; see
        the RFC itself for full legal notices.";

     revision "2021-10-04" {
       description "Initial revision";
       reference
         "RFC XXXX: I2NSF Registration Interface YANG Data Model";
       // RFC Ed.: replace XXXX with actual RFC number and remove
       // this note
     }

     grouping nsf-performance-capability {
       description
         "Description of the performance capabilities of an NSF";

       container processing {
         description
           "Processing power of an NSF in the unit of GHz (gigahertz)";

         leaf processing-average {
           type uint16;
           units "GHz";
           description
             "Average processing power";
         }
         leaf processing-peak {
           type uint16;
           units "GHz";
           description
             "Peak processing power";
         }
       }

       container bandwidth {
         description
           "Network bandwidth available on an NSF
            in the unit of Mbps (megabits per second)";

         container outbound {
           description
             "Outbound network bandwidth";
           leaf outbound-average {
             type uint32;
             units "Mbps";
             description



Hyun, et al.              Expires 7 April 2022                 [Page 14]

Internet-Draft   Registration Interface YANG Data Model     October 2021


               "Average outbound bandwidth";
           }
           leaf outbound-peak {
             type uint32;
             units "Mbps";
             description
               "Peak outbound bandwidth";
           }
         }

         container inbound {
           description
             "Inbound network bandwidth";
           leaf inbound-average {
             type uint32;
             units "Mbps";
             description
               "Average inbound bandwidth";
           }
           leaf inbound-peak {
             type uint32;
             units "Mbps";
             description
               "Peak inbound bandwidth";
           }
         }
       }
     }

     grouping nsf-capability-info {
       description
         "Capability description of an NSF";
       container security-capability {
         description
           "Description of the security capabilities of an NSF";
         uses nsfcap:nsf-capabilities;
         reference "RFC YYYY: I2NSF Capability YANG Data Model";
         // RFC Ed.: replace YYYY with actual RFC number of
         // draft-ietf-i2nsf-capability-data-model and remove this note.
       }
       container performance-capability {
         description
           "Description of the performance capabilities of an NSF";
         uses nsf-performance-capability;
       }
     }

     grouping nsf-access-info {



Hyun, et al.              Expires 7 April 2022                 [Page 15]

Internet-Draft   Registration Interface YANG Data Model     October 2021


       description
         "Information required to access an NSF";
       leaf ip {
         type inet:ip-address-no-zone;
         description
           "Either an IPv4 address or an IPv6 address of this NSF";
       }
       leaf port {
         type inet:port-number;
         description
           "Port available on this NSF";
       }
     }

     container nsf-registrations {
       description
         "Information of an NSF that DMS registers
          to Security Controller";
       list nsf-information {
         key "nsf-name";
         description
           "Required information for registration";
         leaf nsf-name {
           type string;
           description
           "The name of this registered NSF. The NSF name MUST be unique
            to identify the NSF with the capability. The name can be an
            arbitrary string including FQDN (Fully Qualified Domain
            Name).";
         }
         container nsf-capability-info {
           description
             "Capability description of this NSF";
           uses nsf-capability-info;
         }
         container nsf-access-info {
           description
             "Network access information of this NSF";
           uses nsf-access-info;
         }
       }
     }

     rpc nsf-capability-query {
       description
         "Description of the capabilities that the
          Security Controller requests to the DMS";
       input {



Hyun, et al.              Expires 7 April 2022                 [Page 16]

Internet-Draft   Registration Interface YANG Data Model     October 2021


         container query-nsf-capability {
           description
             "Description of the capabilities to request";
           uses nsfcap:nsf-capabilities;
           reference "RFC YYYY: I2NSF Capability YANG Data Model";
         //RFC Ed.: replace YYYY with actual RFC number of
         //draft-ietf-i2nsf-capability-data-model and remove this note.
         }
       }
       output {
         container nsf-access-info {
           description
             "Network access information of an NSF
              with the requested capabilities";
           leaf nsf-name {
             type string;
             description
             "The name of this registered NSF. The NSF name MUST be
              unique to identify the NSF with the capability. The name
              can be an arbitrary string including FQDN (Fully Qualified
              Domain Name).";
           }
           uses nsf-access-info;
         }
       }
     }
   }
   <CODE ENDS>

             Figure 11: Registration Interface YANG Data Model

6.  IANA Considerations

   This document requests IANA to register the following URI in the
   "IETF XML Registry" [RFC3688]:

   URI: urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface
   Registrant Contact: The IESG.
   XML: N/A; the requested URI is an XML namespace.


   This document requests IANA to register the following YANG module in
   the "YANG Module Names" registry [RFC7950][RFC8525]:








Hyun, et al.              Expires 7 April 2022                 [Page 17]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   Name: ietf-i2nsf-reg-interface
   Namespace: urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface
   Prefix: nsfreg
   Reference: RFC XXXX

   // RFC Ed.: replace XXXX with actual RFC number and remove
   // this note


7.  Security Considerations

   The YANG module specified in this document defines a data schema
   designed to be accessed through network management protocols such as
   NETCONF [RFC6241] or RESTCONF [RFC8040].  The lowest NETCONF layer is
   the secure transport layer, and the required secure transport is
   Secure Shell (SSH) [RFC6242].  The lowest RESTCONF layer is HTTPS,
   and the required secure transport is TLS [RFC8446].

   The NETCONF access control model [RFC8341] provides a means of
   restricting access to specific NETCONF or RESTCONF users to a
   preconfigured subset of all available NETCONF or RESTCONF protocol
   operations and content.

   There are a number of data nodes defined in this YANG module that are
   writable/creatable/deletable (i.e., config true, which is the
   default).  These data nodes MAY be considered sensitive or vulnerable
   in some network environments.  Write operations (e.g., edit-config)
   to these data nodes without proper protection can have a negative
   effect on network operations.  These are the subtrees and data nodes
   and their sensitivity/vulnerability:

   *  nsf-registrations: The attacker MAY exploit this to register a
      compromised or malicious NSF instead of a legitimate NSF with the
      Security Controller.

   *  nsf-performance-capability: The attacker MAY provide incorrect
      information of the performance capability of any target NSF by
      illegally modifying this.

   *  nsf-capability-info: The attacker MAY provide incorrect
      information of the security capability of any target NSF by
      illegally modifying this.

   *  nsf-access-info: The attacker MAY provide incorrect network access
      information of any target NSF by illegally modifying this.






Hyun, et al.              Expires 7 April 2022                 [Page 18]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   Some of the readable data nodes in this YANG module MAY be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control read access (e.g., via get, get-config, or
   notification) to these data nodes.  These are the subtrees and data
   nodes and their sensitivity/vulnerability:

   *  nsf-registrations: The attacker MAY try to gather some sensitive
      information of a registered NSF by sniffing this.

   *  nsf-performance-capability: The attacker MAY gather the
      performance capability information of any target NSF and misuse
      the information for subsequent attacks.

   *  nsf-capability-info: The attacker MAY gather the security
      capability information of any target NSF and misuse the
      information for subsequent attacks.

   *  nsf-access-info: The attacker MAY gather the network access
      information of any target NSF and misuse the information for
      subsequent attacks.

   The RPC operation in this YANG module MAY be considered sensitive or
   vulnerable in some network environments.  It is thus important to
   control access to this operation.  The following is the operation and
   its sensitivity/vulnerability:

   *  nsf-capability-query: The attacker MAY exploit this RPC operation
      to deteriorate the availability of the DMS and/or gather the
      information of some interested NSFs from the DMS.



8.  References

8.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC3688]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688,
              DOI 10.17487/RFC3688, January 2004,
              <https://www.rfc-editor.org/info/rfc3688>.







Hyun, et al.              Expires 7 April 2022                 [Page 19]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,
              and A. Bierman, Ed., "Network Configuration Protocol
              (NETCONF)", RFC 6241, DOI 10.17487/RFC6241, June 2011,
              <https://www.rfc-editor.org/info/rfc6241>.

   [RFC6242]  Wasserman, M., "Using the NETCONF Protocol over Secure
              Shell (SSH)", RFC 6242, DOI 10.17487/RFC6242, June 2011,
              <https://www.rfc-editor.org/info/rfc6242>.

   [RFC6991]  Schoenwaelder, J., Ed., "Common YANG Data Types",
              RFC 6991, DOI 10.17487/RFC6991, July 2013,
              <https://www.rfc-editor.org/info/rfc6991>.

   [RFC7950]  Bjorklund, M., Ed., "The YANG 1.1 Data Modeling Language",
              RFC 7950, DOI 10.17487/RFC7950, August 2016,
              <https://www.rfc-editor.org/info/rfc7950>.

   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF
              Protocol", RFC 8040, DOI 10.17487/RFC8040, January 2017,
              <https://www.rfc-editor.org/info/rfc8040>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8340]  Bjorklund, M. and L. Berger, Ed., "YANG Tree Diagrams",
              BCP 215, RFC 8340, DOI 10.17487/RFC8340, March 2018,
              <https://www.rfc-editor.org/info/rfc8340>.

   [RFC8341]  Bierman, A. and M. Bjorklund, "Network Configuration
              Access Control Model", STD 91, RFC 8341,
              DOI 10.17487/RFC8341, March 2018,
              <https://www.rfc-editor.org/info/rfc8341>.

   [RFC8342]  Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K.,
              and R. Wilton, "Network Management Datastore Architecture
              (NMDA)", RFC 8342, DOI 10.17487/RFC8342, March 2018,
              <https://www.rfc-editor.org/info/rfc8342>.

   [RFC8407]  Bierman, A., "Guidelines for Authors and Reviewers of
              Documents Containing YANG Data Models", BCP 216, RFC 8407,
              DOI 10.17487/RFC8407, October 2018,
              <https://www.rfc-editor.org/info/rfc8407>.

   [RFC8431]  Wang, L., Chen, M., Dass, A., Ananthakrishnan, H., Kini,
              S., and N. Bahadur, "A YANG Data Model for the Routing
              Information Base (RIB)", RFC 8431, DOI 10.17487/RFC8431,
              September 2018, <https://www.rfc-editor.org/info/rfc8431>.



Hyun, et al.              Expires 7 April 2022                 [Page 20]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/info/rfc8446>.

   [RFC8525]  Bierman, A., Bjorklund, M., Schoenwaelder, J., Watsen, K.,
              and R. Wilton, "YANG Library", RFC 8525,
              DOI 10.17487/RFC8525, March 2019,
              <https://www.rfc-editor.org/info/rfc8525>.

   [I-D.ietf-i2nsf-capability-data-model]
              Hares, S., Jeong, J. (., Kim, J. (., Moskowitz, R., and Q.
              Lin, "I2NSF Capability YANG Data Model", Work in Progress,
              Internet-Draft, draft-ietf-i2nsf-capability-data-model-19,
              28 September 2021, <https://www.ietf.org/archive/id/draft-
              ietf-i2nsf-capability-data-model-19.txt>.

8.2.  Informative References

   [RFC3849]  Huston, G., Lord, A., and P. Smith, "IPv6 Address Prefix
              Reserved for Documentation", RFC 3849,
              DOI 10.17487/RFC3849, July 2004,
              <https://www.rfc-editor.org/info/rfc3849>.

   [RFC5737]  Arkko, J., Cotton, M., and L. Vegoda, "IPv4 Address Blocks
              Reserved for Documentation", RFC 5737,
              DOI 10.17487/RFC5737, January 2010,
              <https://www.rfc-editor.org/info/rfc5737>.

   [RFC7348]  Mahalingam, M., Dutt, D., Duda, K., Agarwal, P., Kreeger,
              L., Sridhar, T., Bursell, M., and C. Wright, "Virtual
              eXtensible Local Area Network (VXLAN): A Framework for
              Overlaying Virtualized Layer 2 Networks over Layer 3
              Networks", RFC 7348, DOI 10.17487/RFC7348, August 2014,
              <https://www.rfc-editor.org/info/rfc7348>.

   [RFC8329]  Lopez, D., Lopez, E., Dunbar, L., Strassner, J., and R.
              Kumar, "Framework for Interface to Network Security
              Functions", RFC 8329, DOI 10.17487/RFC8329, February 2018,
              <https://www.rfc-editor.org/info/rfc8329>.

   [I-D.ietf-i2nsf-nsf-monitoring-data-model]
              Jeong, J. (., Lingga, P., Hares, S., Xia, L. (., and H.
              Birkholz, "I2NSF NSF Monitoring Interface YANG Data
              Model", Work in Progress, Internet-Draft, draft-ietf-
              i2nsf-nsf-monitoring-data-model-10, 15 September 2021,
              <https://www.ietf.org/archive/id/draft-ietf-i2nsf-nsf-
              monitoring-data-model-10.txt>.




Hyun, et al.              Expires 7 April 2022                 [Page 21]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   [RFC9061]  Marin-Lopez, R., Lopez-Millan, G., and F. Pereniguez-
              Garcia, "A YANG Data Model for IPsec Flow Protection Based
              on Software-Defined Networking (SDN)", RFC 9061,
              DOI 10.17487/RFC9061, July 2021,
              <https://www.rfc-editor.org/info/rfc9061>.

   [I-D.ietf-nvo3-vxlan-gpe]
              (Editor), F. M., (editor), L. K., and U. E. (editor),
              "Generic Protocol Extension for VXLAN (VXLAN-GPE)", Work
              in Progress, Internet-Draft, draft-ietf-nvo3-vxlan-gpe-12,
              22 September 2021, <https://www.ietf.org/archive/id/draft-
              ietf-nvo3-vxlan-gpe-12.txt>.

   [nfv-framework]
              "Network Functions Virtualisation (NFV); Architectureal
              Framework", ETSI GS NFV 002 ETSI GS NFV 002 V1.1.1,
              October 2013.

Appendix A.  XML Examples of I2NSF Registration Interface Data Model

   This section describes XML examples of the I2NSF Registration
   Interface data model under the assumption of registering several
   types of NSFs and querying NSF capability.

A.1.  Example 1: Registration for the Capabilities of a General Firewall

   This section shows an XML example for registering the capabilities of
   a general firewall in either IPv4 networks [RFC5737] or IPv6 networks
   [RFC3849].

   <nsf-registrations
    xmlns="urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface"
    xmlns:cap="urn:ietf:params:xml:ns:yang:ietf-i2nsf-capability">
    <nsf-information>
     <nsf-name>general_firewall</nsf-name>
     <nsf-capability-info>
      <security-capability>
       <condition-capabilities>
        <generic-nsf-capabilities>
         <ipv4-capability>nsfcap:next-header</ipv4-capability>
         <ipv4-capability>nsfcap:source-address</ipv4-capability>
         <ipv4-capability>nsfcap:destination-address</ipv4-capability>
         <tcp-capability>nsfcap:source-port-number</tcp-capability>
         <tcp-capability>nsfcap:destination-port-number</tcp-capability>
        </generic-nsf-capabilities>
       </condition-capabilities>
       <action-capabilities>
        <ingress-action-capability>



Hyun, et al.              Expires 7 April 2022                 [Page 22]

Internet-Draft   Registration Interface YANG Data Model     October 2021


         nsfcap:pass
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:drop
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:mirror
        </ingress-action-capability>
        <egress-action-capability>
         nsfcap:pass
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:drop
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:mirror
        </egress-action-capability>
       </action-capabilities>
      </security-capability>
      <performance-capability>
       <processing>
        <processing-average>1000</processing-average>
        <processing-peak>5000</processing-peak>
       </processing>
       <bandwidth>
        <outbound>
         <outbound-average>1000</outbound-average>
         <outbound-peak>5000</outbound-peak>
        </outbound>
        <inbound>
         <inbound-average>1000</inbound-average>
         <inbound-peak>5000</inbound-peak>
        </inbound>
       </bandwidth>
      </performance-capability>
     </nsf-capability-info>
     <nsf-access-info>
      <ip>192.0.2.11</ip>
      <port>49152</port>
     </nsf-access-info>
    </nsf-information>
   </nsf-registrations>

         Figure 12: Configuration XML for Registration of a General
                        Firewall in an IPv4 Network






Hyun, et al.              Expires 7 April 2022                 [Page 23]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   Figure 12 shows the configuration XML for registering a general
   firewall in an IPv4 network [RFC5737] and its capabilities as
   follows.

   1.  The instance name of the NSF is general_firewall.

   2.  The NSF can inspect IPv4 protocol header field, source
       address(es), and destination address(es)

   3.  The NSF can inspect the port number(s) for the transport layer
       protocol, i.e., TCP.

   4.  The NSF can determine whether the packets are allowed to pass,
       drop, or mirror.

   5.  The NSF can support IPsec not through IKEv2, but through a
       Security Controller [RFC9061].

   6.  The NSF can have processing power and bandwidth.

   7.  The IPv4 address of the NSF is 192.0.2.11.

   8.  The port of the NSF is 49152.

   <nsf-registrations
    xmlns="urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface"
    xmlns:cap="urn:ietf:params:xml:ns:yang:ietf-i2nsf-capability">
    <nsf-information>
     <nsf-name>general_firewall</nsf-name>
     <nsf-capability-info>
      <security-capability>
       <condition-capabilities>
        <generic-nsf-capabilities>
         <ipv6-capability>nsfcap:next-header</ipv6-capability>
         <ipv6-capability>nsfcap:source-address</ipv6-capability>
         <ipv6-capability>nsfcap:destination-address</ipv6-capability>
         <tcp-capability>nsfcap:source-port-number</tcp-capability>
         <tcp-capability>nsfcap:destination-port-number</tcp-capability>
        </generic-nsf-capabilities>
       </condition-capabilities>
       <action-capabilities>
        <ingress-action-capability>
         nsfcap:pass
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:drop
        </ingress-action-capability>
        <ingress-action-capability>



Hyun, et al.              Expires 7 April 2022                 [Page 24]

Internet-Draft   Registration Interface YANG Data Model     October 2021


         nsfcap:mirror
        </ingress-action-capability>
        <egress-action-capability>
         nsfcap:pass
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:drop
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:mirror
        </egress-action-capability>
       </action-capabilities>
      </security-capability>
      <performance-capability>
       <processing>
        <processing-average>1000</processing-average>
        <processing-peak>5000</processing-peak>
       </processing>
       <bandwidth>
        <outbound>
         <outbound-average>1000</outbound-average>
         <outbound-peak>5000</outbound-peak>
        </outbound>
        <inbound>
         <inbound-average>1000</inbound-average>
         <inbound-peak>5000</inbound-peak>
        </inbound>
       </bandwidth>
      </performance-capability>
     </nsf-capability-info>
     <nsf-access-info>
      <ip>2001:DB8:0:1::11</ip>
      <port>49152</port>
     </nsf-access-info>
    </nsf-information>
   </nsf-registrations>

         Figure 13: Configuration XML for Registration of a General
                        Firewall in an IPv6 Network

   In addition, Figure 13 shows the configuration XML for registering a
   general firewall in an IPv6 network [RFC3849] and its capabilities as
   follows.

   1.  The instance name of the NSF is general_firewall.

   2.  The NSF can inspect IPv6 next header, flow direction, source
       address(es), and destination address(es)



Hyun, et al.              Expires 7 April 2022                 [Page 25]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   3.  The NSF can inspect the port number(s) and flow direction for the
       transport layer protocol, i.e., TCP and UDP.

   4.  The NSF can determine whether the packets are allowed to pass,
       drop, or mirror.

   5.  The NSF can have processing power and bandwidth.

   6.  The IPv6 address of the NSF is 2001:DB8:0:1::11.

   7.  The port of the NSF is 49152.

A.2.  Example 2: Registration for the Capabilities of a Time-based
      Firewall

   This section shows an XML example for registering the capabilities of
   a time-based firewall in either IPv4 networks [RFC5737] or IPv6
   networks [RFC3849].

   <nsf-registrations
    xmlns="urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface"
    xmlns:cap="urn:ietf:params:xml:ns:yang:ietf-i2nsf-capability">
    <nsf-information>
     <nsf-name>time_based_firewall</nsf-name>
     <nsf-capability-info>
      <security-capability>
       <event-capabilities>
        <time-capabilities>nsfcap:absolute-time</time-capabilities>
        <time-capabilities>nsfcap:periodic-time</time-capabilities>
       </event-capabilities>
       <condition-capabilities>
        <generic-nsf-capabilities>
         <ipv4-capability>nsfcap:next-header</ipv4-capability>
         <ipv4-capability>nsfcap:source-address</ipv4-capability>
         <ipv4-capability>nsfcap:destination-address</ipv4-capability>
         <tcp-capability>nsfcap:source-port-number</tcp-capability>
         <tcp-capability>nsfcap:destination-port-number</tcp-capability>
        </generic-nsf-capabilities>
       </condition-capabilities>
       <action-capabilities>
        <ingress-action-capability>
         nsfcap:pass
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:drop
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:mirror



Hyun, et al.              Expires 7 April 2022                 [Page 26]

Internet-Draft   Registration Interface YANG Data Model     October 2021


        </ingress-action-capability>
        <egress-action-capability>
         nsfcap:pass
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:drop
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:mirror
        </egress-action-capability>
       </action-capabilities>
      </security-capability>
      <performance-capability>
       <processing>
        <processing-average>1000</processing-average>
        <processing-peak>5000</processing-peak>
       </processing>
       <bandwidth>
        <outbound>
         <outbound-average>1000</outbound-average>
         <outbound-peak>5000</outbound-peak>
        </outbound>
        <inbound>
         <inbound-average>1000</inbound-average>
         <inbound-peak>5000</inbound-peak>
        </inbound>
       </bandwidth>
      </performance-capability>
     </nsf-capability-info>
     <nsf-access-info>
      <ip>192.0.2.11</ip>
      <port>49152</port>
     </nsf-access-info>
    </nsf-information>
   </nsf-registrations>

       Figure 14: Configuration XML for Registration of a Time-based
                        Firewall in an IPv4 Network

   Figure 14 shows the configuration XML for registering a time-based
   firewall in an IPv4 network [RFC5737] and its capabilities as
   follows.

   1.  The instance name of the NSF is time_based_firewall.

   2.  The NSF can enforce the security policy rule according to
       absolute time and periodic time.




Hyun, et al.              Expires 7 April 2022                 [Page 27]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   3.  The NSF can inspect the IPv4 protocol header field, IPv4 source
       address(es), IPv4 destination address(es), TCP source port
       number(s), and TCP destination port number(s).

   4.  The NSF can determine whether the packets are allowed to pass,
       drop, or mirror.

   5.  The NSF can have processing power and bandwidth.

   6.  The IPv4 address of the NSF is 192.0.2.11.

   7.  The port of the NSF is 49152.

   <nsf-registrations
    xmlns="urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface"
    xmlns:cap="urn:ietf:params:xml:ns:yang:ietf-i2nsf-capability">
    <nsf-information>
     <nsf-name>time_based_firewall</nsf-name>
     <nsf-capability-info>
      <security-capability>
       <event-capabilities>
        <time-capabilities>nsfcap:absolute-time</time-capabilities>
        <time-capabilities>nsfcap:periodic-time</time-capabilities>
       </event-capabilities>
       <condition-capabilities>
        <generic-nsf-capabilities>
         <ipv6-capability>nsfcap:next-header</ipv6-capability>
         <ipv6-capability>nsfcap:source-address</ipv6-capability>
         <ipv6-capability>nsfcap:destination-address</ipv6-capability>
         <tcp-capability>nsfcap:source-port-number</tcp-capability>
         <tcp-capability>nsfcap:destination-port-number</tcp-capability>
        </generic-nsf-capabilities>
       </condition-capabilities>
       <action-capabilities>
        <ingress-action-capability>
         nsfcap:pass
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:drop
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:mirror
        </ingress-action-capability>
        <egress-action-capability>
         nsfcap:pass
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:drop



Hyun, et al.              Expires 7 April 2022                 [Page 28]

Internet-Draft   Registration Interface YANG Data Model     October 2021


        </egress-action-capability>
        <egress-action-capability>
         nsfcap:mirror
        </egress-action-capability>
       </action-capabilities>
      </security-capability>
      <performance-capability>
       <processing>
        <processing-average>1000</processing-average>
        <processing-peak>5000</processing-peak>
       </processing>
       <bandwidth>
        <outbound>
         <outbound-average>1000</outbound-average>
         <outbound-peak>5000</outbound-peak>
        </outbound>
        <inbound>
         <inbound-average>1000</inbound-average>
         <inbound-peak>5000</inbound-peak>
        </inbound>
       </bandwidth>
      </performance-capability>
     </nsf-capability-info>
     <nsf-access-info>
      <ip>2001:DB8:0:1::11</ip>
      <port>49152</port>
     </nsf-access-info>
    </nsf-information>
   </nsf-registrations>

       Figure 15: Configuration XML for Registration of a Time-based
                        Firewall in an IPv6 Network

   In addition, Figure 15 shows the configuration XML for registering a
   time-based firewall in an IPv6 network [RFC3849] and its capabilities
   as follows.

   1.  The instance name of the NSF is time_based_firewall.

   2.  The NSF can enforce the security policy rule according to
       absolute time and periodic time.

   3.  The NSF can inspect the IPv6 next header field, IPv6 source
       address(es), IPv6 destination address(es), TCP source port
       number(s), and TCP destination port number(s).

   4.  The NSF can determine whether the packets are allowed to pass,
       drop, or mirror.



Hyun, et al.              Expires 7 April 2022                 [Page 29]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   5.  The NSF can have processing power and bandwidth.

   6.  The IPv6 address of the NSF is 2001:DB8:0:1::11.

   7.  The port of the NSF is 49152.

A.3.  Example 3: Registration for the Capabilities of a Web Filter

   This section shows an XML example for registering the capabilities of
   a web filter in either IPv4 networks [RFC5737] or IPv6 networks
   [RFC3849].

   <nsf-registrations
    xmlns="urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface"
    xmlns:cap="urn:ietf:params:xml:ns:yang:ietf-i2nsf-capability">
    <nsf-information>
     <nsf-name>web_filter</nsf-name>
     <nsf-capability-info>
      <security-capability>
       <condition-capabilities>
        <advanced-nsf-capabilities>
         <url-capability>nsfcap:user-defined</url-capability>
        </advanced-nsf-capabilities>
       </condition-capabilities>
       <action-capabilities>
        <ingress-action-capability>
         nsfcap:pass
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:drop
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:mirror
        </ingress-action-capability>
        <egress-action-capability>
         nsfcap:pass
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:drop
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:mirror
        </egress-action-capability>
       </action-capabilities>
      </security-capability>
      <performance-capability>
       <processing>
        <processing-average>1000</processing-average>



Hyun, et al.              Expires 7 April 2022                 [Page 30]

Internet-Draft   Registration Interface YANG Data Model     October 2021


        <processing-peak>5000</processing-peak>
       </processing>
       <bandwidth>
        <outbound>
         <outbound-average>1000</outbound-average>
         <outbound-peak>5000</outbound-peak>
        </outbound>
        <inbound>
         <inbound-average>1000</inbound-average>
         <inbound-peak>5000</inbound-peak>
        </inbound>
       </bandwidth>
      </performance-capability>
     </nsf-capability-info>
     <nsf-access-info>
      <ip>192.0.2.11</ip>
      <port>49152</port>
     </nsf-access-info>
    </nsf-information>
   </nsf-registrations>

      Figure 16: Configuration XML for Registration of a Web Filter in
                              an IPv4 Network

   Figure 16 shows the configuration XML for registering a web filter in
   an IPv4 network [RFC5737] and its capabilities are as follows.

   1.  The instance name of the NSF is web_filter.

   2.  The NSF can inspect URL from a pre-defined database or a added
       new URL by user (user-defined).

   3.  The NSF can determine whether the packets are allowed to pass,
       drop, or mirror.

   4.  The NSF can have processing power and bandwidth.

   5.  The IPv4 address of the NSF is 192.0.2.11.

   6.  The port of the NSF is 49152.

   <nsf-registrations
    xmlns="urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface"
    xmlns:cap="urn:ietf:params:xml:ns:yang:ietf-i2nsf-capability">
    <nsf-information>
     <nsf-name>web_filter</nsf-name>
     <nsf-capability-info>
      <security-capability>



Hyun, et al.              Expires 7 April 2022                 [Page 31]

Internet-Draft   Registration Interface YANG Data Model     October 2021


       <condition-capabilities>
        <advanced-nsf-capabilities>
         <url-capability>nsfcap:user-defined</url-capability>
         <url-capability>nsfcap:pre-defined</url-capability>
        </advanced-nsf-capabilities>
       </condition-capabilities>
       <action-capabilities>
        <ingress-action-capability>
         nsfcap:pass
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:drop
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:mirror
        </ingress-action-capability>
        <egress-action-capability>
         nsfcap:pass
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:drop
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:mirror
        </egress-action-capability>
       </action-capabilities>
      </security-capability>
      <performance-capability>
       <processing>
        <processing-average>1000</processing-average>
        <processing-peak>5000</processing-peak>
       </processing>
       <bandwidth>
        <outbound>
         <outbound-average>1000</outbound-average>
         <outbound-peak>5000</outbound-peak>
        </outbound>
        <inbound>
         <inbound-average>1000</inbound-average>
         <inbound-peak>5000</inbound-peak>
        </inbound>
       </bandwidth>
      </performance-capability>
     </nsf-capability-info>
     <nsf-access-info>
      <ip>2001:DB8:0:1::11</ip>
      <port>49152</port>
     </nsf-access-info>



Hyun, et al.              Expires 7 April 2022                 [Page 32]

Internet-Draft   Registration Interface YANG Data Model     October 2021


    </nsf-information>
   </nsf-registrations>

      Figure 17: Configuration XML for Registration of a Web Filter in
                              an IPv6 Network

   In addition, Figure 17 shows the configuration XML for registering a
   web filter in an IPv6 network [RFC3849] and its capabilities are as
   follows.

   1.  The instance name of the NSF is web_filter.

   2.  The NSF can inspect URL from a pre-defined database or a added
       new URL by user (user-defined).

   3.  The NSF can determine whether the packets are allowed to pass,
       drop, or mirror.

   4.  The NSF can have processing power and bandwidth.

   5.  The IPv6 address of the NSF is 2001:DB8:0:1::11.

   6.  The port of the NSF is 49152.

A.4.  Example 4: Registration for the Capabilities of a VoIP/VoLTE
      Filter

   This section shows an XML example for registering the capabilities of
   a VoIP/VoLTE filter in either IPv4 networks [RFC5737] or IPv6
   networks [RFC3849].

   <nsf-registrations
    xmlns="urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface"
    xmlns:cap="urn:ietf:params:xml:ns:yang:ietf-i2nsf-capability">
    <nsf-information>
     <nsf-name>voip_volte_filter</nsf-name>
     <nsf-capability-info>
      <security-capability>
       <condition-capabilities>
        <advanced-nsf-capabilities>
         <voip-volte-capability>nsfcap:call-id</voip-volte-capability>
        </advanced-nsf-capabilities>
       </condition-capabilities>
       <action-capabilities>
        <ingress-action-capability>
         nsfcap:pass
        </ingress-action-capability>
        <ingress-action-capability>



Hyun, et al.              Expires 7 April 2022                 [Page 33]

Internet-Draft   Registration Interface YANG Data Model     October 2021


         nsfcap:drop
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:mirror
        </ingress-action-capability>
        <egress-action-capability>
         nsfcap:pass
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:drop
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:mirror
        </egress-action-capability>
       </action-capabilities>
      </security-capability>
      <performance-capability>
       <processing>
        <processing-average>1000</processing-average>
        <processing-peak>5000</processing-peak>
       </processing>
       <bandwidth>
        <outbound>
         <outbound-average>1000</outbound-average>
         <outbound-peak>5000</outbound-peak>
        </outbound>
        <inbound>
         <inbound-average>1000</inbound-average>
         <inbound-peak>5000</inbound-peak>
        </inbound>
       </bandwidth>
      </performance-capability>
     </nsf-capability-info>
     <nsf-access-info>
      <ip>192.0.2.11</ip>
      <port>49152</port>
     </nsf-access-info>
    </nsf-information>
   </nsf-registrations>

       Figure 18: Configuration XML for Registration of a VoIP/VoLTE
                         Filter in an IPv4 Network

   Figure 18 shows the configuration XML for registering a VoIP/VoLTE
   filter in an IPv4 network [RFC5737] and its capabilities are as
   follows.

   1.  The instance name of the NSF is voip_volte_filter.



Hyun, et al.              Expires 7 April 2022                 [Page 34]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   2.  The NSF can inspect a call id for VoIP/VoLTE packets.

   3.  The NSF can determine whether the packets are allowed to pass,
       drop, or mirror.

   4.  The NSF can have processing power and bandwidth.

   5.  The IPv4 address of the NSF is 192.0.2.11.

   6.  The port of the NSF is 49152.

   <nsf-registrations
    xmlns="urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface"
    xmlns:cap="urn:ietf:params:xml:ns:yang:ietf-i2nsf-capability">
    <nsf-information>
     <nsf-name>voip_volte_filter</nsf-name>
     <nsf-capability-info>
      <security-capability>
       <condition-capabilities>
        <advanced-nsf-capabilities>
         <voip-volte-capability>nsfcap:call-id</voip-volte-capability>
        </advanced-nsf-capabilities>
       </condition-capabilities>
       <action-capabilities>
        <ingress-action-capability>
         nsfcap:pass
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:drop
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:mirror
        </ingress-action-capability>
        <egress-action-capability>
         nsfcap:pass
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:drop
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:mirror
        </egress-action-capability>
       </action-capabilities>
      </security-capability>
      <performance-capability>
       <processing>
        <processing-average>1000</processing-average>
        <processing-peak>5000</processing-peak>



Hyun, et al.              Expires 7 April 2022                 [Page 35]

Internet-Draft   Registration Interface YANG Data Model     October 2021


       </processing>
       <bandwidth>
        <outbound>
         <outbound-average>1000</outbound-average>
         <outbound-peak>5000</outbound-peak>
        </outbound>
        <inbound>
         <inbound-average>1000</inbound-average>
         <inbound-peak>5000</inbound-peak>
        </inbound>
       </bandwidth>
      </performance-capability>
     </nsf-capability-info>
     <nsf-access-info>
      <ip>2001:DB8:0:1::11</ip>
      <port>49152</port>
     </nsf-access-info>
    </nsf-information>
   </nsf-registrations>

       Figure 19: Configuration XML for Registration of a VoIP/VoLTE
                         Filter in an IPv6 Network

   Figure 19 shows the configuration XML for registering a VoIP/VoLTE
   filter in an IPv6 network [RFC3849] and its capabilities are as
   follows.

   1.  The instance name of the NSF is voip_volte_filter.

   2.  The NSF can inspect a call id for VoIP/VoLTE packets.

   3.  The NSF can determine whether the packets are allowed to pass,
       drop, or mirror.

   4.  The NSF can have processing power and bandwidth.

   5.  The IPv6 address of the NSF is 2001:DB8:0:1::11.

   6.  The port of the NSF is 49152.

A.5.  Example 5: Registration for the Capabilities of a DDoS Mitigator

   This section shows an XML example for registering the capabilities of
   a DDoS mitigator in either IPv4 networks [RFC5737] or IPv6 networks
   [RFC3849].






Hyun, et al.              Expires 7 April 2022                 [Page 36]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   <nsf-registrations
    xmlns="urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface"
    xmlns:cap="urn:ietf:params:xml:ns:yang:ietf-i2nsf-capability">
    <nsf-information>
     <nsf-name>anti_DDoS</nsf-name>
     <nsf-capability-info>
      <security-capability>
       <condition-capabilities>
        <advanced-nsf-capabilities>
         <anti-ddos-capability>
          nsfcap:packet-rate
         </anti-ddos-capability>
         <anti-ddos-capability>
          nsfcap:flow-rate
         </anti-ddos-capability>
         <anti-ddos-capability>
          nsfcap:byte-rate
         </anti-ddos-capability>
        </advanced-nsf-capabilities>
       </condition-capabilities>
       <action-capabilities>
        <ingress-action-capability>
         nsfcap:pass
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:drop
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:mirror
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:rate-limit
        </ingress-action-capability>
        <egress-action-capability>
         nsfcap:pass
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:drop
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:mirror
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:rate-limit
        </egress-action-capability>
       </action-capabilities>
      </security-capability>
      <performance-capability>



Hyun, et al.              Expires 7 April 2022                 [Page 37]

Internet-Draft   Registration Interface YANG Data Model     October 2021


       <processing>
        <processing-average>1000</processing-average>
        <processing-peak>5000</processing-peak>
       </processing>
       <bandwidth>
        <outbound>
         <outbound-average>1000</outbound-average>
         <outbound-peak>5000</outbound-peak>
        </outbound>
        <inbound>
         <inbound-average>1000</inbound-average>
         <inbound-peak>5000</inbound-peak>
        </inbound>
       </bandwidth>
      </performance-capability>
     </nsf-capability-info>
     <nsf-access-info>
      <ip>192.0.2.11</ip>
      <port>49152</port>
     </nsf-access-info>
    </nsf-information>
   </nsf-registrations>

     Figure 20: Configuration XML for Registration of a DDoS Mitigator
                             in an IPv4 Network

   Figure 20 shows the configuration XML for registering a DDoS
   mitigator in an IPv4 network [RFC5737] and its capabilities are as
   follows.

   1.  The instance name of the NSF is anti_DDoS.

   2.  The NSF can detect the amount of packet, flow, and byte rate in
       the network for potential DDoS Attack.

   3.  The NSF can determine whether the packets are allowed to pass,
       drop, or mirror.

   4.  The NSF can have processing power and bandwidth.

   5.  The IPv4 address of the NSF is 192.0.2.11.

   6.  The port of the NSF is 49152.








Hyun, et al.              Expires 7 April 2022                 [Page 38]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   <nsf-registrations
    xmlns="urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface"
    xmlns:cap="urn:ietf:params:xml:ns:yang:ietf-i2nsf-capability">
    <nsf-information>
     <nsf-name>anti_DDoS</nsf-name>
     <nsf-capability-info>
      <security-capability>
       <condition-capabilities>
        <advanced-nsf-capabilities>
         <anti-ddos-capability>
          nsfcap:packet-rate
         </anti-ddos-capability>
         <anti-ddos-capability>
          nsfcap:flow-rate
         </anti-ddos-capability>
         <anti-ddos-capability>
          nsfcap:byte-rate
         </anti-ddos-capability>
        </advanced-nsf-capabilities>
       </condition-capabilities>
       <action-capabilities>
        <ingress-action-capability>
         nsfcap:pass
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:drop
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:mirror
        </ingress-action-capability>
        <ingress-action-capability>
         nsfcap:rate-limit
        </ingress-action-capability>
        <egress-action-capability>
         nsfcap:pass
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:drop
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:mirror
        </egress-action-capability>
        <egress-action-capability>
         nsfcap:rate-limit
        </egress-action-capability>
       </action-capabilities>
      </security-capability>
      <performance-capability>



Hyun, et al.              Expires 7 April 2022                 [Page 39]

Internet-Draft   Registration Interface YANG Data Model     October 2021


       <processing>
        <processing-average>1000</processing-average>
        <processing-peak>5000</processing-peak>
       </processing>
       <bandwidth>
        <outbound>
         <outbound-average>1000</outbound-average>
         <outbound-peak>5000</outbound-peak>
        </outbound>
        <inbound>
         <inbound-average>1000</inbound-average>
         <inbound-peak>5000</inbound-peak>
        </inbound>
       </bandwidth>
      </performance-capability>
     </nsf-capability-info>
     <nsf-access-info>
      <ip>2001:DB8:0:1::11</ip>
      <port>49152</port>
     </nsf-access-info>
    </nsf-information>
   </nsf-registrations>

     Figure 21: Configuration XML for Registration of a DDoS Mitigator
                             in an IPv6 Network

   In addition, Figure 21 shows the configuration XML for registering a
   DDoS mitigator in an IPv6 network [RFC3849] and its capabilities are
   as follows.

   1.  The instance name of the NSF is anti_DDoS.

   2.  The NSF can detect the amount of packet, flow, and byte rate in
       the network for potential DDoS Attack.

   3.  The NSF can determine whether the packets are allowed to pass,
       drop, mirror, or rate-limit.

   4.  The NSF can have processing power and bandwidth.

   5.  The IPv6 address of the NSF is 2001:DB8:0:1::11.

   6.  The port of the NSF is 49152.








Hyun, et al.              Expires 7 April 2022                 [Page 40]

Internet-Draft   Registration Interface YANG Data Model     October 2021


A.6.  Example 6: Query for the Capabilities of a Time-based Firewall

   This section shows an XML example for querying the capabilities of a
   time-based firewall in either IPv4 networks [RFC5737] or IPv6
   networks [RFC3849].

   <rpc message-id="101"
    xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
    <nsf-capability-query
     xmlns="urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface"
     xmlns:cap="urn:ietf:params:xml:ns:yang:ietf-i2nsf-capability">
     <query-i2nsf-capability-info>
      <time-capabilities>absolute-time</time-capabilities>
      <time-capabilities>periodic-time</time-capabilities>
      <condition-capabilities>
       <generic-nsf-capabilities>
        <ipv4-capability>nsfcap:next-header</ipv4-capability>
        <ipv4-capability>nsfcap:source-address</ipv4-capability>
        <ipv4-capability>nsfcap:destination-address</ipv4-capability>
       </generic-nsf-capabilities>
      </condition-capabilities>
      <action-capabilities>
       <ingress-action-capability>
        nsfcap:pass
       </ingress-action-capability>
       <ingress-action-capability>
        nsfcap:drop
       </ingress-action-capability>
       <ingress-action-capability>
        nsfcap:mirror
       </ingress-action-capability>
       <egress-action-capability>
        nsfcap:pass
       </egress-action-capability>
       <egress-action-capability>
        nsfcap:drop
       </egress-action-capability>
       <egress-action-capability>
        nsfcap:mirror
       </egress-action-capability>
      </action-capabilities>
     </query-i2nsf-capability-info>
    </nsf-capability-query>
   </rpc>

   <rpc-reply message-id="101"
    xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
    <nsf-access-info



Hyun, et al.              Expires 7 April 2022                 [Page 41]

Internet-Draft   Registration Interface YANG Data Model     October 2021


     xmlns="urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface">
     <nsf-name>time_based_firewall</nsf-name>
     <ip>192.0.2.11</ip>
     <port>49152</port>
    </nsf-access-info>
   </rpc-reply>

      Figure 22: Configuration XML for Query of a Time-based Firewall
                             in an IPv4 Network

   Figure 22 shows the XML configuration for querying the capabilities
   of a time-based firewall in an IPv4 network [RFC5737].  The access
   information of the announced time-based firewall has the IPv4 address
   of 192.0.2.11 and the port number of 49152.

   <rpc message-id="101"
    xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
    <nsf-capability-query
     xmlns="urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface"
     xmlns:cap="urn:ietf:params:xml:ns:yang:ietf-i2nsf-capability">
     <query-i2nsf-capability-info>
      <time-capabilities>absolute-time</time-capabilities>
      <time-capabilities>periodic-time</time-capabilities>
      <condition-capabilities>
       <generic-nsf-capabilities>
        <ipv6-capability>nsfcap:next-header</ipv6-capability>
        <ipv6-capability>nsfcap:source-address</ipv6-capability>
        <ipv6-capability>nsfcap:destination-address</ipv6-capability>
       </generic-nsf-capabilities>
      </condition-capabilities>
      <action-capabilities>
       <ingress-action-capability>
        nsfcap:pass
       </ingress-action-capability>
       <ingress-action-capability>
        nsfcap:drop
       </ingress-action-capability>
       <ingress-action-capability>
        nsfcap:mirror
       </ingress-action-capability>
       <egress-action-capability>
        nsfcap:pass
       </egress-action-capability>
       <egress-action-capability>
        nsfcap:drop
       </egress-action-capability>
       <egress-action-capability>
        nsfcap:mirror



Hyun, et al.              Expires 7 April 2022                 [Page 42]

Internet-Draft   Registration Interface YANG Data Model     October 2021


       </egress-action-capability>
      </action-capabilities>
     </query-i2nsf-capability-info>
    </nsf-capability-query>
   </rpc>

   <rpc-reply message-id="101"
    xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
    <nsf-access-info
     xmlns="urn:ietf:params:xml:ns:yang:ietf-i2nsf-reg-interface">
     <nsf-name>time_based_firewall</nsf-name>
     <ip>2001:DB8:0:1::11</ip>
     <port>49152</port>
    </nsf-access-info>
   </rpc-reply>

      Figure 23: Configuration XML for Query of a Time-based Firewall
                             in an IPv6 Network

   In addition, Figure 23 shows the XML configuration for querying the
   capabilities of a time-based firewall in an IPv6 network [RFC3849].
   The access information of the announced time-based firewall has the
   IPv6 address of 2001:DB8:0:1::11 and the port number of 49152.

Appendix B.  NSF Lifecycle Management in NFV Environments

   Network Functions Virtualization (NFV) can be used to implement I2NSF
   framework.  In NFV environments, NSFs are deployed as virtual network
   functions (VNFs).  Security Controller can be implemented as an
   Element Management (EM) of the NFV architecture, and is connected
   with the VNF Manager (VNFM) via the Ve-Vnfm interface
   [nfv-framework].  Security Controller can use this interface for the
   purpose of the lifecycle management of NSFs.  If some NSFs need to be
   instantiated to enforce security policies in the I2NSF framework,
   Security Controller could request the VNFM to instantiate them
   through the Ve-Vnfm interface.  Or if an NSF, running as a VNF, is
   not used by any traffic flows for a time period, Security Controller
   MAY request deinstantiating it through the interface for efficient
   resource utilization.












Hyun, et al.              Expires 7 April 2022                 [Page 43]

Internet-Draft   Registration Interface YANG Data Model     October 2021


Appendix C.  Acknowledgments

   This work was supported by Institute of Information & Communications
   Technology Planning & Evaluation (IITP) grant funded by the Korea
   MSIT (Ministry of Science and ICT) (No. 2016-0-00078, Cloud Based
   Security Intelligence Technology Development for the Customized
   Security Service Provisioning).  This work was supported in part by
   the IITP (2020-0-00395, Standard Development of Blockchain based
   Network Management Automation Technology).

Appendix D.  Contributors

   This document is made by the group effort of I2NSF working group.
   Many people actively contributed to this document, such as Reshad
   Rahman.  The authors sincerely appreciate their contributions.

   The following are co-authors of this document:

   Patrick Lingga Department of Electrical and Computer Engineering
   Sungkyunkwan University 2066 Seo-ro Jangan-gu Suwon, Gyeonggi-do
   16419 Republic of Korea EMail: patricklink@skku.edu

   Jinyong Tim Kim Department of Electronic, Electrical and Computer
   Engineering Sungkyunkwan University 2066 Seo-ro Jangan-gu Suwon,
   Gyeonggi-do 16419 Republic of Korea EMail: timkim@skku.edu

   Chaehong Chung Department of Electronic, Electrical and Computer
   Engineering Sungkyunkwan University 2066 Seo-ro Jangan-gu Suwon,
   Gyeonggi-do 16419 Republic of Korea EMail: darkhong@skku.edu

   Susan Hares Huawei 7453 Hickory Hill Saline, MI 48176 USA EMail:
   shares@ndzh.com

   Diego R.  Lopez Telefonica I+D Jose Manuel Lara, 9 Seville, 41013
   Spain EMail: diego.r.lopez@telefonica.com

Appendix E.  Changes from draft-ietf-i2nsf-registration-interface-dm-11

   The following changes are made from draft-ietf-i2nsf-registration-
   interface-dm-11:

   *  This version has been updated to synchronize with other I2NSF
      documents.

Authors' Addresses






Hyun, et al.              Expires 7 April 2022                 [Page 44]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   Sangwon Hyun (editor)
   Department of Computer Engineering
   Myongji University
   116 Myongji-ro, Cheoin-gu
   Yongin
   Gyeonggi-do
   17058
   Republic of Korea

   Email: shyun@mju.ac.kr


   Jaehoon Paul Jeong (editor)
   Department of Computer Science and Engineering
   Sungkyunkwan University
   2066 Seobu-Ro, Jangan-Gu
   Suwon
   Gyeonggi-Do
   16419
   Republic of Korea

   Phone: +82 31 299 4957
   Email: pauljeong@skku.edu
   URI:   http://iotlab.skku.edu/people-jaehoon-jeong.php


   Taekyun Roh
   Department of Electronic, Electrical and Computer Engineering
   Sungkyunkwan University
   2066 Seobu-Ro, Jangan-Gu
   Suwon
   Gyeonggi-Do
   16419
   Republic of Korea

   Phone: +82 31 290 7222
   Email: tkroh0198@skku.edu


   Sarang Wi
   Department of Electronic, Electrical and Computer Engineering
   Sungkyunkwan University
   2066 Seobu-Ro, Jangan-Gu
   Suwon
   Gyeonggi-Do
   16419
   Republic of Korea




Hyun, et al.              Expires 7 April 2022                 [Page 45]

Internet-Draft   Registration Interface YANG Data Model     October 2021


   Phone: +82 31 290 7222
   Email: dnl9795@skku.edu


   Jung-Soo Park
   Electronics and Telecommunications Research Institute
   218 Gajeong-Ro, Yuseong-Gu
   Daejeon
   305-700
   Republic of Korea

   Phone: +82 42 860 6514
   Email: pjs@etri.re.kr






































Hyun, et al.              Expires 7 April 2022                 [Page 46]
