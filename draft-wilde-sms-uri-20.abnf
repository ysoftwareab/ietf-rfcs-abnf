sms-uri        = scheme ":" sms-hier-part [ "?" sms-fields ]
scheme         = "sms"
sms-hier-part  = sms-recipient *( "," sms-recipient )
sms-recipient  = telephone-subscriber ; defined in RFC 3966
sms-fields     = sms-field *( "&" sms-field )
sms-field      = sms-field-name "=" escaped-value
sms-field-name = "body" / sms-field-ext ; "body" MUST only appear once
sms-field-ext  = 1*( unreserved )
escaped-value  = *( unreserved / pct-encoded ) ; defined in RFC 3986

   Some illustrative examples using this syntax are given in
   Section 2.5.
   The syntax definition for <telephone-subscriber> is taken from RFC
   3966 [RFC3966] (Section 5.1).  Please consider Erratum 203 in that
   specification.  For the reader's convenience, Appendix A contains a
   fixed syntax of the telephone number URI scheme including Erratum
   203, but RFC 3966 (plus all applicable errata) is the normative
   reference.  The description of phone numbers in RFC 3966 states
   (quoted from RFC 3966, Section 5.1): "The 'telephone-subscriber' part
   of the URI indicates the number.  The phone number can be represented
   in either global (E.164) or local notation.  All phone numbers MUST
   use the global form unless they cannot be represented as such.
   Numbers from private numbering plans, emergency ('911', '112'), and
   some directory-assistance numbers (e.g., '411') and other 'service
   codes' (numbers of the form N11 in the United States) cannot be
   represented in global (E.164) form and need to be represented as a
   local number with a context.  Local numbers MUST be tagged with a
   'phone-context'."

   This specification defines a single <sms-field>: "body".  Extensions
   to this specification MAY define additional fields.  Extensions MUST
   NOT change the semantics of the specifications they are extending.
   Unknown fields encountered in "sms" URIs MUST be ignored by
   implementations.

   The "body" <sms-field> is used to define the body of the SMS message
   to be composed.  It MUST not appear more than once in an "sms" URI.
   It consists of percent-encoded UTF-8 characters.  Implementations
   MUST make sure that the "body" <sms-field> characters are converted
   to a suitable character encoding before sending, the most popular
   being the 7-bit SMS character encoding, another variant (though not
   as universally supported as 7-bit SMS) is the UCS-2 character
   encoding (both specified in [SMS-CHAR]).  Implementations MAY choose
   to discard (or convert) characters in the <sms-body> that are not
   supported by the SMS character set they are using to send the SMS
   message.  If they do discard or convert characters, they MUST notify
   the user.

   The syntax definition for <escaped-value> refers to the text of an
   SMS where all <reserved> (as per RFC 3986 [RFC3986]) characters in
   the SMS text are percent-encoded, please refer to RFC 3986 [RFC3986]
   for the definition of <unreserved> and <pct-encoded>, and the details
   about percent-encoding.

   User agents SHOULD support multiple recipients, and SHOULD make it
   clear to users what the entire list of recipients is, before
   committing the user to sending all the messages.
telephone-subscriber = global-number / local-number
global-number        = global-number-digits *par
local-number         = local-number-digits *par context *par
par                  = parameter / extension / isdn-subaddress
isdn-subaddress      = ";isub=" 1*paramchar
extension            = ";ext=" 1*phonedigit
context              = ";phone-context=" descriptor
descriptor           = domainname / global-number-digits
global-number-digits = "+" *phonedigit DIGIT *phonedigit
local-number-digits  =
      *phonedigit-hex (HEXDIG / "*" / "#")*phonedigit-hex
domainname           = *( domainlabel "." ) toplabel [ "." ]
domainlabel          = alphanum
                          / alphanum *( alphanum / "-" ) alphanum
toplabel             = ALPHA / ALPHA *( alphanum / "-" ) alphanum
parameter            = ";" pname ["=" pvalue ]
pname                = 1*( alphanum / "-" )
pvalue               = 1*paramchar
paramchar            = param-unreserved / unreserved / pct-encoded
unreserved           = alphanum / mark
mark                 = "-" / "_" / "." / "!" / "~" / "*" /
                          "'" / "(" / ")"
pct-encoded          = "%" HEXDIG HEXDIG
param-unreserved     = "[" / "]" / "/" / ":" / "&" / "+" / "$"
phonedigit           = DIGIT / [ visual-separator ]
phonedigit-hex       = HEXDIG / "*" / "#" / [ visual-separator ]
visual-separator     = "-" / "." / "(" / ")"
alphanum             = ALPHA / DIGIT
