



6lo                                                      P. Thubert, Ed.
Internet-Draft                                                     Cisco
Updates: 8505 (if approved)                                  B. Sarikaya
Intended status: Standards Track                                        
Expires: 22 October 2020                                        M. Sethi
                                                                Ericsson
                                                               R. Struik
                                             Struik Security Consultancy
                                                           20 April 2020


 Address Protected Neighbor Discovery for Low-power and Lossy Networks
                        draft-ietf-6lo-ap-nd-21

Abstract

   This document updates the 6LoWPAN Neighbor Discovery (ND) protocol
   defined in RFC 6775 and RFC 8505.  The new extension is called
   Address Protected Neighbor Discovery (AP-ND) and it protects the
   owner of an address against address theft and impersonation attacks
   in a low-power and lossy network (LLN).  Nodes supporting this
   extension compute a cryptographic identifier (Crypto-ID) and use it
   with one or more of their Registered Addresses.  The Crypto-ID
   identifies the owner of the Registered Address and can be used to
   provide proof of ownership of the Registered Addresses.  Once an
   address is registered with the Crypto-ID and a proof-of-ownership is
   provided, only the owner of that address can modify the registration
   information, thereby enforcing Source Address Validation.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 22 October 2020.






Thubert, et al.          Expires 22 October 2020                [Page 1]

Internet-Draft        Address Protection ND for LLN           April 2020


Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Simplified BSD License text
   as described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   4
     2.1.  BCP 14  . . . . . . . . . . . . . . . . . . . . . . . . .   4
     2.2.  Additional References . . . . . . . . . . . . . . . . . .   4
     2.3.  Abbreviations . . . . . . . . . . . . . . . . . . . . . .   5
   3.  Updating RFC 8505 . . . . . . . . . . . . . . . . . . . . . .   5
   4.  New Fields and Options  . . . . . . . . . . . . . . . . . . .   6
     4.1.  New Crypto-ID . . . . . . . . . . . . . . . . . . . . . .   6
     4.2.  Updated EARO  . . . . . . . . . . . . . . . . . . . . . .   7
     4.3.  Crypto-ID Parameters Option . . . . . . . . . . . . . . .   8
     4.4.  NDP Signature Option  . . . . . . . . . . . . . . . . . .  10
     4.5.  Extensions to the Capability Indication Option  . . . . .  11
   5.  Protocol Scope  . . . . . . . . . . . . . . . . . . . . . . .  12
   6.  Protocol Flows  . . . . . . . . . . . . . . . . . . . . . . .  13
     6.1.  First Exchange with a 6LR . . . . . . . . . . . . . . . .  14
     6.2.  NDPSO generation and verification . . . . . . . . . . . .  16
     6.3.  Multihop Operation  . . . . . . . . . . . . . . . . . . .  17
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .  18
     7.1.  Inheriting from RFC 3971  . . . . . . . . . . . . . . . .  18
     7.2.  Related to 6LoWPAN ND . . . . . . . . . . . . . . . . . .  19
     7.3.  ROVR Collisions . . . . . . . . . . . . . . . . . . . . .  20
     7.4.  Implementation Attacks  . . . . . . . . . . . . . . . . .  20
     7.5.  Cross-Algorithm and Cross-Protocol Attacks  . . . . . . .  21
     7.6.  Compromised 6LR . . . . . . . . . . . . . . . . . . . . .  21
     7.7.  Correlating Registrations . . . . . . . . . . . . . . . .  21
   8.  IANA considerations . . . . . . . . . . . . . . . . . . . . .  22
     8.1.  CGA Message Type  . . . . . . . . . . . . . . . . . . . .  22
     8.2.  IPv6 ND option types  . . . . . . . . . . . . . . . . . .  22
     8.3.  Crypto-Type Subregistry . . . . . . . . . . . . . . . . .  22
     8.4.  New Codepoints Associated to JWK Encoding . . . . . . . .  23
       8.4.1.  JOSE Elliptic Curves Registration . . . . . . . . . .  23
       8.4.2.  JOSE Algorithms Registration  . . . . . . . . . . . .  24



Thubert, et al.          Expires 22 October 2020                [Page 2]

Internet-Draft        Address Protection ND for LLN           April 2020


   9.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  24
   10. Normative References  . . . . . . . . . . . . . . . . . . . .  24
   11. Informative references  . . . . . . . . . . . . . . . . . . .  26
   Appendix A.  Requirements Addressed in this Document  . . . . . .  28
   Appendix B.  Representation Conventions . . . . . . . . . . . . .  29
     B.1.  Signature Schemes . . . . . . . . . . . . . . . . . . . .  29
     B.2.  Integer Representation for ECDSA signatures . . . . . . .  30
     B.3.  Alternative Representations of Curve25519 . . . . . . . .  30
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  32

1.  Introduction

   Neighbor Discovery Optimizations for 6LoWPAN networks [RFC6775]
   (6LoWPAN ND) adapts the original IPv6 Neighbor Discovery (IPv6 ND)
   protocols defined in [RFC4861] and [RFC4862] for constrained low-
   power and lossy network (LLN).  In particular, 6LoWPAN ND introduces
   a unicast host Address Registration mechanism that reduces the use of
   multicast compared to the Duplicate Address Detection (DAD) mechanism
   defined in IPv6 ND.  6LoWPAN ND defines a new Address Registration
   Option (ARO) that is carried in the unicast Neighbor Solicitation
   (NS) and Neighbor Advertisement (NA) messages exchanged between a
   6LoWPAN Node (6LN) and a 6LoWPAN Router (6LR).  It also defines the
   Duplicate Address Request (DAR) and Duplicate Address Confirmation
   (DAC) messages between the 6LR and the 6LoWPAN Border Router (6LBR).
   In LLN networks, the 6LBR is the central repository of all the
   registered addresses in its domain.

   The registration mechanism in "Neighbor Discovery Optimization for
   Low-power and Lossy Networks" [RFC6775] (aka 6LoWPAN ND) prevents the
   use of an address if that address is already registered in the subnet
   (first come first serve).  In order to validate address ownership,
   the registration mechanism enables the 6LR and 6LBR to validate the
   association between the registered address of a node, and its
   Registration Ownership Verifier (ROVR).  The ROVR is defined in
   "Registration Extensions for 6LoWPAN Neighbor Discovery" [RFC8505]
   and it can be derived from the MAC address of the device (using the
   64-bit Extended Unique Identifier EUI-64 address format specified by
   IEEE).  However, the EUI-64 can be spoofed, and therefore, any node
   connected to the subnet and aware of a registered-address-to-ROVR
   mapping could effectively fake the ROVR.  This would allow an
   attacker to steal the address and redirect traffic for that address.
   [RFC8505] defines an Extended Address Registration Option (EARO)
   option that transports alternate forms of ROVRs, and is a pre-
   requisite for this specification.

   In this specification, a 6LN generates a cryptographic ID (Crypto-ID)
   and places it in the ROVR field during the registration of one (or
   more) of its addresses with the 6LR(s).  Proof of ownership of the



Thubert, et al.          Expires 22 October 2020                [Page 3]

Internet-Draft        Address Protection ND for LLN           April 2020


   Crypto-ID is passed with the first registration exchange to a new
   6LR, and enforced at the 6LR.  The 6LR validates ownership of the
   cryptographic ID before it creates any new registration state, or
   changes existing information.

   The protected address registration protocol proposed in this document
   provides the same conceptual benefit as Source Address Validation
   (SAVI) [RFC7039] that only the owner of an IPv6 address may source
   packets with that address.  As opposed to [RFC7039], which relies on
   snooping protocols, the protection is based on a state that is
   installed and maintained in the network by the owner of the address.
   With this specification, a 6LN may use a 6LR for forwarding an IPv6
   packets if and only if it has registered the address used as source
   of the packet with that 6LR.

   With the 6lo adaptation layer in [RFC4944] and [RFC6282], a 6LN can
   obtain a better compression for an IPv6 address with an Interface ID
   (IID) that is derived from a Layer-2 address.  As a side note, this
   is incompatible with Secure Neighbor Discovery (SeND) [RFC3971] and
   Cryptographically Generated Addresses (CGAs) [RFC3972], since they
   derive the IID from cryptographic keys, whereas this specification
   separates the IID and the key material.

2.  Terminology

2.1.  BCP 14

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

2.2.  Additional References

   The reader may get additional context for this specification from the
   following references:

   *  "SEcure Neighbor Discovery (SEND)" [RFC3971],

   *  "Cryptographically Generated Addresses (CGA)" [RFC3972],

   *  "Neighbor Discovery for IP version 6" [RFC4861] ,

   *  "IPv6 Stateless Address Autoconfiguration" [RFC4862], and

   *  "IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs):
      Overview, Assumptions, Problem Statement, and Goals " [RFC4919].



Thubert, et al.          Expires 22 October 2020                [Page 4]

Internet-Draft        Address Protection ND for LLN           April 2020


2.3.  Abbreviations

   This document uses the following abbreviations:

   6BBR:  6LoWPAN Backbone Router
   6LBR:  6LoWPAN Border Router
   6LN:  6LoWPAN Node
   6LR:  6LoWPAN Router
   CGA:  Cryptographically Generated Address
   EARO:  Extended Address Registration Option
   ECDH:  Elliptic curve Diffie-Hellman
   ECDSA:  Elliptic Curve Digital Signature Algorithm
   CIPO:  Crypto-ID Parameters Option
   LLN:  Low-Power and Lossy Network
   JSON:  JavaScript Object Notation
   JOSE:  JavaScript Object Signing and Encryption
   JWK:  JSON Web Key
   JWS:  JSON Web Signature
   NA:  Neighbor Advertisement
   ND:  Neighbor Discovery
   NDP:  Neighbor Discovery Protocol
   NDPSO:  Neighbor Discovery Protocol Signature Option
   NS:  Neighbor Solicitation
   ROVR:  Registration Ownership Verifier
   RA:  Router Advertisement
   RS:  Router Solicitation
   RSAO:  RSA Signature Option
   SHA:  Secure Hash Algorithm
   SLAAC:  Stateless Address Autoconfiguration
   TID:  Transaction ID


3.  Updating RFC 8505

   Section 5.3 of [RFC8505] introduces the ROVR that is used to detect
   and reject duplicate registrations in the DAD process.  The ROVR is a
   generic object that is designed for both backward compatibility and
   the capability to introduce new computation methods in the future.
   Using a Crypto-ID per this specification is the RECOMMENDED method.
   Section 7.3 discusses collisions when heterogeneous methods to
   compute the ROVR field coexist inside a same network.

   This specification introduces a new token called a cryptographic
   identifier (Crypto-ID) that is transported in the ROVR field and used
   to prove indirectly the ownership of an address that is being
   registered by means of [RFC8505].  The Crypto-ID is derived from a
   cryptographic public key and additional parameters.




Thubert, et al.          Expires 22 October 2020                [Page 5]

Internet-Draft        Address Protection ND for LLN           April 2020


   The overall mechanism requires the support of Elliptic Curve
   Cryptography (ECC) and of a hash function as detailed in Section 6.2.
   To enable the verification of the proof, the registering node needs
   to supply certain parameters including a nonce and a signature that
   will demonstrate that the node possesses the private-key
   corresponding to the public-key used to build the Crypto-ID.

   The elliptic curves and the hash functions listed in Table 2 in
   Section 8.3 can be used with this specification; more may be added in
   the future to the IANA registry.  The signature scheme that specifies
   which combination is used (including the curve and the representation
   conventions) is signaled by a Crypto-Type in a new IPv6 ND Crypto-ID
   Parameters Option (CIPO, see Section 4.3) that contains the
   parameters that are necessary for the proof, a Nonce option
   ([RFC3971]) and a NDP Signature option (Section 4.4).  The NA(EARO)
   is modified to enable a challenge and transport a Nonce option.

4.  New Fields and Options

4.1.  New Crypto-ID

   The Crypto-ID is transported in the ROVR field of the EARO option and
   the EDAR message, and is associated with the Registered Address at
   the 6LR and the 6LBR.  The ownership of a Crypto-ID can be
   demonstrated by cryptographic mechanisms, and by association, the
   ownership of the Registered Address can be ascertained.

   A node in possession of the necessary cryptographic primitives SHOULD
   use Crypto-ID by default as ROVR in its registrations.  Whether a
   ROVR is a Crypto-ID is indicated by a new "C" flag in the NS(EARO)
   message.

   The Crypto-ID is derived from the public key and a modifier as
   follows:

   1.  The hash function indicated by the Crypto-Type is applied to the
       CIPO.  Note that all the reserved and padding bits MUST be set to
       zero.
   2.  The leftmost bits of the resulting hash, up to the desired size,
       are used as the Crypto-ID.

   At the time of this writing, a minimal size for the Crypto-ID of 128
   bits is RECOMMENDED unless backward compatibility is needed
   [RFC8505].  This value is bound to augment in the future.







Thubert, et al.          Expires 22 October 2020                [Page 6]

Internet-Draft        Address Protection ND for LLN           April 2020


4.2.  Updated EARO

   This specification updates the EARO option to enable the use of the
   ROVR field to transport the Crypto-ID.  The resulting format is as
   follows:

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |     Type      |     Length    |    Status     |    Opaque     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Rsvd |C| I |R|T|     TID       |     Registration Lifetime     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                                                               |
    ...            Registration Ownership Verifier (ROVR)           ...
     |                                                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


               Figure 1: Enhanced Address Registration Option


   Type:  33

   Length:  Defined in [RFC8505] and copied in associated CIPO.

   Status:  Defined in [RFC8505].

   Opaque:  Defined in [RFC8505].

   Rsvd (Reserved):  3-bit unsigned integer.  It MUST be set to zero by
      the sender and MUST be ignored by the receiver.

   C:  This "C" flag is set to indicate that the ROVR field contains a
      Crypto-ID and that the 6LN MAY be challenged for ownership as
      specified in this document.

   I, R, T:  Defined in [RFC8505].

   TID:  Defined in [RFC8505].

   Registration Ownership Verifier (ROVR):  When the "C" flag is set,
      this field contains a Crypto-ID.

   This specification uses Status values "Validation Requested" and
   "Validation Failed", which are defined in [RFC8505].

   this specification does not define any new Status value.



Thubert, et al.          Expires 22 October 2020                [Page 7]

Internet-Draft        Address Protection ND for LLN           April 2020


4.3.  Crypto-ID Parameters Option

   This specification defines the Crypto-ID Parameters Option (CIPO).
   The CIPO carries the parameters used to form a Crypto-ID.

   In order to provide cryptographic agility [BCP 201], this
   specification supports different elliptic curves, indicated by a
   Crypto-Type field:

   *  NIST P-256 [FIPS186-4] MUST be supported by all implementations.

   *  The Edwards-Curve Digital Signature Algorithm (EdDSA) curve
      Ed25519 (PureEdDSA) [RFC8032] MAY be supported as an alternative.

   *  This specification uses signature schemes that target similar
      cryptographic strength but rely on different curves, hash
      functions, signature algorithms, and/or representation
      conventions.  Future specification may extend this to different
      cryptographic algorithms and key sizes, e.g., to provide better
      security properties or a simpler implementation.

        0                   1                   2                   3
        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |     Type      |    Length     |Reserved1|  Public Key Length  |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |  Crypto-Type  | Modifier      |  EARO Length  |  Reserved2    |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |                                                               |
      .                                                               .
      .                  Public Key (variable length)                 .
      .                                                               .
      |                                                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |                                                               |
      .                           Padding                             .
      |                                                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                   Figure 2: Crypto-ID Parameters Option


   Type:  8-bit unsigned integer.  to be assigned by IANA, see Table 1.

   Length:  8-bit unsigned integer.  The length of the option in units
      of 8 octets.





Thubert, et al.          Expires 22 October 2020                [Page 8]

Internet-Draft        Address Protection ND for LLN           April 2020


   Reserved1:  5-bit unsigned integer.  It MUST be set to zero by the
      sender and MUST be ignored by the receiver.

   Public Key Length:  11-bit unsigned integer.  The length of the
      Public Key field in bytes.

   Crypto-Type:  8-bit unsigned integer.  The type of cryptographic
      algorithm used in calculation Crypto-ID indexed by IANA in the
      "Crypto-Type Subregistry" in the "Internet Control Message
      Protocol version 6 (ICMPv6) Parameters" (see Section 8.3).

   Modifier:  8-bit unsigned integer.  Set to an arbitrary value by the
      creator of the Crypto-ID.  The role of the modifier is to enable
      the formation of multiple Crypto-IDs from a same key pair, which
      reduces the traceability and thus improves the privacy of a
      constrained node that could not maintain many key-pairs.

   EARO Length:  8-bit unsigned integer.  The option length of the EARO
      that contains the Crypto-ID associated with the CIPO.

   Reserved2:  8-bit unsigned integer.  It MUST be set to zero by the
      sender and MUST be ignored by the receiver.

   Public Key:  A variable-length field, size indicated in the Public
      Key Length field.  JWK-encoded Public Key [RFC7517].

   Padding:  A variable-length field completing the Public Key field to
      align to the next 8-bytes boundary.  It MUST be set to zero by the
      sender and MUST be ignored by the receiver.


   The implementation of multiple hash functions in a constrained
   devices may consume excessive amounts of program memory.  This
   specification enables the use of SHA-256 [RFC6234] for all the
   supported ECC curves.

   Some code factorization is also possible for the ECC computation
   itself.  [CURVE-REPR] provides information on how to represent
   Montgomery curves and (twisted) Edwards curves as curves in short-
   Weierstrass form and illustrates how this can be used to implement
   elliptic curve computations using existing implementations that
   already provide, e.g., ECDSA and ECDH using NIST [FIPS186-4] prime
   curves.  For more details on representation conventions, we refer to
   Appendix B.







Thubert, et al.          Expires 22 October 2020                [Page 9]

Internet-Draft        Address Protection ND for LLN           April 2020


4.4.  NDP Signature Option

   This specification defines the NDP Signature Option (NDPSO).  The
   NDPSO carries the signature that proves the ownership of the Crypto-
   ID.  The format of the NDPSO is illustrated in Figure 3.

   As opposed to the RSA Signature Option (RSAO) defined in section 5.2.
   of SEND [RFC3971], the NDPSO does not have a key hash field.
   Instead, the leftmost 128 bits of the ROVR field in the EARO are used
   as hash to retrieve the CIPO that contains the key material used for
   signature verification, left-padded if needed.

   Another difference is that the NDPSO signs a fixed set of fields as
   opposed to all options that appear prior to it in the ND message that
   bears the signature.  This allows to elide a CIPO that the 6LR
   already received, at the expense of the capability to add arbitrary
   options that would signed with a RSAO.

   An ND message that carries an NDPSO MUST have one and only one EARO.
   The EARO MUST contain a Crypto-ID in the ROVR field, and the Crypto-
   ID MUST be associated with the keypair used for the Digital Signature
   in the NDPSO.

   The CIPO may be present in the same message as the NDPSO.  If it is
   not present, it can be found in an abstract table that was created by
   a previous message and indexed by the hash.

        0                   1                   2                   3
        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |     Type      |    Length     |Reserved1|  Signature Length   |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |                            Reserved2                          |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |                                                               |
      .                                                               .
      .          Digital Signature  (variable length)                 .
      .                                                               .
      |                                                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |                                                               |
      .                           Padding                             .
      |                                                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                       Figure 3: NDP signature Option





Thubert, et al.          Expires 22 October 2020               [Page 10]

Internet-Draft        Address Protection ND for LLN           April 2020


   Type:  to be assigned by IANA, see Table 1.

   Length:  8-bit unsigned integer.  The length of the option in units
      of 8 octets.

   Reserved1:  5-bit unsigned integer.  It MUST be set to zero by the
      sender and MUST be ignored by the receiver.

   Digital Signature Length:  11-bit unsigned integer.  The length of
      the Digital Signature field in bytes.

   Reserved2:  32-bit unsigned integer.  It MUST be set to zero by the
      sender and MUST be ignored by the receiver.

   Digital Signature:  A variable-length field containing the JWS-
      encoded digital signature[RFC7515].  The length and computation of
      the digital signature both depend on the Crypto-Type which is
      found in the associated CIPO, see Appendix B.2.  For the values of
      the Crypto-Type defined in this specification, and for future
      values of the Crypto-Type unless specified otherwise, the
      signature is computed as detailed in Section 6.2.

   Padding:  A variable-length field completing the Digital Signature
      field to align to the next 8-bytes boundary.  It MUST be set to
      zero by the sender and MUST be ignored by the receiver.


4.5.  Extensions to the Capability Indication Option

   This specification defines 2 new capability bits in the 6CIO, defined
   by [RFC7400] for use by the 6LR and 6LBR in IPv6 ND RA messages.

   The "A" flag indicates that AP-ND is enabled in the network.  It is
   set by the 6LBR that serves the network and propagated by the 6LRs.

   The "J" flag indicates that the 6LR supports JWK-encoded keys in the
   CIPO option.


       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |     Type      |   Length = 1  |   Reserved    |J|A|D|L|B|P|E|G|
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |                           Reserved                            |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                 Figure 4: New Capability Bits in the 6CIO



Thubert, et al.          Expires 22 October 2020               [Page 11]

Internet-Draft        Address Protection ND for LLN           April 2020


   New Option Fields:

   J:  1-bit flag.  This 6LR supports AP-ND with JWK encoding

   A:  1-bit flag.  This network supports AP-ND

5.  Protocol Scope

   The scope of the protocol specified here is a 6LoWPAN LLN, typically
   a stub network connected to a larger IP network via a Border Router
   called a 6LBR per [RFC6775].  A 6LBR has sufficient capability to
   satisfy the needs of duplicate address detection.

   The 6LBR maintains registration state for all devices in its attached
   LLN.  Together with the first-hop router (the 6LR), the 6LBR assures
   uniqueness and grants ownership of an IPv6 address before it can be
   used in the LLN.  This is in contrast to a traditional network that
   relies on IPv6 address auto-configuration [RFC4862], where there is
   no guarantee of ownership from the network, and each IPv6 Neighbor
   Discovery packet must be individually secured [RFC3971].

                 ---+-------- ............
                    |      External Network
                    |
                 +-----+
                 |     | 6LBR
                 +-----+
               o    o   o
        o     o   o     o
           o   o LLN   o    o     o
              o   o   o       (6LR)
                      o         (6LN)


                       Figure 5: Basic Configuration

   In a mesh network, the 6LR is directly connected to the host device.
   This specification mandates that the peer-wise layer-2 security is
   deployed so that all the packets from a particular host are securely
   identifiable by the 6LR.  The 6LR may be multiple hops away from the
   6LBR.  Packets are routed between the 6LR and the 6LBR via other
   6LRs.

   This specification mandates that a chain of trust is established so
   that a packet that was validated by the first 6LR can be safely
   routed by other on-path 6LRs to the 6LBR.





Thubert, et al.          Expires 22 October 2020               [Page 12]

Internet-Draft        Address Protection ND for LLN           April 2020


6.  Protocol Flows

   The 6LR/6LBR ensures first-come/first-serve by storing the ROVR
   associated to the address being registered upon the first
   registration and rejecting a registration with a different ROVR
   value.  A 6LN can claim any address as long as it is the first to
   make that claim.  After a successful registration, the 6LN becomes
   the owner of the registered address and the address is bound to the
   ROVR value in the 6LR/6LBR registry.

   This specification protects the ownership of the address.  Its use in
   a network is signaled by the 6LBR by setting the 'A' flag in the
   6CIO.  This is echoed by the 6LRs, that also indicate the key
   encoding format that they support in another 6CIO flag, currently the
   'J' flag for JWK.

   When using a ROVR that is a Crypto-ID, a 6LN MUST use a 6LR that
   supports the key encoding used in the CIPO.  If the 6LR does not
   support the Crypto-Type, it MUST reply with an EARO Status 10
   "Validation Failed" without a challenge.  In that case, the 6LN may
   try another Crypto-Type until it falls back to Crypto-Type 0 that
   MUST be supported by all 6LRs.

   This specification enables the 6LR to challenge the 6LN to verify its
   ownership of the binding by placing a Crypto-ID in the ROVR.  The
   challenge can happen at any time at the discretion of the 6LR.  The
   6LR MUST challenge the 6LN when it creates a binding and when a new
   registration attempts to change a parameter of the binding that
   identifies the 6LN, for instance its Source Link-Layer Address.  The
   verification protects against a rogue that would steal an address and
   attract its traffic, or use it as source address.

   The challenge can also triggered by the 6LBR, e.g., to enforce a
   global policy.  In that case, the 6LBR returns a status of
   "Validation Requested" in the DAR/DAC exchange, which is echoed by
   the 6LR in the NA (EARO) back to the registering node.  A valid
   registration in the 6LR or the 6LBR MUST NOT be altered until the
   challenge is complete.

   A node may use more than one IPv6 address at the same time.  The
   separation of the address and the cryptographic material avoids the
   need for the constrained device to compute multiple keys for multiple
   addresses.  The 6LN MAY use the same Crypto-ID to prove the ownership
   of multiple IPv6 addresses.  The 6LN MAY also derive multiple Crypto-
   IDs from a same key.






Thubert, et al.          Expires 22 October 2020               [Page 13]

Internet-Draft        Address Protection ND for LLN           April 2020


6.1.  First Exchange with a 6LR

   A 6LN registers to a 6LR that is one hop away from it with the "C"
   flag set in the EARO, indicating that the ROVR field contains a
   Crypto-ID.  The Target Address in the NS message indicates the IPv6
   address that the 6LN is trying to register [RFC8505].  The on-link
   (local) protocol interactions are shown in Figure 6.  If the 6LR does
   not have a state with the 6LN that is consistent with the NS(EARO),
   then it replies with a challenge NA (EARO, status=Validation
   Requested) that contains a Nonce Option (shown as NonceLR in
   Figure 6).

       6LN                                                     6LR
        |                                                       |
        |<------------------------- RA -------------------------|
        |                                                       | ^
        |---------------- NS with EARO (Crypto-ID) ------------>| |
        |                                                       | option
        |<- NA with EARO (status=Validation Requested), NonceLR-| |
        |                                                       | v
        |------- NS with EARO, CIPO, NonceLN and NDPSO -------->|
        |                                                       |
        |<------------------- NA with EARO ---------------------|
        |                                                       |
                                  ...
        |                                                       |
        |--------------- NS with EARO (Crypto-ID) ------------->|
        |                                                       |
        |<------------------- NA with EARO ---------------------|
        |                                                       |
                                  ...
        |                                                       |
        |--------------- NS with EARO (Crypto-ID) ------------->|
        |                                                       |
        |<------------------- NA with EARO ---------------------|
        |                                                       |

                    Figure 6: On-link Protocol Operation

   The Nonce option contains a nonce value that, to the extent possible
   for the implementation, was never employed in association with the
   key pair used to generate the Crypto-ID.  This specification inherits
   from [RFC3971] that simply indicates that the nonce is a random
   value.  Ideally, an implementation uses an unpredictable
   cryptographically random value [BCP 106].  But that may be
   impractical in some LLN scenarios where the devices do not have a
   guaranteed sense of time and for which computing complex hashes is
   detrimental to the battery lifetime.



Thubert, et al.          Expires 22 October 2020               [Page 14]

Internet-Draft        Address Protection ND for LLN           April 2020


   Alternatively, the device may use an always-incrementing value saved
   in the same stable storage as the key, so they are lost together, and
   starting at a best effort random value, either as the nonce value or
   as a component to its computation.

   The 6LN replies to the challenge with an NS(EARO) that includes a new
   Nonce option (shown as NonceLN in Figure 6), the CIPO (Section 4.3),
   and the NDPSO containing the signature.  Both Nonces are included in
   the signed material.  This provides a "contributory behavior", so
   that either party that knows it generates a good quality nonce knows
   that the protocol will be secure.

   The 6LR MUST store the information associated to a Crypto-ID on the
   first NS exchange where it appears in a fashion that the CIPO
   parameters can be retrieved from the Crypto-ID alone.

   The steps for the registration to the 6LR are as follows:

   *  Upon the first exchange with a 6LR, a 6LN will be challenged to
      prove ownership of the Crypto-ID and the Target Address being
      registered in the Neighbor Solicitation message.  When a 6LR
      receives a NS(EARO) registration with a new Crypto-ID as a ROVR,
      and unless the registration is rejected for another reason, it
      MUST challenge by responding with a NA(EARO) with a status of
      "Validation Requested".

   *  Upon receiving a first NA(EARO) with a status of "Validation
      Requested" from a 6LR, the registering node SHOULD retry its
      registration with a Crypto-ID Parameters Option (CIPO)
      (Section 4.3) that contains all the necessary material for
      building the Crypto-ID, the NonceLN that it generated, and the NDP
      signature (Section 4.4) option that proves its ownership of the
      Crypto-ID and intent of registering the Target Address.  In
      subsequent revalidation with the same 6LR, the 6LN MAY try to omit
      the CIPO to save bandwidth, with the expectation that the 6LR
      saved it.  If the validation fails and it gets challenged again,
      then it SHOULD add the CIPO again.

   *  In order to validate the ownership, the 6LR performs the same
      steps as the 6LN and rebuilds the Crypto-ID based on the
      parameters in the CIPO.  If the rebuilt Crypto-ID matches the
      ROVR, the 6LN also verifies the signature contained in the NDPSO
      option.  If at that point the signature in the NDPSO option can be
      verified, then the validation succeeds.  Otherwise the validation
      fails.






Thubert, et al.          Expires 22 October 2020               [Page 15]

Internet-Draft        Address Protection ND for LLN           April 2020


   *  If the 6LR fails to validate the signed NS(EARO), it responds with
      a status of "Validation Failed".  After receiving a NA(EARO) with
      a status of "Validation Failed", the registering node SHOULD try
      and alternate Crypto-Type and if even Crypto-Type 0 fails, it may
      try to register a different address in the NS message.


6.2.  NDPSO generation and verification

   The signature generated by the 6LN to provide proof-of-ownership of
   the private-key is carried in the NDP Signature Option (NDPSO).  It
   is generated by the 6LN in a fashion that depends on the Crypto-Type
   (see Table 2 in Section 8.3) chosen by the 6LN as follows:

   *  Concatenate the following in the order listed:

      1.  The 128-bit Message Type tag [RFC3972] (in network byte
          order).  For this specification the tag is 0x8701 55c8 0cca
          dd32 6ab7 e415 f148 84d0.  (The tag value has been generated
          by the editor of this specification on random.org).
      2.  the CIPO
      3.  the 16-byte Target Address (in network byte order) sent in the
          Neighbor Solicitation (NS) message.  It is the address which
          the 6LN is registering with the 6LR and 6LBR.
      4.  NonceLR received from the 6LR (in network byte order) in the
          Neighbor Advertisement (NA) message.  The nonce is at least 6
          bytes long as defined in [RFC3971].
      5.  NonceLN sent from the 6LN (in network byte order).  The nonce
          is at least 6 bytes long as defined in [RFC3971].
      6.  1-byte Option Length of the EARO containing the Crypto-ID.

   *  Apply the hash function (if any) specified by the Crypto-Type to
      the concatenated data, e.g., hash the resulting data using SHA-
      256.

   *  Apply the signature algorithm specified by the Crypto-Type, e.g.,
      sign the hash output with ECDSA (if curve P-256 is used) or sign
      the hash with EdDSA (if curve Ed25519 (PureEdDSA)).

   The 6LR on receiving the NDPSO and CIPO options first checks that the
   EARO Length in the CIPO matches the length of the EARO.  If so it
   regenerates the Crypto-ID based on the CIPO to make sure that the
   leftmost bits up to the size of the ROVR match.

   If and only if the check is successful, it tries to verify the
   signature in the NDPSO option using the following:

   *  Concatenate the following in the order listed:



Thubert, et al.          Expires 22 October 2020               [Page 16]

Internet-Draft        Address Protection ND for LLN           April 2020


      1.  The 128-bit Message Type tag specified above (in network byte
          order)
      2.  the CIPO
      3.  the 16-byte Target Address (in network byte order) received in
          the Neighbor Solicitation (NS) message.  It is the address
          which the 6LN is registering with the 6LR and 6LBR.
      4.  NonceLR sent in the Neighbor Advertisement (NA) message.  The
          nonce is at least 6 bytes long as defined in [RFC3971].
      5.  NonceLN received from the 6LN (in network byte order) in the
          NS message.  The nonce is at least 6 bytes long as defined in
          [RFC3971].
      6.  1-byte EARO Length received in the CIPO.

   *  Apply the hash function (if any) specified by the Crypto-Type
      indicated by the 6LN in the CIPO to the concatenated data.

   *  Verify the signature with the public-key in the CIPO and the
      locally computed values using the signature algorithm specified by
      the Crypto-Type.  If the verification succeeds, the 6LR propagates
      the information to the 6LBR using a EDAR/EDAC flow.

   *  Due to the first-come/first-serve nature of the registration, if
      the address is not registered to the 6LBR, then flow succeeds and
      both the 6LR and 6LBR add the state information about the Crypto-
      ID and Target Address being registered to their respective
      abstract database.

6.3.  Multihop Operation

   A new 6LN that joins the network auto-configures an address and
   performs an initial registration to a neighboring 6LR with an NS
   message that carries an Address Registration Option (EARO) [RFC8505].

   In a multihop 6LoWPAN, the registration with Crypto-ID is propagated
   to 6LBR as shown in Figure 7, which illustrates the registration flow
   all the way to a 6LowPAN Backbone Router (6BBR) [BACKBONE-ROUTER].

   The 6LR and the 6LBR communicate using ICMPv6 Extended Duplicate
   Address Request (EDAR) and Extended Duplicate Address Confirmation
   (EDAC) messages [RFC8505] as shown in Figure 7.  This specification
   extends EDAR/EDAC messages to carry cryptographically generated ROVR.










Thubert, et al.          Expires 22 October 2020               [Page 17]

Internet-Draft        Address Protection ND for LLN           April 2020


   The assumption is that the 6LR and the 6LBR maintain a security
   association to authenticate and protect the integrity of the EDAR and
   EDAC messages, so there is no need to propagate the proof of
   ownership to the 6LBR.  The 6LBR implicitly trusts that the 6LR
   performs the verification when the 6LBR requires it, and if there is
   no further exchange from the 6LR to remove the state, that the
   verification succeeded.

        6LN              6LR             6LBR            6BBR
         |                |               |                |
         |   NS(EARO)     |               |                |
         |--------------->|               |                |
         |                | Extended DAR  |                |
         |                |-------------->|                |
         |                |               |                |
         |                |               | proxy NS(EARO) |
         |                |               |--------------->|
         |                |               |                | NS(DAD)
         |                |               |                | ------>
         |                |               |                |
         |                |               |                | <wait>
         |                |               |                |
         |                |               | proxy NA(EARO) |
         |                |               |<---------------|
         |                | Extended DAC  |                |
         |                |<--------------|                |
         |   NA(EARO)     |               |                |
         |<---------------|               |                |
         |                |               |                |

                      Figure 7: (Re-)Registration Flow

7.  Security Considerations

7.1.  Inheriting from RFC 3971

   Observations regarding the following threats to the local network in
   [RFC3971] also apply to this specification.

   Neighbor Solicitation/Advertisement Spoofing:  Threats in section
      9.2.1 of RFC3971 apply.  AP-ND counters the threats on NS(EARO)
      messages by requiring that the NDP Signature and CIPO options be
      present in these solicitations.

   Duplicate Address Detection DoS Attack:  Inside the LLN, Duplicate
      Addresses are sorted out using the ROVR, which differentiates it
      from a movement.  A different ROVR for the same Registered address
      entails a rejection of the second registration [RFC8505].  DAD



Thubert, et al.          Expires 22 October 2020               [Page 18]

Internet-Draft        Address Protection ND for LLN           April 2020


      coming from the backbone are not forwarded over the LLN, which
      provides some protection against DoS attacks inside the resource-
      constrained part of the network.  Over the backbone, the EARO
      option is present in NS/NA messages.  This protects against
      misinterpreting a movement for a duplication, and enables the
      backbone routers to determine which one has the freshest
      registration [RFC8505] and is thus the best candidate to validate
      the registration for the device attached to it [BACKBONE-ROUTER].
      But this specification does not guarantee that the backbone router
      claiming an address over the backbone is not an attacker.

   Router Solicitation and Advertisement Attacks:  This specification
      does not change the protection of RS and RA which can still be
      protected by SEND.

   Replay Attacks  A nonce should never repeat for a single key, but
      nonces do not need to be unpredictable for secure operation.
      Using nonces (NonceLR and NonceLN) generated by both the 6LR and
      6LN ensure a contributory behavior that provides an efficient
      protection against replay attacks of the challenge/response flow.
      The quality of the protection by a random nonce depends on the
      random number generator and its parameters (e.g., sense of time).

   Neighbor Discovery DoS Attack:  A rogue node that managed to access
      the L2 network may form many addresses and register them using AP-
      ND.  The perimeter of the attack is all the 6LRs in range of the
      attacker.  The 6LR MUST protect itself against overflows and
      reject excessive registration with a status 2 "Neighbor Cache
      Full".  This effectively blocks another (honest) 6LN from
      registering to the same 6LR, but the 6LN may register to other
      6LRs that are in its range but not in that of the rogue.

7.2.  Related to 6LoWPAN ND

   The threats and mediations discussed in 6LoWPAN ND [RFC6775][RFC8505]
   also apply here, in particular denial-of-service attacks against the
   registry at the 6LR or 6LBR.

   Secure ND [RFC3971] forces the IPv6 address to be cryptographic since
   it integrates the CGA as the IID in the IPv6 address.  In contrast,
   this specification saves about 1Kbyte in every NS/NA message.  Also,
   this specification separates the cryptographic identifier from the
   registered IPv6 address so that a node can have more than one IPv6
   address protected by the same cryptographic identifier.

   With this specification the 6LN can freely form its IPv6 address(es)
   in any fashion, thereby enabling either 6LoWPAN compression for IPv6
   addresses that are derived from Layer-2 addresses, or temporary



Thubert, et al.          Expires 22 October 2020               [Page 19]

Internet-Draft        Address Protection ND for LLN           April 2020


   addresses, e.g., formed pseudo-randomly and released in relatively
   short cycles for privacy reasons [RFC8064][RFC8065], that cannot be
   compressed.

   This specification provides added protection for addresses that are
   obtained following due procedure [RFC8505] but does not constrain the
   way the addresses are formed or the number of addresses that are used
   in parallel by a same entity.  A rogue may still perform denial-of-
   service attack against the registry at the 6LR or 6LBR, or attempt to
   deplete the pool of available addresses at Layer-2 or Layer-3.

7.3.  ROVR Collisions

   A collision of Registration Ownership Verifiers (ROVR) (i.e., the
   Crypto-ID in this specification) is possible, but it is a rare event.
   Assuming in the calculations/discussion below that the hash used for
   calculating the Crypto-ID is a well-behaved cryptographic hash and
   thus that random collisions are the only ones possible, the formula
   (birthday paradox) for calculating the probability of a collision is
   1 - e^{-k^2/(2n)} where n is the maximum population size (2^64 here,
   1.84E19) and k is the actual population (number of nodes, assuming
   one Crypto-ID per node).

   If the Crypto-ID is 64-bits (the least possible size allowed), the
   chance of a collision is 0.01% for network of 66 million nodes.
   Moreover, the collision is only relevant when this happens within one
   stub network (6LBR).  In the case of such a collision, a third party
   node would be able to claim the registered address of an another
   legitimate node, provided that it wishes to use the same address.  To
   prevent address disclosure and avoid the chances of collision on both
   the ROVR and the address, it is RECOMMENDED that nodes do not derive
   the address being registered from the ROVR.

7.4.  Implementation Attacks

   The signature schemes referenced in this specification comply with
   NIST [FIPS186-4] or Crypto Forum Research Group (CFRG) standards
   [RFC8032] and offer strong algorithmic security at roughly 128-bit
   security level.  These signature schemes use elliptic curves that
   were either specifically designed with exception-free and constant-
   time arithmetic in mind [RFC7748] or where one has extensive
   implementation experience of resistance to timing attacks
   [FIPS186-4].  However, careless implementations of the signing
   operations could nevertheless leak information on private keys.  For
   example, there are micro-architectural side channel attacks that
   implementors should be aware of [breaking-ed25519].  Implementors
   should be particularly aware that a secure implementation of Ed25519
   requires a protected implementation of the hash function SHA-512,



Thubert, et al.          Expires 22 October 2020               [Page 20]

Internet-Draft        Address Protection ND for LLN           April 2020


   whereas this is not required with implementations of SHA-256 used
   with ECDSA.

7.5.  Cross-Algorithm and Cross-Protocol Attacks

   The keypair used in this specification can be self-generated and the
   public key does not need to be exchanged, e.g., through certificates,
   with a third party before it is used.  New keypairs can be formed for
   new registration as the node desires.  On the other hand, it is safer
   to allocate a keypair that is used only for the address protection
   and only for one instantiation of the signature scheme (which
   includes choice of elliptic curve domain parameters, used hash
   function, and applicable representation conventions).  The same
   private key MUST NOT be reused with more than one instantiation of
   the signature scheme in this specification.  The same private key
   MUST NOT be used for anything other than computing NDPSO signatures
   per this specification.

7.6.  Compromised 6LR

   This specification distributes the challenge and its validation at
   the edge of the network, between the 6LN and its 6LR.  This protects
   against DOS attacks targeted at that central 6LBR.  This also saves
   back and forth exchanges across a potentially large and constrained
   network.  The downside is that the 6LBR needs to trust the 6LR for
   performing the checking adequately, and the communication between the
   6LR and the 6LBR must be protected to avoid tempering with the result
   of the test.  If a 6LR is compromised, and provided that it knows the
   ROVR field used by the real owner of the address, the 6LR may pretend
   that the owner has moved, is now attached to it and has successfully
   passed the Crpto-ID validation.  The 6LR may then attract and inject
   traffic at will on behalf of that address or let a rogue take
   ownership of the address.

7.7.  Correlating Registrations

   The ROVR field in the EARO introduced in [RFC8505] extends the EUI-64
   field of the ARO defined in [RFC6775].  One of the drawbacks of using
   an EUI-64 as ROVR is that an attacker that is aware of the
   registrations can correlate traffic for a same 6LN across multiple
   addresses.  Section 3 of [RFC8505] indicates that the ROVR and the
   address being registered are decoupled.  A 6LN may use a same ROVR
   for multiple registrations or a different ROVR per registration, and
   the IID must not derive from the ROVR.  In theory different 6LNs
   could use a same ROVR as long as they do not attempt to register the
   same address.





Thubert, et al.          Expires 22 October 2020               [Page 21]

Internet-Draft        Address Protection ND for LLN           April 2020


   The Modifier used in the computation of the Crypto-ID enables a 6LN
   to build different Crypto-IDs for different addresses with a same
   keypair.  Using that facility improves the privacy of the 6LN as the
   expense of storage in the 6LR, which will need to store multiple
   CIPOs that contain the same public key.  Note that if the attacker is
   the 6LR, then the Modifier alone does not provide a protection, and
   the 6LN would need to use different keys and MAC addresses in an
   attempt to obfuscate its multiple ownership.

8.  IANA considerations

8.1.  CGA Message Type

   This document defines a new 128-bit value under the CGA Message Type
   [RFC3972] name space: 0x8701 55c8 0cca dd32 6ab7 e415 f148 84d0.

8.2.  IPv6 ND option types

   This document registers two new ND option types under the subregistry
   "IPv6 Neighbor Discovery Option Formats":

    +------------------------------+-----------------+---------------+
    |         Option Name          | Suggested Value | Reference     |
    +==============================+=================+===============+
    | NDP Signature Option (NDPSO) |        38       | This document |
    +------------------------------+-----------------+---------------+
    | Crypto-ID Parameters Option  |        39       | This document |
    |            (CIPO)            |                 |               |
    +------------------------------+-----------------+---------------+

                         Table 1: New ND options

8.3.  Crypto-Type Subregistry

   IANA is requested to create a new subregistry "Crypto-Type
   Subregistry" in the "Internet Control Message Protocol version 6
   (ICMPv6) Parameters".  The registry is indexed by an integer in the
   interval 0..255 and contains an Elliptic Curve, a Hash Function, a
   Signature Algorithm, and Representation Conventions, as shown in
   Table 2, which together specify a signature scheme.  The following
   Crypto-Type values are defined in this document:










Thubert, et al.          Expires 22 October 2020               [Page 22]

Internet-Draft        Address Protection ND for LLN           April 2020


   +----------------+----------------+----------------+----------------+
   | Crypto-Type    |  0 (ECDSA256)  |  1 (Ed25519)   |       2        |
   | value          |                |                |  (ECDSA25519)  |
   +================+================+================+================+
   | Elliptic curve |   NIST P-256   |   Curve25519   |   Curve25519   |
   |                |  [FIPS186-4]   |   [RFC7748]    |   [RFC7748]    |
   +----------------+----------------+----------------+----------------+
   | Hash function  |    SHA-256     |    SHA-512     |    SHA-256     |
   |                |   [RFC6234]    |   [RFC6234]    |   [RFC6234]    |
   +----------------+----------------+----------------+----------------+
   | Signature      |     ECDSA      |    Ed25519     |     ECDSA      |
   | algorithm      |  [FIPS186-4]   |   [RFC8032]    |  [FIPS186-4]   |
   +----------------+----------------+----------------+----------------+
   | Representation |  Weierstrass,  |    Edwards,    |  Weierstrass,  |
   | conventions    | uncompressed,  |  compressed,   |  compressed,   |
   |                | MSB/msb first, | LSB/lsb first, |    MSB/msb     |
   |                |   [RFC7518]    |   [RFC8037]    |     first,     |
   |                |                |                |  [CURVE-REPR]  |
   +----------------+----------------+----------------+----------------+
   | Defining       | This document  | This document  |      This      |
   | specification  |                |                |    document    |
   +----------------+----------------+----------------+----------------+

                           Table 2: Crypto-Types

   New Crypto-Type values providing similar or better security may be
   defined in the future.

   Assignment of new values for new Crypto-Type MUST be done through
   IANA with either "Specification Required" or "IESG Approval" as
   defined in BCP 26 [RFC8126].

   The "Defining specification" column indicates the document that
   defines the length and computation of the digital signature, which
   could be this for values defined through "IESG Approval".

8.4.  New Codepoints Associated to JWK Encoding

   Code points are requested for curve Wei25519 and its use with ECDSA,
   using the representation conventions of this document.

8.4.1.  JOSE Elliptic Curves Registration

   This section registers the following value in the IANA "JSON Web Key
   Elliptic Curve" registry [IANA.JOSE.Curves].

   Curve Name:  Wei25519




Thubert, et al.          Expires 22 October 2020               [Page 23]

Internet-Draft        Address Protection ND for LLN           April 2020


   Curve Description:  short-Weierstrass curve Wei25519

   JOSE Implementation Requirements:  Optional

   Change Controller:  IESG

   Reference:  Appendix E.3 of [CURVE-REPR]

8.4.2.  JOSE Algorithms Registration

   This section registers the following value in the IANA "JSON Web
   Signature and Encryption Algorithms" registry [IANA.JOSE.Algorithms].

   Algorithm Name:  ECDSA25519

   Algorithm Description:  ECDSA using SHA-256 and curve Wei25519

   Algorithm Usage Locations:  alg

   JOSE Implementation Requirements:  Optional

   Change Controller:  IESG

   Reference:  Section 4.3 of [CURVE-REPR]

   Algorithm Analysis Document(s):  Section 4.3 of [CURVE-REPR]

9.  Acknowledgments

   Many thanks to Charlie Perkins for his in-depth review and
   constructive suggestions.  The authors are also especially grateful
   to Robert Moskowitz and Benjamin Kaduk for their comments and
   discussions that led to many improvements.  The authors wish to also
   thank Roman Danyliw, Alissa Cooper, Mirja Kuhlewind, Eric Vyncke,
   Vijay Gurbani, Al Morton and Adam Montville for their constructive
   reviews during the IESG process.

10.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC3971]  Arkko, J., Ed., Kempf, J., Zill, B., and P. Nikander,
              "SEcure Neighbor Discovery (SEND)", RFC 3971,
              DOI 10.17487/RFC3971, March 2005,
              <https://www.rfc-editor.org/info/rfc3971>.



Thubert, et al.          Expires 22 October 2020               [Page 24]

Internet-Draft        Address Protection ND for LLN           April 2020


   [RFC6234]  Eastlake 3rd, D. and T. Hansen, "US Secure Hash Algorithms
              (SHA and SHA-based HMAC and HKDF)", RFC 6234,
              DOI 10.17487/RFC6234, May 2011,
              <https://www.rfc-editor.org/info/rfc6234>.

   [RFC6775]  Shelby, Z., Ed., Chakrabarti, S., Nordmark, E., and C.
              Bormann, "Neighbor Discovery Optimization for IPv6 over
              Low-Power Wireless Personal Area Networks (6LoWPANs)",
              RFC 6775, DOI 10.17487/RFC6775, November 2012,
              <https://www.rfc-editor.org/info/rfc6775>.

   [RFC7400]  Bormann, C., "6LoWPAN-GHC: Generic Header Compression for
              IPv6 over Low-Power Wireless Personal Area Networks
              (6LoWPANs)", RFC 7400, DOI 10.17487/RFC7400, November
              2014, <https://www.rfc-editor.org/info/rfc7400>.

   [RFC7515]  Jones, M., Bradley, J., and N. Sakimura, "JSON Web
              Signature (JWS)", RFC 7515, DOI 10.17487/RFC7515, May
              2015, <https://www.rfc-editor.org/info/rfc7515>.

   [RFC7517]  Jones, M., "JSON Web Key (JWK)", RFC 7517,
              DOI 10.17487/RFC7517, May 2015,
              <https://www.rfc-editor.org/info/rfc7517>.

   [RFC7748]  Langley, A., Hamburg, M., and S. Turner, "Elliptic Curves
              for Security", RFC 7748, DOI 10.17487/RFC7748, January
              2016, <https://www.rfc-editor.org/info/rfc7748>.

   [RFC8032]  Josefsson, S. and I. Liusvaara, "Edwards-Curve Digital
              Signature Algorithm (EdDSA)", RFC 8032,
              DOI 10.17487/RFC8032, January 2017,
              <https://www.rfc-editor.org/info/rfc8032>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8505]  Thubert, P., Ed., Nordmark, E., Chakrabarti, S., and C.
              Perkins, "Registration Extensions for IPv6 over Low-Power
              Wireless Personal Area Network (6LoWPAN) Neighbor
              Discovery", RFC 8505, DOI 10.17487/RFC8505, November 2018,
              <https://www.rfc-editor.org/info/rfc8505>.

   [FIPS186-4]
              FIPS 186-4, "Digital Signature Standard (DSS), Federal
              Information Processing Standards Publication 186-4", US
              Department of Commerce/National Institute of Standards and
              Technology , July 2013.



Thubert, et al.          Expires 22 October 2020               [Page 25]

Internet-Draft        Address Protection ND for LLN           April 2020


   [SEC1]     SEC1, "SEC 1: Elliptic Curve Cryptography, Version 2.0",
              Standards for Efficient Cryptography , June 2009.

11.  Informative references

   [IANA.JOSE.Algorithms]
              IANA, "JSON Web Signature and Encryption Algorithms",
              IANA, 
              https://www.iana.org/assignments/jose/jose.xhtml#web-
              signature-encryption-algorithms.

   [IANA.JOSE.Curves]
              IANA, "JSON Web Key Elliptic Curve", IANA, 
              https://www.iana.org/assignments/jose/jose.xhtml#web-key-
              elliptic-curve.

   [RFC3972]  Aura, T., "Cryptographically Generated Addresses (CGA)",
              RFC 3972, DOI 10.17487/RFC3972, March 2005,
              <https://www.rfc-editor.org/info/rfc3972>.

   [BCP 106]  Eastlake 3rd, D., Schiller, J., and S. Crocker,
              "Randomness Requirements for Security", BCP 106, RFC 4086,
              DOI 10.17487/RFC4086, June 2005,
              <https://www.rfc-editor.org/info/rfc4086>.

   [RFC4861]  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,
              "Neighbor Discovery for IP version 6 (IPv6)", RFC 4861,
              DOI 10.17487/RFC4861, September 2007,
              <https://www.rfc-editor.org/info/rfc4861>.

   [RFC4862]  Thomson, S., Narten, T., and T. Jinmei, "IPv6 Stateless
              Address Autoconfiguration", RFC 4862,
              DOI 10.17487/RFC4862, September 2007,
              <https://www.rfc-editor.org/info/rfc4862>.

   [RFC4919]  Kushalnagar, N., Montenegro, G., and C. Schumacher, "IPv6
              over Low-Power Wireless Personal Area Networks (6LoWPANs):
              Overview, Assumptions, Problem Statement, and Goals",
              RFC 4919, DOI 10.17487/RFC4919, August 2007,
              <https://www.rfc-editor.org/info/rfc4919>.

   [RFC4944]  Montenegro, G., Kushalnagar, N., Hui, J., and D. Culler,
              "Transmission of IPv6 Packets over IEEE 802.15.4
              Networks", RFC 4944, DOI 10.17487/RFC4944, September 2007,
              <https://www.rfc-editor.org/info/rfc4944>.






Thubert, et al.          Expires 22 October 2020               [Page 26]

Internet-Draft        Address Protection ND for LLN           April 2020


   [RFC6282]  Hui, J., Ed. and P. Thubert, "Compression Format for IPv6
              Datagrams over IEEE 802.15.4-Based Networks", RFC 6282,
              DOI 10.17487/RFC6282, September 2011,
              <https://www.rfc-editor.org/info/rfc6282>.

   [RFC7039]  Wu, J., Bi, J., Bagnulo, M., Baker, F., and C. Vogt, Ed.,
              "Source Address Validation Improvement (SAVI) Framework",
              RFC 7039, DOI 10.17487/RFC7039, October 2013,
              <https://www.rfc-editor.org/info/rfc7039>.

   [RFC7217]  Gont, F., "A Method for Generating Semantically Opaque
              Interface Identifiers with IPv6 Stateless Address
              Autoconfiguration (SLAAC)", RFC 7217,
              DOI 10.17487/RFC7217, April 2014,
              <https://www.rfc-editor.org/info/rfc7217>.

   [RFC7518]  Jones, M., "JSON Web Algorithms (JWA)", RFC 7518,
              DOI 10.17487/RFC7518, May 2015,
              <https://www.rfc-editor.org/info/rfc7518>.

   [BCP 201]  Housley, R., "Guidelines for Cryptographic Algorithm
              Agility and Selecting Mandatory-to-Implement Algorithms",
              BCP 201, RFC 7696, DOI 10.17487/RFC7696, November 2015,
              <https://www.rfc-editor.org/info/rfc7696>.

   [RFC8037]  Liusvaara, I., "CFRG Elliptic Curve Diffie-Hellman (ECDH)
              and Signatures in JSON Object Signing and Encryption
              (JOSE)", RFC 8037, DOI 10.17487/RFC8037, January 2017,
              <https://www.rfc-editor.org/info/rfc8037>.

   [RFC8064]  Gont, F., Cooper, A., Thaler, D., and W. Liu,
              "Recommendation on Stable IPv6 Interface Identifiers",
              RFC 8064, DOI 10.17487/RFC8064, February 2017,
              <https://www.rfc-editor.org/info/rfc8064>.

   [RFC8065]  Thaler, D., "Privacy Considerations for IPv6 Adaptation-
              Layer Mechanisms", RFC 8065, DOI 10.17487/RFC8065,
              February 2017, <https://www.rfc-editor.org/info/rfc8065>.

   [RFC8126]  Cotton, M., Leiba, B., and T. Narten, "Guidelines for
              Writing an IANA Considerations Section in RFCs", BCP 26,
              RFC 8126, DOI 10.17487/RFC8126, June 2017,
              <https://www.rfc-editor.org/info/rfc8126>.








Thubert, et al.          Expires 22 October 2020               [Page 27]

Internet-Draft        Address Protection ND for LLN           April 2020


   [BACKBONE-ROUTER]
              Thubert, P., Perkins, C., and E. Levy-Abegnoli, "IPv6
              Backbone Router", Work in Progress, Internet-Draft, draft-
              ietf-6lo-backbone-router-20, 23 March 2020,
              <https://tools.ietf.org/html/draft-ietf-6lo-backbone-
              router-20>.

   [CURVE-REPR]
              Struik, R., "Alternative Elliptic Curve Representations",
              Work in Progress, Internet-Draft, draft-ietf-lwig-curve-
              representations-09, 9 March 2020,
              <https://tools.ietf.org/html/draft-ietf-lwig-curve-
              representations-09>.

   [breaking-ed25519]
              Samwel, N., Batina, L., Bertoni, G., Daemen, J., and R.
              Susella, "Breaking Ed25519 in WolfSSL", Cryptographers'
              Track at the RSA Conference , 2018,
              <https://link.springer.com/
              chapter/10.1007/978-3-319-76953-0_1>.

Appendix A.  Requirements Addressed in this Document

   In this section we state requirements of a secure neighbor discovery
   protocol for low-power and lossy networks.

   *  The protocol MUST be based on the Neighbor Discovery Optimization
      for Low-power and Lossy Networks protocol defined in [RFC6775].
      RFC6775 utilizes optimizations such as host-initiated interactions
      for sleeping resource-constrained hosts and elimination of
      multicast address resolution.
   *  New options to be added to Neighbor Solicitation messages MUST
      lead to small packet sizes, especially compared with existing
      protocols such as SEcure Neighbor Discovery (SEND).  Smaller
      packet sizes facilitate low-power transmission by resource-
      constrained nodes on lossy links.
   *  The support for this registration mechanism SHOULD be extensible
      to more LLN links than IEEE 802.15.4 only.  Support for at least
      the LLN links for which a 6lo "IPv6 over foo" specification
      exists, as well as Low-Power Wi-Fi SHOULD be possible.
   *  As part of this extension, a mechanism to compute a unique
      Identifier should be provided with the capability to form a Link
      Local Address that SHOULD be unique at least within the LLN
      connected to a 6LBR.
   *  The Address Registration Option used in the ND registration SHOULD
      be extended to carry the relevant forms of Unique Interface
      Identifier.




Thubert, et al.          Expires 22 October 2020               [Page 28]

Internet-Draft        Address Protection ND for LLN           April 2020


   *  The Neighbor Discovery should specify the formation of a site-
      local address that follows the security recommendations from
      [RFC7217].


Appendix B.  Representation Conventions

B.1.  Signature Schemes

   The signature scheme ECDSA256 corresponding to Crypto-Type 0 is
   ECDSA, as specified in [FIPS186-4], instantiated with the NIST prime
   curve P-256, as specified in Appendix B of [FIPS186-4], and the hash
   function SHA-256, as specified in [RFC6234], where points of this
   NIST curve are represented as points of a short-Weierstrass curve
   (see [FIPS186-4]) and are encoded as octet strings in most-
   significant-bit first (msb) and most-significant-byte first (MSB)
   order.  The signature itself consists of two integers (r and s),
   which are each encoded as fixed-size octet strings in most-
   significant-bit first and most-significant-byte first order.  For
   details on ECDSA, see [FIPS186-4]; for details on the integer
   encoding, see Appendix B.2.

   The signature scheme Ed25519 corresponding to Crypto-Type 1 is EdDSA,
   as specified in [RFC8032], instantiated with the Montgomery curve
   Curve25519, as specified in [RFC7748], and the hash function SHA-512,
   as specified in [RFC6234], where points of this Montgomery curve are
   represented as points of the corresponding twisted Edwards curve (see
   Appendix B.3) and are encoded as octet strings in least-significant-
   bit first (lsb) and least-significant-byte first (LSB) order.  The
   signature itself consists of a bit string that encodes a point of
   this twisted Edwards curve, in compressed format, and an integer
   encoded in least-significant-bit first and least-significant-byte
   first order.  For details on EdDSA and on the encoding conversions,
   see the specification of pure Ed25519 in [RFC8032].

   The signature scheme ECDSA25519 corresponding to Crypto-Type 2 is
   ECDSA, as specified in [FIPS186-4], instantiated with the Montgomery
   curve Curve25519, as specified in [RFC7748], and the hash function
   SHA-256, as specified in [RFC6234], where points of this Montgomery
   curve are represented as points of a corresponding curve in short-
   Weierstrass form (see Appendix B.3) and are encoded as octet strings
   in most-significant-bit first and most-significant-byte first order.
   The signature itself consists of a bit string that encodes two
   integers, each encoded as fixed-size octet strings in most-
   significant-bit first and most-significant-byte first order.  For
   details on ECDSA, see [FIPS186-4]; for details on the integer
   encoding, see Appendix B.2




Thubert, et al.          Expires 22 October 2020               [Page 29]

Internet-Draft        Address Protection ND for LLN           April 2020


B.2.  Integer Representation for ECDSA signatures

   With ECDSA, each signature is an ordered pair (r, s) of integers
   [FIPS186-4].  Each integer is encoded as a fixed-size 256-bit bit
   string, where each integer is represented according to the Field
   Element to Octet String and Octet String to Bit String conversion
   rules in [SEC1] and where the ordered pair of integers is represented
   as the rightconcatenation of the resulting representation values.
   The inverse operation follows the corresponding Bit String to Octet
   String and Octet String to Field Element conversion rules of [SEC1].

B.3.  Alternative Representations of Curve25519

   The elliptic curve Curve25519, as specified in [RFC7748], is a so-
   called Montgomery curve.  Each point of this curve can also be
   represented as a point of a twisted Edwards curve or as a point of an
   elliptic curve in short-Weierstrass form, via a coordinate
   transformation (a so-called isomorphic mapping).  The parameters of
   the Montgomery curve and the corresponding isomorphic curves in
   twisted Edwards curve and short-Weierstrass form are as indicated
   below.  Here, the domain parameters of the Montgomery curve
   Curve25519 and of the twisted Edwards curve Edwards25519 are as
   specified in [RFC7748]; the domain parameters of the elliptic curve
   Wei25519 in short-Weierstrass curve comply with Section 6.1.1 of
   [FIPS186-4].  For details of the coordinate transformations
   referenced above, see [RFC7748] and [CURVE-REPR].

   General parameters (for all curve models):

   p  2^{255}-19
      (=0x7fffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff
      ffffffed)
   h  8
   n
      723700557733226221397318656304299424085711635937990760600195093828
      5454250989
      (=2^{252} + 0x14def9de a2f79cd6 5812631a 5cf5d3ed)


   Montgomery curve-specific parameters (for Curve25519):

   A  486662
   B  1
   Gu  9 (=0x9)
   Gv
      147816194475895447910205935684099868872646061346164752889648818377
      55586237401




Thubert, et al.          Expires 22 October 2020               [Page 30]

Internet-Draft        Address Protection ND for LLN           April 2020


      (=0x20ae19a1 b8a086b4 e01edd2c 7748d14c 923d4d7e 6d7c61b2 29e9c5a2
      7eced3d9)


   Twisted Edwards curve-specific parameters (for Edwards25519):

   a  -1 (-0x01)
   d  -121665/121666
      (=3709570593466943934313808350875456518954211387984321901638878553
      3085940283555)
      (=0x52036cee 2b6ffe73 8cc74079 7779e898 00700a4d 4141d8ab 75eb4dca
      135978a3)
   Gx
      151122213495354007725011514095885315114540126930418572060461132839
      49847762202
      (=0x216936d3 cd6e53fe c0a4e231 fdd6dc5c 692cc760 9525a7b2 c9562d60
      8f25d51a)
   Gy  4/5
      (=4631683569492647816942839400347516314130799386625622561578303360
      3165251855960)
      (=0x66666666 66666666 66666666 66666666 66666666 66666666 66666666
      66666658)


   Weierstrass curve-specific parameters (for Wei25519):

   a
      192986815395526992372618308347813179755449974442734273399095973345
      73241639236
      (=0x2aaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaa98
      4914a144)
   b
      557517466698189089076452890782571408182411037279010123152944008379
      56729358436
      (=0x7b425ed0 97b425ed 097b425e d097b425 ed097b42 5ed097b4 260b5e9c
      7710c864)
   GX
      192986815395526992372618308347813179755449974442734273399095973346
      52188435546
      (=0x2aaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa
      aaad245a)
   GY
      147816194475895447910205935684099868872646061346164752889648818377
      55586237401
      (=0x20ae19a1 b8a086b4 e01edd2c 7748d14c 923d4d7e 6d7c61b2 29e9c5a2
      7eced3d9)





Thubert, et al.          Expires 22 October 2020               [Page 31]

Internet-Draft        Address Protection ND for LLN           April 2020


Authors' Addresses

   Pascal Thubert (editor)
   Cisco Systems, Inc
   Building D
   45 Allee des Ormes - BP1200
   06254 MOUGINS - Sophia Antipolis
   France

   Phone: +33 497 23 26 34
   Email: pthubert@cisco.com


   Behcet Sarikaya

   Email: sarikaya@ieee.org


   Mohit Sethi
   Ericsson
   FI-02420 Jorvas
   Finland

   Email: mohit@piuha.net


   Rene Struik
   Struik Security Consultancy

   Email: rstruik.ext@gmail.com





















Thubert, et al.          Expires 22 October 2020               [Page 32]
