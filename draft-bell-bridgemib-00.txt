


Internet Draft                                             Les Bell
Expires September 1998                                   3Com Corp.
draft-bell-bridgemib-00.txt                            Andrew Smith
                                                   Extreme Networks
                                                      Paul Langille
                                                    Acacia Networks
                                                   Anil Rijsinghani
                                                  Cabletron Systems
                                                   Keith McCloghrie
                                                      cisco Systems
                                                         March 1998


        Definitions of Managed Objects for Bridges with Traffic
        Classes, Multicast Filtering and Virtual LAN Extensions


Status of this Memo

   This document is an Internet Draft.  Internet Drafts are working
   documents of the Internet Engineering Task Force (IETF), its Areas,
   and its Working Groups. Note that other groups may also distribute
   working documents as Internet Drafts.

   Internet Drafts are draft documents valid for a maximum of six
   months. Internet Drafts may be updated, replaced, or obsoleted by
   other documents at any time.  It is not appropriate to use Internet
   Drafts as reference material or to cite them other than as a "working
   draft" or "work in progress."

   Please check the I-D abstract listing contained in each Internet
   Draft directory to learn the current status of this or any other
   Internet Draft.


Abstract

   This memo defines a portion of the Management Information Base (MIB)
   for use with network management protocols in TCP/IP based internets.
   In particular it defines objects for managing MAC bridges based on
   the IEEE 802.1D-1998 MAC Bridges and IEEE 802.1Q-1998 Virtual LAN
   (VLAN) standards for bridging between Local Area Network (LAN)
   segments. Provisions are made for support of transparent bridging.
   Provisions are also made so that these objects apply to bridges
   connected by subnetworks other than LAN segments.  This memo also
   includes several MIB modules in a manner that is compliant to the
   SNMP SMI [3].



Bell, et al.             Expires September 1998         [Page 1]        









1.  The SNMP Network Management Framework

   The SNMP Network Management Framework consists of several major
   components.  They are:

      o    RFC 1902 [18] which defines the SMI, the mechanisms used for
           describing and naming objects for the purpose of management.
           This supercedes an earlier definition of SMI in RFC 1155 [3].

      o    STD 17, RFC 1213 [5] defines MIB-II, the core set of managed
           objects for the Internet suite of protocols.

      o    RFC 1157 [4] and RFC 1905 [17] which define two versions of
           protocols providing network access to managed objects.

   Textual conventions are defined in RFC 1903 [19] and conformance
   statements are defined in RFC 1904 [20].

   The Framework permits new objects to be defined for the purpose of
   experimentation and evaluation.

   This memo specifies MIB modules that are compliant to the original
   SNMP SMI [3].

1.1.  Object Definitions

   Managed objects are accessed via a virtual information store, termed
   the Management Information Base or MIB.  Objects in the MIB are
   defined using the subset of Abstract Syntax Notation One (ASN.1)
   defined in the SMI.  In particular, each object object type is named
   by an OBJECT IDENTIFIER, an administratively assigned name.  The
   object type together with an object instance serves to uniquely
   identify a specific instantiation of the object.  For human
   convenience, we often use a textual string, termed the descriptor, to
   refer to the object type.

2.  Overview

   A common device present in many networks is the Bridge.  This device
   is used to connect Local Area Network segments below the network
   layer. These devices are often known as 'layer 2 switches'.

   There are two major modes defined for this bridging; transparent and
   source route.  The transparent method of bridging is defined by IEEE
   802.1D-1998 [11]. Managed objects for source route bridges are
   defined in [15].




Bell, et al.             Expires September 1998         [Page 2]        









   IEEE 802.1D is augmented by IEEE 802.1Q-1998 [12] to provide support
   for 'virtual bridged LANs' where a single bridged physical LAN
   network may be used to support multiple logical bridged LANs, each of
   which offers a service approximately the same as that defined by
   802.1D.  Such virtual LANs (VLANs) are an integral feature of
   switched LAN networks. A VLAN can be viewed as a group of end-
   stations on multiple LAN segments and can communicate as if they were
   on a single LAN.  IEEE 802.1Q defines port-based Virtual LANs where
   membership is determined by the bridge port on which data frames are
   received. This memo defines the objects needed for the management of
   port-based VLANs in bridge entities.

   This memo defines those objects needed for the management of a
   bridging entity operating in the transparent mode, as well as some
   objects applicable to all types of bridges. Managed objects for
   Source-Routing are defined in [15].

2.1. Scope

   This MIB includes a comprehensive set of managed objects which
   attempts to match the set defined in IEEE 802.1D and IEEE 802.1Q.
   However, to be consistent with the spirit of the SNMP Framework, a
   subjective judgement was made to omit the objects from those
   standards most 'costly' to implement in an agent and least The
   omissions are described below.

   RFC 1493 used the following principles for determining inclusion of
   an object in the BRIDGE-MIB module:

      (1)  Start with a small set of essential objects and add only as
           further objects are needed.

      (2)  Require objects be essential for either fault or
           configuration management.

      (3)  Consider evidence of current use and/or utility.

      (4)  Limit the total of objects.

      (5)  Exclude objects which are simply derivable from others in
           this or other MIBs.

      (6)  Avoid causing critical sections to be heavily instrumented.
           The guideline that was followed is one counter per critical
           section per layer.





Bell, et al.             Expires September 1998         [Page 3]        









3. Structure of MIB

   This document is organised into three MIB modules:

   (1)  The existing base BRIDGE-MIB module from RFC1493. This is
        maintained syntactically unchanged for backwards compatibility.
        Some clarifications are added regarding usage of these objects
        by devices implementing some of the enhancements.

   (2)  Managed objects for an extended P-BRIDGE-MIB for the traffic
        class and multicast filtering enhancements defined by
        802.1D-1998.

   (3)  Managed objects for a Q-BRIDGE-MIB for the Virtual LAN
        bridging enhancements defined by 802.1Q-1998.

3.1 Structure of basic Bridge MIB module

   Objects in this MIB are arranged into groups.  Each group is
   organized as a set of related objects.  The overall structure and
   assignment of objects to their groups is shown below.  Where
   appropriate the corresponding IEEE 802.1D [10] management object name
   is also included.

          Bridge MIB Name                  IEEE 802.1D Name

          dot1dBridge
            dot1dBase
              BridgeAddress                Bridge.BridgeAddress
              NumPorts                     Bridge.NumberOfPorts
              Type
              PortTable
                Port                       BridgePort.PortNumber
                IfIndex
                Circuit
                DelayExceededDiscards        .DiscardTransitDelay
                MtuExceededDiscards          .DiscardOnError
            dot1dStp
              ProtocolSpecification
              Priority                     SpanningTreeProtocol
                                             .BridgePriority
              TimeSinceTopologyChange        .TimeSinceTopologyChange
              TopChanges                     .TopologyChangeCount
              DesignatedRoot                 .DesignatedRoot
              RootCost                       .RootCost
              RootPort                       .RootPort
              MaxAge                         .MaxAge



Bell, et al.             Expires September 1998         [Page 4]        









              HelloTime                      .HelloTime
              HoldTime                       .HoldTime
              ForwardDelay                   .ForwardDelay
              BridgeMaxAge                   .BridgeMaxAge
              BridgeHelloTime                .BridgeHelloTime
              BridgeForwardDelay             .BridgeForwardDelay
              PortTable
                Port                        SpanningTreeProtocolPort
                                              .PortNumber
                Priority                      .PortPriority
                State                         .SpanningTreeState
                Enable
                PathCost                      .PortPathCost
                DesignatedRoot                .DesignatedRoot
                DesignatedCost                .DesignatedCost
                DesignatedBridge              .DesignatedBridge
                DesignatedPort                .DesignatedPort
                ForwardTransitions
            dot1dTp
              LearnedEntryDiscards          BridgeFilter.DatabaseSize
                                              .NumDynamic,.NumStatic
              AgingTime                     BridgeFilter.AgingTime
              FdbTable
                Address
                Port
                Status
              PortTable
                Port
                MaxInfo
                InFrames                    BridgePort.FramesReceived
                OutFrames                     .ForwardOutbound
                InDiscards                    .DiscardInbound
            dot1dStatic
              StaticTable
                Address
                ReceivePort
                AllowedToGoTo
                Status

   The following IEEE 802.1D management objects have not been included
   in the Bridge MIB for the indicated reasons.

          IEEE 802.1D Object              Disposition

          Bridge.BridgeName               Same as sysDescr (MIB II)
          Bridge.BridgeUpTime             Same as sysUpTime (MIB II)
          Bridge.PortAddresses            Same as ifPhysAddress (IF-MIB)



Bell, et al.             Expires September 1998         [Page 5]        









          BridgePort.PortName             Same as ifDescr (IF-MIB)
          BridgePort.PortType             Same as ifType (IF-MIB)
          BridgePort.RoutingType          Derivable from the implemented
                                          groups

          SpanningTreeProtocol
              .BridgeIdentifier           Combination of
dot1dStpPriority
                                          and dot1dBaseBridgeAddress
              .TopologyChange             Since this is transitory, it
                                          is not considered useful.
          SpanningTreeProtocolPort
              .Uptime                     Same as ifLastChange (IF-MIB)
              .PortIdentifier             Combination of dot1dStpPort
                                          and dot1dStpPortPriority
              .TopologyChangeAcknowledged Since this is transitory, it
                                          is not considered useful.
              .DiscardLackOfBuffers       Redundant


3.1.1.  The dot1dBase Group

   This mandatory group contains the objects which are applicable to all
   types of bridges.

3.1.2.  The dot1dStp Group

   This group contains the objects that denote the bridge's state with
   respect to the Spanning Tree Protocol.  If a node does not
   implement the Spanning Tree Protocol, this group will not be
   implemented.

3.1.3.  The dot1dTp Group

   This group contains objects that describe the entity's state with
   respect to transparent bridging.  If transparent bridging is not
   supported this group will not be implemented.  This group is
   applicable to transparent only and SRT bridges.

3.1.4.  The dot1dStatic Group

   This group contains objects that describe the entity's state with
   respect to destination-address filtering.  If destination-address
   filtering is not supported this group will not be implemented.  This
   group is applicable to any type of bridge which performs
   destination-address filtering.





Bell, et al.             Expires September 1998         [Page 6]        









3.2 Structure of Extended Bridge MIB module

   Objects in this MIB are arranged into groups.  Each group is
   organized as a set of related objects.  The overall structure and
   assignment of objects to their groups is shown below.  Where
   appropriate the corresponding IEEE 802.1D-1998 [11] management object
   name is also included.


   Extended Bridge MIB Name            IEEE 802.1D Name

   dot1dExtended                       Bridge
     dot1dExtBase
       dot1dTrafficClassesEnabled
       dot1dGarpAdminStatus              .ApplicantAdministrativeControl
       dot1dGarpOperStatus               .ApplicantAdministrativeControl
       dot1dGmrpAdminStatus              .ApplicantAdministrativeControl
       dot1dGmrpOperStatus               .ApplicantAdministrativeControl
       dot1dTrafficClassesResetToDefaults
       dot1dGarpReset
     dot1dPriority
       dot1dPortPriorityTable
         dot1dPortDefaultUserPriority    .UserPriority
         dot1dPortNumTrafficClasses
       dot1dUserPriorityRegenTable       .UserPriorityRegenerationTable
         dot1dUserPriority
         dot1dRegenUserPriority
       dot1dTrafficClassTable            .TrafficClassTable
         dot1dTrafficClass
       dot1dPortOutboundAccessPriorityTable .OutboundAccessPriorityTable
         dot1dPortOutboundAccessPriority
     dot1dGarp
       dot1dPortGarpTable
         dot1dPortGarpAdminStatus        .ApplicantAdministrativeControl
         dot1dPortGarpOperStatus         .ApplicantAdministrativeControl
         dot1dPortGarpJoinTime           .JoinTime
         dot1dPortGarpLeaveTime          .LeaveTime
         dot1dPortGarpLeaveAllTime       .LeaveAllTime
     dot1dGmrp
       dot1dPortGmrpTable
         dot1dPortGmrpAdminStatus        .ApplicantAdministrativeControl
         dot1dPortGmrpOperStatus         .ApplicantAdministrativeControl
         dot1dPortGmrpFailedRegistrations  .FailedRegistrations
         dot1dPortGmrpLastPduOrigin      .OriginatorOfLastPDU


   The following IEEE 802.1D management objects have not been included



Bell, et al.             Expires September 1998         [Page 7]        









   in the Bridge MIB for the indicated reasons.

       IEEE 802.1D Object              Disposition

       Bridge.StateValue               not considered useful
       Bridge.ApplicantAdministrativeControl
                                       not provided per-attribute
                                       (e.g. per-VLAN, per-Group).
                                       Only
Per-{device,port,application}
                                       control is provided in this MIB.

3.2.1 The dot1dExtBase Group

   This group contains the objects which are applicable to all bridges
   implementing the traffic class and multicast filtering features of
   802.1D. It includes per-device configuration of GARP and GMRP
   protocols. This group will be implemented by all devices which
   implement the extensions defined in 802.1D-1998.

3.2.2 The dot1dPriority Group

   This group contains the objects for configuring and reporting status
   of priority-based queuing mechanisms in a bridge. This includes per-
   port user_priority treatment, mapping of user_priority in frames into
   internal traffic classes and outbound user_priority and
   access_priority.

3.2.3 The dot1dGarp Group

   This group contains the objects for configuring and reporting on
   operation of the Generic Attribute Registration Protocol (GARP).

3.2.4 The dot1dGmrp Group

   This group contains the objects for configuring and reporting on
   operation of the GARP Multicast Registration Protocol (GMRP).

3.3 Structure of Virtual Bridge MIB module

   Objects in this MIB are arranged into groups.  Each group is
   organized as a set of related objects.  The overall structure and
   assignment of objects to their groups is shown below. Some of the
   original objects from RFC1493 need to be indexed differently when
   extended in a VLAN environment so some objects in that module
   effectively duplicate new objects defined here: this is necessary for
   backwards compatibility.




Bell, et al.             Expires September 1998         [Page 8]        









   Note: unlike 802.1D, IEEE 802.1Q-1998 [12] chose not to define a new
   set of managed object names so those following are referenced from
   the descriptions of management operations with section numbering from
   clause 12 in that document.

   Virtual Bridge MIB object     802.1Q object

   dot1qBase
     dot1qVlanVersionNumber      12.10.1.1 read bridge vlan config
     dot1qMaxVlanId              12.10.1.1 read bridge vlan config
     dot1qMaxSupportedVlans      12.10.1.1 read bridge vlan config
     dot1qCanOverridePvid        12.10.1.1 read bridge vlan config
     dot1qCanOverridePvidTagging 12.10.1.1 read bridge vlan config
     dot1qNumVlans
     dot1qResetToDefaults        12.10.1.5 reset vlan bridge
     dot1dGvrpAdminStatus        12.9.2.2 set garp applicant controls
     dot1dGvrpOperStatus         12.9.2.1 read garp applicant controls
     dot1qNextFreeFdbId
   dot1qTp
     dot1qTpFdbClear             12.4.1.4 reset bridge
     dot1qFdbTable
       dot1qFdbId
       dot1qFdbClear             12.4.1.4 reset bridge
       dot1qFdbAgingTime         12.7.1.2 set FDB ageing time
     dot1qTpFdbTable
       dot1qTpFdbAddress
       dot1qTpFdbPort
       dot1qTpFdbStatus
     dot1qTpGroupTable
        dot1qTpGroupAddress
        dot1qTpGroupAllowedToGoTo
        dot1qTpGroupGmrp
        dot1qTpGroupIgmp
   dot1qStatic
     dot1qStaticTable            12.7.7.1 create/delete/read FDB entry
                                 12.7.6.1 read permanent database
       dot1qStaticAddress
       dot1qStaticReceivePort
       dot1qStaticAllowedToGoTo
       dot1qStaticStatus
   dot1qVlan
     dot1qVlanStaticTable        12.7.7.1 create filtering entry
                                 12.7.7.2 delete filtering entry
                                 12.7.7.3 read filtering entry
                                 12.7.6.1 read permanent database
                                 12.10.2.2 create vlan configuration
                                 12.10.2.3 delete vlan configuration



Bell, et al.             Expires September 1998         [Page 9]        









                                 12.10.3.6 read FID allocation for VID
                                 12.10.3.7 read VIDs allocated to FID
                                 12.10.3.8 set VID to FID allocations
                                 12.10.3.9 delete VID to FID allocations
        dot1qVlanIfIndex
        dot1qVlanStaticTag
        dot1qVlanStaticFdb
        dot1qVlanStaticName      12.4.1.3 set bridge name
        dot1qVlanFixedPorts
        dot1qVlanForbiddenPorts
        dot1qVlanAdminUntaggedPorts
        dot1qVlanStaticRowStatus
     dot1qVlanTable              12.10.2.1 read vlan configuration
                                 12.10.3.5 read VID to FID allocations
        dot1qVlanTag
        dot1qVlanFdbId
        dot1qVlanOperTaggedPorts
        dot1qVlanOperUntaggedPorts
        dot1qVlanBridgeUpTime       12.4.1.2.3 read bridge
        dot1qVlanStatus
     dot1qPortVlanConfigTable       12.10.1.1 read bridge vlan config
        dot1qPvid                   12.10.1.2 configure PVID values
        dot1qPortGvrpAdminStatus    12.9.2.2 set garp applicant control
        dot1qPortGvrpOperStatus     12.9.2.1 read garp applicant control
        dot1qPortAcceptableFrameTypes   12.10.1.3 configure acceptable
                                              frame types parameter
        dot1qPortIngressFiltering   12.10.1.4 configure enable ingress
                                                  filtering parameters
        dot1qPortGvrpFailedRegistrations
        dot1qPortGvrpLastPduOrigin
     dot1qPortVlanStatisticsTable   12.6.1.1 read forwarding counters
        dot1qFramesReceived
        dot1qOctetsReceived (optional)
        dot1qForwardOutbound
        dot1qDiscardInbound
        dot1qDiscardNoBuffers
        dot1qDiscardTransitDelayExceeded
        dot1qDiscardError
        dot1qDiscardOnIngressFiltering (optional)
     dot1qLearningConstraintsTable
                              12.10.3.1 read vlan learning constraints
                              12.10.3.2 read vlan learn constr for VID
                              12.10.3.3 set vlan learning constraints
                              12.10.3.4 delete vlan learning constraints
        dot1qConstraintVlan
        dot1qConstraintSet
        dot1qConstraintType



Bell, et al.             Expires September 1998        [Page 10]        









        dot1qConstraintStatus

   The following IEEE 802.1Q management objects have not been included
   in the Bridge MIB for the indicated reasons.

        IEEE 802.1Q Object                      Disposition

        reset bridge (12.4.1.4)                 use dot1qTpFdbClear or
                                                dot1qTpFdbClear to clear
                                                FDB.

        read forwarding port counters (12.6.1.1)
            discard on error details            not considered useful

            permanent database size             ???
            number of static filtering entries  count number of rows
                                                in dot1qStaticTable.
            number of static VLAN               Can count number of rows
            registration entries                in dot1qVlanStaticTable.

        read filtering entry range (12.7.7.4)   use GetNext operation.

        read filtering database (12.7.1.1)
            filtering database size             ???
        read garp state (12.9.3.1)              not considered useful

        notify vlan registration failure        not considered useful
                        (12.10.1.6)
        notify learning constraint violation    not considered useful
                        (12.10.3.10)


3.3.1.  The dot1qBase Group

   This mandatory group contains the objects which are applicable to all
   bridges implementing 802.1Q virtual LANs.

3.3.2.  The dot1qTp Group

   This group contains objects that control the operation and report the
   status of transparent bridging. This includes management of the
   dynamic Filtering Databases for both unicast and multicast
   forwarding. This group will be implemented by all bridges that
   performs destination-address filtering.

3.3.3.  The dot1qStatic Group




Bell, et al.             Expires September 1998        [Page 11]        









   This group contains objects that control static configuration
   information for transparent bridging. This includes management of the
   static entries in the Filtering Databases for both unicast and
   multicast forwarding.

3.3.4.  The dot1qVlan Group

   This group contains objects that control configuration and report
   status of the Virtual LANs known to a bridge.  This includes
   management of the statically configured VLANs as well as reporting
   VLANs discovered by other means e.g. GVRP.  It also controls
   configuration and reports status of per-port objects relating to
   VLANs and reports traffic statistics.  It also provides for
   management of the VLAN Learning Constraints.

3.4.  Relationship to Other MIBs

   As described above, some IEEE 802.1D management objects have not been
   included in this MIB because they overlap with objects in other MIBs
   applicable to a bridge implementing this MIB.  In particular, it is
   assumed that a bridge implementing this MIB will also implement (at
   least) the 'system' group defined in MIB-II [6] and the 'interfaces'
   group defined [14].

3.4.1.  Relationship to the 'system' group

   In MIB-II, the 'system' group is defined as being mandatory for all
   systems such that each managed entity contains one instance of each
   object in the 'system' group.  Thus, those objects apply to the
   entity as a whole irrespective of whether the entity's sole
   functionality is bridging, or whether bridging is only a subset of
   the entity's functionality.

3.4.2.  Relation to Interfaces MIB

   RFC 1573, the Interface MIB Evolution [14], requires that any MIB
   which is an adjunct of the Interface MIB, clarify specific areas
   within the Interface MIB.  These areas were intentionally left vague
   in [14] to avoid over constraining the MIB, thereby precluding
   management of certain media-types.

   Section 3.3 of [14] enumerates several areas which a media- specific
   MIB must clarify.  Each of these areas is addressed in a following
   subsection.  The implementor is referred to [14] in order to
   understand the general intent of these areas.

   In [14], the 'interfaces' group is defined as being mandatory for all



Bell, et al.             Expires September 1998        [Page 12]        









   systems and contains information on an entity's interfaces, where
   each interface is thought of as being attached to a `subnetwork'.
   (Note that this term is not to be confused with `subnet' which refers
   to an addressing partitioning scheme used in the Internet suite of
   protocols.) The term 'segment' is used in this memo to refer to such
   a subnetwork, whether it be an Ethernet segment, a 'ring', a WAN
   link, or even an X.25 virtual circuit.

   Implicit in this Bridge MIB is the notion of ports on a bridge.  Each
   of these ports is associated with one interface of the 'interfaces'
   group (one row in ifTable) and, in most situations, each port is
   associated with a different interface. However, there are situations
   in which multiple ports are associated with the same interface.  An
   example of such a situation would be several ports each corresponding
   one-to-one with several X.25 virtual circuits but all on the same
   interface.

   Each port is uniquely identified by a port number.  A port number has
   no mandatory relationship to an interface number, but in the simple
   case a port number will have the same value as the corresponding
   interface's interface number.  Port numbers are in the range
   (1..dot1dBaseNumPorts).

   Some entities perform other functionality as well as bridging through
   the sending and receiving of data on their interfaces.  In such
   situations, only a subset of the data sent/received on an interface
   is within the domain of the entity's bridging functionality.  This
   subset is considered to be delineated according to a set of
   protocols, with some protocols being bridged, and other protocols not
   being bridged. For example, in an entity which exclusively performed
   bridging, all protocols would be considered as being bridged, whereas
   in an entity which performed IP routing on IP datagrams and only
   bridged other protocols, only the non-IP data would be considered as
   being bridged. Thus, this Bridge MIB (and in particular, its
   counters) is applicable only to that subset of the data on an
   entity's interfaces which is sent/received for a protocol being
   bridged.  All such data is sent/received via the ports of the bridge.

3.4.2.1. Layering Model

   This memo assumes the interpretation of the Interfaces Group to be in
   accordance with [14] which states that the interfaces table (ifTable)
   contains information on the managed resource's interfaces and that
   each sub-layer below the internetwork layer of a network interface is
   considered an interface.

   This memo recommends that, within an entity, each VLAN which is



Bell, et al.             Expires September 1998        [Page 13]        









   instantiated as an entry in dot1qVlanTable by either management
   configuration through dot1qVlanStaticTable or by dynamic means (e.g.
   through GVRP protocol), also be represented by an entry in ifTable.

3.4.2.2.  Interpretations of ifTable for VLANs

Some specific interpretations of ifTable for VLAN entries follow.

   ifTable Object                Use for VLAN Layer
   ==============                ==================

   ifIndex                       Each VLAN is represented by an entry in
                                 the ifTable.

   ifDescr                       Description of the VLAN e.g. VLAN name.
                                 It is recommended that this bear some
                                 resemblance to dot1qVlanStaticName.

   ifType                        propVirtual(53)

   ifMtu                         0 or smallest MTU of all of the ports
                                 in the VLAN.

   ifSpeed                       0
   ifPhysAddress                 zero-filled

   ifAdminStatus                 up(1) whenever there are active ports
   ifOperStatus                  in the VLAN which are ready to send
                                 and/or receive traffic. See [14] for
                                 other defined usage which applies.

   ifLastChange                  see interfaces MIB [14].

   ifName                        Textual name (unique on this system) of
                                 the VLAN or an octet string of zero
                                 length.

   ifLinkUpDownTrapEnable        Default is disabled (2).

   ifConnectorPresent            Set to false (2).
   ifPromiscuousMode             Set to false (2).
   ifHighSpeed                   0

   ifHCPacketGroup               64-bit counters: must be supported if
   ifVHCPacketGroup              required by the compliance
                                 statements in [14].




Bell, et al.             Expires September 1998        [Page 14]        









   ifHCFixedLengthGroup          Not to be implemented for these
                                 entries.


3.4.2.3.  ifStackTable

   In addition, [14] defines a table 'ifStackTable' for describing the
   relationship between logical interfaces within an entity.  It is
   anticipated that implementors will use this table to describe the
   binding of e.g. IP interfaces to VLANs and then onto physical ports.
   However, it cannot represent the full capability of the 802.1Q VLAN
   bridging standard since that makes a distinction between VLAN
   bindings on 'ingress' to and 'egress' from a port: these
   relationships may or may not be symmetrical whereas [14] assumes a
   symmetrical binding for transmit and receive. This makes it necessary
   to define other manageable objects for configuring which ports are
   members of which VLANs.

3.4.2.4.  ifRcvAddressTable

   This table contains all MAC addresses, unicast, multicast, and
   broadcast, for which an interface will receive packets and forward
   them up to a higher layer entity for local consumption.  The format
   of the address, contained in ifRcvAddressAddress, is the same as for
   ifPhysAddress.

----------------
Editor: Does this mean that ifRcvAddressTable contains entries for e.g.
spanning-tree, GMRP, GVRP addresses?
----------------

   This table does not include unicast or multicast addresses which are
   accepted for possible forwarding out some other port.  This table is
   explicitly not intended to provide a bridge address filtering
   mechanism.

3.5.  Textual Conventions

   The datatypes MacAddress, BridgeId, Timeout, EnabledStatus, PortList,
   VlanIfIndex and VlanId are used as textual conventions in this
   document.  These textual conventions have NO effect on either the
   syntax nor the semantics of any managed object.  Objects defined
   using these conventions are always encoded by means of the rules that
   define their primitive type.  Hence, no changes to the SMI or the
   SNMP are necessary to accommodate these textual conventions which are
   adopted merely for the convenience of readers.




Bell, et al.             Expires September 1998        [Page 15]        









4.  Changes from RFC 1493

        (1) Updated all references to sections of IEEE 802.1D-1998.

        (2) Added support for multiple traffic classes and dynamic
            multicast filtering as per IEEE 802.1D-1998.

        (3) Added support for bridged Virtual LANs as per IEEE
            802.1Q-1998.

        (4) Added support for 64-bit versions of existing RFC1493
            port counters.


5. To Do list

   (1) Update preceeding for appropriate new SNMP framework(s) (v3?)
   (2) SMIv2
   (3) conformance clauses/groups
   (4) add 64-bit/32-bit per-port counters
   (5) add notes on how to use existing bridge MIB (dot1dStaticTable,
        dot1dTpGroup) in the presence of VLANs


6. Open Issues

   (1) Should this MIB offer support for SMIv1-only agents
(Counter32/64)?
   (2) Indexing of tables by VlanId or by ifIndex? (assume ifIndex)
   (3) Indexing of FDB tables by MacAddress or by something else?
(assume MacAddress)
   (4) Include RFC1493 by value or reference?
   (5) ifStackTable usage
   (6) representations of filtering entry for "AllGroups" and
"AllUnregisteredGroups"
   (7) should we represent all available FIDs up front or use a "next
free" object
         for the manager to create them as needed?
   (8) learned entry discards counter - per-VLAN? per-device? this
object is not in 802.1D.
   (9) do we need per-FID static/dynamic filtering entry counts?
(12.7.1.1.3)
   (10) separate config and status info for e.g. dot1dPortGmrpTable,
dot1qPortVlanTable?
   (11) 802.1D has separate registrar and applicant controls per state
machine (GVRP and GMRP):
          Do we need per-VLAN and per-Group Registrar controls (assume
yes:
          dot1qVlanFixedPorts/dot1qVlanForbiddenPorts,
dot1dStaticAllowedToGoTo)?
          Do we need per-VLAN and per-Group Applicant controls (assume
no - per-port
          is sufficient: dot1qPortGvrpAdminStatus,
dot1pPortGmrpAdminStatus)?
   (12) should the per-port GARP admin controls apply to Registrar as
well as Applicant?
          (dot1qPortGvrpAdminStatus, dot1pPortGmrpAdminStatus).
   (13) learning constraints table seems clumsy - can we improve this?
   (14) do we need to define a "notify vlan registration failure" trap?
(assume no)
   (15) dot1qFdbAgingTime is currently per-FID: 802.1Q has it
per-device.



Bell, et al.             Expires September 1998        [Page 16]        









   (16) dot1pPortDefaultUserPriority - can this usefully be
per-port,per-VLAN?
   (17) both dot1qVlanTable and dot1qVlanStaticTable are indexed by
dot1qVlanIfIndex
          but that only appears in dot1qVlanStaticTable - is this a
problem?
   (18) should we choose same names (up/down) as IF-MIB for values of
the
          admin/oper status values, rather than defining our own new TC?
Is there
          an existing TC we can import?
   (19) should we have write-only "reset" objects or should these be
read-write
          to help MIB browsers (assume write-only)?
   (20) do we need "read filtering database (12.7.1.1): filtering
database size"?
   (21) do we need "read forwarding port counters (12.6.1.1): permanent
          database size"?




7.  Definitions for base bridge MIB

-- ------------------------------------------------------------
--- maybe insert RFC1493 module here, unchanged for now     ---
-- ------------------------------------------------------------






























Bell, et al.             Expires September 1998        [Page 17]        









8.  Definitions for extended bridge MIB

-- ------------------------------------------------------------
-- IEEE 802.1p MIB
-- ------------------------------------------------------------

P-BRIDGE-MIB DEFINITIONS ::= BEGIN

IMPORTS
    Counter
        FROM RFC1155-SMI
    OBJECT-TYPE
        FROM RFC-1212
    TruthValue
        FROM SNMPv2-TC
    MacAddress, Timeout, dot1dBasePort, dot1dBridge
        FROM BRIDGE-MIB;

-- ------------------------------------------------------------
-- Textual Conventions
-- ------------------------------------------------------------

EnabledStatus ::= INTEGER { enabled(1), disabled(2) }


-- ------------------------------------------------------------
-- groups in the P-BRIDGE MIB
-- ------------------------------------------------------------

dot1dExtended   OBJECT IDENTIFIER ::= { dot1dBridge 6 }

dot1dExtBase    OBJECT IDENTIFIER ::= { dot1dExtended 1 }
dot1dPriority   OBJECT IDENTIFIER ::= { dot1dExtended 2 }
dot1dGarp       OBJECT IDENTIFIER ::= { dot1dExtended 3 }
dot1dGmrp       OBJECT IDENTIFIER ::= { dot1dExtended 4 }

-- ------------------------------------------------------------

-- ------------------------------------------------------------
-- the dot1dExtBase group
-- ------------------------------------------------------------

dot1dTrafficClassesEnabled OBJECT-TYPE
    SYNTAX  TruthValue
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION



Bell, et al.             Expires September 1998        [Page 18]        









            "The value true(1) indicates that Traffic Classes
            are enabled on this bridge.  When false(2), the
            bridge operates with a single priority level for
            all traffic."
    ::= { dot1dExtBase 1 }

dot1dGarpAdminStatus OBJECT-TYPE
    SYNTAX  EnabledStatus
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The administrative status requested by management
            for GARP.  The value enabled(1) indicates that GARP
            should be enabled on this device, in all VLANs, on
            all ports for which it has not been specifically
            disabled.  When disabled(2), all GARP applications
            are disabled, in all VLANs, on all ports.
            The default value is enabled(1)."
    ::= { dot1dExtBase 2 }

dot1dGarpOperStatus OBJECT-TYPE
    SYNTAX  EnabledStatus
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The current operational status of GARP on this
            device.  This may be disabled(2), even though the
            administrative status for GARP is enabled(1), if the
            device does not have sufficient resources to enable
            it.  If the administrative status for GARP is
            disabled(2), this will always be disabled(2)."
    ::= { dot1dExtBase 3 }

dot1dGmrpAdminStatus OBJECT-TYPE
    SYNTAX  EnabledStatus
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The administrative status requested by management
            for GMRP.  The value enabled(1) indicates that GMRP
            should be enabled on this device, in all VLANs, on
            all ports for which it has not been specifically
            disabled, if GARP is also enabled for this device.
            When disabled(2), GMRP is disabled, in all VLANs, on
            all ports.  The default value is enabled(1)."
    ::= { dot1dExtBase 4 }




Bell, et al.             Expires September 1998        [Page 19]        









dot1dGmrpOperStatus OBJECT-TYPE
    SYNTAX  EnabledStatus
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The current operational status of GMRP on this
            device."
    ::= { dot1dExtBase 5 }

dot1dTrafficClassesResetToDefaults OBJECT-TYPE
    SYNTAX  TruthValue
    ACCESS  write-only
    STATUS  mandatory
    DESCRIPTION
            "When the value true(1) is written to this object,
            all traffic class values are reset to their
            defaults and traffic class statistics are cleared.
            This object always returns false(2) when read."
    ::= { dot1dExtBase 6 }

dot1dGarpReset OBJECT-TYPE
    SYNTAX  TruthValue
    ACCESS  write-only
    STATUS  mandatory
    DESCRIPTION
            "When the value true(1) is written to this object,
            all GARP parameters are reset to their power-on
            values and all GARP statistics are cleared.  This
            applies to all GARP applications, on all ports, in
            all VLANs.  This object always returns false(2)
            when read."
    ::= { dot1dExtBase 7 }

-- ------------------------------------------------------------
-- the dot1dPriority group
-- ------------------------------------------------------------

-- ------------------------------------------------------------
-- Port Priority Table
-- ------------------------------------------------------------

dot1dPortPriorityTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1dPortPriorityEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A table that contains information about every port



Bell, et al.             Expires September 1998        [Page 20]        









            that is associated with this transparent bridge."
    ::= { dot1dPriority 1 }

dot1dPortPriorityEntry OBJECT-TYPE
    SYNTAX  Dot1dPortPriorityEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A list of Default User Priorities for each port of
            a transparent bridge."
    INDEX   { dot1dBasePort }
    ::= { dot1dPortPriorityTable 1 }

Dot1dPortPriorityEntry ::=
    SEQUENCE {
        dot1dPortDefaultUserPriority
            INTEGER,
        dot1dPortNumTrafficClasses
            INTEGER
    }

dot1dPortDefaultUserPriority OBJECT-TYPE
    SYNTAX  INTEGER (0..7)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The default ingress User Priority for this port."
    ::= { dot1dPortPriorityEntry 1 }

dot1dPortNumTrafficClasses OBJECT-TYPE
    SYNTAX  INTEGER (1..8)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The number of egress traffic classes supported on
            this port.  This object may optionally be read-only."
    ::= { dot1dPortPriorityEntry 2 }

-- ------------------------------------------------------------
-- User Priority Regeneration Table
-- ------------------------------------------------------------

dot1dUserPriorityRegenTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1dUserPriorityRegenEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION



Bell, et al.             Expires September 1998        [Page 21]        









            "A list of Regenerated User Priorities for each
            received User Priority on each port of a bridge.
            The Regenerated User Priority value is used to index
            the Traffic Class Table for each input port.  The
            default values for Regenerated User Priorities are
            the same as the User Priorities."
    ::= { dot1dPriority 2 }

dot1dUserPriorityRegenEntry OBJECT-TYPE
    SYNTAX  Dot1dUserPriorityRegenEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A mapping of incoming User Priority to a
            Regenerated User Priority."
    INDEX   { dot1dBasePort, dot1dUserPriority }
    ::= { dot1dUserPriorityRegenTable 1 }

Dot1dUserPriorityRegenEntry ::=
    SEQUENCE {
        dot1dUserPriority
            INTEGER,
        dot1dRegenUserPriority
            INTEGER
    }

dot1dUserPriority OBJECT-TYPE
    SYNTAX  INTEGER (0..7)
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
        "The User Priority for a frame received on this port."
    ::= { dot1dUserPriorityRegenEntry 1 }

dot1dRegenUserPriority OBJECT-TYPE
    SYNTAX  INTEGER (0..7)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The Regenerated User Priority the incoming User
            Priority is mapped to for this port."
    ::= { dot1dUserPriorityRegenEntry 2 }

-- ------------------------------------------------------------
-- Traffic Class Table
-- ------------------------------------------------------------




Bell, et al.             Expires September 1998        [Page 22]        









dot1dTrafficClassTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1dTrafficClassEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A table mapping Regenerated User Priority to
            Traffic Class, for forwarding by the bridge.
            Traffic class is a number in the range
            (1..dot1dPortNumTrafficClasses)."
    REFERENCE
            "IEEE 802.1D/D15 Table 7-2"
    ::= { dot1dPriority 3 }

dot1dTrafficClassEntry OBJECT-TYPE
    SYNTAX  Dot1dTrafficClassEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "User Priority to Traffic Class mapping."
    INDEX   { dot1dBasePort, dot1dRegenUserPriority }
    ::= { dot1dTrafficClassTable 1 }

Dot1dTrafficClassEntry ::=
    SEQUENCE {
        dot1dTrafficClass
            INTEGER
    }

dot1dTrafficClass OBJECT-TYPE
    SYNTAX  INTEGER (0..7)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The Traffic Class the received frame is mapped to.
            It is optional to support writing to this object."
    ::= { dot1dTrafficClassEntry 1 }

-- ------------------------------------------------------------
-- Outbound Access Priority Table
-- ------------------------------------------------------------

dot1dPortOutboundAccessPriorityTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1dPortOutboundAccessPriorityEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A table mapping Regenerated User Priority to



Bell, et al.             Expires September 1998        [Page 23]        









            Outbound Access Priority.  This is a fixed mapping
            for all port types, with two options for 802.5
            Token Ring."
    REFERENCE
            "IEEE 802.1D/D15 Table 7-3"
    ::= { dot1dPriority 4 }

dot1dPortOutboundAccessPriorityEntry OBJECT-TYPE
    SYNTAX  Dot1dPortOutboundAccessPriorityEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "Regenerated User Priority to Outbound Access
            Priority mapping."
    INDEX   { dot1dBasePort, dot1dRegenUserPriority }
    ::= { dot1dPortOutboundAccessPriorityTable 1 }

Dot1dPortOutboundAccessPriorityEntry ::=
    SEQUENCE {
        dot1dPortOutboundAccessPriority
            INTEGER
    }

dot1dPortOutboundAccessPriority OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The Outbound Access Priority the received frame is
            mapped to."
    ::= { dot1dPortOutboundAccessPriorityEntry 1 }

-- ------------------------------------------------------------
-- the dot1dGarp group
-- ------------------------------------------------------------

-- ------------------------------------------------------------
-- The GARP Port Table
-- ------------------------------------------------------------

dot1dPortGarpTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1dPortGarpEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A table of GARP control information about every
            bridge port.  Augments the dot1dBasePortTable."



Bell, et al.             Expires September 1998        [Page 24]        









    ::= { dot1dGarp 1 }

dot1dPortGarpEntry OBJECT-TYPE
    SYNTAX  Dot1dPortGarpEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "GARP control information for a bridge port."
    INDEX  { dot1dBasePort }
    ::= { dot1dPortGarpTable 1 }

Dot1dPortGarpEntry ::=
    SEQUENCE {
        dot1dPortGarpAdminStatus
            EnabledStatus,
        dot1dPortGarpOperStatus
            EnabledStatus,
        dot1dPortGarpJoinTime
            Timeout,
        dot1dPortGarpLeaveTime
            Timeout,
        dot1dPortGarpLeaveAllTime
            Timeout
    }

dot1dPortGarpAdminStatus OBJECT-TYPE
    SYNTAX  EnabledStatus
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The administrative status requested by management
            for GARP, on this port.  The value enabled(1)
            indicates that GARP should be enabled on this port,
            in all VLANs, if GARP has also been enabled for this
            device.  When disabled(2), all GARP applications are
            disabled, in all VLANs, on this port.
            The default value is enabled(1)."
    ::= { dot1dPortGarpEntry 1 }

dot1dPortGarpOperStatus OBJECT-TYPE
    SYNTAX  EnabledStatus
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The current operational status of GARP on this
            port."
    ::= { dot1dPortGarpEntry 2 }



Bell, et al.             Expires September 1998        [Page 25]        









dot1dPortGarpJoinTime OBJECT-TYPE
    SYNTAX  Timeout
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The GARP Join time, in centiseconds.
            Default value 20."
    ::= { dot1dPortGarpEntry 3 }

dot1dPortGarpLeaveTime OBJECT-TYPE
    SYNTAX  Timeout
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The GARP Leave time, in centiseconds.
            Default value 60."
    ::= { dot1dPortGarpEntry 4 }

dot1dPortGarpLeaveAllTime OBJECT-TYPE
    SYNTAX  Timeout
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The GARP LeaveAll time, in centiseconds.
            Default value 1000."
    ::= { dot1dPortGarpEntry 5 }

-- ------------------------------------------------------------
-- The GMRP Port Configuration and Status Table
-- ------------------------------------------------------------

dot1dPortGmrpTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1dPortGmrpEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A table of GMRP control and status information
            about every bridge port.  Augments the
            dot1dBasePortTable."
    ::= { dot1dGmrp 1 }

dot1dPortGmrpEntry OBJECT-TYPE
    SYNTAX  Dot1dPortGmrpEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "GMRP control and status information for a bridge



Bell, et al.             Expires September 1998        [Page 26]        









            port."
    INDEX  { dot1dBasePort }
    ::= { dot1dPortGmrpTable 1 }

Dot1dPortGmrpEntry ::=
    SEQUENCE {
        dot1dPortGmrpAdminStatus
            EnabledStatus,
        dot1dPortGmrpOperStatus
            EnabledStatus,
        dot1dPortGmrpFailedRegistrations
            Counter,
        dot1dPortGmrpLastPduOrigin
            MacAddress
    }

dot1dPortGmrpAdminStatus OBJECT-TYPE
    SYNTAX  EnabledStatus
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The administrative status requested by management
            for GMRP, on this port.  The value enabled(1)
            indicates that GMRP should be enabled on this port,
            in all VLANs, if GMRP is also enabled for this
            device.  When disabled(2), GMRP is disabled on this
            port, in all VLANs.
            The default value is enabled(1)."
    ::= { dot1dPortGmrpEntry 1 }

dot1dPortGmrpOperStatus OBJECT-TYPE
    SYNTAX  EnabledStatus
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The current operational status of GMRP on this
            port."
    ::= { dot1dPortGmrpEntry 2 }

dot1dPortGmrpFailedRegistrations OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The total number of failed GMRP registrations,
            for any reason, in all VLANs, on this port."
    ::= { dot1dPortGmrpEntry 3 }



Bell, et al.             Expires September 1998        [Page 27]        









dot1dPortGmrpLastPduOrigin OBJECT-TYPE
    SYNTAX  MacAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The Source MAC Address of the last GMRP message
            received on this port."
    ::= { dot1dPortGmrpEntry 4 }

END








































Bell, et al.             Expires September 1998        [Page 28]        









9.  Definitions for virtual bridge MIB

-- ------------------------------------------------------------
-- IEEE 802.1Q MIB
-- ------------------------------------------------------------

Q-BRIDGE-MIB DEFINITIONS ::= BEGIN

IMPORTS
    Counter, TimeTicks
        FROM RFC1155-SMI
    OBJECT-TYPE
        FROM RFC-1212
    DisplayString
        FROM RFC1213-MIB
    RowStatus, TruthValue
        FROM SNMPv2-TC
    Counter64
        FROM SNMPv2-SMI
    InterfaceIndex
        FROM IF-MIB
    MacAddress, dot1dBasePort, dot1dBridge
        FROM BRIDGE-MIB
    EnabledStatus
        FROM P-BRIDGE-MIB;

-- ------------------------------------------------------------
-- Textual Conventions
-- ------------------------------------------------------------

PortList ::= OCTET STRING       -- Each octet within this value
                                -- specifies a set of eight
-- ports, with the first octet specifying ports 1 through 8,
-- the second octet specifying ports 9 through 16, etc.  Within
-- each octet, the most significant bit represents the lowest
-- numbered port, and the least significant bit represents the
-- highest numbered port.  Thus, each port of the bridge is
-- represented by a single bit within the value of this object.
-- If that bit has a value of '1' then that port is included in
-- the set of ports; the port is not included if its bit has a
-- value of '0'.  The default value of this object is a string
-- of ones of appropriate length.

VlanIfIndex ::= InterfaceIndex  -- The value of the instance of
                                -- the ifIndex object, defined
-- in MIB-II, for the interface corresponding to a given VLAN.




Bell, et al.             Expires September 1998        [Page 29]        









VlanId ::= INTEGER (1..4094)    -- The 12-bit VLAN ID used in
                                -- the VLAN Tag header.

-- ------------------------------------------------------------
-- groups in the Q-BRIDGE MIB
-- ------------------------------------------------------------

dot1qBridge     OBJECT IDENTIFIER ::= { dot1dBridge 7 }

dot1qBase       OBJECT IDENTIFIER ::= { dot1qBridge 1 }
dot1qTp         OBJECT IDENTIFIER ::= { dot1qBridge 2 }
dot1qStatic     OBJECT IDENTIFIER ::= { dot1qBridge 3 }
dot1qVlan       OBJECT IDENTIFIER ::= { dot1qBridge 4 }

-- ------------------------------------------------------------

-- ------------------------------------------------------------
-- dot1qBase group
-- ------------------------------------------------------------

dot1qVlanVersionNumber OBJECT-TYPE
    SYNTAX  INTEGER {
                version1(1)
            }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The version number of IEEE 802.1Q that this device
            supports."
    REFERENCE
            "IEEE 802.1Q/D9 12.10.1.1"
    ::= { dot1qBase 1 }

dot1qMaxVlanId OBJECT-TYPE
    SYNTAX  VlanId
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The maximum IEEE 802.1Q VLAN ID that this device
            supports."
    REFERENCE
            "IEEE 802.1Q/D9 9.3.2.3"
    ::= { dot1qBase 2 }

dot1qMaxSupportedVlans OBJECT-TYPE
    SYNTAX  INTEGER (1..4094)
    ACCESS  read-only



Bell, et al.             Expires September 1998        [Page 30]        









    STATUS  mandatory
    DESCRIPTION
            "The maximum number of IEEE 802.1Q VLANs that this
            device supports."
    REFERENCE
            "IEEE 802.1Q/D9 12.10.1.1"
    ::= { dot1qBase 3 }

dot1qNumVlans OBJECT-TYPE
    SYNTAX  INTEGER (1..4094)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The current number of IEEE 802.1Q VLANs that are
            configured in this device."
    REFERENCE
            "IEEE 802.1Q/D9 12.7.1.1"
    ::= { dot1qBase 4 }

dot1qResetToDefaults OBJECT-TYPE
    SYNTAX  TruthValue
    ACCESS  write-only
    STATUS  mandatory
    DESCRIPTION
            "Writing the value true(1) causes this device to
            reset its 802.1Q parameters to their power-on
            initial values.  Writing the value false(2) has no
            effect.  This object always returns false(2) if
            read."
    REFERENCE
            "IEEE 802.1Q/D9 12.10.1.5"
    ::= { dot1qBase 5 }

dot1dGvrpAdminStatus OBJECT-TYPE
    SYNTAX  EnabledStatus
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The administrative status requested by management
            for GVRP.  The value enabled(1) indicates that GVRP
            should be enabled on this device, on all ports for
            which it has not been specifically disabled, if GARP
            is also enabled for this device.  When disabled(2),
            GVRP is disabled, on all ports.  The default value
            is enabled(1)."
    ::= { dot1qBase 6 }




Bell, et al.             Expires September 1998        [Page 31]        









dot1dGvrpOperStatus OBJECT-TYPE
    SYNTAX  EnabledStatus
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The current operational status of GVRP on this
            device."
    ::= { dot1qBase 7 }

dot1qNextFreeFdbId OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The next available Filtering Database Identity that
            may be used to create a new FDB.  The value 0
            indicates that no more Filtering Databases may be
            created on this device."
    ::= { dot1qBase 8 }

-- ------------------------------------------------------------
-- the dot1qTp group
-- Implementation of this group is mandatory for those devices
-- that support the IEEE 802.1Q standard.
-- ------------------------------------------------------------

dot1qTpFdbClear OBJECT-TYPE
    SYNTAX  TruthValue
    ACCESS  write-only
    STATUS  mandatory
    DESCRIPTION
            "Writing true(1) to this object discards all MAC
            addresses learnt in all Filtering Databases on this
            device.  Writing the value false(2) has no effect.
            This object always returns false(2) if read."
    REFERENCE
            "IEEE 802.1Q/D9: Section 12.4.1.4"
    ::= { dot1qTp 1 }

-- ------------------------------------------------------------
-- the current Filtering Database Table
-- ------------------------------------------------------------

dot1qFdbTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1qFdbEntry
    ACCESS  not-accessible
    STATUS  mandatory



Bell, et al.             Expires September 1998        [Page 32]        









    DESCRIPTION
            "A table that contains configuration and control
            information for each Filtering Database currently
            operating on this device.  Entries in this table
            appear automatically when VLANs are assigned FDB IDs
            in the dot1qVlanStaticTable."
    ::= { dot1qTp 2 }

dot1qFdbEntry OBJECT-TYPE
    SYNTAX  Dot1qFdbEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "Information about a specific Filtering Database."
    INDEX   { dot1qFdbId }
    ::= { dot1qFdbTable 1 }

Dot1qFdbEntry ::=
    SEQUENCE {
        dot1qFdbId
            INTEGER,
        dot1qFdbClear
            TruthValue,
        dot1qFdbAgingTime
            INTEGER
    }

dot1qFdbId OBJECT-TYPE
    SYNTAX   INTEGER
    ACCESS   not-accessible
    STATUS   mandatory
    DESCRIPTION
            "The identity of this Filtering Database."
    ::= { dot1qFdbEntry 1 }

dot1qFdbClear OBJECT-TYPE
    SYNTAX   TruthValue
    ACCESS   write-only
    STATUS   mandatory
    DESCRIPTION
            "Writing true(1) to this object discards all MAC
            addresses learnt in this Filtering Database.
            Writing the value false(2) has no effect.  This
            object always returns false(2) if read."
    REFERENCE
            "IEEE 802.1Q/D9: Section 12.4.1.4"
    ::= { dot1qFdbEntry 2 }



Bell, et al.             Expires September 1998        [Page 33]        









dot1qFdbAgingTime OBJECT-TYPE
    SYNTAX   INTEGER (10..1000000)
    ACCESS   read-write
    STATUS   mandatory
    DESCRIPTION
            "The timeout period in seconds for aging out
            dynamically learned forwarding information.
            802.1D recommends a default of 300 seconds."
    REFERENCE
            "IEEE 802.1Q/D9: Section 12.7.1.1"
    ::= { dot1qFdbEntry 3 }

-- ------------------------------------------------------------
-- Multiple Forwarding Databases for 802.1Q Transparent devices
-- This table is an alternative to the dot1dTpFdbTable,
-- previously defined for 802.1D devices which only support a
-- single Forwarding Database.
-- ------------------------------------------------------------

dot1qTpFdbTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1qTpFdbEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A table that contains information about unicast
            entries for which the device has forwarding and/or
            filtering information.  This information is used by
            the transparent bridging function in determining
            how to propagate a received frame."
    REFERENCE
            "IEEE 802.1Q/D9 12.7.7"
    ::= { dot1qTp 3 }

dot1qTpFdbEntry OBJECT-TYPE
    SYNTAX  Dot1qTpFdbEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "Information about a specific unicast MAC address
            for which the device has some forwarding and/or
            filtering information."
    INDEX   { dot1qFdbId, dot1qTpFdbAddress }
    ::= { dot1qTpFdbTable 1 }

Dot1qTpFdbEntry ::=
    SEQUENCE {
        dot1qTpFdbAddress



Bell, et al.             Expires September 1998        [Page 34]        









            MacAddress,
        dot1qTpFdbPort
            INTEGER,
        dot1qTpFdbStatus
            INTEGER
    }

dot1qTpFdbAddress OBJECT-TYPE
    SYNTAX  MacAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "A unicast MAC address for which the device has
            forwarding and/or filtering information."
    ::= { dot1qTpFdbEntry 1 }

dot1qTpFdbPort OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "Either the value '0', or the port number of the
            port on which a frame having a source address
            equal to the value of the corresponding instance
            of dot1qTpFdbAddress has been seen.  A value of
            '0' indicates that the port number has not been
            learned but that the device does have some
            forwarding/filtering information about this
            address (e.g. in the dot1qStaticTable).
            Implementors are encouraged to assign the port
            value to this object whenever it is learned even
            for addresses for which the corresponding value of
            dot1qTpFdbStatus is not learned(3)."
    ::= { dot1qTpFdbEntry 2 }

dot1qTpFdbStatus OBJECT-TYPE
    SYNTAX  INTEGER {
                other(1),
                invalid(2),
                learned(3),
                self(4),
                mgmt(5)
            }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The status of this entry.  The meanings of the



Bell, et al.             Expires September 1998        [Page 35]        









            values are:
                other(1) - none of the following.  This would
                    include the case where some other MIB object
                    (not the corresponding instance of
                    dot1qTpFdbPort, nor an entry in the
                    dot1qStaticTable) is being used to determine
                    if and how frames addressed to the value of
                    the corresponding instance of
                    dot1qTpFdbAddress are being forwarded.
                invalid(2) - this entry is no longer valid
                    (e.g., it was learned but has since aged
                    out), but has not yet been flushed from the
                    table.
                learned(3) - the value of the corresponding
                    instance of dot1qTpFdbPort was learned, and
                    is being used.
                self(4) - the value of the corresponding
                    instance of dot1qTpFdbAddress represents
                    one of the device's addresses.  The
                    corresponding instance of dot1qTpFdbPort
                    indicates which of the device's ports has
                    this address.
                mgmt(5) - the value of the corresponding
                    instance of dot1qTpFdbAddress is also the
                    value of an existing instance of
                    dot1qStaticAddress."
    ::= { dot1qTpFdbEntry 3 }

-- ------------------------------------------------------------
-- Dynamic Group Registration Table
-- ------------------------------------------------------------

dot1qTpGroupTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1qTpGroupEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A table containing filtering information for each
            VLAN, configured into the bridge by (local or
            network) management, or learnt by dynamically,
            specifying the set of ports to which frames received
            on a specific VLAN and containing a specific Group
            destination address are allowed to be forwarded."
    ::= { dot1qTp 4 }

dot1qTpGroupEntry OBJECT-TYPE
    SYNTAX  Dot1qTpGroupEntry



Bell, et al.             Expires September 1998        [Page 36]        









    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "Filtering information configured into the bridge
            by management, or learnt dynamically, specifying
            the set of ports to which frames received on a
            specific VLAN and containing a specific Group
            destination address, are allowed to be forwarded.
            The set of ports to which this Group address will be
            forwarded, learnt dynamically by the stated method,
            is also given."
    INDEX   { dot1qFdbId, dot1qTpGroupAddress }
    ::= { dot1qTpGroupTable 1 }

Dot1qTpGroupEntry ::=
    SEQUENCE {
        dot1qTpGroupAddress
            MacAddress,
        dot1qTpGroupAllowedToGoTo
            PortList,
        dot1qTpGroupGmrp
            PortList,
        dot1qTpGroupIgmp
            PortList
    }

dot1qTpGroupAddress OBJECT-TYPE
    SYNTAX  MacAddress
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "The destination Group MAC address in a frame to
            which this entry's filtering information applies."
    ::= { dot1qTpGroupEntry 1 }

dot1qTpGroupAllowedToGoTo OBJECT-TYPE
    SYNTAX  PortList
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The set of ports learnt by the stated method, in
            this VLAN, to which frames destined for a specific
            Group MAC address, are allowed to be forwarded."
    ::= { dot1qTpGroupEntry 2 }

dot1qTpGroupGmrp OBJECT-TYPE
    SYNTAX  PortList



Bell, et al.             Expires September 1998        [Page 37]        









    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The set of ports learnt by the stated method, in
            this VLAN, to which frames destined for a specific
            Group MAC address, are allowed to be forwarded."
    ::= { dot1qTpGroupEntry 3 }

dot1qTpGroupIgmp OBJECT-TYPE
    SYNTAX  PortList
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The set of ports learnt by the stated method, in
            this VLAN, to which frames destined for a specific
            Group MAC address, are allowed to be forwarded."
    ::= { dot1qTpGroupEntry 4 }

-- ------------------------------------------------------------
-- The Static (Destination-Address Filtering) Database
-- Implementation of this group is optional.
-- ------------------------------------------------------------

dot1qStaticTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1qStaticEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A table containing filtering information for each
            Filtering Database, configured into the device by
            (local or network) management specifying the set of
            ports to which frames received from specific ports
            and containing specific destination addresses are
            allowed to be forwarded.  The value of zero in this
            table as the port number from which frames with a
            specific destination address are received, is used
            to specify all ports for which there is no specific
            entry in this table for that particular
            destination address.  Entries are valid for
            unicast and for group/broadcast addresses."
    REFERENCE
            "IEEE 802.1Q/D9 12.7.7"
    ::= { dot1qStatic 1 }

dot1qStaticEntry OBJECT-TYPE
    SYNTAX  Dot1qStaticEntry
    ACCESS  not-accessible



Bell, et al.             Expires September 1998        [Page 38]        









    STATUS  mandatory
    DESCRIPTION
            "Filtering information configured into the device
            by (local or network) management specifying the
            set of ports to which frames received from a
            specific port and containing a specific
            destination address are allowed to be forwarded."
    INDEX   {
        dot1qFdbId,
        dot1qStaticAddress,
        dot1qStaticReceivePort
    }
    ::= { dot1qStaticTable 1 }

Dot1qStaticEntry ::=
    SEQUENCE {
        dot1qStaticAddress
            MacAddress,
        dot1qStaticReceivePort
            INTEGER,
        dot1qStaticAllowedToGoTo
            PortList,
        dot1qStaticStatus
            INTEGER
    }

dot1qStaticAddress OBJECT-TYPE
    SYNTAX  MacAddress
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The destination MAC address in a frame to which
            this entry's filtering information applies.  This
            object can take the value of a unicast address, a
            group address or the broadcast address.  This value
            may only be written when the entry is created."
    ::= { dot1qStaticEntry 1 }

-- ------------------------------------------------------------
-- This is not defined in 802.1Q/D9 - see section 12.7.7.
-- Do we need it?
-- ------------------------------------------------------------

dot1qStaticReceivePort OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  not-accessible
    STATUS  mandatory



Bell, et al.             Expires September 1998        [Page 39]        









    DESCRIPTION
            "Either the value '0', or the port number of the
            port from which a frame must be received in order
            for this entry's filtering information to apply.
            A value of zero indicates that this entry applies
            on all ports of the device for which there is no
            other applicable entry."
    ::= { dot1qStaticEntry 2 }

dot1qStaticAllowedToGoTo OBJECT-TYPE
    SYNTAX  PortList
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The set of ports to which frames received from a
            specific port and destined for a specific MAC
            address, are allowed to be forwarded.  The default
            value of this object is a string of ones of
            appropriate length."
    ::= { dot1qStaticEntry 3 }

dot1qStaticStatus OBJECT-TYPE
    SYNTAX  INTEGER {
                other(1),
                invalid(2),
                permanent(3),
                deleteOnReset(4),
                deleteOnTimeout(5)
            }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "This object indicates the status of this entry.
            The default value is permanent(3).
                other(1) - this entry is currently in use but
                    the conditions under which it will remain
                    so differ from the following values.
                invalid(2) - writing this value to the object
                    removes the corresponding entry.
                permanent(3) - this entry is currently in use
                    and will remain so after the next reset of
                    the bridge.
                deleteOnReset(4) - this entry is currently in
                    use and will remain so until the next
                    reset of the bridge.
                deleteOnTimeout(5) - this entry is currently in
                   use and will remain so until it is aged out."



Bell, et al.             Expires September 1998        [Page 40]        









    ::= { dot1qStaticEntry 4 }

-- ------------------------------------------------------------
-- The Static VLAN Database
-- Implementation of this group is optional.
-- ------------------------------------------------------------

dot1qVlanStaticTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1qVlanStaticEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A table containing static configuration information
            for each VLAN configured into the device by (local
            or network) management."
    ::= { dot1qVlan 1 }

dot1qVlanStaticEntry OBJECT-TYPE
    SYNTAX  Dot1qVlanStaticEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "Static information for a VLAN configured into the
            device by (local or network) management."
    INDEX   { dot1qVlanIfIndex }
    ::= { dot1qVlanStaticTable 1 }

Dot1qVlanStaticEntry ::=
    SEQUENCE {
        dot1qVlanIfIndex
            VlanIfIndex,
        dot1qVlanStaticTag
            INTEGER,
        dot1qVlanStaticFdb
            INTEGER,
        dot1qVlanStaticName
            DisplayString,
        dot1qVlanFixedPorts
            PortList,
        dot1qVlanForbiddenPorts
            PortList,
        dot1qVlanAdminUntaggedPorts
            PortList,
        dot1qVlanStaticRowStatus
            RowStatus
    }




Bell, et al.             Expires September 1998        [Page 41]        









dot1qVlanIfIndex OBJECT-TYPE
    SYNTAX  VlanIfIndex
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "The ifIndex value refering to the ifTable entry for
            the virtual interface presented by this VLAN."
    ::= { dot1qVlanStaticEntry 1 }

dot1qVlanStaticTag OBJECT-TYPE
    SYNTAX  INTEGER (0|1..4094)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The VLAN ID used in the VLAN Tag for this VLAN.
            A value of 0 indicates none has been assigned.
            This may only be written as the row is created."
    REFERENCE
            "IEEE 802.1Q/D9: Section 12.7.7.3"
    ::= { dot1qVlanStaticEntry 2 }

dot1qVlanStaticFdb OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The Filtering Database used by this VLAN.  This is
            one of the dot1qFdbId values in the dot1qFdbTable."
    ::= { dot1qVlanStaticEntry 3 }

dot1qVlanStaticName OBJECT-TYPE
    SYNTAX  DisplayString (SIZE (0..32))
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "This is reflected back (as read-only) in the
            ifDescr field for the ifTable entry for this VLAN
            referenced by dot1qVlanIfIndex."
    REFERENCE
            "IEEE 802.1Q/D9 12.10.2.1"
    ::= { dot1qVlanStaticEntry 4 }

dot1qVlanFixedPorts OBJECT-TYPE
    SYNTAX  PortList
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION



Bell, et al.             Expires September 1998        [Page 42]        









            "The set of ports which are permanently assigned to
            this VLAN by management."
    REFERENCE
            "IEEE 802.1Q/D9 12.7.7.3"
    ::= { dot1qVlanStaticEntry 5 }

dot1qVlanForbiddenPorts OBJECT-TYPE
    SYNTAX  PortList
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The set of ports which are prohibited from joining
            this VLAN by management."
    REFERENCE
            "IEEE 802.1Q/D9: Section 12.7.7.3"
    ::= { dot1qVlanStaticEntry 6 }

dot1qVlanAdminUntaggedPorts OBJECT-TYPE
    SYNTAX  PortList
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The set of ports which should transmit traffic for
            this VLAN as untagged frames."
    REFERENCE
            "IEEE 802.1Q/D9 12.10.2.1"
    ::= { dot1qVlanStaticEntry 7 }

dot1qVlanStaticRowStatus OBJECT-TYPE
    SYNTAX  RowStatus
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "This object indicates the status of this entry.
             Normal row creation semantics apply.  All entries
             are created as permanent."
    ::= { dot1qVlanStaticEntry 8 }

-- ------------------------------------------------------------
-- The Current VLAN Database
-- ------------------------------------------------------------

dot1qVlanTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1qVlanEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION



Bell, et al.             Expires September 1998        [Page 43]        









            "A table containing current configuration information
            for each VLAN currently configured into the device by
            (local or network) management, or dynamically created
            as a result of GVRP requests receeived."
    ::= { dot1qVlan 2 }

dot1qVlanEntry OBJECT-TYPE
    SYNTAX  Dot1qVlanEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "Information for a VLAN configured into the device by
            (local or network) management, or dynamically created
            as a result of GVRP requests receeived."
    INDEX   { dot1qVlanIfIndex }
    ::= { dot1qVlanTable 1 }

Dot1qVlanEntry ::=
    SEQUENCE {
        dot1qVlanTag
            INTEGER,
        dot1qVlanFdbId
            INTEGER,
        dot1qVlanOperEgressPorts
            PortList,
        dot1qVlanOperUntaggedPorts
            PortList,
        dot1qVlanBridgeUpTime
            TimeTicks,
        dot1qVlanStatus
            INTEGER
    }

dot1qVlanTag OBJECT-TYPE
    SYNTAX  INTEGER (0..4094)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The VLAN ID used in the VLAN Tag for this VLAN.
            A value of 0 indicates none has been assigned."
    ::= { dot1qVlanEntry 1 }

dot1qVlanFdbId OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION



Bell, et al.             Expires September 1998        [Page 44]        









            "The Filtering Database used by this VLAN.  This is
            one of the dot1qFdbId values in the dot1qFdbTable."
    ::= { dot1qVlanEntry 2 }

dot1qVlanOperEgressPorts OBJECT-TYPE
    SYNTAX  PortList
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The set of ports which are transmitting traffic for
            this VLAN as either tagged or untagged frames."
    REFERENCE
            "IEEE 802.1Q/D9 12.10.2.1"
    ::= { dot1qVlanEntry 3 }

dot1qVlanOperUntaggedPorts OBJECT-TYPE
    SYNTAX  PortList
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The set of ports which are transmitting traffic for
            this VLAN as untagged frames."
    REFERENCE
            "IEEE 802.1Q/D9 12.10.2.1"
    ::= { dot1qVlanEntry 4 }

-- ------------------------------------------------------------
-- Do we need this Bridge Up time?
-- ------------------------------------------------------------

dot1qVlanBridgeUpTime OBJECT-TYPE
    SYNTAX  TimeTicks
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The sysUpTime value when this entry was created."
    ::= { dot1qVlanEntry 5 }

dot1qVlanStatus OBJECT-TYPE
    SYNTAX  INTEGER {
                other(1),
                permanent(2),
                dynamicGvrp(3)
            }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION



Bell, et al.             Expires September 1998        [Page 45]        









            "This object indicates the status of this entry.
                other(1) - this entry is currently in use but
                    the conditions under which it will remain
                    so differ from the following values.
                permanent(2) - this entry is currently in use
                    and will remain so after the next reset of
                    the device.
                dynamicGvrp(3) - this entry is currently in use
                    and will remain so until removed by GVRP,
                    or until removed by management."
    ::= { dot1qVlanEntry 6 }

-- ------------------------------------------------------------
-- The VLAN Port Configuration Table
-- ------------------------------------------------------------

dot1qPortVlanTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1qPortVlanEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A table containing per port control and status
            information for VLAN configuration in the device."
    ::= { dot1qVlan 3 }

dot1qPortVlanEntry OBJECT-TYPE
    SYNTAX  Dot1qPortVlanEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "Information controlling VLAN configuration for a
            port on the device."
    INDEX   { dot1dBasePort }
    ::= { dot1qPortVlanTable 1 }

Dot1qPortVlanEntry ::=
    SEQUENCE {
        dot1qPvid
            VlanId,
        dot1qPortGvrpAdminStatus
            EnabledStatus,
        dot1qPortGvrpOperStatus
            EnabledStatus,
        dot1qPortAcceptableFrameTypes
            INTEGER,
        dot1qPortIngressFiltering
            TruthValue,



Bell, et al.             Expires September 1998        [Page 46]        









        dot1qPortGvrpFailedRegistrations
            Counter,
        dot1qPortGvrpLastPduOrigin
            MacAddress
    }

dot1qPvid OBJECT-TYPE
    SYNTAX  VlanId
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The PVID, the VLAN ID assigned to untagged frames
            or Prority-Tagged frames received on this port.
            Default value is 1."
    REFERENCE
            "IEEE 802.1Q/D9 12.10.1.1"
    ::= { dot1qPortVlanEntry 1 }

dot1qPortGvrpAdminStatus OBJECT-TYPE
    SYNTAX  EnabledStatus
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The administrative status requested by management
            for GVRP, on this port.  The value enabled(1)
            indicates that GVRP should be enabled on this port,
            if GVRP is also enabled for this device.  When
            disabled(2), GVRP is disabled on this port.  The
            default value is enabled(1)."
    ::= { dot1qPortVlanEntry 2 }

dot1qPortGvrpOperStatus OBJECT-TYPE
    SYNTAX  EnabledStatus
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The current operational status of GVRP on this
            port."
    ::= { dot1qPortVlanEntry 3 }

dot1qPortAcceptableFrameTypes OBJECT-TYPE
    SYNTAX  INTEGER {
                admitOnlyVlanTagged(1),
                admitAll(2)
            }
    ACCESS  read-write
    STATUS  mandatory



Bell, et al.             Expires September 1998        [Page 47]        









    DESCRIPTION
            "When this is admitOnlyVlanTagged(1) the device will
            discard untagged frames or Prority-Tagged frames
            received on this port.  When admitAll(2), untagged
            frames or Prority-Tagged frames received on this
            port will be accepted and assigned to the PVID for
            this port.  The default value is admitAll(2).

            This control does not affect incoming BPDU frames,
            such as GARP and STP."
    REFERENCE
            "IEEE 802.1Q/D9 12.10.1.3"
    ::= { dot1qPortVlanEntry 4 }

dot1qPortIngressFiltering OBJECT-TYPE
    SYNTAX  TruthValue
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "When this is true(1) the device will discard
            incoming frames for VLANs not in the port egress
            filters.  When false(2), the port will accept all
            incoming frames.  The default value is false(2).

            This control does not affect incoming BPDU frames,
            such as GARP and STP."
    REFERENCE
            "IEEE 802.1Q/D9 12.10.1.4"
    ::= { dot1qPortVlanEntry 5 }

dot1qPortGvrpFailedRegistrations OBJECT-TYPE
    SYNTAX  Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The total number of failed GVRP registrations,
            for any reason, on this port."
    ::= { dot1qPortVlanEntry 6 }

dot1qPortGvrpLastPduOrigin OBJECT-TYPE
    SYNTAX  MacAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The Source MAC Address of the last GVRP message
            received on this port."
    ::= { dot1qPortVlanEntry 7 }



Bell, et al.             Expires September 1998        [Page 48]        









-- ------------------------------------------------------------
-- Per port VLAN Statistics Table
-- Implementation of this group is optional.
-- ------------------------------------------------------------

dot1qPortVlanStatisticsTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1qPortVlanStatisticsEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A table containing per port, per VLAN statistics
            for traffic received."
    REFERENCE
            "IEEE 802.1Q/D9: Section 12.6.1"
    ::= { dot1qVlan 4 }

dot1qPortVlanStatisticsEntry OBJECT-TYPE
    SYNTAX  Dot1qPortVlanStatisticsEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "Traffic statistics for a VLAN on a port."
    INDEX   { dot1dBasePort, dot1qVlanIfIndex }
    ::= { dot1qPortVlanStatisticsTable 1 }

Dot1qPortVlanStatisticsEntry ::=
    SEQUENCE {
        dot1qFramesReceived
            Counter64,
        dot1qOctetsReceived
            Counter64,
        dot1qForwardOutbound
            Counter64,
        dot1qDiscardInbound
            Counter64,
        dot1qDiscardNoBuffers
            Counter64,
        dot1qDiscardTransitDelayExceeded
            Counter64,
        dot1qDiscardError
            Counter64,
        dot1qDiscardOnIngressFiltering
            Counter64
    }

dot1qFramesReceived OBJECT-TYPE
    SYNTAX  Counter64



Bell, et al.             Expires September 1998        [Page 49]        









    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The number of frames received
            on this port and VLAN."
    ::= { dot1qPortVlanStatisticsEntry 1 }

dot1qOctetsReceived OBJECT-TYPE
    SYNTAX  Counter64
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The number of octets received
            on this port and VLAN."
    ::= { dot1qPortVlanStatisticsEntry 2 }

dot1qForwardOutbound OBJECT-TYPE
    SYNTAX  Counter64
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The number of frames forwarded
            from this port and VLAN."
    ::= { dot1qPortVlanStatisticsEntry 3 }

dot1qDiscardInbound OBJECT-TYPE
    SYNTAX  Counter64
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The number of inbound frames discarded
            on this port and VLAN."
    ::= { dot1qPortVlanStatisticsEntry 4 }

dot1qDiscardNoBuffers OBJECT-TYPE
    SYNTAX  Counter64
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The number of frames discarded due to lack of
            buffers for this port and VLAN."
    ::= { dot1qPortVlanStatisticsEntry 5 }

dot1qDiscardTransitDelayExceeded OBJECT-TYPE
    SYNTAX  Counter64
    ACCESS  read-only
    STATUS  mandatory



Bell, et al.             Expires September 1998        [Page 50]        









    DESCRIPTION
            "The number of frames discarded by this port and
            VLAN due to excessive transit delay through the
            device."
    ::= { dot1qPortVlanStatisticsEntry 6 }

dot1qDiscardError OBJECT-TYPE
    SYNTAX  Counter64
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The number of frames discarded by this port and
            VLAN due to other errors."
    ::= { dot1qPortVlanStatisticsEntry 7 }

dot1qDiscardOnIngressFiltering OBJECT-TYPE
    SYNTAX  Counter64
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "The number of frames discarded by this port and
            VLAN due to ingress filtering."
    ::= { dot1qPortVlanStatisticsEntry 8 }


-- ------------------------------------------------------------
-- The VLAN Learning Constraints Table
-- -----------------------------------------------------------
-- Editor: This table is defined in a slightly different sense to that
-- in IEEE 802.1Q, combining the two different types of
-- constraint for Independent and Shared into a single table.
-- ------------------------------------------------------------
--
-- Implementation of this table is optional.
--

dot1qLearningConstraintsTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF Dot1qLearningConstraintsEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A table containing learning constraints for sets of
            Shared and Independendent VLANs."
    REFERENCE
            "IEEE 802.1Q/D8 12.10.3.1"
    ::= { dot1qVlan 5 }




Bell, et al.             Expires September 1998        [Page 51]        









dot1qLearningConstraintsEntry OBJECT-TYPE
    SYNTAX  Dot1qLearningConstraintsEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
            "A learning constraint defined for a VLAN."
    INDEX   {
        dot1qConstraintVlan,
        dot1qConstraintSet
    }
    ::= { dot1qLearningConstraintsTable 1 }

Dot1qLearningConstraintsEntry ::=
    SEQUENCE {
        dot1qConstraintVlan
            VlanIfIndex,
        dot1qConstraintSet
            INTEGER,
        dot1qConstraintType
            INTEGER,
        dot1qConstraintStatus
            RowStatus
    }

dot1qConstraintVlan OBJECT-TYPE
    SYNTAX  VlanIfIndex
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The ifIndex value refering to the ifTable entry for
            the virtual interface of the VLAN constrained by
            this entry."
    ::= { dot1qLearningConstraintsEntry 1 }

dot1qConstraintSet OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The identity of the constraint set to which
            dot1qConstraintVlan belongs. These values may
            be chosen by the management station."
    ::= { dot1qLearningConstraintsEntry 2 }

dot1qConstraintType OBJECT-TYPE
    SYNTAX  INTEGER {
                independent(1),



Bell, et al.             Expires September 1998        [Page 52]        









                shared(2)
            }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The type of constraint this entry defines.
                independent(1) - the VLAN, dot1qConstraintVlan,
                    uses an independent filtering database
                    from all other VLANs in the same set,
                    defined by dot1qConstraintIndependentSet.
                shared(2) - the VLANs, dot1qConstraintVlan and
                    dot1qConstraintSharedVlan, use the same
                    filtering database."
    ::= { dot1qLearningConstraintsEntry 3 }

dot1qConstraintStatus OBJECT-TYPE
    SYNTAX  RowStatus
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
            "The status of this entry."
    ::= { dot1qLearningConstraintsEntry 4 }
END



























Bell, et al.             Expires September 1998        [Page 53]        









10.  Acknowledgments

   This document incorporates and expands upon previous work which
   resulted in RFC1493.

   Much of the groundwork for this document was performed by the IEEE
   802.1 working group during the definition of the IEEE 802.1D updates
   [11] and IEEE 802.1Q [12]. Some ideas were also taken from an earlier
   Internet Draft for a VLAN MIB [16] from I. Jeyasubramanian.

   For RFC 1493, over the course of its deliberations, the working group
   received four separate documents for consideration as the basis for
   its work.  The first was submitted by Stan Froyd of Advanced Computer
   Communications; the second by Richard Fox of SynOptics; the third by
   Eric Decker of cisco Inc. and Keith McCloghrie of Hughes LAN Systems;
   and the fourth by Paul Langille and Anil Rijsinghani of Digital
   Equipment Corp. After considering the submissions, the working group
   chose to proceed with a document formed as a conjunction of the
   latter two submissions.  This document is the result.

   The authors wish to thank the members of the Bridge Working Group for
   their many comments and suggestions which improved this effort. In
   particular, Fred Baker (chairman of the working group) of ACC, Steve
   Sherry of Xyplex, and Frank Kastenholz of Clearpoint Research Corp.


11.  References


   [1] Cerf, V., "IAB Recommendations for the Development of Internet
       Network Management Standards", RFC 1052, NRI, April 1988.

   [2] Cerf, V., "Report of the Second Ad Hoc Network Management Review
       Group", RFC 1109, NRI, August 1989.

   [3] Rose M., and K. McCloghrie, "Structure and Identification of
       Management Information for TCP/IP-based internets", STD 16, RFC
       1155, Performance Systems International, Hughes LAN Systems, May
       1990.

   [4] Case, J., Fedor, M., Schoffstall, M., and J. Davin, "Simple
       Network Management Protocol", STD 15, RFC 1157, SNMP Research,
       Performance Systems International, Performance Systems
       International, MIT Laboratory for Computer Science, May 1990.

   [5] McCloghrie K., and M. Rose, Editors, "Management Information Base
       for Network Management of TCP/IP-based internets", STD 17, RFC



Bell, et al.             Expires September 1998        [Page 54]        









       1213, Performance Systems International, March 1991.

   [6] Information processing systems - Open Systems Interconnection -
       Specification of Abstract Syntax Notation One (ASN.1),
       International Organization for Standardization, International
       Standard 8824, December 1987.

   [7] Information processing systems - Open Systems Interconnection -
       Specification of Basic Encoding Rules for Abstract Notation One
       (ASN.1), International Organization for Standardization,
       International Standard 8825, December 1987.

   [8] Rose, M., and K. McCloghrie, Editors, "Concise MIB Definitions",
       STD 16, RFC 1212, Performance Systems International, Hughes LAN
       Systems, March 1991.

   [9] Rose, M., Editor, "A Convention for Defining Traps for use with
       the SNMP", RFC 1215, Performance Systems International, March
       1991.

  [10] ISO/IEC 10038, ANSI/IEEE Std 802.1D-1993 "MAC Bridges".

  [11] ISO/IEC Final CD 15802-3, ANSI/IEEE Std 802.1D-1998 "Information
        technology - Telecommunications and information exchange
        between systems - Local and metropolitan area networks
        - Common specifications - Part 3: Media Access Control
        (MAC) Bridges: Revision (Incorporating IEEE P802.1p:
        Traffic Class Expediting and Dynamic Multicast Filtering)",
        November 1997

  [12] ANSI/IEEE Draft Standard P802.1Q/D9, "IEEE Standards for
        Local and Metropolitan Area Networks: Virtual Bridged
        Local Area Networks", February 1998

  [13] Decker, E., Langille, P., Rijsinghani, A., McCloghrie, K.,
       "Definitions of Managed Objects for Bridges", RFC 1493,
       cisco Systems, Digital Equipment, Hughes LAN Systems, July 1993.

  [14] McCloghrie, K., Kastenholz, F.
       "Evolution of the Interfaces Group of MIB-II", RFC 1573,
       Hughes LAN Systems, FTP Software, January 1994.

  [15] Decker, E., McCloghrie, K., Langille, P., Rijsinghani, A.
       "Definitions of Managed Objects for Source Routing Bridges",
        RFC 1525, cisco Systems, Hughes LAN Systems, Digital Equipment,
        September 1993




Bell, et al.             Expires September 1998        [Page 55]        









  [16] Jeyasubramanian, I., "Definitions of Managed Objects for
       IEEE 802.1q Virtual LAN Bridges",
       draft-jeya-vlan-8021q-mib-01.txt, FSPL, June 1997

  [17] SNMPv2 Working Group, Case, J., McCloghrie, K., Rose, M., and
       S. Waldbusser, "Protocol Operations for version 2 of the Simple
       Network Management Protocol (SNMPv2)", RFC 1905, January 1996.

  [18] SNMPv2 Working Group, Case, J., McCloghrie, K., Rose, M., and
       S. Waldbusser, "Structure of Management Information for version
       2 of the Simple Network Management Protocol (SNMPv2)", RFC 1902,
       January 1996.

  [19] SNMPv2 Working Group, Case, J., McCloghrie, K., Rose, M., and
       S. Waldbusser, "Textual Conventions for version 2 of the Simple
       Network Management Protocol (SNMPv2)", RFC 1903, January 1996.

  [20] SNMPv2 Working Group, Case, J., McCloghrie, K., Rose, M., and
       S. Waldbusser, "Conformance Statements for version 2 of the
       Simple Network Management Protocol (SNMPv2)", RFC 1904,
       January 1996.



12. Security Considerations

   No additional security concerns are introduced due to implementation
   of this MIB module.


13. Authors' addresses

   Les Bell
   3Com Europe Limited
   3Com Centre
   Boundary Way
   Hemel Hempstead
   Herts.  HP2 7YU
   UK
   +44 (1442) 438025
   les_bell@3com.com

   Andrew Smith
   Extreme Networks
   10460 Bandley Drive
   Cupertino CA 95014
   USA



Bell, et al.             Expires September 1998        [Page 56]        









   +1 (408) 342 0999
   andrew@extremenetworks.com

   Paul Langille
   Acacia Networks, Inc.
   650 Suffolk St.
   Lowell, MA 01854
   USA
   +1 (978) 275 0662
   plangille@acacianet.com

   Anil Rijsinghani
   Cabletron Systems
   550 King Street, LKG2-2/Y10
   Littleton, MA 01460-1289
   USA
   +1 (508) 486-6786
   anil@lkg.dec.com

   Keith McCloghrie
   cisco Systems, Inc.
   170 West Tasman Drive
   San Jose, CA 95134-1706
   USA
   +1 (408) 526 5260
   kzm@cisco.com
























Bell, et al.             Expires September 1998        [Page 57]        


