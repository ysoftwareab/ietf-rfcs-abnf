
 Network Working Group                                       R. B. Hibbs
 INTERNET-DRAFT                                             Pacific Bell
                                                               G. Waters
                                                      Bay Networks, Inc.
                                                              April 1998



           Dynamic Host Configuration Protocol (DHCP) Server MIB


                     <draft-ietf-dhc-server-mib-00.txt>
                     Thursday, April 30, 1998, 9:39 AM

 Status of this Memo

   This document is an Internet-Draft.  Internet-Drafts are working
   documents of the Internet Engineering Task Force (IETF), its areas,
   and its working groups.  Note that other groups may also distribute
   working documents as Internet-Drafts.  Internet-Drafts are draft
   documents valid for a maximum of six months and may be updated,
   replaced, or made obsolete by other documents at any time.  It is
   inappropriate to use Internet- Drafts as reference material or to cite
   them other than as "works in progress."  To learn the current status
   of any Internet-Draft, please check the "1id-abstracts.txt" listing
   contained in the Internet-Drafts Shadow Directories on ftp.is.co.za
   (Africa), nic.nordu.net (Europe), munnari.oz.au (Pacific Rim),
   ds.internic.net (US East Coast), or ftp.isi.edu (US West Coast).

 Copyright Notice

   Copyright (C) The Internet Society (1998).  All Rights Reserved.

 Abstract

   This memo defines an experimental portion of the Management
   Information Base (MIB) for use with network management protocols in
   the Internet Community.  In particular, it defines objects used for
   the management of Dynamic Host Configuration Protocol (DHCP) and
   Bootstrap Protocol (BOOTP) servers.
















 Hibbs & Waters           Expires: November 1998                [Page 1]

 Internet Draft              DHCP Server MIB                  April 1998


   Table of Contents

   1. Introduction......................................................2
   2. Overview..........................................................2
      2.1. BOOTP and DHCP Counter Groups................................3
      2.2. BOOTP and DHCP Statistics Group..............................3
      2.3. Server Configuration Group...................................4
      2.4. Response Times and ICMP Echo.................................5
   3. Definitions.......................................................5
   4. Intellectual Property............................................21
   5. Notes............................................................21
      5.1. Issues......................................................21
      5.2. Changes from Prior Drafts...................................22
   6. Acknowledgements.................................................22
   7. Security Considerations..........................................22
   8. References.......................................................22
   9. Editors' Addresses...............................................23
   10. Full Copyright Statement........................................23



 1. Introduction

   This memo was produced by the DHCP Working Group and defines a portion
   of the Management Information Base (MIB) for use with network
   management protocols in the Internet community.  In particular, it
   describes a set of extensions that DHCP and Bootstrap Protocol (BOOTP)
   servers implement.  Many implementations support both DHCP and BOOTP
   within a single server and hence this memo describes the MIB for both
   DHCP and BOOTP servers.

   This memo does not cover DHCP/BOOTP client nor relay agent MIB
   extensions: these are possibly the subjects of future investigation.

   This memo is based on the Internet-standard Network Management
   Framework as defined by [RFC1902, RFC1903, RFC1904].

   Objects defined in this MIB allow access to and control of DHCP Server
   Software.  Servers MAY also provide additional management capabilities
   through the use of the Applications MIB [RFC2287].

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].


 2. Overview

   In the tradition of the Simple Network Management Protocol (SNMP) the
   minimum number of objects possible are defined in this MIB, while
   still providing as rich a set of management information as possible.
   An object is left out of this MIB when it can be derived from other


 Hibbs & Waters           Expires: November 1998                [Page 2]

 Internet Draft              DHCP Server MIB                  April 1998


   objects that are provided.  Further to the tradition of the SNMP,
   computationally intense operations are left to the domain of the
   management station.  Thus, this MIB provides the set of objects from
   which other management information may be derived.

   The examples provided in the following sections are not meant to be
   comprehensive, they are merely illustrative of the potential uses of
   the objects defined by this MIB.

 2.1. BOOTP and DHCP Counter Groups

   This section lists some of the management information that may be
   derived from the objects provided in the counter groups.

   The total number of valid DHCP packets received by the server is
   computed as the sum of the dhcpCountDiscovers, dhcpCountRequests,
   dhcpCountReleases, dhcpCountDeclines, and dhcpCountInforms objects.
   The total number of valid packets (BOOTP and DHCP) received is
   computed as the total number of valid DHCP packets plus the value of
   the bootpCountRequests object.  The total number of packets received
   is computed as the total number of valid packets plus
   bootpCountInvalids and dhcpCountInvalids.

   Similar to the received computations, the total number of DHCP packets
   sent by the server is computed as the sum of the dhcpCountOffers,
   dhcpCountAcks, and dhcpCountNacks objects.  The number of packets
   (BOOTP and DHCP) sent by the server is computed as the total number of
   DHCP packets sent plus the value of the bootpCountReplies object.

 2.2. BOOTP and DHCP Statistics Group

   This section lists some of the other management information that may
   be derived from the objects provided in the statistics group.

   Given time 1 (t1) and time 2 (t2) greater than t1, the mean inter-
   arrival time of valid DHCP messages for the interval t1 to t2 can be
   computed as (dhcpStatLastArrivalTime at t2 minus
   dhcpStatLastArrivalTime at t1) divided by (valid DHCP received packet
   count at t2 minus valid DHCP received packet count at t1).

   Under the simplifying assumption that the capture of packet counts and
   times is discontinuous (that is, for the measurement interval the
   captured data represents the complete set for the server) the variance
   of the mean may be computed as (dhcpStatSumSquaresArrivalTime at t2
   less dhcpStatSumSquaresArrivalTime at t1) divided by (valid DHCP
   received packet count at t2 less valid DHCP received packet count at
   t1).  Standard deviation of the mean is the square root of the
   variance.

   Calculation of statistics for message response time is entirely
   similar to the calculations for inter-arrival time, except that the
   response time objects are used for the calculations.


 Hibbs & Waters           Expires: November 1998                [Page 3]

 Internet Draft              DHCP Server MIB                  April 1998


   Calculation of statistics for BOOTP is similar to the calculations for
   DHCP, except that the similar objects from the bootStatistics group
   are used instead of the objects from dhcpStatistics group.

 2.3. Server Configuration Group

   The server configuration group contains objects that describe the
   configuration information that is contained in the server.  Some of
   the configuration information is static (e.g.: a statically configured
   IP address) and some of the configuration is dynamic (e.g.: an
   assigned DHCP lease).  The intent of the server configuration group is
   to be able to only read the server's configuration since mechanisms
   outside of the SNMP are currently in use (e.g.: vendor defined
   solutions) and are being standardized (e.g.: the Directory Enabled
   Networks [DEN] initiative) to configure a server.

   The configuration information provides a minimal set of information
   that most servers should be able to provide.  Each row of the
   serverSubnetTable lists the subnet, the subnet mask, and the subnet
   that is equivalent to this subnet.  Equivalence is defined as more
   than one subnet being present on the same physical media as some other
   subnet.

   The serverRangeTable lists the start and end IP addresses of the
   ranges and the subnet which the range is a member of.  The
   serverRangeInUse object indicates the amount of the range that is
   currently in use, either through dynamic allocation or being reserved.
   The range size can be computed by taking the difference of the
   serverRangeStart and serverRangeEnd objects.

   The serverAddressTable provides information about the static and
   dynamic addresses that the server contains in its configuration.
   Addresses may be:

   o Static, in which case they are predefined though the server's
     configuration.  Static addresses may or may not have been
     previously served by the server;

   o Dynamic, in which case the server has served the addresses at least
     once.  Leases which have expired MAY appear in the address list;

   o Configuration-reserved, in which case the address is not available
     for the server to allocate to a client.  Examples of configuration-
     reserved addresses are those which are known by an administrator to
     be in use by a client;  and,

   o Server-reserved, in which case the server has taken the address out
     of use.  Examples of server-reserved addresses are those which have
     been declined (i.e.: through a DHCPDECLINE) by a client or those
     which have responded to an ICMP echo before they were assigned.




 Hibbs & Waters           Expires: November 1998                [Page 4]

 Internet Draft              DHCP Server MIB                  April 1998


   The protocol used to allocate the address may be determined from the
   serverAddressServedProtocol object.  This object indicates the address
   has nevel been server (value of none(1)), or, whether BOOTP or DHCP
   was used to allocate the address.

 2.4. Response Times and ICMP Echo

   According to [RFC2131], servers SHOULD try to determine if an address
   is in use before assigning it.  Some servers choose not to perform
   this check, letting the client determine for if the address is in use.
   Other servers perform an ICMP echo (Ping) prior to assigning an
   address.  Servers that perform a Ping before responding to a
   DHCPDISCOVER should not include in the response time the time from
   when the Ping was transmitted until the time that either a response
   was received or that the server timed out waiting for a response.


 3. Definitions

   DHCP-SERVER-MIB DEFINITIONS ::= BEGIN

   IMPORTS
       Counter64, Counter32, Gauge32, Unsigned32, mib-2,
       MODULE-IDENTITY, OBJECT-TYPE, OBJECT-IDENTITY, IpAddress
           FROM SNMPv2-SMI

       TEXTUAL-CONVENTION, RowStatus, DisplayString, TruthValue
           FROM SNMPv2-TC

       MODULE-COMPLIANCE, OBJECT-GROUP
           FROM SNMPv2-CONF

       sysUpTime
           FROM SNMPv2-MIB;


   dhcp OBJECT-IDENTITY
       STATUS  current
       DESCRIPTION
          "The OID assigned to DHCP MIB work by the IANA."
       ::= { mib-2 ?? }  -- IANA will make official assignment

   dhcpServerMib MODULE-IDENTITY
       LAST-UPDATED    " 9804280000Z"
       ORGANIZATION    "IETF DHCP Working Group"
       CONTACT-INFO
          "        Richard Barr Hibbs
          Postal:  Pacific Bell
                   666 Folsom Street, Room 1225
                   San Francisco, CA 94107-1384
                   USA
          Tel:     +1 415-545-1576


 Hibbs & Waters           Expires: November 1998                [Page 5]

 Internet Draft              DHCP Server MIB                  April 1998


          Fax:     +1 415-543-3539
          Email:   rbhibbs@pacbell.com

                   Glenn Waters
          Postal:  Bay Networks, Inc.
                   200-875 Carling Avenue
                   Ottawa, Ontario K1S 5P1
                   Canada
          Tel:     +1 613-798-4925
          Email:   gwaters@baynetworks.com "
       DESCRIPTION
          "The MIB module for entities implementing the server side of
          the Bootstrap Protocol (BOOTP) and the Dynamic Host
          Configuration protocol (DHCP) for Internet Protocol version 4
          (IPv4)."
       ::= { dhcp 1 }

   dhcpServerMibObjects OBJECT-IDENTITY
       STATUS        current
       DESCRIPTION
          "DHCP Server MIB objects are all defined in this branch."
       ::= { dhcpServerMib 1 }

   serverSystem OBJECT-IDENTITY
       STATUS        current
       DESCRIPTION
          "Group of objects that are related to the overall system."
       ::= { dhcpServerMibObjects 1 }

   bootpCounters OBJECT-IDENTITY
       STATUS        current
       DESCRIPTION
          "Group of objects that count various BOOTP events."
       ::= { dhcpServerMibObjects 2 }

   dhcpCounters OBJECT-IDENTITY
       STATUS        current
       DESCRIPTION
          "Group of objects that count various DHCP events."
       ::= { dhcpServerMibObjects 3 }

   bootpStatistics OBJECT-IDENTITY
       STATUS        current
       DESCRIPTION
          "Group of objects that measure various BOOTP statistics."
       ::= { dhcpServerMibObjects 4 }

   dhcpStatistics OBJECT-IDENTITY
       STATUS        current
       DESCRIPTION
          "Group of objects that measure various DHCP statistics."
       ::= { dhcpServerMibObjects 5 }


 Hibbs & Waters           Expires: November 1998                [Page 6]

 Internet Draft              DHCP Server MIB                  April 1998



   serverConfiguration OBJECT-IDENTITY
       STATUS        current
       DESCRIPTION
          "Group of objects that contain pre-configured and dynamic
          configuration information."
       ::= { dhcpServerMibObjects 6 }


   -- Textual conventions defined by this memo

   DhcpTimeInterval ::= TEXTUAL-CONVENTION
       STATUS        current
       DESCRIPTION
          "The number of milli-seconds that has elapsed since some epoch.
          Systems that cannot measure events to the milli-second
          resolution SHOULD round this value to the next available
          resolution that the system supports."
       SYNTAX        Gauge32


   -- serverSystem Group

   serverSystemDescr OBJECT-TYPE
       SYNTAX        DisplayString (SIZE (0..255))
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "A textual description of the server.  This value should
          include the full name and version identification of the server.
          This string MUST contain only printable NVT ASCII characters."
       ::= { serverSystem 1 }

   serverSystemObjectID OBJECT-TYPE
       SYNTAX        OBJECT IDENTIFIER
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The vendor's authoritative identification of the network
          management subsystem contained in this entity.  This value is
          allocated within the SMI enterprise subtree (1.3.6.1.4.1) and
          provides an easy and unambiguous means for determining 'what
          kind of server' is being managed.  For example, if vendor
          'VeryBigServers, Inc.' was assigned the subtree
          1.3.6.1.4.1.4242, it may assign the identifier
          1.3.6.1.4.1.4242.1.1 to its `Hercules DHCP Server'."
       ::= { serverSystem 2 }


   -- bootpCounters Group

   bootpCountRequests OBJECT-TYPE


 Hibbs & Waters           Expires: November 1998                [Page 7]

 Internet Draft              DHCP Server MIB                  April 1998


       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of packets received that contain a Message Type of
          1 (BOOTREQUEST) in the first octet and do not contain option
          number 53 (DHCP Message Type) in the options."
       ::= { bootpCounters 1 }

   bootpCountInvalids OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of packets received that do not contain a Message
          Type of 1 (BOOTREQUEST) in the first octet or are not valid
          BOOTP packets (e.g.: too short, invalid field in packet
          header)."
       ::= { bootpCounters 2 }

   bootpCountReplies OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of packets sent that contain a Message Type of 1
          (BOOTREQUEST) in the first octet and do not contain option
          number 53 (DHCP Message Type) in the options."
       ::= { bootpCounters 3 }

   bootpCountDroppedUnknownClients OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of BOOTP packets dropped due to the server not
          recognizing or not providing service to the hardware address
          received in the incoming packet."
       ::= { bootpCounters 4 }

   bootpCountDroppedNotServingSubnet OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of BOOTP packets dropped due to the server not
          being configured or not otherwise able to serve addresses on
          the subnet from which this message was received."
       ::= { bootpCounters 5 }


   -- dhcpCounters Group


 Hibbs & Waters           Expires: November 1998                [Page 8]

 Internet Draft              DHCP Server MIB                  April 1998



   dhcpCountDiscovers OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of DHCPDISCOVER (option 53 with value 1) packets
          received."
       ::= { dhcpCounters 1 }

   dhcpCountRequests OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of DHCPREQUEST (option 53 with value 3) packets
          received."
       ::= { dhcpCounters 2 }

   dhcpCountReleases OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of DHCPRELEASE (option 53 with value 7) packets
          received."
       ::= { dhcpCounters 3 }

   dhcpCountDeclines OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of DHCPDECLINE (option 53 with value 4) packets
          received."
       ::= { dhcpCounters 4 }

   dhcpCountInforms OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of DHCPINFORM (option 53 with value 8) packets
          received."
       ::= { dhcpCounters 5 }

   dhcpCountInvalids OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION



 Hibbs & Waters           Expires: November 1998                [Page 9]

 Internet Draft              DHCP Server MIB                  April 1998


          "The number of DHCP packets received whose DHCP message type
          (i.e.: option number 53) is not understood or handled by the
          server."
       ::= { dhcpCounters 6 }

   dhcpCountOffers OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of DHCPOFFER (option 53 with value 2) packets
          sent."
       ::= { dhcpCounters 7 }

   dhcpCountAcks OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of DHCPACK (option 53 with value 5) packets sent."
       ::= { dhcpCounters 8 }

   dhcpCountNacks OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of DHCPNACK (option 53 with value 6) packets sent."
       ::= { dhcpCounters 9 }

   dhcpCountDroppedUnknownClient OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of DHCP packets dropped due to the server not
          recognizing or not providing service to the client-id and/or
          hardware address received in the incoming packet."
       ::= { dhcpCounters 10 }

   dhcpCountDroppedNotServingSubnet OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of DHCP packets dropped due to the server not being
          configured or not otherwise able to serve addresses on the
          subnet from which this message was received."
       ::= { dhcpCounters 11 }


   -- bootpStatistics group


 Hibbs & Waters           Expires: November 1998               [Page 10]

 Internet Draft              DHCP Server MIB                  April 1998



   bootpStatMinArrivalInterval OBJECT-TYPE
       SYNTAX        DhcpTimeInterval
       MAX-ACCESS    read-write
       STATUS        current
       DESCRIPTION
          "The minimum amount of time between receiving two BOOTP
          messages.  A message is received at the server when the server
          is able to begin processing the message.  This typically occurs
          immediately after the message is read into server memory.  If
          no messages have been received, then this object contains a
          zero value."
       ::= { bootpStatistics 1 }

   bootpStatMaxArrivalInterval OBJECT-TYPE
       SYNTAX        DhcpTimeInterval
       MAX-ACCESS    read-write
       STATUS        current
       DESCRIPTION
          "The maximum amount of time between receiving two BOOTP
          messages.  A message is received at the server when the server
          is able to begin processing the message.  This typically occurs
          immediately after the message is read into server memory.  If
          no messages have been received, then this object contains a
          zero value."
       ::= { bootpStatistics 2 }

   bootpStatLastArrivalTime OBJECT-TYPE
       SYNTAX        TimeTicks
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The value of sysUpTime at the time the last valid BOOTP
          message was received by the server.  Invalid messages do not
          cause this value to change.  If valid no messages have been
          received, then this object contains a zero value."
       ::= { bootpStatistics 3 }

   bootpStatSumSquaresArrivalTime OBJECT-TYPE
       SYNTAX        Counter64
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The sum of the squared BOOTP packet inter-arrival times in
          micro-seconds. This value may be used to compute the variance
          and standard deviation of the BOOTP arrival times.  Note that a
          micro-second resolution of this object requires a clock
          resolution to the milli-second since the square of a milli-
          second value produces a value with micro-second resolution."
       ::= { bootpStatistics 4 }

   bootpStatMinResponseTime OBJECT-TYPE


 Hibbs & Waters           Expires: November 1998               [Page 11]

 Internet Draft              DHCP Server MIB                  April 1998


       SYNTAX        DhcpTimeInterval
       MAX-ACCESS    read-write
       STATUS        current
       DESCRIPTION
          "The smallest time interval measured as the difference between
          the arrival of a BOOTP message at the server and the successful
          transmission of the response to that message.  A message is
          received at the server when the server is able to begin
          processing the message.  A message is transmitted after the
          server has no further use for the message.  Note that the
          operating system may still have the message queued internally.
          The operating system queue time is not to be considered as part
          of the response time.  Invalid messages do not cause this value
          to change.  If no valid messages have been received, then this
          object contains a zero value."
       ::= { bootpStatistics 5 }

   bootpStatMaxResponseTime OBJECT-TYPE
       SYNTAX        DhcpTimeInterval
       MAX-ACCESS    read-write
       STATUS        current
       DESCRIPTION
          "The largest time interval measured as the difference between
          the arrival of a BOOTP message at the server and the successful
          transmission of the response to that message.  A message is
          received at the server when the server is able to begin
          processing the message.  A message is transmitted after the
          server has no further use for the message.  Note that the
          operating system may still have the message queued internally.
          The operating system queue time is not to be considered as part
          of the response time.  Invalid messages do not cause this value
          to change.  If no valid messages have been received, then this
          object contains a zero value."
       ::= { bootpStatistics 6 }

   bootpStatSumResponseTime OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The sum of the response time intervals in milli-seconds where
          a response time interval is measured as the difference between
          the arrival of a BOOTP message at the server and the successful
          transmission of the response to that message.  A message is
          received at the server when the server is able to begin
          processing the message.  A message is transmitted after the
          server has no further use for the message.  Note that the
          operating system may still have the message queued internally.
          The operating system queue time is not to be considered as part
          of the response time.  Invalid messages do not cause this value
          to change.  If no valid messages have been received, then this
          object contains a zero value."


 Hibbs & Waters           Expires: November 1998               [Page 12]

 Internet Draft              DHCP Server MIB                  April 1998


       ::= { bootpStatistics 7 }

   bootpStatSumSquaresResponseTime OBJECT-TYPE
       SYNTAX        Counter64
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The sum of the squared BOOTP packet response times in micro-
          seconds.  This value may be used to compute the variance and
          standard deviation of the BOOTP response times. Note that a
          micro-second resolution of this object requires a clock
          resolution to the milli-second since the square of a milli-
          second value produces a value with micro-second resolution."
       ::= { bootpStatistics 8 }


   -- dhcpStatistics group

   dhcpStatMinArrivalInterval OBJECT-TYPE
       SYNTAX        DhcpTimeInterval
       MAX-ACCESS    read-write
       STATUS        current
       DESCRIPTION
          "The minimum amount of time between receiving two DHCP
          messages.  A message is received at the server when the server
          is able to begin processing the message.  This typically occurs
          immediately after the message is read into server memory.  If
          no messages have been received, then this object contains a
          zero value."
       ::= { dhcpStatistics 1 }

   dhcpStatMaxArrivalInterval OBJECT-TYPE
       SYNTAX        DhcpTimeInterval
       MAX-ACCESS    read-write
       STATUS        current
       DESCRIPTION
          "The maximum amount of time between receiving two DHCP
          messages.  A message is received at the server when the server
          is able to begin processing the message.  This typically occurs
          immediately after the message is read into server memory.  If
          no messages have been received, then this object contains a
          zero value."
       ::= { dhcpStatistics 2 }

   dhcpStatLastArrivalTime OBJECT-TYPE
       SYNTAX        TimeTicks
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The value of sysUpTime at the time the last valid DHCP message
          was received by the server.  Invalid messages do not cause this



 Hibbs & Waters           Expires: November 1998               [Page 13]

 Internet Draft              DHCP Server MIB                  April 1998


          value to change.  If no valid messages have been received, then
          this object contains a zero value."
       ::= { dhcpStatistics 3 }

   dhcpStatSumSquaresArrivalTime OBJECT-TYPE
       SYNTAX        Counter64
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The sum of the squared DHCP packet inter-arrival times in
          micro-seconds.  This value may be used to compute the variance
          and standard deviation of the DHCP arrival times.   Note that a
          micro-second resolution of this object requires a clock
          resolution to the milli-second since the square of a milli-
          second value produces a value with micro-second resolution."
       ::= { dhcpStatistics 4 }

   dhcpStatMinResponseTime OBJECT-TYPE
       SYNTAX        DhcpTimeInterval
       MAX-ACCESS    read-write
       STATUS        current
       DESCRIPTION
          "The smallest time interval measured as the difference between
          the arrival of a DHCP message at the server and the successful
          transmission of the response to that message.  A message is
          received at the server when the server is able to begin
          processing the message.  A message is transmitted after the
          server has no further use for the message.  Note that the
          operating system may still have the message queued internally.
          The operating system queue time is not to be considered as part
          of the response time.  Invalid messages do not cause this value
          to change.  If no valid messages have been received, then this
          object contains a zero value."
       ::= { dhcpStatistics 5 }

   dhcpStatMaxResponseTime OBJECT-TYPE
       SYNTAX        DhcpTimeInterval
       MAX-ACCESS    read-write
       STATUS        current
       DESCRIPTION
          "The largest time interval measured as the difference between
          the arrival of a DHCP message at the server and the successful
          transmission of the response to that message.  A message is
          received at the server when the server is able to begin
          processing the message.  A message is transmitted after the
          server has no further use for the message.  Note that the
          operating system may still have the message queued internally.
          The operating system queue time is not to be considered as part
          of the response time.  Invalid messages do not cause this value
          to change.  If no valid messages have been received, then this
          object contains a zero value."
       ::= { dhcpStatistics 6 }


 Hibbs & Waters           Expires: November 1998               [Page 14]

 Internet Draft              DHCP Server MIB                  April 1998



   dhcpStatSumResponseTime OBJECT-TYPE
       SYNTAX        Counter32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The sum of the response time intervals in milli-seconds where
          a response time interval is measured as the difference between
          the arrival of a DHCP message at the server and the successful
          transmission of the response to that message.  A message is
          received at the server when the server is able to begin
          processing the message.  A message is transmitted after the
          server has no further use for the message.  Note that the
          operating system may still have the message queued internally.
          The operating system queue time is not to be considered as part
          of the response time.  Invalid messages do not cause this value
          to change.  If no valid messages have been received, then this
          object contains a zero value."
       ::= { dhcpStatistics 7 }

   dhcpStatSumSquaresResponseTime OBJECT-TYPE
       SYNTAX        Counter64
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The sum of the squared DHCP packet response times in micro-
          seconds.  This value may be used to compute the variance and
          standard deviation of the DHCP response times. Note that a
          micro-second resolution of this object requires a clock
          resolution to the milli-second since the square of a milli-
          second value produces a value with micro-second resolution."
       ::= { dhcpStatistics 8 }


   -- serverConfiguration group

   serverSubnetTable OBJECT-TYPE
       SYNTAX        SEQUENCE OF ServerSubnetEntry
       MAX-ACCESS    not-accessible
       STATUS        current
       DESCRIPTION
          "A list of subnets that are configured in this server."
       ::= { serverConfiguration 1 }

   serverSubnetEntry OBJECT-TYPE
       SYNTAX        ServerSubnetEntry
       MAX-ACCESS    not-accessible
       STATUS        current
       DESCRIPTION
          "A logical row in the serverSubnetTable."
       INDEX            { serverSubnet }
       ::= { serverSubnetTable 1 }


 Hibbs & Waters           Expires: November 1998               [Page 15]

 Internet Draft              DHCP Server MIB                  April 1998



   ServerSubnetEntry ::= SEQUENCE {
       serverSubnet           IpAddress,
       serverSubnetMask       IpAddress,
       serverSubnetSharedNet  IpAddress
   }

   serverSubnet OBJECT-TYPE
       SYNTAX        IpAddress
       MAX-ACCESS    not-accessible
       STATUS        current
       DESCRIPTION
          "The IP address of the subnet."
       ::= { serverSubnetEntry 1 }

   serverSubnetMask OBJECT-TYPE
       SYNTAX        IpAddress
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The subnet mask of the subnet."
       ::= { serverSubnetEntry 2 }

   serverSubnetSharedNet OBJECT-TYPE
       SYNTAX        IpAddress
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The IP address of another subnet that is on the same shared
          media as this subnet.  The address of the shared subnet MUST
          also be configured on this server.  The address 0.0.0.0 should
          be used if this subnet is not shared."
       ::= { serverSubnetEntry 3 }

   serverRangeTable OBJECT-TYPE
       SYNTAX        SEQUENCE OF ServerRangeEntry
       MAX-ACCESS    not-accessible
       STATUS        current
       DESCRIPTION
          "A list of ranges that are configured on this server."
       ::= { serverConfiguration 2 }

   serverRangeEntry OBJECT-TYPE
       SYNTAX        ServerRangeEntry
       MAX-ACCESS    not-accessible
       STATUS        current
       DESCRIPTION
          "A logical row in the serverRangeTable."
       INDEX            { serverRangeStart }
       ::= { serverRangeTable 1 }

   ServerRangeEntry ::= SEQUENCE {


 Hibbs & Waters           Expires: November 1998               [Page 16]

 Internet Draft              DHCP Server MIB                  April 1998


       serverRangeStart   IpAddress,
       serverRangeEnd     IpAddress,
       serverRangeSubnet  IpAddress,
       serverRangeInUse   Gauge32
   }

   serverRangeStart OBJECT-TYPE
       SYNTAX        IpAddress
       MAX-ACCESS    not-accessible
       STATUS        current
       DESCRIPTION
          "The IP address of the first address in the range."
       ::= { serverRangeEntry 1 }

   serverRangeEnd OBJECT-TYPE
       SYNTAX        IpAddress
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The IP address of the last address in the range."
       ::= { serverRangeEntry 2 }

   serverRangeSubnet OBJECT-TYPE
       SYNTAX        IpAddress
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The IP address of the subnet which includes this range."
       ::= { serverRangeEntry 3 }

   serverRangeInUse OBJECT-TYPE
       SYNTAX        Gauge32
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The number of addresses in this range that are currently in
          use.  This number includes those addresses whose lease has not
          expired and addresses which have been reserved (either by the
          server or through configuration)."
       ::= { serverRangeEntry 4 }

   serverAddressTable OBJECT-TYPE
       SYNTAX        SEQUENCE OF ServerAddressEntry
       MAX-ACCESS    not-accessible
       STATUS        current
       DESCRIPTION
          "A list of addresses that are known by this server.  The list
          MUST contain addresses that have not expired.  The list MUST
          NOT contain addresses that have never been assigned by the
          server UNLESS the lease is pre-configured in the server (e.g.:
          a static lease on a subnet)."
       ::= { serverConfiguration 3 }


 Hibbs & Waters           Expires: November 1998               [Page 17]

 Internet Draft              DHCP Server MIB                  April 1998



   serverAddressEntry OBJECT-TYPE
       SYNTAX        ServerAddressEntry
       MAX-ACCESS    not-accessible
       STATUS        current
       DESCRIPTION
          "A logical row in the serverAddressTable."
       INDEX            { serverAddress }
       ::= { serverAddressTable 1 }

   ServerAddressEntry ::= SEQUENCE {
       serverAddress                IpAddress,
       serverAddressSubnet          IpAddress,
       serverAddressRange           IpAddress,
       serverAddressType            INTEGER,
       serverAddressEndTime         TimeTicks,
       serverAddressAllowedProtocol INTEGER,
       serverAddressServedProtocol  INTEGER,
       serverAddressMacAddress      OCTET STRING,
       serverAddressClientId        OCTET STRING,
       serverAddressHostName        DisplayString,
       serverAddressDomainName      DisplayString
   }

   serverAddress OBJECT-TYPE
       SYNTAX        IpAddress
       MAX-ACCESS    not-accessible
       STATUS        current
       DESCRIPTION
          "The IP address of the entry."
       ::= { serverAddressEntry 1 }

   serverAddressSubnet OBJECT-TYPE
       SYNTAX        IpAddress
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The IP address of the subnet to which this address belongs.
          The subnet must be configured on this server and appear as a
          row in the dhcpSubnetTable."
       ::= { serverAddressEntry 2 }

   serverAddressRange OBJECT-TYPE
       SYNTAX        IpAddress
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The IP address of the range to which this address belongs.  If
          the address does not fall into one of the configured ranges
          (e.g.:  a statically configured address on a subnet) the range
          may be 0.0.0.0."
       ::= { serverAddressEntry 3 }


 Hibbs & Waters           Expires: November 1998               [Page 18]

 Internet Draft              DHCP Server MIB                  April 1998



   serverAddressType OBJECT-TYPE
       SYNTAX        INTEGER {
                         static(1),
                         dynamic(2),
                         configuration-reserved(3),
                         server-reserved(4)
                     }
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The type of this address."
       ::= { serverAddressEntry 4 }

   serverAddressEndTime OBJECT-TYPE
       SYNTAX        TimeTicks
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The value that sysUpTime will be when the lease expires.  A
          value of 4294967295 (i.e.: 0xFFFFFFFF) should be used for
          leases that have a lease time which is 'infinite' and for BOOTP
          leases."
       ::= { serverAddressEntry 5 }

   serverAddressAllowedProtocol OBJECT-TYPE
       SYNTAX        INTEGER {
                         none(1),
                         bootp(2),
                         dhcp(3),
                         bootp-or-dhcp(4)
                     }
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The type of protocol that is allowed to be used to serve this
          address.  A type of none(1) indicates that the address is not
          available to be served (e.g.: a reserved address)."
       ::= { serverAddressEntry 6 }

   serverAddressServedProtocol OBJECT-TYPE
       SYNTAX        INTEGER {
                         none(1),
                         bootp(2),
                         dhcp(3)
                     }
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The type of protocol that was used when this address was
          assigned.  This object will have the value of none(1) if the
          lease has not been served."


 Hibbs & Waters           Expires: November 1998               [Page 19]

 Internet Draft              DHCP Server MIB                  April 1998


       ::= { serverAddressEntry 7 }

   serverAddressMacAddress OBJECT-TYPE
       SYNTAX        OCTET STRING (SIZE (1..255))
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The hardware type and hardware address of the client that has
          been assigned this lease.  The first octet of this object
          contains the hardware type from the 'htype' field of the BOOTP
          packet and the remaining octets contain the hardware address
          from the 'chaddr' field of the BOOTP packet.  This object may
          be empty if the lease has not been previously served."
       ::= { serverAddressEntry 8 }

   serverAddressClientId OBJECT-TYPE
       SYNTAX        OCTET STRING (SIZE (0..255))
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The client-id of the client that has been assigned this lease.
          The client-id is the value specified in option 61 (client-id
          option) when the lease was assigned.  This object may be empty
          if the lease has not been previously assigned or if the client-
          id option was not specified when the lease was assigned."
       ::= { serverAddressEntry 9 }

   serverAddressHostName OBJECT-TYPE
       SYNTAX        DisplayString (SIZE (0..64))
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The host name the client is configured with or if no host name
          was configured then the host name that the client supplied when
          requesting an address."
       ::= { serverAddressEntry 10 }

   serverAddressDomainName OBJECT-TYPE
       SYNTAX        DisplayString (SIZE (0..255))
                               -- need correct maximum length
       MAX-ACCESS    read-only
       STATUS        current
       DESCRIPTION
          "The domain name assigned to the client."
       ::= { serverAddressEntry 11 }


   -- Compliance groups, etc.  to be added when MIB stabilizes


   END



 Hibbs & Waters           Expires: November 1998               [Page 20]

 Internet Draft              DHCP Server MIB                  April 1998


 4. Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to pertain
   to the implementation or use of the technology described in this
   document or the extent to which any license under such rights might or
   might not be available; neither does it represent that it has made any
   effort to identify any such rights.  Information on the IETF's
   procedures with respect to rights in standards-track and standards-
   related documentation can be found in BCP-11.  Copies of claims of
   rights made available for publication and any assurances of licenses
   to be made available, or the result of an attempt made to obtain a
   general license or permission for the use of such proprietary rights
   by implementers or users of this specification can be obtained from
   the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard.  Please address the information to the IETF Executive
   Director.


 5. Notes

   This section will be removed when this memo is published as an RFC.

 5.1. Issues

   o what is the best way to reset statistics?

     o do we need to reset them individually, as groups, or as a whole?

   o we need a timestamp of when they were reset

   o Counter32/64 values cannot be reset the DhcpTimeCount textual
      convention is a Counter32 and hence it cannot be reset;  should
      DhcpTimeCount be a Gauge32?

   o should all invalid packets received be collapsed into a single
      counter for each protocol type (BOOTP and DHCP), or broken out by
      type of error?

   o if counted by error type, what is the set of errors that we should
      use?

   o perhaps we should develop a common vocabulary (and glossary) for
      terms such as "abandoned" so that the objects defined and their
      descriptions aren't misinterpreted by implementers.

   o do we need to be concerned about the potential size of some of the
      configuration data tables?  Wouldn't it be better to maintain


 Hibbs & Waters           Expires: November 1998               [Page 21]

 Internet Draft              DHCP Server MIB                  April 1998


      counters for things like number of leases assigned than to expect
      the management station to calculate the values by reading very
      large tables to count the number of leases in that state?

 5.2. Changes from Prior Drafts

   The "-01" revision removed the Server Identity section from the
   proposed MIB, relying on the Application MIB to accomplish the same
   result.

   The min/max (inter-arrival and response times) were changed to Guage32
   so that they could be reset.  Sum of inter-arrival and response times
   was deleted since the management station can easily calculate them.
   The last arrival time objects were added.


 6. Acknowledgements

   This document is the result of work undertaken the by DHCP working
   group.  The authors would like to particularly acknowledge the
   development team from Carnegie-Mellon University whose work creating a
   private MIB for their DHCP server inspired the development of this
   proposal.


 7. Security Considerations

   Security considerations are to be determined.


 8. References

   [DEN] Directory Enabled Networks Working Group,
        http://www.universe.digex.net/~murchiso/den.

   [RFC1902] Case, J., McCloghrie, K., Rose, M., and S.  Waldbusser,
        "Structure of Management Information for Version 2 of the Simple
        Network Management Protocol (SNMPv2)", RFC 1902, January 1996.

   [RFC1903] Case, J., McCloghrie, K., Rose, M., and S.  Waldbusser,
        "Textual Conventions for Version 2 of the Simple Network
        Management Protocol (SNMPv2)", RFC 1903, January 1996.

   [RFC1904] Case, J., McCloghrie, K., Rose, M., and S.  Waldbusser,
        "Conformance Statements for Version 2 of the Simple Network
        Management Protocol (SNMPv2)", RFC 1904, January 1996.

   [RFC2119] Bradner, S., "Key words for use in RFCs to Indicate
        Requirement Levels", RFC 2119, BCP 14, March 1997.

   [RFC2131] Droms, R., "Dynamic Host Configuration Protocol", RFC 2131,
        March 1997.


 Hibbs & Waters           Expires: November 1998               [Page 22]

 Internet Draft              DHCP Server MIB                  April 1998


   [RFC2132] Alexander, S.  and Droms, R., "DHCP Options and BOOTP Vendor
        Extensions", RFC 2132, March 1997.

   [RFC2287] Krupczak, C.  and Saperia, J., "Definitions of System-Level
        Managed Objects for Applications", RFC 2287, February 1998.


 9. Editors' Addresses

   Richard Barr Hibbs
   Pacific Bell
   666 Folsom Street, Room 1225
   San Francisco, CA 94107-1384
   USA

   Phone:  +1 415-545-1576
   Fax:    +1 415-543-3539
   Email:  rbhibbs@pacbell.com

   Glenn Waters
   Bay Networks
   300-875 Carling Avenue,
   Ottawa, Ontario K1S 5P1
   Canada

   Phone:  +1 613-798-4925
   Email:  gwaters@baynetworks.com


 10. Full Copyright Statement

   Copyright (C) The Internet Society (1998).  All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published and
   distributed, in whole or in part, without restriction of any kind,
   provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of developing
   Internet standards in which case the procedures for copyrights defined
   in the Internet Standards process must be followed, or as required to
   translate it into languages other than English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT


 Hibbs & Waters           Expires: November 1998               [Page 23]

 Internet Draft              DHCP Server MIB                  April 1998


   NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN
   WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.



















































 Hibbs & Waters           Expires: November 1998               [Page 24]

