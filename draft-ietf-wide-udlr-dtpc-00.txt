Network Working Group                             Hidetaka Izumiyama
Internet-Draft                                        Akihiro Tosaka
                                                        WIDE project
                                                          April 1996

Dynamic Tunneling Path Configuraion for Uni-directional Link Routing

<draft-ietf-wide-udlr-dtpc-00.txt>

Status of this Memo

   This document is an Internet-Draft. Internet-Drafts are working
   documents of the Internet Engineering Task Force (IETF), its areas,
   and its working groups. Note that other groups may also distribute
   working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as ``work in progress.''

   To learn the current status of any Internet-Draft, please check the
   1id-abstracts.txt listing contained in the Internet-Drafts Shadow
   Directories on ftp.is.co.za (Africa), nic.nordu.net (Europe),
   munnari.oz.au (Pacific Rim), ds.internic.nTermet (US East Coast), or
   ftp.isi.edu (US West Coast).

Abstract

   The idea to use unidirectional link(UDL) routing
   without any modifications of current routing protocols
   is discribed in [1], but any dynamic tunneling path configuration
   techique was not described.
   This document describe the dynamic tunneling path configuraion
   for UDL routing.

Table of Contents

    1.Initialize or Update Tunneling Path Table(TPT)
    2.Update Tunnelig Expire Timer
    3.Close Tunneling Path from Feed
    4.Close Tunneling Path from Receiver
    5.Packet Format
       5.1.Hello message
       5.2.Reply message
       5.3.Assign address message
       5.4.Ack address message
       5.5.Feed close message
       5.6.Receiver close message
       5.7.Recognize close message
       5.8.Ack close message
    6.Bibliography


1.Initialize or Update Tunneling Path Table(TPT)

  Follows are message flow for initialize or ipdate TPT,

 +------------+                                  +------------+
 |    Feed    |                                  |  Receiver  |
 +------------+                                  +------------+
                  ----------- hello ---------->
                                                 serial no. > current no. 
                  <========== reply ============
  Update AAT
                  ======== assign addr =========> 
                                                  Initialize or
                                                  Update TPT
                  <======= ack addr ============
  Initialize or
  Update TPT

               %%%			%%%

      explanatory notes

      AAT       : Address Assign Table
      TPT       : Tunneling Path Table
      TET       : Life Time of Tunneling Path
      --------- : unidirectioal link
      ========= : bidirectional link

2.Update Tunnelig Expire Timer

 +------------+                                  +------------+
 |    Feed    |                                  |  Receiver  |
 +------------+                                  +------------+
                  ----------- hellow ---------->
                                                 serial no. <= current no. 
                                                 Update LTTP
                  <========== reply ============
  Update LTTP

  * If LTTP expire then the tunneling path erase and close.

3.Close Tunneling Path from Feed

 +------------+                                  +------------+
 |    Feed    |                                  |  Receiver  |
 +------------+                                  +------------+
                  --------- feed close  ------->

                  <=== recognize close =========
  erace TPT
  and close
                  ========= ack close =========>
                                                  erace TPT
                                                  and close

4.Close Tunneling Path from Receiver

 +------------+                                  +------------+
 |    Feed    |                                  |  Receiver  |
 +------------+                                  +------------+
                  <===== receiver close ========

                  ======= recognize close =====>
                                                  erace TPT
                                                  and close
                  <========= ack close =========
  erace TPT
  and close

5.Packet Format

  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ---
 |Version        |Flags          |Length                         | Common
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |Checksum                       |Message Type                   | Header
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ---
 | Parameter and data                                            | 
 |                                                               | Payload
 ~                                                               ~
 |                                                               |
 |                                                               |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ---

  Version  : 1

  Flags    : 0

  Length   : This field contains the length, in bytes, of the
             entire MFTP message, beginning with the Version field. 

  Checksum : the 16-bit one's complement of the one's complement
                 sum of the entire message excludeing the IP header.
                 For computing the checksum , the checksum field is
                 zeroed.

  Message Type :

  This field identifies the DTPC message type, as defined in the 
  following table. 

   Hello message		0x0001
   Reply message		0x0002
   Assign address message	0x0003
   Ack address message		0x0004
   Feed close message		0x0005
   Receiver close message	0x0006
   Recognize close message	0x0007
   Ack close message		0x0008

  Payload :

   The Payload of the DTPC message is a stream of tagged data. The reason
   for using a stream of tagged data is to provide easy extensibility
   and to reduce the amount of redundant data in a message.

   Each Paramer follows the packet format below ,

  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |Parameter Type                 |Length                         |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | Value                                                         |
 ~                                                               ~
 |                                                               |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

  The following table defines the complete list of parameters and 
  includes the parameter description, type, and length.

   Parameter			Type		Datalength
   
   UDL ID			0x0001		16
   Serial No.			0x0002		16
   Life Time of Tunneling Path	0x0003		16
   UDL Address of Feed		0x0004		32
   UDL Address of Receiver	0x0005		32
   UDL Subnetmask		0x0006		32
   BDL Address of Feed		0x0007		32
   BDL Address of Receiver   	0x0008		32

  Parameters may be required or optional depending on the 
  message type.

5.1 Hello message

   Follows are required paramters for this message,

	UDL ID
	Serial No.
        Life Time of Tunneling Path
	UDL Address of Feed
	UDL Subnetmask
	BDL Address of Feed

5.2 Reply message

   Follows are required paramters for this message,

	UDL ID
	Serial No.
	Life Time of Tunneling Path
	UDL Address of Receiver
          if receiver knows his UDL Address
             then set it 
	     else set 0
	BDL Address of Receiver

5.3 Assign address message

   Follows are required paramters for this message,

	UDL ID
	Serial No.
	UDL Address of Receiver

5.4  Ack address message

   Follows are required paramters for this message,

	UDL ID
	Serial No.
	UDL Address of Receiver

5.5  Feed close message

   Follows are required paramters for this message,

	UDL ID
	Serial No.
	UDL Address of Feed

5.6  Receiver close message

   Follows are required paramters for this message,

	UDL ID
	Serial No.
	UDL Address of Receiver

5.7  Recognize close message

   Follows are required paramters for this message,

	UDL ID
	Serial No.
	UDL Address of Feed
	UDL Address of Receiver

5.8  Ack close message

   Follows are required paramters for this message,

	UDL ID
	Serial No.
	UDL Address of Feed
	UDL Address of Receiver

6. Bibliography

[1]     Hidetaka Izumiyama and Akihiro Tosaka,
        "Uni-directional Link Routing with IP tunneling"
        Intenet Draft<draft-ietf-wide-udlr-vif-00.txt>,
        April 1997.
