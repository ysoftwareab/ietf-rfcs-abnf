name = definition
           The name of a rule is simply the name itself (without any enclosing
           "<" and ">") and is separated from its definition by the equal
           character "=". Whitespace is only significant in that indentation
           of continuation lines is used to indicate a rule definition that
           spans more than one line. Certain basic rules are in uppercase,
           such as SP, LWS, HT, CRLF, DIGIT, ALPHA, etc. Angle brackets are
           used within definitions whenever their presence will facilitate
           discerning the use of rule names.


OCTET          = <any 8-bit sequence of data>
CHAR           = <any US-ASCII character (octets 0 - 127)>
UPALPHA        = <any US-ASCII uppercase letter "A".."Z">
LOALPHA        = <any US-ASCII lowercase letter "a".."z">
ALPHA          = UPALPHA | LOALPHA
DIGIT          = <any US-ASCII digit "0".."9">
CTL            = <any US-ASCII control character
                              (octets 0 - 31) and DEL (127)>
CR             = <US-ASCII CR, carriage return (13)>
LF             = <US-ASCII LF, linefeed (10)>
SP             = <US-ASCII SP, space (32)>
HT             = <US-ASCII HT, horizontal-tab (9)>
CRLF           = CR LF



LWS            = [CRLF] 1*( SP | HT )



TEXT           = <any OCTET except CTLs,
                              but including LWS>
HEX            = "A" | "B" | "C" | "D" | "E" | "F"
                            | "a" | "b" | "c" | "d" | "e" | "f" | DIGIT



word           = token | quoted-string


token          = 1*<any CHAR except CTLs or tspecials>


tspecials      = "(" | ")" | "<" | ">" | "@"
                            | "," | ";" | ":" | "\" | <">
                            | "/" | "[" | "]" | "?" | "="
                            | "{" | "}" | SP | HT



comment        = "(" *( ctext | comment ) ")"
ctext          = <any TEXT excluding "(" and ")">



quoted-string  = ( <"> *(qdtext) <"> )


qdtext         = <any CHAR except <"> and CTLs,
                              but including LWS>



quoted-pair    = "\" CHAR







HTTP-Version   = "HTTP" "/" 1*DIGIT "." 1*DIGIT



URI            = ( absoluteURI | relativeURI ) [ "#" fragment ]


absoluteURI    = scheme ":" *( uchar | reserved )


relativeURI    = net_path | abs_path | rel_path


net_path       = "//" net_loc [ abs_path ]
abs_path       = "/" rel_path
rel_path       = [ path ] [ ";" params ] [ "?" query ]


path           = fsegment *( "/" segment )
fsegment       = 1*pchar
segment        = *pchar


params         = param *( ";" param )
param          = *( pchar | "/" )


scheme         = 1*( ALPHA | DIGIT | "+" | "-" | "." )
net_loc        = *( pchar | ";" | "?" )
query          = *( uchar | reserved )
fragment       = *( uchar | reserved )


pchar          = uchar | ":" | "@" | "&" | "=" | "+"
uchar          = unreserved | escape
unreserved     = ALPHA | DIGIT | safe | extra | national


escape         = "%" HEX HEX
reserved       = ";" | "/" | "?" | ":" | "@" | "&" | "="
extra          = "!" | "*" | "'" | "(" | ")" | ","
safe           = "$" | "-" | "_" | "." | "+"
unsafe         = CTL | SP | <"> | "#" | "%" | "<" | ">"
national       = <any OCTET excluding ALPHA, DIGIT,
                              reserved, extra, safe, and unsafe>



http_URL       = "http:" "//" host [ ":" port ] [ abs_path ]


host           = <A legal Internet host domain name
                               or IP address (in dotted-decimal form),
                               as defined by Section 2.1 of RFC 1123>


port           = *DIGIT



HTTP-date      = rfc1123-date | rfc850-date | asctime-date


rfc1123-date   = wkday "," SP date1 SP time SP "GMT"
rfc850-date    = weekday "," SP date2 SP time SP "GMT"
asctime-date   = wkday SP date3 SP time SP 4DIGIT


date1          = 2DIGIT SP month SP 4DIGIT
                              ; day month year (e.g., 02 Jun 1982)
date2          = 2DIGIT "-" month "-" 2DIGIT
                              ; day-month-year (e.g., 02-Jun-82)
date3          = month SP ( 2DIGIT | ( SP 1DIGIT ))
                              ; month day (e.g., Jun  2)


time           = 2DIGIT ":" 2DIGIT ":" 2DIGIT
                              ; 00:00:00 - 23:59:59


wkday          = "Mon" | "Tue" | "Wed"
                            | "Thu" | "Fri" | "Sat" | "Sun"


weekday        = "Monday" | "Tuesday" | "Wednesday"
                            | "Thursday" | "Friday" | "Saturday" | "Sunday"


month          = "Jan" | "Feb" | "Mar" | "Apr"
                            | "May" | "Jun" | "Jul" | "Aug"
                            | "Sep" | "Oct" | "Nov" | "Dec"



delta-seconds  = 1*DIGIT




charset = "US-ASCII"
                     | "ISO-8859-1" | "ISO-8859-2" | "ISO-8859-3"
                     | "ISO-8859-4" | "ISO-8859-5" | "ISO-8859-6"

                     | "ISO-2022-JP" | "ISO-2022-JP-2" | "ISO-2022-KR"
                     | "UNICODE-1-1" | "UNICODE-1-1-UTF-7" | "UNICODE-1-1-UTF-8"
                     | token





content-coding   = "gzip" | "x-gzip" | "compress" | "x-compress" | token



transfer-coding         = "chunked" | transfer-extension

transfer-extension      = token



Chunked-Body   = *chunk
                              "0" CRLF
                              footer
                              CRLF


chunk          = chunk-size [ chunk-ext ] CRLF
                              chunk-data CRLF


chunk-size     = hex-no-zero *HEX
chunk-ext      = *( ";" chunk-ext-name [ "=" chunk-ext-value ] )
chunk-ext-name = token
chunk-ext-val  = token | quoted-string
chunk-data     = chunk-size(OCTET)


footer         = *< Content-MD5 and future headers that specify
                               they are allowed in footer>>


hex-no-zero    = <HEX excluding "0">



media-type     = type "/" subtype *( ";" parameter )
type           = token
subtype        = token
parameter      = attribute "=" value
attribute      = token
value          = token | quoted-string



product         = token ["/" product-version]
product-version = token



qvalue         = ( "0" [ "." 0*3DIGIT ] )
                            | ( "." 0*3DIGIT )
                            | ( "1" [ "." 0*3("0") ] )



language-tag  = primary-tag *( "-" subtag )


primary-tag   = 1*8ALPHA
subtag        = 1*8ALPHA



opaque-validator = strong-opaque-validator | weak-opaque-validator
                                    | null-validator
strong-opaque-validator = quoted-string
weak-opaque-validator = quoted-string "/W"
null-validator = <"> <">



variant-id = quoted-string



validator-set = 1#validator-set-item
validator-set-item = opaque-validator




variant-set = 1#variant-set-item
variant-set-item = opaque-validator ";" variant-id




bytes-unit = "bytes"

range-unit = token


ranges-specifier = byte-ranges-specifier

byte-ranges-specifier = bytes-unit "=" byte-range-set

byte-range-set = 1#( byte-range-spec | suffix-byte-range-spec )

byte-range-spec = first-byte-pos "-" [last-byte-pos]

first-byte-pos = 1*DIGIT

last-byte-pos = 1*DIGIT

suffix-byte-range-spec = "-" suffix-length

suffix-length = 1*DIGIT

bytes=0-499

bytes=500-999

bytes=-500

bytes=9500-

bytes=0-0,-1

bytes=500-600,601-999

bytes=500-700,601-999


content-range-spec      = byte-content-range-spec

byte-content-range-spec = bytes-unit SP first-byte-pos "-"

                                            last-byte-pos "/" entity-length

entity-length            = 1*DIGIT
HTTP-message   = Full-Request              ; HTTP/1.1 messages
                            | Full-Response
                            | NULL-Request

NULL-Request   = CRLF

Full-Request   = Request-Line              ; Section 5.1

                              *( General-Header         ; Section 4.3

                               | Request-Header         ; Section 5.2

                               | Entity-Header )        ; Section 7.1

                              CRLF
                              [ Entity-Body ]           ; Section 7.2



Full-Response  = Status-Line               ; Section 6.1

                              *( General-Header         ; Section 4.3

                               | Response-Header        ; Section 6.2

                               | Entity-Header )        ; Section 7.1

                              CRLF
                              [ Entity-Body ]           ; Section 7.2





HTTP-header    = field-name ":" [ field-value ] CRLF







                              and consisting of either *TEXT or combinations




General-Header = Cache-Control            ; Section 10.8

                            | Connection               ; Section 10.9

                            | Date                     ; Section 10.17

                            | Via                      ; Section 10.20

                            | Keep-Alive               ; Section 10.24

                            | Pragma                   ; Section 10.29

                            | Upgrade                  ; Section 10.41




Full-Request   = Request-Line              ; Section 5.1

                              *( General-Header         ; Section 4.3

                               | Request-Header         ; Section 5.2

                               | Entity-Header )        ; Section 7.1

                              CRLF
                              [ Entity-Body ]           ; Section 7.2


NULL-Request   = CRLF

Request-Line   = Method SP Request-URI SP HTTP-Version CRLF




Method         = "OPTIONS"                ; 

                            | "GET"                    ; 

                            | "HEAD"                   ; Section 8.3

                            | "POST"                   ; Section 8.4

                            | "PUT"                    ; Section 8.5

                            | "DELETE"                 ;                      |
extension-method = token



Request-URI    = "*" | absoluteURI | abs_path



Request-Header = Accept                   ; Section 10.1

                            | Accept-Charset           ; Section 10.2

                            | Accept-Encoding          ; Section 10.3

                            | Accept-Language          ; Section 10.4

                            | Authorization            ; Section 10.6

                            | From                     ; Section 10.21

                            | Host                     ; Section 10.22

                            | If-Modified-Since        ; Section 10.23

                            | Proxy-Authorization      ; Section 10.31

                            | Range                    ; Section 10.33

                            | Referer                  ; Section 10.34

                            | User-Agent               ; Section 10.43

                            | Max-Forwards             ; Section 10.45




Response        = Full-Response


Full-Response   = Status-Line               ; Section 6.1

                               *( General-Header         ; Section 4.3

                                | Response-Header        ; Section 6.2

                                | Entity-Header )        ; Section 7.1

                               CRLF
                               [ Entity-Body ]           ; Section 7.2





Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF




Status-Code    = "100"   ; Continue
                            | "101"   ; Switching Protocols
                            | "200"   ; OK
                            | "201"   ; Created
                            | "202"   ; Accepted
                            | "203"   ; Non-Authoritative Information
                            | "204"   ; No Content
                            | "205"   ; Reset Content
                            | "206"   ; Partial Content
                            | "300"   ; Multiple Choices
                            | "301"   ; Moved Permanently
                            | "302"   ; Moved Temporarily
                            | "303"   ; See Other
                            | "304"   ; Not Modified
                            | "305"   ; Use Proxy
                            | "400"   ; Bad Request
                            | "401"   ; Unauthorized
                            | "402"   ; Payment Required
                            | "403"   ; Forbidden
                            | "404"   ; Not Found
                            | "405"   ; Method Not Allowed
                            | "406"   ; Not Acceptable
                            | "407"   ; Proxy Authentication Required
                            | "408"   ; Request Time-out
                            | "409"   ; Conflict
                            | "410"   ; Gone
                            | "411"   ; Length Required
                            | "412"   ; Precondition Failed
                            | "413"   ; Request Entity Too Large
                            | "414"   ; Request URI Too Large
                            | "415"   ; Unsupported Media Type
                            | "416"   ; None Acceptable
                            | "500"   ; Internal Server Error
                            | "501"   ; Not Implemented
                            | "502"   ; Bad Gateway
                            | "503"   ; Service Unavailable
                            | "504"   ; Gateway Time-out
                            | "505"   ; HTTP Version not supported
                            | extension-code


extension-code = 3DIGIT


Reason-Phrase  = *<TEXT, excluding CR, LF>



Response-Header = Location                ; Section 10.27

                             | Proxy-Authenticate      ; Section 10.30

                             | Public                  ; Section 10.32

                             | Retry-After             ; Section 10.36

                             | Server                  ; Section 10.37

                             | WWW-Authenticate        ; Section 10.44




Entity-Header  = Allow                    ; Section 10.5

                            | Content-Base             ; Section 10.9

                            | Content-Encoding         ; Section 10.10

                            | Content-Language         ; Section 10.11

                            | Content-Length           ; Section 10.12

                            | Content-Location         ; Section 10.16

                            | Content-MD5              ; Section 10.13

                            | Content-Range            ; Section 10.14

                            | Content-Type             ; Section 10.15

                            | Expires                  ; Section 10.19

                            | Last-Modified            ; Section 10.25

                            | Title                    ; Section 10.38

                            | Transfer-Encoding        ; Section 10.39

                            | extension-header


extension-header = HTTP-header



Entity-Body    = *OCTET



Accept         = "Accept" ":" #(
                                   media-range
                                   [ ( ":" | ";" )

                                     range-parameter

                                     *( ";" range-parameter ) ]

                                  | extension-token )




media-range    = ( "*/*"
                              | ( type "/" "*" )
                              | ( type "/" subtype )
                              ) *( ";" parameter )


range-parameter = ( "q" "=" qvalue )
                             | extension-range-parameter

extension-range-parameter = ( token "=" token )

extension-token = token


Accept-Charset = "Accept-Charset" ":"

                       1#( charset [ ";" "q" "=" qvalue ] )



Accept-Encoding         = "Accept-Encoding" ":"
                                       #( content-coding )



Accept-Language         = "Accept-Language" ":"
                                       1#( language-range [ ";" "q" "=" qvalue ] )


language-range       = ( ( 1*8ALPHA *( "-" 1*8ALPHA ) )
                             | "*" )


Allow          = "Allow" ":" 1#method



Authorization  = "Authorization" ":" credentials



Cache-Control   = "Cache-Control" ":" 1#cache-directive


cache-directive = "public"
                             | "private" [ "=" <"> 1#field-name <"> ]
                             | "no-cache" [ "=" <"> 1#field-name <"> ]
                             | "no-store"
                             | "no-transform"
                             | "must-revalidate"
                             | "proxy-revalidate"
                             | "only-if-cached"
                             | "max-age" "=" delta-seconds
                             | "max-stale" "=" delta-seconds
                             | "min-fresh" "=" delta-seconds
                             | "min-vers" "=" HTTP-Version

max-age=0_, which forces each cache along the path to the origin server
max-age=0_, which forces each cache along the path to the origin server
Connection-header = "Connection" ":"

                                  connection-token 0#( "," connection-token )




Persist-header = "Persist" ":" 0#pers-param

pers-param = param-name "=" value

Content-Base           = "Content-Base" ":" absoluteURI

Content-Encoding        = "Content-Encoding" ":" 1#content-coding
Content-Language        = "Content-Language" ":" 1#language-tag



Content-Length = "Content-Length" ":" 1*DIGIT



ContentMD5      = "Content-MD5" ":" md5-digest

md5-digest      = <base64 of 128 bit MD5 digest as per RFC 1864>
Content-Range = "Content-Range" ":" content-range-spec

Content-Type   = "Content-Type" ":" media-type



Content-Location = "Content-Location" ":" absoluteURI

Date           = "Date" ":" HTTP-date



Expires = "Expires" ":" HTTP-date
Via   =   "Via" ":" 1#( received-protocol received-by [ comment ] )



received-protocol = [ protocol-name "/" ] protocol-version

protocol-name     = token

protocol-version  = token



received-by       = ( host [ ":" port ] ) | pseudonym

pseudonym         = token



From           = "From" ":" mailbox



Host = "Host" ":" host [ ":" port ]    ; see Section 3.2.2




If-Modified-Since = "If-Modified-Since" ":" HTTP-date



Last-Modified  = "Last-Modified" ":" HTTP-date
Location       = "Location" ":" absoluteURI


Proxy-Authentication    = "Proxy-Authentication" ":" challenge



Proxy-Authorization     = "Proxy-Authorization" ":" credentials



Public         = "Public" ":" 1#method



Range = "Range" ":" ranges-specifier

Referer        = "Referer" ":" ( absoluteURI | relativeURI )



Retry-After    = "Retry-After" ":" ( HTTP-date | delta-seconds )



Server         = "Server" ":" 1*( product | comment )



Title          = "Title" ":" *TEXT



Transfer-Encoding       = "Transfer-Encoding" ":" 1#transfer-coding



Upgrade        = "Upgrade" ":" 1#product



User-Agent     = "User-Agent" ":" 1*( product | comment )



WWW-Authenticate        = "WWW-Authenticate" ":" 1#challenge



Max-Forwards   = "Max-Forwards" ":" 1*DIGIT



Age = "Age" ":" age-value

age-value = delta-seconds



CVal = "CVal" ":" cval-info
cval-info = opaque-validator [ ";" variant-id ]



If-Invalid = "If-Invalid" ":" if-invalid-rhs
if-invalid-rhs = variant-set | validator-set



If-Valid = "If-Valid" ":" if-valid-rhs
if-valid-rhs = validator-set | variant-set



Warning = "Warning" ":" warn-code SP warn-agent SP warn-text
                     [SP language-tag [SP charset]]
warn-code = 2DIGIT
warn-agent = ( host [ ":" port ] ) | pseudonym
                             ; the name or pseudonym of the server adding
                             ; the Warning header, for use in debugging
warn-text = quoted-string



Vary                 = "Vary" ":" 1#selection-parameter

selection-parameter  = request-header-name
                                  | "{accept-headers}"
                                  | "{other}"
                                  | "{" extension-parameter "}"

request-header-name  = field-name

extension-parameter  = token



Alternates           = "Alternates" ":" opaque-field

opaque-field         = field-value



Accept-Ranges     = "Accept-Ranges" ":" acceptable-ranges

acceptable-ranges = 1#range-unit | "none"

auth-scheme    = token


auth-param     = token "=" quoted-string



challenge      = auth-scheme 1*SP realm *( "," auth-param )


realm          = "realm" "=" realm-value
realm-value    = quoted-string



credentials    = basic-credentials
                            | auth-scheme *("," auth-param )



basic-credentials = "Basic" SP basic-cookie


basic-cookie   = <base64 [7] encoding of userid-password,

                               except not limited to 76 char/line>


userid-password = [ token ] ":" *TEXT



corrected_initial_age = corrected_received_age + (now - request_time)



apparent_age = max(0, now - date_value);
corrected_received_age = max(apparent_age, age_value);
response_delay = now - request_time;
corrected_initial_age = corrected_received_age + response_delay;
resident_time = now - response_time;
current_age = corrected_initial_age + resident_time;



freshness_lifetime = max_age_value



freshness_lifetime = expires_value - date_value



response_is_fresh = (freshness_lifetime > current_age)




stale=3600_ or _Cache-Control: reload_ to every request. We recognize
update-key  =  variant-id ";" absoluteURI

Content-Version = "Content-Version" ":" quoted-string



Derived-From   = "Derived-From" ":" quoted-string

Link           = "Link" ":" #("<" URI ">" *( ";" link-param )

link-param     = ( ( "rel" "=" relationship )
                                | ( "rev" "=" relationship )
                                | ( "title" "=" quoted-string )
                                | ( "anchor" "=" <"> URI <"> )

                                | ( link-extension ) )

link-extension = token [ "=" ( token | quoted-string ) ]


relationship   = sgml-name
                            | ( <"> sgml-name *( SP sgml-name) <"> )


sgml-name      = ALPHA *( ALPHA | DIGIT | "." | "-" )



URI-header    = "URI" ":" 1#( "<" URI ">" )


Keep-Alive-header = "Keep-Alive" ":" 0# keepalive-param

keepalive-param = param-name "=" value

max-age=... directive in the responses from the varying resource.


