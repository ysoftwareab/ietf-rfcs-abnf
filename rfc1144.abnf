th = (struct tcphdr *) & ((int *) ip)[hlen];
lcs = cs;
cs = cs->cs_next;
oth = (struct tcphdr *) & ((int *) &cs->cs_ip)[hlen];
deltaS = hlen;
deltaS = ntohs(th->th_urp);
deltaS == ntohs(cs->cs_ip.ip_len) - hlen) {
                  /* special case for echoed terminal traffic */
changes = SPECIAL_I;
cp = new_seq;
changes = SPECIAL_D;
cp = new_seq;
deltaS = ntohs(ip->ip_id) - ntohs(cs->cs_ip.ip_id);
deltaA = ntohs(th->th_sum);
deltaS = cp - new_seq;
cp = (u_char *) ip;
ip = (struct ip *) bufp;
cs = &comp->rstate[comp->last_recv = ip->ip_p];
hlen = ip->ip_hl;
cp = bufp;
changes = *cp++;
cs = &comp->rstate[comp->last_recv];
hlen = cs->cs_ip.ip_hl << 2;
th = (struct tcphdr *) & ((u_char *) &cs->cs_ip)[hlen];
cp = (u_char *) ((int) cp & ~3);
changes = (changes & 0xffff) + (changes >> 16);
changes = (changes & 0xffff) + (changes >> 16);
type = TYPE_COMPRESSED_TCP;
type = TYPE_UNCOMPRESSED_TCP;
type = TYPE_IP;
status = sl_uncompress_tcp(p, type, comp);






