SEARCH		 = "BEGIN:VQUERY" CRLF
		      [scope] [maxresults] [maxsize] querycomp
		      "END:VQUERY" CRLF

scope		= "SCOPE:" comp-name ("," comp-name)*

comp-name	   = "VEVENT" /	"VTODO"	/ "VJOURNAL" / "VTIMEZONE"
		     / "VALARM"	/ "VFREEBUSY" /	"VCAR" / iana-name / x-name

maxresults	   = integer

maxsize	   = integer


querycomp	   = (query) / (queryname query) / queryname

queryname	   = "QUERYNAME:" text

query	   = "QUERY:" queryrule

queryrule	   = capselect capwhere	caporderby ...

capselect	   = <any valid	SQL string that	goes into a SELECT clause>

capwhere	   = <any valid	SQL string that	goes into a WHERE clause>

caporderby	   = <any valid	SQL string that	goes into a ORDERBY
		     clause>


transp		 = "TRANSP" tranparam ":" transvalue CRLF

tranparam	    = *(";" xparam)

transvalue	     = "OPAQUE"	 ;Blocks or opaque on busy time	searches.
		   / "TRANSPARENT"	  ;Transparent on busy time searches.

		  / "TRANSPARENT-NOCONFLICT"	    ; Transparent on busy time
						   ; searches and no other OPAQUE
						   ; or	OPAQUE-NOCONFLICT event
						   ; can overlap it.

		  / "OPAQUE-NOCONFLICT"		       ; Opaque	on busy	time
						   ; searches and no other OPAQUE
						   ; or	OPAQUE-NOCONFLICT event
						   ; can overlap it.
						   ;
						   ;Default value is OPAQUE


carrights  =	[princ]	(carref	/ cardef) CRLF

princ = "UPN" "=" (text / all / "OWNER" / "NONOWNER"	/ "ANONYMOUS")

carref  = ";" "CARREF" "=" text *("," text)

cardef  = action object *("," action	object)

action  = ";" "ACTION" "=" act-type *("," act-type)

act-type	   = ("CREATE" / "MODIFY" / "DELETE" / "READ" /	all)

object  = ";" "OBJECT" "=" (csprop *("," csprop) [propvalue])
		   / (calprop *("," calprop) [propvalue])
		   / (component	*("," component)) [compvalue]
		   / (compprop *("," compprop) [propvalue])
		   / (compparam	*("," compparam) [paramvalue])

csprop	   = csprop2 / all / iana-name

csprop2	   = <any calendar store property defined in [CAP]>

propvalue	   = propvalue2	/ all /	self / iana-name

propvalue2	   = <any value	appropriate for	the named property>

calprop	   = calprop2 /	all / iana-name

calprop2	   = <any calendar property name defined in [RFC2445] or
component	   = component2	/ all /	iana-name

component2	   = <any calendar component defined in	[RFC2445] or
		     [CAP]>


compprop	   = compprop2 / all / iana-name

compprop2	   = <any component property name defined in [RFC2445] or
compparam	   = compparm2 / all / iana-name

compparm2	   = <any component parameter name defined in [RFC2445]	or
compvalue	   = ";" "VALUE" "=" ((component2 *(","	component2))
		   / all / iana-name)

paramvalue	   = paramvalue2 / all / iana-name

paramvalue2	   = <any value	appropriate for	the named parameter>

all		   = "*"

self		       = "SELF"	       ; Only valid for	ATTENDEE value.
				   ; When OBJECT=ATTENDEE;VALUE=SELF.

iana-name	   = <A	name registered	with IANA>

UPN="foo@host.com";ACTION=READ;OBJECT=DTSTART,DTEND


aclc	       =	"BEGIN"	":" "VCAR" CRLF
		   carprop
		   "END" ":" "VCAR" CRLF

carprop =	    carid 1*(grant / deny)

OBJECT=VCAR,CARID,GRANT,DENY
grant   = "GRANT" rightsparam ":" carrights CRLF
rightsparam	    = *(";" xparam)


DENY	   = "DENY" rightsparam	":" carrights CRLF
rightsparam	    = *(";" xparam)

CARID   = "CARID" textparam ":" text	CRLF

rstatus		  = "REQUEST-STATUS" rstatparam	":"
		     statcode [";" statdesc [";" extdata]]

rstatparam	     = *(
		   ; the following is optional,
		   ; but MUST NOT occur	more than once

		       (";" languageparm) /

		   ; the following is optional,
		   ; and MAY occur more	than once

		   (";"	xparam)

		   )

statcode	   = 1*DIGIT *("." 1*DIGIT)
		   ;Hierarchical, numeric return status	code

statdesc	   = text


extdata		  = text
		   ;Textual exception data. For	example, the offending property
		   ;name and value or complete property	line.


