A  ===> B      information passed from protocol A to protocol B  

best_route = Intrazone_Routing_Table[dest,0] 
former_best_route = Intrazone_Routing_Table[host,0] 
best_route = Intrazone_Routing_Table[host,0]
repair_link = FALSE
removal_timer = ROUTE_QUERY_TIMEOUT
repair_link = TRUE
removal_timer = 0
bad_link = my_id + lost_host
dest            = route(length(route)-1)
current_hop_ptr = get_index(route, my_id)
prev_hops       = route(0: current_hop_ptr-1)

route = prev_hops + my_id + dest
hops_left        = MAX_REPAIR_HOPS
bad_link_source  = my_id
hops_left        = MAX_FULL_QUERY_HOPS
bad_link_source  = NULL
source=route(0)
dest = route(length(route)-1)
type = QUERY-REPLY
IERP_next = bad_link_source
IERP_next = source
type = QUERY-EXTENSION
IERP_next = dest
type = ROUTE-ACCUMULATION
IERP_next=source
type = ROUTE-ACCUMULATION
IERP_next = dest
path_source_ptr = get_index(route, bad_link_source)
path_dest_ptr   = get_index(route, dest)
bad_link     = bad_link_source + dest
path_repair  = route(path_source_ptr:path_dest_ptr)
bad_link     = dest + bad_link_source
path_repair  = reverse(route(path_source_ptr :
                                                    path_dest_ptr))
IERP_next = dest
IERP_next = source

type = ROUTE-OPTIMIZATION
source          = route(0)
dest            = route(length(route)-1)
current_hop_ptr = get_index(route, my_id)
prev_hops       = reverse(route(0: current_hop_ptr-1))
next_hops       = route(current_hop_ptr+1 : length(route)-1)

IERP_prev = my_id
BRP_next=Intrazone_Routing_Table[host,0]->next_hop
BRP_next=Intrazone_Routing_Table[IERP_next,0]->next_hop
prev_hops = Detected_Queries[source,query_id]
route = prev_hops + my_id + next_hops
BRP_next = prev_hops(0)
BRP_next = next_hops(0)
BRP_next = prev_hops(0)
flag = NULL
flag = flag,1
flag = flag,0
BRP_next = next_hops(0)
BRP_next = prev_hops(0)
source          = route(0)
dest            = route(length(route)-1)
current_hop_ptr = get_index(route, my_id)
prev_hops       = reverse(route(0: current_hop_ptr-1))
next_hops       = route(current_hop_ptr+1 : length(route)-1)

prev_hops = source
route = prev_hops + my_id + next_hops

BRP_next=Intrazone_Routing_Table[IERP_next]
                                                    ->route(0)->next_hop
prev_hops = source
route = prev_hops + my_id + next_hops

BRP_next=Intrazone_Routing_Table[IERP_next]
                                                    ->route(0)->next_hop
next_hops = dest
prev_hops = Detected_Queries[source,query_id]
route = prev_hops + my_id + next_hops
BRP_next = prev_hops(0)
bad_link_ptr=get_index(route,bad_link_source)
next_hops=Detected_Queries[source,query_id]
BRP_next = next_hops(0)
prev_hops=Detected_Queries[source,query_id]
BRP_next = prev_hops(0)
route = prev_hops + my_id + next_hops
f = NULL
f = f,1
f = f,0
flag = f , flag
flag = flag , f

BRP_next = prev_hops(0)
BRP_next = next_hops(0)
