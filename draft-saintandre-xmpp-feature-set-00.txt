


Network Working Group                                     P. Saint-Andre
Internet-Draft                                 XMPP Standards Foundation
Intended status: Informational                          October 31, 2007
Expires: May 3, 2008


A Feature Set for the Extensible Messaging and Presence Protocol (XMPP)
                  draft-saintandre-xmpp-feature-set-00

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on May 3, 2008.

Copyright Notice

   Copyright (C) The IETF Trust (2007).

Abstract

   This document defines a protocol feature set for the Extensible
   Messaging and Presence Protocol (XMPP), in accordance with the
   concepts and formats proposed by Larry Masinter within the NEWTRK
   Working Group.







Saint-Andre                Expires May 3, 2008                  [Page 1]

Internet-Draft              XMPP Feature Set                October 2007


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Addresses  . . . . . . . . . . . . . . . . . . . . . . . . . .  4
     2.1.  Domain Identifier  . . . . . . . . . . . . . . . . . . . .  4
     2.2.  Node Identifier  . . . . . . . . . . . . . . . . . . . . .  4
     2.3.  Resource Identifier  . . . . . . . . . . . . . . . . . . .  4
   3.  XML Streams  . . . . . . . . . . . . . . . . . . . . . . . . .  5
     3.1.  TCP Binding  . . . . . . . . . . . . . . . . . . . . . . .  5
     3.2.  Namespaces . . . . . . . . . . . . . . . . . . . . . . . .  5
     3.3.  Attributes . . . . . . . . . . . . . . . . . . . . . . . .  5
       3.3.1.  Initial Stream . . . . . . . . . . . . . . . . . . . .  6
       3.3.2.  Response Stream  . . . . . . . . . . . . . . . . . . .  6
     3.4.  Stream Features  . . . . . . . . . . . . . . . . . . . . .  7
     3.5.  Closing Streams  . . . . . . . . . . . . . . . . . . . . .  7
     3.6.  Stream Errors  . . . . . . . . . . . . . . . . . . . . . .  7
   4.  STARTTLS Negotiation . . . . . . . . . . . . . . . . . . . . .  8
   5.  SASL Negotiation . . . . . . . . . . . . . . . . . . . . . . .  8
   6.  Mandatory TLS and SASL Technologies  . . . . . . . . . . . . .  9
   7.  Resource Binding . . . . . . . . . . . . . . . . . . . . . . .  9
   8.  Server Dialback  . . . . . . . . . . . . . . . . . . . . . . .  9
   9.  XML Usage  . . . . . . . . . . . . . . . . . . . . . . . . . . 10
   10. XML Stanzas  . . . . . . . . . . . . . . . . . . . . . . . . . 10
     10.1. Attributes . . . . . . . . . . . . . . . . . . . . . . . . 10
     10.2. Message Stanzas  . . . . . . . . . . . . . . . . . . . . . 11
     10.3. Presence Stanzas . . . . . . . . . . . . . . . . . . . . . 11
     10.4. IQ Stanzas . . . . . . . . . . . . . . . . . . . . . . . . 12
     10.5. Stanza Errors  . . . . . . . . . . . . . . . . . . . . . . 12
     10.6. Extended Content . . . . . . . . . . . . . . . . . . . . . 13
     10.7. Stanza Handling  . . . . . . . . . . . . . . . . . . . . . 13
   11. Rosters  . . . . . . . . . . . . . . . . . . . . . . . . . . . 13
   12. Presence Subscriptions . . . . . . . . . . . . . . . . . . . . 14
   13. Presence Exchange  . . . . . . . . . . . . . . . . . . . . . . 14
   14. Security Considerations  . . . . . . . . . . . . . . . . . . . 15
   15. Informative References . . . . . . . . . . . . . . . . . . . . 15
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 16
   Intellectual Property and Copyright Statements . . . . . . . . . . 17














Saint-Andre                Expires May 3, 2008                  [Page 2]

Internet-Draft              XMPP Feature Set                October 2007


1.  Introduction

   The Extensible Messaging and Presence Protocol (XMPP) is an
   application profile of the Extensible Markup Language [XML] for
   streaming XML data in close to real time between any two (or more)
   network-aware entities.  XMPP is typically used to exchange messages,
   share presence information, and engage in structured request-response
   interactions.  The basic syntax and semantics of XMPP were developed
   originally within the Jabber open-source community, mainly in 1999.
   In late 2002, the XMPP Working Group was chartered with developing an
   adaptation of the core Jabber protocol that would be suitable as an
   IETF instant messaging (IM) and presence technology.  As a result of
   work by the XMPP WG, [RFC3920] and [RFC3921] were published in
   October 2004, representing the most complete definition of XMPP at
   that time.

   The XMPP developer community has garnered extensive implementation
   and deployment experience with XMPP since 2004.  In addition, formal
   interoperability testing has been carried out under the auspices of
   the XMPP Standards Foundation (XSF).  As a result, [rfc3920bis] and
   [rfc3921bis] are currently being refined to capture the consensus of
   the XMPP developer community regarding the features of XMPP.

   This document defines a protocol feature set for XMPP.  The feature
   set attempts to adhere to the concepts and formats proposed by Larry
   Masinter within the IETF's NEWTRK Working Group in 2005 (see
   [INTEROP]).  Therefore this document describes the set of
   specifications and the features defined therein that constitute the
   Extensible Messaging and Presence Protocol for the purpose of
   interoperability testing.

   The specifications considered to define XMPP are rfc3920bis and
   rfc3921bis.  Although the core XML streaming layer specified in
   rfc3920bis is not necessarily tied to the instant messaging and
   presence semantics specified in rfc3921bis, this interoperability
   report treats them as a single protocol, since to date they usually
   have been implemented and deployed as such.  Where appropriate, this
   interoperability report discusses the relevant feature as specified
   in RFC3920 or RFC3921, experience and testing results related to that
   feature, and modifications to the feature as specified in rfc3920bis
   or rfc3921bis.

   The remaining sections of this document specify the particular
   features of XMPP.  Because XMPP uses a client-server architecture,
   each feature is labelled as applying to the client role, the server
   role, or both.  In addition, each feature is labelled as REQUIRED,
   RECOMMENDED, or OPTIONAL, where those terms are to be understood as
   described in [RFC2119].



Saint-Andre                Expires May 3, 2008                  [Page 3]

Internet-Draft              XMPP Feature Set                October 2007


   Note: This document contains brief descriptions of XMPP features.
   Exact definitions of these features are contained in the relevant
   specifications.  In case the brief description for any feature as
   provided in this document is inconsistent with the exact definition
   as provided in the relevant specification, the exact definition shall
   rule.  This document does not specify the features of XMPP, it only
   refers to them.


2.  Addresses

   XMPP addresses are of the form [node@]domain[/resource].  Rules for
   each portion of the address are specified in Section 3 of rfc3920bis.
   The following features apply.

2.1.  Domain Identifier

   As specified in Section 3.2 of rfc3920bis:

   1.  The domain identifier portion of an XMPP address must conform to
       the Nameprep profile of Stringprep.  Conformance with this
       feature is REQUIRED for servers and RECOMMENDED for clients.
   2.  The domain identifier portion of an XMPP address must not be more
       than 1023 bytes in length.  Conformance with this feature is
       REQUIRED for clients and for servers.

2.2.  Node Identifier

   As specified in Section 3.3 of rfc3920bis:

   1.  The node identifier portion of an XMPP address must conform to
       the Nodeprep profile of Stringprep.  Conformance with this
       feature is REQUIRED for servers and RECOMMENDED for clients.
   2.  The node identifier portion of an XMPP address must not be more
       than 1023 bytes in length.  Conformance with this feature is
       REQUIRED for clients and for servers.

2.3.  Resource Identifier

   As specified in Section 3.4 of rfc3920bis:

   1.  The resource identifier portion of an XMPP address must conform
       to the Resourceprep profile of Stringprep.  Conformance with this
       feature is REQUIRED for servers and RECOMMENDED for clients.
   2.  The resource identifier portion of an XMPP address must not be
       more than 1023 bytes in length.  Conformance with this feature is
       REQUIRED for clients and for servers.




Saint-Andre                Expires May 3, 2008                  [Page 4]

Internet-Draft              XMPP Feature Set                October 2007


3.  XML Streams

   At root, XMPP is a technology for streaming XML data between a client
   and a server or between two servers.  Thus the management of XML
   streams is a core aspect of XMPP.  The following features apply.

3.1.  TCP Binding

   As specified in Section 4 of rfc3920bis:

   1.  XML streams are communicated over a TCP connection.  Conformance
       with this feature is REQUIRED for clients and for servers.
   2.  Before opening a TCP connection and XML stream to an XMPP server,
       an entity must resolve the hostname of the server.  Conformance
       with this feature is REQUIRED for clients and for servers.
   3.  If an existing connection is unexpectedly terminated (e.g.,
       because of a software or hardware failure), an entity should
       follow the guidelines in section 5.7 of rfc3920bis regarding
       hostname resolution and the time between reconnection attempts.
       Conformance with this feature is RECOMMENDED for clients and for
       servers.

3.2.  Namespaces

   As specified in Section 5.4 and Section 12.2 of rfc3920bis:

   1.  An XML stream must be qualified by a streams namespace of
       'http://etherx.jabber.org/streams'.  Conformance with this
       feature is REQUIRED for clients and for servers.
   2.  All elements within the streams namespace must be prefixed with a
       namespace prefix.  Conformance with this feature is REQUIRED for
       clients and for servers.
   3.  The streams namespace prefix should be "stream:".  Conformance
       with this feature is RECOMMENDED for clients and for servers.
   4.  An XML stream must have a default namespace other than the
       streams namespace.  Conformance with this feature is REQUIRED for
       clients and for servers.
   5.  An implementation must support 'jabber:client' as a default
       namespace.  Conformance with this feature is REQUIRED for clients
       and for servers.
   6.  An implementation must support 'jabber:server' as a default
       namespace.  Conformance with this feature is REQUIRED for servers
       (the feature does not apply to clients).

3.3.  Attributes






Saint-Andre                Expires May 3, 2008                  [Page 5]

Internet-Draft              XMPP Feature Set                October 2007


3.3.1.  Initial Stream

   As specified in Section 5.3 of rfc3920bis:

   1.  An initiating entity should include a 'from' attribute in the
       initial stream header it sends to a receiving entity.
       Conformance with this feature is RECOMMENDED for clients and for
       servers.  (Note: This feature was modified in rfc3920bis as
       compared to RFC3920, since implementation and deployment
       experience has shown that including the 'from' attribute makes
       stream establishment more efficient.)
   2.  An initiating entity should include a 'to' attribute in the
       initial stream header it sends to a receiving entity.
       Conformance with this feature is RECOMMENDED for clients and for
       servers.
   3.  An initiating entity should include an 'xml:lang' attribute in
       the initial stream headers that it generates.  Conformance with
       this feature is RECOMMENDED for clients and for servers.
   4.  An initiating entity must include a 'version' attribute whose
       value is "1.0" (for XMPP 1.0 support) in the initial stream
       headers it generates.  Conformance with this feature is REQUIRED
       for clients and for servers.

3.3.2.  Response Stream

   As specified in Section 5.3 of rfc3920bis:

   1.  A receiving entity must include a 'from' attribute in the
       response stream header it sends to an initiating entity.
       Conformance with this feature is REQUIRED for servers (the
       feature does not apply to clients).
   2.  A receiving entity should include a 'to' attribute in the
       response stream header it sends to an initiating entity.
       Conformance with this feature is RECOMMENDED for servers (the
       feature does not apply to clients).  (Note: This feature was
       modified in rfc3920bis as compared to RFC3920, since
       implementation and deployment experience has shown that including
       the 'to' attribute makes stream establishment more efficient.)
   3.  A receiving entity must include an 'id' attribute in the response
       stream header it sends to an initiating entity.  Conformance with
       this feature is REQUIRED for servers (the feature does not apply
       to clients).
   4.  The value of the 'id' attribute included in the response stream
       header must be unique within the receiving entity.  Conformance
       with this feature is REQUIRED for servers (the feature does not
       apply to clients).





Saint-Andre                Expires May 3, 2008                  [Page 6]

Internet-Draft              XMPP Feature Set                October 2007


   5.  If the stream header that a receiving entity receives from an
       initiating entity includes a 'version' attribute whose value is
       "1.0", the receiving entity must include a 'version' attribute
       whose value is "1.0" in the response stream headers it generates.
       Conformance with this feature is REQUIRED for servers.

3.4.  Stream Features

   As specified in Section 5.5 of rfc3920bis:

   1.  A receiving entity must advertise the stream-related features it
       supports after sending a response stream header.  Conformance
       with this feature is REQUIRED for servers (the feature does not
       apply to clients).
   2.  A receiving entity should include an empty <required/> element if
       a feature must be negotiated in order to successfully complete
       stream negotiation or other subsequent tasks before XML stanzas
       may be sent (e.g., resource binding for client-to-server
       streams).

3.5.  Closing Streams

   As specified in Section 5.5 of rfc3920bis:

   1.  A stream is closed by sending a closing stream tag </stream:
       stream> to the other party.  Conformance with this feature is
       REQUIRED for clients and for servers.
   2.  The entity that sends a closing stream tag should wait for the
       other party to also send a closing stream tag before terminating
       the underlying TCP connection; however, the entity MAY consider
       both streams to be void if the other entity does not send its
       closing stream tag within a reasonable amount of time.
       Conformance with this feature is RECOMMENDED for clients and for
       servers.
   3.  After an entity sends a closing stream tag, it MUST NOT send
       further data over that stream.  Conformance with this feature is
       REQUIRED for clients and for servers.
   4.  After the entity that sent the first closing stream tag receives
       a reciprocal closing stream tag from the other party (or if it
       considers the stream to be void after a reasonable amount of
       time), it MUST terminate the underlying TCP connection or
       connections.  Conformance with this feature is REQUIRED for
       clients and for servers.

3.6.  Stream Errors

   As specified in Section 5.8 of rfc3920bis:




Saint-Andre                Expires May 3, 2008                  [Page 7]

Internet-Draft              XMPP Feature Set                October 2007


   1.  An entity must generate a stream error (followed by a closing
       stream tag and termination of the TCP connection) when it detects
       a stream-related error condition.  Conformance with this feature
       is REQUIRED for clients and for servers.
   2.  The syntax for stream errors must follow the definition in
       Section 4.7.2 of rfc3920bis.  Conformance with this feature is
       REQUIRED for clients and for servers.


4.  STARTTLS Negotiation

   As specified in Section 6 of rfc3920bis:

   1.  An implementation must support Transport Layer Security (TLS) for
       channel encryption of XML streams.  Conformance with this feature
       is REQUIRED for clients and for servers.
   2.  There must be no whitespace between XML elements sent during TLS
       negotiation.  Conformance with this feature is REQUIRED for
       clients and for servers.
   3.  Certificate validation must follow the rules in Section 14.2 of
       rfc3920bis.  Conformance with this feature is REQUIRED for
       clients and for servers.
   4.  Upon successful TLS negotiation, the initiating entity must send
       a new initial stream header to the receiving entity.  Conformance
       with this feature is REQUIRED for clients and for servers.


5.  SASL Negotiation

   As specified in Section 7 of rfc3920bis:

   1.  An implementation must support the Simple Authentication and
       Security Layer (SASL) for authentication of XML streams.
       Conformance with this feature is REQUIRED for clients and for
       servers.
   2.  There must be no whitespace between XML elements sent during SASL
       negotiation.  Conformance with this feature is REQUIRED for
       clients and for servers.
   3.  Upon successful SASL negotiation, the initiating entity must send
       a new initial stream header to the receiving entity.  Conformance
       with this feature is REQUIRED for clients and for servers.
   4.  An implementation must support the SASL error conditions
       specified in Section 6.4 of rfc3920bis.  Conformance with this
       feature is REQUIRED for clients and for servers.







Saint-Andre                Expires May 3, 2008                  [Page 8]

Internet-Draft              XMPP Feature Set                October 2007


6.  Mandatory TLS and SASL Technologies

   As specified in Section 15.7 of rfc3920bis:

   1.  An implementation must support the TLS_RSA_WITH_3DES_EDE_CBC_SHA
       cipher.  Conformance with this feature is REQUIRED for clients
       and for servers.
   2.  An implementation must support TLS plus SASL PLAIN for client-to-
       server streams.  Conformance with this feature is REQUIRED for
       clients and for servers.  (Note: This feature was added in
       rfc3920bis as compared to RFC3920, since implementation of SASL
       EXTERNAL is uncommon in XMPP clients, in part because underlying
       security features such as X.509 certificates are not yet widely
       deployed.)
   3.  An implementation must support TLS plus SASL EXTERNAL for server-
       to-server connections.  Conformance with this feature is REQUIRED
       for servers.
   4.  For backward-compatibility, an implementation should support SASL
       DIGEST-MD5 for server-to-server connections.  Conformance with
       this feature is RECOMMENDED for servers and clients.


7.  Resource Binding

   As specified in Section 8 of rfc3920bis:

   1.  An implementation must support resource binding for client-to-
       server connections.  Conformance with this feature is REQUIRED
       for clients and for servers.
   2.  A client implementation must be able to request generation of a
       resource (rather than providing it).  Conformance with this
       feature is RECOMMENDED for clients (the feature does not apply to
       servers).
   3.  A server implementation must be able to generate a resource on
       request.  Conformance with this feature is REQUIRED for servers
       (the feature does not apply to clients).
   4.  An implementation should be able to bind multiple resources to an
       XML stream as specified in Section 8.5 of rfc3920bis.
       Conformance with this feature is RECOMMENDED for servers and
       OPTIONAL for clients.


8.  Server Dialback

   For backward-compatiblity, an implementation should support server
   dialback for server-to-server connections.  Conformance with this
   feature is RECOMMENDED for servers (the feature does not apply to
   clients).  Server dialback was specified in Section 8 of RFC 3920 and



Saint-Andre                Expires May 3, 2008                  [Page 9]

Internet-Draft              XMPP Feature Set                October 2007


   is now canonically documented in [XEP-0220].


9.  XML Usage

   1.  As specified in Section 12 of rfc3920bis, an implementation must
       not inject XML comments, processing instructions, internal or
       external DTD subsets, internal or external entity references
       other than the predefined XML entities, or XML character data or
       attribute values containing unescaped characters that map to the
       predefined entities.  Conformance with this feature is REQUIRED
       for clients and for servers.
   2.  As specified in Section 12.1 of rfc3920bis, an implementation
       must return a <restricted-xml/> stream error if it receives XML
       comments, processing instructions, internal or external DTD
       subsets, internal or external entity references other than the
       predefined XML entities, or XML character data or attribute
       values containing unescaped characters that map to the predefined
       entities.  Conformance with this feature is REQUIRED for clients
       and for servers.  (Note: This feature was modified in rfc3920bis
       as compared to RFC3920, since ignoring such data rather than
       returning an error is inconsistent with the stream error handling
       recommendations in Section 5.8 of rfc3920bis.)


10.  XML Stanzas

   An implementation must handle the <presence/>, <message/>, and <iq/>
   stanza types.  Conformance with this feature is REQUIRED for clients
   and for servers.

10.1.  Attributes

   As specified in Section 9.1 of rfc3920bis:

   1.  An implementation must support the 'to' attribute on all stanza
       types to encapsulate the intended recipient's address, as
       specified in Section 9.1.1 of rfc3920bis.  Conformance with this
       feature is REQUIRED for clients and servers.
   2.  An implementation must support the 'from' attribute on all stanza
       types to encapsulate the sender's address, as specified in
       Section 9.1.2 of rfc3920bis.  Conformance with this feature is
       REQUIRED for clients and servers.
   3.  In streams qualified by the 'jabber:client' namespace, the
       receiving entity must validate the address of the sender by
       verifying that it is that of a connected resource for the sending
       entity or by stamping the 'from' value itself, as specified in
       Section 9.1.2 of rfc3920bis.  Conformance with this feature is



Saint-Andre                Expires May 3, 2008                 [Page 10]

Internet-Draft              XMPP Feature Set                October 2007


       REQUIRED for servers (the feature does not apply to clients).
   4.  In streams qualified by the 'jabber:server' namespace, the
       sending entity must ensure that every stanza it sends possesses a
       'from' attribute and that the domain identifier portion of the
       encapsulated JID value matches a hostname of the server, as
       specified in Section 9.1.2 of rfc3920bis.  Conformance with this
       feature is REQUIRED for servers (the feature does not apply to
       clients).
   5.  In streams qualified by the 'jabber:server' namespace, the
       receiving entity must ensure that every stanza it receives
       possesses a 'from' attribute and that the domain identifier
       portion of the encapsulated JID value matches a hostname of the
       sending entity, as specified in Section 9.1.2 of rfc3920bis.
       Conformance with this feature is REQUIRED for servers (the
       feature does not apply to clients).
   6.  An XML stanza should possess an 'xml:lang' attribute, as
       specified in section 9.1.5 of rfc3920bis.  Conformance with this
       feature is RECOMMENDED for clients and for servers.

10.2.  Message Stanzas

   As specified in Section 5 of rfc3921bis:

   1.  An implementation must differentiate between messages of type
       "normal", "chat", "groupchat", "headline", and "error".
       Conformance with this feature is REQUIRED for clients (the
       feature does not apply to servers).
   2.  An implementation must support the <body/> child element of the
       <message/> stanza.  Conformance with this feature is REQUIRED for
       clients (the feature does not apply to servers).
   3.  An implementation should support the <subject/> and <thread/>
       child elements of the <message/> stanza.  Conformance with this
       feature is RECOMMENDED for clients (the feature does not apply to
       servers).

10.3.  Presence Stanzas

   As specified in Section 6 of rfc3921bis:

   1.  An implementation must support <presence/> stanzas with no 'type'
       attribute to signal availability and of type "unavailable" to
       signal lack of availability.  Conformance with this feature is
       REQUIRED for clients and for servers.
   2.  An implementation must support <presence/> stanzas of type
       "subscribe", "unsubscribe", "subscribed", and "unsubscribed" to
       manage presence subscriptions.  Conformance with this feature is
       REQUIRED for clients and for servers.




Saint-Andre                Expires May 3, 2008                 [Page 11]

Internet-Draft              XMPP Feature Set                October 2007


   3.  An implementation must support <presence/> stanzas of type
       "probe" to discover the presence of subscribed entities.
       Conformance with this feature is REQUIRED for servers (the
       feature does not apply to clients).

10.4.  IQ Stanzas

   As specified in Section 9.2.3 of rfc3920bis:

   1.  An <iq/> stanza must possess an 'id' attribute.  Conformance with
       this feature is REQUIRED for clients and for servers.
   2.  The 'type' attribute of an <iq/> stanza must be present and it
       must have a value of "get", "set", "result", or "error".
       Conformance with this feature is REQUIRED for clients and for
       servers.
   3.  The response to an <iq/> stanza of type "get" or "set" must be an
       <iq/> stanza of type "result" or "error".  Conformance with this
       feature is REQUIRED for clients and for servers.
   4.  An <iq/> stanza of type "get" or "set" must contain only one
       child element.  Conformance with this feature is REQUIRED for
       clients and for servers.
   5.  An <iq/> stanza of type "result" must contain zero child elements
       or one child element.  Conformance with this feature is REQUIRED
       for clients and for servers.
   6.  An <iq/> stanza of type "error" should contain the child element
       received in the corresponding <iq/> stanza of type "get" or
       "set".  Conformance with this feature is RECOMMENDED for clients
       and for servers.

10.5.  Stanza Errors

   As specified in Section 9.3 of rfc3920bis:

   1.  A <message/>, <presence/>, or <iq/> stanza whose type is "error"
       must contain an <error/> child element whose syntax adheres to
       the definition specified in Section 9.3.2 of rfc3920bis.
       Conformance with this feature is REQUIRED for clients and for
       servers.
   2.  An implementation must not return an error stanza in response to
       a <message/>, <presence/>, or <iq/> stanza whose type is "error".
       Conformance with this feature is REQUIRED for clients and for
       servers.
   3.  An implementation must support the stanza error conditions
       specified in Section 9.3.3 of rfc3920bis.  Conformance with this
       feature is REQUIRED for clients and for servers.






Saint-Andre                Expires May 3, 2008                 [Page 12]

Internet-Draft              XMPP Feature Set                October 2007


10.6.  Extended Content

   As specified in Section 9.4 of rfc3920bis:

   1.  An implementation must not process XML data qualified by XML
       namespaces it does not understand.  Conformance with this feature
       is REQUIRED for clients and for servers.

10.7.  Stanza Handling

   As specified in Section 11 of rfc3920bis and Section 8 of rfc3921bis:

   1.  A server must properly handle an XML stanza with no 'to' address,
       as specified in Section 11.1 of rfc3920bis.  Conformance with
       this feature is REQUIRED for servers (the feature does not apply
       to clients).
   2.  A server must properly handle an XML stanza with a 'to' address
       whose domain identifier does not match one of the configured
       hostnames of the server, as specified in Section 11.3 of
       rfc3920bis and Section 8.4 of rfc3921bis.  Conformance with this
       feature is REQUIRED for servers (the feature does not apply to
       clients).
   3.  A server must properly handle an XML stanza with a 'to' address
       whose domain identifier exactly matches one of the configured
       hostnames of the server (or such a hostname appended by an XMPP
       resource identifier, as specified in Section 11.2 of rfc3920bis.
       Conformance with this feature is REQUIRED for servers (the
       feature does not apply to clients).
   4.  A server must properly handle an XML stanza with a 'to' address
       of the form <node@domain&gt or <node@domain/resource> whose
       domain identifier matches one of the configured hostnames of the
       server, as specified in Section 11.2.3 of rfc3920bis and Sections
       8.1, 8.2, and 8.3 of rfc3921bis.  Conformance with this feature
       is REQUIRED for servers (the feature does not apply to clients).


11.  Rosters

   As specified in Section 2 of rfc3921bis:

   1.  An implementation must use <iq/> stanzas containing <query/>
       elements qualified by the 'jabber:iq:roster' namespace in order
       to manage contact lists (in XMPP, "rosters").  Conformance with
       this feature is REQUIRED for clients and for servers.
   2.  A client implementation should retrieve its roster before sending
       initial presence.  Conformance with this feature is RECOMMENDED
       for clients (the feature does not apply to servers).




Saint-Andre                Expires May 3, 2008                 [Page 13]

Internet-Draft              XMPP Feature Set                October 2007


   3.  A server implementation must send a roster push to each
       interested resource whenever one of the client's resources adds,
       updates, or deletes a roster item.  Conformance with this feature
       is REQUIRED for severs (the feature does not apply to clients).


12.  Presence Subscriptions

   As specified in Section 3 of rfc3921bis:

   1.  In order to request a subscription to another entity's presence,
       a client implementation must send a presence stanza of type
       "subscribe".  Conformance with this feature is REQUIRED for
       clients (the feature does not apply to servers).
   2.  In order to approve a subscription request received from another
       entity, a client implementation must send a presence stanza of
       type "subscribed".  Conformance with this feature is REQUIRED for
       clients (the feature does not apply to servers).
   3.  In order to deny a subscription request received from another
       entity, a client implementation must send a presence stanza of
       type "unsubscribed".  Conformance with this feature is REQUIRED
       for clients (the feature does not apply to servers).
   4.  In order to cancel a previously-requested subscription to another
       entity's presence, a client implementation must send a presence
       stanza of type "unsubscribe".  Conformance with this feature is
       REQUIRED for clients (the feature does not apply to servers).
   5.  A server implementation must not auto-approve subscription
       requests it receives on behalf of a local account.  Conformance
       with this feature is REQUIRED for servers (the feature does not
       apply to clients).
   6.  A server implementation that receives a subscription request for
       a local account must deliver the request to the account's
       interested resources until the account owner either approves or
       denies the subscription request.  Conformance with this feature
       is REQUIRED for servers (the feature does not apply to clients).


13.  Presence Exchange

   As specified in Section 4 of rfc3921bis:

   1.  In order to advertise its network availability (presence), a
       client implementation shall send a presence stanza with no 'to'
       attribute and no 'type' attribute.  Conformance with this feature
       is REQUIRED for clients (the feature does not apply to servers).
   2.  In order to advertise the fact that it is not available for
       communication over the network, a client implementation shall
       send a presence stanza with no 'to' attribute and a 'type'



Saint-Andre                Expires May 3, 2008                 [Page 14]

Internet-Draft              XMPP Feature Set                October 2007


       attribute whose value is "unavailable".  Conformance with this
       feature is REQUIRED for clients (the feature does not apply to
       servers).
   3.  When it receives a presence stanza with no 'to' attribute and
       either no 'type' attribute or a 'type' attribute whose value is
       "unavailable", a server implementation shall broadcast that
       presence information to all subscribed entities (as fully
       explained and qualified in Sections 4.2, 4.4, and 4.5 of
       rfc3921bis).  Conformance with this feature is REQUIRED for
       servers (the feature does not apply to clients)
   4.  When it receives a presence stanza with a 'to' attribute and
       either no 'type' attribute or a 'type' attribute whose value is
       "unavailable", a server implementation shall route or deliver
       that directed presence information to the intended recipient only
       (as fully explained and qualified in Section 4.6 of rfc3921bis).
       Conformance with this feature is REQUIRED for servers (the
       feature does not apply to clients)
   5.  When it receives an initial presence stanza from a connected
       client, a server implementation should send presence probes to
       all of the entities to which the local account is subscribed (as
       fully explained and qualified in Section 4.3 of rfc3921bis).
       Conformance with this feature is REQUIRED for servers (the
       feature does not apply to clients).


14.  Security Considerations

   This document does not directly discuss security issues, since they
   are discussed in the relevant sections of RFC3920, RFC3921,
   rfc3920bis, and rfc3921bis.

   RFC3921 requires client implementations to use the technology
   specified in [RFC3923] for end-to-end signing and object encryption
   of XML stanzas in the context of instant messaging and presence
   applications.  Unfortunately, there exist no implementations of the
   protocol specified in RFC 3923; as a result, no implementation and
   deployment experience exists and no interoperability testing could be
   performed.


15.  Informative References

   [INTEROP]  Masinter, L., "Formalizing IETF Interoperability
              Reporting", draft-ietf-newtrk-interop-reports-00 (work in
              progress), October 2005.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.



Saint-Andre                Expires May 3, 2008                 [Page 15]

Internet-Draft              XMPP Feature Set                October 2007


   [RFC3920]  Saint-Andre, P., "Extensible Messaging and Presence
              Protocol (XMPP): Core", RFC 3920, October 2004.

   [rfc3920bis]
              Saint-Andre, P., "Extensible Messaging and Presence
              Protocol (XMPP): Core", draft-saintandre-rfc3920bis-04
              (work in progress), October 2007.

   [RFC3921]  Saint-Andre, P., "Extensible Messaging and Presence
              Protocol (XMPP): Instant Messaging and Presence",
              RFC 3921, October 2004.

   [rfc3921bis]
              Saint-Andre, P., "Extensible Messaging and Presence
              Protocol (XMPP): Instant Messaging and  Presence",
              draft-saintandre-rfc3921bis-04 (work in progress),
              October 2007.

   [RFC3923]  Saint-Andre, P., "End-to-End Signing and Object Encryption
              for the Extensible Messaging and Presence Protocol
              (XMPP)", RFC 3923, October 2004.

   [XEP-0220]
              Saint-Andre, P. and J. Miller, "Server Dialback", XSF
              XEP 0220, July 2007.

   [XML]      Paoli, J., Maler, E., Sperberg-McQueen, C., Yergeau, F.,
              and T. Bray, "Extensible Markup Language (XML) 1.0 (Fourth
              Edition)", World Wide Web Consortium Recommendation REC-
              xml-20060816, August 2006,
              <http://www.w3.org/TR/2006/REC-xml-20060816>.


Author's Address

   Peter Saint-Andre
   XMPP Standards Foundation
   P.O. Box 1641
   Denver, CO  80201
   US

   Email: stpeter@jabber.org
   URI:   xmpp:stpeter@jabber.org








Saint-Andre                Expires May 3, 2008                 [Page 16]

Internet-Draft              XMPP Feature Set                October 2007


Full Copyright Statement

   Copyright (C) The IETF Trust (2007).

   This document is subject to the rights, licenses and restrictions
   contained in BCP 78, and except as set forth therein, the authors
   retain all their rights.

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND
   THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Acknowledgment

   Funding for the RFC Editor function is provided by the IETF
   Administrative Support Activity (IASA).





Saint-Andre                Expires May 3, 2008                 [Page 17]

