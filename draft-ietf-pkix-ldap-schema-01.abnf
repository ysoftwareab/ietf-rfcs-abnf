CertificateExactAssertion = CertificateSerialNumber "$"
                                   ; certificate serial number
                               Name
                                   ; certificate issuer

CertificateSerialNumber   = 1*DIGIT

DIGIT                     = "0" / NON-ZERO-DIGIT

NON-ZERO-DIGIT            = "1" / "2" / "3" / "4" /
                               "5" / "6" / "7" / "8" / "9"

Name                      = DQUOTE ldapdn DQUOTE
                                   ; rdnSequence

DQUOTE                    = %x22
                                   ; " (double quote)

ldapdn                    = *SafeUTF8Character

SafeUTF8Character         = %x01-21 / %x23-7F /
                                   ; ASCII minus DQUOTE
                               DQUOTE DQUOTE /
                                   ; escaped double quote
                               %xCO-DF %x80-BF /
                                   ; 2 byte UTF8 char
                               %xEO-EF 2(%x80-BF) /
                                   ; 3 byte UTF8 char
                               %xFO-F7 3(%x80-BF) /
                                   ; 4 byte UTF8 char
                               %xF8-FB 4(%x80-BF) /
                                   ; 5 byte UTF8 char
                               %xFC-FD 5(%x80-BF)
                                   ; 6 byte UTF8 char


CertificateAssertion   = "(" sp
sp                     = " "

SubjectKeyIdentifier   = KeyIdentifier

AuthorityKeyIdentifier = KeyIdentifier
                                ; authority key identifier
                            ; For simplicity, authorityCertIssuer and
                            ; authorityCertSerialNumber are omitted.

KeyIdentifier          = h2string

h2string               = "'" *(2HEXDIG) "'H"

KeyUsage               = bstring

bstring                = "'" *BIT "'B"

AltNameType            = builtinNameForm /
                                ; one of the X.509 built in
                                ; Name Forms being sought
                            numericoid
                                ; or the OID of another
                                ; (privately defined) Name Form

builtinNameForm        = "rfc822" /  ; rfc822Name
                            "dns" /     ; dNSName
                            "x400" /    ; x400Address
                            "ldapdn" /  ; directoryName
                            "edi" /     ; ediPartyName
                            "uri" /     ; uniformResourceIdentifier
                            "ip" /      ; iPAddress
                            "oid"       ; registeredId

CertPolicySet          = CertPolicyId *( "+" CertPolicyId )

CertPolicyId           = numericoid

PathToName             = Name

Time                   = GeneralizedTime
                                ; generalizedTime
                            ; Note that utcTime is encoded as a
                            ; GeneralizedTime by assuming the year
                            ; ranges from 1950 to 2049

GeneralizedTime        = 10DIGIT *2(2DIGIT) fraction
                                [ "Z" | differential ]

fraction               = ( "." / "," ) 1*DIGIT

differential           = ( "-" / "+" ) *2(2DIGIT)

NameConstraintsSyntax  = [ "permitted" GeneralSubtrees]
                                ; permitted namespaces for a name
                            [ "excluded" GeneralSubtrees]
                                ; excluded namespaces for a name

GeneralSubtrees        = 1*( "+" GeneralSubtree )

GeneralSubtree         = GeneralName
                                ; base only at present
                                ; minimum and maximum omitted
                                ; for simplification

GeneralName            = "rfc822 +" IA5String /
                                ; rfc822Name
                            "dns +" IA5String /
                                ; dNSName
                            "x400 +" ORAddress /
                                ; x400Address
                            "ldapdn +" Name /
                                ; directoryName
                            "edi +" EDIPartyName /
                                ; ediPartyName
                            "uri +" IA5String /
                                ; uniformResourceIdentifier
                            "ip +" h2string /
                                ; iPAddress
                            "oid +" numericoid /
                                ; registeredId
                            numericoid "+" OpenType
                                ; otherName

IA5String              = DQUOTE *SafeIA5Character DQUOTE

ORAddress              = DQUOTE *SafeIA5Character DQUOTE

SafeIA5Character       = %x01-21 / %x23-7F /
                                ; ASCII minus DQUOTE
                            DQUOTE DQUOTE
                                ; escaped double quote

EDIPartyName           = [DirectoryString] "+"
                                ; name Assigner
                            DirectoryString
                                ; party Name

DirectoryString        = DQUOTE *SafeUTF8Character DQUOTE

OpenType               = h2string

numericoid             = ObjIdComponent *( "." ObjIdComponent )

ObjIdComponent         = "0" / ( NON-ZERO-DIGIT *DIGIT )

HEXDIG                 = DIGIT / "A" / "B" / "C" / "D" / "E" / "F"

BIT                    = "0" / "1"


CertificateListExactAssertion = Name "$"
                                       ; CRL issuer name
                                   Time "$"
                                       ; CRL issuing time(thisUpdate field)
                                   [DistributionPointName]
                                       ; the optional distributionPoint
                                       ; of the CRL

DistributionPointName         = GeneralName /
                                   "rdn +" RelativeName

RelativeName                  = DQUOTE *SafeUTF8Character DQUOTE
                                       ; a relative distinguished name


CertificateListAssertion = "(" sp
ReasonFlags              = bstring


AttributeCertificateExactAssertion =
                             CertificateSerialNumber "$"
                                 ; serial number of the attribute
                                 ; certificate
                             IssuerSerial
                                 ; the identify of the AA

IssuerSerial            = GeneralNames "$"
                                 ; one or more names of the issuer of
                                 ; a public key certificate
                             CertificateSerialNumber "$"
                                 ; the serial number of the public
                                 ; key certificate
                             [ UniqueIdentifier ]
                                 ; an optional unique identifier for
                                 ; the AA (issuer)

UniqueIdentifier        = bstring / hstring

hstring                 = "'" *HEXDIG "'H"


AttributeCertificateAssertion = "(" sp
holder                        = IssuerSerial /
                                       ; identification of the AC holder
                                       ; via its public key certificate
                                   GeneralNames
                                       ; one or more names of the holder

AttributeType                 = numericoid


