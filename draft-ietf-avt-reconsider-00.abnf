T_d= (T_ min, C L(t)),

t_n = t_n-1 + R(alpha) (5,CL(t_n-1)),

new_interval = C * current_group_size_estimate;
new_interval = max(new_interval, Tmin);
new_interval = new_interval * random_factor;
                              send_packet();
new_interval = C * current_group_size_estimate;
new_interval = max(new_interval, Tmin);
new_interval = new_interval * random_factor;
last_transmission = current_time;
previous_group_size_estimate = current_group_size_estimate;
                                  else
            schedule_timer(last_transmission + new_interval);
previous_group_size_estimate = current_group_size_estimate;

new_interval = C * current_group_size_estimate;
new_interval = max(new_interval, Tmin);
new_interval = new_interval * random_factor;
last_transmission = current_time;
                                  else
T = R(alpha) (T_ min,C L(t))

t=0, we can immediately write the probability of sending a packet
a = (N - L(t))/(C L(t)) (1-(1- alpha) C a)/(2 alpha C a)

a = (1)/((1 - alpha) C)
t_n = (1 - alpha) T_min + D + (n)/(m)

t_stop = (1 - alpha) T_min + D + ((1 - alpha) T_min + D)/((1 - alpha)
n_stop = ((1 - alpha) T_min + D)/((1 - alpha) C - 1/m)

n_senta = (N)/(2 alpha T_min) (D + (1)/(m) )

P_send = (t - (1 - alpha) T_min)/(2 alpha T_min)
n_sentb = INTEGRAL_(1 - alpha) T_min+ D + 1/m^t_stop d(t) P_send dt

n_sentb = INTEGRAL_(1 - alpha) T_min+ D + 1/m^t_stop (N)/(2 alpha
n_sentb = (N)/(8 alpha^2 T_min^2) ( ( ((1 - alpha) T_min + D)/((1 -
n_sent = n_senta + n_sentb

n_sent = INTEGRAL_(1 - alpha) T_min^t_1 (N)/(2 alpha T_min) (t - (1 -
n_sent = (N)/(8 alpha^2 T_min^2) ( ((1 - alpha) T_min + D)/((1 -
t_start = (1 - alpha) C n_sent

t_start = (C (1 - alpha) N)/(2 alpha T_min) (D + (1)/(m) )

T_plat = t_start - t_stop

