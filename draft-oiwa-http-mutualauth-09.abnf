wa="...", ...               |<-- [user info]
oa="...", ...               |
auth-scheme      = "Mutual"             ; see HTTP for other values
extension-field  = extension-token "=" value
token            = 1*(%x30-39 / %x41-5A / %x61-7A / "-" / "_")
extensive-token  = token / extension-token
extension-token  = "-" token 1*("." token)
value            = extensive-token / integer
                     / hex-fixed-number
                     / base64-fixed-number / string
integer          = "0" / (%x31-39 *%x30-39)      ; no leading zeros
hex-fixed-number = 1*(%x30-39 / %x41-46 / %x61-66)
base64-fixed-number = string
string           = %x22 *(%x20-21 / %x23-5B / %x5D-FF
                              / %x5C.22 / "\\") %x22
spaces           = 1*(" " / %x09)

         Figure 3: BNF syntax for common elements used in protocol

realm="xxxx", stale=0, version=-draft07

header-401-INIT = "WWW-Authenticate" ":" [spaces]
                  auth-scheme spaces fields-401-INIT
fields-401-INIT = field-401-INIT *([spaces] "," spaces field-401-INIT)
field-401-INIT  = version / algorithm / validation
                  / auth-domain / realm / pwd-hash / stale
                  / extension-field
version         = "version"     "=" extensive-token
algorithm       = "algorithm"   "=" extensive-token
validation      = "validation"  "=" extensive-token
auth-domain     = "auth-domain" "=" string
realm           = "realm" "=" string
pwd-hash        = "pwd-hash" "=" extensive-token
stale           = token

            Figure 4: BNF syntax for header in 401-INIT header

   The header SHALL contain all of the fields marked "mandatory" below,
   and MAY contain those marked "non-mandatory".
   version:       (mandatory extensive-token) should be the token
                  "-draft07" in this specification.  The behavior is
                  undefined when other values are specified.

   algorithm:     (mandatory extensive-token) specifies the
                  authentication algorithm to be used.  The value MUST
                  be one of the tokens specified in &algo_draft; or
                  other supplemental specification documentation.

   validation:    (mandatory extensive-token) specifies the method of
                  host validation.  The value MUST be one of the tokens
                  described in Section 7, or the tokens specified in
                  other supplemental specification documentation.

   auth-domain:   (non-mandatory string) specifies the authentication
                  domain, the set of hosts for which the authentication
                  credentials are valid.  It MUST be one of the strings
                  described in Section 5.  If the value is omitted, it
                  is assumed to be the host part of the requested URI.

   realm:         (mandatory string) is a UTF-8 encoded string
                  representing the name of the authentication realm
                  inside the authentication domain.

   pwd-hash:      (non-mandatory extensive-token) specifies the hash
                  algorithm (hereafter referred to by ph) used for
                  additionally hashing the password.  The valid tokens
                  are

                  *  none: ph(p) = p

                  *  md5: ph(p) = MD5(p)

                  *  digest-md5: ph(p) = MD5(username | ":" | realm |
                     ":" | p), the same value as MD5(A1) for "MD5"
                     algorithm in [RFC2617].

                  *  sha1: ph(p) = SHA1(p)

                  If omitted, the value "none" is assumed.  The use of
                  "none" is recommended.

   stale:         (mandatory token) MUST be "0".

   The algorithm specified in this header will determine the types and
   the values for w_A, w_B, o_A and o_B.
realm="xxxx", stale=1, version=-draft07

user="xxxx", wa=xxxx, version=-draft07

header-req-KEX-C1 = "Authorization" ":" [spaces]
                        auth-scheme spaces fields-req-KEX-C1
fields-req-KEX-C1 = field-req-KEX-C1
                        *([spaces] "," spaces field-req-KEX-C1)
field-req-KEX-C1  = version / algorithm / validation
                      / auth-domain / realm / user / wa
                      / extension-field
user              = "user" "=" string
wa                = "wa"   "=" value

       Figure 5: the BNF syntax for the header in req-KEX-C1 message

realm="xxxx", sid=xxxx, wb=xxxx, nc-max=x, nc-window=x, time=x,
path="xxxx", version=-draft07

header-401-KEX-S1 = "WWW-Authenticate" ":" [spaces]
                        auth-scheme spaces fields-401-KEX-S1
fields-401-KEX-S1 = field-401-KEX-S1
                        *([spaces] "," spaces field-401-KEX-S1)
field-401-KEX-S1  = version / algorithm / validation
                      / auth-domain / realm / sid / wb
                      / nc-max / nc-window / time / path
                      / extension-field
sid               = "sid"       "=" string
wb                = "wb"        "=" value
nc-max            = "nc-max"    "=" integer
nc-window         = "nc-window" "=" integer
time              = "time"      "=" integer
path              = "path"      "=" string

       Figure 6: the BNF syntax for the header in 401-KEX-S1 message

sid=xxxx, nc=x, oa=xxxx, version=-draft07

header-req-VFY-C = "Authorization" ":" [spaces]
                       auth-scheme spaces fields-req-VFY-C
fields-req-VFY-C = field-req-VFY-C
                       *([spaces] "," spaces field-req-VFY-C)
field-req-VFY-C  = version / algorithm / validation
                     / auth-domain / realm / sid / nc / oa
                     / extension-field
nc               = "nc" "=" integer
oa               = "oa" "=" value
       Figure 7: the BNF syntax for the header in req-VFY-C message

header-200-VFY-S  = "Authentication-Info" ":" [spaces]
                        auth-scheme spaces fields-200-VFY-S
fields-200-VFY-S  = field-200-VFY-S
                        *([spaces] "," spaces field-200-VFY-S)
field-200-VFY-S   = version / sid / ob / logout-timeout
ob                = "ob"             "=" value
logout-timeout    = "logout-timeout" "=" integer

           Figure 8: BNF syntax for header in 200-VFY-S message

validation=xxxx, realm="xxxx", stale=0

header-200-Optional-INIT = "Optional-WWW-Authenticate" ":"
                               [spaces] auth-scheme
                               spaces fields-401-INIT

        Figure 9: BNF syntax for header in 200-Optional-INIT header

Auth-Ctrl-fields  = Auth-Ctrl-field
                        *([spaces] "," spaces Auth-Ctrl-field)
Auth-Ctrl-field   = loc-when-unauthed / loc-when-logout
                      / logout-timeout
                      / extension-field
loc-when-unauthed = "location-when-unauthenticated" "=" string
loc-when-logout   = "location-when-logout" "=" string

      Figure 11: the BNF syntax for the Authentication-Control header

location-when-unauthenticated="http://www.example.com/login.html"

location-when-logout="http://www.example.com/byebye.html"

pi = H(VS(algorithm) | VS(auth-domain) | VS(realm) | VS(username) |
o_A = H(octet(4) | OCTETS(w_A) | OCTETS(w_B) | OCTETS(z) | VI(nc) |
o_B = H(octet(3) | OCTETS(w_A) | OCTETS(w_B) | OCTETS(z) | VI(nc) |
header           = header-name ":" [spaces] auth-scheme
                       spaces fields
header-name      = "WWW-Authenticate" / "Optional-WWW-Authenticate"
                     / "Authorization" / "Authentication-info"
                     / "Authentication-Control"
auth-scheme      = "Mutual"             ; see HTTP for other values
fields           = field *([spaces] "," spaces field)
field            = key "=" value        ; either a specific or
                                            ;        an extension field
key              = extensive-token
token            = 1*(%x30-39 / %x41-5A / %x61-7A / "-" / "_")
extensive-token  = token / extension-token
extension-token  = "-" token 1*("." token)
value            = extensive-token / integer
                     / hex-fixed-number
                     / base64-fixed-number / string
integer          = "0" / (%x31-39 *%x30-39)      ; no leading zeros
hex-fixed-number = 1*(%x30-39 / %x41-46 / %x61-66)
base64-fixed-number = string
string           = %x22 *(%x20-21 / %x23-5B / %x5D-FF
                              / %x5C.22 / "\\") %x22
spaces           = 1*(" " / %x09)

         Figure 12: Common BNF syntax for headers in the protocol

