



DHC Working Group                                                 Y. Cui
Internet-Draft                                                   H. Wang
Intended status: Standards Track                                  L. Sun
Expires: September 7, 2015                           Tsinghua University
                                                           March 6, 2015


                YANG Data Model for DHCPv6 Configuration
                      draft-cui-dhc-dhcpv6-yang-00

Abstract

   There has no unified method to configure DHCPv6 server ,relay and
   client itself, always pre-configured manually by operators.

   IETF netmod WG has developed a general data model for NETCONF
   protocol, YANG data model [RFC6020].

   This document defines a YANG data model for the configuration and
   management of DHCPv6 server, DHCPv6 relay and DHCPv6 client.  With
   this model, the operators can configure and manage the devices by
   using NETCONF.

Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 7, 2015.






Cui, et al.             Expires September 7, 2015               [Page 1]

Internet-Draft               YANG for DHCPv6                  March 2015


Copyright Notice

   Copyright (c) 2015 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Objectives  . . . . . . . . . . . . . . . . . . . . . . . . .   3
     2.1.  DHCPv6 server . . . . . . . . . . . . . . . . . . . . . .   3
     2.2.  DHCPv6 relay  . . . . . . . . . . . . . . . . . . . . . .   3
     2.3.  DHCPv6 client . . . . . . . . . . . . . . . . . . . . . .   3
   3.  DHCPv6 Tree Diagrams  . . . . . . . . . . . . . . . . . . . .   3
     3.1.  DHCPv6 Server Tree Diagrams . . . . . . . . . . . . . . .   3
     3.2.  DHCPv6 Relay Tree Diagrams  . . . . . . . . . . . . . . .   6
     3.3.  DHCPv6 Client Tree Diagrams . . . . . . . . . . . . . . .   8
   4.  DHCPv6 YANG Model . . . . . . . . . . . . . . . . . . . . . .  11
   5.  Security Considerations (TBD) . . . . . . . . . . . . . . . .  28
   6.  IANA Considerations (TBD) . . . . . . . . . . . . . . . . . .  29
   7.  Acknowledgements (TBD)  . . . . . . . . . . . . . . . . . . .  29
   8.  Normative References  . . . . . . . . . . . . . . . . . . . .  29
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  29

1.  Introduction

   This document defines a YANG data model for the configuration and
   management of DHCPv6 server, DHCPv6 relay and DHCPv6 client.  With
   this model, the operators can configure and manage the devices by
   using NETCONF.

   Model include three sub-modules:

   o  DHCPv6 server

   o  DHCPv6 relay

   o  DHCPv6 client



Cui, et al.             Expires September 7, 2015               [Page 2]

Internet-Draft               YANG for DHCPv6                  March 2015


1.1.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

   The reader should be familiar with the terms defined in DHCPv6
   [RFC3315] and relevant documents.

   A simplified graphical representation of the data model is provided
   in this document.  [RFC6087] provides definitions of the symbols used
   in these diagrams.

2.  Objectives

   This document defines a YANG data model that can be used to configure
   and manage DHCPv6 server, DHCPv6 relay and DHCPv6 client.

2.1.  DHCPv6 server

   DHCPv6 server parameters.

2.2.  DHCPv6 relay

   DHCPv6 relay parameters.

2.3.  DHCPv6 client

   DHCPv6 client parameters.

3.  DHCPv6 Tree Diagrams

3.1.  DHCPv6 Server Tree Diagrams

+--rw dhcpv6
   +--rw server
      +--rw servAttributes
      |  +--rw duid                            uint32
      |  +--rw enable                          boolean
      |  +--rw name                            string
      |  +--rw description?                    string
      |  +--rw pd-function                     boolean
      |  +--rw two-step-interaction            boolean
      |  +--rw rapidCommit                     boolean
      +--rw address-pools
      |  +--rw address-pool* [pool-name]
      |  |  +--rw pool-name                    string
      |  |  +--rw pool-prefix                  inet:ipv6-prefix



Cui, et al.             Expires September 7, 2015               [Page 3]

Internet-Draft               YANG for DHCPv6                  March 2015


      |  |  +--rw start-address                inet:ipv6-address-no-zone
      |  |  +--rw end-address                  inet:ipv6-address-no-zone
      |  |  +--rw preferred-lifetime           yang:timeticks
      |  |  +--rw valid-lifetime               yang:timeticks
      |  |  +--ro used-ipv6-count              uint32
      |  |  +--ro idle-ipv6-count              uint32
      |  +--ro bindingInfo* [cliDUID]
      |     +--ro cliDUID                      uint32
      |     +--ro cliIA* [iaid]
      |        +--ro iaType                    string
      |        +--ro iaid                      uint8
      |        +--ro cliAddr*                  inet:ipv6-address
      |        +--ro pool-name?                string
      +--rw prefix-pools
      |  +--rw prefix-pool* [pool-name]
      |  |  +--rw pool-name                    string
      |  |  +--rw prefix                       inet:ipv6-prefix
      |  |  +--rw prefix-length                uint8
      |  |  +--rw preferred-lifetime           yang:timeticks
      |  |  +--rw valid-lifetime               yang:timeticks
      |  +--ro bindingInfo* [cliDUID]
      |     +--ro cliDUID                      uint32
      |     +--ro cliIAPD* [iaid]
      |        +--ro iaid                      uint8
      |        +--ro cliPrefix*                inet:ipv6-prefix
      |        +--ro cliPrefixLen*             uint8
      |        +--ro pool-name?                string
      +--rw otherParas?
      |  +--rw dnsServer* [dnsName]
      |  |  +--rw dnsName                      string
      |  |  +--rw dnsServAddr                  inet:ipv6-address
      |  +--rw domainSearchList                string
      |  +--rw sipServer* [sipServDomainName]
      |  |  +--rw sipServDomainName            string
      |  |  +--rw sipServAddr                  inet:ipv6-address
      |  +--rw sntpServer* [sntpServName]
      |  |  +--rw sntpServName                 string
      |  |  +--rw sntpServAddr                 inet:ipv6-address
      |  +--rw ntpServParas* [ntpName]
      |  |  +--rw ntpName                      string
      |  |  +--rw ntpServAddr                  inet:ipv6-address
      |  |  +--rw ntpServMulAddr               inet:ipv6-address
      |  |  +--rw ntpServFQDN                  string
      |  +--rw nisParas
      |  |  +--rw nisServAddr                  inet:ipv6-address
      |  |  +--rw nisCli* [cliDUID]
      |  |     +--rw cliDUID                   uint32
      |  |     +--rw cliDomainName             string



Cui, et al.             Expires September 7, 2015               [Page 4]

Internet-Draft               YANG for DHCPv6                  March 2015


      |  +--rw nispParas
      |     +--rw nispServAddr                 inet:ipv6-address
      |     +--rw nispCli* [cliDUID]
      |        +--rw cliDUID                   uint32
      |        +--rw cliDomainName             string
      +--rw relayOpaqueParas?
      |  +--rw relaysIf* [ifName]
      |     +--rw ifName                       string
      |     +--rw interface-id                 string
      |     +--rw subscribers* [subscriberName]
      |     |  +--rw subscriberName            string
      |     |  +--rw subscriber-id             string
      |     +--rw remoteHost* [entNum]
      |        +--rw entNum                    uint8
      |        +--rw remote-id                 string
      +--ro packetStats
         +--ro solicit-count                   uint32
         +--ro request-count                   uint32
         +--ro renew-count                     uint32
         +--ro rebind-count                    uint32
         +--ro decline-count                   uint32
         +--ro release-count                   uint32
         +--ro infoReq-count                   uint32
         +--ro advertise-count                 uint32
         +--ro confirm-count                   uint32
         +--ro reply-count                     uint32
         +--ro reconfigure-count               uint32
         +--ro relay-forward-count             uint32
         +--ro relay-reply-count               uint32

                   Figure 1: DHCPv6 Data Model Structure

   Introduction of important nodes:

   o  servAttributes: This container contains basic attributes of a
      DHCPv6 server such as DUID, server name and so on.  Some optional
      functions that can be provided by the server is also included.

   o  duid: Each server and client has only one DUID (DHCP Unique
      Identifier).  The DUID here identifies a unique DHCPv6 server for
      clients.

   o  pd-function: Whether the server can act as a delegating router to
      perform prefix delegation ([RFC3633]).

   o  two-step-interaction : A boolean value specifies whether the
      server support client-server exchanges involving two messages
      defined in ([RFC3315]).



Cui, et al.             Expires September 7, 2015               [Page 5]

Internet-Draft               YANG for DHCPv6                  March 2015


   o  rapidCommit: Setting the value to '1' represents the server
      support the Solicit-Reply message exchange. '0' means the server
      will simply ignore the Rapid Commit option in Solicit message.

   o  address-pools: A container describes the DHCPv6 server's address
      pools.

   o  address-pool: A DHCPv6 server can be configured with several
      address pools.  This list defines such address pools which are
      distinguish by the key called "pool-name".

   o  bindingInfo: A list records a binding information for each DHCPv6
      client that has already been allocated IPv6 addresses.

   o  prefix-pools: If a server supports prefix delegation function,
      this container will be used to define the delegating router's
      prefix pools.

   o  prefix-pool: Similar to server's address pools, a delegating
      router can also be configured with multiple prefix pools specified
      by a list called "prefix-pool".

   o  bindingInfo: A list records a binding information for each DHCPv6
      requesting router that has already been configured IPv6 prefixes.

   o  otherParas: This container defines extra configuration parameters
      provided by the DHCPv6 server apart from the address and prefix
      information.  Such parameters may include DNS servers, SIP
      servers, SNTP servers, etc.

   o  relayOpaqueParas: This container contains some opaque values in
      Relay Agent options that need to be configured on the server side
      only for value match.  Such Relay Agent options include Interface-
      Id option, Remote-Id option and Subscriber-Id option.

   o  packetStats: A container presents the packet statistics related to
      the DHCPv6 server.

3.2.  DHCPv6 Relay Tree Diagrams

   +--rw dhcpv6
      +-- ...
      |
      +--rw dhcpv6-relay
         +--rw relayInterfaces
         |  +--rw relayIf* [ifName]
         |     +--rw ifName                       string
         |     +--rw enable                       boolean



Cui, et al.             Expires September 7, 2015               [Page 6]

Internet-Draft               YANG for DHCPv6                  March 2015


         |     +--rw interface-id?                string
         |     +--rw subscribers* [subscriberName]?
         |     |  +--rw subscriberName            string
         |     |  +--rw subscriber-id             string
         |     +--rw remoteHost* [entNum]?
         |     |  +--rw entNum                    uint8
         |     |  +--rw remote-id                 string
         |     +--rw destAddrs*                   inet:ipv6-address
         |     +--rw nextEntity* [destAddr]
         |     |  +--rw destAddr                  inet:ipv6-address
         |     |  +--rw available                 boolean
         |     |  +--rw multicast                 boolean
         |     |  +--rw server                    boolean
         |     +--ro packetStats
         |        +--ro cliPacketRvd-count        uint32
         |        +--ro solicitRvd-count          uint32
         |        +--ro requestRvd-count          uint32
         |        +--ro renewRvd-count            uint32
         |        +--ro rebindRvd-count           uint32
         |        +--ro declineRvd-count          uint32
         |        +--ro releaseRvd-count          uint32
         |        +--ro infoReqRvd-count          uint32
         |        +--ro servPacketRvd-count       uint32
         |        +--ro advertiseRvd-count        uint32
         |        +--ro confirmRvd-count          uint32
         |        +--ro replyRvd-count            uint32
         |        +--ro reconfigureRvd-count      uint32
         |        +--ro relayForRvd-count         uint32
         |        +--ro relayRepRvd-count         uint32
         |        +--ro packetToCli-count         uint32
         |        +--ro advertiseSent-count       uint32
         |        +--ro confirmSent-count         uint32
         |        +--ro replySent-count           uint32
         |        +--ro reconfigureSent-count     uint32
         |        +--ro packetToServ-count        uint32
         |        +--ro solicitSent-count         uint32
         |        +--ro requestSent-count         uint32
         |        +--ro renewSent-count           uint32
         |        +--ro rebindSent-count          uint32
         |        +--ro declineSent-count         uint32
         |        +--ro releaseSent-count         uint32
         |        +--ro infoReqSent-count         uint32
         |        +--ro relayForSent-count        uint32
         |        +--ro relayRepSent-count        uint32
         +--ro relayStats
            +--ro cliPacketRvd-count              uint32
            +--ro servPacketRvd-count             uint32
            +--ro relayForRvd-count               uint32



Cui, et al.             Expires September 7, 2015               [Page 7]

Internet-Draft               YANG for DHCPv6                  March 2015


            +--ro relayRepRvd-count               uint32
            +--ro discardedPacket-count           uint32
            +--ro packetToCli-count               uint32
            +--ro packetToServ-count              uint32
            +--ro packetToRelay-count             uint32

   Introduction of important nodes:

   o  relayInterfaces: It is a container that defines common
      configuration and state parameters in the interfaces of a DHCPv6
      relay agent.  In this YANG data model for DHCPv6 relay agent, the
      parameters are configured in a per-interface manner.

   o  relayIf: A list describes a specific interface and its
      corresponding parameters.  Here we use a string called "ifName" as
      the key of list.

   o  destAddrs: Each DHCPv6 relay agent may be configured with a list
      of destination addresses.  This node defines such a list of IPv6
      addresses that may include unicast addresses, multicast addresses
      or other addresses.

   o  nextEntity: This node defines a list that is used to describe the
      next hop entity of this relay agent.  Different entities are
      distinguished by their addresses.

   o  packetStats: A container shows packet state information of a
      specific interface.  It is a sub-container of the
      "relayInterfaces" container.

   o  relayStats: The "relayStats" container records and presents the
      overall packet statistics of the relay agent.

3.3.  DHCPv6 Client Tree Diagrams

   +--rw dhcpv6
      +-- ...
      |
      +--rw dhcpv6-client
         +--rw clientInterfaces
            +--rw clientIf* [ifName]
               +--rw ifName                       string
               +--ro duid                         uint32
               +--rw enable                       boolean
               +--rw cliFQDN?                     string
               +--rw pd-function                  boolean
               +--rw rapidCommit                  boolean
               +--rw dual-stack                   boolean



Cui, et al.             Expires September 7, 2015               [Page 8]

Internet-Draft               YANG for DHCPv6                  March 2015


               +--ro mo-tab
               |  +--ro m-tab                     boolean
               |  +--ro o-tab                     boolean
               +--ro identity-associations
               |  +--ro identity-association* [iaid]
               |     +--ro iaid                   uint8
               |     +--ro iaType                 string
               |     +--ro ipv6Addr*              inet:ipv6-address
               |     +--ro ipv6Prefix*            inet:ipv6-prefix
               |     +--ro prefix-length*         uint8
               |     +--ro t1-time                yang:date-and-time
               |     +--ro t2-time                yang:date-and-time
               |     +--ro preferred-lifetime     yang:timeticks
               |     +--ro valid-lifetime         yang:timeticks
               +--ro ifOtherParas?
               |  +--ro dnsServAddr*              inet:ipv6-address
               |  +--ro domainSearchList          string
               |  +--ro sipServAddr*              inet:ipv6-address
               |  +--ro sipServDomainNameList     string
               |  +--ro uniDHCPv6ServAddr         inet:ipv6-address
               |  +--ro sntpServAddr*             inet:ipv6-address
               |  +--ro ntpServParas
               |  |  +--ro ntpServAddr            inet:ipv6-address
               |  |  +--ro ntpServMulAddr         inet:ipv6-address
               |  |  +--ro ntpServFQDN            string
               |  +--ro nisParas
               |  |  +--ro nisServAddr            inet:ipv6-address
               |  |  +--ro nisCliDomainName       string
               |  +--ro nispParas
               |     +--ro nispServAddr           inet:ipv6-address
               |     +--ro nispCliDomainName      string
               +--ro packetStats
                  +--ro solicit-count             uint32
                  +--ro request-count             uint32
                  +--ro renew-count               uint32
                  +--ro rebind-count              uint32
                  +--ro decline-count             uint32
                  +--ro release-count             uint32
                  +--ro infoReq-count             uint32
                  +--ro advertise-count           uint32
                  +--ro confirm-count             uint32
                  +--ro reply-count               uint32
                  +--ro reconfigure-count         uint32

   Introduction of important nodes:

   o  clientInterfaces: A client may have several interfaces, it is more
      reasonable to configure and manage parameters on the interface-



Cui, et al.             Expires September 7, 2015               [Page 9]

Internet-Draft               YANG for DHCPv6                  March 2015


      level.  This container includes configuration and state data of a
      DHCPv6 client in a per-interface manner.

   o  clientIf: The list defines a specific client interface and its
      data.  Different interfaces are distinguished by the "ifName" key
      which is a configurable string value.

   o  duid: Each server and client has only one DUID (DHCP Unique
      Identifier).  The DUID here will be carried in the Client ID
      option to identify a specific DHCPv6 client.

   o  cliFQDN: A DHCPv6 server needs to know the Fully Qualified Domain
      Name (FQDN) of the client to achieve the DNS update.

   o  pd-function: Whether the client can act as a requesting router to
      request prefixes using prefix delegation ([RFC3633]).

   o  rapidCommit: '1' indicates a client can initiate a Solicit-Reply
      message exchange by adding a Rapid Commit option in Solicit
      message. '0' means the client is not allowed to add a Rapid Commit
      option to request addresses in a two-message exchange pattern.

   o  mo-tab: The management tab label indicates the operation mode of
      the DHCPv6 client. 'm'=1 and 'o'=1 indicate the client will use
      DHCPv6 to obtain all the configuration data. 'm'=1 and 'o'=0 are a
      meaningless combination.  'm'=0 and 'o'=1 indicate the client will
      use stateless DHCPv6 to obtain configuration data apart from
      addresses/prefixes data. 'm'=0 and 'o'=0 represent the client will
      not use DHCPv6 but use SLAAC to achieve configuration.

   o  identity-association: IA is a construct through which a server and
      a client can identify, group, and manage a set of related IPv6
      addresses.  The key of the "identity-association" list is a 4-byte
      number IAID defined in [RFC3315] .

   o  ifOtherParas: A client can obtain extra configuration data other
      than address and prefix information through DHCPv6.  This
      container describes such data the client was configured.  The
      potential configuration data may include DNS server addresses, SIP
      server domain names, etc.

   o  packetStats: A container records all the packet status information
      of a specific interface.








Cui, et al.             Expires September 7, 2015              [Page 10]

Internet-Draft               YANG for DHCPv6                  March 2015


4.  DHCPv6 YANG Model

   This module imports typedefs from [RFC6991].

<CODE BEGINS> file "ietf-dhcpv6@2015-03-04.yang"

module ietf-dhcpv6 {
    namespace "urn:ietf:params:xml:ns:yang:dhcpv6";
    prefix "dhcpv6";

        import ietf-inet-types { prefix inet; revision-date "2013-07-15"; }
    import ietf-yang-types { prefix yang; revision-date "2013-07-15"; }

        organization "dhc wg";
    contact "yong@csnet1.cs.tsinghua.edu.cn
                 wangh13@mails.tsinghua.edu.cn
                         lh.sunlinh@gmail.com
                         ";

        description "This model defines a YANG data model that can be used to configure
        and manage DHCPv6 server, DHCPv6 relay and DHCPv6 client.";

    revision 2015-03-04 {
        description "Initial revision.";
    }

/*
 * Data Nodes
 */

    container dhcpv6-server {
        description "";
        grouping bindinginfo {
            description "";
            list bindinginfo {
                config "false";
                description "A list records a binding information for each DHCPv6 client that
                    has already been allocated IPv6 addresses.";
                key cliduid;
                leaf cliduid {
                    description "";
                    type uint32;
                }
                list cliia {
                    description "";
                    key iaid;
                    leaf iaid {
                        description "";



Cui, et al.             Expires September 7, 2015              [Page 11]

Internet-Draft               YANG for DHCPv6                  March 2015


                        type uint8;
                    }
                    leaf iatype {
                        description "";
                        type string;
                    }
                    leaf-list cliaddr {
                        description "";
                        type inet:ipv6-address;
                    }
                    leaf pool-name {
                        description "";
                        type string;
                    }
                }
            }
        }
        container servattributes {
            description "This container contains basic attributes of a DHCPv6 server
                such as DUID, server name and so on. Some optional functions that
                can be provided by the server is also included.";
            leaf duid {
                description "Each server and client has only one DUID (DHCP Unique Identifier).
                    The DUID here identifies a unique DHCPv6 server for clients.";
                type uint32;
            }
            leaf enable {
                description "";
                type boolean;
            }
            leaf name {
                description "";
                type string;
            }
            leaf description {
                description "";
                type string;
            }
            leaf pd-function {
                description "Whether the server can act as a delegating router to perform
                    prefix delegation ([RFC3633]).";
                type boolean;
            }
            leaf two-step-interaction {
                description "A boolean value specifies whether the server support client-server
                    exchanges involving two messages defined in ([RFC3315]).";
                type boolean;
            }



Cui, et al.             Expires September 7, 2015              [Page 12]

Internet-Draft               YANG for DHCPv6                  March 2015


            leaf rapidcommit {
                description "A boolean value specifies whether the server support client-server
                    exchanges involving two messages defined in ([RFC3315]).";
                type boolean;
            }
        }
        container address-pools {
            description "A container describes the DHCPv6 server's address pools.";
            list address-pool {
                description "A DHCPv6 server can be configured with several address pools.
                    This list defines such address pools which are distinguish by
                    the key called 'pool-name'.";
                key pool-name;
                leaf pool-name {
                    description "";
                    type string;
                }
                leaf pool-prefix {
                    description "";
                    type inet:ipv6-prefix;
                }
                leaf start-address {
                    description "";
                    type inet:ipv6-address-no-zone;
                }
                leaf end-address {
                    description "";
                    type inet:ipv6-address-no-zone;
                }
                leaf preferred-lifetime {
                    description "";
                    type yang:timeticks;
                }
                leaf valid-lifetime {
                    description "";
                    type yang:timeticks;
                }
                leaf used-ipv6-count {
                    config "false";
                    description "";
                    type uint32;
                }
                leaf idle-ipv6-count {
                    config "false";
                    description "";
                    type uint32;
                }
            }



Cui, et al.             Expires September 7, 2015              [Page 13]

Internet-Draft               YANG for DHCPv6                  March 2015


            uses bindinginfo;

        }
        container prefix-pools {
            description "If a server supports prefix delegation function, this container
                will be used to define the delegating router's refix pools.";
            list prefix-pool {
                description "Similar to server's address pools, a delegating router can also
                    be configured with multiple prefix pools specified by a list called
                                        'prefix-pool'.";
                key pool-name;
                leaf pool-name {
                    description "";
                    type string;
                }
                leaf  prefix {
                    description "";
                    type inet:ipv6-prefix;
                }
                leaf prefix-length {
                    description "";
                    type uint8;
                }
                leaf preferred-lifetime {
                    description "";
                    type yang:timeticks;
                }
                leaf valid-lifetime {
                    description "";
                    type yang:timeticks;
                }
            }
            uses bindinginfo;
        }
        container otherparas {
            description "This container defines extra configuration parameters provided
                by the DHCPv6 server apart from the address and prefix information.
                Such parameters may include DNS servers, SIP servers, SNTP servers,
                etc.";
            list dnsserver {
                description "";
                key dnsname;
                leaf dnsname {
                    description "";
                    type string;
                }
                leaf dnsservaddr {
                    description "";



Cui, et al.             Expires September 7, 2015              [Page 14]

Internet-Draft               YANG for DHCPv6                  March 2015


                    type inet:ipv6-address;
                }
            }
            leaf domainsearchlist {
                description "";
                type string;
            }
            list sipserver {
                description "";
                key sipservdomainname;
                leaf sipserverdomainname {
                    description "";
                    type string;
                }
                leaf sipservaddr {
                    description "";
                    type inet:ipv6-address;
                }
            }
            list sntpserver {
                description "";
                key sntpservname;
                leaf sntpservname {
                    description "";
                    type string;
                }
                leaf sntpservaddr {
                    description "";
                    type inet:ipv6-address;
                }
            }
            list ntpservparas {
                description "";
                key ntpname;
                leaf ntpname {
                    description "";
                    type string;
                }
                leaf ntpservaddr {
                    description "";
                    type inet:ipv6-address;
                }
                leaf ntpservmuladdr {
                    description "";
                    type inet:ipv6-address;
                }
                leaf ntpservfqdn {
                    description "";



Cui, et al.             Expires September 7, 2015              [Page 15]

Internet-Draft               YANG for DHCPv6                  March 2015


                    type string;
                }
            }
            container nisparas {
                description "";
                leaf nisservaddr {
                    description "";
                    type inet:ipv6-address;
                }
                list niscli {
                    description "";
                    key cliduid;
                    leaf cliduid {
                        description "";
                        type uint32;
                    }
                    leaf clidomainname {
                        description "";
                        type string;
                    }
                }
            }
            container nispparas {
                description "";
                leaf nispservaddr {
                    description "";
                    type inet:ipv6-address;
                }
                list nispcli {
                    description "";
                    key cliduid;
                    leaf cliduid {
                        description "";
                        type uint32;
                    }
                    leaf clidomainname {
                        description "";
                        type string;
                    }
                }
            }

        }
        container relayopaqueparas {
            description "This container contains some opaque values in Relay Agent options
                that need to be configured on the server side only for value match.
                Such Relay Agent options include Interface-Id option, Remote-Id
                option and Subscriber-Id option.";



Cui, et al.             Expires September 7, 2015              [Page 16]

Internet-Draft               YANG for DHCPv6                  March 2015


            list relaysif {
                description "";
                key ifname;
                leaf ifname {
                    description "";
                    type string;
                }
                leaf interface-id {
                    description "";
                    type string;
                }
                list subscribers {
                    description "";
                    key subscribername;
                    leaf subscribername {
                        description "";
                        type string;
                    }
                    leaf subscribernameid {
                        description "";
                        type string;
                    }
                }
                list remotehost {
                    description "";
                    key entnum;
                    leaf entnum {
                        description "";
                        type uint8;
                    }
                    leaf remote-id {
                        description "";
                        type string;
                    }
                }
            }
        }
        container packetstats {
            config "false";
            description "A container presents the packet statistics related to the DHCPv6
                server.";
            leaf solicit-count {
                description "";
                type uint32;
            }
            leaf request-count {
                description "";
                type uint32;



Cui, et al.             Expires September 7, 2015              [Page 17]

Internet-Draft               YANG for DHCPv6                  March 2015


            }
            leaf renew-count {
                description "";
                type uint32;
            }
            leaf rebind-count {
                description "";
                type uint32;
            }
            leaf decline-count {
                description "";
                type uint32;
            }
            leaf release-count {
                description "";
                type uint32;
            }
            leaf inforeq-count {
                description "";
                type uint32;
            }
            leaf advertise-count {
                description "";
                type uint32;
            }
            leaf confirm-count {
                description "";
                type uint32;
            }
            leaf reply-count {
                description "";
                type uint32;
            }
            leaf reconfigure-count {
                description "";
                type uint32;
            }
            leaf relay-forward-count {
                description "";
                type uint32;
            }
            leaf relay-reply-count {
                description "";
                type uint32;
            }
        }

    }



Cui, et al.             Expires September 7, 2015              [Page 18]

Internet-Draft               YANG for DHCPv6                  March 2015


    container dhcpv6-relay {
        description "";
        container relayinterfaces {
            description "It is a container that defines common configuration and state
                parameters in the interfaces of a DHCPv6 relay agent. In this
                YANG data model for DHCPv6 relay agent, the parameters are configured
                in a per-interface manner.";
            list relayif {
                description "A list describes a specific interface and its corresponding parameters.
                    Here we use a string called 'ifName' as the key of list.";
                key ifname;
                leaf ifname {
                    description "";
                    type string;
                }
                leaf enable {
                    description "";
                    type boolean;
                }
                leaf interface-id {
                    description "";
                    type string;
                }
                list subscribers {
                    description "";
                    key subscribername;
                    leaf subscribername {
                        description "";
                        type string;
                    }
                    leaf subscriber-id {
                        description "";
                        type string;
                    }
                }
                list remotehost {
                    description "";
                    key entnum;
                    leaf entnum {
                        description "";
                        type uint8;
                    }
                    leaf remote-id {
                        description "";
                        type string;
                    }
                }
                leaf-list destaddrs {



Cui, et al.             Expires September 7, 2015              [Page 19]

Internet-Draft               YANG for DHCPv6                  March 2015


                    description "Each DHCPv6 relay agent may be configured with a list of destination
                        addresses. This node defines such a list of IPv6 addresses that
                        may include unicast addresses, multicast addresses or other addresses.";
                    type inet:ipv6-address;
                }
                list nextentity {
                    description "This node defines a list that is used to describe the next hop
                        entity of this relay distinguished by their addresses.";
                    key destaddr;
                    leaf destaddr {

                        type inet:ipv6-address;
                    }
                    leaf available {
                        description "";
                        type boolean;
                    }
                    leaf multicast {
                        description "";
                        type boolean;
                    }
                    leaf server {
                        description "";
                        type boolean;
                    }
                }
                container packetstats {
                    config "false";
                    description "A container shows packet state information of a specific interface.
                        It is a sub-container of the 'relayInterfaces' container.";
                    leaf clipacketrvd-count {
                        description "";
                        type uint32;
                    }
                    leaf solicitrvd-count {
                        description "";
                        type uint32;
                    }
                    leaf requestrvd-count {
                        description "";
                        type uint32;
                    }
                    leaf renewrvd-count {
                        description "";
                        type uint32;
                    }
                    leaf rebindrvd-count {
                        description "";



Cui, et al.             Expires September 7, 2015              [Page 20]

Internet-Draft               YANG for DHCPv6                  March 2015


                        type uint32;
                    }
                    leaf declinervd-count {
                        description "";
                        type uint32;
                    }
                    leaf releaservd-count {
                        description "";
                        type uint32;
                    }
                    leaf inforeqrvd-count {
                        description "";
                        type uint32;
                    }
                    leaf servpacketrvd-count {
                        description "";
                        type uint32;
                    }
                    leaf advertiservd-count {
                        description "";
                        type uint32;
                    }
                    leaf confirmrvd-count {
                        description "";
                        type uint32;
                    }
                    leaf replyrvd-count {
                        description "";
                        type uint32;
                    }
                    leaf reconfigurervd-count {
                        description "";
                        type uint32;
                    }
                    leaf relayforvd-count {
                        description "";
                        type uint32;
                    }
                    leaf relayreprvd-count {
                        description "";
                        type uint32;
                    }
                    leaf packettocli-count {
                        description "";
                        type uint32;
                    }
                    leaf advertisesent-count {
                        description "";



Cui, et al.             Expires September 7, 2015              [Page 21]

Internet-Draft               YANG for DHCPv6                  March 2015


                        type uint32;
                    }
                    leaf confirmsent-count {
                        description "";
                        type uint32;
                    }
                    leaf replysent-count {
                        description "";
                        type uint32;
                    }
                    leaf reconfiguresent-count {
                        description "";
                        type uint32;
                    }
                    leaf packettoserv-count {
                        description "";
                        type uint32;
                    }
                    leaf solicitsent-count {
                        description "";
                        type uint32;
                    }
                    leaf requestsent-count {
                        description "";
                        type uint32;
                    }
                    leaf renewsent-count {
                        description "";
                        type uint32;
                    }
                    leaf rebindsent-count {
                        description "";
                        type uint32;
                    }
                    leaf declinesent-count {
                        description "";
                        type uint32;
                    }
                    leaf releasesent-count {
                        description "";
                        type uint32;
                    }
                    leaf inforeqsent-count {
                        description "";
                        type uint32;
                    }
                    leaf relayforsent-count {
                        description "";



Cui, et al.             Expires September 7, 2015              [Page 22]

Internet-Draft               YANG for DHCPv6                  March 2015


                        type uint32;
                    }
                    leaf relayrepsent-count {
                        description "";
                        type uint32;
                    }
                }

            }
        }
        container relaystats {
            config "false";
            description "The container records and presents the overall packet statistics
                of the relay agent.";
            leaf clipacketrvd-count {
                description "";
                type uint32;
            }
            leaf serpacketrvd-count {
                description "";
                type uint32;
            }
            leaf relayforrvd-count {
                description "";
                type uint32;
            }
            leaf relayreprvd-count {
                description "";
                type uint32;
            }
            leaf discardedpacket-count {
                description "";
                type uint32;
            }
            leaf packettocli-count {
                description "";
                type uint32;
            }
            leaf packettoserv-count {
                description "";
                type uint32;
            }
            leaf packettorelay-count {
                description "";
                type uint32;
            }
        }
    }



Cui, et al.             Expires September 7, 2015              [Page 23]

Internet-Draft               YANG for DHCPv6                  March 2015


    container dhcpv6-client {
        description "";
        container clientinterfaces {
            description "A client may have several interfaces, it is more reasonable to
                configure and manage parameters on the interface-level. This container
                includes configuration and state data of a DHCPv6 client in a
                per-interface manner.";
            list clientif {
                description "The list defines a specific client interface and its data. Different
                    interfaces are distinguished by the key which is a configurable string
                        value.";
                key ifname;
                leaf ifname {
                    description "";
                    type string;
                }
                leaf duid {
                    description "Each server and client has only one DUID (DHCP Unique Identifier).
                        The DUID here will be carried in the Client ID option to identify
                        a specific DHCPv6 client.";
                    type uint32;
                }
                leaf enable {
                    description "";
                    type boolean;
                }
                leaf clifqdn {
                    description "A DHCPv6 server needs to know the Fully Qualified Domain Name
                        (FQDN) of the client to achieve the DNS update.";
                    type string;
                }
                leaf pd-function {
                    description "Whether the client can act as a requesting router to request
                        prefixes using prefix delegation ([RFC3633]).";
                    type boolean;
                }
                leaf rapidcommit {
                    description "'1' indicates a client can initiate a Solicit-Reply message exchange
                        by adding a Rapid Commit option in Solicit message. '0' means
                        the client is not allowed to add a Rapid Commit option to request
                        addresses in a two-message exchange pattern.";
                    type boolean;
                }
                leaf dual-stack {
                    description "";
                    type boolean;
                }
                container mo-tab {



Cui, et al.             Expires September 7, 2015              [Page 24]

Internet-Draft               YANG for DHCPv6                  March 2015


                    config "false";
                    description "The management tab label indicates the operation mode of the
                        DHCPv6 client. 'm'=1 and 'o'=1 indicate the client will use DHCPv6
                        to obtain all the configuration data. 'm'=1 and 'o'=0 are a meaningless
                        combination. 'm'=0 and 'o'=1 indicate the client will use stateless
                        DHCPv6 to obtain configuration data apart from addresses/prefixes
                        data. 'm'=0 and 'o'=0 represent the client will not use DHCPv6
                        but use SLAAC to achieve configuration.";
                    leaf m-tab {
                        description "";
                        type boolean;
                    }
                    leaf o-tab {
                        description "";
                        type boolean;
                    }
                }
                container identity-associations {
                    config "false";
                    description "IA is a construct through which a server and a client can identify,
                        group, and manage a set of related IPv6 addresses. The key of
                        the list is a 4-byte number IAID defined in [RFC3315] .";
                    list identity-association {
                        description "";
                        key iaid;
                        leaf iaid {
                            description "";
                            type uint8;
                        }
                        leaf iatype {
                            description "";
                            type string;
                        }
                        leaf-list ipv6addr {
                            description "";
                            type inet:ipv6-address;
                        }
                        leaf-list ipv6prefix {
                            description "";
                            type inet:ipv6-prefix;
                        }
                        leaf-list prefix-length {
                            description "";
                            type uint8;
                        }
                        leaf t1-time {
                            description "";
                            type yang:date-and-time;



Cui, et al.             Expires September 7, 2015              [Page 25]

Internet-Draft               YANG for DHCPv6                  March 2015


                        }
                        leaf t2-time {
                            description "";
                            type yang:date-and-time;
                        }
                        leaf preferred-lifetime {
                            description "";
                            type yang:timeticks;
                        }
                        leaf valid-lifetime {
                            description "";
                            type yang:timeticks;
                        }
                    }
                }
                container ifotherparas {
                    config "false";
                    description "A client can obtain extra configuration data other than address
                        and prefix information through DHCPv6. This container describes
                        such data the client was configured. The potential configuration
                        data may include DNS server addresses, SIP server domain names, etc.";
                    leaf-list dnsservaddr {
                        description "";
                        type inet:ipv6-address;
                    }
                    leaf domainsearchlist {
                        description "";
                        type string;
                    }
                    leaf-list sipservaddr {
                        description "";
                        type inet:ipv6-address;
                    }
                    leaf sipservdomainnamelist {
                        description "";
                        type string;
                    }
                    leaf unidhcpv6servaddr {
                        description "";
                        type inet:ipv6-address;
                    }
                    leaf-list sntpservaddr {
                        description "";
                        type inet:ipv6-address;
                    }
                    container ntpservparas {
                        description "";
                        leaf ntpservaddr {



Cui, et al.             Expires September 7, 2015              [Page 26]

Internet-Draft               YANG for DHCPv6                  March 2015


                            description "";
                            type inet:ipv6-address;
                        }
                        leaf ntpservmuladdr {
                            description "";
                            type inet:ipv6-address;
                        }
                        leaf ntpservfqdn {
                            description "";
                            type string;
                        }
                    }
                    container nisparas {
                        description "";
                        leaf nisservaddr {
                            description "";
                            type inet:ipv6-address;
                        }
                        leaf nisclidomainname {
                            description "";
                            type string;
                        }
                    }
                    container nispparas {
                        description "";
                        leaf nispservaddr {
                            description "";
                            type inet:ipv6-address;
                        }
                        leaf nispclidomainname {
                            description "";
                            type string;
                        }
                    }
                }
                container packetstats {
                    config "false";
                    description "A container records all the packet status information of a specific
                        interface.";
                    leaf solicit-count {
                        description "";
                        type uint32;
                    }
                    leaf request-count {
                        description "";
                        type uint32;
                    }
                    leaf renew-count {



Cui, et al.             Expires September 7, 2015              [Page 27]

Internet-Draft               YANG for DHCPv6                  March 2015


                        description "";
                        type uint32;
                    }
                    leaf rebind-count {
                        description "";
                        type uint32;
                    }
                    leaf decline-count {
                        description "";
                        type uint32;
                    }
                    leaf release-count {
                        description "";
                        type uint32;
                    }
                    leaf inforeq-count {
                        description "";
                        type uint32;
                    }
                    leaf advertise-count {
                        description "";
                        type uint32;
                    }
                    leaf confirm-count {
                        description "";
                        type uint32;
                    }
                    leaf reply-count {
                        description "";
                        type uint32;
                    }
                    leaf reconfigure-count {
                        description "";
                        type uint32;
                    }
                }
            }
        }
    }
}
<CODE ENDS>

5.  Security Considerations (TBD)

   TBD






Cui, et al.             Expires September 7, 2015              [Page 28]

Internet-Draft               YANG for DHCPv6                  March 2015


6.  IANA Considerations (TBD)

   TBD

7.  Acknowledgements (TBD)

   TBD

8.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC3315]  Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C.,
              and M. Carney, "Dynamic Host Configuration Protocol for
              IPv6 (DHCPv6)", RFC 3315, July 2003.

   [RFC3633]  Troan, O. and R. Droms, "IPv6 Prefix Options for Dynamic
              Host Configuration Protocol (DHCP) version 6", RFC 3633,
              December 2003.

   [RFC6020]  Bjorklund, M., "YANG - A Data Modeling Language for the
              Network Configuration Protocol (NETCONF)", RFC 6020,
              October 2010.

   [RFC6087]  Bierman, A., "Guidelines for Authors and Reviewers of YANG
              Data Model Documents", RFC 6087, January 2011.

   [RFC6991]  Schoenwaelder, J., "Common YANG Data Types", RFC 6991,
              July 2013.

Authors' Addresses

   Yong Cui
   Tsinghua University
   Beijing  100084
   P.R.China

   Phone: +86-10-6260-3059
   Email: yong@csnet1.cs.tsinghua.edu.cn











Cui, et al.             Expires September 7, 2015              [Page 29]

Internet-Draft               YANG for DHCPv6                  March 2015


   Hao Wang
   Tsinghua University
   Beijing  100084
   P.R.China

   Phone: +86-10-6278-5822
   Email: wangh13@mails.tsinghua.edu.cn


   Linhui Sun
   Tsinghua University
   Beijing  100084
   P.R.China

   Phone: +86-10-6278-5822
   Email: lh.sunlinh@gmail.com



































Cui, et al.             Expires September 7, 2015              [Page 30]
