saltp = enctype-name | 0x00 | salt
tkey = random-to-key(PBKDF2(passphrase, saltp,
                              iter_count, keylength))
key = KDF-HMAC-SHA2(tkey, "kerberos") where "kerberos" is the
           byte string {0x6b 0x65 0x72 0x62 0x65 0x72 0x6f 0x73}.

n = 1
K1 = HMAC-SHA-256(key, 00 00 00 01 | constant | 0x00 | 00 00 00 80)
n = 1
K1 = HMAC-SHA-384(key, 00 00 00 01 | constant | 0x00 | 00 00 01 00)
IV = N + cipherState (+ denotes XOR)
C = E(Ke, plaintext, IV)
                              using CBC-CS3-Encrypt defined
                              in [SP800-38A+]
H = HMAC(Ki, N | C)
ciphertext =  N | C | H[1..h]
cipherState = N 

IV = N + cipherState (+ denotes XOR)
P = D(Ke, C, IV)
                              using CBC-CS3-Decrypt defined
                              in [SP800-38A+]
cipherState = N

PRF = HMAC(Kp, octet-string)

base-key = KDF-HMAC-SHA2(tkey, "kerberos")

Kc = KDF-HMAC-SHA2(base-key, usage | 0x99)
Ke = KDF-HMAC-SHA2(base-key, usage | 0xAA)
Ki = KDF-HMAC-SHA2(base-key, usage | 0x55);

 




