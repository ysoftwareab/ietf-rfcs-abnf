list   = null / slist
null   = ; Null indicates no characters at all, an empty list.
slist  = string / string ',' slist
string = ; Allowable strings depend on the List
unsafe = ',' / NULL
escape = "\" HEXDIG HEXDIG

service-type       = generic-uri-scheme / service-scheme
generic-uri-scheme = ALPHA *( alpha / digit / '+' / '-' / '.' )
service-scheme     = "service:" type ['.' na ] [':' type ]
type               = 1*(alpha / digit / '+' / '-' )
na                 = 1*(alpha / digit / '+' / '-' )

scope-list = scope-val / scope-val `,' scope-list
scope-val = 1*safe
safe = ; Any character except reserved.
reserved = `(' / `)' / `,' / `' / `!'  / `<' / `=' / `>' / `~' /
                  CTL / `;' / `*' / `+'
escape-val = `' HEXDIG HEXDIG

attr-list  = attribute / attribute `,' attr-list
attribute  = `(' attr-tag `=' val-list `)' / attr-tag
val-list   = attr-val / attr-val `,' val-list
attr-tag   = 1*safe-tag / nonstd-tag
nonstd-tag = "x-" enum `-' 1*safe-tag
enum       = 1*DIGIT
                     ; The <enum> field corresponds to an Enterprise
                     ; Number registered with IANA. [IANA] Using this
                     ; prefix avoids collisions in interpretation of
                     ; nonstandard attribute name.
attr-val   = intval / strval / boolval / opaque
intval     = [-]1*DIGIT
strval     = 1*safe-val
boolval    = "true" / "false"
opaque     = "FF" 1*escape-val
safe-val   = ; Any character except reserved.
safe-tag   = ; Any character except reserved, '*' and bad-tag.
reserved   = `(' / `)' / `,' / `\' / `!'  / `<' / `=' / `>' /
                   `~' / CTL
escape-val = `\' HEXDIG HEXDIG
bad-tag    = CR / LF / HTAB / `_'

simple-filter =  conjoin / term
conjoin       =  "(&" term-list ")"
term-list     =  term term-list / term
term          =  "(" tag filtertype item ")" / "(" tag "=*)"
                       ; The "=*" term tests if the attribute is present.
tag           =  1*tag-safe
filtertype    =  "="     / "~="    / ">="    / "<="
                       ; equal   approx    greater   less
item          =  value / substring
                       ; substring matching is only supported
value         =  1*val-safe
substring     =  [value] any [value]
any           =  "*" *(value "*")
tag-unsafe    =  "=" / ">" / "<" / "~" / "(" / "\" / %x00
tag-safe      =  ; All UTF-8 characters are included except those in
                          ; tag-unsafe.  those must be escaped.
val-unsafe    =  "*" / "(" / ")" / "\" / %x00
val-safe      =  ; All UTF-8 characters are included except those in
                       ; val-unsafe.  those must be escaped.
escaped       =  "\" HEXDIG HEXDIG

BSD=0x0002 must not be the same as used for some other BSD.

BSD=0x0002 is defined to be DSA with SHA-1.  The signature
type=nfs)".

