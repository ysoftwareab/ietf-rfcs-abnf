K = ((Wmax*beta)/C)^(1/3)

cwnd=259 -50                    / Cubic
         |                     |
         |                    /
         |                   /
         |                  /                          .../
         |                 /                      .../
         |               _/                  .../    Reno
         |           .--/               .../
cwnd=130 -25    /| ./              .../
         |     / |/           .../
cwnd=91 -17.5 | |       .../
         |     / |  .../
cwnd=65 -12.5|  |/
         |   /
         |  /
         |-/
         +----------------------------------------------------------->
                                                                 Time(s)
               Figure 1: Cubic and Reno Window Curves

   As shown in Figure 1, if packet loss occurs during the slow start
   phase, TCP Reno takes much longer time to reach the required
   throughput.  TCP Cubic takes relatively shorter time compared to TCP
   Reno, but cwnd continues to increase even though it has reached to
   the target throughput.

   This document proposes a target throughput based method for
   increasing TCP's congestion window.  Experimental results show that
   the proposed method can reach the required throughput much more
   rapidly than traditional TCP congestion algorithms, such as Reno,
   Cubic.  Moreover, this method prevents cwnd from increasing when cwnd
   reaching to the required throughput.
TARGET_THROUGHPUT = e * BR

alpha = TARGET_THROUGHPUT * RTT - cwnd;

cwnd = cwnd + alpha

alpha = TARGET_THROUGHPUT * RTT - cwnd
TARGET_cwnd = TARGET_THROUGHPUT * BaseRTT

alpha = TARGET_THROUGHPUT * RTT - cwnd, then alpha will be larger.
alpha = TARGET_THROUGHPUT * RTT - cwnd
                        = 50Mbps*60ms -10 MSS
                        = 249MSS

alpha = TARGET_THROUGHPUT * RTT - cwnd
                        = 50Mbps*60ms -130MSS
                        = 129MSS

