v = sum for i=0..7 of 2^i * b_i

F = Sponge[Keccak-p[1600,n_r=12], pad10*1, r=1344]

dS = 2^|Sbits| + sum for i=0..|Sbits|-1 of 2^i*Sbits_i
S = M || C || right_encode( |C| )

S = S_0 || .. || S_n-1
               |S_0| = .. = |S_n-2| = 8192 bytes
               |S_n-1| <= 8192 bytes

Node_i  = S_i+1 || `110`
CV_i    = F( Node_i, 32 )

x = sum from i=0..n of 256^i * x_i

S = 0^0

S = x % 256 || S
x = x / 256

S = S || length(S)

R = "D5"

lanes = lanes[x][y]^D[x]

current = lanes[x][y]
R = ((R << 1) ^ ((R >> 7)* "71")) % 256
state = 0^0
state = state || lanes[x][y]

state = "00^200"
blockSize = 0
offset = 0

blockSize = min( |inputBytes| - offset, 168)
offset = offset + blockSize

state = Keccak-p_1600_12(state)
blockSize = 0

state = Keccak-p_1600_12(state)
state = Keccak-p_1600_12(state)

blockSize = min(outputByteLen, 168)
outputBytes = outputBytes || state[0:blockSize]
outputByteLen = outputByteLen - blockSize

state = Keccak-p_1600_12(state)

S = inputMessage || customString
S = S || right_encode( |customString| )

offset = 8192
blockSize = min( |inputBytes| - offset, 8192)
CV = F(inputBytes[offset : offset + blockSize], "0B", 32)
offset = offset + blockSize

