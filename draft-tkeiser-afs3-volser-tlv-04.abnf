AFSVOL_TLV_TYPE_NULL          = 0,
AFSVOL_TLV_TYPE_TRUE          = 1,
AFSVOL_TLV_TYPE_FALSE         = 2,
AFSVOL_TLV_TYPE_UINT64        = 3,
AFSVOL_TLV_TYPE_UINT64_VEC    = 4,
AFSVOL_TLV_TYPE_INT64         = 5,
AFSVOL_TLV_TYPE_INT64_VEC     = 6,
AFSVOL_TLV_TYPE_UUID          = 7,
AFSVOL_TLV_TYPE_STRING        = 8,
AFSVOL_TLV_TYPE_TIME_ABS      = 9,
AFSVOL_TLV_TYPE_TIME_ABS_VEC  = 10,
AFSVOL_TLV_TYPE_TIME_REL      = 11,
AFSVOL_TLV_TYPE_TIME_REL_VEC  = 12,
AFSVOL_TLV_TYPE_VOL_ID        = 13,
AFSVOL_TLV_TYPE_VOL_ID_VEC    = 14,
AFSVOL_TLV_TYPE_PART_ID       = 15,
AFSVOL_TLV_TYPE_PART_ID_VEC   = 16,
AFSVOL_TLV_TYPE_DISK_BLOCKS   = 17,
AFSVOL_TLV_TYPE_STAT_COUNTER  = 18,
AFSVOL_TLV_TYPE_STAT_GAUGE    = 19,
AFSVOL_TLV_TYPE_BIT64         = 20,
AFSVOL_TLV_TYPE_VOL_DOW_USE   = 21,
AFSVOL_TLV_TYPE_OPAQUE        = 22





AFSVOL_TLV_TYPE_NULL = 0

       This shall map to type XDR void in the AFSVol_TLV_value union.

AFSVOL_TLV_TYPE_TRUE = 1

       This shall map to type XDR void in the AFSVol_TLV_value union.
       It is used to communicate the boolean value true.

AFSVOL_TLV_TYPE_FALSE = 2

       This shall map to type XDR void in the AFSVol_TLV_value union.
       It is used to communicate the boolean value false.

AFSVOL_TLV_TYPE_UINT64 = 3

       This shall map to type afs_uint64 in the AFSVol_TLV_value union.
       The semantics of this field are defined by the tag.






AFSVOL_TLV_TYPE_UINT64_VEC = 4

       This shall map to an XDR variable length vector of up to 32768
       afs_uint64 values.  The semantics of this field are defined by
       the tag.

AFSVOL_TLV_TYPE_INT64 = 5

       This shall map to type afs_int64 in the AFSVol_TLV_value union.
       The semantics of this field are defined by the tag.

AFSVOL_TLV_TYPE_INT64_VEC = 6

       This shall map to an XDR variable length vector of up to 32768
       afs_int64 values.  The semantics of this field are defined by the
       tag.

AFSVOL_TLV_TYPE_UUID = 7

       This shall map to an afsUUID
       [I-D.keiser-afs3-xdr-primitive-types] type.

AFSVOL_TLV_TYPE_STRING = 8

       This shall map to an XDR string of maximum length 262144.  The
       semantics of this field are defined by the tag.

AFSVOL_TLV_TYPE_TIME_ABS = 9

       This shall map to an AFSTime in the AFSVol_TLV_value union.  This
       absolute timestamp shall be encoded using the rules specified in
       the AFS-3 time type specification [I-D.deason-afs3-type-time].

AFSVOL_TLV_TYPE_TIME_ABS_VEC = 10

       This shall map to an XDR variable length vector of up to 21845
       AFSTime values in the AFSVol_TLV_value union.  The absolute
       timestamp contained within each vector element shall be encoded
       using the rules specified in the AFS-3 time type specification
       [I-D.deason-afs3-type-time].

AFSVOL_TLV_TYPE_TIME_REL = 11

       This shall map to an AFSRelTimestamp in the AFSVol_TLV_value
       union.  This relative timestamp (time interval) shall be encoded
       using the rules specified in the AFS-3 time type specification
       [I-D.deason-afs3-type-time].






AFSVOL_TLV_TYPE_TIME_REL_VEC = 12

       This shall map to an XDR variable length vector of up to 32768
       AFSRelTimestamp values in the AFSVol_TLV_value union.  The
       relative timestamp (time interval) contained within each vector
       element shall be encoded using the rules specified in the AFS-3
       time type specification [I-D.deason-afs3-type-time].

AFSVOL_TLV_TYPE_VOL_ID = 13

       This shall map to an afs_uint64 in the AFSVol_TLV_value union.
       This field shall contain an AFS-3 volume identifier.  When
       transmitting 32-bit volume identifiers, the upper 32 bits of this
       field MUST all be zeroes.

AFSVOL_TLV_TYPE_VOL_ID_VEC = 14

       This shall map to an XDR variable length vector of up to 32768
       afs_uint64 values in the AFSVol_TLV_value union.  The elements
       within this vector shall contain AFS-3 volume identifiers.  When
       transmitting 32-bit volume identifiers, the upper 32 bits of the
       value MUST all be zeroes.

AFSVOL_TLV_TYPE_PART_ID = 15

       This shall map to an afs_uint64 in the AFSVol_TLV_value union.
       This field shall contain an AFS-3 vice partition identifier.
       When transmitting 32-bit partition identifiers, the upper 32 bits
       of this field MUST all be zeroes.

AFSVOL_TLV_TYPE_PART_ID_VEC = 16

       This shall map to an XDR variable length vector of up to 32768
       afs_uint64 values in the AFSVol_TLV_value union.  The elements
       within this vector shall contain AFS-3 vice partition
       identifiers.  When transmitting 32-bit partition identifiers, the
       upper 32 bits of the value MUST all be zeroes.

AFSVOL_TLV_TYPE_DISK_BLOCKS = 17

       This shall map to an afs_uint64 in the AFSVol_TLV_value union.
       This field shall contain an unsigned integer count in units of
       (1024 octet) disk blocks.

AFSVOL_TLV_TYPE_STAT_COUNTER = 18

       This shall map to an afs_uint64 in the AFSVol_TLV_value union.
       This field shall contain an unsigned integer counter statistic.





AFSVOL_TLV_TYPE_STAT_GAUGE = 19

       This shall map to an afs_int64 in the AFSVol_TLV_value union.
       This field shall contain a signed integer gauge (level)
       statistic.

AFSVOL_TLV_TYPE_BIT64 = 20

       This shall map to an afs_uint64 in the AFSVol_TLV_value union.
       This field shall contain a 64-bit bit field.

AFSVOL_TLV_TYPE_VOL_DOW_USE = 21

       This shall map to an type AFSVol_stat_use_per_dow, as defined in
       Section 6.4.

AFSVOL_TLV_TYPE_OPAQUE = 22

       This shall map to an XDR opaque byte array of maximum length
       262144.  The semantics and encoding of this field are defined by
       the tag (please see Section 4.1.3 for further discussion).

AFSVOL_TLV_FLAG_UNSUPPORTED = 0x1

       When this flag is asserted, it tells the RPC caller that this tag
       is not supported by this server.

AFSVOL_TLV_FLAG_READ_ERROR = 0x2

       When this flag is asserted, it tells the RPC caller that the
       server was unable to read a value for this tag, despite the tag
       being supported by the server.

AFSVOL_TLV_FLAG_CRITICAL = 0x4

       When this flag is asserted, it informs the peer that failure to
       decode the payload associated with this tag is a fatal error that
       should result in aborting this RPC call.









AFSVOL_TLV_FLAG_QUALIFIER_NO_MATCH = 0x8

       When this flag is asserted, it informs the caller that the
       qualifier passed in did not match any record.

AFSVOL_TLV_FLAG_MORE = 0x10

       When this flag is asserted, it informs the caller that the server
       was unable to send all available tags because the
       AFSVOL_TLV_TAG_MAX XDR vector length limit was exceeded.

AFSVOL_TLV_FLAG_OBJ_NOT_SUPP = 0x20

       When this flag is asserted, it tells the RPC caller that the
       object in question does not support this specific tag, despite
       the tag generally being supported by the server.  An example of
       this scenario could be a volume object which was created using a
       format too old to support new metadata fields.

AFSVOL_VOL_STATE_EXPL_NONE = 0,
AFSVOL_VOL_STATE_EXPL_UNKNOWN = 1,
AFSVOL_VOL_STATE_EXPL_OUT_OF_SERVICE = 2,
AFSVOL_VOL_STATE_EXPL_DELETED = 3,
AFSVOL_VOL_STATE_EXPL_READY = 4,
AFSVOL_VOL_STATE_EXPL_ATTACHING = 5,
AFSVOL_VOL_STATE_EXPL_DETACHING = 6,
AFSVOL_VOL_STATE_EXPL_BUSY = 7,
AFSVOL_VOL_STATE_EXPL_IO_BUSY = 8,
AFSVOL_VOL_STATE_EXPL_SALVAGING = 9,
AFSVOL_VOL_STATE_EXPL_SALVAGE_NEEDED = 10,
AFSVOL_VOL_STATE_EXPL_ERROR = 11,
AFSVOL_VOL_STATE_EXPL_VOLUME_OPERATION = 12
AFSVOL_PROGRAM_TYPE_NONE = 0,
AFSVOL_PROGRAM_TYPE_FILE_SERVER = 1,
AFSVOL_PROGRAM_TYPE_VOLUME_SERVER = 2,
AFSVOL_PROGRAM_TYPE_SALVAGER = 3,
AFSVOL_PROGRAM_TYPE_SALVAGE_SERVER = 4,
AFSVOL_PROGRAM_TYPE_VOLUME_UTILITY = 5,
AFSVOL_PROGRAM_TYPE_UNKNOWN = 6
AFSVOL_TLV_TYPE_NULL          = 0,
AFSVOL_TLV_TYPE_TRUE          = 1,
AFSVOL_TLV_TYPE_FALSE         = 2,
AFSVOL_TLV_TYPE_UINT64        = 3,
AFSVOL_TLV_TYPE_UINT64_VEC    = 4,
AFSVOL_TLV_TYPE_INT64         = 5,
AFSVOL_TLV_TYPE_INT64_VEC     = 6,
AFSVOL_TLV_TYPE_UUID          = 7,
AFSVOL_TLV_TYPE_STRING        = 8,
AFSVOL_TLV_TYPE_TIME_ABS      = 9,
AFSVOL_TLV_TYPE_TIME_ABS_VEC  = 10,
AFSVOL_TLV_TYPE_TIME_REL      = 11,
AFSVOL_TLV_TYPE_TIME_REL_VEC  = 12,
AFSVOL_TLV_TYPE_VOL_ID        = 13,
AFSVOL_TLV_TYPE_VOL_ID_VEC    = 14,
AFSVOL_TLV_TYPE_PART_ID       = 15,
AFSVOL_TLV_TYPE_PART_ID_VEC   = 16,
AFSVOL_TLV_TYPE_DISK_BLOCKS   = 17,
AFSVOL_TLV_TYPE_STAT_COUNTER  = 18,
AFSVOL_TLV_TYPE_STAT_GAUGE    = 19,
AFSVOL_TLV_TYPE_BIT64         = 20,
AFSVOL_TLV_TYPE_VOL_DOW_USE   = 21,
AFSVOL_TLV_TYPE_OPAQUE        = 22
AFSVOL_VOL_STATE_EXPL_NONE = 0,
AFSVOL_VOL_STATE_EXPL_UNKNOWN = 1,
AFSVOL_VOL_STATE_EXPL_OUT_OF_SERVICE = 2,
AFSVOL_VOL_STATE_EXPL_DELETED = 3,
AFSVOL_VOL_STATE_EXPL_READY = 4,
AFSVOL_VOL_STATE_EXPL_ATTACHING = 5,
AFSVOL_VOL_STATE_EXPL_DETACHING = 6,
AFSVOL_VOL_STATE_EXPL_BUSY = 7,
AFSVOL_VOL_STATE_EXPL_IO_BUSY = 8,
AFSVOL_VOL_STATE_EXPL_SALVAGING = 9,
AFSVOL_VOL_STATE_EXPL_SALVAGE_NEEDED = 10,
AFSVOL_VOL_STATE_EXPL_ERROR = 11,
AFSVOL_VOL_STATE_EXPL_VOLUME_OPERATION = 12
AFSVOL_PROGRAM_TYPE_NONE = 0,
AFSVOL_PROGRAM_TYPE_FILE_SERVER = 1,
AFSVOL_PROGRAM_TYPE_VOLUME_SERVER = 2,
AFSVOL_PROGRAM_TYPE_SALVAGER = 3,
AFSVOL_PROGRAM_TYPE_SALVAGE_SERVER = 4,
AFSVOL_PROGRAM_TYPE_VOLUME_UTILITY = 5,
AFSVOL_PROGRAM_TYPE_UNKNOWN = 6
AFSVOL_TLV_TAG_EOS = 0,
AFSVOL_TLV_TAG_VOL_NAME = 1,
AFSVOL_TLV_TAG_VOL_STATUS = 2,
AFSVOL_TLV_TAG_VOL_IN_USE = 3,
AFSVOL_TLV_TAG_VOL_ID = 4,
AFSVOL_TLV_TAG_VOL_TYPE = 5,
AFSVOL_TLV_TAG_VOL_CLONE_ID = 6,
AFSVOL_TLV_TAG_VOL_BACKUP_ID = 7,
AFSVOL_TLV_TAG_VOL_PARENT_ID = 8,
AFSVOL_TLV_TAG_VOL_COPY_DATE = 9,
AFSVOL_TLV_TAG_VOL_CREATE_DATE = 10,
AFSVOL_TLV_TAG_VOL_ACCESS_DATE = 11,
AFSVOL_TLV_TAG_VOL_UPDATE_DATE = 12,
AFSVOL_TLV_TAG_VOL_BACKUP_DATE = 13,
AFSVOL_TLV_TAG_VOL_SIZE = 14,
AFSVOL_TLV_TAG_VOL_FILE_COUNT = 15,
AFSVOL_TLV_TAG_VOL_QUOTA_BLOCKS = 16,
AFSVOL_TLV_TAG_VOL_STAT_USE_TODAY = 17,
AFSVOL_TLV_TAG_VOL_STAT_USE_PER_DOW = 18,
AFSVOL_TLV_TAG_VOL_STAT_READS = 19,
AFSVOL_TLV_TAG_VOL_STAT_WRITES = 20,
AFSVOL_TLV_TAG_VOL_STAT_FILE_SAME_AUTHOR = 21,
AFSVOL_TLV_TAG_VOL_STAT_FILE_DIFFERENT_AUTHOR = 22,
AFSVOL_TLV_TAG_VOL_STAT_DIR_SAME_AUTHOR = 23,
AFSVOL_TLV_TAG_VOL_STAT_DIR_DIFFERENT_AUTHOR = 24,
AFSVOL_TLV_TAG_VOL_TRANS_ID = 25,
AFSVOL_TLV_TAG_VOL_TRANS_TIME = 26,
AFSVOL_TLV_TAG_VOL_TRANS_CREATE_TIME = 27,
AFSVOL_TLV_TAG_VOL_TRANS_RETURN_CODE = 28,
AFSVOL_TLV_TAG_VOL_TRANS_ATTACH_MODE = 29,
AFSVOL_TLV_TAG_VOL_TRANS_STATUS = 30,
AFSVOL_TLV_TAG_VOL_TRANS_FLAGS = 31,
AFSVOL_TLV_TAG_VOL_TRANS_LAST_PROC_NAME = 32,
AFSVOL_TLV_TAG_VOL_TRANS_CALL_VALID = 33,
AFSVOL_TLV_TAG_VOL_TRANS_READ_NEXT = 34,





AFSVOL_TLV_TAG_VOL_TRANS_XMIT_NEXT = 35,
AFSVOL_TLV_TAG_VOL_TRANS_LAST_RECV_TIME = 36,
AFSVOL_TLV_TAG_VOL_TRANS_LAST_SEND_TIME = 37,
AFSVOL_TLV_TAG_VOL_IN_SERVICE = 38,
AFSVOL_TLV_TAG_VOL_BLESSED = 39,
AFSVOL_TLV_TAG_VOL_RESTORED_FROM_ID = 40,
AFSVOL_TLV_TAG_VOL_DESTROYED = 41,
AFSVOL_TLV_TAG_VOL_NEEDS_SALVAGE = 42,
AFSVOL_TLV_TAG_VOL_OFFLINE_MESSAGE = 43,
AFSVOL_TLV_TAG_VOL_EXPIRATION_DATE = 44,
AFSVOL_TLV_TAG_VOL_QUOTA_RESERVATION = 45,
AFSVOL_TLV_TAG_VOL_STAT_USE_TODAY_DATE = 46,
AFSVOL_TLV_TAG_VOL_STATE_ONLINE = 47,
AFSVOL_TLV_TAG_VOL_STATE_AVAILABLE = 48,
AFSVOL_TLV_TAG_VOL_STATE_EXPL = 49,
AFSVOL_TLV_TAG_VOL_STATE_DAFS_RAW = 50,
AFSVOL_TLV_TAG_VOL_STATE_OWNING_PROCESS = 51,
AFSVOL_TLV_TAG_VOL_QUOTA_BLOCKS_STORED_LOCALLY = 52,
AFSVOL_TLV_TAG_VOL_QUOTA_FILES = 53
