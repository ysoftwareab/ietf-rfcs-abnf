Internet Draft                                         Keith McCloghrie
                                                     Cisco Systems, Inc.
                                                           Andy Bierman
                                                     Cisco Systems, Inc.
                                                         27 August 1999

         SMI Extensions for Additional High Capacity Data Types

                    <draft-kzm-hcdata-types-00.txt>

Status of this Memo

This document is an Internet-Draft and is in full conformance with all
provisions of Section 10 of RFC2026 [RFC2026].

Internet-Drafts are working documents of the Internet Engineering Task
Force (IETF), its areas, and its working groups.  Note that other groups
may also distribute working documents as Internet-Drafts.

Internet-Drafts are draft documents valid for a maximum of six months
and may be updated, replaced, or obsoleted by other documents at any
time.  It is inappropriate to use Internet- Drafts as reference material
or to cite them other than as "work in progress."

The list of current Internet-Drafts can be accessed at
http://www.ietf.org/ietf/1id-abstracts.txt

The list of Internet-Draft Shadow Directories can be accessed at
http://www.ietf.org/shadow.html.

Distribution of this document is unlimited. Please send comments to the
authors.

1.  Copyright Notice

Copyright (C) The Internet Society (1999).  All Rights Reserved.

Internet-Draft          High Capacity Data Types             August 1999

2.  Abstract

This memo defines extensions to the Structure of Management Information
[SMIv2] for the purpose of providing a broader range of data types for
high capacity numbers.

3.  Table of Contents

1 Copyright Notice ................................................    1
2 Abstract ........................................................    2
3 Table of Contents ...............................................    2
4 The SNMP Management Framework ...................................    2
5 Overview ........................................................    3
5.1 New Base Types Needed .........................................    3
5.2 Backward Compatibility with Counter64 .........................    4
6 New Data Types ..................................................    4
6.1 Gauge64 .......................................................    5
6.2 Unsigned64 ....................................................    5
6.3 Integer64 .....................................................    5
6.4 Use of the New Data Types .....................................    5
6.5 Implementation of Integer64 ...................................    5
7 Definitions .....................................................    7
8 Intellectual Property ...........................................    8
9 References ......................................................    8
10 Security Considerations ........................................   11
11 Authors' Addresses .............................................   12
12 Full Copyright Statement .......................................   13

4.  The SNMP Management Framework

   The SNMP Management Framework presently consists of five major
   components:

    o   An overall architecture, described in RFC 2571 [RFC2571].

    o   Mechanisms for describing and naming objects and events for the
        purpose of management. The first version of this Structure of
        Management Information (SMI) is called SMIv1 and described in
        RFC 1155 [RFC1155], RFC 1212 [RFC1212] and RFC 1215 [RFC1215].
        The second version, called SMIv2, is described in RFC 2578
        [RFC2578], RFC 2579 [RFC2579] and RFC 2580 [RFC2580].

    o   Message protocols for transferring management information. The
        first version of the SNMP message protocol is called SNMPv1 and
        described in RFC 1157 [RFC1157]. A second version of the SNMP

Expires February 2000                                           [Page 2]

Internet-Draft          High Capacity Data Types             August 1999

        message protocol, which is not an Internet standards track
        protocol, is called SNMPv2c and described in RFC 1901 [RFC1901]
        and RFC 1906 [RFC1906]. The third version of the message
        protocol is called SNMPv3 and described in RFC 1906 [RFC1906],
        RFC 2572 [RFC2572] and RFC 2574 [RFC2574].

    o   Protocol operations for accessing management information. The
        first set of protocol operations and associated PDU formats is
        described in RFC 1157 [RFC1157]. A second set of protocol
        operations and associated PDU formats is described in RFC 1905
        [RFC1905].

    o   A set of fundamental applications described in RFC 2573
        [RFC2573] and the view-based access control mechanism described
        in RFC 2575 [RFC2575].

   A more detailed introduction to the current SNMP Management Framework
   can be found in RFC 2570 [RFC2570].

   Managed objects are accessed via a virtual information store, termed
   the Management Information Base or MIB.  Objects in the MIB are
   defined using the mechanisms defined in the SMI.

   This document does not define a MIB module.

5.  Overview

There is a need for a standardized way of representing different types
of high capacity numbers in MIB modules, in a manner suitable for use
with existing SNMP engines.  The SMIv2 [RFC2578] currently contains
support for high-speed counters (i.e., Counter64), but does not contain
support for 64 bit gauges or (signed and unsigned) integers.

5.1.  New Base Types Needed

There are standards track MIBs in progress, which require 64 bit gauges
and integers. In order to support Gigabit Ethernet and other high speed
interfaces properly, the following new base types are needed:

  - Gauge64

  - Unsigned64

  - Integer64

Expires February 2000                                           [Page 3]

Internet-Draft          High Capacity Data Types             August 1999

Encoding rules and semantics for these new types need to be in a
document which augments, but does not invalidate anything contained in
the existing SMI documents.

During IETF WG discussions about progressing the SNMPv2 specifications
(RFCs 1902-1908) to a higher level of the standardization status, the
issue of supporting new SMI data types was deferred to the future.  One
school of thought suggests that such future SMI capability should be a
generalized solution for being able to transition to support any new
data type.  However, the definition of a generalized solution will take
time, both to specify and to get implementations of it deployed.  The
updates to the SMIv2 specified in this memo are not intended to
prejudice the argument about whether such a generalized solution is
needed.

Meanwhile, there is an immediate need to add data types for 64 bit
signed and unsigned numbers, and that these additions be done in a way
that will be supportable by any underlying SNMP engine which already
implements Counter64 MIB objects.

The approach in this memo is motivated by the observation that the SMIv2
specification already specifies two base-level data types (Gauge32 and
Unsigned32) which map onto the same underlying ASN.1 tag, and thus are
indistinguishable when contained in an SNMP packet in transmission.  So,
why not have the additional high capacity data types map onto the same
underlying ASN.1 tag as Counter64, so that they are similarly
indistinguishable when contained in an SNMP packet?

5.2.  Backward Compatibility with Counter64

In order to be backward compatible with existing implementations of
Counter64, the encoding of Gauge64 and Unsigned64 objects needs to be
identical to the encoding of Counter64 objects, i.e., identified by the
[APPLICATION 6] ASN.1 tag.

For Integer64 objects, which are signed 64 bit numbers, an algorithm is
needed to convert between signed and unsigned 64 bit numbers.

6.  New Data Types

The three new types are defined as follows:

Expires February 2000                                           [Page 4]

Internet-Draft          High Capacity Data Types             August 1999

6.1.  Gauge64

The Gauge64 type represents a non-negative integer, which may increase
or decrease, but shall never exceed a maximum value, nor fall below a
minimum value.  The maximum value can not be greater than 2^64-1
(18446744073709551615 decimal), and the minimum value can not be smaller
than 0.  The value of a Gauge64 has its maximum value whenever the
information being modeled is greater than or equal to its maximum value,
and has its minimum value whenever the information being modeled is
smaller than or equal to its minimum value.  If the information being
modeled subsequently decreases below (increases above) the maximum
(minimum) value, the Gauge64 also decreases (increases).  (Note that
despite of the use of the term "latched" in the original definition of
this type, it does not become "stuck" at its maximum or minimum value.)

6.2.  Unsigned64

The Unsigned64 type represents integer-valued information between 0 and
2^64-1 inclusive (0 to 18446744073709551615 decimal).

6.3.  Integer64

The Integer64 type represents integer-valued information between -2^63
and 2^63-1 inclusive (-9223372036854775808 to 9223372036854775807
decimal).

6.4.  Use of the New Data Types

It needs to be possible to use these new data types in the SYNTAX clause
of the OBJECT-TYPE macro.  The appropriate way to do that is to include
them in the definition of ApplicationSyntax [SMIv2].

6.5.  Implementation of Integer64

Existing engine implementations may expect a value encoded as
'[APPLICATION 6]' to be an unsigned integer between 0 and 2^64-1, and
internal data types and Application Program Interfaces (APIs) may be
specific to 64 bit unsigned integers.  However, the Integer64 data type
represents signed 64 bit integers.

In implementation, the 'sign-ness' of a binary number is a matter of
interpretation. For machines with two's complement architectures, the
same bit pattern in memory can be identified as two different numbers,
depending on its interpretation as a binary (unsigned) or twos-
complement (signed) number.

Expires February 2000                                           [Page 5]

Internet-Draft          High Capacity Data Types             August 1999

In order to remain compatible with existing implementations, the
Integer64 data type is encoded as if it were in binary representation,
and therefore an unsigned number.

It is expected that low-level SNMP engines will encode and decode this
type in a manner indistinguishable from Counter64 MIB objects, and high-
level, object-specific handlers will be able to easily convert from an
arbitrary 'internal' representation to a twos-complement representation,
and then to a binary representation.  Similarly, an SNMP engine will be
able to easily convert from a binary representation to a twos-complement
representation, and then (possibly) to an arbitrary 'internal'
representation.

During the encoding process, numbers less than zero will be interpreted
by the low-level engine as large integers, and ASN.1 encoded as an
integer in the range 2^63 to 2^64-1 (9223372036854775808 to
18446744073709551615 decimal).

During the ASN.1 decode process, 'negative' numbers (i.e., objects
containing values greater or equal to 2^63 (9223372036854775808
decimal)) will probably be stored in memory in binary representation, by
the low-level engine.  The high-level object-specific handler functions
(which are written to expect the Integer64 data type) will then examine
this number in twos-complement representation, and correctly interpret
the decoded value as a negative number.

Expires February 2000                                           [Page 6]

Internet-Draft          High Capacity Data Types             August 1999

7.  Definitions

The following definitions need to be added/modified in the SMI in order
to specify the ASN.1 encoding rules for each new data type.

SMIv2-HCNUM-EXT DEFINITIONS ::= BEGIN

   -- an unsigned 64-bit quantity
Gauge64 ::=
    [APPLICATION 6]
        IMPLICIT INTEGER (0..18446744073709551615)

   -- an unsigned 64-bit quantity
Unsigned64 ::=
    [APPLICATION 6]
        IMPLICIT INTEGER (0..18446744073709551615)

   -- a 'signed' 64-bit quantity
Integer64 ::=
    [APPLICATION 6]
        IMPLICIT INTEGER (0..18446744073709551615)

ApplicationSyntax ::=
     CHOICE {
         ipAddress-value
            IpAddress,

         counter-value
             Counter32,

         timeticks-value
             TimeTicks,

         arbitrary-value
             Opaque,

         big-counter-value  -- includes Gauge64, Counter64
             Counter64,     -- includes Integer64

         unsigned-integer-value  -- includes Gauge32
             Unsigned32
     }

END

Expires February 2000                                           [Page 7]

Internet-Draft          High Capacity Data Types             August 1999

8.  Intellectual Property

The IETF takes no position regarding the validity or scope of any
intellectual property or other rights that might be claimed to  pertain
to the implementation or use of the technology described in this
document or the extent to which any license under such rights might or
might not be available; neither does it represent that it has made any
effort to identify any such rights.  Information on the IETF's
procedures with respect to rights in standards-track and standards-
related documentation can be found in BCP-11.  Copies of claims of
rights made available for publication and any assurances of licenses to
be made available, or the result of an attempt made to obtain a general
license or permission for the use of such proprietary rights by
implementors or users of this specification can be obtained from the
IETF Secretariat.

The IETF invites any interested party to bring to its attention any
copyrights, patents or patent applications, or other proprietary rights
which may cover technology that may be required to practice this
standard.  Please address the information to the IETF Executive
Director.

9.  References

[RFC1155]
     Rose, M., and K. McCloghrie, "Structure and Identification of
     Management Information for TCP/IP-based Internets", RFC 1155, STD
     16, Performance Systems International, Hughes LAN Systems, May
     1990.

[RFC1157]
     Case, J., Fedor, M., Schoffstall, M., and J. Davin, "Simple Network
     Management Protocol", RFC 1157, STD 15, SNMP Research, Performance
     Systems International, Performance Systems International, MIT
     Laboratory for Computer Science, May 1990.

[RFC1212]
     Rose, M., and K. McCloghrie, "Concise MIB Definitions", RFC 1212,
     STD 16, Performance Systems International, Hughes LAN Systems,
     March 1991.

[RFC1215]
     M. Rose, "A Convention for Defining Traps for use with the SNMP",
     RFC 1215, Performance Systems International, March 1991.

Expires February 2000                                           [Page 8]

Internet-Draft          High Capacity Data Types             August 1999

[RFC1901]
     Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
     "Introduction to Community-based SNMPv2", RFC 1901, SNMP Research,
     Inc., Cisco Systems, Inc., Dover Beach Consulting, Inc.,
     International Network Services, January 1996.

[RFC1905]
     Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Protocol
     Operations for Version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1905, SNMP Research, Inc., Cisco Systems, Inc.,
     Dover Beach Consulting, Inc., International Network Services,
     January 1996.

[RFC1906]
     Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Transport
     Mappings for Version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1906, SNMP Research, Inc., Cisco Systems, Inc.,
     Dover Beach Consulting, Inc., International Network Services,
     January 1996.

[RFC2026]
     Bradner, S., "The Internet Standards Process -- Revision 3", RFC
     2026, Harvard University, October, 1996.

[RFC2570]
     Case, J., Mundy, R., Partain, D., and B. Stewart, "Introduction to
     Version 3 of the Internet-standard Network Management Framework",
     RFC 2570, SNMP Research, Inc., TIS Labs at Network Associates,
     Inc., Ericsson, Cisco Systems, April 1999.

[RFC2571]
     Harrington, D., Presuhn, R., and B. Wijnen, "An Architecture for
     Describing SNMP Management Frameworks", RFC 2571, Cabletron
     Systems, Inc., BMC Software, Inc., IBM T. J. Watson Research, April
     1999.

[RFC2572]
     Case, J., Harrington D., Presuhn R., and B. Wijnen, "Message
     Processing and Dispatching for the Simple Network Management
     Protocol (SNMP)", RFC 2572, SNMP Research, Inc., Cabletron Systems,
     Inc., BMC Software, Inc., IBM T. J. Watson Research, April 1999.

[RFC2573]
     Levi, D., Meyer, P., and B. Stewart, "SNMPv3 Applications", RFC
     2573, SNMP Research, Inc., Secure Computing Corporation, Cisco

Expires February 2000                                           [Page 9]

Internet-Draft          High Capacity Data Types             August 1999

     Systems, April 1999.

[RFC2574]
     Blumenthal, U., and B. Wijnen, "User-based Security Model (USM) for
     version 3 of the Simple Network Management Protocol (SNMPv3)", RFC
     2574, IBM T. J. Watson Research, April 1999.

[RFC2575]
     Wijnen, B., Presuhn, R., and K. McCloghrie, "View-based Access
     Control Model (VACM) for the Simple Network Management Protocol
     (SNMP)", RFC 2575, IBM T. J. Watson Research, BMC Software, Inc.,
     Cisco Systems, Inc., April 1999.

[RFC2578]
     McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose, M.,
     and S. Waldbusser, "Structure of Management Information Version 2
     (SMIv2)", RFC 2578, STD 58, Cisco Systems, SNMPinfo, TU
     Braunschweig, SNMP Research, First Virtual Holdings, International
     Network Services, April 1999.

[RFC2579]
     McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose, M.,
     and S. Waldbusser, "Textual Conventions for SMIv2", RFC 2579, STD
     58, Cisco Systems, SNMPinfo, TU Braunschweig, SNMP Research, First
     Virtual Holdings, International Network Services, April 1999.

[RFC2580]
     McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose, M.,
     and S. Waldbusser, "Conformance Statements for SMIv2", RFC 2580,
     STD 58, Cisco Systems, SNMPinfo, TU Braunschweig, SNMP Research,
     First Virtual Holdings, International Network Services, April 1999.

Expires February 2000                                          [Page 10]

Internet-Draft          High Capacity Data Types             August 1999

10.  Security Considerations

There are no security issues raised by this document.

Expires February 2000                                          [Page 11]

Internet-Draft          High Capacity Data Types             August 1999

11.  Authors' Addresses

     Keith McCloghrie
     Cisco Systems, Inc.
     170 West Tasman Drive
     San Jose, CA 95134 USA
     Phone: +1 408-526-5260
     Email: kzm@cisco.com

     Andy Bierman
     Cisco Systems, Inc.
     170 West Tasman Drive
     San Jose, CA 95134 USA
     Phone: +1 408-527-3711
     Email: abierman@cisco.com

Expires February 2000                                          [Page 12]

Internet-Draft          High Capacity Data Types             August 1999

12.  Full Copyright Statement

Copyright (C) The Internet Society (1999).  All Rights Reserved.

This document and translations of it may be copied and furnished to
others, and derivative works that comment on or otherwise explain it or
assist in its implementation may be prepared, copied, published and
distributed, in whole or in part, without restriction of any kind,
provided that the above copyright notice and this paragraph are included
on all such copies and derivative works.  However, this document itself
may not be modified in any way, such as by removing the copyright notice
or references to the Internet Society or other Internet organizations,
except as needed for the purpose of developing Internet standards in
which case the procedures for copyrights defined in the Internet
Standards process must be followed, or as required to translate it into
languages other than English.

The limited permissions granted above are perpetual and will not be
revoked by the Internet Society or its successors or assigns.

This document and the information contained herein is provided on an "AS
IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK
FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT
LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT
INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR
FITNESS FOR A PARTICULAR PURPOSE."

Expires February 2000                                          [Page 13]
