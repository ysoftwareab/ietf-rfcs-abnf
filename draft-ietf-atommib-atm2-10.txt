



          draft        Supplemental ATM Management Objects February 1997


                   Definitions of Supplemental Managed Objects
                                for ATM Management

                                  February 1997



                                Faye Ly  (editor)
                                 3Com Corporation
                                 fayely@3com.COM


                              Michael Noto (editor)
                          Network Equipment Technologies
                                mike_noto@net.com


                              Andrew Smith  (editor)
                                 Extreme Networks
                           ansmith@extremenetworks.com


                          Ethan Mickey Spiegel  (editor)
                          Cisco Systems
                           170 W. Tasman Drive
                            mspiegel@cisco.com


                               Kaj Tesink  (editor)
                           Bell Communications Research
                               kaj@cc.bellcore.com






          1.  Status of this Memo

          This document is an Internet Draft.  Internet Drafts are
          working documents of the Internet Engineering Task Force
          (IETF), its Areas, and its Working Groups.  Note that other
          groups may also distribute working documents as Internet
          Drafts.





          Expire Jan 98                                         [Page 1]




          draft        Supplemental ATM Management Objects February 1997


          Internet Drafts are valid for a maximum of six months and may
          be updated, replaced, or obsoleted by other documents at any
          time.  It is inappropriate to use Internet Drafts as reference
          material or to cite them other than as a "work in progress".













































          Expire Jan 98                                         [Page 2]




          draft        Supplemental ATM Management Objects February 1997


          2.  Introduction

          This memo defines an experimental portion of the Management
          Information Base (MIB) for use with network management
          protocols in the Internet community.  In particular, it
          describes objects used for managing ATM-based interfaces,
          devices, and services in addition to those defined in the ATM
          MIB [1], to provide additional support for the management of:
               - ATM Switched Virtual Connections (SVCs)
               - ATM Permanent Virtual Connections (PVCs)


          This memo specifies a MIB module in a manner that is both
          compliant to the SNMPv2 SMI, and semantically identical to the
          peer SNMPv1 definitions.

          This memo does not specify a standard for the Internet
          community.


          3.  Change Log

          This section tracks changes made to the revisions of the
          Internet Drafts of this document.  It will be deleted when the
          document is published as an RFC.

          Two additions were added to this document dated September
          1996: 1) The Service registry table which provide ATM service
          configuration information. and 2) ATM traps.

          4.  The SNMPv2 Network Management Framework

          The SNMPv2 Network Management Framework consists of four major
          components.  They are:

          0    RFC 1442 [2] which defines the SMI, the mechanisms used
               for describing and naming objects for the purpose of
               management.

          0    STD 17, RFC 1213 [3] defines MIB-II, the core set of
               managed objects for the Internet suite of protocols.

          0    RFC 1445 [4] which defines the administrative and other
               architectural aspects of the framework.





          Expire Jan 98                                         [Page 3]




          draft        Supplemental ATM Management Objects February 1997


          0    RFC 1448 [5] which defines the protocol used for network
               access to managed objects.

          The Framework permits new objects to be defined for the
          purpose of experimentation and evaluation.


          5.  Object Definitions

          Managed objects are accessed via a virtual information store,
          termed the Management Information Base or MIB.  Objects in the
          MIB are defined using the subset of Abstract Syntax Notation
          One (ASN.1) defined in the SMI.  In particular, each object
          type is named by an OBJECT IDENTIFIER, an administratively
          assigned name.  The object type together with an object
          instance serves to uniquely identify a specific instantiation
          of the object.  For human convenience, we often use a textual
          string, termed the descriptor, to also refer to the object
          type.


          6.  Overview

          The purpose of this memo is to provide additional
          capabilities, not found in the ATM MIB [1], which are needed
          to manage ATM interfaces.  This memo addresses the following
          areas:
               - ATM Switch Support
               - ATM Service Support
               - ATM Host Support
          In addition, this memo also provides ATM trap support.


          6.1.  Background

          In addition to the MIB module defined in this memo, other MIB
          modules are necessary to manage ATM interfaces, links and
          cross-connects.  Examples include MIB II for general system
          and interface management (RFC 1213 and RFC 1573), the DS3 or
          SONET MIBs for management of SONET and DS3 physical
          interfaces, and, as appropriate, MIB modules for applications
          that make use of ATM, such as SMDS [15] and LAN Emulation
          [14].  These MIB modules are outside the scope of this
          specification.





          Expire Jan 98                                         [Page 4]




          draft        Supplemental ATM Management Objects February 1997


          This MIB module also requires the use of the ATM MIB module
          defined in [1].

          ATM Endpoint applications such as ATM LAN Emulation or
          Classical IP-over-ATM Clients and Servers use ATM to establish
          SVC/PVC connections for exchanging control and data
          information. The agents of these ATM applications must provide
          the network manager with information on the SVC/PVCs in use
          and which applications are using them.  The information can be
          made generic so as to apply to all ATM applications.  This
          memo proposes extensions to the ATM MIB [1] in order to
          support this.

          The current specification of this supplemental ATM MIB is
          based on SNMPv2 SMI.

          6.2.  Important Definitions

          The following terms are defined here and used throughout this
          MIB:
               - Virtual Path Link (VPL)
               - Virtual Path Connection (VPC)
               - Virtual Path Segment (VP Segment)
               - Virtual Channel Link (VCL)
               - Virtual Channel Connection (VCC)
               - Virtual Channel Segment (VC Segment).


            _____      _______      _______      _______      _____
           |     |____|       |____|       |____|       |____|     |
           |Host1|    |SwitchA|    |SwitchB|    |SwitchC|    |Host2|
           |     |____|       |____|       |____|       |____|     |
           |_____|    |_______|    |_______|    |_______|    |_____|

               |<----->| Virtual          |<----->| Virtual
                         Path Link                  Path Link


               |<------------Virtual Path Connection---------->|
                             (between Host1 and Host2)


                              |<--------------->| Virtual Path
                                                  Segment (between





          Expire Jan 98                                         [Page 5]




          draft        Supplemental ATM Management Objects February 1997


                                                  SwitchA and SwitchC)

             Figure 1: Examples of Virtual Path Links, Virtual Path
                       Connection, and Virtual Path Segment













































          Expire Jan 98                                         [Page 6]




          draft        Supplemental ATM Management Objects February 1997


            _____      _______      _______      _______      _____
           |     |____|       |____|       |____|       |____|     |
           |Host1|----|SwitchA|----|SwitchB|----|SwitchC|----|Host2|
           |     |____|       |____|       |____|       |____|     |
           |_____|    |_______|    |_______|    |_______|    |_____|

               |<----->| Virtual          |<----->| Virtual
                         Channel Link               Channel Link


               |<----------Virtual Channel Connection--------->|
                           (between Host1 and Host2)


                              |<--------------->| Virtual Channel
                                                  Segment (between
                                                  SwitchA and SwitchC)

              Figure 2: Examples of Virtual Channel Links, Virtual
                    Channel Connection, and Virtual Channel Segment

          6.3.  Supported Functions

          The managed ATM objects are arranged as follows:

                    Table                         Host   Switch Service
              _____________________________________________________
                  atmSvcVcCrossConnectTable      |      |  Y   |  Y   |
                  atmSvcVpCrossConnectTable      |      |  Y   |  Y   |

                  atmSigStatTable                |  Y   |  Y   |  Y   |
                  atmSigSupportTable             |      |  Y   |  Y   |
                  atmSigDescrParamTable          |  Y   |      |      |

                  atmIfAdminAddrTable            |      |  Y   |  Y   |
                  atmVclAddrTable                |  Y   |      |      |
                  atmAddrVclTable                |  Y   |      |      |

                  atmVplStatTable                |  Y   |  Y   |  Y   |
                  atmVplLogicalPortTable         |  Y   |  Y   |  Y   |

                  atmVclStatTable                |  Y   |  Y   |  Y   |
                  atmVclGenTable                 |  Y   |      |      |
                  atmAal5VclStatTable            |  Y   |      |      |





          Expire Jan 98                                         [Page 7]




          draft        Supplemental ATM Management Objects February 1997


                  atmInterfaceExtTable           |  Y   |  Y   |  Y   |

                  atmIlmiSrvcRegTable            |      |  Y   |  Y   |
                  atmIlmiNetworkPrefixTable      |      |  Y   |  Y   |
                  atmSwitchAddressTable          |      |  Y   |  Y   |
                  atmCurrentlyFailingPVplTable   |  Y   |  Y   |  Y   |
                  atmCurrentlyFailingPVclTable   |  Y   |  Y   |  Y   |

                           Table 1: MIB structure

          6.3.1.  ATM SVC VC Cross Connect Table

          This table provides the SVC Cross Connect information.  The
          equivalent PVC VC Cross Connect table is defined in [1].  This
          table also includes cross-connect information for Soft PVCs.

          This group is used to model a bi-directional point-to-point,
          point-to-multipoint or multipoint-to-multipoint SVC VC cross-
          connect.

          This table has read-only access and is used to monitor the
          cross-connects which connect the VCLs together in an ATM
          switch or network that belong to a VC connection. The
          atmSvcVcCrossConnectIndex is used to associate the related SVC
          VCLs that are cross-connected together.  The
          atmSvcVcCrossConnectRowStatus object has read-write access to
          allow for tear-down.

          The ATM SVC VC Cross Connect Table models each bi-directional
          Switched Virtual Circuit (SVC) VC cross-connect as a set of
          entries in the atmSvcVcCrossConnectTable. A point-to-point VC
          cross-connect is modeled as one entry; a point-to-multipoint
          (N leafs) VC cross-connect as N entries in this table; and a
          multipoint-to-multipoint (N parties) VPC cross-connect as
          N(N-1)/2 entries in this table.  In the latter cases, all the
          N (or N(N-1)/2) entries are associated with a single VPC
          cross-connect by having the same value of
          atmSvcVcCrossConnectIndex.

               _________________________________________
               |                                       |
           Low |         ATM Switch or Network         | High
           port|                                       | port
          _____|>> from low to high VC traffic flow >>|______





          Expire Jan 98                                         [Page 8]




          draft        Supplemental ATM Management Objects February 1997


               |<< from high to low VC traffic flow <<|
               |                                       |
               |_______________________________________|
          --
                   Figure 9: VC Cross-Connect Model


          The terms low and high are chosen to represent numerical
          ordering of the two interfaces associated with a VPC cross-
          connect. That is, the ATM interface with the lower value of
          ifIndex is termed 'low', while the other ATM interface
          associated with the VPC cross-connect is termed 'high'. This
          terminology is used to provide directional information; for
          example, the atmSvcVcCrossConnectL2HOperStatus applies to the
          low->high direction, and atmSvcVcCrossConnectH2LOperStatus
          applies to the high->low direction.

          6.3.2.  ATM SVC VP Cross Connect Table

          This table provides the SVC VP Cross Connect information.  The
          equivalent PVC VP Cross Connect table is defined in [1].  This
          table also includes cross-connect information for Soft PVPs.

          This group contains configuration and state information of all
          SVC VP point-to-point, point-to-multipoint, or multipoint-to-
          multipoint VP cross-connects.

          This table has read-only access and can be used to monitor the
          cross-connects which connect the VPLs together in an ATM
          switch or network. The atmSvcVpCrossConnectIndex is used to
          associate the related SVC VPLs that are cross-connected
          together.  The atmSvcVpCrossConnectRowStatus object has read-
          write access to allow for tear-down.

          The ATM SVC VP Cross Connect Table models each bi-directional
          Switched Virtual Circuit (SVC) VP cross-connect as a set of
          entries in the atmSvcVpCrossConnectTable. A point-to-point VPC
          cross-connect is modeled as one entry; a point-to-multipoint
          (N leafs) VPC cross-connect as N entries in this table; and a
          multipoint-to-multipoint (N parties) VPC cross-connect as
          N(N-1)/2 entries in this table.  In the latter cases, all the
          N (or N(N-1)/2) entries are associated with a single VPC
          cross-connect by having the same value of
          atmSvcVpCrossConnectIndex.





          Expire Jan 98                                         [Page 9]




          draft        Supplemental ATM Management Objects February 1997


               _________________________________________
               |                                       |
           Low |         ATM Switch or Network         | High
           port|                                       | port
          _____|>> from low to high VPC traffic flow >>|______
               |<< from high to low VPC traffic flow <<|
               |                                       |
               |_______________________________________|
          --
                   Figure 9: VPC Cross-Connect Model


          The terms low and high are chosen to represent numerical
          ordering of the two interfaces associated with a VPC cross-
          connect. That is, the ATM interface with the lower value of
          ifIndex is termed 'low', while the other ATM interface
          associated with the VPC cross-connect is termed 'high'. This
          terminology is used to provide directional information; for
          example, the atmSvcVpCrossConnectL2HOperStatus applies to the
          low->high direction, and atmSvcVpCrossConnectH2LOperStatus
          applies to the high->low direction.

          6.3.3.  ATM Interface Signalling Statistics Table

          This table provides statistical information of the signalling
          entity.  A signalling entity can be deployed over an ATM
          interface as defined in the atmInterfaceConfTable [1], a
          logical ATM interface defined in section 6.3.10.1 in this
          document or a proprietary virtual interface as described
          atmInterfaceExtTable.  To monitor the signalling entity, a few
          counters are provided.  They are defined as:
                            atmSigSSCOPConEvents
                            atmSigSSCOPErrdPdus
                            atmSigDetectSetupAttempts
                            atmSigEmitSetupAttempts
                            atmSigDetectUnavailRoutes
                            atmSigEmitUnavailRoutes
                            atmSigDetectUnavailResrcs
                            atmSigEmitUnavailResrcs
                            atmSigDetectCldPtyEvents
                            atmSigEmitCldPtyEvents
                            atmSigDetectMsgErrors
                            atmSigEmitMsgErrors
                            atmSigDetectClgPtyEvents





          Expire Jan 98                                        [Page 10]




          draft        Supplemental ATM Management Objects February 1997


                            atmSigEmitClgPtyEvents
                            atmSigDetectTimerExpireds
                            atmSigEmitTimerExpireds
                            atmSigDetectRestarts
                            atmSigEmitRestarts
                            atmSigInEstabls
                            atmSigOutEstabls

          6.3.4.  ATM Signalling Capability Support

          A number of Information Elements may or may not be supported
          by ATM switches or ATM Service. Hence, for trouble isolation
          it is important to keep track which particular Information
          Elements are supported.  The corresponding group of objects
          must be supported by switches or services supporting SVCs, and
          indicate whether the following Information Elements are
          enabled/disabled:

          1)   Calling party number

          2)   Calling party subaddress

          3)   Called party subaddress

          4)   Broadband high layer information

          5)   Broadband low layer information

          6)   Broadband Repeat Indicator

          7)   AAL parameters

          The last parameter, Preferred Carrier Pre-Subscription,
          identifies the carrier to which intercarrier calls originated
          from this interface are routed when transit network selection
          information is not provided by the calling party.

          6.3.5.  Signalling Descriptor Parameter Table

          This table extends the ATM VCL table of the ATM MIB [1] to
          include all other necessary signalling information as
          specified in the ATM Forum UNI Specifications [9] and [10].  A
          user can create an entry with all signalling parameters and
          later use that entry to specify the signalling characteristics





          Expire Jan 98                                        [Page 11]




          draft        Supplemental ATM Management Objects February 1997


          of SVCs.

          Some of the signalling parameters such as the AAL5 parameters
          information element is reflected in the VCL and VPL tables,
          and this table only contains the remaining AAL5 parameters
          information.

          Signalling attributes can be grouped into following
          categories:

          1)   ATM Adaptation Layer Parameters

          Information in this group are captured in the ATM Signalling
          Descriptor Parameter Table defined in this memo.  Please refer
          to section 5.4.5.5 of [9] and [10].

          2)   Broadband High Layer Information

          Information in this group are captured by the ATM Signalling
          Descriptor Parameter Table defined in this memo.  Please refer
          to section 5.4.5.8 of [9] and [10].

          3)   Broadband Low Layer Information

          Information in this group are captured by the ATM Signalling
          Descriptor Parameter Table defined in this memo.  Please refer
          to section 5.4.5.9 of [9] and [10].


          6.3.6.  ATM Interface Administrative Address Table

          This table contains an ATM Interface Administrative Address
          Table (atmIfAdminAddrTable) which lists valid addresses for
          calls to and from a given interface.  One of these numbers
          shall be specified as the "default" number.  See also section
          6.

          6.3.7.  ATM VPI/VCI to Address Mapping Table

          In the atmVclAddrTable, the object atmVclAddrAddr can either
          be an ATM Local Address or an ATM Remote Address which
          represent the two endpoint addresses of a VCL.  ATM Local
          Address identifies the local endpoint of the VCL represented
          by this agent.  While, the ATM Remote address represents the





          Expire Jan 98                                        [Page 12]




          draft        Supplemental ATM Management Objects February 1997


          address of the ATM application at the other end of the VCL.

          6.3.8.  ATM Address to VPI/VCI Mapping Table

          This table provides an alternative way to retrieve the
          atmVclTable.  This table can be used to retrieve the indexing
          to the atmVclTable by an ATM address.

          6.3.9.  ATM VPL Statistics Table

          The atmVplStatTable includes per VPL cell counters.  The VPL
          cell counters count the valid ATM cells.  The valid ATM cells
          include the user and OAM cells but exclude the physical layer
          (e.g. idle cells) and unassigned cells.  Cells coming in to an
          ATM managed system are counted differently with the high Cell
          Loss Priority (CLP=0) or low Cell Loss Priority (CLP=1). The
          cells are tagged, passed or discarded depending on the
          incoming CLP value and the policed cell rate by the "traffic
          policing" entity in the ATM managed system.  Refer to [9] and
          [10] for the description of the traffic policing.

          In the switch where the traffic policing is not supported,
          cells are passed or discarded depending on the bandwidth of
          the switching fabric.  The Output Tagged Cells counter, in
          this case, is always zero.

                                _______________
                                | ATM Managed |
                     Input      | System      | Output
                     CLP=0 cells|             | CLP=0 cells
                     ---------->|             |----------->
                     CLP=1 cells| (traffic    | CLP=1 cells
                     ---------->| policing    |----------->
                                | entity)     | Tagged cells (CLP=1)
                                |_____________|----------->
                                 |Discard  | Discard
                                 |CLP=0    | CLP=1
                                 |cells    | cells
                                 |         |
                                 V         V


                 Figure 5. ATM Cell Counters per VPL






          Expire Jan 98                                        [Page 13]




          draft        Supplemental ATM Management Objects February 1997


          In this table, cells coming into and out of the managed ATM
          system are counted as the total number of cells and the cells
          with the CLP=0.  The CLP=1 counter is derived by substracting
          CLP=0 cells from the total cells.  In addition, cells that are
          tagged on the output are also counted.  The output CLP=1 cells
          equals to the total cells out count minus both the CLP=0 cells
          and the tagged cells.










































          Expire Jan 98                                        [Page 14]




          draft        Supplemental ATM Management Objects February 1997


          6.3.10.  ATM VPL Logical Port Table

          The ATM VPL Logical Port Table includes all ATM logical port
          interface configuration information.

          6.3.10.1.  ATM Logical Port Interface

          The interface type "ATM Logical Port" (ifType=80) is defined
          to allow the representation of a VP Tunnel, which is a VPL
          used as a trunk connection (most likely between devices that
          are not physically adjacent), providing for multiplexing and
          demultiplexing of VCs on the VP.  Figure 6 illustrates such a
          VP Tunnel.

          Note: the "ATM Logical Port" interface is more of a logical
          port, compared with an interface of type "ATM" which is more
          of a physical port that provides for the transport of many VP
          and VC connections between adjacent devices.































          Expire Jan 98                                        [Page 15]




          draft        Supplemental ATM Management Objects February 1997


                               <------VP Tunnel------>
                         ATM Switch A             ATM Switch B
                        ------------             -----------
                        |ATM       |_____________|ATM       |
                        |X-Connect |      .      |X-Connect |
                 VCL1   |Point     | VPL1 . VPL2 |Point     |  VCL4
              O---------|----X-----|----- . -----|----X-----|-----O
                        |    X-----|----- . -----|----X     |
                        |    |     |_____________|    |     |
                        ------------             ------------
                             | VCL2                   | VCL3
                             O                        O

                           Figure 6: Virtual Path Tunnel


          In Figure 6, a VP tunnel (denoted as VPL1 by Switch A, and as
          VPL2 by Switch B) is used to connect VCL1 with VCL4 and VCL2
          with VCL3. Figure 6 shows only one VP tunnel, but there can be
          multiple VP tunnels over the same physical interface.

          A particularly useful VP tunnel scenario is tunneling across a
          public network that does not support signalling. In Figure 6
          above, assume Switches A and B are private switches that
          signal over the VP to set up connections transparently through
          the public network. The public network would just transport a
          PVC VP between the two switches.

          Because the VP Tunnel constitutes an interface between two ATM
          devices that are not necessarily physically adjacent, most of
          the management information pertaining to the interface may
          differ for the tunnel, including:
                  - active VPI/VCI fields (the tunnel may be a subset
                    of the parent interface).
                  - maximum number of VCCs
                  - configured VCCs
                  - ILMI VPI/VCI values
                  - ATM address type
                  - ATM administrative address
                  - received/transmitted cells.









          Expire Jan 98                                        [Page 16]




          draft        Supplemental ATM Management Objects February 1997


          6.3.10.2.  How to create an ATM logical interface

          The ATM Logical Port Interface Table is used only by devices
          supporting VP tunnels. To create an ATM Logical Port interface
          via SNMP:
                  - Create a VPL (e.g., VPI=a on an existing ATM interface
                    which has ifIndex=x) in the atmVplTable.

                  - Set the object atmVplLogicalPortDef to isLogicalIf.
                    A new row in the ifTable is then created by the agent, with
                    ifIndex=y, to represent the ATM Logical Port interface.
                    The object atmVplLogicalPortIndex is also set to y by the
                    agent to represent the ifIndex value of the ATM Logical
                    Port interface.

                  - The ifEntry values are set for the ATM Logical
                    Port interface (ifIndex=y) as discussed in RFC
                    1695, with the following exceptions:
                          * ifType - a new enumerated value of "80" was
                            added to IANAifType, specifying an "ATM
                            Logical Port" interface.
                          * ifSpeed - The total bandwidth in bits per
                            second for use by the ATM layer. Computed
                            from the traffic descriptor for the VPL.
                          * ifOperStatus - determined hierarchically,
                            depending on the state of the physical
                            atm-cell layer interface beneath it,
                            and the ILMI on the VP.
                          * ifInOctets, ifOutOctets - support of
                            these objects is not mandatory for ATM
                            Logical Port interfaces.
                          * ifInErrors - always zero, HEC errors are
                            specified for the atm cell-layer interface
                            beneath it.
                          * ifInUnknownProtos - always zero, errors
                            are specified for the atm cell-layer
                            interface beneath it.

                  - The atmInterfaceConfEntry values are set as
                    discussed in [1], with the following
                    exceptions:
                          * atmInterfaceMaxVpcs - 0.
                          * atmInterfaceConfVpcs - 0.
                          * atmInterfaceIlmiVpi - VPI of the VP





          Expire Jan 98                                        [Page 17]




          draft        Supplemental ATM Management Objects February 1997


                            tunnel.

                  - An entry is created in the ifStackTable, with
                    values: ifStackHigherLayer=y, ifStackLowerLayer=x.

                  - VCLs defined on the VP tunnel are indexed by
                    ifIndex=y,VPI=a,VCI.


          6.3.11.  ATM VCL Statistics Table

          The atmVclStatTable includes per VCL cell counters.  The VCL
          cell counters count the valid ATM cells.  The valid ATM cells
          include the user and OAM cells but exclude the physical layer
          (e.g. idle cells) and unassigned cells.  Cells coming in to an
          ATM managed system are counted differently with the high Cell
          Loss Priority (CLP=0) or low Cell Loss Priority (CLP=1). The
          cells are tagged, passed or discarded depending on the
          incoming CLP value and the policed cell rate by the "traffic
          policing" entity in the ATM managed system.  Refer to [9] and
          [10] for the description of the traffic policing.

          In the switch where the traffic policing is not supported,
          cells are passed or discarded depending on the bandwidth of
          the switching fabric.  The Output Tagged Cells counter, in
          this case, is always zero.

                                _______________
                                | ATM Managed |
                     Input      | System      | Output
                     CLP=0 cells|             | CLP=0 cells
                     ---------->|             |----------->
                     CLP=1 cells| (traffic    | CLP=1 cells
                     ---------->| policing    |----------->
                                | entity)     | Tagged cells (CLP=1)
                                |_____________|----------->
                                 |Discard  | Discard
                                 |CLP=0    | CLP=1
                                 |cells    | cells
                                 |         |
                                 V         V


                 Figure 7. ATM Cell Counters per VCL





          Expire Jan 98                                        [Page 18]




          draft        Supplemental ATM Management Objects February 1997


          In this table, cells coming into and out of the managed ATM
          system are counted as the total number of cells and the cells
          with the CLP=0.  The CLP=1 counter is derived by substracting
          CLP=0 cells from the total cells.  In addition, cells that are
          tagged on the output are also counted.  The output CLP=1 cells
          equals to the total cells out count minus both the CLP=0 cells
          and the tagged cells.

          6.3.12.  ATM VC General Information Table

          This table contains the general information for each VCs.  It
          provides an index to the atmSigDescrParamTable defined in this
          MIB.  This table is an extention to the atmVclTable defined in
          the ATM MIB [1].

          6.3.13.  ATM Interface Configuration Extention Table

          The ATM Interface Configuration Extention Table contains ATM
          interface information that supplements the
          atmInterfaceConfTable defined in [1].  It includes the
          configuration information of the signalling and ILMI.

          A network manager can configure the signalling entity to run a
          specific interface type (i.e. signalling protocol and version)
          such as ITU-U DSS2, ATM Forum UNI 3.1, PNNI 1.0 or BICI 2.0.
          It can also dictate the side of the signalling entity.  For
          example, if a signalling entity is configured to run ATM Forum
          UNI 3.1, it has to be told to run as either the network side
          or the user side of the UNI.

          The objects atmInterfaceConfigSigType and
          atmInterfaceConfigSide are used for configuration and the
          objects atmInterfaceActualSigType and
          atmInterfaceActualSigSide are used for reading back the actual
          signalling configuration.

          The following table describes all the combinations of the
          configuration of the signalling entity:

                  atmInterfaceConfigSigType  atmInterfaceConfigSigSide
                  ----------------           ----------------
                  autoConfig                 other
                  ituDss2                    user/network
                  atmfUni3Dot0               user/network





          Expire Jan 98                                        [Page 19]




          draft        Supplemental ATM Management Objects February 1997


                  atmfUni3Dot1               user/network
                  atmfUni4Dot0               user/network
                  atmfIisp3Dot0              user/network
                  atmfIisp3Dot1              user/network
                  atmfIisp4Dot0              user/network
                  atmfPnni1Dot0              other
                  atmfBici2Dot0              other

          When the value of the object atmInterfaceConfigSigType is
          configured to autoConfig(2), the signalling type is determined
          via the ATM Forum ILMI auto-configuration procedures [22].
          There is no need to set the signalling side since it should be
          a derived value. The PNNI and BICI interfaces are always
          symmetric so setting the signalling side is also not
          necessary.

          This table also includes the configured and negotiated maximum
          VPI value per ATM interface, and the configured and negotiated
          minimum VCI value per ATM interface.  Refer to [21] Sections
          8.2.3.8 through 8.2.3.10 for a detailed description.

          The following figure provides an example how the current
          minimum VCI values are derived from the configured minimum VCI
          values and the neighboring minimum VCI values:


                        +--------+              +--------+              +--------+
                        |  ATM   | IF a    IF b |  ATM   | IF c    IF d |  ATM   |
                        | Device |--------------| Device |--------------| Device |
                        +--------+              +--------+              +--------+


                          IF a:  Configured Min SVCC VCI = 32  (configured)
                                 Current Min SVCC VCI    = 40  (negotiated)

                          IF b:  Configured Min SVCC VCI = 40  (configured)
                                 Current Min SVCC VCI    = 40  (negotiated)

                          IF c:  Configured Min SVCC VCI = 32  (configured)
                                 Current Min SVCC VCI    = 32  (negotiated)

                          IF d:  Configured Min SVCC VCI = 32  (configured)
                                 Current Min SVCC VCI    = 32  (negotiated)






          Expire Jan 98                                        [Page 20]




          draft        Supplemental ATM Management Objects February 1997


                     (between IF a and IF b, the maximum of the two
                      atmInterfaceConfMinSvccVci is 40, so both interfaces set their
                      atmInterfaceCurrentMinSvccVci to 40.  Since IF c and IF d both
                      are configured with atmInterfaceConfMinSvccVci of 32, they
                      set their atmInterfaceCurrentMinSvccVci to 32.)

                                                   Figure 8


          6.3.14.  ATM Services Registration Table

          This table contains information used by ATM devices to locate
          ATM network services.  ATM network services such as CIP ARP
          server or LECS, can be created by the network manager or
          learned via ILMI.  Entries in this table can either be
          exported  to the adjacent devices via ILMI to all or a few
          user selected ATM interfaces.
          As an example, let's assume that:

           - an ATM switch X has three interfaces if1, if2 and if3.
           - there are two ATM network services offered: a1.a2...aN and b1.b2...bN,
             (where a1.a2...aN is an object identifier used to identify the first
              service, and b1.b2...bN is the object identifier for the other service.
              These services may be CIP ARP servers, LECS server, ...)
           - The first service is available at the ATM address 'a'.
           - The second service is available at the ATM address 'b'.
           - The first service can be used by any device connecting to the switch X.
           - The second service can be used only by devices that connect to interfaces
             if1 and if3 on switch X.

            *------------------*    *------------------*
            Iservice a1.a2...aNI    Iservice b1.b2...bNI
            I                  I    I                  I
            I ATM address = a  I    I ATM address = b  I
            *------------------*    *------------------*
                     I                       I
            ++++++++++++++++++++++++++++++++++++++++++++
            +             ATM NETWORK                  +
            ++++++++++++++++++++++++++++++++++++++++++++
                              I
                       *-------------*
                       I  switch X   I
                       *-+----+----+-*
                         I    I    I





          Expire Jan 98                                        [Page 21]




          draft        Supplemental ATM Management Objects February 1997


          interfaces:   if1  if2  if3



          The table will contain three entries:

          - one entry for the "a1.a2...aN", implicitly available to any devices
            on switch X.
          - two entries for the "b1.b2...bN" (one for each interface where this
            service can be explicitly used).

          The content of the table is:


          Service Identifier:   a1.a2...aN    b1.b2...bN   b1.b2...bN

          ATM address:             a              b            b

          Arbitrary index:         m              n            p

          Interface:                0             1            3

          where m, n and p are arbitrary parameters.


          When querying the ILMI service registry table, through the ILMI protocol:

          - the device attached to interface if1 will obtained the address a and b
          - the device attached to interface if2 will obtained the address a only
          - the device attached to interface if3 will obtained the address a and b


          6.3.15.  ILMI Network Prefix Table

          A table specifying per interface network prefix(es) supplied
          by the network side of the UNI during ILMI address
          registration.  When no network prefixes are specified for a
          particular interface, one or more network prefixes based on
          the switch address(es) may be used for ILMI address
          registration.









          Expire Jan 98                                        [Page 22]




          draft        Supplemental ATM Management Objects February 1997


          6.3.16.  ATM Switch Address Table

          This table contains one or more ATM endsystem addresses on a
          per switch basis.  These addresses are used to identify the
          switch.  When no ILMI network prefixes are configured for
          certain interfaces, network prefixes based on the switch
          address(es) may be used for ILMI address registration.


          7.  Valid Address Sets / Default Address

          A given ATM UNI interface may have an Address,
          "ifPhysAddress", to identify the interface.  In addition, a
          given ATM UNI  interface may have several other valid
          addresses which can be used to originate and receive calls.
          The valid addresses that are used to receive calls are listed
          in the "ifRcvAddrTable" defined in RFC1573 [6].  ATM
          interfaces of switches and services do not use the
          ifRcvAddrTable.  Valid addresses to be used by a switch or
          service are listed in the ATM Interface Administrative Address
          Table.  The ATM Interface Administrative Address Table is not
          supported by hosts.


          8.  Configuration of VPLs, VCLs, and Cross-Connects

          The ATM Managed Objects needed to support the configuration of
          VPLs, VCLs, and Cross-Connects of the Permanent VPLs and VCLs
          are defined in the ATM MIB [1].  Cross-Connects of the
          Switched VPLs and VCLs are defined in this memo.


          9.  ATM Related Trap Support

          Traps are defined to detect the up/down status of the
          permanent VPL and VCL.  The current up/down status of each
          permanent VPL or VCL is indicated by the atmVplOperStatus or
          atmVclOperStatus object, respectively.  Several tables and
          objects and one trap are defined in order to help network
          managers quickly and efficiently detect changes in the status
          of permanent virtual links.  Through use of these tables,
          objects, and traps, the time consuming and resource intensive
          task of continuously polling each row in the entire
          atmVplTable and atmVclTable can be avoided.





          Expire Jan 98                                        [Page 23]




          draft        Supplemental ATM Management Objects February 1997


          The atmIntfPvcFailures counter and the
          atmIntfCurrentlyFailingPVpls and atmIntfCurrentlyFailingPVcls
          gauges provide a quick means of determining the status of all
          PVPLs and PVCLs on an interface.  The
          atmCurrentlyFailingPVplTable and the
          atmCurrentlyFailingPVclTable list all of the problematic PVPLs
          and PVCLs, respectively, allowing them to be quickly
          identified.

          The atmIntfPvcFailuresTrap is generated just after a PVPL or
          PVCL on a particular interface leaves the `up' operational
          state.  Managers can then determine which PVPLs and/or PVCLs
          are failing by reading the atmCurrentlyFailingPVplTable and
          the atmCurrentlyFailingPVclTable.  Generation of the
          atmIntfPvcFailuresTrap is rate limited by suppressing all
          traps that would occur within atmIntfPvcNotificationInterval
          of a previous trap for the same interface.  Managers should
          continuously poll the tables and objects mentioned above for
          at least this amount of time in order to keep up with the
          state of the network.


          10.  Definitions

               ATM2-MIB DEFINITIONS ::= BEGIN

               IMPORTS
                  MODULE-IDENTITY, OBJECT-TYPE,
                  NOTIFICATION-TYPE,
                  BITS, Gauge32, experimental, Counter32, Integer32
                      FROM SNMPv2-SMI
                  TruthValue, RowStatus, TimeStamp,
                  TEXTUAL-CONVENTION
                      FROM SNMPv2-TC
                  MODULE-COMPLIANCE, OBJECT-GROUP
                      FROM SNMPv2-CONF
                  InterfaceIndex,
                  ifIndex
                      FROM IF-MIB
                  atmMIBObjects, atmVclEntry,
                  atmVclVpi, atmVclVci, atmVplEntry, atmVplVpi,
                  atmVplOperStatus, atmVclOperStatus
                      FROM ATM-MIB
                  AtmAddr,





          Expire Jan 98                                        [Page 24]




          draft        Supplemental ATM Management Objects February 1997


                  AtmSigDescrParamIndex,
                  AtmInterfaceType,
                  AtmIlmiNetworkPrefix,
                  AtmVcIdentifier,
                  AtmVpIdentifier,
                  AtmTrafficDescrParamIndex
                      FROM ATM-TC-MIB;


               atm2MIB MODULE-IDENTITY
                    LAST-UPDATED "9612051200Z"
                    ORGANIZATION "IETF AToMMIB Working Group"
                    CONTACT-INFO
                      "          Faye Ly
                        Postal:  3Com Networks Inc.
                                 Santa Clara, CA 95052
                                 US
                        Tel:     +1 408 764 6576
                        Fax:     +1 408 495 2599
                        E-Mail:  faye@3com.com

                                 Michael Noto
                        Postal:  Network Equipment Technologies
                                 800 Saginaw Drive RM 21.1.111
                                 Redwood City, CA 94063
                                 US
                        Tel:     +1 415 569 7143
                        Fax:     +1 908 758 4177
                        E-mail:  mike_noto@net.com

                                 Andrew Smith
                        Postal:  Extreme Networks
                                 1601 S. De Anza Blvd, #220
                                 Cupertino, CA 95014
                                 US
                        Tel:     +1 408 342 0985
                        Fax:     +1 408 342 0989
                        E-Mail:  ansmith@ix.netcom.com

                                 Ethan Mickey Spiegel
                        Postal:  Cisco Systems
                                 170 W. Tasman Drive
                                 San Jose, CA 95134-1706
                        Tel:     +1 408 526 6408





          Expire Jan 98                                        [Page 25]




          draft        Supplemental ATM Management Objects February 1997


                        Fax:     +1 408 526 6488
                        E-Mail:  mspiegel@cisco.com

                                 Kaj Tesink
                        Postal:  Bell Communications Research
                                 331 Newman Springs Road
                                 Red Bank, NJ 07701
                                 US
                        Tel:     +1 908 758 5254
                        Fax:     +1 908 758 4177
                        E-mail:  kaj@cc.bellcore.com"
                    DESCRIPTION
                     "This MIB Module is a supplement to the
                     ATM-MIB [1]."
                    ::= { experimental XX }

               atm2MIBObjects  OBJECT IDENTIFIER ::= {atm2MIB 1}
               atm2MIBTraps    OBJECT IDENTIFIER ::= {atm2MIB 2}

               -- ********  NOTE TO THE RFC EDITOR  **************
               -- In case this module is put on the standards track
               --  replace the following:
               -- "atm2MIB MODULE-IDENTITY ::= {experimental XX}" with
               -- "atm2MIB MODULE-IDENTITY ::= {atmMIBObjects 13}"
               -- and include atmMIBObjects in the IMPORT clause.


               -- This ATM2-MIB Module consists of the following tables:
               --      1. atmSvcVcCrossConnectTable
               --      2. atmSvcVpCrossConnectTable
               --      3. atmSigStatTable
               --      4. atmSigSupportTable
               --      5. atmSigDescrParamTable
               --      6. atmIfAdminAddrTable
               --      7. atmVclAddrTable
               --      8. atmAddrVclTable
               --      9. atmVplStatTable
               --      10. atmVplLogicalPortTable
               --      11. atmVclStatTable
               --      12. atmAal5VclStatTable
               --      13. atmVclGenTable
               --      14. atmInterfaceExtTable
               --      15. atmIlmiSrvcRegTable
               --      16. atmIlmiNetworkPrefixTable





          Expire Jan 98                                        [Page 26]




          draft        Supplemental ATM Management Objects February 1997


               --      17. atmCurrentlyFailingPVplTable
               --      18. atmCurrentlyFailingPVclTable
               --      19. atmSwitchAddressTable
               -- And ATM trap support
               --












































          Expire Jan 98                                        [Page 27]




          draft        Supplemental ATM Management Objects February 1997


               -- 1. ATM VPL SVC Cross-Connect Table


               atmSvcVpCrossConnectTable OBJECT-TYPE
                    SYNTAX            SEQUENCE OF
                                      AtmSvcVpCrossConnectEntry
                    MAX-ACCESS        not-accessible
                    STATUS            current
                    DESCRIPTION
                      "The ATM SVC VP Cross Connect table.  A bi-
                      directional VP cross-connect which
                      cross-connects two SVC VPLs is modeled
                      as one entry in this table."
                    ::= { atm2MIBObjects 1 }


               atmSvcVpCrossConnectEntry OBJECT-TYPE
                    SYNTAX  AtmSvcVpCrossConnectEntry
                    MAX-ACCESS  not-accessible
                    STATUS  current
                    DESCRIPTION
                      "An entry in the ATM SVC VP Cross Connect table.
                      This entry is used to model a bi-directional
                      ATM SVC VP cross-connect which cross-connects
                      two VPLs."
                    INDEX { atmSvcVpCrossConnectIndex,
                            atmSvcVpCrossConnectLowIfIndex,
                            atmSvcVpCrossConnectLowVpi,
                            atmSvcVpCrossConnectHighIfIndex,
                            atmSvcVpCrossConnectHighVpi }
                    ::= { atmSvcVpCrossConnectTable 1 }

               AtmSvcVpCrossConnectEntry ::= SEQUENCE {
                    atmSvcVpCrossConnectIndex          INTEGER,
                    atmSvcVpCrossConnectLowIfIndex     InterfaceIndex,
                    atmSvcVpCrossConnectLowVpi         AtmVpIdentifier,
                    atmSvcVpCrossConnectHighIfIndex    InterfaceIndex,
                    atmSvcVpCrossConnectHighVpi        AtmVpIdentifier,
                    atmSvcVpCrossConnectCreationTime   TimeStamp,
                    atmSvcVpCrossConnectRowStatus      RowStatus
                                 }

               atmSvcVpCrossConnectIndex OBJECT-TYPE
                    SYNTAX  INTEGER (1..2147483647)





          Expire Jan 98                                        [Page 28]




          draft        Supplemental ATM Management Objects February 1997


                    MAX-ACCESS  not-accessible
                    STATUS  current
                    DESCRIPTION
                      "A unique value to identify this SVC VP cross-connect."
                    ::= { atmSvcVpCrossConnectEntry 1 }

               atmSvcVpCrossConnectLowIfIndex OBJECT-TYPE
                    SYNTAX  InterfaceIndex
                    MAX-ACCESS  not-accessible
                    STATUS  current
                    DESCRIPTION
                      "The value of this object is equal to MIB II's
                      ifIndex value of the ATM interface port for this
                      SVC VP cross-connect.  The term low implies
                      that this ATM interface has the numerically lower
                      ifIndex value than the other ATM interface
                      identified in the same atmSvcVpCrossConnectEntry."
                    ::= { atmSvcVpCrossConnectEntry 2 }

               atmSvcVpCrossConnectLowVpi OBJECT-TYPE
                    SYNTAX  AtmVpIdentifier
                    MAX-ACCESS  not-accessible
                    STATUS  current
                    DESCRIPTION
                      "The value of this object is equal to the VPI
                      value at the ATM interface
                      associated with the SVC VP cross-connect that is
                      identified by atmSvcVpCrossConnectLowIfIndex.
                      The VPI value cannot exceed the number
                      supported by the atmInterfaceMaxVpiBits
                      at the low ATM interface port."
                    ::= { atmSvcVpCrossConnectEntry 3 }

               atmSvcVpCrossConnectHighIfIndex OBJECT-TYPE
                    SYNTAX  InterfaceIndex
                    MAX-ACCESS  not-accessible
                    STATUS  current
                    DESCRIPTION
                     "The value of this object is equal to MIB II's
                      ifIndex value of the ATM interface port for
                      this SVC VP cross-connect.  The term high
                      implies that this ATM interface has the
                      numerically higher ifIndex value than the
                      other ATM interface identified in the same





          Expire Jan 98                                        [Page 29]




          draft        Supplemental ATM Management Objects February 1997


                      atmSvcVpCrossConnectEntry."
                    ::= { atmSvcVpCrossConnectEntry 4 }

               atmSvcVpCrossConnectHighVpi OBJECT-TYPE
                    SYNTAX  AtmVpIdentifier
                    MAX-ACCESS  not-accessible
                    STATUS  current
                    DESCRIPTION
                     "The value of this object is equal to the VPI
                      value at the ATM interface associated with
                      the SVC VP cross-connect that is identified
                      by atmSvcVpCrossConnectHighIfIndex.
                      The VPI value cannot exceed the number
                      supported by the atmInterfaceMaxVpiBits
                      at the high ATM interface port."
                    ::= { atmSvcVpCrossConnectEntry 5 }

               atmSvcVpCrossConnectCreationTime OBJECT-TYPE
                    SYNTAX  TimeStamp
                    MAX-ACCESS  read-only
                    STATUS  current
                    DESCRIPTION
                     "The value of MIB II's sysUpTime object
                      at the time this bi-directional SVC VP
                      cross-connect was created.  If the current
                      state was entered prior to the last
                      re-initialization of the agent, then this
                      object contains a zero value."
                    ::= { atmSvcVpCrossConnectEntry 6 }

               atmSvcVpCrossConnectRowStatus OBJECT-TYPE
                    SYNTAX             RowStatus
                    MAX-ACCESS         read-write
                    STATUS             current
                    DESCRIPTION
                      "This object is used to delete rows in the
                      atmSvcVpCrossConnectTable."
                   ::= { atmSvcVpCrossConnectEntry 7 }


              -- 2. ATM Virtual Channel (VC) Cross Connect Group

              atmSvcVcCrossConnectTable OBJECT-TYPE
                   SYNTAX  SEQUENCE OF AtmSvcVcCrossConnectEntry





          Expire Jan 98                                        [Page 30]




          draft        Supplemental ATM Management Objects February 1997


                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "The ATM SVC VC Cross Connect table.  A bi-
                     directional SVC VC cross-connect which
                     cross-connects two end points (i.e., VCLs)
                     is modeled as one entry in this table."
                   ::= { atm2MIBObjects 2 }


              atmSvcVcCrossConnectEntry OBJECT-TYPE
                   SYNTAX  AtmSvcVcCrossConnectEntry
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "An entry in the ATM SVC VC Cross Connect table.
                     This entry is used to model a bi-directional ATM
                     SVC VC cross-connect cross-connecting two end
                     points."
                   INDEX { atmSvcVcCrossConnectIndex,
                           atmSvcVcCrossConnectLowIfIndex,
                           atmSvcVcCrossConnectLowVpi,
                           atmSvcVcCrossConnectLowVci,
                           atmSvcVcCrossConnectHighIfIndex,
                           atmSvcVcCrossConnectHighVpi,
                           atmSvcVcCrossConnectHighVci }
                   ::= { atmSvcVcCrossConnectTable 1 }

              AtmSvcVcCrossConnectEntry ::= SEQUENCE {
                   atmSvcVcCrossConnectIndex          INTEGER,
                   atmSvcVcCrossConnectLowIfIndex     InterfaceIndex,
                   atmSvcVcCrossConnectLowVpi         AtmVpIdentifier,
                   atmSvcVcCrossConnectLowVci         AtmVcIdentifier,
                   atmSvcVcCrossConnectHighIfIndex    InterfaceIndex,
                   atmSvcVcCrossConnectHighVpi        AtmVpIdentifier,
                   atmSvcVcCrossConnectHighVci        AtmVcIdentifier,
                   atmSvcVcCrossConnectCreationTime   TimeStamp,
                   atmSvcVcCrossConnectRowStatus      RowStatus
                           }

              atmSvcVcCrossConnectIndex OBJECT-TYPE
                   SYNTAX  INTEGER (1..2147483647)
                   MAX-ACCESS  not-accessible
                   STATUS  current





          Expire Jan 98                                        [Page 31]




          draft        Supplemental ATM Management Objects February 1997


                   DESCRIPTION
                    "A unique value to identify this SVC VC cross-
                     connect."
                   ::= { atmSvcVcCrossConnectEntry 1 }

              atmSvcVcCrossConnectLowIfIndex OBJECT-TYPE
                   SYNTAX  InterfaceIndex
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "The value of this object is equal to MIB II's
                     ifIndex value of the ATM interface port for this
                     SVC VC cross-connect.  The term low implies
                     that this ATM interface has the numerically lower
                     ifIndex value than the other ATM interface
                     identified in the same atmSvcVcCrossConnectEntry."
                   ::= { atmSvcVcCrossConnectEntry 2 }

              atmSvcVcCrossConnectLowVpi OBJECT-TYPE
                   SYNTAX  AtmVpIdentifier
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "The value of this object is equal to the VPI
                     value at the ATM interface
                     associated with the SVC VC cross-connect that is
                     identified by atmSvcVcCrossConnectLowIfIndex.
                     The VPI value cannot exceed the number
                     supported by the atmInterfaceMaxVpiBits
                     at the low ATM interface port."
                   ::= { atmSvcVcCrossConnectEntry 3 }

              atmSvcVcCrossConnectLowVci OBJECT-TYPE
                   SYNTAX  AtmVcIdentifier
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "The value of this object is equal to the VCI
                     value at the ATM interface
                     associated with this SVC VC cross-connect that is
                     identified by atmSvcVcCrossConnectLowIfIndex.
                     The VCI value cannot exceed the number
                     supported by the atmInterfaceMaxVciBits
                     at the low ATM interface port."





          Expire Jan 98                                        [Page 32]




          draft        Supplemental ATM Management Objects February 1997


                   ::= { atmSvcVcCrossConnectEntry 4 }

              atmSvcVcCrossConnectHighIfIndex OBJECT-TYPE
                   SYNTAX  InterfaceIndex
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "The value of this object is equal to MIB II's
                     ifIndex value for the ATM interface port for
                     this SVC VC cross-connect.  The term high
                     implies that this SVC VC cross-connect
                     that this ATM interface has the numerically higher
                     ifIndex value than the other ATM interface
                     identified in the same atmSvcVcCrossConnectEntry."
                   ::= { atmSvcVcCrossConnectEntry 5 }

              atmSvcVcCrossConnectHighVpi OBJECT-TYPE
                   SYNTAX  AtmVpIdentifier
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "The value of this object is equal to the VPI
                     value at the ATM interface
                     associated with the SVC VC cross-connect that is
                     identified by atmSvcVcCrossConnectHighIfIndex.
                     The VPI value cannot exceed
                     the number supported by the atmInterfaceMaxVpiBits
                     at the high ATM interface port."
                   ::= { atmSvcVcCrossConnectEntry 6 }

              atmSvcVcCrossConnectHighVci OBJECT-TYPE
                   SYNTAX  AtmVcIdentifier
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "The value of this object is equal to the VCI
                     value at the ATM interface
                     associated with the SVC VC cross-connect that is
                     identified by atmSvcVcCrossConnectHighIfIndex.
                     The VCI value cannot exceed
                     the number supported by the atmInterfaceMaxVciBits
                     at the high ATM interface port."
                   ::= { atmSvcVcCrossConnectEntry 7 }






          Expire Jan 98                                        [Page 33]




          draft        Supplemental ATM Management Objects February 1997


              atmSvcVcCrossConnectCreationTime OBJECT-TYPE
                   SYNTAX  TimeStamp
                   MAX-ACCESS  read-only
                   STATUS  current
                   DESCRIPTION
                    "The value of MIB II's sysUpTime object
                     at the time this bi-directional SVC VC
                     cross-connect was created.  If the current
                     state was entered prior to the last
                     re-initialization of the agent, then this
                     object contains a zero value."
                   ::= { atmSvcVcCrossConnectEntry 8 }

              atmSvcVcCrossConnectRowStatus OBJECT-TYPE
                   SYNTAX             RowStatus
                   MAX-ACCESS         read-write
                   STATUS             current
                   DESCRIPTION
                     "This object is used to delete rows in the
                     atmSvcVcCrossConnectTable."
                  ::= { atmSvcVcCrossConnectEntry 9 }

             --
             -- 3. ATM Interface Signalling Statistics Table
             --

             atmSigStatTable       OBJECT-TYPE
                  SYNTAX       SEQUENCE OF AtmSigStatEntry
                  MAX-ACCESS   not-accessible
                  STATUS       current
                  DESCRIPTION
                   "This table contains ATM interface signalling monitoring
                    , one entry per ATM signalling interface."
                  ::= { atm2MIBObjects 3 }

             atmSigStatEntry         OBJECT-TYPE
                  SYNTAX         AtmSigStatEntry
                  MAX-ACCESS     not-accessible
                  STATUS         current
                  DESCRIPTION
                   "This list contains signalling statistics variables."
                  INDEX { ifIndex }
                  ::= { atmSigStatTable  1}






          Expire Jan 98                                        [Page 34]




          draft        Supplemental ATM Management Objects February 1997


             AtmSigStatEntry    ::= SEQUENCE  {
                  atmSigSSCOPConEvents        Counter32,
                  atmSigSSCOPErrdPdus         Counter32,
                  atmSigDetectSetupAttempts   Counter32,
                  atmSigEmitSetupAttempts    Counter32,
                  atmSigDetectUnavailRoutes         Counter32,
                  atmSigEmitUnavailRoutes         Counter32,
                  atmSigDetectUnavailResrcs         Counter32,
                  atmSigEmitUnavailResrcs         Counter32,
                  atmSigDetectCldPtyEvents          Counter32,
                  atmSigEmitCldPtyEvents          Counter32,
                  atmSigDetectMsgErrors             Counter32,
                  atmSigEmitMsgErrors             Counter32,
                  atmSigDetectClgPtyEvents          Counter32,
                  atmSigEmitClgPtyEvents          Counter32,
                  atmSigDetectTimerExpireds         Counter32,
                  atmSigEmitTimerExpireds         Counter32,
                  atmSigDetectRestarts              Counter32,
                  atmSigEmitRestarts              Counter32,
                  atmSigInEstabls             Counter32,
                  atmSigOutEstabls            Counter32
                       }

             atmSigSSCOPConEvents   OBJECT-TYPE
                  SYNTAX            Counter32
                  MAX-ACCESS        read-only
                  STATUS            current
                  DESCRIPTION
                    "SSCOP Connection Events Counter.  This
                    counter counts the sum of the following errors:

                    1) SSCOP Connection Disconnect Counter

                    The abnormal occurrence of this event is
                    characterized by the expiry of Timer_NO_RESPONSE.
                    (This event is communicated to the layer management
                    with MAA-ERROR code P.  See ITU-T Q.2110 [13].)

                    2) SSCOP Connection Initiation Failure

                    This condition indicates the inability to establish
                    an SSCOP connection.  This event occurs whenever the
                    number of expiries of the connection control timer
                    (Timer_CC) exceeds the MaxCC or upon receipt of a





          Expire Jan 98                                        [Page 35]




          draft        Supplemental ATM Management Objects February 1997


                    connection reject message BGREJ PDU.  (This event is
                    communicated to layer management with MAA-ERROR
                    code O.  See ITU-T Q.2110.)

                    3) SSCOP Connection Re-Establ/Resynch

                    This event occurs upon receipt of a BGN PDU or RESYNC
                    PDU."
                 ::= { atmSigStatEntry 5}

            atmSigSSCOPErrdPdus   OBJECT-TYPE
                 SYNTAX           Counter32
                 MAX-ACCESS       read-only
                 STATUS           current
                 DESCRIPTION
                   "SSCOP Errored PDUs Counter.  This counter counts the
                   sum of the following errors:

                   1) Invalid PDUs.
                      These are defined in SSCOP and consist of PDUs
                      with incorrect length (MAA-ERROR code U),
                      undefined PDU type code or not 32-bit aligned.

                   2) PDUs that result in MAA error codes and are
                      discarded
                      See Errors A-M and Q-T defined in ITU-T Q.2110 [13]."
                ::= { atmSigStatEntry 6 }

           atmSigDetectSetupAttempts    OBJECT-TYPE
                SYNTAX            Counter32
                MAX-ACCESS        read-only
                STATUS            current
                DESCRIPTION
                  "Call Setup Attempts Counter.  This counter counts
                  the number of call setup attempts(both successful
                  and unsuccessful) detected on this interface."
               ::= { atmSigStatEntry 7 }

          atmSigEmitSetupAttempts    OBJECT-TYPE
               SYNTAX            Counter32
               MAX-ACCESS        read-only
               STATUS            current
               DESCRIPTION
                 "Call Setup Attempts Counter.  This counter counts the





          Expire Jan 98                                        [Page 36]




          draft        Supplemental ATM Management Objects February 1997


                 number of call setup attempts(both successful and
                 unsuccessful) transmitted on this interface."
               ::= { atmSigStatEntry 8 }

          atmSigDetectUnavailRoutes    OBJECT-TYPE
               SYNTAX            Counter32
               MAX-ACCESS        read-only
               STATUS            current
               DESCRIPTION
                 "Number of Route Unavailability detected on this
                 interface. This counter is incremented when a RELEASE,
                 RELEASE COMPLETE (only when not preceded by a RELEASE
                 mesg for the same call), ADD PARTY REJECT, or STATUS
                 message that contains one of the following cause code
                 values is received (Note: These cause values apply to
                 both UNI3.0 and UNI3.1):

































          Expire Jan 98                                        [Page 37]




          draft        Supplemental ATM Management Objects February 1997


                 Cause Value            Meaning

                    1            unallocated (unassigned) number
                    2            no route to specified transit network
                    3            no route to destination
                    88           incompatible destination

                 NOTE:  For this counter, RELEASE COMPLETE
                 messages that are a reply to a previous RELEASE
                 message and contain the same cause value, are
                 redundant (for counting purposes) and should not
                 be counted."
               ::= { atmSigStatEntry 9 }

          atmSigEmitUnavailRoutes    OBJECT-TYPE
               SYNTAX            Counter32
               MAX-ACCESS        read-only
               STATUS            current
               DESCRIPTION
                 "Number of Route Unavailability transmitted from this
                 interface. This counter is incremented when a RELEASE,
                 RELEASE COMPLETE (only when not preceded by a RELEASE
                 mesg for the same call), ADD PARTY REJECT, or STATUS
                 message that contains one of the following cause code
                 values is transmitted (Note: These cause values apply
                 to both UNI3.0 and UNI3.1):























          Expire Jan 98                                        [Page 38]




          draft        Supplemental ATM Management Objects February 1997


                 Cause Value            Meaning

                    1            unallocated (unassigned) number
                    2            no route to specified transit network
                    3            no route to destination

                 NOTE:  For this counter, RELEASE COMPLETE
                 messages that are a reply to a previous RELEASE
                 message and contain the same cause value, are
                 redundant (for counting purposes) and should not
                 be counted."
               ::= { atmSigStatEntry 10 }

          atmSigDetectUnavailResrcs     OBJECT-TYPE
               SYNTAX             Counter32
               MAX-ACCESS         read-only
               STATUS             current
               DESCRIPTION
                 "Number of Resource Unavailability detected on this
                 interfrace.  This counter is incremented when a
                 RELEASE, RELEASE COMPLETE (only when not preceded by a
                 RELEASE mesg for the same call), ADD PARTY REJECT, or
                 STATUS message that contains one of the following cause
                 code values is received (Note: These cause values apply
                 to both UNI3.0 and UNI3.1 unless otherwise stated):

                 Cause Value          Meaning

                    35          requested VPCI/VCI not available
                    37          user cell rate not available (UNI3.1
                                only)
                    38          network out of order
                    41          temporary failure
                    45          no VPCI/VCI available
                    47          resource unavailable, unspecified
                    49          Quality of Service unavailable
                    51          user cell rate not available (UNI3.0
                                only)
                    58          bearer capability not presently
                                available
                    63          Service or option not available,
                                unspecified
                    92          too many pending add party requests






          Expire Jan 98                                        [Page 39]




          draft        Supplemental ATM Management Objects February 1997


                 NOTE:  For this counter, RELEASE COMPLETE
                 messages that are a reply to a previous RELEASE
                 message and contain the same cause value, are
                 redundant (for counting purposes) and should not
                 be counted."

               ::= { atmSigStatEntry 11 }

          atmSigEmitUnavailResrcs     OBJECT-TYPE
               SYNTAX             Counter32
               MAX-ACCESS         read-only
               STATUS             current
               DESCRIPTION
                 "Number of Resource Unavailability transmitted from
                 this interfrace.  This counter is incremented when a
                 RELEASE, RELEASE COMPLETE (only when not preceded by a
                 RELEASE mesg for the same call), ADD PARTY REJECT, or
                 STATUS message that contains one of the following cause
                 code values is transmitted (Note: These cause values
                 apply to both UNI3.0 and UNI3.1 unless otherwise
                 stated):

                 Cause Value          Meaning

                    35          requested VPCI/VCI not available
                    37          user cell rate not available (UNI3.1
                                only)
                    38          network out of order
                    41          temporary failure
                    45          no VPCI/VCI available
                    47          resource unavailable, unspecified
                    49          Quality of Service unavailable
                    51          user cell rate not available (UNI3.0
                                only)
                    58          bearer capability not presently
                                available
                    63          Service or option not available,
                                unspecified
                    92          too many pending add party requests

                 NOTE:  For this counter, RELEASE COMPLETE
                 messages that are a reply to a previous RELEASE
                 message and contain the same cause value, are
                 redundant (for counting purposes) and should not





          Expire Jan 98                                        [Page 40]




          draft        Supplemental ATM Management Objects February 1997


                 be counted."

               ::= { atmSigStatEntry 12 }

          atmSigDetectCldPtyEvents     OBJECT-TYPE
               SYNTAX               Counter32
               MAX-ACCESS           read-only
               STATUS               current
               DESCRIPTION
                 "Number of Called Party Responsible For Unsuccessful
                 Call detected on this interface. This counter is
                 incremented when a RELEASE, RELEASE COMPLETE (only when
                 not preceded by a RELEASE mesg for the same call), ADD
                 PARTY REJECT, or STATUS message that contains one of
                 the following cause code values is received (Note:
                 These cause values apply to both UNI3.0 and UNI3.1):

                 Cause Value         Meaning

                    17           user busy
                    18           no user responding
                    21           call rejected
                    22           number changed
                    23           user rejects all calls with calling
                                 line id restriction (CLIR)
                    27           destination out of order
                    31           normal, unspecified
                    88           incompatible destination

                 NOTE:  For this counter, RELEASE COMPLETE
                 messages that are a reply to a previous RELEASE
                 message and contain the same cause value, are
                 redundant (for counting purposes) and should not
                 be counted.

                 Note: Cause Value #30 'response to STATUS ENQUIRY'
                 was not included in this memo since it did not apply
                 to a hard failure."
               ::= { atmSigStatEntry 13 }

          atmSigEmitCldPtyEvents     OBJECT-TYPE
               SYNTAX               Counter32
               MAX-ACCESS           read-only
               STATUS               current





          Expire Jan 98                                        [Page 41]




          draft        Supplemental ATM Management Objects February 1997


               DESCRIPTION
                 "Number of Called Party Responsible For Unsuccessful Call
                 transmitted from this interface. This counter is
                 incremented when a RELEASE, RELEASE COMPLETE (only
                 when not preceded by a RELEASE mesg for the same call),
                 ADD PARTY REJECT, or STATUS message that contains one
                 of the following cause code values is
                 transmitted (Note: These cause values apply to both
                 UNI3.0 and UNI3.1):

                 Cause Value         Meaning

                    17           user busy
                    18           no user responding
                    21           call rejected
                    22           number changed
                    23           user rejects all calls with calling
                                 line id restriction (CLIR)
                    27           destination out of order
                    31           normal, unspecified
                    88           incompatible destination

                 NOTE:  For this counter, RELEASE COMPLETE
                 messages that are a reply to a previous RELEASE
                 message and contain the same cause value, are
                 redundant (for counting purposes) and should not
                 be counted.

                 Note: Cause Value #30 'response to STATUS ENQUIRY'
                 was not included in this memo since it did not apply
                 to a hard failure."
               ::= { atmSigStatEntry 14 }

          atmSigDetectMsgErrors    OBJECT-TYPE
               SYNTAX           Counter32
               MAX-ACCESS       read-only
               STATUS           current
               DESCRIPTION
                 "Number of Incorrect Messages detected on this
                 interface.  The Incorrect Messages Counter reflects any
                 sort of incorrect information in a message.  This
                 includes:

                 - RELEASE, RELEASE COMPLETE, ADD PARTY REJECT,





          Expire Jan 98                                        [Page 42]




          draft        Supplemental ATM Management Objects February 1997


                   and STATUS messages transmitted, that contain any of
                   the Cause values listed below.

                 - Ignored messages.  These messages are dropped
                   because the message was so damaged that it could
                   not be further processed.  A list of dropped
                   messages is compiled below:

                    1.  Message with invalid protocol discriminator

                    2.  Message with errors in the call reference I.E.
                         - Bits 5-8 of the first octet not equal to
                           '0000'
                         - Bits 1-4 of the first octet indicating a
                           length other than 3 octets
                         - RELEASE COMPLETE message received with a
                           call reference that does not relate to a
                           call active or in progress
                         - SETUP message received with call reference
                           flag incorrectly set to 1
                         - SETUP message received with a call
                           reference for a call that is already
                           active or in progress.

                    3.  Message too short


                 The following cause values are monitored by this
                 counter (Note: These cause values apply to both UNI3.0
                 and UNI3.1 unless otherwise stated):

                 Cause Value     Meaning

                    10     VPCI/VCI unacceptable (UNI3.0 only)
                    36     VPCI/VCI assignment failure (UNI3.1 only)
                    81     invalid call reference value
                    82     identified channel does not exist
                    89     invalid endpoint reference
                    96     mandatory information element is missing
                    97     message type non-existent or not
                           implemented
                    99     information element non-existent or not
                           implemented
                    100    invalid information element contents





          Expire Jan 98                                        [Page 43]




          draft        Supplemental ATM Management Objects February 1997


                    101    message not compatible with call state
                    104    incorrect message length
                    111    protocol error, unspecified

                    NOTE:  For this counter, RELEASE COMPLETE
                    messages that are a reply to a previous RELEASE
                    message and contain the same cause value, are
                    redundant (for counting purposes) and should not
                    be counted."
               ::= { atmSigStatEntry 15 }

          atmSigEmitMsgErrors    OBJECT-TYPE
               SYNTAX           Counter32
               MAX-ACCESS       read-only
               STATUS           current
               DESCRIPTION
                 "Number of Incorrect Messages detected on this
                 interface.  The Incorrect Messages Counter reflects any
                 sort of incorrect information in a message.  This
                 includes:


                 - RELEASE, RELEASE COMPLETE, ADD PARTY REJECT,
                   and STATUS messages transmitted or
                   received, that contain any of the Cause values
                   listed below.

                 - Ignored messages.  These messages are dropped
                   because the message was so damaged that it could
                   not be further processed.  A list of dropped
                   messages is compiled below:

                    1.  Message with invalid protocol discriminator

                    2.  Message with errors in the call reference I.E.
                         - Bits 5-8 of the first octet not equal to
                           '0000'
                         - Bits 1-4 of the first octet indicating a
                           length other than 3 octets
                         - RELEASE COMPLETE message received with a
                           call reference that does not relate to a
                           call active or in progress
                         - SETUP message received with call reference
                           flag incorrectly set to 1





          Expire Jan 98                                        [Page 44]




          draft        Supplemental ATM Management Objects February 1997


                         - SETUP message received with a call
                           reference for a call that is already
                           active or in progress.

                    3.  Message too short


                 The following cause values are monitored by this
                 counter (Note: These cause values apply to both UNI3.0
                 and UNI3.1 unless otherwise stated):

                 Cause Value     Meaning

                    10     VPCI/VCI unacceptable (UNI3.0 only)
                    36     VPCI/VCI assignment failure (UNI3.1 only)
                    81     invalid call reference value
                    82     identified channel does not exist
                    89     invalid endpoint reference
                    96     mandatory information element is missing
                    97     message type non-existent or not
                           implemented
                    99     information element non-existent or not
                           implemented
                    100    invalid information element contents
                    101    message not compatible with call state
                    104    incorrect message length
                    111    protocol error, unspecified

                    NOTE:  For this counter, RELEASE COMPLETE
                    messages that are a reply to a previous RELEASE
                    message and contain the same cause value, are
                    redundant (for counting purposes) and should not
                    be counted."
               ::= { atmSigStatEntry 16 }

          atmSigDetectClgPtyEvents    OBJECT-TYPE
               SYNTAX           Counter32
               MAX-ACCESS       read-only
               STATUS           current
               DESCRIPTION
                 "Number of Calling Party Events detected on this
                 interface.  This counter monitors error events that
                 occur due to the originating user doing something
                 wrong. This counter is incremented when a RELEASE,





          Expire Jan 98                                        [Page 45]




          draft        Supplemental ATM Management Objects February 1997


                 RELEASE COMPLETE (only when not preceded by a RELEASE
                 mesg for the same call), ADD PARTY REJECT, or STATUS
                 message that contains one of the following cause code
                 values is received (Note: These cause values apply to
                 both UNI3.0 and UNI3.1):

                 Cause Value     Meaning

                    28     invalid number format (address incomplete)
                    43     access information discarded
                    57     bearer capability not authorized
                    65     bearer capability not implemented
                    73     unsupported combination of traffic
                           parameters
                    78     AAL parameters cannot be supported (UNI3.1
                           only)
                    91     invalid transit network selection
                    93     AAL parameters cannot be supported (UNI3.0
                           only)

                    NOTE:  For this counter, RELEASE COMPLETE
                    messages that are a reply to a previous RELEASE
                    message and contain the same cause value, are
                    redundant (for counting purposes) and should not
                    be counted."
               ::= { atmSigStatEntry 17 }

          atmSigEmitClgPtyEvents    OBJECT-TYPE
               SYNTAX           Counter32
               MAX-ACCESS       read-only
               STATUS           current
               DESCRIPTION
                 "Number of Calling Party Events transmitted from this
                 interface.  This counter monitors error events that
                 occur due to the originating user doing something
                 wrong. This counter is incremented when a RELEASE,
                 RELEASE COMPLETE (only when not preceded by a RELEASE
                 mesg for the same call), ADD PARTY REJECT, or STATUS
                 message that contains one of the following cause code
                 values is transmitted (Note: These cause values apply
                 to both UNI3.0 and UNI3.1):

                 Cause Value     Meaning






          Expire Jan 98                                        [Page 46]




          draft        Supplemental ATM Management Objects February 1997


                    28     invalid number format (address incomplete)
                    43     access information discarded
                    57     bearer capability not authorized
                    65     bearer capability not implemented
                    73     unsupported combination of traffic
                           parameters
                    78     AAL parameters cannot be supported (UNI3.1
                           only)
                    91     invalid transit network selection
                    93     AAL parameters cannot be supported (UNI3.0
                           only)

                    NOTE:  For this counter, RELEASE COMPLETE
                    messages that are a reply to a previous RELEASE
                    message and contain the same cause value, are
                    redundant (for counting purposes) and should not
                    be counted."
               ::= { atmSigStatEntry 18 }

          atmSigDetectTimerExpireds    OBJECT-TYPE
               SYNTAX               Counter32
               MAX-ACCESS           read-only
               STATUS               current
               DESCRIPTION
                 "Number of Timer Expiries detected on this interface.
                 The Timer Expiries Counter provides a count of network
                 timer expiries, and to some extent, host or switch
                 timer expiries.  The conditions for incrementing this
                 counter are:
                    - Expiry of any network timer

                    - Receipt of a RELEASE or RELEASE COMPLETE
                      message with Cause #102, 'recovery on
                      timer expiry'.

                 NOTE:  For this counter, RELEASE COMPLETE messages
                 that are a reply to a previous RELEASE message and
                 contain the same cause value, are redundant (for
                 counting purposes) and should not be counted."

               ::= { atmSigStatEntry 19 }

          atmSigEmitTimerExpireds    OBJECT-TYPE
               SYNTAX               Counter32





          Expire Jan 98                                        [Page 47]




          draft        Supplemental ATM Management Objects February 1997


               MAX-ACCESS           read-only
               STATUS               current
               DESCRIPTION
                 "Number of Timer Expiries transmitted from this
                 interface.  The Timer Expiries Counter provides a count
                 of network timer expiries, and to some extent, host or
                 switch timer expiries.  The conditions for incrementing
                 this counter are:
                    - Expiry of any network timer

                    - Receipt of a RELEASE or RELEASE COMPLETE
                      message with Cause #102, 'recovery on
                      timer expiry'.

                 NOTE:  For this counter, RELEASE COMPLETE messages
                 that are a reply to a previous RELEASE message and
                 contain the same cause value, are redundant (for
                 counting purposes) and should not be counted."
               ::= { atmSigStatEntry 20 }

          atmSigDetectRestarts    OBJECT-TYPE
               SYNTAX          Counter32
               MAX-ACCESS      read-only
               STATUS          current
               DESCRIPTION
                 "Number of Restart Activity errors detected on this
                 interface.  The Restart Activity Counter provides a
                 count of host, switch, or network restart activity.
                 This counter is incremented when receiving a RESTART
                 message."
               ::= { atmSigStatEntry 21 }

          atmSigEmitRestarts    OBJECT-TYPE
               SYNTAX          Counter32
               MAX-ACCESS      read-only
               STATUS          current
               DESCRIPTION
                 "Number of Restart Activity errors transmitted from
                 this interface.  The Restart Activity Counter provides
                 a count of host, switch, or network restart activity.
                 This counter is incremented when transmitting a RESTART
                 message."
               ::= { atmSigStatEntry 22 }






          Expire Jan 98                                        [Page 48]




          draft        Supplemental ATM Management Objects February 1997


          atmSigInEstabls    OBJECT-TYPE
               SYNTAX          Counter32
               MAX-ACCESS      read-only
               STATUS          current
               DESCRIPTION
                 "Number of SVC VCCs established at this signalling
                 entity for incoming connections."
                  ::= { atmSigStatEntry 23 }

          atmSigOutEstabls    OBJECT-TYPE
               SYNTAX          Counter32
               MAX-ACCESS      read-only
               STATUS          current
               DESCRIPTION
                 "Number of SVC VCCs established at this signalling
                 entity for outgoing connections."
                  ::= { atmSigStatEntry 24 }
































          Expire Jan 98                                        [Page 49]




          draft        Supplemental ATM Management Objects February 1997


          -- 4. ATM Interface Signalling Support Table
          -- This table provides information to support
          -- the signalling process which is used to establish
          -- ATM Switched Virtual Connections (SVCs).

          atmSigSupportTable       OBJECT-TYPE
               SYNTAX       SEQUENCE OF AtmSigSupportEntry
               MAX-ACCESS   not-accessible
               STATUS       current
               DESCRIPTION
                 "This table contains ATM local interface configuration
                 parameters, one entry per ATM signalling interface."
               ::= { atm2MIBObjects 4 }

          atmSigSupportEntry         OBJECT-TYPE
               SYNTAX         AtmSigSupportEntry
               MAX-ACCESS     not-accessible
               STATUS         current
               DESCRIPTION
                 "This list contains signalling configuration parameters
                 and state variables."
               INDEX { ifIndex }
               ::= { atmSigSupportTable  1}

          AtmSigSupportEntry    ::= SEQUENCE  {
               atmSigSupportClgPtyNumDel   INTEGER,
               atmSigSupportClgPtySubAddr  INTEGER,
               atmSigSupportCldPtySubAddr  INTEGER,
               atmSigSupportHiLyrInfo      INTEGER,
               atmSigSupportLoLyrInfo      INTEGER,
               atmSigSupportBlliRepeatInd      INTEGER,
               atmSigSupportAALInfo        INTEGER,
               atmSigSupportPrefCarrier    OCTET STRING
                    }

          atmSigSupportClgPtyNumDel     OBJECT-TYPE
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether the Calling Party Number
                 Information Element is transferred to the called party
                 address.  The value of this object can be:
                   - enabled(1)  This Information Element is transferred





          Expire Jan 98                                        [Page 50]




          draft        Supplemental ATM Management Objects February 1997


                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               ::= { atmSigSupportEntry 1 }

          atmSigSupportClgPtySubAddr   OBJECT-TYPE
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept and transfer
                 the Calling Party Subaddress Information Element from
                 the calling party to the called party.  Calling party
                 subaddress information shall only be transferred to the
                 called party if calling party number delivery is
                 enabled (i.e., atmSigSupportClgPtyNumDel =
                 'enabled(1)'.  The value of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               ::= { atmSigSupportEntry 2 }

          atmSigSupportCldPtySubAddr    OBJECT-TYPE
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and
                 deliver the Called Party Subaddress Information Element
                 from the calling party to the called party.  The value
                 of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               ::= { atmSigSupportEntry 3 }

          atmSigSupportHiLyrInfo     OBJECT-TYPE
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write





          Expire Jan 98                                        [Page 51]




          draft        Supplemental ATM Management Objects February 1997


               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and
                 deliver the Broadband High Layer Information Element
                 from the calling party to the called party.  The value
                 of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               ::= { atmSigSupportEntry 4 }

          atmSigSupportLoLyrInfo     OBJECT-TYPE
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and
                 deliver the Broadband Low Layer Information Element
                 from the calling party to the called party.  The value
                 of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               ::= { atmSigSupportEntry 5 }

          atmSigSupportBlliRepeatInd      OBJECT-TYPE
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and
                 deliver the Broadband Repeat Indicator with two or
                 three instances of the Broadband Low Layer Information
                 Element for low layer information selection from the
                 calling party to the called party.  This object shall
                 only be transferred if atmSigSupportLoLyrInfo =
                 'enabled(1)'.  The value of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party






          Expire Jan 98                                        [Page 52]




          draft        Supplemental ATM Management Objects February 1997


                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               ::= { atmSigSupportEntry 6 }

          atmSigSupportAALInfo     OBJECT-TYPE
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and
                 deliver the ATM Adaptation Layer Parameters Information
                 Element from the calling party to the called party.
                 The value of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               ::= { atmSigSupportEntry 7 }

          atmSigSupportPrefCarrier     OBJECT-TYPE
               SYNTAX        OCTET STRING
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This parameter identifies the carrier to which
                 intercarrier calls originated from this interface are
                 routed when transit network selection information is
                 not provided by the calling party.  If a Carrier
                 Identification Code (CIC) is used the parameter shall
                 contain the CIC.  For three-digit CICs, the first octet
                 shall be '0' and the CIC is contained in the three
                 following octets.  If the preferred carrier feature is
                 not supported the value is a zero-length string."
               ::= { atmSigSupportEntry 8 }


          -- 5. ATM Signalling Descriptor Parameter Table

              atmSigDescrParamTable     OBJECT-TYPE
                  SYNTAX       SEQUENCE OF AtmSigDescrParamEntry
                  MAX-ACCESS   not-accessible
                  STATUS       current
                  DESCRIPTION





          Expire Jan 98                                        [Page 53]




          draft        Supplemental ATM Management Objects February 1997


                      "A table contains signalling capabilities of VCLs
                      except the Traffic Descriptor.  Traffic
                      descriptors are described in the
                      atmTrafficDescrParamTable."
                  REFERENCE
                      "ATM Forum's ATM User-Network Interface
                      Specification, Version 3.0, Section 5.4.5 Variable
                      Length Information Elements."
                  ::= { atm2MIBObjects 5 }

              atmSigDescrParamEntry        OBJECT-TYPE
                  SYNTAX        AtmSigDescrParamEntry
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "Each entry in this table represents a set of
                      signalling capabilities that can be applied to a
                      VCL. There is no requirement for unique entries,
                      except that the index must be unique.  Objects
                      atmSigDescrParamRowStatus is required during
                      creation."
                  INDEX { atmSigDescrParamIndex }
                  ::= { atmSigDescrParamTable 1 }

              AtmSigDescrParamEntry ::=
                  SEQUENCE {
                      atmSigDescrParamIndex       AtmSigDescrParamIndex,
                      atmSigDescrParamAalType     INTEGER,
                      atmSigDescrParamAalSscsType INTEGER,
                      atmSigDescrParamBhliType    INTEGER,
                      atmSigDescrParamBhliInfo    OCTET STRING,
                      atmSigDescrParamBbcConnConf INTEGER,
                      atmSigDescrParamBlliLayer2  INTEGER,
                      atmSigDescrParamBlliLayer3  INTEGER,
                      atmSigDescrParamBlliPktSize INTEGER,
                      atmSigDescrParamBlliSnapId  INTEGER,
                      atmSigDescrParamBlliOuiPid  OCTET STRING,
                      atmSigDescrParamRowStatus   RowStatus
                  }

              atmSigDescrParamIndex OBJECT-TYPE
                  SYNTAX        AtmSigDescrParamIndex
                  MAX-ACCESS    not-accessible
                  STATUS        current





          Expire Jan 98                                        [Page 54]




          draft        Supplemental ATM Management Objects February 1997


                  DESCRIPTION
                      "The value of this object is used by the
                      atmVclExtTable to identify a row in this table."
                  ::= { atmSigDescrParamEntry 1 }

               atmSigDescrParamAalType OBJECT-TYPE
                   SYNTAX       INTEGER {
                      other(1),      -- not defined
                      aal1(2),       -- AAL type 1
                      aal34(3),      -- AAL type 3/4
                      aal5(4),       -- AAL type 5
                      userDefined(5) -- User-Defined AAL
                      }
                   MAX-ACCESS   read-create
                   STATUS       current
                   DESCRIPTION
                      "The AAL type. The value of this object is set to
                      other(1) when not defined."
                  DEFVAL { other }
                  ::= { atmSigDescrParamEntry 2 }

               atmSigDescrParamAalSscsType OBJECT-TYPE
                   SYNTAX     INTEGER {
                      other(1),       -- other, or not used
                      assured(2),     -- Data SSCS based on SSCOP
                                      -- assured operation
                      nonassured(3),  -- Data SSCS based on SSCOP
                                      -- non-assured operation
                      frameRelay(4),   -- frame relay SSCS
                      null(5)         -- null
                      }
                   MAX-ACCESS read-create
                   STATUS     current
                   DESCRIPTION
                      "The SSCS type used by this entry."
                   DEFVAL { other }
                   ::= { atmSigDescrParamEntry 3 }

                atmSigDescrParamBhliType OBJECT-TYPE
                   SYNTAX      INTEGER {
                      other(1),         -- not defined
                      iso(2),           -- ISO
                      user(3),          -- User specific
                      hiProfile(4),     -- Higher layer profile





          Expire Jan 98                                        [Page 55]




          draft        Supplemental ATM Management Objects February 1997


                                        -- this enum applicable to
                                        -- UNI 3.0 only
                      vendorSpecific(5) -- Vender specific
                                        -- application identifier
                      }
                   MAX-ACCESS  read-create
                   STATUS      current
                   DESCRIPTION
                      "The Broadband high layer type."
                   DEFVAL { other }
                   ::= { atmSigDescrParamEntry 4 }

                atmSigDescrParamBhliInfo OBJECT-TYPE
                   SYNTAX     OCTET STRING (SIZE(0..7))
                   MAX-ACCESS read-create
                   STATUS     current
                   DESCRIPTION
                      "The Broadband high layer information.  When
                      atmSigDescrParamBhliType is set to iso(2), the
                      value of this object is a zero length string.
                      When atmSigDescrParamBhliType is set to
                      hiProfile(4), the value of this object is a length
                      of 4 octet string containing user to user profile
                      identifier.  When atmSigDescrParamBhliType is set
                      to    vendorSpecific(4), the value of this object
                      is a length of 7 octet string.  The most
                      significant 3 octets consist of a globally-
                      administered OUI, the least significant 4 octets
                      are the vender administered application OUI."
                   DEFVAL { ''H }
                   ::= { atmSigDescrParamEntry 5 }

                atmSigDescrParamBbcConnConf OBJECT-TYPE
                   SYNTAX     INTEGER {
                       ptp(1),   -- point-to-point
                       ptmp(2)   -- point-to-multipoint
                       }
                   MAX-ACCESS read-create
                   STATUS     current
                   DESCRIPTION
                      "The Broadband bearer capability user plane
                      connection configuration parameter."
                   ::= { atmSigDescrParamEntry 6 }






          Expire Jan 98                                        [Page 56]




          draft        Supplemental ATM Management Objects February 1997


                atmSigDescrParamBlliLayer2 OBJECT-TYPE
                    SYNTAX     INTEGER {
                       other(1),        -- not specified
                       iso1745(2),      -- Basic mode ISO 1745
                       q921(3),         -- CCITT Recommendation Q.921
                       x25linklayer(4), -- CCITT Recommendation X.25
                                        -- Link Layer
                       x25multilink(5), -- CCITT Recommendation X.25
                                        -- Multilink
                       lapb(6),         -- Extended LAPB; for half
                                        -- duplex operation
                       hdlcArm(7),      -- HDLC ARM (ISO 4335)
                       hdlcNrm(8),      -- HDLC NRM (ISO 4335)
                       hdlcAbm(9),      -- HDLC ABM (ISO 4335)
                       iso88022(10),    -- LAN logical link control
                                        -- (ISO 8802/2)
                       x75slp(11),      -- CCITT Recommendation X.75,
                                        -- single link
                                        -- procedure (SLP)
                       q922(12),        -- CCITT Recommendation Q.922
                       userDef(13),     -- User specified
                       iso7776(14)      -- ISO 7776 DTE-DTE operation
                       }
                    MAX-ACCESS read-create
                    STATUS     current
                    DESCRIPTION
                      "The Broadband low layer information, protocol
                      type of layer 2.  The value of this object is
                      other(1) if layer 2 protocol is not used."
                    DEFVAL { other }
                    ::= { atmSigDescrParamEntry 7 }

                atmSigDescrParamBlliLayer3 OBJECT-TYPE
                    SYNTAX     INTEGER {
                       other(1),       -- not specified
                       x25pkt(2),      -- CCITT Recommendation X.25
                                       -- packet layer
                       isoiec8208(3),  -- ISO/IEC 8208 (X.25 packet
                                       -- level protocol for data
                                       -- terminal equipment)
                       x223iso8878(4), -- X.223/ISO 8878
                       isoiec8473(5),  -- ISO/IEC 8473 OSI
                                       -- connectionless
                                       -- mode protocol





          Expire Jan 98                                        [Page 57]




          draft        Supplemental ATM Management Objects February 1997


                       t70(6),         -- CCITT Recommendation T.70
                                       -- minimum
                                       -- network layer
                       tr9577(7),      -- ISO/IEC TR 9577 Protocol
                                       -- Identification in the
                                       -- network layer
                       userDef(8)      -- user specified
                       }
                    MAX-ACCESS read-create
                    STATUS     current
                    DESCRIPTION
                      "The Broadband low layer information, protocol
                      type of layer 3.  The value of this object is
                      other(1) if layer 3 protocol is not used."
                    DEFVAL { other }
                    ::= { atmSigDescrParamEntry 8 }

                atmSigDescrParamBlliPktSize OBJECT-TYPE
                    SYNTAX     INTEGER {
                       other(1),        -- not used
                       s16(2),          -- 16 octets
                       s32(3),          -- 32 octets
                       s64(4),          -- 64 octets
                       s128(5),         -- 128 octets
                       s256(6),         -- 256 octets
                       s512(7),         -- 512 octets
                       s1024(8),        -- 1028 octets
                       s2048(9),        -- 2048 octets
                       s4096(10)        -- 4096 octets
                    }
                    MAX-ACCESS read-create
                    STATUS     current
                    DESCRIPTION
                      "The default packet size defined in B-LLI."
                    DEFVAL { other }
                    ::= { atmSigDescrParamEntry 9 }

                atmSigDescrParamBlliSnapId OBJECT-TYPE
                    SYNTAX     INTEGER {
                       other(1),  -- not used
                       true(2),   -- SNAP ID is 1
                       false(3)   -- SNAP ID is 0
                    }
                    MAX-ACCESS read-create





          Expire Jan 98                                        [Page 58]




          draft        Supplemental ATM Management Objects February 1997


                    STATUS     current
                    DESCRIPTION
                      "The SNAP ID used for Broadband low layer protocol
                      layer 3.  The value of this object is other(1) if
                      atmSigDescrParamBlliLayer3 is set to other(1)."
                    DEFVAL { other }
                    ::= { atmSigDescrParamEntry 10 }

                atmSigDescrParamBlliOuiPid OBJECT-TYPE
                    SYNTAX      OCTET STRING (SIZE(0..5))
                    MAX-ACCESS  read-create
                    STATUS      current
                    DESCRIPTION
                      "The OUI/PID encoding for Broadband low layer
                      protocol layer 3.  The value of this object is a
                      zero length string if atmSigDescrParamBlliLayer3
                      is set to none(1).  When used, it is always 5
                      octets with the most significant octet as the OUI
                      Octet 1 and the least significant octet as the PID
                      Octet 2."
                    DEFVAL { ''H }
                    ::= { atmSigDescrParamEntry 11 }

                 atmSigDescrParamRowStatus OBJECT-TYPE
                     SYNTAX      RowStatus
                     MAX-ACCESS  read-create
                     STATUS      current
                     DESCRIPTION
                      "This object is used to create and delete rows in
                      the atmSigDescrParamTable. Writable values are:
                      -'createAndWait' which allows manager to create an
                      entry first and fill in the parameters later.
                      -'active' which allows manager to set the entry to
                      be available to users.  -'destroy' which allows
                      manager to delete an entry from this table.
                      Readable values are: -'createAndWait' which means
                      the entry is created but not available to be used.
                      -'active' means it is active and ready to be used
                      by agent or manager."
                    ::= { atmSigDescrParamEntry 12 }









          Expire Jan 98                                        [Page 59]




          draft        Supplemental ATM Management Objects February 1997


          --
          -- 6. ATM Interface Administrative Address Table
          --

          atmIfAdminAddrTable    OBJECT-TYPE
               SYNTAX       SEQUENCE OF AtmIfAdminAddrEntry
               MAX-ACCESS   not-accessible
               STATUS       current
               DESCRIPTION
                 "This table contains an address list on a per interface
                 basis.  This table only applies to switches or networks
                 and only for interfaces that have more than one address
                 assigned."
               ::= { atm2MIBObjects 6 }

          atmIfAdminAddrEntry    OBJECT-TYPE
               SYNTAX            AtmIfAdminAddrEntry
               MAX-ACCESS        not-accessible
               STATUS            current
               DESCRIPTION
                 "An entry in the atmIfAdminAddrTable."
               INDEX { ifIndex, atmIfAdminAddrAddress }
               ::= { atmIfAdminAddrTable  1}

          AtmIfAdminAddrEntry    ::= SEQUENCE  {
               atmIfAdminAddrAddress        AtmAddr,
               atmIfAdminAddrAddressSource  INTEGER,
               atmIfAdminAddrOrgScope       INTEGER,
               atmIfAdminAddrRowStatus      RowStatus
                    }

          atmIfAdminAddrAddress   OBJECT-TYPE
               SYNTAX             AtmAddr
               MAX-ACCESS         not-accessible
               STATUS             current
               DESCRIPTION
                 "A valid address for a given switch or network
                 interface."
               ::= { atmIfAdminAddrEntry 1}

          atmIfAdminAddrAddressSource  OBJECT-TYPE
               SYNTAX                  INTEGER  {
                  other(1),
                  static(2),





          Expire Jan 98                                        [Page 60]




          draft        Supplemental ATM Management Objects February 1997


                  dynamic(3)
                  }
               MAX-ACCESS              read-only
               STATUS                  current
               DESCRIPTION
                 "The type of address source for a given ATM Address.
                 i.e. Value dynamic(3) is used when ILMI is used."
               ::= { atmIfAdminAddrEntry 2}


          atmIfAdminAddrOrgScope  OBJECT-TYPE
               SYNTAX       INTEGER {
                   localNetwork(1),
                   localNetworkPlusOne(2),
                   localNetworkPlusTwo(3),
                   siteMinusOne(4),
                   intraSite(5),
                   sitePlusOne(6),
                   organizationMinusOne(7),
                   intraOrganization(8),
                   organizationPlusOne(9),
                   communityMinusOne(10),
                   intraCommunity(11),
                   communityPlusOne(12),
                   regional(13),
                   interRegional(14),
                   global(15)
               }
               MAX-ACCESS   read-create
               STATUS       current

               DESCRIPTION
                   "This object indicates the organizational scope for the
                   referenced address.  The information of the referenced
                   address shall not be distributed outside the indicated
                   scope.   Refer to Annex 5.3 of ATM Forum UNI Signalling
                   4.0 for guidelines regarding the use of organizational
                   scopes.

                   This value cannot be configured for ILMI-registered
                   addresses.

                   The default values for organizational scope are
                   localNetwork(1) for ATM group addresses, and global(15)





          Expire Jan 98                                        [Page 61]




          draft        Supplemental ATM Management Objects February 1997


                   for individual addresses."
               ::= { atmIfAdminAddrEntry 3}

          atmIfAdminAddrRowStatus OBJECT-TYPE
               SYNTAX             RowStatus
               MAX-ACCESS         read-create
               STATUS             current
               DESCRIPTION
                 "This object is used to create and delete rows in the
                 atmIfAdminAddrTable."
               ::= { atmIfAdminAddrEntry 4}

          -- 7. ATM VPI/VCI to Address Mapping Table

              atmVclAddrTable  OBJECT-TYPE
                  SYNTAX         SEQUENCE OF AtmVclAddrEntry
                  MAX-ACCESS     not-accessible
                  STATUS         current
                  DESCRIPTION
                      "This table provides a mapping between the
                      atmVclTable and the ATM called party/calling party
                      address. This table can be used to retrieve the
                      calling party and called party ATM address pair
                      for a given Vcl. Note that there can be more than
                      one pair of calling party and called party ATM
                      addresses for a VCL in a point to multi-point
                      call."
                  ::= { atm2MIBObjects 7 }

              atmVclAddrEntry    OBJECT-TYPE
                  SYNTAX        AtmVclAddrEntry
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "Each entry in this table represents a binding
                      between a VCL and an ATM address associated with
                      this call. This ATM address can be either the
                      called party address or the calling party address.
                      There can be more than one pair of calling/called
                      party ATM addresses associated with the VCL entry
                      for point to multi-point calls. Objects
                      atmVclAddrAddr, atmVclAddrType, and
                      atmVclAddrRowStatus are required during row
                      creation."





          Expire Jan 98                                        [Page 62]




          draft        Supplemental ATM Management Objects February 1997


                  INDEX  { ifIndex, atmVclVpi, atmVclVci,
                           atmVclAddrAddr }
                  ::= { atmVclAddrTable 1 }

              AtmVclAddrEntry ::=
                  SEQUENCE {
                      atmVclAddrAddr       AtmAddr,
                      atmVclAddrType       INTEGER,
                      atmVclAddrRowStatus  RowStatus
                  }


              atmVclAddrAddr     OBJECT-TYPE
                  SYNTAX        AtmAddr
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "An ATM address on one end of the VCL.  For SVCs,
                      the agent supplies the value of this object at
                      creation time.  For PVCs, manager can supply the
                      value of this object during or after the PVC
                      creation."
                  ::= { atmVclAddrEntry 1 }

             atmVclAddrType     OBJECT-TYPE
                 SYNTAX       INTEGER { callingParty(1), calledParty(2) }
                 MAX-ACCESS   read-create
                 STATUS       current
                 DESCRIPTION
                      "The type of ATM Address represented by the object
                      atmVclAddrAddr.  Choices are either the calling
                      party ATM address or the called party ATM
                      address."
                  ::= { atmVclAddrEntry 2 }

             atmVclAddrRowStatus     OBJECT-TYPE
                 SYNTAX       RowStatus
                 MAX-ACCESS   read-create
                 STATUS       current
                 DESCRIPTION
                      "This object is used to create or destroy an entry
                      from this table."
                  ::= { atmVclAddrEntry 3 }






          Expire Jan 98                                        [Page 63]




          draft        Supplemental ATM Management Objects February 1997


          -- 8. ATM Address to VPI/VCI Mapping Table
          -- This table provides an alternative way to access
          -- a row in the atmVclAddrTable by using
          -- an ATM address as an index, instead of
          -- the ifIndex

              atmAddrVclTable   OBJECT-TYPE
                  SYNTAX        SEQUENCE OF AtmAddrVclEntry
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "This table provides an alternative way to
                      retrieve the atmVclTable.  This table can be used
                      to retrieve the indexing to the atmVclTable by an
                      ATM address."
                  ::= { atm2MIBObjects 8 }

              atmAddrVclEntry    OBJECT-TYPE
                  SYNTAX         AtmAddrVclEntry
                  MAX-ACCESS     not-accessible
                  STATUS         current
                  DESCRIPTION
                      "Each entry in this table represents an entry in
                      the atmVclTable of the ATM MIB [1] by it's ATM
                      address.  The ATM address is either the calling or
                      called party ATM address of the call.  Entries in
                      this table are read only.  They show up when
                      entries are created in the atmVclAddrTable."
                  INDEX { atmVclAddrAddr, atmAddrVclAtmIfIndex,
                          atmAddrVclVpi, atmAddrVclVci }
                  ::= { atmAddrVclTable 1 }

              AtmAddrVclEntry ::=
                  SEQUENCE {
                      atmAddrVclAtmIfIndex  InterfaceIndex,
                      atmAddrVclVpi         AtmVpIdentifier,
                      atmAddrVclVci         AtmVcIdentifier,
                      atmAddrVclAddrType    INTEGER
                      }

              atmAddrVclAtmIfIndex     OBJECT-TYPE
                  SYNTAX               InterfaceIndex
                  MAX-ACCESS           not-accessible
                  STATUS               current





          Expire Jan 98                                        [Page 64]




          draft        Supplemental ATM Management Objects February 1997


                  DESCRIPTION
                      "The interface index of the ATM interface where
                      this VCL pertains to.  This object combined with
                      the atmAddrVclVpi and atmAddrVclVci objects serves
                      as an index to the atmVclTable."
                  ::= { atmAddrVclEntry 1 }

              atmAddrVclVpi     OBJECT-TYPE
                  SYNTAX        AtmVpIdentifier
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "The VPI value of the VCL.  This object combined
                      with the atmAddrVclAtmIfIndex and atmAddrVclVci
                      objects serves as an index to the atmVclTable."
                  ::= { atmAddrVclEntry 2 }

              atmAddrVclVci     OBJECT-TYPE
                  SYNTAX        AtmVcIdentifier
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "The VCI value of the VCL.  This object combined
                      with the atmAddrVclAtmIfIndex and atmAddrVclVpi
                      objects serves as an index to the atmVclTable."
                  ::= { atmAddrVclEntry 3 }

             atmAddrVclAddrType     OBJECT-TYPE
                 SYNTAX       INTEGER { callingParty(1), calledParty(2) }
                 MAX-ACCESS   read-only
                 STATUS       current
                 DESCRIPTION
                      "The type of ATM Address represented by the object
                      atmVclAddrAddr.  Choices are either calling party
                      address or called party address."
                  ::= { atmAddrVclEntry 4 }


          -- 9. ATM VPL Statistics Table

              atmVplStatTable   OBJECT-TYPE
                  SYNTAX        SEQUENCE OF AtmVplStatEntry
                  MAX-ACCESS    not-accessible
                  STATUS        current





          Expire Jan 98                                        [Page 65]




          draft        Supplemental ATM Management Objects February 1997


                  DESCRIPTION
                      "This table contains all statistic counters per
                      VPL.  It is used to monitor the usage of the VPL
                      in terms of incoming cells and outgoing cells."
                  ::= { atm2MIBObjects 9 }

              atmVplStatEntry    OBJECT-TYPE
                  SYNTAX         AtmVplStatEntry
                  MAX-ACCESS     not-accessible
                  STATUS         current
                  DESCRIPTION
                      "Each entry in this table represents a VPL."
                  INDEX { ifIndex, atmVplVpi }
                  ::= { atmVplStatTable 1 }

              AtmVplStatEntry ::=
                  SEQUENCE {
                      atmVplStatTotalCellIns Counter32,
                      atmVplStatClp0CellIns Counter32,
                      atmVplStatTotalDiscards Counter32,
                      atmVplStatClp0Discards Counter32,
                      atmVplStatTotalCellOuts Counter32,
                      atmVplStatClp0CellOuts Counter32,
                      atmVplStatTaggedOuts Counter32
              }

              atmVplStatTotalCellIns OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells received by
                      this VPL including both CLP=0 and CLP=1 cells.
                      The cells are counted prior to the application of
                      the traffic policing."
                  ::= { atmVplStatEntry 1 }

              atmVplStatClp0CellIns OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The number of valid ATM cells received by this
                      VPL with CLP=0.  The cells are counted prior to





          Expire Jan 98                                        [Page 66]




          draft        Supplemental ATM Management Objects February 1997


                      the application of the traffic policing."
                  ::= { atmVplStatEntry 2 }

              atmVplStatTotalDiscards OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells discarded by
                      the traffic policing entity. This includes cells
                      orginally received with CLP=0 and CLP=1."
                  ::= { atmVplStatEntry 3 }

              atmVplStatClp0Discards OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells received with
                      CLP=0 an  discarded by the traffic policing
                      entity."
                  ::= { atmVplStatEntry 4 }

              atmVplStatTotalCellOuts OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells transmitted
                      by this VPL.  This includes both CLP=0 and CLP=1
                      cells."
                  ::= { atmVplStatEntry 5 }

              atmVplStatClp0CellOuts OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells transmitted
                      with CLP=0 by this VPL."
                  ::= { atmVplStatEntry 6 }

              atmVplStatTaggedOuts OBJECT-TYPE
                  SYNTAX        Counter32





          Expire Jan 98                                        [Page 67]




          draft        Supplemental ATM Management Objects February 1997


                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells tagged by the
                      traffic policing entity from CLP=0 to CLP=1 and
                      transmitted by this VPL."
                  ::= { atmVplStatEntry 7 }



          -- 10. ATM Logical Port Configuration Table


              atmVplLogicalPortTable OBJECT-TYPE
                  SYNTAX           SEQUENCE OF AtmVplLogicalPortEntry
                  MAX-ACCESS       not-accessible
                  STATUS           current
                  DESCRIPTION
                      "Indicates whether the VPL is an ATM Logical Port
                      interface (ifType=80)."
                  ::= { atm2MIBObjects 10 }


              atmVplLogicalPortEntry OBJECT-TYPE
                  SYNTAX  AtmVplLogicalPortEntry
                  MAX-ACCESS  not-accessible
                  STATUS  current
                  DESCRIPTION
                      "An entry with information about the ATM Logical
                      Port interface."
                  AUGMENTS { atmVplEntry }
                  ::= { atmVplLogicalPortTable 1 }


              AtmVplLogicalPortEntry ::=
                  SEQUENCE {
                      atmVplLogicalPortDef         INTEGER,
                      atmVplLogicalPortIndex       InterfaceIndex
                      }


              atmVplLogicalPortDef   OBJECT-TYPE
                  SYNTAX  INTEGER {
                                  notLogicalIf(1),





          Expire Jan 98                                        [Page 68]




          draft        Supplemental ATM Management Objects February 1997


                                  isLogicalIf(2)
                                  }
                  MAX-ACCESS  read-create
                  STATUS  current
                  DESCRIPTION
                      "Indicates whether the VPC at this VPL interface
                      is an ATM Logical Port interface."
                  DEFVAL { notLogicalIf }
                  ::= { atmVplLogicalPortEntry 1 }


              atmVplLogicalPortIndex OBJECT-TYPE
                  SYNTAX  InterfaceIndex
                  MAX-ACCESS  read-only
                  STATUS  current
                  DESCRIPTION
                      "The ifTable index of the ATM logical port
                      interface associated with this VPL. Only valid if
                      the value of atmVplLogicalPortDef is isLogicalIf,
                      and the VPL row is active."
                  ::= { atmVplLogicalPortEntry 2 }




























          Expire Jan 98                                        [Page 69]




          draft        Supplemental ATM Management Objects February 1997


          -- 11. ATM VCL Statistics Table

              atmVclStatTable   OBJECT-TYPE
                  SYNTAX        SEQUENCE OF AtmVclStatEntry
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "This table contains all statistic counters per
                      VCL.  It is used to monitor the usage of the VCL
                      in terms of incoming cells and outgoing cells."
                  ::= { atm2MIBObjects 11 }

              atmVclStatEntry    OBJECT-TYPE
                  SYNTAX         AtmVclStatEntry
                  MAX-ACCESS     not-accessible
                  STATUS         current
                  DESCRIPTION
                      "Each entry in this table represents a VCL."
                  INDEX { ifIndex, atmVclVpi, atmVclVci }
                  ::= { atmVclStatTable 1 }

              AtmVclStatEntry ::=
                  SEQUENCE {
                      atmVclStatTotalCellIns Counter32,
                      atmVclStatClp0CellIns Counter32,
                      atmVclStatTotalDiscards Counter32,
                      atmVclStatClp0Discards Counter32,
                      atmVclStatTotalCellOuts Counter32,
                      atmVclStatClp0CellOuts Counter32,
                      atmVclStatTaggedOuts Counter32
                  }

              atmVclStatTotalCellIns OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells received by
                      this VCL including both CLP=0 and CLP=1 cells.
                      The cells are counted prior to the application of
                      the traffic policing."
                  ::= { atmVclStatEntry 1 }

              atmVclStatClp0CellIns OBJECT-TYPE





          Expire Jan 98                                        [Page 70]




          draft        Supplemental ATM Management Objects February 1997


                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The number of valid ATM cells received by this
                      VCL with CLP=0.  The cells are counted prior to
                      the application of the traffic policing."
                  ::= { atmVclStatEntry 2 }

              atmVclStatTotalDiscards OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells discarded by
                      the traffic policing entity. This includes cells
                      orginally received with CLP=0 and CLP=1."
                  ::= { atmVclStatEntry 3 }

              atmVclStatClp0Discards OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells received with
                      CLP=0 an  discarded by the traffic policing
                      entity."
                  ::= { atmVclStatEntry 4 }

              atmVclStatTotalCellOuts OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells transmitted
                      by this VCL.  This includes both CLP=0 and CLP=1
                      cells."
                  ::= { atmVclStatEntry 5 }

              atmVclStatClp0CellOuts OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION





          Expire Jan 98                                        [Page 71]




          draft        Supplemental ATM Management Objects February 1997


                      "The total number of valid ATM cells transmitted
                      with CLP=0 by this VCL."
                  ::= { atmVclStatEntry 6 }

              atmVclStatTaggedOuts OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells tagged by the
                      traffic policing entity from CLP=0 to CLP=1 and
                      transmitted by this VCL."
                  ::= { atmVclStatEntry 7 }


          -- 12. ATM AAL5 per VCC Statistics Table

              atmAal5VclStatTable   OBJECT-TYPE
                  SYNTAX        SEQUENCE OF AtmAal5VclStatEntry
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "This table provides a collection of objects
                      providing AAL5 configuration and performance
                      statistics of a VCL."
                  ::= { atm2MIBObjects 12 }

              atmAal5VclStatEntry    OBJECT-TYPE
                  SYNTAX         AtmAal5VclStatEntry
                  MAX-ACCESS     not-accessible
                  STATUS         current
                  DESCRIPTION
                      "Each entry in this table represents a VCL."
                  INDEX { ifIndex, atmVclVpi, atmVclVci }
                  ::= { atmAal5VclStatTable 1 }


              AtmAal5VclStatEntry ::=
                  SEQUENCE {
                     atmAal5VclInPkts
                         Counter32,
                     atmAal5VclOutPkts
                         Counter32,
                     atmAal5VclInOctets





          Expire Jan 98                                        [Page 72]




          draft        Supplemental ATM Management Objects February 1997


                         Counter32,
                     atmAal5VclOutOctets
                         Counter32
                  }

              atmAal5VclInPkts      OBJECT-TYPE
                  SYNTAX            Counter32
                  MAX-ACCESS        read-only
                  STATUS            current
                  DESCRIPTION
                      "The number of AAL5 CPCS PDUs received on the AAL5
                      VCC at the interface identified by the ifIndex."
                  ::= { atmAal5VclStatEntry 1 }

              atmAal5VclOutPkts   OBJECT-TYPE
                  SYNTAX            Counter32
                  MAX-ACCESS        read-only
                  STATUS            current
                  DESCRIPTION
                      "The number of AAL5 CPCS PDUs transmitted on the
                      AAL5 VCC at the interface identified by the
                      ifIndex."
                  ::= { atmAal5VclStatEntry 2 }

              atmAal5VclInOctets   OBJECT-TYPE
                  SYNTAX            Counter32
                  MAX-ACCESS        read-only
                  STATUS            current
                  DESCRIPTION
                      "The number of octets contained in AAL5 CPCS PDUs
                      received on the AAL5 VCC at the interface
                      identified by the ifIndex."
                  ::= { atmAal5VclStatEntry 3 }

              atmAal5VclOutOctets   OBJECT-TYPE
                  SYNTAX            Counter32
                  MAX-ACCESS        read-only
                  STATUS            current
                  DESCRIPTION
                      "The number of octets contained in AAL5 CPCS PDUs
                      transmitted on the AAL5 VCC at the interface
                      identified by the ifIndex."
                  ::= { atmAal5VclStatEntry 4 }






          Expire Jan 98                                        [Page 73]




          draft        Supplemental ATM Management Objects February 1997


                      -- 13. ATM VC General Information Table

                          atmVclGenTable OBJECT-TYPE
                              SYNTAX           SEQUENCE OF
                      AtmVclGenEntry
                              MAX-ACCESS       not-accessible
                              STATUS           current
                              DESCRIPTION
                                  "General Information for each VC."
                             ::= { atm2MIBObjects 13 }


                         atmVclGenEntry OBJECT-TYPE
                             SYNTAX  AtmVclGenEntry
                             MAX-ACCESS  not-accessible
                             STATUS  current
                             DESCRIPTION
                                 "An entry with general information
                                 about the ATM VC."
                            AUGMENTS { atmVclEntry }
                            ::= { atmVclGenTable 1 }


                        AtmVclGenEntry ::=
                            SEQUENCE {
                              atmVclGenSigDescrIndex
                                  AtmSigDescrParamIndex
                    }


                        atmVclGenSigDescrIndex   OBJECT-TYPE
                            SYNTAX            AtmSigDescrParamIndex
                            MAX-ACCESS        read-create
                            STATUS            current
                            DESCRIPTION
                                "The value of this object identifies the
                                row in the ATM Signalling Descriptor
                                Parameter Table which applies to this
                                VCL."
                           ::= { atmVclGenEntry 1 }

                   -- 14. ATM Interface Configuration Extention table

                   atmInterfaceExtTable    OBJECT-TYPE





          Expire Jan 98                                        [Page 74]




          draft        Supplemental ATM Management Objects February 1997


                        SYNTAX       SEQUENCE OF AtmInterfaceExtEntry
                        MAX-ACCESS   not-accessible
                        STATUS       current
                        DESCRIPTION
                          "This table contains extra information not
                          defined in the atmInterfaceConfTable per [1].
                          This table includes the configured and actual
                          minimum VPI/VCI values for all switched
                          VPL/VCLs per ATM interface."
                       ::= { atm2MIBObjects 14 }

                  atmInterfaceExtEntry    OBJECT-TYPE
                       SYNTAX            AtmInterfaceExtEntry
                       MAX-ACCESS        not-accessible
                       STATUS            current
                       DESCRIPTION
                                  "An entry extends the
                         atmInterfaceEntry defined in [1].  Each
                                  entry corresponds to an ATM
                         interface."
                      INDEX { ifIndex }
                      ::= { atmInterfaceExtTable  1}

                 AtmInterfaceExtEntry    ::= SEQUENCE  {
                         atmInterfaceConfigSigType     AtmInterfaceType,
                         atmInterfaceActualSigType     AtmInterfaceType,
                         atmInterfaceConfigSigSide     INTEGER,
                         atmInterfaceActualSigSide     INTEGER,
                         atmIntfIlmiEstablishConnPollInterval   Integer32,
                         atmIntfIlmiCheckConnPollInterval       Integer32,
                         atmIntfIlmiConnPollInactivityFactor    Integer32,
                         atmIntfIlmiPublicPrivateIndicator      INTEGER,
                         atmInterfaceConfMaxSvpcVpi    INTEGER,
                         atmInterfaceCurrentMaxSvpcVpi INTEGER,
                         atmInterfaceConfMaxSvccVpi    INTEGER,
                         atmInterfaceCurrentMaxSvccVpi INTEGER,
                         atmIntfPvcFailures            Counter32,
                         atmIntfCurrentlyFailingPVpls  Gauge32,
                         atmIntfCurrentlyFailingPVcls  Gauge32,
                         atmIntfPvcNotificationInterval    INTEGER,
                         atmIntfPvcFailuresTrapEnable      TruthValue,
                         atmIntfIlmiAdminStatus            BITS,
                         atmIntfIlmiOperStatus             INTEGER,
                         atmIntfIlmiFsmState               BITS,





          Expire Jan 98                                        [Page 75]




          draft        Supplemental ATM Management Objects February 1997


                         atmIntfSigVccRcvTrafficDescrIndex    AtmTrafficDescrParamIndex,
                         atmIntfSigVccTrxTrafficDescrIndex    AtmTrafficDescrParamIndex
                 }

                 atmInterfaceConfigSigType     OBJECT-TYPE
                      SYNTAX        AtmInterfaceType
                      MAX-ACCESS    read-write
                      STATUS        current
                      DESCRIPTION
                        "The type of the ATM interface in regards to the
                        signalling that is configured for the interface.
                        Setting this variable to a value of 'other' is
                        not allowed."
                     DEFVAL { autoConfig }
                     ::= { atmInterfaceExtEntry 1 }

                atmInterfaceActualSigType     OBJECT-TYPE
                     SYNTAX          AtmInterfaceType
                     MAX-ACCESS      read-only
                     STATUS          current
                     DESCRIPTION
                       "The type of signalling that is currently being
                       used on the interface.  This may reflect a
                       manually configured value for the signalling
                       type, or may be determined by other means such as
                       auto-configuration.  A value of `autoConfig'
                       indicates that auto-configuration was requested
                       but has not yet been completed."
                    ::= { atmInterfaceExtEntry 2 }

               atmInterfaceConfigSigSide     OBJECT-TYPE
                    SYNTAX       INTEGER  {
                                 other(1),
                                 user(2),
                                 network(3) }
                    MAX-ACCESS   read-write
                    STATUS       current
                    DESCRIPTION
                      "The role of this ATM interface.  This value does
                      not apply and is set to other(1) by agent when the
                      object atmSigConfigSigType is set to `autoConfig',
                      `atmfPnni1Dot0', or `atmfBici2Dot0'."
                   DEFVAL { other }
                   ::= { atmInterfaceExtEntry 3 }





          Expire Jan 98                                        [Page 76]




          draft        Supplemental ATM Management Objects February 1997


              atmInterfaceActualSigSide     OBJECT-TYPE
                   SYNTAX       INTEGER  {
                                other(1),
                                user(2),
                                network(3),
                                symmetric(4) }
                   MAX-ACCESS   read-only
                   STATUS       current
                   DESCRIPTION
                     "The actual role of this signalling entity."
                  ::= { atmInterfaceExtEntry 4 }

             atmIntfIlmiEstablishConnPollInterval    OBJECT-TYPE
                 SYNTAX       Integer32 (1..65535)
                 UNITS        "seconds"
                 MAX-ACCESS   read-write
                 STATUS       current
                 DESCRIPTION
                     "The amount of time S between successive transmissions
                     of ILMI messages on this interface for the purpose of
                     detecting establishment of ILMI connectivity."
                 REFERENCE
                     "ATM Forum ILMI 4.0 Section 8.3.1"
                 DEFVAL { 1 }
                 ::= { atmInterfaceExtEntry 6 }

             atmIntfIlmiCheckConnPollInterval    OBJECT-TYPE
                 SYNTAX       Integer32 (0..65535)
                 UNITS        "seconds"
                 MAX-ACCESS   read-write
                 STATUS       current
                 DESCRIPTION
                    "The amount of time T between successive
                    transmissions of ILMI messages on this interface for
                    the purpose of detecting loss of ILMI connectivity.
                    The distinguished value zero disables ILMI
                    connectivity procedures on this interface."
                REFERENCE
                    "ATM Forum ILMI 4.0 Section 8.3.1"
                DEFVAL { 5 }
                ::= { atmInterfaceExtEntry 7 }

            atmIntfIlmiConnPollInactivityFactor    OBJECT-TYPE
                SYNTAX       Integer32 (0..65535)





          Expire Jan 98                                        [Page 77]




          draft        Supplemental ATM Management Objects February 1997


                MAX-ACCESS   read-write
                STATUS       current
                DESCRIPTION
                   "The number K of consecutive polls on this interface
                   for which no ILMI response message is received before
                   ILMI connectivity is declared lost."
               REFERENCE
                   "ATM Forum ILMI 4.0 Section 8.3.1"
               DEFVAL { 4 }
               ::= { atmInterfaceExtEntry 8 }

           atmIntfIlmiPublicPrivateIndicator    OBJECT-TYPE
               SYNTAX       INTEGER {
                                      other(1),
                                      public(2),
                                      private(3)
                                      }
               MAX-ACCESS   read-write
               STATUS       current
               DESCRIPTION
                  "Specifies whether this end of the interface is
                  advertised in ILMI as a device of the `public' or
                  `private' type."
              DEFVAL { private }
              ::= { atmInterfaceExtEntry 9 }

          atmInterfaceConfMaxSvpcVpi    OBJECT-TYPE
               SYNTAX             INTEGER  (0..4096)
               MAX-ACCESS         read-write
               STATUS             current
               DESCRIPTION
                 "The maximum VPI that the signalling stack on the ATM
                 interface is configured to support for allocation to
                 switched virtual path connections."
               ::= { atmInterfaceExtEntry 10 }

          atmInterfaceCurrentMaxSvpcVpi    OBJECT-TYPE
               SYNTAX             INTEGER  (0..4096)
               MAX-ACCESS         read-write
               STATUS             current
               DESCRIPTION
                 "The maximum VPI that the signalling stack on the ATM
                 interface may currently allocate to switched virtual
                 path connections.  This value is the minimum of





          Expire Jan 98                                        [Page 78]




          draft        Supplemental ATM Management Objects February 1997


                 atmInterfaceConfMaxSvpcVpi, and the
                 atmInterfaceMaxSvpcVpi of the interface's UNI/NNI peer.

                 If the interface does not negotiate with its peer to
                 determine the maximum VPI that can be allocated to
                 SVPCs on the interface, then the value of this object
                 must equal atmInterfaceConfMaxSvpcVpi. "
               ::= { atmInterfaceExtEntry 11 }

          atmInterfaceConfMaxSvccVpi    OBJECT-TYPE
               SYNTAX             INTEGER  (0..4096)
               MAX-ACCESS         read-write
               STATUS             current
               DESCRIPTION
                 "The maximum VPI that the signalling stack on the ATM
                 interface is configured to support for allocation to
                 switched virtual channel connections."
               ::= { atmInterfaceExtEntry 12 }

          atmInterfaceCurrentMaxSvccVpi    OBJECT-TYPE
               SYNTAX             INTEGER  (0..4096)
               MAX-ACCESS         read-write
               STATUS             current
               DESCRIPTION
                 "The maximum VPI that the signalling stack on the ATM
                 interface may currently allocate to switched virtual
                 channel connections. This value is the minimum of
                 atmInterfaceConfMaxSvccVpi, and the
                 atmInterfaceConfMaxSvccVpi of the interface's UNI/NNI
                 peer.

                 If the interface does not negotiate with its peer to
                 determine the maximum VPI that can be allocated to
                 SVCCs on the interface, then the value of this object
                 must equal atmInterfaceConfMaxSvccVpi. "
               ::= { atmInterfaceExtEntry 13 }

          atmIntfPvcFailures    OBJECT-TYPE
              SYNTAX       Counter32
              MAX-ACCESS   read-only
              STATUS       current
              DESCRIPTION
                 "The number of times the operational status of a PVPL
                 or PVCL on this interface has gone down."





          Expire Jan 98                                        [Page 79]




          draft        Supplemental ATM Management Objects February 1997


              ::= { atmInterfaceExtEntry 14 }

          atmIntfCurrentlyFailingPVpls    OBJECT-TYPE
              SYNTAX       Gauge32
              MAX-ACCESS   read-only
              STATUS       current
              DESCRIPTION
                 "The current number of VPLs on this interface for which
                 there is an active row in the atmVplTable having an
                 atmVplConnKind value of `pvc' and an atmVplOperStatus
                 with a value other than `up'."
              ::= { atmInterfaceExtEntry 15 }

          atmIntfCurrentlyFailingPVcls    OBJECT-TYPE
              SYNTAX       Gauge32
              MAX-ACCESS   read-only
              STATUS       current
              DESCRIPTION
                 "The current number of VCLs on this interface for which
                 there is an active row in the atmVclTable having an
                 atmVclConnKind value of `pvc' and an atmVclOperStatus
                 with a value other than `up'."
              ::= { atmInterfaceExtEntry 16 }

          atmIntfPvcNotificationInterval    OBJECT-TYPE
              SYNTAX       INTEGER (1..3600)
              UNITS        "seconds"
              MAX-ACCESS   read-write
              STATUS       current
              DESCRIPTION
                 "The minimum interval between the sending of
                 atmIntfPvcFailuresTrap notifications for this
                 interface."
              DEFVAL { 30 }
              ::= { atmInterfaceExtEntry 17 }

          atmIntfPvcFailuresTrapEnable    OBJECT-TYPE
              SYNTAX       TruthValue
              MAX-ACCESS   read-write
              STATUS       current
              DESCRIPTION
                 "Allows the generation of traps in response to PVCL or
                 PVPL failures on this interface."
              DEFVAL { true }





          Expire Jan 98                                        [Page 80]




          draft        Supplemental ATM Management Objects February 1997


              ::= { atmInterfaceExtEntry 18 }

          atmIntfIlmiAdminStatus    OBJECT-TYPE
              SYNTAX       BITS { ilmi(0),
                                  ilmiAddressRegistration(1),
                                  ilmiConnectivity(2),
                                  ilmiSigVccParamNegotiation(3) }
              MAX-ACCESS   read-write
              STATUS       current
              DESCRIPTION
                 "Indicates which components of ILMI are
                 administratively enabled on this interface.  The
                 configuration takes effect only on the next interface
                 restart.  If the 'ilmi' bit is not set, then no ILMI
                 components are operational.  ILMI components other than
                 auto-configuration that are not represented in the
                 value have their administrative status determined
                 according to the 'ilmi' bit.  The ILMI auto-
                 configuration component is enabled/disabled by the
                 atmIntfConfigType object."
              DEFVAL { disabled }
              ::= { atmInterfaceExtEntry 19 }

          atmIntfIlmiOperStatus    OBJECT-TYPE
              SYNTAX       BITS { ilmi(0),
                                  ilmiAddressRegistration(1),
                                  ilmiConnectivity(2),
                                  ilmiSigVccParamNegotiation(3) }
              MAX-ACCESS   read-only
              STATUS       current
              DESCRIPTION
                 "Indicates which components of ILMI are operational on
                 this interface."
              ::= { atmInterfaceExtEntry 20 }

          atmIntfIlmiFsmState    OBJECT-TYPE
              SYNTAX       INTEGER { stopped(1),
                                     linkFailing(2),
                                     establishing(3),
                                     configuring(4),
                                     retrievingNetworkPrefixes(5),
                                     registeringNetworkPrefixes(6),
                                     retrievingAddresses(7),
                                     registeringAddresses(8),





          Expire Jan 98                                        [Page 81]




          draft        Supplemental ATM Management Objects February 1997


                                     verifying(9) }
              MAX-ACCESS   read-only
              STATUS       current
              DESCRIPTION
                 "Indicates the state of the ILMI Finite State Machine
                 associated with this interface."
                  REFERENCE
                      "ATM Forum ILMI 4.0 Specification, Appendix 1"
              ::= { atmInterfaceExtEntry 21 }

          atmIntfSigVccRcvTrafficDescrIndex    OBJECT-TYPE
              SYNTAX       AtmTrafficDescrParamIndex
              MAX-ACCESS   read-write
              STATUS       current
              DESCRIPTION
                  "This object identifies the row in the
                  atmTrafficDescrParamTable used during ILMI
                  auto-configuration to specify the advertised
                  signalling VCC transmission parameters for the
                  receive direction.

                  The traffic descriptor resulting from ILMI auto-
                  configuration of the signalling VCC is indicated
                  in the atmVclTable."
              ::= { atmInterfaceExtEntry 22 }


          atmIntfSigVccTrxTrafficDescrIndex    OBJECT-TYPE
              SYNTAX       AtmTrafficDescrParamIndex
              MAX-ACCESS   read-write
              STATUS       current
              DESCRIPTION
                  "This object identifies the row in the
                  atmTrafficDescrParamTable used during ILMI
                  auto-configuration to specify the advertised
                  signalling VCC transmission parameters for the
                  transmit direction.

                  The traffic descriptor resulting from ILMI auto-
                  configuration of the signalling VCC is indicated
                  in the atmVclTable."
              ::= { atmInterfaceExtEntry 23 }

          -- 15. ILMI Services Registration Table





          Expire Jan 98                                        [Page 82]




          draft        Supplemental ATM Management Objects February 1997


           atmIlmiSrvcRegTable OBJECT-TYPE
              SYNTAX SEQUENCE OF AtmIlmiSrvcRegEntry
              MAX-ACCESS not-accessible
              STATUS current
              DESCRIPTION
                 "This table contains a list of all the ATM network
                 services known by this device.

                 The characteristics of these services are made
                 available through the ILMI, using the ILMI general-
                 purpose service registry MIB.

                 These services may be made available to all ATM
                 interfaces (atmIlmiSrvcRegIndex = 0) or to some
                 specific ATM interfaces only (atmIlmiSrvcRegIndex = ATM
                 interface index)."
               ::= { atm2MIBObjects 15 }

           atmIlmiSrvcRegEntry OBJECT-TYPE
              SYNTAX AtmIlmiSrvcRegEntry
              MAX-ACCESS not-accessible
              STATUS current
              DESCRIPTION
                 "Information about a single service provider that is
                 available to the user-side of an adjacent device
                 through the ILMI."
              INDEX { atmIlmiSrvcRegIndex, atmIlmiSrvcRegServiceID, atmIlmiSrvcRegAddressIndex }
              ::= { atmIlmiSrvcRegTable 1 }

           AtmIlmiSrvcRegEntry ::= SEQUENCE {
                     atmIlmiSrvcRegIndex
                           InterfaceIndex,
                     atmIlmiSrvcRegServiceID
                           OBJECT IDENTIFIER,
                     atmIlmiSrvcRegAddressIndex
                           INTEGER,
                     atmIlmiSrvcRegATMAddress
                           AtmAddr,
                     atmIlmiSrvcRegParm1
                           OCTET STRING,
                     atmIlmiSrvcRegSource
                           INTEGER,
                     atmIlmiSrvcRegRowStatus
                           RowStatus





          Expire Jan 98                                        [Page 83]




          draft        Supplemental ATM Management Objects February 1997


                     }

           atmIlmiSrvcRegIndex OBJECT-TYPE
              SYNTAX InterfaceIndex
              MAX-ACCESS not-accessible
              STATUS current
              DESCRIPTION
                 "The ATM interface where the service defined in this
                 entry can be made available to an ATM device attached
                 to this interface.

                 The value of 0 has a special meaning: when an ATM
                 service is defined in an entry whose
                 atmIlmiSrvcRegIndex is zero, the ATM service is
                 available to ATM devices connected to any ATM
                 interface.  (default value(s)).

                 When the user-side of an adjacent device queries the
                 content of the ILMI service registry MIB (using the
                 ILMI protocol), the local network-side responds with
                 the ATM services defined in atmIlmiSrvcRegTable
                 entries, provided that these entries are indexed by:
                             - the corresponding interface number (atmIlmiSrvcRegIndex equal
                               to the number of the interface that the adjacent device is
                               connected to)
                             - zero (atmIlmiSrvcRegIndex=0)."
              ::= { atmIlmiSrvcRegEntry 1 }

           atmIlmiSrvcRegServiceID OBJECT-TYPE
              SYNTAX OBJECT IDENTIFIER
              MAX-ACCESS not-accessible
              STATUS current
              DESCRIPTION
                 "This is the service identifier which uniquely
                 identifies the type of service at the address provided
                 in the table."
              ::= { atmIlmiSrvcRegEntry 2 }

           atmIlmiSrvcRegAddressIndex OBJECT-TYPE
              SYNTAX  INTEGER (1..2147483647)
              MAX-ACCESS not-accessible
              STATUS current
              DESCRIPTION
                 "An arbitrary integer to differentiate multiple rows





          Expire Jan 98                                        [Page 84]




          draft        Supplemental ATM Management Objects February 1997


                 containing different ATM addresses for the same service
                 on the same interface.  This number needs NOT to be the
                 same as the corresponding ILMI atmfSrvcRegAddressIndex
                 MIB object."
              ::= { atmIlmiSrvcRegEntry 3 }

           atmIlmiSrvcRegATMAddress OBJECT-TYPE
              SYNTAX AtmAddr
              MAX-ACCESS read-create
              STATUS current
              DESCRIPTION
          "This is the full address of the service. The user-side of the
          adjacent device may use this address to establish a connection
          with the service."
              ::= { atmIlmiSrvcRegEntry 4 }

           atmIlmiSrvcRegParm1 OBJECT-TYPE
              SYNTAX OCTET STRING
              MAX-ACCESS read-create
              STATUS current
              DESCRIPTION
                 "An octet string used according to the value of
                 atmIlmiSrvcRegServiceID."
              ::= { atmIlmiSrvcRegEntry 5 }

           atmIlmiSrvcRegSource OBJECT-TYPE
              SYNTAX INTEGER {
                     other(1),     -- the source of this entry is unknown
                     viaNms(2),    -- this entry is created by a Network Manager
                     viaConfig(3)  -- this entry is created via other kind of
                                   -- configuration mechanism such as the console
                                   -- interface
                     }
              MAX-ACCESS read-create
              STATUS current
              DESCRIPTION
                 "This object is used to describe the source of the
                 entry.  The entry can be created by the NMS via SNMP or
                 other configuration mechanism such as the console
                 interface."
              ::= { atmIlmiSrvcRegEntry 6 }

           atmIlmiSrvcRegRowStatus OBJECT-TYPE
              SYNTAX RowStatus





          Expire Jan 98                                        [Page 85]




          draft        Supplemental ATM Management Objects February 1997


              MAX-ACCESS read-create
              STATUS current
              DESCRIPTION
                 "This object is used to create or destroy an entry from
                 this table."
              ::= { atmIlmiSrvcRegEntry 7 }

          -- 16. ILMI Network Prefix Table

          atmIlmiNetworkPrefixTable    OBJECT-TYPE
              SYNTAX       SEQUENCE OF AtmIlmiNetworkPrefixEntry
              MAX-ACCESS   not-accessible
              STATUS       current
              DESCRIPTION
                 "A table specifying per interface network prefix(es)
                 supplied by the network side of the UNI during ILMI
                 address registration.  When no network prefixes are
                 specified for a particular interface, one or more
                 network prefixes based on the switch address(es) may be
                 used for ILMI address registration."
              ::= { atm2MIBObjects 16 }

          atmIlmiNetworkPrefixEntry OBJECT-TYPE
              SYNTAX       AtmIlmiNetworkPrefixEntry
              MAX-ACCESS   not-accessible
              STATUS       current
              DESCRIPTION
                 "Information about a single network prefix supplied by
                 the network side of the UNI during ILMI address
                 registration.  Note that the index variable
                 atmIlmiNetPrefixPrefix is a variable-length string, and
                 as such the rule for variable-length strings in section
                 7.7 of RFC 1902 applies."
              INDEX   { ifIndex,
                        atmIlmiNetPrefixPrefix }
              ::= { atmIlmiNetworkPrefixTable 1 }

          AtmIlmiNetworkPrefixEntry ::=
              SEQUENCE {
                         atmIlmiNetPrefixPrefix        AtmIlmiNetworkPrefix,
                         atmIlmiNetPrefixRowStatus     RowStatus
                         }

          atmIlmiNetPrefixPrefix    OBJECT-TYPE





          Expire Jan 98                                        [Page 86]




          draft        Supplemental ATM Management Objects February 1997


              SYNTAX       AtmIlmiNetworkPrefix
              MAX-ACCESS   not-accessible
              STATUS       current
              DESCRIPTION
                 "The network prefix specified for use in ILMI address
                 registration."
              ::= { atmIlmiNetworkPrefixEntry 1 }

          atmIlmiNetPrefixRowStatus    OBJECT-TYPE
              SYNTAX       RowStatus
              MAX-ACCESS   read-create
              STATUS       current
              DESCRIPTION
                 "Used to create, delete, activate and de-activate
                 network prefixes used in ILMI address registration."
              ::= { atmIlmiNetworkPrefixEntry 2 }

          -- 17. ATM Switch Address Table

          atmSwitchAddressTable    OBJECT-TYPE
              SYNTAX       SEQUENCE OF AtmSwAddrEntry
              MAX-ACCESS   not-accessible
              STATUS       current
              DESCRIPTION
                 "This table contains one or more ATM endsystem
                 addresses on a per switch basis.  These addresses are
                 used to identify the switch.  When no ILMI network
                 prefixes are configured for certain interfaces, network
                 prefixes based on the switch address(es) may be used
                 for ILMI address registration."
              ::= { atm2MIBObjects 17 }

          atmSwitchAddressEntry    OBJECT-TYPE
              SYNTAX       AtmSwitchAddressEntry
              MAX-ACCESS   not-accessible
              STATUS       current
              DESCRIPTION
                 "An entry in the atmSwitchAddressTable."
              INDEX { atmSwitchAddressIndex }
              ::= { atmSwitchAddressTable 1 }

          AtmSwitchAddressEntry ::=
              SEQUENCE {
                         atmSwitchAddressIndex          Integer32,





          Expire Jan 98                                        [Page 87]




          draft        Supplemental ATM Management Objects February 1997


                         atmSwitchAddressAddress        AtmAddr,
                         atmSwitchAddressRowStatus      RowStatus
                         }

          atmSwitchAddressIndex   OBJECT-TYPE
              SYNTAX       Integer32 (1..65535)
              MAX-ACCESS   not-accessible
              STATUS       current
              DESCRIPTION
                 "An arbitrary index used to enumerate the ATM endsystem
                 addresses for this switch."
              ::= { atmSwitchAddressEntry 1 }

          atmSwitchAddressAddress   OBJECT-TYPE
              SYNTAX       OCTET STRING (SIZE(13|20))
              MAX-ACCESS   read-create
              STATUS       current
              DESCRIPTION
                 "An ATM endsystem address or address prefix used to
                 identify this switch.  When no ESI or SEL field is
                 specified, the switch may generate the ESI and SEL
                 fields automatically to obtain a complete 20-byte ATM
                 endsystem address."
              ::= { atmSwitchAddressEntry 2 }

          atmSwitchAddressRowStatus OBJECT-TYPE
              SYNTAX       RowStatus
              MAX-ACCESS   read-create
              STATUS       current
              DESCRIPTION
                         "Used to create, delete, activate, and de-
                 activate
                         addresses used to identify this switch."
              ::= { atmSwitchAddressEntry 3 }

          --  18. Permanent VPL failing table

          atmCurrentlyFailingPVplTable    OBJECT-TYPE
              SYNTAX       SEQUENCE OF AtmCurrentlyFailingPVplEntry
              MAX-ACCESS   not-accessible
              STATUS       current
              DESCRIPTION
                 "A table indicating all VPLs for which there is an
                 active row in the atmVplTable having an atmVplConnKind





          Expire Jan 98                                        [Page 88]




          draft        Supplemental ATM Management Objects February 1997


                 value of `pvc' and an atmVplOperStatus with a value
                 other than `up'."
              ::= { atm2MIBObjects 18 }

          atmCurrentlyFailingPVplEntry    OBJECT-TYPE
              SYNTAX       AtmCurrentlyFailingPVplEntry
              MAX-ACCESS   not-accessible
              STATUS       current
              DESCRIPTION
                 "Each entry in this table represents a VPL for which
                 the atmVplRowStatus is `active', the atmVplConnKind is
                 `pvc', and the atmVplOperStatus is other than `up'."
              INDEX        { ifIndex, atmVplVpi }
              ::= { atmCurrentlyFailingPVplTable 1 }

          AtmCurrentlyFailingPVplEntry ::=
              SEQUENCE {
                         atmCurrentlyFailingPVplTimeStamp      TimeStamp
                         }

          atmCurrentlyFailingPVplTimeStamp    OBJECT-TYPE
              SYNTAX       TimeStamp
              MAX-ACCESS   read-only
              STATUS       current
              DESCRIPTION
                 "The time at which this PVPL began to fail."
              ::= { atmCurrentlyFailingPVplEntry 1 }


          --  19. Currently Failing PVCL Table

          atmCurrentlyFailingPVclTable    OBJECT-TYPE
              SYNTAX       SEQUENCE OF AtmCurrentlyFailingPVclEntry
              MAX-ACCESS   not-accessible
              STATUS       current
              DESCRIPTION
                 "A table indicating all VCLs for which there is an
                 active row in the atmVclTable having an atmVclConnKind
                 value of `pvc' and an atmVclOperStatus with a value
                 other than `up'."
              ::= { atm2MIBObjects 19 }

          atmCurrentlyFailingPVclEntry    OBJECT-TYPE
              SYNTAX       AtmCurrentlyFailingPVclEntry





          Expire Jan 98                                        [Page 89]




          draft        Supplemental ATM Management Objects February 1997


              MAX-ACCESS   not-accessible
              STATUS       current
              DESCRIPTION
                 "Each entry in this table represents a VCL for which
                 the atmVclRowStatus is `active', the atmVclConnKind is
                 `pvc', and the atmVclOperStatus is other than `up'."
              INDEX        { ifIndex, atmVclVpi, atmVclVci }
              ::= { atmCurrentlyFailingPVclTable 1 }

          AtmCurrentlyFailingPVclEntry ::=
              SEQUENCE {
                         atmCurrentlyFailingPVclTimeStamp      TimeStamp
                         }

          atmCurrentlyFailingPVclTimeStamp    OBJECT-TYPE
              SYNTAX       TimeStamp
              MAX-ACCESS   read-only
              STATUS       current
              DESCRIPTION
                         "The time at which this PVCL began to fail."
              ::= { atmCurrentlyFailingPVclEntry 1 }


          -- ATM PVC Traps

          atmPvcTraps    OBJECT-IDENTIFIER ::= { atm2MIBTraps 1 }

          atmPvcTrapsPrefix    OBJECT-IDENTIFIER ::= { atmPvcTraps 0 }

          atmIntfPvcFailuresTrap    NOTIFICATION-TYPE
              OBJECTS      { ifIndex, atmIntfPvcFailures,
                             atmIntfCurrentlyFailingPVpls,
                             atmIntfCurrentlyFailingPVcls }
              STATUS       current
              DESCRIPTION
                 "A notification indicating that one or more PVPLs or
                 PVCLs on this interface has failed since the last
                 atmPvcFailuresTrap was sent.  If this trap has not been
                 sent for the last atmIntfPvcNotificationInterval, then
                 it will be sent on the next increment of
                 atmIntfPvcFailures."

             atmPvplChange NOTIFICATION-TYPE
                 OBJECTS { ifIndex, atmVplVpi, atmVplOperStatus }





          Expire Jan 98                                        [Page 90]




          draft        Supplemental ATM Management Objects February 1997


                 STATUS  current
                 DESCRIPTION
                 "This trap signifies that the agent has detected that
                 the atmVplOperStatus object for the permanent VPL has
                 entered or left the up state.  This trap shall not be
                 generated if the cause of the VPL status change is a
                 change in status of the underlying interface layer(s)."
                 ::= { atm2MIBTraps 4 }

             atmPvclChange NOTIFICATION-TYPE
                 OBJECTS { ifIndex, atmVclVpi, atmVclVci, atmVclOperStatus }
                 STATUS  current
                 DESCRIPTION
                 "This trap signifies that the agent has detected that
                 the atmVclOperStatus object for the permanent VCL has
                 entered or left the up state.  This trap shall not be
                 generated if the cause of the VPL status change is a
                 change in status of the underlying interface layer(s)."
                 ::= { atm2MIBTraps 5 }






























          Expire Jan 98                                        [Page 91]




          draft        Supplemental ATM Management Objects February 1997


          -- ************************************************

          -- Conformance Information

          atm2MIBConformance   OBJECT IDENTIFIER ::= {atm2MIB 2}

          atm2MIBGroups        OBJECT IDENTIFIER
                           ::= {atm2MIBConformance 1}

          atm2MIBCompliances   OBJECT IDENTIFIER
                           ::= {atm2MIBConformance 2}

          -- Compliance Statements

          atm2MIBCompliance   MODULE-COMPLIANCE
               STATUS         current
               DESCRIPTION
                 "The compliance statement for SNMP entities which
                 represent ATM interfaces.  The compliance statements
                 are used to determine if a particular group or object
                 applies to hosts, networks/switches, or both."

               MODULE  -- this module

                 MANDATORY-GROUPS  { atmSwitchServcHostGroup }

          -- Objects in the ATM Switch/Service/Host Group


          OBJECT      atmVclStatTotalCellIns
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VCC counters."

          OBJECT      atmVclStatClp0CellIns
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VCC counters."

          OBJECT      atmVclStatTotalDiscards
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VCC counters."






          Expire Jan 98                                        [Page 92]




          draft        Supplemental ATM Management Objects February 1997


          OBJECT      atmVclStatClp0Discards
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VCC counters."

          OBJECT      atmVclStatTotalCellOuts
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VCC counters."

          OBJECT      atmVclStatClp0CellOuts
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VCC counters."

          OBJECT      atmVclStatTaggedOuts
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VCC counters."


          OBJECT      atmVplStatTotalCellIns
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VPC counters."

          OBJECT      atmVplStatClp0CellIns
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VPC counters."

          OBJECT      atmVplStatTotalDiscards
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VPC counters."

          OBJECT      atmVplStatClp0Discards
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VPC counters."

          OBJECT      atmVplStatTotalCellOuts
          DESCRIPTION
                   "This object is mandatory for systems that are





          Expire Jan 98                                        [Page 93]




          draft        Supplemental ATM Management Objects February 1997


                 supporting per VPC counters."

          OBJECT      atmVplStatClp0CellOuts
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VPC counters."

          OBJECT      atmVplStatTaggedOuts
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VPC counters."

          OBJECT      atmVplLogicalPortDef
          MIN-ACCESS  read-only
          DESCRIPTION
                   "This object is mandatory for systems support ATM
                 Logical Port interfaces."

          GROUP      atmSwitchServcGroup
          DESCRIPTION
                   "This group is mandatory for a Switch/Service that
                 implements ATM interfaces."

          OBJECT      atmIfAdminAddrRowStatus
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required, and only one of the
                 six enumerated values for the RowStatus textual
                 convention need be supported, specifically: active(1)."

          OBJECT      atmSigSupportClgPtyNumDel
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required. This parameter is
                 required for ATM systems that support only a value of
                 'disabled(2)' (i.e., the ATM systems does not support
                 the feature associated with the parameter)."

          OBJECT      atmSigSupportClgPtySubAddr
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required. This parameter is
                 required for ATM systems that support only a value of
                 'disabled(2)' (i.e., the ATM systems does not support





          Expire Jan 98                                        [Page 94]




          draft        Supplemental ATM Management Objects February 1997


                 the feature associated with the parameter)."

          OBJECT      atmSigSupportCldPtySubAddr
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required. This parameter is
                 required for ATM systems that support only a value of
                 'disabled(2)' (i.e., the ATM systems does not support
                 the feature associated with the parameter)."

          OBJECT      atmSigSupportHiLyrInfo
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required. This parameter is
                 required for ATM systems that support only a value of
                 'disabled(2)' (i.e., the ATM systems does not support
                 the feature associated with the parameter)."

          OBJECT      atmSigSupportLoLyrInfo
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required. This parameter is
                 required for ATM systems that support only a value of
                 'disabled(2)' (i.e., the ATM systems does not support
                 the feature associated with the parameter)."

          OBJECT      atmSigSupportBlliRepeatInd
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required. This parameter is
                 required for ATM systems that support only a value of
                 'disabled(2)' (i.e., the ATM systems does not support
                 the feature associated with the parameter)."

          OBJECT      atmSigSupportAALInfo
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required. This parameter is
                 required for ATM systems that support only a value of
                 'disabled(2)' (i.e., the ATM systems does not support
                 the feature associated with the parameter)."

          OBJECT      atmSigSupportPrefCarrier
          MIN-ACCESS  read-only





          Expire Jan 98                                        [Page 95]




          draft        Supplemental ATM Management Objects February 1997


          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSvcVpCrossConnectRowStatus
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required, and only one of the
                 six enumerated values for the RowStatus textual
                 convention need be supported, specifically: active(1)"

          OBJECT      atmSvcVcCrossConnectRowStatus
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required, and only two of the
                 six enumerated values for the RowStatus textual
                 convention need be supported, specifically: active(1)."


          -- The ATM Host Group

          GROUP      atmHOSTGroup
          DESCRIPTION
                   "This group is mandatory for a Host that implements
                 ATM interfaces."

          OBJECT      atmVclAddrType
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmVclAddrRowStatus
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required, and only one of the
                 six enumerated values for the RowStatus textual
                 convention need be supported, specifically: active(1)."

          OBJECT      atmVclGenSigDescrIndex
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamAalType
          MIN-ACCESS  read-only





          Expire Jan 98                                        [Page 96]




          draft        Supplemental ATM Management Objects February 1997


          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamAalSscsType
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBhliType
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBhliInfo
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBbcConnConf
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBlliLayer2
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBlliLayer3
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBlliPktSize
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBlliSnapId
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBlliOuiPid





          Expire Jan 98                                        [Page 97]




          draft        Supplemental ATM Management Objects February 1997


          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamRowStatus
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required, and only one of the
                 six enumerated values for the RowStatus textual
                 convention need be supported, specifically: active(1)."


                      ::= { atm2MIBCompliances 1 }

          -- **********************************************

          -- Units of Conformance

          -- Mandatory for ATM hosts and switch/service providers

          atmSwitchServcHostGroup     OBJECT-GROUP

                 OBJECTS {
                     atmSigSSCOPConEvents,
                     atmSigSSCOPErrdPdus,
                     atmSigDetectSetupAttempts,
                     atmSigEmitSetupAttempts,
                     atmSigDetectUnavailRoutes,
                     atmSigEmitUnavailRoutes,
                     atmSigDetectUnavailResrcs,
                     atmSigEmitUnavailResrcs,
                     atmSigDetectCldPtyEvents,
                     atmSigEmitCldPtyEvents,
                     atmSigDetectMsgErrors,
                     atmSigEmitMsgErrors,
                     atmSigDetectClgPtyEvents,
                     atmSigEmitClgPtyEvents,
                     atmSigDetectTimerExpireds,
                     atmSigEmitTimerExpireds,
                     atmSigDetectRestarts,
                     atmSigEmitRestarts,
                     atmSigInEstabls,
                     atmSigOutEstabls,
                     atmVclStatTotalCellIns,





          Expire Jan 98                                        [Page 98]




          draft        Supplemental ATM Management Objects February 1997


                     atmVclStatClp0CellIns,
                     atmVclStatTotalDiscards,
                     atmVclStatClp0Discards,
                     atmVclStatTotalCellOuts,
                     atmVclStatClp0CellOuts,
                     atmVclStatTaggedOuts,
                     atmVplStatTotalCellIns,
                     atmVplStatClp0CellIns,
                     atmVplStatTotalDiscards,
                     atmVplStatClp0Discards,
                     atmVplStatTotalCellOuts,
                     atmVplStatClp0CellOuts,
                     atmVplStatTaggedOuts,
                     atmVplLogicalPortDef,
                     atmVplLogicalPortIndex,
                     atmInterfaceConfMaxSvpcVpi,
                     atmInterfaceCurrentMaxSvpcVpi,
                     atmInterfaceConfMaxSvccVpi,
                     atmInterfaceCurrentMaxSvccVpi,
                     atmIntfPvcFailures,
                     atmIntfCurrentlyFailingPVpls,
                     atmIntfCurrentlyFailingPVcls,
                     atmIntfPvcNotificationInterval,
                     atmIntfPvcFailuresTrapEnable,
                     atmInterfaceConfigSigType,
                     atmInterfaceActualSigType,
                     atmInterfaceConfigSigSide,
                     atmInterfaceActualSigSide,
                     atmIntfIlmiAdminStatus,
                     atmIntfIlmiOperStatus,
                     atmIntfIlmiFsmState,
                     atmIntfIlmiEstablishConnPollInterval,
                     atmIntfIlmiCheckConnPollInterval,
                     atmIntfIlmiConnPollInactivityFactor,
                     atmIntfIlmiPublicPrivateIndicator,
                     atmPvplTrapControl,
                     atmPvclTrapControl,
                     atmTrapThreshold
                 }
                 STATUS    current
                 DESCRIPTION
                   "A collection of objects providing information
                    for a Switch/Service/Host that implements
                    ATM interfaces."





          Expire Jan 98                                        [Page 99]




          draft        Supplemental ATM Management Objects February 1997


                 ::= { atm2MIBGroups 1 }


          atmSwitchServcGroup     OBJECT-GROUP

                 OBJECTS {
                     atmIlmiSrvcRegATMAddress,
                     atmIlmiSrvcRegParm1,
                     atmIlmiSrvcRegSource,
                     atmIlmiSrvcRegRowStatus,
                     atmIlmiNetPrefixRowStatus,
                      atmSigSupportClgPtyNumDel,
                      atmSigSupportClgPtySubAddr,
                      atmSigSupportCldPtySubAddr,
                      atmSigSupportHiLyrInfo,
                      atmSigSupportLoLyrInfo,
                      atmSigSupportBlliRepeatInd,
                      atmSigSupportAALInfo,
                      atmSigSupportPrefCarrier,
                      atmSvcVpCrossConnectCreationTime,
                      atmSvcVpCrossConnectRowStatus,
                      atmSvcVcCrossConnectCreationTime,
                      atmSvcVcCrossConnectRowStatus,
                      atmIfAdminAddrAddressSource,
                      atmIfAdminAddrOrgScope,
                      atmIfAdminAddrRowStatus}
                 STATUS    current
                 DESCRIPTION
                   "A collection of objects providing information
                    for a Switch/Service that implements ATM interfaces."
                 ::= { atm2MIBGroups 3 }


          atmHOSTGroup     OBJECT-GROUP

                 OBJECTS {
                      atmAal5VclInPkts,
                      atmAal5VclOutPkts,
                      atmAal5VclInOctets,
                      atmAal5VclOutOctets,
                      atmVclAddrType,
                      atmVclAddrRowStatus,
                      atmAddrVclAddrType,
                      atmVclGenSigDescrIndex,





          Expire Jan 98                                       [Page 100]




          draft        Supplemental ATM Management Objects February 1997


                      atmSigDescrParamAalType,
                      atmSigDescrParamAalSscsType,
                      atmSigDescrParamBhliType,
                      atmSigDescrParamBhliInfo,
                      atmSigDescrParamBbcConnConf,
                      atmSigDescrParamBlliLayer2,
                      atmSigDescrParamBlliLayer3,
                      atmSigDescrParamBlliPktSize,
                      atmSigDescrParamBlliSnapId,
                      atmSigDescrParamBlliOuiPid,
                      atmSigDescrParamRowStatus}
                 STATUS    current
                 DESCRIPTION
                   "A collection of objects providing information
                    for a Host that implements ATM interfaces."
                 ::= { atm2MIBGroups 5 }


                END






























          Expire Jan 98                                       [Page 101]




          draft        Supplemental ATM Management Objects February 1997


          11.  Acknowledgments

          This document is a product of the AToMMIB Working Group.














































          Expire Jan 98                                       [Page 102]




          draft        Supplemental ATM Management Objects February 1997


          12.  References

          [1]  Ahmed, M., Tesink, K., "Definitions of Managed Objects
               for ATM Management Version February, 1997", draft-ietf-
               atommib-atm1ng-03.txt Bell Communications Research,
               August 1994.

          [2]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
               "Structure of Management Information for version 2 of the
               Simple Network Management Protocol (SNMPv2)", RFC 1442,
               SNMP Research,Inc., Hughes LAN Systems, Dover Beach
               Consulting, Inc., Carnegie Mellon University, April 1993.

          [3]  McCloghrie, K., and M. Rose, Editors, "Management
               Information Base for Network Management of TCP/IP-based
               internets: MIB-II", STD 17, RFC 1213, Hughes LAN Systems,
               Performance Systems International, March 1991.

          [4]  Galvin, J., and K. McCloghrie, "Administrative Model for
               version 2 of the Simple Network Management Protocol
               (SNMPv2)", RFC 1445, Trusted Information Systems, Hughes
               LAN Systems, April 1993.

          [5]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
               "Protocol Operations for version 2 of the Simple Network
               Management Protocol (SNMPv2)", RFC 1448, SNMP
               Research,Inc., Hughes LAN Systems, Dover Beach
               Consulting, Inc., Carnegie Mellon University, April 1993.

          [6]  McCloghrie, K. and F. Kastenholz, "Evolution of the
               Interfaces Group of MIB-II", RFC 1573, Hughes LAN
               Systems, FTP Software, January 1994.

          [7]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
               "Textual Conventions for SNMPv2", RFC1443, SNMP
               Research,Inc., Hughes LAN Systems, Dover Beach
               Consulting, Inc., Carnegie Mellon University, April 1993.

          [8]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
               "Conformance Statements for SNMPv2", RFC1444, SNMP
               Research,Inc., Hughes LAN Systems, Dover Beach
               Consulting, Inc., Carnegie Mellon University, April 1993.







          Expire Jan 98                                       [Page 103]




          draft        Supplemental ATM Management Objects February 1997


          [9]  ATM Forum, "ATM User-Network Interface, Version 3.0 (UNI
               3.0) Specification, Part I", 1994.

          [10] ATM Forum, "ATM User-Network Interface, Version 3.1 (UNI
               3.1) Specification, Part I", November 1994.

          [11] ITU-T Recommendation Q.2931, "Broadband Integrated
               Service Digital Network (B-ISDN) Digital Service
               Signalling System No.2 (DSS2) User-Network Interface
               (UNI) Layer 3 Specification for Basic Call/Connection
               Control", September 1994.

          [12] ATM Forum 94-0471R4, "P-NNI Draft Specification, P-NNI
               SWG", November 1994.

          [13] ITU-T Draft Recommendation Q.2110, "Broadband Integrated
               Service Digital Network (B-ISDN) - ATM Adaptation Layer -
               Service Specific Connection Oriented Protocol (SSCOP)
               Specification", 1994.

          [14] Newton, T., "Baseline Text For LAN Emulation Client
               Management", ATM Forum Contribution 94-0737R1, Digital
               Equipment Corporation, January 1995.

          [15] Brown, T., Tesink, K., "Definitions of Managed Objects
               for SMDS Interfaces using SMIv2", RFC 1694, Bell
               Communications Research, August 1994.

          [16] ITU-T Draft Recommendation Q.2961, "Broadband Integrated
               Service Digital Network (B-ISDN) Digital Service
               Signalling System No.2 (DSS2) Support of Additional
               Traffic Parameters", May 1995.

          [17] ITU-T Draft Recommendation Q.2971, "Broadband Integrated
               Service Digital Network (B-ISDN) Digital Service
               Signalling System No.2 (DSS2) User Network Interface
               Layer 3 Specification for Point-to-multipoint
               Call/connection Control", May 1995.

          [18] ATM Forum, "Interim Inter-switch Signaling Protocol
               (IISP)Specification, Version 1.0", af-pnni-0026.000,
               December 1994.







          Expire Jan 98                                       [Page 104]




          draft        Supplemental ATM Management Objects February 1997


          [19] ATM Forum B-ICI Recommendation, - Text to be provided

          [20] ITU-T Recommendation I.610, "Broadband Integrated Service
               Digital Network (B-ISDN) Operation and Maintenance
               Principles and Functions", July 1995.

          [21] "ATM Forum, af-ilmi-0065.000 "Integrated Local Management
               Interface (ILMI) Specification Version 4.0" September,
               1996.








































          Expire Jan 98                                       [Page 105]




          draft        Supplemental ATM Management Objects February 1997


          13.  Security Considerations

          Security issues are not discussed in this memo.


          14.  Authors' Addresses

                            Faye Ly
                            3Com Networks Inc.
                            Santa Clara, CA 95052
                            Phone: (408) 764-6576
                            EMail: fayely@3com.com

                            Michael Noto
                            Network Equipment Technologies
                            800 Saginaw Drive RM 21.1.111
                            Redwood City, CA 94063
                            Phone: (415)569-7134
                            Email: mike_noto@net.com

                            Andrew Smith
                            Extreme Networks
                            1601 S. De Anza Blvd, #220
                            Cupertino, CA 95014
                            Phone: (408) 342 0985
                            EMail:  ansmith@extremenetworks.com

                            Ethan Mickey Spiegel
                            Cisco Systems
                            170 W. Tasman Drive
                            San Jose, CA 95134-1706
                            Phone: (408)526-6408
                            EMail: mspiegel@cisco.com

                            Kaj Tesink
                            Bell Communications Research
                            Room 1A-427
                            331 Newman Springs Road
                            P.O. Box 7020
                            Red Bank, NJ  07701-7020
                            Phone: (908) 758-5254
                            EMail: kaj@cc.bellcore.com







          Expire Jan 98                                       [Page 106]




          draft        Supplemental ATM Management Objects February 1997


          Table of Contents


          1 Status of this Memo ...................................    1
          2 Introduction ..........................................    3
          3 Change Log ............................................    3
          4 The SNMPv2 Network Management Framework ...............    3
          5 Object Definitions ....................................    4
          6 Overview ..............................................    4
          6.1 Background ..........................................    4
          6.2 Important Definitions ...............................    5
          6.3 Supported Functions .................................    7
          6.3.1 ATM SVC VC Cross Connect Table ....................    8
          6.3.2 ATM SVC VP Cross Connect Table ....................    9
          6.3.3 ATM Interface Signalling Statistics Table .........   10
          6.3.4 ATM Signalling Capability Support .................   11
          6.3.5 Signalling Descriptor Parameter Table .............   11
          6.3.6 ATM Interface Administrative Address Table ........   12
          6.3.7 ATM VPI/VCI to Address Mapping Table ..............   12
          6.3.8 ATM Address to VPI/VCI Mapping Table ..............   13
          6.3.9 ATM VPL Statistics Table ..........................   13
          6.3.10 ATM VPL Logical Port Table .......................   15
          6.3.10.1 ATM Logical Port Interface .....................   15
          6.3.10.2 How to create an ATM logical interface .........   17
          6.3.11 ATM VCL Statistics Table .........................   18
          6.3.12 ATM VC General Information Table .................   19
          6.3.13 ATM Interface Configuration Extention Table ......   19
          6.3.14 ATM Services Registration Table ..................   21
          6.3.15 ILMI Network Prefix Table ........................   22
          6.3.16 ATM Switch Address Table .........................   23
          7 Valid Address Sets / Default Address ..................   23
          8 Configuration of VPLs, VCLs, and Cross-Connects .......   23
          9 ATM Related Trap Support ..............................   23
          10 Definitions ..........................................   24
          11 Acknowledgments ......................................  102
          12 References ...........................................  103
          13 Security Considerations ..............................  106
          14 Authors' Addresses ...................................  106



          :r svcFeb96







          Expire Jan 98                                       [Page 107]




          draft        Supplemental ATM Management Objects February 1997



















































          Expire Jan 98                                       [Page 108]
