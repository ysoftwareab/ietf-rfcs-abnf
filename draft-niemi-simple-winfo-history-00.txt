

Network Working Group                                           A. Niemi
Internet-Draft                                               E. Leppanen
Expires: April 19, 2004                                            Nokia
                                                        October 20, 2003


              An Extension for Watcher Information History
                  draft-niemi-simple-winfo-history-00

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups. Note that other
   groups may also distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on April 19, 2004.

Copyright Notice

   Copyright (C) The Internet Society (2003). All Rights Reserved.

Abstract

   This document defines an extension to the Session Initiation Protocol
   (SIP) watcher information template-package. This extension enables a
   subscriber to request for a list of past watcher information events
   over some time period. This document defines a mechanism for
   requesting watcher information history in subscriptions to the
   watcherinfo template-package. It also defines an extension to the
   watcher information data format for representing this history
   information.







Niemi & Leppanen         Expires April 19, 2004                 [Page 1]

Internet-Draft            Watcherinfo History               October 2003


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Requirements . . . . . . . . . . . . . . . . . . . . . . . . .  3
   3.  Document Conventions . . . . . . . . . . . . . . . . . . . . .  4
   4.  Overview of Operation  . . . . . . . . . . . . . . . . . . . .  4
   5.  Using and Collecting Watcher Information History . . . . . . .  4
   6.  Subscriber Behavior  . . . . . . . . . . . . . . . . . . . . .  5
   7.  Notifier Behavior  . . . . . . . . . . . . . . . . . . . . . .  5
   8.  Example Watcher Information with History . . . . . . . . . . .  6
   9.  Syntax . . . . . . . . . . . . . . . . . . . . . . . . . . . .  7
   9.1 "winfo-history" Header Parameter . . . . . . . . . . . . . . .  7
   9.2 Augmented BNF Definitions  . . . . . . . . . . . . . . . . . .  7
   9.3 XML Schema Definitions . . . . . . . . . . . . . . . . . . . .  7
   10. IANA Considerations  . . . . . . . . . . . . . . . . . . . . .  9
   11. Security Considerations  . . . . . . . . . . . . . . . . . . .  9
   12. Acknowledgements . . . . . . . . . . . . . . . . . . . . . . .  9
   13. Open Issues  . . . . . . . . . . . . . . . . . . . . . . . . .  9
       Normative References . . . . . . . . . . . . . . . . . . . . . 10
       Informative References . . . . . . . . . . . . . . . . . . . . 10
       Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . 10
       Intellectual Property and Copyright Statements . . . . . . . . 12





























Niemi & Leppanen         Expires April 19, 2004                 [Page 2]

Internet-Draft            Watcherinfo History               October 2003


1. Introduction

   The SIP events framework [1] defines a generic framework for
   subscriptions to and notifications of events related to SIP systems.
   This framework defines the methods SUBSCRIBE and NOTIFY, and
   introduces the concepts of an event package and a template-package. A
   package is a concrete application of the SIP events framework to a
   particular class of events. A template-package is a special event
   package in that it is always associated with some other event
   package. It can be applied to any event package, including itself.

   The watcher information [3] event template-package defines a facility
   for tracking the state of subscriptions to a resource in another
   event package. For instance, when applied to the presence event
   package [6], it would generate notifications of the state of presence
   subscriptions for that presentity.

   The main motivating application for watcher information has been
   presence authorization. By being subscribed to its own presence
   watcher information, a UA can be made aware of watchers who have
   requested subscription but are in "pending" state, i.e., they have
   not yet received authorization for presence. The user can then take
   action to reactively authorize such watchers.

   However, the client may not be able to subscribe to watcher
   information all the time, e.g., when being outside of network
   coverage. Any watcher information events that occur during that time
   would therefore not be seen by the user.

   For such cases, a watcher information history feature is utilized,
   similar to a "Missed Calls" log in a telephony application. This
   provides the user information about watcher information events in the
   past, allowing the user to take action to retroactively authorize
   watchers, or simply see the status of subscriptions while being
   un-subscribed.

   This document defines an Event header parameter and an extension to
   the watcherinfo data format [4] for requesting and representing
   watcherinfo history.

2. Requirements

   The 3GPP presence requirements [7] contain a requirement for
   watcherinfo history:

   "WATCHINF-REQ3: Watcher history
      It must be possible for the presentity to fetch the list of the
      watchers who have accessed (by subscription or fetch) his presence



Niemi & Leppanen         Expires April 19, 2004                 [Page 3]

Internet-Draft            Watcherinfo History               October 2003


      information during a well-defined time- period (e.g. last 7 days).
      Additionally to the list of watchers, the details of the presence
      information provided to different watchers should be available for
      the presentity when fetching the watcher history."


3. Document Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [5] and
   indicate requirement levels for compliant implementations.

4. Overview of Operation

   The subscriber's desire to receive a past history of watcher
   information events is indicated as part of the SUBSCRIBE message in
   the subscription to the watcherinfo event package. Namely, the
   subscriber indicates the preferred watcherinfo history period as an
   Event header parameter of the SUBSCRIBE request.

   The notifier is not required to abide by or even understand this
   indication for watcherinfo history. Instead, the notifier can safely
   accept the subscription and ignore any Event header parameters it
   does not understand, or is unwilling to comply with.

   If the notifier understands and supports watcherinfo history, it can
   accept the subscriber's preferred history period, or choose a shorter
   period based on any local policy. The notifier then adds a
   <watcher-history> element into the <watcherinfo> of the first NOTIFY
   request. This list includes <watcher> elements pertaining to
   watcherinfo events in the past, over a certain history period.

5. Using and Collecting Watcher Information History

   By definition, watcherinfo deals with the set of current
   subscriptions to a resource - it delivers the set of active
   subscriptions, and notifies of state changes therein. Consequently,
   watcherinfo history deals with the past subscriptions to a resource -
   it delivers the set of past subscriptions that are no longer in
   active state. In other words, it delivers the set of those
   subscriptions that entered the terminated state within the given
   history period.

   By default, all watchers in <watcher-history> will have "terminated"
   state. Each will also list the event that caused the watcher to
   transition to the terminated state, along with a timestamp indicating
   the time of this transition.



Niemi & Leppanen         Expires April 19, 2004                 [Page 4]

Internet-Draft            Watcherinfo History               October 2003


6. Subscriber Behavior

   In general, the way in which a subscriber generates SUBSCRIBE
   requests and receives NOTIFY requests is according to RFC 3265 [1].
   Subscriptions specifically to watcherinfo events are created
   according to the watcherinfo package [3].

   A UA that wants to receive watcherinfo history MAY include a
   "winfo-history" Event header parameter in the SUBSCRIBE request,
   indicating in seconds the preferred period over which the history
   information is to be included. The value of this parameter is an
   integral number of seconds (in decimal) between 0 and (2**32)-1.

   Typically, the resulting watcherinfo history is contained in the
   first NOTIFY request received in the subscription. However, a
   subscriber MUST always accept notifications without watcher
   information history. If no watcher information history is present in
   the NOTIFY, this means that the notifier is either unwilling, or
   unable to provide such information.

   The <watcher-history> is completely independent of any <watcher-list>
   element(s) present in the NOTIFY. Therefore, implementations MUST
   treat the data in a watcher-list and watcher-history separate. For
   example, the "id" attributes of watchers can not be assumed to be
   unique across watcher-list and watcher-history.

7. Notifier Behavior

   In general, the way in which a notifier processes SUBSCRIBE requests
   and generates NOTIFY requests is according to RFC 3265 [1].
   Subscriptions specifically to watcherinfo events are handled
   according to the watcherinfo package [3].

   A notifier that supports watcherinfo history SHOULD have tools
   available for maintaining a list of past watcher information events
   of a particular resource. The time period over which this event log
   extends is solely an implementation issue.

   A notifier that is able to support watcher information history
   extracts the value of the "winfo-history" Event header parameter (if
   present), and uses it as the proposed time period for watcherinfo
   history. Implementations MAY treat values larger than (2**32)-1 as
   equivalent to (2**32)-1. The notifier MAY choose any value lower than
   the proposed history period, based on its local policy. The notifier
   MUST NOT choose a time period greater than the proposed history
   period.

   The chosen history period is then used as a search key to retrieve



Niemi & Leppanen         Expires April 19, 2004                 [Page 5]

Internet-Draft            Watcherinfo History               October 2003


   events related to past subscriptions to the resource. These events
   are then inserted into the watcher information [4] in the form of a
   <watcher-history> element. Watcher-history includes a collection of
   <watcher> elements

   The notifier SHOULD only send watcherinfo history in the first NOFIFY
   request of a subscription, or in a NOTIFY resulting from a fetch
   (i.e., a SUBSCRIBE with Expires: 0) of watcherinfo. Watcherinfo
   history SHOULD be sent only as part of <watcherinfo> that contains
   full watcherinfo state, i.e., has the "state" attribute set to
   "full".

   A notifier SHOULD NOT send history information unless the subscriber
   indicated a desire to receiving it in the SUBSCRibe. A NOTIFY MUST
   NOT contain a "history-period" Event header parameter. If the NOTIFY
   contains watcherinfo history, its history period is indicated in the
   "period" attribute of the <watcher-history> element.

8. Example Watcher Information with History

   The following represents an example watcher information, including
   history.


   <?xml version="1.0"?>
   <watcherinfo xmlns="urn:ietf:params:xml:ns:watcherinfo"
                xmlns:hist="urn:ietf:params:xml:ns:watcherinfo-history"
                version="0" state="full">
     <watcher-list resource="sip:administrator@example.com"
                   package="presence">
       <watcher status="active"
                id="4kjh4k45"
                display-name="Mr. Blue"
                duration-subscribed="122"
                event="approved">sip:userA@example.com
       </watcher>
       <watcher status="pending"
                id="gg3hggg4g-23hh"
                display-name="Mr. Orange"
                event="subscribe">sip:userB@example.com
       </watcher>
     </watcher-list>
     <hist:watcher-history hist:resource="sip:administrator@example.com"
                      hist:package="presence" hist:period="7200">
       <hist:watcher hist:status="terminated"
                hist:id="xyz1234"
                hist:display-name="Mr. White"
                hist:event="rejected"



Niemi & Leppanen         Expires April 19, 2004                 [Page 6]

Internet-Draft            Watcherinfo History               October 2003


                hist:timestamp="2003-10-10T12:21:29Z">sip:userC@example.com
       </hist:watcher>
       <hist:watcher hist:status="terminated"
                hist:id="qwerty2345"
                hist:display-name="Mr. Blue"
                hist:event="deactivated"
                hist:timestamp="2003-10-10T12:21:29Z">sip:userA@example.org
       </hist:watcher>
       <hist:watcher hist:status="terminated"
                hist:id="xyz4567"
                hist:event="rejected"
                hist:timestamp="2003-10-10T12:21:29Z">sip:userX@example.net
       </hist:watcher>
     </hist:watcher-history>
   </watcherinfo>



9. Syntax

   This section describes the syntax extensions required for watcherinfo
   history. Note that the formal syntax definitions described in this
   section are expressed in the Augmented BNF format used in SIP [2],
   and contain references to elements defined therein.

9.1 "winfo-history" Header Parameter

   TBD: May potentially need to add this parameter to the SIP header
   parameter registry, if available.

   The maximum value of this parameter is (2**32) - 1.

9.2 Augmented BNF Definitions

   This section describes the Augmented BNF definitions for the new
   syntax element. The notation is as used in SIP [2] and the documents
   to which is refers.

      generic-param  =  history-param / token [ EQUAL gen-value ]
      history-param  =  "winfo-history" EQUAL delta-seconds


9.3 XML Schema Definitions

   This section describes the XL Schema definitions for watcherinfpo
   history.





Niemi & Leppanen         Expires April 19, 2004                 [Page 7]

Internet-Draft            Watcherinfo History               October 2003


   <?xml version="1.0" encoding="UTF-8"?>
   <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
             targetNamespace="urn:ietf:params:xml:ns:watcherinfo-history"
             xmlns:tns="urn:ietf:params:xml:ns:watcherinfo-history" >

      <!-- This import brings in the XML language attribute xml:lang-->
        <xs:import namespace="http://www.w3.org/XML/1998/namespace"
                   schemaLocation="http://www.w3.org/2001/03/xml.xsd" />

   <xs:element ref="tns:watcher-history" minOccurs="0" />
        <xs:element name="watcher-history">
          <xs:complexType>
            <xs:sequence>
   	     <xs:element ref="tns:watcher" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="resource" type="xs:anyURI" use="required"/>
            <xs:attribute name="package" type="xs:string" use="required"/>
            <xs:attribute name="period" type="xs:unsignedLong"/>
          </xs:complexType>
        </xs:element>

        <xs:element name="watcher">
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base="xs:anyURI">
                <xs:attribute name="display-name" type="xs:string"/>
                <xs:attribute name="status" use="required">
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:enumeration value="pending"/>
                      <xs:enumeration value="active"/>
                      <xs:enumeration value="waiting"/>
                      <xs:enumeration value="terminated"/>
                    </xs:restriction>
                  </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="event" use="required">
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:enumeration value="subscribe"/>
                      <xs:enumeration value="approved"/>
                      <xs:enumeration value="deactivated"/>
                      <xs:enumeration value="probation"/>
                      <xs:enumeration value="rejected"/>
                      <xs:enumeration value="timeout"/>
                      <xs:enumeration value="giveup"/>
                      <xs:enumeration value="noresource"/>
                    </xs:restriction>



Niemi & Leppanen         Expires April 19, 2004                 [Page 8]

Internet-Draft            Watcherinfo History               October 2003


                  </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="expiration" type="xs:unsignedLong"/>
                <xs:attribute name="id" type="xs:string" use="required"/>
                <xs:attribute name="duration-subscribed" type="xs:unsignedLong"/>
                <xs:attribute name="timestamp" type="xs:dateTime"/>
   		<xs:attribute ref="xml:lang"/>
              </xs:extension>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
      </xs:schema>



10. IANA Considerations

   TBD: Register the XML namespace(s) and possibly the event header
   parameter.

11. Security Considerations

   Overall, the security considerations of [3], [4], and [1] apply to
   watcher information history.

   In addition, since watcher information history may be sensitive
   information, care should be taken to authenticate and authorize the
   subscriptions. The notifier MUST use additional care in authorizing
   watcherinfo history subscriptions, so that information that normally
   would not be delivered as part of watcherinfo do not become visible
   in the watcherinfo history.

12. Acknowledgements

   Thanks to Jose Costa-Requena for providing the XML schema and for
   comments, and for Mikko Lonnfors, Pekka Pessi for comments and
   suggestions on the draft.

13. Open Issues

   This chapter discusses some open items and issues.

   o  The mechanism described in this document can be easily applied to
      other events as well. For example, the reg-event could make use of
      similar features very easily. Should we try to generalize the
      history mechanism to be applicable to other event packages as
      well?




Niemi & Leppanen         Expires April 19, 2004                 [Page 9]

Internet-Draft            Watcherinfo History               October 2003


Normative References

   [1]  Roach, A., "Session Initiation Protocol (SIP)-Specific Event
        Notification", RFC 3265, June 2002.

   [2]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A.,
        Peterson, J., Sparks, R., Handley, M. and E. Schooler, "SIP:
        Session Initiation Protocol", RFC 3261, June 2002.

   [3]  Rosenberg, J., "A Watcher Information Event Template-Package for
        the Session Initiation  Protocol (SIP)",
        draft-ietf-simple-winfo-package-05 (work in progress), January
        2003.

   [4]  Rosenberg, J., "An Extensible Markup Language (XML) Based Format
        for Watcher  Information", draft-ietf-simple-winfo-format-04
        (work in progress), January 2003.

   [5]  Bradner, S., "Key words for use in RFCs to Indicate Requirement
        Levels", BCP 14, RFC 2119, March 1997.

Informative References

   [6]  Rosenberg, J., "A Presence Event Package for the Session
        Initiation Protocol (SIP)", draft-ietf-simple-presence-10 (work
        in progress), January 2003.

   [7]  Kiss, K., "Requirements for Presence Service in 3GPP Wireless
        Systems", draft-kiss-simple-presence-wireless-reqs-02 (work in
        progress), March 2003.


Authors' Addresses

   Aki Niemi
   Nokia
   P.O. Box 321
   NOKIA GROUP, FIN  00045
   Finland

   Phone: +358 50 389 1644
   EMail: aki.niemi@nokia.com









Niemi & Leppanen         Expires April 19, 2004                [Page 10]

Internet-Draft            Watcherinfo History               October 2003


   Eva Leppanen
   Nokia
   P.O. Box 785
   NOKIA GROUP, FIN  00045
   Finland

   Phone: +358
   EMail: eva-maria.leppanen@nokia.com











































Niemi & Leppanen         Expires April 19, 2004                [Page 11]

Internet-Draft            Watcherinfo History               October 2003


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights. Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11. Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard. Please address the information to the IETF Executive
   Director.


Full Copyright Statement

   Copyright (C) The Internet Society (2003). All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works. However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assignees.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION



Niemi & Leppanen         Expires April 19, 2004                [Page 12]

Internet-Draft            Watcherinfo History               October 2003


   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.











































Niemi & Leppanen         Expires April 19, 2004                [Page 13]

