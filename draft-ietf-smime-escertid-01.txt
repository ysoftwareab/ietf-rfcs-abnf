



Network Working Group                                          J. Schaad
Internet-Draft                                   Soaring Hawk Consulting
Expires: October 19, 2006                                 April 17, 2006


              ESS Update: Adding CertID Algorithm Agility
                    draft-ietf-smime-escertid-01.txt

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on October 19, 2006.

Copyright Notice

   Copyright (C) The Internet Society (2006).

Abstract

   In the original Enhanced Security Services for S/MIME draft, a
   structure for cryptographically linking the certificate to be used in
   validation with the signature was introduced, this structure was
   hardwired to use SHA-1.  This document allows for the structure to
   have algorithm agility and defines new attributes to deal with the
   updating.






Schaad                  Expires October 19, 2006                [Page 1]

Internet-Draft              ESSCertID Update                  April 2006


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1.  Notation . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Replace Section 5.4 Signing Certificate Attribute
       Definitions  . . . . . . . . . . . . . . . . . . . . . . . . .  4
   3.  Insert new section 5.4.1 . . . . . . . . . . . . . . . . . . .  5
   4.  Insert new section 5.4.1.1 . . . . . . . . . . . . . . . . . .  7
   5.  Insert new section 5.4.2 . . . . . . . . . . . . . . . . . . .  9
   6.  Renumber Section 5.4.1 Certificate Identification  . . . . . . 11
   7.  Normative References . . . . . . . . . . . . . . . . . . . . . 11
   Appendix A.  ASN.1 Module  . . . . . . . . . . . . . . . . . . . . 12
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 17
   Intellectual Property and Copyright Statements . . . . . . . . . . 18





































Schaad                  Expires October 19, 2006                [Page 2]

Internet-Draft              ESSCertID Update                  April 2006


1.  Introduction

   In the original Enhanced Security Services (ESS) for S/MIME draft
   [ESS], a structure for cryptographically linking the certificate to
   be used in validation with the signature was defined.  This
   structure, called ESSCertID was hardwired to use a SHA-1 hash value.
   The recent attacks on SHA-1 require that we change define a new
   attribute which allows for the use of a different algorithm.  This
   document performs that task.

   This document defines the structure ESSCertIDv2 along with a new
   attribute SigningCertificateV2 which uses the updated structure.
   This document allows for the structure to have algorithm agility and
   defines new attributes to deal with the updating.

1.1.  Notation

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].































Schaad                  Expires October 19, 2006                [Page 3]

Internet-Draft              ESSCertID Update                  April 2006


2.  Replace Section 5.4 Signing Certificate Attribute Definitions

   The signing certificate attribute is designed to prevent simple
   substitution and re-issue attacks, and to allow for a restricted set
   of authorization certificates to be used in verifying a signature.

   Two different attributes exist for this due to a flaw in the original
   design.  The only substantial difference between the two attributes
   is that SigningCertificateV2 allows for hash algorithm agility, while
   SigningCertificate forces the use of the SHA-1 hash algorithm.  With
   the recent advances in the ability to create hash collisions for
   SHA-1 it is deemed wise to move forward sooner rather than later.

   When the SHA-1 hash function is used, the SigningCertificate
   attribute MUST be used.  The SigningCertificateV2 attribute MUST be
   used if any algorithm other than SHA-1 is used and SHOULD NOT be used
   for SHA-1.  Applications SHOULD recognize both attributes as long as
   they consider SHA-1 to be sufficiently descriminating.

































Schaad                  Expires October 19, 2006                [Page 4]

Internet-Draft              ESSCertID Update                  April 2006


3.  Insert new section 5.4.1

   5.4.1 Signing Certificate Attribute Definition

   The signing certificate attribute is designed to prevent the simple
   substitution and re-issue attacks, and to allow for a restricted set
   of authorization certificates to be used in verifying a signature.

   The definition of SigningCertificateV2 is

      SigningCertificateV2 ::=  SEQUENCE {
          certs        SEQUENCE OF ESSCertIDv2,
          policies     SEQUENCE OF PolicyInformation OPTIONAL
      }

      id-aa-signingCertificateV2 OBJECT IDENTIFIER ::= { iso(1)
          member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)
          smime(16) id-aa(2) XX }

   certs contains the list of certificates that are to be used in
      validating the message.  The first certificate identified in the
      sequence of certificate identifiers MUST be the certificate used
      to verify the signature.  The encoding of the ESSCertIDv2 for this
      certificate SHOULD include the issuerSerial field.  If other
      constraints ensure that issuerAndSerialNumber will be present in
      the SignerInfo, the issuerSerial field MAY be omitted.  The
      certificate identified is used during the signature verification
      process.  If the hash of the certificate does not match the
      certificate used to verify the signature, the signature MUST be
      considered invalid.

      If more than one certificate is present, subsequent certificates
      limit the set of authorization certificates that are used during
      signature validation.  Authorization certificates can be either
      attribute certificates or normal certificates.  The issuerSerial
      field (in the ESSCertIDv2 structure) SHOULD be present for these
      certificates, unless the client who is validating the signature is
      expected to have easy access to all the certificates required for
      validation.  If only the signing certificate is present in the
      sequence, there are no restrictions on the set of authorization
      certificates used in validating the signature.

   policies contains a sequence of policy information terms that
      identify those certificate policies that the signer asserts apply
      to the certificate, and under which the certificate should be
      relied upon.  This value suggests a policy value to be used in the
      relying party's certification path validation.  The definition of
      PolicyInformation can be found in [PKIXCERT].



Schaad                  Expires October 19, 2006                [Page 5]

Internet-Draft              ESSCertID Update                  April 2006


   If present, the SigningCertificateV2 attribute MUST be a signed
   attribute; it MUST NOT be an unsigned attribute.  CMS defines
   SignedAttributes as a SET OF Attribute.  A SignerInfo MUST NOT
   include multiple instances of the SigningCertificate attribute.  CMS
   defines the ASN.1 syntax for the signed attributes to include
   attrValues SET OF AttributeValue.  A SigningCertificate attribute
   MUST include only a single instance of AttributeValue.  There MUST
   NOT be zero or multiple instances of AttributeValue present in the
   attrValues SET OF AttributeValue.










































Schaad                  Expires October 19, 2006                [Page 6]

Internet-Draft              ESSCertID Update                  April 2006


4.  Insert new section 5.4.1.1

   Insert the following text as a new section

   5.4.1.1 Certificate Identification

   The best way to identify certificates is an often-discussed issue.
   The ESSCertIDV2 structure supplies two different fields that are used
   for this purpose.

   The hash of the entire certificate allows for a verifier to check
   that the certificate used in the verification process was the same as
   the signer intended to be used.  Hashes are convient in that they are
   frequently used by certificate stores as a method of indexing and
   retrieving certificates as well.  The use of the hash is required by
   this structure since the detection of substitued certificates is
   based on the fact they would map to different hash values.

   The issuer/serial number pair is the method of identification of
   certificates used in [PKIXCERT].  That document imposes a restriction
   for certificates that the issuer DN must be present.  The issuer/
   serial number pair would therefore normally be sufficient to identify
   the correct signing certificate.  (This assumes the same issuer name
   is not re-used from the set of trust anchors.)  The issuer/serial
   number pair can be stored in the sid field of the SignerInfo object.
   However the sid field is not covered by the signature.  In the cases
   where the issuer/serial number pair is not used in the sid or the
   issuer/serial number need to be signed, they should be placed in the
   issuerSerial field of the ESSCertIDv2 structure.

   Attribute certificates and additional public key certificates
   containing authorization information do not have an issuer/serial
   number pair represented anywhere in a SignerInfo object.  When an
   attribute certificate or an additional public key certificate is not
   included in the SignedData object, it becomes much more difficult to
   get the correct set of certificates based only on a hash of the
   certificate.  For this reason, these certificates SHOULD be
   identified by the IssuerSerial object.

   This document defines a certificate identifier as:











Schaad                  Expires October 19, 2006                [Page 7]

Internet-Draft              ESSCertID Update                  April 2006


      ESSCertIDv2 ::=  SEQUENCE {
           hashAlg                  AlgorithmIdentifier DEFAULT {id-sha256}
           certHash                 Hash,
           issuerSerial             IssuerSerial OPTIONAL
      }

      Hash ::= OCTET STRING

      IssuerSerial ::= SEQUENCE {
           issuer                   GeneralNames,
           serialNumber             CertificateSerialNumber
      }

   The fields of ESSCertIDv2 are defined as follows:

   certHash is computed over the entire DER encoded certificate
      including the signature.  The issuerSerial would normally be
      present unless the value can be inferred from other information.

   hashAlg contains the identifier of the algorithm used in computing
      certHash.

   issuerSerial holds the identification of the certificate.

   The fields of IssuerSerial are defined as follows:

   issuer contains the issuer name of the certificate.  For non-
      attribute certificates, the issuer MUST contain only the issuer
      name from the certificate encoded in the directoryName choice of
      GeneralNames.  For attribute certificates, the issuer MUST contain
      the issuer name field from the attribute certificate.

   serialNumber holds the serial number that uniquely identifies the
      certificate.

















Schaad                  Expires October 19, 2006                [Page 8]

Internet-Draft              ESSCertID Update                  April 2006


5.  Insert new section 5.4.2

   5.4.2 Signing Certificate Attribute Definition with SHA-1

   The signing certificate attribute is designed to prevent the simple
   substitution and re-issue attacks, and to allow for a restricted set
   of authorization certificates to be used in verifying a signature.

   The definition of SigningCertificate is

      SigningCertificate ::=  SEQUENCE {
          certs        SEQUENCE OF ESSCertID,
          policies     SEQUENCE OF PolicyInformation OPTIONAL
      }

      id-aa-signingCertificate OBJECT IDENTIFIER ::= { iso(1)
          member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)
          smime(16) id-aa(2) 12 }

   The first certificate identified in the sequence of certificate
   identifiers MUST be the certificate used to verify the signature.
   The encoding of the ESSCertID for this certificate SHOULD include the
   issuerSerial field.  If other constraints ensure that
   issuerAndSerialNumber will be present in the SignerInfo, the
   issuerSerial field MAY be omitted.  The certificate identified is
   used during the signature verification process.  If the hash of the
   certificate does not match the certificate used to verify the
   signature, the signature MUST be considered invalid.

   If more than one certificate is present in the sequence of
   ESSCertIDs, the certificates after the first one limit the set of
   authorization certificates that are used during signature validation.
   Authorization certificates can be either attribute certificates or
   normal certificates.  The issuerSerial field (in the ESSCertID
   structure) SHOULD be present for these certificates, unless the
   client who is validating the signature is expected to have easy
   access to all the certificates required for validation.  If only the
   signing certificate is present in the sequence, there are no
   restrictions on the set of authorization certificates used in
   validating the signature.

   The sequence of policy information terms identifies those certificate
   policies that the signer asserts apply to the certificate, and under
   which the certificate should be relied upon.  This value suggests a
   policy value to be used in the relying party's certification path
   validation.

   If present, the SigningCertificate attribute MUST be a signed



Schaad                  Expires October 19, 2006                [Page 9]

Internet-Draft              ESSCertID Update                  April 2006


   attribute; it MUST NOT be an unsigned attribute.  CMS defines
   SignedAttributes as a SET OF Attribute.  A SignerInfo MUST NOT
   include multiple instances of the SigningCertificate attribute.  CMS
   defines the ASN.1 syntax for the signed attributes to include
   attrValues SET OF AttributeValue.  A SigningCertificate attribute
   MUST include only a single instance of AttributeValue.  There MUST
   NOT be zero or multiple instances of AttributeValue present in the
   attrValues SET OF AttributeValue.











































Schaad                  Expires October 19, 2006               [Page 10]

Internet-Draft              ESSCertID Update                  April 2006


6.  Renumber Section 5.4.1 Certificate Identification

   Change the number on this section from 5.4.1 to 5.4.2.1

   Change the title on this section to "Certificate Identification with
   SHA-1".

7.  Normative References

   [ESS]      Hoffman, P., "Enhanced Security Services for S/MIME",
              RFC 2634, June 1999.

   [PKIXCERT]
              Housley, R., Ford, W., Polk, W., and D. Solo, "Internet
              X.509 Public Key Infrastructure Certificate and
              Certificate Revocation List (CRL) Profile", RFC 3280,
              April 2002.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", RFC 2119, BCP 14, March 1997.































Schaad                  Expires October 19, 2006               [Page 11]

Internet-Draft              ESSCertID Update                  April 2006


Appendix A.  ASN.1 Module

   ExtendedSecurityServices-2006
        { iso(1) member-body(2) us(840) rsadsi(113549)
          pkcs(1) pkcs-9(9) smime(16) modules(0) ess-2006(TBD) }

   DEFINITIONS IMPLICIT TAGS ::=
   BEGIN

   IMPORTS

   -- Cryptographic Message Syntax (CMS)
       ContentType, IssuerAndSerialNumber, SubjectKeyIdentifier,
AlgorithmIdentifier
       FROM CryptographicMessageSyntax { iso(1) member-body(2) us(840)
       rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) modules(0) cms(1)}

   -- PKIX Certificate and CRL Profile, Sec A.2 Implicitly Tagged Module,
   --  1988 Syntax
       PolicyInformation, CertificateSerialNumber, GeneralNames  FROM
PKIX1Implicit88 {iso(1)
       identified-organization(3) dod(6) internet(1) security(5)
       mechanisms(5) pkix(7)id-mod(0) id-pkix1-implicit(19)};

   -- Extended Security Services

   -- The construct "SEQUENCE SIZE (1..MAX) OF" appears in several ASN.1
   -- constructs in this module. A valid ASN.1 SEQUENCE can have zero or
   -- more entries. The SIZE (1..MAX) construct constrains the SEQUENCE to
   -- have at least one entry. MAX indicates the upper bound is unspecified.
   -- Implementations are free to choose an upper bound that suits their
   -- environment.

   UTF8String ::= [UNIVERSAL 12] IMPLICIT OCTET STRING
       -- The contents are formatted as described in [UTF8]

   -- Section 2.7

   ReceiptRequest ::= SEQUENCE {
     signedContentIdentifier ContentIdentifier,
     receiptsFrom ReceiptsFrom,
     receiptsTo SEQUENCE SIZE (1..ub-receiptsTo) OF GeneralNames }

   ub-receiptsTo INTEGER ::= 16

   id-aa-receiptRequest OBJECT IDENTIFIER ::= { iso(1) member-body(2)
       us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 1}

   ContentIdentifier ::= OCTET STRING




Schaad                  Expires October 19, 2006               [Page 12]

Internet-Draft              ESSCertID Update                  April 2006


   id-aa-contentIdentifier OBJECT IDENTIFIER ::= { iso(1) member-body(2)
       us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 7}

   ReceiptsFrom ::= CHOICE {
     allOrFirstTier [0] AllOrFirstTier,
     -- formerly "allOrNone [0]AllOrNone"
     receiptList [1] SEQUENCE OF GeneralNames }

   AllOrFirstTier ::= INTEGER { -- Formerly AllOrNone
     allReceipts (0),
     firstTierRecipients (1) }


   -- Section 2.8

   Receipt ::= SEQUENCE {
     version ESSVersion,
     contentType ContentType,
     signedContentIdentifier ContentIdentifier,
     originatorSignatureValue OCTET STRING }

   id-ct-receipt OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840)
      rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-ct(1) 1}

   ESSVersion ::= INTEGER  { v1(1) }

   -- Section 2.9

   ContentHints ::= SEQUENCE {
     contentDescription UTF8String (SIZE (1..MAX)) OPTIONAL,
     contentType ContentType }

   id-aa-contentHint OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840)
       rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 4}

   -- Section 2.10

   MsgSigDigest ::= OCTET STRING

   id-aa-msgSigDigest OBJECT IDENTIFIER ::= { iso(1) member-body(2)
       us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 5}

   -- Section 2.11

   ContentReference ::= SEQUENCE {
     contentType ContentType,
     signedContentIdentifier ContentIdentifier,
     originatorSignatureValue OCTET STRING }



Schaad                  Expires October 19, 2006               [Page 13]

Internet-Draft              ESSCertID Update                  April 2006


   id-aa-contentReference   OBJECT IDENTIFIER ::= { iso(1) member-body(2)
       us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 10 }

   -- Section 3.2

   ESSSecurityLabel ::= SET {
     security-policy-identifier SecurityPolicyIdentifier,
     security-classification SecurityClassification OPTIONAL,
     privacy-mark ESSPrivacyMark OPTIONAL,
     security-categories SecurityCategories OPTIONAL }

   id-aa-securityLabel OBJECT IDENTIFIER ::= { iso(1) member-body(2)
       us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 2}

   SecurityPolicyIdentifier ::= OBJECT IDENTIFIER

   SecurityClassification ::= INTEGER {
     unmarked (0),
     unclassified (1),
     restricted (2),
     confidential (3),
     secret (4),
     top-secret (5) } (0..ub-integer-options)

   ub-integer-options INTEGER ::= 256

   ESSPrivacyMark ::= CHOICE {
       pString      PrintableString (SIZE (1..ub-privacy-mark-length)),
       utf8String   UTF8String (SIZE (1..MAX))
   }

   ub-privacy-mark-length INTEGER ::= 128

   SecurityCategories ::= SET SIZE (1..ub-security-categories) OF
           SecurityCategory

   ub-security-categories INTEGER ::= 64

   SecurityCategory ::= SEQUENCE {
     type  [0] OBJECT IDENTIFIER,
     value [1] ANY DEFINED BY type -- defined by type
   }

   --Note: The aforementioned SecurityCategory syntax produces identical
   --hex encodings as the following SecurityCategory syntax that is
   --documented in the X.411 specification:
   --
   --SecurityCategory ::= SEQUENCE {



Schaad                  Expires October 19, 2006               [Page 14]

Internet-Draft              ESSCertID Update                  April 2006


   --     type  [0]  SECURITY-CATEGORY,
   --     value [1]  ANY DEFINED BY type }
   --
   --SECURITY-CATEGORY MACRO ::=
   --BEGIN
   --TYPE NOTATION ::= type | empty
   --VALUE NOTATION ::= value (VALUE OBJECT IDENTIFIER)
   --END

   -- Section 3.4

   EquivalentLabels ::= SEQUENCE OF ESSSecurityLabel

   id-aa-equivalentLabels OBJECT IDENTIFIER ::= { iso(1) member-body(2)
       us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 9}


   -- Section 4.4

   MLExpansionHistory ::= SEQUENCE
           SIZE (1..ub-ml-expansion-history) OF MLData

   id-aa-mlExpandHistory OBJECT IDENTIFIER ::= { iso(1) member-body(2)
       us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 3}

   ub-ml-expansion-history INTEGER ::= 64

   MLData ::= SEQUENCE {
     mailListIdentifier EntityIdentifier,
     expansionTime GeneralizedTime,
     mlReceiptPolicy MLReceiptPolicy OPTIONAL }

   EntityIdentifier ::= CHOICE {
     issuerAndSerialNumber IssuerAndSerialNumber,
     subjectKeyIdentifier SubjectKeyIdentifier }

   MLReceiptPolicy ::= CHOICE {
     none [0] NULL,
     insteadOf [1] SEQUENCE SIZE (1..MAX) OF GeneralNames,
     inAdditionTo [2] SEQUENCE SIZE (1..MAX) OF GeneralNames }


   -- Section 5.4

   SigningCertificate ::=  SEQUENCE {
       certs        SEQUENCE OF ESSCertID,
       policies     SEQUENCE OF PolicyInformation OPTIONAL
   }



Schaad                  Expires October 19, 2006               [Page 15]

Internet-Draft              ESSCertID Update                  April 2006


   id-aa-signingCertificate OBJECT IDENTIFIER ::= { iso(1)
       member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)
       smime(16) id-aa(2) 12 }

      SigningCertificateV2 ::=  SEQUENCE {
          certs        SEQUENCE OF ESSCertIDv2,
          policies     SEQUENCE OF PolicyInformation OPTIONAL
      }

      id-aa-signingCertificateV2 OBJECT IDENTIFIER ::= { iso(1)
          member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)
          smime(16) id-aa(2) XX }

   id-sha256  OBJECT IDENTIFIER  ::=  { joint-iso-itu-t(2)
                              country(16) us(840) organization(1) gov(101)
                              csor(3) nistalgorithm(4) hashalgs(2) 1 }

   ESSCertIDv2 ::= SEQUENCE {
           certHash                Hash,
           hashAlgorithm           AlgorithmIdentifier DEFAULT {algorithm
id-sha256 parameters NULL}
           issuerSerial            IssuerSerial OPTIONAL
   }

   ESSCertID ::=  SEQUENCE {
        certHash                 Hash,
        issuerSerial             IssuerSerial OPTIONAL
   }

   Hash ::= OCTET STRING -- SHA1 hash of entire certificate

   IssuerSerial ::= SEQUENCE {
        issuer                   GeneralNames,
        serialNumber             CertificateSerialNumber
   }

   END -- of ExtendedSecurityServices-2006















Schaad                  Expires October 19, 2006               [Page 16]

Internet-Draft              ESSCertID Update                  April 2006


Author's Address

   Jim Schaad
   Soaring Hawk Consulting
   PO Box 675
   Gold Bar, WA  98251

   Phone: (425) 785-1031
   Email: jimsch@exmsft.com










































Schaad                  Expires October 19, 2006               [Page 17]

Internet-Draft              ESSCertID Update                  April 2006


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Disclaimer of Validity

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Copyright Statement

   Copyright (C) The Internet Society (2006).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.




Schaad                  Expires October 19, 2006               [Page 18]





