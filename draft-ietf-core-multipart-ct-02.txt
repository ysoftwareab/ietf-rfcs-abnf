



CoRE                                                          T. Fossati
Internet-Draft                                                     Nokia
Intended status: Standards Track                               K. Hartke
Expires: February 8, 2019                                       Ericsson
                                                              C. Bormann
                                                 Universitaet Bremen TZI
                                                         August 07, 2018


                   Multipart Content-Format for CoAP
                    draft-ietf-core-multipart-ct-02

Abstract

   This memo defines application/multipart-core, an application-
   independent media-type that can be used to combine representations of
   several different media types into a single CoAP message-body with
   minimal framing overhead, each along with a CoAP Content-Format
   identifier.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on February 8, 2019.

Copyright Notice

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must



Fossati, et al.         Expires February 8, 2019                [Page 1]

Internet-Draft      Multipart Content-Format for CoAP        August 2018


   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Multipart Content-Format Encoding . . . . . . . . . . . . . .   3
   3.  Usage Examples  . . . . . . . . . . . . . . . . . . . . . . .   3
     3.1.  Observing Resources . . . . . . . . . . . . . . . . . . .   3
     3.2.  Implementation hints  . . . . . . . . . . . . . . . . . .   4
   4.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   5
     4.1.  Registration of media type application/multipart-core . .   5
     4.2.  Registration of a Content-Format identifier for
           application/multipart-core  . . . . . . . . . . . . . . .   6
   5.  Security Considerations . . . . . . . . . . . . . . . . . . .   6
   6.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   7
     6.1.  Normative References  . . . . . . . . . . . . . . . . . .   7
     6.2.  Informative References  . . . . . . . . . . . . . . . . .   7
   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .   7
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   8

1.  Introduction

   This memo defines application/multipart-core, an application-
   independent media-type that can be used to combine representations of
   several different media types into a single CoAP [RFC7252] message-
   body with minimal framing overhead, each along with a CoAP Content-
   Format identifier.

   This simple and efficient binary framing mechanism can be employed to
   create application specific request and response bodies which build
   on multiple already existing media types.

   Applications using the application/multipart-core Content-Format
   define the internal structure of the application/multipart-core
   representation.

   For example, one way to structure the sub-types specific to an
   application/multipart-core container is to always include them at the
   same fixed position.  This specification allows to indicate that an
   optional part is not present by substituting a null value for the
   representation of the part.

   Optionally, an application might use the general format defined here,
   but also register a new media type and an associated Content-Format
   identifier -- typically one in the range 10000-64999 -- instead of
   using application/multipart-core.



Fossati, et al.         Expires February 8, 2019                [Page 2]

Internet-Draft      Multipart Content-Format for CoAP        August 2018


2.  Multipart Content-Format Encoding

   A representation of media-type application/multipart-core contains a
   collection of zero or more representations, each along with their
   respective content format.

   The collection is encoded as a CBOR [RFC7049] array with an even
   number of elements.  The second, fourth, sixth, etc. element is a
   byte string containing a representation, or the value "null" if an
   optional part is indicated as not given.  The first, third, fifth,
   etc. element is an unsigned integer specifying the content format ID
   of the representation following it.  (Future extensions might want to
   include additional alternative ways of specifying the media type of a
   representation in such a position.)

   For example, a collection containing two representations, one with
   content format ID 42 and one with content format ID 0, looks like
   this in CBOR diagnostic notation:

      [42, h'0123456789abcdef', 0, h'3031323334']

   For illustration, the structure of an application/multipart-core
   representation can be described by the CDDL [I-D.ietf-cbor-cddl]
   specification in Figure 1:

   multipart-core = [* multipart-part]
   multipart-part = (type: uint .size 2, part: bytes / null)

               Figure 1: CDDL for application/multipart-core

3.  Usage Examples

3.1.  Observing Resources

   When a client registers to observe a resource [RFC7641] for which no
   representation is available yet, the server may send one or more 2.05
   (Content) notifications before sending the first actual 2.05
   (Content) or 2.03 (Valid) notification.  The possible resulting
   sequence of notifications is shown in Figure 1.












Fossati, et al.         Expires February 8, 2019                [Page 3]

Internet-Draft      Multipart Content-Format for CoAP        August 2018


         __________       __________       __________
        |          |     |          |     |          |
   ---->|   2.05   |---->|  2.05 /  |---->|  4.xx /  |
        | Pending  |     |   2.03   |     |   5.xx   |
        |__________|     |__________|     |__________|
           ^   \ \          ^    \           ^
            \__/  \          \___/          /
                   \_______________________/

                   Figure 2: Sequence of Notifications:

   The specification of the Observe option requires that all
   notifications carry the same Content-Format.  The application/
   multipart-core media type can be used to provide that Content-Format:
   e.g., carrying an empty list of representations in the case marked as
   "Pending" in Figure 2, and carrying a single representation specified
   as the target content-format in the case in the middle of the figure.

3.2.  Implementation hints

   This section describes the serialization for readers that may be new
   to CBOR.  It does not contain any new information.

   An application/multipart-core representation carrying no
   representations is represented by an empty CBOR array, which is
   serialized as a single byte with the value 0x80.

   An application/multipart-core representation carrying a single
   representation is represented by a two-element CBOR array, which is
   serialized as 0x82 followed by the two elements.  The first element
   is an unsigned integer for the Content-Format value, which is
   represented as described in Table 1.  The second element is the
   object as a byte string, which is represented as a length as
   described in Table 2 followed by the bytes of the object.

                      +----------------+------------+
                      | Serialization  | Value      |
                      +----------------+------------+
                      | 0x00..0x17     | 0..23      |
                      | 0x18 0xnn      | 24..255    |
                      | 0x19 0xnn 0xnn | 256..66535 |
                      +----------------+------------+

                 Table 1: Serialization of content-format







Fossati, et al.         Expires February 8, 2019                [Page 4]

Internet-Draft      Multipart Content-Format for CoAP        August 2018


            +-----------------------------+-------------------+
            | Serialization               | Length            |
            +-----------------------------+-------------------+
            | 0x40..0x57                  | 0..23             |
            | 0x58 0xnn                   | 24..255           |
            | 0x59 0xnn 0xnn              | 256..66535        |
            | 0x5a 0xnn 0xnn 0xnn 0xnn    | 66536..4294967295 |
            | 0x5b 0xnn .. 0xnn (8 bytes) | 4294967296..      |
            +-----------------------------+-------------------+

                  Table 2: Serialization of object length

   For example, a single text/plain object (content-format 0) of value
   "Hello World" (11 characters) would be serialized as

      0x82 0x00 0x4b H e l l o 0x20 w o r l d

   In effect, the serialization for a single object is done by prefixing
   the object with information about its content-format (here: 0x82
   0x00) and its length (here: 0x4b).

   For more than one representation included in an application/
   multipart-core representation, the head of the CBOR array is adjusted
   (0x84 for two representations, 0x86 for three, ...) and the sequences
   of content-format and embedded representations follow.

4.  IANA Considerations

4.1.  Registration of media type application/multipart-core

   IANA is requested to register the following media type [RFC6838]:

   Type name:  application

   Subtype name:  multipart-core

   Required parameters:  N/A

   Optional parameters:  N/A

   Encoding considerations:  binary

   Security considerations:  See the Security Considerations Section of
      RFCthis

   Interoperability considerations:  N/A

   Published specification:  RFCthis



Fossati, et al.         Expires February 8, 2019                [Page 5]

Internet-Draft      Multipart Content-Format for CoAP        August 2018


   Applications that use this media type:  Applications that need to
      combine representations of potentially several media types into
      one, e.g., EST-CoAP [I-D.ietf-ace-coap-est]

   Fragment identifier considerations:  N/A

   Additional information:

      Deprecated alias names for this type:  N/A

      Magic number(s):  N/A

      File extension(s):  N/A

      Macintosh file type code(s):  N/A

   Person & email address to contact for further information:
      iesg&ietf.org

   Intended usage:  COMMON

   Restrictions on usage:  N/A

   Author:  CoRE WG

   Change controller:  IESG

   Provisional registration? (standards tree only):  no

4.2.  Registration of a Content-Format identifier for application/
      multipart-core

   IANA is requested to register the following Content-Format to the
   "CoAP Content-Formats" subregistry, within the "Constrained RESTful
   Environments (CoRE) Parameters" registry, from the Expert Review
   space (0..255):

       +----------------------------+----------+------+-----------+
       | Media Type                 | Encoding | ID   | Reference |
       +----------------------------+----------+------+-----------+
       | application/multipart-core | --       | TBD1 | RFCthis   |
       +----------------------------+----------+------+-----------+

5.  Security Considerations

   The security considerations of [RFC7049] apply.  In particular,
   resource exhaustion attacks may employ large values for the byte




Fossati, et al.         Expires February 8, 2019                [Page 6]

Internet-Draft      Multipart Content-Format for CoAP        August 2018


   string size fields, or deeply nested structures of recursively
   embedded application/multipart-core representations.

6.  References

6.1.  Normative References

   [RFC7049]  Bormann, C. and P. Hoffman, "Concise Binary Object
              Representation (CBOR)", RFC 7049, DOI 10.17487/RFC7049,
              October 2013, <https://www.rfc-editor.org/info/rfc7049>.

   [RFC7252]  Shelby, Z., Hartke, K., and C. Bormann, "The Constrained
              Application Protocol (CoAP)", RFC 7252,
              DOI 10.17487/RFC7252, June 2014,
              <https://www.rfc-editor.org/info/rfc7252>.

   [RFC7641]  Hartke, K., "Observing Resources in the Constrained
              Application Protocol (CoAP)", RFC 7641,
              DOI 10.17487/RFC7641, September 2015,
              <https://www.rfc-editor.org/info/rfc7641>.

6.2.  Informative References

   [I-D.ietf-ace-coap-est]
              Stok, P., Kampanakis, P., Kumar, S., Richardson, M.,
              Furuhed, M., and S. Raza, "EST over secure CoAP (EST-
              coaps)", draft-ietf-ace-coap-est-05 (work in progress),
              July 2018.

   [I-D.ietf-cbor-cddl]
              Birkholz, H., Vigano, C., and C. Bormann, "Concise data
              definition language (CDDL): a notational convention to
              express CBOR data structures", draft-ietf-cbor-cddl-03
              (work in progress), July 2018.

   [RFC6838]  Freed, N., Klensin, J., and T. Hansen, "Media Type
              Specifications and Registration Procedures", BCP 13,
              RFC 6838, DOI 10.17487/RFC6838, January 2013,
              <https://www.rfc-editor.org/info/rfc6838>.

Acknowledgements

   Most of the text in this draft is from earlier contributions by two
   of the authors, Thomas Fossati and Klaus Hartke.  The re-mix in this
   document is based on the requirements in [I-D.ietf-ace-coap-est],
   based on discussions with Michael Richardson, Panos Kampanis and
   Peter van der Stok.




Fossati, et al.         Expires February 8, 2019                [Page 7]

Internet-Draft      Multipart Content-Format for CoAP        August 2018


Authors' Addresses

   Thomas Fossati
   Nokia

   Email: thomas.fossati@nokia.com


   Klaus Hartke
   Ericsson
   Torshamnsgatan 23
   Stockholm  SE-16483
   Sweden

   Email: klaus.hartke@ericsson.com


   Carsten Bormann
   Universitaet Bremen TZI
   Postfach 330440
   Bremen  D-28359
   Germany

   Phone: +49-421-218-63921
   Email: cabo@tzi.org


























Fossati, et al.         Expires February 8, 2019                [Page 8]
