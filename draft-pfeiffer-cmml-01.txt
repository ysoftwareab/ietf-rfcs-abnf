

Network Working Group                                        S. Pfeiffer
Internet-Draft                                                 C. Parker
Expires: June 30, 2004                                           A. Pang
                                                                   CSIRO
                                                       December 31, 2003


        The Continuous Media Markup Language (CMML), Version 2.0
                         draft-pfeiffer-cmml-01

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026 except that the right to
   produce derivative works is not granted.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups. Note that other
   groups may also distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on June 30, 2004.

Copyright Notice

   Copyright (C) The Internet Society (2003). All Rights Reserved.

Abstract

   This specification defines the Continuous Media Markup Language
   (CMML), version 2.0, an XML-based [1] markup language for
   time-continuous data. It is a sister document to the specification of
   the Annodex [12] annotation, indexing and hyperlinking format for
   time-continuous data. Its tags provide for the creation of structured
   and unstructured annotations as well as hyperlinks and addressable
   named anchor points for clips of time-continuous data. As well as
   enabling the creation and storage of such meta data in XML files, the
   CMML is an authoring language for Annodex [12] streams through its
   import tags. The tag names in use in CMML are similar to the ones in



Pfeiffer, et al.         Expires June 30, 2004                  [Page 1]

Internet-Draft                    CMML                     December 2003


   XHTML [3].

   At this point in time, the right to produce derivative works is not
   granted to the IETF as the authors are uncertain about the necessity
   to create a working group. The specification is not encumbered by
   patents. The Annodex format is protected by a trade mark to prevent
   the use of the term "Annodex" for any related but non-conformant and
   therefore non-interoperable technology. Conformant technology is
   encouraged to use the term "Annodex" when refering to the file
   format.

   Notice the change to CMML 2.0 from the previous version of this
   Internet-Draft, replacing CMML 1.0.

Table of Contents

   1.    Introduction . . . . . . . . . . . . . . . . . . . . . . . .  4
   2.    The CMML data types  . . . . . . . . . . . . . . . . . . . .  6
   2.1   ContentType  . . . . . . . . . . . . . . . . . . . . . . . .  6
   2.2   URIs . . . . . . . . . . . . . . . . . . . . . . . . . . . .  6
   2.3   Internationalisation support . . . . . . . . . . . . . . . .  6
   2.4   Time specifications  . . . . . . . . . . . . . . . . . . . .  6
   3.    The preamble and the 'cmml' root element . . . . . . . . . .  9
   4.    The cmml 'stream' tag  . . . . . . . . . . . . . . . . . . . 10
   4.1   The 'import' tag . . . . . . . . . . . . . . . . . . . . . . 10
   4.2   The 'param' tag  . . . . . . . . . . . . . . . . . . . . . . 12
   5.    The cmml 'head' element  . . . . . . . . . . . . . . . . . . 13
   5.1   The 'title' element  . . . . . . . . . . . . . . . . . . . . 13
   5.2   The 'base' element . . . . . . . . . . . . . . . . . . . . . 13
   5.3   The 'meta' element . . . . . . . . . . . . . . . . . . . . . 14
   6.    The cmml 'clip' tag  . . . . . . . . . . . . . . . . . . . . 15
   6.1   The 'meta' element . . . . . . . . . . . . . . . . . . . . . 16
   6.2   The 'a' element  . . . . . . . . . . . . . . . . . . . . . . 16
   6.3   The 'img' element  . . . . . . . . . . . . . . . . . . . . . 16
   6.4   The 'desc' element . . . . . . . . . . . . . . . . . . . . . 17
   7.    The encoding of CMML to Annodex format bitstreams  . . . . . 18
   7.1   Encoding the 'stream' tag  . . . . . . . . . . . . . . . . . 18
   7.2   Encoding the preamble and the 'cmml' tag . . . . . . . . . . 20
   7.3   Encoding the 'head' tag  . . . . . . . . . . . . . . . . . . 21
   7.4   Encoding the 'clip' tags . . . . . . . . . . . . . . . . . . 21
   8.    MIME media type registration for 'text/cmml' . . . . . . . . 22
   8.1   URI addressing into CMML files . . . . . . . . . . . . . . . 22
   8.1.1 Query parameters for use with the http protocol
         server-side  . . . . . . . . . . . . . . . . . . . . . . . . 23
   8.1.2 Fragment identifiers for use with the http protocol
         client-side  . . . . . . . . . . . . . . . . . . . . . . . . 23
   9.    Security considerations  . . . . . . . . . . . . . . . . . . 24
         References . . . . . . . . . . . . . . . . . . . . . . . . . 25



Pfeiffer, et al.         Expires June 30, 2004                  [Page 2]

Internet-Draft                    CMML                     December 2003


         Authors' Addresses . . . . . . . . . . . . . . . . . . . . . 26
   A.    CMML DTD . . . . . . . . . . . . . . . . . . . . . . . . . . 27
   B.    An example CMML document . . . . . . . . . . . . . . . . . . 33
   C.    Definitions of terms and abbreviations . . . . . . . . . . . 34
   D.    Glossary of acronyms . . . . . . . . . . . . . . . . . . . . 35
   E.    Acknowledgements . . . . . . . . . . . . . . . . . . . . . . 36
         Intellectual Property and Copyright Statements . . . . . . . 37












































Pfeiffer, et al.         Expires June 30, 2004                  [Page 3]

Internet-Draft                    CMML                     December 2003


1. Introduction

   Please note that this document assumes that the reader has a fluent
   working knowledge of XML [1], HTML [2], XHTML [3] and the World Wide
   Web. Basic knowledge about the Annodex [12] format is also assumed.

   Time-continuous data in the Annodex format contains XML-based
   annotations and hyperlinking information that enables it to be
   browsed by client applications, and crawled and indexed by search
   engines. The Continuous Media Markup Language CMML is a simple markup
   language for authoring and storing the XML data to be multiplexed
   with the time-continuous data given in binary bitstreams. This
   process eventually creates Annodex format bitstreams.

   The format of the CMML derives much from XHTML. Yet, instead of
   enabling the annotation of textual documents, it enables creation of
   mark-up for time-continuous documents.

   The CMML can describe one or several time-continuous data bitstreams.
   It is used to create all the tags required for authoring the
   annotation information for the Annodex format. It therefore contains
   the same tags as the annotation bitstream in Annodex format, which
   are the "head" and the "clip" tags. In addition, it may contain a
   stream tag, which is required for identifying and synchronising one
   or several input bitstreams that will be multiplexed together with
   the annotations for the creation of one coherent Annodex format
   bitstream.

   The following picture illustrates the multiplexing activity
   schematically; in reality the stream tag is not preserved and some
   attributes are also made irrelevant during multiplexing. Details of
   how CMML markup is encoded in an Annodex bitstream are given later in
   this document.


















Pfeiffer, et al.         Expires June 30, 2004                  [Page 4]

Internet-Draft                    CMML                     December 2003


      ----------
      |stream  | CMML
      ---------- instance
      | head   | document
      ----------
      | clip_1 |     ----------------------------------------------------
      ----------     | data bitstream in packets                        |
      | ...    |     ----------------------------------------------------
      ----------          |
      | clip_n |          |
      ----------          |
          |               |
          ------->-<-------
                  |          Multiplexing
                  |
                  v
      ----------------------------------------------------------------------
      |stream|head|clip_1|  data packets         |clip_2| data packets  ...
      ----------------------------------------------------------------------

   The file extension of CMML files is ".cmml". This document also
   applies for registration of the mime-type "text/cmml" for CMML files
   with IANA. In the meantime, "text/x-cmml" will be used.

   The CMML is technically fully specified through its DTD as given in
   the Appendix. The semantic meaning of each of the tags, their content
   and their attributes is specified in the following sections. The
   Appendix also contains an example of a CMML (instance) document.























Pfeiffer, et al.         Expires June 30, 2004                  [Page 5]

Internet-Draft                    CMML                     December 2003


2. The CMML data types

   At the beginning of the CMML DTD, several parameter entities are
   defined that are used throughout the DTD as data types. This section
   gives a brief overview of them and refers to the relevant standards
   in which they are defined.

2.1 ContentType

   A "ContentType" specifies the media type and subtype of a document as
   defined in RFC 2045 [7]. It is used to specify the type of content
   than one input time-continuous bitstream contains.

2.2 URIs

   A "URI" is a character string that conforms to the specification of
   the Uniform Resource Identifier as defined in RFC 2396 [4]. A URI
   generally points to a Web resource.  The URI time interval
   specification [11] is supported for CMML and Annodex files. Also,
   direct addressing of clips as specified in the MIME type application
   part of this document is supported for CMML and Anndex files.

2.3 Internationalisation support

   The "LanguageCode" defines a collection of constant strings that each
   identify a specific language as defined in RFC 1766 [6]. It is used
   to provide internationalisation support. To that end, the i18n entity
   draws together a language given by a "LanguageCode" with the
   directionality of that language in "dir" given either as ltr
   (left-to-right) or rtl (right-to-left).  "ltr" is the default.

2.4 Time specifications

   There are three different time specifications in use in CMML:
   "Timestamp", "Playbacktime" and "UTCtime".

   A "Timestamp" is generally a name-value pair which defines a time
   point. The time point value is interpreted according to the time
   scheme given in the name. If the name is ommitted, it defaults to
   "npt:". At least the following time specifications are defined:

   o  "npt" is "normal playback time" as used in the RTSP standard [5].

   o  "smpte" are several frame-based time labels as defined by the
      Society of Motion Pictures and Television Engineers [9]. As
      fractional frames are meaningless for video and ambiguous for
      audio in the drop-frame situations, they are not used. The
      drop-frame algorithms for calculating the exact times can be found



Pfeiffer, et al.         Expires June 30, 2004                  [Page 6]

Internet-Draft                    CMML                     December 2003


      in the mentioned SMPTE standard.

   o  "utc" is the "universal time code" as specified in the ISO 8601
      standard [10].

   The formal specifications for the time schemes are:

      "npt:" NPT time with a second or subsecond basis

      Specification as BNF:

   npt-spec    =  "npt:" npt-time
   npt-time    =  npt-sec | npt-hhmmss
   npt-sec     =   1*DIGIT [ "." *DIGIT ]
   npt-hhmmss  =   npt-hh ":" npt-mm ":" npt-ss [ "." *DIGIT ]
   npt-hh      =   1*DIGIT
   npt-mm      =   1*2DIGIT
   npt-ss      =   1*2DIGIT

      "smpte-24:" SMPTE time with a 24 fps basis

      "smpte-24-drop:" SMPTE time with a 24/1.001 fps basis

      "smpte-25:" SMPTE time with a 25 fps basis

      "smpte-30:" SMPTE time with a 30 fps basis

      "smpte-30-drop:" SMPTE time with a 30/1.001 fps basis

      "smpte-50:" SMPTE time with a 50 fps basis

      "smpte-60:" SMPTE time with a 60 fps basis

      "smpte-60-drop:" SMPTE time with a 60/1.001 fps basis

      Specification as BNF:

   smpte-spec  = smpte-type ":" smpte-time
   smpte-type  = "smpte-24" | "smpte-24-drop" | "smpte-25" |
                 "smpte-30" | "smpte-30-drop" | "smpte-50" |
                 "smpte-60" | "smpte-60-drop"
   smpte-time  =  1*2DIGIT ":" 1*2DIGIT ":" 1*2DIGIT [ ":" 1*2DIGIT ]

      "clock:" UTC time with a second or subsecond basis

      Specification as BNF:

   utc-spec    = "clock:" utc-time



Pfeiffer, et al.         Expires June 30, 2004                  [Page 7]

Internet-Draft                    CMML                     December 2003


   utc-time    =   utc-date "T" utc-hhmmss "Z"
   utc-date    =   8DIGIT
   utc-hhmmss  =   6DIGIT [ "." *DIGIT ]

   The "Playbacktime" entity is a data type that just specifies a SMPTE
   or a NPT time. It is therefore equal to the Timestamp entity without
   the UTC specification.

   The "UTCtime" entity is a data type that just specifies a UTC time
   without an identifier. UTC time is specified as in the Timestamp
   entity, but without the "clock:" identifier.








































Pfeiffer, et al.         Expires June 30, 2004                  [Page 8]

Internet-Draft                    CMML                     December 2003


3. The preamble and the 'cmml' root element

   A CMML file is an XML instance document of the CMML DTD. An example
   is given in the Appendix. It starts with the usual xml directive and
   the DTD specification (see http://www.w3.org/TR/
   REC-xml#sec-prolog-dtd). The following is an example preamble:

   <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
   <!DOCTYPE cmml SYSTEM "cmml.dtd">

   The attribute "standalone" is set to "yes" when the only DTD that is
   used for the instance document is cmml.dtd. The encoding format
   specifies the character encoding that is used for the values of the
   attributes and elements of the CMML file. E.g. for languages that are
   non-latin based, such as most Arab and Asian languages, a simple
   character encoding like US-ASCII does not cover all the characters.
   The default "UTF-8" charset can accommodate for any and all.

   After the preamble, the CMML tag follows. A CMML file has a "cmml"
   tag as the root element. It embraces all the other tags.

   <!ELEMENT cmml (stream?, head, clip*)>
   <!ATTLIST cmml
     %i18n;
     id          ID             #IMPLIED
     xmlns       %URI;          #FIXED 'http://www.annodex.net/cmml'
     >

   The "cmml" tag encloses at most one "stream" element, exactly one
   "head" element, and as many "clip" elements as the document author
   requires. A "clip" element describes a section of the to be created
   Annodex bitstream. The Annodex bistream is created by multiplexing
   the bitstreams given in the "src" attributes of the "import" tags of
   the "stream" element together with the CMML annotations in a
   time-synchronous manner, as specified in the Annodex format [12].

   Attributes of the "cmml" element are the usual xml root tag
   attributes: the internationalisation attributes "lang" and "dir", an
   identifier "id" and a fixed namespace "xmlns".

   The internationalisation attributes specify the default language
   (language and directionality) of the complete CMML document. If not
   given, the language default adheres to the same rules as HTML, where
   the setting of the HTTP "Content-Language" header may specify the
   default language of a HTML document received over HTTP, or ultimately
   the user agent defaults and user preferences set the language. (see
   http://www.w3.org/TR/REC-html40/struct/dirlang.html)




Pfeiffer, et al.         Expires June 30, 2004                  [Page 9]

Internet-Draft                    CMML                     December 2003


4. The cmml 'stream' tag

   The "stream" element contains information that is used for authoring
   Annodex format [12] bitstreams from existing time-continuous data. It
   thus describes the input time-continuous bitstreams that are to be
   multiplexed together on authoring the Annodex format bitstreams.
   Additional tags or attributes describe other features of the Annodex
   bitstream such as the time mappings for the start of the file.

   <!ELEMENT stream (import*)>
   <!ATTLIST stream
     id          ID             #IMPLIED
     timebase    %Playbacktime; "0"
     utc         %UTCtime;      #IMPLIED
     >

   The "stream" element has no text attributes and thus
   internationalisation attributes are not required. The "id" attribute
   follows the default language specified in the "cmml" element.

   The "timebase" attribute contains a playback time in seconds
   associated with the first data packet of the Annodex bitstream. All
   other times in the CMML file MUST be calculated relative to this
   timebase. For example, a timebase of 300 seconds npt for a video file
   implies that the first frame is related to a play time of 300
   seconds, and a clip with a start time of 350 seconds is to be
   included 50 seconds into the Annodex bitstream.  If no timebase (or
   no stream tag) is given, the timebase defaults to 0 npt. The timebase
   can be given as a SMPTE or NPT time, but not as a utc time.

   The "utc" attribute associates a calendar date and a wall-clock time
   with the timebase. It therefore provides a mapping of the timebase to
   a real-world clock time and is given as a UTC time. If it is omitted,
   the start attribute in the import tag, and the start and end
   attributes in clip tags MUST NOT be specified as UTC times.

   The content model of the "stream" tag then proposes an arbitrary
   number of input bitstreams. These are described one by one in the
   "import" element.

4.1 The 'import' tag

   A "import" tag contains information on one of the input bitstreams
   for the multiplexing process. It may also contain additional
   parameters to set up the Annodex encoder for each import bitstream.






Pfeiffer, et al.         Expires June 30, 2004                 [Page 10]

Internet-Draft                    CMML                     December 2003


   <!ELEMENT import (param*)>
   <!ATTLIST import
     %i18n;
     id          ID             #IMPLIED
     granulerate CDATA          #IMPLIED
     contenttype %ContentType;  #IMPLIED
     src         %URI;          #REQUIRED
     start       %Timestamp;    "0"
     end         %Timestamp;    #IMPLIED
     title       CDATA          #IMPLIED
     >

   The relevant bitstream (fragment) is referenced through the "src"
   attribute. The src is a URI and may thus also contain a time interval
   specification in URIs which narrows down the input file to that given
   subpart. That resource is multiplexed into the Annodex format
   bitstream starting at the time given in the "start" attribute and
   ending at the latest at the time given in the "end" attribute. The
   "start" and "end" attributes are interpreted relative to the timeline
   of the Annodex format bitstream.

   The internationalisation attributes provide the language of the
   import element's and the contained param tags' attribute values, such
   as the "id" attributes and the "title" attribute.

   The "granulerate" attribute contains the base temporal resolution in
   Hz of the input bitstream refered in the "src" attribute. It depends
   on the encoding format of the input bitstream and typically contains
   the framerate for video (e.g. 25 frames/sec) and the samplerate for
   audio (e.g. 44100 samples/sec), but may contain any rational number
   given with an integer denominator larger than 1 sec (e.g. 25 frames
   on 2 seconds). Each bitstream has its own granulerate dependent on
   its specific encoding. This attribute is implied as it can be
   determined automatically during the multiplexing process when the
   headers of the encoded media bitstream contain this information. For
   bitstreams without header, such as uncompressed audio, the author of
   the CMML file can provide the granulerate to the multiplexer in this
   attribute.

   The "contenttype" attribute specifies the media type [7] of the input
   bitstream refered in the "src" attribute. It is optional as the media
   type can often be derived from the file name or file header of the
   media source during multiplexing.

   The "src" attribute specifies a URI to the input bitstream. Commonly
   used URI schemes are "file" and "http". For specifying temporal
   subsets of the input bitstream, use the time interval specification
   for URIs [11].



Pfeiffer, et al.         Expires June 30, 2004                 [Page 11]

Internet-Draft                    CMML                     December 2003


   The "start" attribute specifies a time in the output Annodex
   bitstream at which the media bitstream will be inserted. This time is
   specified with respect to the "timebase" attribute given in the
   "stream" element.

   The "end" attribute specifies a time in the output Annodex bitstream
   at which the media bitstream will stop at the latest. This time is
   also specified with respect to the "timebase" attribute given in the
   "stream" element. This attribute is not required when the full
   bitstream is used.

   The optional "title" attribute provides a chance to jot down a human
   readable comment on the source bitstream. This may e.g. be used in
   authoring applications for a more human readable display than the
   "id" tag which is really a key for identifying elements uniquely.

   The content model of the "import" tag then allows an arbitrary number
   of "param" tags to add as many descriptive parameter values to the
   mulitplexing activity as necessary.

4.2 The 'param' tag

   A "param" tag is empty, but its attributes contain a name-value pair
   for describing the input bitstream in the parent "import" element. It
   inherits its internationalisation from that element, too, to avoid
   overhead. The "param" element is declared as follows:

   <!ELEMENT param EMPTY>
   <!ATTLIST param
     id          ID             #IMPLIED
     name        CDATA          #REQUIRED
     value       CDATA          #REQUIRED
     >


















Pfeiffer, et al.         Expires June 30, 2004                 [Page 12]

Internet-Draft                    CMML                     December 2003


5. The cmml 'head' element

   The CMML "head" element contains annotation information on the
   complete Annodex bitstream, for whose creation the CMML file is used.
   It therefore contains header-type information such as a title, and
   meta information describing the bitstream.

   The "head" element is declared as the following:

   <!ELEMENT head (meta*,
                   ((title, meta*, (base, meta*)?) |
                    (base, meta*, (title, meta*)?)))>
   <!ATTLIST head
     %i18n;
     id          ID             #IMPLIED
     profile     %URI;          #IMPLIED
     >

   The "head" tag must contain a "title" tag. It may contain one "base"
   tag before or after the "title" tag and any number of "meta" tags at
   any position.

   The "%i18n;" attribute specifies the base language of the "head"
   tag's attribute values.

   The value of the "profile" attribute is a space-separated list of
   base URIs specifying locations of "meta" tag schemes such as the
   Dublin Core (see http://dublincore.org/). These schemes may be used
   in the "meta" elements of the "head" or the "clip" tags.

5.1 The 'title' element

   The "title" tag gives a descriptive title for the Annodex bitstream.
   The "title" element is declared as the following:

   <!ELEMENT title (#PCDATA)>
   <!ATTLIST title
     id          ID       #IMPLIED
     %i18n;
   >

   The "%i18n;" attribute specifies the base language of the "title"
   text.

5.2 The 'base' element

   The "base" element defines the base URI of the Annodex bitstream. All
   relative URIs of the bitstream get interpreted relative to this base.



Pfeiffer, et al.         Expires June 30, 2004                 [Page 13]

Internet-Draft                    CMML                     December 2003


   The "base" element is empty, but its attributes contain the base URI.
   It is declared as follows:

   <!ELEMENT base EMPTY>
   <!ATTLIST base
     id      ID       #IMPLIED
     href    %URI;    #REQUIRED
   >

   The "href" attribute contains the base URI. If the "base" element is
   omitted, the base URI of the Annodex bitstream is derived from the
   address through which the Annodex bitstream is accessed.

5.3 The 'meta' element

   The "meta" element in the "head" element defines structured
   annotations for the complete Annodex bitstream. A "meta" element is
   empty, but its attributes contain the name-value pairs of a
   structured annotation. The "meta" element is declared as follows:

   <!ELEMENT meta EMPTY>
   <!ATTLIST meta
     %i18n;
     id       ID       #IMPLIED
     name     NMTOKEN  #IMPLIED
     content  CDATA    #REQUIRED
     scheme   CDATA    #IMPLIED
   >

   The "%i18n;" attribute specifies the language of the meta attribute
   and content texts.

   The "name" attribute identifies a property name. It does not list
   legal values for this attribute.

   The "content" attribute specifies a property's value. It does not
   list legal values for this attribute.

   The "scheme" attribute names a scheme to be used to interprete the
   property's value. The scheme can be located via the "profile"
   attribute in the "head" element.










Pfeiffer, et al.         Expires June 30, 2004                 [Page 14]

Internet-Draft                    CMML                     December 2003


6. The cmml 'clip' tag

   A CMML file typically contains a number of sections given through
   "clip" tags. The CMML "clip" tag contains information about a section
   of the Annodex bitstream. This is expressed in a number of elements
   and attributes annotating, indexing, and hyperlinking the section.
   The "start" and "end" attributes are used to give the insertion time
   for the clip into the Annodex bitstream.

   <!ELEMENT clip (meta*, a?, img?, desc?)>
   <!ATTLIST clip
     %i18n;
     id          ID             #IMPLIED
     track       CDATA          "default"
     start       %Timestamp;    #REQUIRED
     end         %Timestamp;    #IMPLIED
     >

   Any number of "meta" elements may appear in a clip, and at most one
   "a" element, one "img" element, and one "desc" element. Though
   "meta", "a", "img", and "desc" tag are given in a specific order in
   the DTD, their order is actually random.

   A "clip" element defines a unique identifying name for the clip in
   its "id" attribute. This name can be used in URIs that point either
   to the CMML file or the Annodex bitstream created from it, and allow
   to point straight at the clip. This may either be done as a URI
   fragment or URI query specification.

   The "%i18n;" attribute specifies the base language for all the clip's
   attribute values and content elements.

   The "track" attribute specifies the track that this clip belongs to.
   An annotation track is a set of clips that belong together from a
   semantic point of view. Clips in the same track must not overlap
   temporally. A default track must be available always. This track is
   the one a client (such as a Web browser plugin) will display by
   default. Other annotation tracks may be created by the document
   author to describe a more specific content. An example use are
   different annotation tracks for each speaker in an audio recording of
   a meeting or tracks of different languages.

   The "start" and "end" attributes specify the time range during which
   the clip element is defined. This time range is specified with
   respect to the "timebase" and "utc" attributes given in the "stream"
   tag. If the "stream" tag does not contain a "utc" specification,
   "start" and "end" times are not allowed to be given in UTC time.
   "start" is a required attribute because a clip without a start time



Pfeiffer, et al.         Expires June 30, 2004                 [Page 15]

Internet-Draft                    CMML                     December 2003


   is useless. "end" is optional and only required where clips cannot
   continue on to the following clip.

6.1 The 'meta' element

   The "meta" element is specified above in the "head" section. While a
   "meta" element in the "head" tag provides meta information for the
   complete Annodex bitstream, the "meta" elements in a "clip" tag only
   provide meta information for the clip.

6.2 The 'a' element

   The "a" element specifies a link to a related Web resource together
   with some information on that related resource. The "a" element
   definition is very closely related to the xhtml "a" element
   definition with a reduced number of attributes as they make sense for
   time-continuous data.

   <!ELEMENT a (#PCDATA)>
   <!ATTLIST a
     %i18n;
     id          ID             #IMPLIED
     class       CDATA          #IMPLIED
     href        %URI;          #REQUIRED
     >

   The internationalisation attributes specify the language of the
   anchor's attribute values and of the anchor text.

   The "class" attribute allows to override style sheet defaults for
   this anchor instance.

   The "href" attribute specifies the location of a Web resource given
   through a URI. It thus defines a link between the current clip and a
   resource which the author believes to be connected closely to this
   clip's content.  This might be a html page or another Annodex
   bitstream clip or an image etc. An "a" element without a "href"
   attribute is illegal and should be flagged or ignored.

   The text contained in an "a" element (i.e. the anchor text) gives a
   short textual description of the link specified through the "href"
   attribute. It explains why the connection between the current clip
   and the destination URI is made. It may e.g. encourage the viewer to
   follow the link to "Get more information on blah".

6.3 The 'img' element

   The "img" element specifies a link to a representative image for the



Pfeiffer, et al.         Expires June 30, 2004                 [Page 16]

Internet-Draft                    CMML                     December 2003


   clip.  This image should be quite small as it is the representative
   image (known as "keyframe") for the current clip. This image may be
   used to visually summarise the content of the clip when a link to it
   is displayed, e.g. by a search engine or in a table of contents.  The
   "img" element definition is very closely related to the xhtml "img"
   element definition with a reduced number of attributes as they make
   sense for time-continuous data.

   <!ELEMENT img EMPTY>
   <!ATTLIST img
     %i18n;
     id          ID             #IMPLIED
     src         %URI;          #REQUIRED
     alt         CDATA          #IMPLIED
     >

   The "src" attribute specifies the location of an image on the Web
   given through a URI.

   The "alt" attribute specifies alternative text to be displayed
   instead of the image as required e.g. for accessibility.

6.4 The 'desc' element

   The "desc" tag contains a human readable, textual description of the
   content of the clip. The "desc" element is declared as the following:

   <!ELEMENT desc  (#PCDATA)>
   <!ATTLIST desc
     %i18n;
     id          ID       #IMPLIED
   >

   For extracting a short text from the "desc" element as needs to be
   displayed in a table of contents or as caption, the first few
   characters of the description will be taken. It is therefore
   recommended to place a short meaningful summary sentence at the
   beginning of the description when authoring annotations.

   The internationalisation attributes specify the language of the text
   in the description.










Pfeiffer, et al.         Expires June 30, 2004                 [Page 17]

Internet-Draft                    CMML                     December 2003


7. The encoding of CMML to Annodex format bitstreams

   As CMML is an authoring format for Annodex bitstreams, there is a
   simple way to map the annotations and meta information contained in a
   CMML instance document to the annotation bitstream and header fields
   of an Annodex format bitstream. Please be aware that some of the
   encoding rules given here are a MUST, and others a SHOULD. As the
   binary header format for the annotation and media bitstreams provide
   for an extensible list of message header fields, an encoder MAY
   however add some or all of the non-used tags in there and even add
   others. For this section a detailed understanding of the Annodex
   format bitstream [12] is necessary.

   The "head" and "clip" tags of a CMML document are mapped as codec
   data into the annotation bitstream of an Annodex bitstream, where the
   "head" tag is regarded as a secondary header. Thus, the rest of the
   information in a CMML file, i.e. the "stream" tag, the "cmml" tag and
   the preamble information, MUST be handled as binary header type
   information. Header type information in Annodex is generally regarded
   as non-human readable information, therefore by default language and
   directionality information will not be encoded. The character set
   used in the Annodex header fields is UTF-8, but the mandatory header
   fields are all covered by US-ASCII code points and for the optional
   ones it is recommended to do the same as much as possible. User
   defined optional message header fields MUST follow the naming
   standard given in RFC2822.

7.1 Encoding the 'stream' tag

   A CMML instance document contains in its "stream" tag information
   that is relevant to the authoring process of Annodex format
   bitstreams.

   The "stream" tag itself finds no representation in the Annodex
   bitstream. Rather, it contains both, information on the complete
   Annodex bitstream, and information on the different input documents.
   The first is information that finds a representation in the Annodex
   bos page, which is the very first bos page in an Annodex bitstream.
   The second is information used during the encoding process of each
   media bitstream and may find entry into the AnxData bos page of the
   respective media bitstream.

   Here is a list of the attribute values of the "stream" tag and how
   they are being used:

      id: not used, as this attribute is only used to enable addressing
      of the stream tag the XML way (e.g. XPath). It is not relevant for
      the encoded bitstream and will therefore be lost on encoding.



Pfeiffer, et al.         Expires June 30, 2004                 [Page 18]

Internet-Draft                    CMML                     December 2003


      timebase: this attribute MUST be represented in the Annodex bos
      page in the fields "Timebase numerator" and "Timebase
      denominator".

      utc: this attribute MUST be represented in the Annodex bos page in
      the field "utc".

   Here is a list of the attribute values of the "import" tag and how
   they are being used:

      id: this attribute SHOULD be represented in the media bos page of
      the respecitve media bitstream as a message header field with name
      "ID", as it signifies a short identifying machine-readable string
      for the import media bitstream.

      lang, dir: not used, as these attributes signify the language and
      directionality of the human readable texts in the stream tag which
      are not acquired into the Annodex bitstream.

      granulerate: this attribute MUST be represented in the media bos
      page in the fields "Granule rate numerator" and "Granule rate
      denominator". The encoder MUST however ascertain that the values
      are corrected with the exact granule rate that was used during
      creation of the Annodex bitstream.

      contenttype: this attribute MUST be represented in the media bos
      page as a message header field with name "Content-type", as it
      signifies the MIME type of the media bitstream, providing for a
      decoding hint.

      src: not used, as this attribute only points to the location of
      the import media bitstream and is thus pure authoring information.

      start, end: not used, as this attribute only specifies the segment
      of the import media bitstream that is to be used during authoring.

      title: not used, as this attribute provides a human readable
      comment on the import bitstream for authoring purposes.

   Here is a list of the attribute values of the "param" tag list and
   how they are being used:

      id: not used, as this attribute is only used to enable addressing
      of the param tag the XML way (e.g. XPath). It is not relevant for
      the encoded bitstream and will therefore be lost on encoding.

      name, value: these attributes MAY be represented in the media bos
      page of the respecitve media bitstream as a message header field



Pfeiffer, et al.         Expires June 30, 2004                 [Page 19]

Internet-Draft                    CMML                     December 2003


      with the given name-value pair. These are highly dependent on the
      type of media bitstream handled and it therefore depends on the
      encoding tool to make a selection of the parameters acquired. E.g.
      lets regard an audio bitstream containing speech in a specific
      language. This language MAY be identified during CMML authoring as
      a param element with "Content-Language" name, and acquired into
      the media bitstream message header field of the same name.


7.2 Encoding the preamble and the 'cmml' tag

   While the "stream" tag contained meta data on the different input
   media bitstreams, the preamble and the "cmml" tag contain meta data
   on the annotation bitstream and therefore end up in the AnxData bos
   page of the annotation bitstream.

   Here is a list of the attribute values of the preamble and how they
   are being acquired:

      xml version: without loss of generality, for simplicity this is
      fixed to version "1.0" for the current versions of CMML 2.0 and
      Annodex 2.0. Therefore, this attribute does not get represented in
      the Annodex bitstream and MUST be auto recreated during ripping of
      annotations out of the Annodex bitstream.

      xml encoding: this attribute MUST be represented in the annotation
      bos page as a message header field with name "Content-type" and
      the encoding format being the charset value following "text/
      x-cmml;" (or "text/cmml;" after IANA registration of the MIME
      type).

      xml standalone: this is fixed to "yes" for the current versions of
      CMML 2.0 and Annodex 2.0. There is a need to explore how to
      include data of general xml documents that conform to a different
      DTD into CMML and ultimately Annodex. Until then, standalone is
      fixed to "yes" and does not get represented in the Annodex
      bitstream, but MUST be auto recreated during ripping of
      annotations out of it.

      DOCTYPE declaration: this is fixed to <!DOCTYPE cmml SYSTEM
      "cmml.dtd"> and thus again does not get represented in the Annodex
      bitstream but MUST be auto recreated during ripping.

   Here is a list of the attribute values of the "cmml" tag and how they
   are being acquired:

      id: this attribute SHOULD be represented in the bos page of the
      annotation bitstream as a message header field with name "ID", as



Pfeiffer, et al.         Expires June 30, 2004                 [Page 20]

Internet-Draft                    CMML                     December 2003


      it signifies a short identifying machine-readable string for the
      annotation bitstream (in analogy to the id field of the import
      tags).

      lang, dir: these attributes MUST be represented in the bos page of
      the annotation bitstream as message header fields with name
      "Content-Language" and "Content-Dir".

      xmlns: this attribute is fixed to "http://www.annodex.net/cmml"
      and thus does not get represented in the Annodex bitstream but
      must be auto recreated during ripping.


7.3 Encoding the 'head' tag

   The CMML "head" tag is printed as a string into the first secondary
   header page of the annotation bitstream. Thus, the value of the field
   named "number of secondary header pages" in the bos page of the
   annotation bitstream will be 1, unless the "head" tag turns out to be
   too big for one Ogg page (i.e. larger than about 64K).

   Note that the encoding process must ensure that newline characters
   are represented as LF (or "\n" in C) only. As some systems represent
   the new line as CR LF combinations (or "\r\n" in C), the encoding
   process MAY need to strip out the CR character.

7.4 Encoding the 'clip' tags

   The "clip" tags are the real content of an annotation bitstream.
   Their "start" and "end" attributes only exist for authoring purposes
   and are not copied into the annotation bitstream to avoid
   contradictory doubly represented information as their position in the
   stream already represents this timing information.

   A "clip" tag is encoded with all tags (except for the "start" and
   "end" attributes) as a string printed into a clip page in the
   annotation bitstream. The "clip" tag's "start" attribute tells the
   Annodex encoder at what time to insert the clip page into the
   bitstream. Its "end" attribute (if present) leads to the creation of
   another clip page at the given end time in the Annodex bitstream,
   unless another clip page starts on the same track beforehand. This
   clip page contains an empty "clip"	tag, i.e. a "clip" tag without
   "meta", "a", "img" or "desc" elements and no attribute values except
   for a copy of the "track" attribute from the original "clip" tag.

   Again, the encoding process must ensure that newline characters are
   represented as LF (or "\n" in C) only.




Pfeiffer, et al.         Expires June 30, 2004                 [Page 21]

Internet-Draft                    CMML                     December 2003


8. MIME media type registration for 'text/cmml'

   This section contains the registration information for the 'text/
   cmml' media type. While this media type is not approved by the IANA,
   'text/x-cmml' may be used to identify CMML instance documents.

   To: ietf-types@iana.org

   Subject: Registration of MIME media type 'text/cmml'

   MIME media type name: text

   MIME subtype name: cmml

   Required parameters: none

   Optional parameters: charset (as in the text/xml media type [8]).

   Encoding Considerations: as appropriate for the charset and the
   transport mechanism (see text/xml media type [8]).

   Security considerations: see next section.

   Interoperability considerations: CMML is a free specification that is
   independent of any media encoding format. It is designed to provide
   interoperability with existing XML tools and systems. Its
   specification is not patented and can be implemented by third parties
   without patent considerations.

   Additional information:

      Magic numbers: none. However, CMML files start with the XML
      preamble as any XML document [8]) and will also have the string
      '<cmml' near the beginning of the file.

      File extension: .cmml

      Macintosh File Type Code: "TEXT"

      Intended usage: COMMON


8.1 URI addressing into CMML files

   There are two ways of hyperlinking via URIs into CMML files: via
   specification of a temporal interval or via specification of a clip.
   Both of these ways of addressing are supported for URI queries and
   URI fragments on CMML files.



Pfeiffer, et al.         Expires June 30, 2004                 [Page 22]

Internet-Draft                    CMML                     December 2003


8.1.1 Query parameters for use with the http protocol server-side

   For the purposes of URI queries on CMML files, it is assumed that the
   query string takes the format of a CGI query string. The Common
   Gateway Interface, or CGI, is a standard for external gateway
   programs to interface with information servers such as HTTP servers
   (see http://hoohoo.ncsa.uiuc.edu/cgi/). This query string is expected
   to be interpreted by the HTTP server to return a valid CMML file that
   differs from the original CMML file only by reducing the set of clip
   tags to the specified interval.

   Addressing of temporal intervals of CMML files is possible through
   specification of temporal query intervals in URIs [11]. An example is
   the following URI: http://www.blah.au/sample.cmml?t="npt:4" , which
   relates to the last clip whose start time is just before the given
   temporal offset and all the clips thereafter.

   Addressing of a clip is possible through specification of the clip's
   id attribute value. An example is the following URI: http://
   www.blah.au/sample.cmml?id="dolphin" , which relates to the clip
   whose id attribute value is "dolphin". Note that id attribute values
   of all elements have to be unique throughout a XML file (and thus
   also throughout a CMML file).

8.1.2 Fragment identifiers for use with the http protocol client-side

   For the purposes of URI fragment specifications on CMML files, it is
   assumed that the fragment gets interpreted by the HTTP client after
   the retrieval action. The HTTP client is expected to restrict the
   usage of the resource to the specified interval.

   Addressing of temporal intervals of CMML files is possible through
   specification of temporal fragments in URIs [11] An example is the
   following URI: http://www.blah.au/sample.cmml#npt:4 . This then
   relates to the last clip whose start time is just before the given
   temporal offset and all the clips thereafter. This may e.g. be useful
   to do a zoom into a retrieved CMML resource.

   The values of the id attribute of the clip tags can be used for
   addressing media clips directly through fragment identifiers as in
   http://www.blah.au/sample.cmml#dolphin.










Pfeiffer, et al.         Expires June 30, 2004                 [Page 23]

Internet-Draft                    CMML                     December 2003


9. Security considerations

   As CMML is a markup language created by using XML, the same security
   considerations that apply to XML [8], apply to CMML.

   As the CMML is an authoring language for Annodex format bitstreams,
   there is no executable code attached to this language. The
   implementation of a multiplexer to actually create an Annodex
   bitstream must be careful when handling input bitstreams, which are
   binary data.









































Pfeiffer, et al.         Expires June 30, 2004                 [Page 24]

Internet-Draft                    CMML                     December 2003


References

   [1]   World Wide Web Consortium, "Extensible Markup Language (XML)
         1.0", W3C XML, October 2000, <http://www.w3.org/TR/2000/
         REC-xml-20001006>.

   [2]   World Wide Web Consortium, "HTML 4.01 Specification", W3C HTML,
         December 1999, <http://www.w3.org/TR/html4/>.

   [3]   World Wide Web Consortium, "XHTML(TM) 1.0 The Extensible Hyper
         Text Markup Language", W3C XHTML, January 2000, <http://
         www.w3.org/TR/xhtml1/>.

   [4]   Berners-Lee, T., Fielding, R. and L. Masinter, "Uniform
         Resource Identifiers (URI): Generic Syntax", RFC 2396, August
         1998, <http://www.ietf.org/rfc/rfc2396.txt>.

   [5]   Schulzrinne, H., Rao, A. and R. Lanphier, "Real Time Streaming
         Protocol (RTSP)", RFC 2326, April 1998, <Http://www.ietf.org/
         rfc/rfc2326.txt>.

   [6]   Alvestrand, H., "Tags for the Identification of Languages", RFC
         1766, March 1995, <http://www.ietf.org/rfc/rfc1766.txt>.

   [7]   Freed, N. and N. Borenstein, "Multipurpose Internet Mail
         Extensions (MIME) Part One: Format of Internet Message Bodies",
         RFC 2045, November 1996, <http://www.ietf.org/rfc/rfc2045.txt>.

   [8]   Whitehead, E. and M. Murata, "XML Media Types", RFC 2376, July
         1998, <http://www.ietf.org/rfc/rfc2376.txt>.

   [9]   The Society of Motion Picture and Television Engineers, "SMPTE
         STANDARD for Television, Audio and Film - Time and Control
         Code", ANSI 12M-1999, September 1999.

   [10]  ISO, TC154., "Data elements and interchange formats --
         Information interchange -- Representation of dates and times",
         ISO 8601, 2000.

   [11]  Pfeiffer, S., Parker, C. and A. Pang, "Specifying time
         intervals in URI queries and fragments of time-based Web
         resources (BCP) (work in progress)", I-D
         draft-pfeiffer-temporal-fragments-02.txt, December 2003,
         <http://www.annodex.net/TR/URI_fragments.txt>.

   [12]  Pfeiffer, S., Parker, C. and A. Pang, "The Annodex annotation
         and indexing format for time-continuous data files, Version 1.0
         (work in progress)", I-D draft-pfeiffer-annodex-01.txt,



Pfeiffer, et al.         Expires June 30, 2004                 [Page 25]

Internet-Draft                    CMML                     December 2003


         December 2003, <http://www.annodex.net/TR/cmml.txt>.


Authors' Addresses

   Silvia Pfeiffer
   Commonwealth Scientific and Industrial Research Organisation CSIRO, Australia
   Locked Bag 17
   North Ryde, NSW  2113
   Australia

   Phone: +61 2 9325 3141
   EMail: Silvia.Pfeiffer@csiro.au
   URI:   http://www.ict.csiro.au/


   Conrad D. Parker
   Commonwealth Scientific and Industrial Research Organisation CSIRO, Australia
   Locked Bag 17
   North Ryde, NSW  2113
   Australia

   Phone: +61 2 9325 3133
   EMail: Conrad.Parker@csiro.au
   URI:   http://www.ict.csiro.au/


   Andre T. Pang
   Commonwealth Scientific and Industrial Research Organisation CSIRO, Australia
   Locked Bag 17
   North Ryde, NSW  2113
   Australia

   Phone: +61 2 9325 3156
   EMail: Andre.Pang@csiro.au
   URI:   http://www.ict.csiro.au/















Pfeiffer, et al.         Expires June 30, 2004                 [Page 26]

Internet-Draft                    CMML                     December 2003


Appendix A. CMML DTD

   <!--

      Continuous Media Markup Language CMML version 2.0 DTD
      Authoring language for ANNODEX(TM) media.

      Namespace = http://www.annodex.net/cmml

      Copyright (c) 2001
      Commonwealth Scientific and Industrial Research Organisation
      (CSIRO), Australia.
      All Rights Reserved.

      This DTD module is identified by the PUBLIC and SYSTEM identifiers:

      PUBLIC "-//CSIRO//DTD CMML 2.0//EN"
      SYSTEM "http://www.annodex.net/DTD/cmml_2_0.dtd"

      $Revision: 2.0 $
      $Date: 2003/12/06 24:00:00 $
   -->

   <!-- **************************** -->
   <!-- Definition of Imported Names -->
   <!-- **************************** -->

   <!-- media type, as per [RFC2045] -->
   <!ENTITY % ContentType "CDATA">

   <!-- a Uniform Resource Identifier, see [RFC2396] -->
   <!ENTITY % URI "CDATA">

   <!-- a language code, as per [RFC1766] -->
   <!ENTITY % LanguageCode "NMTOKEN">

   <!-- internationalization attributes
     xml:lang    language code (as per XML 1.0 spec)
     dir          direction for weak/neutral text
   -->
   <!ENTITY % i18n
    "lang        %LanguageCode; #IMPLIED
     dir         (ltr|rtl)      #IMPLIED"
     >

   <!-- timestamps similar to [RFC2326]
    "smpte-24:" SMPTE time with a 24 fps basis
    "smpte-24-drop:" SMPTE time with a 24/1.001 fps basis



Pfeiffer, et al.         Expires June 30, 2004                 [Page 27]

Internet-Draft                    CMML                     December 2003


    "smpte-25:" SMPTE time with a 25 fps basis
    "smpte-30:" SMPTE time with a 30 fps basis
    "smpte-30-drop:" SMPTE time with a 30/1.001 fps basis
    "smpte-50:" SMPTE time with a 50 fps basis
    "smpte-60:" SMPTE time with a 60 fps basis
    "smpte-60-drop:" SMPTE time with a 60/1.001 fps basis
    "npt:" npt-time
    "clock:" utc-time

    Playbacktime is specified as a smpte-time
    or npt-time only.

    UTCtime is specified as in [RFC2326], but
    without the "clock" identifier
   -->
   <!ENTITY % Timestamp    "CDATA">
   <!ENTITY % Playbacktime "CDATA">
   <!ENTITY % UTCtime      "CDATA">


   <!-- **************************** -->
   <!-- Document Structure           -->
   <!-- **************************** -->

   <!-- ROOT ELEMENT: -->
   <!-- cmml tag containing sequence of head and a tags -->
   <!-- =============================================== -->
   <!-- i18n  = the default language for the whole document including
                the id tag of the cmml element -->
   <!-- xmlns = namespace of the cmml tags -->
   <!ELEMENT cmml (stream?, head, clip*)>
   <!ATTLIST cmml
     %i18n;
     id          ID             #IMPLIED
     xmlns       %URI;          #FIXED 'http://www.annodex.net/cmml'
     >


   <!-- **************************** -->
   <!-- Definition of stream element -->
   <!-- **************************** -->

   <!-- STREAM tag providing timing information for the ANNODEX file -->
   <!-- (will be stored in the binary headers of the ANX bitstreams) -->
   <!-- ============================================================ -->
   <!-- (has no text attributes and thus no i18n; id tag follows default
         language specified in cmml tag) -->
   <!-- timebase   = base time associated with the first frame of the media



Pfeiffer, et al.         Expires June 30, 2004                 [Page 28]

Internet-Draft                    CMML                     December 2003


                     document from which subsequent time references (such as
                     in clip tags) will be taken relative to -->
   <!-- utc        = a mapping of the first frame to clock time;
                     specifications of utc time offsets into the document as
                     in a URI will be taken relative to this -->
   <!ELEMENT stream (import*)>
   <!ATTLIST stream
     id          ID             #IMPLIED
     timebase    %Playbacktime; "0"
     utc         %UTCtime;      #IMPLIED
     >

   <!-- IMPORT tag giving descriptions on an input bitstream (empty content) -->
   <!-- ==================================================================== -->
   <!-- i18n        = the language of the import tag's and the contained param
                      tags' attribute values -->
   <!-- granulerate = the base temporal resolution of the bitstream (e.g.
                      its framerate for video or samplerate for audio) -->
   <!-- contenttype = encoding format of the input document (a MIME type and
                      a character encoding separated by semicolon) -->
   <!-- src         = URI to the media document -->
   <!-- start       = the start time of the media bitstream specified
                      in src -->
   <!-- end         = the end time of the media bitstream specified
                      in src -->
   <!-- title       = human readable comment on the import bitstream -->
   <!ELEMENT import (param*)>
   <!ATTLIST import
     %i18n;
     id          ID             #IMPLIED
     granulerate CDATA          #IMPLIED
     contenttype %ContentType;  #IMPLIED
     src         %URI;          #REQUIRED
     start       %Timestamp;    "0"
     end         %Timestamp;    #IMPLIED
     title       CDATA          #IMPLIED
     >

   <!-- PARAM description tags of an input bitstream (empty content)   -->
   <!-- (name-value pairs e.g. comments on recording quality or so)    -->
   <!-- ============================================================== -->
   <!-- (internationalisation inherited from the parent import tag)    -->
   <!-- name  = identifies a property name; does not list legal values for this
                attribute -->
   <!-- value = specifies a property's value; does not list legal values for
                  this attribute -->
   <!ELEMENT param EMPTY>
   <!ATTLIST param



Pfeiffer, et al.         Expires June 30, 2004                 [Page 29]

Internet-Draft                    CMML                     December 2003


     id          ID             #IMPLIED
     name        CDATA          #REQUIRED
     value       CDATA          #REQUIRED
     >


   <!-- **************************** -->
   <!-- Definition of document head  -->
   <!-- **************************** -->

   <!-- head tag containing description of a specific media document -->
   <!-- ============================================================ -->
   <!-- i18n    = the base language of the head's attribute values and text
                  content -->
   <!-- profile = space-separated list of URIs to locate meta tag schemes -->
   <!ELEMENT head (meta*,
                   ((title, meta*, (base, meta*)?) |
   		 (base, meta*, (title, meta*)?)))>
   <!ATTLIST head
     %i18n;
     id          ID             #IMPLIED
     profile     %URI;          #IMPLIED
     >

   <!-- TITLE tag giving descriptive title of the media document  -->
   <!-- ========================================================= -->
   <!-- i18n  = the language of the title text -->
   <!ELEMENT title (#PCDATA)>
   <!ATTLIST title
     %i18n;
     id          ID             #IMPLIED
     >

   <!-- BASE URI of the document (empty content) -->
   <!-- ======================================== -->
   <!-- (internationalisation inherited from the parent head tag) -->
   <!-- href = URI associated with the document; all relative URI references
               get interpreted relative to this base -->
   <!ELEMENT base EMPTY>
   <!ATTLIST base
     id          ID             #IMPLIED
     href        %URI;          #REQUIRED
     >

   <!-- META description tags of the document (empty content) -->
   <!-- ===================================================== -->
   <!-- i18n    = the language of the meta attributes -->
   <!-- name    = identifies a property name; does not list legal values for this



Pfeiffer, et al.         Expires June 30, 2004                 [Page 30]

Internet-Draft                    CMML                     December 2003


                  attribute -->
   <!-- content = specifies a property's value; does not list legal values for
                  this attribute -->
   <!-- scheme  = names a scheme to be used to interpret the property's value
                  (see the profiles tag in the head element for locating these) -->
   <!ELEMENT meta EMPTY>
   <!ATTLIST meta
     %i18n;
     id          ID             #IMPLIED
     name        NMTOKEN        #IMPLIED
     content     CDATA          #REQUIRED
     scheme      CDATA          #IMPLIED
     >

   <!-- ************************** -->
   <!-- Definition of clip tags    -->
   <!-- ************************** -->

   <!-- Clip tag containing information for a specific fragment -->
   <!-- ======================================================= -->
   <!-- though meta, a, img and desc are given in specific order
        here, their order is acutally random -->
   <!-- i18n     = the base language of the clip's attribute values and
                   of its content elements -->
   <!-- id       = name of the clip used in URI clip references -->
   <!-- track    = defines different sets of clip tags; clip tags of same
                   type cannot overlap temporally -->
   <!-- start    = specifies the start time of the clip; specified in
                   time relative to the timebase of the header
                   [NOT INCLUDED IN ANNODEX DOCUMENT] -->
   <!-- end      = specifies the end time of the clip; specified in
                   time relative to the timebase of the header
                   [NOT INCLUDED IN ANNODEX DOCUMENT] -->
   <!ELEMENT clip (meta*, a?, img?, desc?)>
   <!ATTLIST clip
     %i18n;
     id          ID             #IMPLIED
     track       CDATA          "default"
     start       %Timestamp;    #REQUIRED
     end         %Timestamp;    #IMPLIED
     >

   <!-- A tag containing information for a specific clip -->
   <!-- ================================================ -->
   <!-- a tag contains anchor text being a textual description of the link
        between the current element (the source anchor) and the destination
        anchor given by the href attribute -->
   <!-- i18n     = language of the anchor's attribute values and anchor text -->



Pfeiffer, et al.         Expires June 30, 2004                 [Page 31]

Internet-Draft                    CMML                     December 2003


   <!-- class    = overriding style sheet defaults for this instance -->
   <!-- href     = specifies the location of a Web resource, thus defining a
                   link between the current element (the source anchor) and the
                   destination anchor given by this attribute -->
   <!ELEMENT a (#PCDATA)>
   <!ATTLIST a
     %i18n;
     id          ID             #IMPLIED
     class       CDATA          #IMPLIED
     href        %URI;          #REQUIRED
     >

   <!-- IMG tag to include a representative image for the clip -->
   <!-- ====================================================== -->
   <!-- i18n = language of the image's attribute values        -->
   <!-- src  = reference to the image                          -->
   <!-- alt  = alternative text for the image (accessibility)  -->
   <!ELEMENT img EMPTY>
   <!ATTLIST img
     %i18n;
     id          ID             #IMPLIED
     src         %URI;          #REQUIRED
     alt         CDATA          #IMPLIED
     >

   <!-- DESC human-readable, textual description of the clip (annotation) -->
   <!-- ================================================================= -->
   <!-- i18n = language of the data in the description -->
   <!ELEMENT desc (#PCDATA)>
   <!ATTLIST desc
     %i18n;
     id          ID             #IMPLIED
     >


















Pfeiffer, et al.         Expires June 30, 2004                 [Page 32]

Internet-Draft                    CMML                     December 2003


Appendix B. An example CMML document

   <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
   <!DOCTYPE cmml SYSTEM "cmml.dtd">

   <cmml lang="en">

   <stream timebase="0">
     <import contenttype="video/mpeg" src="fish.mpg" start="0"/>
   </stream>

   <head>
     <title>Types of fish</title>
     <meta name="Producer" content="Joe Ordinary"/>
     <meta name="DC.Author" content="Joe's friend"/>
   </head>

   <clip id="intro" start="0">
     <a href="http://www.blah.au/fish.html">Read more about fish</a>
     <desc>This is the introduction to the film Joe made about fish.</desc>
   </clip>

   <clip id="dolphin" start="npt:3.5" end="npt:5:5.9">
     <img src="dolphin.jpg"/>
     <desc>Here, Joe caught sight of a dolphin in the ocean.</desc>
     <meta name="Subject" content="dolphin"/>
   </clip>

   <clip id="goldfish" start="npt:5:5.9">
     <a href="http://www.blah.au/morefish.anx?id=goldfish">More video clips on goldfish.</a>
     <img src="http://www.blah.au/goldfish.jpg"/>
     <desc>Joe has a fishtank at home with many colourful fish. The common goldfish is one of them and Joe's favourite. Here are some fabulous pictures he has taken of them.</desc>
     <meta name="Location" content="Joe's fishtank"/>
     <meta name="Subject" content="goldfish"/>
   </clip>

   </cmml>














Pfeiffer, et al.         Expires June 30, 2004                 [Page 33]

Internet-Draft                    CMML                     December 2003


Appendix C. Definitions of terms and abbreviations

   Mark-up: XML tags and their content used to describe a document.

   Annotating: The task of authoring mark-up for a document thus
      creating a Web resources.

   Hyperlinking: The task of linking from one Web resource to another.
      When a link contains a fragment offset into a resource, this is
      called "deep hyperlinking".

   Clip: A section of a time-continuous document covering some temporal
      interval.

   Indexing: The task of identifying index points or clips for
      time-continuous documents.

   Annotation track: A set of clips representing semantically correlated
      annotations of a time-continuous resource.

   Annodex bitstream: A specific file format for storing annotation,
      hyperlinking, and indexing information in annotation tracks and
      multiplexed together with the time-continuous documents they
      describe.

   Bitstream: A sequence of data containing samples of a time-continous
      document.

   Time-continuous document: A file containing time-sampled data in a
      temporally sequential manner.





















Pfeiffer, et al.         Expires June 30, 2004                 [Page 34]

Internet-Draft                    CMML                     December 2003


Appendix D. Glossary of acronyms

   Annodex: Annotated and indexed bitstream format.

   CMML: Continuous Media Markup Language.

   DTD: Document Type Declaration.

   XML: eXtensible Markup Language.

   Web: World Wide Web.

   URI: Unified Resource Identifier.






































Pfeiffer, et al.         Expires June 30, 2004                 [Page 35]

Internet-Draft                    CMML                     December 2003


Appendix E. Acknowledgements

   The authors greatly acknowledge the contributions of Zentaro
   Kavanagh, Andrew Nesbit and Simon Lai in developing this
   specification.














































Pfeiffer, et al.         Expires June 30, 2004                 [Page 36]

Internet-Draft                    CMML                     December 2003


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights. Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11. Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard. Please address the information to the IETF Executive
   Director.


Full Copyright Statement

   Copyright (C) The Internet Society (2003). All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works. However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assignees.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION



Pfeiffer, et al.         Expires June 30, 2004                 [Page 37]

Internet-Draft                    CMML                     December 2003


   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.











































Pfeiffer, et al.         Expires June 30, 2004                 [Page 38]

