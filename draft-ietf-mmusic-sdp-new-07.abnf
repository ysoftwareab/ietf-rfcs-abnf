v=  (protocol version)
o=  (owner/creator and session identifier).
s=  (session name)
i=* (session information)
u=* (URI of description)
e=* (email address)
p=* (phone number)
c=* (connection information - not required if included in all media)
b=* (bandwidth information)
             One or more time descriptions (see below)
z=* (time zone adjustments)
k=* (encryption key)
a=* (zero or more session attribute lines)
             Zero or more media descriptions (see below)

t=  (time the session is active)
r=* (zero or more repeat times)

m=  (media name and transport address)
i=* (media title)
c=* (connection information - optional if included at session-level)
b=* (bandwidth information)
k=* (encryption key)
a=* (zero or more media attribute lines)

v=0
o=mhandley 2890844526 2890842807 IN IP4 126.16.64.4
s=SDP Seminar
i=A Seminar on the session description protocol
u=http://www.cs.ucl.ac.uk/staff/M.Handley/sdp.03.ps
e=mjh@isi.edu (Mark Handley)
c=IN IP4 224.2.17.12/127
t=2873397496 2873404696
a=recvonly
m=audio 49170 RTP/AVP 0
m=video 51372 RTP/AVP 31
m=application 32416 udp wb
a=orient:portrait


v=0

o=<username> <session id> <version> <network type> <address type>
s=<session name>

i=<session description>

u=<URI>


e=<email address>
p=<phone number>


p=+44-171-380-7777    or    p=+1 617 253 6011

e=mjh@isi.edu (Mark Handley)

e=Mark Handley <mjh@isi.edu>

c=<network type> <address type> <connection address>

c=IN IP4 224.2.36.42/127


c=IN IP4 224.2.1.1/127/3

c=IN IP4 224.2.1.1/127
c=IN IP4 224.2.1.2/127
c=IN IP4 224.2.1.3/127

c=IN IP6 FF15::101/3

c=IN IP6 FF15::101
c=IN IP6 FF15::102
c=IN IP6 FF15::103

b=<modifier>:<bandwidth-value>


b=X-YZ:128

t=<start time>  <stop time>

r=<repeat interval> <active duration> <list of offsets from start-time>

t=3034423619 3042462419
r=604800 3600 0 90000


r=7d 1h 0 25h

z=<adjustment time> <offset> <adjustment time> <offset> ....

z=2882844526 -1h 2898848070 0

k=<method>
k=<method>:<encryption key>
k=clear:<encryption key>
        The encryption key (as described in [3] for RTP media streams
        under the AV profile) is included untransformed in this key
        field.

k=base64:<encoded encryption key>
        The encryption key (as described in [3] for RTP media streams
        under the AV profile) is included in this key field but has been
        base64 encoded because it includes characters that are
        prohibited in SDP.

k=uri:<URI to obtain key>
        A Universal Resource Identifier as used by WWW clients is
        included in this key field.  The URI refers to the data
        containing the key, and may require additional authentication
        before the key can be returned.  When a request is made to the
        given URI, the MIME content-type of the reply specifies the
        encoding for the key in the reply.  The key should not be
        obtained until the user wishes to join the session to reduce
        synchronisation of requests to the WWW server(s).

k=prompt
        No key is included in this SDP description, but the session or
        media stream referred to by this key field is encrypted.  The
        user should be prompted for the key when attempting to join the
        session, and this user-supplied key should then be used to
        decrypt the media streams.

a=<attribute>
a=<attribute>:<value>

m=<media>  <port>  <transport> <fmt list>
m=<media> <port>/<number of ports> <transport> <fmt list>

m=video 49170/2 RTP/AVP 31

c=IN IP4 224.2.1.1/127/2
m=video 49170/2 RTP/AVP 31

m=audio 49232 RTP/AVP 0

m=video 49232 RTP/AVP 98
a=rtpmap:98 L16/16000/2

a=rtpmap:<payload type> <encoding name>/<clock rate>[/<encoding parameters>]

m=audio 49230 RTP/AVP 96 97 98
a=rtpmap:96 L8/8000
a=rtpmap:97 L16/8000
a=rtpmap:98 L16/11025/2


m=audio 49232 RTP/AVP 99
a=rtpmap:99 X-GSMLPC/8000

a=cat:<category>
    This attribute gives the dot-separated hierarchical category of the
    session.  This is to enable a receiver to filter unwanted sessions
    by category.  It would probably have been a compulsory separate
    field, except for its experimental nature at this time.  It is a
    session-level attribute, and is not dependent on charset.

a=keywds:<keywords>
    Like the cat attribute, this is to assist identifying wanted
    sessions at the receiver.  This allows a receiver to select
    interesting session based on keywords describing the purpose of the
    session.  It is a session-level attribute. It is a charset dependent
    attribute, meaning that its value should be interpreted in the
    charset specified for the session description if one is specified,
    or by default in ISO 10646/UTF-8.

a=tool:<name and version of tool>
    This gives the name and version number of the tool used to create
    the session description.  It is a session-level attribute, and is
    not dependent on charset.

a=ptime:<packet time>
    This gives the length of time in milliseconds represented by the
    media in a packet. This is probably only meaningful for audio data.
    It should not be necessary to know ptime to decode RTP or vat audio,
    and it is intended as a recommendation for the
    encoding/packetisation of audio.  It is a media attribute, and is
    not dependent on charset.

a=maxptime:<maximum packet time>
    The maximum amount of media which can be encapsulated in each
    packet, expressed as time in milliseconds. The time shall be
    calculated as the sum of the time the media present in the packet
    represents. The time SHOULD be a multiple of the frame size. This is
    probably only meaningful for audio data. It is a media attribute,
    and is not dependent on charset.  Note that this attribute was
    introduced after RFC 2327, and non updated implementations will
    ignore this attribute.

a=rtpmap:<payload type> <encoding name>/<clock rate>[/<encoding
    parameters>]
    See the section on Media Announcements (the ``m='' field). This may
    be either a session or media attribute.

a=recvonly
    This specifies that the tools should be started in receive-only mode
    where applicable. It can be either a session or media attribute, and
    is not dependent on charset. Note that recvonly applies to the media
    only, not to any associated control protocol (e.g. an RTP based
    system in recvonly mode SHOULD still send RTCP packets).
a=sendrecv
    This specifies that the tools should be started in send and receive
    mode.  This is necessary for interactive conferences with tools such
    as wb which defaults to receive only mode. It can be either a
    session or media attribute, and is not dependent on charset.

a=sendonly
    This specifies that the tools should be started in send-only mode.
    An example may be where a different unicast address is to be used
    for a traffic destination than for a traffic source. In such a case,
    two media descriptions may be use, one sendonly and one recvonly. It
    can be either a session or media attribute, but would normally only
    be used as a media attribute, and is not dependent on charset. Note
    that sendonly applies only to the media, and any associated control
    protocol (e.g. RTCP) SHOULD still be received and processed as
    normal.

a=inactive
    This specifies that the tools should be started in inactive mode.
    This is necessary for interactive conferences where users can put
    other users on hold. No media is sent over an inactive media stream.
    Note that an RTP based system SHOULD still send RTCP, even if
    started inactive. It can be either a session or media attribute, and
    is not dependent on charset.

a=orient:<whiteboard orientation>
    Normally this is only used in a whiteboard media specification. It
    specifies the orientation of a the whiteboard on the screen.  It is
    a media attribute.  Permitted values are `portrait', `landscape' and
    `seascape' (upside down landscape). It is not dependent on charset

a=type:<conference type>
    This specifies the type of the conference.  Suggested values are
    `broadcast', `meeting', `moderated', `test' and `H332'.  `recvonly'
    should be the default for `type:broadcast' sessions, `type:meeting'
    should imply `sendrecv' and `type:moderated' should indicate the use
    of a floor control tool and that the media tools are started so as
    to ``mute'' new sites joining the conference.

    Specifying the attribute type:H332 indicates that this loosely
    coupled session is part of a H.332 session as defined in the ITU
    H.332 specification [10].  Media tools should be started `recvonly'.

    Specifying the attribute type:test is suggested as a hint that,
    unless explicitly requested otherwise, receivers can safely avoid
    displaying this session description to users.

    The type attribute is a session-level attribute, and is not
    dependent on charset.


a=charset:<character set>
    This specifies the character set to be used to display the session
    name and information data.  By default, the ISO-10646 character set
    in UTF-8 encoding is used.  If a more compact representation is
    required, other character sets may be used such as ISO-8859-1 for
    Northern European languages.  In particular, the ISO 8859-1 is
    specified with the following SDP attribute:

a=charset:ISO-8859-1

a=sdplang:<language tag>
    This can be a session level attribute or a media level attribute.
    As a session level attribute, it specifies the language for the
    session description.  As a media level attribute, it specifies the
    language for any media-level SDP information field associated with
    that media.  Multiple sdplang attributes can be provided either at
    session or media level if multiple languages in the session
    description or media use multiple languages, in which case the order
    of the attributes indicates the order of importance of the various
    languages in the session or media from most important to least
    important.

    In general, sending session descriptions consisting of multiple
    languages should be discouraged.  Instead, multiple descriptions
    should be sent describing the session, one in each language.
    However this is not possible with all transport mechanisms, and so
    multiple sdplang attributes are allowed although not recommended.

    The sdplang attribute value must be a single RFC 1766 language tag
    in US-ASCII.  It is not dependent on the charset attribute.  An
    sdplang attribute SHOULD be specified when a session is of
    sufficient scope to cross geographic boundaries where the language
    of recipients cannot be assumed, or where the session is in a
    different language from the locally assumed norm.


a=lang:<language tag>
    This can be a session level attribute or a media level attribute.
    As a session level attribute, it specifies the default language for
    the session being described.  As a media level attribute, it
    specifies the language for that media, overriding any session-level
    language specified.  Multiple lang attributes can be provided either
    at session or media level if multiple languages if the session
    description or media use multiple languages, in which case the order
    of the attributes indicates the order of importance of the various
    languages in the session or media from most important to least
    important.

    The lang attribute value must be a single RFC 1766 language tag in
    US-ASCII.  It is not dependent on the charset attribute.  A lang
    attribute SHOULD be specified when a session is of sufficient scope
    to cross geographic boundaries where the language of recipients
    cannot be assumed, or where the session is in a different language
    from the locally assumed norm.


a=framerate:<frame rate>
    This gives the maximum video frame rate in frames/sec.  It is
    intended as a recommendation for the encoding of video data.
    Decimal representations of fractional values using the notation
    "<integer>.<fraction>" are allowed.  It is a media attribute, is
    only defined for video media, and is not dependent on charset.


a=quality:<quality>
    This gives a suggestion for the quality of the encoding as an
    integer value.

    The intention of the quality attribute for video is to specify a
    non-default trade-off between frame-rate and still-image quality.
    For video, the value in the range 0 to 10, with the following
    suggested meaning:

    10  - the best still-image quality the compression scheme can give.

    5   - the default behaviour given no quality suggestion.

    0   - the worst still-image quality the codec designer thinks is
        still usable.
    It is a media attribute, and is not dependent on charset.


a=fmtp:<format> <format specific parameters>
    This attribute allows parameters that are specific to a particular
    format to be conveyed in a way that SDP doesn't have to understand
    them.  The format must be one of the formats specified for the
    media.  Format-specific parameters may be any set of parameters
    required to be conveyed by SDP and given unchanged to the media tool
    that will use this format.

    It is a media attribute, and is not dependent on charset.

a=type:moderated

c=IN IP4 224.5.6.7
a=type:H332
m=audio 49230 RTP/AVP 0
m=video 49232 RTP/AVP 31
m=application 12349 udp wb
m=control 49234 H323 mc
c=IN IP4 134.134.157.81

announcement =        proto-version
                      origin-field
                      session-name-field
                      information-field
                      uri-field
                      email-fields
                      phone-fields
                      connection-field
                      bandwidth-fields
                      time-fields
                      key-field
                      attribute-fields
                      media-descriptions


proto-version =       "v=" 1*DIGIT CRLF
                      ;this memo describes version 0


origin-field =        "o=" username SP sess-id SP sess-version SP
                      nettype SP addrtype SP unicast-address CRLF


session-name-field =  "s=" text CRLF


information-field =   ["i=" text CRLF]


uri-field =           ["u=" uri CRLF]


email-fields =        *("e=" email-address CRLF)


phone-fields =        *("p=" phone-number CRLF)
connection-field =    ["c=" nettype SP addrtype SP
                      connection-address CRLF]
                      ;a connection field must be present
                      ;in every media description or at the
                      ;session-level


bandwidth-fields =    *("b=" bwtype ":" bandwidth CRLF)


time-fields =         1*( "t=" start-time SP stop-time
                      *(CRLF repeat-fields) CRLF)
                      [zone-adjustments CRLF]


repeat-fields =       "r=" repeat-interval SP typed-time
                      1*(SP typed-time)


zone-adjustments =    "z=" time SP ["-"] typed-time
                      *(SP time SP ["-"] typed-time)


key-field =           ["k=" key-type CRLF]


attribute-fields =    *("a=" attribute CRLF)


media-descriptions =  *( media-field
                      information-field
                      *connection-field
                      bandwidth-fields
                      key-field
                      attribute-fields )


media-field =         "m=" media SP port ["/" integer]
                      SP proto 1*(SP fmt) CRLF


username =            non-ws-string
                      ;pretty wide definition, but doesn't include space
sess-id =             1*DIGIT
                      ;should be unique for this originating username/host


sess-version =        1*DIGIT
                      ;0 is a new session


nettype =             token
                      ;typically "IN"


addrtype =            token
                      ;typically "IP4" or "IP6"


uri =                 URI-reference; defined in RFC1630 and RFC2732


email-address =       email *SP "(" 1*email-safe ")" /
                      1*email-safe "<" email ">" /
                      email


email =               addr-spec ; defined in RFC2822
                                ; modified to remove CFWS


phone-number =        phone *SP "(" 1*email-safe ")" /
                      1*email-safe "<" phone ">" /
                      phone


phone =               "+" POS-DIGIT 1*(SP / "-" / DIGIT)
                      ;there must be a space or hyphen between the
                      ;international code and the rest of the number.

                      ; Should this use the tel: URL syntax?


connection-address =  multicast-address / unicast-address
bwtype =              token


bandwidth =           1*DIGIT


start-time =          time / "0"


stop-time =           time / "0"


time =                POS-DIGIT 9*DIGIT
                      ; 10-digit NTP time represents times between
                      ; 1931 and 5068 AD.  9* allows times after that
                      ; as well.


repeat-interval =     typed-time


typed-time =          POS-DIGIT *DIGIT [fixed-len-time-unit]


fixed-len-time-unit = "d" / "h" / "m" / "s"


key-type =            "prompt" /
                      "clear:" text /
                      "base64:" base64 /
                      "uri:" uri /
                      key-method [ ":" text ]


base64      =         *base64-unit [base64-pad]
base64-unit =         4base64-char
base64-pad  =         2base64-char "==" / 3base64-char "="
base64-char =         ALPHA / DIGIT / "+" / "/"


key-method =          token
attribute =           (att-field ":" att-value) / att-field


att-field =           token


att-value =           byte-string


media =               token
                      ;typically "audio", "video", "application"
                      ;or "data"


fmt =                 token
                      ;typically an RTP payload type for audio
                      ;and video media


proto  =              token "/" token
                      / token
                      ;typically "RTP/AVP" or "udp" for IP4


port =                1*DIGIT
                      ;should in the range "1024" to "65535" inclusive
                      ;for UDP based media


unicast-address =     IP4-address / IP6-address / FQDN / extension-addr


multicast-address =   IP4-multicast / IP6-multicast

IP4-multicast =       m1 3*( "." decimal-uchar )
                      "/" ttl [ "/" integer ]
                      ; IPv4 multicast addresses may be in the
                      ; range 224.0.0.0 to 239.255.255.255

m1 =                  ("22" ("4"/"5"/"6"/"7"/"8"/"9")) /
                      ("23" DIGIT ))

IP6-multicast =       hexpart [ "/" integer ]
                      ; IPv6 address starting with FF
ttl =                 (POS-DIGIT *2DIGIT) / "0"


FQDN =                4*(alpha-numeric / "-" / ".")
                      ; fully qualified domain name as specified
                      ; in RFC1035


IP4-address =         b1 3*("." decimal-uchar) / "0.0.0.0"

b1 =                  decimal-uchar
                      ; less than "224"; not "0" or "127"

IP6-address =         hexpart [ ":" IP4-address ]

hexpart =             hexseq / hexseq "::" [ hexseq ] /
                      "::" [ hexseq ]

hexseq  =             hex4 *( ":" hex4)

hex4    =             1*4HEXDIG


extension-addr =      non-ws-string


text =                byte-string
                      ;default is to interpret this as IS0-10646 UTF8
                      ;ISO 8859-1 requires a "a=charset:ISO-8859-1"
                      ;session-level attribute to be used


byte-string =         1*(%x01-09/%x0B-0C/%x0E-FF)
                      ;any byte except NUL, CR or LF


non-ws-string =       1*(VCHAR/%x80-FF)
                      ;string of visible US-ASCII, or high-bit, characters
token-char =          %x21/%x23-27/%x2A-2B/%x2D-2E/%x30-39/%x41-5A/%x5E-7E
                      ; definition from RFC 2045 -
                      ; "any (US-ASCII) CHAR except SPACE, CTLs,
                      ; or tspecials".
                      ; the tspecials are ()<>@,;:


token =               1*(token-char)


email-safe =          1*(%x01-09/%x0B-0C/%x0E-27/
                         %x2A-3B/%x3D/%x3E-FF)
                      ;any byte except NUL, CR, LF, or the quoting
                      ;characters ()<>


integer =             POS-DIGIT *DIGIT


alpha-numeric =       ALPHA / DIGIT


POS-DIGIT =           %x31-39 ; 1 - 9


