



SIMPLE WG                                                    M. Lonnfors
Internet-Draft                                                  A. Niemi
Expires: August 25, 2005                           Nokia Research Center
                                                             E. Leppanen
                                                                   Nokia
                                                       February 21, 2005


              Partial Publication of Presence Information
                  draft-ietf-simple-partial-publish-02

Status of this Memo

   This document is an Internet-Draft and is subject to all provisions
   of Section 3 of RFC 3667.  By submitting this Internet-Draft, each
   author represents that any applicable patent or other IPR claims of
   which he or she is aware have been or will be disclosed, and any of
   which he or she become aware will be disclosed, in accordance with
   RFC 3668.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as
   Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on August 25, 2005.

Copyright Notice

   Copyright (C) The Internet Society (2005).

Abstract

   Session Initiation Protocol (SIP) Extension for Event State
   Publication describes a mechanism with which a presence user agent is
   able to publish presence information to a presence agent.  Using the
   Presence Information Data Format (PIDF), each presence publication



Lonnfors, et al.         Expires August 25, 2005                [Page 1]

Internet-Draft             Partial Publication             February 2005


   contains full state, regardless of how much of that information has
   actually changed since the previous update.  As a consequence,
   updating a sizeable presence document with small changes bear a
   considerable overhead and is therefore inefficient.  Especially with
   low bandwidth and high latency links, this can constitue a
   considerable burden to the system.  This memo defines a solution that
   aids in reducing the impact of those constraints and increases
   transport efficiency by introducing a mechanism that allows for
   publication of partial presence information.

Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Definitions and Document Conventions . . . . . . . . . . . . .  3
   3.  Overall Operation  . . . . . . . . . . . . . . . . . . . . . .  3
     3.1   Presence Publication . . . . . . . . . . . . . . . . . . .  4
     3.2   Partial Presence Publication . . . . . . . . . . . . . . .  4
   4.  Client and Server Operation  . . . . . . . . . . . . . . . . .  5
     4.1   Content-type for Partial Publications  . . . . . . . . . .  5
     4.2   Generation of Partial Publications . . . . . . . . . . . .  5
     4.3   Processing of Partial Publications . . . . . . . . . . . .  6
   5.  Security Considerations  . . . . . . . . . . . . . . . . . . .  6
   6.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . .  7
   7.  References . . . . . . . . . . . . . . . . . . . . . . . . . .  7
     7.1   Normative references . . . . . . . . . . . . . . . . . . .  7
     7.2   Informative references . . . . . . . . . . . . . . . . . .  7
       Authors' Addresses . . . . . . . . . . . . . . . . . . . . . .  8
       Intellectual Property and Copyright Statements . . . . . . . .  9























Lonnfors, et al.         Expires August 25, 2005                [Page 2]

Internet-Draft             Partial Publication             February 2005


1.  Introduction

   Session Initiation Protocol (SIP) Extension for Event State
   Publication [2] allows Presence User Agents ('PUA') to publish
   presence information of a user ('presentity').  The Presence Agent
   ('PA') collects publications from one or several presence user
   agents, and generates the composite event state of the presentity.

   The baseline format for presence information is defined in the
   Presence Information Data Format (PIDF) [3] and is by default used in
   presence publication.  The PIDF uses Extensible Markup Language (XML)
   [12], and groups data into elements called tuples.  In addition, [8],
   [9], [10], and [11] define extension elements that provide various
   additional features to PIDF.

   Presence publication by default uses the PIDF document format, and
   each publication contains full state regardless of how much of the
   presence information has actually changed since the previous update.
   As a consequence, updating a sizeable presence document especially
   with small changes bears a considerable overhead and is therefore
   inefficient.  Publication of information over low bandwidth and high
   latency links further exacerbates this inefficiency.

   This memo specifies a mechanism with which the PUA is able to publish
   only those parts of the presence document that have changed since the
   previous update.  This is accomplished using the partial PIDF format
   [5].

2.  Definitions and Document Conventions

   In this document, the key words "MUST", "MUST NOT", "REQUIRED",
   "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
   and "OPTIONAL" are to be interpreted as described in RFC 2119 [1]and
   indicate requirement levels for compliant implementations.

   This document makes use of the vocabulary defined in RFC 2778 [6],
   the Event State Publication Extension to SIP [2], and PIDF Extension
   for Partial Presence [5].

3.  Overall Operation

   This section introduces the baseline functionality for presence
   publication, and gives an overview of the partial publication
   mechanism.  This section is informational in nature.  It does not
   contain any normative statements.






Lonnfors, et al.         Expires August 25, 2005                [Page 3]

Internet-Draft             Partial Publication             February 2005


3.1  Presence Publication

   Event state publication is specified in [2].

   The publication of presence information consists of a presence user
   agent sending a PUBLISH request targeted to the address-of-record of
   the presentity, and serviced by a presence agent or compositor.  The
   body of the PUBLISH request carries full event state in the form of a
   presence document.

   The compositor processes the PUBLISH request and stores the presence
   information.  It also assigns an entity-tag that is used to identify
   the publication.  This entity-tag is returned to the PUA in the
   response to the PUBLISH request.

   The PUA uses the entity-tag in the following PUBLISH request for
   identifying the publication that the request is meant to refresh,
   modify or remove.  Presence information is stored in an initial
   publication, and maintained using the refreshing and modifying
   publications.  Presence information disappears either by expilicitly
   removing it or when it meets its expiration time.

3.2  Partial Presence Publication

   The partial publication mechanism enables the PUA to update only
   parts of its presence information, namely those sections of the
   presence document that have changed.  The initial publication always
   carries full state.  However, modifying publications that update the
   initial presence state only carry partial state.  Versioning of the
   partial publications guarantees that the changes are applied in the
   correct order.  Even though the PUBLISH mechanism in itself already
   accomplishes this using entity-tags, versioning is important in case
   the updates traverse a gateway into a system without such guarantees.

   To initialize its publications, the PUA first publishes a full state
   initial publication using the PIDF document format.  The consequent
   updates result in the publication of partial presence state, using
   the 'application/pidf-partial+xml' content type [5].  The partial
   state may contain operations for adding new elements or attributes
   (<add> elements), replacing elements or attributes whose content has
   changed (<replace> elements) , and it may also indicate removal of
   certain elements or attributes (<remove> elements).  The PUA is free
   to decide the granularity in which changes in presence information
   are reported to the composer.

   When the presence composer receives a partial publication it performs
   the included operations in sequence.  The resulting changed presence
   document is then submitted to the composition logic in the same



Lonnfors, et al.         Expires August 25, 2005                [Page 4]

Internet-Draft             Partial Publication             February 2005


   manner as with a full state presence publication.

4.  Client and Server Operation

   Unless otherwise specified in this document, the presence user agent
   and presence agent behavior are as defined in the Event State
   Publication Extension to SIP [2].

4.1  Content-type for Partial Publications

   The entities supporting the partial publication extension described
   in this document MUST support the 'application/pidf-diff+xml' content
   type defined in the partial PIDF format [5] in addition to the
   baseline 'application/pidf+xml' content type defined in [3].

4.2  Generation of Partial Publications

   Whenever a PUA decides to begin publication of presence information,
   it first needs to make an initial publication.  After the initial
   publication, presence information can be updated using modifying
   publications, using the partial presence document format [5].
   Finally, the publication can be terminated by explicit removal, or by
   expiration.

   To construct an initial publication, the PUA uses the following
   logic:

   o  The Content-Type header field in the PUBLISH request MUST be set
      to the value 'application/pidf+xml'

   o  The body of the request is populated with a PIDF document
      containing the full state of which the PUA is aware.

   o  The version number local to the PUA MUST be initialized, i.e., set
      to zero.

   To construct a modifying PUBLISH request the following logic is
   followed:

   o  The Content-Type header field in the PUBLISH request MUST be set
      to the value 'application/pidf-diff+xml'

   o  The local version value MUST be incremented by one, and the
      "version" attribute is set to that value.

   o  The "entity" attribute MUST be set to the same value as in the
      initial publication.




Lonnfors, et al.         Expires August 25, 2005                [Page 5]

Internet-Draft             Partial Publication             February 2005


   o  The changes to the presentity's presence information MUST be
      constructed into operations in sequence, as defined in the partial
      PIDF format [5].

   The PUA is free to decide the granularity by which changes in the
   presentity's presence information are reported to the presence
   compositor.  In order to reduce unnecessary network traffic, the PUA
   SHOULD be able to batch several partial publications together.  For
   example, a reasonable granularity would be to batch events related to
   a single UI event together in a single PUBLISH request.

   If a modifying publication carrying partial presence information is
   not understood by the presence composer, it will reject the request
   with a 415 (Unsupported Media Type).  If the PUA receives a 415
   reponse, it MUST fall back to full state presence updates.  To find
   out whether a specific presence compositor supports partial presence
   publication, the PUA MAY use the OPTIONS method, as described in [4].

4.3  Processing of Partial Publications

   Processing of publications generally follows the guidelines set in
   [2].  In addition, processing modifying PUBLISH requests, the
   following logic is followed:

   o  If the value of the Content-Type header field is
      'application/pidf-diff+xml', the publication is partial, and the
      next steps apply.

   o  The compositor MUST apply the partial publication operations in
      sequence against its locally stored presence information.

   o  If any errors are encountered before the entire partial
      publication is completely processed, including all of the
      operations in the 'application/pidf-diff+xml' body, the compositor
      MUST reject the request with a 500 (Server Internal Error)
      response, and revert back to its original, locally stored presence
      information.


5.  Security Considerations

   This specification relies on protocol behavior defined in [2].
   General event state publication related security considerations are
   extensively discussed in that specification and all the identified
   security considerations apply to this document in entirety.  In
   addition, this specification adds no new security considerations.





Lonnfors, et al.         Expires August 25, 2005                [Page 6]

Internet-Draft             Partial Publication             February 2005


6.  Acknowledgements

   The authors would like to thank Atle Monrad, Christian Schmidt and
   George Foti for review comments.

7.  References

7.1  Normative references

   [1]  Bradner, S., "Key words for use in RFCs to Indicate Requirement
        Levels", BCP 14, RFC 2119, March 1997.

   [2]  Niemi, A., "Session Initiation Protocol (SIP) Extension for
        Event State Publication", RFC 3903, October 2004.

   [3]  Sugano, H., Fujimoto, S., Klyne, G., Bateman, A., Carr, W. and
        J. Peterson, "Presence Information Data Format (PIDF)",
        RFC 3863, August 2004.

   [4]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A.,
        Peterson, J., Sparks, R., Handley, M. and E. Schooler, "SIP:
        Session Initiation Protocol", RFC 3261, June 2002.

   [5]  Lonnfors, M., Leppanen, E., Khartabil, H. and J. Urpalainen,
        "Presence Information Data format (PIDF) Extension for Partial
        Presence",
        Internet-Draft draft-ietf-simple-partial-pidf-format-03,
        February 2005.

7.2  Informative references

   [6]   Day, M., Rosenberg, J. and H. Sugano, "A Model for Presence and
         Instant Messaging", RFC 2778, February 2000.

   [7]   Campbell, B., "SIMPLE Presence Publication Requirements",
         Internet-Draft draft-ietf-simple-publish-reqs-00, February
         2003.

   [8]   Rosenberg, J., "A Data Model for Presence",
         Internet-Draft draft-ietf-simple-presence-data-model-01,
         October 2004.

   [9]   Schulzrinne, H., Gurbani, V., Kyzivat, P. and J. Rosenberg,
         "RPID: Rich Presence: Extensions to the Presence Information
         Data Format  (PIDF)", Internet-Draft draft-ietf-simple-rpid-04,
         October 2004.

   [10]  Schulzrinne, H., "CIPID: Contact Information in Presence



Lonnfors, et al.         Expires August 25, 2005                [Page 7]

Internet-Draft             Partial Publication             February 2005


         Information Data Format",
         Internet-Draft draft-ietf-simple-cipid-03, July 2004.

   [11]  Lonnfors, M. and K. Kiss, "User Agent Capability Extension to
         Presence Information Data Format(PIDF)",
         Internet-Draft draft-ietf-simple-prescaps-ext-02, October 2004.

   [12]  Bray, T., Paoli, J., Sperberg-McQueen, C. and E. Maler,
         "Extensible Markup Language (XML) 1.0 (2nd ed)", W3C REC-xml,
         October 2000, <http://www.w3.org/TR/REC-xml>.


Authors' Addresses

   Mikko Lonnfors
   Nokia Research Center
   Itamerenkatu 11-13
   Helsinki
   Finland

   Phone: +358 71 8008000
   Email: mikko.lonnfors@nokia.com


   Aki Niemi
   Nokia Research Center
   P.O. Box 407
   NOKIA GROUP, FIN 00045
   Finland

   Phone: +358 50 389 1644
   Email: aki.niemi@nokia.com


   Eva Leppanen
   Nokia
   P.O BOX 785
   Tampere
   Finland

   Email: eva-maria.leppanen@nokia.com










Lonnfors, et al.         Expires August 25, 2005                [Page 8]

Internet-Draft             Partial Publication             February 2005


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Disclaimer of Validity

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Copyright Statement

   Copyright (C) The Internet Society (2005).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.




Lonnfors, et al.         Expires August 25, 2005                [Page 9]


