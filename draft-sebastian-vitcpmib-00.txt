

Network Working Group                                       B. Sebastian
Internet-Draft                                             Giganet, Inc.
<draft-sebastian-vitcpmib-00.txt>                      November 15, 2000
Expires May 2001

                  Virtual Interface over TCP (VI/TCP)
             Management Information Base (MIB) using SMIv2

Status of this Memo

   This document is an Internet-Draft and is offered in full accordance
   with all provisions of Section 10 of RFC 2026.  Internet-Drafts are
   working documents of the Internet Engineering Task Force (IETF), its
   areas, and its working groups.  Note that other groups may also
   distribute working documents as Internet-Drafts.

   Internet-Draft documents are valid for a maximum of six months and
   may be updated, replaced, or rendered obsolete by other documents at
   any time.  It is inappropriate to use Internet-Drafts as reference
   material or to site them other than as "work in progress".

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/lid-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.NHtml

   The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   memo are to be interpreted as described in RFC2119.

Table of Contents

   1. Introduction ..............................................    2
   2. The SNMPv2 Network Management Framework ...................    2
   2.1 Object Definitions .......................................    2
   3. Overview ..................................................    3
   3.1 Terminology ..............................................    3
   3.2 Structure and Features ...................................    3
   3.2.1 Tables .................................................    3
   3.2.2 Writable objects .......................................    3
   3.2.3 Traps ..................................................    3
   4. Definitions ...............................................    4
   5. Security Considerations ...................................   20
   6. References ................................................   20
   7. Author's Addresses ........................................   20





Sebastian                                                       [Page 1]

Internet-Draft                 VI/TCP MIB               15 November 2000


1.  Introduction

   This memo defines a portion of the Management Information Base (MIB)
   for use with network management protocols in the Internet community.
   In particular, it describes managed objects used for managing Virtual
   Interface over TCP (VI/TCP) implementations.

   The Virtual Interface (VI) architecture [6] describes a high
   performance design for interfacing distributed applications to
   accelerated protocol processing. VI seeks to improve the performance
   of such applications by reducing the latency and overheads associated
   with standard communications protocol stack processing. Virtual
   Interface over TCP describes extensions to the VI Architecture
   designed to facilitate operation over TCP/IP.

2.  The SNMPv2 Network Management Framework

   The SNMPv2 Network Management Framework consists of four major
   components.  They are:

      o RFC 1442 [1] which defines the SMI, the mechanisms used for
        describing and naming objects for the purpose of management.

      o STD 17, RFC 1213 [2] defines MIB-II, the core set of managed
        objects for the Internet suite of protocols.

      o RFC 1445 [3] which defines the administrative and other
        architectural aspects of the framework.

      o RFC 1448 [4] which defines the protocol used for network
        access to managed objects.

      o RFC 1443 [5] which describes textual conventions for the
        framework.

   The framework permits new objects to be defined for the purpose of
   experimentation and evaluation.

2.1.  Object Definitions

   Managed objects are accessed via a virtual information store, termed
   the Management Information Base or MIB.  Objects in the MIB are
   defined using the subset of Abstract Syntax Notation One (ASN.1)
   defined in the SMI.  In particular, each object type is named by an
   OBJECT IDENTIFIER, an administratively assigned name.  The object
   type together with an object instance serves to uniquely identify a
   specific instantiation of the object.  For human convenience, we
   often use a textual string, termed the descriptor, to refer to the



Sebastian                                                       [Page 2]

Internet-Draft                 VI/TCP MIB               15 November 2000


   object type.

3. Overview

   The VI/TCP-MIB contains objects that may be used to manage VI over
   TCP implementations.  Specifically, it contains information on
   Network Interface Controllers ( NIC ) supporting VI, Virtual
   Interface statistics, Virtual Interface connections and its
   association with underlying transport layer.

3.1.  Terminology

   Virtual Interface
         An interface between a VI NIC and a process allowing a VI NIC
         direct access to the process memory.

   Virtual Interface Provider
         The combination of a VI NIC and VI kernel software. Together,
         these two components instantiate a Virtual Interface.

   VI Network Interface Controller (VI-NIC)
         A Network Interface Card that complies with VI Architecture
         Specification.

   VI Connection
         An association between a pair of VIs such that messages sent
         using either VI arrives at the other VI. A VI is either
         unconnected, or connected to one and only one other VI.

3.2 Structure and Features

   The information in this MIB module is organized into two tables, one
   writable object, and two traps, as follows.

3.2.1 Tables

   o    Table of current VI connections ( VIAConnTable )
   o    Table of VI Network Interface controllers ( VIANicTable )

3.2.2 Writable objects

   o    Threshold for the number of VI errors ( VIAErrorThreshold )

3.2.3 Traps

   o    VIANodeErrorsTrap
   o    VIANodeUpTrap




Sebastian                                                       [Page 3]

Internet-Draft                 VI/TCP MIB               15 November 2000


4. Definitions

   VI-IP-MIB DEFINITIONS ::= BEGIN

   IMPORTS

   OBJECT-TYPE                                  FROM RFC-1212
   Counter32, Gauge32, Integer32                FROM SNMPv2-SMI
   NOTIFICATION-TYPE                            FROM SNMPv2-SMI
   enterprises, NetworkAddress, IpAddress       FROM RFC1155-SMI
   Counter, ObjectName                          FROM RFC1155-SMI
   DisplayString                                FROM RFC1213-MIB;

   viIPMib MODULE-IDENTITY
       LAST-UPDATED "0011150655Z"
       ORGANIZATION ""
       CONTACT-INFO
               "          Bino Sebastian

                   Postal: Bino Sebastian
                           Giganet, Inc.
                           Concord Office Center
                           2352 Main Street
                           Concord, Massachusetts  01742
                           978.461.0402 (tel)
                           978.461.0430 (fax)
                           www.giganet.com

                      Tel: +1 978 461 0402
                      Fax: +1 978 461 0430

                   E-mail: bsebastian@giganet.com"
       DESCRIPTION
           "The MIB module to describe objects for virtual interface
           over TCP implementation."

       ::= { mib-2 XX }

   viIPMibObjects OBJECT IDENTIFIER ::= { viIPMib 1 }

   viaNodeConnection OBJECT IDENTIFIER ::= { viIPMibObjects 1 }

   VIANodeSystemName OBJECT-TYPE
       SYNTAX    DisplayString(SIZE (0..255))
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "A string by which the node is identified in the cluster."



Sebastian                                                       [Page 4]

Internet-Draft                 VI/TCP MIB               15 November 2000


       ::= { viaNodeConnection 1 }

   VIACreated OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The number of VIs have been created."
       ::= { viaNodeConnection 2 }

   VIAConnectRequest OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The number of times Connect Request call is made."
       ::= { viaNodeConnection 3 }

   VIAConnectWait OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The number of times Connect wait call is made."
       ::= { viaNodeConnection 4 }

   VIADisconnect OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "Number of times VI got disconnected with out any error."
       ::= { viaNodeConnection 5 }

   VIAConnectTimeOut OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "Number of times VI connect request got timed out."
       ::= { viaNodeConnection 6 }

   VIAConnected OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "Number of time VI got connected with out any error."



Sebastian                                                       [Page 5]

Internet-Draft                 VI/TCP MIB               15 November 2000


       ::= { viaNodeConnection 7 }

   VIACurrConnectPending OBJECT-TYPE
       SYNTAX    Gauge32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The number of VIs for which connect request is pending."
       ::= { viaNodeConnection 8 }

   VIACurrConnectWaitPending OBJECT-TYPE
       SYNTAX    Gauge32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The number of VIs for which connect wait request is
           pending."
       ::= { viaNodeConnection 9 }

   VIACurrConnected OBJECT-TYPE
       SYNTAX    Gauge32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The number of VIs for which the current state is CONNECTED."
       ::= { viaNodeConnection 10 }

   VIACurrError OBJECT-TYPE
       SYNTAX    Gauge32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The number of VIs for which the current state is ERROR"
       ::= { viaNodeConnection 11 }

   VIATotalError OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The number of VIs which encountered error state."
       ::= { viaNodeConnection 12 }

   VIAInMsgs OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION



Sebastian                                                       [Page 6]

Internet-Draft                 VI/TCP MIB               15 November 2000


           "The total number of incoming Messages received."
       ::= { viaNodeConnection 13 }

   VIAInRdma OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The total number of incoming RDMA requests received."
       ::= { viaNodeConnection 14 }

   VIAInBytes OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The total number of incoming bytes received, including
           those received in error. This count includes bytes received
           on currently established connections. This corresponds to
           the sum of bytes received through received messages,
           incoming RDMA writes and RDMA reads issued"
       ::= { viaNodeConnection 15 }

   VIAInRDMAReadBytes OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The total number of incoming bytes received through RDMA
           read, including those received in error. This count includes
           bytes received on currently established connections."
       ::= { viaNodeConnection 16 }

   VIAInRDMAWriteBytes OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The total number of bytes received through incoming RDMA
           writes, including those received in error. This count
           includes bytes received on currently established
           connections."
       ::= { viaNodeConnection 17 }

   VIAOutMsgs OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current



Sebastian                                                       [Page 7]

Internet-Draft                 VI/TCP MIB               15 November 2000


       DESCRIPTION
           "The total number of Messages sent."
       ::= { viaNodeConnection 18 }

   VIAOutRdma OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The total number of RDMA requests sent."
       ::= { viaNodeConnection 19 }

   VIAOutBytes OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The total number of bytes sent, including those
           sent in error. This count includes bytes sent on
           currently established connections."
       ::= { viaNodeConnection 20 }

   VIAOutRDMAReadBytes OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The total number of bytes sent through an incoming
           RDMA read request, including those sent in error.
           This count includes bytes sent on currently established
           connections."
       ::= { viaNodeConnection 21 }

   VIAOutRDMAWriteBytes OBJECT-TYPE
       SYNTAX    Counter32
       ACCESS    read-only
       STATUS    current
       DESCRIPTION
           "The total number of bytes sent through a RDMA write
           operation, including those sent in error. This count
           includes bytes sent on currently established connections."
       ::= { viaNodeConnection 22 }


   VIAConnTable OBJECT-TYPE
       SYNTAX    SEQUENCE OF VIAConnEntry
       ACCESS    not-accessible
       STATUS    current



Sebastian                                                       [Page 8]

Internet-Draft                 VI/TCP MIB               15 November 2000


       DESCRIPTION
           "A table containing VIA connection specific information."
       ::= { viaNodeConnection 23 }

   VIAConnEntry OBJECT-TYPE
       SYNTAX    VIAConnEntry
       ACCESS    not-accessible
       STATUS    current
       DESCRIPTION
           "A conceptual row of the VIAConnTable containing information
           about a particular current VIA connection. Each row of this
           table is transient, and it ceases to exist when the
           connection makes transition to the CLOSED state."
        INDEX    { VIAConnVINumber
       }
        ::= { VIAConnTable 1 }

   VIAConnEntry  ::= SEQUENCE {

       VIAConnState                 INTEGER,
       VIAConnVINumber              INTEGER,
       VIAConnRemoteNetAddress      IpAddress,
       VIAConnLocalNetAddress       IpAddress,
       VIAConnRemotePortNumber      INTEGER,
       VIAConnLocalPortNumber       INTEGER,
       VIAConnLocalDescriminator    Opaque,
       VIAConnRemoteDescriminator   Opaque,
       VIAConnLocalMaxTransferSize  INTEGER,
       VIAConnRemoteMaxTransferSize INTEGER,
       VIAConnLocalEnableRdmaWrite  INTEGER,
       VIAConnLocalEnableRdmaRead   INTEGER,
       VIAConnRemoteEnableRdmaWrite INTEGER,
       VIAConnRemoteEnableRdmaRead  INTEGER,
       VIAConnSentMessages          Counter32,
       VIAConnSentRdmaReadMessages  Counter32,
       VIAConnSentRdmaWriteMessages Counter32,
       VIAConnRcvdMessages          Counter32,
       VIAConnRcvdRdmaReadMessages  Counter32,
       VIAConnRcvdRdmaWriteMessages Counter32

       }

   VIAConnState OBJECT-TYPE
       SYNTAX   INTEGER {
            idle (1),
            pendingConnect(2),
            connected(3),
            error(4)



Sebastian                                                       [Page 9]

Internet-Draft                 VI/TCP MIB               15 November 2000


            }
       ACCESS             read-only
       STATUS             current
       DESCRIPTION
               "The state of this VIA connection
                Legal States:
                      Idle            1
                      Pending Connect 2
                      Connected       3
                      Error           4"
       ::= { VIAConnEntry 1 }

   VIAConnVINumber    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "A number which uniquely defines a connection."
       ::= { VIAConnEntry 2 }

   VIAConnRemoteNetAddress    OBJECT-TYPE
       SYNTAX        IpAddress
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "IP address of the remote system of the connection."
       ::= { VIAConnEntry 3 }

   VIAConnLocalNetAddress OBJECT-TYPE
       SYNTAX      IpAddress
       ACCESS      read-only
       STATUS      current
       DESCRIPTION
           "Local IPadress of the connection."
       ::= { VIAConnEntry 4 }

   VIAConnRemotePortNumber    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "Remote TCP port number of the connection."
       ::= { VIAConnEntry 5 }

   VIAConnLocalPortNumber    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current



Sebastian                                                      [Page 10]

Internet-Draft                 VI/TCP MIB               15 November 2000


       DESCRIPTION
           "Local TCP Portnumber of the connection."
       ::= { VIAConnEntry 6 }

   VIAConnLocalDescriminator    OBJECT-TYPE
       SYNTAX        OCTET STRING
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "An identifier used by the local process to identify the
           VI connection."
       ::= { VIAConnEntry 7 }

   VIAConnRemoteDescriminator    OBJECT-TYPE
       SYNTAX        OCTET STRING
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "An identifier used by the remote process to identify the
           VI connection."
       ::= { VIAConnEntry 8 }

   VIAConnLocalMaxTransferSize    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "The local limit on the maximum packet size that can be
           transfered through the connection."
       ::= { VIAConnEntry 9 }

   VIAConnRemoteMaxTransferSize OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "The remote limit on the maximum packet size that can be
           transfered through the connection."
       ::= { VIAConnEntry 10 }

   VIAConnLocalEnableRdmaWrite    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
               "The value is 1 if remote DMA write is enabled
               in the local system otherwise, it is 0."
       ::= { VIAConnEntry 11 }



Sebastian                                                      [Page 11]

Internet-Draft                 VI/TCP MIB               15 November 2000


   VIAConnLocalEnableRdmaRead    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
               "The value is 1 if remote DMA read is enabled
               in the local system otherwise, it is 0."
       ::= { VIAConnEntry 12 }

   VIAConnRemoteEnableRdmaWrite    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
               "The value is 1 if remote DMA write is enabled
               in the remote system otherwise, it is 0."
       ::= { VIAConnEntry 13 }

   VIAConnRemoteEnableRdmaRead    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
               "The value is 1 if remote DMA read is enabled
               in the remote system otherwise, it is 0."
       ::= { VIAConnEntry 14 }

   VIAConnSentMessages    OBJECT-TYPE
       SYNTAX        Counter32
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
               "Total number of messages sent through the connection."
       ::= { VIAConnEntry 15 }

   VIAConnSentRdmaReadMessages    OBJECT-TYPE
       SYNTAX        Counter32
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
               "Total number of rdma read messages sent through the
               connection."
       ::= { VIAConnEntry 16 }

   VIAConnSentRdmaWriteMessages    OBJECT-TYPE
       SYNTAX        Counter32
       ACCESS        read-only
       STATUS        current



Sebastian                                                      [Page 12]

Internet-Draft                 VI/TCP MIB               15 November 2000


       DESCRIPTION
               "Total number of rdma write messages sent through the
               connection."
       ::= { VIAConnEntry 17 }

   VIAConnRcvdMessages    OBJECT-TYPE
       SYNTAX        Counter32
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
               "Total number of messages received through the
               connection."
       ::= { VIAConnEntry 18 }

   VIAConnRcvdRdmaReadMessages    OBJECT-TYPE
       SYNTAX        Counter32
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
               "Total number of rdma read messages received through the
               connection."
       ::= { VIAConnEntry 19 }

   VIAConnRcvdRdmaWriteMessages    OBJECT-TYPE
       SYNTAX        Counter32
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
               "Total number of rdma write messages received through the
               connection."
       ::= { VIAConnEntry 20 }

   viaErrors OBJECT IDENTIFIER ::= { viIPMibObjects 2 }

   VIAErrPostDesc        OBJECT-TYPE
       SYNTAX          Counter32
       ACCESS          read-only
       STATUS          current
       DESCRIPTION
               "The total number of descriptors completed in error
               by NIC."
       ::= { viaErrors 1 }

   VIAErrConnLost        OBJECT-TYPE
       SYNTAX          Counter32
       ACCESS          read-only
       STATUS          current
       DESCRIPTION



Sebastian                                                      [Page 13]

Internet-Draft                 VI/TCP MIB               15 November 2000


               "The total number of Lost Connection errors. "
       ::= { viaErrors 2 }

   VIAErrRecvQEmpty    OBJECT-TYPE
       SYNTAX          Counter32
       ACCESS          read-only
       STATUS          current
       DESCRIPTION
               "The total number of errors due to an empty receive
               Queue."
       ::= { viaErrors 3 }

   VIAErrRdmawProt        OBJECT-TYPE
       SYNTAX          Counter32
       ACCESS          read-only
       STATUS          current
       DESCRIPTION
               "The total number of remote DMA write protection
               errors. "
       ::= { viaErrors 4 }

   VIAErrRdmarProt        OBJECT-TYPE
       SYNTAX          Counter32
       ACCESS          read-only
       STATUS          current
       DESCRIPTION
               "The total number of remote DMA read protection errors. "
       ::= { viaErrors 5 }

   VIAErrCompProt    OBJECT-TYPE
       SYNTAX          Counter32
       ACCESS          read-only
       STATUS          current
       DESCRIPTION
               "The total number of protection errors. "
       ::= { viaErrors 6 }

   VIAErrorThreshold OBJECT-TYPE
       SYNTAX            INTEGER
       ACCESS            read-write
       STATUS            current
       DESCRIPTION
           "Setting this threshold will cause a trap to be enabled
           such that if the total error exceeds error threshold set
           a VIANodeErrorsTrap trap will be generated. The trap will
           reset the error counter."
       ::= { viaErrors 7 }




Sebastian                                                      [Page 14]

Internet-Draft                 VI/TCP MIB               15 November 2000


   viaNicAttributes OBJECT IDENTIFIER ::= { viIPMibObjects 3 }

   VIANicTable        OBJECT-TYPE
       SYNTAX            SEQUENCE OF VIANicEntry
       ACCESS            not-accessible
       STATUS            current
       DESCRIPTION
               "A table containing VIA NIC specific information."
       ::= { viaNicAttributes 1}

   VIANicEntry        OBJECT-TYPE
       SYNTAX            VIANicEntry
       ACCESS            not-accessible
       STATUS            current
       DESCRIPTION
               "A conceptual row of the VIANicTable containing
                information about a particular VINic."

       INDEX    {    VIANicIndex }
       ::= { VIANicTable 1 }

   VIANicEntry ::= SEQUENCE {
               VIANicIndex               INTEGER,
               VIAName                   DisplayString,
               VIAHardwareVersion        DisplayString,
               VIAProviderVersion        DisplayString,
               VIANicAddress             PhysAddress,
               VIAThreadSafe             INTEGER,
               VIAMaxDiscriminatorLength INTEGER,
               VIAMaxRegisterBytes       INTEGER,
               VIAMaxRegisterRegions     INTEGER,
               VIAMaxRegisterBlockBytes  INTEGER,
               VIAMaxVI                  INTEGER,
               VIAMaxDescriptorsPerQueue INTEGER,
               VIAMaxSegmentsPerDesc     INTEGER,
               VIAMaxCQ                  INTEGER,
               VIAMaxCQEntries           INTEGER,
               VIAMaxTransferSize        INTEGER,
               VIANativeMTU              INTEGER,
               VIAMaxPTags               INTEGER,
               VIACurrRegisterBytes      INTEGER,
               VIACurrRegisterRegions    INTEGER,
               VIACurrVI                 INTEGER,
               VIACurrCQ                 INTEGER,
               VIACurrPTags              INTEGER,
               VIAConnectionListenPort   INTEGER
       }




Sebastian                                                      [Page 15]

Internet-Draft                 VI/TCP MIB               15 November 2000


   VIANicIndex        OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "The index of the NIC in the NIC table."
       ::= { VIANicEntry 1 }

   VIAName            OBJECT-TYPE
       SYNTAX        DisplayString (SIZE (0..255))
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "The symbolic name of the NIC device."
       ::= { VIANicEntry 2 }

   VIAHardwareVersion    OBJECT-TYPE
       SYNTAX        DisplayString (SIZE (0..255))
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "The version of the VINIC described by this MIB."
       ::= { VIANicEntry 3 }

   VIAProviderVersion    OBJECT-TYPE
       SYNTAX        DisplayString (SIZE (0..255))
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "The version of the VI provider."
       ::= { VIANicEntry 4 }

   VIANicAddress    OBJECT-TYPE
       SYNTAX        PhysAddress
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "The Network address of the NIC."
       ::= { VIANicEntry 5 }

   VIAThreadSafe    OBJECT-TYPE
       SYNTAX       INTEGER
       ACCESS       read-only
       STATUS       current
       DESCRIPTION
           "1 if synchronisation model is thread safe else 0."
       ::= { VIANicEntry 6 }




Sebastian                                                      [Page 16]

Internet-Draft                 VI/TCP MIB               15 November 2000


   VIAMaxDiscriminatorLength    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "The maximum number of bytes that the VI provider allows
           for a connection descriminator."
       ::= { VIANicEntry 7 }

   VIAMaxRegisterBytes    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "Maximum number of bytes that can be registered by the
           VI user."
       ::= { VIANicEntry 8 }

   VIAMaxRegisterRegions    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "Maximum number of memory regions that can be registered by
           VI user."
       ::= { VIANicEntry 9 }

   VIAMaxRegisterBlockBytes    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "Largest contiguous block of memory that can be
           registered by VI user."
       ::= { VIANicEntry 10 }

   VIAMaxVI        OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "The limit on the total number of VI instances this NIC
           can support."
       ::= { VIANicEntry 11 }

   VIAMaxDescriptorsPerQueue    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only



Sebastian                                                      [Page 17]

Internet-Draft                 VI/TCP MIB               15 November 2000


       STATUS        current
       DESCRIPTION
           "Maximum Descriptors per VI Work Queue that this VI provider
           can support."
       ::= { VIANicEntry 12 }

   VIAMaxSegmentsPerDesc    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "Maximum number of segments per descriptor that this VI
           provider can support."
       ::= { VIANicEntry 13 }

   VIAMaxCQ        OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "Maximum number of completion queues this VI provider
           can support."
       ::= { VIANicEntry 14 }

   VIAMaxCQEntries        OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "Maximum number of Completion queue entries per
           completion queue that this VI provider can
           support."
       ::= { VIANicEntry 15 }

   VIAMaxTransferSize    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "The maximum transfer size supported by the VI Nic. The
            maximum transfer size is the amount of data that can
            be described by a single VI descriptor."
       ::= { VIANicEntry 16 }

   VIANativeMTU    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current



Sebastian                                                      [Page 18]

Internet-Draft                 VI/TCP MIB               15 November 2000


       DESCRIPTION
           "The native MTU size of the underlying network. For
           frame-based networks, this could reflect its native
           frame size. For cell-based networks, it could reflect
           the MTU of the appropriate abstraction layer that it
           supports."
       ::= { VIANicEntry 17 }

   VIAMaxPTags        OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "The maximum number of protection tags that are
           supported by this VI provider."
       ::= { VIANicEntry 18 }

   VIACurrRegisterBytes    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "Number of bytes registered by the VI user for this
           NIC."
       ::= { VIANicEntry 19 }

   VIACurrRegisterRegions    OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "Number of memory regions that is registered by VI user
           for this NIC."
       ::= { VIANicEntry 20 }

   VIACurrVI        OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "The current number of VI instances for this NIC."
       ::= { VIANicEntry 21 }

   VIACurrCQ        OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION



Sebastian                                                      [Page 19]

Internet-Draft                 VI/TCP MIB               15 November 2000


           "Current number of completion queues this VI provider
           has."
       ::= { VIANicEntry 22 }

   VIACurrPTags      OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "Current Number of protection tags this VI provider has."
       ::= { VIANicEntry 23 }

   VIAConnectionListenPort        OBJECT-TYPE
       SYNTAX        INTEGER
       ACCESS        read-only
       STATUS        current
       DESCRIPTION
           "Port number on which VI server is listening for VI
            connection request."
       ::= { VIANicEntry 24 }


   viipTraps          OBJECT IDENTIFIER ::= { viIPMib 2 }

   VIANodeErrorsTrap    NOTIFICATION-TYPE
       ENTERPRISE        giganet
       VARIABLES        {
                       VIAErrPostDesc,
                       VIAErrConnLost,
                       VIAErrRecvQEmpty,
                       VIAErrVIOverrun,
                       VIAErrRdmawProt,
                       VIAErrRdmawData,
                       VIAErrRdmawAbort,
                       VIAErrCompProt,
                       viaErrors }
       DESCRIPTION
           "A VIANodeErrorsTrap trap signifies that the total number of
           errors exceeded the error threshold."
       ::= { viipTraps 1 }


   VIANodeUpTrap        NOTIFICATION-TYPE
          ENTERPRISE     giganet
          VARIABLES     { VIANodeSystemName }
          DESCRIPTION
          "A VIANodeUpTrap trap signifies a VIA Node is started
          and initialised successfully."



Sebastian                                                      [Page 20]

Internet-Draft                 VI/TCP MIB               15 November 2000


          ::= { viipTraps 2 }

   END


5. Security Considerations

   Security features of SNMP will apply. No special security
   considerations exist at this time.

6. References

   [1] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Structure
       of Management Information for version 2 of the Simple Network
       Management Protocol (SNMPv2)", RFC 1442, SNMP Research, Inc.,
       Hughes LAN Systems, Dover Beach Consulting, Inc., Carnegie Mellon
       University, April 1993.

   [2] McCloghrie, K., and M. Rose, "Management Information Base for
       Network Management of TCP/IP-based internets - MIB-II", STD 17,
       RFC 1213, Hughes LAN Systems, Performance Systems International,
       March 1991.

   [3] Galvin, J., and K. McCloghrie, "Administrative Model for version
       2 of the Simple Network Management Protocol (SNMPv2)", RFC 1445,
       Trusted Information Systems, Hughes LAN Systems, April 1993.

   [4] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Protocol
       Operations for version 2 of the Simple Network Management
       Protocol (SNMPv2)", RFC 1448, SNMP Research, Inc., Hughes LAN
       Systems, Dover Beach Consulting, Inc., Carnegie Mellon
       University, April 1993.

   [5] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Textual
       Conventions for version 2 of the Simple Network Management
       Protocol (SNMPv2)", RFC 1443, SNMP Research, Inc., Hughes LAN
       Systems, Dover Beach Consulting, Inc., Carnegie Mellon
       University, April 1993.

   [6] "Virtual Interface Architecture Specification", Compaq
       Computer Corp., Intel Corporation, Microsoft Corporation,
       1997.

   [7] Anne Marie Merritt, "Simple Network Management Protocol
       Management Information Base for Virtual Interface
       Architecture Specification 1.0", California State University,
       Sacramento, 1998.




Sebastian                                                      [Page 21]

Internet-Draft                 VI/TCP MIB               15 November 2000


7. Author's Address

   Bino Sebastian
   Giganet, Inc.
   Concord Office Center
   2352 Main Street
   Concord, Massachusetts  01742

   Phone: 978 461 0402

   EMail: bsebastian@giganet.com








































Sebastian                                                      [Page 22]

