N = total number of non-LDH codes
H = number of non-LDH codes in the candidate half-row
C = number of non-LDH codes in the complementary half-row (the
            one with the opposite lowest bit)
M = (2 + 9 + 18*(N - H - C) + 8*H + 9*C + 4) / 5
          = 3 + (18*N - 10*H - 9*C) / 5

brace_encoder_in_max = 63,
brace_encoder_out_max = 4 + (6 + 16 * brace_encoder_in_max) / 5 + 1,
brace_decoder_in_max = 63 + 1,
brace_decoder_out_max = brace_decoder_in_max - 1
half_row_style = 0,
full_row_style = 1,
mixed_style    = 2,
no_row_style   = 3
num_nonldh = 0;
num_half_rows = 0;

half_row = input[i] >> 7;

style = half_row_style;
queue_length = 11;
queue = half_rows[0];
style = full_row_style;
queue_length = 10;
queue = (1 << 8) | (half_rows[0] >> 1);
best_half_row = 512;  /* half_row is always < 512 */

half_row = half_rows[i];
H = half_row_counts[i];
C = 0;

C = half_row_counts[j];
M = 3 + (18 * num_nonldh - 10*H - 9*C) / 5;

best_M = M;
best_half_row = half_row;
Mprime = (6 + 16 * num_nonldh) / 5;

style = no_row_style;
queue_length = 2;
queue = 3;
style = mixed_style;
queue_length = 11;
queue = (1 << 10) | best_half_row;
next_base32_position = 0;

next_literal_position = next_base32_position + (queue_length > 0);
non_hyphen_flag = 0;  /* set whenever buffer contains a non-hyphen */

code = input[i];

non_hyphen_flag = 1;
non_hyphen_flag = 0;  /* we will empty the buffer */
next_base32_position = next_literal_position;
queue = (queue << 7) | (code & 0x7f);
queue = (queue << 8) | (code & 0xff);
queue = (queue << 16) | code;
queue = (queue << 8) | (code & 0x7f);
queue = (queue << 9) | (1 << 8) | (code & 0x7f);
queue = (queue << 18) | (3ul << 16) | code;
next_base32_position = next_literal_position;
next_literal_position = next_base32_position + (queue_length > 0);
input_length = i;
i = 0;
queue = quintet;
queue_length = 3;
literal_mode_flag = 0;
style = quintet >> 3;

queue = (queue << 5) | quintet;
common_prefix = (queue >> (queue_length - n)) << (16 - n);
next_code_position = 0;

c = input[i];
queue = (queue << 5) | quintet;
n = (queue >> (queue_length - 2)) & 3;  /* top 2 bits */

input_length = 0;

hi = getchar();
lo = getchar();
n = fread(input, 1, brace_decoder_in_max, stdin);
