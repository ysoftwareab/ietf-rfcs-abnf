



Network Working Group                                         R. Stewart
Internet-Draft                                             Netflix, Inc.
Intended status: Standards Track                               M. Tuexen
Expires: January 4, 2016                Muenster Univ. of Appl. Sciences
                                                              K. Nielsen
                                                                Ericsson
                                                            July 3, 2015


                       RFC 4960 Errata and Issues
                draft-tuexen-tsvwg-rfc4960-errata-01.txt

Abstract

   This document is a compilation of issues found since the publication
   of RFC4960 in September 2007 based on experience with implementing,
   testing, and using SCTP along with the suggested fixes.  This
   document provides deltas to RFC4960 and is organized in a time based
   way.  The issues are listed in the order they were brought up.
   Because some text is changed several times the last delta in the text
   is the one which should be applied.  In addition to the delta a
   description of the problem and the details of the solution are also
   provided.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on January 4, 2016.

Copyright Notice

   Copyright (c) 2015 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents



Stewart, et al.          Expires January 4, 2016                [Page 1]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Conventions . . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Corrections to RFC 4960 . . . . . . . . . . . . . . . . . . .   3
     3.1.  Path Error Counter Threshold Handling . . . . . . . . . .   3
     3.2.  Upper Layer Protocol Shutdown Request Handling  . . . . .   4
     3.3.  Registration of New Chunk Types . . . . . . . . . . . . .   5
     3.4.  Variable Parameters for INIT Chunks . . . . . . . . . . .   6
     3.5.  CRC32c Sample Code on 64-bit Platforms  . . . . . . . . .   7
     3.6.  Endpoint Failure Detection  . . . . . . . . . . . . . . .   8
     3.7.  Data Transmission Rules . . . . . . . . . . . . . . . . .   9
     3.8.  T1-Cookie Timer . . . . . . . . . . . . . . . . . . . . .  10
     3.9.  Miscellaneous Typos . . . . . . . . . . . . . . . . . . .  11
     3.10. CRC32c Sample Code  . . . . . . . . . . . . . . . . . . .  15
   4.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  15
   5.  Security Considerations . . . . . . . . . . . . . . . . . . .  15
   6.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  16
   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  16
     7.1.  Normative References  . . . . . . . . . . . . . . . . . .  16
     7.2.  Informative References  . . . . . . . . . . . . . . . . .  16
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  16

1.  Introduction

   This document contains a compilation of all defects found up until
   the publishing of this document for [RFC4960] specifying the Stream
   Control Transmission Protocol (SCTP).  These defects may be of an
   editorial or technical nature.  This document may be thought of as a
   companion document to be used in the implementation of SCTP to
   clarify errors in the original SCTP document.

   This document provides a history of the changes that will be compiled
   into a BIS document for [RFC4960].  It is structured similar to
   [RFC4460].

   Each error will be detailed within this document in the form of:

   o  The problem description,
   o  The text quoted from [RFC4960],



Stewart, et al.          Expires January 4, 2016                [Page 2]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   o  The replacement text that should be placed into an upcoming BIS
      document,
   o  A description of the solution.

   Note that when reading this document one must use care to assure that
   a field or item is not updated further on within the document.  Each
   section should be applied in sequence to the original [RFC4960] since
   this document is a historical record of the sequential changes that
   have been found necessary at various inter-op events and through
   discussion on the list.

2.  Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

3.  Corrections to RFC 4960

3.1.  Path Error Counter Threshold Handling

3.1.1.  Description of the Problem

   The handling of the 'Path.Max.Retrans' parameter is described in
   Section 8.2 and Section 8.3 of [RFC4960] in an Inconsistent way.
   Whereas Section 8.2 describes that a path is marked inactive when the
   path error counter exceeds the threshold, Section 8.3 says the path
   is marked inactive when the path error counter reaches the threshold.

   This issue was reported as an Errata for [RFC4960] with Errata ID
   1440.

3.1.2.  Text Changes to the Document


















Stewart, et al.          Expires January 4, 2016                [Page 3]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   ---------
   Old text: (Section 8.3)
   ---------

   When the value of this counter reaches the protocol parameter
   'Path.Max.Retrans', the endpoint should mark the corresponding
   destination address as inactive if it is not so marked, and may also
   optionally report to the upper layer the change of reachability of
   this destination address.  After this, the endpoint should continue
   HEARTBEAT on this destination address but should stop increasing the
   counter.

   ---------
   New text: (Section 8.3)
   ---------

   When the value of this counter exceeds the protocol parameter
   'Path.Max.Retrans', the endpoint should mark the corresponding
   destination address as inactive if it is not so marked, and may also
   optionally report to the upper layer the change of reachability of
   this destination address.  After this, the endpoint should continue
   HEARTBEAT on this destination address but should stop increasing the
   counter.

3.1.3.  Solution Description

   The intended state change should happen when the threshold is
   exceeded.

3.2.  Upper Layer Protocol Shutdown Request Handling

3.2.1.  Description of the Problem

   Section 9.2 of [RFC4960] describes the handling of received SHUTDOWN
   chunks in the SHUTDOWN-RECEIVED state instead of the handling of
   shutdown requests from its upper layer in this state.

   This issue was reported as an Errata for [RFC4960] with Errata ID
   1574.

3.2.2.  Text Changes to the Document










Stewart, et al.          Expires January 4, 2016                [Page 4]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   ---------
   Old text: (Section 9.2)
   ---------

   Once an endpoint has reached the SHUTDOWN-RECEIVED state, it MUST NOT
   send a SHUTDOWN in response to a ULP request, and should discard
   subsequent SHUTDOWN chunks.

   ---------
   New text: (Section 9.2)
   ---------

   Once an endpoint has reached the SHUTDOWN-RECEIVED state, it MUST NOT
   send a SHUTDOWN in response to a ULP request, and should discard
   subsequent ULP shutdown requests.

3.2.3.  Solution Description

   The text never intended the SCTP endpoint to ignore SHUTDOWN chunks
   from its peer.  If it did the endpoints could never gracefully
   terminate associations in some cases.

3.3.  Registration of New Chunk Types

3.3.1.  Description of the Problem

   Section 14.1 of [RFC4960] should deal with new chunk types, however,
   the text refers to parameter types.

   This issue was reported as an Errata for [RFC4960] with Errata ID
   2592.

3.3.2.  Text Changes to the Document


















Stewart, et al.          Expires January 4, 2016                [Page 5]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   ---------
   Old text: (Section 14.1)
   ---------

   The assignment of new chunk parameter type codes is done through an
   IETF Consensus action, as defined in [RFC2434].  Documentation of the
   chunk parameter MUST contain the following information:

   ---------
   New text: (Section 14.1)
   ---------

   The assignment of new chunk type codes is done through an
   IETF Consensus action, as defined in [RFC2434].  Documentation of the
   chunk type MUST contain the following information:

3.3.3.  Solution Description

   Refer to chunk types as intended.

3.4.  Variable Parameters for INIT Chunks

3.4.1.  Description of the Problem

   Newlines in wrong places break the layout of the table of variable
   parameters for the INIT chunk in Section 3.3.2 of [RFC4960].

   This issue was reported as an Errata for [RFC4960] with Errata ID
   3291 and Errata ID 3804.

3.4.2.  Text Changes to the Document




















Stewart, et al.          Expires January 4, 2016                [Page 6]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   ---------
   Old text: (Section 3.3.2)
   ---------

   Variable Parameters                  Status     Type Value
   -------------------------------------------------------------
   IPv4 Address (Note 1)               Optional    5 IPv6 Address
   (Note 1)               Optional    6 Cookie Preservative
   Optional    9 Reserved for ECN Capable (Note 2)   Optional
   32768 (0x8000) Host Name Address (Note 3)          Optional
   11 Supported Address Types (Note 4)    Optional    12

   ---------
   New text: (Section 3.3.2)
   ---------

   Variable Parameters                  Status     Type Value
   -------------------------------------------------------------
   IPv4 Address (Note 1)               Optional    5
   IPv6 Address (Note 1)               Optional    6
   Cookie Preservative                 Optional    9
   Reserved for ECN Capable (Note 2)   Optional    32768 (0x8000)
   Host Name Address (Note 3)          Optional    11
   Supported Address Types (Note 4)    Optional    12

3.4.3.  Solution Description

   Fix the formatting of the table.

3.5.  CRC32c Sample Code on 64-bit Platforms

3.5.1.  Description of the Problem

   The sample code for computing the CRC32c provided in [RFC4960]
   assumes that a variable of type unsigned long uses 32 bits.  This is
   not true on some 64-bit platforms (for example the ones using LP64).

   This issue was reported as an Errata for [RFC4960] with Errata ID
   3423.

3.5.2.  Text Changes to the Document










Stewart, et al.          Expires January 4, 2016                [Page 7]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   ---------
   Old text: (Appendix C)
   ---------

   unsigned long
   generate_crc32c(unsigned char *buffer, unsigned int length)
   {
     unsigned int i;
     unsigned long crc32 = ~0L;

   ---------
   New text: (Appendix C)
   ---------

   unsigned long
   generate_crc32c(unsigned char *buffer, unsigned int length)
   {
     unsigned int i;
     unsigned long crc32 = 0xffffffffL;

3.5.3.  Solution Description

   Use 0xffffffffL instead of ~0L which gives the same value on
   platforms using 32 bits or 64 bits for variables of type unsigned
   long.

3.6.  Endpoint Failure Detection

3.6.1.  Description of the Problem

   The handling of the association error counter defined in Section 8.1
   of [RFC4960] can result in an association failure even if the path
   used for data transmission is available, but idle.

   This issue was reported as an Errata for [RFC4960] with Errata ID
   3788.

3.6.2.  Text Changes to the Document













Stewart, et al.          Expires January 4, 2016                [Page 8]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   ---------
   Old text: (Section 8.1)
   ---------

   An endpoint shall keep a counter on the total number of consecutive
   retransmissions to its peer (this includes retransmissions to all the
   destination transport addresses of the peer if it is multi-homed),
   including unacknowledged HEARTBEAT chunks.

   ---------
   New text: (Section 8.1)
   ---------

   An endpoint shall keep a counter on the total number of consecutive
   retransmissions to its peer (this includes data retransmissions
   to all the destination transport addresses of the peer if it is
   multi-homed), including the number of unacknowledged HEARTBEAT
   chunks observed on the path which currently is used for data
   transfer. Unacknowledged HEARTBEAT chunks observed on paths
   different from the path currently used for data transfer shall
   not increment the association error counter, as this could lead
   to association closure even if the path which currently is used for
   data transfer is available (but idle).

3.6.3.  Solution Description

   A more refined handling for the association error counter is defined.

3.7.  Data Transmission Rules

3.7.1.  Description of the Problem

   When integrating the changes to Section 6.1 A) of [RFC2960] as
   described in Section 2.15.2 of [RFC4460] some text was duplicated and
   became the final paragraph of Section 6.1 A) of [RFC4960].

   This issue was reported as an Errata for [RFC4960] with Errata ID
   4071.

3.7.2.  Text Changes to the Document











Stewart, et al.          Expires January 4, 2016                [Page 9]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   ---------
   Old text: (Section 6.1 A))
   ---------
   The sender MUST also have an algorithm for sending new DATA chunks
   to avoid silly window syndrome (SWS) as described in [RFC0813].
   The algorithm can be similar to the one described in Section
   4.2.3.4 of [RFC1122].

   However, regardless of the value of rwnd (including if it is 0),
   the data sender can always have one DATA chunk in flight to the
   receiver if allowed by cwnd (see rule B below).  This rule allows
   the sender to probe for a change in rwnd that the sender missed
   due to the SACK having been lost in transit from the data receiver
   to the data sender.

   ---------
   New text: (Section 6.1 A))
   ---------

   The sender MUST also have an algorithm for sending new DATA chunks
   to avoid silly window syndrome (SWS) as described in [RFC0813].
   The algorithm can be similar to the one described in Section
   4.2.3.4 of [RFC1122].

3.7.3.  Solution Description

   Last paragraph of Section 6.1 A) removed as intended in
   Section 2.15.2 of [RFC4460].

3.8.  T1-Cookie Timer

3.8.1.  Description of the Problem

   Figure 4 of [RFC4960] illustrates the SCTP association setup.
   However, it incorrectly shows that the T1-init timer is used in the
   COOKIE-ECHOED state whereas the T1-cookie timer should have been used
   instead.

   This issue was reported as an Errata for [RFC4960] with Errata ID
   4400.

3.8.2.  Text Changes to the Document









Stewart, et al.          Expires January 4, 2016               [Page 10]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   ---------
   Old text: (Section 5.1.6, Figure 4)
   ---------

   COOKIE ECHO [Cookie_Z] ------\
   (Start T1-init timer)         \
   (Enter COOKIE-ECHOED state)    \---> (build TCB enter ESTABLISHED
                                         state)
                                  /---- COOKIE-ACK
                                 /
   (Cancel T1-init timer, <-----/
    Enter ESTABLISHED state)

   ---------
   New text: (Section 5.1.6, Figure 4)
   ---------

   COOKIE ECHO [Cookie_Z] ------\
   (Start T1-cookie timer)       \
   (Enter COOKIE-ECHOED state)    \---> (build TCB enter ESTABLISHED
                                         state)
                                  /---- COOKIE-ACK
                                 /
   (Cancel T1-cookie timer, <---/
    Enter ESTABLISHED state)

3.8.3.  Solution Description

   Change the figure such that the T1-cookie timer is used instead of
   the T1-init timer.

3.9.  Miscellaneous Typos

3.9.1.  Description of the Problem

   While processing [RFC4960] some typos were not catched.

3.9.2.  Text Changes to the Document













Stewart, et al.          Expires January 4, 2016               [Page 11]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   ---------
   Old text: (Section 1.6)
   ---------

   Transmission Sequence Numbers wrap around when they reach 2**32 - 1.
   That is, the next TSN a DATA chunk MUST use after transmitting TSN =
   2*32 - 1 is TSN = 0.

   ---------
   New text: (Section 1.6)
   ---------

   Transmission Sequence Numbers wrap around when they reach 2**32 - 1.
   That is, the next TSN a DATA chunk MUST use after transmitting TSN =
   2**32 - 1 is TSN = 0.

   ---------
   Old text: (Section 3.3.10.9)
   ---------

   No User Data: This error cause is returned to the originator of a

   DATA chunk if a received DATA chunk has no user data.

   ---------
   New text: (Section 3.3.10.9)
   ---------

   No User Data: This error cause is returned to the originator of a
   DATA chunk if a received DATA chunk has no user data.





















Stewart, et al.          Expires January 4, 2016               [Page 12]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   ---------
   Old text: (Section 6.7, Figure 9)
   ---------

   Endpoint A                                    Endpoint Z {App
   sends 3 messages; strm 0} DATA [TSN=6,Strm=0,Seq=2] ----------
   -----> (ack delayed) (Start T3-rtx timer)

   DATA [TSN=7,Strm=0,Seq=3] --------> X (lost)

   DATA [TSN=8,Strm=0,Seq=4] ---------------> (gap detected,
                                               immediately send ack)
                                   /----- SACK [TSN Ack=6,Block=1,
                                  /             Start=2,End=2]
                           <-----/ (remove 6 from out-queue,
    and mark 7 as "1" missing report)

   ---------
   New text: (Section 6.7, Figure 9)
   ---------

   Endpoint A                                    Endpoint Z
   {App sends 3 messages; strm 0}
   DATA [TSN=6,Strm=0,Seq=2] ---------------> (ack delayed)
   (Start T3-rtx timer)

   DATA [TSN=7,Strm=0,Seq=3] --------> X (lost)

   DATA [TSN=8,Strm=0,Seq=4] ---------------> (gap detected,
                                               immediately send ack)
                                   /----- SACK [TSN Ack=6,Block=1,
                                  /             Strt=2,End=2]
                           <-----/
   (remove 6 from out-queue,
    and mark 7 as "1" missing report)
















Stewart, et al.          Expires January 4, 2016               [Page 13]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   ---------
   Old text: (Section 6.10)
   ---------
   An endpoint bundles chunks by simply including multiple chunks in one
   outbound SCTP packet.  The total size of the resultant IP datagram,

   including the SCTP packet and IP headers, MUST be less that or equal
   to the current Path MTU.

   ---------
   New text: (Section 6.10)
   ---------

   An endpoint bundles chunks by simply including multiple chunks in one
   outbound SCTP packet.  The total size of the resultant IP datagram,
   including the SCTP packet and IP headers, MUST be less that or equal
   to the current Path MTU.

   ---------
   Old text: (Section 10.1)
   ---------
   o  Receive Unacknowledged Message

      Format: RECEIVE_UNACKED(data retrieval id, buffer address, buffer
              size, [,stream id] [, stream sequence number] [,partial
              flag] [,payload protocol-id])

   ---------
   New text: (Section 10.1)
   ---------

   O  Receive Unacknowledged Message

      Format: RECEIVE_UNACKED(data retrieval id, buffer address, buffer
              size, [,stream id] [, stream sequence number] [,partial
              flag] [,payload protocol-id])















Stewart, et al.          Expires January 4, 2016               [Page 14]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   ---------
   Old text: (Appendix C)
   ---------
   ICMP2) An implementation MAY ignore all ICMPv6 messages where the
          type field is not "Destination Unreachable", "Parameter
          Problem",, or "Packet Too Big".

   ---------
   New text: (Appendix C)
   ---------

   ICMP2) An implementation MAY ignore all ICMPv6 messages where the
          type field is not "Destination Unreachable", "Parameter
          Problem", or "Packet Too Big".

3.9.3.  Solution Description

   Typos fixed.

3.10.  CRC32c Sample Code

3.10.1.  Description of the Problem

   The CRC32c computation is described in Appendix B of [RFC4960].
   However, the corresponding sample code and its explanation appears at
   the end of Appendix C, which deals with ICMP handling.

3.10.2.  Text Changes to the Document

   Move the sample code related to CRC32c computation and its
   explanation from the end of Appendix C to the end of Appendix B.

3.10.3.  Solution Description

   Text moved to the appropriate location.

4.  IANA Considerations

   This documents does not require any actions from IANA.

5.  Security Considerations

   This document does not add any security considerations to those given
   in [RFC4960].







Stewart, et al.          Expires January 4, 2016               [Page 15]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


6.  Acknowledgments

   The authors wish to thank Pontus Andersson, Eric W.  Biederman, Jeff
   Morriss, Tom Petch, Julien Pourtet, and Maxim Proshin for their
   invaluable comments.

7.  References

7.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC4960]  Stewart, R., "Stream Control Transmission Protocol", RFC
              4960, September 2007.

7.2.  Informative References

   [RFC2960]  Stewart, R., Xie, Q., Morneault, K., Sharp, C.,
              Schwarzbauer, H., Taylor, T., Rytina, I., Kalla, M.,
              Zhang, L., and V. Paxson, "Stream Control Transmission
              Protocol", RFC 2960, October 2000.

   [RFC4460]  Stewart, R., Arias-Rodriguez, I., Poon, K., Caro, A., and
              M. Tuexen, "Stream Control Transmission Protocol (SCTP)
              Specification Errata and Issues", RFC 4460, April 2006.

Authors' Addresses

   Randall R. Stewart
   Netflix, Inc.
   Chapin, SC  29036
   United States

   Email: randall@lakerest.net


   Michael Tuexen
   Muenster University of Applied Sciences
   Stegerwaldstrasse 39
   48565 Steinfurt
   Germany

   Email: tuexen@fh-muenster.de







Stewart, et al.          Expires January 4, 2016               [Page 16]

Internet-Draft         RFC 4960 Errata and Issues              July 2015


   Karen E. E. Nielsen
   Ericsson
   Kistavaegen 25
   Stockholm  164 80
   Sweden

   Email: karen.nielsen@tieto.com












































Stewart, et al.          Expires January 4, 2016               [Page 17]
