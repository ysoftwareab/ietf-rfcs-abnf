PWE3                                                         O. Nicklass
Internet-Draft                                   RAD Data Communications
Expires: October 19, 2004                                 April 20, 2004



       Managed Objects for TDM over Packet Switched Network (PSN)
                    draft-ietf-pwe3-tdm-mib-00.txt


Status of this Memo


   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.


   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.


   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."


   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.


   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.


   This Internet-Draft will expire on October 19, 2004.


Copyright Notice


   Copyright (C) The Internet Society (2004).  All Rights Reserved.


Abstract


   This memo defines a portion of the Management Information Base (MIB)
   for use with network management protocols in the Internet community.
   In particular, it describes managed objects for pseudo wire
   encapsulation for structured or unstructured TDM (T1, E1, T3, E3)
   circuits over a Packet Switch Network (PSN).











Nicklass                Expires October 19, 2004                [Page 1]
Internet-Draft             Manage TDM over PSN                April 2004



Table of Contents


   1.   Introduction . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.   Conventions used in this document  . . . . . . . . . . . . .   4
   3.   Terminology  . . . . . . . . . . . . . . . . . . . . . . . .   4
   4.   The Internet-Standard Management Framework . . . . . . . . .   4
   5.   Overview . . . . . . . . . . . . . . . . . . . . . . . . . .   5
   6.   TDM MIB module usage . . . . . . . . . . . . . . . . . . . .   5
   6.1  Structure of TDM MIB . . . . . . . . . . . . . . . . . . . .   5
   6.2  TDM Connection configuration Procedure . . . . . . . . . . .   6
   6.3  TDM PW Monitoring  . . . . . . . . . . . . . . . . . . . . .   6
   7.   Example of actual TDM PW Setup . . . . . . . . . . . . . . .   7
   8.   Object definition  . . . . . . . . . . . . . . . . . . . . .   9
   9.   Security considerations  . . . . . . . . . . . . . . . . . .  33
   10.  IANA considerations  . . . . . . . . . . . . . . . . . . . .  34
   11.  References . . . . . . . . . . . . . . . . . . . . . . . . .  34
   11.1 Normative references . . . . . . . . . . . . . . . . . . . .  34
   11.2 Informative references . . . . . . . . . . . . . . . . . . .  36
   12.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . .  36
        Author's Address . . . . . . . . . . . . . . . . . . . . . .  36
        Full Copyright Statement . . . . . . . . . . . . . . . . . .  37































Nicklass                Expires October 19, 2004                [Page 2]
Internet-Draft             Manage TDM over PSN                April 2004



1. Introduction


   This document describes a model for managing TDM pseudo wires, i.e.
   TDM data encapsulated for transmission over a Packet Switched Network
   (PSN).  The term TDM in this document is limited to the scope of PDH
   hierarchy.  It is currently specified to carry any TDM Signals in
   either Structure Agnostic Transport mode (E1, T1, E3 and T3) or in
   Structure Aware Transport mode (E1, T1 and NxDS0) as defined in PWE3
   TDM Requirements document [PWTDMREQ].


   This document is closely related to [SATOP], [TDMOIP] and [CESOPSN]
   which describe the encapsulation of TDM signals and provide the
   Circuit Emulation Service over a Packet Switched Network (PSN).


   The TDM management model consists of several MIB modules, following
   the layering model described in the PWE3 Architecture [PWARCH]
   document.  The TDM MIB module described in this document works
   closely with the MIB modules described in [DS3MIB], [DS1MIB],
   [DS0MIB], [IFMIB], [PWMIB] and the textual conventions defined in
   [PWTC].  The conceptual layering and relationship among all those is
   described in Figure 1 below.  A TDM connection will be a pseudo-wire
   (PW) connection.  It will not be treated as an interface and will
   therefore not be represented in the ifTable.



                       Figure 1:Conceptual Layering


                            +------------------+
                            |     TDM MIB      |  DS1MIB, DS3MIB,
                            +------------------+  DS0MIB
                                     |
                            +------------------+  PW-TDM-MIB,
               Service      |    TDM PW MIB    |  PW-SATOP-MIB,
                Layer       +------------------+  PW-TDMOIP-MIB,
                                     |            PW-CESOPSN-MIB
              - - - - - - - - - - -  | - - - - - - - - - - - - - - -
                            +------------------+
              Generic PW    | Generic PW MIBS  |  PW-TC-MIB,
                Layer       +------------------+  PW-MIB
              - - - - - - - - - - - -| - - - - - - - - - - - - - - -
                            +------------------+
                PSN VC      |   MPLS VC MIBS   |  PW-MPLS-MIB
                Layer       +------------------+
              - - - - - - - - - - - -| - - - - - - - - - - - - - - -
                            +------------------+
                 PSN        |    MPLS MIBs     |  MPLS-TE-STD-MIB,
                Layer       +------------------+  MPLS-LSR-STD-MIB





Nicklass                Expires October 19, 2004                [Page 3]
Internet-Draft             Manage TDM over PSN                April 2004



   Comments should be made directly to PWE3 group at pwe3@ietf.org.


2.  Conventions used in this document


   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC-2119 [BCP14].


3. Terminology


   The Basic terminology used to refer to transmission direction in this
   document is taken from [SATOP] draft that describes a mechanism for
   transporting Structure-Agnostic (TDM) bit-streams over a packet-
   oriented network.  For simplifying this document the terminology is
   used for structure and unstructured TDM as well.


   "PSN-bound" references the traffic direction where TDM data is
   received, adapted to packet based on number of payload bytes per
   packet, assigned a SAToP header (Sequence numbers, flags, and
   timestamps (if the RTP header is used)), prepended multiplexing layer
   and PSN headers and sent into the PSN.


   Conversely, The "CE-bound" references the traffic direction where
   packets are received from the PSN, packet payloads are reassembled by
   including a jitter buffer where payload of the received TDM packets
   is stored prior to play-out to the TDM line.  The size of this buffer
   SHOULD be locally configurable to allow accommodation to the PSN-
   specific packet delay variation.


   The CE-bound TDM inter-working function (IWF) SHOULD use the sequence
   number in the control word for detection of lost (LOPS) and mis-
   ordered packets.  If the RTP header is used, the RTP sequence numbers
   MAY be used for the same purposes.


4. The Internet-Standard Management Framework


   For a detailed overview of the documents that describe the current
   Internet-Standard Management Framework, please refer to section 7 of
   RFC 3410 [RFC3410].


   Managed objects are accessed via a virtual information store, termed
   the Management Information Base or MIB.  MIB objects are generally
   accessed through the Simple Network Management Protocol (SNMP).
   Objects in the MIB are defined using the mechanisms defined in the
   Structure of Management Information (SMI).  This memo specifies a MIB
   module that is compliant to the SMIv2, which is described in STD 58,
   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580
   [RFC2580].




Nicklass                Expires October 19, 2004                [Page 4]
Internet-Draft             Manage TDM over PSN                April 2004



5. Overview


   This MIB module is designed to satisfy the following requirements and
   constraints:


   1.  Fits within the architecture defined by [PWARCH] and [PWMIB].


   2.  The MIB module supports edge-to-edge emulation of any TDM
       connections.


   3.  The MIB module configures the connection.  The connection
       specific behavior is provided via the supplement MIB modules such
       as [SATOPMIB].


   4.  The MIB module reports various alarms, counters and status
       objects.



6. TDM MIB module usage


6.1 Structure of TDM MIB


   The MIB consists of five tables;


   -The TDM PW Table (pwVcTDMTable) contains generic TDM information
   regarding the PW connection.  It contains the ifIndex of the TDM
   interface, an index to an entry in the generic configuration table
   (pwVcTDMCfgTable), an index to an entry in the specific configuration
   table (pwVcXXXCfgTable, where XXX can be SAToP or TDMoIP or CESoPSN),
   config error indications, and various status indications.  The two
   indices of the two configuration tables are providing the connection
   parameters.  The TDM interface can be a full link of any TDM type
   like E1 or DS3 for example, or the interface of the bundle holding
   the collection of time slots to be transmitted.  Based on the TDM PW
   type the relevant pwVcXXXCfgTable from the relevant MIB module will
   be used.  The specific types are:


   o  17   Structure-agnostic E1 over Packet (XXX=SAToP)


   o  18   Structure-agnostic T1 (DS1) over Packet (XXX=SAToP)


   o  19   Structure-agnostic E3 over Packet (XXX=SAToP)


   o  20   Structure-agnostic T3 (DS3) over Packet (XXX=SAToP)


   o  21   CESoPSN basic mode (XXX=CESoPSN)


   o  22   TDMoIP basic mode (XXX=TDMoIP)




Nicklass                Expires October 19, 2004                [Page 5]
Internet-Draft             Manage TDM over PSN                April 2004



   o  23   CESoPSN TDM with CAS (XXX=CESoPSN)


   o  24   TDMoIP TDM with CAS (XXX=TDMoIP)


   - The TDM generic parameter Table (pwVcTDMCfgTable,  ) contains TDM
   generic configurable parameters for any TDM Type.


   - The TDM Performance Current Table (pwVcTDMPerfCurrentTable)
   contains TDM statistics for the current 15-minute period.


   - The TDM Performance Interval Table (pwVcTDMPerfIntervalTable)
   contains TDM statistics for historical intervals (usually 96 15-
   minute entries to cover a 24 hour period).


   - The TDM Performance Table (pwVcTDMPerfTable) contains TDM stats for
   statistics accumulated since the TDM PW was first established.


6.2 TDM Connection configuration Procedure


   Configuring a TDM PW involves the following steps:


   First Configure the parameters of the interface specific layer using
   DS1-MIB and or DS3-MIB.


   Next, if applicable, create a bundle of Time Slots using DS0 Bundle
   MIB [DS0MIB].


   Next, create an entry in the pwVcTable and configure the PSN tunnels:


   - Follow steps as defined in [PWMIB].


   NOTE: The agent should create an entry in the pwVcTDMTable for any
   entry created in the pwVcTable with pwVcType equal to a value between
   (17) to (24).


   Next complete the TDM PW configuration:


   - If necessary, create an entry in the relevant pwVcXXXCfgTable and
   in the pwVcTDMTable (suitable entries may already exist in both
   tables).


   - Set the index of the relevant pwVcXXXCfgTable entry and of the
   relevant pwVcTDMCfgTable entry in the pwVcTDMTable.


6.3 TDM PW Monitoring


   Upon making the TDM PW operational, the pwVcTDMPerfCurrentTable,
   pwVcTDMPerfIntervalTable, and pwVcTDMPerfTable can be used to monitor




Nicklass                Expires October 19, 2004                [Page 6]
Internet-Draft             Manage TDM over PSN                April 2004



   the various counters, indicators, and conditions of the PW.  All
   performance parameters are accumulated in fifteen minute intervals
   and up to 96 intervals (24 hours worth) are kept by an agent.  Fewer
   than 96 intervals of data will be available if the agent has been
   restarted within the last 24 hours.  In addition, there is a rolling
   running counters of each performance parameter.  Performance
   parameters continue to be collected when the interface is down.
   There is no requirement for an agent to ensure fixed relationship
   between the start of a fifteen minute interval and any wall clock;
   however some agents may align the fifteen minute intervals with
   quarter hours.  Performance parameters are of types PerfCurrentCount
   and PerfIntervalCount.  These textual conventions are all Gauge32,
   and they are used because it is possible for these objects to
   decrease.


7. Example of actual TDM PW Setup


   This section provides an example of using the various MIB objects
   described in the following section to set up a TDM PW connection.


   First example, setting a connection of DS1 type.  Second example
   setting a connection with bandwidth of 3 DS0 (time slots).


   While those examples are not meant to illustrate all options of the
   MIB, they are intended as an aid to understanding some of the key
   concepts.  See [PWMIB] for an example of setting up PSN Tunnels.


   First example:


   1.  Configure the DS1 interface using DS1-MIB.


   2.  Since Structure-Agnostic TDM circuit is defined, the next MIB
       module to be used is SATOP-MIB.


   3.  If needed, Create an entry in the pwVcTDMCfgTable (index = 10);
       Verify that there are no errors in the configuration using the
       relevant object.


   4.  If needed, Create an entry in the pwVcSatopCfgTable
       [SATOPMIB](index = 11); Verify that there are no errors in the
       configuration using the relevant object.


   5.  Get a new pwVcIndexNext [PWMIB] and create a new pwVcTable entry
       using the value of pwVcIndexNext (assume here, the PW index =
       20).


   6.  Set the pwVcType [PWMIB] of the new entry to the relevant value
       (17) or (18).  This should create a new entry in the




Nicklass                Expires October 19, 2004                [Page 7]
Internet-Draft             Manage TDM over PSN                April 2004



       pwVcTDMTable.


   7.  Configure the newly created TDM PW with the required pointers,
       indices, the relevant entry in pwVcTDMCfgTable (assuming index is
       10), and the relevant entry in pwVcSatopCfgTable (assuming index
       is 11).


   In [DS1MIB] dsx1IfIndex (ifIndex    = 5)



     In pwVcTDMCfgTable entry: Set the connection characteristic
     parameters:


     {


     pwVcTDMCfgPayloadSize     = 43 -- payload bytes
     pwVcTDMCfgPktReorder      = FALSE
     pwVcTDMCfgRtpHdrUsed      = FALSE
     pwVcTDMCfgJtrBfrDepth     = 30 -- milli-seconds


     }


     In pwVcTDMTable entry: Set the relevant ifIndex, the generic
     TDM Index and the specific TDM index to complete creation:


     {
       pwVcTDMIfIndex          = 5    -- IfIndex of associated entry
                                      -- in DS1 table
       pwVcGenTDMCfgIndex      = 10   -- Index of associated entry
                                      -- in pwVcTDMCfgTable.
       pwVcRelTDMCfgIndex      = 11  -- Index of associated entry
                                      -- in pwVcSatopCfgTable.
     }


   Verify that there are no error bits set in pwVcTDMConfigError.


   Second example:


   1.  Configure the DS1 interface using DS1-MIB.


   2.  set up a bundle and get its dsx0BundleIfIndex.  Setting up the
       bundle should involve using IFMIB  properly.


   3.  Since structured TDMoIP circuit is defined, the next MIB module
       to be used is TDMoIP-MIB.


   4.  If needed, Create an entry in the pwVcTDMCfgTable (index = 7):





Nicklass                Expires October 19, 2004                [Page 8]
Internet-Draft             Manage TDM over PSN                April 2004



   5.  If needed, Create an entry in the pwVcTDMoIPCfgTable
       [TDMOIPMIB](index = 11):


   6.  Verify that there are no error in the configuration using the
       relevant object.


   7.  Get a new pwVcIndexNext [PWMIB] and create a new pwVcTable entry
       using the value of pwVcIndexNext.


   8.  Set the pwVcType [PWMIB] of the new entry to (24).  This should
       create a new entry in the pwVcTDMTable.


   9.  Configure the newly created TDM PW with the required pointers,
       indices and the relevant entries in pwVcTDMCfgTable and in
       pwVcTDMoIPCfgTable (assuming indeces 7 and  11).




     In [DS1MIB] dsx1IfIndex (ifIndex    = 5
     In [DS0MIB] dsx0BundleIfIndex       = 8


     In pwVcTDMTable entry: Set the relevant ifIndex, the generic
     TDM Index and the specific TDM index to complete creation:


     {
       pwVcTDMIfIndex          =  8   -- IfIndex of associated entry
                                      -- in DS0 table
       pwVcGenTDMCfgIndex      =  7   -- Index of associated entry
                                      -- in pwVcTDMCfgTable.
       pwVcRelTDMCfgIndex      = 11   -- Index of associated entry
                                      -- in pwVcTDMoIPCfgTable.
     }


     Verify that there are no error bits set in pwVcTDMConfigError.



8.  Object definition



   PW-TDM-MIB DEFINITIONS ::= BEGIN


   IMPORTS
     MODULE-IDENTITY, OBJECT-TYPE,
     Integer32, Counter32, Unsigned32
        FROM SNMPv2-SMI


     MODULE-COMPLIANCE, OBJECT-GROUP
        FROM SNMPv2-CONF




Nicklass                Expires October 19, 2004                [Page 9]
Internet-Draft             Manage TDM over PSN                April 2004



     TEXTUAL-CONVENTION, TruthValue,  RowStatus, StorageType,
      TimeStamp
        FROM SNMPv2-TC


     InterfaceIndexOrZero
        FROM IF-MIB


     PerfCurrentCount, PerfIntervalCount
        FROM PerfHist-TC-MIB


     pwStdMIB
        FROM PW-TC-DRAFT04-MIB


     pwVcIndex
        FROM PW-DRAFT04-MIB;



   -- The TDM MIB


     pwVcTDMMIB MODULE-IDENTITY


     LAST-UPDATED "200402030000Z"
     ORGANIZATION "Pseudo-Wire Emulation Edge-to-Edge (PWE3)
                   Working Group"
     CONTACT-INFO
         "        Orly Nicklass
          Postal: RAD Data Communications
                  24 Raoul Wallenberg St., Bldg C
                  Tel Aviv 69719, Israel
                  Email: orly_n@rad.com


          The PWE3 Working Group (email distribution pwe3@ietf.org,
          http://www.ietf.org/html.charters/pwe3-charter.html)
          "


     DESCRIPTION
         "This MIB contains managed object definitions for
          encapsulating TDM (T1,E1, T3, E3, NxDS0) as
          pseudo-wires over packet-switching networks (PSN).


          This MIB reports to the PW-STD-MIB as in: Zelig, D.,
          Nadeau,T. 'Pseudo Wire (PW) Management Information Base'.
          ThePW-STD-MIB contains structures and MIB associations
          generic to Pseudo-Wire (PW) emulation. PW-specific
          MIBs (such as this) contain config and stats for specific
          PW types.


          Copyright (C) The Internet Society (2004).  This version




Nicklass                Expires October 19, 2004               [Page 10]
Internet-Draft             Manage TDM over PSN                April 2004



          of this MIB module is part of RFC yyyy;  see the RFC
          itself for full legal notices.
   -- RFC Ed.: replace yyyy with actual RFC number & remove this
          note"
     ::= { pwStdMIB 5 } --To be assigned by IANA


   -- Local Textual conventions
   PwVcTDMCfgIndex ::= TEXTUAL-CONVENTION
     STATUS      current
     DESCRIPTION
          "Index into any of the relevant pwVcXXXCfgTable."
     SYNTAX  Unsigned32


   -- Tables, Scalars
   pwVcTDMObjects       OBJECT IDENTIFIER
                                ::= { pwVcTDMMIB 1 }
   -- Notifications
   pwVcTDMTraps         OBJECT IDENTIFIER
                                ::= { pwVcTDMMIB 2 }


   -- Conformance
   pwVcTDMConformance   OBJECT IDENTIFIER
                                ::= { pwVcTDMMIB 3 }


   -- TDM PW table


   pwVcTDMTable OBJECT-TYPE
     SYNTAX        SEQUENCE OF PwVcTDMEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "This table contains basic information including ifIndex,
          and pointers to entries in the relevant TDM config
          tables for this TDM PW."
     ::= { pwVcTDMObjects 1 }


   pwVcTDMEntry OBJECT-TYPE
     SYNTAX        PwVcTDMEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "This table is indexed by the same index that was
          created for the associated entry in the PW Table
          (in the PW-STD-MIB).


            - The PwVcIndex.


          An entry is created in this table by the agent for every




Nicklass                Expires October 19, 2004               [Page 11]
Internet-Draft             Manage TDM over PSN                April 2004



          entry in the pwVcTable with a pwVcType of 'TDM'."


     INDEX  { pwVcIndex }


        ::= { pwVcTDMTable 1 }


   PwVcTDMEntry ::= SEQUENCE {


        pwVcTDMType                       INTEGER,
        pwVcTDMIfIndex                    InterfaceIndexOrZero,
        pwVcGenTDMCfgIndex                PwVcTDMCfgIndex,
        pwVcRelTDMCfgIndex                PwVcTDMCfgIndex,
        pwVcTDMAvePktLossTimeWindow       Integer32,
        pwVcTDMConfigError                BITS,
        pwVcTDMTimeElapsed                Integer32,
        pwVcTDMValidIntervals             Integer32,
        pwVcTDMCurrentIndications         BITS,
        pwVcTDMLatchedIndications         BITS,
        pwVcTDMLastEsTimeStamp            TimeStamp
        }


   pwVcTDMType OBJECT-TYPE
     SYNTAX INTEGER {


           other           (1),
           ds1             (2),
           e1              (3),
           ds3             (4),
           e3              (5),
           octetAlignedT1  (6),
           nXds0           (7),
           nXds0WithCASe1  (8),
           nXds0WithCASds1Esf (9),
           nXds0WithCASds1Sf (10)


     }
     MAX-ACCESS    read-write
     STATUS        current
     DESCRIPTION
         "Specifies the type of TDM PW. The connection assumed to be
          symmetrical having the same value at both ends. To identify
          structured vs. unstructured type for DS1 and E1, dsx1LineType
          and dsx1SignalMode [DS1MIB] should be referenced. DS3 and E3
          are always unstructured. "
     DEFVAL { e1 }
     ::= { pwVcTDMEntry 1 }






Nicklass                Expires October 19, 2004               [Page 12]
Internet-Draft             Manage TDM over PSN                April 2004



   pwVcTDMIfIndex OBJECT-TYPE
     SYNTAX        InterfaceIndexOrZero
     MAX-ACCESS    read-write
     STATUS        current
     DESCRIPTION
         "This is a unique index within the ifTable. It represents
          the interface index of the full link or the interface
          index for the bundle holding the group of
          time slots to be transmitted via this PW connection.


          A value of zero indicates an interface index that has yet
          to be determined.
          Once set, if the TDM ifIndex is (for some reason) later
          removed, the agent SHOULD delete the associated PW rows
          (e.g., this pwVcTDMTable entry). If the agent does not
          delete the rows,  the agent MUST set this object to
          zero."
     ::= { pwVcTDMEntry 2 }


   pwVcGenTDMCfgIndex OBJECT-TYPE
     SYNTAX        PwVcTDMCfgIndex
     MAX-ACCESS    read-write
     STATUS        current
     DESCRIPTION
         "Index to the generic parameters in the TDM configuration
          table that appears in this MIB module. It is likely that
          multiple TDM PWs of the same characteristic will share
          a single TDM Cfg entry."
     ::= { pwVcTDMEntry 3 }


   pwVcRelTDMCfgIndex OBJECT-TYPE
     SYNTAX        PwVcTDMCfgIndex
     MAX-ACCESS    read-write
     STATUS        current
     DESCRIPTION
         "Index to the relevant TDM configuration table entry
          that appears in one of the related MIB modules
          such as SAToP,TDMoIP or CESoPSN. It is likely that
          multiple TDM PWs of the same characteristic will share
          a single  configuration entry of the relevant type."
     ::= { pwVcTDMEntry 4 }


   pwVcTDMAvePktLossTimeWindow OBJECT-TYPE
     SYNTAX        Integer32
     UNITS         "millisecond"
     MAX-ACCESS    read-write
     STATUS        current
     DESCRIPTION




Nicklass                Expires October 19, 2004               [Page 13]
Internet-Draft             Manage TDM over PSN                April 2004



         "The length of time over which the average packet
          loss rate should be computed to detect Excessive packet
          loss rate"
     ::= { pwVcTDMEntry 5 }


   pwVcTDMConfigError OBJECT-TYPE
     SYNTAX BITS {
           other                         ( 0),
           tdmTypeIncompatible           ( 1),
           peerRtpIncompatible           ( 2),
           peerPayloadSizeIncompatible   ( 3)
     }
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Any of the bits are set if the local configuration is
          not compatible with the peer configuration as available
          from  the various parameters' options.


         -tdmTypeIncompatible bit is set if the local configuration
          is not carrying the same TDM type as the peer configuration.


          -peerRtpIncompatible bit is set if the local configuration
          is configured to send RTP packets for this PW, and the
          remote is not capable of accepting RTP packets.


          -peerPayloadSizeIncompatible bit is set if the local
          configuration is not carrying the same Payload Size as the
          peer configuration.  "
     ::= { pwVcTDMEntry 6}


   pwVcTDMTimeElapsed OBJECT-TYPE
      SYNTAX  Integer32 (1..900)
      MAX-ACCESS  read-only
      STATUS  current
      DESCRIPTION
         "The number of seconds, including partial seconds,
          that have elapsed since the beginning of the current
          measurement period. If, for some reason, such as an
          adjustment in the system's time-of-day clock, the
          current interval exceeds the maximum value, the
          agent will return the maximum value."
      ::= { pwVcTDMEntry 7}


   pwVcTDMValidIntervals OBJECT-TYPE
      SYNTAX  Integer32 (0..96)
      MAX-ACCESS  read-only
      STATUS  current




Nicklass                Expires October 19, 2004               [Page 14]
Internet-Draft             Manage TDM over PSN                April 2004



      DESCRIPTION
         "The number of previous 15-minute intervals for which data
          was collected.
          An agent with TDM capability must be capable of supporting
          at least n intervals. The minimum value of n is 4, The
          default of n is 32 and the maximum value of n is 96.
          The value will be <n> unless the measurement was (re-)
          started within the last (<n>*15) minutes, in which case
          the  value will be the number of complete 15 minute
          intervals for which the agent has at least some data.
          In certain cases(e.g., in the case where the agent is
          a proxy) it is  possible that some intervals are unavailable.
          In this case, this interval is the maximum interval number
          for which data is available. "
      ::= { pwVcTDMEntry 8}


   pwVcTDMCurrentIndications OBJECT-TYPE
     SYNTAX BITS {
           other               ( 0),
           strayPacket         ( 1),
           malformedPacket     ( 2),
           excessivePktLossRate( 3),
           bufferOverrun       ( 4),
           bufferUnderrun      ( 5),
           remotePktLoss       ( 6),
           pktMisOrder         ( 7),
           packetLoss          ( 8),
           tdmFault            ( 9)
     }
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "The following defects should be detected and reported
          upon request:


          -Stray packets MAY be detected by the PSN and multiplexing
          layers. Stray packets MUST be discarded by the CE-bound IWF
          and their detection MUST NOT affect mechanisms for detection
          of packet loss.


          -Malformed packets are detected by mismatch between the
          expected packet size (taking the value of the L bit into
          account) and the actual packet size inferred from the PSN and
          multiplexing layers. Malformed in-order packets MUST be
          discarded by the CE-bound IWF and replacement data generated
          as for lost packets.


          -Excessive packet loss rate is detected by computing the




Nicklass                Expires October 19, 2004               [Page 15]
Internet-Draft             Manage TDM over PSN                April 2004



          average packet loss rate over the value of
          pwVcTDMAvePktLossTimeWindow and comparing it with a
          preconfigured threshold [SATOP].


          -Buffer overrun is detected in the normal operation state
          when the CE bound IWF's jitter buffer cannot accommodate
          newly arrived packets.


          -Remote packet loss is indicated by reception of packets with
          their R bit set.


          -Packet misorder is detected by looking at the Sequence
          number provided by the control word.


          -TDM Fault, if L bit in the control word is set, it indicates
          that TDM data carried in the payload is invalid due an
          attachment circuit fault.  When the L bit is set the payload
          MAY be omitted in order to conserve bandwidth.


          Note: the algorithm used to capture these indications
          is implementation specific."
     ::= { pwVcTDMEntry 9}


   pwVcTDMLatchedIndications OBJECT-TYPE
     SYNTAX BITS {
           other               ( 0),
           staryPacket         ( 1),
           malformedPacket     ( 2),
           excessivePktLossRate( 3),
           bufferOverrun       ( 4),
           bufferUnderrun      ( 5),
           remotePktLoss       ( 6),
           pktMisOrder         ( 7),
           packetLoss          ( 8),
           tdmFault            ( 9)


     }
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "The state of TDM indicators when the TDM PW last declared
          an error second (either as ES, SES or a second with
          errors inside a UAS) condition. At this time, only LOPS
          can create a failure. Since indicators other than LOPS are
          useful, all are latched here. For bit definitions, see
          pwVcTDMCurrentIndications above.


          Note: the algorithm used to latch these indications when




Nicklass                Expires October 19, 2004               [Page 16]
Internet-Draft             Manage TDM over PSN                April 2004



          entering an defect state is implementation specific."
     ::= { pwVcTDMEntry 10}


   pwVcTDMLastEsTimeStamp OBJECT-TYPE
     SYNTAX      TimeStamp
     MAX-ACCESS  read-only
     STATUS      current
     DESCRIPTION
         "The value of sysUpTime on the most recent occasion at
          which the TDM PW entered the ES or SES state."
     ::= { pwVcTDMEntry 11}


   -- End of TDM PW table


   -- PW Generic TDM PW Configuration Table


   pwVcTDMCfgIndexNext OBJECT-TYPE
     SYNTAX            PwVcTDMCfgIndex
     MAX-ACCESS        read-only
     STATUS            current
     DESCRIPTION
         "This object contains the value to be used for
          pwVcTDMCfgIndex when creating entries in the
          pwVcTDMCfgTable. The value 0 indicates that no
          unassigned entries are available.  To obtain the
          value of pwVcTDMCfgIndex for a new entry in the
          pwVcTDMCfgTable, the manager issues a management
          protocol retrieval operation to obtain the current
          value of pwVcTDMCfgIndex. After each retrieval
          operation, the agent should modify the value to
          reflect the next unassigned index.  After a manager
          retrieves a value the agent will determine through
          its local policy when this index value will be made
          available for reuse."
     ::= { pwVcTDMObjects 2 }



   pwVcTDMCfgTable   OBJECT-TYPE
     SYNTAX                  SEQUENCE OF PwVcTDMCfgEntry
     MAX-ACCESS              not-accessible
     STATUS                  current
     DESCRIPTION
       "This table contains a set of parameters that may be
        referenced by one or more TDM PWs in pwVcTDMTable."


     ::= { pwVcTDMObjects 3 }


   pwVcTDMCfgEntry   OBJECT-TYPE




Nicklass                Expires October 19, 2004               [Page 17]
Internet-Draft             Manage TDM over PSN                April 2004



     SYNTAX            PwVcTDMCfgEntry
     MAX-ACCESS        not-accessible
     STATUS            current
     DESCRIPTION
          "These parameters define the characteristics of a
           TDM PW. They are grouped here to ease NMS burden.
           Once an entry is created here it may be re-used
           by many PWs."


     INDEX  { pwVcTDMCfgIndex }


        ::= { pwVcTDMCfgTable 1 }


   PwVcTDMCfgEntry ::= SEQUENCE {
        pwVcTDMCfgIndex                   PwVcTDMCfgIndex,
        pwVcTDMCfgRowStatus               RowStatus,
        pwVcTDMCfgConfErr                 BITS,
        pwVcTDMCfgPayloadSize             Unsigned32,
        pwVcTDMCfgPktReorder              TruthValue,
        pwVcTDMCfgRtpHdrUsed              TruthValue,
        pwVcTDMCfgJtrBfrDepth             Unsigned32,
        pwVcTDMCfgPayloadSuppression      INTEGER,
        pwVcTDMCfgStorageType             StorageType
        }


   pwVcTDMCfgIndex   OBJECT-TYPE
     SYNTAX        PwVcTDMCfgIndex
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "Index to an entry in this table"
     ::= { pwVcTDMCfgEntry 1 }


   pwVcTDMCfgRowStatus    OBJECT-TYPE
     SYNTAX               RowStatus
     MAX-ACCESS           read-create
     STATUS               current
     DESCRIPTION
         "Object used for creating, modifying, and deleting
          a row from this table."
     ::= { pwVcTDMCfgEntry 2 }


   pwVcTDMCfgConfErr OBJECT-TYPE
     SYNTAX BITS {
           other         ( 0),
           pktLength     ( 1),
           jtrBfrDepth   ( 2)
     }




Nicklass                Expires October 19, 2004               [Page 18]
Internet-Draft             Manage TDM over PSN                April 2004



     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Various configuration errors. Illegal settings within
          the pwVcTDMCfg table."
     ::= { pwVcTDMCfgEntry 3 }


   pwVcTDMCfgPayloadSize OBJECT-TYPE
     SYNTAX        Unsigned32
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "The value of this object indicates the PayLoad Size to
          be defined during the PW setUp. Upon TX, implementation
          must be capable of carrying that amount of data.
          Upon RX, When the LEN field is set to 0, the payload of
          packet  MUST assume this size, and if the actual
          packet size is inconsistent with this length,
          the packet MUST be considered to be malformed. "
     ::= { pwVcTDMCfgEntry 4 }


   pwVcTDMCfgPktReorder OBJECT-TYPE
     SYNTAX        TruthValue
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "If set True: as CE bound packets are queued in the
          jitter buffer, out of order packets are re-ordered. The
          maximum sequence number differential (i.e., the range in
          which re-sequencing can occur) is dependant on the depth
          of the jitter buffer. See pwVcTDMCfgJtrBfrDepth.


          NOTE: Some implementations may not support this feature.
          The agent is then required to set this False."
     ::= { pwVcTDMCfgEntry 5 }


   pwVcTDMCfgRtpHdrUsed OBJECT-TYPE
     SYNTAX        TruthValue
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "If set False: an RTP header is not pre-pended to the
          TDM packet."
     REFERENCE
      "See [SATOP]"
     DEFVAL { false }


     ::= { pwVcTDMCfgEntry 6 }




Nicklass                Expires October 19, 2004               [Page 19]
Internet-Draft             Manage TDM over PSN                April 2004



   pwVcTDMCfgJtrBfrDepth OBJECT-TYPE
     SYNTAX        Unsigned32
     UNITS         "millisecond"
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "The size of the Jitter buffer SHOULD be defined to
          a value that is capable to allow accommodation to the
          PSN-specific packet delay variation.


          If configured to a value not supported by the
          implementation, the agent MUST return an error code
          'jtrBfrDepth' in 'pwVcTDMConfigError '


          NOTE: jitter buffers are a limited resource to
          be managed."
     DEFVAL { 3 }


     ::= { pwVcTDMCfgEntry 7 }


   pwVcTDMCfgPayloadSuppression  OBJECT-TYPE
     SYNTAX        INTEGER
                    {
                       enable  ( 1),
                       disable ( 2)
                    }
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "Selecting 'enable' means: Payload suppression is allowed.
          Payload MAY be omitted in order to conserve bandwidth.
          Selecting 'disable' means: no suppresion under any
          condition."


     ::= { pwVcTDMCfgEntry 8 }


   pwVcTDMCfgStorageType  OBJECT-TYPE
     SYNTAX            StorageType
     MAX-ACCESS        read-create
     STATUS            current
     DESCRIPTION
         "This variable indicates the storage type for this
          row."
     ::= { pwVcTDMCfgEntry 9 }


   -- END of Table


   -- TDM PW Performance Current Table.




Nicklass                Expires October 19, 2004               [Page 20]
Internet-Draft             Manage TDM over PSN                April 2004



   pwVcTDMPerfCurrentTable OBJECT-TYPE
     SYNTAX        SEQUENCE OF PwVcTDMPerfCurrentEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "The current 15 minute interval counts are in
          this table.


          This table provides per TDM PW performance information."


     ::= { pwVcTDMObjects 5 }


   pwVcTDMPerfCurrentEntry OBJECT-TYPE
     SYNTAX        PwVcTDMPerfCurrentEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "An entry in this table is created by the agent for every
          pwVcTDM entry. After 15 minutes, the contents of this table
          entry are copied to a new entry in the pwVcTDMPerfInterval
          table and the counts in this entry are reset to zero."


     INDEX  { pwVcIndex }


     ::= { pwVcTDMPerfCurrentTable 1 }


   PwVcTDMPerfCurrentEntry ::= SEQUENCE {


        pwVcTDMPerfCurrentMisOrder           Counter32,
        pwVcTDMPerfCurrentPktsOoseq          Counter32,
        pwVcTDMPerfCurrentJtrBfrUnderruns    Counter32,
        pwVcTDMPerfCurrentJtrBfrOverruns     Counter32,
        pwVcTDMPerfCurrentMalformedPkt       Counter32,


        pwVcTDMPerfCurrentESs                PerfCurrentCount,
        pwVcTDMPerfCurrentSESs               PerfCurrentCount,
        pwVcTDMPerfCurrentUASs               PerfCurrentCount,
        pwVcTDMPerfCurrentFC                 PerfCurrentCount
     }


   pwVcTDMPerfCurrentMisOrder OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of times the sequence number of an incoming frame
          causes a transition to LOPS."
     ::= { pwVcTDMPerfCurrentEntry 1 }




Nicklass                Expires October 19, 2004               [Page 21]
Internet-Draft             Manage TDM over PSN                April 2004



   pwVcTDMPerfCurrentPktsOoseq OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected out of sequence (via TDM
          header sequence numbers), but successfully re-ordered.
          Note: some implementations may not support this
          Feature."
     ::= { pwVcTDMPerfCurrentEntry 2 }


   pwVcTDMPerfCurrentJtrBfrUnderruns OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of times a packet needed to be played
          out and the jitter buffer was empty."
     ::= { pwVcTDMPerfCurrentEntry 3 }


   pwVcTDMPerfCurrentJtrBfrOverruns OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected out of range (via TDM
          header sequence numbers), and could not be re-
          ordered, or could not fit in the jitter buffer."
      ::= { pwVcTDMPerfCurrentEntry 4 }


   pwVcTDMPerfCurrentMalformedPkt OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected with unexpected size, or
          bad headers' stack"
     ::= { pwVcTDMPerfCurrentEntry 5 }


   pwVcTDMPerfCurrentESs OBJECT-TYPE
      SYNTAX       PerfCurrentCount
      MAX-ACCESS   read-only
      STATUS       current
      DESCRIPTION
          "The counter associated with the number of Error
           Seconds encountered."
      ::= { pwVcTDMPerfCurrentEntry 6 }





Nicklass                Expires October 19, 2004               [Page 22]
Internet-Draft             Manage TDM over PSN                April 2004



   pwVcTDMPerfCurrentSESs OBJECT-TYPE
      SYNTAX        PerfCurrentCount
      MAX-ACCESS    read-only
      STATUS        current
      DESCRIPTION
          "The counter associated with the number of
           Severely Error Seconds encountered."
      ::= { pwVcTDMPerfCurrentEntry 7 }


   pwVcTDMPerfCurrentUASs OBJECT-TYPE
      SYNTAX        PerfCurrentCount
      MAX-ACCESS    read-only
      STATUS        current
      DESCRIPTION
          "The counter associated with the number of
           Unavailable Seconds encountered."
      ::= { pwVcTDMPerfCurrentEntry 8 }


   pwVcTDMPerfCurrentFC OBJECT-TYPE
      SYNTAX        PerfCurrentCount
      MAX-ACCESS    read-only
      STATUS        current
      DESCRIPTION
          "TDM Failure Counts (FC-TDM). The number of TDM failure
           events. A failure event begins when the LOPS failure
           is declared, and ends when the failure is cleared. A
           failure event that begins in one period and ends in
           another period is counted only in the period in which
           it begins."
      ::= { pwVcTDMPerfCurrentEntry 9 }


   -- End TDM PW Performance Current Interval Table



   -- TDM PW Performance Interval Table.


   pwVcTDMPerfIntervalTable OBJECT-TYPE
     SYNTAX        SEQUENCE OF PwVcTDMPerfIntervalEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "This table provides performance information per TDM PW
          similar to the pwVcTDMPerfCurrentTable above. However,
          these counts represent historical 15 minute intervals.
          Typically, this table will have a maximum of 96 entries
          for a 24 hour period, but is not limited to this. "
     ::= { pwVcTDMObjects 6 }





Nicklass                Expires October 19, 2004               [Page 23]
Internet-Draft             Manage TDM over PSN                April 2004



   pwVcTDMPerfIntervalEntry OBJECT-TYPE
     SYNTAX        PwVcTDMPerfIntervalEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "An entry in this table is created by the agent for
          every pwVcTDMPerfCurrentEntry that is 15 minutes old.
          The contents of the Current entry are copied to the new
          entry here. The Current entry, then resets its counts
          to zero for the next current 15 minute interval. "


     INDEX  { pwVcIndex, pwVcTDMPerfIntervalNumber }


     ::= { pwVcTDMPerfIntervalTable 1 }


   PwVcTDMPerfIntervalEntry ::= SEQUENCE {
        pwVcTDMPerfIntervalNumber             Unsigned32,
        pwVcTDMPerfIntervalValidData          TruthValue,
        pwVcTDMPerfIntervalDuration           Integer32,


        pwVcTDMPerfIntervalMisOrder           Counter32,
        pwVcTDMPerfIntervalPktsOoseq          Counter32,
        pwVcTDMPerfIntervalJtrBfrUnderruns    Counter32,
        pwVcTDMPerfIntervalJtrBfrOverruns     Counter32,
        pwVcTDMPerfIntervalMalformedPkt       Counter32,


        pwVcTDMPerfIntervalESs                PerfIntervalCount,
        pwVcTDMPerfIntervalSESs               PerfIntervalCount,
        pwVcTDMPerfIntervalUASs               PerfIntervalCount,
        pwVcTDMPerfIntervalFC                 PerfIntervalCount
        }


   pwVcTDMPerfIntervalNumber OBJECT-TYPE
     SYNTAX        Unsigned32
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "A number (normally between 1 and 96 to cover a 24 hour
          period) which identifies the interval for which the set
          of statistics is available. The interval identified by 1
          is the most recently completed 15 minute interval, and
          the interval identified by N is the interval immediately
          preceding the one identified by N-1. The minimum range of
          N is 1 through 4. The default range is 1 through 32. The
          maximum value of N is 1 through 96."
     ::= { pwVcTDMPerfIntervalEntry 1 }


   pwVcTDMPerfIntervalValidData OBJECT-TYPE




Nicklass                Expires October 19, 2004               [Page 24]
Internet-Draft             Manage TDM over PSN                April 2004



     SYNTAX        TruthValue
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "This variable indicates if the data for this interval
          is valid."
     ::= { pwVcTDMPerfIntervalEntry 2 }


   pwVcTDMPerfIntervalDuration OBJECT-TYPE
      SYNTAX      Integer32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
        "The duration of a particular interval in seconds,
         Adjustments in the system's time-of-day clock, may
         cause the interval to be greater or less than, the
         normal value. Therefore this actual interval value
         is provided."
      ::= { pwVcTDMPerfIntervalEntry 3 }


   pwVcTDMPerfIntervalMisOrder OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of times the sequence number of an incoming frame
          causes a transition to LOPS."
     ::= { pwVcTDMPerfIntervalEntry 4 }


   pwVcTDMPerfIntervalPktsOoseq OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected out of sequence (via TDM
          header sequence numbers), but successfully re-ordered.
          Note: some implementations mat not support this
          feature."
     ::= { pwVcTDMPerfIntervalEntry 5 }


   pwVcTDMPerfIntervalJtrBfrUnderruns OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of times a packet needed to be played
          out and the jitter buffer was empty."
     ::= { pwVcTDMPerfIntervalEntry 6 }




Nicklass                Expires October 19, 2004               [Page 25]
Internet-Draft             Manage TDM over PSN                April 2004



   pwVcTDMPerfIntervalJtrBfrOverruns OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected out of range (via TDM
          header sequence numbers), and could not be re-
          ordered, or could not fit in the jitter buffer."
     ::= { pwVcTDMPerfIntervalEntry 7 }


   pwVcTDMPerfIntervalMalformedPkt OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected with unexpected size, or
          bad headers' stack"
     ::= { pwVcTDMPerfIntervalEntry 8 }



   pwVcTDMPerfIntervalESs OBJECT-TYPE
     SYNTAX       PerfIntervalCount
     MAX-ACCESS   read-only
     STATUS       current
     DESCRIPTION
         "The counter associated with the number of Error
          Seconds encountered."
     ::= { pwVcTDMPerfIntervalEntry 9 }


   pwVcTDMPerfIntervalSESs OBJECT-TYPE
     SYNTAX        PerfIntervalCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "The counter associated with the number of
          Severely Error Seconds encountered."
     ::= { pwVcTDMPerfIntervalEntry 10 }


   pwVcTDMPerfIntervalUASs OBJECT-TYPE
     SYNTAX        PerfIntervalCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "The counter associated with the number of
          Unavailable Seconds encountered."
     ::= { pwVcTDMPerfIntervalEntry 11 }


   pwVcTDMPerfIntervalFC OBJECT-TYPE




Nicklass                Expires October 19, 2004               [Page 26]
Internet-Draft             Manage TDM over PSN                April 2004



     SYNTAX        PerfIntervalCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "TDM Failure Counts (FC-TDM). The number of TDM failure
          events. A failure event begins when the LOPS failure
          is declared, and ends when the failure is cleared. A
          failure event that begins in one period and ends in
          another period is counted only in the period in which
          it begins."
     ::= { pwVcTDMPerfIntervalEntry 12 }


   -- End TDM PW Performance Interval Table



   -- TDM PW Performance Table


   pwVcTDMPerfTable OBJECT-TYPE
     SYNTAX        SEQUENCE OF PwVcTDMPerfEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "This table provides performance information per TDM PW
          similar to  the pwVcTDMPerfIntervalTable above. However,
          these counters represent complete historical information. "
     ::= { pwVcTDMObjects 7 }


   pwVcTDMPerfEntry OBJECT-TYPE
     SYNTAX        PwVcTDMPerfEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "An entry is created in this table by the agent for
          every entry in the pwVcTDM table."


     INDEX  { pwVcIndex }


        ::= { pwVcTDMPerfTable 1 }


   PwVcTDMPerfEntry ::= SEQUENCE {
        pwVcTDMPerfMisOrder               Counter32,
        pwVcTDMPerfPktsOoseq              Counter32,
        pwVcTDMPerfJtrBfrUnderruns        Counter32,
        pwVcTDMPerfJtrBfrOverruns         Counter32,
        pwVcTDMPerfMalformedPkt           Counter32,


        pwVcTDMPerfESs                    Counter32,
        pwVcTDMPerfSESs                   Counter32,




Nicklass                Expires October 19, 2004               [Page 27]
Internet-Draft             Manage TDM over PSN                April 2004



        pwVcTDMPerfUASs                   Counter32,
        pwVcTDMPerfFC                     Counter32,
        pwVcTDMPerfDiscontinuityTime      TimeStamp
        }


   pwVcTDMPerfMisOrder OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of times the sequence number of an incoming frame
          causes a transition to LOPS."
     ::= { pwVcTDMPerfEntry 1 }


   pwVcTDMPerfPktsOoseq OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected out of sequence (via TDM
          header sequence numbers), but successfully re-ordered.
          Note: some implementations may not support this
          feature."
     ::= { pwVcTDMPerfEntry 2 }


   pwVcTDMPerfJtrBfrUnderruns OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of times a packet needed to be played
          out and the jitter buffer was empty."
     ::= { pwVcTDMPerfEntry 3 }


   pwVcTDMPerfJtrBfrOverruns OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected out of range (via TDM
          header sequence numbers), and could not be re-
          ordered, or could not fit in the jitter buffer."
     ::= { pwVcTDMPerfEntry 4 }


   pwVcTDMPerfMalformedPkt OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current




Nicklass                Expires October 19, 2004               [Page 28]
Internet-Draft             Manage TDM over PSN                April 2004



     DESCRIPTION
         "Number of packets detected with unexpected size, or
          bad headers' stack."
     ::= { pwVcTDMPerfEntry 5 }



   pwVcTDMPerfESs OBJECT-TYPE
     SYNTAX       Counter32
     MAX-ACCESS   read-only
     STATUS       current
     DESCRIPTION
         "The counter associated with the number of Error
          Seconds encountered. See [SATOP] for
          definition of ES."
     ::= { pwVcTDMPerfEntry 6 }


   pwVcTDMPerfSESs OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "The counter associated with the number of Severely
          Error Seconds.
          Also see [SATOP] for definition."
     ::= { pwVcTDMPerfEntry 7 }


   pwVcTDMPerfUASs OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "The counter associated with the number of
          UnAvailable Seconds.


          NOTE: When first entering the UAS state, the number
          of Ses To Uas is added to this object, then as each
          additional UAS occurs, this object increments by one."


     ::= { pwVcTDMPerfEntry 8 }


   pwVcTDMPerfFC OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "TDM Failure Counts (FC-TDM). The number of TDM failure
          events. A failure event begins when the LOPS failure
          is declared, and ends when the failure is cleared."




Nicklass                Expires October 19, 2004               [Page 29]
Internet-Draft             Manage TDM over PSN                April 2004



     ::= { pwVcTDMPerfEntry 9 }


   pwVcTDMPerfDiscontinuityTime OBJECT-TYPE
     SYNTAX      TimeStamp
     MAX-ACCESS  read-only
     STATUS      current


     DESCRIPTION
         "The value of sysUpTime on the most recent occasion at
          which any one or more of this segment's Counter32
          suffered a discontinuity. If no such
          discontinuities have occurred since the last re-
          initialization of the local management subsystem, then
          this object contains a zero value."
     ::= { pwVcTDMPerfEntry 10 }


   -- End of PW TDM Performance table


   -- Conformance Information



   pwVcTDMGroups      OBJECT IDENTIFIER ::= { pwVcTDMConformance 1 }
   pwVcTDMCompliances OBJECT IDENTIFIER ::= { pwVcTDMConformance 2 }



   pwTDMModuleCompliance MODULE-COMPLIANCE
      STATUS  current
      DESCRIPTION
              "The compliance statement for agent that support PW
               over TDM PSN operation."


      MODULE  -- this module
          MANDATORY-GROUPS { pwVcTDMGroup,
                             pwVcTDMPerfCurrentGroup,
                             pwVcTDMPerfIntervalGroup,
                             pwVcTDMPerfGroup
                           }


                     OBJECT pwVcTDMCfgPktReorder
                     MIN-ACCESS read-only
                     DESCRIPTION
                         "The ability to set the packet reordering
                         is not required."


                     OBJECT pwVcTDMCfgRtpHdrUsed
                     MIN-ACCESS read-only
                     DESCRIPTION
                         "The ability to set the whether to use the




Nicklass                Expires October 19, 2004               [Page 30]
Internet-Draft             Manage TDM over PSN                April 2004



                          RTP header or not is not required."



                     OBJECT pwVcTDMCfgPayloadSuppression
                     MIN-ACCESS read-only
                     DESCRIPTION
                         "The ability to set this object is not
                          required."



      ::= { pwVcTDMCompliances 1 }


   -- Units of conformance.


   pwVcTDMGroup OBJECT-GROUP
     OBJECTS {
        pwVcTDMType,
        pwVcTDMIfIndex,
        pwVcGenTDMCfgIndex,
        pwVcRelTDMCfgIndex,
        pwVcTDMAvePktLossTimeWindow,
        pwVcTDMConfigError,
        pwVcTDMTimeElapsed,
        pwVcTDMValidIntervals,
        pwVcTDMCurrentIndications,
        pwVcTDMLatchedIndications,
        pwVcTDMLastEsTimeStamp,


        pwVcTDMCfgRowStatus,
        pwVcTDMCfgConfErr,
        pwVcTDMCfgPayloadSize,
        pwVcTDMCfgPktReorder,
        pwVcTDMCfgRtpHdrUsed,
        pwVcTDMCfgJtrBfrDepth,
        pwVcTDMCfgPayloadSuppression,
        pwVcTDMCfgStorageType


              }
     STATUS  current
     DESCRIPTION
            "Collection of objects for basic TDM PW config and
             status."
     ::= { pwVcTDMGroups 1 }




   pwVcTDMPerfCurrentGroup OBJECT-GROUP
     OBJECTS {




Nicklass                Expires October 19, 2004               [Page 31]
Internet-Draft             Manage TDM over PSN                April 2004



              pwVcTDMPerfCurrentMisOrder,
              pwVcTDMPerfCurrentPktsOoseq,
              pwVcTDMPerfCurrentJtrBfrUnderruns,
              pwVcTDMPerfCurrentJtrBfrOverruns,
              pwVcTDMPerfCurrentMalformedPkt,


              pwVcTDMPerfCurrentESs,
              pwVcTDMPerfCurrentSESs,
              pwVcTDMPerfCurrentUASs,
              pwVcTDMPerfCurrentFC
              }
     STATUS  current
     DESCRIPTION
            "Collection of current statistics objects for TDM PWs."
     ::= { pwVcTDMGroups 2 }



   pwVcTDMPerfIntervalGroup OBJECT-GROUP
     OBJECTS {
              pwVcTDMPerfIntervalMisOrder,
              pwVcTDMPerfIntervalPktsOoseq,
              pwVcTDMPerfIntervalJtrBfrUnderruns,
              pwVcTDMPerfIntervalJtrBfrOverruns,
              pwVcTDMPerfIntervalMalformedPkt,


              pwVcTDMPerfIntervalESs,
              pwVcTDMPerfIntervalSESs,
              pwVcTDMPerfIntervalUASs,
              pwVcTDMPerfIntervalFC,


              pwVcTDMPerfIntervalValidData,
              pwVcTDMPerfIntervalDuration


     }
     STATUS  current
     DESCRIPTION
            "Collection of Interval statistics objects for TDM PWs."
     ::= { pwVcTDMGroups 3 }



   pwVcTDMPerfGroup OBJECT-GROUP
     OBJECTS {
              pwVcTDMPerfMisOrder,
              pwVcTDMPerfPktsOoseq,
              pwVcTDMPerfJtrBfrUnderruns,
              pwVcTDMPerfJtrBfrOverruns,
              pwVcTDMPerfMalformedPkt,





Nicklass                Expires October 19, 2004               [Page 32]
Internet-Draft             Manage TDM over PSN                April 2004



              pwVcTDMPerfESs,
              pwVcTDMPerfSESs,
              pwVcTDMPerfUASs,
              pwVcTDMPerfFC,
              pwVcTDMPerfDiscontinuityTime
              }
     STATUS  current
     DESCRIPTION
            "Collection of running statistics objects for TDM PWs."
     ::= { pwVcTDMGroups 4 }




   END



9. Security considerations


   It is clear that this MIB module is potentially useful for monitoring
   of TDM PWs.  This MIB can also be used for configuration of certain
   objects, and anything that can be configured can be incorrectly
   configured, with potentially disastrous results.


   There are a number of management objects defined in this MIB module
   with a MAX-ACCESS clause of read-write and/or read-create.  Such
   objects may be considered sensitive or vulnerable in some network
   environments.  The support for SET operations in a non-secure
   environment without proper protection can have a negative effect on
   network operations.  These are the tables and objects and their
   sensitivity/vulnerability:


   The pwVcTDMTable and pwVcTDMCfgTable contain objects of TDM PW
   parameters on a Provider Edge (PE) device.  Unauthorized access to
   objects in these tables could result in disruption of traffic on the
   network.


   The use of stronger mechanisms such as SNMPv3 security should be
   considered where possible.  Specifically, SNMPv3 VACM and USM MUST be
   used with any SNMPV3 agent, which implements this MIB module.
   Administrators should consider whether read access to these objects
   should be allowed, since read access may be undesirable under certain
   circumstances.


   Some of the readable objects in this MIB module "i.e., objects with a
   MAX-ACCESS other than not-accessible" may be considered sensitive or
   vulnerable in some network environments.  It is thus important to
   control even GET and/or NOTIFY access to these objects and possibly
   to even encrypt the values of these objects when sending them over




Nicklass                Expires October 19, 2004               [Page 33]
Internet-Draft             Manage TDM over PSN                April 2004



   the network via SNMP.  These are the tables and objects and their
   sensitivity/vulnerability:


   The pwVcTDMTable, pwVcTDMPerfCurrentTable, pwVcTDMPerfIntervalTable
   and pwVcTDMPerfTable collectively show the TDM pseudo wire
   connectivity topology and its performance characteristics.


   If an Administrator does not want to reveal this information, then
   these tables should be considered sensitive/vulnerable.


   SNMP versions prior to SNMPv3 did not include adequate security.
   Even if the network itself is secure "for example by using IPSec",
   even then, there is no control as to who on the secure network is
   allowed to access and GET/SET "read/change/create/delete" the objects
   in this MIB module.


   It is RECOMMENDED that implementers consider the security features as
   provided by the SNMPv3 framework "see [RFC3410], section 8",
   including full support for the SNMPv3 cryptographic mechanisms "for
   authentication and privacy".


   Further, deployment of SNMP versions prior to SNMPv3 is NOT
   RECOMMENDED.  Instead, it is RECOMMENDED to deploy SNMPv3 and to
   enable cryptographic security.  It is then a customer/operator
   responsibility to ensure that the SNMP entity giving access to an
   instance of this MIB module, is properly configured to give access to
   the objects only to those principals "users" that have legitimate
   rights to indeed GET or SET "change/create/delete" them.


10. IANA considerations


   As requested in the PW TC MIB [PWTC], PWE3 related standards track
   MIB modules should be rooted under the pwStdMIB subtree.  The IANA is
   requested to assign { pwStdMIB 5 } to the PW TDM MIB module specified
   in this document.


11. References


11.1 Normative references



   [PWTDMREQ]   M. Riegel, et al, "Requirements for Edge-to-Edge
                Emulation of TDM Circuits over Packet Switching
                Networks (PSN)", work in progress.


   [PWARCH]     Bryant S., Pate P., "PWE3 Architecture", work
                in progress.





Nicklass                Expires October 19, 2004               [Page 34]
Internet-Draft             Manage TDM over PSN                April 2004



   [SATOP]      Vainshtein A.,Stein Y., "Structure-Agnostic TDM
                over Packet (SAToP)", work-in-progress.


   [TDMOIP]     Y(J) SteinR. Shashoua, R. Insler, M. Anavi "TDM
                over IP", work in progress.


   [CESOPSN]    Vainshtein a.,  et at., "Structured TDM Circuit
                Emulation Service over Packet Switched Network
                (CESoPSN)", work in progress.


   [PWMIB]      Zelig D., Nadeau T., "Pseudo Wire (PW) Management
                Information Base", work-in-progress.


   [PWTC]       Nadeau, T., Zelig D. "Definitions for Textual
                Conventions and OBJECT-IDENTITIES for Pseudo-Wires
                Management", work-in-progress.


   [DS1MIB]     Nicklass O. " Definitions of Managed Objects
                for the DS1, E1, DS2 and E2 Interface Types",
                <draft-ietf-atommib-rfc2495bis-06.txt>,
                work-in-progress.


   [DS3MIB]     Nicklass O. "Definitions of Managed Objects for
                the DS3/E3 Interface Types",
                <draft-ietf-atommib-rfc2496bis-05.txt>.
                work-in-progress.


   [RFC2494]    Fowler, D., "Definitions of Managed Objects for
                the DS0 and DS0Bundle Interface Types", RFC 2494,
                January 1999.


   [RFC2863]    McCloghrie, K. and F. Kastenholz, "The Interfaces
                Group MIB", RFC 2863,  June 2000.


   [RFC2578]    McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,
                J., Rose, M. and S. Waldbusser, "Structure of
                Management Information Version 2 (SMIv2)", STD 58, RFC
                2578, April 1999.


   [RFC2579]    McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,
                J., Rose, M. and S. Waldbusser, "Textual Conventions
                for SMIv2", STD 58, RFC 2579, April 1999.


   [RFC2580]    McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,
                J., Rose, M. and S. Waldbusser, "Conformance
                Statements for SMIv2", STD 58, RFC 2580, April 1999.


   [G.704]      ITU-T Recommendation G.704 (10/98) - Synchronous frame




Nicklass                Expires October 19, 2004               [Page 35]
Internet-Draft             Manage TDM over PSN                April 2004



                structures used at 1544, 6312, 2048, 8448 and 44
                736 Kbit/s hierarchical levels


   [ITU-T-G.826] ITU-T G.826: Error performance parameters and objectives
                forinternational, constant bit rate digital paths at or
                above theprimary rate, November 1993.



11.2 Informative references



   [RFC3410]    Case, J., Mundy, R., Partain, D. and B. Stewart,
                "Introduction and Applicability Statements for
                Internet-Standard Management Framework", RFC 3410,
                December 2002.



12. Acknowledgements


   This document was produced by the PWE3 Working Group.  The Editor
   would like to thanks Y.  Stein for his helpful suggestions and
   practical advice.



Author's Address


   Orly Nicklass
   RAD Data Communications
   24 Raoul Wallenberg St., Bldg C
   Tel Aviv  69719
   ISRAEL


   Phone: +972 3 7659969
   EMail: orly_n@rad.com


















Nicklass                Expires October 19, 2004               [Page 36]
Internet-Draft             Manage TDM over PSN                April 2004



Full Copyright Statement


   Copyright (C) The Internet Society (2004).  All Rights Reserved.


   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.


   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.


   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Acknowledgement


   Funding for the RFC Editor function is currently provided by the
   Internet Society.




















Nicklass                Expires October 19, 2004               [Page 37]