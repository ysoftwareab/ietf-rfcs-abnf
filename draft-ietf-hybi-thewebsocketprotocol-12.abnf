ws-URI = "ws:" "//" host [ ":" port ] path [ "?" query ]
wss-URI = "wss:" "//" host [ ":" port ] path [ "?" query ]

host = <host, defined in [RFC3986], Section 3.2.2>
port = <port, defined in [RFC3986], Section 3.2.3>
path = <path-abempty, defined in [RFC3986], Section 3.3>
query = <query, defined in [RFC3986], Section 3.4>

Sec-WebSocket-Accept     = base64-value
base64-value     = *base64-data [ base64-padding ]
base64-data      = 4base64-character
base64-padding   = (2base64-character "==") | (3base64-character "=")
base64-character = ALPHA | DIGIT | "+" | "/"


           NOTE: As an example, if the value of the "Sec-WebSocket-Key"
           header field in the client's handshake were
           "dGhlIHNhbXBsZSBub25jZQ==", the server would append the
           string "258EAFA5-E914-47DA-95CA-C5AB0DC85B11" to form the
           string "dGhlIHNhbXBsZSBub25jZQ==258EAFA5-E914-47DA-95CA-
           C5AB0DC85B11".  The server would then take the SHA-1 hash of
           this string, giving the value 0xb3 0x7a 0x4f 0x2c 0xc0 0x62
           0x4f 0x16 0x90 0xf6 0x46 0x06 0xcf 0x38 0x59 0x45 0xb2 0xbe
           0xc4 0xea.  This value is then base64-encoded, to give the
           value "s3pPLMBiTxaQ9kYGzzhZRbK+xOo=", which would be returned
           in the "Sec-WebSocket-Accept" header field.

       5.  Optionally, a "Sec-WebSocket-Protocol" header field, with a
           value /subprotocol/ as defined in Paragraph 2 of
           Section 4.2.2.

       6.  Optionally, a "Sec-WebSocket-Extensions" header field, with a
           value /extensions/ as defined in Paragraph 2 of
           Section 4.2.2.  If multiple extensions are to be used, they
           must all be listed in a single Sec-WebSocket-Extensions
           header field.  This header field MUST NOT be repeated.

Sec-WebSocket-Key = base64-value
Sec-WebSocket-Extensions = extension-list
Sec-WebSocket-Protocol-Client = 1#token
Sec-WebSocket-Version-Client = version

base64-value     = *base64-data [ base64-padding ]
base64-data      = 4base64-character
base64-padding   = (2base64-character "==") | (3base64-character "=")
base64-character = ALPHA | DIGIT | "+" | "/"
extension-list = 1#extension
extension = extension-token *( ";" extension-param )
extension-token = registered-token | private-use-token
registered-token = token
private-use-token = "x-" token
extension-param = token [ "=" token ]
version = "0" | ("1" DIGIT DIGIT) | ("2" DIGIT DIGIT)
                      ; 0-255

Sec-WebSocket-Extensions = extension-list
Sec-WebSocket-Accept     = base64-value
Sec-WebSocket-Protocol-Server = token
Sec-WebSocket-Version-Server = 1#version
ws-frame                = frame-fin
                             frame-rsv1
                             frame-rsv2
                             frame-rsv3
                             frame-opcode
                             frame-masked
                             frame-payload-length
                             [ frame-masking-key ]
                             frame-payload-data
frame-fin               = %x0 ; more frames of this message follow
                           / %x1 ; final frame of this message

frame-rsv1              = %x0
                             ; 1 bit, MUST be 0 unless negotiated otherwise

frame-rsv2              = %x0
                             ; 1 bit, MUST be 0 unless negotiated otherwise

frame-rsv3              = %x0
                             ; 1 bit, MUST be 0 unless negotiated otherwise

frame-opcode            = %x0 ; continuation frame
                           / %x1 ; text frame
                           / %x2 ; binary frame
                           / %x3-7 ; reserved for further non-control frames
                           / %x8 ; connection close
                           / %x9 ; ping
                           / %xA ; pong
                           / %xB-F ; reserved for further control frames

frame-masked            = %x0 ; frame is not masked, no frame-masking-key
                           / %x1 ; frame is masked, frame-masking-key present

frame-payload-length    = %x00-7D
                           / %x7E frame-payload-length-16
                           / %x7F frame-payload-length-63

frame-payload-length-16 = %x0000-FFFF

frame-payload-length-63 = %x0000000000000000-7FFFFFFFFFFFFFFF

frame-masking-key       = 4( %0x00-FF ) ; present only if frame-masked is 1

frame-payload-data      = (frame-masked-extension-data
                              frame-masked-application-data)   ; frame-masked 1
                           / (frame-unmasked-extension-data
                              frame-unmasked-application-data) ; frame-masked 0

frame-masked-extension-data     = *( %x00-FF ) ; to be defined later

frame-masked-application-data   = *( %x00-FF )

frame-unmasked-extension-data   = *( %x00-FF ) ; to be defined later

frame-unmasked-application-data = *( %x00-FF )
j                   = i MOD 4
transformed-octet-i = original-octet-i XOR masking-key-octet-j


Sec-WebSocket-Extensions = extension-list
extension-list = 1#extension
extension = extension-token *( ";" extension-param )
extension-token = registered-token | private-use-token
registered-token = token
private-use-token = "x-" token
extension-param = token [ "=" token ]

