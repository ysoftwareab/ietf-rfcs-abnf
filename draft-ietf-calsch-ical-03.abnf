method  = <Identifier for any IANA registered iCalendar
                   object method>

component       = "VEVENT" / "VTODO" / "VJOURNAL" / "VFREEBUSY"
                        / x-token / iana-comp

x-token = <The two characters "X-" or "x-" followed, with
                   no intervening white space, by any atom, where
                   atom is from section 3.3 of [RFC 822]>

iana-comp = <A publicly defined extension component,
                     registered with IANA, as specified by this
                     document>

contentline = name [";" [ws] paramlist] ":" [ws] value CRLF
LWSP       = SPACE / HTAB

SPACE      = <ASCII Decimal 32>

HTAB       = <ASCII Decimal 9>

ws         = SPACE / HTAB

name       = iana-name / x-name    ;An iCalendar property

iana-name  = <One of the properties defined by this memo or
                   an IANA registered property, as defined by the
                   registration process in this memo.>

x-name     = <The two characters "X-" or "x-" followed, with no
                   intervening white space, by any atom. A non-standard
                   property name.>

value      = boolean / cal-address / date / date-time / duration
                / float / integer / period / recur / text / time / url
                / utc-offset / x-token

iana-value = <One of the property values defined by this memo
                   or an IANA registered property value as defined by
                   the registration process in this memo.>

parameter  = altrepparm            ;Alterate text representation
                / languageparm          ;Text language
                / valuetypeparm         ;Property value data type
                / [parmtype "="] parmvalues ;Parameter extensions

parmtype   = x-token / iana-ptype

iana-ptype = <A publicly defined extension parameter type,
                   registered with IANA, as specified in this memo>

parmvalues = parmvalue / parmvalue *("," [ws] parmvalue)

parmvalue  = x-name / iana-pvalue

iana-pvalue = <A publicly defined extension parameter value,
                    registered with IANA, as specified in this memo>

altrepparm = "altrep" "=" urltype

urltype    = <quoted-string text URL value>

languageparm =     "language" "=" language

language = <Text identifying a language, as defined in [RFC 1766]>

valuetypeparm = "value" "=" valuetype

valuetype  = "boolean"
                / "cal-address"
                / "date"
                / "date-time"
                / "duration"
                / "float"
                / "integer"
                / "period"
                / "recur"
                / "text"
                / "time"
                / "url"
                / "utc-offset"
                / x-token
                / iana-value

iana-value = <A publicly defined extension value type, registered
                   with IANA, as specified by this memo>

boolean    = "TRUE" / "FALSE"

cal-address        = addr-spec / phrase "<" addr-spec ">"

addr-spec  = local-part "@" domain         ;RFC 822 style address
local-part = WORD *("." WORD)
domain     = domain-ref *("." domain-ref)
domain-ref = ATOM

phrase     = 1*WORD
WORD       = ATOM / quoted-string
quoted-string = <"> *(qtext/quoted-pair) <"> ; Regular qtext or
                                                  ;   quoted chars.
qtext      = <any CHAR excepting <">,        ; => MAY be folded
                  "\" & CR, and including linear-
                  white-space>
quoted-pair ="\" CHAR                        ; MAY quote any char
CHAR       = <any a character from the
                  selected character set>
ATOM       = 1*<any CHAR except specials,
                  SPACE and CTLs>

DIGIT      =<any ASCII decimal digit>      ;0-9

date-fullyear      = 4DIGIT
date-month         = 2DIGIT        ;01-12
date-mday          = 2DIGIT        ;01-28, 01-29, 01-30, 01-31
                                        ;based on month/year

date               = date-fullyear date-month date-mday

date-time  = date "T" time ;As specified above in date and time

DIGIT      =<any ASCII decimal digit>      ;0-9

dur-second = 1*DIGIT "S"
dur-minute = 1*DIGIT "M" [dur-second]
dur-hour   = 1*DIGIT "H" [dur-minute]
dur-time   = "T" (dur-hour / dur-minute / dur-second)

dur-week   = 1*DIGIT "W"
dur-day    = 1*DIGIT "D"
dur-month  = 1*DIGIT "M" [dur-day]
dur-year   = 1*DIGIT "Y" [dur-month]
dur-date   = (dur-day / dur-month / dur-year) [dur-time]

duration   = "P" (dur-date / dur-time / dur-week)

DIGIT      =<any ASCII decimal digit>      ;0-9

float      = ["+" / "-"] *DIGIT ["." *DIGIT]

DIGIT      =<any ASCII decimal digit>      ;0-9

integer    = ["+" / "-"] *DIGIT
period-explicit = date-time "/" date-time
period-start = date-time "/" duration
period     = period-explicit / period-start

recur      = ‘                  ‘FREQ’                        ’=freq ";"
                [("UNTIL" "=" enddate ";") / ("COUNT" "=" digits ";")]
                ["INTERVAL" "=" digits ";"]
                ["BYMINUTE" "=" byminlist ";"]
                ["BYHOUR" "=" byhrlist ";"]
                ["BYDAY" "=" bywdaylist ";"]
                ["BYMONTHDAY" "=" bymodaylist ";"]
                ["BYYEARDAY" "=" byyrdaylist ";"]
                ["BYWEEKNO" "=" bywknolist ";"]
                ["BYMONTH" "=" bymolist ";"]
                ["BYSETPOS" "=" bysplist ";"]
                ["WKST" "=" weekday ";")]
                *("X-" word "=" word) ";"
        ;Individual components MAY only be specified once.
        ;Rule components need not be specified in particular any order.

freq       = "MINUTELY’                           ’ / "HOURLY" / "DAILY" / "WEEKLY" / "YEARLY"

enddate    = date          ;A UTC value

digits     = 1*DIGIT

DIGIT      =<any ASCII decimal digit>      ;0-9

byminlist  = minutes / ( minutes *(‘                                        ‘,’                                           ’ minutes) )

minutes    = 1*2digits     ;0 to 60

byhrlist   = hour / ( hour *(‘                                  ‘,’                                     ’ hour) )

hour       = 1*2 digits    ;0 to 24

bywdaylist = weekdaynum / ( weekdaynum *(‘                                              ‘,’                                                 ’ weekdaynum) )

weekdaynum = [([plus] ordwk / minus ordwk)] weekday

plus       = "+"

minus      = "-"

ordwk      = 1*2digits     ;1 to 53

weekday    = "SU" / "MO" / "TU" / "WE" / "TH" / "FR" / "SA"
bymodaylist = monthdaynum / ( monthdaynum *(‘                                                 ‘,’                                                    ’ monthdaynum) )

monthdaynum = ([plus] ordmoday) / (minus ordmoday)

ordmoday   = 1*2digits     ;1 to 31

byyrdaylist = yeardaynum / ( yeardaynum *(‘                                               ‘,’                                                  ’ yeardaynum) )

yeardaynum = ([plus] ordyrday) / (minus ordyrday)

ordyrday   = 1*3digits     ;1 to 366

bywknolist = weeknum / ( weeknum *(‘                                        ‘,’                                           ’ weeknum) )

weeknum    = ([plus] ordwk) / (minus ordwk)

bymolist   = monthnum / ( monthnum *(‘                                          ‘,’                                             ’ monthnum) )
monthnum   = 1*2digits     ;1 to 12

bysplist   = setposday / ( setposday *("," setposday) )

setposday  = yeardaynum

FREQ=DAILY;COUNT=10;INTERVAL=2

text       = <Any character in the selected character set, but
                   not including CRLF>

DIGIT      =<any ASCII decimal digit>      ;0-9

time-hour          = 2DIGIT        ;00-23
time-minute        = 2DIGIT        ;00-59
time-second        = 2DIGIT        ;00-59
time-numzone       = ("+" / "-") time-hour time-minute
time-zone          = "Z" / time-numzone

time               = time-hour time-minute time-second [time-zone]

url        = <As defined by any IETF RFC>

utc-offset = time-numzone  ;As defined above in time data type

icalobject = "BEGIN" ":" [ws] "VCALENDAR" CRLF
                  icalbody
                  "END" ":" [ws] "VCALENDAR" CRLF [icalobject]

property   = propname [";" [ws] parmlist] ":" [ws] value CRLF

propname   = <any properties defined in this memo>
                / iana-prop / x-token

x-token    = <The two characters "X-" or "x-" followed, with no
                   intervening white space, by any atom>

iana-prop  = <A publicly defined extension property, registered
                   with IANA, as specified by this memo>
icalbody   = calprops 1*component

calprops   = [calscale] prodid method [source] [name] version

component  = 1*(eventc / todoc / journalc / freebusyc /
                / timezonec)

eventc     = "BEGIN" ":" [ws] "VEVENT" CRLF
                  eventprop *alarmc
                  "END" ":" [ws] "VEVENT" CRLF
eventprop  = *attach *attendee *categories [class] *comment
                  *contact [created] [description] [dtend / duration]
                  dtstart *exdate *exrule [geo] [last-mod] [location]
                  [priority] [rstatus] *related *resources *rdate
                  *rrule dtstamp [seq] [status] summary [transp] uid
                  *url [recurid]

todoc      = "BEGIN" ":" [ws] "VTODO" CRLF
                  todoprop *alarmc
                  "END" ":" [ws] "VTODO" CRLF

todoprop   = *attach *attendee *categories [class] *comment
                  [completed] *contact [created] [description] dtstamp
                  dtstart [due / duration] *exdate *exrule [geo]
                  [last-mod] [location] [percent] priority [rstatus]
                  *related *resources *rdate *rrule [recurid] [seq]
                  [status] summary uid *url

journalc   = "BEGIN" ":" [ws] "VJOURNAL" CRLF
                  jourprop
                  "END" ":" [ws] "VJOURNAL" CRLF

jourprop   = *attach *attendee *categories [class] *comment
                  *contact [created] [description] dtstart dtstamp
                  *exdate *exrule [last-mod] *related *rdate *rrule
                  [rstatus] [seq] summary uid *url [recurid]

freebusyc  = "BEGIN" ":" [ws] "VFREEBUSY" CRLF
                  fbprop
                  "END" ":" [ws] "VFREEBUSY" CRLF
fbprop     = fbrequest / fbreply

fbrequest  = *attendee dtstart dtend [duration] *comment dtstamp
                  [last-mod] *related [seq] uid
fbreply    = *attendee [created] *comment [dtstart dtend] dtstamp
                  *freebusy [last-mod] *related [rstatus] [seq] uid *url
alarmc     = "BEGIN" ":" [ws] "VALARM" CRLF
                  alarmprop
                  "END" ":" [ws] "VALARM" CRLF

alarmprop  = *attach 1*categories *comment [description]
                  dtstart duration *related repeat [summary]

timezonec  = "BEGIN" ":" [ws] "VTIMEZONE" CRLF
                  tzprop
                  "END" ":" [ws] "VTIMEZONE" CRLF

tzprop     = *comment [daylight] dtstart [rdate / rrule]
                  [tzname] tzoffset

calscale   = "CALSCALE" ":" [ws] calvalue CRLF

calvalue   = "GREGORIAN" / iana-scale

iana-scale = <Any other designator for a calendar scale
                   registered with IANA>

method     = "METHOD" ": [ws] profvalue CRLF

profvalue  = <Any IANA registered iCalendar object method.>

prodid     = "PRODID" ":" [ws] pidvalue CRLF

pidvalue   = text
source     = "SOURCE" ":" [ws] url CRLF

name       = "NAME" ":" [ws] text CRLF

version    = "VERSION" ":" [ws] vervalue CRLF

vervalue   = "2.0"         ;This memo
                / maxver
                / (minver ";" [ws] maxver)

minver     = <A IANA registered iCalendar version identifier>
maxver     = <A IANA registered iCalendar version identifier>
attach     = "ATTACH" ":" [ws] url CRLF

attendee   = "ATTENDEE" [";" [ws] paramlist]
                  [";" [ws] attparamlist] ":" [ws]
                  (cal-address / URL) CRLF
attparamlist      = (attparam *(";" attparam)

attparam   = typeparm / roleparm / statusparm / rsvpparm
                / expectparm / memberparm / deletoparm / delefromparm

typeparm   = "TYPE" "="
                ("INDIVIDUAL"   ; An individual
                / "GROUP"       ; A group of individuals
                / "RESOURCE"    ; A physical resource
                / "ROOM"        ; A room resource
                / "UNKNOWN")    ; Otherwise not known
roleparm   = "ROLE" "="
                ("ATTENDEE"     ; Indicates a regular attendee
                / "OWNER"       ; Indicates owner of event or to-do
                / "ORGANIZER"   ; Indicates organizer of event or to-do
                / "DELEGATE")   ; Indicates delegate to event or to-do
statusparm = "STATUS" "="
                ("NEEDS-ACTION" ; Indicates event or to-do needs action
                / "ACCEPTED"    ; Indicates event or to-do accepted
                / "DECLINED"    ; Indicates event or to-do not accepted
                / "TENTATIVE"   ; Indicates event or to-do tentatively
                ; accepted. Status MAY change in the future.
                / "COMPLETED"   ; Indicates to-do was completed.
                ; COMPLETED property has date/time completed.
                / "IN-PROCESS"  ;Indicates to-do is in the process of
                ; being completed.
                / "DELEGATED"   ; Indicateds event or to-do delegated
                ; to another ATTENDEE
                / "CANCELLED")  ; Indicates event or to-do cancelled for
                                ; ATTENDEE
rsvpparm   = "RSVP" "="
                  ("TRUE"               ; Indicates response requested
                / "FALSE")              ; Indicates no response needed
expectparm = "EXPECT" "="
                ("FYI"          ; Indicates request is for your info
                / "REQUIRE"     ; Indicates presence is required
                / "REQUEST")    ; Indicates presence is requested
memberparm = "MEMBER" "=" cal-address *("," cal-address)
deletoparm = "DELEGATED-TO" "=" cal-address *("," cal-address)
delefromparm = "DELEGATED-FROM" "=" cal-address *("," cal-address)
categories = "CATEGORIES" [";" [ws] paramlist] ":" [ws]
                  catvalue CRLF

catvalue   = cat1value *["," [ws] cat1value]
                / cat2value *["," [ws] cat2value]

cat1value  = "ANNIVERSARY" / "APPOINTMENT" / "BUSINESS"
                / "EDUCATION" / "HOLIDAY" / "MEETING" / "MISCELLANEOUS"
                / "NON-WORKING HOURS" / "NOT IN OFFICE" / "PERSONAL"
                / "PHONE CALL"  / "SICK DAY" / "SPECIAL OCCASION"
                / "TRAVEL" / "VACATION" / word
cat2value  = "AUDIO" / "DISPLAY" / "EMAIL" / "PROCEDURE"
                / x-token / iana-word
class      = "CLASS" [";" [ws] paramlist] ":" [ws]
                  classvalue CRLF

classvalue = "PUBLIC" / "PRIVATE" / "CONFIDENTIAL" / x-token
comment    = "COMMENT" ":" [ws] text CRLF

contact    = "CONTACT" [";" [ws] paramlist] ":" [ws]
                  text / url CRLF

c=3DUS??(cn=3DBJim%20Dolittle)"

completed  = "COMPLETED" ":" [ws] date-time CRLF

created    = "CREATED" ":" [ws] date-time CRLF

due        = "DUE" ":" [ws] date-time CRLF

dtend      = "DTEND" ":" [ws] date-time CRLF

dtstamp    = "DTSTAMP" ":" [ws] date-time CRLF

dtstart    = "DTSTART" [";" [ws] paramlist] ":" [ws] (date-time /
                  date) CRLF

daylight   = "DAYLIGHT" ":" [ws] boolean CRLF
Description        = "DESCRIPTION" [";" [ws] paramlist] ":" [ws]
                          text CRLF

duration   = "DURATION" ":" [ws] duration CRLF

exdate     = "EXDATE" [";" [ws] paramlist] ":" [ws] [date-time /
                  date] *("," [ws] date-time/date) CRLF
exrule     = "EXRULE" [";" [ws] paramlist] ":" [ws] recur CRLF

freebusy   = "FREEBUSY" [";" [ws] paramlist] [";" [ws] fbparmlist]
                  ":" [ws] fbvalue CRLF

fbparmlist = fbparam *(";" [ws] fbparam)

fbparam    = fbtype / fbstatus

fbtype     = "TYPE" "=" ("FREE" or "BUSY")
fbstatus   = "STATUS" "="
                  "BUSY"        ;Represents busy time interval.
                / "UNAVAILABLE" ;Represents busy, but unavailable
                                ;interval for cheduling; such as
                                ;out-of-office or non-working hours.
                / "TENTATIVE"   ;Represents busy, but tentatively
                                ;scheduled interval.
fbvalue    = period *["," [ws] period]
decimal = degrees + minutes/60 + seconds/3600.

geo        = "GEO" ":" [ws] geovalue CRLF

geovalue   = float ";" [ws] float
last-mod   = "LAST-MODIFIED" ":" [ws] date-time CRLF

location   = "LOCATION [";" [ws] paramlist] ":" [ws] locavalue
                  CRLF

locavalue  = text / url    ;The value MUST be the same type as the
                                ;default or explicit data type.

percent = "PERCENT-COMPLETE" ":" [ws] integer CRLF

priority   = "PRIORITY" ":" [ws] integer CRLF
rdate      = "RDATE" [";" [ws] paramlist] ":" [ws] rdvalue
                  *("," [ws] rdvalue) CRLF

rdvalue    = date-time / date / period
recurid    = "RECURRENCE-ID" [";" [ws] rangeparm] [";" [ws]
                  paramlist] ":" [ws] [date-time / date]
rangeparm  = "RANGE" "=" ("THISANDPRIOR" / "THISANDFUTURE")

rrule      = "RRULE" [";" [ws] paramlist] ":" [ws] recur CRLF

BYDAY=MO,WE,FR
related    = "RELATED-TO" [";" [ws] paramlist] ":" [ws] uid CRLF

repeatcnt  = "REPEAT" ":" [ws] integer CRLF
Rstatus    = "REQUEST-STATUS" ":" [ws] statcode ";" [ws]
                         statdesc [";" [ws] extdata]

Statcode   = 1*DIGIT *("." 1*DIGIT)
Statdesc   = *WORD
Extdata    = *WORD
resource   = "RESOURCES" [";" [ws] paramlist] ":" [ws]
                  resvalist CRLF

resvalist  = resvalue / resvalue "," [ws] resvalist

resvalue   = "CATERING" / "CHAIRS" / "COMPUTER PROJECTOR"
                / "EASEL" / "OVERHEAD PROJECTOR" / "SPEAKER PHONE"
                / "TABLE" / "TV" / "VCR" / "VIDEO PHONE" / "VEHICLE"
                / word

sequence   = "SEQUENCE" ":" [ws] integer CRLF
status     = "STATUS" [";" [ws] paramlist] ":" [ws] statvalue CRLF

statvalue  = "NEEDS-ACTION"        ;Indicates to-do needs action.
                / "COMPLETED"           ;Indicates to-do completed.
                / "IN-PROCESS"          ;Indicates to-do in process of
                                        ;being completed.
                / "TENTATIVE"           ;Indicates event or to-do is
                                        ;tentative.
                / "CONFIRMED"           ;Indicates event or to-do is
                                        ;definite.
                / "CANCELLED"           ;Indicates event or to-do was
                                        ;cancelled.

summary    = "SUMMARY" [";" [ws] paramlist] ":" [ws] text CRLF

transp     = "TRANSP" [";" [ws] paramlist] ":" [ws] transvalue CRLF

transvalue = "OPAQUE"      ;Blocks or opaque on busy time searches.
                / "TRANSPARENT" ;Transparent on busy time searches.

tzname     = "TZNAME" [";" [ws] paramlist] ":" [ws] text CRLF

tzoffset   = "TZOFFSET" ":" [ws] utc-offset CRLF

url        = "URL" ":" [ws] url CRLF

uid        = "UID" ":" [ws] text CRLF

extension  = "X-" [vendorid] "-" word [";" [ws] paramlist] ":" [ws]
                  value

vendorid   = 3*char        ;Vendor identification prefix text

