SPLIT=YES is added to the series rule to indicate that this master is
reltypeparam   = "RELTYPE" "="
                      ("PARENT"    ; Parent relationship - Default
                     / "CHILD"     ; Child relationship
                     / "SIBLING"   ; Sibling relationship
                     / "DEPENDS-ON" ; refers to previous task
                     / "REFID"     ; Relationship based on REFID
                     / "STRUCTURED-CATEGORY"
                             ; Relationship based on STRUCTURED-CATEGORY
                     / "FINISHTOSTART" ;  Temporal relationship
                     / "FINISHTOFINISH" ;  Temporal relationship
                     / "STARTTOFINISH" ;  Temporal relationship
                     / "STARTTOSTART" ;  Temporal relationship
                     / "SERIES-MASTER" ;  link to the master component
                     / iana-token  ; Some other IANA-registered
                                   ; iCalendar relationship type
                     / x-name)     ; A non-standard, experimental
                                   ; relationship type

RELTYPE=PARENT:  See [RFC5545] section 3.2.15.

RELTYPE=CHILD:  See [RFC5545] section 3.2.15.

RELTYPE=SIBLING:  See [RFC5545] section 3.2.15.

RELTYPE=DEPENDS-ON:  Indicates that the current calendar component
      depends on the referenced calendar component in some manner.  For
      example a task may be blocked waiting on the other, referenced,
      task.

RELTYPE=REFID:  Establishes a reference from the current component to
      components with a REFID property which matches the value given in
      the associated RELATED-TO property.

RELTYPE=SERIES-MASTER:  Indicates that the current calendar component
      is bsed on the referenced calendar component.  The value is a UID.

RELTYPE=STRUCTURED-CATEGORY:  Establishes a reference from the
      current component to components with a STRUCTURED-CATEGORY
      property which matches the value given in the associated RELATED-
      TO property.

RELTYPE=FINISHTOSTART:  Task-B cannot start until Task-A finishes.
      For example, when sanding is complete, painting can begin.


               ============
               |  Task-A  |--+
               ============  |
                             |
                             V
                             ============
                             |  Task-B  |
                             ============

                  Figure 1: Finish to start relationship

RELTYPE=FINISHTOFINISH:  Task-B cannot finish before Task-A is
      finished, that is the end of Task-A defines the end of Task-B.
      For example, we start the potatoes, then the meat then the peas
      but they should all be cooked at the same time.
                       ============
                       |  Task-A  |--+
                       ============  |
                                     |
                       ============  |
                       |  Task-B  |<-+
                       ============

                  Figure 2: Finish to finish relationship

RELTYPE=STARTTOFINISH:  The start of Task-A (which occurs after Task-
      B) controls the finish of Task-B.  For example, ticket sales
      (Task-B) end when the game starts (Task-A).


                                        ============
                                     +--|  Task-A  |
                                     |  ============
                                     |
                       ============  |
                       |  Task-B  |<-+
                       ============

                  Figure 3: Start to finish relationship

RELTYPE=STARTTOSTART:  The start of Task-A triggers the start of
      Task-B, that is Task-B can start anytime after Task-A starts.


                       ============
                    +--|  Task-A  |
                    |  ============
                    |
                    |  ============
                    +->|  Task-B  |
                       ============

                   Figure 4: Start to start relationship

splitparam     = "SPLIT" "="
lookahead-countparam      = "LOOKAHEAD-COUNT" "=" 1*DIGIT

lookahead-periodparam      = "LOOKAHEAD-PERIOD" "="
                           DQUOTE dur-value DQUOTE

seruid        = "SERIES-UID" seruidparam ":" text CRLF

seruidparam   = *(";" other-param)

sxdate     = "SXDATE" sxdtparam ":" sxdtval *("," sxdtval) CRLF

sxdtparam  = *(
                 ;
                 ; The following are OPTIONAL,
                 ; but MUST NOT occur more than once.
                 ;
                 (";" "VALUE" "=" ("DATE-TIME" / "DATE")) /
                 ;
                 (";" tzidparam) /
                 ;
                 ; The following is OPTIONAL,
                 ; and MAY occur more than once.
                 ;
                 (";" other-param)
                 ;
                 )

sxdtval    = date-time / date
                 ;Value MUST match value type

sdate      = "SDATE" sdtparam ":" sdtval *("," sdtval) CRLF

sdtparam   = *(
                 ;
                 ; The following are OPTIONAL,
                 ; but MUST NOT occur more than once.
                 ;
                 (";" "VALUE" "=" ("DATE-TIME" / "DATE" / "PERIOD")) /
                 (";" tzidparam) /
                 ;
                 ; The following is OPTIONAL,
                 ; and MAY occur more than once.
                 ;
                 (";" other-param)
                 ;
                 )

sdtval     = date-time / date
                 ;Value MUST match value type

serid    = "SERIES-ID" sidparam ":" sidval CRLF

sidparam   = *(
                     ;
                     ; The following are OPTIONAL,
                     ; but MUST NOT occur more than once.
                     ;
                     (";" "VALUE" "=" ("DATE-TIME" / "DATE")) /
                     (";" tzidparam) /
                     ;
                     ; The following is OPTIONAL,
                     ; and MAY occur more than once.
                     ;
                     (";" other-param)
                     ;
                     )

sidval     = date-time / date
                     ;Value MUST match value type


last-series-i   = "LAST-SERIES-ID" lastseriesidparam  /
                       (
                         ";" "VALUE" "=" "TEXT"
                         ":" text
                       )
                       (
                         ";" "VALUE" "=" "REFERENCE"
                         ":" text
                       )
                       (
                         ";" "VALUE" "=" "URI"
                         ":" uri
                       )
                       CRLF


lastseriesidparam = *(

                     ; the following is MANDATORY
                     ; and MAY occur more than once

                     (";" relparam) /

                     ; the following are MANDATORY
                     ; but MUST NOT occur more than once

                     (";" fmttypeparam) /
                     (";" labelparam) /
                     ; labelparam is defined in ...

                     ; the following is OPTIONAL
                     ; and MAY occur more than once

                     (";" xparam)

                     )


srule      = "SRULE" srulparam ":" recur CRLF

sruleparam = *(
                   ; the following are OPTIONAL
                   ; but MUST NOT occur more than once

                   (";" lookahead-countparam) /
                   (";" lookahead-periodparam) /

                   ; the following is OPTIONAL
                   ; and MAY occur more than once

                   (";" xparam)

                   )


related    = "RELATED-TO" relparam ( ":" text ) /
                  (
                    ";" "VALUE" "=" "UID"
                    ":" uid
                  )
                  (
                    ";" "VALUE" "=" "URI"
                    ":" uri
                  )
                  CRLF

relparam   = *(
                 ;
                 ; The following are OPTIONAL,
                 ; but MUST NOT occur more than once.
                 ;
                 (";" reltypeparam) /
                 (";" gapparam) /
                 ;
                 ; The following is OPTIONAL,
                 ; and MAY occur more than once.
                 ;
                 (";" other-param)
                 ;
                 )

