Sum0 = 0;
Sum1 = 0;
Sum0 = sum0 ^ power[i + alog[codeword[i]]];
Sum1 = sum1 ^ power[3*i + alog[codeword[i]]];
Sum0=0=tot0^power[0+alog[codeword[0]]]^power[1+alog[codeword[1]]]
sum1=0=tot1^power[0+alog[codeword[0]]]^power[3+alog[codeword[1]]]

Sum0 = 0;
Sum1 = 0;
Sum0 = sum0 ^ power[j + alog[codeword[i][j]];
Sum1 = sum1 ^ power[3*j + alog[codeword[i][j]];
Sum0 = 0;
Sum1 = 0;
Sum0 = sum0 ^ power[i + alog[codeword[i][j]];
Sum1 = sum1 ^ power[3*i + alog[codeword[i][j]];
Byte = 1/2LOGalpha(S1/S0)
Bit  = 8LOGalpha(S0/POWERalpha(Byte))

Byte = alog[power[255 + alog[sum1] - alog[sum0]]];
Byte = Byte + 255;
Byte = Byte >> 1;
Bit = alog[power[255 + alog[sum0] - Byte]] << 3;
Bit = Bit - 255;

Byte = 1/2LOGalpha(S1/S0)
Mask = S0/POWERalpha[Byte]

Mask = power[255 + alog[sum0] - Byte]

Mask2 = POWERalpha(2*Byte1)*S0+S1
          -------------------------------
          POWERalpha(2*Byte1+Byte2) +POWERalpha(3*BYTE2)

Mask1 = S0 + Mask2*POWERalpha(Byte2)/POWERalpha(BYTE1)
mask2 = 0;
mask2=power[255+alog[sum1]-alog[power[byte2+2*byte1]^
         power[3*Byte2]]];
mask2 = 0;
mask2 = power[255+alog[a]-alog[power[byte2+2*byte1]^
           power[3*byte2]]];
mask1 = 0;
mask1 = power[255+alog[sum0]-byte1];
mask1 = 0;
mask1 = power[255+alog[a]-byte1];
