pattern = re.compile(r"^([^\s\.#]+\.)*([^\s\.#]+)$")
pattern = re.compile(r"^(([^\s\.#]+\.)|\.)*([^\s\.#]+)?$")
pattern = re.compile(r"^([0-9a-z_]+\.)*([0-9a-z_]+)$")
pattern = re.compile(r"^(([0-9a-z_]+\.)|\.)*([0-9a-z_]+)?$")
octets_received = b"\x11\x22\x33\x44"
i = struct.unpack(">L", octets_received)[0]
octets_to_be_send = struct.pack(">L", i)
SERMAP = {
         1: 'json',
         2: 'msgpack'
octet_2 = (l << 4) | ser
ser_id = i & 0x0f
ser = SERMAP.get(ser_id, 'currently undefined')
maxlen = 2 ** ((i >> 4) + 9)
ERRMAP = {
          0: "illegal (must not be used)",
          1: "serializer unsupported",
          2: "maximum message length unacceptable",
          3: "use of reserved bits (unsupported feature)",
          4: "maximum connection count reached"
octet_2 = err << 4
ser_id = i & 0x0f
ser = SERMAP.get(ser_id, 'currently undefined')
maxlen = 2 ** ((i >> 4) + 9)
err = i >> 4
PY3 = sys.version_info >= (3,)
unicode = str

data_in = os.urandom(16)
encoded = json.dumps('\0' + base64.b64encode(data_in).
                                             decode('ascii'))

decoded = json.loads(encoded)
data_out = base64.b64decode(decoded[1:])
data_out = decoded

data_out = decoded;
