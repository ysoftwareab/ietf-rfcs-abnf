



NETCONF                                                  M. Jethanandani
Internet-Draft                                                    VMware
Intended status: Standards Track                               K. Watsen
Expires: September 10, 2020                              Watsen Networks
                                                           March 9, 2020


         An HTTPS-based Transport for Configured Subscriptions
                   draft-ietf-netconf-https-notif-02

Abstract

   This document defines a YANG data module for configuring HTTPS based
   configured subscription, as defined in RFC 8639.  The use of HTTPS
   maximizes transport-level interoperability, while allowing for
   encoding selection from text, e.g.  XML or JSON, to binary.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 10, 2020.

Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.



Jethanandani & Watsen  Expires September 10, 2020               [Page 1]

Internet-Draft        HTTP Configured Subscription            March 2020


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Applicability Statement . . . . . . . . . . . . . . . . .   3
     1.2.  Note to RFC Editor  . . . . . . . . . . . . . . . . . . .   3
     1.3.  Abbreviations . . . . . . . . . . . . . . . . . . . . . .   3
     1.4.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   3
       1.4.1.  Subscribed Notifications  . . . . . . . . . . . . . .   3
   2.  Learning Receiver Capabilities  . . . . . . . . . . . . . . .   4
     2.1.  Introduction  . . . . . . . . . . . . . . . . . . . . . .   4
     2.2.  Example . . . . . . . . . . . . . . . . . . . . . . . . .   4
   3.  YANG module . . . . . . . . . . . . . . . . . . . . . . . . .   5
     3.1.  Overview  . . . . . . . . . . . . . . . . . . . . . . . .   5
     3.2.  YANG module . . . . . . . . . . . . . . . . . . . . . . .   6
   4.  Security Considerations . . . . . . . . . . . . . . . . . . .  10
   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  11
     5.1.  URI Registration  . . . . . . . . . . . . . . . . . . . .  11
     5.2.  YANG Module Name Registration . . . . . . . . . . . . . .  11
     5.3.  Media Types . . . . . . . . . . . . . . . . . . . . . . .  11
       5.3.1.  Media Type "application/ietf-https-notif-cap+xml  . .  11
       5.3.2.  Media Type "application/ietf-https-notif-cap+json . .  12
   6.  Examples  . . . . . . . . . . . . . . . . . . . . . . . . . .  14
     6.1.  HTTPS Configured Subscription . . . . . . . . . . . . . .  14
     6.2.  Bundled Message . . . . . . . . . . . . . . . . . . . . .  16
   7.  Contributors  . . . . . . . . . . . . . . . . . . . . . . . .  17
   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  17
   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  17
     9.1.  Normative references  . . . . . . . . . . . . . . . . . .  17
     9.2.  Informative references  . . . . . . . . . . . . . . . . .  19
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  19

1.  Introduction

   Subscription to YANG Notifications [RFC8639] defines a YANG data
   module for configuring subscribed notifications.  It defines a
   "subscriptions" container that contains a list of receivers, but it
   defers the configuration and management of those receivers to other
   documents.  This document defines a YANG 1.1 [RFC7950] data module
   for configuring and managing HTTPS based receivers for the
   notifications.  Configured subscriptions enable a server, acting as a
   publisher of notifications, to proactively push notifications to
   external receivers without the receivers needing to first connect to
   the server, as is the case with dynamic subscriptions.

   This document describes how to enable the transmission of YANG
   modeled notifications, in the configured encoding (i.e., XML, JSON)
   over HTTPS.  Notifications are delivered in the form of a HTTPS POST.
   The use of HTTPS maximizes transport-level interoperability, while



Jethanandani & Watsen  Expires September 10, 2020               [Page 2]

Internet-Draft        HTTP Configured Subscription            March 2020


   the encoding selection pivots between implementation simplicity (XML,
   JSON) and throughput (text versus binary).

1.1.  Applicability Statement

   While the YANG module has been defined as an augmentation of
   Subscription to YANG Notifications [RFC8639], the notification method
   defined in this document MAY be used outside of Subscription to YANG
   Notifications [RFC8639] by using the grouping defined in the model.

1.2.  Note to RFC Editor

   This document uses several placeholder values throughout the
   document.  Please replace them as follows and remove this section
   before publication.

   RFC XXXX, where XXXX is the number assigned to this document at the
   time of publication.

   2020-03-09 with the actual date of the publication of this document.

1.3.  Abbreviations

            +---------+--------------------------------------+
            | Acronym | Expansion                            |
            +---------+--------------------------------------+
            | HTTP    | Hyper Text Transport Protocol        |
            |         |                                      |
            | HTTPS   | Hyper Text Transport Protocol Secure |
            |         |                                      |
            | TCP     | Transmission Control Protocol        |
            |         |                                      |
            | TLS     | Transport Layer Security             |
            +---------+--------------------------------------+

1.4.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

1.4.1.  Subscribed Notifications

   The following terms are defined in Subscription to YANG Notifications
   [RFC8639].




Jethanandani & Watsen  Expires September 10, 2020               [Page 3]

Internet-Draft        HTTP Configured Subscription            March 2020


   o  Subscribed Notifications

2.  Learning Receiver Capabilities

2.1.  Introduction

   To learn the capabilities of the receiver, the publisher can issue a
   HTTPS GET request with Accept-Type set to application/ietf-https-
   notif-cap+xml or application/ietf-https-notif-cap+json, with latter
   as the mandatory to implement, and the default in case the type is
   not specified.  If the receiver supports capabilities such as binary
   encoding of data, it can return that as a capability in a response.
   Please note that, when used in conjunction with Subscription to YANG
   Notifications [RFC8639], dynamic discovery of the receiver's
   supported encoding is considered only when the
   "/subscriptions/subscription/encoding" leaf is not configured, per
   the "encoding" leaf's description statement.

2.2.  Example

   The publisher can send the following request to learn the receiver
   capabilities.  The Accept-Type states its preferred order for
   Content-Type that it wants to receive starting with XML, and if not
   supported, to use JSON encoding.  Currently, there is only one
   capability of binary encoding defined.

GET / HTTP/1.1
Host: example.com
Accept-Type: application/ietf-https-notif-cap+xml, application/ietf-https-notif-cap+json

   In case the receiver supports the first Accept-Type, its response
   should look like this:

   HTTP/1.1 200 OK
   Date: Wed, 26 Feb 2020 20:33:30 GMT
   Server: example-server
   Cache-Control: no-cache
   Content-Type: application/ietf-https-notif-cap+xml
   Content-Length: nnn

   <receiver-capabilities>
     <receiver-capability>
       <urn:ietf:params:https-config:capability:binary-encoding:1.0>
     </receiver-capability>
   </receiver-capabilities>






Jethanandani & Watsen  Expires September 10, 2020               [Page 4]

Internet-Draft        HTTP Configured Subscription            March 2020


3.  YANG module

3.1.  Overview

   The YANG module is a definition of a set of receivers that are
   interested in the notifications published by the publisher.  The
   module contains the TCP, TLS and HTTPS parameters that are needed to
   communicate with the receiver.  The module augments the Subscription
   to YANG Notifications [RFC8639] receiver container to create a
   reference to a receiver defined by the YANG module.  As mentioned
   earlier, it uses POST method to deliver the notification.  The
   attribute 'path' defines the absolute path for the resource on the
   receiver, as defined by 'path-absolute' in URI Generic Syntax
   [RFC3986].  The user-id used by Network Configuration Access Control
   Model [RFC8341], is that of the receiver and is derived from the
   certificate presented by the receiver.

   An abridged tree diagram representing the module is shown below.

































Jethanandani & Watsen  Expires September 10, 2020               [Page 5]

Internet-Draft        HTTP Configured Subscription            March 2020


   module: ietf-https-notif
     augment /sn:subscriptions:
       +--rw https-receivers
          +--rw https-receiver* [name]
             +--rw name                 string
             +--rw tcp-params
             |  +--rw remote-address    inet:host
             |  +--rw remote-port?      inet:port-number
             |  +--rw local-address?    inet:ip-address
             |  +--rw local-port?       inet:port-number
             |  +--rw keepalives!
             |        ...
             +--rw tls-params
             |  +--rw client-identity
             |  |     ...
             |  +--rw server-authentication
             |  |     ...
             |  +--rw hello-params {tls-client-hello-params-config}?
             |  |     ...
             |  +--rw keepalives! {tls-client-keepalives}?
             |        ...
             +--rw http-params
             |  +--rw protocol-version?   enumeration
             |  +--rw client-identity
             |  |     ...
             |  +--rw proxy-server! {proxy-connect}?
             |  |     ...
             |  +--rw path?               inet:uri
             +--rw receiver-identity
                +--rw cert-maps
                      ...
     augment /sn:subscriptions/sn:subscription/sn:receivers/sn:receiver:
       +--rw receiver-ref?   leafref


3.2.  YANG module

   The YANG module imports Common YANG Data Types [RFC6991], A YANG Data
   Model for SNMP Configuration [RFC7407], and Subscription to YANG
   Notifications [RFC8639].

   The YANG module is shown below.

<CODE BEGINS> file "ietf-https-notif@2020-03-09.yang"
module ietf-https-notif {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-https-notif";
  prefix "hn";



Jethanandani & Watsen  Expires September 10, 2020               [Page 6]

Internet-Draft        HTTP Configured Subscription            March 2020


  import ietf-inet-types {
    prefix inet;
    reference
      "RFC 6991: Common YANG Data Types.";
  }

  import ietf-subscribed-notifications {
    prefix sn;
    reference
      "I-D.ietf-netconf-subscribed-notifications";
  }

  import ietf-x509-cert-to-name {
    prefix x509c2n;
    reference
      "RFC 7407: A YANG Data Model for SNMP Configuration";
  }

  import ietf-tcp-client {
    prefix tcpc;
  }

  import ietf-tls-client {
    prefix tlsc;
  }

  import ietf-http-client {
    prefix httpc;
  }

  organization
    "IETF NETCONF Working Group";

  contact
    "WG Web:   <http://tools.ietf.org/wg/netconf>
     WG List:  <netconf@ietf.org>

     Authors: Mahesh Jethanandani (mjethanandani at gmail dot com)
              Kent Watsen (kent plus ietf at watsen dot net)";
  description
    "YANG module for configuring HTTPS base configuration.

     Copyright (c) 2018 IETF Trust and the persons identified as
     the document authors.  All rights reserved.
     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD
     License set forth in Section 4.c of the IETF Trust's Legal



Jethanandani & Watsen  Expires September 10, 2020               [Page 7]

Internet-Draft        HTTP Configured Subscription            March 2020


     Provisions Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  revision "2020-03-09" {
    description
      "Initial Version.";
    reference
      "RFC XXXX, YANG Data Module for HTTPS Notifications.";
  }

  identity https {
    base sn:transport;
    description
      "HTTPS transport for notifications.";
  }

  grouping https-receivers {
    description
      "Grouping for HTTPS based receivers such that it can be
       implemented outside the constructs of a Subscription to YANG
       Notification [RFC8639] module.";
    container https-receivers {
      description
        "HTTPS based notifications.";

      list https-receiver {
        key "name";

        leaf name {
          type string;
          description
            "A name that uniquely identifies this receiver.";
        }

        container tcp-params {
          uses tcpc:tcp-client-grouping;
          description
            "TCP client parameters.";
        }



Jethanandani & Watsen  Expires September 10, 2020               [Page 8]

Internet-Draft        HTTP Configured Subscription            March 2020


        container tls-params {
          uses tlsc:tls-client-grouping;
          description
            "TLS client parameters.";
        }

        container http-params {
          description
            "HTTP client parameters.";

          uses httpc:http-client-grouping;

          leaf path {
            type inet:uri;
            description
              "The absolute path for the resource on the remote
               HTTPS server. The absolute path as specified in
               RFC 3986 as 'path-absolute'.";
            reference
              "RFC 3986: URI Generic Syntax.";
          }
        }

        container receiver-identity {
          description
            "Specifies mechanism for identifying the receiver. The
             publisher MUST NOT include any content in a notification
             that the user is not authorized to view.";

          container cert-maps {
            uses x509c2n:cert-to-name;
            description
              "The cert-maps container is used by a TLS-based HTTP
               server to map the HTTPS client's presented X.509
               certificate to a 'local' username. If no matching and
               valid cert-to-name list entry is found, the publisher
               MUST close the connection, and MUST NOT
               not send any notifications over it.";
            reference
              "RFC 7407: A YANG Data Model for SNMP Configuration.";
          }
        }
        description
          "All receivers interested in this notification.";
      }
    }
  }




Jethanandani & Watsen  Expires September 10, 2020               [Page 9]

Internet-Draft        HTTP Configured Subscription            March 2020


  augment "/sn:subscriptions" {
    description
      "Augment the subscirbed notification module to add in the
       receivers container.";
    uses https-receivers;
  }

  augment "/sn:subscriptions/sn:subscription/sn:receivers/sn:receiver" {
    leaf receiver-ref {
      type leafref {
        path "/sn:subscriptions/hn:https-receivers/hn:https-receiver/" +
             "hn:name";
      }
      description
        "Reference to a receiver.";
    }
    description
      "Augment the subscriptions container to define the receiver.";
  }
}
<CODE ENDS>


4.  Security Considerations

   The YANG module specified in this document defines a schema for data
   that is designed to be accessed via network management protocols such
   as NETCONF [RFC6241] or RESTCONF [RFC8040].  The lowest NETCONF layer
   is the secure transport layer, and the mandatory-to-implement secure
   transport is Secure Shell (SSH) [RFC6242].  The lowest RESTCONF layer
   is HTTPS, and the mandatory-to-implement secure transport is TLS
   [RFC8446].  The NETCONF Access Control Model (NACM) [RFC8341]
   provides the means to restrict access for particular NETCONF or
   RESTCONF users to a preconfigured subset of all available NETCONF or
   RESTCONF protocol operations and content.

   There are a number of data nodes defined in this YANG module that are
   writable/creatable/deletable (i.e., config true, which is the
   default).  These data nodes may be considered sensitive or vulnerable
   in some network environments.  Write operations (e.g., edit-config)
   to these data nodes without proper protection can have a negative
   effect on network operations.  These are the subtrees and data nodes
   and their sensitivity/vulnerability:

   Some of the readable data nodes in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control read access (e.g., via get, get-config, or




Jethanandani & Watsen  Expires September 10, 2020              [Page 10]

Internet-Draft        HTTP Configured Subscription            March 2020


   notification) to these data nodes.  These are the subtrees and data
   nodes and their sensitivity/vulnerability:

   Some of the RPC operations in this YANG module may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control access to these operations.  These are the
   operations and their sensitivity/vulnerability:

5.  IANA Considerations

   This document registers one URI, one YANG module and two Media Types.

5.1.  URI Registration

   in the IETF XML registry [RFC3688].  Following the format in RFC
   3688, the following registration is requested to be made:

   URI: urn:ietf:params:xml:ns:yang:ietf-http-notif

   Registrant Contact: The IESG.  XML: N/A, the requested URI is an XML
   namespace.

5.2.  YANG Module Name Registration

   This document registers one YANG module in the YANG Module Names
   registry YANG [RFC6020].

   name: ietf-https-notif
   namespace: urn:ietf:params:xml:ns:yang:ietf-https-notif
   prefix: hn
   reference: RFC XXXX

5.3.  Media Types

5.3.1.  Media Type "application/ietf-https-notif-cap+xml

Type name: application

Subtype name: ietf-https-notif-cap+xml

Required parameters: None

Optional parameters: None

Encoding considerations:
    8-bit Each conceptual YANG data node is encoded according to the XML
    Encoding Rules and Canonical Format for the specific YANG data node
    type defined in YANG 1.1 [RFC7950].



Jethanandani & Watsen  Expires September 10, 2020              [Page 11]

Internet-Draft        HTTP Configured Subscription            March 2020


Security considerations:
    Security considerations related to the generation and consumption of
    RESTCONF messages are discussed in Section NN of RFC XXXX.

    Additional security considerations are specific to the semantics of
    particular YANG data models. Each YANG module is expected to specify
    security considerations for the YANG data defined in that module.

Interoperability considerations: N/A

Published specification: RFC XXXX

Applications that use this media type:
    Instance document data parsers used within a protocol or automation
    tool that utilize YANG-defined data structures.

Fragment identifier considerations:
    Fragment identifiers for this type are not defined. All YANG data
    nodes are accessible as resources using the path in the request URI.

Additional information:

    Deprecated alias names for this type: N/A
    Magic number(s): N/A
    File extension(s): None
    Macintosh file type code(s): "TEXT"

Person & email address to contact for further information:
    See Author's Address section of RFC XXXX.

Intended usage: COMMON

Restrictions on usage: N/A

Author: See Author's Address section of RFC XXXX

Change controller:
    Internet Engineering Task Force (mailto:iesg@ietf.org)

Provisional registration? (standards tree only): no

5.3.2.  Media Type "application/ietf-https-notif-cap+json

Type name: application

Subtype name: ietf-https-notif-cap+json

Required parameters: None



Jethanandani & Watsen  Expires September 10, 2020              [Page 12]

Internet-Draft        HTTP Configured Subscription            March 2020


Optional parameters: None

Encoding considerations:
    8-bit Each conceptual YANG data node is encoded according to the XML
    Encoding Rules and Canonical Format for the specific YANG data node
    type defined in JSON Encoding of Data Modeled with YANG [RFC7951].

Security considerations:
    Security considerations related to the generation and consumption of
    RESTCONF messages are discussed in Section NN of RFC XXXX.

    Additional security considerations are specific to the semantics of
    particular YANG data models. Each YANG module is expected to specify
    security considerations for the YANG data defined in that module.

Interoperability considerations: N/A

Published specification: RFC XXXX

Applications that use this media type:
    Instance document data parsers used within a protocol or automation
    tool that utilize YANG-defined data structures.

Fragment identifier considerations:
    Fragment identifiers for this type are not defined. All YANG data
    nodes are accessible as resources using the path in the request URI.

Additional information:

    Deprecated alias names for this type: N/A
    Magic number(s): N/A
    File extension(s): None
    Macintosh file type code(s): "TEXT"

Person & email address to contact for further information:
    See Author's Address section of RFC XXXX.

Intended usage: COMMON

Restrictions on usage: N/A

Author: See Author's Address section of RFC XXXX

Change controller:
    Internet Engineering Task Force (mailto:iesg@ietf.org)

Provisional registration? (standards tree only): no




Jethanandani & Watsen  Expires September 10, 2020              [Page 13]

Internet-Draft        HTTP Configured Subscription            March 2020


6.  Examples

   This section tries to show some examples in how the model can be
   used.

6.1.  HTTPS Configured Subscription

   This example shows how a HTTPS client can be configured to send
   notifications to a receiver at address 192.0.2.1, port 443 with
   server certificates, and the corresponding trust store that is used
   to authenticate a connection.

[note: '\' line wrapping for formatting only]

<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <subscriptions
      xmlns="urn:ietf:params:xml:ns:yang:ietf-subscribed-notificatio\
ns">
    <https-receivers
        xmlns="urn:ietf:params:xml:ns:yang:ietf-https-notif"
        xmlns:x509c2n="urn:ietf:params:xml:ns:yang:ietf-x509-cert-to-name">\

      <https-receiver>
        <name>foo</name>
        <tcp-params>
          <remote-address>my-receiver.my-domain.com</remote-address>
          <remote-port>443</remote-port>
        </tcp-params>
        <tls-params>
          <server-authentication>
            <ca-certs>explicitly-trusted-server-ca-certs</ca-certs>
            <server-certs>explicitly-trusted-server-certs</server-certs>
          </server-authentication>
        </tls-params>
        <http-params>
          <client-identity>
            <basic>
              <user-id>my-name</user-id>
              <password>my-password</password>
            </basic>
          </client-identity>
          <path>/some/path</path>
        </http-params>
        <receiver-identity>
          <cert-maps>
            <cert-to-name>
              <id>1</id>



Jethanandani & Watsen  Expires September 10, 2020              [Page 14]

Internet-Draft        HTTP Configured Subscription            March 2020


              <fingerprint>11:0A:05:11:00</fingerprint>
              <map-type>x509c2n:san-any</map-type>
            </cert-to-name>
          </cert-maps>
        </receiver-identity>
      </https-receiver>
    </https-receivers>
    <subscription>
      <id>6666</id>
      <stream-subtree-filter>foo</stream-subtree-filter>
      <stream>some-stream</stream>
      <receivers>
        <receiver>
          <name>my-receiver</name>
          <receiver-ref
              xmlns="urn:ietf:params:xml:ns:yang:ietf-https-notif">foo</rec\
eiver-ref>
        </receiver>
      </receivers>
    </subscription>
  </subscriptions>

  <truststore xmlns="urn:ietf:params:xml:ns:yang:ietf-truststore">
    <certificates>
      <name>explicitly-trusted-server-certs</name>
      <description>
        Specific server authentication certificates for explicitly
        trusted servers.  These are needed for server certificates
        that are not signed by a pinned CA.
      </description>
      <certificate>
        <name>Fred Flintstone</name>
        <cert>base64encodedvalue==</cert>
      </certificate>
    </certificates>
    <certificates>
      <name>explicitly-trusted-server-ca-certs</name>
      <description>
        Trust anchors (i.e. CA certs) that are used to authenticate
        server connections.  Servers are authenticated if their
        certificate has a chain of trust to one of these CA
        certificates.
      </description>
      <certificate>
        <name>ca.example.com</name>
        <cert>base64encodedvalue==</cert>
      </certificate>
    </certificates>



Jethanandani & Watsen  Expires September 10, 2020              [Page 15]

Internet-Draft        HTTP Configured Subscription            March 2020


  </truststore>
</config>


6.2.  Bundled Message

   In the case of "bundled-message" as defined in Notification Message
   Headers and Bundles [I-D.ietf-netconf-notification-messages],
   something that this module supports, the flow of messages would look
   something like this.

       -------------                               --------------
       | Publisher |                               | Receiver   |
       -------------                               --------------
       Establish TCP             ------>
       Establish TLS             ------>
       Send HTTPS POST message
       with YANG defined         ------>
       notification #1
       Send HTTPS POST message
       with YANG defined         ------>
       notification #2
                                                   Send 204 (No Content)
                                 <------           for notification #1

                                                   Send 204 (No Content)
                                 <------           for notification #2
       Send HTTPS POST message
       with YANG defined         ------->
       notification #3
                                                   Send 204 (No Content)
                                 <------           for notification #3

   The content of the exchange would look something like this.

















Jethanandani & Watsen  Expires September 10, 2020              [Page 16]

Internet-Draft        HTTP Configured Subscription            March 2020


   Request:
       POST /some/path HTTP/1.1
       Host: my-receiver.my-domain.com
       Content-Type: application/yang-data+xml
       <notification
         xmlns="urn:ietf:params:xml:ns:netconf:notification:1.0">
         <eventTime>2019-03-22T12:35:00Z</eventTime>
         <foo xmlns="https://example.com/my-foobar-module">
           ...
         </foo>
       </notification>
       <notification
         xmlns="urn:ietf:params:xml:ns:netconf:notification:1.0">
         <eventTime>2019-03-22T12:35:00Z</eventTime>
         <bar xmlns="https://example.com/my-foobar-module">
           ...
         </bar>
       </notification>
       <notification
         xmlns="urn:ietf:params:xml:ns:netconf:notification:1.0">
         <eventTime>2019-03-22T12:35:01Z</eventTime>
         <baz xmlns="https://example.com/my-foobar-module">
           ...
         </baz>
       </notification>
   Response:
         HTTP/1.1 204 No Content
         Date: Fri, 03 Mar 2019 12:35:00 GMT
         Server: my-receiver.my-domain.com
         HTTP/1.1 204 No Content
         Date: Fri, 03 Mar 2019 12:35:00 GMT
         Server: my-receiver.my-domain.com
         HTTP/1.1 204 No Content
         Date: Fri, 03 Mar 2019 12:35:01 GMT
         Server: my-receiver.my-domain.com

7.  Contributors

8.  Acknowledgements

9.  References

9.1.  Normative references








Jethanandani & Watsen  Expires September 10, 2020              [Page 17]

Internet-Draft        HTTP Configured Subscription            March 2020


   [I-D.ietf-netconf-notification-messages]
              Voit, E., Jenkins, T., Birkholz, H., Bierman, A., and A.
              Clemm, "Notification Message Headers and Bundles", draft-
              ietf-netconf-notification-messages-08 (work in progress),
              November 2019.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC3688]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688,
              DOI 10.17487/RFC3688, January 2004,
              <https://www.rfc-editor.org/info/rfc3688>.

   [RFC6020]  Bjorklund, M., Ed., "YANG - A Data Modeling Language for
              the Network Configuration Protocol (NETCONF)", RFC 6020,
              DOI 10.17487/RFC6020, October 2010,
              <https://www.rfc-editor.org/info/rfc6020>.

   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,
              and A. Bierman, Ed., "Network Configuration Protocol
              (NETCONF)", RFC 6241, DOI 10.17487/RFC6241, June 2011,
              <https://www.rfc-editor.org/info/rfc6241>.

   [RFC6242]  Wasserman, M., "Using the NETCONF Protocol over Secure
              Shell (SSH)", RFC 6242, DOI 10.17487/RFC6242, June 2011,
              <https://www.rfc-editor.org/info/rfc6242>.

   [RFC6991]  Schoenwaelder, J., Ed., "Common YANG Data Types",
              RFC 6991, DOI 10.17487/RFC6991, July 2013,
              <https://www.rfc-editor.org/info/rfc6991>.

   [RFC7407]  Bjorklund, M. and J. Schoenwaelder, "A YANG Data Model for
              SNMP Configuration", RFC 7407, DOI 10.17487/RFC7407,
              December 2014, <https://www.rfc-editor.org/info/rfc7407>.

   [RFC7950]  Bjorklund, M., Ed., "The YANG 1.1 Data Modeling Language",
              RFC 7950, DOI 10.17487/RFC7950, August 2016,
              <https://www.rfc-editor.org/info/rfc7950>.

   [RFC7951]  Lhotka, L., "JSON Encoding of Data Modeled with YANG",
              RFC 7951, DOI 10.17487/RFC7951, August 2016,
              <https://www.rfc-editor.org/info/rfc7951>.

   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF
              Protocol", RFC 8040, DOI 10.17487/RFC8040, January 2017,
              <https://www.rfc-editor.org/info/rfc8040>.



Jethanandani & Watsen  Expires September 10, 2020              [Page 18]

Internet-Draft        HTTP Configured Subscription            March 2020


   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8341]  Bierman, A. and M. Bjorklund, "Network Configuration
              Access Control Model", STD 91, RFC 8341,
              DOI 10.17487/RFC8341, March 2018,
              <https://www.rfc-editor.org/info/rfc8341>.

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/info/rfc8446>.

   [RFC8639]  Voit, E., Clemm, A., Gonzalez Prieto, A., Nilsen-Nygaard,
              E., and A. Tripathy, "Subscription to YANG Notifications",
              RFC 8639, DOI 10.17487/RFC8639, September 2019,
              <https://www.rfc-editor.org/info/rfc8639>.

9.2.  Informative references

   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, "Uniform
              Resource Identifier (URI): Generic Syntax", STD 66,
              RFC 3986, DOI 10.17487/RFC3986, January 2005,
              <https://www.rfc-editor.org/info/rfc3986>.

Authors' Addresses

   Mahesh Jethanandani
   VMware

   Email: mjethanandani@gmail.com


   Kent Watsen
   Watsen Networks
   USA

   Email: kent+ietf@watsen.net













Jethanandani & Watsen  Expires September 10, 2020              [Page 19]
