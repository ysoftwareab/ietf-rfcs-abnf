





Internet Printing Protocol WG                                 R. Herriot
INTERNET-DRAFT                                                consultant
<draft-ietf-ipp-notify-get-09.txt>                          T.  Hastings
Updates:  RFC 2911 and [ipp-ntfy]                            Xerox Corp.
[Target category:  standards track]                             H. Lewis
Expires:  August 21, 2003                                      IBM Corp.
                                                       February 21, 2003

                   Internet Printing Protocol (IPP):
          The 'ippget' Delivery Method for Event Notifications

    Copyright (C) The Internet Society (2003).  All Rights Reserved.

Status of this Memo:

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC 2026.  Internet-Drafts are
   working documents of the Internet Engineering Task Force (IETF), its
   areas, and its working groups.  Note that other groups may also
   distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress".

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.html

   The list of Internet-Draft Shadow Directories can be accessed as
   http://www.ietf.org/shadow.html.

Abstract

   This document describes an extension to the Internet Printing
   Protocol/1.1: Model and Semantics (RFC 2911, RFC 2910).  This
   document specifies the 'ippget' Pull Delivery Method for use with the
   "Internet Printing Protocol (IPP): Event Notifications and
   Subscriptions" specification (ipp-ntfy).  This IPPGET Delivery Method
   is REQUIRED for all clients and Printers that support ipp-ntfy.  The
   Notification Recipient, acting as a client, fetches (pulls) Event
   Notifications using the Get-Notifications operation defined in this
   document.








Herriot, Hastings, Lewis    Expires: August 21, 2003           [page 1]


INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003



Table of Contents


   1 Introduction.....................................................4

   2 Terminology......................................................4
   2.1 Conformance Terminology........................................4
   2.2 Other terminology..............................................5

   3 Model and Operation..............................................5

   4 General Information..............................................7

   5 Get-Notifications operation......................................8
   5.1 Get-Notifications Request.....................................10
   5.1.1 notify-subscription-ids (1setOf integer(1:MAX)).............10
   5.1.2 notify-sequence-numbers (1setOf integer(1:MAX)).............10
   5.1.3 notify-wait (boolean).......................................11
   5.2 Get-Notifications Response....................................12
   5.2.1 notify-get-interval (integer(0:MAX))........................14
   5.2.2 printer-up-time (integer(1:MAX))............................17

   6 Additional Information about Subscription Template Attributes...21
   6.1 notify-pull-method (type2 keyword)............................21

   7 Subscription Description Attributes.............................21

   8 Additional Printer Description Attributes.......................22
   8.1 ippget-event-life (integer(15:MAX))...........................22

   9 New Values for Existing Printer Description Attributes..........23
   9.1 notify-pull-method-supported (1setOf type2 keyword)...........23
   9.2 operations-supported (1setOf type2 enum)......................23

   10 New Status Codes...............................................23
   10.1 successful-ok-events-complete (0x0007).......................24

   11 Encoding and Transport.........................................24

   12 Conformance Requirements.......................................25
   12.1 Conformance for IPP Printers.................................26
   12.2 Conformance for IPP Clients..................................26

   13 Normative References...........................................27

   14 Informative References.........................................27

   15 IANA Considerations............................................28

Herriot, Hastings, Lewis    Expires: August 21, 2003           [page 2]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


   15.1 Attribute Registrations......................................29
   15.2 Delivery Method and Additional keyword attribute value
   registrations for existing attributes.............................29
   15.3 Additional enum attribute values.............................29
   15.4 Operation Registrations......................................30
   15.5 Status code Registrations....................................30

   16 Intellectual Property..........................................30

   17 Internationalization Considerations............................30

   18 Security Considerations........................................31
   18.1 Notification Recipient client access rights..................31
   18.2 Printer security threats.....................................32
   18.3 Notification Recipient security threats......................32
   18.4 Security requirements for Printers...........................32
   18.5 Security requirements for clients............................33

   19 Contributors...................................................33

   20 Authors' Addresses.............................................33

   21 Description of Base IPP documents (Informative)................34

   22 Full Copyright Statement.......................................35


Table of Tables

   Table 1 - Information about the Delivery Method....................7
   Table 2 - Combinations of "notify-wait", "status-code", and "notify-
      get-interval" .................................................16
   Table 3 - Attributes in Event Notification Content................19
   Table 4 - Additional Attributes in Event Notification Content for Job
      Events ........................................................20
   Table 5 - Combinations of Events and Subscribed Events for "job-
      impressions-completed" ........................................20
   Table 6 - Additional Attributes in Event Notification Content for
      Printer Events ................................................21
   Table 7 - Operation-id assignments................................23
   Table 8 - The "event-notification-attributes-tag" value...........25









Herriot, Hastings, Lewis    Expires: August 21, 2003           [page 3]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


1 Introduction

   This document describes an extension to the Internet Printing
   Protocol/1.1: Model and Semantics [RFC 2911], [RFC 2910].  This
   document specifies the 'ippget' Pull Delivery Method for use with the
   "Internet Printing Protocol (IPP): Event Notifications and
   Subscriptions" specification [ipp-ntfy].  This IPPGET Delivery Method
   is REQUIRED for all clients and Printers that support [ipp-ntfy].
   The Notification Recipient, acting as a client, fetches (pulls) Event
   Notifications using the Get-Notifications operation defined in this
   document.  For a description of the base IPP documents, see section
   21 of this document.  For a description of the IPP Event Notification
   Model, see [ipp-ntfy].

   With this Pull Delivery Method, when an Event occurs, the Printer
   saves the Event Notification for a period of time called the Event
   Life.  The Notification Recipient fetches (pulls) the Event
   Notifications using the Get-Notifications operation.  This operation
   causes the Printer to return all Event Notifications held for the
   specified Subscription object(s).  If the Notification Recipient has
   selected the Event Wait Mode option to wait for additional Event
   Notifications, the Printer MAY continue to return Event Notifications
   to the Notification Recipient as asynchronous Get-Notification
   responses as Events occur using the transaction originated by the
   Notification Recipient.

   The Notification Recipient can terminate Event Wait Mode (without
   closing the connection) by supplying the "notify-wait" (boolean)
   attribute with a 'false' value in a subsequent Get-Notifications
   request.  Similarly, the Printer can terminate Event Wait Mode
   (without closing the connection) by returning the "notify-get-
   interval" (integer) operation attribute in a Get-Notifications
   response which tells the Notification Recipient how long to wait
   before trying again.


2 Terminology

   This section defines the following terms that are used throughout
   this document:


2.1 Conformance Terminology

   Capitalized terms, such as MUST, MUST NOT, REQUIRED, SHOULD, SHOULD
   NOT, MAY, NEED NOT, and OPTIONAL, have special meaning relating to
   conformance as defined in RFC 2119 [RFC2119] and [RFC2911] section
   12.1.  If an implementation supports the extension defined in this
   document, then these terms apply; otherwise, they do not.  These

Herriot, Hastings, Lewis    Expires: August 21, 2003           [page 4]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


   terms define conformance to this document only; they do not affect
   conformance to other documents, unless explicitly stated otherwise.


2.2 Other terminology

   This document uses the same terminology as [RFC2911], such as
   "client", "Printer", "Job", "attribute", "attribute value",
   "keyword", "operation", "request", "response", and "support" with the
   same meanings.  This document also uses terminology defined in [ipp-
   ntfy], such as "Subscription (object)", "Notification Recipient",
   "Event", "Event Notification", "Compound Event Notification", "Event
   Life", and "Event Notification Attribute Group" with the same
   meanings.  In addition, this document defines the following terms for
   use in this document:

   Event Wait Mode: The mode requested by a Notification Recipient
        client in its Get-Notifications Request and granted by a Printer
        to keep the connection open while the Printer sends subsequent
        Event Notifications to the Notification Recipient as they occur
        as additional Get-Notification operation responses.


3 Model and Operation

   In a Subscription Creation Operation, when the "notify-pull-method"
   attribute is present and has the 'ippget' keyword value, the client
   is requesting that the Printer use the 'ippget' Pull Delivery Method
   for the Event Notifications associated with the new Subscription
   Object.

   When an Event occurs, the Printer MUST generate an Event Notification
   and MUST assign it the Event Life.  The Printer MUST hold an Event
   Notification for its assigned Event Life.

   When a Notification Recipient wants to receive Event Notifications
   for a Subscription object, it performs the Get-Notifications
   operation supplying the Subscription object's subscription-id, which
   causes the Printer to return all un-expired Event Notifications held
   for that Subscription object.  If the Notification Recipient has
   selected the Event Wait Mode option to wait for additional Event
   Notifications, the response to the Get-Notifications request
   continues indefinitely as the Printer continues to send Event
   Notifications in the response as Events occur for that Subscription
   object.

   When the Notification Recipient requests Event Notifications for per-
   Job Subscription Objects, the Notification Recipient typically
   performs the Get-Notifications operation within a second of

Herriot, Hastings, Lewis    Expires: August 21, 2003           [page 5]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


   performing the Subscription Creation operation.  Because the Printer
   MUST save Event Notifications for at least 15 seconds (see section
   8.1), the Notification Recipient is unlikely to miss any Event
   Notifications that occur between the Subscription Creation and the
   Get-Notifications operation.

   The 'ippget' Delivery Method is designed primarily for (1) a client
   that wants to get Events (from the job's per-Job Subscription object)
   for a job that it has submitted and (2) for a privileged client that
   wants to get all job or printer Events from a per-Printer
   Subscription object.







































Herriot, Hastings, Lewis    Expires: August 21, 2003           [page 6]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


4 General Information

   If a Printer supports this Delivery Method, the following are its
   characteristics.


              Table 1 - Information about the Delivery Method


   Document Method Conformance Requirement     Delivery Method
                                               Realization


   1. What is the URL scheme name for the      'ippget' keyword method
      Push Delivery Method or the keyword      name
      method name for the Pull Delivery
      Method?

   2. Is the Delivery Method REQUIRED,
      RECOMMENDED or OPTIONAL for an IPP
      Printer to support?                      REQUIRED

   3. What transport and delivery protocols    IPP with one new
      does the Printer use to deliver the      operation.
      Event Notification Content, i.e., what
      is the entire network stack?

   4. Can several Event Notifications be       Yes.
      combined into a Compound Event
      Notification?

   5. Is the Delivery Method initiated by      This Delivery Method is
      the Notification Recipient (pull), or    a pull method with
      by the Printer (push)?                   aspects of a push
                                               method, though the
                                               Printer does not
                                               initiate the operation.

   6. Is the Event Notification content        Machine Consumable
      Machine Consumable or Human
      Consumable?

   7. What section in this document answers    Section 5
      the following question? For a Machine
      Consumable Event Notification, what is
      the representation and encoding of
      values defined in section 9.1 of [ipp-
      ntfy] and the conformance requirements
      thereof? For a Human Consumable Event

Herriot, Hastings, Lewis    Expires: August 21, 2003           [page 7]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003



      thereof? For a Human Consumable Event
      Notification, what is the
      representation and encoding of pieces
      of information defined in section 9.2
      of [ipp-ntfy] and the conformance
      requirements thereof?

   8. What are the latency and reliability     Same as IPP and the
      of the transport and delivery            underlying HTTP
      protocol?                                transport

   9. What are the security aspects of the
      transport and delivery protocol, e.g.,   underlying HTTP
      how it is handled in firewalls?          transportPandnintthe
                                               same direction, so no
                                               new firewall
                                               considerations.

   10.What are the content length
      restrictions?                            None

   11.What are the additional values or        None
      pieces of information that a Printer
      sends in an Event Notification content
      and the conformance requirements
      thereof?

   12.What are the additional Subscription     None
      Template and/or Subscription
      Description attributes and the
      conformance requirements thereof?

   13.What are the additional Printer          "ipp-event-life"
      Description attributes and the           (integer (15: MAX))
      conformance requirements thereof?




5 Get-Notifications operation

   This operation is issued by a client acting in the role of a
   Notification Recipient requesting the Printer to return all Event
   Notifications held for the identified Subscription object(s).

   A Printer MUST support this operation, MUST accept the request in any
   state (see [RFC2911] "printer-state" and "printer-state-reasons"


Herriot, Hastings, Lewis    Expires: August 21, 2003           [page 8]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


   attributes), and MUST remain in the same state with the same
   "printer-state-reasons" values.

   When a Printer performs this operation, it MUST return all and only
   those Event Notifications:

     1. Whose associated Subscription Object's "notify-subscription-id"
        Subscription Description attribute equals one of the values of
        the "notify-subscription-ids" (1setOf integer(1:MAX)) operation
        attribute AND

     2. Whose associated Subscription Object's contains the "notify-
        pull-method" attribute and it has the 'ippget' keyword value AND

     3. Whose "notify-sequence-number" is equal to or greater than the
        corresponding value of the "notify-sequence-numbers (1setOf
        integer(1:MAX)) operation attribute, if supplied AND

     4. Whose Event Life has not yet expired AND

     5. Where the Notification Recipient client has read-access rights
        to the identified Subscription Object (see Access Rights
        paragraph below).

   The Notification Recipient client MUST either: (a) request Event Wait
   Mode by supplying the "notify-wait" operation attribute with a 'true'
   value or (b) suppress Event Wait Mode by omitting the "notify-wait"
   operation attribute or by supplying it with a 'false' value.  In
   order to terminate Event Wait Mode subsequently, the Notification
   Recipient client MUST close the connection.  In order to terminate
   Event Wait Mode, the Printer MUST either (a) return the "notify-get-
   interval" operation attribute in a Get-Notifications response
   (RECOMMENDED behavior) or (b) close the connection.  The "notify-get-
   interval" operation attributes tells the Notification Recipient how
   long to wait before trying a subsequent Get-Notifications request.

   Access Rights: The authenticated user (see [RFC2911] section 8.3)
   performing this operation MUST be (1) the owner of each Subscription
   Object identified by the "notify-subscription-ids" operation
   attribute (see section 5.1.1), (2) an operator or administrator of
   the Printer (see [RFC2911] Sections 1 and 8.5), or (3) be otherwise
   authorized by the Printer's administrator-configured security policy
   to request Event Notifications from the target Subscription
   Object(s).  Otherwise, the IPP Printer MUST reject the operation and
   return: 'client-error-forbidden', 'client-error-not-authenticated',
   or 'client-error-not-authorized' status code as appropriate.
   Furthermore, the Printer's security policy MAY limit the attributes
   returned by the Get-Notifications operation, in a manner similar to


Herriot, Hastings, Lewis    Expires: August 21, 2003           [page 9]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


   the Get-Job-Attributes operation (see [RFC2911] end of section
   3.3.4.2).


5.1 Get-Notifications Request

   The following groups of attributes are part of the Get-Notifications
   Request:

   Group 1: Operation Attributes

      Natural Language and Character Set:
         The "attributes-charset" and "attributes-natural-language"
         attributes as described in [RFC2911] section 3.1.4.1.

      Target:
         The "printer-uri" (uri) operation attribute which is the target
         for this operation as described in [RFC2911] section 3.1.5.

      Requesting User Name:
         The "requesting-user-name" (name(MAX)) attribute SHOULD be
         supplied by the client as described in [RFC2911] section 8.3.


      5.1.1 notify-subscription-ids (1setOf integer(1:MAX))

         This attribute identifies one or more Subscription objects for
         which Events are requested.  The client MUST supply this
         attribute with at least one value.  The Printer object MUST
         support this attribute with multiple values.

         If no Subscription Object exists with the supplied identifier
         or the identified Subscription Object does not contain the
         "notify-pull-method" attribute with the 'ippget' keyword value,
         the Printer MUST return the 'client-error-not-found' status
         code.

               Note:  The name of both the "notify-subscription-ids" and
               "notify-sequence-numbers" end in 's', since they are
               multi-valued.  However, there are other occurrences of
               these attribute names without the 's' that are single
               valued.

      5.1.2 notify-sequence-numbers (1setOf integer(1:MAX))

         This attribute specifies one or more lowest Event Notification
         sequence number values for the Subscription objects identified
         by the corresponding values of the "notify-subscription-ids"
         operation attribute.  The Notification Recipient SHOULD supply

Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 10]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


         this attribute and the number of values SHOULD be the same as
         the number of values of the "notify-subscriptions-ids"
         attribute.  The Printer MUST support this attribute with
         multiple values.

         The Printer MUST NOT return Notification Events with lower
         sequence numbers for the corresponding Subscription object.
         Therefore, by supplying the proper values for this attribute
         the Notification Recipient can prevent getting the same Event
         Notifications from a Subscription object that were returned on
         a previous Get-Notifications request.  The Notification
         Recipient SHOULD remember the highest "notify-sequence-number"
         value returned for each Subscription object requested and
         SHOULD pass that value for each requested Subscription object
         on the next Get-Notifications request.

         If the Notification Recipient supplies fewer values for this
         attribute (including omitting this attribute) than for the
         "notify-subscription-ids" operation attribute, the Printer
         assumes a '1' value for each missing value.  A value of '1'
         causes the Printer to return any un-expired Event Notification
         for that Subscription object, since '1' is the lowest possible
         sequence number.  If the Notification Recipient supplies more
         values for this attribute than the number of values for the
         "notify-subscription-ids" operation attribute, the Printer
         ignores the extra values.

         Note: If a Notification Recipient performs two consecutive Get-
         Notifications operations with the same value for "notify-
         sequence-number" (or omits the attribute), the time stamp of
         the first Event Notification in the second Get-Notifications
         Response may be less than the time stamp of the last Event
         Notification in the first Get-Notification Response.  This
         happens because the Printer sends all unexpired Event
         Notification with a sequence number equal or higher according
         to the ordering specified in [ipp-ntfy] and some Event
         Notifications from the first Get-Notifications operation may
         not have expired by the time the second Get-Notifications
         operation occurs.


      5.1.3 notify-wait (boolean)

         This value indicates whether or not the Notification Recipient
         wants Event Wait Mode.  The client MAY supply this attribute.
         The Printer object MUST support both values of this attribute.

         If the client supplies the 'false' value or omits this
         attribute, the client is not requesting Event Wait Mode.  If

Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 11]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


         the value is 'true', the client is requesting Event Wait Mode.
         See the beginning of section 5.2 for the rules for Event Wait
         Mode.

5.2 Get-Notifications Response

   The Printer has the following options for responding to a Get-
   Notifications Request:

     1. The Printer can reject the request and return the 'server-error-
        busy' status code, if the Printer is too busy to accept this
        operation at this time.  In this case, the Printer MUST return
        the "get-notify-interval" operation attribute to indicate when
        the client SHOULD try again.

     2. If the Notification Recipient did not request Event Wait Mode
        ("notify-wait-mode" = 'false' or omitted), the Printer MUST
        return immediately whatever Event Notifications it currently
        holds in the requested Subscription object(s) and MUST return
        the "notify-get-interval" operation attribute with number of
        seconds from now at which the Notification Recipient SHOULD
        repeat the Get-Notifications Request to get future Event
        Notifications.

     3. If the Notification Recipient requested Event Wait Mode
        ("notify-wait-mode" = 'true'), the Printer MUST return
        immediately whatever Event Notifications it currently holds in
        the requested Subscription object(s) and MUST continue to return
        Event Notifications as they occur until all of the requested
        Subscription Objects are canceled.  A Subscription Object is
        canceled either via the Cancel-Subscription operation or by the
        Printer (e.g., the Subscription Object is canceled when the
        associated Job completes and is no longer in the Job Retention
        or Job History phase - see the "ippget-event-life
        (integer(15:MAX))" attribute discussion in section 8.1).

        However, the Printer MAY decide to terminate Event Wait Mode at
        any time, including in the first response.  In this case the
        Printer MUST return the "notify-get-interval" operation
        attribute.  This attribute indicates that the Printer wishes to
        leave Event Wait Mode and the number of seconds in the future
        that the Notification Recipient SHOULD try the Get-Notifications
        operation again.  The Notification Recipient MUST accept this
        response and MUST disconnect.  If the Notification Recipient
        does not disconnect, the Printer SHOULD do so.

   From the Notification Recipient's view, the response appears as an
   initial burst of data, which includes the Operation Attributes Group
   and one Event Notification Attributes Group per Event Notification

Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 12]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


   that the Printer is holding.  After the initial burst of data, if the
   Notification Recipient has selected the Event Wait Mode option to
   wait for additional Event Notifications, the Notification Recipient
   receives occasional Event Notification Attribute Groups.  Proxy
   servers may delay some Event Notifications or cause time-outs to
   occur.  The client MUST be prepared to perform the Get-Notifications
   operation again when time-outs occur.

   Each attribute is encoded using the IPP rules for encoding attributes
   [RFC2910] and MAY be encoded in any order.  Note: the Get-Jobs
   response in [RFC2911] acts as a model for encoding multiple groups of
   attributes.  See section 11 for the encoding and transport rules.

   The following groups of attributes are part of the Get-Notifications
   Response:

   Group 1: Operation Attributes

      Status Message:
         In addition to the REQUIRED status code returned in every
         response, the response OPTIONALLY includes a "status-message"
         (text(255)) and/or a "detailed-status-message" (text(MAX))
         operation attribute as described in [RFC2911] sections 13 and
         3.1.6.

         The Printer can return any status codes defined in [RFC2911].
         If the status code is not 'successful-xxx', the Printer MUST
         NOT return any Event Notification Attribute groups.  The
         following is a description of the important status codes:

            successful-ok: the response contains all Event Notification
               associated with the specified subscription-ids that had
               been supplied in the "notify-subscription-ids" operation
               attribute in the request.  If the requested Subscription
               Objects have no associated Event Notification, the
               response MUST contain zero Event Notifications.
            successful-ok-events-complete:  indicate when this return
               is the last return for all Subscription objects that
               match the request, whether or not there are Event
               Notifications being returned.  This condition occurs for
               Event Wait Mode with Notification Recipients waiting for
               responses when the Subscription Object is: (1) canceled
               with a Cancel-Subscription operation, (2) deleted when
               the Per-Printer Subscription lease time expires, or (3)
               when the 'job-completed' event occurs for a Per-Job
               Subscription.  This condition also occurs for a Get-
               Notifications request that a Notification Recipient makes
               after the job completes, but before the Event Life
               expires.  See section 10.1.

Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 13]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


            client-error-not-found: The Printer has no Subscription
               Object's whose "notify-subscription-id" attribute equals
               any of the values of the "notify-subscription-ids"
               operation attribute supplied or the identified
               Subscription Object does not contain the "notify-pull-
               method" attribute with the 'ippget' keyword value.
            server-error-busy: The Printer is too busy to accept this
               operation.  The Printer SHOULD return the "notify-get-
               interval" operation attribute in the Operation Attributes
               of the response, then the Notification Recipient SHOULD
               wait for the number of seconds specified by the "notify-
               get-interval" operation attribute before performing this
               operation again.  If the "notify-get-interval" Operation
               Attribute is not present, the Notification Recipient
               SHOULD use the normal network back-off algorithms for
               determining when to perform this operation again.

      Natural Language and Character Set:
         The "attributes-charset" and "attributes-natural-language"
         attributes as described in [RFC2911] section 3.1.4.2.

         The Printer MUST use the values of "notify-charset" and
         "notify-natural-language", respectively, from one Subscription
         Object associated with the Event Notifications in this
         response.

         Normally, there is only one matched Subscription Object, or the
         value of the "notify-charset" and "notify-natural-language"
         attributes is the same in all Subscription Objects.  If not,
         the Printer MUST pick one Subscription Object from which to
         obtain the value of these attributes.  The algorithm for
         picking the Subscription Object is implementation dependent.
         The choice of natural language is not critical because 'text'
         and 'name' values can override the "attributes-natural-
         language" operation attribute.  The Printer's choice of charset
         is critical because a bad choice may leave it unable to send
         some 'text' and 'name' values accurately.


      5.2.1 notify-get-interval (integer(0:MAX))

         The value of this operation attribute is the number of seconds
         that the Notification Recipient SHOULD wait before trying the
         Get-Notifications operation again.  The Printer MUST return
         this operation attribute if: (1) it is too busy to return
         events, (2) the Notification Recipient client did not request
         Event Wait Mode, or (3) the Printer is terminating Event Wait
         Mode.  The client MUST accept this attribute and SHOULD re-
         issue the Get-Notifications operation (with or without "notify-

Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 14]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


         wait" = 'true') the indicated number of seconds in the future
         in order to get more Event Notifications  This value is
         intended to help the client be a good network citizen.

         The value of this attribute MUST be at least as large as the
         value of the Printer's "ippget-event-life" Printer Description
         attribute (see section 8.1).  The Printer MAY return a value
         that is larger than the value of the "ippget-event-life"
         Printer Description attribute provided that the Printer
         increases the Event Life for this Subscription object, so that
         Notification Recipients taking account of the larger value and
         polling with a longer interval will not miss events.  Note;
         implementing such an algorithm requires some hidden attributes
         in the Subscription object that are IMPLEMENTATION DEPENDENT.

         If the Printer wants to remain in Event Wait Mode, then the
         Printer MUST NOT return this attribute in the response.

         Here is a complete table of combinations of "notify-wait",
         "status-code", "notify-get-interval", and Event Notification
         Attributes Groups for Get-Notification initial (Wait and No
         Wait) Responses and subsequent Event Wait Mode Responses (which
         may be staying in Event Wait Mode or may be requesting the
         Notification Recipient to leave Event Wait Mode):


























Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 15]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


   Table 2 - Combinations of "notify-wait", "status-code", and "notify-
                               get-interval"


         client sends:  Printer returns:  Printer        Event
                                          returns:       Notification
         "notify-wait"  "status-code"     "notify-get-   Attribute
                                          interval"      Groups


         1.  'false'*   'successful-ok'   MUST return N  maybe

         2.  'false'*   'not-found'       MUST NOT       MUST NOT

         3.  'false'*   'busy'            MUST return N  MUST NOT

         4.  'false'*   'events-                         'job-
                        complete'         MUST NOT       completed'

         5.  'true'     'successful-ok'   MUST NOT       MUST

         6.  'true'     'successful-ok'   MUST return N  maybe

         7.  'true'     'not-found'       MUST NOT       MUST NOT

         8.  'true'     'busy'            MUST return N  MUST NOT

         9.  'true'     'events-          MUST NOT       'job-
                        complete'                        completed' or
                                                         maybe other

     * 'false' or client omits the "notify-wait" attribute.

         Explanation:

         1-4:  client does not request Event Wait Mode
         5-9:  client requests Event Wait Mode
         2,7:  Subscription object not found, or was canceled earlier;
         client should NOT try again.
         3,8:  server busy, tells client to try later; client should try
         again in N seconds.
         4:  client polled after job completed, but before Event Life
         expired, and got the 'job-completed' event, so the client
         shouldn't bother trying again; client should NOT try again
         later.
         5:  Printer returns one or more Event Notifications and is OK
         to stay in Event Wait Mode; the client waits for more Event
         Notifications to be returned.


Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 16]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


         6:  Printer wants to leave Event Wait mode.  Can happen on the
         first response (with or without Event Notifications) or happen
         on a subsequent response with or without Event Notifications;
         the client SHOULD try again in N seconds.
         9:  Printer either (1) returns 'job-completed' event or (2) the
         Subscription Object was canceled by either a Cancel-Job or a
         Per-Printer Subscription expired without being renewed.  For
         case (1), at least one Event Notification MUST be returned,
         while for case (2), it is unlikely that any Event Notifications
         are returned; the client should NOT try again.

      5.2.2 printer-up-time (integer(1:MAX))

         The value of this attribute is the Printer's "printer-up-time"
         attribute at the time the Printer sends this response.  The
         Printer MUST return this attribute.  Because each Event
         Notification also contains the value of this attribute when the
         event occurred, the value of this attribute lets a Notification
         Recipient know when each Event Notification occurred relative
         to the time of this response.

   Group 2: Unsupported Attributes

         See [RFC2911] section 3.1.7 for details on returning
         Unsupported Attributes.


   Group 3 through N: Event Notification Attributes

         The Printer responds with one Event Notification Attributes
         Group per matched Event Notification.  The entire response is
         considered a single Compound Event Notification (see [ipp-
         ntfy]).  The matched Event Notifications are all un-expired
         Event Notification associated with the matched Subscription
         Objects and MUST follow the "Event Notification Ordering"
         requirements for Event Notifications within a Compound Event
         Notification specified in [ipp-ntfy] section 9.  In other
         words, the Printer MUST order these Event Notification groups
         in ascending time stamp (and sequence number) order for a
         Subscription object.  If Event Notifications for multiple
         Subscription objects are being returned, the Notification
         Events for the next Subscription object follow in ascending
         time stamp order, etc.

         Each Event Notification Group MUST contain all of attributes
         specified in section 9.1 ("Content of Machine Consumable Event
         Notifications") of [ipp-ntfy] with exceptions denoted by
         asterisks in the tables below.


Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 17]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


         The tables below are copies of the tables in section 9.1
         ("Content of Machine Consumable Event Notifications") of [ipp-
         ntfy] except that each cell in the "Sends" column is a  "MUST".

         If more than one Event Notification is being returned and the
         status of each is not the same, then the Printer MUST return a
         "notify-status-code" attribute in each Event Notification
         Attributes group to indicate the differing status values.

         For an Event Notification for all Events, the Printer includes
         the attributes shown in Table 3.







































Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 18]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


             Table 3 - Attributes in Event Notification Content


     Source Value                               Sends     Source
                                                          Object


     notify-subscription-id (integer(1:MAX))    MUST      Subscription

     notify-printer-uri (uri)                   MUST      Subscription

     notify-subscribed-event (type2 keyword)    MUST      Event
                                                          Notification

     printer-up-time (integer(1:MAX)) *         MUST      Printer

     printer-current-time (dateTime)            MUST **   Printer

     notify-sequence-number (integer (0:MAX))   MUST      Subscription

     notify-charset (charset)                   MUST      Subscription

     notify-natural-language (naturalLanguage)  MUST      Subscription

     notify-user-data (octetString(63))         MUST ***  Subscription

     notify-text (text)                         MUST      Event
                                                          Notification

     attributes from the "notify-attributes"    MUST **** Printer
     attribute

     attributes from the "notify-attributes"    MUST **** Job
     attribute

     attributes from the "notify-attributes"    MUST **** Subscription
     attribute


         * As specified in [ipp-ntfy] section 9, the value of the
         "printer-up-time" attribute sent in each Event Notification
         MUST be the time at which the Event occurred, not the time at
         which the Event Notification was sent.

         ** The Printer MUST send the "printer-current-time" attribute
         if and only if it supports the "printer-current-time" attribute
         on the Printer object.



Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 19]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


         *** If the associated Subscription Object does not contain a
         "notify-user-data" attribute, the Printer MUST send an octet-
         string of length 0.

         **** If the "notify-attributes" attribute is present on the
         Subscription Object, the Printer MUST send all attributes
         specified by the "notify-attributes" attribute.  Note: if the
         Printer doesn't support the "notify-attributes" attribute, it
         is not present on the associated Subscription Object.

         For Event Notifications for Job Events, the Printer includes
         the additional attributes shown in Table 4.

      Table 4 - Additional Attributes in Event Notification Content for
                                 Job Events


     Source Value                                   Sends  Source
                                                           Object


     job-id (integer(1:MAX))                        MUST   Job

     job-state (type1 enum)                         MUST   Job

     job-state-reasons (1setOf type2 keyword)       MUST   Job

     job-impressions-completed (integer(0:MAX))     MUST * Job


         *  The Printer MUST send the "job-impressions-completed"
         attribute in an Event Notification only for the combinations of
         Events and Subscribed Events shown in Table 5.


      Table 5 - Combinations of Events and Subscribed Events for "job-
                           impressions-completed"


     Job Event                  Subscribed Job Event


     'job-progress'             'job-progress'

     'job-completed'            'job-completed'

     'job-completed'            'job-state-changed'



Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 20]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003



         For Event Notification for Printer Events, the Printer includes
         the additional attributes shown in Table 6.

      Table 6 - Additional Attributes in Event Notification Content for
                               Printer Events


     Source Value                                   Sends   Source
                                                            Object


     printer-state (type1 enum)                     MUST    Printer

     printer-state-reasons (1setOf type2 keyword)   MUST    Printer

     printer-is-accepting-jobs (boolean)            MUST    Printer


6 Additional Information about Subscription Template Attributes

   The 'ippget' Delivery Method does not define any addition
   Subscription Template attributes.  The 'ippget' Delivery Method has
   the same conformance requirements for Subscription Template
   attributes as defined in [ipp-ntfy].  This section defines additional
   information about Subscription Template attributes defined in [ipp-
   ntfy].


6.1 notify-pull-method (type2 keyword)

   This Subscription Template attribute identifies the Pull Delivery
   Method to be used for the Subscription Object (see [ipp-ntfy]).  In
   order to support the 'ippget' Pull Delivery Method defined in this
   document, the Printer MUST support this attribute with the following
   keyword value:

     'ippget':  indicates that the 'ippget' Pull Delivery Method is to
       be used for this Subscription Object.

7 Subscription Description Attributes

   The 'ippget' Delivery Method has the same conformance requirements
   for Subscription Description attributes as defined in [ipp-ntfy].
   The 'ippget' Delivery Method does not define any addition
   Subscription Description attributes.




Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 21]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


8 Additional Printer Description Attributes

   This section defines additional Printer Description attributes for
   use with the 'ippget' Delivery Method.


8.1 ippget-event-life (integer(15:MAX))

   This Printer Description attribute specifies the Event Life value
   that the Printer assigns to each Event, i.e., the number of seconds
   after an Event occurs during which a Printer will return that Event
   in an Event Notification in a Get-Notifications response.  After the
   Event Life expires for the Event, the Printer MAY no longer return an
   Event Notification for that Event in a Get-Notifications response.

   The Printer MUST support this attribute if it supports the 'ippget'
   Delivery Method.  The value MUST be 15 or more (at least 15 seconds)
   and 60 (seconds) is the RECOMMENDED value to align with the PWG Job
   Monitoring MIB [RFC2707] jmGeneralJobPersistence and
   jmGeneralAttributePersistence objects.

   For example, assume the following:

     1.a client performs a Job Creation operation that creates a
       Subscription Object associated with the 'ippget' Delivery
       Method, AND

     2.an Event associated with the new Job occurs immediately after
       the Subscription Object is created, AND

     3.the same client or some other client performs a Get-
       Notifications operation such that the client is connected N
       seconds after the Job Creation operation.

   Then, if N is less than the value of this attribute, the client(s)
   performing the Get-Notifications operations can expect not to miss
   any Event-Notifications, barring some unforeseen lack of memory space
   in the Printer.  Note:  The client MUST initiate the Get-
   Notifications a time that is sufficiently less that N seconds to
   account for network latency so that it is connected to the Printer
   before N seconds elapses.

   If a Printer supports the 'ippget' Delivery Method, it MUST keep
   'completed', 'canceled', or 'aborted' Job objects in the Job
   Retention and/or Job History phases for at least as long as this
   attribute's value.  The Printer MAY retain jobs longer that this
   value.  See [RFC2911] section 4.3.7.1 and the discussion in [ipp-
   ntfy] 'job-completed' event) that explains that a Notification
   Recipients can query the Job after receiving a 'job-completed' Event

Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 22]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


   Notification in order to find out other information about the job
   that is 'completed', 'aborted', or 'canceled'.  However, this
   attribute has no effect on the Cancel-Subscription operation which
   deletes the Subscription object immediately, whether or not it
   contain the "notify-pull-method" attribute with the 'ippget' keyword
   value.  Immediately thereafter, subsequent Get-Notifications
   Responses MUST NOT contain Event Notifications associated with the
   canceled Subscription object.


9 New Values for Existing Printer Description Attributes

   This section defines additional values for existing Printer
   Description attributes defined in [ipp-ntfy].


9.1 notify-pull-method-supported (1setOf type2 keyword)

   The following keyword value for the "notify-pull-method-supported"
   attribute is added in order to support the new Delivery Method
   defined in this document:

      'ippget'  - The IPP Notification Pull Delivery Method defined in
        this document.

9.2 operations-supported (1setOf type2 enum)

   Table 7 lists the "operation-id" value defined in order to support
   the new Get-Notifications operation defined in this document.


                    Table 7 - Operation-id assignments


     Value        Operation Name


     0x001C       Get-Notifications




10 New Status Codes

   The following status code is defined as an extension for this
   Delivery Method and is returned as the status code of the Get-
   Notifications operation in Group 1 or Group 3 to N (see section 5.2).



Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 23]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


10.1 successful-ok-events-complete (0x0007)

   The Printer MUST return the 'successful-ok-events-complete' status
   code to indicate when this Get-Notifications response is the last
   response for a Subscription object, whether or not there are Event
   Notifications being returned.  This condition occurs for Event Wait
   Mode with Notification Recipients waiting for responses when the
   Subscription Object is: (1) canceled with a Cancel-Subscription
   operation, (2) deleted when the Per-Printer Subscription lease time
   expires, or (3) when the 'job-completed' event occurs for a Per-Job
   Subscription.  This condition also occurs for a Get-Notifications
   request that a Notification Recipient makes after the job completes,
   but before the Event Life expires.


11 Encoding and Transport

   This section defines the encoding and transport considerations for
   this Delivery Method based on [RFC2910].

   The encoding of a Get-Notifications Response is modeled the Get-Jobs
   Response (see [RFC2911]).  In a Get-Notifications Response, each
   Event Notification Attributes Group MUST start with an 'event-
   notification-attributes-tag' (see the section "Encodings of
   Additional Attribute Tags" in [ipp-ntfy]), and end with an 'end-of-
   attributes-tag'.  In addition, for Event Wait Mode the multi-
   part/related is used to separate each multiple response (in time) to
   a single Get-Notifications Request.

   The Printer returns Get-Notification Response as follows:

     1. If the Notification Recipient client did not request Event Wait
        Mode ("notify-wait" = 'false' or omitted), the Printer ends the
        response with an 'end-of-attributes-tag' (see [RFC2911] Get-Jobs
        encoding) as with any operation response.

     2. If the Notification Recipient client requests Event Wait Mode
        ("notify-wait" = 'true') and the Printer wishes to honor the
        request, the Printer MUST return the response as an
        application/ipp part inside a multi-part/related MIME media
        type.  When one or more additional Events occur, the Printer
        returns each as an additional Event Notification Group using a
        separate application/ipp part under the multi-part/related type.

     3. If the client requested Event Wait Mode ("notify-wait" =
        'true'), but the Printer does not wish to honor the request in
        the initial response but wants the client explicitly poll for
        Event Notifications, the Printer MUST return the "notify-get-
        interval" operation attribute (see section 5.2.1).  The Printer

Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 24]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


        returns the response as an application/ipp part which MAY be
        inside an multi-part/related type.  The client MUST accept this
        response and re-issue the Get-Notifications request in the
        future indicated by the value of the "notify-get-interval"
        attribute value..

     4. If the client requested Event Wait Mode ("notify-wait" =
        'true'), and the Printer initially honored the request, but
        later wishes to leave Event Wait Mode,  the Printer MUST return
        the "notify-get-interval" operation attribute (see section
        5.2.1).  The Printer returns the response as an application/ipp
        part which MUST be inside an multi-part/related type.

   Note: All of the above is without either the Printer or the
   Notification Recipient closing the connection.  In fact, the
   connection SHOULD remain open for any subsequent IPP operations.
   However, either the Notification Recipient or the Printer can
   abnormally terminate by closing the connection.  But, if the Printer
   closes the connection too soon after returning the response, the
   client may not receive the response.

   The Printer MAY chunk the responses, but this has no significance to
   the IPP semantics.

   Note:  While HTTP/1.1 allows a proxy to collect chunked responses
   over a period of time and return them back as a single un-chunked
   response (with a Content Length instead).  However, in practice no
   proxy wants to have an infinite buffer.  Also no proxy want to hold
   up responses, since user would be furious.

   This notification delivery method uses the IPP transport and encoding
   [RFC2910] for the Get-Notifications operation with the following
   extension allocated in [ipp-ntfy]:


          Table 8 - The "event-notification-attributes-tag" value


   Tag Value (Hex)    Meaning


   0x07               "event-notification-attributes-tag"



12 Conformance Requirements

   This section lists the conformance requirements for clients and
   Printers.

Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 25]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


12.1 Conformance for IPP Printers

   It is OPTIONAL for a Printer to support IPP Notifications as defined
   in [ipp-ntfy].  However, if a Printer supports IPP Notifications, the
   Printer MUST support the 'ippget' Delivery Method as defined in this
   document as one of its Delivery Methods.  IPP Printers that conform
   to this specification:

     1. MUST meet the conformance requirements defined in [ipp-ntfy] for
        a Pull Delivery Method;

     2. MUST support the Get-Notifications operation defined in section
        5, including Event Wait Mode;

     3. MUST support the Subscription Template object attributes as
        defined in section 6;

     4. MUST support the Subscription Description object attributes as
        defined in section 7;

     5. MUST support the "ippget-event-life" Printer Description
        attribute defined in section 8.1, including retaining jobs in
        the Job Retention and/or Job History phases for at least as long
        as the value specified by the Printer's "ippget-event-life";

     6. MUST support the additional values for IPP/1.1 Printer
        Description attributes defined in section 9;

     7. MUST support the 'successful-ok-events-complete' status code as
        described in section 10.1;

     8. MUST listen for the IPP Get-Notifications operation requests on
        IANA-assigned well-known port 631, unless explicitly configured
        by system administrators or site policies;

     9. SHOULD NOT listen for IPP Get-Notifications operation requests
        on any other port, unless explicitly configured by system
        administrators or site policies.

     10.  MUST meet the security conformance requirements as stated in
        section 18.4.


12.2 Conformance for IPP Clients

   It is OPTIONAL for an IPP Client to support IPP Notifications as
   defined in [ipp-ntfy].  However, if a client supports IPP
   Notifications, the client MUST support the 'ippget' Delivery Method


Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 26]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


   as defined in this document as one of its Delivery Methods.  IPP
   Clients that conform to this specification:

     1.MUST create Subscription Objects by sending Subscription
       Creation operation requests containing the "notify-pull-method"
       attribute (as opposed to the "notify-recipient-uri" attribute)
       using the 'ippget' keyword value (see sections 6.1 and 15.2);

     2.MUST send IPP Get-Notifications operation requests (see section
       5.1) via the port specified in the associated 'ipp' URL (if
       present) or otherwise via IANA assigned well-known port 631;

     3.MUST convert the associated 'ipp' URLs for use in IPP Get-
       Notifications operation to their corresponding 'http' URL forms
       for use in the HTTP layer according to the rules in section 5
       "IPP URL Scheme" in [RFC2910].

     4.MUST meet the security conformance requirements as stated in
       section 18.5.


13 Normative References

   [ipp-ntfy]
     Herriot, R., and T. Hastings, "Internet Printing Protocol/1.1: IPP
     Event Notifications and Subscriptions", <draft-ietf-ipp-not-spec-
     11.txt>, February 21, 2003.

   [RFC2119]
     S.  Bradner, "Key words for use in RFCs to Indicate Requirement
     Levels", RFC 2119 , March 1997

   [RFC2910]
     Herriot, R., Butler, S., Moore, P., and R. Tuner, "Internet
     Printing Protocol/1.1: Encoding and Transport", RFC 2910, September
     2000.

   [RFC2911]
     deBry, R., Hastings, T., Herriot, R., Isaacson, S., and P. Powell,
     "Internet Printing Protocol/1.1: Model and Semantics", RFC 2911,
     September 2000.


14 Informative References

   [notify-req]
     Hastings, T., deBry, R., and H. Lewis, "Internet Printing Protocol
     (IPP): Requirements for IPP Notifications", <draft-ietf-ipp-not-
     06.txt>, work in progress, July 17, 2001.

Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 27]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


   [RFC2565]
     Herriot, R., Butler, S., Moore, P., and R.  Turner, "Internet
     Printing Protocol/1.0: Encoding and Transport", RFC 2565, April
     1999.

   [RFC2566]
     R.  deBry, T.  Hastings, R.  Herriot, S.  Isaacson, and P.  Powell,
     "Internet Printing Protocol/1.0: Model and Semantics", RFC 2566,
     April 1999.

   [RFC2567]
     Wright, D., "Design Goals for an Internet Printing Protocol", RFC
     2567, April 1999.

   [RFC2568]
     Zilles, S., "Rationale for the Structure and Model and Protocol for
     the Internet Printing Protocol", RFC 2568, April 1999.

   [RFC2569]
     Herriot, R., Hastings, T., Jacobs, N., Martin, J., "Mapping between
     LPD and IPP Protocols", RFC 2569, April 1999.

   [RFC2616]
     R.  Fielding, J.  Gettys, J.  Mogul, H.  Frystyk, L.  Masinter, P.
     Leach, T.  Berners-Lee, "Hypertext Transfer Protocol - HTTP/1.1",
     RFC 2616, June 1999.

   [RFC2707]
     Bergman, R., Hastings, T., Isaacson, S., and H.  Lewis, "Job
     Monitoring MIB - V1.0", November 1999.

   [RFC3196]
     Hastings, T., Manros, C., Zehler, P., Kugler, C., and H. Holst,
     "Internet Printing Protocol/1.1: Implementer's Guide", RFC3196,
     November 2001.


15 IANA Considerations

   This section contains the exact information for IANA to add to the
   IPP Registries according to the procedures defined in RFC 2911
   [RFC2911] section 6.  The resulting registrations will be published
   in the http://www.iana.org/assignments/ipp-registrations registry.

     Note to RFC Editors:  Replace RFC NNNN below with the RFC number
     for this document, so that it accurately reflects the content of
     the information for the IANA Registry.



Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 28]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


15.1 Attribute Registrations

   The following table lists the attributes defined in this document.
   This is to be registered according to the procedures in RFC 2911
   [RFC2911] section 6.2.

   Printer Description attributes:                Reference   Section
   -------------------------------                ---------   -------
   ippget-event-life (integer(15:MAX))            [RFCNNNN]    8.1


15.2 Delivery Method and Additional keyword attribute value
    registrations for existing attributes

   This section lists additional keyword attribute value registrations
   for use with existing attributes defined in other documents.  These
   are to be registered according to the procedures in RFC 2911
   [RFC2911] section 6.1.  According to [ipp-ntfy] section 24.7.3, Pull
   Delivery Method registrations are the keyword attribute value
   registrations for the "notify-pull-method" and "notify-pull-method-
   supported" attributes.

   Attribute (attribute syntax)
     Values                                       Reference   Section
     -----------------------                      ---------   -------
   notify-pull-method (type2 keyword)             [ipp-ntfy]  5.3.2
   notify-pull-method-supported (1setOf type2 keyword)
                                                  [ipp-ntfy]  5.3.2.1
     ippget                                       [RFCNNNN]   9.1



15.3 Additional enum attribute values

   The following table lists the enum attribute values defined in this
   document.  These are to be registered according to the procedures in
   RFC 2911 [RFC2911] section 6.1.

   Attribute (attribute syntax)
     Value    Name                                Reference   Section
     ------   -----------------------------       ---------   -------
   operations-supported (type2 enum)              [RFC2911]   4.4.15
     0x001C   Get-Notifications                   [RFCNNNN]   9.2







Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 29]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


15.4 Operation Registrations

   The following table lists the operations defined in this document.
   This is to be registered according to the procedures in RFC 2911
   [RFC2911] section 6.4.

   Operations:                                    Reference   Section
   -----------                                    ---------   -------
   Get-Notifications                              [RFCNNNN]   5


15.5 Status code Registrations

   The following table lists the status codes defined in this document.
   This is to be registered according to the procedures in RFC 2911
   [RFC2911] section 6.6.

   Status codes:                                  Reference  Section
   -------------                                  ---------  -------
   successful-ok-events-complete (0x0007)         [RFCNNNN]  10.1


16 Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights.  Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in RFC 2028.  Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementers or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard.  Please address the information to the IETF Executive
   Director.


17 Internationalization Considerations

   The IPP Printer MUST localize the "notify-text" attribute as
   specified in section 14 of [ipp-ntfy].

Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 30]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


   In addition, when the client receives the Get-Notifications response,
   it is expected to localize the attributes that have the 'keyword'
   attribute syntax according to the charset and natural language
   requested in the Get-Notifications request.


18 Security Considerations

   The IPP Model and Semantics document [RFC2911 section 8] discusses
   high-level security requirements (Client Authentication, Server
   Authentication and Operation Privacy).  The IPP Transport and
   Encoding document [RFC2910 section 8] discusses the security
   requirements for the IPP protocol.  Client Authentication is the
   mechanism by which the client proves its identity to the server in a
   secure manner.  Server Authentication is the mechanism by which the
   server proves its identity to the client in a secure manner.
   Operation Privacy is defined as a mechanism for protecting operations
   from eavesdropping.

   The 'ippget' Delivery Method with its Get-Notifications operations
   leverages the security mechanism that are used in IPP/1.1 [RFC2910
   and RFC2911] without adding any additional security mechanisms in
   order to maintain the same security support as IPP/1.1.

   The access control model for the Get-Notifications operation defined
   in this document is the same as the access control model for the Get-
   Job-Attributes operation (see [RFC2911] section 3.2.6).  The primary
   difference is that a Get-Notifications operation is directed at
   Subscription Objects rather than at Job objects, and a returned
   attribute group contains Event Notification attributes rather than
   Job object attributes.


18.1 Notification Recipient client access rights

   The Notification Recipient client MUST have the following access
   rights to the Subscription object(s) targeted by the Get-
   Notifications operation request:

     The authenticated user (see [RFC2911] section 8.3) performing this
     operation MUST be (1) the owner of each Subscription Object
     identified by the "notify-subscription-ids" operation attribute
     (see section 5.1.1), (2) an operator or administrator of the
     Printer (see [RFC2911] Sections 1 and 8.5), or (3) be otherwise
     authorized by the Printer's administrator-configured security
     policy to request Event Notifications from the target Subscription
     Object(s).  Furthermore, the Printer's security policy MAY limit
     the attributes returned by the Get-Notifications operation, in a


Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 31]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


     manner similar to the Get-Job-Attributes operation (see [RFC2911]
     end of section 3.3.4.2).


18.2 Printer security threats

   Because the Get-Notifications operation is sent in the same direction
   as Job Creation operations, usually by the same client, this Event
   Notification Delivery Method poses no additional authentication,
   authorization, privacy, firewall, or port assignment issues above
   those for the IPP Get-Job-Attributes and Get-Printer-Attributes
   operations (see [RFC2911] sections 3.2.6 and 3.2.5).


18.3 Notification Recipient security threats

   Unwanted Events Notifications (spam):  Unlike Push Event Notification
   Delivery Methods in which the IPP Printer initiates the Event
   Notification, with the Pull Delivery Method defined in this document,
   the Notification Recipient is the client who initiates the Get-
   Notifications operation (see section 5).  Therefore, there is no
   chance of "spam" notifications with this method.

   Note:  when a client stays connected to a Printer using the Event
   Wait Mode (see section 5.1.3) in order to receive Event Notifications
   as they occur, such a client can close down the IPP connection at any
   time, and so can avoid future unwanted Event Notifications at any
   time.

   It is true that client has control about whether to ask for Event
   Notifications.  However, if the client subscribes to an event, and
   does a Get-Notifications request, the client gets all events for the
   Subscription Object in the sequence number range (see section 5.1.2),
   not just the ones the client wants.  If a client subscribes to a Per-
   Printer Subscription job event, such as 'job-completed', and someone
   then starts and cancels thousands of jobs, the client would have to
   receive these events in addition to the ones the client is interested
   in.  A client can protect itself better by subscribing to his own
   jobs using a Per-Job Subscription, rather than creating a Per-Printer
   subscription whose Job events apply to all jobs.


18.4 Security requirements for Printers

   For the Get-Notifications operation defined in this document, the
   same Printer conformance requirements apply for supporting and using
   Client Authentication, Server Authentication and Operation Privacy as
   stated in [RFC2910] section 8 for all IPP operations.


Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 32]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


18.5 Security requirements for clients

   For the Get-Notifications operation defined in this document, the
   same client conformance requirements apply for supporting and using
   Client Authentication, Server Authentication and Operation Privacy as
   stated in [RFC2910] section 8 for all IPP operations.


19 Contributors

   Carl Kugler and Harry Lewis contributed the basic idea of in-band
   "smart polling" coupled with multiple responses for a single
   operation on the same connection, one response for each event as it
   occurs.  Without their continual persuasion, we would not have
   arrived at this Delivery Method specification and would not have been
   able to agree on a single REQUIRED Delivery Method for IPP.

   Carl Kugler
   IBM
   P.O.  Box 1900
   Boulder, CO 80301-9191

   Phone:
   Fax:
   e-mail: kugler@us.ibm.com



20 Authors' Addresses

   Robert Herriot
   706 Colorado Ave.
   Palo Alto, CA 94303

   Phone: 650-327-4466
   Fax: 650-327-4466
   email: bob@herriot.com

   Thomas N.  Hastings
   Xerox Corporation
   737 Hawaii St.  ESAE 231
   El Segundo CA 90245

   Phone: 310-333-6413
   Fax: 310-333-5514
   email: hastings@cp10.es.xerox.com




Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 33]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


   Harry Lewis
   IBM
   P.O.  Box 1900
   Boulder, CO 80301-9191

   Phone: 303-924-5337
   FAX:
   e-mail:  harryl@us.ibm.com


   IPP Web Page:  http://www.pwg.org/ipp/
   IPP Mailing List:  ipp@pwg.org

   To subscribe to the ipp mailing list, send the following email:
     1) send it to majordomo@pwg.org
     2) leave the subject line blank
     3) put the following two lines in the message body:
          subscribe ipp
          end

   Implementers of this specification document are encouraged to join
   the IPP Mailing List in order to participate in any discussions of
   clarification issues and review of registration proposals for
   additional attributes and values.  In order to reduce spam the
   mailing list rejects mail from non-subscribers, so you must subscribe
   to the mailing list in order to send a question or comment to the
   mailing list.


21 Description of Base IPP documents (Informative)

   The base set of IPP documents includes:

     Design Goals for an Internet Printing Protocol [RFC2567]
     Rationale for the Structure and Model and Protocol for the Internet
       Printing Protocol [RFC2568]
     Internet Printing Protocol/1.1: Model and Semantics [RFC2911]
     Internet Printing Protocol/1.1: Encoding and Transport [RFC2910]
     Internet Printing Protocol/1.1: Implementer's Guide [RFC3196]
     Mapping between LPD and IPP Protocols [RFC2569]

   The "Design Goals for an Internet Printing Protocol" document takes a
   broad look at distributed printing functionality, and it enumerates
   real-life scenarios that help to clarify the features that need to be
   included in a printing protocol for the Internet.  It identifies
   requirements for three types of users: end users, operators, and
   administrators.  It calls out a subset of end user requirements that
   are satisfied in IPP/1.0.  A few OPTIONAL operator operations have
   been added to IPP/1.1.

Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 34]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


   The "Rationale for the Structure and Model and Protocol for the
   Internet Printing Protocol" document describes IPP from a high level
   view, defines a roadmap for the various documents that form the suite
   of IPP specification documents, and gives background and rationale
   for the IETF working group's major decisions.

   The "Internet Printing Protocol/1.1: Model and Semantics" document
   describes a simplified model with abstract objects, their attributes,
   and their operations that are independent of encoding and transport.
   It introduces a Printer and a Job object.  The Job object optionally
   supports multiple documents per Job.  It also addresses security,
   internationalization, and directory issues.

   The "Internet Printing Protocol/1.1: Encoding and Transport" document
   is a formal mapping of the abstract operations and attributes defined
   in the model document onto HTTP/1.1 [RFC2616].  It defines the
   encoding rules for a new Internet MIME media type called
   "application/ipp".  This document also defines the rules for
   transporting over HTTP a message body whose Content-Type is
   "application/ipp".  This document defines the 'ipp' scheme for
   identifying IPP printers and jobs.

   The "Internet Printing Protocol/1.1: Implementer's Guide" document
   gives insight and advice to implementers of IPP clients and IPP
   objects.  It is intended to help them understand IPP/1.1 and some of
   the considerations that may assist them in the design of their client
   and/or IPP object implementations.  For example, a typical order of
   processing requests is given, including error checking.  Motivation
   for some of the specification decisions is also included.

   The "Mapping between LPD and IPP Protocols" document gives some
   advice to implementers of gateways between IPP and LPD (Line Printer
   Daemon) implementations.


22 Full Copyright Statement

   Copyright (C) The Internet Society (2003).  All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the  purpose of
   developing Internet standards in which case the procedures for

Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 35]



INTERNET-DRAFT   IPP: The 'ippget' Delivery Method         Feb 21, 2003


   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.
































Herriot, Hastings, Lewis    Expires: August 21, 2003          [page 36]

