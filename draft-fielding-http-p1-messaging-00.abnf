name = definition

      The name of a rule is simply the name itself (without any
      enclosing "<" and ">") and is separated from its definition by the
      equal "=" character.  White space is only significant in that
      indentation of continuation lines is used to indicate a rule
      definition that spans more than one line.  Certain basic rules are
      in uppercase, such as SP, LWS, HT, CRLF, DIGIT, ALPHA, etc.  Angle
      brackets are used within definitions whenever their presence will
      facilitate discerning the use of rule names.

OCTET          = <any 8-bit sequence of data>
CHAR           = <any US-ASCII character (octets 0 - 127)>
UPALPHA        = <any US-ASCII uppercase letter "A".."Z">
LOALPHA        = <any US-ASCII lowercase letter "a".."z">
ALPHA          = UPALPHA | LOALPHA
DIGIT          = <any US-ASCII digit "0".."9">
CTL            = <any US-ASCII control character
                        (octets 0 - 31) and DEL (127)>
CR             = <US-ASCII CR, carriage return (13)>
LF             = <US-ASCII LF, linefeed (10)>
SP             = <US-ASCII SP, space (32)>
HT             = <US-ASCII HT, horizontal-tab (9)>
CRLF           = CR LF

LWS            = [CRLF] 1*( SP | HT )

TEXT           = <any OCTET except CTLs,
                        but including LWS>

HEX            = "A" | "B" | "C" | "D" | "E" | "F"
                      | "a" | "b" | "c" | "d" | "e" | "f" | DIGIT

token          = 1*<any CHAR except CTLs or separators>
separators     = "(" | ")" | "<" | ">" | "@"
                      | "," | ";" | ":" | "\" | <">
                      | "/" | "[" | "]" | "?" | "="
                      | "{" | "}" | SP | HT

comment        = "(" *( ctext | quoted-pair | comment ) ")"
ctext          = <any TEXT excluding "(" and ")">

quoted-string  = ( <"> *(qdtext | quoted-pair ) <"> )
qdtext         = <any TEXT except <">>

quoted-pair    = "\" CHAR


HTTP-Version   = "HTTP" "/" 1*DIGIT "." 1*DIGIT

http_URL = "http:" "//" host [ ":" port ] [ abs_path [ "?" query ]]

HTTP-date    = rfc1123-date | rfc850-date | asctime-date
rfc1123-date = wkday "," SP date1 SP time SP "GMT"
rfc850-date  = weekday "," SP date2 SP time SP "GMT"
asctime-date = wkday SP date3 SP time SP 4DIGIT
date1        = 2DIGIT SP month SP 4DIGIT
                      ; day month year (e.g., 02 Jun 1982)
date2        = 2DIGIT "-" month "-" 2DIGIT
                      ; day-month-year (e.g., 02-Jun-82)
date3        = month SP ( 2DIGIT | ( SP 1DIGIT ))
                      ; month day (e.g., Jun  2)
time         = 2DIGIT ":" 2DIGIT ":" 2DIGIT
                      ; 00:00:00 - 23:59:59
wkday        = "Mon" | "Tue" | "Wed"
                    | "Thu" | "Fri" | "Sat" | "Sun"
weekday      = "Monday" | "Tuesday" | "Wednesday"
                    | "Thursday" | "Friday" | "Saturday" | "Sunday"
month        = "Jan" | "Feb" | "Mar" | "Apr"
                    | "May" | "Jun" | "Jul" | "Aug"
                    | "Sep" | "Oct" | "Nov" | "Dec"

transfer-coding         = "chunked" | transfer-extension
transfer-extension      = token *( ";" parameter )

parameter               = attribute "=" value
attribute               = token
value                   = token | quoted-string

Chunked-Body   = *chunk
                        last-chunk
                        trailer
                        CRLF

chunk          = chunk-size [ chunk-extension ] CRLF
                        chunk-data CRLF
chunk-size     = 1*HEX
last-chunk     = 1*("0") [ chunk-extension ] CRLF

chunk-extension= *( ";" chunk-ext-name [ "=" chunk-ext-val ] )
chunk-ext-name = token
chunk-ext-val  = token | quoted-string
chunk-data     = chunk-size(OCTET)
trailer        = *(entity-header CRLF)

HTTP-message   = Request | Response     ; HTTP/1.1 messages

generic-message = start-line
                          *(message-header CRLF)
                          CRLF
                          [ message-body ]
start-line      = Request-Line | Status-Line

message-header = field-name ":" [ field-value ]
field-name     = token
field-value    = *( field-content | LWS )
field-content  = <the OCTETs making up the field-value
                        and consisting of either *TEXT or combinations
                        of token, separators, and quoted-string>

message-body = entity-body
                    | <entity-body encoded as per Transfer-Encoding>

general-header = Cache-Control            ; [Part 6]
                      | Connection               ; Section 8.1
                      | Date                     ; Section 8.3
                      | Pragma                   ; [Part 6]
                      | Trailer                  ; Section 8.6
                      | Transfer-Encoding        ; Section 8.7
                      | Upgrade                  ; Section 8.8
                      | Via                      ; Section 8.9
                      | Warning                  ; [Part 6]

Request       = Request-Line              ; Section 5.1
                        *(( general-header        ; Section 4.5
                         | request-header         ; [Part 2]
                         | entity-header ) CRLF)  ; [Part 3]
                        CRLF
                        [ message-body ]          ; Section 4.3

Request-Line   = Method SP Request-URI SP HTTP-Version CRLF

Method         = token

Request-URI    = "*"
                      | absoluteURI
                      | ( abs_path [ "?" query ] )
                      | authority

Response      = Status-Line               ; Section 6.1
                       *(( general-header        ; Section 4.5
                        | response-header        ; [Part 2]
                        | entity-header ) CRLF)  ; [Part 3]
                       CRLF
                       [ message-body ]          ; Section 4.3
Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF

Status-Code    = 3DIGIT
Reason-Phrase  = *<TEXT, excluding CR, LF>


Connection = "Connection" ":" 1#(connection-token)
connection-token  = token

Content-Length    = "Content-Length" ":" 1*DIGIT

Date  = "Date" ":" HTTP-date

Host = "Host" ":" host [ ":" port ] ; Section 3.2.2

TE        = "TE" ":" #( t-codings )
t-codings = "trailers" | ( transfer-extension [ accept-params ] )

Trailer  = "Trailer" ":" 1#field-name

Transfer-Encoding       = "Transfer-Encoding" ":" 1#transfer-coding

Upgrade        = "Upgrade" ":" 1#product

Via =  "Via" ":" 1#( received-protocol received-by [ comment ] )
received-protocol = [ protocol-name "/" ] protocol-version
protocol-name     = token
protocol-version  = token
received-by       = ( host [ ":" port ] ) | pseudonym
pseudonym         = token

