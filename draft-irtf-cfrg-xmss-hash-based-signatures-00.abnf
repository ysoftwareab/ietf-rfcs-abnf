i_byte = 0;
i_bit = 0;
i_bit = 0;
i_byte = i_byte + 1;
i_byte = i_byte + 1;
i_bit = i_bit + lg(w)-8;
l_1 = ceil(8m/lg(w)) and l_2 = floor(lg(l_1*(w-1))/lg(w)) + 1

tmp = F(tmp XOR bm[i+s-1]);
csum = 0;
msg = base_w(M,w)
csum = csum + w - 1 - msg[i]
msg = msg || base_w(csum, w);
csum = 0;
msg = base_w(M,w)
csum = csum + w - 1 - msg[i]
msg = msg || base_w(csum, w);
j = j + 2
pk = WOTS_genPK (getWOTS_SK(SK, s+i), bm)
node = ltree(pk, bm)
node = H((Stack.pop() XOR bm[2l + 2h']) ||
                (node XOR bm[2l + 2h' + 1]))
root = treeHash(SK, 0, h, bm)
PK = root || bm
idx_sig = getIdx(SK)
auth = buildAuth(SK, bm, idx_sig)
sig_ots = WOTS_sign(getWOTS_SK(SK, idx_sig), M', bm)
Sig = (idx_sig || r || sig_ots || auth)
pk_ots = WOTS_pkFromSig(sig_ots, M', bm)
root = treeHash(getXMSS_SK(SK_MT, 0, d - 1), 0, h / d, bm)
PK_MT = root || bm
SK_PRF = getSK_PRF(SK_MT)
idx_sig = getIdx(SK_MT)
Sig_MT = idx_sig
SK = idx_leaf || SK_PRF || getXMSS_SK(SK_MT, idx_tree, 0)
Sig_tmp = XMSS_sign(M, SK, bm)
Sig_tmp = Sig_tmp without idx
Sig_MT = Sig_MT || Sig_tmp
root = treeHash(SK, 0, h / d, bm)
idx_leaf = (h / d) least significant bits of idx_tree
idx_tree = (h - j * (h / d)) most significant bytes of idx_tree
SK = idx_leaf || SK_PRF || getXMSS_SK(SK_MT, idx_tree, j)
Sig_tmp = XMSS_sign_wo_hash(root, SK, bm) with idx removed
Sig_MT = Sig_MT || Sig_tmp
idx = getIdx(Sig_MT)
idx_leaf = (h / d) least significant bytes of idx_tree
idx_tree = (h - j * h / d) most significant bytes of idx_tree
node = XMSS_rootFromSig_wo_hash(Sig', node, getBm(PK_MT))
wotsp_reserved         = 0x00000000,
wotsp_aes128_m32_w4    = 0x01000001,
wotsp_aes128_m32_w8    = 0x02000002,
wotsp_aes128_m32_w16   = 0x03000003,
wotsp_sha3-256_m32_w4  = 0x04000004,
wotsp_sha3-256_m32_w8  = 0x05000005,
wotsp_sha3-256_m32_w16 = 0x06000006,
wotsp_sha3-512_m64_w4  = 0x07000007,
wotsp_sha3-512_m64_w8  = 0x08000008,
wotsp_sha3-512_m64_w16 = 0x09000009,
xmss_reserved                 = 0x00000000,

xmss_sha3-256_m32_w4_h10_z  = 0x01000001,
xmss_sha3-256_m32_w4_h16_z  = 0x02000002,
xmss_sha3-256_m32_w4_h20_z  = 0x03000003,

xmss_sha3-256_m32_w8_h10_z  = 0x04000004,
xmss_sha3-256_m32_w8_h16_z  = 0x05000005,
xmss_sha3-256_m32_w8_h20_z  = 0x06000006,

xmss_sha3-256_m32_w16_h10_z = 0x07000007,
xmss_sha3-256_m32_w16_h16_z = 0x08000008,
xmss_sha3-256_m32_w16_h20_z = 0x09000009,

xmss_sha3-512_m64_w4_h10_z  = 0x0a00000a,
xmss_sha3-512_m64_w4_h16_z  = 0x0b00000b,
xmss_sha3-512_m64_w4_h20_z  = 0x0c00000c,

xmss_sha3-512_m64_w8_h10_z  = 0x0d00000d,
xmss_sha3-512_m64_w8_h16_z  = 0x0e00000e,
xmss_sha3-512_m64_w8_h20_z  = 0x0f00000f,

xmss_sha3-512_m64_w16_h10_z = 0x01010101,
xmss_sha3-512_m64_w16_h16_z = 0x02010102,
xmss_sha3-512_m64_w16_h20_z = 0x03010103,

xmss_aes128_m32_w4_h10        = 0x04010104,
xmss_aes128_m32_w4_h16        = 0x05010105,
xmss_aes128_m32_w4_h20        = 0x06010106,

xmss_aes128_m32_w8_h10        = 0x07010107,
xmss_aes128_m32_w8_h16        = 0x08010108,
xmss_aes128_m32_w8_h20        = 0x09010109,

xmss_aes128_m32_w16_h10       = 0x0a01010a,
xmss_aes128_m32_w16_h16       = 0x0b01010b,
xmss_aes128_m32_w16_h20       = 0x0c01010c,

xmss_sha3-256_m32_w4_h10      = 0x0d01010d,
xmss_sha3-256_m32_w4_h16      = 0x0e01010e,
xmss_sha3-256_m32_w4_h20      = 0x0f01010f,

xmss_sha3-256_m32_w8_h10      = 0x01020201,
xmss_sha3-256_m32_w8_h16      = 0x02020202,
xmss_sha3-256_m32_w8_h20      = 0x03020203,

xmss_sha3-256_m32_w16_h10     = 0x04020204,
xmss_sha3-256_m32_w16_h16     = 0x05020205,
xmss_sha3-256_m32_w16_h20     = 0x06020206,

xmss_sha3-512_m64_w4_h10      = 0x07020207,
xmss_sha3-512_m64_w4_h16      = 0x08020208,
xmss_sha3-512_m64_w4_h20      = 0x09020209,

xmss_sha3-512_m64_w8_h10      = 0x0a02020a,
xmss_sha3-512_m64_w8_h16      = 0x0b02020b,
xmss_sha3-512_m64_w8_h20      = 0x0c02020c,

xmss_sha3-512_m64_w16_h10     = 0x0d02020d,
xmss_sha3-512_m64_w16_h16     = 0x0e02020e,
xmss_sha3-512_m64_w16_h20     = 0x0f02020f,
xmssmt_reserved                 = 0x00000000,

xmssmt_sha3-256_m32_w4_h20_d2_z   = 0x01000001,
xmssmt_sha3-256_m32_w4_h20_d4_z   = 0x02000002,
xmssmt_sha3-256_m32_w4_h40_d2_z   = 0x03000003,
xmssmt_sha3-256_m32_w4_h40_d4_z   = 0x04000004,
xmssmt_sha3-256_m32_w4_h40_d8_z   = 0x05000005,
xmssmt_sha3-256_m32_w4_h60_d3_z   = 0x06000006,
xmssmt_sha3-256_m32_w4_h60_d6_z   = 0x07000007,
xmssmt_sha3-256_m32_w4_h60_d12_z  = 0x08000008,

xmssmt_sha3-256_m32_w8_h20_d2_z   = 0x09000009,
xmssmt_sha3-256_m32_w8_h20_d4_z   = 0x0a00000a,
xmssmt_sha3-256_m32_w8_h40_d2_z   = 0x0b00000b,
xmssmt_sha3-256_m32_w8_h40_d4_z   = 0x0c00000c,
xmssmt_sha3-256_m32_w8_h40_d8_z   = 0x0d00000d,
xmssmt_sha3-256_m32_w8_h60_d3_z   = 0x0e00000e,
xmssmt_sha3-256_m32_w8_h60_d6_z   = 0x0f00000f,
xmssmt_sha3-256_m32_w8_h60_d12_z  = 0x00010100,

xmssmt_sha3-256_m32_w16_h20_d2_z  = 0x01010101,
xmssmt_sha3-256_m32_w16_h20_d4_z  = 0x02010102,
xmssmt_sha3-256_m32_w16_h40_d2_z  = 0x03010103,
xmssmt_sha3-256_m32_w16_h40_d4_z  = 0x04010104,
xmssmt_sha3-256_m32_w16_h40_d8_z  = 0x05010105,
xmssmt_sha3-256_m32_w16_h60_d3_z  = 0x06010106,
xmssmt_sha3-256_m32_w16_h60_d6_z  = 0x07010107,
xmssmt_sha3-256_m32_w16_h60_d12_z = 0x08010108,

xmssmt_sha3-512_m64_w4_h20_d2_z   = 0x09010109,
xmssmt_sha3-512_m64_w4_h20_d4_z   = 0x0a01010a,
xmssmt_sha3-512_m64_w4_h40_d2_z   = 0x0b01010b,
xmssmt_sha3-512_m64_w4_h40_d4_z   = 0x0c01010c,
xmssmt_sha3-512_m64_w4_h40_d8_z   = 0x0d01010d,
xmssmt_sha3-512_m64_w4_h60_d3_z   = 0x0e01010e,
xmssmt_sha3-512_m64_w4_h60_d6_z   = 0x0f01010f,
xmssmt_sha3-512_m64_w4_h60_d12_z  = 0x00020200,

xmssmt_sha3-512_m64_w8_h20_d2_z   = 0x01020201,
xmssmt_sha3-512_m64_w8_h20_d4_z   = 0x02020202,
xmssmt_sha3-512_m64_w8_h40_d2_z   = 0x03020203,
xmssmt_sha3-512_m64_w8_h40_d4_z   = 0x04020204,
xmssmt_sha3-512_m64_w8_h40_d8_z   = 0x05020205,
xmssmt_sha3-512_m64_w8_h60_d3_z   = 0x06020206,
xmssmt_sha3-512_m64_w8_h60_d6_z   = 0x07020207,
xmssmt_sha3-512_m64_w8_h60_d12_z  = 0x08020208,

xmssmt_sha3-512_m64_w16_h20_d2_z  = 0x09020209,
xmssmt_sha3-512_m64_w16_h20_d4_z  = 0x0a02020a,
xmssmt_sha3-512_m64_w16_h40_d2_z  = 0x0b02020b,
xmssmt_sha3-512_m64_w16_h40_d4_z  = 0x0c02020c,
xmssmt_sha3-512_m64_w16_h40_d8_z  = 0x0d02020d,
xmssmt_sha3-512_m64_w16_h60_d3_z  = 0x0e02020e,
xmssmt_sha3-512_m64_w16_h60_d6_z  = 0x0f02020f,
xmssmt_sha3-512_m64_w16_h60_d12_z = 0x00030300,

xmssmt_aes128_m32_w4_h20_d2         = 0x01030301,
xmssmt_aes128_m32_w4_h20_d4         = 0x02030302,
xmssmt_aes128_m32_w4_h40_d2         = 0x03030303,
xmssmt_aes128_m32_w4_h40_d4         = 0x04030304,
xmssmt_aes128_m32_w4_h40_d8         = 0x05030305,
xmssmt_aes128_m32_w4_h60_d3         = 0x06030306,
xmssmt_aes128_m32_w4_h60_d6         = 0x07030307,
xmssmt_aes128_m32_w4_h60_d12        = 0x08030308,

xmssmt_aes128_m32_w8_h20_d2         = 0x09030309,
xmssmt_aes128_m32_w8_h20_d4         = 0x0a03030a,
xmssmt_aes128_m32_w8_h40_d2         = 0x0b03030b,
xmssmt_aes128_m32_w8_h40_d4         = 0x0c03030c,
xmssmt_aes128_m32_w8_h40_d8         = 0x0d03030d,
xmssmt_aes128_m32_w8_h60_d3         = 0x0e03030e,
xmssmt_aes128_m32_w8_h60_d6         = 0x0f03030f,
xmssmt_aes128_m32_w8_h60_d12        = 0x00040400,

xmssmt_aes128_m32_w16_h20_d2        = 0x01040401,
xmssmt_aes128_m32_w16_h20_d4        = 0x02040402,
xmssmt_aes128_m32_w16_h40_d2        = 0x03040403,
xmssmt_aes128_m32_w16_h40_d4        = 0x04040404,
xmssmt_aes128_m32_w16_h40_d8        = 0x05040405,
xmssmt_aes128_m32_w16_h60_d3        = 0x06040406,
xmssmt_aes128_m32_w16_h60_d6        = 0x07040407,
xmssmt_aes128_m32_w16_h60_d12       = 0x08040408,

xmssmt_sha3-256_m32_w4_h20_d2       = 0x09040409,
xmssmt_sha3-256_m32_w4_h20_d4       = 0x0a04040a,
xmssmt_sha3-256_m32_w4_h40_d2       = 0x0b04040b,
xmssmt_sha3-256_m32_w4_h40_d4       = 0x0c04040c,
xmssmt_sha3-256_m32_w4_h40_d8       = 0x0d04040d,
xmssmt_sha3-256_m32_w4_h60_d3       = 0x0e04040e,
xmssmt_sha3-256_m32_w4_h60_d6       = 0x0f04040f,
xmssmt_sha3-256_m32_w4_h60_d12      = 0x00050500,

xmssmt_sha3-256_m32_w8_h20_d2       = 0x01050501,
xmssmt_sha3-256_m32_w8_h20_d4       = 0x02050502,
xmssmt_sha3-256_m32_w8_h40_d2       = 0x03050503,
xmssmt_sha3-256_m32_w8_h40_d4       = 0x04050504,
xmssmt_sha3-256_m32_w8_h40_d8       = 0x05050505,
xmssmt_sha3-256_m32_w8_h60_d3       = 0x06050506,
xmssmt_sha3-256_m32_w8_h60_d6       = 0x07050507,
xmssmt_sha3-256_m32_w8_h60_d12      = 0x08050508,

xmssmt_sha3-256_m32_w16_h20_d2      = 0x09050509,
xmssmt_sha3-256_m32_w16_h20_d4      = 0x0a05050a,
xmssmt_sha3-256_m32_w16_h40_d2      = 0x0b05050b,
xmssmt_sha3-256_m32_w16_h40_d4      = 0x0c05050c,
xmssmt_sha3-256_m32_w16_h40_d8      = 0x0d05050d,
xmssmt_sha3-256_m32_w16_h60_d3      = 0x0e05050e,
xmssmt_sha3-256_m32_w16_h60_d6      = 0x0f05050f,
xmssmt_sha3-256_m32_w16_h60_d12     = 0x00060600,

xmssmt_sha3-512_m64_w4_h20_d2       = 0x01060601,
xmssmt_sha3-512_m64_w4_h20_d4       = 0x02060602,
xmssmt_sha3-512_m64_w4_h40_d2       = 0x03060603,
xmssmt_sha3-512_m64_w4_h40_d4       = 0x04060604,
xmssmt_sha3-512_m64_w4_h40_d8       = 0x05060605,
xmssmt_sha3-512_m64_w4_h60_d3       = 0x06060606,
xmssmt_sha3-512_m64_w4_h60_d6       = 0x07060607,
xmssmt_sha3-512_m64_w4_h60_d12      = 0x08060608,

xmssmt_sha3-512_m64_w8_h20_d2       = 0x09060609,
xmssmt_sha3-512_m64_w8_h20_d4       = 0x0a06060a,
xmssmt_sha3-512_m64_w8_h40_d2       = 0x0b06060b,
xmssmt_sha3-512_m64_w8_h40_d4       = 0x0c06060c,
xmssmt_sha3-512_m64_w8_h40_d8       = 0x0d06060d,
xmssmt_sha3-512_m64_w8_h60_d3       = 0x0e06060e,
xmssmt_sha3-512_m64_w8_h60_d6       = 0x0f06060f,
xmssmt_sha3-512_m64_w8_h60_d12      = 0x00070700,

xmssmt_sha3-512_m64_w16_h20_d2      = 0x01070701,
xmssmt_sha3-512_m64_w16_h20_d4      = 0x02070702,
xmssmt_sha3-512_m64_w16_h40_d2      = 0x03070703,
xmssmt_sha3-512_m64_w16_h40_d4      = 0x04070704,
xmssmt_sha3-512_m64_w16_h40_d8      = 0x05070705,
xmssmt_sha3-512_m64_w16_h60_d3      = 0x06070706,
xmssmt_sha3-512_m64_w16_h60_d6      = 0x07070707,
xmssmt_sha3-512_m64_w16_h60_d12     = 0x08070708,
