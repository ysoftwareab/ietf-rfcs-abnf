Foo-Example = sh-dictionary

barURLs = URI-reference *( 1*SP URI-reference )

sh-dictionary  = dict-member *( OWS "," OWS dict-member )
dict-member    = member-name "=" member-value
member-name    = key
member-value   = sh-item
key            = lcalpha *( lcalpha / DIGIT / "_" / "-" )
lcalpha        = %x61-7A ; a-z

sh-list     = list-member *( OWS "," OWS list-member )
list-member = sh-item
sh-listlist = inner-list *( OWS "," OWS inner-list )
inner-list  = list-member *( OWS ";" OWS list-member )

sh-param-list = param-item *( OWS "," OWS param-item )
param-item    = primary-id *parameter
primary-id    = sh-token
parameter     = OWS ";" OWS param-name [ "=" param-value ]
param-name    = key
param-value   = sh-item

sh-item = sh-integer / sh-float / sh-string / sh-token / sh-binary
             / sh-boolean

sh-integer = ["-"] 1*19DIGIT

sh-float    = ["-"] (
                DIGIT "." 1*14DIGIT /
               2DIGIT "." 1*13DIGIT /
               3DIGIT "." 1*12DIGIT /
               4DIGIT "." 1*11DIGIT /
               5DIGIT "." 1*10DIGIT /
               6DIGIT "." 1*9DIGIT /
               7DIGIT "." 1*8DIGIT /
               8DIGIT "." 1*7DIGIT /
               9DIGIT "." 1*6DIGIT /
              10DIGIT "." 1*5DIGIT /
              11DIGIT "." 1*4DIGIT /
              12DIGIT "." 1*3DIGIT /
              13DIGIT "." 1*2DIGIT /
              14DIGIT "." 1DIGIT )

sh-string = DQUOTE *(chr) DQUOTE
chr       = unescaped / escaped
unescaped = %x20-21 / %x23-5B / %x5D-7E
escaped   = "\" ( DQUOTE / "\" )

sh-token = ALPHA *( ALPHA / DIGIT / "_" / "-" / "." / ":" / "%" / "*" / "/" )

   Parsers MUST support tokens with at least 512 characters.

sh-binary = "*" *(base64) "*"
base64    = ALPHA / DIGIT / "+" / "/" / "="

sh-boolean = "?" boolean
boolean    = %54 / %46  ; capital "T" or "F"

