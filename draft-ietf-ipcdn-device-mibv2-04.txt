





Internet Draft                                      R. Woundy (editor)
IPCDN Working Group                                      Comcast Cable
draft-ietf-ipcdn-device-mibv2-04.txt                      January 2003


                Cable Device Management Information Base
                 for DOCSIS compliant Cable Modems and
                    Cable Modem Termination Systems

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

Copyright Notice

   Copyright (C) The Internet Society (2003). All Rights Reserved.

Abstract

   This memo is a draft revision of the standards track RFC-2669.
   Please see "Revision Descriptions" below for a description of
   changes.  This document will obsolete RFC-2669 when accepted.

   This memo defines a portion of the Management Information Base (MIB)
   for use with network management protocols in the Internet community.
   In particular, it defines a basic set of managed objects for SNMP-
   based management of DOCSIS compliant Cable Modems and Cable Modem
   Termination Systems.

   This memo is a product of the IPCDN working group within the Internet
   Engineering Task Force.  Comments are solicited and should be



Expires July 2003                                               [Page 1]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


   addressed to the working group's mailing list at ipcdn@ietf.org
   and/or the author.

Table of Contents

   1 The Internet-Standard Management Framework ...................    2
   2 Glossary .....................................................    2
   3 Overview .....................................................    3
   3.1 Structure of the MIB .......................................    4
   3.2 Management requirements ....................................    5
   3.3 Protocol Filters ...........................................    7
   4 Definitions ..................................................   11
   5 Acknowledgments ..............................................   64
   6 Revision Descriptions ........................................   65
   7 Normative References .........................................   65
   8 Informative References .......................................   67
   9 Security Considerations ......................................   68
   10 Intellectual Property .......................................   70
   11 Editor's Address ............................................   70
   12 Copyright Section ...........................................   71

1.  The Internet-Standard Management Framework

   For a detailed overview of the documents that describe the current
   Internet-Standard Management Framework, please refer to section 7 of
   RFC 3410 [RFC3410].

   Managed objects are accessed via a virtual information store, termed
   the Management Information Base or MIB.  MIB objects are generally
   accessed through the Simple Network Management Protocol (SNMP).
   Objects in the MIB are defined using the mechanisms defined in the
   Structure of Management Information (SMI).  This memo specifies a MIB
   module that is compliant to the SMIv2, which is described in STD 58,
   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580
   [RFC2580].

2.  Glossary

   The terms in this document are derived either from normal cable
   system usage, or from the documents associated with the Data Over
   Cable Service Interface Specification process.

2.1.  CATV

   Originally "Community Antenna Television", now used to refer to any
   cable or hybrid fiber and cable system used to deliver video signals
   to a community.




Expires July 2003                                               [Page 2]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


2.2.  CM   Cable Modem.

   A CM acts as a "slave" station in a DOCSIS compliant cable data
   system.

2.3.  CMTS   Cable Modem Termination System.

   A generic term covering a cable bridge or cable router in a head-end.
   A CMTS acts as the master station in a DOCSIS compliant cable data
   system.  It is the only station that transmits downstream, and it
   controls the scheduling of upstream transmissions by its associated
   CMs.

2.4.  DOCSIS

   "Data Over Cable Interface Specification".  A term referring to the
   ITU-T J.112 Annex B standard for cable modem systems. [RFI1.0]
   [RFI1.1]

2.5.  Downstream

   The direction from the head-end towards the subscriber.

2.6.  Head-end

   The origination point in most cable systems of the subscriber video
   signals.  Generally also the location of the CMTS equipment.

2.7.  MAC Packet

   A DOCSIS PDU.

2.8.  RF

   Radio Frequency.

2.9.  Upstream

   The direction from the subscriber towards the head-end.

3.  Overview

   This MIB provides a set of objects required for the management of
   DOCSIS compliant Cable Modems (CM) and Cable Modem Termination
   Systems (CMTS).  The specification is derived from the DOCSIS Radio
   Frequency Interface specification [RFI1.0].  Please note that the
   DOCSIS 1.0 standard only requires Cable Modems to implement SNMPv1
   and to process IPv4 customer traffic.  Design choices in this MIB



Expires July 2003                                               [Page 3]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


   reflect those requirements.

   DOCSIS 1.1 [RFI1.1] requires support for SNMPv3, as well as SNMPv1
   and SNMPv2c, and the changes in this MIB over the previous proposed
   standard version reflect those additional requirements.  Future
   versions of DOCSIS are are expected to require support for IPv6 as
   both a CPE protocol and one supported by the network elements of the
   DOCSIS CMTS/CM system.

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

3.1.  Structure of the MIB

   This MIB is structured into eight groups:

   o    The docsDevBase group extends the MIB-II 'system' group with
        objects needed for cable device system management.

   o    The docsDevNmAccessGroup provides a minimum level of SNMP
        access security (see Section 3 of [OSSI1.0]).

   o    The docsDevSoftware group provides information for network-
        downloadable software upgrades.  See "Handling of Software
        Upgrades" below.

   o    The docsDevServer group provides information about the progress
        of the interaction between the CM or CMTS and various
        provisioning servers.

   o    The docsDevEvent group provides control and logging for event
        reporting.

   o    The docsDevFilter group configures filters at link layer and IP
        layer for bridged data traffic.  This group consists of a link-
        layer filter table, docsDevFilterLLCTable, which is used to
        manage the processing and forwarding of non-IP traffic; an IP
        packet classifier table, docsDevFilterIpTable, which is used to
        map classes of packets to specific policy actions; a policy
        table, docsDevFilterPolicyTable, which maps zero or more policy
        actions onto a specific packet classification, and one or more
        policy action tables.

        At this time, this MIB specifies only one policy action table,
        docsDevFilterTosTable, which allows the manipulation of the type
        of services bits in an IP packet based on matching some
        criteria.  The working group may add additional policy types and



Expires July 2003                                               [Page 4]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        action tables in the future, for example to allow QOS to modem
        service identifier assignment based on destination [QOS-MIB].

   o    The docsDevCpe group provides control over which IP addresses
        may be used by customer premises equipment (e.g. PCs) serviced
        by a given cable modem.  This provides anti-spoofing control at
        the point of origin for a large cable modem system.  This group
        is separate from docsDevFilter primarily as this group is only
        implemented on the Cable Modem (CM) and MUST NOT be implemented
        on the Cable Modem Termination System (CMTS).

   o    The docsDevVacmAccessExt group extends the VACM access table
        by adding an object representing the expected inbound
        interface(s) for which the referenced VACM view applies.

3.2.  Management requirements

3.2.1.  Handling of Software upgrades

   The Cable Modem software upgrade process is documented in [RFI1.0].
   From a network management station, the operator:

   o    sets docsDevSwServer to the address of the TFTP server for
        software upgrades

   o    sets docsDevSwFilename to the file pathname of the software
        upgrade image

   o    sets docsDevSwAdminStatus to upgrade-from-mgt

   While DOCSIS only specifies the implementation of the TFTP protocol
   [RFC1350] for file transfers, other functional entities embedded
   within the cable device (particularly a PacketCable Multimedia
   Terminal Adapter [MTA-PROV]) specify the optional implementation of
   the HTTP protocol [RFC1945][RFC2068] for file transfers. The value of
   the docsDevSwServerTransportProtocol object determines which protocol
   is used for SNMP-initiated software upgrade.

   One reason for the SNMP-initiated upgrade is to allow loading of a
   temporary software image (e.g., special diagnostic software) that
   differs from the software normally used on that device without
   changing the provisioning database.

   Note that software upgrades should not be accepted blindly by the
   cable device.  The cable device may refuse an upgrade if:

   o    The download is incomplete.




Expires July 2003                                               [Page 5]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


   o    The file contents are incomplete or damaged.

   o    The software is not intended for that hardware device (may
        include the case of a feature set that has not been purchased
        for this device).

   A cable device that implements the code verification mechanisms of
   [BPIPLUS] verifies the source and integrity of the downloaded image
   by validating one or more Code Verification Signatures that are
   bundled within the software upgrade.

3.2.2.  Events and Notifications

   This MIB provides control facilities for reporting events through
   syslog, notifications (traps and informs), and non-volatile logging.

   The conventions for event reporting are outside the scope of this
   document.  The definition and coding of common DOCSIS notifications
   can be found in [EVENT-MIB].

3.2.3.  Notification Throttling

   The CM and CMTS MUST provide support for notification message
   throttling as described below.  The network operator can employ
   notification rate throttling or notification limiting by manipulating
   the appropriate MIB variables.

3.2.3.1.  Notification rate throttling

   Network operators may employ either of two rate control methods.  In
   the first method, the device ceases to send notifications when the
   rate exceeds the specified maximum message rate.  It resumes sending
   notifications only if reactivated by a network management station
   request.

   In the second method, the device resumes sending notifications when
   the rate falls below the specified maximum message rate.

   The network operator configures the specified maximum message rate by
   setting the measurement interval (in seconds), and the maximum number
   of notifications to be transmitted within the measurement interval.
   The operator can query the operational throttling state (to determine
   whether notifications are enabled or blocked by throttling) of the
   device, as well as query and set the administrative throttling state
   (to manage the rate control method) of the device.

3.2.3.2.  Limiting the notification rate




Expires July 2003                                               [Page 6]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


   Network operators may wish to limit the number of notifications sent
   by a device over a specified time period.  The device ceases to send
   notifications when the number of notifications exceeds the specified
   threshold.  It resumes sending notifications only when the
   measurement interval has passed.

   The network operator defines the maximum number of notifications he
   is willing to handle and sets the measurement interval to a large
   number (in hundredths of a second).  For this case, the
   administrative throttling state is set to stop at threshold which is
   the maximum number of notifications.

   See "Techniques for Managing Asynchronously Generated Alerts"
   [RFC1224] for additional technical motivations.

3.3.  Protocol Filters

   The Cable Device MIB provides objects for both LLC and IP protocol
   filters.  The LLC protocol filter entries can be used to limit CM
   forwarding to a restricted set of network-layer protocols (such as
   IP, IPX, NetBIOS, and Appletalk).

   The IP protocol filter entries can be used to restrict upstream or
   downstream traffic based on source and destination IP addresses,
   transport-layer protocols (such as TCP, UDP, and ICMP), and source
   and destination TCP/UDP port numbers.

   In general, a cable modem applies filters (or more properly,
   classifiers) in an order appropriate to the layering model.
   Specifically, the inbound MAC (or LLC) layer filters are applied
   first, then the "special" filters, then the IP layer inbound filters,
   then the IP layer outbound filters, then any final LLC outbound
   filters.

                *****************
                * LLC Filter In *
                *****************
                        |
                        v
               *******************
               * Special Filters *
               *        |        *
               *        V        *
               *  ************   *
               *  * IP Spoof *   *
               *  ************   *
               *        |        *
               *        v        *



Expires July 2003                                               [Page 7]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


               * *************** *
               * * SNMP Access * *
               * *************** *
               *        |        *
               *******************
                        |
                        v
                ****************
                * IP Filter In *
                ****************
                        |
                        v
                *****************
                * IP Filter Out *
                *****************
                        |
                        v
                ******************
                * LLC Filter Out *
                ******************

3.3.1.  Inbound LLC Filters - docsDevFilterLLCTable

   The inbound LLC (or MAC or level-2) filters are contained in the
   docsDevFilterLLCTable and are applied to level-2 frames entering the
   cable modem from either the RF MAC interface or from one of the CPE
   interfaces (physical or logical).  These filters are used to prohibit
   the processing and forwarding of certain types of level-2 traffic
   that may be disruptive to the network.  The filters, as currently
   specified, can be set to cause the modem to either drop frames which
   match at least one filter, or to process a frame which matches at
   least one filter.  Some examples of possible configurations would be
   to only permit IP (and ARP) traffic, or to drop NetBIOS traffic.

3.3.2.  Special Filters

   Special filters are applied after the packet is accepted from the MAC
   layer by the IP module, but before any other processing is done.
   They are filters that apply only to a very specific class of traffic.

3.3.2.1.  IP Spoofing Filters - docsDevCpeTable

   IP spoofing filters are applied to packets entering the modem from
   one of the CPE interfaces and are intended to prevent a subscriber
   from stealing or mis-using IP addresses that were not assigned to the
   subscriber.  If the filters are active (enabled), the source address
   of the IP packet must match at least one IP address in this table or
   it is discarded without further processing.



Expires July 2003                                               [Page 8]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


   The table can be automatically populated where the first N different
   IP addresses seen from the CPE side of the cable modem are used to
   automatically populate the table.  The spoofing filters are specified
   in the docsDevCpeTable and the policy for automatically creating
   filters in that table is controlled by docsDevCpeEnroll and
   docsDevCpeMax as well as the network management agent.

   Similar IP spoofing filter controls are defined for CMTS
   implementation in the Subscriber Management MIB [SUBMGT-MIB].

3.3.2.2.  SNMP Access Filters - docsDevNmAccessTable

   The SNMP access filters are applied to SNMP packets entering from any
   interface and destined for the cable modem.  If the packets enter
   from a CPE interface, the SNMP filters are applied after the IP
   spoofing filters.  The filters only apply to SNMPv1 or SNMPv2c
   traffic, and are not consulted for SNMPv3 traffic (and need not be
   implemented by a v3 only agent).  SNMPv3 access control is specified
   in the User Security Model MIB in [RFC3414].

   With the completion of the SNMP coexistence document, RFC 2576
   [RFC2576], docsDevNmAccess table has been deprecated in this version
   of the MIB.  See the body of the MIB for the description of how
   agents should handle the interaction between RFC 2576 MIBs and this
   MIB.

   docsDevNmAccessTable specified a mechanism for limiting SNMP access
   based on interface.  That capability has been retained as a set of
   augmenting objects to the vacmAccessTable of the view-based access
   control MIB, RFC 3415 [RFC3415].  Please see the description for
   docsDevVacmAccessExtTable in the body of the MIB below.  Basically,
   SNMP packets are tagged with the interface through which they are
   received by the agent.  If that interface is not included in the set
   of interfaces referenced by this table for a particular view, then
   that view is not visible for that SNMP request.

3.3.3.  IP Filtering - docsDevFilterIpTable

   The IP Filtering table acts as a classifier table.  Each row in the
   table describes a template against which IP packets are compared.
   The template includes source and destination addresses (and their
   associated masks), upper level protocol (e.g. TCP, UDP), source and
   destination port ranges, TOS and TOS mask.  A row also contains
   interface and traffic direction match values which have to be
   considered in combination.  All columns of a particular row must
   match the appropriate fields in the packet, and must match the
   interface and direction items for the packet to result in a match to
   the packet.



Expires July 2003                                               [Page 9]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


   When classifying a packet, the table is scanned beginning with the
   lowest number filter.  If the agent finds a match, it applies the
   group of policies specified.  If the matched filter has the continue
   bit set, the agent continues the scan possibly matching additional
   filters and applying additional policies.  This allows the agent to
   take one set of actions for the 24.0.16/255.255.255.0 group and one
   set of actions for telnet packets to/from 24.0.16.30, and these sets
   of actions may not be mutually exclusive.

   Once a packet is matched, one of three actions happen based on the
   setting of docsDevFilterIpControl in the row.  The packet may be
   dropped, in which case no further processing is required.  The packet
   may be accepted and processing of the packet continues.  Lastly, the
   packet may have a set of policy actions applied to it.  If
   docsDevFilterIpContinue is set to true, scanning of the table
   continues and additional matches may result.

   When a packet matches, and docsDevFilterIpControl in the filter
   matched is set to 'policy', the value of docsDevFilterIpPolicyId is
   used as a selector into the docsDevFilterPolicyTable.  The first
   level of indirection may result in zero or more actions being taken
   based on the match.  The docsDevFilterPolicyTable is scanned in row
   order and all rows where docsDevFilterPolicyId equals
   docsDevFilterIpPolicyId have the action specified by
   docsDevFilterPolicyValue 'executed'.  For example, a value pointing
   to an entry in the docsDevFilterTosTable may result in the re-writing
   of the TOS bits in the IP packet which was matched.  Another
   possibility may be to assign an output packet to a specific output
   upstream queue.  An even more complex action might be to re-write the
   TOS value, assign the packet to an upstream service ID, and drop it
   into a particular IPSEC tunnel.

   Example:

   docsDevFilterIpTable

   ##  Index,  SrcIP/Mask, DstIP/Mask,ULP, SrcPts,DstPts,Tos/Mask,
   # Int/Dir,  Pgroup, [continue]
   # drop any netbios traffic
   10, 0/0, 0/0, TCP, any, 137-139, 0/0, any/any, drop

   # traffic to the proxy gets better service - other matches possible
   20, 0/0, proxy/32, TCP, any,any, 0/0, cpe/in, 10, continue

   # Traffic from CPE 1 gets 'Gold' service, other matches possible
   30, cpe1/32, 0/0, any, any,any, 0/0, cpe/in, 20, continue

   # Traffic from CPE2 to work goes, other traffic dropped



Expires July 2003                                              [Page 10]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


   40, cpe2/32, workIPs/24, any, 0/0, cpe/in, accept
   45, cpe2/32, 0/0, any, any,ayn, 0/0, cpe/in, drop

   # Traffic with TOS=4 gets queued on the "silver" queue.
   50, 0/0, 0/0, any, any,any, 4/255, cpe/in, 30

   # Inbound "server" traffic to low numbered ports gets dropped.
   60, 0/0, 0/0, TCP, any,1-1023, 0/0, cpe/out, drop
   65, 0/0, 0/0, UDP, any,1-1023, 0/0, cpe/out, drop

   docsDevFilterPolicyTable

   #
   # index, policy group, policy
   10, 10, queueEntry.20   -- special queue for traffic to proxy

   15, 20, queueEntry.15   -- Gold Service queue
   20, 20, docsDevFilterTosStatus.10 -- Mark this packet with TOS 5

   25, 30, queueEntry.10   -- Silver service queue

   This table describes some special processing for packets originating
   from either the first or second CPE device which results in their
   queuing on to special upstream traffic queues and for the "gold"
   service results in having the packets marked with a TOS of 5.  The
   10, 20, 60 and 65 entries are generic entries that would generally be
   applied to all traffic to this CM.  The 30, 40 and 45 entries are
   specific to a particular CPE's service assignments.  The ordering
   here is a bit contrived, but is close to what may actually be
   required by the operator to control various classes of customers.

   Similar IP classifier controls are defined for CMTS implementation in
   the Subscriber Management MIB [SUBMGT-MIB].

3.3.4.  Outbound LLC Filters

   Lastly, any outbound LLC filters are applied to the packet just prior
   to it being emitted on the appropriate interface.  This MIB does not
   specify any outbound LLC filters, but it is anticipated that the QOS
   additions to the DOCSIS standard [QOS-MIB] may include some outbound
   LLC filtering requirements.  If so, those filters would be applied as
   described there.

4.  Definitions

DOCS-CABLE-DEVICE-MIB DEFINITIONS ::= BEGIN

IMPORTS



Expires July 2003                                              [Page 11]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        MODULE-IDENTITY,
        OBJECT-TYPE,
        IpAddress,
        Unsigned32,
        Counter32,
        Integer32,
        zeroDotZero,
        mib-2
                FROM SNMPv2-SMI
        RowStatus,
        RowPointer,
        DateAndTime,
        TruthValue
                FROM SNMPv2-TC
        InetAddressType,
        InetAddress,
        InetPortNumber,
        InetAddressIPv6
                FROM INET-ADDRESS-MIB
        OBJECT-GROUP,
        MODULE-COMPLIANCE
                FROM SNMPv2-CONF
        SnmpAdminString
                FROM SNMP-FRAMEWORK-MIB
        vacmAccessEntry
                FROM SNMP-VIEW-BASED-ACM-MIB
        InterfaceIndexOrZero
                FROM IF-MIB;

docsDev MODULE-IDENTITY
        LAST-UPDATED    "200301240000Z"  -- 24 January 2003
        ORGANIZATION    "IETF IPCDN Working Group"
        CONTACT-INFO
            "        Rich Woundy
             Postal: Comcast Cable
                     27 Industrial Avenue
                     Chelmsford, MA 01824 U.S.A.
             Phone:  +1 978 244 4010
             E-mail: richard_woundy@cable.comcast.com

             IETF IPCDN Working Group
             General Discussion: ipcdn@ietf.org
             Subscribe: http://www.ietf.org/mailman/listinfo/ipcdn
             Archive: ftp://ftp.ietf.org/ietf-mail-archive/ipcdn
             Co-chairs: Richard Woundy, richard_woundy@cable.comcast.com
                        Jean-Francois Mule, jf.mule@cablelabs.com"
        DESCRIPTION
            "This is the MIB Module for DOCSIS compliant cable modems



Expires July 2003                                              [Page 12]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


             and cable-modem termination systems.

             Copyright (C) The Internet Society (2003). This version
             of this MIB module is part of RFC xxxx; see the RFC
             itself for full legal notices."
        REVISION "200301240000Z"  -- 24 January 2003
        DESCRIPTION
            "Modified by Rich Woundy to update the handling of the
             docsDevNmAccessTable with respect to SNMP Coexistence,
             to simplify the TFTP/HTTP software download mechanisms,
             to deprecate docsDevEvThrottleInhibited in favor of
             docsDevEvThrottleThresholdExceeded, to leverage the
             InetPortNumber syntax, to make the docsDevCpe tables
             optional, and to fix errors caught by MIB compilers."
        REVISION "200211030000Z"  -- 3 November 2002
        DESCRIPTION
            "Modified by Rich Woundy to enable TFTP and HTTP software
             downloads through the addition of new objects, to define
             a new docsDevMaxCpe object, to simplify the operation of
             docsDevEvThrottleInhibited, to remove direct references
             to RFCs 2233 and 2851, to fix errors caught by MIB
             compilers, and to correct miscellaneous DESCRIPTION
             errors."
        REVISION "200207010000Z"  -- 1 July 2002
        DESCRIPTION
            "Modified by Rich Woundy to add
             docsDevNmAccessTrapVersion, use 0.0.0.0 to represent
             any NMS for docsDevNmAccessIp, and fixed references
             to docsDevIpFilterTable (should be docsDevFilterIpTable)
             and docsDevFilterIpPolicyTable (should be
             docsDevFilterPolicyTable). This MIB was NOT checked
             by a MIB compiler."
        REVISION "200103020000Z"  -- 2 March 2001
        DESCRIPTION
            "Modified by Rich Woundy to use RFC 2851 for IPv6
             compliance. Added back two obsoleted objects to ensure
             OIDs are never re-used. Added the docsDevIgmpModeControl
             object for IGMP mode control."
        REVISION "200007070000Z"  -- 7 July  2000, 0000Z
        DESCRIPTION
            "Modified by Mike StJohns to bring into SNMPv3/IPv6
             compliance. Modified to deal with multiple CPE
             interface devices.  Updated compliance statements to
             current version."
        REVISION "9908190000Z"
        DESCRIPTION
            "Initial version, published as RFC 2669."
        ::= { mib-2 69 }



Expires July 2003                                              [Page 13]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


docsDevMIBObjects  OBJECT IDENTIFIER ::= { docsDev 1 }
docsDevBase OBJECT IDENTIFIER ::= { docsDevMIBObjects 1 }

--
-- For the following object, there is no concept in the
-- RFI specification corresponding to a backup CMTS. The
-- enumeration is provided here in case someone is able
-- to define such a role or device.
--

docsDevRole OBJECT-TYPE
        SYNTAX INTEGER {
            cm(1),
            cmtsActive(2),
            cmtsBackup(3)
        }
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "Defines the current role of this device.  cm (1) is
             a Cable Modem, cmtsActive(2) is a Cable Modem Termination
             System which is controlling the system of cable modems,
             and cmtsBackup(3) is a CMTS which is currently connected,
             but not controlling the system (not currently used).

             In general, if this device is a 'cm', its role will not
             change during operation or between reboots.  If the
             device is a 'cmts' it may change between cmtsActive and
             cmtsBackup and back again during normal operation.  NB:
             At this time, the DOCSIS standards do not support the
             concept of a backup CMTS, cmtsBackup is included for
             completeness."
        ::= { docsDevBase 1 }

docsDevDateTime OBJECT-TYPE
        SYNTAX      DateAndTime
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "The current date and time, with optional timezone
             information.  This is set at boot from the time server.  If
             it's impossible to set this from boot, this shall represent
             elapsed time from boot relative to the standard epoch (e.g.
             1 Jan 1970 0000Z).  In other words, if this agent has been
             up for 3 minutes, and has been unable to set this object
             from the time server, this object will return 1 Jan 1970
             0003Z."
        ::= { docsDevBase 2 }



Expires July 2003                                              [Page 14]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


docsDevResetNow OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "Setting this object to true(1) causes the device to reset.
             Reading this object always returns false(2)."
        ::= { docsDevBase 3 }

docsDevSerialNumber OBJECT-TYPE
        SYNTAX      SnmpAdminString
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "The manufacturer's serial number for this device."
        ::= { docsDevBase 4 }

docsDevSTPControl OBJECT-TYPE
        SYNTAX INTEGER {
            stEnabled(1),
            noStFilterBpdu(2),
            noStPassBpdu(3)
        }
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "This object controls operation of the spanning tree
             protocol (as distinguished from transparent bridging).
             If set to stEnabled(1) then the spanning tree protocol
             is enabled, subject to bridging constraints. If
             noStFilterBpdu(2), then spanning tree is not active,
             and Bridge PDUs received are discarded.
             If noStPassBpdu(3) then spanning tree is not active
             and Bridge PDUs are transparently forwarded. Note that
             a device need not implement all of these options,
             but that noStFilterBpdu(2) is required."
        ::= { docsDevBase 5 }

docsDevIgmpModeControl OBJECT-TYPE
        SYNTAX INTEGER {
            passive(1),
            active(2)
        }
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "This object controls the IGMP mode of operation for
             the CM or CMTS.  In passive mode, the device forwards



Expires July 2003                                              [Page 15]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


             IGMP between interfaces based on knowledge of Multicast
             Session activity on the subscriber side interface and
             the rules defined in section 3.3.1 of [RFI1.1]. In active
             mode, the device terminates at and initiates IGMP
             through its interfaces based on the knowledge of
             Multicast Session activity on the subscriber side
             interface."
        ::= { docsDevBase 6 }

docsDevMaxCpe OBJECT-TYPE
        SYNTAX      Integer32 (0..255)
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "The maximum number of CPEs that can be granted access
             through a CM during a CM epoch. This value is obtained
             from the CM configuration file and is defined in
             [RFI1.0]."
        ::= { docsDevBase 7 }

--
-- The following table provides one level of security for access
-- to the device by network management stations.
-- Note that access is also constrained by the
-- community strings and any vendor-specific security.
--

docsDevNmAccessTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF DocsDevNmAccessEntry
        MAX-ACCESS  not-accessible
        STATUS      deprecated
        DESCRIPTION
            "This table controls access to SNMP objects by network
             management stations. If the table is empty, access to SNMP
             objects is unrestricted.  This table exists only on SNMPv1
             or v2c agents and does not exist on SNMPv3 agents. See the
             conformance section for details.  Specifically, for v3
             agents, the appropriate MIBs and security models apply in
             lieu of this table.

             This table is deprecated.  Instead, use the SNMP
             coexistence MIBs from RFC2576, the TARGET and NOTIFICATION
             MIBs from the SNMP Applications RFC, and the VACM MIBs for
             SNMPv1 and V2C access."
        ::= { docsDevMIBObjects 2 }

docsDevNmAccessEntry OBJECT-TYPE
        SYNTAX      DocsDevNmAccessEntry



Expires July 2003                                              [Page 16]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        MAX-ACCESS  not-accessible
        STATUS      deprecated
        DESCRIPTION
            "An entry describing access to SNMP objects by a
             particular network management station. An entry in
             this table is not readable unless the management station
             has read-write permission (either implicit if the table
             is empty, or explicit through an entry in this table.
             Entries are ordered by docsDevNmAccessIndex.  The first
             matching entry (e.g. matching IP address and community
             string) is used to derive access."
        INDEX { docsDevNmAccessIndex  }
        ::= {  docsDevNmAccessTable 1 }

DocsDevNmAccessEntry ::= SEQUENCE {
            docsDevNmAccessIndex         Integer32,
            docsDevNmAccessIp            IpAddress,
            docsDevNmAccessIpMask        IpAddress,
            docsDevNmAccessCommunity     OCTET STRING,
            docsDevNmAccessControl       INTEGER,
            docsDevNmAccessInterfaces    OCTET STRING,
            docsDevNmAccessStatus        RowStatus,
            docsDevNmAccessTrapVersion   INTEGER
        }

docsDevNmAccessIndex OBJECT-TYPE
        SYNTAX      Integer32 (1..2147483647)
        MAX-ACCESS  not-accessible
        STATUS      deprecated
        DESCRIPTION
            "Index used to order the application of access
             entries."
        ::= { docsDevNmAccessEntry 1 }

docsDevNmAccessIp OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  read-create
        STATUS      deprecated
        DESCRIPTION
            "The IP address (or subnet) of the network management
             station. The address 0.0.0.0 is defined to mean
             any NMS. If traps are enabled for this entry, then the
             value must be the address of a specific device."
        DEFVAL { '00000000'h }
        ::= { docsDevNmAccessEntry 2 }

docsDevNmAccessIpMask OBJECT-TYPE
        SYNTAX      IpAddress



Expires July 2003                                              [Page 17]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        MAX-ACCESS  read-create
        STATUS      deprecated
        DESCRIPTION
            "The IP subnet mask of the network management stations.
             If traps are enabled for this entry, then the value must
             be 255.255.255.255."
        DEFVAL { '00000000'h }
        ::= { docsDevNmAccessEntry 3 }

docsDevNmAccessCommunity OBJECT-TYPE
        SYNTAX      OCTET STRING (SIZE (0..32))
        MAX-ACCESS  read-create
        STATUS      deprecated
        DESCRIPTION
            "The community string to be matched for access by this
             entry. If set to a zero length string then any community
             string will match.  When read, this object SHOULD return a
             zero length string."
        DEFVAL { "public" }
        ::= { docsDevNmAccessEntry 4 }

docsDevNmAccessControl OBJECT-TYPE
        SYNTAX         INTEGER {
            none(1),
            read(2),
            readWrite(3),
            roWithTraps(4),
            rwWithTraps(5),
            trapsOnly(6)
        }
        MAX-ACCESS  read-create
        STATUS      deprecated
        DESCRIPTION
            "Specifies the type of access allowed to this NMS. Setting
             this object to none(1) causes the table entry to be
             destroyed. Read(2) allows access by 'get' and 'get-next'
             PDUs. ReadWrite(3) allows access by 'set' as well.
             RoWithtraps(4), rwWithTraps(5), and trapsOnly(6)
             control distribution of Trap PDUs transmitted by this
             device."
        DEFVAL { read }
        ::= { docsDevNmAccessEntry 5 }

-- The syntax of the following object was copied from RFC1493,
-- dot1dStaticAllowedToGoTo.

docsDevNmAccessInterfaces OBJECT-TYPE
        SYNTAX      OCTET STRING (SIZE (1..32))



Expires July 2003                                              [Page 18]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        MAX-ACCESS  read-create
        STATUS      deprecated
        DESCRIPTION
            "Specifies the set of interfaces from which requests from
             this NMS will be accepted.
             Each octet within the value of this object specifies a set
             of eight interfaces, with the first octet specifying ports
             1 through 8, the second octet specifying interfaces 9
             through 16, etc.  Within each octet, the most significant
             bit represents the lowest numbered interface, and the least
             significant bit represents the highest numbered interface.
             Thus, each interface is represented by a single bit within
             the value of this object. If that bit has a value of '1'
             then that interface is included in the set.

             Note that entries in this table apply only to link-layer
             interfaces (e.g., Ethernet and CATV MAC). Upstream and
             downstream channel interfaces must not be specified.

             Note that according to the DOCSIS OSSIv1.1 specification
             [OSSI1.1], when ifIndex '1' is included in the set, then
             this row applies to all CPE (customer-facing) interfaces.

             The size of this object is the minimum required to
             represent all configured interfaces for this device."
--      DEFVAL is the bitmask corresponding to all interfaces
        ::= { docsDevNmAccessEntry 6 }

docsDevNmAccessStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      deprecated
        DESCRIPTION
            "Controls and reflects the status of rows in this
             table. Rows in this table may be created by either the
             create-and-go or create-and-wait paradigms.  There is no
             restriction on changing values in a row of this table while
             the row is active."
        ::= { docsDevNmAccessEntry 7 }

docsDevNmAccessTrapVersion OBJECT-TYPE
        SYNTAX      INTEGER {
            disableSNMPv2trap(1),
            enableSNMPv2trap(2)
        }
        MAX-ACCESS  read-create
        STATUS      deprecated
        DESCRIPTION



Expires July 2003                                              [Page 19]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


            "Specifies the TRAP version that is sent to this NMS.
             Setting this object to disableSNMPv2trap (1) causes the
             trap in SNMPv1 format to be sent to particular NMS. Setting
             this object to enableSNMPv2trap (2) causes the trap in
             SNMPv2 format be sent to particular NMS."
        DEFVAL { disableSNMPv2trap }
        ::= { docsDevNmAccessEntry 8 }


--
--  Procedures for using the following group are described in section
--  3.2.1 of this MIB
--

docsDevSoftware OBJECT IDENTIFIER ::= { docsDevMIBObjects 3 }

docsDevSwServer OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  read-write
        STATUS      deprecated
        DESCRIPTION
            "The address of the TFTP server used for software upgrades.
             If the TFTP server is unknown or is a V6 address, return
             0.0.0.0.

             This object is deprecated.  See docsDevSwServerAddress for
             its replacement.  This object will have its value modified
             given a valid SET to docsDevSwServerAddress."
        ::= { docsDevSoftware 1 }

docsDevSwFilename OBJECT-TYPE
        SYNTAX      SnmpAdminString (SIZE (0..64))
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "The filename of the software image to be downloaded via
             TFTP, or the abs_path (as defined in [RFC2616]) of the
             software image to be downloaded via HTTP.

             Unless set via SNMP, this is the filename or abs_path
             specified by the provisioning server during the boot
             process, that corresponds to the software version that
             is desired for this device.

             If unknown, the value of this object is the empty string."
        ::= { docsDevSoftware 2 }

docsDevSwAdminStatus OBJECT-TYPE



Expires July 2003                                              [Page 20]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        SYNTAX INTEGER {
            upgradeFromMgt(1),
            allowProvisioningUpgrade(2),
            ignoreProvisioningUpgrade(3)
        }
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "If set to upgradeFromMgt(1), the device will initiate a
             TFTP or HTTP software image download.  After successfully
             receiving an image, the device will set its state to
             ignoreProvisioningUpgrade(3) and reboot.  If the download
             process is interrupted by a reset or power failure, the
             device will load the previous image and, after
             re-initialization, continue to attempt loading the image
             specified in docsDevSwFilename.

             If set to allowProvisioningUpgrade(2), the device will
             use the software version information supplied by the
             provisioning server when next rebooting (this does not
             cause a reboot).

             When set to ignoreProvisioningUpgrade(3), the device
             will disregard software image upgrade information from the
             provisioning server.

             Note that reading this object can return
             upgradeFromMgt(1).  This indicates that a software
             download is currently in progress, and that the device
             will reboot after successfully receiving an image.

             At initial startup, this object has the default value of
             allowProvisioningUpgrade(2)."
        ::= { docsDevSoftware 3 }

docsDevSwOperStatus OBJECT-TYPE
        SYNTAX INTEGER {
            inProgress(1),
            completeFromProvisioning(2),
            completeFromMgt(3),
            failed(4),
            other(5)
        }
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "InProgress(1) indicates that a TFTP or HTTP download is
             underway, either as a result of a version mismatch at



Expires July 2003                                              [Page 21]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


             provisioning or as a result of a upgradeFromMgt request.
             CompleteFromProvisioning(2) indicates that the last
             software upgrade was a result of version mismatch at
             provisioning. CompleteFromMgt(3) indicates that the last
             software upgrade was a result of setting
             docsDevSwAdminStatus to upgradeFromMgt.
             Failed(4) indicates that the last attempted download
             failed, ordinarily due to TFTP or HTTP timeout."
        REFERENCE
             "DOCSIS Radio Frequency Interface Specification, Section
             8.2, Downloading Cable Modem Operating Software."
        ::= { docsDevSoftware 4 }

docsDevSwCurrentVers OBJECT-TYPE
        SYNTAX      SnmpAdminString
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "The software version currently operating in this device.
             This object should be in the syntax used by the individual
             vendor to identify software versions.  Any CM MUST return a
             string descriptive of the current software load.  For a
             CMTS, this object SHOULD contain either a human readable
             representation of the vendor specific designation of the
             software for the chassis, or of the software for the
             control processor. If neither of these is applicable,
             this MUST contain an empty string."
        ::= { docsDevSoftware 5 }

docsDevSwServerAddressType OBJECT-TYPE
        SYNTAX      InetAddressType
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "The type of address of the TFTP or HTTP server used for
             software upgrades.

             If the TFTP protocol is used, then the value of this
             object MUST NOT be the 'dns' address type."
        ::= { docsDevSoftware 6 }

docsDevSwServerAddress OBJECT-TYPE
        SYNTAX      InetAddress
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "The address of the TFTP or HTTP server used for software
             upgrades.



Expires July 2003                                              [Page 22]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


             If the TFTP/HTTP server is unknown, return the zero length
             address string (see the TextualConvention).

             If docsDevSwServer is also implemented in this agent, this
             object is tied to it.  A set of this object to an IPv4
             address will result in the value of docsDevSwServer also
             being set to that address.  If this object is set to an
             IPv6 address, docsDevSwServer is set to 0.0.0.0.
             If docsDevSwServer is set, this object is also set to that
             value.  Note that if both are set in the same action, the
             order of which one sets the other is undefined."
        ::= { docsDevSoftware 7 }

docsDevSwServerTransportProtocol OBJECT-TYPE
        SYNTAX INTEGER {
            tftp(1),
            http(2)
        }
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "This object specifies the transport protocol (TFTP or
             HTTP) to be used for software upgrades.

             If the value of this object is tftp, then the cable
             device uses TFTP [RFC1350] read request packets to
             download the docsDevSwFilename from the
             docsDevSwServerAddress in octet mode.

             If the value of this object is http, then the cable
             device uses HTTP 1.0 [RFC1945] or HTTP 1.1 [RFC2616]
             GET requests sent to host docsDevSwServerAddress to
             download the software image from path docsDevSwFilename.

             The default value of this object is tftp."
        ::= { docsDevSoftware 8 }

--
-- The following group describes server access and parameters used for
-- initial provisioning and bootstrapping.
--

docsDevServer OBJECT IDENTIFIER ::= { docsDevMIBObjects 4 }

docsDevServerBootState OBJECT-TYPE
        SYNTAX INTEGER {
            operational(1),
            disabled(2),



Expires July 2003                                              [Page 23]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


            waitingForDhcpOffer(3),
            waitingForDhcpResponse(4),
            waitingForTimeServer(5),
            waitingForTftp(6),
            refusedByCmts(7),
            forwardingDenied(8),
            other(9),
            unknown(10)
        }
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "If operational(1), the device has completed loading and
             processing of configuration parameters and the CMTS has
             completed the Registration exchange.
             If disabled(2) then the device was administratively
             disabled, possibly by being refused network access in the
             configuration file.
             If waitingForDhcpOffer(3) then a DHCP Discover has been
             transmitted and no offer has yet been received.
             If waitingForDhcpResponse(4) then a DHCP Request has been
             transmitted and no response has yet been received.
             If waitingForTimeServer(5) then a Time Request has been
             transmitted and no response has yet been received.
             If waitingForTftp(6) then a request to the TFTP parameter
             server has been made and no response received.
             If refusedByCmts(7) then the Registration Request/Response
             exchange with the CMTS failed.
             If forwardingDenied(8) then the registration process
             completed, but the network access option in the received
             configuration file prohibits forwarding. "
        REFERENCE
             "DOCSIS Radio Frequency Interface Specification, Figure
             7-1, CM Initialization Overview."
        ::= { docsDevServer 1 }

docsDevServerDhcp OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  read-only
        STATUS      deprecated
        DESCRIPTION
            "The IP address of the DHCP server that assigned an IP
             address to this device. Returns 0.0.0.0 if DHCP is not
             used for IP address assignment, or if this agent is
             assigned an IPv6 address.

             Deprecated.  This object is replaced by
             docsDevServerDhcpAddress."



Expires July 2003                                              [Page 24]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        ::= { docsDevServer 2 }

docsDevServerTime OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  read-only
        STATUS      deprecated
        DESCRIPTION
            "The IP address of the Time server (RFC-868). Returns
             0.0.0.0 if the time server IP address is unknown, or if
             the time server is an IPv6 server.

             Deprecated.  This object is replaced by
             docsDevServerTimeAddress."
        ::= { docsDevServer 3 }

docsDevServerTftp OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  read-only
        STATUS      deprecated
        DESCRIPTION
            "The IP address of the TFTP server responsible for
             downloading provisioning and configuration parameters
             to this device. Returns 0.0.0.0 if the TFTP server
             address is unknown or is an IPv6 address.

             Deprecated.  This object is replaced by
             docsDevServerConfigTftpAddress."
        ::= { docsDevServer 4 }

docsDevServerConfigFile OBJECT-TYPE
        SYNTAX      SnmpAdminString
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "The name of the device configuration file read from the
             TFTP server. Returns an empty string if the configuration
             file name is unknown."
        ::= { docsDevServer 5 }

docsDevServerDhcpAddressType OBJECT-TYPE
        SYNTAX      InetAddressType
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "The type of address of docsDevServerDhcpAddress."
        ::= { docsDevServer 6 }

docsDevServerDhcpAddress OBJECT-TYPE



Expires July 2003                                              [Page 25]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        SYNTAX      InetAddress
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "The IP v4 or v6 address of the DHCP server that assigned
             an IP address to this device. Returns the zero length
             octet string if DHCP was not used for IP address
             assignment."
        ::= { docsDevServer 7 }

docsDevServerTimeAddressType OBJECT-TYPE
        SYNTAX      InetAddressType
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "The type of address of docsDevServerTimeAddress."
        ::= { docsDevServer 8 }

docsDevServerTimeAddress OBJECT-TYPE
        SYNTAX      InetAddress
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "The IP V4 or V6 address of the RFC-868 Time server.
             Returns the zero length octet string if the time server
             IP address is unknown."
        ::= { docsDevServer 9 }

docsDevServerConfigTftpAddressType OBJECT-TYPE
        SYNTAX      InetAddressType
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "The type of address of docsDevServerConfigTftpAddress."
        ::= { docsDevServer 10 }

docsDevServerConfigTftpAddress OBJECT-TYPE
        SYNTAX      InetAddress
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "The IP V4 or V6 address of the TFTP server responsible
             for downloading provisioning and configuration parameters
             to this device.  Returns the zero length octet string if
             the config server address is unknown."
        ::= { docsDevServer 11 }

--



Expires July 2003                                              [Page 26]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


--  Event Reporting
--

docsDevEvent OBJECT IDENTIFIER ::= { docsDevMIBObjects 5 }

docsDevEvControl OBJECT-TYPE
        SYNTAX INTEGER {
            resetLog(1),
            useDefaultReporting(2)
        }
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "Setting this object to resetLog(1) empties the event log.
             All data is deleted.  Setting it to useDefaultReporting(2)
             returns all event priorities to their factory-default
             reporting.  Reading this object always returns
             useDefaultReporting(2)."
        ::= { docsDevEvent 1 }

docsDevEvSyslog OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  read-write
        STATUS      deprecated
        DESCRIPTION
            "The IP address of the Syslog server. If 0.0.0.0, either
             syslog transmission is inhibited, or the Syslog server
             address is an IPv6 address.

             Deprecated.  See docsDevEvSyslogAddress."
        ::= { docsDevEvent 2 }

docsDevEvThrottleAdminStatus OBJECT-TYPE
        SYNTAX INTEGER {
            unconstrained(1),
            maintainBelowThreshold(2),
            stopAtThreshold(3),
            inhibited(4)
        }
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "Controls the transmission of traps and syslog messages
             with respect to the trap pacing threshold.
             unconstrained(1) causes traps and syslog messages to be
             transmitted without regard to the threshold settings.
             maintainBelowThreshold(2) causes trap transmission and
             syslog messages to be suppressed if the number of traps



Expires July 2003                                              [Page 27]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


             would otherwise exceed the threshold.
             stopAtThreshold(3) causes trap transmission to cease at the
             threshold, and not resume until directed to do so.
             inhibited(4) causes all trap transmission and syslog
             messages to be suppressed.

             A single event is always treated as a single event for
             threshold counting. That is, an event causing both a trap
             and a syslog message is still treated as a single event.

             Writing to this object resets the thresholding state.

             At initial startup, this object has a default value of
             unconstrained(1)."
        ::= { docsDevEvent 3 }

docsDevEvThrottleInhibited OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-only
        STATUS      deprecated
        DESCRIPTION
            "If true(1), trap and syslog transmission is currently
             inhibited due to thresholds and/or the current setting of
             docsDevEvThrottleAdminStatus. In addition, this is set to
             true(1) if transmission is inhibited due to no
             syslog (docsDevEvSyslog) or trap (docsDevNmAccessEntry)
             destinations having been set.

             Deprecated.  See docsDevEvThrottleThresholdExceeded."
        ::= { docsDevEvent 4 }

docsDevEvThrottleThreshold OBJECT-TYPE
        SYNTAX      Unsigned32
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "Number of trap/syslog events per docsDevEvThrottleInterval
             to be transmitted before throttling.

             A single event is always treated as a single event for
             threshold counting. That is, an event causing both a trap
             and a syslog message is still treated as a single event.

             At initial startup, this object returns 0."
        ::= { docsDevEvent 5 }

docsDevEvThrottleInterval OBJECT-TYPE
        SYNTAX      Integer32 (1..2147483647)



Expires July 2003                                              [Page 28]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        UNITS       "seconds"
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "The interval over which the trap threshold applies.
             At initial startup, this object has a value of 1."
        ::= { docsDevEvent 6 }

--
-- The following table controls the reporting of the various classes of
-- events.
--

docsDevEvControlTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF DocsDevEvControlEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "This table allows control of the reporting of event
             classes.  For each event priority, a combination of logging
             and reporting mechanisms may be chosen. The mapping of
             event types to priorities is vendor-dependent.  Vendors may
             also choose to allow the user to control that mapping
             through proprietary means."
        ::= {  docsDevEvent 7 }


docsDevEvControlEntry OBJECT-TYPE
        SYNTAX      DocsDevEvControlEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "Allows configuration of the reporting mechanisms for a
             particular event priority."
        INDEX { docsDevEvPriority }
        ::= { docsDevEvControlTable 1 }

DocsDevEvControlEntry ::= SEQUENCE {
            docsDevEvPriority        INTEGER,
            docsDevEvReporting       BITS
        }

docsDevEvPriority OBJECT-TYPE
        SYNTAX INTEGER {
            emergency(1),
            alert(2),
            critical(3),
            error(4),



Expires July 2003                                              [Page 29]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


            warning(5),
            notice(6),
            information(7),
            debug(8)
        }
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "The priority level that is controlled by this
             entry. These are ordered from most (emergency) to least
             (debug) critical.  Each event with a CM or CMTS has a
             particular priority level associated with it (as defined by
             the vendor). During normal operation no event more critical
             than notice(6) should be generated. Events between warning
             and emergency should be generated at appropriate levels of
             problems (e.g. emergency when the box is about to
             crash)."
        ::= { docsDevEvControlEntry 1 }

docsDevEvReporting OBJECT-TYPE
        SYNTAX BITS {
            localNonvolatile(0),
            traps(1),
            syslog(2),
            localVolatile(3)
        }
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "Defines the action to be taken on occurrence of this
             event class. Implementations may not necessarily support
             all options for all event classes, but at minimum must
             allow traps and syslogging to be disabled. If the
             localNonvolatile(0) bit is set, then log to the internal
             log -- both the volatile and non-volatile versions, for
             backward compatibility with the object definition from
             RFC 2669.  If the traps(1) bit is set, then generate an
             SNMP trap, and if the syslog(2) bit is set, then send a
             syslog message (assuming the syslog address is set).  If
             the localVolatile(3) bit is set, then log to the internal
             volatile log.

             An event reported by trap or syslog logging MUST be
             accompanied by localVolatile logging.  If the bit value
             for either traps(1) or syslog(2) is set, then the agent
             MUST enforce that the bit value for localNonvolatile(0)
             or localVolatile(3) is set as well."
        ::= { docsDevEvControlEntry 2 }



Expires July 2003                                              [Page 30]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


docsDevEventTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF DocsDevEventEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "Contains a log of network and device events that may be
             of interest in fault isolation and troubleshooting."
        ::= {  docsDevEvent 8 }

docsDevEventEntry OBJECT-TYPE
        SYNTAX      DocsDevEventEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "Describes a network or device event that may be of
             interest in fault isolation and troubleshooting. Multiple
             sequential identical events are represented by
             incrementing docsDevEvCounts and setting
             docsDevEvLastTime to the current time rather than creating
             multiple rows.

             Entries are created with the first occurrance of an event.
             docsDevEvControl can be used to clear the table.
             Individual events can not be deleted."
        INDEX { docsDevEvIndex }
        ::= { docsDevEventTable 1 }

DocsDevEventEntry ::= SEQUENCE {
            docsDevEvIndex           Integer32,
            docsDevEvFirstTime       DateAndTime,
            docsDevEvLastTime        DateAndTime,
            docsDevEvCounts          Counter32,
            docsDevEvLevel           INTEGER,
            docsDevEvId              Unsigned32,
            docsDevEvText            SnmpAdminString
        }

docsDevEvIndex OBJECT-TYPE
        SYNTAX      Integer32 (1..2147483647)
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "Provides relative ordering of the objects in the event
             log. This object will always increase except when
             (a) the log is reset via docsDevEvControl,
             (b) the device reboots and does not implement non-volatile
             storage for this log, or (c) it reaches the value 2^31.
             The next entry for all the above cases is 1."



Expires July 2003                                              [Page 31]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        ::= { docsDevEventEntry 1 }

docsDevEvFirstTime OBJECT-TYPE
        SYNTAX      DateAndTime
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "The value of docsDevDateTime at the time this entry was
             created."
        ::= { docsDevEventEntry 2 }

docsDevEvLastTime OBJECT-TYPE
        SYNTAX      DateAndTime
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "If multiple events are reported via the same entry, the
             value of docsDevDateTime that the last event for this entry
             occurred, otherwise this should have the same value as
             docsDevEvFirstTime. "
        ::= { docsDevEventEntry 3 }

docsDevEvCounts OBJECT-TYPE
        SYNTAX      Counter32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "The number of consecutive event instances reported by
             this entry.  This starts at 1 with the creation of this
             row and increments by 1 for each subsequent duplicate
             event."
        ::= { docsDevEventEntry 4 }

docsDevEvLevel OBJECT-TYPE
        SYNTAX INTEGER {
            emergency(1),
            alert(2),
            critical(3),
            error(4),
            warning(5),
            notice(6),
            information(7),
            debug(8)
        }
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "The priority level of this event as defined by the



Expires July 2003                                              [Page 32]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


             vendor.  These are ordered from most serious (emergency)
             to least serious (debug)."
        ::= { docsDevEventEntry 5 }

--
-- It is strongly recommended that implementors follow the CableLabs
-- enumerations for docsDevEvId, as defined in Appendix F of [OSSI1.1].
--

docsDevEvId OBJECT-TYPE
        SYNTAX      Unsigned32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "For this product, uniquely identifies the type of event
             that is reported by this entry."
        ::= { docsDevEventEntry 6 }

docsDevEvText OBJECT-TYPE
        SYNTAX      SnmpAdminString
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "Provides a human-readable description of the event,
             including all relevant context (interface numbers,
             etc.)."
        ::= { docsDevEventEntry 7 }

docsDevEvSyslogAddressType OBJECT-TYPE
        SYNTAX      InetAddressType
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "The type of address of docsDevEvSyslogAddress."
        ::= { docsDevEvent 9 }

docsDevEvSyslogAddress OBJECT-TYPE
        SYNTAX      InetAddress
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "The IP V4 or V6 address of the Syslog server.  If the
             address of the server is set to any of the zero length
             string, the 0.0.0.0 V4 address or the 0: V6 address, syslog
             transmission is inhibited.  By default at agent boot, this
             object returns the zero length string."
        ::= { docsDevEvent 10 }




Expires July 2003                                              [Page 33]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


docsDevEvThrottleThresholdExceeded OBJECT-TYPE
        SYNTAX TruthValue
        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
            "If true(1), trap and syslog transmission is currently
             inhibited due to exceeding the trap/syslog event
             threshold in the current interval."
        ::= { docsDevEvent 11 }

--
-- Link Level Control Filtering
--

docsDevFilter OBJECT IDENTIFIER ::= { docsDevMIBObjects 6 }

docsDevFilterLLCUnmatchedAction OBJECT-TYPE
        SYNTAX INTEGER {
            discard(1),
            accept(2)
        }
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "LLC (Link Level Control) filters can be defined on an
             inclusive or exclusive basis: CMs can be configured to
             forward only packets matching a set of layer three
             protocols, or to drop packets matching a set of layer
             three protocols.  Typical use of these filters is to
             filter out possibly harmful (given the context of a large
             metropolitan LAN) protocols.

             If set to discard(1), any L2 packet which does not match at
             least one filter in the docsDevFilterLLCTable will be
             discarded. If set to accept(2), any L2 packet which does
             not match at least one filter in the docsDevFilterLLCTable
             will be accepted for further processing (e.g.,
             bridging). In otherwords, if the packet does not match an
             entry in the table it takes this action, if it does match
             an entry in the table it takes the opposite of this
             action. At initial system startup, this object returns
             accept(2)."
        ::= { docsDevFilter 1 }

docsDevFilterLLCTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF DocsDevFilterLLCEntry
        MAX-ACCESS  not-accessible
        STATUS      current



Expires July 2003                                              [Page 34]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        DESCRIPTION
            "A list of filters to apply to (bridged) LLC
             traffic. The filters in this table are applied to
             incoming traffic on the appropriate interface(s)  prior
             to any further processing (e.g. before handing the packet
             off for level 3 processing, or for bridging).  The
             specific action taken when no filter is matched is
             controlled by docsDevFilterLLCUnmatchedAction."
        ::= { docsDevFilter 2 }

docsDevFilterLLCEntry OBJECT-TYPE
        SYNTAX      DocsDevFilterLLCEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "Describes a single filter to apply to (bridged) LLC
             traffic received on a specified interface. "
        INDEX { docsDevFilterLLCIndex }
        ::= { docsDevFilterLLCTable 1 }

DocsDevFilterLLCEntry ::= SEQUENCE {
            docsDevFilterLLCIndex               Integer32,
            docsDevFilterLLCStatus              RowStatus,
            docsDevFilterLLCIfIndex             InterfaceIndexOrZero,
            docsDevFilterLLCProtocolType        INTEGER,
            docsDevFilterLLCProtocol            Integer32,
            docsDevFilterLLCMatches             Counter32
        }

docsDevFilterLLCIndex OBJECT-TYPE
        SYNTAX      Integer32 (1..2147483647)
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "Index used for the identification of filters (note that
             LLC filter order is irrelevant)."
        ::= { docsDevFilterLLCEntry 1 }

docsDevFilterLLCStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "Controls and reflects the status of rows in this
             table. There is no restriction on changing any of the
             associated columns for this row while this object is set
             to active."
        ::= { docsDevFilterLLCEntry 2}



Expires July 2003                                              [Page 35]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


docsDevFilterLLCIfIndex OBJECT-TYPE
        SYNTAX      InterfaceIndexOrZero
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "The entry interface to which this filter applies.  The
             value corresponds to ifIndex for either a CATV MAC or
             another network interface. If the value is zero, the filter
             applies to all interfaces. In Cable Modems, the default
             value is the customer side interface(s). In Cable Modem
             Termination Systems, this object has to be specified to
             create a row in this table.

             Note that according to the DOCSIS OSSIv1.1 specification
             [OSSI1.1], ifIndex '1' means that this row applies to
             all CPE (customer-facing) interfaces."
        ::= { docsDevFilterLLCEntry 3 }

docsDevFilterLLCProtocolType OBJECT-TYPE
        SYNTAX INTEGER {
            ethertype(1),
            dsap(2)
        }
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "The format of the value in docsDevFilterLLCProtocol:
             either a two-byte Ethernet Ethertype, or a one-byte
             802.2 SAP value. EtherType(1) also applies to SNAP-
             encapsulated frames."
        DEFVAL { ethertype }
        ::= { docsDevFilterLLCEntry 4 }

docsDevFilterLLCProtocol OBJECT-TYPE
        SYNTAX      Integer32 (0..65535)
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "The layer three protocol for which this filter applies.
             The protocol value format depends on
             docsDevFilterLLCProtocolType. Note that for SNAP frames,
             etherType filtering is performed rather than DSAP=0xAA."
        DEFVAL { 0 }
        ::= { docsDevFilterLLCEntry 5 }

docsDevFilterLLCMatches OBJECT-TYPE
        SYNTAX      Counter32
        MAX-ACCESS  read-only



Expires July 2003                                              [Page 36]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        STATUS      current
        DESCRIPTION
            "Counts the number of times this filter was matched."
        ::= { docsDevFilterLLCEntry 6 }

docsDevFilterIpDefault OBJECT-TYPE
        SYNTAX INTEGER {
            discard(1),
            accept(2)
        }
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "The default behavior for (bridged) packets that do not
             match IP filters is defined by docsDevFilterIpDefault.

             If set to discard(1), all packets not matching an IP filter
             will be discarded. If set to accept(2), all packets not
             matching an IP filter will be accepted for further
             processing (e.g., bridging).

             At initial system startup, this object returns accept(2)."
        ::= { docsDevFilter 3 }

docsDevFilterIpTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF DocsDevFilterIpEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "An ordered list of filters or classifiers to apply to
             IP traffic. Filter application is ordered by the filter
             index, rather than by a best match algorithm (Note that
             this implies that the filter table may have gaps in the
             index values). Packets which match no filters will have
             policy 0 in the docsDevFilterPolicyTable applied to them if
             it exists. Otherwise, Packets which match no filters
             are discarded or forwarded according to the setting of
             docsDevFilterIpDefault.

             Any IP packet can theoretically match multiple rows of
             this table.  When considering a packet, the table is
             scanned in row index order (e.g. filter 10 is checked
             before filter 20).  If the packet matches that filter
             (which means that it matches ALL criteria for that row),
             actions appropriate to docsDevFilterIpControl and
             docsDevFilterPolicyId are taken.  If the packet was
             discarded processing is complete.  If
             docsDevFilterIpContinue is set to true, the filter



Expires July 2003                                              [Page 37]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


             comparison continues with the next row in the table
             looking for additional matches.

             If the packet matches no filter in the table, the packet
             is accepted or dropped for further processing based on
             the setting of docsDevFilterIpDefault. If the packet is
             accepted, the actions specified by policy group 0
             (e.g. the rows in docsDevFilterPolicyTable which have a
             value of 0 for docsDevFilterPolicyId) are taken if that
             policy group exists.

             Logically, this table is consulted twice during the
             processing of any IP packet - once upon its acceptance
             from the L2 entity, and once upon its transmission to the
             L2 entity.  In actuality, for cable modems, IP filtering
             is generally the only IP processing done for transit
             traffic.  This means that inbound and outbound filtering
             can generally be done at the same time with one pass
             through the filter table."
        ::= { docsDevFilter 4 }

docsDevFilterIpEntry OBJECT-TYPE
        SYNTAX      DocsDevFilterIpEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "Describes a filter to apply to IP traffic received on a
             specified interface.  All identity objects in this table
             (e.g. source and destination address/mask, protocol,
             source/dest port, TOS/mask, interface and direction) must
             match their respective fields in the packet for any given
             filter to match.

             To create an entry in this table, docsDevFilterIpIfIndex
             must be specified."
        INDEX { docsDevFilterIpIndex }
        ::= { docsDevFilterIpTable 1 }

DocsDevFilterIpEntry ::= SEQUENCE {
            docsDevFilterIpIndex             Integer32,
            docsDevFilterIpStatus            RowStatus,
            docsDevFilterIpControl           INTEGER,
            docsDevFilterIpIfIndex           InterfaceIndexOrZero,
            docsDevFilterIpDirection         INTEGER,
            docsDevFilterIpBroadcast         TruthValue,
            docsDevFilterIpSaddr             IpAddress,
            docsDevFilterIpSmask             IpAddress,
            docsDevFilterIpDaddr             IpAddress,



Expires July 2003                                              [Page 38]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


            docsDevFilterIpDmask             IpAddress,
            docsDevFilterIpProtocol          Integer32,
            docsDevFilterIpSourcePortLow     InetPortNumber,
            docsDevFilterIpSourcePortHigh    InetPortNumber,
            docsDevFilterIpDestPortLow       InetPortNumber,
            docsDevFilterIpDestPortHigh      InetPortNumber,
            docsDevFilterIpMatches           Counter32,
            docsDevFilterIpTos               OCTET STRING,
            docsDevFilterIpTosMask           OCTET STRING,
            docsDevFilterIpContinue          TruthValue,
            docsDevFilterIpPolicyId          Integer32
        }

docsDevFilterIpIndex OBJECT-TYPE
        SYNTAX      Integer32 (1..2147483647)
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "Index used to order the application of filters.
             The filter with the lowest index is always applied
             first."
        ::= { docsDevFilterIpEntry 1 }

docsDevFilterIpStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "Controls and reflects the status of rows in this
             table. Specifying only this object (with the appropriate
             index) on a CM is sufficient to create a filter row which
             matches all inbound packets on the ethernet interface,
             and results in the packets being
             discarded. docsDevFilterIpIfIndex (at least) must be
             specified on a CMTS to create a row.  Creation of the
             rows may be done via either create-and-wait or
             create-and-go, but the filter is not applied until this
             object is set to (or changes to) active. There is no
             restriction in changing any object in a row while this
             object is set to active."
        ::= { docsDevFilterIpEntry 2 }

docsDevFilterIpControl OBJECT-TYPE
        SYNTAX INTEGER {
            discard(1),
            accept(2),
            policy(3)
        }



Expires July 2003                                              [Page 39]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "If set to discard(1), all packets matching this filter
             will be discarded and scanning of the remainder of the
             filter list will be aborted. If set to accept(2), all
             packets matching this filter will be accepted for further
             processing (e.g., bridging). If docsDevFilterIpContinue
             is set to true, see if there are other matches, otherwise
             done. If set to policy (3), execute the policy entries
             matched by docsDevFilterIpPolicyId in
             docsDevFilterPolicyTable.

             If is docsDevFilterIpContinue is set to true, continue
             scanning the table for other matches, otherwise done."
        DEFVAL { discard }
        ::= { docsDevFilterIpEntry 3 }

docsDevFilterIpIfIndex OBJECT-TYPE
        SYNTAX      InterfaceIndexOrZero
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "The entry interface to which this filter applies. The
             value corresponds to ifIndex for either a CATV MAC or
             another interface. If the value is zero, the
             filter applies to all interfaces. Default value in Cable
             Modems is the index of the customer-side (e.g. ethernet)
             interface(s). In Cable Modem Termination Systems, this
             object MUST be specified to create a row in this table.

             Note that according to the DOCSIS OSSIv1.1 specification
             [OSSI1.1], ifIndex '1' means that this row applies to
             all CPE (customer-facing) interfaces."
        ::= { docsDevFilterIpEntry 4 }

docsDevFilterIpDirection OBJECT-TYPE
        SYNTAX INTEGER {
            inbound(1),
            outbound(2),
            both(3)
        }
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "Determines whether the filter is applied to inbound(1)
             traffic, outbound(2) traffic, or traffic in both(3)
             directions."



Expires July 2003                                              [Page 40]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        DEFVAL { inbound }
        ::= { docsDevFilterIpEntry 5 }

docsDevFilterIpBroadcast OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "If set to true(1), the filter only applies to multicast
             and broadcast traffic. If set to false(2), the filter
             applies to all traffic."
        DEFVAL { false }
        ::= { docsDevFilterIpEntry 6 }

docsDevFilterIpSaddr OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "The source IP address, or portion thereof, that is to be
             matched for this filter.  The source address is first
             masked (and'ed) against docsDevFilterIpSmask before being
             compared  to this value.  A value of 0 for this object
             and 0 for the mask matches all IP addresses."
        DEFVAL { '00000000'h }
        ::= { docsDevFilterIpEntry 7 }

docsDevFilterIpSmask OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "A bit mask that is to be applied to the source address
             prior to matching. This mask is not necessarily the same
             as a subnet mask, but 1's bits must be leftmost and
             contiguous."
        DEFVAL { '00000000'h }
        ::= { docsDevFilterIpEntry 8 }

docsDevFilterIpDaddr OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "The destination IP address, or portion thereof, that is
             to be matched for this filter. The destination address is
             first masked (and'ed) against docsDevFilterIpDmask before
             being compared to this value.  A value of 0 for this object



Expires July 2003                                              [Page 41]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


             and 0 for the mask matches all IP addresses."
        DEFVAL { '00000000'h }
        ::= { docsDevFilterIpEntry 9 }

docsDevFilterIpDmask OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "A bit mask that is to be applied to the destination
             address prior to matching. This mask is not necessarily
             the same as a subnet mask, but 1's bits must be leftmost
             and contiguous."
        DEFVAL { '00000000'h }
        ::= { docsDevFilterIpEntry 10 }

docsDevFilterIpProtocol OBJECT-TYPE
        SYNTAX Integer32 (0..256)
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "The IP protocol value that is to be matched. For example:
             icmp is 1, tcp is 6, udp is 17. A value of 256 matches
             ANY protocol."
        DEFVAL { 256 }
        ::= { docsDevFilterIpEntry 11 }

docsDevFilterIpSourcePortLow OBJECT-TYPE
        SYNTAX      InetPortNumber
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "This is the inclusive lower bound of the transport-layer
             source port range that is to be matched. If the IP
             protocol of the packet is neither UDP nor TCP, this
             object is ignored during matching."
        DEFVAL { 0 }
        ::= { docsDevFilterIpEntry 12 }

docsDevFilterIpSourcePortHigh OBJECT-TYPE
        SYNTAX      InetPortNumber
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "This is the inclusive upper bound of the transport-layer
             source port range that is to be matched. If the IP
             protocol of the packet is neither UDP nor TCP, this
             object is ignored during matching."



Expires July 2003                                              [Page 42]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        DEFVAL { 65535 }
        ::= { docsDevFilterIpEntry 13 }

docsDevFilterIpDestPortLow OBJECT-TYPE
        SYNTAX      InetPortNumber
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "This is the inclusive lower bound of the transport-layer
             destination port range that is to be matched. If the IP
             protocol of the packet is neither UDP nor TCP, this
             object is ignored during matching."
        DEFVAL { 0 }
        ::= { docsDevFilterIpEntry 14 }

docsDevFilterIpDestPortHigh OBJECT-TYPE
        SYNTAX      InetPortNumber
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "This is the inclusive upper bound of the transport-layer
             destination port range that is to be matched. If the IP
             protocol of the packet is neither UDP nor TCP, this
             object is ignored during matching."
        DEFVAL { 65535 }
        ::= { docsDevFilterIpEntry 15 }

docsDevFilterIpMatches OBJECT-TYPE
        SYNTAX      Counter32
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "Counts the number of times this filter was matched.
             This object is initialized to 0 at boot, or at row
             creation, and is reset only upon reboot."
        ::= { docsDevFilterIpEntry 16 }

docsDevFilterIpTos  OBJECT-TYPE
        SYNTAX      OCTET STRING ( SIZE (1))
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "This is the value to be matched to the packet's
             TOS (Type of Service) value (after the TOS value
             is AND'd with docsDevFilterIpTosMask).  A value for this
             object of 0 and a mask of 0 matches all TOS values."
        DEFVAL { '00'h }
        ::= { docsDevFilterIpEntry 17 }



Expires July 2003                                              [Page 43]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


docsDevFilterIpTosMask OBJECT-TYPE
        SYNTAX      OCTET STRING ( SIZE (1) )
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "The mask to be applied to the packet's TOS value before
             matching."
        DEFVAL { '00'h }
        ::= { docsDevFilterIpEntry 18 }

docsDevFilterIpContinue OBJECT-TYPE
        SYNTAX      TruthValue
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "If this value is set to true, and docsDevFilterIpControl
             is anything but discard (1), continue scanning and
             applying policies."
        DEFVAL { false }
        ::= { docsDevFilterIpEntry 19 }

docsDevFilterIpPolicyId OBJECT-TYPE
        SYNTAX      Integer32 (0..2147483647)
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "This object points to an entry in docsDevFilterPolicyTable.
             If docsDevFilterIpControl is set to policy (3), execute
             all matching policies in docsDevFilterPolicyTable.
             If no matching policy exists, treat as if
             docsDevFilterIpControl were set to accept (1).
             If this object is set to the value of 0, there is no
             matching policy, and docsDevFilterPolicyTable MUST NOT be
             consulted."
        DEFVAL { 0 }
        ::= { docsDevFilterIpEntry 20 }


--
-- Policy Mapping Table
--

docsDevFilterPolicyTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF DocsDevFilterPolicyEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "A Table which maps between a policy group ID and a set of



Expires July 2003                                              [Page 44]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


             policies to be applied.  All rows with the same
             docsDevFilterPolicyId are part of the same policy group
             and are applied in the order in which they are in this
             table.

             docsDevFilterPolicyTable exists to allow multiple policy
             actions to be applied to any given classified packet. The
             policy actions are applied in index order. For example:

             Index   ID    Type    Action
              1      1      TOS     1
              9      5      TOS     1
              12     1      IPSEC   3

             This says that a packet which matches a filter with
             policy id 1, first has TOS policy 1 applied (which might
             set the TOS bits to enable a higher priority), and next
             has the IPSEC policy 3 applied (which may result in the
             packet being dumped into a secure VPN to a remote
             encryptor).

             Policy ID 0 is reserved for default actions and is
             applied only to packets which match no filters in
             docsDevFilterIpTable."
        ::= { docsDevFilter 5 }

docsDevFilterPolicyEntry OBJECT-TYPE
        SYNTAX      DocsDevFilterPolicyEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "An entry in the docsDevFilterPolicyTable. Entries are
             created by Network Management. To create an entry,
             docsDevFilterPolicyId and docsDevFilterPolicyAction
             must be specified."
        INDEX { docsDevFilterPolicyIndex }
        ::= { docsDevFilterPolicyTable 1 }

DocsDevFilterPolicyEntry ::= SEQUENCE {
            docsDevFilterPolicyIndex   Integer32,
            docsDevFilterPolicyId      Integer32,
            docsDevFilterPolicyType    INTEGER, -- obsolete
            docsDevFilterPolicyAction  Integer32, -- obsolete
            docsDevFilterPolicyStatus  RowStatus,
            docsDevFilterPolicyPtr     RowPointer
        }

docsDevFilterPolicyIndex OBJECT-TYPE



Expires July 2003                                              [Page 45]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        SYNTAX      Integer32 (1..2147483647)
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION "Index value for the table."
        ::= { docsDevFilterPolicyEntry 1 }

docsDevFilterPolicyId OBJECT-TYPE
        SYNTAX      Integer32 (0..2147483647)
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
             "Policy ID for this entry. A policy ID can apply to
              multiple rows of this table, all relevant policies are
              executed. Policy 0 (if populated) is applied to all
              packets which do not match any of the filters. N.B. If
              docsDevFilterIpPolicyId is set to 0, it DOES NOT match
              policy 0 of this table."
        ::= { docsDevFilterPolicyEntry 2 }

docsDevFilterPolicyType OBJECT-TYPE
        SYNTAX INTEGER {
            other(1),
            tos (2)
        }
        MAX-ACCESS  read-create
        STATUS      obsolete
        DESCRIPTION
             "This object was removed from the policy mapping table
              with the introduction of external policy action tables
              prior to publication as RFC 2669."
        ::= { docsDevFilterPolicyEntry 3}

docsDevFilterPolicyAction OBJECT-TYPE
        SYNTAX      Integer32 (1..2147483647)
        MAX-ACCESS  read-create
        STATUS      obsolete
        DESCRIPTION
             "This object was removed from the policy mapping table
              with the introduction of external policy action tables
              prior to publication as RFC 2669."
        ::= { docsDevFilterPolicyEntry 4 }

docsDevFilterPolicyStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "Object used to create an entry in this table."



Expires July 2003                                              [Page 46]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        ::= { docsDevFilterPolicyEntry 5 }

docsDevFilterPolicyPtr OBJECT-TYPE
        SYNTAX      RowPointer
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "This object points to a row in an applicable filter policy
             table.  Currently, the only standard policy table is
             docsDevFilterTosTable. Per the textual convention, this
             object points to the first accessible object in the row.
             E.g. to point to a row in docsDevFilterTosTable with an
             index of 21, the value of this object would be the object
             identifier docsDevTosStatus.21.

             Vendors must adhere to the same convention when adding
             vendor specific policy table extensions.

             The default upon row creation is a null pointer which
             results in no policy action being taken."
        DEFVAL { zeroDotZero }
        ::= { docsDevFilterPolicyEntry 6 }

--
-- TOS Policy action table
--

docsDevFilterTosTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF DocsDevFilterTosEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
             "Table used to describe Type of Service (TOS) bits
             processing.

             This table is an adjunct to the docsDevFilterIpTable, and
             the docsDevFilterPolicy table.  Entries in the latter
             table can point to specific rows in this (and other)
             tables and cause specific actions to be taken.  This table
             permits the manipulation of the value of the Type of
             Service bits in the IP header of the matched packet as
             follows:

             Set the tosBits of the packet to
                (tosBits & docsDevFilterTosAndMask) |
                docsDevFilterTosOrMask

             This construct allows you to do a clear and set of all



Expires July 2003                                              [Page 47]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


             the TOS bits in a flexible manner."
        ::= { docsDevFilter 6 }

docsDevFilterTosEntry OBJECT-TYPE
        SYNTAX      DocsDevFilterTosEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
             "A TOS policy entry."
        INDEX { docsDevFilterTosIndex }
        ::= { docsDevFilterTosTable 1 }

DocsDevFilterTosEntry ::= SEQUENCE {
            docsDevFilterTosIndex   Integer32,
            docsDevFilterTosStatus  RowStatus,
            docsDevFilterTosAndMask OCTET STRING,
            docsDevFilterTosOrMask  OCTET STRING
        }

docsDevFilterTosIndex OBJECT-TYPE
        SYNTAX      Integer32 (1..2147483647)
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "The unique index for this row.  There are no ordering
             requirements for this table and any valid index may be
             specified."
        ::= { docsDevFilterTosEntry 1 }

docsDevFilterTosStatus OBJECT-TYPE
        SYNTAX      RowStatus
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "The object used to create and delete entries in this
             table. A row created by specifying just this object
             results in a row which specifies no change to the TOS
             bits.   A row may be created using either the create-and-go
             or create-and-wait paradigms. There is no restriction on
             the ability to change values in this row while the row is
             active."
        ::= { docsDevFilterTosEntry 2 }

docsDevFilterTosAndMask OBJECT-TYPE
        SYNTAX      OCTET STRING (SIZE (1))
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION



Expires July 2003                                              [Page 48]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


            "This value is bitwise AND'd with the matched  packet's
             TOS bits."
        DEFVAL { 'ff'h }
        ::= { docsDevFilterTosEntry 3 }

docsDevFilterTosOrMask OBJECT-TYPE
        SYNTAX      OCTET STRING (SIZE (1))
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "After bitwise AND'ing with the above bits, the packet's
             TOS bits are bitwise OR'd with these bits, and the
             packet's TOS BITS are set to that value."
        DEFVAL { '00'h }
        ::= { docsDevFilterTosEntry 4 }

docsDevFilterIpV6AuxTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF DocsDevFilterIpV6AuxEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "This table augments docsDevFilterIpTable with objects
             that allow filtering of IPv6 packets. The objects in this
             table exactly mirror the IPv4 objects in
             docsDevFilterIpTable, but become active for purposes of
             filtering if and only if docsDevFilterIpType is set to
             ipv6."
        ::= { docsDevFilter 7 }

docsDevFilterIpV6AuxEntry OBJECT-TYPE
        SYNTAX      DocsDevFilterIpV6AuxEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "This augments the existing objects in
             docsDevFilterIpEntry, but by default the objects in this
             entry have no effect on filtering as docsDevFilterIpType
             defaults to ipv4 upon row creation."
        AUGMENTS   { docsDevFilterIpEntry }
        ::= { docsDevFilterIpV6AuxTable 1 }

DocsDevFilterIpV6AuxEntry ::= SEQUENCE {
        docsDevFilterIpType     InetAddressType,
        docsDevFilterIpV6Saddr  InetAddressIPv6,
        docsDevFilterIpV6Smask  InetAddressIPv6,
        docsDevFilterIpV6Daddr  InetAddressIPv6,
        docsDevFilterIpV6Dmask  InetAddressIPv6
    }



Expires July 2003                                              [Page 49]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


docsDevFilterIpType OBJECT-TYPE
        SYNTAX  InetAddressType
        MAX-ACCESS read-create
        STATUS  current
        DESCRIPTION
            "This object controls whether this filter entry refers to
             IP v4 or v6 type packets.  If this object is ipv4, then the
             IpAddress objects docsDevFilterEntry apply, otherwise if
             this object is ipv6 then the remaining objects in this
             entry apply."
        DEFVAL { ipv4 }
        ::= { docsDevFilterIpV6AuxEntry 1}

docsDevFilterIpV6Saddr OBJECT-TYPE
        SYNTAX  InetAddressIPv6
        MAX-ACCESS read-create
        STATUS  current
        DESCRIPTION
            "The source address IPv6 address or portion thereof that
             is to be matched for this filter.  The packet's source
             address is first masked (and'ed) against
             docsDevFilterIpV6Smask before being compared to this value.
             A value of of all zeros for this object and for the mask
             matches all IPv6 addresses."
        DEFVAL { '00000000000000000000000000000000'h }
        ::= { docsDevFilterIpV6AuxEntry 2 }

docsDevFilterIpV6Smask OBJECT-TYPE
        SYNTAX  InetAddressIPv6
        MAX-ACCESS read-create
        STATUS  current
        DESCRIPTION
            "A bit mask that is to be applied to the packet's source
             address prior to matching.  The mask is not necessarily the
             same as a subnet mask, the the 1's bits must be leftmost
             and contiguous."
        DEFVAL { '00000000000000000000000000000000'h }
        ::= { docsDevFilterIpV6AuxEntry 3 }

docsDevFilterIpV6Daddr OBJECT-TYPE
        SYNTAX  InetAddressIPv6
        MAX-ACCESS read-create
        STATUS  current
        DESCRIPTION
            "The destination address IPv6 address or portion thereof
             that is to be matched for this filter.  The packet's source
             address is first masked (and'ed) against
             docsDevFilterIpV6Dmask before being compared to this value.



Expires July 2003                                              [Page 50]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


             A value of of all zeros for this object and for the mask
             matches all IPv6 addresses."
        DEFVAL { '00000000000000000000000000000000'h }
        ::= { docsDevFilterIpV6AuxEntry 4 }

docsDevFilterIpV6Dmask OBJECT-TYPE
        SYNTAX  InetAddressIPv6
        MAX-ACCESS read-create
        STATUS  current
        DESCRIPTION
            "A bit mask that is to be applied to the packet's
             destination address prior to matching.  The mask is not
             necessarily the same as a subnet mask, the the 1's bits
             must be leftmost and contiguous."
        DEFVAL { '00000000000000000000000000000000'h }
        ::= { docsDevFilterIpV6AuxEntry 5 }

--
-- CPE IP Management and anti spoofing group.  Only implemented on
-- Cable Modems.
--

docsDevCpe OBJECT IDENTIFIER ::= { docsDevMIBObjects 7}

docsDevCpeEnroll OBJECT-TYPE
        SYNTAX      INTEGER {
            none(1),
            any(2)
        }
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "This object controls the population of
             docsDevFilterCpeTable.
             If set to none, the filters must be set manually.
             If set to any, the CM wiretaps the packets originating
             from the ethernet and enrolls up to docsDevCpeIpMax
             addresses based on the source IPv4 or v6 addresses of those
             packets. At initial system startup, default value for this
             object is any(2)."
        ::= { docsDevCpe 1 }

docsDevCpeIpMax OBJECT-TYPE
        SYNTAX      Integer32 (-1..2147483647)
        MAX-ACCESS  read-write
        STATUS      current
        DESCRIPTION
            "This object controls the maximum number of CPEs allowed



Expires July 2003                                              [Page 51]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


             to be learned behind this device. If set to zero, any
             number of CPEs may connect up to the maximum permitted for
             the device.
             If set to -1, no filtering is done on CPE source addresses,
             and no entries are made in the docsDevFilterCpeTable via
             learning. If an  attempt is made to set this to a number
             greater than that permitted for the device, it is set to
             that maximum. At initial system startup, default value for
             this object is -1."
        ::= { docsDevCpe 2 }

docsDevCpeTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF DocsDevCpeEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "This table lists the IP addresses seen (or permitted) as
             source addresses in packets originating from the customer
             interface on this device. In addition, this table can be
             provisioned with the specific addresses permitted for the
             CPEs via the normal row creation mechanisms.


             N.B.  Management action can add entries in this table and
             in docsDevCpeIpTable past the value of docsDevCpeIpMax.
             docsDevCpeIpMax ONLY restricts the ability of the CM to
             automatically add learned addresses."
        ::= { docsDevCpe 3 }

docsDevCpeEntry OBJECT-TYPE
        SYNTAX      DocsDevCpeEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "An entry in the docsDevFilterCpeTable. There is one entry
             for each IP CPE seen or provisioned. If docsDevCpeIpMax
             is set to -1, this table is ignored, otherwise: Upon
             receipt of an IP packet from the customer interface of the
             CM, the source IP address is checked against this table. If
             the address is in the table, packet processing continues.
             If the address is not in the table, but docsDevCpeEnroll
             is set to any and the sum of the  table sizes of
             docsDevCpeTable and docsDevCpeV6Table is less than
             docsDevCpeIpMax, the address is added to the table and
             packet processing continues. Otherwise, the packet is
             dropped.

             The filtering actions specified by this table occur after



Expires July 2003                                              [Page 52]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


             any LLC filtering (docsDevFilterLLCTable), but prior
             to any IP filtering (docsDevFilterIpTable,
             docsDevNmAccessTable)."
        INDEX   { docsDevCpeIp }
        ::= {docsDevCpeTable 1 }

DocsDevCpeEntry ::= SEQUENCE {
            docsDevCpeIp      IpAddress,
            docsDevCpeSource  INTEGER,
            docsDevCpeStatus  RowStatus
        }

docsDevCpeIp OBJECT-TYPE
        SYNTAX      IpAddress
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "The IP address to which this entry applies.

             N.B.  Neither the all zeros or all ones addresses may be
             used as the value of this object."
        ::= { docsDevCpeEntry 1 }

docsDevCpeSource OBJECT-TYPE
        SYNTAX      INTEGER {
            other(1),
            manual(2),
            learned(3)
        }
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "This object describes how this entry was created. If the
             value is manual(2), this row was created by a network
             management action (either configuration, or SNMP set).
             If set to learned(3), then it was found via
             looking at the source IP address of a received packet."
        ::= { docsDevCpeEntry 2 }

docsDevCpeStatus OBJECT-TYPE
        SYNTAX  RowStatus
        MAX-ACCESS  read-create
        STATUS  current
        DESCRIPTION
            "Standard object to manipulate rows. To create a row in this
             table, you only need to specify this object. Management
             stations SHOULD use the create-and-go mechanism for
             creating rows in this table."



Expires July 2003                                              [Page 53]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        ::= { docsDevCpeEntry 3 }

docsDevCpeV6Table OBJECT-TYPE
        SYNTAX      SEQUENCE OF DocsDevCpeV6Entry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "This table lists the IP V6 addresses seen (or permitted) as
             source addresses in packets originating from the customer
             interface on this device. In addition, this table can be
             provisioned with the specific addresses permitted for the
             CPEs via the normal row creation mechanisms.

             N.B.  Management action can add entries in this table and
             in docsDevCpeIpTable past the value of docsDevCpeIpMax.
             docsDevCpeIpMax ONLY restricts the ability of the CM to
             automatically add learned addresses.

             This table exactly mirrors docsDevCpeTable and applies only
             to IPv6 addresses."
        ::= { docsDevCpe 4 }

docsDevCpeV6Entry OBJECT-TYPE
        SYNTAX      DocsDevCpeV6Entry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "An entry in the docsDevFilterCpeTable. There is one entry
             for each IP V6 CPE seen or provisioned. If docsDevCpeIpMax
             is set to -1, this table is ignored, otherwise: Upon
             receipt of an IPv6 packet from the customer interface of
             the CM, the source IP address is checked against this
             table. If the address is in the table, packet processing
             continues. If the address is not in the table, but
             docsDevCpeEnroll is set to any and the sum of the table
             sizes for docsDevCpeTable and docsDevCpeV6Tble is less than
             docsDevCpeIpMax, the address is added to the table and
             packet processing continues. Otherwise, the packet is
             dropped.

             The filtering actions specified by this table occur after
             any LLC filtering (docsDevFilterLLCTable), but prior
             to any IP filtering (docsDevFilterIpTable,
             docsDevNmAccessTable)."
        INDEX   { docsDevCpeV6Ip }
        ::= {docsDevCpeV6Table 1 }

DocsDevCpeV6Entry ::= SEQUENCE {



Expires July 2003                                              [Page 54]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


            docsDevCpeV6Ip      InetAddressIPv6,
            docsDevCpeV6Source  INTEGER,
            docsDevCpeV6Status  RowStatus
        }

docsDevCpeV6Ip OBJECT-TYPE
        SYNTAX      InetAddressIPv6
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
            "The IP address to which this entry applies.

             N.B. Neither the all zeros or all ones addresses may be
             used as values for this object."
        ::= { docsDevCpeV6Entry 1 }

docsDevCpeV6Source OBJECT-TYPE
        SYNTAX      INTEGER {
            other(1),
            manual(2),
            learned(3)
        }
        MAX-ACCESS  read-only
        STATUS      current
        DESCRIPTION
            "This object describes how this entry was created. If the
             value is manual(2), this row was created by a network
             management action (either configuration, or SNMP set).
             If set to learned(3), then it was found via looking at the
             source IP address of a received packet."
        ::= { docsDevCpeV6Entry 2 }

docsDevCpeV6Status OBJECT-TYPE
        SYNTAX  RowStatus
        MAX-ACCESS  read-create
        STATUS  current
        DESCRIPTION
            "Standard object to manipulate rows. To create a row in this
             table, you only need to specify this object. Management
             stations SHOULD use the create-and-go mechanism for
             creating rows in this table."
        ::= { docsDevCpeV6Entry 3 }

docsDevVacmAccessExtTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF DocsDevVacmAccessExtEntry
        MAX-ACCESS not-accessible
        STATUS  current
        DESCRIPTION



Expires July 2003                                              [Page 55]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


            "This table extends the VACM access table by adding an
             object which represents the interface(s) to which the
             referenced VACM view applies."
        ::= { docsDevMIBObjects 8 }

docsDevVacmAccessExtEntry OBJECT-TYPE
        SYNTAX  DocsDevVacmAccessExtEntry
        MAX-ACCESS not-accessible
        STATUS  current
        DESCRIPTION
            "This entry logically extends vacmAccessEntry with an
             interface index object."
        AUGMENTS   { vacmAccessEntry }
        ::= {docsDevVacmAccessExtTable 1 }

DocsDevVacmAccessExtEntry ::= SEQUENCE {
        docsDevVacmAccessIfIndex        InterfaceIndexOrZero
    }

docsDevVacmAccessIfIndex OBJECT-TYPE
        SYNTAX      InterfaceIndexOrZero
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "The entry interface to which this filter applies.  The
             value corresponds to ifIndex for either a CATV MAC or
             another network interface. If the value is zero, the filter
             applies to all interfaces. In Cable Modems, the default
             value is the customer side interface(s). In Cable Modem
             Termination Systems, this object has to be specified to
             create a row in this table.

             Note that according to the DOCSIS OSSIv1.1 specification
             [OSSI1.1], ifIndex '1' means that this row applies to
             all CPE (customer-facing) interfaces."
        ::= { docsDevVacmAccessExtEntry 1 }

--
-- Placeholder for notifications/traps.
--

docsDevNotification OBJECT IDENTIFIER   ::= { docsDev 2 }

--
-- Conformance definitions
--

-- This is the obsolete OID root of RFC 2669 conformance



Expires July 2003                                              [Page 56]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


-- docsDevConformance  OBJECT IDENTIFIER   ::= { docsDev 3 }

docsDevConformanceV2  OBJECT IDENTIFIER   ::= { docsDev 4 }
docsDevGroupsV2       OBJECT IDENTIFIER   ::= { docsDevConformanceV2 1}
docsDevCompliancesV2  OBJECT IDENTIFIER   ::= { docsDevConformanceV2 2}

docsDevBasicComplianceV2 MODULE-COMPLIANCE
        STATUS  current
        DESCRIPTION
            "The compliance statement for DOCSIS Cable Modems and
             Cable Modem Termination Systems."

MODULE  -- docsDev

-- conditionally mandatory groups

GROUP docsDevBaseGroupV2
        DESCRIPTION
            "Mandatory in Cable Modems, optional in Cable Modem
             Termination Systems."

GROUP docsDevEventGroupV2
        DESCRIPTION
            "Mandatory in Cable Modems, optional in Cable Modem
             Termination Systems."

GROUP docsDevFilterGroupV2
        DESCRIPTION
            "Mandatory in Cable Modems, optional in Cable Modem
             Termination Systems."

GROUP docsDevNmAccessGroupV2
        DESCRIPTION
            "The objects in this group are only accessible from
             cable devices which are not operating in SNMP
             Coexistence mode [RFC2576] nor in SNMPv3 mode
             [RFC3410].

             With respect to devices that are required (by other
             specifications, e.g. [OSSI1.1]) to support the legacy
             SNMPv1/v2c docsDevNmAccess mode for backward
             compatibility, this group is mandatory in Cable Modems
             and is optional in Cable Modem Termination Systems."

GROUP docsDevServerGroupV2
        DESCRIPTION
            "This group is mandatory in Cable Modems, and MUST
             NOT be implemented in Cable Modem Termination Systems."



Expires July 2003                                              [Page 57]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


GROUP docsDevSoftwareGroupV2
        DESCRIPTION
            "Mandatory in Cable Modems, optional in Cable Modem
             Termination Systems."

GROUP docsDevCpeGroupV2
        DESCRIPTION
            "This group is optional in Cable Modems, and MUST NOT
             be implemented in Cable Modem Termination Systems.
             See [SUBMGT-MIB] for a similar CMTS capability."

GROUP docsDevIpV6Group
        DESCRIPTION
            "This group is mandatory in IPv6-aware Cable Modems."

GROUP docsDevIpV6CpeGroup
        DESCRIPTION
            "This group is optional in IPv6-aware Cable Modems."

GROUP docsDevSnmpCoexistGroup
        DESCRIPTION
            "Mandatory in Cable Modems that support SNMPv3 [OSSI1.1],
             optional in Cable Modem Termination Systems."

OBJECT docsDevDateTime
         MIN-ACCESS read-only
         DESCRIPTION
             "It is compliant to implement this object as read-only."

OBJECT docsDevSTPControl
         SYNTAX INTEGER { noStFilterBpdu(2) }
         MIN-ACCESS read-only
         DESCRIPTION
             "It is compliant to implement this object as read-only.
              Devices need only support noStFilterBpdu(2)."

OBJECT docsDevIgmpModeControl
         SYNTAX INTEGER { passive(1) }
         MIN-ACCESS read-only
         DESCRIPTION
             "It is compliant to implement this object as read-only.
              Devices need only support passive(1)."

OBJECT docsDevSwServerAddressType
         SYNTAX InetAddressType { ipv4(1) }
         DESCRIPTION
             "An implementation is only required to support IPv4
              addresses."



Expires July 2003                                              [Page 58]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


OBJECT docsDevSwServerAddress
         SYNTAX  InetAddress (SIZE(4))
         DESCRIPTION
             "An implementation is only required to support IPv4
              addresses."

OBJECT docsDevServerDhcpAddressType
         SYNTAX InetAddressType { ipv4(1) }
         DESCRIPTION
             "An implementation is only required to support IPv4
              addresses."

OBJECT docsDevServerDhcpAddress
         SYNTAX  InetAddress (SIZE(4))
         DESCRIPTION
             "An implementation is only required to support IPv4
              addresses."

OBJECT docsDevServerTimeAddressType
         SYNTAX InetAddressType { ipv4(1) }
         DESCRIPTION
             "An implementation is only required to support IPv4
              addresses."

OBJECT docsDevServerTimeAddress
         SYNTAX  InetAddress (SIZE(4))
         DESCRIPTION
             "An implementation is only required to support IPv4
              addresses."

OBJECT docsDevServerConfigTftpAddressType
         SYNTAX InetAddressType { ipv4(1) }
         DESCRIPTION
             "An implementation is only required to support IPv4
              addresses."

OBJECT docsDevServerConfigTftpAddress
         SYNTAX  InetAddress (SIZE(4))
         DESCRIPTION
             "An implementation is only required to support IPv4
              addresses."

OBJECT docsDevEvReporting
         MIN-ACCESS read-only
         DESCRIPTION
             "It is compliant to implement this object as read-only.
              Devices need only support localNonvolatile(0)."




Expires July 2003                                              [Page 59]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


OBJECT docsDevEvSyslogAddressType
         SYNTAX InetAddressType { ipv4(1) }
         DESCRIPTION
             "An implementation is only required to support IPv4
              addresses."

OBJECT docsDevEvSyslogAddress
         SYNTAX  InetAddress (SIZE(4))
         DESCRIPTION
             "An implementation is only required to support IPv4
              addresses."

OBJECT docsDevSwServerTransportProtocol
         SYNTAX INTEGER { tftp(1) }
         DESCRIPTION
             "An implementation is only required to support TFTP
              software image downloads."

         ::= { docsDevCompliancesV2 1 }

docsDevBaseGroupV2 OBJECT-GROUP
        OBJECTS {
             docsDevRole,
             docsDevDateTime,
             docsDevResetNow,
             docsDevSerialNumber,
             docsDevSTPControl,
             docsDevIgmpModeControl,
             docsDevMaxCpe
        }
        STATUS      current
        DESCRIPTION
            "A collection of objects providing device status and
             control."
        ::= { docsDevGroupsV2 1 }

docsDevNmAccessGroupV2 OBJECT-GROUP
        OBJECTS {
             docsDevNmAccessIp,
             docsDevNmAccessIpMask,
             docsDevNmAccessCommunity,
             docsDevNmAccessControl,
             docsDevNmAccessInterfaces,
             docsDevNmAccessStatus,
             docsDevNmAccessTrapVersion
        }
        STATUS      deprecated
        DESCRIPTION



Expires July 2003                                              [Page 60]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


            "A collection of objects for controlling access to SNMP
             objects.

             Deprecated in favor of SNMPv3 and coexistence MIB."
        ::= { docsDevGroupsV2 2 }

docsDevSoftwareGroupV2 OBJECT-GROUP
        OBJECTS {
            docsDevSwAdminStatus,
            docsDevSwOperStatus,
            docsDevSwCurrentVers,
            docsDevSwServerAddressType,
            docsDevSwServerAddress,
            docsDevSwServerTransportProtocol
        }
        STATUS      current
        DESCRIPTION
            "A collection of objects for controlling software
             downloads."
        ::= { docsDevGroupsV2 3 }

docsDevServerGroupV2 OBJECT-GROUP
        OBJECTS {
            docsDevServerBootState,
            docsDevServerDhcpAddressType,
            docsDevServerDhcpAddress,
            docsDevServerTimeAddressType,
            docsDevServerTimeAddress,
            docsDevServerConfigTftpAddressType,
            docsDevServerConfigTftpAddress,
            docsDevServerConfigFile
        }
        STATUS      current
        DESCRIPTION
            "A collection of objects providing status about server
             provisioning."
        ::= { docsDevGroupsV2 4 }

docsDevEventGroupV2 OBJECT-GROUP
        OBJECTS {
            docsDevEvControl,
            docsDevEvThrottleAdminStatus,
            docsDevEvThrottleThreshold,
            docsDevEvThrottleInterval,
            docsDevEvReporting,
            docsDevEvFirstTime,
            docsDevEvLastTime,
            docsDevEvCounts,



Expires July 2003                                              [Page 61]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


            docsDevEvLevel,
            docsDevEvId,
            docsDevEvText,
            docsDevEvSyslogAddressType,
            docsDevEvSyslogAddress,
            docsDevEvThrottleThresholdExceeded
        }
        STATUS      current
        DESCRIPTION
            "A collection of objects used to control and monitor
             events."
        ::= { docsDevGroupsV2 5 }

docsDevFilterGroupV2 OBJECT-GROUP
        OBJECTS {
            docsDevFilterLLCUnmatchedAction,
            docsDevFilterIpDefault,
            docsDevFilterLLCStatus,
            docsDevFilterLLCIfIndex,
            docsDevFilterLLCProtocolType,
            docsDevFilterLLCProtocol,
            docsDevFilterLLCMatches,
            docsDevFilterIpStatus,
            docsDevFilterIpControl,
            docsDevFilterIpIfIndex,
            docsDevFilterIpDirection,
            docsDevFilterIpBroadcast,
            docsDevFilterIpSaddr,
            docsDevFilterIpSmask,
            docsDevFilterIpDaddr,
            docsDevFilterIpDmask,
            docsDevFilterIpProtocol,
            docsDevFilterIpSourcePortLow,
            docsDevFilterIpSourcePortHigh,
            docsDevFilterIpDestPortLow,
            docsDevFilterIpDestPortHigh,
            docsDevFilterIpMatches,
            docsDevFilterIpTos,
            docsDevFilterIpTosMask,
            docsDevFilterIpContinue,
            docsDevFilterIpPolicyId,
            docsDevFilterPolicyId,
            docsDevFilterPolicyStatus,
            docsDevFilterPolicyPtr,
            docsDevFilterTosStatus,
            docsDevFilterTosAndMask,
            docsDevFilterTosOrMask
        }



Expires July 2003                                              [Page 62]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


        STATUS      current
        DESCRIPTION
            "A collection of objects to specify filters at link layer
             and IP layer."
        ::= { docsDevGroupsV2 6 }

docsDevCpeGroupV2 OBJECT-GROUP
        OBJECTS {
           docsDevCpeEnroll,
           docsDevCpeIpMax,
           docsDevCpeSource,
           docsDevCpeStatus
        }
        STATUS      current
        DESCRIPTION
            "A collection of objects used to control the number
             and specific values of IP addresses allowed for
             associated Customer Premises Equipment (CPE)."
        ::= { docsDevGroupsV2 7 }

docsDevIpV6Group OBJECT-GROUP
        OBJECTS {
           docsDevFilterIpType,
           docsDevFilterIpV6Saddr,
           docsDevFilterIpV6Smask,
           docsDevFilterIpV6Daddr,
           docsDevFilterIpV6Dmask
           }
        STATUS     current
        DESCRIPTION
            "These objects were added to deal with the filtering of
             IPV6 addresses."
        ::= { docsDevGroupsV2 8 }

docsDevIpV6CpeGroup OBJECT-GROUP
        OBJECTS {
           docsDevCpeV6Source,
           docsDevCpeV6Status
           }
        STATUS     current
        DESCRIPTION
            "A collection of objects used to control the number
             and specific values of IPv6 addresses allowed for
             associated Customer Premises Equipment (CPE)."
        ::= { docsDevGroupsV2 9 }

docsDevSnmpCoexistGroup OBJECT-GROUP
        OBJECTS {



Expires July 2003                                              [Page 63]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


           docsDevVacmAccessIfIndex
        }
        STATUS     current
        DESCRIPTION
            "This objects has been added to retain the capability
             from docsDevNmAccessTable to restrict SNMP access on
             a per interface basis."
        ::= { docsDevGroupsV2 10 }

docsDevDeprecatedGroup OBJECT-GROUP
        OBJECTS {
           docsDevSwServer,
           docsDevSwFilename,
           docsDevServerDhcp,
           docsDevServerTime,
           docsDevServerTftp,
           docsDevEvSyslog,
           docsDevEvThrottleInhibited
        }
        STATUS     deprecated
        DESCRIPTION
            "These objects have been deprecated to deal with the
             IPv6, SNMPv3 and redefinition of the CM as a multiple CPE
             device.  They MAY be implemented, but will be removed in
             the next iteration of this MIB."
        ::= { docsDevGroupsV2 11 }

docsDevObsoletedGroup OBJECT-GROUP
        OBJECTS {
           docsDevFilterPolicyType,
           docsDevFilterPolicyAction
        }
        STATUS     obsolete
        DESCRIPTION
            "These objects have been obsoleted, and MUST NOT be
             implemented."
        ::= { docsDevGroupsV2 12 }

END

5.  Acknowledgments

   This document is a production of the IPCDN Working Group, and is a
   revision of RFC 2669, "Cable Device Management Information Base for
   DOCSIS Compliant Cable Modems and Cable Modem Termination Systems"
   [RFC2669].  Mike StJohns and Guenter Roeck served well as the editors
   of previous versions of this MIB.




Expires July 2003                                              [Page 64]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


   The editor specifically wishes to thank Howard Abramson, Eduardo
   Cardona, Andre Lejeune, Kevin Marez, Jean-Francois Mule, Greg
   Nakanishi, Pak Siripunkaw, Boris Tsekinovski, and Bill Yost for their
   contributions to this document.

6.  Revision Descriptions

   [Note to RFC Editor - this section may be removed upon publication as
   an RFC.]  This document contains the following revisions over
   RFC2669:

   o    All IPv4 address objects were either deprecated and replaced, or
        mirrored with IPv6 objects where appropriate, following the
        guidelines of RFC 3291 [RFC3291].

   o    Objects which were obviated by the SNMPv3 coexistence MIBs have
        been deprecated, e.g. docsDevNmAccessTable.  The SNMPv3 VACM
        table has been augmented with an object which can limit access
        based on the interface on which an agent (CM) receives SNMP
        packets.

   o    A new object, docsDevSwServerTransportProtocol, has been added
        to docsDevSoftware, and other object DESCRIPTIONs have been
        modified, to enable the use of either TFTP or HTTP for software
        downloads to the device.

   o    A new object, docsDevIgmpModeControl, has been added to control
        passive versus active IGMP modem operation [DOCSIS-IGMP].

   o    A new object, docsDevMaxCpe, has been added to report the
        maximum number of CPEs granted network access across the CM.

   o    Minor updates to the description text have been made to a number
        of objects to clarify their meaning.

   o    The compliance statements were updated to reflect current
        requirements.  The entire RFC2669 compliance statement was
        omitted.

7.  Normative References

   [RFC1350] Sollins, K., "The TFTP Protocol (Revision 2)", STD 33,
             RFC 1350, July 1992.

   [RFC1858] Ziemba, G., Reed, D., and P. Traina, "Security
             Considerations for IP Fragment Filtering", RFC 1858,
             October 1995.




Expires July 2003                                              [Page 65]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


   [RFC1945] Berners-Lee, T., Fielding, R., and H. Frystyk,
             "Hypertext Transfer Protocol -- HTTP/1.0", RFC 1945,
             May 1996.

   [RFC2119] Bradner, S., "Key words for use in RFCs to Indicate
             Requirement Levels", RFC 2119, Harvard University,
             March 1997.

   [RFC2576] Frye, R., Levi, D., Routhier, S., and B. Wijnen,
             "Coexistence between Version 1, Version 2, and Version 3
             of the Internet-standard Network Management Framework",
             RFC 2576, March 2000.

   [RFC2578] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
             Rose, M. and S. Waldbusser, "Structure of Management
             Information Version 2 (SMIv2)", STD 58, RFC 2578, April
             1999.

   [RFC2579] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
             Rose, M. and S. Waldbusser, "Textual Conventions for
             SMIv2", STD 58, RFC 2579, April 1999.

   [RFC2580] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
             Rose, M. and S. Waldbusser, "Conformance Statements for
             SMIv2", STD 58, RFC 2580, April 1999.

   [RFC2616] Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,
             Masinter, L., Leach, P., and T. Berners-Lee,  "Hypertext
             Transfer Protocol -- HTTP/1.1", RFC 2616, June 1999.

   [RFC2669] StJohns, M., "Cable Device Management Information Base for
             DOCSIS Compliant Cable Modems and Cable Modem Termination
             Systems", RFC 2669, August 1999.

   [RFC3128] Miller, I., "Protection against a Variant of the Tiny
             Fragment Attack", RFC 3128, June 2001.

   [RFC3291] Daniele, M., Haberman, B., Routhier, S., and J.
             Schoenwaelder, "Textual Conventions for Internet Network
             Addresses", RFC 3291, May 2002.

   [RFC3414] Blumenthal, U. and B. Wijnen, "User-based Security Model
             (USM) for version 3 of the Simple Network Management
             Protocol (SNMPv3)", RFC 3414, December 2002.

   [RFC3415] Wijnen, B., Presuhn, R., and K. McCloghrie, "View-based
             Access Control Model (VACM) for the Simple Network
             Management Protocol (SNMP)", RFC 3415, December 2002.



Expires July 2003                                              [Page 66]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


   [BPI] "Data-Over-Cable Service Interface Specifications: DOCSIS
         1.0 Baseline Privacy Interface Specification SCTE 22-2 2002",
         SCTE Data Standards Subcommittee, 2002,
         http://www.scte.org/standards/.

   [BPIPLUS] "Data-Over-Cable Service Interface Specifications:
             Baseline Privacy Plus Interface Specification
             SP-BPI+-I09-020830", CableLabs, August 2002,
             http://www.cablemodem.com/specifications/.

   [RFI1.0] "Data-Over-Cable Service Interface Specifications:
            DOCSIS 1.0 Radio Frequency Interface Specification SCTE
            22-1 2002", SCTE Data Standards Subcommittee, 2002,
            http://www.scte.org/standards/.

   [RFI1.1] "Data-Over-Cable Service Interface Specifications:
            Radio Frequency Interface Specification
            SP-RFIv1.1-I09-020830", CableLabs, August 2002,
            http://www.cablemodem.com/specifications/.

   [OSSI1.0] "Data-Over-Cable Service Interface Specifications:
             DOCSIS 1.0 Operations Support System Interface
             Specification Radio Frequency Interface SCTE 22-3 2002",
             SCTE Data Standards Subcommittee, 2002,
             http://www.scte.org/standards/.

   [OSSI1.1] "Data-Over-Cable Service Interface Specifications:
             Operations Support System Interface Specification
             SP-OSSIv1.1-I06-020830", CableLabs, August 2002,
             http://www.cablemodem.com/specifications/.

   [MTA-PROV] "PacketCable(TM) MTA Device Provisioning
              Specification PKT-SP-PROV-I05-021127", CableLabs,
              November 2002,
              http://www.packetcable.com/specifications/.

8.  Informative References

   [RFC1224] L. Steinberg, "Techniques for Managing Asynchronously
             Generated Alerts", RFC 1224, May 1991.

   [RFC3410] Case, J., Mundy, R., Partain, D. and B. Stewart,
             "Introduction and Applicability Statements for Internet-
             Standard Management Framework", RFC 3410, December 2002.

   [DOCSIS-IGMP] Abramson, H., "Application of the IGMP MIB, RFC 2933,
                 and Cable Device MIB, RFC 2669, to Docsis 1.1 Devices",
                 work in progress.



Expires July 2003                                              [Page 67]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


   [EVENT-MIB] Gao, J., and P. Siripunkaw, "Event Notification
               Management Information Base for DOCSIS 1.1 Compliant
               Cable Modems and Cable Modem Termination Systems",
               work in progress.

   [QOS-MIB] Patrick, M, "Data Over Cable System Quality of Service
             Management Information Base (DOCSIS-QOS MIB)", work in
             progress.

   [SUBMGT-MIB] Sawyer, W., "Management Information Base for DOCSIS
                Cable Modem Termination Systems for Subscriber
                Management", work in progress.

9.  Security Considerations

   This MIB relates to a system which will provide metropolitan public
   internet access.  As such, improper manipulation of the objects
   represented by this MIB may result in denial of service to a large
   number of end-users.  In addition, manipulation of the
   docsDevNmAccessTable, docsDevFilterLLCTable, docsDevFilterIpTable and
   the elements of the docsDevCpe group may allow an end-user to
   increase their service levels, spoof their IP addresses, change the
   permitted management stations, or affect other end-users in either a
   positive or negative manner.

   It is recommended that the implementers prevent the "tiny fragment"
   and "overlapping fragment" attacks for the IP filtering tables in
   this MIB, as discussed in [RFC1858] and [RFC3128].  Prevention of
   these attacks can be implemented with the following rules, when TCP
   source and/or destination port filtering is enabled:

   o    admit all packets with fragment offset >= 2

   o    discard all packets with fragment offset = 1, or with fragment
        offset = 0 AND fragment payload length < 16.

   o    apply filtering rules to all packets with fragment offset = 0.

   This MIB does not affect confidentiality of services on a cable modem
   system.  [BPI] and [BPIPLUS] specify the implementation of the DOCSIS
   Baseline Privacy and Baseline Privacy Plus mechanisms for data
   transmission confidentiality.

   There are a number of management objects defined in this MIB module
   with a MAX-ACCESS clause of read-write and/or read-create.  Such
   objects may be considered sensitive or vulnerable in some network
   environments.  The support for SET operations in a non-secure
   environment without proper protection can have a negative effect on



Expires July 2003                                              [Page 68]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


   network operations.  These are the tables and objects and their
   sensitivity/vulnerability:

   o    The use of docsDevNmAccessTable to specify management stations
        is considered to be only limited protection and does not protect
        against attacks which spoof the management station's IP address.
        The use of stronger mechanisms such as SNMPv3 security should be
        considered where possible.  Specifically, SNMPv3 USM [RFC3414]
        and VACM [RFC3415] MUST be used with any v3 agent which
        implements this MIB.

   o    The CM may have its software changed by the actions of the
        management system.  An improper software download may result in
        substantial vulnerabilities and the loss of the ability of the
        management system to control the cable modem.  A cable device
        SHOULD implement the code verification mechanisms of [BPIPLUS]
        to verify the source and integrity of downloaded software
        images.

   o    The device may be reset by setting docsDevResetNow = true(1).
        This causes the device to reload its configuration files as well
        as eliminating all previous non-persistent network management
        settings.  As such, this may provide a vector for attacking the
        system.

   o    Setting docsDevEvThrottleAdminStatus = unconstrained(1) (which
        is also the DEFVAL) may cause flooding of traps, which can
        disrupt network service.

   Some of the readable objects in this MIB module (i.e., objects with a
   MAX-ACCESS other than not-accessible) may be considered sensitive or
   vulnerable in some network environments.  It is thus important to
   control even GET access to these objects and possibly to even encrypt
   the values of these objects when sending them over the network via
   SNMP.  These are the tables and objects and their
   sensitivity/vulnerability:

   o    Rows from docsDevNmAccessTable may provide sufficient
        information for attackers to spoof management stations which
        have management access to the device.

   o    The docsDevSwCurrentVers object may provide hints as to the
        software vulnerabilities of the cable device.

   o    The docsDevFilterLLCTable and docsDevFilterLLCTable may provide
        clues for attacking the cable device and other subscriber
        devices.




Expires July 2003                                              [Page 69]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


   SNMP versions prior to SNMPv3 did not include adequate security.
   Even if the network itself is secure (for example by using IPSec),
   even then, there is no control as to who on the secure network is
   allowed to access and GET/SET (read/change/create/delete) the objects
   in this MIB module.

   It is RECOMMENDED that implementers consider the security features as
   provided by the SNMPv3 framework (see [RFC3410], section 8),
   including full support for the SNMPv3 cryptographic mechanisms (for
   authentication and privacy).

   Further, deployment of SNMP versions prior to SNMPv3 is NOT
   RECOMMENDED. Instead, it is RECOMMENDED to deploy SNMPv3 and to
   enable cryptographic security.  It is then a customer/operator
   responsibility to ensure that the SNMP entity giving access to an
   instance of this MIB module, is properly configured to give access to
   the objects only to those principals (users) that have legitimate
   rights to indeed GET or SET (change/create/delete) them.

10.  Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights.  Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11.  Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard.  Please address the information to the IETF Executive
   Director.

11.  Editor's Address

      Richard Woundy
      Comcast Cable
      27 Industrial Avenue
      Chelmsford, MA 01824
      U.S.A.



Expires July 2003                                              [Page 70]

INTERNET-DRAFT          DOCSIS Cable Device MIB             January 2003


      Phone: +1 978 244 4010
      Email: richard_woundy@cable.comcast.com

12.  Full Copyright Statement

   Copyright (C) The Internet Society (2003). All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the  purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.
















Expires July 2003                                              [Page 71]
