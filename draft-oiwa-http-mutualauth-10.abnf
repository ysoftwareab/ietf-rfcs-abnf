kc1="...", ...              |<-- [user info]
vkc="...", ...              |
Mutual-auth-scheme = "Mutual"
bare-token       = 1*(%x30-39 / %x41-5A / %x61-7A / "-" / "_")
extension-token  = "-" bare-token 1*("." bare-token)
extensive-token  = bare-token / extension-token
EQ               = BWS "=" BWS
extension-param  = extensive-token EQ value
value            = extensive-token / integer
                     / hex-fixed-number
                     / base64-fixed-number / string
integer          = "0" / (%x31-39 *%x30-39)      ; no leading zeros
hex-fixed-number = 1*(%x30-39 / %x41-46 / %x61-66)
string           = quoted-string
base64-fixed-number = quoted-string  ; see main text for limitation

         Figure 3: BNF syntax for common elements used in protocol

realm="xxxx", stale=0, version=-draft10

challenge-401-INIT = Mutual-auth-scheme 1*SP 1#param-401-INIT
param-401-INIT  = version / algorithm / validation
                    / auth-domain / realm / pwd-hash / stale
                    / extension-param
version         = "version"     EQ extensive-token
algorithm       = "algorithm"   EQ extensive-token
validation      = "validation"  EQ extensive-token
auth-domain     = "auth-domain" EQ string
realm           = "realm"       EQ string
pwd-hash        = "pwd-hash"    EQ extensive-token
stale           = bare-token

          Figure 4: BNF syntax for challenges in 401-INIT header

realm="xxxx", stale=1, version=-draft10

user="xxxx", kc1=xxxx, version=-draft10
credentials-KEX-C1 = Mutual-auth-scheme 1*SP 1#param-req-KEX-C1
param-req-KEX-C1 = version / algorithm / validation
                     / auth-domain / realm / user / kc1
                     / extension-param
user             = "user" EQ string
kc1              = "kc1"  EQ value

       Figure 5: the BNF syntax for the header in req-KEX-C1 message

realm="xxxx", sid=xxxx, ks1=xxxx, nc-max=x, nc-window=x, time=x,
path="xxxx", version=-draft10
challenge-401-KEX-S1 = Mutual-auth-scheme 1*SP 1#param-401-KEX-S1
param-401-KEX-S1  = version / algorithm / validation
                      / auth-domain / realm / sid / ks1
                      / nc-max / nc-window / time / path
                      / extension-param
sid               = "sid"       EQ hex-fixed-number
ks1               = "ks1"       EQ value
nc-max            = "nc-max"    EQ integer
nc-window         = "nc-window" EQ integer
time              = "time"      EQ integer
path              = "path"      EQ string

       Figure 6: the BNF syntax for the header in 401-KEX-S1 message

sid=xxxx, nc=x, vc=xxxx, version=-draft10

credentials-req-VFY-C = Mutual-auth-scheme 1*SP 1#param-req-VFY-C
param-req-VFY-C  = version / algorithm / validation
                     / auth-domain / realm / sid / nc / vkc
                     / extension-param
nc               = "nc" EQ integer
vkc              = "vkc" EQ value

       Figure 7: the BNF syntax for the header in req-VFY-C message

auth-info-200-VFY-S = Mutual-auth-scheme 1*SP 1#param-200-VFY-S
param-200-VFY-S     = version / sid / vks / logout-timeout
vks                 = "vks"            EQ value
logout-timeout      = "logout-timeout" EQ integer

           Figure 8: BNF syntax for header in 200-VFY-S message

pi = H(VS(algorithm) | VS(auth-domain) | VS(realm) | VS(username) |
VK_c = H(octet(4) | OCTETS(K_c1) | OCTETS(K_s1) | OCTETS(z) | VI(nc)
VK_s = H(octet(3) | OCTETS(K_c1) | OCTETS(K_s1) | OCTETS(z) | VI(nc)
b_1 = OCTETS(H(OCTETS(H(octet(6) | OCTETS(K_c1) | OCTETS(K_s1) |
b_2 = OCTETS(H(OCTETS(H(octet(7) | OCTETS(K_c1) | OCTETS(K_s1) |
Mutual-auth-scheme = "Mutual"

challenge-Mutual   = Mutual-auth-scheme 1*SP 1#param
credentials-Mutual = Mutual-auth-scheme 1*SP 1#param
auth-info-Mutual   = Mutual-auth-scheme 1*SP 1#param
       ; for WWW-Authenticate, Authorization, Authentication-Info resp.

param            = key EQ value         ; either a specific or
                                            ;    an extension parameter
key              = token
value            = token / integer    ; parse to token/string first
                     / hex-fixed-number
                     / base64-fixed-number / string
integer          = "0" / (%x31-39 *%x30-39)      ; no leading zeros
hex-fixed-number = 1*(%x30-39 / %x41-46 / %x61-66)
base64-fixed-number = quoted-string
string           = quoted-string

      Figure 10: Common BNF syntax for header values in the protocol

