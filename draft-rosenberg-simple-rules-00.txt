

SIMPLE                                                      J. Rosenberg
Internet-Draft                                               dynamicsoft
Expires: August 9, 2004                                 February 9, 2004


                      Presence Authorization Rules
                    draft-rosenberg-simple-rules-00

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups. Note that other
   groups may also distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on August 9, 2004.

Copyright Notice

   Copyright (C) The Internet Society (2004). All Rights Reserved.

Abstract

   Authorization is a key function in presence systems. Authorization
   policies, also known as authorization rules, specify what presence
   information can be given to which watchers, and when. This
   specification defines an Extensible Markup Language (XML) document
   format for expressing presence authorization rules. Such a document
   can be manipulated by clients using the XML Configuration Access
   Protocol (XCAP), although other techniques are permitted.









Rosenberg                Expires August 9, 2004                 [Page 1]

Internet-Draft           Presence Authorization            February 2004


Table of Contents

   1.    Introduction . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.    Terminology  . . . . . . . . . . . . . . . . . . . . . . . .  4
   3.    Structure of Permission Statements . . . . . . . . . . . . .  5
   3.1   Conditions . . . . . . . . . . . . . . . . . . . . . . . . .  5
   3.1.1 Identity . . . . . . . . . . . . . . . . . . . . . . . . . .  5
   3.1.2 Anonymous  . . . . . . . . . . . . . . . . . . . . . . . . .  5
   3.2   Actions  . . . . . . . . . . . . . . . . . . . . . . . . . .  6
   3.2.1 Accept Subscription  . . . . . . . . . . . . . . . . . . . .  6
   3.2.2 Provide Presence . . . . . . . . . . . . . . . . . . . . . .  6
   3.3   Transformations  . . . . . . . . . . . . . . . . . . . . . .  6
   3.3.1 Show Namespace . . . . . . . . . . . . . . . . . . . . . . .  7
   3.3.2 Show Tuple . . . . . . . . . . . . . . . . . . . . . . . . .  7
   3.3.3 Show Element . . . . . . . . . . . . . . . . . . . . . . . .  8
   4.    XML Schema . . . . . . . . . . . . . . . . . . . . . . . . .  9
   5.    Example Document . . . . . . . . . . . . . . . . . . . . . . 11
   6.    XCAP Usage . . . . . . . . . . . . . . . . . . . . . . . . . 12
   6.1   Application Unique ID  . . . . . . . . . . . . . . . . . . . 12
   6.2   Structure of Permission Statements . . . . . . . . . . . . . 12
   6.3   Additional Constraints . . . . . . . . . . . . . . . . . . . 12
   6.4   Naming Conventions . . . . . . . . . . . . . . . . . . . . . 12
   6.5   Authorization Policies . . . . . . . . . . . . . . . . . . . 12
   6.6   XML Schema . . . . . . . . . . . . . . . . . . . . . . . . . 12
   7.    Security Considerations  . . . . . . . . . . . . . . . . . . 13
   8.    IANA Considerations  . . . . . . . . . . . . . . . . . . . . 14
   8.1   XCAP Application Usage ID  . . . . . . . . . . . . . . . . . 14
   8.2   URN Sub-Namespace Registration . . . . . . . . . . . . . . . 14
   8.3   XML Schema Registrations . . . . . . . . . . . . . . . . . . 15
         Normative References . . . . . . . . . . . . . . . . . . . . 16
         Informative References . . . . . . . . . . . . . . . . . . . 18
         Author's Address . . . . . . . . . . . . . . . . . . . . . . 18
         Intellectual Property and Copyright Statements . . . . . . . 19


















Rosenberg                Expires August 9, 2004                 [Page 2]

Internet-Draft           Presence Authorization            February 2004


1. Introduction

   The Session Initiation Protocol (SIP) for Instant Messaging and
   Presence (SIMPLE) specifications allow a user, called a watcher, to
   subscribe to another user, called a presentity [15], in order to
   learn their presence information [17]. This subscription is handed by
   a presence agent. In order to process the subscription, the presence
   agent must make a determination about whether the subscription is
   authorized. This authorization decision includes whether or not to
   accept the subscription, but also includes decisions about when the
   watcher should receive notifications, and when it does receive them,
   what the content of those notifications should be.

   Typically, the authorization decision will be a combination of the
   authorization policies of the provider, combined with the
   authorization policies of the presentity. In order for the PA to
   compute the final authorization decision, it needs access to the
   presentity's authorization policies.

   [10] specifies a framework for representing such authorization
   policies, and is applicable to systems such as geo-location and
   presence. In that framework, an authorization document is a sequence
   of rule elements. Each rule element contains a conditions element, an
   actions element, and a transformations element. The conditions
   element specifies under what conditions the rule is to be applied to
   a subscription request. The actions element tells the server what
   actions to take against the request. The transformations element
   indicates how the presence data is to be manipulated before being
   presented to that watcher. [10] identifies a small number of specific
   conditions, actions and permissions common to presence and location
   services, and leaves it to other specifications, such as this one, to
   fill in usage specific details.

   These documents can be manipulated by clients using several means.
   One such mechanism is the XML Configuration Access Protocol (XCAP)
   [2]. This specification defines the details necessary for using XCAP
   to manage presence authorization documents.














Rosenberg                Expires August 9, 2004                 [Page 3]

Internet-Draft           Presence Authorization            February 2004


2. Terminology

   In this document, the key words "MUST", "MUST NOT", "REQUIRED",
   "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
   and "OPTIONAL" are to be interpreted as described in RFC 2119 [1] and
   indicate requirement levels for compliant implementations.













































Rosenberg                Expires August 9, 2004                 [Page 4]

Internet-Draft           Presence Authorization            February 2004


3. Structure of Permission Statements

   A permission statement is an XML document, formatted according to the
   schema defined in [10]. As described in [10], this document is
   composed of three parts - conditions, actions, and transformations.
   Each action or transformation, which is also called an attribute, has
   the property of being a positive grant of information to the watcher.
   As a result, there is a well-defined mechanism for combining actions
   and transformations obtained from several sources. This mechanism is
   privacy safe, since the lack of any action or transformation can only
   result in less information being presented to a watcher.

   This section defines the new conditions, actions and transformations
   defined by this specification.

3.1 Conditions

3.1.1 Identity

   Although the "identity" element is defined in [10], that
   specification indicates that the interpretation of the "uri" element
   depends on the specific protocol in use and its authentication
   mechanisms. This sub-section defines that interpretation for systems
   based on [17] [[NOTE: "uri" is a bad choice of name for this element,
   since its not a URI. That will be corrected in a subsequent revision
   of the common policy document.]]

   For requests that are authenticated using  SIP [9] digest
   authentication [8], the user part of the URI is matched against the
   username attribute in the Authorization request header field. The
   domain part of the URI is matched against the realm attribute in the
   Authorization request header field.

   For requests that are authenticated using [18], the username and
   domain part of the URI are matched against the user and host parts of
   the SIP URI in the P-Asserted-Identity header field.

   For requests that are authenticated using [11], the username and
   domain part of the URI are matched against the user and host parts of
   the SIP URI in the From header field of the Asserted Identity Body
   [12].

3.1.2 Anonymous

   The "anonymous" element, which is a boolean type, indicates whether
   or not the request was authenticated using the "anonymous" username
   defined in RFC 3261. It allows for the presentity to specify policies
   based on whether or not the requestor was anonymous.



Rosenberg                Expires August 9, 2004                 [Page 5]

Internet-Draft           Presence Authorization            February 2004


3.2 Actions

   The "confirmation" element specified in [10] applies to presence
   systems. When TRUE, it implies that the subscription is placed in the
   pending state. Confirmation is provided by modifying the rules to
   accept the subscription.

3.2.1 Accept Subscription

   The "accept-subscription" element represents a boolean action. If
   TRUE, it means that the subscription is to be accepted. If FALSE, it
   means that the subscription is to be rejected. If this element is
   undefined (i.e., not present in the any matching rule), it has a
   value of FALSE and therefore causes the subscription to be blocked.

      NOTE WELL: Placing a value of FALSE for this element does not
      guarantee that a subscription is denied! If any matching rule has
      a value of TRUE for "accept-subscription", the subscription will
      be granted due to the combining rules defined in [10].


3.2.2 Provide Presence

   The "provide-presence" element is used to implement the "polite
   blocking" feature defined in RFC 2779 [16]. The element represents a
   boolean data type. When TRUE, it means that actual presence data
   (subject to any transformations present in the rules) is given to the
   watcher. If FALSE, it means that the subscription is to be
   politely-blocked. This implies that the subscription is accepted, but
   inaccurate presence data is provided to the watcher. The specific
   mechanism for generating inaccurate presence data is at the
   discretion of the implementation. Providing a single tuple [3] with a
   basic status of closed represents one reasonable choice.

   This action only applies if subscription was accepted as a result of
   any "accept-subscription" permissions in matching rules.

   If this element is not present in any matching rules, it takes on the
   default value of FALSE. This means that, by default, a user is
   politely blocked if their subscription is accepted. Actual presence
   information must be explicitly granted through a "provide-presence"
   action.

3.3 Transformations

   Each of the sections below defines a particular transformation that
   is applied to the presence document before distribution. Each of
   these transformations is applied to the document independently of any



Rosenberg                Expires August 9, 2004                 [Page 6]

Internet-Draft           Presence Authorization            February 2004


   of the others, and the order of application is irrelevant. Each
   transformation filters the presence document based on a particular
   "axis" - removing tuples by class, elements by namespace, and
   elements by qualified name. If such a transformation results in an
   invalid or empty presence document, then no document is sent to the
   watcher.

   Because a particular component of the presence document can be
   selected by multiple axes, and because the default is to remove
   information, it may be necessary to include several different
   transformations in order to include one specific element.

3.3.1 Show Namespace

   This element, "show-namespace" is a "set" data type. The content of
   the element is either the element "all-ns", which is defined as the
   set of all namespaces, or else is a series of "ns" elements, each of
   which identifies a specific namespace that is in the set. Any
   namespaces identified by this element remain in the document when it
   is distributed to a watcher. Elements in the document from namespaces
   not in the set are removed.

   The default value for this element when not present is
   "urn:ietf:params:xml:ns:pidf", which is the namespace identified in
   [3]. As a result, if this element is omitted, the result is the
   namespace for the basic presence document.

   If the "show-namespace" element is present, it SHOULD contain
   "urn:ietf:params:xml:ns:pidf" as a member (either explicitly or
   through the "all-ns" element). If not, the filtering operation will
   result in an invalid presence document, and based on the rules above,
   no document will be passed to watchers.

3.3.2 Show Tuple

   This element, "show-tuple", is a "set" data type. It identifies the
   set of tuples, identified by value of the "class" element [13], that
   are passed to the watcher. The content of this element is either the
   element "all-tuples", which implies the set of all tuples from the
   unfiltered presence document, else is a series of "class" elements.
   Each "class" element contains a string that identifies a specific
   class to be included in the presence document. If a tuple contains
   the class element, and that class is not present in the set, that
   tuple is removed from the document. If a tuple does not contain a
   class element, it is not subject to filtration by the "show-tuple"
   transformation.

   The default value of this element is NULL, which corresponds to the



Rosenberg                Expires August 9, 2004                 [Page 7]

Internet-Draft           Presence Authorization            February 2004


   empty set. As a result, if no matching rules contain a "show-tuple"
   element, all tuples containing a class element would be removed from
   the presence document.

3.3.3 Show Element

   This element, "show-element", is a "set" data type. It identifies the
   set of XML elements, identified by qualified element name, which are
   to be passed to a watcher in the presence document. The content of
   this element is either "all-elements", which implies the set of all
   elements from the unfiltered presence document, "basic-elements",
   which implies the set of elements defined in [3], and/or a series of
   "el" elements. Each "el" element contains a string that identifies an
   XML element, by qualified element name. Any XML element in a presence
   document not contained in this set is removed from the document.

   The default value of this element is "basic-elements", which contains
   the values "presence", "tuple", "note", "status", "timestamp",
   "contact", and "basic" from the namespace
   "urn:ietf:params:xml:ns:pidf". These correspond to the elements
   defined in the PIDF specification. As a result, if no matching rules
   contain the "show-element" transformation, only the basic presence
   information containined in [3] will be provided to watchers.

   If the "show-element" transformation is present, it SHOULD contain
   sufficient elements to result in a presence document compliant to the
   schema defined in [3]. This includes at least the "presence" element.
























Rosenberg                Expires August 9, 2004                 [Page 8]

Internet-Draft           Presence Authorization            February 2004


4. XML Schema


   <?xml version="1.0" encoding="UTF-8"?>
   <xs:schema targetNamespace="urn:ietf:params:xml:ns:pres-rules"
   xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns:cr="urn:ietf:params:xml:ns:common-policy"
   xmlns:pr="urn:ietf:params:xml:ns:pres-rules"
   elementFormDefault="qualified" attributeFormDefault="unqualified">
   <xs:import namespace="urn:ietf:params:xml:ns:common-policy"/>
   <xs:element name="anonymous" type="xs:boolean"
     substitutionGroup="cr:condition"/>
   <xs:element name="accept-subscription"
     type="xs:boolean" substitutionGroup="cr:action"/>
   <xs:element name="provide-presence" type="xs:boolean"
     substitutionGroup="cr:action"/>
   <xs:element name="show-namespace" substitutionGroup="cr:transformation">
    <xs:complexType>
     <xs:choice>
      <xs:element name="all-ns"/>
      <xs:element name="ns" maxOccurs="unbounded">
       <xs:complexType>
        <xs:simpleContent>
         <xs:extension base="xs:string">
          <xs:attribute name="id" type="xs:string" use="optional"/>
         </xs:extension>
        </xs:simpleContent>
       </xs:complexType>
      </xs:element>
     </xs:choice>
    </xs:complexType>
   </xs:element>

   <xs:element name="show-tuple" substitutionGroup="cr:transformation">
    <xs:complexType>
     <xs:choice>
      <xs:element name="all-tuples"/>
      <xs:element name="class" maxOccurs="unbounded">
       <xs:complexType>
        <xs:simpleContent>
         <xs:extension base="xs:string">
          <xs:attribute name="id" type="xs:string" use="optional"/>
         </xs:extension>
        </xs:simpleContent>
       </xs:complexType>
      </xs:element>
     </xs:choice>
    </xs:complexType>



Rosenberg                Expires August 9, 2004                 [Page 9]

Internet-Draft           Presence Authorization            February 2004


   </xs:element>

   <xs:element name="show-element" substitutionGroup="cr:transformation">
    <xs:complexType>
     <xs:choice>
      <xs:element name="all-elements"/>
      <xs:sequence>
       <xs:element name="basic-elements" minOccurs="0"/>
       <xs:element name="el" type="xs:string" minOccurs="0"
                   maxOccurs="unbounded"/>
      </xs:sequence>
     </xs:choice>
    </xs:complexType>
   </xs:element>
   </xs:schema>




































Rosenberg                Expires August 9, 2004                [Page 10]

Internet-Draft           Presence Authorization            February 2004


5. Example Document

   The example document shown below specifies authorization policy for
   user@example.com. That user is allowed to subscribe, and will receive
   information from the basic presence document, in addition to the
   "placetype" element defined in [13]. Notice how the document must
   specify both a show-namespace and show-element transformation in
   order for the "placetype" element to be passed to the watcher.


   <?xml version="1.0" encoding="UTF-8"?>
   <cr:ruleset xmlns="urn:ietf:params:xml:ns:pres-rules"
   xmlns:cr="urn:ietf:params:xml:ns:common-policy"
   xmlns:rpid="urn:ietf:params:xml:ns:rpid"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <cr:rule id="1">
     <cr:conditions>
      <cr:identity>
       <cr:uri>user@example.com</cr:uri>
      </cr:identity>
     </cr:conditions>

     <cr:actions>
       <accept-subscription>true</accept-subscription>
       <provide-presence>true</provide-presence>
     </cr:actions>

     <cr:transformations>

       <show-namespace>
        <ns>urn:ietf:params:xml:ns:rpid</ns>
       </show-namespace>

       <show-element>
        <basic-elements/>
        <el>rpid:placetype</el>
       </show-element>

     </cr:transformations>

    </cr:rule>
   </cr:ruleset>









Rosenberg                Expires August 9, 2004                [Page 11]

Internet-Draft           Presence Authorization            February 2004


6. XCAP Usage

   The following section defines the details necessary for clients to
   manipulate presence authorization documents from a server using XCAP.

6.1 Application Unique ID

   XCAP requires application usages to define a unique application usage
   ID (AUID) in either the IETF tree or a vendor tree. This
   specification defines the "rules" AUID within the IETF tree, via the
   IANA registration in Section 8.

6.2 Structure of Permission Statements

   The structure of permission statements is defined in Section 3.

6.3 Additional Constraints

   The following are additional constraints not described by the schema:

   o  The content of an "el" element indicates the name of an XML
      element, and may be fully qualified (i.e., prefixed with a
      namespace identifier followed by a colon).

   o  TODO: Complete this list.


6.4 Naming Conventions

   When a presence agent receives a subscription for some user foo
   within a domain, it will look for all documents within http://[xcap
   root services uri]/rules/users/foo, and use all documents found
   beneath that point to guide authorization policy.

6.5 Authorization Policies

   This application usage does not modify the default XCAP authorization
   policy, which is that only a user can read, write or modify their own
   documents. A server can allow priveleged users to modify documents
   that they don't own, but the establishment and indication of such
   policies is outside the scope of this document.

6.6 XML Schema

   The XML schema is defined in Section 4.






Rosenberg                Expires August 9, 2004                [Page 12]

Internet-Draft           Presence Authorization            February 2004


7. Security Considerations

   Presence authorization policies contain very sensitive information.
   They indicate which other users are "liked" or "disliked" by a user.
   As such, when these documents are transported over a network, they
   SHOULD be encrypted.

   Modification of these documents by an attacker can disrupt the
   service seen by a user, often in subtle ways. As a result, when these
   documents are transported, the transport SHOULD provide authenticity
   and message integrity.

   In the case where XCAP is used to transfer the document, clients
   SHOULD use HTTP over TLS, and servers SHOULD define the root services
   URI as an https URI. The server SHOULD authenticate the client over
   the resulting TLS connection using HTTP digest.



































Rosenberg                Expires August 9, 2004                [Page 13]

Internet-Draft           Presence Authorization            February 2004


8. IANA Considerations

   There are several IANA considerations associated with this
   specification.

8.1 XCAP Application Usage ID

   This section registers an XCAP Application Usage ID (AUID) according
   to the IANA procedures defined in [2].

      Name of the AUID: rules

      Description: Rules are documents that describe the permissions
      that a presentity [15] has granted to users that seek to watch
      their presence.


8.2 URN Sub-Namespace Registration

   This section registers a new XML namespace, per the guidelines in
   [14]

      URI: The URI for this namespace is
      urn:ietf:params:xml:ns:pres-rules.

      Registrant Contact: IETF, SIMPLE working group, (simple@ietf.org),
      Jonathan Rosenberg (jdrosen@jdrosen.net).

      XML:


                BEGIN
                <?xml version="1.0"?>
                <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.0//EN"
                          "http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd">
                <html xmlns="http://www.w3.org/1999/xhtml">
                <head>
                  <meta http-equiv="content-type"
                     content="text/html;charset=iso-8859-1"/>
                  <title>Presence Rules Namespace</title>
                </head>
                <body>
                  <h1>Namespace for Permission Statements</h1>
                  <h2>urn:ietf:params:xml:ns:pres-rules</h2>
                  <p>See <a href="[[[URL of published RFC]]]">RFCXXXX</a>.</p>
                </body>
                </html>
                END



Rosenberg                Expires August 9, 2004                [Page 14]

Internet-Draft           Presence Authorization            February 2004


8.3 XML Schema Registrations

   This section registers an XML schema per the procedures in [14].

      URI: please assign.

      Registrant Contact: IETF, SIMPLE working group, (simple@ietf.org),
      Jonathan Rosenberg (jdrosen@jdrosen.net).

      The XML for this schema can be found as the sole content of
      Section 4.








































Rosenberg                Expires August 9, 2004                [Page 15]

Internet-Draft           Presence Authorization            February 2004


Normative References

   [1]   Bradner, S., "Key words for use in RFCs to Indicate Requirement
         Levels", BCP 14, RFC 2119, March 1997.

   [2]   Rosenberg, J., "The Extensible Markup Language (XML)
         Configuration Access Protocol (XCAP)",
         draft-ietf-simple-xcap-01 (work in progress), October 2003.

   [3]   Sugano, H. and S. Fujimoto, "Presence Information Data Format
         (PIDF)", draft-ietf-impp-cpim-pidf-08 (work in progress), May
         2003.

   [4]   Bray, T., Paoli, J., Sperberg-McQueen, C. and E. Maler,
         "Extensible Markup Language (XML) 1.0 (Second Edition)", W3C
         FirstEdition REC-xml-20001006, October 2000.

   [5]   Moats, R., "URN Syntax", RFC 2141, May 1997.

   [6]   Murata, M., St. Laurent, S. and D. Kohn, "XML Media Types", RFC
         3023, January 2001.

   [7]   Moats, R., "A URN Namespace for IETF Documents", RFC 2648,
         August 1999.

   [8]   Franks, J., Hallam-Baker, P., Hostetler, J., Lawrence, S.,
         Leach, P., Luotonen, A. and L. Stewart, "HTTP Authentication:
         Basic and Digest Access Authentication", RFC 2617, June 1999.

   [9]   Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A.,
         Peterson, J., Sparks, R., Handley, M. and E. Schooler, "SIP:
         Session Initiation Protocol", RFC 3261, June 2002.

   [10]  Schulzrinne, H., Morris, J., Tschofenig, H., Cuellar, J., Polk,
         J. and J. Rosenberg, "Common Policy",
         draft-ietf-geopriv-common-policy-00 (work in progress),
         February 2004.

   [11]  Peterson, J., "Enhancements for Authenticated Identity
         Management in the Session  Initiation Protocol (SIP)",
         draft-ietf-sip-identity-01 (work in progress), March 2003.

   [12]  Peterson, J., "SIP Authenticated Identity Body (AIB) Format",
         draft-ietf-sip-authid-body-02 (work in progress), July 2003.

   [13]  Schulzrinne, H., "RPID -- Rich Presence Information Data
         Format", draft-ietf-simple-rpid-00 (work in progress), July
         2003.



Rosenberg                Expires August 9, 2004                [Page 16]

Internet-Draft           Presence Authorization            February 2004


   [14]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688,
         January 2004.

















































Rosenberg                Expires August 9, 2004                [Page 17]

Internet-Draft           Presence Authorization            February 2004


Informative References

   [15]  Day, M., Rosenberg, J. and H. Sugano, "A Model for Presence and
         Instant Messaging", RFC 2778, February 2000.

   [16]  Day, M., Aggarwal, S., Mohr, G. and J. Vincent, "Instant
         Messaging / Presence Protocol Requirements", RFC 2779, February
         2000.

   [17]  Rosenberg, J., "A Presence Event Package for the Session
         Initiation Protocol (SIP)", draft-ietf-simple-presence-10 (work
         in progress), January 2003.

   [18]  Jennings, C., Peterson, J. and M. Watson, "Private Extensions
         to the Session Initiation Protocol (SIP) for Asserted Identity
         within Trusted Networks", RFC 3325, November 2002.


Author's Address

   Jonathan Rosenberg
   dynamicsoft
   600 Lanidex Plaza
   Parsippany, NJ  07054
   US

   Phone: +1 973 952-5000
   EMail: jdrosen@dynamicsoft.com
   URI:   http://www.jdrosen.net






















Rosenberg                Expires August 9, 2004                [Page 18]

Internet-Draft           Presence Authorization            February 2004


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights. Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11. Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard. Please address the information to the IETF Executive
   Director.


Full Copyright Statement

   Copyright (C) The Internet Society (2004). All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works. However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assignees.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION



Rosenberg                Expires August 9, 2004                [Page 19]

Internet-Draft           Presence Authorization            February 2004


   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.











































Rosenberg                Expires August 9, 2004                [Page 20]

