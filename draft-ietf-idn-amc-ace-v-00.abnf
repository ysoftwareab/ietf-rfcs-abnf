c1 = *s1;
c2 = *s2;
n = history[latest];

k = classify(refpoint,0,n);
oldrp = refpoint[s][k];
oldsum = newsum = 0;

style = literal = 0;
max_out = *output_size;

n = input[in];
k = classify(refpoint,style,n);

literal = 1;
literal = 0;
shift = uppercase_flags && uppercase_flags[in] ? 32 : 0;
delta = n - refpoint[style][k];
style = literal = 0;
max_out = *output_length;
literal = !literal;
c = input[++in];
q = base32_decode(c);
delta = (delta << 4) | (q & 0xF);
q = base32_decode(input[++in]);
delta = (delta << 5) | q;
scratch_size = ++in;
status = amc_ace_v_encode(out, output, uppercase_flags,
                            &scratch_size, scratch_space);
unicode_max_length = 256,
ace_max_size = 256,
test_case_sensitivity = case_insensitive
                          /* suitable for host names */
input_length = 0;

r = scanf("%2s%lx", uplus, &codept);
output_size = ace_max_size;
status = amc_ace_v_encode(input_length, input, uppercase_flags,
                              &output_size, output);
i = *p;
r = puts(output);
input_length = strlen(input);
pp = strchr(ldh_ascii, *p);
output_length = unicode_max_length;
status = amc_ace_v_decode(test_case_sensitivity, scratch, input,
                              &output_length, output, uppercase_flags);
r = printf("%s+%04lX\n",
                 uppercase_flags[i] ? "U" : "u",
                 (unsigned long) output[i] );
