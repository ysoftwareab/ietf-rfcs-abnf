name = definition

       The name of a rule is simply the name itself (without any 
       enclosing "<" and ">") and is separated from its definition by 
       the equal character "=". Whitespace is only significant in that 
       indentation of continuation lines is used to indicate a rule 
       definition that spans more than one line. Certain basic rules 
       are in uppercase, such as SP, LWS, HT, CRLF, DIGIT, ALPHA, etc. 
       Angle brackets are used within definitions whenever their 
       presence will facilitate discerning the use of rule names.

OCTET          = <any 8-bit sequence of data>
CHAR           = <any US-ASCII character (octets 0 - 127)>
UPALPHA        = <any US-ASCII uppercase letter "A".."Z">
LOALPHA        = <any US-ASCII lowercase letter "a".."z">
ALPHA          = UPALPHA | LOALPHA
DIGIT          = <any US-ASCII digit "0".."9">
CTL            = <any US-ASCII control character
                        (octets 0 - 31) and DEL (127)>
CR             = <US-ASCII CR, carriage return (13)>
LF             = <US-ASCII LF, linefeed (10)>
SP             = <US-ASCII SP, space (32)>
HT             = <US-ASCII HT, horizontal-tab (9)>
CRLF           = CR LF

LWS            = [CRLF] 1*( SP | HT )

TEXT           = <any OCTET except CTLs,
                        but including LWS>

HEX            = "A" | "B" | "C" | "D" | "E" | "F"
                      | "a" | "b" | "c" | "d" | "e" | "f" | DIGIT

word           = token | quoted-string

token          = 1*<any CHAR except CTLs or tspecials>

tspecials      = "(" | ")" | "<" | ">" | "@"
                      | "," | ";" | ":" | "\" | <">
                      | "/" | "[" | "]" | "?" | "="
                      | "{" | "}" | SP | HT

comment        = "(" *( ctext | comment ) ")"
ctext          = <any TEXT excluding "(" and ")">

quoted-string  = ( <"> *(qdtext) <"> )

qdtext         = <any CHAR except <"> and CTLs,
                        but including LWS>

quoted-pair    = "\" CHAR

bag            = "{" bagname 1*LWS *bagitem "}"
bagname        = token | URI
bagitem        = bag | token | quoted-string

HTTP-Version   = "HTTP" "/" 1*DIGIT "." 1*DIGIT

URI            = ( absoluteURI | relativeURI ) [ "#" fragment ]

absoluteURI    = scheme ":" *( uchar | reserved )

relativeURI    = net_path | abs_path | rel_path

net_path       = "//" net_loc [ abs_path ]
abs_path       = "/" rel_path
rel_path       = [ path ] [ ";" params ] [ "?" query ]

path           = fsegment *( "/" segment )
fsegment       = 1*pchar
segment        = *pchar

params         = param *( ";" param )
param          = *( pchar | "/" )

scheme         = 1*( ALPHA | DIGIT | "+" | "-" | "." )
net_loc        = *( pchar | ";" | "?" )
query          = *( uchar | reserved )
fragment       = *( uchar | reserved )

pchar          = uchar | ":" | "@" | "&" | "="
uchar          = unreserved | escape
unreserved     = ALPHA | DIGIT | safe | extra | national

escape         = "%" HEX HEX
reserved       = ";" | "/" | "?" | ":" | "@" | "&" | "="
extra          = "!" | "*" | "'" | "(" | ")" | ","
safe           = "$" | "-" | "_" | "." | "+"
unsafe         = CTL | SP | <"> | "#" | "%" | "<" | ">"
national       = <any OCTET excluding ALPHA, DIGIT,
                        reserved, extra, safe, and unsafe>

http_URL       = "http:" "//" host [ ":" port ] [ abs_path ]

host           = <A legal Internet host domain name
                         or IP address (in dotted-decimal form),
                         as defined by Section 2.1 of RFC 1123>

port           = *DIGIT

HTTP-date      = rfc1123-date | rfc850-date | asctime-date

rfc1123-date   = wkday "," SP date1 SP time SP "GMT"
rfc850-date    = weekday "," SP date2 SP time SP "GMT"
asctime-date   = wkday SP date3 SP time SP 4DIGIT

date1          = 2DIGIT SP month SP 4DIGIT
                        ; day month year (e.g., 02 Jun 1982)
date2          = 2DIGIT "-" month "-" 2DIGIT
                        ; day-month-year (e.g., 02-Jun-82)
date3          = month SP ( 2DIGIT | ( SP 1DIGIT ))
                        ; month day (e.g., Jun  2)

time           = 2DIGIT ":" 2DIGIT ":" 2DIGIT
                        ; 00:00:00 - 23:59:59

wkday          = "Mon" | "Tue" | "Wed"
                      | "Thu" | "Fri" | "Sat" | "Sun"

weekday        = "Monday" | "Tuesday" | "Wednesday"
                      | "Thursday" | "Friday" | "Saturday" | "Sunday"

month          = "Jan" | "Feb" | "Mar" | "Apr"
                      | "May" | "Jun" | "Jul" | "Aug"
                      | "Sep" | "Oct" | "Nov" | "Dec"

delta-seconds  = 1*DIGIT

charset = "US-ASCII"
             | "ISO-8859-1" | "ISO-8859-2" | "ISO-8859-3"
             | "ISO-8859-4" | "ISO-8859-5" | "ISO-8859-6"
             | "ISO-8859-7" | "ISO-8859-8" | "ISO-8859-9"
             | "ISO-2022-JP" | "ISO-2022-JP-2" | "ISO-2022-KR"
             | "UNICODE-1-1" | "UNICODE-1-1-UTF-7" | "UNICODE-1-1-UTF-8"
             | token

content-coding          = "gzip" | "compress" | token

transfer-coding         = "chunked" | token

Chunked-Body   = *chunk
                        "0" CRLF
                        footer
                        CRLF

chunk          = chunk-size CRLF
                        chunk-data CRLF

chunk-size     = hex-no-zero *HEX
chunk-data     = chunk-size(OCTET)

footer         = *<Entity-Header, excluding Content-Length
                          and Transfer-Encoding>

hex-no-zero    = <HEX excluding "0">

media-type     = type "/" subtype *( ";" parameter )
type           = token
subtype        = token

parameter      = attribute "=" value
attribute      = token
value          = token | quoted-string

product         = token ["/" product-version]
product-version = token

qvalue         = ( "0" [ "." 0*3DIGIT ] )
                      | ( "." 0*3DIGIT )
                      | ( "1" [ "." 0*3("0") ] )

language-tag  = primary-tag *( "-" subtag )

primary-tag   = 1*8ALPHA
subtag        = 1*8ALPHA

logic-bag   = "{" expression "}"

expression  = ( log-op 1*logic-bag )
                   | ( rel-op 1*field-tuple )
                   | ( "def" 1*field-name )

log-op      = "and" | "or" | "xor" | "not"
rel-op      = "eq" | "ne" | "lt" | "le" | "ge" | "gt" | "in"

field-tuple = "{" field-name ( bag | token | quoted-string ) "}"

HTTP-message   = Simple-Request            ; HTTP/0.9 messages
                      | Simple-Response
                      | Full-Request              ; HTTP/1.1 messages
                      | Full-Response

Full-Request   = Request-Line              ; Section 5.1
                        *( General-Header         ; Section 4.3
                        |  Request-Header         ; Section 5.2
                        |  Entity-Header )        ; Section 7.1
                        CRLF
                        [ Entity-Body ]           ; Section 7.2

Full-Response  = Status-Line               ; Section 6.1
                        *( General-Header         ; Section 4.3
                        |  Response-Header        ; Section 6.2
                        |  Entity-Header )        ; Section 7.1
                        CRLF
                        [ Entity-Body ]           ; Section 7.2

Simple-Request  = "GET" SP Request-URI CRLF

Simple-Response = [ Entity-Body ]

HTTP-header    = field-name ":" [ field-value ] CRLF

field-name     = token
field-value    = *( field-content | LWS )

field-content  = <the OCTETs making up the field-value
                        and consisting of either *TEXT or combinations
                        of token, tspecials, and quoted-string>

General-Header = Cache-Control            ; Section 10.8
                      | Connection               ; Section 10.9
                      | Date                     ; Section 10.17
                      | Forwarded                ; Section 10.20
                      | Keep-Alive               ; Section 10.24
                      | MIME-Version             ; Section 10.28
                      | Pragma                   ; Section 10.29
                      | Upgrade                  ; Section 10.41

Request        = Simple-Request | Full-Request

Simple-Request = "GET" SP Request-URI CRLF

Full-Request   = Request-Line              ; Section 5.1
                        *( General-Header         ; Section 4.3
                        |  Request-Header         ; Section 5.2
                        |  Entity-Header )        ; Section 7.1
                        CRLF
                        [ Entity-Body ]           ; Section 7.2

Request-Line   = Method SP Request-URI SP HTTP-Version CRLF

Method         = "OPTIONS"                ; Section 8.1
                      | "GET"                    ; Section 8.2
                      | "HEAD"                   ; Section 8.3
                      | "POST"                   ; Section 8.4
                      | "PUT"                    ; Section 8.5
                      | "PATCH"                  ; Section 8.6
                      | "COPY"                   ; Section 8.7
                      | "MOVE"                   ; Section 8.8
                      | "DELETE"                 ; Section 8.9
                      | "LINK"                   ; Section 8.10
                      | "UNLINK"                 ; Section 8.11
                      | "TRACE"                  ; Section 8.12
                      | "WRAPPED"                ; Section 8.13
                      | extension-method

extension-method = token

Request-URI    = "*" | absoluteURI | abs_path

Request-Header = Accept                   ; Section 10.1
                      | Accept-Charset           ; Section 10.2
                      | Accept-Encoding          ; Section 10.3
                      | Accept-Language          ; Section 10.4
                      | Authorization            ; Section 10.6
                      | From                     ; Section 10.21
                      | Host                     ; Section 10.22
                      | If-Modified-Since        ; Section 10.23
                      | Proxy-Authorization      ; Section 10.31
                      | Range                    ; Section 10.33
                      | Referer                  ; Section 10.34
                      | Unless                   ; Section 10.40
                      | User-Agent               ; Section 10.43

Response        = Simple-Response | Full-Response

Simple-Response = [ Entity-Body ]

Full-Response   = Status-Line               ; Section 6.1
                         *( General-Header         ; Section 4.3
                         |  Response-Header        ; Section 6.2
                         |  Entity-Header )        ; Section 7.1
                         CRLF
                         [ Entity-Body ]           ; Section 7.2

Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF

Status-Code    = "100"   ; Continue
                      | "101"   ; Switching Protocols
                      | "200"   ; OK
                      | "201"   ; Created
                      | "202"   ; Accepted
                      | "203"   ; Non-Authoritative Information
                      | "204"   ; No Content
                      | "205"   ; Reset Content
                      | "206"   ; Partial Content
                      | "300"   ; Multiple Choices
                      | "301"   ; Moved Permanently
                      | "302"   ; Moved Temporarily
                      | "303"   ; See Other
                      | "304"   ; Not Modified
                      | "305"   ; Use Proxy
                      | "400"   ; Bad Request
                      | "401"   ; Unauthorized
                      | "402"   ; Payment Required
                      | "403"   ; Forbidden
                      | "404"   ; Not Found
                      | "405"   ; Method Not Allowed
                      | "406"   ; None Acceptable
                      | "407"   ; Proxy Authentication Required
                      | "408"   ; Request Timeout
                      | "409"   ; Conflict
                      | "410"   ; Gone
                      | "411"   ; Length Required
                      | "412"   ; Unless True
                      | "500"   ; Internal Server Error
                      | "501"   ; Not Implemented
                      | "502"   ; Bad Gateway
                      | "503"   ; Service Unavailable
                      | "504"   ; Gateway Timeout
                      | extension-code

extension-code = 3DIGIT

Reason-Phrase  = *<TEXT, excluding CR, LF>

Response-Header= Location                 ; Section 10.27
                      | Proxy-Authenticate       ; Section 10.30
                      | Public                   ; Section 10.32
                      | Retry-After              ; Section 10.36
                      | Server                   ; Section 10.37
                      | WWW-Authenticate         ; Section 10.44

Entity-Header  = Allow                    ; Section 10.5
                      | Content-Encoding         ; Section 10.10
                      | Content-Language         ; Section 10.11
                      | Content-Length           ; Section 10.12
                      | Content-MD5              ; Section 10.13
                      | Content-Range            ; Section 10.14
                      | Content-Type             ; Section 10.15
                      | Content-Version          ; Section 10.16
                      | Derived-From             ; Section 10.18
                      | Expires                  ; Section 10.19
                      | Last-Modified            ; Section 10.25
                      | Link                     ; Section 10.26
                      | Title                    ; Section 10.38
                      | Transfer-Encoding        ; Section 10.39
                      | URI-header               ; Section 10.42
                      | extension-header

extension-header=HTTP-header

Entity-Body    = *OCTET

Accept         = "Accept" ":" #(
                        media-range
                        [ ";" "q" "=" qvalue ]
                        [ ";" "mxb" "=" 1*DIGIT ] )

media-range    = ( "*/*"
                      |   ( type "/" "*" )
                      |   ( type "/" subtype )
                        ) *( ";" parameter )

Accept-Charset = "Accept-Charset" ":" 1#charset

Accept-Encoding         = "Accept-Encoding" ":" 
                                 #( content-coding )

Accept-Language = "Accept-Language" ":"
                         1#( language-tag [ ";" "q" "=" qvalue ] )

Allow          = "Allow" ":" 1#method

Authorization  = "Authorization" ":" credentials

Cache-Control   = "Cache-Control" ":" 1#cache-directive

cache-directive = "cachable"
                       | "max-age" "=" delta-seconds
                       | "private" [ "=" <"> 1#field-name <"> ]
                       | "no-cache" [ "=" <"> 1#field-name <"> ]

Connection     = "Connection" ":" 1#field-name

Content-Encoding = "Content-Encoding" ":" 1#content-coding

Content-Language = "Content-Language" ":" 1#language-tag

Content-Length = "Content-Length" ":" 1*DIGIT

Content-Type   = "Content-Type" ":" media-type

Content-Version= "Content-Version" ":" quoted-string

Date           = "Date" ":" HTTP-date

Derived-From   = "Derived-From" ":" quoted-string

Expires        = "Expires" ":" HTTP-date

Forwarded      = "Forwarded" ":" #( "by" URI [ "(" product ")" ]
                        [ "for" FQDN ] )

FQDN           = <Fully-Qualified Domain Name>

From           = "From" ":" mailbox

Host           = "Host" ":" host          ; Section 3.2.2

If-Modified-Since = "If-Modified-Since" ":" HTTP-date

Keep-Alive     = "Keep-Alive" ":" 1#kaparam

kaparam        = ( "timeout" "=" delta-seconds )
                      | ( "max" "=" 1*DIGIT )
                      | ( attribute [ "=" value ] )

Last-Modified  = "Last-Modified" ":" HTTP-date

Link           = "Link" ":" #("<" URI ">"
                        [ ";" "rel" "=" relationship ]
                        [ ";" "rev" "=" relationship ]
                        [ ";" "title" "=" quoted-string ] )

relationship   = sgml-name
                      | ( <"> sgml-name *( SP sgml-name) <"> )

sgml-name      = ALPHA *( ALPHA | DIGIT | "." | "-" )

Location       = "Location" ":" absoluteURI

MIME-Version   = "MIME-Version" ":" 1*DIGIT "." 1*DIGIT

Pragma                  = "Pragma" ":" 1#pragma-directive

pragma-directive        = "no-cache" | extension-pragma
extension-pragma        = token [ "=" word ]

Proxy-Authentication    = "Proxy-Authentication" ":" challenge

Proxy-Authorization     = "Proxy-Authorization" ":" credentials

Public         = "Public" ":" 1#method

Referer        = "Referer" ":" ( absoluteURI | relativeURI )

Retry-After    = "Retry-After" ":" ( HTTP-date | delta-seconds )

Server         = "Server" ":" 1*( product | comment )

Title          = "Title" ":" *TEXT

Transfer-Encoding = "Transfer-Encoding" ":" 1#transfer-coding

Unless         = "Unless" ":" 1#logic-bag

Upgrade        = "Upgrade" ":" 1#product

URI-header  = "URI" ":" 1#( uri-mirror | uri-name | uri-variant )

uri-mirror  = "{" "mirror" <"> URI <"> "}"
uri-name    = "{" "name" <"> URI <"> "}"
uri-variant = "{" "variant" <"> URI <"> qvalue
                         [ "{" "type" <"> media-type <"> "}" ]
                         [ "{" "language" <"> 1#language-tag <"> "}" ]
                         [ "{" "encoding" <"> 1#content-coding <"> "}" ]
                         [ "{" "length" 1*DIGIT "}" ]
                         [ "{" "user-agent" "}" ]
                     "}"

User-Agent     = "User-Agent" ":" 1*( product | comment )

WWW-Authenticate        = "WWW-Authenticate" ":" 1#challenge

auth-scheme    = token

auth-param     = token "=" quoted-string

challenge      = auth-scheme 1*SP realm *( "," auth-param )

realm          = "realm" "=" realm-value
realm-value    = quoted-string

credentials    = basic-credentials
                      | auth-scheme *("," auth-param )

basic-credentials = " Basic" SP basic-cookie

basic-cookie      = <base64 [7] encoding of userid-password,
                           except not limited to 76 char/line>

userid-password   = [ token ] ":" *TEXT

