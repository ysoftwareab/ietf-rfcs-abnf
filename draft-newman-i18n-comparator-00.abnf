comparator-char  =  ALPHA / DIGIT / "-" / ";" / "=" / "."

comparator-name  =  ALPHA *253comparator-char

comparator-wild  =  ("*" / (ALPHA ["*"])) *(comparator-char ["*"])
                         ; MUST NOT exceed 255 characters total

comparator-sel   =  ["+" / "-"] comparator-name

comparator-order =  ["+" / "-"] comparator-wild

basic-comparator  =  ("i" / Language-Tag) ";basic" basic-modifiers
                          "-uca=3.1.1-uv=3.2"
                          [";custom=" 1*comparator-char ]

basic-modifiers   =  ["-2backwards"]
                          ["-blanked" / "-shifted" / "-shift-trimmed"]
                          ["-semi-stable"]
                          ["-quatlu"]
                          ["-match=accent" / "-match=case"]

match=accent   Both the first and second levels of the sort keys are
                  considered relevant to the equality and substring
                  operations (rather than the default of first level
                  only).  This makes the matching functions sensitive to
                  accentual distinctions.

match=case     The first three levels of sort keys are considered
                  relevant to the equality and substring operations.
                  This makes the matching functions sensitive to both
                  case and accentual distinctions.

