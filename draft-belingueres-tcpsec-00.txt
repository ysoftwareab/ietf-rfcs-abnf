Network Working Group                                    G. Belingueres
Internet-Draft                                   Independent Consultant
Expires: May 18, 2000                                 November 18, 1999



                          TCP Security Filter
                    draft-belingueres-tcpsec-00.txt


Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026 [1].

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups. Note that other
   groups may also distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet- Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.


Copyright Notice

   Copyright (C) The Internet Society (1999). All Rights Reserved.


1. Abstract

   This document explains how to install a security protocol in a
   virtual layer between TCP [2] and the application layer using TCP
   Filters. The method is incrementally deployable, as neither party
   will install the security layer without the other's consent.


2. Introduction

   Application layer protocols were originally used in the clear on the
   Internet. However, increased use of those protocols for sensitive
   applications has required security measures.

   The natural place to secure data is at the application level, where
   application-specific security requirements are perfectly known to be
   used to get the strongest security at the best performance.
   Unfortunately, this requires changing each and every application.

Belingueres              Expires May 18, 2000                  [Page 1]
Internet-Draft           TCP Security Filter              November 1999

   Another alternative is to secure the data at the IP level, as is done
   in IPSec [3], so that the IP packet payload is secured. While this is
   application independent, it requires to change or extend the core
   internetworking stack, and maybe those changes or extensions are not
   so trivial. Also, a solution based on IPSec may be is not so
   convenient if it is intended to be used for TCP connections security
   only, as it is for Virtual Private Networks (VPN).

   The other alternative, widely used today, is to provide the security
   as a virtual transport layer, so that the application can secure
   connections with the parties involved in the communication. For
   example SSL, and its successor TLS [4] were designed to provide
   channel-oriented security, so that an application can authenticate
   the parties involved and send and receive data protected against
   eavesdropping and forging.

   I propose signaling security requirement above TCP by negotiation
   with a TCP option. One side sends an ordered list of which security
   protocol families it supports. The other side selects one from the
   list, which commits both sides to securing higher level protocol data
   accordingly.

   More precisely, during the exchange of TCP's SYN packets, one side
   initiates a filter negotiation by announcing what security filters
   (security protocol families) it is prepared to employ. The other
   responds in the next ACK packet by listing the security filter family
   that it is prepared to accept. Thence, each side applies the agreed
   upon security protocol family to secure the application layer data.
   It means that now the parties has to "instantiate" one security
   protocol that belongs to the chosen family, so that the application
   data can be securely transported.

   An example of where this could help is the transmission of HTTP [5]
   messages secured with SSL or TLS, combination commonly known as HTTPS
   [6].

   This option is an example of a TCP filter option of the class
   described in [7].

3. Conventions used in this document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC-2119 [8].

   A protocol family is a set of security protocols that are either
   interoperable or provide backward compatibility with older versions
   of that protocol family.

   The term security protocol, security filter and filter is used
   interchangeably.



Belingueres              Expires May 1, 2000                   [Page 2]
Internet-Draft           TCP Security Filter              November 1999
4. Option Format

   We use one TCP option, of type TSEC (to be assigned by IANA), to
   signal the requirement for a security protocol. A type field
   indicates the operation.

   A security announcement MUST NOT appear except as specified by the
   [7] protocol.  (All TCPs MUST ignore unknown options in SYN packets
   [9].)  Security protocol related packets MUST NOT be sent unless both
   parties have agreed to the appropriate filter via the protocol [7].

   Security protocol family IDs will be assigned by IANA.

   +--------+-------+-------------------------------+
   |  TSEC  |  len  | Security protocol family list |
   +--------+-------+-------------------------------+
       1        1                   ?

   The security filters, including any parameters, are fixed during the
   three-way handshake by the protocol [7].

   +--------+-------+-------------------------------+------------+
   |  TSEC  |  len  | Security protocol family list | param list |
   +--------+-------+-------------------------------+------------+
       1        1                   ?                     ?


5. Behavior

   As per [7], by "initiator," we indicate the party that first includes
   security options in its SYN packet, and by "respondent," we indicate
   the other party.

   If the respondent (cf., [7] protocol) has indicated that it can
   accept a security protocol family, a sender MUST use it.

   Only the initial security protocol families and parameters that the
   parties support are determined by the security options in the initial
   3-way handshake. Once the TCP connection is open, particular security
   protocols will include their own structures in the data stream, and
   some parts of those may be transmitted unsecured. Note that because
   of the stream nature of TCP, the unsecured portion may be sent in the
   same packet as secure data. Any necessary framing must be done by
   particular security protocols.

   Senders MUST honor the security protocol family specified by the
   respondent, as per [7]. Local dictates to the contrary require in-
   band communication to alter the security behavior (ie. the security
   protocol instantiated is the responsible to make the necessary
   changes); if the security protocol precludes such communication, then
   the session MUST be terminated and re-established with different (or
   absent) security options.



Belingueres              Expires May 1, 2000                   [Page 3]
Internet-Draft           TCP Security Filter              November 1999
6. Interactions

6.1. TCP Urgent Pointer

   If security protocols must note application requests to send urgent
   data, it is up to the security filter instantiated if it is important
   not to provide detectable "signals" to avoid traffic analysis
   attacks. In particular, TCP header's Urgent pointer travels in the
   clear. Beside that, Urgent Pointers are processed as described in
   [7].


7. Security Considerations

   This document describes a technique to upgrade a TCP connection for
   use with security functionality, as required by the security protocol
   instantiated. This document is not about a security technique per se.

   Man-in-the-middle attacks can not be detected by the TCP Filter
   method, so an attacker could back down the list of the preferred
   security protocol families to the "less secure" of the family. It's
   up to the security protocol instantiated and the application that
   uses it to authenticate adequately the parties involved. If the
   security protocol instantiated provides such an adequate method of
   authentication, then the man-in-the-middle is detectable before
   application data is transmitted.

   Urgent Pointers have to be used carefully, provided they could be
   used to mount a traffic analysis attack. Therefore, it is up to the
   security filter to decide if and how they are used.


8. Open issues

   This document is probably to evolve as the [7] do, but there are some
   other issues related specifically to security. Some of those are:

   Filters could be allowed to modify the setting of a connection's Keep
   Alive timer? If they are allowed to do so, there could be problems
   with any upper layer protocol semantics?

   The semantics given in [7] to chose filters in the 3-way handshake is
   "relaxed", in the sense that it does not contemplates the case in
   witch the client's application does REQUIRE some filters to be
   allowed to open the TCP connection at all, witch it is commonly the
   case with security protocols. As defined now, is responsibility of
   the upper layer to check that their minimal set of filters are
   agreed.

   The intersection semantics (in the set theory sense) given in the
   simultaneous open case could have security implications, in the sense
   that the applications (or any other component) are not involved in
   deciding if it is right to accept the filters in the intersection of
   the filter lists.

Belingueres              Expires May 1, 2000                   [Page 4]
Internet-Draft           TCP Security Filter              November 1999


9. References

   1  Bradner, S., "The Internet Standards Process -- Revision 3", BCP
      9, RFC 2026, October 1996.

   2  Postel, J., "Transport Control Protocol", STD 7, RFC 793,
      September 1981.

   3  Kent, S., Atkinson, R., "Security Architecture for the Internet
      Protocol", RFC 2401, November 1998.

   4  Allen, C., and Dierks, T., "Transport Layer Security Protocol
      v1.0", RFC 2246, January 1999.

   5  Fielding, R. et. al., "Hypertext Transfer Protocol -- HTTP/1.1",
      RFC 2616, June 1999.

   6  Rescorla, E., "HTTP over TLS", Internet-Draft, Work in Progress.
      <draft-ietf-tls-https-04.txt>

   7  Bellovin, S. et. al., "TCP Filters", Internet-Draft, Work in
      Progress. <draft-bellovin-tcpfilt-00.txt>

   8  Bradner, S., "Key words for use in RFCs to Indicate Requirement
      Levels", BCP 14, RFC 2119, March 1997

   9  Braden, R., "Requirements for Internet Hosts -- Communication
      Layers", RFC1122, October 1989.


10. Acknowledgments


11. Appendix

   Initial security protocols family to be supported SHOULD include the
   following:

   "TLS FAMILY": SSL 2.0, SSL 3.0, TLS 1.0. (code 0x00).


12. Author's Addresses

   Gabriel Belingueres
   Independent Consultant
   Ines Indart
   CP 2747, Argentina
   Email: gaby@ieee.org


Belingueres              Expires May 1, 2000                   [Page 5]
Internet-Draft           TCP Security Filter              November 1999

Full Copyright Statement

   Copyright (C) The Internet Society (1999). All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.



Belingueres              Expires May 1, 2000                   [Page 6]
