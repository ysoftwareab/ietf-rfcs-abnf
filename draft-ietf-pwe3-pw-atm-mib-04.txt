


Pseudo Wire Edge to Edge Emulation                           O. Nicklass
Internet-Draft                                    Nokia Siemens Networks
Intended status: Standards Track                            S. Sathappan
Expires: August 20, 2008                                   M. Venkatesan
                                                  Marconi Communications
                                                               T. Nadeau
                                                     Cisco Systems, Inc.
                                                       February 17, 2008


       Managed Objects for ATM over Packet Switched Network (PSN)
                   draft-ietf-pwe3-pw-atm-mib-04.txt

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on August 20, 2008.

Copyright Notice

   Copyright (C) The IETF Trust (2008).

Abstract

   This memo defines a portion of the Management Information Base (MIB)
   for use with network management protocols in the Internet community.
   In particular, it describes managed objects for modeling ATM
   Pseudowire (PW) carrying ATM cells over Packet Switch Network (PSN).



Nicklass, et al.         Expires August 20, 2008                [Page 1]

Internet-Draft             Manage ATM over PSN             February 2008


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Conventions  . . . . . . . . . . . . . . . . . . . . . . . . .  4
   3.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  4
   4.  The Internet-Standard Management Framework . . . . . . . . . .  4
   5.  Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .  5
   6.  Relation to other PW-MIB modules . . . . . . . . . . . . . . .  5
   7.  ATM-PW MIB Usage . . . . . . . . . . . . . . . . . . . . . . .  6
   8.  Structure of the MIB module  . . . . . . . . . . . . . . . . .  7
   9.  Object definition  . . . . . . . . . . . . . . . . . . . . . .  8
   10. Security considerations  . . . . . . . . . . . . . . . . . . . 33
   11. IANA considerations  . . . . . . . . . . . . . . . . . . . . . 34
   12. References . . . . . . . . . . . . . . . . . . . . . . . . . . 35
     12.1.  Normative references  . . . . . . . . . . . . . . . . . . 35
     12.2.  Informative references  . . . . . . . . . . . . . . . . . 36
   13. Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 36
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 36
   Intellectual Property and Copyright Statements . . . . . . . . . . 38
































Nicklass, et al.         Expires August 20, 2008                [Page 2]

Internet-Draft             Manage ATM over PSN             February 2008


1.  Introduction

   This document describes a model for managing "emulated" ATM services
   over a Packet Switched Network(PSN).

   The document follows the requirements for Pseudo-Wire Emulation Edge-
   to-Edge [PWREQ], and closely related to [ATMENCAP] and [ATMTRANS]
   which describe the encapsulation of ATM signals and provide the
   Emulation Service over a Packet Switched Network.

   The ATM management model consists of several MIB modules, following
   the layering model described in the PWE3 Architecture [PWARCH]
   document.  The ATM MIB module described in this document works
   closely with the MIB modules described in [AToMTC], [AToM], [IFMIB],
   [PWMIB] and the textual conventions defined in [PWTC].  The
   conceptual layering and relationship among all those is described in
   Figure 1 and in the "Relation to other PW-MIB modules" section listed
   below.  AN ATM connection will be a pseudo-wire (PW) connection.  It
   will not be treated as an interface and will therefore not be
   represented in the ifTable.


                       Figure 1:Conceptual Layering

                            +-------------------+
                            |     ATM MIB       |  ATM-TC-MIB,
                            +-------------------+  ATMMIB
                                     |
                            +-------------------+
               Service      |    ATM PW MIB     |  PW-ATM-MIB
                Layer       +-------------------+

              - - - - - - - - - - -  | - - - - - - - - - - - - - - -
               Generic      +-------------------+
                 PW         | Generic PW MIBS   |  PW-TC-MIB,
                Layer       +-------------------+  PW-STD-MIB
              - - - - - - - - - - - -| - - - - - - - - - - - - - - -
                            +-------------------+
                PSN VC      |   MPLS VC MIBS    |  PW-MPLS-MIB
                Layer       +-------------------+
              - - - - - - - - - - - -| - - - - - - - - - - - - - - -
                            +-------------------+
                 PSN        |    MPLS MIBs      |  MPLS-TE-STD-MIB,
                Layer       +-------------------+  MPLS-LSR-STD-MIB


                                 Figure 1




Nicklass, et al.         Expires August 20, 2008                [Page 3]

Internet-Draft             Manage ATM over PSN             February 2008


   Comments should be made directly to PWE3 group at pwe3@ietf.org.


2.   Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [BCP14].


3.  Terminology


   This document follows the terminology used in PW Architecture
   [PWARCH].


   PSN bound           References the traffic direction where a ATM Cell
                       is received, adapted to packet, assigned a PW
                       label, and sent into the PSN. Within the MIB
                       objects it is called outbound.

   CE bound            The direction where packets are received
                       from the PSN, cells are reconstructed from the
                       packet payloads, and sent into the ATM Network
                       as cells. Within the MIB objects it is called
                       inbound.


   Adaptation          Refers to the method of adapting a "foreign"
                       communications protocol such that it can be
                       carried by a packet switched net (the PSN). For
                       example, in a ATM service the foreign protocol
                       is ATM. The PSN may be MPLS.

   PSN                 Packet Switched Network.

   PSN Tunnel          A general term indicating a virtual connection
                       between the two PW edge devices. In practice
                       this connection is not limited to path-oriented
                       types of PSNs such as MPLS. An example of a non-
                       path-oriented PSN is an IP PSN.


4.  The Internet-Standard Management Framework

   For a detailed overview of the documents that describe the current
   Internet-Standard Management Framework, please refer to section 7 of



Nicklass, et al.         Expires August 20, 2008                [Page 4]

Internet-Draft             Manage ATM over PSN             February 2008


   RFC 3410 [RFC3410].

   Managed objects are accessed via a virtual information store, termed
   the Management Information Base or MIB.  MIB objects are generally
   accessed through the Simple Network Management Protocol (SNMP).
   Objects in the MIB are defined using the mechanisms defined in the
   Structure of Management Information (SMI).  This memo specifies a MIB
   module that is compliant to the SMIv2, which is described in STD 58,
   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580
   [RFC2580].


5.  Overview

   This MIB module is designed to satisfy the following requirements and
   constraints:
   o  - Fit within the architecture defined by [PWARCH] and [PWMIB].
   o  - Fit within the model for VP/VC definitions and management
      concept as defined in the [AToM] MIB.
   o  - Supports manually configured ATM PWs
   o  - Supports automatically configured ATM PWs
   o  - The MIB module enables the use of any PSN type
   o  - The MIB module supports point-to-point ATM PW connections.
      Point-to-multipoint and multipoint-to-point connections are for
      future study.
   o  - The MIB module allows configuration of all the parameters needed
      to establish a PW to carry ATM cells.
   o  - The MIB module reports: ATM performance metrics for the ATM PW.
      This includes cells transmit, Cells dropped, Cells received, and
      unknownCells.  In addition it reports performance metrics at
      packet level.
   o  - ATM OAM cell support.
   o  - The MIB module does not consider ILMI support


6.  Relation to other PW-MIB modules

   The MIB structure for defining a PW service is composed of three
   layers of MIB modules functioning together.  This general model is
   defined in the PWE3 Architecture [PWARCH].  The layering model is
   intended to sufficiently isolate PW services from the underlying PSN
   layer that carries the emulated service.  This is done at the same
   time as providing a standard means for connecting any supported
   services to any supported PSNs.

   The first layer known as the service layer contains service-specific
   modules such as the one defined in this document.  These modules
   define service-specific management objects that interface or



Nicklass, et al.         Expires August 20, 2008                [Page 5]

Internet-Draft             Manage ATM over PSN             February 2008


   collaborate with existing MIB modules for the native version of the
   service.  The service-specific module "glues" the standard module to
   the PWE MIB framework.

   The next layer of the PWE MIB framework is comprised of the PW-MIB
   module [PWMIB].  This module is used to configure general parameters
   of PW connections that are common to all types of emulated services
   and PSNs.  This layer is connected to the service-specific layer
   above, and the PSN layer below.

   The PSN layer provides PSN-specific modules for each type of PSN.
   These modules associate the PW with one or more "tunnels" that carry
   the service over the PSN.  These modules are defined in other
   documents.  This module is used to "glue" the PW service to the
   underlying PSN-specific MIB modules.  In the case of MPLS, for
   example, the PW-MPLS MIB [PWMPLSMIB] is used to connect the PW
   service to either the MPLS-LDP [LDPMIB] or MPLS-TE [TEMIB] MIBs.

   [PWTC] defines some of the object types used in these modules.


7.  ATM-PW MIB Usage

   This section provides an example of using the MIB objects described
   in section 9 to set up an ATM PW.  While this example is not meant to
   illustrate every permutation of the MIB, it is intended as an aid in
   the understanding of some key concepts.  It is meant to be read after
   going through the MIB itself.  See [PWMIB] for an example of setting
   up a PSN Tunnel.

   The following example illustrates how a user will set up an AAL5 ATM
   PW on a switch/router with cells entering the switch/router through
   ATM Interface with IfIndex 1000 [IFMIB], VPI 1 and VCI 100 (from ATM
   Network to PSN - outbound direction) and on the way back, it goes out
   of the switch/router through ATM Interface 1000 with VPI 1 and VCI
   100 (PSN to ATM Network - inbound direction)

   First create an entry in PW MIB with pwType atmAal5SduVcc(2), then
   create entries in pwAtmCfg table, inbound and outbound tables.












Nicklass, et al.         Expires August 20, 2008                [Page 6]

Internet-Draft             Manage ATM over PSN             February 2008


       In PW ATM MIB
       In pwAtmCfgTable:

       pwAtmCfgMaxCellConcatenation 29
       pwAtmCfgTimeoutMode enabled(3)
       pwAtmClpQosMapping false(0) --CLP will not be mapped to QoS
       pwAtmOamCellSupported true(1)  --OAM cells will be supported


       In pwAtmOutboundTable:
       {
        pwAtmOutboundAtmIf             1000    --Outbound AtmIf
        pwAtmOutboundVpi               1       --Outbound VPI
        pwAtmOutboundVci               100     --Outbound VCI
        pwAtmOutboundTrafficParamDescr 0.0     --Best Effort
        pwAtmOutboundRowStatus         createAndGo
       }


       In pwAtmInboundTable
       {
        pwAtmInboundAtmIf             1000 --Inbound AtmIf
        pwAtmInboundVpi               1    --Inbound VPI
        pwAtmInboundVci               100  --Inbound VCI
        pwAtmInboundTrafficParamDescr 0.0  --Best Effort
        pwAtmInboundRowStatus         createAndGo

       }


8.  Structure of the MIB module

   This MIB consists of 4 types of tables;
      It is important to note that the TrafficParamDescr Table is not
      defined as part of this MIB although an object pointing to such
      table entry exist in all configuration tables of this MIB module.
      Users can refer to any ATM TrafficDescr (TD) Table if there is a
      need to overwrite the TD assigned to the ATM endpoint in the ATM
      service MIB [AToM].
      - PW ATM Cfg Table A table for generic parameters for ATM PW
      configuration that is applicable for each ATM PW.
      - PW ATM Outbound Table There are 2 tables to configure an
      outbound ATM PW depending on the type of service.  One table for
      1: 1 service, and the other for N:1 service and transparent cell
      mode [ATMTRANS].
      - PW ATM Inbound Table There are 2 tables to configure an inbound
      ATM PW depending on the type of service.  One table for 1: 1
      service, and the other for N:1 service and transparent cell mode.



Nicklass, et al.         Expires August 20, 2008                [Page 7]

Internet-Draft             Manage ATM over PSN             February 2008


      - PW ATM Perf Table There are 3 tables each contains the relevant
      time dependent statistics for an ATM PW Entry.  There is a current
      table, 15 minutes interval table and one day interval table.  The
      tables are aligned with statistic model of other PW services.


9.   Object definition



  PW-ATM-MIB DEFINITIONS ::= BEGIN

      IMPORTS
      MODULE-IDENTITY, OBJECT-TYPE,
      Counter32, Unsigned32, mib-2
            FROM SNMPv2-SMI

      MODULE-COMPLIANCE, OBJECT-GROUP
            FROM SNMPv2-CONF

      TruthValue, RowStatus, RowPointer
            FROM SNMPv2-TC

      PerfCurrentCount, PerfIntervalCount
            FROM PerfHist-TC-MIB

      InterfaceIndex
            FROM IF-MIB

      pwIndex
            FROM PW-STD-MIB

      AtmVpIdentifier, AtmVcIdentifier
            FROM ATM-TC-MIB;


        pwAtmMIB MODULE-IDENTITY
        LAST-UPDATED "200802170000Z"  -- February 2008
        ORGANIZATION "Pseudo-Wire Emulation Edge-to-Edge (PWE3)
                      Working Group"
        CONTACT-INFO
            "Senthilkumar Sathappan
             Postal: 1000 Marconi Drive
                     Warrendale PA 15086
             Tel:    +1-724-742-6147
             Email:  senthilkumar.sathappan@marconi.com





Nicklass, et al.         Expires August 20, 2008                [Page 8]

Internet-Draft             Manage ATM over PSN             February 2008


             Marichetty Venkatesan
             Postal: 1000 Marconi Drive
                     Warrendale PA 15086
             Tel:    +1-724-742-7058
             Email:  venkatesan.marichetty@marconi.com


             Thomas D. Nadeau
             Postal: Cisco Systems, Inc.
                     250 Apollo Drive
                     Chelmsford, MA 01824
             Tel:    +1-978-497-3051
             Email:  tnadeau@cisco.com

             Orly Nicklass
             Postal: Nokia Siemens Networks
                    3 Hanagar st. Neve Ne'eman
                    Hod-Hasharon, Israel
             Email: orly.nicklass@nsn.com

             Discussion and general questions should be posed to
             the PWE3 Working Group (pwe3@ietf.org)."

        DESCRIPTION
            "This MIB contains managed object definitions for
             Pseudo Wire emulation of ATM over Packet Switched
             Networks (PSN).

             This MIB supplements the PW-STD-MIB module.
             The PW-STD-MIB contains structures and MIB associations
             generic to Pseudo-Wire (PW) emulation. PW-specific
             MIBs (such as this) contain config and stats for specific
             PW types.

             Copyright (C) The IETF Trust (2008).  This version of
             this MIB module is part of RFC XXXX; see the RFC itself for
             full legal notices.
  -- RFC Ed.: replace XXXX with actual RFC number & remove this
            note"

        -- Revision history.

        REVISION "200802170000Z"  -- February 2008
        DESCRIPTION "Initial version published as RFC XXXX."
  -- RFC Ed.: replace XXXX with actual RFC number & remove this
  --          note"

           ::= { mib-2 YYY }



Nicklass, et al.         Expires August 20, 2008                [Page 9]

Internet-Draft             Manage ATM over PSN             February 2008


     -- RFC Editor: replace YYY with IANA-assigned number & remove this
     -- note. Please see IANA considerations section.


      -- Top-level components of this MIB


      pwAtmNotifications OBJECT IDENTIFIER ::= { pwAtmMIB 0 }
      pwAtmObjects       OBJECT IDENTIFIER ::= { pwAtmMIB 1 }
      pwAtmConformance   OBJECT IDENTIFIER ::= { pwAtmMIB 2 }

  -- ATM PW PSN Bound(Outbound) Table for 1 to 1 connection

  pwAtmOutboundTable OBJECT-TYPE
      SYNTAX    SEQUENCE OF PwAtmOutboundEntry
      MAX-ACCESS        not-accessible
      STATUS            current
      DESCRIPTION
          "This table specifies the information for an ATM PW to
          be carried over PSN in the outbound direction. An
          entry is created in this table for every entry in
          the pwTable with a pwType equal to one of the following:
          atmAal5SduVcc(2), atmCell1to1Vcc(12), atmCell1to1Vpc(13)
          or atmAal5PduVcc(14), or atmTransparent(3)."
      ::= { pwAtmObjects 1 }

  pwAtmOutboundEntry OBJECT-TYPE
      SYNTAX        PwAtmOutboundEntry
      MAX-ACCESS    not-accessible
      STATUS        current
      DESCRIPTION
          "A row in this table represents an ATM PW that needs to be
           adapted and carried over PSN. This table is indexed by
           pwIndex from pwTable. Unless otherwise specified, all
           writeable objects in this table MUST NOT be changed after
           row activation in the generic pwTable and values must
           persist after reboot."
      REFERENCE
        "See [PWMIB] "

      INDEX { pwIndex }
      ::= { pwAtmOutboundTable 1 }

  PwAtmOutboundEntry ::= SEQUENCE {
        pwAtmOutboundAtmIf                InterfaceIndex,
        pwAtmOutboundVpi                  AtmVpIdentifier,
        pwAtmOutboundVci                  AtmVcIdentifier,
        pwAtmOutboundTrafficParamDescr    RowPointer,



Nicklass, et al.         Expires August 20, 2008               [Page 10]

Internet-Draft             Manage ATM over PSN             February 2008


        pwAtmOutboundRowStatus            RowStatus
        }

  pwAtmOutboundAtmIf OBJECT-TYPE
      SYNTAX        InterfaceIndex
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "The ATM Interface that receives cells from the ATM
          network."
      ::= { pwAtmOutboundEntry 1 }

  pwAtmOutboundVpi OBJECT-TYPE
      SYNTAX        AtmVpIdentifier
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "VPI value of this ATM PW. The value may indicate the
          translated value when egress generates new VPI."
      ::= { pwAtmOutboundEntry 2 }

  pwAtmOutboundVci OBJECT-TYPE
      SYNTAX        AtmVcIdentifier
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "VCI value of this ATM PW. The value may indicate the
          translated value when egress generates new VCI."
      ::= { pwAtmOutboundEntry 3 }

  pwAtmOutboundTrafficParamDescr OBJECT-TYPE
      SYNTAX        RowPointer
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "This object represents a pointer to an ATM traffic parameter
           specific row in either a private or standard table which
           will be employed while receiving cells from the ATM network.
           This row should contain a set of self-consistent ATM traffic
           parameters including the ATM traffic service category.
           A value of 0.0 indicates Best Effort"
       ::= { pwAtmOutboundEntry 4 }

  pwAtmOutboundRowStatus OBJECT-TYPE
      SYNTAX        RowStatus
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION



Nicklass, et al.         Expires August 20, 2008               [Page 11]

Internet-Draft             Manage ATM over PSN             February 2008


          "This Object is used to create, modify or delete a row in
           this table. Unless otherwise specified, all writeable
           objects in this table MUST NOT be changed after row
           activation as explained in the pwAtmOutboundEntry "
      ::= { pwAtmOutboundEntry 5 }

  -- End of ATM PW Outbound Table


  -- ATM PW CE Bound(Inbound) Table for 1 to 1 mode


  pwAtmInboundTable OBJECT-TYPE
      SYNTAX    SEQUENCE OF PwAtmInboundEntry
      MAX-ACCESS        not-accessible
      STATUS            current
      DESCRIPTION
          "This table specifies the information for an ATM PW in the
           Inbound direction."
      ::= { pwAtmObjects 3 }

  pwAtmInboundEntry OBJECT-TYPE
      SYNTAX    PwAtmInboundEntry
      MAX-ACCESS    not-accessible
      STATUS        current
      DESCRIPTION
          "A row in this table represents an ATM PW that needs to be
           sent into the ATM Network after reconstructing cells from
           Packets received from a PSN. This table is indexed by
           pwIndex from pwTable. An entry is created in this table
           for every entry in the pwTable with a
           pwType equal to one of the following:
           atmAal5SduVcc(2), atmCell1to1Vcc(12), atmCell1to1Vpc(13,)
           or atmAal5PduVcc(14), or atmTransparent(3).Unless otherwise
           specified, all writeable objects in this table MUST NOT
           be changed after row activation in the generic pwTable
           and values must persist after reboot."
      REFERENCE
        "See [PWMIB] "

      INDEX { pwIndex }
      ::= { pwAtmInboundTable 1 }

  PwAtmInboundEntry ::= SEQUENCE {
        pwAtmInboundAtmIf                 InterfaceIndex,
        pwAtmInboundVpi                   AtmVpIdentifier,
        pwAtmInboundVci                   AtmVcIdentifier,
        pwAtmInboundTrafficParamDescr     RowPointer,



Nicklass, et al.         Expires August 20, 2008               [Page 12]

Internet-Draft             Manage ATM over PSN             February 2008


        pwAtmInboundRowStatus             RowStatus
            }

  pwAtmInboundAtmIf OBJECT-TYPE
      SYNTAX        InterfaceIndex
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "The ATM Interface that sends cells into the ATM network
          after reconstructing cells from packets received from
          a PSN."
      ::= { pwAtmInboundEntry 1 }

  pwAtmInboundVpi OBJECT-TYPE
      SYNTAX        AtmVpIdentifier
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "VPI value of this ATM PW.
           If the pwType is atmTransparent then the value will
           be set to zero."
          ::= { pwAtmInboundEntry 2 }

  pwAtmInboundVci OBJECT-TYPE
      SYNTAX        AtmVcIdentifier
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "VCI value of this ATM PW.
           If the pwType is atmTransparent atmCell1to1Vpc or
           atmCellNto1Vpc then the value will be set to zero."
          ::= { pwAtmInboundEntry 3 }

  pwAtmInboundTrafficParamDescr OBJECT-TYPE
      SYNTAX        RowPointer
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "This object represents a pointer to a ATM traffic parameter
           specific row in either a private or standard table which will
           be employed while transmit into the ATM network. This table
           contains a set of self-consistent ATM traffic parameters
           including the ATM traffic service category. A value of 0.0
           indicates Best Effort."

          ::= { pwAtmInboundEntry 4 }

  pwAtmInboundRowStatus OBJECT-TYPE



Nicklass, et al.         Expires August 20, 2008               [Page 13]

Internet-Draft             Manage ATM over PSN             February 2008


      SYNTAX        RowStatus
      MAX-ACCESS    read-create
      STATUS        current
          DESCRIPTION
          "This Object is used to create, modify or delete a row in
           this table.Unless otherwise specified, all writeable
           objects in this table MUST NOT be changed after row
           activation as explained in the pwAtmInboundEntry "
          ::= { pwAtmInboundEntry 5 }

  -- End of ATM PW Inbound Table

  --Generic ATM PW table for all types of ATM PW connection.

  pwAtmCfgTable OBJECT-TYPE
      SYNTAX    SEQUENCE OF PwAtmCfgEntry
      MAX-ACCESS        not-accessible
      STATUS            current
      DESCRIPTION
          "This table specifies generic information for an ATM PW
           to be carried over PSN in any mode."
      ::= { pwAtmObjects 5 }

      pwAtmCfgEntry OBJECT-TYPE
      SYNTAX        PwAtmCfgEntry
      MAX-ACCESS    not-accessible
      STATUS        current
      DESCRIPTION
             "This table contains a set of parameters for
           the ATM PW that needs to be adapted and carried
           over PSN. This table is indexed by pwIndex from
           pwTable. An entry is created for every newly pwIndex
           in the pwTable. Unless otherwise specified, all
           read-write objects in this table MAY
           be changed when the PW is defined as not active
           and all RW objects values must persist
           after reboot"
      REFERENCE
        "See [PWMIB] "

      INDEX { pwIndex }
      ::= { pwAtmCfgTable 1 }

  PwAtmCfgEntry ::= SEQUENCE {
          pwAtmCfgMaxCellConcatenation       Unsigned32,
          pwAtmCfgFarEndMaxCellConcatenation Unsigned32,
          pwAtmCfgTimeoutMode                INTEGER,
          pwAtmClpQosMapping                 TruthValue



Nicklass, et al.         Expires August 20, 2008               [Page 14]

Internet-Draft             Manage ATM over PSN             February 2008


                  }

  pwAtmCfgMaxCellConcatenation OBJECT-TYPE
       SYNTAX        Unsigned32 (1..29)
       MAX-ACCESS    read-write
       STATUS        current
       DESCRIPTION
           "The maximum number of ATM cells that can be
            concatenated into one PW packet towards PSN.
            In non LDP or other signaling protocol environment,
            this object MAY be changed at anytime, but traffic
            might be interuppted, otherwise, it may be changed
            when PW is not active."
      ::= { pwAtmCfgEntry 1 }

  pwAtmCfgFarEndMaxCellConcatenation OBJECT-TYPE
       SYNTAX        Unsigned32 (1..29)
       MAX-ACCESS    read-write
       STATUS        current
       DESCRIPTION
           "The maximum number of ATM cells that can be
            concatenated into one PW packet towards PSN as reported by
            the far end. If no LDP in use, the object will either
            return value 0 or allow setting it for calculating
            protocol overhead."
      ::= { pwAtmCfgEntry 2 }

  pwAtmCfgTimeoutMode OBJECT-TYPE
       SYNTAX        INTEGER
                          {
                           notApplicable (1),
                           disabled      (2),
                           enabled       (3)
                          }
       MAX-ACCESS    read-write
       STATUS        current
       DESCRIPTION
           "This objects determines whether a packet can be
            transmitted to the PSN based on time out expiration
            for collecting cells or not. The actual handling of the
            time out is implementation specific-as such this object
            may be changed at any time under proper consideration of
            traffic interupption effect."
      ::= { pwAtmCfgEntry 3 }

  pwAtmClpQosMapping OBJECT-TYPE
      SYNTAX        TruthValue
      MAX-ACCESS    read-write



Nicklass, et al.         Expires August 20, 2008               [Page 15]

Internet-Draft             Manage ATM over PSN             February 2008


      STATUS        current
      DESCRIPTION
          "This Object indicates whether the CLP bits should be
           considered when setting the value in the Quality
           of Service fields of the encapsulating protocol
           (e.g. EXP fields of the MPLS Label Stack).  Selecting
           True allows the drop precedence to be preserved
           across the PSN. In transparent cell transport,
           the value of this object MUST be false(2), in other
           cases it can be changed at any time."
      REFERENCE
        "See [ATMENCAP] section 12"
      ::= { pwAtmCfgEntry 4 }


  -- Device capable of implementing N:1, 1:1 and transparent cell
  -- mode assumes to support the N:1 table for all
  -- modes with respective applicable setting.
  -- In such implementation, user can creat an entry for either
  -- 1:1 or transparent cell transport modes only
  -- in pwAtmInboundNto1Table. The side effect of such
  -- will be an automatic creat of the respective line in the
  -- pwAtmOutboundNto1Table.

  -- ATM PW Outbound Table for N to 1 connection

  pwAtmOutboundNto1Table OBJECT-TYPE
      SYNTAX    SEQUENCE OF PwAtmOutboundNto1Entry
      MAX-ACCESS        not-accessible
      STATUS            current
      DESCRIPTION
          "This table specifies the information for an ATM PW to
          be carried over PSN in the outbound direction. Up to
          N entries can be created in this table for every
          entry in the pwTable with a pwType equal to:
          atmCellNto1Vcc(9), or atmCellNto1Vpc(10).
            An entry can be created only when the VP/VC are known.
          A single entry will be created in this table for every
          entry in the pwTable with a pwType equal to
          one of the following: atmCell1to1Vcc(12), or
          atmCell1to1Vpc(13), or atmAal5PduVcc(14), or
          atmAal5SduVcc(2), or atmTransparent(3).
          "
      ::= { pwAtmObjects 6 }

  pwAtmOutboundNto1Entry OBJECT-TYPE
      SYNTAX        PwAtmOutboundNto1Entry
      MAX-ACCESS    not-accessible



Nicklass, et al.         Expires August 20, 2008               [Page 16]

Internet-Draft             Manage ATM over PSN             February 2008


      STATUS        current
      DESCRIPTION
          "A row in this table represents an ATM PW that needs to be
           adapted and carried over PSN. This table is indexed by
           pwIndex from pwTable and the ATM interface with VPL/ VCLs.
           In atmTransparent(3), Vpi and VCi will be 0xFFFF
           during set operation.
           Unless otherwise specified, all Read-Creat objects in this
           table MUST NOT be changed after row activation
           and SHOULD remain unchanged after reboot."
      INDEX { pwIndex, pwAtmOutboundNto1AtmIf ,
                          pwAtmOutboundNto1Vpi,
                          pwAtmOutboundNto1Vci  }
      ::= { pwAtmOutboundNto1Table 1 }

  PwAtmOutboundNto1Entry ::= SEQUENCE {
        pwAtmOutboundNto1AtmIf                    InterfaceIndex,
        pwAtmOutboundNto1Vpi                      AtmVpIdentifier,
        pwAtmOutboundNto1Vci                      AtmVcIdentifier,
        pwAtmOutboundNto1RowStatus                RowStatus,
        pwAtmOutboundNto1TrafficParamDescr        RowPointer,
        pwAtmOutboundNto1MappedVpi                AtmVpIdentifier,
        pwAtmOutboundNto1MappedVci                AtmVcIdentifier
       }

  pwAtmOutboundNto1AtmIf OBJECT-TYPE
      SYNTAX        InterfaceIndex
      MAX-ACCESS    not-accessible
      STATUS        current
      DESCRIPTION
          "The ATM Interface that receives cells from the ATM network."
      ::= { pwAtmOutboundNto1Entry 1 }

  pwAtmOutboundNto1Vpi OBJECT-TYPE
      SYNTAX        AtmVpIdentifier
      MAX-ACCESS    not-accessible
      STATUS        current
      DESCRIPTION
          "VPI value of this ATM PW. In atmTransparent(3),
           Vpi will be the equivalent of 0xFFFF"
      ::= { pwAtmOutboundNto1Entry 2 }

  pwAtmOutboundNto1Vci OBJECT-TYPE
      SYNTAX        AtmVcIdentifier
      MAX-ACCESS    not-accessible
      STATUS        current
      DESCRIPTION
          "VCI value of this ATM PW. In atmTransparent(3), or



Nicklass, et al.         Expires August 20, 2008               [Page 17]

Internet-Draft             Manage ATM over PSN             February 2008


           VP case, the value will be the equivalent of
           0xFFFF"
      ::= { pwAtmOutboundNto1Entry 3 }

  pwAtmOutboundNto1RowStatus OBJECT-TYPE
      SYNTAX        RowStatus
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "This Object is used to create, modify or delete a row in
           this table."
      ::= { pwAtmOutboundNto1Entry 4 }

  pwAtmOutboundNto1TrafficParamDescr OBJECT-TYPE
      SYNTAX        RowPointer
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "This object represents a pointer to a ATM traffic parameter
           specific row in either private or standard table which will
           be employed while receiving cells from the ATM network.
           This table should contain a set
           of self-consistent ATM traffic parameters including the ATM
           traffic service category. A value of 0.0 indicates Best
           Effort."

      ::= { pwAtmOutboundNto1Entry 5 }

  pwAtmOutboundNto1MappedVpi         OBJECT-TYPE
      SYNTAX        AtmVpIdentifier
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "The egress generated VPI value of this ATM PW. The
          entry is valid for PW type of atmCellNto1Vcc(9),
          atmCellNto1Vpc(10), atmCell1to1Vcc(12), or
          atmCell1to1Vpc(13). In other types, the value will be the
          equivalent of 0xFFFF. Value MAY be changed when the
          PW is defined as not active "
      ::= { pwAtmOutboundNto1Entry 6 }

  pwAtmOutboundNto1MappedVci      OBJECT-TYPE
      SYNTAX        AtmVcIdentifier
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "The egress generated VCI value of this ATM PW. The
          entry is valid for PW type of atmCellNto1Vcc(9),



Nicklass, et al.         Expires August 20, 2008               [Page 18]

Internet-Draft             Manage ATM over PSN             February 2008


          atmCellNto1Vpc(10), atmCell1to1Vcc(12), or
          atmCell1to1Vpc(13. In VP case or other types, the
          value will be the equivalent of 0xFFFF.
          Value MAY be changed when the PW is defined
          as not active."
      ::= { pwAtmOutboundNto1Entry 7 }


  -- ATM PW Inbound Table for N to 1 connection

  pwAtmInboundNto1Table OBJECT-TYPE
      SYNTAX    SEQUENCE OF PwAtmInboundNto1Entry
      MAX-ACCESS        not-accessible
      STATUS            current
      DESCRIPTION
          "This table specifies the information for an ATM PW to
          be carried over PSN in the Inbound direction. Up to
          N entries can be created in this table for every
          entry in the pwTable with a pwType equal to:
          atmCellNto1Vcc(9), or atmCellNto1Vpc(10).
            An entry can be created only when the VP/VC are known.
          A single entry will be created in this table for every
          entry in the pwTable with a pwType equal to
          one of the following:atmCell1to1Vcc(12), or
          atmCell1to1Vpc(13), or atmAal5PduVcc(14), or
          atmAal5SduVcc(2), or atmTransparent(3)."
      ::= { pwAtmObjects 7 }

  pwAtmInboundNto1Entry OBJECT-TYPE
      SYNTAX        PwAtmInboundNto1Entry
      MAX-ACCESS    not-accessible
      STATUS        current
      DESCRIPTION
          "A row in this table represents an ATM PW that needs to be
           adapted and carried over PSN. This table is indexed by
           pwIndex from pwTable and the ATM interface with VPL/ VCLs.
           In atmTransparent(3), Vpi and VCi will be 0xFFFF
           during set operation.
           Unless otherwise specified, all Read-Creat objects in this
           table MUST NOT be changed after row activation
           and SHOULD remain unchanged after reboot."
      INDEX { pwIndex, pwAtmInboundNto1AtmIf ,
                          pwAtmInboundNto1Vpi,
                          pwAtmInboundNto1Vci
                          }
      ::= { pwAtmInboundNto1Table 1 }

  PwAtmInboundNto1Entry ::= SEQUENCE {



Nicklass, et al.         Expires August 20, 2008               [Page 19]

Internet-Draft             Manage ATM over PSN             February 2008


        pwAtmInboundNto1AtmIf                InterfaceIndex,
        pwAtmInboundNto1Vpi                  AtmVpIdentifier,
        pwAtmInboundNto1Vci                  AtmVcIdentifier,
        pwAtmInboundNto1RowStatus            RowStatus,
        pwAtmInboundNto1TrafficParamDescr    RowPointer,
        pwAtmInboundNto1MappedVpi            AtmVpIdentifier,
        pwAtmInboundNto1MappedVci            AtmVcIdentifier
      }

  pwAtmInboundNto1AtmIf OBJECT-TYPE
      SYNTAX        InterfaceIndex
      MAX-ACCESS    not-accessible
      STATUS        current
      DESCRIPTION
          "The ATM Interface that receives cells from the ATM network."
      ::= { pwAtmInboundNto1Entry 1 }

  pwAtmInboundNto1Vpi OBJECT-TYPE
      SYNTAX        AtmVpIdentifier
      MAX-ACCESS    not-accessible
      STATUS        current
      DESCRIPTION
          "VPI value of this ATM PW. In atmTransparent(3),
           Vpi will be the equivalent of 0xFFFF."
      ::= { pwAtmInboundNto1Entry 2 }

  pwAtmInboundNto1Vci OBJECT-TYPE
      SYNTAX        AtmVcIdentifier
      MAX-ACCESS    not-accessible
      STATUS        current
      DESCRIPTION
          "VCI value of this ATM PW. In atmTransparent(3), or
           VP case, the value will be the equivalent of
           0xFFFF"
      ::= { pwAtmInboundNto1Entry 3 }

  pwAtmInboundNto1RowStatus OBJECT-TYPE
      SYNTAX        RowStatus
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "This Object is used to create, modify or delete a row in
          this table."
      ::= { pwAtmInboundNto1Entry 4 }

  pwAtmInboundNto1TrafficParamDescr OBJECT-TYPE
      SYNTAX        RowPointer
      MAX-ACCESS    read-create



Nicklass, et al.         Expires August 20, 2008               [Page 20]

Internet-Draft             Manage ATM over PSN             February 2008


      STATUS        current
      DESCRIPTION
          "This object represents a pointer to a ATM traffic parameter
           specific row in either private or standard table which will
           be employed while receiving cells from the ATM network.
           This table should contain a set
           of self-consistent ATM traffic parameters including the ATM
           traffic service category. A value of 0.0 indicates Best
           Effort."

      ::= { pwAtmInboundNto1Entry 5 }

  pwAtmInboundNto1MappedVpi    OBJECT-TYPE
      SYNTAX        AtmVpIdentifier
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "The generated VPI value of this ATM PW. The
          entry is valid for PW type of atmCellNto1Vcc(9),
          atmCellNto1Vpc(10), atmCell1to1Vcc(12), or
          atmCell1to1Vpc(13). In other types, the value will be the
          equivalent of 0xFFFF. Value MAY be changed when the
          PW is defined as not active."
      ::= { pwAtmInboundNto1Entry 6 }

  pwAtmInboundNto1MappedVci     OBJECT-TYPE
      SYNTAX        AtmVcIdentifier
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "The generated VCI value of this ATM PW. The
          entry is valid for PW type of atmCellNto1Vcc(9),
          atmCellNto1Vpc(10), atmCell1to1Vcc(12), or
          atmCell1to1Vpc(13. In VP case or other types, the
          value will be the equivalent of 0xFFFF.
          Value MAY be changed when the
          PW is defined as not active."
      ::= { pwAtmInboundNto1Entry 7 }


  -- ATM PW Outbound Perf Table

  -- The following supplement the counters presented in the
  -- PW generic MIB

  -- ATM PW Performance Current Table.

  pwAtmPerfCurrentTable OBJECT-TYPE



Nicklass, et al.         Expires August 20, 2008               [Page 21]

Internet-Draft             Manage ATM over PSN             February 2008


    SYNTAX        SEQUENCE OF PwAtmPerfCurrentEntry
    MAX-ACCESS    not-accessible
    STATUS        current
    DESCRIPTION
        "The current 15 minute interval counts are in
         this table.
         This table provides performance information per ATM PW."
    ::= { pwAtmObjects 8 }

  pwAtmPerfCurrentEntry OBJECT-TYPE
    SYNTAX        PwAtmPerfCurrentEntry
    MAX-ACCESS    not-accessible
    STATUS        current
    DESCRIPTION
        "An entry in this table is created by the agent for every
         pwAtmCfgTable entry. After 15 minutes, the contents of this
         table entry are copied to a new entry in the
         pwAtmPerfInterval table and the counts in this entry
         are reset to zero."
    INDEX  { pwIndex }
    ::= { pwAtmPerfCurrentTable 1 }

  PwAtmPerfCurrentEntry ::= SEQUENCE {
       pwAtmPerfCurrentMissingPkts    PerfCurrentCount,
       pwAtmPerfCurrentPktsReOrder    PerfCurrentCount,
       pwAtmPerfCurrentPktsMisOrder   PerfCurrentCount,
       pwAtmPerfCurrentPktsTimeout    PerfCurrentCount,
       pwAtmPerfCurrentCellsXmit      PerfCurrentCount,
       pwAtmPerfCurrentCellsDropped   PerfCurrentCount,
       pwAtmPerfCurrentCellsReceived  PerfCurrentCount,
       pwAtmPerfCurrentUnknownCells   PerfCurrentCount
    }

  pwAtmPerfCurrentMissingPkts OBJECT-TYPE
    SYNTAX        PerfCurrentCount
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of missing packets (as detected via control word
         sequence number gaps)."
    ::= { pwAtmPerfCurrentEntry 1 }

  pwAtmPerfCurrentPktsReOrder OBJECT-TYPE
    SYNTAX        PerfCurrentCount
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of packets detected out of sequence (via control



Nicklass, et al.         Expires August 20, 2008               [Page 22]

Internet-Draft             Manage ATM over PSN             February 2008


         word sequence number), but successfully re-ordered.
         Note: some implementations may not support this Feature."
    ::= { pwAtmPerfCurrentEntry 2 }

  pwAtmPerfCurrentPktsMisOrder OBJECT-TYPE
    SYNTAX        PerfCurrentCount
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of packets detected out of order (via control word
         sequence numbers)."
     ::= { pwAtmPerfCurrentEntry 3 }

  pwAtmPerfCurrentPktsTimeout OBJECT-TYPE
    SYNTAX        PerfCurrentCount
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of packets transmitted due to timeout expiration
         while attempting to collect cells."
     ::= { pwAtmPerfCurrentEntry 4 }

  pwAtmPerfCurrentCellsXmit OBJECT-TYPE
    SYNTAX        PerfCurrentCount
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of transmitted cells."
     ::= { pwAtmPerfCurrentEntry 5 }

  pwAtmPerfCurrentCellsDropped OBJECT-TYPE
    SYNTAX        PerfCurrentCount
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of dropped cells."
     ::= { pwAtmPerfCurrentEntry 6 }

  pwAtmPerfCurrentCellsReceived OBJECT-TYPE
    SYNTAX        PerfCurrentCount
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of received cells."
     ::= { pwAtmPerfCurrentEntry 7 }

  pwAtmPerfCurrentUnknownCells OBJECT-TYPE
    SYNTAX        PerfCurrentCount



Nicklass, et al.         Expires August 20, 2008               [Page 23]

Internet-Draft             Manage ATM over PSN             February 2008


    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of cells received from the PSN with unknown VPI or
        VCI values. This object is relevant only in N:1 mode."
     ::= { pwAtmPerfCurrentEntry 8 }

  -- End ATM PW Performance Current Interval Table


  -- ATM PW Performance Interval Table.

  pwAtmPerfIntervalTable OBJECT-TYPE
    SYNTAX        SEQUENCE OF PwAtmPerfIntervalEntry
    MAX-ACCESS    not-accessible
    STATUS        current
    DESCRIPTION
        "This table provides performance information per ATM PW
         similar to the pwAtmPerfCurrentTable above. However,
         these counts represent historical 15 minute intervals.
         Typically, this table will have a maximum of 96 entries
         for a 24 hour period. "
    ::= { pwAtmObjects 9 }

  pwAtmPerfIntervalEntry OBJECT-TYPE
    SYNTAX        PwAtmPerfIntervalEntry
    MAX-ACCESS    not-accessible
    STATUS        current
    DESCRIPTION
        "An entry in this table is created by the agent for
         every pwAtmPerfCurrentEntry that is 15 minutes old.
         The contents of the Current entry are copied to the new
         entry here. The Current entry, then resets its counts
         to zero for the next current 15 minute interval. "
    INDEX  { pwIndex, pwAtmPerfIntervalNumber }
    ::= { pwAtmPerfIntervalTable 1 }

  PwAtmPerfIntervalEntry ::= SEQUENCE {
       pwAtmPerfIntervalNumber         Unsigned32,
       pwAtmPerfIntervalValidData      TruthValue,
       pwAtmPerfIntervalDuration       Unsigned32,
       pwAtmPerfIntervalMissingPkts    PerfIntervalCount,
       pwAtmPerfIntervalPktsReOrder    PerfIntervalCount,
       pwAtmPerfIntervalPktsMisOrder   PerfIntervalCount,
       pwAtmPerfIntervalPktsTimeout    PerfIntervalCount,
       pwAtmPerfIntervalCellsXmit      PerfIntervalCount,
       pwAtmPerfIntervalCellsDropped   PerfIntervalCount,
       pwAtmPerfIntervalCellsReceived  PerfIntervalCount,



Nicklass, et al.         Expires August 20, 2008               [Page 24]

Internet-Draft             Manage ATM over PSN             February 2008


       pwAtmPerfIntervalUnknownCells   PerfIntervalCount
       }

  pwAtmPerfIntervalNumber OBJECT-TYPE
    SYNTAX        Unsigned32
    MAX-ACCESS    not-accessible
    STATUS        current
    DESCRIPTION
        "A number (normally between 1 and 96 to cover a 24 hour
         period) which identifies the interval for which the set
         of statistics is available. The interval identified by 1
         is the most recently completed 15 minute interval, and
         the interval identified by N is the interval immediately
         preceding the one identified by N-1. The minimum range of
         N is 1 through 4. The default range is 1 through 32. The
         maximum value of N is 96."
    ::= { pwAtmPerfIntervalEntry 1 }

  pwAtmPerfIntervalValidData OBJECT-TYPE
    SYNTAX        TruthValue
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "This variable indicates if the data for this interval
         is valid."
    ::= { pwAtmPerfIntervalEntry 2 }

  pwAtmPerfIntervalDuration OBJECT-TYPE
     SYNTAX      Unsigned32
     MAX-ACCESS  read-only
     STATUS      current
     DESCRIPTION
       "The duration of a particular interval in seconds,
        Adjustments in the system's time-of-day clock, may
        cause the interval to be greater or less than, the
        normal value. Therefore this actual interval value
        is provided."
     ::= { pwAtmPerfIntervalEntry 3 }

  pwAtmPerfIntervalMissingPkts OBJECT-TYPE
    SYNTAX        PerfIntervalCount
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of missing packets (as detected via control
         word sequence number gaps)."
    ::= { pwAtmPerfIntervalEntry 4 }




Nicklass, et al.         Expires August 20, 2008               [Page 25]

Internet-Draft             Manage ATM over PSN             February 2008


  pwAtmPerfIntervalPktsReOrder OBJECT-TYPE
    SYNTAX        PerfIntervalCount
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of packets detected out of sequence (via control
         word sequence number), but successfully re-ordered.
         Note: some implementations may not support this
         Feature."
    ::= { pwAtmPerfIntervalEntry 5 }

   pwAtmPerfIntervalPktsMisOrder OBJECT-TYPE
    SYNTAX        PerfIntervalCount
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of packets detected out of order (via control word
         sequence numbers)."
    ::= { pwAtmPerfIntervalEntry 6 }

  pwAtmPerfIntervalPktsTimeout OBJECT-TYPE
    SYNTAX        PerfIntervalCount
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of packets transmitted due to timeout expiration."
     ::= { pwAtmPerfIntervalEntry 7 }

  pwAtmPerfIntervalCellsXmit OBJECT-TYPE
    SYNTAX        PerfIntervalCount
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of transmitted cells."
     ::= { pwAtmPerfIntervalEntry 8 }

  pwAtmPerfIntervalCellsDropped OBJECT-TYPE
    SYNTAX        PerfIntervalCount
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of dropped cells."
     ::= { pwAtmPerfIntervalEntry 9 }

  pwAtmPerfIntervalCellsReceived OBJECT-TYPE
    SYNTAX        PerfIntervalCount
    MAX-ACCESS    read-only
    STATUS        current



Nicklass, et al.         Expires August 20, 2008               [Page 26]

Internet-Draft             Manage ATM over PSN             February 2008


    DESCRIPTION
        "Number of received cells."
     ::= { pwAtmPerfIntervalEntry 10 }

  pwAtmPerfIntervalUnknownCells OBJECT-TYPE
    SYNTAX        PerfIntervalCount
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of cells received from the PSN  with unknown VPI or
        VCI values. This object is relevant only in N:1 mode."
     ::= { pwAtmPerfIntervalEntry 11 }

  -- End ATM PW Performance Interval Table


  -- ATM PW 1day Performance Table


  pwAtmPerf1DayIntervalTable OBJECT-TYPE
    SYNTAX        SEQUENCE OF PwAtmPerf1DayIntervalEntry
    MAX-ACCESS    not-accessible
    STATUS        current
    DESCRIPTION
        "This table provides performance information per ATM PW
         similar to the pwAtmPerfIntervalTable above. However,
         these counters represent historical 1 day intervals up to
         one full month."
    ::= { pwAtmObjects 10 }

  pwAtmPerf1DayIntervalEntry OBJECT-TYPE
    SYNTAX        PwAtmPerf1DayIntervalEntry
    MAX-ACCESS    not-accessible
    STATUS        current
    DESCRIPTION
        "An entry is created in this table by the agent
         for every entry in the pwAtmCfgTable table."
    INDEX  { pwIndex,pwAtmPerf1DayIntervalNumber }
       ::= { pwAtmPerf1DayIntervalTable 1 }

  PwAtmPerf1DayIntervalEntry ::= SEQUENCE {
       pwAtmPerf1DayIntervalNumber          Unsigned32,
       pwAtmPerf1DayIntervalValidData       TruthValue,
       pwAtmPerf1DayIntervalDuration        Unsigned32,
       pwAtmPerf1DayIntervalMissingPkts     Counter32,
       pwAtmPerf1DayIntervalPktsReOrder     Counter32,
       pwAtmPerf1DayIntervalPktsMisOrder    Counter32,
       pwAtmPerf1DayIntervalPktsTimeout     Counter32,



Nicklass, et al.         Expires August 20, 2008               [Page 27]

Internet-Draft             Manage ATM over PSN             February 2008


       pwAtmPerf1DayIntervalCellsXmit       Counter32,
       pwAtmPerf1DayIntervalCellsDropped    Counter32,
       pwAtmPerf1DayIntervalCellsReceived   Counter32,
       pwAtmPerf1DayIntervalUnknownCells    Counter32
       }

  pwAtmPerf1DayIntervalNumber OBJECT-TYPE
    SYNTAX        Unsigned32
    MAX-ACCESS    not-accessible
    STATUS        current
    DESCRIPTION
        "The number of interval, where 1 indicates current day
         measured period and 2 and above indicate previous days
         respectively"
    ::= { pwAtmPerf1DayIntervalEntry 1 }

  pwAtmPerf1DayIntervalValidData OBJECT-TYPE
    SYNTAX        TruthValue
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "This object indicates if the data for this interval
         is valid."
    ::= { pwAtmPerf1DayIntervalEntry 2 }

  pwAtmPerf1DayIntervalDuration OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
      "The duration of a particular interval in seconds,
       Adjustments in the system's time-of-day clock, may
       cause the interval to be greater or less than, the
       normal value. Therefore this actual interval value
       is provided."
    ::= { pwAtmPerf1DayIntervalEntry 3 }

  pwAtmPerf1DayIntervalMissingPkts OBJECT-TYPE
    SYNTAX        Counter32
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
      "Number of missing packets (as detected via control word
       sequence number gaps)."
    ::= { pwAtmPerf1DayIntervalEntry 4 }

  pwAtmPerf1DayIntervalPktsReOrder OBJECT-TYPE
    SYNTAX        Counter32



Nicklass, et al.         Expires August 20, 2008               [Page 28]

Internet-Draft             Manage ATM over PSN             February 2008


    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of packets detected out of sequence (via control
         word sequence number), but successfully re-ordered.
         Note: some implementations may not support this
         feature."
    ::= { pwAtmPerf1DayIntervalEntry 5 }

  pwAtmPerf1DayIntervalPktsMisOrder OBJECT-TYPE
    SYNTAX        Counter32
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of packets detected out of order(via control word
         sequence numbers), and could not be re-ordered."
    ::= { pwAtmPerf1DayIntervalEntry 6 }

  pwAtmPerf1DayIntervalPktsTimeout OBJECT-TYPE
    SYNTAX        Counter32
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of packets transmitted due to timeout expiration."
     ::= { pwAtmPerf1DayIntervalEntry 7 }

  pwAtmPerf1DayIntervalCellsXmit OBJECT-TYPE
    SYNTAX        Counter32
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of transmitted cells."
     ::= { pwAtmPerf1DayIntervalEntry 8 }

  pwAtmPerf1DayIntervalCellsDropped OBJECT-TYPE
    SYNTAX        Counter32
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of dropped cells."
     ::= { pwAtmPerf1DayIntervalEntry 9 }

  pwAtmPerf1DayIntervalCellsReceived OBJECT-TYPE
    SYNTAX        Counter32
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of received cells."



Nicklass, et al.         Expires August 20, 2008               [Page 29]

Internet-Draft             Manage ATM over PSN             February 2008


     ::= { pwAtmPerf1DayIntervalEntry 10 }

  pwAtmPerf1DayIntervalUnknownCells OBJECT-TYPE
    SYNTAX        Counter32
    MAX-ACCESS    read-only
    STATUS        current
    DESCRIPTION
        "Number of cells received from the PSN  with unknown VPI
        or VCI value. This object is relevant only in N:1 mode."
     ::= { pwAtmPerf1DayIntervalEntry 11 }

  -- End of ATM PW Performance table

      pwAtmCompliances OBJECT IDENTIFIER ::= { pwAtmConformance 1 }
      pwAtmGroups      OBJECT IDENTIFIER ::= { pwAtmConformance 2 }

      pwAtmCompliance MODULE-COMPLIANCE
      STATUS  current
      DESCRIPTION
              "The compliance statement for agent that support
               ATM PW."
      MODULE  -- this module
          MANDATORY-GROUPS { pwAtmCfgGroup,
                             pwAtmPerfGroup
                           }

         OBJECT pwAtmCfgFarEndMaxCellConcatenation
         MIN-ACCESS read-only
         DESCRIPTION
          "The ability to set this object
          is not required."


         GROUP        pwAtmOutbound1to1Group
         DESCRIPTION "This group is mandatory only for implementations
                      that support the ATM PW 1:1 mode and not using
                      Nto1 table."

         GROUP        pwAtmInbound1to1Group
         DESCRIPTION "This group is mandatory only for implementations
                      that support the ATM PW 1:1 mode and not using
                      Nto1 table."

         GROUP        pwAtmOutboundNto1Group
         DESCRIPTION "This group is mandatory only for implementations
                      that support the ATM PW N:1 and transparent mode."

         GROUP        pwAtmInboundNto1Group



Nicklass, et al.         Expires August 20, 2008               [Page 30]

Internet-Draft             Manage ATM over PSN             February 2008


         DESCRIPTION "This group is mandatory only for implementations
                      that support the ATM PW N:1 and transparent mode."

      ::= { pwAtmCompliances 2 }


  -- Units of conformance.

      pwAtmCfgGroup OBJECT-GROUP
      OBJECTS {pwAtmCfgMaxCellConcatenation,
               pwAtmCfgFarEndMaxCellConcatenation,
               pwAtmCfgTimeoutMode,
               pwAtmClpQosMapping
                       }

      STATUS  current
      DESCRIPTION
                "Collection of objects for basic ATM PW
                 config."
      ::= { pwAtmGroups 5 }

      pwAtmPerfGroup OBJECT-GROUP
      OBJECTS {pwAtmPerfCurrentMissingPkts,
               pwAtmPerfCurrentPktsReOrder,
               pwAtmPerfCurrentPktsMisOrder,
               pwAtmPerfCurrentPktsTimeout,
               pwAtmPerfCurrentCellsXmit,
               pwAtmPerfCurrentCellsDropped,
               pwAtmPerfCurrentCellsReceived,
               pwAtmPerfCurrentUnknownCells,
               pwAtmPerfIntervalValidData,
               pwAtmPerfIntervalDuration,
               pwAtmPerfIntervalMissingPkts,
               pwAtmPerfIntervalPktsReOrder,
               pwAtmPerfIntervalPktsMisOrder,
               pwAtmPerfIntervalPktsTimeout,
               pwAtmPerfIntervalCellsXmit,
               pwAtmPerfIntervalCellsDropped,
               pwAtmPerfIntervalCellsReceived,
               pwAtmPerfIntervalUnknownCells,
               pwAtmPerf1DayIntervalValidData,
               pwAtmPerf1DayIntervalDuration,
               pwAtmPerf1DayIntervalMissingPkts,
               pwAtmPerf1DayIntervalPktsReOrder,
               pwAtmPerf1DayIntervalPktsMisOrder,
               pwAtmPerf1DayIntervalPktsTimeout,
               pwAtmPerf1DayIntervalCellsXmit,
               pwAtmPerf1DayIntervalCellsDropped,



Nicklass, et al.         Expires August 20, 2008               [Page 31]

Internet-Draft             Manage ATM over PSN             February 2008


               pwAtmPerf1DayIntervalCellsReceived,
               pwAtmPerf1DayIntervalUnknownCells
                           }
      STATUS current
      DESCRIPTION
                "Collection of objects for basic ATM PW Performance."
      ::= { pwAtmGroups 6 }

      pwAtmOutbound1to1Group OBJECT-GROUP
      OBJECTS {pwAtmOutboundAtmIf,
               pwAtmOutboundVpi,
               pwAtmOutboundVci,
               pwAtmOutboundTrafficParamDescr,
               pwAtmOutboundRowStatus
               }
      STATUS  current
      DESCRIPTION
                "Collection of objects for basic 1:1 ATM PW outbound
                 config."
      ::= { pwAtmGroups 7 }

      pwAtmInbound1to1Group OBJECT-GROUP
      OBJECTS {pwAtmInboundAtmIf,
               pwAtmInboundVpi,
               pwAtmInboundVci,
               pwAtmInboundTrafficParamDescr,
               pwAtmInboundRowStatus
               }
      STATUS  current
      DESCRIPTION
            "Collection of objects for basic 1:1 ATM PW inbound
             config."
      ::= { pwAtmGroups 8 }

      pwAtmOutboundNto1Group OBJECT-GROUP
      OBJECTS {pwAtmOutboundNto1RowStatus,
               pwAtmOutboundNto1TrafficParamDescr,
               pwAtmOutboundNto1MappedVpi,
               pwAtmOutboundNto1MappedVci
                           }
      STATUS  current
      DESCRIPTION
            "Collection of objects for N:1 or 1:1 or transparent
            ATM PW outbound config."
      ::= { pwAtmGroups 9 }

      pwAtmInboundNto1Group OBJECT-GROUP
      OBJECTS {pwAtmInboundNto1RowStatus,



Nicklass, et al.         Expires August 20, 2008               [Page 32]

Internet-Draft             Manage ATM over PSN             February 2008


               pwAtmInboundNto1TrafficParamDescr,
               pwAtmInboundNto1MappedVpi,
               pwAtmInboundNto1MappedVci
                   }
      STATUS current
      DESCRIPTION
            "Collection of objects for  N:1 or 1:1 or transparent
             ATM PW inbound config."
      ::= { pwAtmGroups 10 }


  END





10.  Security considerations

   There are a number of management objects defined in this MIB module
   with a MAX-ACCESS clause of read-write and/or read-create.  Such
   objects may be considered sensitive or vulnerable in some network
   environments.  The support for SET operations in a non-secure
   environment without proper protection can have a negative effect on
   network operations.  These are the tables and objects and their
   sensitivity/vulnerability:

   The pwAtmOutboundTable, pwAtmInboundTable, pwAtmCfgTable,
   pwAtmOutboundNto1Table, and pwAtmInboundNto1Table contain objects of
   ATM PW parameters on a Provider Edge (PE) device.  Unauthorized
   access to objects in these tables could result in disruption of
   traffic on the network.

   The use of stronger mechanisms such as SNMPv3 security should be
   considered where possible.  Specifically, SNMPv3 VACM and USM MUST be
   used with any SNMPV3 agent, which implements this MIB module.
   Administrators should consider whether read access to these objects
   should be allowed, since read access may be undesirable under certain
   circumstances.

   Some of the readable objects in this MIB module "i.e., objects with a
   MAX-ACCESS other than not-accessible" may be considered sensitive or
   vulnerable in some network environments.  It is thus important to
   control even GET and/or NOTIFY access to these objects and possibly
   to even encrypt the values of these objects when sending them over
   the network via SNMP.  These are the tables and objects and their
   sensitivity/vulnerability:




Nicklass, et al.         Expires August 20, 2008               [Page 33]

Internet-Draft             Manage ATM over PSN             February 2008


   The pwTDMTable, pwAtmPerfCurrentTable, pwAtmPerfIntervalTable and
   pwAtmPerf1DayIntervalTable collectively show the ATM pseudo wire
   connectivity topology and its performance characteristics.

   If an Administrator does not want to reveal this information, then
   these tables should be considered sensitive/vulnerable.

   SNMP versions prior to SNMPv3 did not include adequate security.
   Even if the network itself is secure "for example by using IPsec",
   even then, there is no control as to who on the secure network is
   allowed to access and GET/SET "read/change/create/delete" the objects
   in this MIB module.

   It is RECOMMENDED that implementers consider the security features as
   provided by the SNMPv3 framework "see [RFC3410], section 8",
   including full support for the SNMPv3 cryptographic mechanisms "for
   authentication and privacy".

   Further, deployment of SNMP versions prior to SNMPv3 is NOT
   RECOMMENDED.  Instead, it is RECOMMENDED to deploy SNMPv3 and to
   enable cryptographic security.  It is then a customer/operator
   responsibility to ensure that the SNMP entity giving access to an
   instance of this MIB module, is properly configured to give access to
   the objects only to those principals "users" that have legitimate
   rights to indeed GET or SET "change/create/delete" them.


11.  IANA considerations

   The MIB module in this document uses the following IANA-assigned
   OBJECT IDENTIFIER values recorded in the SMI Numbers registry:

   Descriptor OBJECT IDENTIFIER value

   ---------- -----------------------

   pwATMMIB { mib-2 XXX }

   Editor's Note (to be removed prior to publication): the IANA is
   requested to assign a value for "XXX" under the 'mib-2' subtree and
   to record the assignment in the SMI Numbers registry.  When the
   assignment has been made, the RFC Editor is asked to replace "XXX"
   (here and in the MIB module) with the assigned value and to remove
   this note.







Nicklass, et al.         Expires August 20, 2008               [Page 34]

Internet-Draft             Manage ATM over PSN             February 2008


12.  References

12.1.  Normative references



  [PWTC]      Nadeau, T., Zelig D. "Definitions for Textual
              Conventions and OBJECT-IDENTITIES for Pseudo-Wires
              Management", work-in-progress.

  [PWMIB]     Zelig D., Nadeau T., "Pseudo Wire (PW) Management
              Information Base", work-in-progress.

  [PWMPLSMIB] Zelig et al, "Pseudo Wire (PW) Over MPLS PSN Management
              Information Base", work-in-progress.

  [ATMENCAP]  Martini et al, "Encapsulation Methods for Transport
              of Asynchronous Transfer Mode (ATM) over MPLS
              Networks", RFC 4717, December 2006.

  [ATMTRANS]  Malis et al, "PWE3 ATM Transparent Cell Transport
              Service", RFC 4816, February 2007.

  [AToM]      Tesink, K., "Definitions of Managed Objects for ATM
              Management", RFC 2515, October 1999.

  [AToMTC]    Noto, M., Spiegel, E. and K. Tesink, Editors, "Definitions
              of Textual Conventions and OBJECT-IDENTITIES for ATM
              Management", RFC 2514, February 1999.

  [LDPMIB]    J. Cucchiara, H. Sjostrand, J. Luciani "Definitions
              of Managed Objects for the Multiprotocol
              Label Switching (MPLS), Label Distribution Protocol
              (LDP)", RFC 3815, June 2004

  [TEMIB]     C. Srinivasan, Bloomberg L.P., A. Viswanathan,
              T. Nadeau, "Multiprotocol Label Switching (MPLS)
              Traffic Engineering (TE) Management Information Base
              MIB)" RFC 3812, June 2004.

  [IFMIB]     McCloghrie, K. and F. Kastenholz, "The Interfaces
              Group MIB", RFC 2863, June 2000.

  [RFC2578]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,
              J., Rose, M. and S. Waldbusser, "Structure of
              Management Information Version 2 (SMIv2)", STD 58, RFC
              2578, April 1999.




Nicklass, et al.         Expires August 20, 2008               [Page 35]

Internet-Draft             Manage ATM over PSN             February 2008


  [RFC2579]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,
              J., Rose, M. and S. Waldbusser, "Textual Conventions
              for SMIv2", STD 58, RFC 2579, April 1999.

  [RFC2580]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,
              J., Rose, M. and S. Waldbusser, "Conformance
              Statements for SMIv2", STD 58, RFC 2580, April 1999.

  [BCP14]     S. Bradner, "Key words for use in RFCs to Indicate
              Requirement Levels", RFC 2119 (BCP 14), March 1997


12.2.  Informative references


   [PWREQ]     Xiao et al, "Requirements for Pseudo Wire Emulation Edge-
               to-Edge (PWE3)", RFC 3916, September 2004.

   [PWARCH]    Bryant S., Pate P., "PWE3 Architecture", RFC 3985,
               March 2005.

   [RFC3410]   Case, J., Mundy, R., Partain, D. and B. Stewart,
               "Introduction and Applicability Statements for
               Internet-Standard Management Framework", RFC 3410,
               December 2002.


13.  Acknowledgements

   This document was produced by the PWE3 Working Group.


Authors' Addresses

   Orly Nicklass
   Nokia Siemens Networks
   3 Hanagar St.
   Hod Hasharon
   ISRAEL

   Phone: +972 9 7751290
   Email: orly.nicklass@nsn.com









Nicklass, et al.         Expires August 20, 2008               [Page 36]

Internet-Draft             Manage ATM over PSN             February 2008


   Senthilkumar Sathappan
   Marconi Communications
   1000 Marconi Drive
   Warrendale, PA  15086
   USA

   Phone: +1-724-742-6147
   Email: senthilkumar.sathappan@marconi.com


   Marichetty Venkatesan
   Marconi Communications
   1000 Marconi Drive
   Warrendale, PA  15086
   USA

   Phone: +1-724-742-7058
   Email: venkatesan.marichetty@marconi.com


   Thomas D. Nadeau
   Cisco Systems, Inc.
   250 Apollo Drive
   Chelmsford, MA  01824
   USA

   Phone: +1-978-497-3051
   Email: tnadeau@cisco.com























Nicklass, et al.         Expires August 20, 2008               [Page 37]

Internet-Draft             Manage ATM over PSN             February 2008


Full Copyright Statement

   Copyright (C) The IETF Trust (2008).

   This document is subject to the rights, licenses and restrictions
   contained in BCP 78, and except as set forth therein, the authors
   retain all their rights.

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND
   THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Acknowledgment

   Funding for the RFC Editor function is provided by the IETF
   Administrative Support Activity (IASA).





Nicklass, et al.         Expires August 20, 2008               [Page 38]

