username = UTF-8 string identifying the user/client
password = UTF-8 string representing the user's password


mechanism        = String identifying a [SASL] authentication mechanism
initial-response = Optional initial client response.  If present, the
                           response MUST be encoded as specified in Section 3







                           of [BASE64].


cw==
NTk0Nzk4ZjY4ZmY5ZWEwNDg1NGE2NGQ1ZQ==
authinfo-capability     = "AUTHINFO" *(SP authinfo-capability-arg) CRLF
authinfo-capability-arg = "USER" / "SASL"
sasl-capability         = "SASL" 1*(SP sasl-mech) CRLF
authinfo-user-command   = "AUTHINFO" 1*WSP "USER" 1*WSP username
                               *WSP CRLF
                   ; XXX problem here, username is UTF8-SAFE which
                   ; I think includes whitespace, doesn't it?
authinfo-pass-command   = "AUTHINFO" 1*WSP "PASS" 1*WSP password
                               *WSP CRLF
authinfo-sasl-command   = "AUTHINFO" 1*WSP "SASL" 1*WSP sasl-mech
                               [1*WSP (base64 / "=") *WSP]
                               *(CRLF [client-sasl-resp]) CRLF
                   ; client waits for server response after each CRLF
client-sasl-resp        = "*" / base64
server-sasl-chal        = ("383" / "283") SP [base64] CRLF


sasl-mech               = 1*20mech-char
mech-char               = %x41-5A / DIGIT / "-" / "_"
                   ; mech names restricted to uppercase letters,
                   ; digits, "-" and "_"
username                = 1*UTF8-SAFE
password                = 1*UTF8-SAFE
UTF8-SAFE               = %x01-09 / %x0B-0C / %x0E-7F / UTF8-non-ascii
                   ; UTF8-non-ascii defined in [NNTP]







base64                  = *(4base64-char) [base64-terminal]
base64-char             = ALPHA / DIGIT / "+" / "/"
                   ; case sensitive
base64-terminal         = (2base64-char "==") / (3base64-char "=")



