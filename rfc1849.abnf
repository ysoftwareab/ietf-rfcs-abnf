sentence  = clause *( punct clause ) "."
punct     = ":" / ";"
clause    = 1*word [ "(" clause ")" / "," 1*word ]
word      = <any English word>

article         = 1*header separator body
header          = start-line *continuation
start-line      = header-name ":" space [ nonblank-text ] eol
continuation    = space nonblank-text eol
header-name     = 1*name-character *( "-" 1*name-character )
name-character  = letter / digit
letter          = <ASCII letter A-Z or a-z>
digit           = <ASCII digit 0-9>
separator       = eol
body            = *( [ nonblank-text / space ] eol )
eol             = <EOL>
nonblank-text   = [ space ] text-character *( space-or-text )
text-character  = <any ASCII character except NUL (ASCII 0),
                          HT (ASCII 9), LF (ASCII 10), CR (ASCII 13),
                          or blank (ASCII 32)>
space           = 1*( <HT (ASCII 9)> / <blank (ASCII 32)> )
space-or-text   = space / text-character

encoded-word  = "=?" charset "?" encoding "?" codes "?="
charset       = 1*tag-char
encoding      = 1*tag-char
tag-char      = < ASCII printable character except
                                !()<>@,;:\"[]/?= >
codes         = 1*code-char
code-char     = <ASCII printable character except ?>

Date-content  = [ weekday "," space ] date space time
weekday       = "Mon" / "Tue" / "Wed" / "Thu"
                    / "Fri" / "Sat" / "Sun"
date          = day space month space year
day           = 1*2digit
month         = "Jan" / "Feb" / "Mar" / "Apr" / "May" / "Jun"
                    / "Jul" / "Aug" / "Sep" / "Oct" / "Nov" / "Dec"
year          = 4digit / 2digit
time          = hh ":" mm [ ":" ss ] space timezone
timezone      = "UT" / "GMT"
                    / ( "+" / "-" ) hh mm [ space "(" zone-name ")" ]
hh            = 2digit
mm            = 2digit
ss            = 2digit
zone-name     = 1*( <ASCII printable character except ()\>
                    / space )

From-content  = address [ space "(" paren-phrase ")" ]
                    /  [ plain-phrase space ] "<" address ">"
paren-phrase  = 1*( paren-char / space / encoded-word )
paren-char    = <ASCII printable character except ()<>\>
plain-phrase  = plain-word *( space plain-word )
plain-word    = unquoted-word / quoted-word / encoded-word
unquoted-word = 1*unquoted-char
unquoted-char = <ASCII printable character except !()<>@,;:\".[]>
quoted-word   = quote 1*( quoted-char / space ) quote
quote         = <" (ASCII 34)>
quoted-char   = <ASCII printable character except "()<>\>
address       = local-part "@" domain
local-part    = unquoted-word *( "." unquoted-word )
domain        = unquoted-word *( "." unquoted-word )

Message-ID-content  = message-id
message-id          = "<" local-part "@" domain ">"

Subject-content  = [ "Re: " ] nonblank-text

Newsgroups-content  = newsgroup-name *( ng-delim newsgroup-name )
newsgroup-name      = plain-component *( "." component )
component           = plain-component / encoded-word
plain-component     = component-start *13component-rest
component-start     = lowercase / digit
lowercase           = <letter a-z>
component-rest      = component-start / "+" / "-" / "_"
ng-delim            = ","

ng-delim = "," [ space ]

Path-content    = [ path-list path-delimiter ] local-part
path-list       = relayer-name *( path-delimiter relayer-name )
relayer-name    = 1*rn-char
rn-char         = letter / digit / "." / "-" / "_"
path-delimiter  = "!"

path-delimiter = "!" [ space ]

Followup-To-content = Newsgroups-content / "poster"
Expires-content = Date-content

Reply-To-content = From-content

Sender-content = From-content

References-content = message-id *( space message-id )

Control-content  = verb *( space argument )
verb             = 1*( letter / digit )
argument         = 1*<ASCII printable character>

Distribution-content  = distribution *( dist-delim distribution )
dist-delim            = ","
distribution          = plain-component

dist-delim = "," [ space ]

Keywords-content = plain-phrase *( "," [ space ] plain-phrase )

Summary-content = nonblank-text

Approved-content = From-content *( "," [ space ] From-content )

Lines-content = 1*digit

Xref-content     = relayer 1*( space location )
relayer          = relayer-name
location         = newsgroup-name ":" article-locator
article-locator  = 1*<ASCII printable character>

Organization-content = nonblank-text

Supersedes-content = message-id *( space message-id )

Also-Control-content = Control-content

See-Also-content = message-id *( space message-id )

Article-Names-content  = 1*( name-clause space )
name-clause            = newsgroup-name ":" article-name
article-name           = letter 1*( letter / digit / "-" )

Article-Updates-content  = message-id *( space message-id )

cancel-arguments  = message-id *( space message-id )
cancel-body       = body

ihave-arguments   = *( message-id space ) relayer-name
sendme-arguments  = ihave-arguments
ihave-body        = *( message-id eol )
sendme-body       = ihave-body

newgroup-arguments  = newsgroup-name [ space moderation ]
moderation          = "moderated" / "unmoderated"
newgroup-body       = body
                          / [ body ] descriptor [ body ]
descriptor          = descriptor-tag eol description-line eol
descriptor-tag      = "For your newsgroups file:"
description-line    = newsgroup-name space description
description         = nonblank-text [ " (Moderated)" ]

rmgroup-arguments  = newsgroup-name
rmgroup-body       = body

sendsys-arguments  = [ relayer-name ]
sendsys-body       = body

version-arguments  =
version-body       = body

whogets-arguments  = newsgroup-name [ space relayer-name ]
whogets-body       = body

sendsys-reply      = responder 1*sys-line
responder          = "Responding-System:" space domain eol
sys-line           = relayer-name ":" newsgroup-patterns
                                   [ ":" text ] eol
newsgroup-patterns = newsgroup-name *( "," newsgroup-name )

whogets-reply      = responder-domain responder-relayer
                           response-date responding-to arrived-via
                           responder-version whogets-delimiter
                           *pass-line
responder-domain   = "Responding-System:" space domain eol
responder-relayer  = "Responding-Relayer:" space relayer-name eol
response-date      = "Response-Date:" space date eol
responding-to      = "Responding-To:" space message-id eol
arrived-via        = "Arrived-Via:" path-list eol
responder-version  = "Responding-Version:" space nonblank-text eol
whogets-delimiter  = eol
pass-line          = relayer-name [ space domain ] eol

checkgroups-arguments  =
checkgroups-body       = [ invalidation ] valid-groups
                             / invalidation
invalidation           = "!" plain-component
                               *( "," plain-component ) eol
valid-groups           = 1*( description-line eol )

batch         = 1*( batch-header article )
batch-header  = "#! rnews " article-size eol
article-size  = 1*digit

ec-batch             = "#! " compression-keyword eol
                                compressed-batch
compression-keyword  = "cunbatch"

