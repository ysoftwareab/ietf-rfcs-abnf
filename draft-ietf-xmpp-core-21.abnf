jid             = [ node "@" ] domain [ "/" resource ]
domain          = fqdn / address-literal
fqdn            = (sub-domain 1*("." sub-domain))
sub-domain      = ([IDNA] conformant domain label)
address-literal = IPv4address / IPv6address

xmlns='urn:ietf:params:xml:ns:xmpp-streams'/>
to='example.com'
xmlns='jabber:client'
version='1.0'>
from='example.com'
id='someid'
xmlns='jabber:client'
version='1.0'>
to='romeo@example.net'
to='juliet@example.com'
to='example.com'
xmlns='jabber:client'
version='1.0'>
from='example.com'
id='someid'
xmlns='jabber:client'
version='1.0'>
xmlns='urn:ietf:params:xml:ns:xmpp-streams'/>
xmlns='jabber:client'
to='example.com'
version='1.0'>

xmlns='jabber:client'
id='c2s_123'
from='example.com'
version='1.0'>

xmlns='jabber:client'
to='example.com'
version='1.0'>

xmlns='jabber:client'
from='example.com'
id='c2s_234'
version='1.0'>
xmlns='jabber:server'
to='example.com'
version='1.0'>

xmlns='jabber:server'
from='example.com'
id='s2s_123'
version='1.0'>

xmlns='jabber:server'
to='example.com'
version='1.0'>

xmlns='jabber:server'
from='example.com'
id='s2s_234'
version='1.0'>
xmlns='jabber:client'
to='example.com'
version='1.0'>

xmlns='jabber:client'
id='c2s_234'
from='example.com'
version='1.0'>

mechanism='DIGEST-MD5'/>

LGNoYXJzZXQ9dXRmLTgsYWxnb3JpdGhtPW1kNS1zZXNzCg==
realm="somerealm",nonce="OA6MG9tEQGm2hh",\
qop="auth",charset=utf-8,algorithm=md5-sess

username="somenode",realm="somerealm",\
nonce="OA6MG9tEQGm2hh",cnonce="OA6MHXh6VqTrRk",\
nc=00000001,qop=auth,digest-uri="xmpp/example.com",\
response=d388dad90d4bbd760a152321f2143af7,charset=utf-8

cnNwYXV0aD1lYTQwZjYwMzM1YzQyN2I1NTI3Yjg0ZGJhYmNkZmZmZAo=
rspauth=ea40f60335c427b5527b84dbabcdfffd

xmlns='jabber:client'
to='example.com'
version='1.0'>

xmlns='jabber:client'
id='c2s_345'
from='example.com'
version='1.0'>
xmlns='jabber:server'
to='example.com'
version='1.0'>

xmlns='jabber:server'
from='example.com'
id='s2s_234'
version='1.0'>

mechanism='DIGEST-MD5'/>

username="example.com",realm="somerealm",\
nonce="OA6MG9tEQGm2hh",qop="auth",\
charset=utf-8,algorithm=md5-sess

username="example.com",realm="somerealm",\
nonce="OA6MG9tEQGm2hh",cnonce="OA6MHXh6VqTrRk",\
nc=00000001,qop=auth,digest-uri="xmpp/example.com",\
response=d388dad90d4bbd760a152321f2143af7,charset=utf-8

cnNwYXV0aD1lYTQwZjYwMzM1YzQyN2I1NTI3Yjg0ZGJhYmNkZmZmZAo=
rspauth=ea40f60335c427b5527b84dbabcdfffd

xmlns='jabber:server'
to='example.com'
version='1.0'>

xmlns='jabber:client'
from='example.com'
id='s2s_345'
version='1.0'>
xmlns='jabber:client'
id='c2s_345'
from='example.com'
version='1.0'>
xmlns='jabber:server'
xmlns='jabber:server'
id='457F9224A0...'>

        Note: The 'to' and 'from' attributes are NOT REQUIRED on the
        root stream element.  If the namespace name is incorrect, then
        Originating Server MUST generate an <invalid-namespace/> stream
        error condition and terminate both the XML stream and the
        underlying TCP connection.  Note well that Receiving Server is
        NOT REQUIRED to reply and MAY silently terminate the XML stream
        and underlying TCP connection depending on security policies in
        place; however, if Receiving Server desires to proceed, it MUST
        sent a stream header back to Originating Server.

to='Receiving Server'
from='Originating Server'>
xmlns='jabber:server'
xmlns='jabber:server'
id='1251A342B...'>

        Note: If the namespace name is incorrect, then Receiving Server
        MUST generate an <invalid-namespace/> stream error condition and
        terminate both the XML stream and the underlying TCP connection
        between it and Authoritative Server.  If a stream error occurs
        between Receiving Server and Authoritative Server, then
        Receiving Server MUST generate a <remote-connection-failed/>
        stream error condition and terminate both the XML stream and the
        underlying TCP connection between it and Originating Server.

from='Receiving Server'
to='Originating Server'
id='457F9224A0...'>
from='Originating Server'
to='Receiving Server'
type='valid'
id='457F9224A0...'/>

         or

from='Originating Server'
to='Receiving Server'
type='invalid'
id='457F9224A0...'/>

        Note: If the ID does not match that provided by Receiving Server
        in Step 3, then Receiving Server MUST generate an <invalid-id/>
        stream error condition and terminate both the XML stream and the
        underlying TCP connection.  If the value of the 'to' address
        does not match a hostname recognized by Receiving Server, then
        Receiving Server MUST generate a <host-unknown/> stream error
        condition and terminate both the XML stream and the underlying
        TCP connection.  If the value of the 'from' address does not
        match the hostname represented by Originating Server when
        opening the TCP connection (or any validated domain), then
        Receiving Server MUST generate an <invalid-from/> stream error
        condition and terminate both the XML stream and the underlying
        TCP connection.  After returning the verification to Receiving
        Server, Authoritative Server SHOULD terminate the stream between
        them.

from='Receiving Server'
to='Originating Server'
type='valid'/>

        Note: At this point the connection has either been validated via
        a type='valid', or reported as invalid.  If the connection is
        invalid, then Receiving Server MUST terminate both the XML
        stream and the underlying TCP connection.  If the connection is
        validated, data can be sent by Originating Server and read by
        Receiving Server; before that, all data stanzas sent to
        Receiving Server SHOULD be silently dropped.

xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'>
targetNamespace='http://etherx.jabber.org/streams'
xmlns='http://etherx.jabber.org/streams'
elementFormDefault='unqualified'>

schemaLocation='http://www.w3.org/2001/xml.xsd'/>

minOccurs='0'
maxOccurs='unbounded'/>
minOccurs='0'
maxOccurs='unbounded'/>
maxOccurs='2'/>
namespace='##other'
minOccurs='0'
maxOccurs='1'/>
targetNamespace='urn:ietf:params:xml:ns:xmpp-streams'
xmlns='urn:ietf:params:xml:ns:xmpp-streams'
elementFormDefault='qualified'>

schemaLocation='http://www.w3.org/2001/xml.xsd'/>

targetNamespace='urn:ietf:params:xml:ns:xmpp-tls'
xmlns='urn:ietf:params:xml:ns:xmpp-tls'
elementFormDefault='qualified'>

ref='required'
minOccurs='0'
maxOccurs='1'/>
targetNamespace='urn:ietf:params:xml:ns:xmpp-sasl'
xmlns='urn:ietf:params:xml:ns:xmpp-sasl'
elementFormDefault='qualified'>

type='xs:NMTOKEN'
use='optional'/>
targetNamespace='urn:ietf:params:xml:ns:xmpp-bind'
xmlns='urn:ietf:params:xml:ns:xmpp-bind'
elementFormDefault='qualified'>

targetNamespace='jabber:server:dialback'
xmlns='jabber:server:dialback'
elementFormDefault='qualified'>

targetNamespace='urn:ietf:params:xml:ns:xmpp-stanzas'
xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'
elementFormDefault='qualified'>

schemaLocation='http://www.w3.org/2001/xml.xsd'/>
xmlns='jabber:client'
id='c2s_345'
from='example.com'
version='1.0'>
to='example.com'
type='set'
id='sess_1'>
to='someuser@example.com'
type='result'
id='sess_1'/>

xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
to='romeo@example.net'
from='juliet@example.com/balcony'
type='chat'
to='romeo@example.net'
from='juliet@example.com/balcony'
type='chat'
to='romeo@example.net'
from='juliet@example.com/balcony'
type='chat'
to='romeo@example.net/orchard'
from='juliet@example.com/balcony'
type='chat'>
to='juliet@example.com/balcony'
from='romeo@example.net/orchard'
type='chat'>
to='romeo@example.net/orchard'
from='juliet@example.com/balcony'
type='chat'>
subscription="to" and subscription="both" on behalf of the user's
type='probe'
from='romeo@example.net/orchard'
to='juliet@example.com'/>

type='probe'
from='romeo@example.net/orchard'
to='benvolio@example.org'/>

subscription="from" and subscription="both" on behalf of the user's
from='romeo@example.net/orchard'
to='juliet@example.com'/>

from='romeo@example.net/orchard'
to='mercutio@example.org'/>

from='juliet@example.com/balcony'
to='romeo@example.net/orchard'
from='juliet@example.com/chamber'
to='romeo@example.net/orchard'>
from='benvolio@example.org/pda'
to='romeo@example.net/orchard'
from='romeo@example.net/orchard'
to='juliet@example.com/chamber'/>

from='romeo@example.net/orchard'
to='juliet@example.com/balcony'/>

type='error'
from='mercutio@example.org'
to='romeo@example.net/orchard'>
from='romeo@example.net/orchard'
to='nurse@example.com'
from='romeo@example.net/orchard'
to='juliet@example.com/chamber'
from='romeo@example.net/orchard'
to='juliet@example.com/balcony'
type='unavailable'
from='juliet@example.com/balcony'
to='romeo@example.net/orchard'/>

type='unavailable'
from='romeo@example.net/orchard'
to='juliet@example.com/chamber'
from='romeo@example.net/orchard'
to='nurse@example.com'
name='Romeo'
subscription='both'>
name='Mercutio'
subscription='from'>
name='Benvolio'
subscription='both'>
name='Nurse'>
name='Nurse'
subscription='none'>
name='Nurse'
subscription='none'>
to='example.com'
type='result'/>
to='example.com'
type='result'/>


name='Romeo'
subscription='both'>
type='set' containing a <query/> element in the
jid='contact@example.org'
name='MyContact'>
jid='contact@example.org'
subscription='none'
name='MyContact'>
type='subscribe' to the contact:

jid='contact@example.org'
subscription='none'
ask='subscribe'
name='MyContact'>
from='user@example.com'
to='contact@example.org'
type='subscribe'/>
jid='user@example.com'
name='SomeUser'>
jid='user@example.com'
subscription='from'
name='SomeUser'>
from='contact@example.org/resource'
to='user@example.com'
type='subscribed'/>

from='contact@example.org/resource'
to='user@example.com'/>

subscription='none' and ask='subscribe' or (b)
subscription='from' and ask='subscribe'.  If the contact is not
to='user@example.com'
from='contact@example.org'
type='subscribed'/>

jid='contact@example.org'
subscription='to'
name='MyContact'>
from='contact@example.org/resource'
to='user@example.com/resource'/>

from='contact@example.org'
to='user@example.com'
type='unsubscribed'/>

from='contact@example.org'
to='user@example.com'
type='unsubscribed'/>

jid='contact@example.org'
subscription='none'
name='MyContact'>
jid='user@example.com'
subscription='from'
ask='subscribe'
name='SomeUser'>
from='contact@example.org'
to='user@example.com'
type='subscribe'/>

jid='contact@example.org'
subscription='both'
name='MyContact'>
from='user@example.com'
to='contact@example.org'
type='subscribed'/>
from='user@example.com/resource'
to='contact@example.org'/>

subscription='from' and ask='subscribe'.  If the user is not in
from='user@example.com'
to='contact@example.org'
type='subscribed'/>

jid='user@example.com'
subscription='both'
name='SomeUser'>
from='user@example.com/resource'
to='contact@example.org/resource'/>

from='user@example.com'
to='contact@example.org'
type='unsubscribed'/>

from='user@example.com'
to='contact@example.org'
type='unsubscribed'/>

jid='user@example.com'
subscription='from'
name='SomeUser'>
jid='contact@example.org'
subscription='none'
name='MyContact'>
from='user@example.com'
to='contact@example.org'
type='unsubscribe'/>

jid='user@example.com'
subscription='none'
name='SomeUser'>
from='user@example.com'
to='contact@example.org'
type='unsubscribe'/>

from='contact@example.org'
to='user@example.com'
type='unsubscribed'/>

from='contact@example.org'
to='user@example.com'
type='unavailable'/>

from='contact@example.org'
to='user@example.com'
type='unsubscribed'/>

from='contact@example.org'
to='user@example.com'
type='unavailable'/>

jid='contact@example.org'
subscription='from'
name='MyContact'>
from='user@example.com'
to='contact@example.org'
type='unsubscribe'/>

jid='user@example.com'
subscription='to'
name='SomeUser'>
from='user@example.com'
to='contact@example.org'
type='unsubscribe'/>

from='contact@example.org'
to='user@example.com'
type='unsubscribed'/>
from='contact@example.org'
to='user@example.com'
type='unavailable'/>

from='contact@example.org'
to='user@example.com'
type='unsubscribed'/>

from='contact@example.org'
to='user@example.com'
type='unavailable'/>

jid='user@example.com'
subscription='none'
name='SomeUser'>
from='contact@example.org'
to='user@example.com'
type='unsubscribed'/>

from='contact@example.org'
to='user@example.com'
type='unavailable'/>

jid='contact@example.org'
subscription='none'
name='MyContact'>
from='contact@example.org'
to='user@example.com'
type='unsubscribed'/>

from='contact@example.org'
to='user@example.com'
type='unavailable'/>

jid='user@example.com'
subscription='to'
name='SomeUser'>
from='contact@example.org'
to='user@example.com'
type='unsubscribed'/>

from='contact@example.org'
to='user@example.com'
type='unavailable'/>

jid='contact@example.org'
subscription='from'
name='MyContact'>
from='contact@example.org'
to='user@example.com'
type='unsubscribed'/>

from='contact@example.org'
to='user@example.com'
type='unavailable'/>

subscription='remove' as defined under Removing a Roster Item and
jid='contact@example.org'
subscription='remove'/>
from='user@example.com'
to='contact@example.org'
type='unsubscribe'/>

from='user@example.com'
to='contact@example.org'
type='unsubscribed'/>

jid='contact@example.org'
subscription='remove'/>
from='user@example.com'
to='contact@example.org'
type='unavailable'/>

jid='user@example.com'
subscription='to'
name='SomeUser'>
from='user@example.com'
to='contact@example.org'
type='unsubscribe'/>

jid='user@example.com'
subscription='none'
name='SomeUser'>
from='user@example.com'
to='contact@example.org'
type='unsubscribed'/>

from='user@example.com'
to='contact@example.org'
type='unavailable'/>
type='[jid|group|subscription]'
value='bar'
action='[allow|deny]'
order='unsignedInt'>
value='tybalt@example.com'
action='deny'
order='1'/>
value='both'
action='allow'
order='10'/>
value='juliet@example.com'
action='allow'
order='6'/>
value='benvolio@example.org'
action='allow'
order='7'/>
value='mercutio@example.org'
action='allow'
order='42'/>
xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
value='tybalt@example.com'
action='deny'
order='3'/>
value='paris@example.org'
action='deny'
order='5'/>
value='tybalt@example.com'
action='deny'
order='3'>
value='Enemies'
action='deny'
order='4'>
value='none'
action='deny'
order='5'>
type='unavailable' only.

value='tybalt@example.com'
action='deny'
order='7'>
value='Enemies'
action='deny'
order='8'>
value='to'
action='deny'
order='9'>
value='tybalt@example.com'
action='deny'
order='13'>
value='Enemies'
action='deny'
order='15'>
value='from'
action='deny'
order='17'>
value='tybalt@example.com'
action='deny'
order='29'>
value='Enemies'
action='deny'
order='31'>
value='none'
action='deny'
order='17'>
value='tybalt@example.com'
action='deny'
order='23'/>
value='Enemies'
action='deny'
order='13'/>
value='none'
action='deny'
order='11'/>
to='romeo@example.net'
from='tybalt@example.com/pda'
id='probing1'>
from='romeo@example.net'
to='tybalt@example.com/pda'
id='probing1'>
xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
value='none'
action='deny'
order='437'/>
targetNamespace='jabber:client'
xmlns='jabber:client'
elementFormDefault='qualified'>

schemaLocation='http://www.w3.org/2001/xml.xsd'/>

minOccurs='0'
maxOccurs='unbounded'/>
minOccurs='0'
maxOccurs='unbounded'/>
minOccurs='0'
maxOccurs='1'/>
minOccurs='0'
maxOccurs='unbounded'/>
minOccurs='0'
maxOccurs='1'/>
type='xs:string'
use='optional'/>
type='xs:NMTOKEN'
use='optional'/>
type='xs:string'
use='optional'/>
minOccurs='0'
maxOccurs='1'/>
minOccurs='0'
maxOccurs='unbounded'/>
minOccurs='0'
maxOccurs='1'/>
minOccurs='0'
maxOccurs='unbounded'/>
minOccurs='0'
maxOccurs='1'/>
type='xs:string'
use='optional'/>
type='xs:NMTOKEN'
use='optional'/>
type='xs:string'
use='optional'/>
minOccurs='0'
maxOccurs='1'/>
minOccurs='0'
maxOccurs='1'/>
type='xs:string'
use='optional'/>
type='xs:NMTOKEN'
use='required'/>
type='xs:string'
use='optional'/>
maxOccurs='1'/>
minOccurs='0'
maxOccurs='1'/>
namespace='##other'
minOccurs='0'
maxOccurs='1'/>
targetNamespace='jabber:server'
xmlns='jabber:server'
elementFormDefault='qualified'>

schemaLocation='http://www.w3.org/2001/xml.xsd'/>

minOccurs='0'
maxOccurs='unbounded'/>
minOccurs='0'
maxOccurs='unbounded'/>
minOccurs='0'
maxOccurs='1'/>
minOccurs='0'
maxOccurs='unbounded'/>
minOccurs='0'
maxOccurs='1'/>
type='xs:string'
use='required'/>
type='xs:NMTOKEN'
use='optional'/>
type='xs:string'
use='required'/>
minOccurs='0'
maxOccurs='1'/>
minOccurs='0'
maxOccurs='unbounded'/>
minOccurs='0'
maxOccurs='1'/>
minOccurs='0'
maxOccurs='unbounded'/>
minOccurs='0'
maxOccurs='1'/>
type='xs:string'
use='required'/>
type='xs:NMTOKEN'
use='optional'/>
type='xs:string'
use='required'/>
minOccurs='0'
maxOccurs='1'/>
minOccurs='0'
maxOccurs='1'/>
type='xs:string'
use='required'/>
type='xs:NMTOKEN'
use='required'/>
type='xs:string'
use='required'/>
maxOccurs='1'/>
minOccurs='0'
maxOccurs='1'/>
namespace='##other'
minOccurs='0'
maxOccurs='1'/>
targetNamespace='urn:ietf:params:xml:ns:xmpp-session'
xmlns='urn:ietf:params:xml:ns:xmpp-session'
elementFormDefault='qualified'>

targetNamespace='jabber:iq:privacy'
xmlns='jabber:iq:privacy'
elementFormDefault='qualified'>

minOccurs='0'
maxOccurs='1'/>
minOccurs='0'
maxOccurs='1'/>
minOccurs='0'
maxOccurs='unbounded'/>
type='xs:string'
use='optional'/>
type='xs:string'
use='optional'/>
minOccurs='0'
maxOccurs='unbounded'/>
type='xs:string'
use='required'/>
minOccurs='0'
maxOccurs='1'/>
minOccurs='0'
maxOccurs='1'/>
minOccurs='0'
maxOccurs='1'/>
minOccurs='0'
maxOccurs='1'/>
type='xs:unsignedInt'
use='required'/>
type='xs:string'
use='optional'/>
targetNamespace='jabber:iq:roster'
xmlns='jabber:iq:roster'
elementFormDefault='qualified'>
minOccurs='0'
maxOccurs='unbounded'/>
minOccurs='0'
maxOccurs='unbounded'/>
type='probe'.

