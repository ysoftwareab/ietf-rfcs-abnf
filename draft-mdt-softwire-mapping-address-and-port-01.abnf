P = R * M * j + M * K + i

       Where:

       *  PSID: K = 0 to R - 1

       *  Port range index: j = (1024 / M) / R to ((65536 / M) / R) - 1,
          if the well-known port numbers (0 - 1024) are excluded.

       *  Contiguous Port index: i = 0 to M - 1

K = (floor(P/M)) % R
       Where:

       *  % is the modulus operator

       *  floor(arg) is a function that returns the largest integer not
          greater than arg

PSID=0   | 1024, 1025, 1026, 1027, | 1536, 1537, 1538, 1539, | 2048
PSID=1   | 1028, 1029, 1030, 1031, | 1540, 1541, 1542, 1543, | ....
PSID=2   | 1032, 1033, 1034, 1035, | 1544, 1545, 1546, 1547, | ....
PSID=3   | 1036, 1037, 1038, 1039, | 1548, 1549, 1550, 1551, | ....
PSID=127 | 1532, 1533, 1534, 1535, | 2044, 2045, 2046, 2047, | ....


                             Figure 2: Example

offset=0 has also been proposed.

H1 = 192.32../16, h1 = 16, r1 = 1 => R1 = bin(0);
H2 = 63.245../16, h2 = 16, r2 = 1 => R2 = bin(1);

c = 40 => C = 2001:0db8:ff00::/40
PSID = bin(101) = 0x5
