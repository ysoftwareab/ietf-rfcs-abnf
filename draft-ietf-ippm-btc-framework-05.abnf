BTC = data_sent / elapsed_time

    where ``data_sent'' represents the unique ``data'' bits transfered
    (i.e., not including header bits or emulated header bits).  Also
    note that the amount of data sent should only include the unique
    number of bits transmitted (i.e., if a particular packet is
    retransmitted the data it contains should be counted only once).

    Central to the notion of bulk transport capacity is the idea that
    all transport protocols should have similar responses to congestion
    in the Internet.  Indeed the only form of equity significantly
    deployed in the Internet today is that the vast majority of all
    traffic is carried by TCP implementations sharing common congestion
    control algorithms largely due to a shared developmental heritage.

    [RFC2581] specifies the standard congestion control algorithms used
    by TCP implementations.  Even though this document is a (proposed)
    standard, it permits considerable latitude in implementation.  This
    latitude is by design, to encourage ongoing evolution in congestion
    control algorithms.

    This legal diversity in congestion control algorithms creates a
    difficulty for standardizing BTC metrics because the allowed
    diversity is sufficient to lead to situations where different
    implementations will yield non-comparable measures -- and
    potentially fail the formal tests for being a metric.

    There is also evidence that most TCP implementations exhibit
    non-linear performance over some portion of their operating region.
    It is possible to construct simple simulation examples where
    incremental improvements to a path (such as raising the link data
    rate) results in lower overall TCP throughput (or BTC) [Mat98].

    We believe that such non-linearity reflects weakness in our current
    understanding of congestion control and is present to some extent in
    all TCP implementations and BTC metrics.  Note that such
    non-linearity (in either TCP or a BTC metric) is potentially
    problematic in the market because investment in capacity might
    actually reduce the perceived quality of the network.  Ongoing
    research in congestion dynamics has some hope of mitigating or
    modeling the these non-linearities.
    
    Related areas, including integrated services
    [RFC1633,RFC2216], differentiated services [RFC2475] and Internet
    traffic analysis [MSMO97,PFTK98,Pax97b,LM97] are all currently
    receiving significant attention from the research community.  It is
    likely that we will see new experimental congestion control
    algorithms in the near future.  In addition, Explicit Congestion
    Notification (ECN) [RFC2481] is being tested for Internet
    deployment.  We do not yet know how any of these developments might
    affect BTC metrics, and thus the BTC framework and metrics may need
    to be revisited in the future.

    This document defines a framework for standardizing multiple BTC
    metrics that parallel the permitted transport diversity.  Two
    approaches are used.  First, each BTC metric must be much more
    tightly specified than the typical IETF transport protocol.
    Pseudo-code or reference implementations are expected to be the
    norm.  Second, each BTC methodology is expected to collect some
    ancillary metrics which are potentially useful to support analytical
    models of BTC.  If a BTC methodology does not collect these
    ancillary metrics, it should collect enough information such that
    these metrics can be derived (for instance a segment trace file).

    As an example, the models in [PFTK98, MSMO97, OKM96a, Lak94] all
    predict bulk transfer performance based on path properties such as
    loss rate and round trip time.  A BTC methodology that also provides
    ancillary measures of these properties is stronger because agreement
    with the analytical models can be used to corroborate the direct BTC
    measurement results.  

    More importantly the ancillary metrics are expected to be useful for
    resolving disparity between different BTC methodologies.  For
    example, a path that predominantly experiences clustered packet
    losses is likely to exhibit vastly different measures from BTC
    metrics that mimic Tahoe, Reno, NewReno, and SACK TCP algorithms
    [FF96].  The differences in the BTC metrics over such a path might
    be diagnosed by an ancillary measure of loss clustering.

    There are some path properties which are best measured as ancillary
    metrics to a transport protocol.  Examples of such properties
    include bottleneck queue limits or the tendency to reorder packets.
    These are difficult or impossible to measure at low rates and unsafe
    to measure at rates higher than the bulk transport capacity of the
    path.

    It is expected that at some point in the future there will exist an
    A-frame [RFC2330] which will unify all simple path metrics (e.g.,
    segment loss rates, round trip time) and BTC ancillary metrics
    (e.g., queue size and packet reordering) with different versions of
    BTC metrics (e.g., that parallel Reno or SACK TCP).

