INTERNET-DRAFT                                           Fred L. Templin
                                                        SRI International
                                                        12 March 2001

         Intra-Site Automatic Tunnel Addressing Protocol (ISATAP)
           (Formerly: Connecting IPv6 Nodes within IPv4 Sites)

                             Copyright Notice

                     Placeholder for ISOC copyright.

                 draft-ietf-ngtrans-isatap-00.txt

Abstract

    This document specifies a method for connecting IPv6 hosts and
    routers (nodes) within predominantly IPv4-based sites. This method is
    based on an IPv6-IPv4 compatibility aggregatable global unicast
    address format (described herein) that embeds the IPv4 address of a
    node within the EUI-64 format interface identifier of an IPv6
    address. This document assumes that, during the IPv4 to IPv6 co-
    existence and transition phase, many sites will deploy IPv6
    incrementally within their IPv4 interior routing domains; especially
    those sites which have large and complex pre-existing IPv4
    infrastructures. Within such sites, the address format and methods
    described in this document will enable IPv6 deployment for nodes that
    do not share a common multiple access datalink with an IPv6 gateway
    within their site.

    While other works in progress in the NGTRANS working group propose
    mechanisms for assigning globally-unique IPv6 address prefixes to
    sites and methods for inter-domain routing between such sites, the
    approach outlined in this memo enables large-scale incremental
    deployment of IPv6 for nodes within a site's pre-existing IPv4
    infrastructure without incurring aggregation scaling issues at the
    border gateways nor requiring site-wide deployment of special IPv4
    services such as multicast. The approach proposed by this document
    supports IPv6 routing within both the site-local and global IPv6
    routing domains as well as automatic IPv6 in IPv4 tunneling across
    portions of a site's IPv4 infrastructure which have no native IPv6
    support. Moreover, this approach supports automatic tunneling within
    sites which use non globally-unique IPv4 address assignments, such as
    when Network Address Translation [NAT] is used.

Status of this Memo

    This document is an Internet-Draft and is in full conformance with
    all provisions of Section 10 of RFC2026.



Templin                         Expires 12 October 2001         [Page 1]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


    Internet-Drafts are working documents of the Internet Engineering
    Task Force (IETF), its areas, and its working groups.  Note that
    other groups may also distribute working documents as Internet-
    Drafts.

    Internet-Drafts are draft documents valid for a maximum of six months
    and may be updated, replaced, or obsoleted by other documents at any
    time.  It is inappropriate to use Internet- Drafts as reference
    material or to cite them other than as "work in progress."

    The list of current Internet-Drafts can be accessed at
    http://www.ietf.org/ietf/1id-abstracts.txt

    The list of Internet-Draft Shadow Directories can be accessed at
    http://www.ietf.org/shadow.html.


1.  Introduction

    The IETF NGTRANS working group anticipates an heterogeneous IPv4/IPv6
    infrastructure in the near future and thus is chartered to develop
    mechanisms to support IPv4/IPv6 coexistence and transition toward
    global IPv6 deployment. For the most part, existing NGTRANS
    approaches focus on inter-domain routing between IPv6 "islands" using
    the existing global IPv4 backbone as transit. But, these islands may
    themselves consist of complex heterogeneous IPv4/IPv6 networks (e.g.
    large academic or commercial campus "intranets") that require intra-
    domain IPv4 to IPv6 transition mechanisms and strategies as well. In
    order to address this requirement, this document presents a simple
    and scalable approach that enables incremental intra-site deployment
    of IPv6 nodes within predominantly IPv4-based intranets.

    The approach outlined in this document is based on a new aggregatable
    global unicast address format that carries a standard 64-bit IPv6
    address prefix [ADDR][AGGR] with a specially-constructed 64-bit EUI-
    64 Interface Identifier [EUI64]. The 64-bit address prefix used by
    this format is fully compatible with all existing and emerging prefix
    assignment and inter-domain routing practices (e.g. [6to4],[6BONE]).
    But, the interface identifier employs a special construction using
    the IEEE Organizationally Unique Identifier (OUI) reserved by the
    Internet Assigned Numbers Authority [IANA] along with a "type" field
    to indicate that the identifier encapsulates an IPv4 address suitable
    for automatic intra-domain IPv6-in-IPv4 tunneling.  As such, the
    embedded IPv4 address NEED NOT be globally unique; rather, it need
    only be topologically correct for (and unique within) the context of
    that site.

    This approach allows dual-stack nodes that do not share a common



Templin                         Expires 12 October 2001         [Page 2]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


    multiple access datalink with an IPv6 gateway to join the global IPv6
    network by automatically tunneling IPv6 messages through the IPv4
    routing infrastructure within the site. Two methods for automatic
    discovery of an off-link IPv6 gateway within the site are provided.
    This approach allows large-scale intra-site deployment without incur-
    ring aggregation scaling issues at the border gateways, since only a
    single IPv6 address prefix is used for the entire site. Finally, this
    approach supports intranets which use non-globally unique IPv4
    addresses, such as when private address allocations [PRIVATE] and/or
    Network Address Translation [NAT] are used; even when multiple levels
    of NAT occur within a given site.

    In the following sections, we present our proposed IPv6-IPv4 compati-
    bility address format in detail. We further discuss technical con-
    siderations for the application of IPv6-IPv4 compatibility addresses
    to facilitate incremental deployment of IPv6 within predominantly
    IPv4-based Intranets.


2.  Changes

    Major changes from version 01 to version 02:

      - Title change to provide higher-level description of field of
        use addressed by this draft. Removed other extraneous text.

      - Major new section on automatic discovery of off-link IPv6 routers
        when IPv6-IPv4 compatibility addresses are used.


3.  IPv6-IPv4 Compatibility Address Format

    In sections 3.1 and 3.2, we will motivate our proposed extensions of
    the existing IEEE OUI reserved by IANA to support IEEE EUI-64 format
    addresses.  While these proposed extensions are necessary to support
    our IPv6-IPv4 compatibility address format, they also provide a flex-
    ible framework for future IANA use. Therefore, we believe the exten-
    sions proposed in sections 3.1 and 3.2 may provide beneficial future
    use to the IANA beyond the scope of IPv6-IPv4 compatibility
    addresses. We present our IPv6-IPv4 compatibility address format pro-
    posal in sections 3.3 and 3.4 and conclude this section with some
    notes on deployment considerations.


    3.1.  IEEE EUI-64 Interface Identifiers in IPv6 Addresses

    IPv6 aggregatable global and local-use unicast addresses [ADDR]
    include a 64-bit interface identifier in IEEE EUI-64 format [EUI64],



Templin                         Expires 12 October 2001         [Page 3]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


    which is specified as the concatenation of a 24-bit company_id value
    (also known as the OUI) assigned by the IEEE Registration Authority
    (IEEE/RAC) and a 40-bit extension identifier assigned by the organi-
    zation owning that OUI.  IEEE EUI-64 interface identifiers are for-
    matted as follows:

     |0              1|1              3|3              4|4              6|
     |0              5|6              1|2              7|8              3|
     +----------------+----------------+----------------+----------------+
     |ccccccugcccccccc|ccccccccmmmmmmmm|mmmmmmmmmmmmmmmm|mmmmmmmmmmmmmmmm|
     +----------------+----------------+----------------+----------------+

    Where 'c' are the company-specific bits of the OUI, 'u' is the
    universal/local bit, 'g' is the individual/group bit and 'm' are the
    extension identifier bits. (NOTE: [ADDR] specifies that the 'u' bit
    is inverted from its normal sense in the IEEE context; therefore u=1
    indicates global scope and u=0 indicates local scope).

    In order to support encapsulation of legacy IEEE EUI-48 (24-bit)
    extension identifier values, [EUI64] specifies that the first two
    octets of the EUI-64 40-bit extension identifier (bits 24 through 39
    of the EUI-64 address itself) SHALL BE 0xFFFE if the extension iden-
    tifier encapsulates an EUI-48 value. [EUI64] further specifies that
    the first two octets of the extension identifier SHALL NOT be 0xFFFF,
    as this value is reserved by the IEEE/RAC. However, all other 40-bit
    extension identifier values are available for assignment by the
    addressing authority responsible for a given OUI.


    3.2.  An EUI-64 Interface Identifier Format for IANA

    The IANA owns IEEE OUI: 0x00005E (also written as: 00-00-5E), and
    [IANA] specifies EUI-48 format (24-bit) interface identifier assign-
    ments within that OUI. But, [IANA] does not specify how these legacy
    EUI-48 assignments will be written in EUI-64 format, nor does it
    specify a format for future 40-bit extension identifier assignments.
    We propose the following format for EUI-64 addresses within IANA's
    OUI reservation:













Templin                         Expires 12 October 2001         [Page 4]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


     |0                      2|2      3|3      3|4                      6|
     |0                      3|4      1|2      9|0                      3|
     +------------------------+--------+--------+------------------------+
     |  OUI ("00-00-5E"+u+g)  |  TYPE  |  TSE   |          TSD           |
     +------------------------+--------+--------+------------------------+

    Where the fields are:

       OUI     IANA's OUI: 00-00-5E with 'u' and 'g' bits (3 octets)

       TYPE    Type field; indicates how (TSE, TSD) are interpreted (1 octet)

       TSE     Type-Specific Extension (1 octet)

       TSD     Type-Specific Data (3 octets)


    And the following interpretations are defined based on TYPE:

       TYPE         (TSE, TSD) Interpretation
       ----         -------------------------
       0x00-0xFD    RESERVED for future IANA use
       0xFE         (TSE, TSD) together contain an embedded IPv4 address
       0xFF         TSD is interpreted based on TSE as follows:

                    TSE          TSD Interpretation
                    ---          ------------------
                    0x00-0xFD    RESERVED for future IANA use
                    0xFE         TSD contains 24-bit EUI-48 intf identif-
    ier
                    0xFF         RESERVED by IEEE/RAC

    Essentially, if TYPE=0xFE, TSE is treated as an extension of TSD. If
    TYPE=0xFF, TSE is treated as an extension of TYPE. Other values for
    TYPE (and hence, other interpretations of TSE, TSD) are reserved for
    future IANA use. This format conforms to all requirements specified
    in [EUI64] and supports encapsulation of EUI-48 interface identifiers
    in the manner described by that document. For example, an existing
    IANA EUI-48 format multicast address such as:

        01-00-5E-01-02-03

    would be written in the IANA EUI-64 format as:

        01-00-5E-FF-FE-01-02-03

    But, this proposed format also provides a special TYPE (0xFE) for
    embedding IPv4 addresses within the IANA 40-bit extension identifier.



Templin                         Expires 12 October 2001         [Page 5]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


    This special TYPE forms the basis for our IPv6-IPv4 compatibility
    aggregatable global unicast address format proposal as described in
    the following sections.


    3.3.  IPv6-IPv4 Compatibility Address Construction

    Using the proposed IANA-specific method for interface identifier con-
    struction discussed in sections 3.1 and 3.2 (with TYPE=0xFE), and
    with reference to [ADDR], we can construct IPv6-IPv4 compatibility
    aggregatable global unicast addresses. Using this methodology, we
    propose an IPv6 address format with embedded IPv4 address in the
    EUI-64 interface identifier. The following diagram shows the con-
    struction:

     | 3|  13 | 8 |   24   |   16   | 8 | 8 | 8 | 8 |    32 bits     |
     +--+-----+---+--------+--------+---+---+---+---+---+---+---+----+
     |FP| TLA |RES|  NLA   |  SLA   | 0x| 0x| 0x| 0x|  IPv4 Address  |
     |  | ID  |   |  ID    |  ID    | 02| 00| 5E| FE|   of Endpoint  |
     +--+-----+---+--------+--------+--------------------------------+

    (NOTE: the least significant octet of the OUI in the interface iden-
    tifier is 0x02 instead of 0x00 since u=1 for global scope.)

    By way of example, an existing node with IPv4 address 140.173.129.8
    might be assigned an IPv6 64-bit prefix of 3FFE:1a05:510:200::/64. We
    can then construct an IPv6-IPv4 compatibility aggregatable global
    unicast address for this node as:

       3FFE:1a05:510:200:0200:5EFE:8CAD:8108

    or (perhaps more appropriately) written as the alternative form for
    an IPv6 address with embedded IPv4 address found in [ADDR]:

       3FFE:1a05:510:200:0200:5EFE:140.173.129.8

    Similarly, we can construct the link-local and site-local variants
    (respectively) of the IPv6-IPv4 compatibility address as:

       FE80::0200:5EFE:140.173.129.8
       FEC0::200:0200:5EFE:140.173.129.8


    3.4.  Advantages

    By embedding an IPv4 address in the interface identifier portion of
    an IPv6 address as described in section 3.3, we can construct aggre-
    gatable global unicast IPv6 addresses that can either be routed



Templin                         Expires 12 October 2001         [Page 6]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


    globally via the IPv6 infrastructure or automatically tunneled
    locally across portions of a site's IPv4 infrastructure which have no
    native IPv6 routing support.  Thus the addressing scheme supports
    heterogeneous IPv6/IPv4 infrastructures in transition with incremen-
    tal deployment of IPv6 at the site level.  Additionally, a node with
    such an IPv6-IPv4 compatibility address could act as a gateway for
    nodes with native IPv6 addresses connected to the same link, since it
    could automatically tunnel messages across a site's IPv4 domain to
    reach a border IPv6 gateway for the site on behalf of such native
    IPv6 nodes. An example would be deployment of IPv6 on some subset of
    the hosts attached to a workgroup's Ethernet LAN. In this case, one
    host would receive an IPv6-IPv4 compatibility address and act as a
    gateway for the other hosts which receive native IPv6 addresses.

    An additional advantage for our proposed method of embedding an IPv4
    address in the interface identifier portion of an IPv6 address not
    found in other approaches such as [6TO4] is that large numbers of
    IPv6-IPv4 compatibility addresses could be assigned within a common
    IPv6 routing prefix, thus providing maximal aggregation at the border
    gateways. For example, the single 64-bit IPv6 prefix:

        3FFE:1a05:510:2412::/64

    could include literally millions of nodes with IPv6-IPv4 compatibil-
    ity addresses. This feature would allow a "sparse mode" IPv6 deploy-
    ment such as the deployment of sparse populations of IPv6 hosts on
    large numbers of independent links throughout a large corporate
    Intranet.

    A final important advantage is that this method supports both sites
    that use globally unique IPv4 address assignments and those that use
    non-globally unique IPv4 addresses, such as when private address
    assignments and/or Network Address Translation are used. By way of
    analogy to the US Postal system, inter-domain transition approaches
    such as [6TO4] provide means for routing messages "cross-country" to
    the "street address" of a distant site while the approach outlined in
    this document provides localized routing information to reach a
    specific (mailstop, apartment number, post office box, etc) WITHIN
    that site.  Thus, the site-level routing information need not have
    relevance outside the scope of that site.


3.5.  Deployment Considerations

    IPv6-IPv4 compatibility addresses should only be used by nodes which
    do not share a common multiple access datalink with an IPv6 router
    for their site. But, there are numerous cases in which such "iso-
    lated" nodes may occur within an heterogeneous IPv6/IPv4 Intranet.



Templin                         Expires 12 October 2001         [Page 7]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


    Two such examples are:

      - A researcher wishes to run IPv6 on his existing IPv4-based works-
      tation. One or more IPv6 routers are configured within the
      researchers site, but the network administrators have not yet con-
      figured an IPv6 router for the LAN that connects the researcher's
      workstation.

      - A network administrator within a large corporate network wishes
      to configure IPv6 on the existing IPv4 subnets under their jurisd-
      iction, but these subnets are separated from the IPv6 border gate-
      way for the corporation by other IPv4 subnets which are not ready
      for IPv6 deployment.

    In both examples, intra-site IPv6-in-IPv4 tunneling can be used to
    span the "gaps" in IPv6 coverage. The IPv6-IPv4 compatibility address
    format described in the previous subsections provides a means for
    isolated nodes to automatically and transparently communicate the
    IPv4 address of their *own* end of the tunnel to an off-link IPv6
    gateway.  While such nodes may optionally use stateful configuration
    to set a "default" route that points to the off-link gateway, a
    greatly preferred alternative is to provide for automatic intra-site
    IPv6 router discovery and stateless address autoconfiguration [DIS-
    CUSS]. The following section presents a means for the automatic
    discovery of off-link IPv6 routers.


4.  Automatic Discovery of Off-link IPv6 Routers

    As described in [AUTO], a node that does not share a common multiple
    access datalink with an IPv6 router will NOT receive unsolicited
    Router Advertisements (Rtadv's), nor will Router Solicitations
    (Rtsol's) from that node reach an IPv6 router on the local link.
    Hence, a means for off-link IPv6 router discovery is required. We
    present the following procedure for a node to initiate off-link IPv6
    router discovery (and for an off-link IPv6 router to respond) when
    IPv6-IPv4 compatibility addresses are used:














Templin                         Expires 12 October 2001         [Page 8]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


      - The node constructs an IPv6-IPv4 compatibility link local address
        for itself (as described in section 3.) as:

          FE80::0200:5EFE:V4ADDR_NODE

      - The node discovers the IPv4 address for an off-link IPv6 router
        as: V4ADDR_RTR (**)

      - The node sends an Rtsol to the IPv6 "all-routers-multicast" address
        tunneled through the IPv4 infrastructure to the off-link IPv6 router's
        IPv4 address. The addresses used in the IPv6 and IPv4 headers are:

          ipv6_src:  FE80::0200:5EFE:V4ADDR_NODE
          ipv6_dst:  FF02::2
          ipv4_src:  V4ADDR_NODE
          ipv4_dst:  V4ADDR_RTR

      - Upon receiving the tunneled Rtsol, the off-link IPv6 router sends
        a unicast Rtadv to the unicast address of the node which sent the
        Rtsol; again, by tunneling the Rtadv through IPv4. The addresses
        used in the IPv6 and IPv4 headers are:

          ipv6_src:  FE80::0200:5EFE:V4ADDR_RTR
          ipv6_dst:  FE80::0200:5EFE:V4ADDR_NODE
          ipv4_src:  V4ADDR_RTR
          ipv4_dst:  V4ADDR_NODE


      - Upon receiving the Rtsol, the originating node performs address
        autoconfiguration as described in [AUTO] and constructs:

        - a fully-qualified IPv6-IPv4 compatibility address for use as
          the source address for IPv6 packets

        - a default route that points to the off-link IPv6 router's
          IPv6-IPv4 compatibility link-local address

    Note (**) that the above procedure assumes a means for discovering
    V4ADDR_RTR. We present two alternative methods for the automatic
    discovery of V4ADDR_RTR:


4.1.  DNS Well-Known Service Name

    The first method for discovering V4ADDR_RTR employs a new DNS Well-
    Known Service (WKS) name [DNS1,DNS2]. With the establishment of a new
    well-known service name (e.g. "V6V4GW"), administrators could publish
    the IPv4 address of a gateway which implementations could use to



Templin                         Expires 12 October 2001         [Page 9]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


    discover V4ADDR_RTR. This method has the advantage that it can be
    deployed immediately using existing mechanisms. However, it requires
    name service lookups and may not always provide the optimum
    V4ADDR_RTR resolution for isolated hosts which use IPv6-IPv4 compati-
    bility addresses.


4.2.  IPv4 Anycast for Intra-domain IPv6 router

    [6TO4ANY] proposes an IPv4 anycast prefix for 6to4 relay routers.
    The proposal suggests an IPv4 prefix assignment 'x.x.x.0/nn' ('nn' is
    currently proposed as 16) where the single address 'x.x.x.1' is
    assigned as the "6to4 IPv6 relay anycast address". We propose analo-
    gous assignments for the purpose of an "IPv6-IPv4 compatibility
    router anycast address". (Whether the reservation of a second /32
    assignment from the 6to4 IPv4 anycast prefix proposed in [6TO4ANY]
    would be possible, or a separate prefix assignment would be required
    is a matter of debate and TBD.)

    Any IPv6 router capable of providing an IPv6-IPv4 compatibility
    address-based tunnel endpoint as described in the previous sections
    would advertise the IPv6-IPv4 compatibility router anycast prefix via
    the intra-domain IPv4 routing infrastructure. Isolated IPv6 nodes
    would then use the IPv6-IPv4 compatibility router anycast address as
    the V4ADDR_RTR IPv4 destination for off-link Rtsol's. This approach
    has the significant advantages that:

      - implementations could hard-code the well-known V6V4Compat
        anycast address, thus avoiding service discovery via DNS

      - an optimum path to an off-link IPv6 router would be ensured
        by intra-domain IPv4 routing

    As described above, the IPv4 anycast method for locating intra-domain
    routers that support IPv6-IPv4 compatibility address-based tunneling
    provides significant functional advantages over the DNS approach,
    while the DNS approach can be implemented immediately pending the
    registration of a WKS name with IANA. While either method will work,
    the decision of which to push for standardization is TBD pending dis-
    cussion at upcoming NGTRANS WG meetings.


5.  Sending Rules and Routing Considerations

    The sending rule for a host or router that sends an IPv6 packet to an
    IPv6-IPv4 compatibility destination address is simple and direct:

      "If the 64-bit IPv6 prefix of the IPv6-IPv4 compatibility



Templin                        Expires 12 October 2001         [Page 10]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


      destination address matches the 64-bit IPv6 prefix of one of my
      network interfaces, tunnel the packet through IPv4 - else, route
      the packet through IPv6."

    From the above rule, a sender that does NOT have an interface which
    shares a common 64-bit routing prefix with the packet's IPv6-IPv4
    compatibility destination address simply sends the packet to the
    next-hop gateway determined by an ordinary IPv6 routing table lookup.
    In short, when a sending node does not have an interface which shares
    a common 64-bit (site-level) routing prefix with an IPv6-IPv4 compa-
    tibility destination address, the sending rule is identical to that
    for a native IPv6 destination address. This decision is independent
    of whether the sender has an IPv6-IPv4 compatibility address itself,
    or whether the sender even comprises a dual-stack configuration.
    Indeed, the sender can simply be a native IPv6 node with no legacy
    IPv4 support.

    When a sender has an interface which shares a common 64-bit routing
    prefix with an IPv6-IPv4 compatibility destination address, however,
    the sender must assume that the destination is NOT directly reachable
    at the datalink level - even though the shared site-level routing
    prefix implies otherwise. Instead, if the sender comprises a dual-
    stack configuration, it should automatically tunnel the IPv6 packet
    (via IPv6-in-IPv4 tunneling as described in [MECH]) to the IPv4
    address embedded within the IPv6-IPv4 compatibility destination
    address' interface identifier. If the sender is an IPv6-only node
    that DOES NOT comprise a dual-stack configuration, however, it has no
    means for automatically tunneling the packet via IPv4. In this case:

      - If the sender is the host that originates the packet, it should
        send the packet to a router that lists the 64-bit prefix in its
        router advertisements. If no such router exists, the sender should
        drop the packet and return a "No route to host" error indication
        to the originating application.

      - If the sender is a router that forwards the packet, it should drop
        the packet and send an ICMPv6 "Destination Unreachable" message to
        the source

    By implication, the scheme breaks down if a packet with an IPv6-IPv4
    compatibility destination address reaches an IPv6-only router that
    has an interface which shares a common 64-bit routing prefix with the
    destination address. Additional mechanisms to address this issue
    might be possible, such as allowing dual-stack routers to advertise
    96-bit prefixes which incorporate the special 32-bit EUI-64 interface
    identifier prefix: 0200:5EFE. A sender could then interpret such an
    advertisement to mean that the advertising router comprises a dual
    stack and is capable of intra-site IPv6-in-IPv4 tunneling. But a



Templin                        Expires 12 October 2001         [Page 11]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


    reasonable argument could be made to the effect that:

      "By the time IPv6-only routers begin to proliferate throughout a
      site, nodes within the site should no longer be using IPv6-IPv4
      compatibility addresses."

    In fact, the advent of IPv6-only routers within a site would serve as
    a strong indication that the site is no longer a predominantly IPv4-
    based infrastructure in transition, but rather that the transition is
    either complete or nearly complete. Therefore, IPv6-IPv4 compatibil-
    ity addresses should no longer be used.


6.  Address Selection

    Other works in progress ([6TO4] and [SELECT]) have begun to explore
    the subject of address selection when multiple IPv6 destination
    address alternatives are available. These address selection policies
    deal with the 64-bit IPv6 routing prefix and thus can be applied
    independently of whether/not the destination address alternatives are
    constructed as described in this document. However, in order to
    ensure efficient routing within the destination's site, we propose
    the following simple "second-tier" address selection policy for deal-
    ing with IPv6-IPv4 compatibility addresses:

      "If multiple alternatives remain after address selection has been
      applied on the 64-bit routing prefixes, and if at least one of the
      remaining alternatives is constructed with a native IPv6 interface
      identifier (one that does NOT contain an embedded IPv4 address as
      described in this document), select a native IPv6 address.  Other-
      wise, select an IPv6-IPv4 compatible address."

    This policy decision is in keeping with the concept that NGTRANS
    transition mechanisms should remain in place ONLY as long as needed
    and should be disabled as soon as native IPv6 mechanisms become
    available.


7.  Automatic Deprecation

    IPv6-IPv4 compatibility addresses constructed in the manner described
    in this document are intended for use only by nodes which do not
    receive router advertisements due to not sharing a common multiple
    access datalink with an IPv6 router. When router advertisements
    become available (such as when an IPv6 router is deployed on a common
    multiple access datalink shared by the node), the node should discon-
    tinue use of its IPv6-IPv4 compatibility address and adopt a normal
    aggregatable global IPv4 unicast address using address auto-



Templin                        Expires 12 October 2001         [Page 12]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


    configuration [AUTO] for a prefix discovered through normal router
    discovery [DISC] means. In this way, IPv6-IPv4 compatibility
    addresses will gradually (and automatically) disappear as IPv6
    routers become widely deployed within a site.


8.  Multicast Considerations

    Other works in progress are currently investigating IPv4-mapped mul-
    ticast addressing issues. The address format discussed in this docu-
    ment is expected to be compatible with those emerging approaches.


9.  Relation to other works in progress

    The IPv6-IPv4 compatibility address format and routing policy deci-
    sions presented in this draft evolved from SRI contractual works out-
    side the scope of the NGTRANS working group. Additionally, the
    mechanisms presented in this draft were developed by the author with
    no prior knowledge of the activities in NGTRANS. The author recog-
    nizes that other works in progress seek to address very similar
    IPv4-IPv6 transition issues as those targeted by this draft. However,
    the approach described in this draft presents a number of unique
    advantages for NGTRANS that supplement the other works in progress.
    (Most specifically, advantages for incremental deployment of IPv6
    nodes at the intra-domain level.)


10.  IANA considerations

    In order to support the EUI-64 address form described in this docu-
    ment, we propose that IANA adopt the EUI-64 Interface Identifier for-
    mat specified in section 3.2 for the existing 00-00-5E OUI owned by
    IANA. No other actions are required by the IANA.


11.  Security considerations

    The IPv6-IPv4 compatibility address format does not support privacy
    extensions for stateless address autoconfiguration [PRIVACY].  How-
    ever, such privacy extensions are intended primarily to avoid reveal-
    ing one's MAC address, and the IPv6-IPv4 compatibility address format
    described in this document accomplishes this same goal.

    Additional security issues are called out in [6TO4] and probably
    apply here as well.





Templin                        Expires 12 October 2001         [Page 13]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


12.  Implementation status

    The author has implemented the mechanisms described in this draft
    through modifications to the FreeBSD 3.2-RELEASE [FBSD] operating
    system with the INRIA [INRIA] IPv6 distribution. These modifications
    implement the sending rules and routing considerations as described
    in section 5. The source code is not yet ready for public distribu-
    tion, but the author would be happy to discuss details with
    interested parties.

    Additionally, Windows XP RC1 will implement elements of the mechanism
    proposed in this paper.

Acknowledgements

    The ideas presented in this draft were derived from SRI contractual
    work.  The author recognizes that ideas similar to those in this
    document may have already been presented by others and wishes to ack-
    nowledge any other such authors. The author also wishes to ack-
    nowledge the government contract administrators who sponsored the
    projects from which these works derived as well as his SRI colleagues
    with whom he has discussed and reviewed this work, including Dr. Mike
    Frankel, J. Peter Marcotullio, Lou Rodriguez, and Dr. Ambatipudi Sas-
    try.

    The author acknowledges discussions with Alain Durand and Keith Moore
    during the IETF 48 conference in Pittsburgh, PA. which helped
    motivate ideas on restructuring this document from the first version.

    The author further wishes to provide special acknowledgement to Dave
    Thaler, Art Shelest, and their colleagues at Microsoft Research for
    their ideas on automatic discovery of off-link IPv6 routers. Much of
    the text in that section derives directly from discussions with Dave,
    Art and others.

References

    [AGGR]     Hinden., R, O'Dell, M., and Deering, S., "An IPv6
               Aggregatable Global Unicast Address Format",
               RFC 2374, July 1998.

    [ADDR]     Hinden, R., and S. Deering, "IP Version 6 Addressing
               Architecture", RFC 2373, July 1998.

    [AUTO]     Thomson, S., and T. Narten, "IPv6 Stateless Address
               Autoconfiguration", RFC 2462, December 1998.

    [DISC]     Narten, T., Nordmark, E., and W. Simpson, "Neighbor



Templin                        Expires 12 October 2001         [Page 14]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


               Discovery for IP Version 6 (IPv6)", RFC 2461,
               December 1998.

    [DNS1]     Mockapetris, P. "Domain names - concepts and facilities",
               STD 13, RFC 1034, November 1987.

    [DNS2]     Mockapetris, P. "Domain names - Implementation and Specif-
    ication",
               STD 13, RFC 1035, November 1987.

    [DNSSRV]   Gulbrandsen, A., Vixie, P., and L. Esibov, "A DNS RR for
               specifying the location of services (DNS SRV)", RFC 2782,
               February 2000.

    [EUI64]    IEEE, "Guidelines for 64-bit Global Identifier (EUI-64)
               Registration Authority",
               http://standards.ieee.org/regauth/oui/tutorials/EUI64.html,
               March 1997

    [IANA]     Reynolds, J., and J. Postel, "Assigned Numbers", STD 2,
               USC/Information Sciences Institute, October 1994.

    [IPV4]     Postel, J., "Internet Protocol", RFC 791

    [IPV6]     Deering, S., and R. Hinden, "Internet Protocol, Version 6
               (IPv6) Specification", RFC 2460

    [6TO4]     Carpenter, B., and K. Moore, "Connection of IPv6 Domains
               via IPv4 Clouds", RFC 3056, February 2001.

    [6TO4ANY]  Huitema, C., "An anycast prefix for 6to4 relay routers",
               draft-ietf-ngtrans-6to4anycsat-02.txt (work in progress)

    [MECH]     Gilligan, R., and E. Nordmark, "Transition Mechanisms for
               IPv6 Hosts and Routers", RFC 2893, August 2000.

    [SELECT]   Draves, R., Default Address Selection for IPv6, draft-
    ietf-
               ipngwg-default-addr-select-00.txt (work in progress)

    [FBSD]     http://www.freebsd.org

    [INRIA]    ftp://ftp.inria.fr/network/ipv6/

    [6BONE]    Rockell, R., and R. Fink, RFC 2772, February 2000.

    [PRIVATE]  Rekhter, Y., Moskowitz, B., Karrenberg, D., de Groot, G.
    J.,



Templin                        Expires 12 October 2001         [Page 15]
INTERNET-DRAFT   Intra-Site Automatic Tunnel Addressing    12 March 2001


               and E. Lear, "Address Allocation for Private Internets",
               RFC 1918, February 1996.

    [PRIVACY]  Narten, T., R. Draves, "Privacy Extensions for Stateless
    Address
               Autoconfiguration in IPv6", RFC 3041, January 2001.

    [NAT]      Egevang, K., and P. Francis, "The IP Network Address
               Translator (NAT)", RFC 1631, May 1994.

    [DISCUSS]  private discussions with Dave Thaler, Art Shelest, et al.


Authors Addresses

       Fred L. Templin
       SRI International
       333 Ravenswood Ave.
       Menlo Park, CA 94025, USA

       Email: templin@erg.sri.com

Intellectual Property

    PLACEHOLDER for full IETF IPR Statement if needed.

Full Copyright Statement

    PLACEHOLDER for full ISOC copyright Statement if needed.






















Templin                        Expires 12 October 2001         [Page 16]

