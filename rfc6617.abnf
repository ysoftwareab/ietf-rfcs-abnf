a = prf(b, c)
       The string "b" and "c" are given to a pseudo-random function
       (prf) to produce a fixed-length output "a".

Z = scalar-op(x, Y) = x*Y

Z = element-op(X, Y) = X + Y

Y = scalar-op(1, Y)

Y = scalar-op(x, Y) = element-op(Y, scalar-op(x-1, Y)), for x > 1

Z = scalar-op(x, Y) = Y^x mod p

Z = element-op(X, Y) = (X * Y) mod p

ske-seed = prf(Ni | Nr, psk | counter)

ske-value = prf+(ske-seed, "IKE SKE Hunting And Pecking")

found = 0
counter = 1
v = psk
ske-seed = prf(Ni | Nr, v | counter)
ske-value = prf+(ske-seed, "IKE SKE Hunting And Pecking")
x = ske-value
SKE = (x,y)
SKE = (x, p-y)
found = 1
v = random()
counter = counter + 1
found = 0
counter = 1
v = psk
ske-seed = prf(Ni | Nr, v | counter)
ske-value = prf+(ske-seed, "IKE SKE Hunting And Pecking")
ELE = ske-value ^ ((p-1)/r) mod p
SKE = ELE
found = 1
v = random()
counter = counter + 1
scalar = (private + mask) mod r

Element = inverse(scalar-op(mask, SKE))

skey = F(scalar-op(private,
                           element-op(Peer-Element,
                                      scalar-op(peer-scalar, SKE))))
ss = prf(Ni | Nr, skey | "Secure PSK Authentication in IKE")

AUTHi = prf(ss, <InitiatorSignedOctets> | COMi | COMr)

AUTHr = prf(ss, <ResponderSignedOctets> | COMr | COMi)

