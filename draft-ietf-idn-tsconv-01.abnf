index=1 refers to SC).

  ------------------------------------------------
  |  TC         |   SC         |  HSE code point |
  ------------------------------------------------
  | U+92C1      |  U+94DD      |  HSE+64ab       |
  ------------------------------------------------
  |    ...      |   ...        |                 |
  ------------------------------------------------ 
  | U+9223      |  U+9499      |  HSE+6ae7       |
  ------------------------------------------------
  |    ...      |   ...        |                 |
  ------------------------------------------------ 

  Table 1: The Table of TC/SC & HSE code point

E={Ek,k=1...2n}. Counting the following results Wk=SUM (|Ci-Ek|*Pi), 
i=1...m, k=1...2n. SUM() means to sum up.
	
E={Ek,k=1...2n}, and put it into the collection C, put the character 
Wk=SUM (|Ci-Ek|*Pi), i=1...m+1, k=1...2n-1. 

initial_bias = 72, initial_n = 0x80, delimiter = 0x2D };

delta = firsttime ? delta / damp : delta >> 1;
n = initial_n;
delta = out = 0;
max_out = *output_length;
bias = initial_bias;

h = b = out;

n = m;

t = k <= bias ? tmin : k - bias >= tmax ? tmax : k - bias;
q = (q - t) / (base - t);
bias = adapt(delta, h + 1, h == b);
delta = 0;
n = initial_n;
out = i = 0;
max_out = *output_length;
bias = initial_bias;

digit = decode_digit(input[in++]);
t = k <= bias ? tmin : k - bias >= tmax ? tmax : k - bias;
bias = adapt(i - oldi, out + 1, oldi == 0);

unicode_max_length = 256,
ace_max_length = 256
tcsc=ALLTC;
tcsc=ALLSC;
input_length = 0;

r = scanf("%2s%lx", uplus, &codept);
output_length = ace_max_length;
status = amc_ace_z_encode(input_length, input, uppercase_flags,
                              &output_length, output);
c = output[j];
r = puts(output);
input_length = strlen(input) - 1;
pp = strchr(print_ascii, *p);
b=q;
q=0;
      }
      *p = pp - print_ascii;
    }
    b+=(*input == 'b');
    q+=(*(input+1) == 'q');
output_length = unicode_max_length;
status = amc_ace_z_decode(input_length-4, input+4, &output_length,
                              output, uppercase_flags);
r = printf("%s+%04lX\n",
                 uppercase_flags[j] ? "U" : "u",
                 (unsigned long) output[j] );
seek=(min+max)/2;
max=seek-1;
min=seek+1;
seek=(min+max)/2;
max=seek-1;
min=seek+1;
f=0;
f=1;
