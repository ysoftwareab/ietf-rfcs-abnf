
Internet Draft                  APPC MIB                    Aug 12, 1994


                    Definitions of Managed Objects
                                for APPC

                             Aug 12, 1994


                         Michael Allen (editor)
                            IBM Corporation
                          moallen@vnet.ibm.com



                     Zbigniew Kielczewski (editor)
                      Eicon Technology Corporation
                            zbig@eicon.qc.ca



                         William Kwan (editor)
                         CrossComm Corporation
                           kwan@crosscomm.com



                   <draft-ietf-snanau-appcmib-01.txt>



                          Status of this Memo

This document is an Internet-Draft.  Internet-Drafts are working
documents of the Internet Engineering Task Force (IETF), its areas, and
its working groups.  Note that other groups may also distribute working
documents as Internet-Drafts.

Internet-Drafts are draft documents valid for a maximum of six months.
Internet-Drafts may be updated, replaced, or obsoleted by other
documents at any time.  It is not appropriate to use Internet-Drafts as
reference material or to cite them other than as a "working draft" or
"work in progress".

To learn the current status of any Internet-Draft, please check the
1id-abstracts.txt listing contained in the Internet-Drafts Shadow
Directories on ds.internic.net, nic.nordu.net, ftp.isi.edu, or
munnari.oz.au.





Expires February 1995                                           [Page 1]




Internet Draft                  APPC MIB                    Aug 12, 1994


1.  Introduction

This memo defines a portion of the Management Information Base (MIB) for
use with network management protocols in the Internet community.  In
particular, it defines objects for managing the configuration,
monitoring and control of network devices with APPC (Advanced Program to
Program Communications) capabilities. This memo identifies managed
objects for SNA-capable devices with one or more Nodes. These objects
are specific for the LU6.2 protocols and supplement the generic SNA
objects defined in the SNA NAU MIB module. Many of the tables in this
APPC MIB module are extensions of tables described in the SNA NAU MIB
module.



This memo does not specify a standard for the Internet community.

2.  The SNMPv2 Network Management Framework

The SNMPv2 Network Management Framework consists of four major
components.  They are:

o    RFC 1442 [2] which defines the SMI, the mechanisms used for
     describing and naming objects for the purpose of management.

o    RFC 1213 [3] defines MIB-II, the core set of managed objects for
     the Internet suite of protocols.

o    RFC 1445 [4] which defines the administrative and other
     architectural aspects of the framework.

o    RFC 1448 [5] which defines the protocol used for network access to
     managed objects.


The Framework permits new objects to be defined for the purpose of
experimentation and evaluation.


2.1.  Object Definitions

Managed objects are accessed via a virtual information store, termed the
Management Information Base or MIB.  Objects in the MIB are defined
using the subset of Abstract Syntax Notation One (ASN.1) defined in the
SMI (RFC 1442 [2]).  In particular, each object type is named by an





Expires February 1995                                           [Page 2]




Internet Draft                  APPC MIB                    Aug 12, 1994


OBJECT IDENTIFIER, an administratively assigned name.  The object type
together with an object instance serves to uniquely identify a specific
instantiation of the object.  For human convenience, we often use a
textual string, termed the descriptor, to refer to the object type.













































Expires February 1995                                           [Page 3]




Internet Draft                  APPC MIB                    Aug 12, 1994


3.  Overview

This document identifies the proposed set of objects for managing the
configuration, monitoring and controlling devices with APPC
capabilities. APPC is the aspect of SNA which supports peer to peer
communication. It consists of physical nodes (typically T2.1, but could
be 2.0 or 5), which provide the lower layer networking protocols and
logical units (LU Type 6.2) which provide the interface for applications
to communicate.

Local LUs and remote partner LUs connect with each other using sessions.
Multiple different sessions can be established between LUs with
characteristics defined by Modes. Session limits within a define Mode is
negotiated between the local and partner LUs using a protocol called
CNOS (Change Number of Sessions).

Transaction Programs (TP) are the applications which use the sessions to
communicate with each other.  Multiple TPs can use the same sessions,
but not at the same time. A single usage of a session is called a
conversation. While a session can stay active for a long time, a
conversation can come up and down based on usage by the TPs.

Common Programming Interface - Communication (CPI-C) is a standard API
(Application Programming Interface) for APPC and OSI TP that is used by
TPs for accessing conversations. Although, many of the CPI-C objects in
this MIB is relevant to both APPC and OSI TP, the intention is for
managing APPC products only.

The SNA/APPC terms and overall architecture are documented in [1], [8],
and [9].

The objects in this MIB are extensions to objects defined in the SNA NAU
MIB [7].

Highlights of the management functions supported by the APPC MIB module
include the following:


o    Activate and deactivate statistics keeping and counting.

o    Modification of APPC defaults.

o    Creation and deletion of partner LUs, modes, TPs and CPI-C side
     information via the RowStatus objects in their respective admin
     tables.





Expires February 1995                                           [Page 4]




Internet Draft                  APPC MIB                    Aug 12, 1994


o    Monitoring and modification of parameters related to local LU,
     partner LU, modes, TPs and CPIC side information.

o    Issue CNOS processing verbs/commands for INITIALIZE_SESSION_LIMIT,
     CHANGE_SESSION_LIMIT and RESET_SESSION_LIMIT.

o    Monitoring of APPC specific session operational parameters.

o    Monitoring of conversation operational parameters.

o    Traps for:
                     + No traps defined.


This MIB module does not support:


o    Activation or deactivation of local LUs.

o    Activation or deactivation of partner LUs.

o    Activation or deactivation of conversations.

o    Activation or deactivation of Transaction Programs.

o    Activation of sessions.

o    Deactivation of sessions (supported in SNANAU MIB).


3.1.  Applying MIB II to managing APPC devices

This section identifies how MIB II objects, specifically the MIB II
system group will be used in SNMP-based management of SNA NAUs.  The MIB
II system group applies to the SNMP Agent.

The following object is from the MIB II system group:


sysUpTime:  clock in the SNMP Agent/proxy-Agent; expressed in
                TimeTicks (1/100s of a seconds).

This MIB module uses the TimeStamp TEXTUAL-CONVENTION which is defined
in the SNMPv2 Textual Conventions (RFC 1443 [6]) as "the value of MIB
II's sysUpTime object when a specific occurrence happens." The specific





Expires February 1995                                           [Page 5]




Internet Draft                  APPC MIB                    Aug 12, 1994


occurrences related to APPC management are defined in this MIB module.


3.2.  APPC MIB Structure

The APPC MIB module contains six groups of objects:


o    appcGlobal - objects related to global defaults and controls.

o    appcLu   - objects related to LU6.2 specific local and partner LU,
     mode definition, monitoring and control. In addition, CNOS
     processing objects are also part of this group.

o    appcTp  - objects related transaction program definition,
     monitoring and control.

o    appcSession  - objects related to LU6.2 specific session
     monitoring.

o    appcConversation  - objects related to conversation monitoring.

o    appcCPIC  - objects related to related CPI-C side information
     definition and monitoring.


These groups are described below in more detail.

The objects related to APPC are generally organized into two types of
tables: the Admin and Oper tables.


The "Admin" table contains parameters which are used by a Management
Station to affect the operation of APPC.  Some parameters are used to
initialize and configure the APPC service at the next startup, while
others can take effect immediately.  A Management Station can
dynamically define APPC resources (LUs, modes, TPs, CPI-C side
information tables) by creating new entries in the Admin table.


The "Oper" table is an extension (supplement) of the corresponding Admin
table.  It contains objects which correspond to the values of parameters
currently used by the APPC system.

Some of tables also supplements Admin and Oper tables from the SNA NAU





Expires February 1995                                           [Page 6]




Internet Draft                  APPC MIB                    Aug 12, 1994


MIB module.


3.2.1.  appcGlobal group

The appcGlobal group consists of the following tables and objects:

1) appcStatCntlGroup

This group of objects controls whether certain statistics and counters
(e.g., session and RSCV counters) are maintained by an Agent. These
objects are for implementations that wish to provide this level of
operational control and is optional.

These objects can be generated initially, after startup of SNA service,
by the Agent which uses information from the Node configuration file.
Subsequent modifications of parameters is possible by a Management
station.  The modifications to these objects can be saved in the Node
configuration file for the next startup (i.e., restart or next
initialization) of SNA service, but the mechanism for this function is
not defined in this document.


2) appcDefaultTable

This table contains objects which describe default APPC configurations
for each node. The type of default information includes mode name, LU,
and maximum logical record size.

This table supplements the snaNodeAdminTable, defined in the SNA NAU MIB
module, and as such uses the same index (i.e., snaNodeAdminIndex).
However, only entries in the snaNodeAdminTable that are nodes which
support APPC or LU6.2 protocols, would have a corresponding entry in
this table.  The rows in this table are created by an Agent as soon as
the entry in the snaNodeAdminTable becomes 'active'.

The entries in this table can be modified by a Management Station.


3.2.2.  appcLu group

The appcLu group consists of the following tables:

1) appcLluAdminTable





Expires February 1995                                           [Page 7]




Internet Draft                  APPC MIB                    Aug 12, 1994


This table contains objects which describe specific APPC local LU
configuration information. The type of information includes maximum
number of sessions supported and compression parameters.

This table supplements the snaLuAdminTable, defined in the SNA NAU MIB
module, and as such uses the same set of indices(i.e., snaNodeAdminIndex
and snaLuAdminLuIndex). However, only entries in the snaLuAdminTable
that support APPC or LU6.2 protocols, would have a corresponding entry
in this table.

The rows in this table can be created, modified, and deleted by a
Management Station by accessing the corresponding entry in the
snaLuAdminTable. The snaLuAdminRowStatus object describes the status of
an entry and is used to change the status of that entry. The rows in
this table are created by an Agent as soon as the entry in the
snaLuAdminTable is created.

For each entry in the appcLluAdminTable, there is one or more
corresponding entry in the appcLluOperTable. While the objects in this
table describe the desired or configured values, the actual runtime
values are contained in the appcLluOperTable.

2) appcLluOperTable

This table contains objects which describe specific APPC local LU
operational information. The type of information includes maximum number
of sessions supported and compression parameters.

This table supplements the snaLuOperTable, defined in the SNA NAU MIB
module, and as such uses the same set of indices(i.e., snaNodeAdminIndex
and snaLuAdminLuIndex). However, only entries in the snaLuOperTable that
support APPC or LU6.2 protocols, would have a corresponding entry in
this table.  The rows in this table are created by an Agent as soon as
the entry in the snaLuOperTable becomes 'active'. The entries in this
table cannot be modified by a Management Station.

There is no appcLluAdminTable because all of the information needed to
configure a LU6.2 LU is already present in the snaLuAdminTable.

3) appcParLuAdminTable

This table contains objects which describe partner LU configuration
information. The type of information includes the name and whether
parallel session is supported.





Expires February 1995                                           [Page 8]




Internet Draft                  APPC MIB                    Aug 12, 1994


The rows in this table can be created, modified, and deleted by a
Management Station. The appcParLuAdminRowStatus object describes the
status of an entry and is used to change the status of that entry.
Entries are indexed by snaNodeAdminIndex and appcParLuAdminIndex.

There is a single appcParLuAdminTable for each node. For those
implementations that have partner LU definitions associated with each
local LU, multiple entries with the same appcParLuAdminParLuName could
exist with different appcParLuAdminLocLuName. For those implementations
in which partner LU definitions applies to all local LUs, it will have
appcParLuAdminLocLuName set to '*ALL'.

For each entry in the appcParLuAdminTable, there is one or more
corresponding entry in the appcParLuOperTable. While the objects in this
table describe the desired or configured values, the actual runtime
values are contained in the appcParLuOperTable.

4) appcParLuOperTable

This table contains objects which describe partner LU run-time
operational information. The type of information includes the name and
whether parallel session is supported.

This table supplements the appcParLuAdminTable. Although the admin table
entries could be global to all local LUs in a node, the oper table
entries are always associated with a local LU. Entries are indexed by
snaNodeAdminIndex, snaLuAdminLuIndex and appcParLuAdminIndex.

The rows in this table is created as soon as there is an active session
between the local and partner LU. The entries in this table cannot be
modified by a Management Station.

5) appcModeAdminTable

This table contains objects which describe Mode configuration
information. The type of information includes the name and maximum
session limited.

The rows in this table can be created, modified, and deleted by a
Management Station. The appcModeAdminRowStatus object describes the
status of an entry and is used to change the status of that entry.
Entries are indexed by snaNodeAdminIndex and appcModeAdminIndex.

There is a single appcModeAdminTable for each node. For those
implementations that have mode definitions associated with each local





Expires February 1995                                           [Page 9]




Internet Draft                  APPC MIB                    Aug 12, 1994


and partner LU pair, multiple entries with the same
appcModeAdminModeName could exist with different appcModeAdminLocLuName
and appcModeAdminParLuName. For those implementations in which mode
definitions applies to all local and partner LUs, it will have
appcModeAdminLocLuName and appcModeAdminParLuName set to '*ALL'.

For each entry in the appcModeAdminTable, there is one or more
corresponding entry in the appcModeOperTable. While the objects in this
table describe the desired or configured values, the actual runtime
values are contained in the appcModeOperTable.

6) appcModeOperTable

This table contains objects which describe Mode run-time operational
information. The type of information includes the name and maximum
session limit.

This table supplements the appcModeAdminTable. Although the admin table
entries could be global to all local and partner LUs in a node, the oper
table entries are always associated with a local and partner LU. Entries
are indexed by snaNodeAdminIndex, snaLuAdminLuIndex,
appcParLuAdminIndex, and appcModeAdminIndex.

The rows in this table is created as soon as there is an active session
between the local and partner LU for this mode. The entries in this
table cannot be modified by a Management Station.

7) appcCNOSCmdTable

This table contains objects which allow for the issuing of CNOS commands
relative to a local and partner LU and Mode. It supports the CNOS
commands, INITIALIZE_SESSION_LIMIT, CHANGE_SESSION_LIMIT and
RESET_SESSION_LIMIT. This table augments the appcModeOperTable.

The rows in this table are created by an Agent as soon as the entry in
the appcModeOperTable becomes 'active'. The entries in this table can be
modified by a Management Station.

This table consists of parameter objects that are relevent to the CNOS
commands, which a Management Station need to set. After setting the
parameters, the Management Station will set the command object
(appcCNOSCmd) to issue the appropriate CNOS command.







Expires February 1995                                          [Page 10]




Internet Draft                  APPC MIB                    Aug 12, 1994


3.2.3.  appcTp group

The appcTp group consists of the following tables:

1) appcTpAdminTable

This table contains objects which describe transaction program (TP)
configuration information. The type of information includes the name and
TP privileges.

The rows in this table can be created, modified, and deleted by a
Management Station. The appcTpAdminRowStatus object describes the status
of an entry and is used to change the status of that entry. Entries are
indexed by snaNodeAdminIndex and appcTpAdminIndex.

There is a single appcTpAdminTable for each node. For those
implementations that have TP definitions associated with each local LU,
multiple entries with the same appcTpAdminTpName could exist with
different appcTpAdminLocLuName. For those implementations in which TP
definitions applies to all local LUs, it will have appcTpAdminLocLuName
set to '*ALL'.

There is no appcTpOperTable. Run-time information about TP tends to be
product specific (e.g., process Id) and many of the information could be
derived from the conversation tables.


3.2.4.  appcSession group

The appcSession group consists of the following table:

1) appcSessnTable

This table contains objects which describe APPC-specific session
information. The type of information includes the PCID and the pacing
counts.

This table supplements the snaLuSesnTable, defined in the SNA NAU MIB
module, and as such uses the same indices(i.e., snaNodeAdminIndex,
snaLuAdminLuIndex, snaLuSessnRluIndex, snaLuSessnIndex). However, only
entries in the snaLuSesnTable that are APPC or LU6.2 sessions, would
have a corresponding entry in this table.  Note that the
snaLuSessnRluIndex is the same as appcParLuAdminIndex.

The rows in this table are created by an Agent as soon as the entry in





Expires February 1995                                          [Page 11]




Internet Draft                  APPC MIB                    Aug 12, 1994


the snaLuSesnTable becomes 'active'.  The entries in this table cannot
be modified by a Management Station.


3.2.5.  appcConversation group

The appcConversation group consists of the following table:

1) appcConvTable

This table contains objects which describe conversation information. The
type of information includes the state and type.

Since conversations can come up and down in a short period, it would be
more useful for a Management Station, if this table also contains
historical information. An entry is created by an Agent when the
conversation is started but not deleted when it stops. How the entries
are removed is implementation dependent and does not affect the usage of
this table. Entries are indexed by snaNodeAdminIndex, snaLuAdminLuIndex,
and appcConvIndex.  The entries in this table cannot be modified by a
Management Station.



3.2.6.  appcCPIC group

The appcCPIC group consists of the following tables:

1) appcCpicAdminTable

This table contains objects which describe CPI-C side information. The
type of information includes the symbolic destination name and local LU
name.

The rows in this table can be created, modified, and deleted by a
Management Station. The appcCpicAdminRowStatus object describes the
status of an entry and is used to change the status of that entry.
Entries are indexed by appcCpicAdminIndex.

There is a single appcCpicAdminTable for the system. For those
implementations that have CPI-C definitions associated with each local
LU, multiple entries with the same appcCpicAdminSymbDestName could exist
with different appcCpicAdminLocLuName. For those implementations in
which CPI-C definitions applies to all local LUs, it will have
appcCpicAdminLocLuName set to '*ALL'.





Expires February 1995                                          [Page 12]




Internet Draft                  APPC MIB                    Aug 12, 1994


For each entry in the appcCpicAdminTable, there is one or more
corresponding entry in the appcCpicOperTable. While the objects in this
table describe the desired or configured values, the actual runtime
values are contained in the appcCpicOperTable.


2) appcCpicOperTable

This table contains objects which describe CPI-C run-time operational
information. The type of information includes the symbolic destination
name and local LU name.


This table supplements the appcCpicAdminTable. Although the admin table
entries could be global to all local LUs in a node, the oper table
entries are always associated with a local LU. Entries are indexed by
appcCpicOperIndex.

The rows in this table is created as soon as it is being used by an
active TP. The entries in this table cannot be modified by a Management
Station.


3.2.7.  Conformance statement

Compliance of the SNMPv2 management entity to the APPC MIB is defined in
terms of following conformance units called groups.

Unconditionally mandatory groups:

appcGlobalGroup, appcDefaultGroup, appcLluGroup, appcParLuGroup,
appcModeGroup, appcTpGroup, appcSessionGroup, and appcConversationGroup.

Conditionally mandatory groups:

appcStatControlGroup - mandatory only for those entities which supports
the option of activating and deactivating statistic collection and
counting.

appcCNOSGroup - mandatory only for those entities which supports CNOS
command processing.

appcCpicGroup - mandatory only for those entities which supports CPI-C.

Refinement of requirements for objects access:





Expires February 1995                                          [Page 13]




Internet Draft                  APPC MIB                    Aug 12, 1994


an Agent which does not implement row creation for appcLluAdminTable,
appcParLuAdminTable, appcModeAdminTable, appcTpAdminTable and
appcCpicAdminTable must at least support object modification requests
(i.e., read-write access instead of read-create).


3.3.  APPC MIB special feature

This section describes the mechanism used for row creation in the Admin
tables.


3.3.1.  Row Creation mechanism

The row creation mechanism for the Admin tables in this MIB module is
based on the use of the RowStatus object.  Restriction of some
operations for specific tables are described in each table.  In
particular, before accepting the 'destroy' value for an entry, an Agent
has to verify the operational state of the corresponding entry in the
Oper table.





























Expires February 1995                                          [Page 14]




Internet Draft                  APPC MIB                    Aug 12, 1994


4.  Object Definitions

APPC-MIB DEFINITIONS          ::= BEGIN

IMPORTS
        DisplayString, RowStatus, TimeStamp, InstancePointer
                FROM SNMPv2-TC

        experimental, Counter32, Gauge32, Integer32,
        OBJECT-TYPE, MODULE-IDENTITY, NOTIFICATION-TYPE
                FROM SNMPv2-SMI

        MODULE-COMPLIANCE, OBJECT-GROUP
                FROM SNMPv2-CONF

        snaNodeAdminIndex, snaLuAdminLuIndex, snaLuSessnIndex,
        snaLuSessnRluIndex
                FROM SNA-NAU-MIB;

appcMIB MODULE-IDENTITY
        LAST-UPDATED  "9408120800Z"
        ORGANIZATION  "IETF SNA NAU MIB Working Group"
        CONTACT-INFO
                "
                        Michael Allen
                        Networking Systems
                        IBM Corporation
                        Research Triangle Park, NC 27709
                        Tel:    1 919 254 4442
                        E-mail: moallen@vnet.ibm.com

                        Zbigniew Kielczewski
                        Eicon Technology Inc.
                        2196 32nd Avenue
                        Lachine, Que  H8T 3H7
                        Canada
                        Tel:    1 514 631 2592
                        E-mail: zbig@eicon.qc.ca

                        William Kwan
                        CrossComm Corporation
                        450 Donald Lynch Blvd.
                        Marlboro, MA 01752
                        Tel:    1 508 229 5429
                        E-mail: kwan@crosscomm.com





Expires February 1995                                          [Page 15]




Internet Draft                  APPC MIB                    Aug 12, 1994


                "
        DESCRIPTION
                "This is the MIB module for objects used to
                 manage network devices with APPC capabilities."
::= { experimental 999 }

appcObjects          OBJECT IDENTIFIER ::= { appcMIB 1 }
  appcGlobal         OBJECT IDENTIFIER ::= { appcObjects 1 }
  appcLu             OBJECT IDENTIFIER ::= { appcObjects 2 }
  appcTp             OBJECT IDENTIFIER ::= { appcObjects 3 }
  appcSession        OBJECT IDENTIFIER ::= { appcObjects 4 }
  appcConversation   OBJECT IDENTIFIER ::= { appcObjects 5 }
  appcCPIC           OBJECT IDENTIFIER ::= { appcObjects 6 }


- -- *********************************************************************
- -- Objects in this MIB will be used to model a SNA device which contains
- -- one or more Nodes of type 2.1.
- -- The structure of tables is related to tables defined in the SNA NAU MIB.
- -- In particular, the tables for Local LUs and Sessions use the same
- -- system of indices as corresponding tables in SNA NAU MIB and contain
- -- only information specific to APPC.
- --
- -- 1.   APPC Global Objects            - global defaults, controls
- -- 2.   APPC Defined Lu Tables         - Oper only (Admin in NAU MIB)
- -- 3.   APPC Defined Partner Lu Tables - Admin and Oper
- -- 4.   APPC Mode Tables               - Admin and Oper
- -- 5.   APPC CNOS                      - augments Mode Oper
- -- 6.   APPC TP Tables                 - Admin and oper
- -- 7.   APPC Session Tables            - Oper and Stats
- -- 8.   APPC Conversation Table        - Oper only
- -- 9.   APPC CPIC side info            - Admin and oper
- -- *********************************************************************

- -- *********************************************************************
- -- APPC Statistics Control Objects
- -- ---------------------------------------------------------------------
- -- The following simple objects allow:
- --    * the collection of APPC Session Information counters
- --      to be started and stopped
- --    * the collection of APPC Session RSCVs
- --      to be started and stopped
- --
- -- These objects are for implementations that wish to provide
- -- this level of operational control.  This group should be





Expires February 1995                                          [Page 16]




Internet Draft                  APPC MIB                    Aug 12, 1994


- -- optional in the conformance section of the MIB.
- --
- -- *********************************************************************

appcStatCntrlGroup OBJECT IDENTIFIER ::= { appcGlobal 1 }

appcStatCntrlStatus  OBJECT-TYPE
      SYNTAX INTEGER  {
                      notActive(1),
                      active(2)
                      }
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "Indicates the current collection options in effect
              notActive  collection of counters and some names
                         is not active.
              active     collection of counters and some names
                         is active."

      ::= { appcStatCntrlGroup  1 }

appcStatCntrlStatusTime OBJECT-TYPE
      SYNTAX TimeStamp
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Time when the appcStatCntrlStatus object last changed.
           This time is in hundreds of a second."

      ::= { appcStatCntrlGroup  2 }

appcStatCntrlRscv    OBJECT-TYPE
      SYNTAX INTEGER    {
                      notActive(1),
                      active(2)
                      }
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "Indicates the current collection options in effect:
              notActive  collection of route selection control vectors
                         is not active.
              active     collection of route selection control vectors
                         is active.





Expires February 1995                                          [Page 17]




Internet Draft                  APPC MIB                    Aug 12, 1994


           Counters are reset if value is set to notActive."

      ::= { appcStatCntrlGroup  3 }

appcStatCntrlRscvTime OBJECT-TYPE
      SYNTAX TimeStamp
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Time when the appcStatCntrlRscv object last changed.
           This time is in hundreds of a second."

      ::= { appcStatCntrlGroup  4 }


- -- ******************************************************************
- --
- --    Table of APPC defaults per SNA node
- --
- -- ******************************************************************

appcDefaultTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcDefaultEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Table of APPC default settings per SNA node."
      ::= { appcGlobal 2 }

appcDefaultEntry OBJECT-TYPE
      SYNTAX AppcDefaultEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC default settings per SNA node."

      INDEX     { snaNodeAdminIndex }

::= { appcDefaultTable 1 }

AppcDefaultEntry     ::= SEQUENCE {
            appcDefaultModeName          DisplayString,
            appcDefaultLuName            DisplayString,
            appcDefaultImplInbndPlu      INTEGER,
            appcDefaultMaxMcLlSndSize    Gauge32,





Expires February 1995                                          [Page 18]




Internet Draft                  APPC MIB                    Aug 12, 1994


            appcDefaultFileSpec          DisplayString,
            appcDefaultTpOperation       INTEGER,
            appcDefaultTpConvSecRqd      INTEGER
        }

appcDefaultModeName     OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..8))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the mode name to be used under the following
           conditions:

              When an incoming BIND request contains a mode name not
              defined at the local node.  The parameters defined for
              this mode are used for the inbound implicit mode
              capability.

              When an APPC program issues an [MC_]ALLOCATE,
              [MC_]SEND_CONVERSATION, or CNOS verb, or when a CPI-C
              program issues an Allocate (CMALLC) call,
              specifying a mode name not defined at the local node.  The
              parameters defined for this mode are used for the outbound
              implicit mode capability.

           Display convention

              A get operation against this object will return the string
              'BLANK' if the actual value is 8 spaces.  This convention
              is intended to prevent operator confusion and is
              consistent with the practice of some existing
              implementations.  "

        ::= { appcDefaultEntry 1 }

appcDefaultLuName OBJECT-TYPE
        SYNTAX  DisplayString (SIZE(1..17))
        MAX-ACCESS  read-create
        STATUS  current
        DESCRIPTION
           "Specifies the name of the local LU that is to serve as the
           default LU.  This is the default LU to which are routed inbound
           BIND requests that exclude the secondary LU name.  This field
           is from 1 to 17 characters in length, including a period (.) which
           separates the NetId from the NAU name if the NetId is present.





Expires February 1995                                          [Page 19]




Internet Draft                  APPC MIB                    Aug 12, 1994


           This local LU name must match a defined entry in the
           snaLuAdminTable."

        ::= { appcDefaultEntry 2 }

appcDefaultImplInbndPlu OBJECT-TYPE
        SYNTAX  INTEGER {
                           yes(1),
                           no(2)
                          }
        MAX-ACCESS  read-create
        STATUS  current
        DESCRIPTION
           "Specifies whether or not inbound implicit partner LU support
           is enabled.  The following values are defined:

              yes  -  Specifies that inbound implicit partner LU support is
                      enabled, which provides the capability to accept an
                      incoming BIND request that contains a partner LU name
                      that is not defined at the local node.

              no   -  Specifies that inbound implicit partner LU support is
                      disabled, which means that an incoming bind that
                      specifies a partner LU that is not defined at the local
                      node will be rejected."

        ::= { appcDefaultEntry 3 }

appcDefaultMaxMcLlSndSize OBJECT-TYPE
        SYNTAX      Gauge32
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
             "Specifies the maximum size of a logical record to be used
              on a mapped conversation for sending data to either the
              inbound or outbound implicit partner LU.  The size is the
              number of bytes in the logical record, as indicated in the
              LL field of the record. The default value is 32767."

        ::= { appcDefaultEntry 4 }

appcDefaultFileSpec OBJECT-TYPE
      SYNTAX        DisplayString (SIZE (0..80))
      MAX-ACCESS    read-create
      STATUS        current





Expires February 1995                                          [Page 20]




Internet Draft                  APPC MIB                    Aug 12, 1994


      DESCRIPTION
          "The local file specification that is to be searched by the
           APPC attach manager when no DEFINE_TP verb has been issued
           for the TP name received on an incoming attach.  In this
           case, the attach manager will attempt to start a program
           whose file name is the same as the incoming TP name.  If
           found, the program is loaded. If not found, the attach is
           rejected.

           The value '*' indicates that the normal search path for
           executable programs is to be used for locating an undefined
           transaction program.

           A null string indicates that there is no default file
           specification for undefined transaction programs."

        ::= { appcDefaultEntry 5 }

appcDefaultTpOperation   OBJECT-TYPE
      SYNTAX INTEGER {
                 queuedOperatorStarted(1),
                 queuedOperatorPreloaded(2),
                 queuedAmStarted(3),
                 nonqueuedAmStarted(4)
                     }
      MAX-ACCESS read-create
      STATUS     current
      DESCRIPTION
                "Specifies how the program will be started.

                 queuedOperatorStarted -- Specifies that one version of
                       the program will be run at a time.  If an incoming
                       attach arrives and the program has not been
                       started yet, APPC will issue a message to the
                       operator to start the specified program.
                       Subsequent attaches that arrive while the program
                       is active will be queued.

                 queuedOperatorPreloaded -- Specifies that one version
                       of the program will be run at a time.  If an
                       incoming attach arrives and the program has not
                       been started yet, the Attach will be rejected.
                       The APPC attach manager determines that a TP has
                       started upon reception of an APPC RECEIVE_ALLOCATE
                       verb or a CPI-C program Accept_Conversation (CMACCP)





Expires February 1995                                          [Page 21]




Internet Draft                  APPC MIB                    Aug 12, 1994


                       call.  No message is sent to the operator.
                       Subsequent attaches that arrive while the program
                       is active are queued.

                 queuedAmStarted -- Specifies that one version of the
                       program will be run at a time and will be started
                       by the APPC attach manager.  Subsequent attaches
                       that arrive while the program is active will be
                       queued.

                 nonqueuedAmStarted -- Specifies that multiple copies of
                       the program will be run at a time and will be
                       started by the APPC attach manager."

        ::= { appcDefaultEntry 6 }

appcDefaultTpConvSecRqd OBJECT-TYPE
        SYNTAX       INTEGER {
                               yes(1),
                               no(2)
                               }
        MAX-ACCESS   read-create
        STATUS       current
        DESCRIPTION
              "Specifies whether or not conversation security will be
              used for default TPs.

              yes  -  Specifies that the incoming attach must contain a valid
                      authentication information (e.g., user ID and password).

              no   -  Specifies that the incoming attach does not have to
                      contain security information."

        ::= { appcDefaultEntry 7 }

- -- *********************************************************************
- --    APPC LU information
- -- ---------------------------------------------------------------------
- --  Local LU
- --  Partner LU
- --  Mode
- -- *********************************************************************

- -- *********************************************************************
- --  APPC Local LU





Expires February 1995                                          [Page 22]




Internet Draft                  APPC MIB                    Aug 12, 1994


- --
- --  The entries in the following tables supplement the entries in the NAU
- --  MIB table snaLuAdminTable.  However, these entries do not AUGMENTT
- --  snaLuAdminEntry, since the entries here provide APPC-level information,
- --  which is not applicable to non-6.2 LUs.
- --
- -- *********************************************************************

- -- *********************************************************************
- --    APPC Local LU Admin Table
- --    appcLluAdminTable contains configuration information for 6.2 Local LUs.
- -- *********************************************************************

appcLluAdminTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcLluAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC Local LU Admin Table.  This table supplements
           snaLuAdminTable for type 6.2 LUs."

      ::= { appcLu 1 }

appcLluAdminEntry OBJECT-TYPE
      SYNTAX AppcLluAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Information about local APPC LUs.  This entry supplements
          the information in snaLuAdminEntry, uses the same indices,
          but entries in this table are present only for 6.2 LUs."

      INDEX { snaNodeAdminIndex, snaLuAdminLuIndex }

      ::= { appcLluAdminTable 1 }

AppcLluAdminEntry     ::= SEQUENCE {
        appcLluAdminSessLimit          Integer32,
        appcLluAdminBindRspMayQ        INTEGER,
        appcLluAdminCompression        INTEGER,
        appcLluAdminInBoundCompLevel   INTEGER,
        appcLluAdminOutBoundCompLevel  INTEGER,
        appcLluAdminCompRleBeforeLZ    INTEGER
       }





Expires February 1995                                          [Page 23]




Internet Draft                  APPC MIB                    Aug 12, 1994


appcLluAdminSessLimit OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The maximum number of sessions supported by this LU."

      ::= { appcLluAdminEntry 1 }

appcLluAdminBindRspMayQ OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Indicates whether or not the local LU, as the sender of a
           BIND request, allows a remote partner LU to delay sending the
           BIND response if the partner LU cannot process the BIND request
           immediately."

      ::= { appcLluAdminEntry 2 }

appcLluAdminCompression OBJECT-TYPE
      SYNTAX INTEGER {
                    prohibited(1),
                    required(2),
                    negotiable(3)
                    }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
         "Specifies whether compression is supported. The local LU uses
          this value for negotiation during session activation
          (SNA BIND).

              prohibited    -    specifies that no compression is to be used.
              required      -    specifies that compression is required.
              negotiable    -    specifies that the usage of compression
                                 is to be negotiated between the LU's. The
                                 level of compression is also negotiated."

      ::=  { appcLluAdminEntry 3 }





Expires February 1995                                          [Page 24]




Internet Draft                  APPC MIB                    Aug 12, 1994


appcLluAdminInBoundCompLevel OBJECT-TYPE
      SYNTAX INTEGER {
                    none(1),
                    rle(2),
                    lz9(3),
                    lz10(4),
                    lz12(5)
                    }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
         "Specifies the maximum level of compression supported for inbound
          data. The local LU uses this value in conjunction with
          appcLluAdminCompression for negotiation during session activation
          (SNA BIND).

              none  -    specifies that no compression is to be used.
              rle   -    specifies run-length encoding compression
                         in which a 1 or 2 byte sequence substitution is
                         used for each repeated run of the same character.
              lz9   -    specifies Lempel-Ziv-like compression in which
                         9 bit codes are used to substitute repeated
                         substrings in the data stream. These codes are
                         indices that refer to entries in a common dictionary
                         generated adaptively at both sender and receiver as
                         the data flows and compression occurs. The larger
                         number bits used for the code, the more storage
                         space is required for the dictionary, but the
                         larger the compression ratio.
              lz10  -    specifies a 10 bit code Lempel-Ziv-like
                                compression.
              lz12  -    specifies a 12 bit code Lempel-Ziv-like
                                compression."

      ::=  { appcLluAdminEntry 4 }

appcLluAdminOutBoundCompLevel OBJECT-TYPE
      SYNTAX INTEGER {
                    none(1),
                    rle(2),
                    lz9(3),
                    lz10(4),
                    lz12(5)
                    }
      MAX-ACCESS read-create





Expires February 1995                                          [Page 25]




Internet Draft                  APPC MIB                    Aug 12, 1994


      STATUS current
      DESCRIPTION
         "Specifies the maximum level of compression supported for outbound
          data. The local LU uses this value in conjunction with
          appcLluAdminCompression for negotiation during session activation
          (SNA BIND).

              none  -    specifies that no compression is to be used.
              rle   -    specifies run-length encoding compression
                         in which a 1 or 2 byte sequence substitution is
                         used for each repeated run of the same character.
              lz9   -    specifies Lempel-Ziv-like compression in which
                         9 bit codes are used to substitute repeated
                         substrings in the data stream. These codes are
                         indices that refer to entries in a common dictionary
                         generated adaptively at both sender and receiver as
                         the data flows and compression occurs. The larger
                         of number bits used for the code, the more storage
                         space is required for the dictionary, but the
                         larger the compression ratio.
              lz10  -    specifies a 10 bit code Lempel-Ziv-like
                                compression.
              lz12  -    specifies a 12 bit code Lempel-Ziv-like
                                compression."

      ::=  { appcLluAdminEntry 5 }

appcLluAdminCompRleBeforeLZ OBJECT-TYPE
      SYNTAX INTEGER {
                    yes(1),
                    no(2)
                    }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
         "Specifies whether run-length encoding is to be applied to the
          data before applying Lempel-Ziv-like compression. The local LU uses
          this value for negotiation during session activation
          (SNA BIND). This parameter is only supported if LZ compression
          is used."

      ::=  { appcLluAdminEntry 6 }


- -- *********************************************************************





Expires February 1995                                          [Page 26]




Internet Draft                  APPC MIB                    Aug 12, 1994


- --    APPC Local LU Oper Table
- --    appcLluOperTable contains operational information and augments the
- --    admin table.
- -- *********************************************************************

appcLluOperTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcLluOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC Local LU Table.  This table supplements snaLuOperTable
           for type 6.2 LUs and augments appcLluAdminTable."

        ::= { appcLu 2 }

appcLluOperEntry OBJECT-TYPE
      SYNTAX AppcLluOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Information about local APPC LUs.  This entry supplements
          the information in snaLuOperEntry, uses the same indices,
          but entries in this table are present only for 6.2 LUs and
          augments appcLluAdminEntry."

      AUGMENTS { appcLluAdminEntry }

      ::= { appcLluOperTable 1 }

AppcLluOperEntry     ::= SEQUENCE {
        appcLluOperSessLimit          Integer32,
        appcLluOperBindRspMayQ        INTEGER,
        appcLluOperCompression        INTEGER,
        appcLluOperInBoundCompLevel   INTEGER,
        appcLluOperOutBoundCompLevel  INTEGER,
        appcLluOperCompRleBeforeLZ    INTEGER
        }

appcLluOperSessLimit OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The maximum number of sessions supported by this LU."





Expires February 1995                                          [Page 27]




Internet Draft                  APPC MIB                    Aug 12, 1994


      ::= { appcLluOperEntry 1 }

appcLluOperBindRspMayQ OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Indicates whether or not the local LU, as the sender of a
           BIND request, allows a remote partner LU to delay sending the
           BIND response if the partner LU cannot process the BIND request
           immediately."

      ::= { appcLluOperEntry 2 }

appcLluOperCompression OBJECT-TYPE
      SYNTAX INTEGER {
                    prohibited(1),
                    required(2),
                    negotiable(3)
                    }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
         "Specifies whether compression is supported. The local LU uses
          this value for negotiation during session activation
          (SNA BIND).

              prohibited    -    specifies that no compression is to be used.
              required      -    specifies that compression is required.
              negotiable    -    specifies that the usage of compression
                                 is to be negotiated between the LU's. The
                                 level of compression is also negotiated."

      ::=  { appcLluOperEntry 3 }

appcLluOperInBoundCompLevel OBJECT-TYPE
      SYNTAX INTEGER {
                    none(1),
                    rle(2),
                    lz9(3),
                    lz10(4),
                    lz12(5)





Expires February 1995                                          [Page 28]




Internet Draft                  APPC MIB                    Aug 12, 1994


                    }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
         "Specifies the maximum level of compression supported for inbound
          data. The local LU uses this value in conjunction with
          appcLluOperCompression for negotiation during session activation
          (SNA BIND).

              none  -    specifies that no compression is to be used.
              rle   -    specifies run-length encoding compression
                         in which a 1 or 2 byte sequence substitution is
                         used for each repeated run of the same character.
              lz9   -    specifies Lempel-Ziv-like compression in which
                         9 bit codes are used to substitute repeated
                         substrings in the data stream. These codes are
                         indices that refer to entries in a common dictionary
                         generated adaptively at both sender and receiver as
                         the data flows and compression occurs. The larger
                         of number bits used for the code, the more storage
                         space is required for the dictionary, but the
                         larger the compression ratio.
              lz10  -    specifies a 10 bit code Lempel-Ziv-like
                                compression.
              lz12  -    specifies a 12 bit code Lempel-Ziv-like
                                compression."

      ::=  { appcLluOperEntry 4 }

appcLluOperOutBoundCompLevel OBJECT-TYPE
      SYNTAX INTEGER {
                    none(1),
                    rle(2),
                    lz9(3),
                    lz10(4),
                    lz12(5)
                    }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
         "Specifies the maximum level of compression supported for outbound
          data. The local LU uses this value in conjunction with
          appcLluAdminCompression for negotiation during session activation
          (SNA BIND).





Expires February 1995                                          [Page 29]




Internet Draft                  APPC MIB                    Aug 12, 1994


              none  -    specifies that no compression is to be used.
              rle   -    specifies run-length encoding compression
                         in which a 1 or 2 byte sequence substitution is
                         used for each repeated run of the same character.
              lz9   -    specifies Lempel-Ziv-like compression in which
                         9 bit codes are used to substitute repeated
                         substrings in the data stream. These codes are
                         indices that refer to entries in a common dictionary
                         generated adaptively at both sender and receiver as
                         the data flows and compression occurs. The larger
                         number bits used for the code, the more storage
                         space is required for the dictionary, but the
                         larger the compression ratio.
              lz10  -    specifies a 10 bit code Lempel-Ziv-like
                                compression.
              lz12  -    specifies a 12 bit code Lempel-Ziv-like
                                compression."

      ::=  { appcLluOperEntry 5 }

appcLluOperCompRleBeforeLZ OBJECT-TYPE
      SYNTAX INTEGER {
                    yes(1),
                    no(2)
                    }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
         "Specifies whether run-length encoding is to be applied to the
          data before applying Lempel-Ziv-like compression. The local LU uses
          this value for negotiation during session activation
          (SNA BIND). This parameter is only supported if LZ compression
          is used."

      ::=  { appcLluOperEntry 6 }

- -- *********************************************************************
- --    APPC Partner LU  Admin Table
- -- ---------------------------------------------------------------------
- -- This table contains information about partner LU's
- -- *********************************************************************
appcParLuAdminTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcParLuAdminEntry
      MAX-ACCESS not-accessible
      STATUS current





Expires February 1995                                          [Page 30]




Internet Draft                  APPC MIB                    Aug 12, 1994


      DESCRIPTION
           "APPC Partner LU administrative Table"

      ::= { appcLu 3 }

appcParLuAdminEntry OBJECT-TYPE
      SYNTAX AppcParLuAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC Partner LU Information Table.
           It is indexed by snaNodeAdminIndex plus an index for
           the partner LU."
      INDEX { snaNodeAdminIndex,
               appcParLuAdminIndex }

      ::= { appcParLuAdminTable 1 }

AppcParLuAdminEntry     ::= SEQUENCE {

      appcParLuAdminIndex           Integer32,
      appcParLuAdminLocLuName       DisplayString,
      appcParLuAdminParLuName       DisplayString,
      appcParLuAdminAlias           DisplayString,
      appcParLuAdminParaSessSup     INTEGER,
      appcParLuAdminSessSec         INTEGER,
      appcParLuAdminSecAccept       INTEGER,
      appcParLuAdminLinkObjId       DisplayString,
      appcParLuAdminRowStatus       RowStatus

          }

appcParLuAdminIndex OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Index for partner LU admin instances."

      ::= { appcParLuAdminEntry 1 }

appcParLuAdminLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-create
      STATUS current





Expires February 1995                                          [Page 31]




Internet Draft                  APPC MIB                    Aug 12, 1994


      DESCRIPTION
          "The SNA name of the local LU to which this partner LU
           definition applies. This field is from 1 to 17 characters in
           length, including a period (.) which separates the
           NetId from the NAU name if the netId is present.

           The reserved value '*ALL' indicates that the partner LU
           definition applies to all local LUs, and not just to a single
           local LU.

           Row creation conventions:

             When row creation is attempted, the agent must verify that
             the partner LU name in the new row is not the same as in
             an existing partner LU definition for the same local LU name.
             If it is, the creation must fail. Implementations that do not
             support definition of modes on an LU by LU basis will reject
             any attempt to set this object to a value other than '*ALL'."

      ::= { appcParLuAdminEntry 2 }

appcParLuAdminParLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The SNA name of the partner LU.
           This field is from 1 to 17 characters in
           length, including a period (.) which separates the
           NetId from the NAU name if the netId is present."

      ::= { appcParLuAdminEntry 3 }

appcParLuAdminAlias  OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..48))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "A local alias for the partner LU.  If not known or
           not applicable, this object contains a zero-length
           string."

      ::= { appcParLuAdminEntry 4 }

appcParLuAdminParaSessSup OBJECT-TYPE





Expires February 1995                                          [Page 32]




Internet Draft                  APPC MIB                    Aug 12, 1994


      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Defined Parallel Sessions Supported.
           Indicates whether or not multiple sessions between
           the partner LU and its associated local LU are
           permitted. Parallel session support also indicates
           that Change Number of Sessions (CNOS)
           will be used to negotiate session limits between the
           LUs."

      ::= { appcParLuAdminEntry 5 }

appcParLuAdminSessSec    OBJECT-TYPE
      SYNTAX INTEGER {
                     required(1),
                     accepted(2),
                     notallowed(3)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the type of security information that a local LU
          will accept on BIND requests it receives from the partner LU.

          required    -   Specifies that the BIND request must carry a
                          password that will be verified upon receipt.
          accepted    -   Specifies that the BIND request may carry a
                          password that will be verified upon receipt.
          notallowed  -   Specifies that the BIND request must not carry
                          a password."

      ::= { appcParLuAdminEntry 6 }


appcParLuAdminSecAccept   OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     conversation(2),
                     already-verified(3),
                     persistent-verification(4),





Expires February 1995                                          [Page 33]




Internet Draft                  APPC MIB                    Aug 12, 1994


                     av-and-pv(5)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies support for different levels of access security
           information in ATTACH requests received from this remote LU.

           Possible values are:

                none    -   No access security information will be accepted
                            on allocation requests (ATTACH) from this LU.
                conversation
                        -   Allocation requests will not be accepted that
                            include already-verified or
                            persistent-verification indications.
                            Accept conversation-level access security
                            information, which must include both a user Id
                            and password, and may also include a profile.
                already-verified
                        -   Allocation requests will be accepted that include
                            already-verified indications. Persistent-
                            verification indications will not be accepted.
                persistent-verification
                        -   Allocation requests will be accepted that include
                            persistent verification indications.
                            Already-verified indications will not be
                            accepted.
                av-and-pv
                        -   Allocation requests will be accepted that
                            include already-verified or persistent-
                            verification indications."

      ::= { appcParLuAdminEntry 7 }

appcParLuAdminLinkObjId OBJECT-TYPE
      SYNTAX InstancePointerIPTION
          "Specifies the link associated with this partner LU. This value
          points to the row in the snaNodeLinkAdminTable of the SNA NAU MIB.
          This object may be NULL if the link is not specified or if a link
          is not applicable (as for APPN-level nodes)."





Expires February 1995                                          [Page 34]




Internet Draft                  APPC MIB                    Aug 12, 1994


      ::= { appcParLuAdminEntry 8 }

appcParLuAdminRowStatus OBJECT-TYPE
          SYNTAX  RowStatus
          MAX-ACCESS  read-create
          STATUS  current
          DESCRIPTION
                  "This object is used by a Management Station to
                  create or delete the row entry in the
                  appcParLuAdminTable following the RowStatus textual
                  convention.

                  <Need description in SNA terms of what is expected
                  when a row is created or deleted>
                  "
      ::= { appcParLuAdminEntry 9 }

- -- *********************************************************************
- --    APPC Partner Lu  Oper Table
- -- *********************************************************************

appcParLuOperTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcParLuOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Table of active partner LUs"

      ::= { appcLu 4 }

appcParLuOperEntry OBJECT-TYPE
      SYNTAX AppcParLuOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry in operational table of partner LUs."

      INDEX
             { snaNodeAdminIndex,
               snaLuAdminLuIndex,
               appcParLuAdminIndex  }

      ::= { appcParLuOperTable 1 }

AppcParLuOperEntry     ::= SEQUENCE {





Expires February 1995                                          [Page 35]




Internet Draft                  APPC MIB                    Aug 12, 1994


    appcParLuOperLocLuName             DisplayString,
    appcParLuOperParLuName             DisplayString,
    appcParLuOperParLuAlias            DisplayString,
    appcParLuOperState                 INTEGER,
    appcParLuOperParaSessSup           INTEGER,
    appcParLuOperSessSec               INTEGER,
    appcParLuOperSecAccept             INTEGER,
    appcParLuOperLinkObjId             DisplayString

   }

appcParLuOperLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The SNA name of the local LU.
           This field is from 1 to 17 characters in
           length, including a period (.) which separates the
           NetId from the NAU name if the netId is present.

           This value is redundant, because the snaLuAdminLuIndex
           could be used to retrieve this value from the snaLuAdminTable,
           but the value is duplicated here to simplify management station
           application programming."

      ::= { appcParLuOperEntry 1 }

appcParLuOperParLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The SNA name of the partner LU.
           This field is from 1 to 17 characters in
           length, including a period (.) which separates the
           NetId from the NAU name if the netId is present."

      ::= { appcParLuOperEntry 2 }

appcParLuOperParLuAlias   OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..48))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION





Expires February 1995                                          [Page 36]




Internet Draft                  APPC MIB                    Aug 12, 1994


          "A local alias for the partner LU.  If not known or
           not applicable, this object contains a zero-length
           string."

      ::= { appcParLuOperEntry 3 }

appcParLuOperState OBJECT-TYPE
        SYNTAX  INTEGER {
                inactive (1),
                active (2)
                }
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
                "The value identifies the current operational state of this
                LU.

                  active (2) - the LU is defined and is able to
                        receive BIND.
                  inactive (1) - the LU has a session count equal
                        to 0."

      ::= { appcParLuOperEntry 4 }

appcParLuOperParaSessSup OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Active Parallel Sessions Supported.
           Indicates whether or not multiple session between
           the partner LU and its associated local LU are
           permitted. Parallel session support also indicates
           that Change Number of Sessions (CNOS)
           will be used to negotiate session limits between the
           LUs."

      ::= { appcParLuOperEntry 5 }

appcParLuOperSessSec    OBJECT-TYPE
      SYNTAX INTEGER {
                     required(1),





Expires February 1995                                          [Page 37]




Internet Draft                  APPC MIB                    Aug 12, 1994


                     accepted(2),
                     notallowed(3)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the type of security information that a local LU
          will accept on BIND requests it receives from the partner LU.

          required    -   Specifies that the BIND request must carry a
                          password that will be verified upon receipt.
          accepted    -   Specifies that the BIND request may carry a
                          password that will be verified upon receipt.
          notallowed  -   Specifies that the BIND request must not carry
                          a password."

      ::= { appcParLuOperEntry 6 }

appcParLuOperSecAccept   OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     conversation(2),
                     already-verified(3),
                     persistent-verification(4),
                     av-and-pv(5)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies support for different levels of security acceptance
           information in ATTACH requests received from this remote LU.

           Possible values are:

                none    -   No access security information will be accepted
                            on allocation requests (ATTACH) from this LU.
                conversation
                        -   Allocation requests will not be accepted that
                            include already-verified or
                            persistent-verification indications.
                            Accept conversation-level access security
                            information, which must include both a user Id
                            and password, and may also include a profile.
                already-verified
                        -   Allocation requests will be accepted that include





Expires February 1995                                          [Page 38]




Internet Draft                  APPC MIB                    Aug 12, 1994


                            already-verified indications. Persistent-
                            verification indications will not be accepted.
               persistent-verification
                        -   Allocation requests will be accepted that include
                            persistent verification indications.
                            Already-verified indications will not be
                            accepted.
                av-and-pv
                        -   Allocation requests will be accepted that
                            include already-verified or persistent-
                            verification indications."

        ::= { appcParLuOperEntry 7 }

appcParLuOperLinkObjId OBJECT-TYPE
      SYNTAX InstancePointer
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the link associated with this partner LU. This value
          points to the row in the snaNodeLinkOperTable of the SNA NAU MIB.
          This object may be NULL if the link is not specified or if a link
          is not applicable (as for APPN-level nodes)."

        ::= { appcParLuOperEntry 8  }


- -- *********************************************************************
- --    APPC Mode Table
- -- ---------------------------------------------------------------------
- -- This table contains information about session mode definitions.
- -- Modes can be defined by creating a row in this table.
- -- Modes that have active sessions appear in the appcModeOperTable.
- -- *********************************************************************
appcModeAdminTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcModeAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC Mode Table"

      ::= { appcLu 5 }

appcModeAdminEntry OBJECT-TYPE
      SYNTAX AppcModeAdminEntry





Expires February 1995                                          [Page 39]




Internet Draft                  APPC MIB                    Aug 12, 1994


      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC Mode Information Table."

      INDEX
             { snaNodeAdminIndex,
               appcModeAdminIndex }

      ::= { appcModeAdminTable 1 }

AppcModeAdminEntry     ::= SEQUENCE {
               appcModeAdminIndex              Integer32,
               appcModeAdminModeName           DisplayString,
               appcModeAdminLocLuName          DisplayString,
               appcModeAdminParLuName          DisplayString,
               appcModeAdminCosName            DisplayString,
               appcModeAdminSessEndTpName      DisplayString,
               appcModeAdminMaxSessLimit       Gauge32,
               appcModeAdminConWinAutoActLimit Gauge32,
               appcModeAdminMinCwinLimit       Guage32,
               appcModeAdminMinClosLimit       Guage32,
               appcModeAdminRecvPacWinSz       Integer32,
               appcModeAdminSendPacWinSz       Integer32,
               appcModeAdminPrefRecvRuSz       Integer32,
               appcModeAdminPrefSendRuSz       Integer32,
               appcModeAdminRecvRuSzUpBnd      Integer32,
               appcModeAdminSendRuSzUpBnd      Integer32,
               appcModeAdminRecvRuSzLoBnd      Integer32,
               appcModeAdminSendRuSzLoBnd      Integer32,
               appcModeAdminSyncLvl            INTEGER,
               appcModeAdminCrypto             INTEGER,
               appcModeAdminSingSessReinit     INTEGER,
               appcModeAdminAltCode            INTEGER,
               appcModeAdminCompression        INTEGER,
               appcModeAdminInBoundCompLevel   INTEGER,
               appcModeAdminOutBoundCompLevel  INTEGER,
               appcModeAdminCompRleBeforeLZ    INTEGER,
               appcModeAdminRowStatus          RowStatus

                                   }

appcModeAdminIndex OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible





Expires February 1995                                          [Page 40]




Internet Draft                  APPC MIB                    Aug 12, 1994


      STATUS current
      DESCRIPTION
          "Index for entry in mode definition table."

      ::= { appcModeAdminEntry 1 }

appcModeAdminModeName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..8))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the mode name. A mode defines the characteristics
           for a group of sessions. The mode name can be blank (8
           space characters).

           Row creation conventions:

             When row creation is attempted, the agent must verify that
             the mode name in the new row is not the same as an existing
             mode definition.  If it is, the creation must fail.

             If the desired mode name is the default blank mode name,
             the appcModeAdminModeName object must be set to the
             reserved value 'BLANK', which represents the value of
             8 space characters operationally.
             A set with a shorter string of space characters will be
             padded to 8 spaces by the agent.

           Display convention

             A get operation against this object will return the string
             'BLANK' if the actual value is 8 spaces.  This convention
             is intended to prevent operator confusion and is consistent
             with the practice of some existing implementations.
            "

      ::= { appcModeAdminEntry 2 }

appcModeAdminLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The SNA name of the local LU to which this mode definition
           applies.  This field is from 1 to 17 characters in length,





Expires February 1995                                          [Page 41]




Internet Draft                  APPC MIB                    Aug 12, 1994


           including a period (.)  which separates the NetId from the
           NAU name if the netId is present.

           The reserved value '*ALL' indicates that the mode definition
           applies to all local LUs for the SNA node identified by
           snaNodeAdminIndex, and not just to a single local LU.

           Row creation conventions:

             When row creation is attempted, the agent must verify that
             the local LU name in the new row is not the same as in
             an existing mode definition for the same mode name.
             If it is, the creation must fail.  Implementations that do
             not support definition of modes on an LU-by-LU basis will
             reject any attempt to set this object to a value other than
             '*ALL'."

      ::= { appcModeAdminEntry 3 }

appcModeAdminParLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The SNA name of the partner LU to which this mode definition
           applies.  This field is from 1 to 17 characters in length,
           including a period (.) which separates the NetId from the
           NAU name if the netId is present.

           The reserved value '*ALL' indicates that the mode definition
           applies to all partner LUs for the SNA node identified by
           snaNodeAdminIndex, and not just to a single partner LU.

           Row creation conventions:

             When row creation is attempted, the agent must verify that
             the partner LU name in the new row is not the same as in
             an existing mode definition for the same mode name and the
             same local LU name. If it is, the creation must fail.
             Implementations that do not support definition of modes
             on an LU-by-LU basis will reject any attempt to set this
             object to a value other than '*ALL'."

      ::= { appcModeAdminEntry 4 }





Expires February 1995                                          [Page 42]




Internet Draft                  APPC MIB                    Aug 12, 1994


appcModeAdminCosName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..8))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the class of service (COS) name associated with
           this mode.  If the implementation does not support COS names,
           a null string is returned."

      ::= { appcModeAdminEntry 5 }

appcModeAdminSessEndTpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..64))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the name of the transaction program (TP) to be invoked
          when a session using this mode is deactivated or ended.  If no
          such TP is defined, this object is a null string.  When the
          TP name consists entirely of displayable EBCDIC codepoints,
          it is mapped directly to the equivalent ASCII display string.
          However, registered TP names always have a non-displayable EBCDIC
          codepoint (value less than or equal to x'3F') as the first
          character, so they cannot be directly mapped to an ASCII display
          string.  These TP names are converted to a display string that
          is equivalent to a hexadecimal display of the EBCDIC codepoints.
          For example, the 2-byte TP name x'06F1' (CNOS) is converted to the
          4-byte ASCII display string '06F1'. "

      ::= { appcModeAdminEntry 6 }

appcModeAdminMaxSessLimit    OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the maximum value that the local LU is to use, during
           CNOS processing, for the session limit. The local LU, as a target
           LU, will negotiate a higher session limit it receives in the CNOS
           request down to this maximum value. The local LU, as a source LU,
           will restrict the session limit it sends in a CNOS request to a
           value less than or equal to this maximum value."

      ::= { appcModeAdminEntry 7 }





Expires February 1995                                          [Page 43]




Internet Draft                  APPC MIB                    Aug 12, 1994


appcModeAdminConWinAutoActLimit    OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the limit on the number of contention winner sessions
          to be automatically activated when the minimum number of
          contention winner sessions increases (as a result of CNOS
          processing). The actual number of sessions activated is the
          lesser of this value and the new minimum number of contention
          winner sessions. "

      ::= { appcModeAdminEntry 8 }

appcModeAdminMinCwinLimit OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the default minimum contention winner sessions limit.
           Some implementations internally issue a INITIALIZE_SESSION_LIMIT
           verb when a Mode is created. This value is the parameter used
           for the CNOS processing of that verb.
           This parameter is not used when issuing an explicit
           INITIALIZE_SESSION_LIMIT verb. The equivalent object in
           appcCNOSCmdTable is used."

        ::= { appcModeAdminEntry 9 }

appcModeAdminMinClosLimit OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the default minimum contention loser sessions limit.
           Some implementations internally issue a INITIALIZE_SESSION_LIMIT
           verb when a Mode is created. This value is the parameter used
           for the CNOS processing of that verb. This is the same as
           target minimum contention winner sessions.
           This parameter is not used when issuing an explicit
           INITIALIZE_SESSION_LIMIT verb. The equivalent object in
           appcCNOSCmdTable is used."

      ::=  { appcModeAdminEntry 10 }





Expires February 1995                                          [Page 44]




Internet Draft                  APPC MIB                    Aug 12, 1994


appcModeAdminRecvPacWinSz OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the size of the receive pacing window. This value is
           used for negotiation during session activations (SNA BIND).

           The meaning of this value when set to 0 depends on whether
           adaptive pacing is supported:
              adaptive pacing        No limit on window size
              fixed pacing           No pacing is supported"

      ::=  { appcModeAdminEntry 11 }

appcModeAdminSendPacWinSz OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the size of the send pacing window. This value is
           used for negotiation during session activations (SNA BIND).

           The meaning of this value when set to 0 depends on whether
           adaptive pacing is supported:
              adaptive pacing        No limit on window size
              fixed pacing           No pacing is supported"

        ::=  { appcModeAdminEntry 12 }

appcModeAdminPrefRecvRuSz OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the preferred receive RU (Request Unit) size of
           normal-flow requests on the sessions. This value must be less
           than or equal to the value specified in appcModeAdminRecvRuSzUpBnd
           and greater than or equal to the value specified in
           appcModeAdminRecvRuSzLoBnd.

           The local LU specifies this value for the receive maximum RU
           size in session activation (SNA BIND) requests and responses.
           It will allow negotiation up to the appcModeAdminRecvRuSzUpBnd
           value or down to the appcModeAdminRecvRuSzLoBnd value."





Expires February 1995                                          [Page 45]




Internet Draft                  APPC MIB                    Aug 12, 1994


      ::=  { appcModeAdminEntry 13 }

appcModeAdminPrefSendRuSz OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the preferred send RU (Request Unit) size of
           normal-flow requests on the sessions. This value must be less
           than or equal to the value specified in appcModeAdminSendRuSzUpBnd
           and greater than or equal to the value specified in
           appcModeAdminSendRuSzLoBnd.

           The local LU specifies this value for the send maximum RU
           size in session activation (SNA BIND) requests and responses.
           It will allow negotiation up to the appcModeAdminSendRuSzUpBnd
           value or down to the appcModeAdminSendRuSzLoBnd value."

      ::=  { appcModeAdminEntry 14 }

appcModeAdminRecvRuSzUpBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the upper bound for the maximum receive RU
           (Request Unit) size of normal-flow requests. This is used
           for negotiation during session activations (SNA BIND). "

      ::=  { appcModeAdminEntry 15 }

appcModeAdminSendRuSzUpBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
         "Specifies the upper bound for the maximum send RU (Request Unit)
           size of normal-flow requests. This is used for negotiation
           during session activations (SNA BIND). "

      ::=  { appcModeAdminEntry 16 }

appcModeAdminRecvRuSzLoBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create





Expires February 1995                                          [Page 46]




Internet Draft                  APPC MIB                    Aug 12, 1994


      STATUS current
      DESCRIPTION
       "Specifies the lower bound for the maximum receive RU
           (Request Unit) size of normal-flow requests. This is used
           for negotiation during session activations (SNA BIND). "

      ::=  { appcModeAdminEntry 17 }

appcModeAdminSendRuSzLoBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the lower bound for the maximum send RU
           (Request Unit) size of normal-flow requests. This is used
           for negotiation during session activations (SNA BIND). "

      ::=  { appcModeAdminEntry 18 }

appcModeAdminSyncLvl      OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     noneConfirm(2),
                     noneConfirmSyncPoint(3)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the sync level support. This value is used for
           negotiation during session activations (SNA BIND).

                none             -       No sync level is supported.
                noneConfirm      -       None and Confirm levels supported.
                noneConfirmSyncPoint -   None, Confirm, and Sync Point is
                                                supported.
           "

      ::=  { appcModeAdminEntry 19 }

appcModeAdminCrypto      OBJECT-TYPE
      SYNTAX INTEGER {
                     notsupported(1),
                     mandatory(2),
                     selective(3)
                     }





Expires February 1995                                          [Page 47]




Internet Draft                  APPC MIB                    Aug 12, 1994


      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies whether session-level cryptography is supported.
           This value is used for negotiation during session activations
           (SNA BIND).
                notsupported    -   Specifies session-level cryptography
                                        is not to be used.
                mandatory       -   Specifies session-level cryptography
                                        must be used.
                selective       -   Specifies session-level cryptography
                                        is required just on selected requests
                                        flowing on the sessions."

      ::=  { appcModeAdminEntry 20 }

appcModeAdminSingSessReinit        OBJECT-TYPE
      SYNTAX INTEGER {
                     operatorControlled(1),
                     primaryOnly(2),
                     secondaryOnly(3),
                     primaryOrSecondary(4)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the responsibility for session reinitiation of a single
           session with the remote LU (when the session goes down).
           The local LU uses this parameter to
           specify the session reinitiation responsibility in session
           activation (SNA BIND) requests and responses. The value
           is only supported if the remote LU is defined to
           not support parallel sessions (i.e., appcInRluParaSessSup is
           set to no).

                operatorControlled - specifies that neither LU will
                                     automatically attempt to reinitiate
                                     the session. The operator on either
                                     side will manually reactivate the
                                     session.
                                     A contention race (both side
                                     reinitiating at the same time) is won
                                     by the LU with the lexigraphically
                                     greater fully-qualified LU name.
                primaryOnly        - specifies that the primary LU will





Expires February 1995                                          [Page 48]




Internet Draft                  APPC MIB                    Aug 12, 1994


                                     automatically attempt to reinitiate the
                                     session.
                secondaryOnly      - specifies that the secondary LU will
                                     automatically attempt to reinitiate the
                                     session.
                primaryOrSecondary - specifies that either the primary or
                                     the secondary may automatically attempt
                                     to reinitiate the session. A contention
                                     race is handled the same way as with
                                     operatorControlled.
           "
      ::=  { appcModeAdminEntry 21 }

appcModeAdminAltCode       OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies whether an alternate code is supported.
                yes - ASCII
                no  - EBCDIC
          This value is used for negotiation during session activations
          (SNA BIND)."

      ::=  { appcModeAdminEntry 22 }

appcModeAdminCompression OBJECT-TYPE
      SYNTAX INTEGER {
                    prohibited(1),
                    required(2),
                    negotiable(3)
                    }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
         "Specifies whether compression is supported. The local LU uses
          this value for negotiation during session activation
          (SNA BIND).

              prohibited    -    specifies that no compression is to be used.
              required      -    specifies that compression is required.
              negotiable    -    specifies that the usage of compression





Expires February 1995                                          [Page 49]




Internet Draft                  APPC MIB                    Aug 12, 1994


                                 is to be negotiated between the LU's. The
                                 level of compression is also negotiated."

      ::=  { appcModeAdminEntry 23 }

appcModeAdminInBoundCompLevel OBJECT-TYPE
      SYNTAX INTEGER {
                    none(1),
                    rle(2),
                    lz9(3),
                    lz10(4),
                    lz12(5)
                    }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
         "Specifies the maximum level of compression supported for inbound
          data. The local LU uses this value in conjunction with
          appcModeAdminCompression for negotiation during session activation
          (SNA BIND).

              none  -    specifies that no compression is to be used.
              rle   -    specifies run-length encoding compression
                         in which a 1 or 2 byte sequence substitution is
                         used for each repeated run of the same character.
              lz9   -    specifies Lempel-Ziv-like compression in which
                         9 bit codes are used to substitute repeated
                         substrings in the data stream. These codes are
                         indices that refer to entries in a common dictionary
                         generated adaptively at both sender and receiver as
                         the data flows and compression occurs. The larger
                         of number bits used for the code, the more storage
                         space is required for the dictionary, but the
                         larger the compression ratio.
              lz10  -    specifies a 10 bit code Lempel-Ziv-like
                                compression.
              lz12  -    specifies a 12 bit code Lempel-Ziv-like
                                compression."

      ::=  { appcModeAdminEntry 24 }

appcModeAdminOutBoundCompLevel OBJECT-TYPE
      SYNTAX INTEGER {
                    none(1),
                    rle(2),





Expires February 1995                                          [Page 50]




Internet Draft                  APPC MIB                    Aug 12, 1994


                    lz9(3),
                    lz10(4),
                    lz12(5)
                    }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
         "Specifies the maximum level of compression supported for outbound
          data. The local LU uses this value in conjunction with
          appcModeAdminCompression for negotiation during session activation
          (SNA BIND).

              none  -    specifies that no compression is to be used.
              rle   -    specifies run-length encoding compression
                         in which a 1 or 2 byte sequence substitution is
                         used for each repeated run of the same character.
              lz9   -    specifies Lempel-Ziv-like compression in which
                         9 bit codes are used to substitute repeated
                         substrings in the data stream. These codes are
                         indices that refer to entries in a common dictionary
                         generated adaptively at both sender and receiver as
                         the data flows and compression occurs. The larger
                         number bits used for the code, the more storage
                         space is required for the dictionary, but the
                         larger the compression ratio.
              lz10  -    specifies a 10 bit code Lempel-Ziv-like
                                compression.
              lz12  -    specifies a 12 bit code Lempel-Ziv-like
                                compression."

      ::=  { appcModeAdminEntry 25 }

appcModeAdminCompRleBeforeLZ OBJECT-TYPE
      SYNTAX INTEGER {
                    yes(1),
                    no(2)
                    }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
         "Specifies whether run-length encoding is to be applied to the
          data before applying Lempel-Ziv-like compression. The local LU uses
          this value for negotiation during session activation
          (SNA BIND). This parameter is only supported if LZ compression
          is used."





Expires February 1995                                          [Page 51]




Internet Draft                  APPC MIB                    Aug 12, 1994


      ::=  { appcModeAdminEntry 26 }

appcModeAdminRowStatus OBJECT-TYPE
          SYNTAX  RowStatus
          MAX-ACCESS  read-create
          STATUS  current
          DESCRIPTION
                  "This object is used by a Management Station to
                  create or delete the row entry in the appcModeAdminTable
                  following the RowStatus textual convention.

                  <Need description in SNA terms of what is expected when
                  a row is created or deleted>
                  "

      ::=  { appcModeAdminEntry 27 }

- -- *********************************************************************
- --    APPC Mode Oper Table
- -- ---------------------------------------------------------------------
- -- This table contains operational information about session mode entries.
- --
- -- *********************************************************************
appcModeOperTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcModeOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Operational APPC Mode Information"

      ::= { appcLu 6 }

appcModeOperEntry OBJECT-TYPE
      SYNTAX AppcModeOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC mode operational information table. This entry
           does not augment the appcModeAdminEntry, but reflects an actual
           operational mode for a given local LU-remote LU pair."

      INDEX
             { snaNodeAdminIndex,
               snaLuAdminLuIndex,
               appcParLuAdminIndex,





Expires February 1995                                          [Page 52]




Internet Draft                  APPC MIB                    Aug 12, 1994


               appcModeAdminIndex }

      ::= { appcModeOperTable 1 }


AppcModeOperEntry     ::= SEQUENCE {
   appcModeOperLluName              DisplayString,
   appcModeOperRluName              DisplayString,
   appcModeOperModeName             DisplayString,
   appcModeOperCosName              DisplayString,
   appcModeOperSessEndTpName        DisplayString,
   appcModeOperSessLimit            Gauge32,
   appcModeOperMaxSessLimit         Gauge32,
   appcModeOperConWinAutoActLimit   Gauge32,
   appcModeOperDrainSelf            INTEGER,
   appcModeOperDrainPart            INTEGER,
   appcModeOperMinCwinLimit         Gauge32,
   appcModeOperMinClosLimit         Gauge32,
   appcModeOperRecvPacWinSz         Gauge32,
   appcModeOperSendPacWinSz         Gauge32,
   appcModeOperPrefRecvRuSz         Integer32,
   appcModeOperPrefSendRuSz         Integer32,
   appcModeOperRecvRuSzUpBnd        Integer32,
   appcModeOperSendRuSzUpBnd        Integer32,
   appcModeOperRecvRuSzLoBnd        Integer32,
   appcModeOperSendRuSzLoBnd        Integer32,
   appcModeOperSyncLvl              INTEGER,
   appcModeOperCrypto               INTEGER,
   appcModeOperSingSessReinit       INTEGER,
   appcModeOperAltCode              INTEGER,
   appcModeOperCNOSNeg              INTEGER,
   appcModeOperActSess              Gauge32,
   appcModeOperPndSess              Gauge32,
   appcModeOperActCwin              Gauge32,
   appcModeOperActClos              Gauge32,
   appcModeOperPndCwin              Gauge32,
   appcModeOperPndClos              Gauge32,
   appcModeOperPtmCwin              Gauge32,
   appcModeOperPtmClos              Gauge32,
   appcModeOperFreeSessCount        Gauge32,
   appcModeOperWaitReqCount         Gauge32,
   appcModeOperCompression          INTEGER,
   appcModeOperInBoundCompLevel     INTEGER,
   appcModeOperOutBoundCompLevel    INTEGER,
   appcModeOperCompRleBeforeLZ      INTEGER





Expires February 1995                                          [Page 53]




Internet Draft                  APPC MIB                    Aug 12, 1994


                                   }

appcModeOperLluName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the fully-qualified local LU name.  This field is
           from 1 to 17 characters in length, in the form of NetID.LUName.
           The period(.)  is not present when there is no NetID."

      ::= { appcModeOperEntry 1 }

appcModeOperRluName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the fully-qualified remote LU name.
           This field is from 1 to 17 characters in
           length, in the form of NetID.LUName. The period(.) is not present
           when there is no NetID."

      ::= { appcModeOperEntry 2 }

appcModeOperModeName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the mode name. A mode defines the characteristics
           for a group of sessions. The mode name can be blank (8
           space characters).

           Row creation conventions:

             When row creation is attempted, the agent must verify that
             the mode name in the new row is not the same as an existing
             mode definition.  If it is, the creation must fail.

             If the desired mode name is the default BLANK mode name,
             the appcModeAdminModeName object must be set to 8 spaces.
             A set with a shorter string of space characters will be
             padded to 8 spaces by the agent.





Expires February 1995                                          [Page 54]




Internet Draft                  APPC MIB                    Aug 12, 1994


           Display convention

             A get operation against this object will return the string
             'BLANK' if the actual value is 8 spaces.  This convention
             is intended to prevent operator confusion and is consistent
             with the practice of some existing implementations.
            "

      ::= { appcModeOperEntry 3 }

appcModeOperCosName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the class of service (COS) name associated with
           this mode.  If the implementation does not support COS names,
           a zero-length string is returned."

      ::= { appcModeOperEntry 4 }

appcModeOperSessEndTpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..64))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the name of the transaction program (TP) to be invoked
          when a session using this mode is deactivated or ended. If the
          name is NULL, no transaction program is invoked. When the
          TP name consists entirely of displayable EBCDIC codepoints,
          it is mapped directly to the equivalent ASCII display string.
          However, registered TP names always have a non-displayable EBCDIC
          codepoint (value less than or equal to x'3F') as the first
          character, so they cannot be directly mapped to an ASCII display
          string.  These TP names are converted to a display string that
          is equivalent to a hexadecimal display of the EBCDIC codepoints.
          For example, the 2-byte TP name x'06F1' (CNOS) is converted to the
          4-byte ASCII display string '06F1'. "

      ::= { appcModeOperEntry 5 }

appcModeOperSessLimit    OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current





Expires February 1995                                          [Page 55]




Internet Draft                  APPC MIB                    Aug 12, 1994


      DESCRIPTION
          "Specifies the current session limit of this mode as
           negotiated through APPC CNOS (Change Number of Sessions)
           processing. Identifies the total number of sessions that can
           be established between the local and remote LU using this mode."

      ::= { appcModeOperEntry 6 }

appcModeOperMaxSessLimit    OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the maximum value that the local LU is to use, during
           CNOS processing, for the session limit. The local LU, as a target
           LU, will negotiate a higher session limit it receives in the CNOS
           request down to this maximum value. The local LU, as a source LU,
           will restrict the session limit it sends in a CNOS request to a
           value less than or equal to this maximum value."

      ::= { appcModeOperEntry 7 }

appcModeOperConWinAutoActLimit    OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the limit on the number of contention winner sessions
          to be automatically activated when the minimum number of
          contention winner sessions increases (as a result of CNOS
          processing). The actual number of sessions activated is the
          lesser of this value and the new minimum number of contention
          winner sessions. "

      ::= { appcModeOperEntry 8 }

appcModeOperDrainSelf    OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies whether the local LU is draining its conversations for





Expires February 1995                                          [Page 56]




Internet Draft                  APPC MIB                    Aug 12, 1994


          this mode. Whan a mode session limit is reset (via a CNOS
          RESET_SESSION_LIMIT request), the local LU could be set to
          process all queued conversations before deactivating all of
          the sessions (using the SNA Bracket Initiation Stopped or BIS
          protocol). "

      ::= { appcModeOperEntry 9 }

appcModeOperDrainPart OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
         "Specifies whether the remote LU is draining its conversations for
          this mode. Whan a mode session limit is reset (via a CNOS
          RESET_SESSION_LIMIT request), the remote LU could be set to
          process all queued conversations before deactivating all of
          the sessions (using the SNA Bracket Initiation Stop or BIS
          protocol). "

      ::= { appcModeOperEntry 10 }

appcModeOperMinCwinLimit OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the minimum contention winner sessions limit that
           was negotiated via CNOS processing."

      ::= { appcModeOperEntry 11 }

appcModeOperMinClosLimit OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the minimum contention loser sessions limit that
           was negotiated via CNOS processing. This is the same as
           target minimum contention winner sessions."

      ::=  { appcModeOperEntry 12 }





Expires February 1995                                          [Page 57]




Internet Draft                  APPC MIB                    Aug 12, 1994


appcModeOperRecvPacWinSz OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the size of the receive pacing window. This value is
           used for negotiation during session activations (SNA BIND).

           The meaning of this value when set to 0 depends on whether
           adaptive pacing is supported:
              adaptive pacing   -     No limit on window size
              fixed pacing      -     No pacing is supported"

      ::=  { appcModeOperEntry 13 }

appcModeOperSendPacWinSz OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the size of the send pacing window. This value is
           used for negotiation during session activations (SNA BIND).

           The meaning of this value when set to 0 depends on whether
           adaptive pacing is supported:
              adaptive pacing        No limit on window size
              fixed pacing           No pacing is supported"

        ::=  { appcModeOperEntry 14 }

appcModeOperPrefRecvRuSz OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the preferred receive RU (Request Unit) size of
           normal-flow requests on the sessions. This value must be less
           than or equal to the value specified in appcModeOperRecvRuSzUpBnd
           and greater than or equal to the value specified in
           appcModeOperRecvRuSzLoBnd.

           The local LU specifies this value for the receive maximum RU
           size in session activation (SNA BIND) requests and responses.
           It will allow negotiation up to the appcModeOperRecvRuSzUpBnd
           value or down to the appcModeOperRecvRuSzLoBnd value."





Expires February 1995                                          [Page 58]




Internet Draft                  APPC MIB                    Aug 12, 1994


      ::=  { appcModeOperEntry 15 }

appcModeOperPrefSendRuSz OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the preferred send RU (Request Unit) size of
           normal-flow requests on the sessions. This value must be less
           than or equal to the value specified in appcModeOperSendRuSzUpBnd
           and greater than or equal to the value specified in
           appcModeOperSendRuSzLoBnd.

           The local LU specifies this value for the send maximum RU
           size in session activation (SNA BIND) requests and responses.
           It will allow negotiation up to the appcModeOperSendRuSzUpBnd
           value or down to the appcModeOperSendRuSzLoBnd value."

      ::=  { appcModeOperEntry 16 }

appcModeOperRecvRuSzUpBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the upper bound for the maximum receive RU
           (Request Unit) size of normal-flow requests. This is used
           for negotiation during session activations (SNA BIND). "

      ::=  { appcModeOperEntry 17 }

appcModeOperSendRuSzUpBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the upper bound for the maximum send RU (Request Unit)
           size of normal-flow requests. This is used for negotiation
           during session activations (SNA BIND). "

      ::=  { appcModeOperEntry 18 }

appcModeOperRecvRuSzLoBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only





Expires February 1995                                          [Page 59]




Internet Draft                  APPC MIB                    Aug 12, 1994


      STATUS current
      DESCRIPTION
          "Specifies the lower bound for the maximum receive RU
           (Request Unit) size of normal-flow requests. This is used
           for negotiation during session activations (SNA BIND). "

      ::=  { appcModeOperEntry 19 }

appcModeOperSendRuSzLoBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the lower bound for the maximum send RU
           (Request Unit) size of normal-flow requests. This is used
           for negotiation during session activations (SNA BIND). "

      ::=  { appcModeOperEntry 20 }

appcModeOperSyncLvl OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     noneConfirm(2),
                     noneConfirmSyncPoint(3)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the sync level support. This value is used for
           negotiation during session activations (SNA BIND).

                none             -       No sync level is supported.
                noneConfirm      -       None and Confirm level supported.
                noneConfirmSyncPoint -   None, Confirm and Sync Point is
                                                supported.
           "

      ::=  { appcModeOperEntry 21 }

appcModeOperCrypto OBJECT-TYPE
      SYNTAX INTEGER {
                     notsupported(1),
                     mandatory(2),
                     selective(3)
                     }





Expires February 1995                                          [Page 60]




Internet Draft                  APPC MIB                    Aug 12, 1994


      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies whether session-level cryptography is supported.
           This value is used for negotiation during session activations
           (SNA BIND).
                notsupported    -   Specifies session-level cryptography
                                        is not to be used.
                mandatory       -   Specifies session-level cryptography
                                        must be used.
                selective       -   Specifies session-level cryptography
                                        is required just on selected requests
                                        flowing on the sessions."

      ::=  { appcModeOperEntry 22 }

appcModeOperSingSessReinit OBJECT-TYPE
      SYNTAX INTEGER {
                     operatorControlled(1),
                     primaryOnly(2),
                     secondaryOnly(3),
                     primaryOrSecondary(4)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the responsibility for session reinitiation of a
           single session with the remote LU (when the session goes
           down).  The local LU uses this parameter to specify the
           session reinitiation responsibility in session activation (SNA
           BIND) requests and responses.  The value is only supported if
           the remote LU is defined to not support parallel sessions
           (i.e., appcInRluParaSessSup is set to no).

                operatorControlled - specifies that neither LU will
                                     automatically attempt to reinitiate
                                     the session. The operator on either
                                     side will manually reactivate the
                                     session.
                                     A contention race (both side
                                     reinitiating at the same time) is won
                                     by the LU with the lexigraphically
                                     greater fully-qualified LU name.
                primaryOnly        - specifies that the primary LU will
                                     automatically attempt to reinitiate the





Expires February 1995                                          [Page 61]




Internet Draft                  APPC MIB                    Aug 12, 1994


                                     session.
                secondaryOnly      - specifies that the secondary LU will
                                     automatically attempt to reinitiate the
                                     session.
                primaryOrSecondary - specifies that either the primary or
                                     the secondary may automatically attempt
                                     to reinitiate the session. A contention
                                     race is handled the same way as with
                                     operatorControlled.
           "
      ::=  { appcModeOperEntry 23 }

appcModeOperAltCode OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies whether an alternate code is supported.
                yes - ASCII
                no  - EBCDIC
          This value is used for negotiation during session activations
          (SNA BIND)."

      ::=  { appcModeOperEntry 24 }

appcModeOperCNOSNeg OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies whether CNOS negotiation is in process. CNOS negotiation
           is used to set or change the various session limits for a mode."

      ::=  { appcModeOperEntry 25 }

appcModeOperActSess        OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current





Expires February 1995                                          [Page 62]




Internet Draft                  APPC MIB                    Aug 12, 1994


      DESCRIPTION
          "Specifies the total number of currently active sessions
          between the local LU and the partner LU for this mode."

      ::=  { appcModeOperEntry 26 }

appcModeOperPndSess OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the number of pending sessions (waiting for session
          activation to complete."

      ::=  { appcModeOperEntry 27 }


appcModeOperActCwin        OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the number of active contention winner sessions."

      ::=  { appcModeOperEntry 28 }

appcModeOperActClos OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the number of active contention loser sessions."

      ::=  { appcModeOperEntry 29 }

appcModeOperPndCwin OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the number of contention winner sessions that are
           pending activation."

      ::=  { appcModeOperEntry 30 }





Expires February 1995                                          [Page 63]




Internet Draft                  APPC MIB                    Aug 12, 1994


appcModeOperPndClos OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the number of contention loser sessions that are
           pending activation."

      ::=  { appcModeOperEntry 31 }

appcModeOperPtmCwin OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the number of contention winner sessions that are
           pending termination."

      ::=  { appcModeOperEntry 32 }

appcModeOperPtmClos OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the number of contention loser sessions that are
           pending termination."

      ::=  { appcModeOperEntry 33 }

appcModeOperFreeSessCount OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the free sessions count. This is the number
           of sessions that are available for conversations."

      ::=  { appcModeOperEntry 34 }

appcModeOperWaitReqCount OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION





Expires February 1995                                          [Page 64]




Internet Draft                  APPC MIB                    Aug 12, 1994


          "Specifies the waiting request count. This is the
           number of allocate requests that are waiting (queued) for an
           available session with this mode."

      ::=  { appcModeOperEntry 35 }

appcModeOperCompression OBJECT-TYPE
      SYNTAX INTEGER {
                    prohibited(1),
                    required(2),
                    negotiable(3)
                    }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
         "Specifies whether compression is supported. The local LU uses
          this value for negotiation during session activation
          (SNA BIND).

              prohibited    -    specifies that no compression is to be used.
              required      -    specifies that compression is required.
              negotiable    -    specifies that the usage of compression
                                 is to be negotiated between the LU's. The
                                 level of compression is also negotiated."

      ::=  { appcModeOperEntry 36 }

appcModeOperInBoundCompLevel OBJECT-TYPE
      SYNTAX INTEGER {
                    none(1),
                    rle(2),
                    lz9(3),
                    lz10(4),
                    lz12(5)
                    }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
         "Specifies the maximum level of compression supported for inbound
          data. The local LU uses this value in conjunction with
          appcModeOperCompression for negotiation during session activation
          (SNA BIND).

              none  -    specifies that no compression is to be used.
              rle   -    specifies run-length encoding compression





Expires February 1995                                          [Page 65]




Internet Draft                  APPC MIB                    Aug 12, 1994


                         in which a 1 or 2 byte sequence substitution is
                         used for each repeated run of the same character.
              lz9   -    specifies Lempel-Ziv-like compression in which
                         9 bit codes are used to substitute repeated
                         substrings in the data stream. These codes are
                         indices that refer to entries in a common dictionary
                         generated adaptively at both sender and receiver as
                         the data flows and compression occurs. The larger
                         of number bits used for the code, the more storage
                         space is required for the dictionary, but the
                         larger the compression ratio.
              lz10  -    specifies a 10 bit code Lempel-Ziv-like
                                compression.
              lz12  -    specifies a 12 bit code Lempel-Ziv-like
                                compression."

      ::=  { appcModeOperEntry 37 }

appcModeOperOutBoundCompLevel OBJECT-TYPE
      SYNTAX INTEGER {
                    none(1),
                    rle(2),
                    lz9(3),
                    lz10(4),
                    lz12(5)
                    }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
         "Specifies the maximum level of compression supported for outbound
          data. The local LU uses this value in conjunction with
          appcModeOperCompression for negotiation during session activation
          (SNA BIND).

              none  -    specifies that no compression is to be used.
              rle   -    specifies run-length encoding compression
                         in which a 1 or 2 byte sequence substitution is
                         used for each repeated run of the same character.
              lz9   -    specifies Lempel-Ziv-like compression in which
                         9 bit codes are used to substitute repeated
                         substrings in the data stream. These codes are
                         indices that refer to entries in a common dictionary
                         generated adaptively at both sender and receiver as
                         the data flows and compression occurs. The larger
                         of number bits used for the code, the more storage





Expires February 1995                                          [Page 66]




Internet Draft                  APPC MIB                    Aug 12, 1994


                         space is required for the dictionary, but the
                         larger the compression ratio.
              lz10  -    specifies a 10 bit code Lempel-Ziv-like
                                compression.
              lz12  -    specifies a 12 bit code Lempel-Ziv-like
                                compression."

      ::=  { appcModeOperEntry 38 }

appcModeOperCompRleBeforeLZ OBJECT-TYPE
      SYNTAX INTEGER {
                    yes(1),
                    no(2)
                    }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
         "Specifies whether run-length encoding is to be applied to the
          data before applying Lempel-Ziv-like compression. The local LU uses
          this value for negotiation during session activation
          (SNA BIND). This parameter is only supported if LZ compression
          is used."

      ::=  { appcModeOperEntry 39 }

- -- *********************************************************************
- --    APPC CNOS Command Table
- -- ---------------------------------------------------------------------
- -- This table contains objects for issuing APPC Change-Number-of-Session
- -- (CNOS) commands to a specific mode. Specifically, the commands supported
- -- are:
- --              INITIALIZE_SESSION_LIMIT
- --              CHANGE_SESSION_LIMIT
- --              RESET_SESSION_LIMIT
- --
- -- *********************************************************************
appcCNOSCmdTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcCNOSCmdEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "CNOS Commands table."

      ::= { appcLu 7 }





Expires February 1995                                          [Page 67]




Internet Draft                  APPC MIB                    Aug 12, 1994


appcCNOSCmdEntry OBJECT-TYPE
      SYNTAX AppcCNOSCmdEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC CNOS command table.
           This entry augments appcModeOperEntry."

      AUGMENTS { appcModeOperEntry }

      ::= { appcCNOSCmdTable 1 }


AppcCNOSCmdEntry     ::= SEQUENCE {
        appcCNOSCmd              INTEGER,
        appcCNOSMaxSessLimit     Gauge32,
        appcCNOSDrainSelf        INTEGER,
        appcCNOSDrainPart        INTEGER,
        appcCNOSMinCwinLimit     Gauge32,
        appcCNOSMinClosLimit     Gauge32,
        appcCNOSResponsible      INTEGER,
        appcCNOSForce            INTEGER
        }

appcCNOSCmd    OBJECT-TYPE
      SYNTAX INTEGER {
                        initSesslimit(1),
                        changeSesslimit(2),
                        resetSesslimit(3)
                     }
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "Specifies the CNOS command or verb to issue. First set the
           values to the appropriate parameter objects and then set this
           object to the command to be executed."

        ::= { appcCNOSEntry 1 }

appcCNOSMaxSessLimit    OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "Specifies the maximum value that the local LU is to use, during





Expires February 1995                                          [Page 68]




Internet Draft                  APPC MIB                    Aug 12, 1994


           CNOS processing, for the session limit. The local LU, as a target
           LU, will negotiate a higher session limit it receives in the CNOS
           request down to this maximum value. The local LU, as a source LU,
           will restrict the session limit it sends in a CNOS request to a
           value less than or equal to this maximum value.

           If set (i.e., greater than 0), this overrides the maximum session
           limit defined in the appcModeAdminTable.

           This parameter should be set appropriately before setting
           the command (appcCNOSCmd).
           This parameter applies to the INITIALIZE_SESSION_LIMIT and
           CHANGE_SESSION_LIMIT verbs."

      DEFVAL { 0 }

         ::= { appcCNOSEntry 2 }

appcCNOSDrainSelf    OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "Specifies whether the local LU is draining its conversations for
          this mode. Whan a mode session limit is reset (via a CNOS
          RESET_SESSION_LIMIT request), the local LU could be set to
          process all queued conversations before deactivating all of
          the sessions (using the SNA Bracket Initiation Stopped or BIS
          protocol).
          This parameter should be set appropriately before setting
          the command (appcCNOSCmd).
          This parameter applies only to the RESET_SESSION_LIMIT verb."

      DEFVAL { no }

      ::= { appcCNOSEntry 3 }

appcCNOSDrainPart OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }





Expires February 1995                                          [Page 69]




Internet Draft                  APPC MIB                    Aug 12, 1994


      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
         "Specifies whether the remote LU is draining its conversations for
          this mode. Whan a mode session limit is reset (via a CNOS
          RESET_SESSION_LIMIT request), the remote LU could be set to
          process all queued conversations before deactivating all of
          the sessions (using the SNA Bracket Initiation Stop or BIS
          protocol).
          This parameter should be set appropriately before setting
          the command (appcCNOSCmd).
          This parameter applies only to the RESET_SESSION_LIMIT verb."

      DEFVAL { yes }

      ::= { appcCNOSEntry 4 }

appcCNOSMinCwinLimit OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "Specifies the default minimum contention winner sessions limit.
           This parameter should be set appropriately before setting
           the command (appcCNOSCmd).
           This parameter applies to the INITIALIZE_SESSION_LIMIT and
           CHANGE_SESSION_LIMIT verbs."

      DEFVAL { 0 }

        ::= { appcCNOSEntry 5 }

appcCNOSMinClosLimit OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "Specifies the default minimum contention loser sessions limit.
           This parameter should be set appropriately before setting
           the command (appcCNOSCmd).
           This parameter applies to the INITIALIZE_SESSION_LIMIT and
           CHANGE_SESSION_LIMIT verbs."

      DEFVAL { 0 }





Expires February 1995                                          [Page 70]




Internet Draft                  APPC MIB                    Aug 12, 1994


      ::=  { appcCNOSEntry 6 }

appcCNOSResponsible    OBJECT-TYPE
      SYNTAX INTEGER {
                        source(1),
                        target(2)
                     }
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "Specifies which LU is responsible for selecting and deactivating
           sessions as a result of a change that decreases the session limit
           or the maximum number of contention winner sessions for the source
           or target LU. If no session need to be deactivated, this parameter
           is ignored.

                source  -       specifies that the source (local) LU is
                                responsible. The target (remote) LU cannot
                                negotiate this value.
                target  -       specifies that the target (remote) LU is
                                responsible. The target LU can negotiate
                                this value to source.
           This parameter should be set appropriately before setting
           the command (appcCNOSCmd).
           This parameter applies to the RESET_SESSION_LIMIT and
           CHANGE_SESSION_LIMIT verbs."

      DEFVAL { source }

        ::= { appcCNOSEntry 7 }

appcCNOSForce    OBJECT-TYPE
      SYNTAX INTEGER {
                        yes(1),
                        no(2)
                     }
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "Specifies whether the local LU should force the resetting of the
           session limit when certain error conditions occur that prevent the
           successful exchange of CNOS request and reply.
           This parameter should be set appropriately before setting
           the command (appcCNOSCmd).
           This parameter applies only to the RESET_SESSION_LIMIT verb."





Expires February 1995                                          [Page 71]




Internet Draft                  APPC MIB                    Aug 12, 1994


      DEFVAL { no }

        ::= { appcCNOSEntry 8 }

- -- *********************************************************************
- --    APPC  TP Admin Table
- -- ---------------------------------------------------------------------
- -- This table contains information about configured remotely attachable
- -- transaction programs.
- -- *********************************************************************
appcTpAdminTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcTpAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC Local TP Table"

      ::= { appcTp 1 }

appcTpAdminEntry OBJECT-TYPE
      SYNTAX AppcTpAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC Local TP Information Table."

      INDEX
             { snaNodeAdminIndex,
               appcTpAdminIndex  }

      ::= { appcTpAdminTable 1 }

AppcTpAdminEntry     ::= SEQUENCE {
       appcTpAdminIndex           Integer32,
       appcTpAdminLocLuName       DisplayString,
       appcTpAdminTpName          DisplayString,
       appcTpAdminFileSpec        DisplayString,
       appcTpAdminStartParm       DisplayString,
       appcTpAdminTpOperation     INTEGER,
       appcTpAdminQdepthLimit     Gauge32,
       appcTpAdminInAttachTimeout Integer32,
       appcTpAdminRcvAllocTimeout Integer32,
       appcTpAdminSyncLvl         INTEGER,
       appcTpAdminInstLmt         Integer32,
       appcTpAdminStatus          INTEGER,





Expires February 1995                                          [Page 72]




Internet Draft                  APPC MIB                    Aug 12, 1994


       appcTpAdminLongRun         INTEGER,
       appcTpAdminConvType        INTEGER,
       appcTpAdminConvDuplex      INTEGER,
       appcTpAdminConvSecReq      INTEGER,
       appcTpAdminVerPip          INTEGER,
       appcTpAdminPipSubNum       INTEGER,
       appcTpAdminRowStatus       RowStatus
       }

appcTpAdminIndex OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Index for entry in TP administrative table."

      ::= { appcTpAdminEntry 1 }

appcTpAdminLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The SNA name of the local LU to which this TP definition
           applies. This field is from 1 to 17 characters in length,
           including a period (.) which separates the NetId from the NAU
           name if the netId is present.

           The reserved value '*ALL' indicates that the TP definition
           applies to all local LUs, and not just to a single local LU.

           Row creation conventions:

             When row creation is attempted, the agent must verify that
             the combination of requested local LU name and TP name is
             unique for the SNA node.  If it is not, the agent must
             reject the attempt.  Implementations that do not support
             definition of TPs on an LU-by-LU basis will reject any
             attempt to set this object to a value other than '*ALL'."

      ::= { appcTpAdminEntry 2 }

appcTpAdminTpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..64))
      MAX-ACCESS read-create





Expires February 1995                                          [Page 73]




Internet Draft                  APPC MIB                    Aug 12, 1994


      STATUS current
      DESCRIPTION
          "The local transaction program name.

           When the TP name consists entirely of displayable EBCDIC
           codepoints, it is mapped directly to the equivalent ASCII
           display string.  However, registered TP names always have a
           non-displayable EBCDIC codepoint (value less than or equal to
           x'3F') as the first character, so they cannot be directly
           mapped to an ASCII display string.  These TP names are
           converted to a display string that is equivalent to a
           hexadecimal display of the EBCDIC codepoints.  For example,
           the 2-byte TP name x'06F1' (CNOS) is converted to the 4-byte
           ASCII display string '06F1'.

           Row creation conventions:

             When row creation is attempted, the agent must verify that
             the combination of requested local LU name and TP name is
             unique for the SNA node.  If it is not, the agent must
             reject the attempt."

      ::= { appcTpAdminEntry 3 }

appcTpAdminFileSpec OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..80))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The local file specification of the transaction program.
          May be a zero-length string if not applicable."

      ::= { appcTpAdminEntry 4 }

appcTpAdminStartParm OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..128))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "A parameter string passed to the transaction program when it
           is started.  May be a zero-length string if not supported. "

      ::= { appcTpAdminEntry 5 }

appcTpAdminTpOperation   OBJECT-TYPE





Expires February 1995                                          [Page 74]




Internet Draft                  APPC MIB                    Aug 12, 1994


      SYNTAX INTEGER {
                 queuedOperatorStarted(1),
                 queuedOperatorPreloaded(2),
                 queuedAmStarted(3),
                 nonqueuedAmStarted(4)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
                "Specifies how the program will be started.

                 queuedOperatorStarted -- Specifies that one version of
                       the program will be run at a time.  If an incoming
                       attach arrives and the program has not been
                       started yet, APPC will issue a message to the
                       operator to start the specified program.
                       Subsequent attaches that arrive while the program
                       is active will be queued.

                 queuedOperatorPreloaded -- Specifies that one version
                       of the program will be run at a time.  If an
                       incoming attach arrives and the program has not
                       been started yet, the Attach will be rejected.
                       The APPC attach manager determines that a TP has
                       started upon reception of an APPC RECEIVE_ALLOCATE
                       verb or a CPI Communications program
                       Accept_Conversation (CMACCP) call.  No message is
                       sent to the operator.  Subsequent attaches that
                       arrive while the program is active are queued.

                 queuedAmStarted -- Specifies that one version of the
                       program will be run at a time and will be started
                       by the APPC attach manager.  Subsequent attaches
                       that arrive while the program is active will be
                       queued.

                 nonqueuedAmStarted -- Specifies that multiple copies of
                       the program will be run at a time and will be
                       started by the APPC attach manager."

      ::= { appcTpAdminEntry 6 }

appcTpAdminQdepthLimit    OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-create





Expires February 1995                                          [Page 75]




Internet Draft                  APPC MIB                    Aug 12, 1994


      STATUS current
      DESCRIPTION
                "This object specifies the number of incoming attaches
                 that will be queued before being rejected.
                 This parameter is meaningful only when
                 appcTpAdminTpOperation has one of the following values:

                     queuedOperatorStarted
                     queuedOperatorPreloaded
                     queuedAmStarted

                 The object has a value of zero otherwise."

      ::= { appcTpAdminEntry 7 }

appcTpAdminInAttachTimeout OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
                 "This object specifies the number of seconds incoming
                 attaches will be queued waiting for an APPC program to
                 issue a RECEIVE_ALLOCATE verb or for a CPI-C
                 program to issue an Accept_Conversation
                 (CMACCP) call.  This parameter is meaningful only when
                 appcTpAdminTpOperation has one of the following values:

                     queuedOperatorStarted
                     queuedOperatorPreloaded
                     queuedAmStarted

                 A value of zero indicates that there is no timeout."

      ::= { appcTpAdminEntry 8 }

appcTpAdminRcvAllocTimeout OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
                 "This object specifies the number of seconds an APPC
                 program's RECEIVE_ALLOCATE verb or a CPI-C
                 program's Accept_Conversation (CMACCP) call will wait
                 for an incoming attach to arrive.





Expires February 1995                                          [Page 76]




Internet Draft                  APPC MIB                    Aug 12, 1994


                 A value of zero indicates that there is no timeout."

      ::= { appcTpAdminEntry 9 }

appcTpAdminSyncLvl       OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     confirm(2),
                     noneAndConfirm(3),
                     syncpoint(4),
                     noneAndSyncpoint(5),
                     confirmAndSyncpoint(6),
                     all(7)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
                 "Indicates the synchronization level or levels that the
                 transaction program supports.  "

      ::= { appcTpAdminEntry 10 }

appcTpAdminInstLmt       OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The maximum number of concurrent instances of this transaction
           program that will be supported for a local LU.  A value of
           zero indicates that there is no limit."

      ::= { appcTpAdminEntry 11 }

appcTpAdminStatus        OBJECT-TYPE
      SYNTAX INTEGER {
                     enabled(1),
                     tempDisabled(2),
                     permDisabled(3)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Indicates the status of the TP relative to starting execution
           when the local LU receives an allocation (ATTACH) request naming
           this program.





Expires February 1995                                          [Page 77]




Internet Draft                  APPC MIB                    Aug 12, 1994


                enabled         -       the local LU can start the program.
                tempDisabled    -       the local LU cannot start the
                                        program. The local LU rejects the
                                        request with an indication that the
                                        TP is not available but retry is
                                        possible.
                permDisabled    -       the local LU cannot start the
                                        program. The local LU rejects the
                                        request with an indication that the
                                        TP is not available and retry is
                                        not possible."

      ::= { appcTpAdminEntry 12 }

appcTpAdminLongRun       OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Indicates whether this is a long running transaction program
           (i.e., stays around even after the conversation goes away)."

      ::= { appcTpAdminEntry 13 }

appcTpAdminConvType      OBJECT-TYPE
      SYNTAX INTEGER {
                     basic(1),
                     mapped(2),
                     basicOrMapped(3)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
                "Specifies the conversation type (basic or mapped) that will
                 be used by the TP.  This value is verified upon receipt
                 of an incoming attach.  The acceptable values are:

                 basic -- Indicates that this transaction program
                       supports basic conversations.

                 mapped -- Indicates that this transaction program
                       supports mapped conversations.





Expires February 1995                                          [Page 78]




Internet Draft                  APPC MIB                    Aug 12, 1994


                 basicOrMapped -- Indicates that this transaction program
                       supports either basic or mapped conversations."

      ::= { appcTpAdminEntry 14 }

appcTpAdminConvDuplex      OBJECT-TYPE
      SYNTAX INTEGER {
                     half(1),
                     full(2),
                     halforFull(3)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
                "Specifies the conversation duplex type (half or full) that
                 will be used by the TP.  This value is verified upon receipt
                 of an incoming attach.  The acceptable values are:

                 half -- Indicates that this transaction program
                         supports half duplex conversations.

                 full -- Indicates that this transaction program
                         supports full duplex conversations.

                 halfOrFull -- Indicates that this transaction program
                         supports either half or full duplex conversations."

      ::= { appcTpAdminEntry 15 }

appcTpAdminConvSecReq    OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
                "Indicates whether conversation-level security
                 information is required on incoming attaches designating
                 this tp_name.  Conversation-level security verification
                 is always performed on those requests that include
                 security information.

                 yes -- Indicates that conversation-level security
                       information is required.  ATTACHs designating the





Expires February 1995                                          [Page 79]




Internet Draft                  APPC MIB                    Aug 12, 1994


                       transaction program must carry a user_id and
                       either a password or an already verified
                       indicator.

                 no -- Indicates that no security information is
                       required.  ATTACHs designating the transaction
                       program can omit or include security information.
                 "

      ::= { appcTpAdminEntry 16 }

appcTpAdminVerPip        OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies whether the number of PIP (Program Initialization
           Parameters) subfields should be verified against the number
           expected (appcTpAdminPipSubNum)."

      ::= { appcTpAdminEntry 17 }

appcTpAdminPipSubNum     OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the TP number of PIP subfields expected."

      ::= { appcTpAdminEntry 18 }

 appcTpAdminRowStatus OBJECT-TYPE
          SYNTAX  RowStatus
          MAX-ACCESS  read-create
          STATUS  current
          DESCRIPTION
                  "This object is used by a Management Station to
                  create or delete the row entry in the
                  appcTpAdminTable following the RowStatus textual





Expires February 1995                                          [Page 80]




Internet Draft                  APPC MIB                    Aug 12, 1994


                  convention.

                  <Need description in SNA terms of what is expected
                  when a row is created or deleted>
                  "
      ::= { appcTpAdminEntry 19 }


- -- *********************************************************************
- -- APPC Session Table - only objects specific to APPC session are defined
- -- here.  The generic objects are defined in snanau mib.
- -- ---------------------------------------------------------------------
- -- This table contains information about APPC sessions
- -- *********************************************************************
appcSessnTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcSessnEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC Session Table"

      ::= { appcSession 1 }

appcSessnEntry OBJECT-TYPE
      SYNTAX AppcSessnEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC Session Information Table.
           Indexed as NAU MIB session table."
      INDEX   { snaNodeAdminIndex,
                 snaLuAdminLuIndex,
                 snaLuSessnRluIndex,
                 snaLuSessnIndex }
      ::= { appcSessnTable 1 }

AppcSessnEntry     ::= SEQUENCE {
      appcSessnPcidCpName           DisplayString,
      appcSessnPcid                 OCTET STRING,
      appcSessnPluIndicator         INTEGER,
      appcSessnLluName              DisplayString,
      appcSessnModeName             DisplayString,
      appcSessnCosName              DisplayString,
      appcSessnTransPriority        Integer32,
      appcSessnEnhanceSecSup        INTEGER,





Expires February 1995                                          [Page 81]




Internet Draft                  APPC MIB                    Aug 12, 1994


      appcSessnSendPacingType       INTEGER,
      appcSessnSendRpc              Gauge32,
      appcSessnSendNxWndwSize       Gauge32,
      appcSessnRecvPacingType       INTEGER,
      appcSessnRecvRpc              Gauge32,
      appcSessnRecvNxWndwSize       Gauge32,
      appcSessnUpTime               TimeStamp,
      appcSessnCtrUpTime            TimeStamp,
      appcSessnP2SFmdPius           Counter32,
      appcSessnS2PFmdPius           Counter32,
      appcSessnP2SNonFmdPius        Counter32,
      appcSessnS2PNonFmdPius        Counter32,
      appcSessnP2SFmdBytes          Counter32,
      appcSessnS2PFmdBytes          Counter32,
      appcSessnP2SNonFmdBytes       Counter32,
      appcSessnS2PNonFmdBytes       Counter32,
      appcSessnRscv                 OCTET STRING
                                   }

appcSessnPcidCpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The network-qualified CP name of the node at which the
           session and pcid originated.  For APPN and LEN nodes, this is
           either CP name of the APPN node at which the origin LU is
           located or the CP name of the NN serving the LEN node at which
           the origin LU is located.  This field is from 1 to 17
           characters in length, including a period (.)  which separates
           the NetId from the NAU name if the netId is present."

      ::=  { appcSessnEntry 1 }

appcSessnPcid OBJECT-TYPE
      SYNTAX OCTET STRING  (SIZE (8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The procedure correlation identifier (pcid) of a session.  It
           is an 8-octet value assigned by the primary LU."

      ::=  { appcSessnEntry 2 }

appcSessnPluIndicator OBJECT-TYPE





Expires February 1995                                          [Page 82]




Internet Draft                  APPC MIB                    Aug 12, 1994


      SYNTAX INTEGER {
                     localLuIsPlu(1),
                     remoteLuIsPlu(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates which LU is the PLU for this session.  For
           independent LUs, the PLU (primary LU) is the one that
           initiated the session (sent BIND), while the SLU (secondary
           LU) is the one that accepted the session initiation (received
           BIND).

           The 'local' LU is the one identified by snaLuAdminLuIndex and
           by appcSessnLluName.

           The 'remote' LU is the one identified by snaLuSessnRluIndex
           and by snaLuSessnRemoteLuName."

      ::=  { appcSessnEntry 3 }

appcSessnLluName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The name of the local LU for this session.  This is the LU
           identified by snaLuAdminIndex.  It is included here for
           convenience only (also accessible as snaLuAdminSnaName using
           snaLuAdminIndex).  This field is from 1 to 17 characters in
           length, including a period (.)  which separates the NetId from
           the NAU name if the netId is present."

      ::=  { appcSessnEntry 4 }

appcSessnModeName OBJECT-TYPE
      SYNTAX DisplayString  (SIZE (1..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The mode name name used for this session."

      ::=  { appcSessnEntry 5 }

appcSessnCosName OBJECT-TYPE





Expires February 1995                                          [Page 83]




Internet Draft                  APPC MIB                    Aug 12, 1994


      SYNTAX DisplayString  (SIZE (1..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The Class of Service (COS) name used for this session."

      ::=  { appcSessnEntry 6 }

appcSessnTransPriority OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The transmission priority of this session."

      ::=  { appcSessnEntry 7 }

appcSessnEnhanceSecSup OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     level1(2),
                     level2(3)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Enhanced security supported. Indicates the level of enhanced
           security support:

           1 = none
           2 = level 1
           3 = level 2
           "

      ::=  { appcSessnEntry 8 }

appcSessnSendPacingType OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     fixed(2),
                     adaptive(3)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION





Expires February 1995                                          [Page 84]




Internet Draft                  APPC MIB                    Aug 12, 1994


           "The type of pacing being used for sending data."

      ::=  { appcSessnEntry 9 }

appcSessnSendRpc OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The send residual pace count.  This represents the number of
          MU's that can still be sent in the current session window."

      ::=  { appcSessnEntry 10 }

appcSessnSendNxWndwSize OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The size of the next window which will be used to send data."

      ::=  { appcSessnEntry 11 }

appcSessnRecvPacingType OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     fixed(2),
                     adaptive(3)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The type of pacing being used for receiving data."

      ::=  { appcSessnEntry 12 }

appcSessnRecvRpc OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The receive residual pace count.  This represents the number
           of MU's that can still be received in the current session
           window."





Expires February 1995                                          [Page 85]




Internet Draft                  APPC MIB                    Aug 12, 1994


      ::=  { appcSessnEntry 13 }

appcSessnRecvNxWndwSize OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The size of the next window which will be used to receive data."

      ::=  { appcSessnEntry 14 }

appcSessnUpTime   OBJECT-TYPE
      SYNTAX TimeStamp
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Length of time the session has been up in hundreds of a
           second.  This is the elapsed time since the session started
           (snaLuSessnActiveTime)."

      ::=  { appcSessnEntry 15 }

appcSessnCtrUpTime   OBJECT-TYPE
      SYNTAX TimeStamp
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Length of time the session counters have been active in
           hundreds of a second.  This value is included for
           implementations that allow an operator or management
           workstation to enable and disable the collection of session
           statistics.  For implementations that do not provide that
           option, i.e., counters are always enabled, this value will be
           the same as appcSessnUpTime."

      ::=  { appcSessnEntry 16 }

appcSessnP2SFmdPius OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of FMD PIUs sent from the Primary LU to the Secondary
           LU.  This value differs from snaLuSessnStatsReceivedRus, which
           counts both FM data RUs and control RUs.  This counter is just





Expires February 1995                                          [Page 86]




Internet Draft                  APPC MIB                    Aug 12, 1994


           for FM data."

      ::=  { appcSessnEntry 17 }

appcSessnS2PFmdPius OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of FMD PIUs sent from the Secondary LU to the Primary
           LU.  This value differs from snaLuSessnStatsSentRus, which
           counts both FM data RUs and control RUs.  This counter is just
           for FM data."

      ::=  { appcSessnEntry 18 }

appcSessnP2SNonFmdPius OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of non-FMD PIUs sent from the Primary LU to the
           Secondary LU"

      ::=  { appcSessnEntry 19 }

appcSessnS2PNonFmdPius OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of non-FMD PIUs sent from the Secondary LU to the
           Primary LU"

      ::=  { appcSessnEntry 20 }

appcSessnP2SFmdBytes  OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of FMD Bytes sent from the Primary LU to the Secondary
           LU"

      ::=  { appcSessnEntry 21 }





Expires February 1995                                          [Page 87]




Internet Draft                  APPC MIB                    Aug 12, 1994


appcSessnS2PFmdBytes  OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of FMD Bytes sent from the Secondary LU to the Primary
           LU"

      ::=  { appcSessnEntry 22 }

appcSessnP2SNonFmdBytes  OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of non-FMD Bytes sent from the Primary LU to the
           Secondary LU"

      ::=  { appcSessnEntry 23 }

appcSessnS2PNonFmdBytes  OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of non-FMD Bytes sent from the Secondary LU to the
           Primary LU"

      ::=  { appcSessnEntry 24 }

appcSessnRscv     OBJECT-TYPE
      SYNTAX OCTET STRING   (SIZE (0..255))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The route selection control vector (RSCV CV2B) used for this
           session.  It is present for APPN-level implementations.
           LEN-level implementations will return a null string.  The
           internal format of this vector is described in SNA Formats.
           This object contains an un-interpreted copy of the control
           vector (including the length and key fields)."

      ::=  { appcSessnEntry 25 }

- -- *********************************************************************





Expires February 1995                                          [Page 88]




Internet Draft                  APPC MIB                    Aug 12, 1994


- --    APPC Conversation Table
- -- ---------------------------------------------------------------------
- -- This table contains information about active and inactive APPC
- -- conversations. This table represents a historical log of conversations.
- -- Since some conversations could be very dynamic and can come up and down
- -- relatively quickly, we felt it might be more useful if this table showed
- -- not only active conversations, but those that became inactive.
- -- *********************************************************************

appcConvTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcConvEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Table of APPC Conversations"

      ::= { appcConversation 1 }

appcConvEntry OBJECT-TYPE
      SYNTAX AppcConvEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC Conversation Table."

      INDEX
             { snaNodeAdminIndex,
               snaLuAdminLuIndex,
               appcConvIndex  }

      ::= { appcConvTable 1}

AppcConvEntry     ::= SEQUENCE {
           appcConvIndex               Integer32,
           appcConvId                  OCTET STRING,
           appcConvState               INTEGER,
           appcConvType                INTEGER,
           appcConvCorrelator          OCTET STRING,
           appcConvSyncLvl             INTEGER,
           appcConvSource              INTEGER,
           appcConvDuplex              INTEGER,
           appcConvStartTime           TimeStamp,
           appcConvStopTime            TimeStamp,
           appcConvSendBytes           Counter32,
           appcConvRcvBytes            Counter32,





Expires February 1995                                          [Page 89]




Internet Draft                  APPC MIB                    Aug 12, 1994


           appcConvUserid              DisplayString,
           appcConvPcidNauName         DisplayString,
           appcConvPcid                String,
           appcConvModeName            DisplayString,
           appcConvLuwIdName           DisplayString,
           appcConvLuwIdInstance       String,
           appcConvLuwIdSequence       String,
           appcConvTpName              DisplayString,
           appcConvSessnIndex          Integer32
         }

appcConvIndex OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Index for entry in Conversation table."

      ::= { appcConvEntry 1 }

appcConvId   OBJECT-TYPE
      SYNTAX OCTET STRING  (SIZE (4))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The 4-byte ID of the conversation."

      ::= { appcConvEntry 2 }

appcConvState    OBJECT-TYPE
      SYNTAX INTEGER {
                      reset(1),
                      send(2),
                      receive(3),
                      confirm(4),
                      confirmSend(5),
                      confirmDealloc(6),
                      pendingDeallocate(7),
                      pendingPost(8),
                      sendReceive(9),
                      sendOnly(10),
                      receiveOnly(11),
                      deferReceive(12),
                      deferDeallocate(13),
                      syncpoint(14),





Expires February 1995                                          [Page 90]




Internet Draft                  APPC MIB                    Aug 12, 1994


                      syncpointSend(15),
                      syncpointDeallocate(16),
                      backoutRequired(17)
                }

      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates the state of the conversation at the instant when the
           information was retrieved. The values are:

              reset     The conversation is reset (i.e., deallocated).

              send
                        The conversation can send data.  This value also
                        is returned if the conversation is in
                        Send-Pending state.
              receive
                        The conversation can receive data.
              confirm
                        The conversation has received a confirm
                        indicator.  It can issue an [MC_]CONFIRMED or
                        [MC_]SEND_ERROR verb to change state.  It will
                        continue in Receive state if an [MC_]CONFIRMED
                        verb is issued.
              confirmSend
                        The conversation is in Confirm state and changes
                        to Send state when an [MC_]CONFIRMED verb is
                        issued.
              confirmDealloc
                        The conversation is in Confirm state and becomes
                        inactive when an [MC_]CONFIRMED verb is issued.
              pendingDeallocate
                        The conversation is in Pending-Deallocate state
                        while it waits for (MC_)DEALLOCATE TYPE
                        (sync_level) to complete.
              pendingPost
                        The conversation is in Pending-Post state while
                        it waits for the [MC_]RECEIVE_AND_POST verb to
                        complete its receive function.
              sendReceive
                        The full-duplex conversation can send or receive
                        data.
              sendOnly
                        The full-duplex conversation can send data, but





Expires February 1995                                          [Page 91]




Internet Draft                  APPC MIB                    Aug 12, 1994


                        it does not have permission to receive data,
                        because the partner TP has already deallocated
                        its side of the conversation.
              receiveOnly
                        The full-duplex conversation can receive data,
                        but it does not have permission to send data,
                        because it has already deallocated its side of
                        the conversation.
              deferReceive
                        Waiting for a successful SYNCPT verb operation to go
                        into the receive state.
              deferDeallocate
                        Waiting for a successful SYNCPT verb operation to go
                        into the reset state.
              syncpoint
                        Need to response to a SYNCPT verb issued. After
                        successful operation, the next state will be receive.
              syncpointSend
                        Need to response to a SYNCPT verb issued. After
                        successful operation, the next state will be send.
              syncpointDeallocate
                        Need to response to a SYNCPT verb issued. After
                        successful operation, the next state will be reset.
              backoutRequired
                        TP must execute a BACKOUT verb to backout the
                        transaction."

      ::= { appcConvEntry 3 }

appcConvType  OBJECT-TYPE
      SYNTAX INTEGER {
                      basic(1),
                      mapped(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates the type of conversation.  The values are:
              basic
                        Indicates that this conversation supports
                        basic verbs.

              mapped
                        Indicates that this conversation supports
                        mapped verbs."





Expires February 1995                                          [Page 92]




Internet Draft                  APPC MIB                    Aug 12, 1994


      ::= { appcConvEntry 4 }

appcConvCorrelator  OBJECT-TYPE
      SYNTAX OCTET STRING  (SIZE (0..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "This is an 8-byte identifier that the source LU assigns to the
           conversation; the source LU is the one that sent the allocation
           request. The conversation correlator is included on the allocation
           request. The conversation correlator uniquely identifies a
           conversation, from among all conversations, between the local and
           partner LUs. It may be used, for example, during problem
           determination associated with a conversation. A length of 0
           indicates that no conversation correlator is defined."

      ::= { appcConvEntry 5 }


appcConvSyncLvl  OBJECT-TYPE
      SYNTAX INTEGER {
                      none(1),
                      confirm(2),
                      syncpt(3)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates the highest sync level support for the conversation.
           The values are:

                none
                        Indicates that no sync-level processing can be
                        performed on this conversation. The
                        transaction program does not issue verbs or
                        recognize any returned parameters
                        relating to any sync-level function.

                confirm
                        Indicates that confirmation processing can be
                        performed on this conversation.  The
                        transaction program can issue verbs and
                        recognize returned parameters relating to
                        confirmation.





Expires February 1995                                          [Page 93]




Internet Draft                  APPC MIB                    Aug 12, 1994


                syncpt
                        Indicates that syncpt and confirmation processing
                        can be performed on this conversation. The
                        transaction program can issue verbs and recognize
                        returned parameters relating to syncpt and
                        confirmation."

      ::= { appcConvEntry 6 }

appcConvSource OBJECT-TYPE
      SYNTAX INTEGER {
                      localLu(1),
                      partnerLu(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates whether the local or partner LU is the source of
            the conversation, that is, which LU started the conversation
            by sending the allocation request.

               localLu
                        The local LU is the source of the conversation,
                        and the partner LU is the target of the
                        conversation.

               partnerLu
                        The partner LU is the source of the
                        conversation, and the local LU is the target of
                        the conversation."

      ::= { appcConvEntry 7 }

appcConvDuplex  OBJECT-TYPE
      SYNTAX INTEGER {
                      half(1),
                      full(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates the conversation duplex style in effect for the
           conversation.

            half        Indicates that information can be transferred in





Expires February 1995                                          [Page 94]




Internet Draft                  APPC MIB                    Aug 12, 1994


                        both directions, but only in one direction at a
                        time.

            full        Indicates that information can be transferred in
                        both directions at the same time."

      ::= { appcConvEntry 8 }

appcConvStartTime  OBJECT-TYPE
      SYNTAX TimeStamp
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Time when the conversation started in hundreds of a second."

      ::= { appcConvEntry 9  }

appcConvStopTime   OBJECT-TYPE
      SYNTAX TimeStamp
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Time when the conversation stopped in hundreds of a second."

      ::= { appcConvEntry 10 }

appcConvSendBytes OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates the number of bytes that was sent on the
           conversation.
           The count includes all SNA RU bytes sent, including those in the
           FMH-5 (Attach), FMH-7 (Error Description), SIGNAL, LUSTAT, and
           SNA responses; it does not include SNA TH and RH bytes."

        ::= { appcConvEntry 11 }

appcConvRcvBytes OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates the number of bytes that was received on the





Expires February 1995                                          [Page 95]




Internet Draft                  APPC MIB                    Aug 12, 1994


           conversation.
           The count includes all SNA RU bytes sent, including those in the
           FMH-5 (Attach), FMH-7 (Error Description), SIGNAL, LUSTAT, and
           SNA responses; it does not include SNA TH and RH bytes."

      ::= { appcConvEntry 12 }

appcConvUserid OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..10))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The user ID that the initiating program provided in the
          incoming attach."

      ::= { appcConvEntry 13 }

appcConvPcidNauName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (3..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The network-qualified NAU name or of the
           node at which the session and pcid originated.  For APPN
           and LEN nodes, this is either CP name of the APPN node at
           which the origin LU is located or the CP name of the
           NN serving the LEN node at which the origin LU is
           located.  This field is from 3 to 17 characters in
           length, including a period (.) which separates the
           NetId from the NAU name."

      ::=  { appcConvEntry 14 }

appcConvPcid OBJECT-TYPE
      SYNTAX OCTET STRING  (SIZE (8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The procedure correlation identifier (pcid) of the
           session.  It is an 8-octet value assigned by the primary LU."

      ::=  { appcConvEntry 15 }

appcConvModeName OBJECT-TYPE
      SYNTAX DisplayString  (SIZE (1..8))





Expires February 1995                                          [Page 96]




Internet Draft                  APPC MIB                    Aug 12, 1994


      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The Mode Name name used for this conversation.
           This is a 1-8 character name."

      ::=  { appcConvEntry 16 }

appcConvLuwIdName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The SNA name of the LU that initiated the logical unit of work
           that is associated with this active TP. This field is from
           1 to 17 characters in length, including a period (.) which
           separates the NetId from the LU name if the netId is present."

      ::= { appcConvEntry 17 }

appcConvLuwIdInstance OBJECT-TYPE
      SYNTAX OCTET STRING (SIZE (0..6))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The instance identifier for the logical unit of work."

      ::= { appcConvEntry 18 }

appcConvLuwIdSequence OBJECT-TYPE
      SYNTAX OCTET STRING (SIZE (0..2))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The sequence identifier for the logical unit of work."

      ::= { appcConvEntry 19 }

appcConvTpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..64))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The transaction program name from the FMH5 ATTACH which started
            this conversation.





Expires February 1995                                          [Page 97]




Internet Draft                  APPC MIB                    Aug 12, 1994


           When the TP name consists entirely of displayable EBCDIC
           codepoints, it is mapped directly to the equivalent ASCII
           display string.  However, registered TP names always have a
           non-displayable EBCDIC codepoint (value less than or equal to
           x'3F') as the first character, so they cannot be directly
           mapped to an ASCII display string.  These TP names are
           converted to a display string that is equivalent to a
           hexadecimal display of the EBCDIC codepoints.  For example,
           the 2-byte TP name x'06F1' (CNOS) is converted to the 4-byte
           ASCII display string '06F1'."

      ::= { appcConvEntry 20 }

appcConvSessnIndex OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Index of entry in appcSessnTable that is associated with this
           conversation. If the conversation is reset, then this value is
           set to 0."

      ::= { appcConvEntry 21 }

- -- *********************************************************************
- --    APPC CPIC Admin Table
- -- *********************************************************************
appcCpicAdminTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcCpicAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC CPI-C side information table."

      ::= { appcCPIC 1 }

appcCpicAdminEntry OBJECT-TYPE
      SYNTAX AppcCpicAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC CPI-C side information Table."

      INDEX
             { appcCpicAdminIndex }





Expires February 1995                                          [Page 98]




Internet Draft                  APPC MIB                    Aug 12, 1994


      ::= { appcCpicAdminTable 1 }

AppcCpicAdminEntry ::= SEQUENCE {
          appcCpicAdminIndex              Integer32,
          appcCpicAdminLocLuName          DisplayString,
          appcCpicAdminSymbDestName       DisplayString,
          appcCpicAdminParLuAlias         DisplayString,
          appcCpicAdminParLuName          DisplayString,
          appcCpicAdminModeName           DisplayString,
          appcCpicAdminTpNameType         INTEGER,
          appcCpicAdminTpName             DisplayString,
          appcCpicAdminUserid             DisplayString,
          appcCpicAdminSecurity           INTEGER,
          appcCpicAdminRowStatus          RowStatus
    }

appcCpicAdminIndex   OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Index to the table of CPI-C side information."

      ::= { appcCpicAdminEntry 1 }

appcCpicAdminLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
           "The SNA name of the local LU to which this CPI-C side
           information definition applies.  This field is from 1 to 17
           characters in length, including a period (.)  which separates
           the NetId from the NAU name if the netId is present.

           The reserved value '*ALL' indicates that the definition applies
           to all local LUs, and not just to a single local LU.

           Row creation conventions:

              When row creation is attempted, the agent must verify that
              the combination of local LU name and symbolic destination
              name is unique for the SNA node, i.e., the values in the
              newly created row must not conflict with an existing
              definition.  If they do conflict, the agent must reject the





Expires February 1995                                          [Page 99]




Internet Draft                  APPC MIB                    Aug 12, 1994


              attempt to create the new row.  Implementations that do not
              support definition of CPI-C side information on an LU by LU
              basis will reject any attempt to set this object to a value
              other than '*ALL'."

      ::= { appcCpicAdminEntry 2 }

appcCpicAdminSymbDestName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..8))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
              "Specifies the symbolic destination name used by CPI-C
               applications to identify this definition."

      ::= { appcCpicAdminEntry 3 }

appcCpicAdminParLuAlias  OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..8))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "A local alias for the partner LU.  If not known or
           not applicable, this object contains a zero-length
           string."

      ::= { appcCpicAdminEntry 4 }


appcCpicAdminParLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
           "The SNA name of the partner LU.  This field is from 1 to 17
           characters in length, including a period (.)  which separates
           the NetId from the NAU name if the netId is present."

      ::= { appcCpicAdminEntry 5 }


appcCpicAdminModeName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..8))
      MAX-ACCESS read-create
      STATUS current





Expires February 1995                                         [Page 100]




Internet Draft                  APPC MIB                    Aug 12, 1994


      DESCRIPTION
           "Specifies the mode name.  A mode defines the characteristics
           for a group of sessions.  The mode name can be blank (8 space
           characters).

           Row creation conventions:

             If the desired mode name is the default blank mode name,
             the appcCpicAdminModeName object must be set to the
             reserved value 'BLANK', which represents the value of
             8 space characters operationally.
             A set with a shorter string of space characters will be
             padded to 8 spaces by the agent.

           Display convention

             A get operation against this object will return the string
             'BLANK' if the actual value is 8 spaces.  This convention
             is intended to prevent operator confusion and is consistent
             with the practice of some existing implementations.
            "

      ::= { appcCpicAdminEntry 6 }


appcCpicAdminTpNameType OBJECT-TYPE
      SYNTAX INTEGER {
                     normal(1),
                     snaServiceTp(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies whether the tp name in appcCpicAdminTpName
          identifies a normal TP or an SNA service TP.  In this context,
          a normal TP is one with a name consisting only of displayable
          characters, while an SNA service TP has a name containing
          octets that do not map to displayable characters."

      ::= { appcCpicAdminEntry 7 }

appcCpicAdminTpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..64))
      MAX-ACCESS read-create
      STATUS current





Expires February 1995                                         [Page 101]




Internet Draft                  APPC MIB                    Aug 12, 1994


      DESCRIPTION
          "Specifies the name of the partner TP to be used when a CPI-C
           application initiates a conversation specifying this side
           information entry.

           Row creation conventions:

              For a 'normal' TP name (displayable string), the default
              value of appcCpicAdminTpNameType is acceptable, and the
              management station sets appcCpicAdminTpName to the desired
              value (a display string equivalent to the EBCDIC TP name).

              For a 'snaServiceTp' TP name (non-displayable string), the
              management station must set appcCpicAdminTpNameType to the
              value snaServiceTp BEFORE setting appcCpicAdminTpName to
              the desired value.  When appcCpicAdminTpNameType has the
              value snaServiceTp, the management station will follow the
              display convention described below when it sets the TP
              name.  The agent system will then interpret the string as
              equivalent to a hexadecimal display of the EBCDIC
              codepoints.

           Display convention

              When the TP name consists entirely of displayable EBCDIC
              codepoints, it is mapped directly to the equivalent ASCII
              display string.  However, registered TP names always have a
              non-displayable EBCDIC codepoint (value less than or equal
              to x'3F') as the first character, so they cannot be
              directly mapped to an ASCII display string.  These TP names
              are converted to a display string that is equivalent to a
              hexadecimal display of the EBCDIC codepoints.  For example,
              the 2-byte TP name x'06F1' (CNOS) is converted to the
              4-byte ASCII display string '06F1'."

      ::= { appcCpicAdminEntry 8 }

appcCpicAdminUserid      OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..10))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The security userid, if any, associated with the side
           information definition."





Expires February 1995                                         [Page 102]




Internet Draft                  APPC MIB                    Aug 12, 1994


      ::= { appcCpicAdminEntry 9 }

appcCpicAdminSecurity OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     same(2),
                     pgm(3)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the security information to be used for allocating
          the conversation.

                none    -       No security information.
                same    -       Use the security environment currently
                                associated with this TP.
                pgm     -       Use program specified user_id and password."

      ::= { appcCpicAdminEntry 10 }

appcCpicAdminRowStatus OBJECT-TYPE
          SYNTAX  RowStatus
          MAX-ACCESS  read-create
          STATUS  current
          DESCRIPTION
                  "This object is used by a Management Station to
                  create or delete the row entry in the
                  appcCpicAdminTable following the RowStatus textual
                  convention.

                  <Need description in SNA terms of what is expected
                  when a row is created or deleted>
                  "
      ::= { appcCpicAdminEntry 11 }

- -- *********************************************************************
- --    APPC CPIC Oper Table
- -- *********************************************************************

appcCpicOperTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcCpicOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION





Expires February 1995                                         [Page 103]




Internet Draft                  APPC MIB                    Aug 12, 1994


           "APPC CPI-C side information table."

      ::= { appcCPIC 2 }

appcCpicOperEntry OBJECT-TYPE
      SYNTAX AppcCpicOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC CPI-C side information Table."

      INDEX
             { appcCpicOperIndex }

      ::= { appcCpicOperTable 1 }


AppcCpicOperEntry ::= SEQUENCE {
          appcCpicOperIndex              Integer32,
          appcCpicOperLocLuName          DisplayString,
          appcCpicOperSymbDestName       DisplayString,
          appcCpicOperParLuAlias         DisplayString,
          appcCpicOperParLuName          DisplayString,
          appcCpicOperModeName           DisplayString,
          appcCpicOperTpNameType         INTEGER,
          appcCpicOperTpName             DisplayString,
          appcCpicOperUserid             DisplayString,
          appcCpicOperSecurity           INTEGER
    }

appcCpicOperIndex   OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Index to the table of CPI-C side information.  This field is
           from 1 to 17 characters in length, including a period (.)
           which separates the NetId from the NAU name if the netId is
           present."

      ::= { appcCpicOperEntry 1 }

appcCpicOperLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only





Expires February 1995                                         [Page 104]




Internet Draft                  APPC MIB                    Aug 12, 1994


      STATUS current
      DESCRIPTION
           "The SNA name of the local LU to which this CPI-C side
           information definition applies.  This field is from 1 to 17
           characters in length, including a period (.)  which separates
           the NetId from the NAU name if the netId is present.

           The reserved value '*ALL' indicates that the definition
           applies to all local LUs, and not just to a single local LU."

      ::= { appcCpicOperEntry 2 }

appcCpicOperSymbDestName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Specifies the symbolic destination name used by CPI-C
            applications to identify this definition."

      ::= { appcCpicOperEntry 3 }

appcCpicOperParLuAlias  OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "A local alias for the partner LU.  If not known or not
           applicable, this object contains a zero-length string."

      ::= { appcCpicOperEntry 4 }

appcCpicOperParLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The SNA name of the partner LU.  This field is from 1 to 17
           characters in length, including a period (.)  which separates
           the NetId from the NAU name if the netId is present."

      ::= { appcCpicOperEntry 5 }


appcCpicOperModeName OBJECT-TYPE





Expires February 1995                                         [Page 105]




Internet Draft                  APPC MIB                    Aug 12, 1994


      SYNTAX DisplayString (SIZE (1..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Specifies the mode name.  A mode defines the characteristics
           for a group of sessions.  The mode name can be blank (8 space
           characters).

           Display convention

             A get operation against this object will return the string
             'BLANK' if the actual value is 8 spaces.  This convention
             is intended to prevent operator confusion and is consistent
             with the practice of some existing implementations. "

      ::= { appcCpicOperEntry 6 }


appcCpicOperTpNameType OBJECT-TYPE
      SYNTAX INTEGER {
                     normal(1),
                     snaServiceTp(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Specifies whether the tp name in appcCpicOperTpName
           identifies a normal TP or an SNA service TP.  In this context,
           a normal TP is one with a name consisting only of displayable
           characters, while an SNA service TP has a name containing
           octets that do not map to displayable characters."

      ::= { appcCpicOperEntry 7 }

appcCpicOperTpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..64))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Specifies the name of the partner TP to be used when a CPI-C
           application initiates a conversation specifying
           this side information entry.

           Display convention





Expires February 1995                                         [Page 106]




Internet Draft                  APPC MIB                    Aug 12, 1994


              When the TP name consists entirely of displayable EBCDIC
              codepoints, it is mapped directly to the equivalent ASCII
              display string.  However, registered TP names always have
              a non-displayable EBCDIC codepoint (value less than or
              equal to x'3F') as the first character, so they cannot be
              directly mapped to an ASCII display string.  These TP
              names are converted to a display string that is equivalent
              to a hexadecimal display of the EBCDIC codepoints.  For
              example, the 2-byte TP name x'06F1' (CNOS) is converted to
              the 4-byte ASCII display string '06F1'."

      ::= { appcCpicOperEntry 8 }

appcCpicOperUserid      OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..10))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The security userid, if any, associated with the active side
           information definition."

      ::= { appcCpicOperEntry 9 }

appcCpicOperSecurity OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     same(2),
                     pgm(3)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the security information to be used for allocating
          the conversation.

                none    -       No security information.
                same    -       Use the security environment currently
                                associated with this TP.
                pgm     -       Use program specified user_id and password."

      ::= { appcCpicOperEntry 10 }


- -- ***************************************************************
- -- Conformance information





Expires February 1995                                         [Page 107]




Internet Draft                  APPC MIB                    Aug 12, 1994


- -- ***************************************************************

appcConformance       OBJECT IDENTIFIER ::= {appcMIB 2 }

appcCompliances       OBJECT IDENTIFIER ::= {appcConformance 1 }
appcGroups            OBJECT IDENTIFIER ::= {appcConformance 2 }

- -- Compliance statements
appcCompliance  MODULE-COMPLIANCE
        STATUS  current
        DESCRIPTION
                "The compliance statement for the SNMPv2 entities
                which implement the APPC MIB."
        MODULE  -- this module

- --      Unconditionally mandatory groups
                MANDATORY-GROUPS  {
                        appcDefaultGroup,
                        appcLluGroup,
                        appcParLuGroup,
                        appcTpGroup,
                        appcSessionGroup,
                        appcConversationGroup
                 }

- --      Conditionally mandatory groups
                GROUP  appcStatControlGroup
                DESCRIPTION
                        "The appcStatControlGroup is mandatory only for those
                        entities which implement activation and deactivation
                        of statistics collecting and counting."

                GROUP  appcCNOSGroup
                DESCRIPTION
                        "The appcCNOSGroup is mandatory only for
                        those entities which implement CNOS. "

                GROUP  appcCpicGroup
                DESCRIPTION
                        "The appcCpicGroup is mandatory only for
                        those entities which implement CPI-C. "

- --      Refinement of requirements for objects access.
- --      The Agent which does not implement row creation for
- --      appcDefaultTable, appcParLuAdminTable, appcModeAdminTable,





Expires February 1995                                         [Page 108]




Internet Draft                  APPC MIB                    Aug 12, 1994


- --      appcTpAdminTable, and appcCpicAdminTable must at least accept
- --      objects modification (read-write access instead of read-create).

- --      appcDefaultTable
                OBJECT  appcDefaultModeName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT appcDefaultLuName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcDefaultImplInbndPlu
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcDefaultMaxMcLlSndSize
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcDefaultFileSpec
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT appcDefaultTpOperation
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT appcDefaultTpConvSecRqd
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."





Expires February 1995                                         [Page 109]




Internet Draft                  APPC MIB                    Aug 12, 1994


- --      appcLluAdminTable
                OBJECT  appcLluAdminSessLimit
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcLluAdminBindRspMayQ
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcLluAdminCompression
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT appcLluAdminInBoundCompLevel
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT appcLluAdminOutBoundCompLevel
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT appcLluAdminCompRleBeforeLZ
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

- --      appcParLuAdminTable
                OBJECT  appcParLuAdminLocLuName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcParLuAdminParLuName





Expires February 1995                                         [Page 110]




Internet Draft                  APPC MIB                    Aug 12, 1994


                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcParLuAdminAlias
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcParLuAdminDefParaSessSup
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcParLuAdminDefSessSec
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcParLuAdminDefAlVerSup
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcParLuAdminLinkObjId
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

- --      appcModeAdminTable

                OBJECT  appcModeAdminModeName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminLocLuName
                MIN-ACCESS  read-write





Expires February 1995                                         [Page 111]




Internet Draft                  APPC MIB                    Aug 12, 1994


                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminParLuName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminCosName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminSessEndTpName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminMaxSessLimit
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminConWinAutoActLimit
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminMinCwinLimit
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminMinClosLimit
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."





Expires February 1995                                         [Page 112]




Internet Draft                  APPC MIB                    Aug 12, 1994


                OBJECT  appcModeAdminRecvPacWinSz
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminSendPacWinSz
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminPrefRecvRuSz
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminPrefSendRuSz
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminRecvRuSzUpBnd
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminSendRuSzUpBnd
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminRecvRuSzLoBnd
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminSendRuSzLoBnd
                MIN-ACCESS  read-write
                DESCRIPTION





Expires February 1995                                         [Page 113]




Internet Draft                  APPC MIB                    Aug 12, 1994


                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminSyncLvl
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminCrypto
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminSingSessReinit
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminAltCode
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminCompression
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminInBoundCompLevel
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminOutBoundCompLevel
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."





Expires February 1995                                         [Page 114]




Internet Draft                  APPC MIB                    Aug 12, 1994


                OBJECT  appcModeAdminCompRleBeforeLZ
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

- --      appcTpAdminTable
                OBJECT  appcTpAdminLocLuName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminTpName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminFileSpec
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminStartParm
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminTpOperation
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminQdepthLimit
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminInAttachTimeout
                MIN-ACCESS  read-write





Expires February 1995                                         [Page 115]




Internet Draft                  APPC MIB                    Aug 12, 1994


                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminRcvAllocTimeout
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminSyncLvl
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminInstLmt
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminStatus
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminLongRun
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminConvType
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminConvDuplex
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."





Expires February 1995                                         [Page 116]




Internet Draft                  APPC MIB                    Aug 12, 1994


                OBJECT  appcTpAdminConvSecReq
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminVerPip
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminPipSubNum
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

- --      appcCpicAdminTable
                OBJECT  appcCpicAdminLocLuName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcCpicAdminSymbDestName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcCpicAdminParLuAlias
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcCpicAdminParLuName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcCpicAdminModeName
                MIN-ACCESS  read-write





Expires February 1995                                         [Page 117]




Internet Draft                  APPC MIB                    Aug 12, 1994


                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcCpicAdminTpNameType
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcCpicAdminTpName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcCpicAdminUserId
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcCpicAdminSecurity
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

        ::= {appcCompliances 1 }

- -- Units of conformance
appcStatControlGroup  OBJECT-GROUP
        OBJECTS  {
                appcStatCntrlStatus,
                appcStatCntrlStatusTime,
                appcStatCntrlRscv,
                appcStatCntrlRscvTime
                }
        STATUS current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC statistic collection and counting"
        ::= { appcGroups 1 }

appcDefaultGroup  OBJECT-GROUP





Expires February 1995                                         [Page 118]




Internet Draft                  APPC MIB                    Aug 12, 1994


        OBJECTS  {
                appcDefaultModeName,
                appcDefaultLuName,
                appcDefaultImplInbndPlu,
                appcDefaultMaxMcLlSndSize,
                appcDefaultFileSpec,
                appcDefaultTpOperation,
                appcDefaultTpConvSecRqd
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC Defaults."
        ::= { appcGroups 2 }

appcLluGroup  OBJECT-GROUP
        OBJECTS  {
                appcLluAdminSessLimit,
                appcLluAdminBindRspMayQ,
                appcLluAdminCompression,
                appcLluAdminInBoundCompLevel,
                appcLluAdminOutBoundCompLevel,
                appcLluAdminCompRleBeforeLZ,
                appcLluOperSessLimit,
                appcLluOperBindRspMayQ,
                appcLluOperCompression,
                appcLluOperInBoundCompLevel,
                appcLluOperOutBoundCompLevel,
                appcLluOperCompRleBeforeLZ
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC local LU6.2s."
        ::= { appcGroups 3 }

appcParLuGroup  OBJECT-GROUP
        OBJECTS  {
                appcParLuAdminLocLuName,
                appcParLuAdminParLuName,
                appcParLuAdminAlias,
                appcParLuAdminParaSessSup,
                appcParLuAdminSessSec,
                appcParLuAdminSecAccept,
                appcParLuAdminLinkObjId,





Expires February 1995                                         [Page 119]




Internet Draft                  APPC MIB                    Aug 12, 1994


                appcParLuAdminRowStatus,
                appcParLuOperLocLuName,
                appcParLuOperParLuName,
                appcParLuOperParLuAlias,
                appcParLuOperState,
                appcParLuOperParaSessSup,
                appcParLuOperSessSec,
                appcParLuOperSecAccept,
                appcParLuOperLinkObjId
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC partner LUs."
        ::= { appcGroups 4 }

appcModeGroup  OBJECT-GROUP
        OBJECTS  {
               appcModeAdminModeName,
               appcModeAdminLocLuName,
               appcModeAdminParLuName,
               appcModeAdminCosName,
               appcModeAdminSessEndTpName,
               appcModeAdminMaxSessLimit,
               appcModeAdminConWinAutoActLimit,
               appcModeAdminMinCwinLimit,
               appcModeAdminMinClosLimit,
               appcModeAdminRecvPacWinSz,
               appcModeAdminSendPacWinSz,
               appcModeAdminPrefRecvRuSz,
               appcModeAdminPrefSendRuSz,
               appcModeAdminRecvRuSzUpBnd,
               appcModeAdminSendRuSzUpBnd,
               appcModeAdminRecvRuSzLoBnd,
               appcModeAdminSendRuSzLoBnd,
               appcModeAdminSyncLvl,
               appcModeAdminCrypto,
               appcModeAdminSingSessReinit,
               appcModeAdminAltCode,
               appcModeAdminCompression,
               appcModeAdminInBoundCompLevel,
               appcModeAdminOutBoundCompLevel,
               appcModeAdminCompRleBeforeLZ,
               appcModeAdminRowStatus,
               appcModeOperLluName,





Expires February 1995                                         [Page 120]




Internet Draft                  APPC MIB                    Aug 12, 1994


               appcModeOperRluName,
               appcModeOperModeName,
               appcModeOperCosName,
               appcModeOperSessEndTpName,
               appcModeOperSessLimit,
               appcModeOperMaxSessLimit,
               appcModeOperConWinAutoActLimit,
               appcModeOperDrainSelf,
               appcModeOperDrainPart,
               appcModeOperMinCwinLimit,
               appcModeOperMinClosLimit,
               appcModeOperRecvPacWinSz,
               appcModeOperSendPacWinSz,
               appcModeOperPrefRecvRuSz,
               appcModeOperPrefSendRuSz,
               appcModeOperRecvRuSzUpBnd,
               appcModeOperSendRuSzUpBnd,
               appcModeOperRecvRuSzLoBnd,
               appcModeOperSendRuSzLoBnd,
               appcModeOperSyncLvl,
               appcModeOperCrypto,
               appcModeOperSingSessReinit,
               appcModeOperAltCode,
               appcModeOperCNOSNeg,
               appcModeOperActSess,
               appcModeOperPndSess,
               appcModeOperActCwin,
               appcModeOperActClos,
               appcModeOperPndCwin,
               appcModeOperPndClos,
               appcModeOperPtmCwin,
               appcModeOperPtmClos,
               appcModeOperFreeSessCount,
               appcModeOperWaitReqCount,
               appcModeOperCompression,
               appcModeOperInBoundCompLevel,
               appcModeOperOutBoundCompLevel,
               appcModeOperCompRleBeforeLZ
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC modes."
        ::= { appcGroups 5 }





Expires February 1995                                         [Page 121]




Internet Draft                  APPC MIB                    Aug 12, 1994


appcCNOSGroup  OBJECT-GROUP
        OBJECTS  {
                appcCNOSCmd,
                appcCNOSMaxSessLimit,
                appcCNOSDrainSelf,
                appcCNOSDrainPart,
                appcCNOSMinCwinLimit,
                appcCNOSMinClosLimit,
                appcCNOSResponsible,
                appcCNOSForce
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC CNOS processing."
        ::= { appcGroups 6 }

appcTpGroup  OBJECT-GROUP
        OBJECTS  {
                appcTpAdminLocLuName,
                appcTpAdminTpName,
                appcTpAdminFileSpec,
                appcTpAdminStartParm,
                appcTpAdminTpOperation,
                appcTpAdminQdepthLimit,
                appcTpAdminInAttachTimeout,
                appcTpAdminRcvAllocTimeout,
                appcTpAdminSyncLvl,
                appcTpAdminInstLmt,
                appcTpAdminStatus,
                appcTpAdminLongRun,
                appcTpAdminConvType,
                appcTpAdminConvDuplex,
                appcTpAdminConvSecReq,
                appcTpAdminVerPip,
                appcTpAdminPipSubNum,
                appcTpAdminRowStatus
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC Transaction Programs."
        ::= { appcGroups 7 }

appcSessionGroup  OBJECT-GROUP





Expires February 1995                                         [Page 122]




Internet Draft                  APPC MIB                    Aug 12, 1994


        OBJECTS  {
                appcSessnPcidCpName,
                appcSessnPcid,
                appcSessnPluIndicator,
                appcSessnLluName,
                appcSessnModeName,
                appcSessnCosName,
                appcSessnTransPriority,
                appcSessnEnhanceSecSup,
                appcSessnSendPacingType,
                appcSessnSendRpc,
                appcSessnSendNxWndwSize,
                appcSessnRecvPacingType,
                appcSessnRecvRpc,
                appcSessnRecvNxWndwSize,
                appcSessnUpTime,
                appcSessnCtrUpTime,
                appcSessnP2SFmdPius,
                appcSessnS2PFmdPius,
                appcSessnP2SNonFmdPius,
                appcSessnS2PNonFmdPius,
                appcSessnP2SFmdBytes,
                appcSessnS2PFmdBytes,
                appcSessnP2SNonFmdBytes,
                appcSessnS2PNonFmdBytes,
                appcSessnRscv
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC LU6.2 sessions."
        ::= { appcGroups 8 }

appcConversationGroup  OBJECT-GROUP
        OBJECTS  {
                appcConvId,
                appcConvState,
                appcConvType,
                appcConvCorrelator,
                appcConvSyncLvl,
                appcConvSource,
                appcConvDuplex,
                appcConvStartTime,
                appcConvStopTime,
                appcConvSendBytes,





Expires February 1995                                         [Page 123]




Internet Draft                  APPC MIB                    Aug 12, 1994


                appcConvRcvBytes,
                appcConvUserid,
                appcConvPcidNauName,
                appcConvPcid,
                appcConvModeName,
                appcConvLuwIdName,
                appcConvLuwIdInstance,
                appcConvLuwIdSequence,
                appcConvTpName,
                appcConvSessnIndex
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC conversations."
        ::= { appcGroups  9 }

appcCpicGroup  OBJECT-GROUP
        OBJECTS  {
                appcCpicAdminLocLuName,
                appcCpicAdminSymbDestName,
                appcCpicAdminParLuAlias,
                appcCpicAdminParLuName,
                appcCpicAdminModeName,
                appcCpicAdminTpNameType,
                appcCpicAdminTpName,
                appcCpicAdminRowStatus,
                appcCpicAdminUserid,
                appcCpicAdminSecurity,
                appcCpicOperLocLuName,
                appcCpicOperSymbDestName,
                appcCpicOperParLuAlias,
                appcCpicOperParLuName,
                appcCpicOperModeName,
                appcCpicOperTpNameType,
                appcCpicOperTpName,
                appcCpicOperUserid,
                appcCpicOperSecurity
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC CPI-C side information."
        ::= { appcGroups 10 }





Expires February 1995                                         [Page 124]




Internet Draft                  APPC MIB                    Aug 12, 1994


- -- end of conformance statement

END














































Expires February 1995                                         [Page 125]




Internet Draft                  APPC MIB                    Aug 12, 1994


5.  Acknowledgments

This MIB module is the product of the SNA NAU MIB Working Group. Special
thanks to Rich Daugherty of IBM for his expert review.

6.  References


[1]  IBM, Systems Network Architecture Technical Overview, GC30-3073-3,
     March, 1991.

[2]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Structure
     of Management Information for version 2 of the Simple Network
     Management Protocol (SNMPv2)", RFC 1442, SNMP Research, Inc.,
     Hughes LAN Systems, Dover Beach Consulting, Inc., Carnegie Mellon
     University, April 1993.

[3]  McCloghrie, K., and M. Rose, "Management Information Base for
     Network Management of TCP/IP-based internets - MIB-II", STD 17, RFC
     1213, Hughes LAN Systems, Performance Systems International, March
     1991.

[4]  Galvin, J., and K. McCloghrie, "Administrative Model for version 2
     of the Simple Network Management Protocol (SNMPv2)", RFC 1445,
     Trusted Information Systems, Hughes LAN Systems, April 1993.

[5]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Protocol
     Operations for version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1448, SNMP Research, Inc., Hughes LAN Systems, Dover
     Beach Consulting, Inc., Carnegie Mellon University, April 1993.

[6]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Textual
     Conventions for version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1443, SNMP Research, Inc., Hughes LAN Systems, Dover
     Beach Consulting, Inc., Carnegie Mellon University, April 1993.

[7]  Kielczewski, Z., Kostick, D., and K. Shih, "Definitions of Managed
     Objects for SNA NAUs", RFC 1665, Eicon Technology Corporation,
     Bellcore, Novell, Inc., May 1994.

[8]  IBM, Systems Network Architecture Transaction Programmer's
     Reference for LU Type 6.2, GC30-3084-05, June, 1993.

[9]  IBM, Common Programming Interface Communications Specification 2.0,
     SC31-6180-01, June, 1994.





Expires February 1995                                         [Page 126]




Internet Draft                  APPC MIB                    Aug 12, 1994


7.  Security Considerations

Security issues are not discussed in this memo.


8.  Authors' Addresses

     Michael Allen
     Networking Systems
     IBM Corporation
     Research Triangle Park, NC 27709

     Tel:    1 919 254 4442
     E-mail: moallen@vnet.ibm.com


     Zbigniew Kielczewski
     Eicon Technology Corporation
     2196 32nd Avenue
     Montreal, Quebec, Canada H8T 3H7

     Tel:    1 514 631 2592
     E-mail: zbig@eicon.qc.ca


     William Kwan
     CrossComm Corporation
     450 Donald Lynch Blvd.
     Marlboro, MA 01752

     Tel:    1 508 229 5429
     E-mail: kwan@crosscomm.com

















Expires February 1995                                         [Page 127]




Internet Draft                  APPC MIB                    Aug 12, 1994


9.  Table of Contents


1 Introduction ....................................................    2
2 The SNMPv2 Network Management Framework .........................    2
2.1 Object Definitions ............................................    2
3 Overview ........................................................    4
3.1 Applying MIB II to managing APPC devices ......................    5
3.2 APPC MIB Structure ............................................    6
3.2.1 appcGlobal group ............................................    7
3.2.2 appcLu group ................................................    7
3.2.3 appcTp group ................................................   11
3.2.4 appcSession group ...........................................   11
3.2.5 appcConversation group ......................................   12
3.2.6 appcCPIC group ..............................................   12
3.2.7 Conformance statement .......................................   13
3.3 APPC MIB special feature ......................................   14
3.3.1 Row Creation mechanism ......................................   14
4 Object Definitions ..............................................   15
5 Acknowledgments .................................................  126
6 References ......................................................  126
7 Security Considerations .........................................  127
8 Authors' Addresses ..............................................  127
9 Table of Contents ...............................................  128

























Expires February 1995                                         [Page 128]



