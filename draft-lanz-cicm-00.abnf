sCode = channelManager.negotiate_encrypt_controller(localPort,
          remotePort, protocol, key, &negotiator);

   The above call results in the initiation of a key agreement protocol
   negotiation with its remote peer.  To ensure that it is the expected





   peer, a human user at the client may validate information extracted
   from the peer's certificate.  If the module uses a trusted display,
   it directly communicates the peer information to the display.  Based
   upon user input at the display, host-independent negotiation is
   continued or aborted.  If no trusted display is available, the client
   program requests information about the remote peer, displays it at
   the host for user confirmation, and provides positive confirmation
   via the API that the peer is valid, allowing the negotiation to
   continue.

   The following example shows the display interactions required to
   retrieve a negotiated controller:
   // Retrieve peer information:
   CICM::PeerInfo peerInfo;
   negotiator.get_remote_info(&peerInfo);

   // Assume the user positively confirms that the peer is valid.

   // Complete the negotiation.
   CICM::Encrypt::NegotiatedController negotiatedController;
sCode = negotiator.complete(&negotiatedController);

sCode = channelManager.create_encrypt_with_sign_conduit(remotePort,
sCode = conduit.encrypt(data_first);
sCode = conduit.encrypt(data_second);

sCode = conduit.end_get_signature(&signature);

C_LEVEL_UNCLASSIFIED = 0x0000602F;
C_LEVEL_CONFIDENTIAL = 0x00006029;
C_LEVEL_SECRET = 0x0000602A;
C_LEVEL_TOP_SECRET = 0x0000602C;
IMPLICIT_ASYM_ENCR_ALGO = "IMPLICIT";
IMPLICIT_ASYM_SIG_ALGO = "IMPLICIT";
IMPLICIT_KEY_WRAP_ALGO = "IMPLICIT";
IMPLICIT_SYM_ENCR_ALGO = "IMPLICIT";
IMPLICIT_SYM_MAC_ALGO = "IMPLICIT";
IMPLICIT_PROTOCOL_ID = "IMPLICIT";
IMPLICIT_REMOTE_PORT = 0xFFFFFF99;
IMPLICIT_LOCAL_PORT = 0xFFFFFFBB;
FILL_INTERFACE_PORT = 0xFFFFFFEE;
C_ITERATOR_HAS_NEXT = 0x00006031;
C_ITERATOR_NO_MORE = 0x00006032;
tokenManager = device._get_token_manager();

sCode = tokenManager.associate();

sCode = tokenManager.disassociate_missing_token(tokenId);

userManager = device._get_user_manager();

sCode = userManager.add(userId, password);

sCode = userManager.associate(userId, roleId);

sCode = userManager.remove(userId);

loginManager = device._get_login_manager();
sCode = loginManager.add(userId, password, &loginRef);
sCode = loginRef.logout();













packageManager = device._get_package_manager();

sCode = packageManager.import_package(
         CICM::Package::C_PACKAGE_FPGA_IMAGE, &packageImporter);

sCode = packageImporter.import_segment(fpgaData);

sCode = packageImporter.complete(&fpgaPackage);
sCode = fpgaPackage.activate();







C_PACKAGE_ALGORITHM = 0x00006054;
C_PACKAGE_CONFIG_PARAMS = 0x00006057;
C_PACKAGE_FPGA_IMAGE = 0x00006058;
C_PACKAGE_POLICY_DB = 0x0000605B;
C_PACKAGE_SOFTWARE = 0x0000605D;
logManager = device._get_log_manager();

iter = logManager._get_log_entry_iterator();
sCode = iter.hasNext(&status);

sCode = iter.get_next(&entry);
                   // Perform an operation on [entry].
sCode = iter.hasNext(&status);
sCode = logManager.destroy();








C_TEST_SUCCESS = 0x00006062;
C_TEST_FAILURE = 0x00006064;
C_MODULE_ACCESS_TOKEN_INSERTED = 0x00002001;
C_MODULE_ACCESS_TOKEN_REMOVED = 0x00002002;
C_MODULE_ALARM = 0x00002004;
C_MODULE_FAILURE = 0x00002007;
C_MODULE_INSUFFICIENT_ENTROPY = 0x00002008;
C_MODULE_KEY_EXPIRED_HARD =     0x0000200B;
C_MODULE_KEY_EXPIRED_SOFT = 0x0000200D;
C_MODULE_KEY_FILL_COMPLETE = 0x0000200E;
C_MODULE_KEY_FILL_CONNECTED = 0x00002010;
C_MODULE_KEY_FILL_INITIATED = 0x00002013;
C_MODULE_KEY_MEMORY = 0x00002015;
C_MODULE_KEY_PROTO_MESSAGE = 0x00002016;
C_MODULE_LOG_FULL = 0x00002019;
C_MODULE_LOG_NEAR_FULL = 0x0000201A;
C_MODULE_LOGIN_FAILURE = 0x0000201C;
C_MODULE_NOT_READY_FOR_TRAFFIC = 0x0000201F;
C_MODULE_POWER_MGMT_ENTER = 0x00002020;
C_MODULE_POWER_MGMT_EXIT = 0x00002023;
C_MODULE_POWER_OFF = 0x00002025;
C_MODULE_POWER_OFF_FAILURE = 0x00002026;
C_MODULE_POWER_ON = 0x00002029;
C_MODULE_READY_FOR_TRAFFIC = 0x0000202A;
C_MODULE_REKEY_REQUEST = 0x0000202C;
C_MODULE_TEST_FAILURE = 0x0000202F;
C_MODULE_ZEROIZED = 0x00002031;
C_KEY_INVALID = 0x00006010;
C_KEY_VALID_WRAPPED = 0x00006013;
C_KEY_VALID_UNWRAPPED = 0x00006015;
C_KEY_USAGE_ALLOWED = 0x00006016;
C_KEY_USAGE_FORBIDDEN = 0x00006019;
C_USAGE_ASYM_DATA_ENCIPHERMENT = 0x00006001;
C_USAGE_ASYM_KEY_ENCIPHERMENT = 0x00006002;
C_USAGE_CERT_SIGN = 0x00006004;
C_USAGE_CRL_SIGN = 0x00006007;
C_USAGE_DIGITAL_SIGNATURE = 0x00006008;
C_USAGE_INFRA_KEY_AGREEMENT = 0x0000600B;
C_USAGE_P2P_KEY_AGREEMENT = 0x0000600D;
C_USAGE_SEED = 0x0000600E;
C_USAGE_GENERATE_KEYSTREAM = 0x0000601A;
C_USAGE_KEY_PRODUCTION_KEY = 0x0000601C;
C_USAGE_MESSAGE_AUTHENTICATION_CODE = 0x0000601F;
C_USAGE_SYM_DATA_ENCIPHERMENT = 0x00006020;
C_USAGE_SYM_KEY_ENCIPHERMENT = 0x00006023;
C_PROTOCOL_SEND_OKAY = 0x00006045;
C_PROTOCOL_SEND_DONE = 0x00006046;
C_PROTOCOL_SEND_ERROR = 0x00006049;
C_PROTOCOL_SEND_DISPLAY = 0x0000604A;
C_PROTOCOL_SEND_ABORTED = 0x0000604C;
C_PROTOCOL_SEND_MESSAGE_INVALID = 0x0000604F;
C_PROTOCOL_SEND_MESSAGE_INTEGRITY = 0x00006051;
C_PROTOCOL_SEND_PROTOCOL_VIOLATION = 0x00006052;
C_PROTOCOL_RECEIVE_OKAY = 0x00006034;
C_PROTOCOL_RECEIVE_DONE = 0x00006037;
C_PROTOCOL_RECEIVE_BUSY = 0x00006038;
C_PROTOCOL_RECEIVE_ERROR = 0x0000603B;
C_PROTOCOL_RECEIVE_ABORTED = 0x0000603D;
C_PROTOCOL_RECEIVE_MESSAGE_INVALID = 0x0000603E;
C_PROTOCOL_RECEIVE_MESSAGE_INTEGRITY = 0x00006040;
C_PROTOCOL_RECEIVE_VIOLATION = 0x00006043;
C_DATA_VERIFIED = 0x00006025;
C_DATA_NOT_VERIFIED = 0x00006026;
C_WRITE_NOT_READY = 0x00006067;
C_WRITE_READY = 0x00006068;
C_READ_NOT_READY = 0x0000605E;
C_READ_READY = 0x00006061;
C_CHANNEL_DATA_AVAILABLE = 0x00004001;
C_CHANNEL_ERROR = 0x00004002;
C_CHANNEL_INSUFFICIENT_ENTROPY = 0x00004004;
C_CHANNEL_LOST_SYNC = 0x00004007;
C_CHANNEL_PEER_RESET = 0x00004008;
S_OK = 0x00000000

      No error.

S_GENERAL_ERROR = 0x00000003

      Unrecoverable error occurred, potentially leaving module in an
      inconsistent state.

S_NON_FUNCTIONAL = 0x00000005

      Tamper event or other condition has rendered module non-
      functional.

S_OPERATION_FAILED = 0x00000006

      Method encountered a general failure, but detailed information
      about the failure is not available.

S_POLICY_VIOLATION = 0x00000009







      Module policy does not permit the requested action.

S_MODULE_RESOURCES = 0x0000000A

      Module resources necessary to perform the requested operation are
      not available.

S_HOST_RESOURCES = 0x0000000C

      Host resources necessary to perform the requested operation are
      not available.

S_INVALID_STATE = 0x0000000F

      Module is in a state that does not allow this operation to be
      performed.

S_ALARM_STATE = 0x00000011

      Module has entered an alarm state.

S_MODULE_NOT_AVAILABLE = 0x00000012

      Module has been powered down, disconnected, or is otherwise
      unavailable..

S_TIMEOUT = 0x00000014

      Time to receive response from call exceeded threshold.

S_NOT_AUTHENTICATED = 0x00000017

      User has not authenticated to module.

S_NOT_AUTHORIZED = 0x00000018

      User is not authorized to call method.

S_MODULE_DOES_NOT_EXIST = 0x0000001B

      No module with the specified unique identifier exists.

S_MODULE_IN_USE = 0x0000001D

      Module test initiated when channels or other module resources are
      in use.

S_NOT_AVAILABLE = 0x0000001E





      Information is not available or cannot be found.

S_INVALID_VECTOR = 0x00000021

      Invalid vector provided; this may be because the length or format
      of the vector is inappropriate for the algorithm or system with
      which the vector is being used.

S_INVALID_DATA_BUFFER = 0x00000022

      Data in user-specified buffer parameter is invalid.

S_KEY_USED_INVALID = 0x00000024

      Key specified as parameter to method is invalid; this could denote
      that the key has been zeroized, a failed parity check, or other
      conditions that prevent the use of the key.

S_KEY_USED_EXPIRED = 0x00000027

      Key specified as parameter to method has expired and may not be
      used.

S_KEY_USED_CLASSIFICATION = 0x00000028

      Key specified as parameter to method at wrong classification
      level.

S_KEY_USED_WRAPPED = 0x0000002B

      Key specified as parameter to method may not be used in the
      context until it has been unwrapped.

S_KEY_USED_CONTEXT = 0x0000002D

      Attempt to use key in an illegal context as defined by the module;
      e.g., a key is specified for use on a channel but, due to module
      architecture, the key is unavailable to that channel.

S_KEY_USED_COMPONENT_NOT_AVAIL = 0x0000002E

      Asymmetric key specified as parameter to method contains only a
      public key (possibly in a certificate) or only a private key, when
      the other component is needed by the called method.

S_KEY_INVALID = 0x00000030







      Key is invalid; this could denote that the key has been zeroized,
      a failed parity check, or other conditions that prevent the use of
      the key.

S_KEY_EXPIRED = 0x00000033

      Key has expired and may not be used.

S_KEY_INCOMPATIBLE = 0x00000035

      Key type (e.g., TEK, KEK) incompatible with intended usage.

S_KEY_CLASSIFICATION = 0x00000036

      Key at wrong classification level.

S_KEY_WRAPPED = 0x00000039

      Key may not be used in this context until it has been unwrapped.

S_KEY_NOT_WRAPPED = 0x0000003A

      Key is not wrapped.

S_KEY_NOT_WRAPPABLE = 0x0000003C

      Module is not able to wrap key.

S_KEY_NOT_EXPORTABLE = 0x0000003F

      Key is not exportable, potentially because it has not been wrapped
      or other policy disallows it.

S_KEY_WRAPPED_EXISTS = 0x00000041

      Wrapped key already exists.

S_KEY_UNWRAPPED_EXISTS = 0x00000042

      Unwrapped key already exists.

S_KEY_UPDATE_MAX = 0x00000044

      Maximum number of updates for this key has been exceeded.

S_KEY_INVALID_ID = 0x00000047







      Invalid key identifier specified.

S_KEY_PHYSICAL_LOC = 0x00000048

      Invalid key physical location specified.

S_KEY_ILLEGAL_CONVERSION = 0x0000004B

      Target algorithm is incompatible with algorithm associated with
      specified key.

S_KEY_MALFORMED = 0x0000004D

      Key material supplied is malformed.

S_KEY_METADATA_MALFORMED = 0x0000004E

      Key metadata supplied is malformed.

S_KEY_NO_NEXT = 0x00000050

      No next key available for rollover.

S_KEY_WRONG_TYPE = 0x00000053

      Illegal attempt to process a symmetric key with an asymmetric
      method or an asymmetric key with a symmetric method.

S_KEY_FILL_DEVICE_NOT_CONNECTED = 0x00000055

      Key fill device not connected.

S_KEY_FILL_NOT_INITIATED = 0x00000056

      Manual key fill device interaction not initiated within system-
      defined time limit.

S_KEY_TRUST_ANCHOR = 0x00000059

      Trust anchor required but is unavailable.

S_LOCAL_PORT_INVALID = 0x0000005A

      Local port specified is invalid.

S_LOCAL_PORT_INCOMPATIBLE = 0x0000005C







      Local port specified cannot be used in intended manner.

S_LOCAL_PORT_IN_USE = 0x0000005F

      Local port specified is currently in use.

S_REMOTE_PORT_INVALID = 0x00000060

      Remote port specified is invalid.

S_REMOTE_PORT_IN_USE = 0x00000063

      Remote port specified is currently in use.

S_ALGO_INVALID = 0x00000065

      Malformed string or unsupported/invalid algorithm specified.

S_ALGO_INCOMPATIBLE = 0x00000066

      Algorithm incompatible with intended usage (e.g., encryption,
      signature, hashing).

S_TOKEN_NOT_PRESENT = 0x00000069

      Token must be inserted to perform the requested operation and no
      token is available to the module.

S_TOKEN_ADMIN_NOT_PRESENT = 0x0000006A

      Administrator token must be inserted to perform the requested
      operation and either no token is present or the inserted token is
      not an administrator token.

S_TOKEN_ACCESS = 0x0000006C

      Token I/O error.

S_TOKEN_RESOURCES = 0x0000006F

      Token resources necessary to perform the requested operation are
      not available.

S_TOKEN_ASSOC_EXISTS = 0x00000071

      Association between module and token already exists.

S_TOKEN_ASSOC_AT_MODULE = 0x00000072





      Association failed because module will allow no new associations.

S_TOKEN_ASSOC_AT_TOKEN = 0x00000074

      Association failed because token will allow no new associations.

S_TOKEN_ASSOC_NOT_EXIST = 0x00000077

      Association between module and token does not exist at the module,
      at the token, or both.

S_TOKEN_ASSOC_GENERAL = 0x00000078

      Unspecified token association error occurred.

S_TOKEN_DISASSOC_GENERAL = 0x0000007B

      Unspecified token disassociation error occurred.

S_TOKEN_REC_NOT_FOUND = 0x0000007D

      Specified record not found.

S_TOKEN_TIMEOUT = 0x0000007E

      Timeout for insertion of token has been exceeded.

S_TOKEN_LAST_ASSOCIATED = 0x00000081

      Cannot disassociate the last associated token from this module.

S_PACKAGE_NOT_ACTIVATABLE = 0x00000082

      Specified package is not executable.

S_PACKAGE_ACTIVATED = 0x00000084

      Specified package is currently running.

S_PACKAGE_NOT_ACTIVE = 0x00000087

      Specified package is not currently running.

S_PACKAGE_INVALID = 0x00000088

      Specified package is invalid.

S_PACKAGE_TYPE_INVALID = 0x0000008B





      Specified package type is invalid.

S_PACKAGE_KEY_NOT_AVAILABLE = 0x0000008D

      Package is encrypted and the key specified for use to decrypt
      package is not available on the module.

S_PACKAGE_KEY_NOT_SPECIFIED = 0x0000008E

      Package is encrypted but no key is specified to decrypt it.

S_LOG_ENTRY_INVALID = 0x00000090

      Log entry is invalid.

S_EVENT_REGISTERED = 0x00000093

      An event has already been registered by this process for this
      event type.

S_EVENT_NOT_REGISTERED = 0x00000095

      An event has not been registered by this process for this event
      type.

S_EVENT_NOT_SUPPORTED = 0x00000096

      Event is not supported in this implementation.

S_TRUSTED_DISPLAY = 0x00000099

      Peer information is available at trusted display.

S_NEGOTIATION_ABORTED = 0x0000009A

      Negotiation was aborted.

S_NEGOTIATION_FAILURE = 0x0000009C

      Negotiation failed.

S_NEGOTIATION_IN_PROGRESS = 0x0000009F

      Negotiation is already in progress.

S_NEGOTIATION_NOT_IN_PROGRESS = 0x000000A0







      No negotiation has been initiated.

S_NEGOTIATION_TIMEOUT = 0x000000A3

      Negotiation timed out.

S_CERT_LOCAL_INVALID = 0x000000A5

      Local certificate used in a key negotiation is invalid; the
      certificate may be corrupted or does not verify.

S_CERT_LOCAL_EXPIRED = 0x000000A6

      Local certificate used in a key negotiation has expired.

S_CERT_REMOTE_INVALID = 0x000000A9

      Remote certificate used in a key negotiation is invalid; the
      certificate may be corrupted or does not verify.

S_CERT_REMOTE_EXPIRED = 0x000000AA

      Remote certificate used in a key negotiation has expired.

S_CERT_REMOTE_PATH = 0x000000AC

      Certificates to enable verification of remote certificate's
      certification path are not available.

S_PROTO_INVALID = 0x000000AF

      Malformed string or unsupported/invalid protocol specified.

S_PROTO_INCOMPATIBLE = 0x000000B1

      Protocol specified is incompatible with intended usage.

S_PROTO_UNDETERMINED = 0x000000B2

      An "implicit" protocol has been specified, but the protocol
      message does not indicate the protocol.

S_CHANNEL_ERROR = 0x000000B4

      Generic conduit/controller error encountered.

S_CHANNEL_PEER_RESET = 0x000000B7






      Peer crypto reset conduit/controller or conduit/controller ceased
      operation.

S_CHANNEL_MAX = 0x000000B8

      Limit on total number of conduits/controllers has been reached.

S_CHANNEL_NOT_FOUND = 0x000000BB

      Conduit/controller not found.

S_CHANNEL_IO_ERROR = 0x000000BD

      Conduit/controller I/O error.

S_CHANNEL_DATA_INVALID = 0x000000BE

      Input data to cryptographic operation is invalid (e.g., plaintext
      for encryption or ciphertext for decryption).

S_CHANNEL_DATA_INVALID_LEN = 0x000000C0

      Plaintext (for encryption) or ciphertext (for decryption) input
      data to cryptographic operation has an inappropriate length; this
      could denote that the data is too short, too long, or is not a
      multiple of some particular block size.

S_CHANNEL_BUFFER_LEN = 0x000000C3

      Output of function is too large for supplied buffer.

S_CHANNEL_IN_GROUP = 0x000000C5

      Conduit/controller already exists as part of group.

S_CHANNEL_CLASSIFICATION = 0x000000C6

      Conduits/controllers are not of the same classification.

S_BYPASS_DATARATE_EXCEEDED = 0x000000C9

      Bypass data rate exceeded.

S_BYPASS_DATALIMIT_EXCEEDED = 0x000000CA

      Bypass data limit exceeded.

S_INTEGRITY = 0x000000CC





      In those cases where an encryption algorithm supplies both
      confidentiality and integrity (an integrity value is transmitted
      with the ciphertext), the final decrypt may fail with this
      integrity error if the integrity check fails.

S_AUTHENTICATION_FAILED = 0x000000CF

      Authentication to the module failed; this could denote that a
      password is incorrect or that additional authentication data
      supplied is invalid.

S_USER_AUTHENTICATED = 0x000000D1

      Specified user has already authenticated to module.

S_USERNAME_INVALID = 0x000000D2

      Username is invalid.

S_USER_EXISTS = 0x000000D4

      User already exists.

S_USER_INVALID = 0x000000D7

      User does not exist.

S_ROLE_INVALID = 0x000000D8

      Role does not exist.

S_ROLE_ASSOCIATED = 0x000000DB

      User already associated with this role.

S_ROLE_NOT_ASSOCIATED = 0x000000DD

      User not associated with this role.

S_ROLE_MAX = 0x000000DE

      Maximum number of roles already associated with this user.

S_PASSWORD_INVALID = 0x000000E1

      Specified password does not meet module policy.

S_PASSWORD_INVALID_CHAR = 0x000000E2





      Specified password has invalid characters in it.

S_PASSWORD_INVALID_LEN = 0x000000E4

      Length of specified password is either too long or too short.

S_SALT_INVALID = 0x000000E7

      Invalid salt specified.

S_ITERATION_COUNT_INVALID = 0x000000E8

      Invalid iteration count specified.

S_INSUFFICIENT_ENTROPY = 0x000000EB

      Insufficient entropy available.


