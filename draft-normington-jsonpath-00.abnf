json-path = root-selector *selector
root-selector = %x24               ; $ selects document root node

selector = dot-child              ; see below for alternatives
dot-child = %x2E dot-child-name / ; .<dot-child-name>
               %x2E %x2A             ; .*
dot-child-name = 1*(
                      %x2D /         ; -
                      DIGIT /
                      ALPHA /
                      %x5F /         ; _
                      %x80-10FFFF    ; any non-ASCII Unicode character
                    )
DIGIT =  %x30-39                  ; 0-9
ALPHA = %x41-5A / %x61-7A         ; A-Z / a-z

selector =/ union
union = %x5B ws union-elements ws %x5D ; [...]
ws = *%x20                             ; zero or more spaces
union-elements = union-element /
                    union-element ws %x2C ws union-elements
                                          ; ,-separated list

union-element = child ; see below for more alternatives
child = %x22 *double-quoted %x22 / ; "string"
           %x27 *single-quoted %x27   ; 'string'

double-quoted = dq-unescaped /
             escape (
                 %x22 /          ; "    quotation mark  U+0022
                 %x2F /          ; /    solidus         U+002F
                 %x5C /          ; \    reverse solidus U+005C
                 %x62 /          ; b    backspace       U+0008
                 %x66 /          ; f    form feed       U+000C
                 %x6E /          ; n    line feed       U+000A
                 %x72 /          ; r    carriage return U+000D
                 %x74 /          ; t    tab             U+0009
                 %x75 4HEXDIG )  ; uXXXX                U+XXXX


dq-unescaped = %x20-21 / %x23-5B / %x5D-10FFFF

single-quoted = sq-unescaped /
             escape (
                 %x27 /          ; '    apostrophe      U+0027
                 %x2F /          ; /    solidus         U+002F
                 %x5C /          ; \    reverse solidus U+005C
                 %x62 /          ; b    backspace       U+0008
                 %x66 /          ; f    form feed       U+000C
                 %x6E /          ; n    line feed       U+000A
                 %x72 /          ; r    carriage return U+000D
                 %x74 /          ; t    tab             U+0009
                 %x75 4HEXDIG )  ; uXXXX                U+XXXX

sq-unescaped = %x20-26 / %x28-5B / %x5D-10FFFF

escape = %x5C                 ; \

HEXDIG =  DIGIT / "A" / "B" / "C" / "D" / "E" / "F"
                                 ; case insensitive hex digit

union-element =/ array-index / array-slice

array-index = integer

integer = ["-"] ("0" / (DIGIT1 *DIGIT))
                               ; optional - followed by 0 or
                               ; sequence of digits with no leading zero
DIGIT1 = %x31-39            ; non-zero digit
array-slice = [ start ] ws ":" ws [ end ]
                      [ ws ":" ws [ step ] ]
start = integer
end = integer
step = integer

n_start = Normalize(start)
n_end = Normalize(end)

lower = MIN(MAX(n_start, 0), len)
upper = MIN(MAX(n_end, 0), len)
upper = MIN(MAX(n_start, -1), len-1)
lower = MIN(MAX(n_end, -1), len-1)
i = lower
i = i + step
i = upper
i = i + step
