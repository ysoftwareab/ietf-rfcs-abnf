command-select  =/ convert

uid             =/ "UID" SP convert
                     ; Unique identifiers used instead of message
                     ; sequence numbers

convert         = "CONVERT" SP sequence-set SP convert-params SP
                         ( convert-att /
                           "(" convert-att *(SP convert-att) ")" )

convert-att     = "UID" /
                         "BODYPARTSTRUCTURE" section-convert /
                         "BINARY" section-convert [partial] /
                         "BINARY.SIZE" section-convert /
                         "BODY[HEADER]" /
                         "BODY[" section-part ".HEADER]" /
                         "BODY[" section-part ".MIME]" /
                         "AVAILABLECONVERSIONS" section-convert
                     ; <partial> is defined in [RFC3516]
                     ; <section-part> is defined in [RFC3501].

convert-params = "(" (quoted-to-mime-type / default-conversion)
                        [SP "(" transcoding-params ")"] ")"

quoted-to-mime-type = DQUOTE to-mime-type DQUOTE

transcoding-params  = transcoding-param
                             *(SP transcoding-param)

transcoding-param-names  = transcoding-param-name
                             *(SP transcoding-param-name)

transcoding-param  = transcoding-param-name SP
                            transcoding-param-value

transcoding-param-name = astring
                ; <transcod-param-name-nq> represented as a quoted,
                ; literal or atom. Note that
                ; <transcod-param-name-nq> allows for "%" which is
                ; not allowed in atoms. Such values must be
                ; represented as quoted or literal.

transcod-param-name-nq = Feature-tag
                ; <Feature-tag> is defined in [MEDIAFEAT-REG].

transcoding-param-value = astring

default-conversion = "NIL"

message-data   =/ nz-number SP "CONVERTED" SP convert-correlator
                          SP convert-msg-attrs

convert-correlator = "(" "TAG" SP tag-string ")"

tag-string = string
                     ; tag of the command that caused
                     ; the CONVERTED response, sent as
                     ; a string.

convert-msg-attrs = "(" convert-msg-att *(SP convert-msg-att) ")"
                     ; "UID" MUST be the first data item, if present.

convert-msg-att = msg-att-semistat / msg-att-conv-static

msg-att-conv-static  = "UID" SP uniqueid
                     ; MUST NOT change for a message

msg-att-semistat =
                    ( "BINARY" section-convert ["<" number ">"] SP
                       (nstring / literal8 / converterror-phrase) ) /
                    ( "BINARY.SIZE" section-convert SP
                       (number / converterror-phrase) ) /
                    ( "BODYPARTSTRUCTURE" section-convert SP
                       (body / converterror-phrase) ) /
                    ( "AVAILABLECONVERSIONS" section-convert SP
                       (mimetype-list / converterror-phrase) )
                     ; MUST NOT change during an IMAP "session",
                     ; but not necessarily static in a long term.

section-convert = section-binary
                     ; <section-binary> is defined in [RFC3516].
                     ;
                     ; Note that unlike [RFC3516], conversion
                     ; of a top level multipart/* is allowed.
resp-text-code =/ "TEMPFAIL" /
                         "MAXCONVERTMESSAGES" SP nz-number /
                         "MAXCONVERTPARTS" SP nz-number
           ; <resp-text-code> is defined in [RFC3501]

mimetype-and-params = quoted-to-mime-type
           [SP "(" transcoding-params ")"]
           ; always includes a specific MIME type

mimetype-list = "(" "(" [quoted-to-mime-type
                                *(SP quoted-to-mime-type)] ")" ")"
           ; Unordered list of MIME types. It can be empty.
           ;
           ; Two levels of parenthesis is needed to distinguish this
           ; data from <converterror-phrase>.

converterror-phrase = "(" "ERROR" SP
            convert-err-descript SP convert-error-code ")"

convert-error-code = "TEMPFAIL" [SP nz-number]
                          / bad-params
                          / missing-params

convert-err-descript = string
            ; Human readable text explaining the conversion error.
                    ; The default charset is US-ASCII, unless
                    ; the LANGUAGE command [IMAP-I18N] is called, when
                    ; the charset changes to UTF-8.

quoted-from-mime-type = DQUOTE from-concrete-mime-type DQUOTE

bad-params = "BADPARAMETERS"
              1*(SP (quoted-from-mime-type / nil)
                 SP mimetype-and-params)
           ; nil is only returned when the body part doesn't exist

missing-params = "MISSINGPARAMETERS"
              1*(SP quoted-from-mime-type SP
                    mimetype-and-missing-params)

mimetype-and-missing-params = quoted-to-mime-type
           "(" transcoding-param-names ")"
           ; always includes a specific MIME type

concrete-mime-type = type-name "/" subtype-name
                       ; i.e.  "type/subtype".
                       ; type-name and subtype-name
                       ; are defined in [MIME-MTSRP].
from-concrete-mime-type = concrete-mime-type

to-mime-type = concrete-mime-type

command-auth =/ conversions-cmd

conversions-cmd = "CONVERSIONS" SP from-mime-type-req SP
                         to-mime-type-req

from-mime-type-req = astring
         ; "mime-type-req" represented as IMAP <atom>,
         ; <quoted> or <literal>

to-mime-type-req = astring
         ; <mime-type-req> represented as IMAP <atom>,
         ; <quoted> or <literal>.
         ; Note that <mime-type-req> allows for "*",
         ; which is not allowed in <atom>. Such values must
         ; be represented as <quoted> or <literal>.

any-mime-type  = "*"

mime-type-req = any-mime-type /
                       (type-name "/" any-mime-type) /
                       concrete-mime-type
         ; '*', 'type/*' or 'type/subtype'.
         ; type-name is defined in [MIME-MTSRP].

response-payload =/ conversion-data

conversion-data = "CONVERSION" SP quoted-from-mime-type SP
                         quoted-to-mime-type
                         [SP "(" transcoding-param-name
                          *(SP transcoding-param-name) ")"]


