SIP-URL         = "sip:" [ userinfo "@" ] hostport
                       url-parameters [ headers ]
userinfo        = user [ ":" password ]
user            = *( unreserved | escaped
                     | "&" | "=" | "+" | "$" | "," )
password        = *( unreserved | escaped
                     | "&" | "=" | "+" | "$" | "," )
hostport        = host [ ":" port ]
host            = hostname | IPv4address
hostname        = *( domainlabel "." ) toplabel [ "." ]
domainlabel     = alphanum | alphanum *( alphanum | "-" ) alphanum
toplabel        = alpha | alpha *( alphanum | "-" ) alphanum
IPv4address     = 1*digit "." 1*digit "." 1*digit "." 1*digit
port            = *digit
url-parameters  = *( ";" url-parameter )
url-parameter   = transport-param | user-param
                     | ttl-param | maddr-param | tag-param | other-param
transport-param = "transport=" ( "udp" | "tcp" )
ttl-param       = "ttl=" ttl
ttl             = 1*3DIGIT       ; 0 to 255
maddr-param     = "maddr=" host
user-param      = "user=" ( "phone" $|$ "ip" )
tag-param       = "tag=" UUID
UUID            = 1*( hex | "-" )
other-param     = *uric
headers         = "?" header *( "&" header )
header          = hname "=" hvalue
hname           = *uric
hvalue          = *uric
uric            = reserved | unreserved | escaped
reserved        = ";" | "/" | "?" | ":" | "@" | "&" | "=" | "+" |
                       "$" | ","
digits          = 1*DIGIT

generic-message    =    start-line
                                *message-header
                                CRLF
                                [ message-body ]

start-line         =    Request-Line |       Section 4.1
                                Status-Line          Section 5.1




message-header    =    ( general-header
                               | request-header
                               | response-header
                               | entity-header )



Request    =    Request-Line         ;  Section 4.1
                        *( general-header
                        | request-header
                        | entity-header )
                        CRLF
                        [ message-body ]     ;  Section 8


Request-Line    =    Method SP Request-URI SP SIP-Version CRLF


general-header     =    Call-ID                ; Section 6.12
                           |    CSeq                   ; Section 6.16
                           |    Date                   ; Section 6.17
                           |    Encryption             ; Section 6.18
                           |    Expires                ; Section 6.19
                           |    From                   ; Section 6.20
                           |    Record-Route           ; Section 6.29
                           |    Timestamp              ; Section 6.36
                           |    To                     ; Section 6.37
                           |    Via                    ; Section 6.40
entity-header      =    Content-Encoding       ; Section 6.13
                           |    Content-Length         ; Section 6.14
                           |    Content-Type           ; Section 6.15
request-header     =    Accept                 ; Section 6.7
                           |    Accept-Encoding        ; Section 6.8
                           |    Accept-Language        ; Section 6.9
                           |    Authorization          ; Section 6.11
                           |    Hide                   ; Section 6.21
                           |    Location               ; Section 6.22
                           |    Max-Forwards           ; Section 6.23
                           |    Organization           ; Section 6.24
                           |    Priority               ; Section 6.25
                           |    Proxy-Authorization    ; Section 6.27
                           |    Proxy-Require          ; Section 6.28
                           |    Route                  ; Section 6.33
                           |    Require                ; Section 6.30
                           |    Response-Key           ; Section 6.31
                           |    Subject                ; Section 6.35
                           |    User-Agent             ; Section 6.39
response-header    =    Allow                  ; Section 6.10
                           |    Location               ; Section 6.22
                           |    Proxy-Authenticate     ; Section 6.26
                           |    Retry-After            ; Section 6.32
                           |    Server                 ; Section 6.34
                           |    Unsupported            ; Section 6.38
                           |    Warning                ; Section 6.41
                           |    WWW-Authenticate       ; Section 6.42


Method    =    "ACK" | "BYE" | "CANCEL" | "INVITE"
                 |     "OPTIONS" | "REGISTER"


Response    =    Status-Line          ;  Section 5.1
                         *( general-header
                         | response-header
                         | entity-header )
                         CRLF
                         [ message-body ]     ;  Section 8


Status-Line    =    SIP-version SP Status-Code SP Reason-Phrase CRLF


Status-Code       =    Informational                  Fig. 5
                         |     Success                        Fig. 5
                         |     Redirection                    Fig. 6
                         |     Client-Error                   Fig. 7
                         |     Server-Error                   Fig. 8
                         |     Global-Failure                 Fig. 9
                         |     extension-code
extension-code    =    3DIGIT
Reason-Phrase     =    *<TEXT,  excluding CR, LF>


Informational    =    "100"    ;  Trying
                        |     "180"    ;  Ringing
                        |     "181"    ;  Call Is Being Forwarded
                        |     "182"    ;  Queued
Success          =    "200"    ;  OK


Redirection    =    "300"    ;  Multiple Choices
                      |     "301"    ;  Moved Permanently
                      |     "302"    ;  Moved Temporarily
                      |     "303"    ;  See Other
                      |     "305"    ;  Use Proxy
                      |     "380"    ;  Alternative Service


Client-Error    =    "400"    ;  Bad Request
                       |     "401"    ;  Unauthorized
                       |     "402"    ;  Payment Required
                       |     "403"    ;  Forbidden
                       |     "404"    ;  Not Found
                       |     "405"    ;  Method Not Allowed
                       |     "406"    ;  Not Acceptable
                       |     "407"    ;  Proxy Authentication Required
                       |     "408"    ;  Request Timeout
                       |     "409"    ;  Conflict
                       |     "410"    ;  Gone
                       |     "411"    ;  Length Required
                       |     "413"    ;  Request Message Body Too Large
                       |     "414"    ;  Request-URI Too Large
                       |     "415"    ;  Unsupported Media Type
                       |     "420"    ;  Bad Extension
                       |     "480"    ;  Temporarily not available
                       |     "481"    ;  Invalid Call-ID
                       |     "482"    ;  Loop Detected
                       |     "483"    ;  Too Many Hops
                       |     "484"    ;  Address Incomplete
                       |     "485"    ;  Ambiguous


Server-Error    =    "500"    ;  Internal Server Error
                       |     "501"    ;  Not Implemented
                       |     "502"    ;  Bad Gateway
                       |     "503"    ;  Service Unavailable
                       |     "504"    ;  Gateway Timeout
                       |     "505"    ;  SIP Version not supported


message-header    =    field-name ":" [ field-value ] CRLF
field-name        =    token
field-value       =    *( field-content | LWS )
field-content     =    < the OCTETs  making up the field-value
                                and consisting of either *TEXT
                                or combinations of token,
                                tspecials, and quoted-string>


Call-ID     =    ( "Call-ID" | "i" ) ":" local-id "@" host
local-id    =    *uric


Content-Length    =    "Content-Length" ":" 1*DIGIT


Content-Type    =    ( "Content-Type" ":" media-type
CSeq    =    "CSeq" ":" 1*DIGIT Method



Encryption           =    "Encryption" ":" encryption-scheme 1*SP
                                  #encryption-params
encryption-scheme    =    token
encryption-params    =    token "=" ( token | quoted-string )

Expires    =    "Expires" ":" ( HTTP-date | delta-seconds )


From            =    ( "From" | "f" ) ":" ( name-addr | addr-spec )
name-addr       =    [ display-name ] "<" addr-spec ">"
addr-spec       =    SIP-URL | URI
display-name    =    *token | quoted-string


Hide    =    "Hide" ":" ( "route" | "hop" )


Location    =    ( "Location" | "m" ) ":"
                         ("*" | (1# (( SIP-URL | URI )
                         [ LWS *( ";" location-params ) ] [ comment ] ))




location-params       =    "q"                     "="     qvalue
                              |    "action"                "="     "proxy" | "redirect"
                              |    extension-attribute
extension-attribute   =    extension-name         [ "="    extension-value ]


Max-Forwards    =    "Max-Forwards" ":" 1*DIGIT


Organization    =    "Organization" ":" *text


Priority          =    "Priority" ":" priority-value
priority-value    =    "emergency" | "urgent" | "normal"
                          |    "non-urgent"


Record-Route    =    "Record-Route" ":" 1# SIP-URL


Require    =    "Require" ":" 1#option-tag


Response-Key    =    "Response-Key" ":" key-scheme 1*SP #key-param
key-scheme      =    token
key-param       =    token "=" ( token | quoted-string )
Retry-After    =    "Retry-After" ":" ( HTTP-date | delta-seconds )
                            [ comment ] [ ";duration" "=" delta-seconds ]


Route    =    "Route" ":" 1# request-uri


Subject    =    ( "Subject" | "s" ) ":" *text


Timestamp    =    "Timestamp" ":" *(DIGIT) [ "." *(DIGIT) ] [ delay ]
delay        =    *(DIGIT) [ "." *(DIGIT) ]


To    =    ( "To" | "t" ) ":" ( name-addr | addr-spec )


Via              = ( "Via" $|$ "v") ":" 1#( sent-protocol sent-by
                        *( ";" via-params ) [ comment ] )
via-params       = via-hidden | via-ttl | via-maddr
                      | via-received | via-branch
via-hidden       = "hidden"
via-ttl          = "ttl" "=" ttl
via-maddr        = "maddr" "=" maddr
via-received     = "received" "=" host
via-branch       = "branch" "=" token
sent-protocol    = [ protocol-name "/" ] protocol-version
                        [ "/" transport ]
protocol-name    = "SIP" $|$ token
protocol-version = token
transport        = "UDP" $|$ "TCP" $|$ token
sent-by          = ( host [ ":" port ] ) $|$ ( concealed-host )
concealed-host   = token
ttl              = 1*3DIGIT     ; 0 to 255

Warning          =    "Warning" ":" 1#warning-value
warning-value    =    warn-code SP warn-agent SP warn-text
warn-code        =    3DIGIT
warn-agent       =    ( host [ ":" port ] ) | pseudonym
                              ;  the name or pseudonym of the server adding
                              ;  the Warning header, for use in debugging
warn-text        =    quoted-string


v=0
o=user1 53655765 2353687637 IN IP4 128.3.4.5
s=Mbone Audio
i=Discussion of Mbone Engineering Issues
e=mbone@somewhere.com
c=IN IP4 224.2.0.1/127
t=0 0
m=audio 3456 RTP/AVP 0



r = await_response();
class = r.status / 100;

multicast = 0;
best = r;
best = r;
v=0
o=bell 53655765 2353687637 IN IP4 128.3.4.5
c=IN IP4 135.180.144.94
m=audio 3456 RTP/AVP 0 3 4 5



v=0
o=bell 53655765 2353687637 IN IP4 128.3.4.5
c=IN IP4 135.180.144.94
m=audio 3456 RTP/AVP 0 3 4 5



WWW-Authenticate    =    "WWW-Authenticate" ":" "pgp" pgp-challenge
pgp-challenge       =    * (";" pgp-params )
pgp-params          =    realm | pgp-version | pgp-algorithm
realm               =    "realm" "=" realm-value
realm-value         =    quoted-string
pgp-version         =    "version" "=" digit *( "." digit ) *letter
pgp-algorithm       =    "algorithm" "=" ( "md5" | "sha1" | token )


key="mQBtAzNWHNYAAAEDAL7QvAdK2utY05wuUG+ItYK5tCF8HNJM60sU4rLaV+eUnkMk
bmVAY3MuY29sdW1iaWEuZWR1Pg==
v=0
o=user1 53655765 2353687637 IN IP4 128.3.4.5
s=Mbone Audio
i=Discussion of Mbone Engineering Issues
e=mbone@somewhere.com
c=IN IP4 224.2.0.1/127
t=0 0
m=audio 3456 RTP/AVP 0



v=0
o=bell 53655765 2353687637 IN IP4 128.3.4.5
s=Mr. Watson, come here.
c=IN IP4 135.180.144.94
m=audio 3456 RTP/AVP 0 3 4 5

v=0
o=watson 4858949 4858949 IN IP4 192.1.2.3
s=I'm on my way
c=IN IP4 135.180.161.25
m=audio 5004 RTP/AVP 0 3



v=0
o=mm-server 2523535 0 IN IP4 131.215.131.131
s=Answering Machine
i=Leave an audio message
c=IN IP4 131.215.131.131
t=0 0
m=audio 12345 RTP/AVP 0



v=0
o=mm-server 2523535 0 IN IP4 131.215.131.131
s=Answering Machine
i=Leave an audio message
c=IN IP4 128.16.64.19
t=0 0
m=audio 26472 RTP/AVP 0



v=0
s=Lets talk
b=CT:128
c=IN IP4 131.215.131.131
m=audio 3456 RTP/AVP 7 0 13
m=video 2232 RTP/AVP 31



v=0
m=audio 0 RTP/AVP 0 1 3 99
m=video 0 RTP/AVP 29 30
a=rtpmap:99 SX7300/8000



CR       =    %d13                                           ;  US-ASCII CR, carriage return character
LF       =    %d10                                           ;  US-ASCII LF, line feed character
CRLF     =    CR LF                                          ;  typically the end of a line
SP       =    %d32                                           ;  US-ASCII SP, space character
HT       =    %d09                                           ;  US-ASCII HT, horizontal tab character
LWS      =    [CRLF] 1*( SP | HT )                           ;  linear whitespace
DIGIT    =    "0" .. "9"                                     ;  a single decimal digit
CHAR     =    <any US-ASCII character (octets 0 - 127)>
CTL      =    <any US-ASCII control character
                      (octets 0 - 31) and DEL (127)>
OCTET    =    <any 8-bit sequence of data>
TEXT     =    <any OCTET except CTLs, but including LWS>




unreserved    =    alphanum | mark
mark          =    "-" | "_" | "." | "!" | "~" | "*" | "'"
                     |     "(" | ")"
separators    =    "(" | ")" | "<" | ">" | "@" |
                           "," | ";" | ":" | "/" | <"> |
                           "/" | "[" | "]" | "?" | "=" |
                           "" | "" | SP | HT
escaped       =    "%" hex hex
hex           =    digit | "A" | "B" | "C" | "D" | "E" | "F" |
                           "a" | "b" | "c" | "d" | "e" | "f"
alphanum      =    alpha | digit
alpha         =    lowalpha | upalpha
lowalpha      =    "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" |
                           "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" |
                           "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"
upalpha       =    "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" |
                           "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" |
                           "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"
digit         =    "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" |
                           "8" | "9"
token         =    1*<any CHAR except CTL's or separators>
comment       =    "(" *(ctext | quoted-pair | comment) ")"
ctext         =    <any TEXT excluding "(" and ")">
