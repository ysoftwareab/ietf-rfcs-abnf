COSE_Encrypt_Tagged = #6.96(COSE_Encrypt)

SUIT_Encryption_Info = COSE_Encrypt_Tagged

COSE_Encrypt = [
   protected   : bstr .cbor outer_header_map_protected,
   unprotected : outer_header_map_unprotected,
   ciphertext  : null,                  ; because of detached ciphertext
   recipients  : [ + COSE_recipient ]
outer_header_map_protected =
outer_header_map_unprotected =
COSE_recipient = [
   protected   : bstr .size 0,
   unprotected : recipient_header_map,
   ciphertext  : bstr        ; CEK encrypted with KEK
recipient_header_map =
Enc_structure = [
            context : "Encrypt",
            protected : empty_or_serialized_map,
            external_aad : bstr
COSE_Encrypt_Tagged = #6.96(COSE_Encrypt)

SUIT_Encryption_Info = COSE_Encrypt_Tagged

COSE_Encrypt = [
   protected   : bstr .cbor header_map, ; must contain alg
   unprotected : header_map,            ; must contain iv
   ciphertext  : null,                  ; because of detached ciphertext
   recipients  : [ + COSE_recipient_outer ]
COSE_recipient_outer = [
   protected   : bstr .size 0,
   unprotected : header_map, ; must contain alg
   ciphertext  : bstr        ; CEK encrypted based on HPKE algo
   recipients  : [ + COSE_recipient_inner ]
COSE_recipient_inner = [
   protected   : bstr .cbor header_map, ; must contain alg
   unprotected : header_map, ; must contain kid,
   ciphertext  : bstr        ; CEK encrypted based on HPKE algo
   recipients  : null
header_map = {
   Generic_Headers,
   * label =values,
Generic_Headers = (
     ? 1 => int,         ; algorithm identifier
     ? 2 => crv,         ; EC identifier
     ? 4 => bstr,        ; key identifier
     ? 5 => bstr         ; IV
CEK = random()
pkR = DeserializePublicKey(recipient_public_key)
info = "cose hpke" || 0x00 || COSE_KDF_Context
ciphertext = context.Seal(null, CEK)

                                 Figure 5

PartyInfo = (
      identity : bstr,
      nonce : nil,
      other : nil
COSE_KDF_Context = [
      AlgorithmID : int,
      PartyUInfo : [ PartyInfo ],
      PartyVInfo : [ PartyInfo ],
      SuppPubInfo : [
          keyDataLength : uint,
          protected : empty_or_serialized_map
      ],
info = "cose hpke" || 0x00 || COSE_KDF_Context
context = SetupBaseR(ciphertext, skR, info)
CEK = context.Open(null, ciphertext)

                                 Figure 7

