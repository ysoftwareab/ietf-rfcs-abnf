pk11-URI             = "pkcs11" ":" pk11-path *1("?" pk11-query)
pk11-path            = *1(pk11-pattr *(";" pk11-pattr))
pk11-pattr           = pk11-token / pk11-manuf / pk11-serial /
                         pk11-model / pk11-lib-manuf /
                         pk11-lib-ver / pk11-lib-desc /
                         pk11-object / pk11-type / pk11-id /
                         pk11-x-pattr
pk11-qattr           = pk11-pin-source / pk11-pin-value /
                         pk11-module-name / pk11-module-path /
                         pk11-x-qattr
pk11-query           = *1(pk11-qattr *("&" pk11-qattr))
pk11-res-avail       = ":" / "[" / "]" / "@" / "!" / "$" /
                         "'" / "(" / ")" / "*" / "+" / "," / "="
pk11-path-res-avail  = pk11-res-avail / "&"
pk11-query-res-avail = pk11-res-avail / "/" / "?" / "|"
pk11-pchar           = unreserved / pk11-path-res-avail / pct-encoded
pk11-qchar           = unreserved / pk11-query-res-avail / pct-encoded
pk11-token           = "token" "=" *pk11-pchar
pk11-manuf           = "manufacturer" "=" *pk11-pchar
pk11-serial          = "serial" "=" *pk11-pchar
pk11-model           = "model" "=" *pk11-pchar
pk11-lib-manuf       = "library-manufacturer" "=" *pk11-pchar
pk11-lib-desc        = "library-description" "=" *pk11-pchar
pk11-lib-ver         = "library-version" "=" 1*DIGIT *1("." 1*DIGIT)
pk11-object          = "object" "=" *pk11-pchar
pk11-type            = "type" "=" *1("public" / "private" / "cert" /
                         "secret-key" / "data")
pk11-id              = "id" "=" *pk11-pchar
pk11-pin-source      = "pin-source" "=" *pk11-qchar
pk11-pin-value       = "pin-value" "=" *pk11-qchar
pk11-module-name     = "module-name" = *pk11-qchar
pk11-module-path     = "module-path" = *pk11-qchar
pk11-x-attr-nm-char  = ALPHA / DIGIT / "-" / "_"
pk11-x-pattr         = "x-" 1*pk11-x-attr-nm-char "=" *pk11-pchar
pk11-x-qattr         = "x-" 1*pk11-x-attr-nm-char "=" *pk11-qchar
   The URI path component contains attributes that identify a resource
   in a one level hierarchy provided by Cryptoki producers.  The query
   component can contain a few attributes that may be needed to retrieve
   the resource identified by the URI path.  Both path and query
   components may contain vendor specific attributes.  Such attribute
   names must start with an "x-" prefix.  Attributes in the path
   component are delimited by ';' character, attributes in the query
   component use '&' as a delimiter.

   The general '/' delimiter was removed from available characters that
   do not have to be percent-encoded in the path component so that
   generic URI parsers never split the path component into multiple
   segments.  The '/' delimiter can be used unencoded in the query
   component.  Delimiter '?' was removed since the PKCS#11 URI uses a
   query component.  Delimiter '#' was removed so that generic URI
   parsers are not confused by unencoded hash characters.  All other
   generic delimiters are allowed to be used unencoded (':', '[', ']',
   and '@') in the PKCS#11 URI.

   The following table presents mapping between the PKCS#11 URI path
   component attributes and the PKCS#11 API structure members and object
   attributes.  Given that PKCS#11 URI users may be quite ignorant about
   the PKCS#11 specification the mapping is a product of a necessary
   compromise between how precisely are the URI attribute names mapped
   to the names in the specification and the ease of use and
   understanding of the URI scheme.

   +----------------------+---------------------+----------------------+
   | URI component path   | Attribute           | Attribute            |
   | attribute name       | represents          | corresponds in the   |
   |                      |                     | PKCS#11              |
   |                      |                     | specification to     |
   +----------------------+---------------------+----------------------+
   +----------------------+---------------------+----------------------+
   | id                   | key identifier for  | "CKA_ID" object      |
   |                      | object              | attribute            |
   +----------------------+---------------------+----------------------+
   | library-description  | character-string    | "libraryDescription" |
   |                      | description of the  | member of CK_INFO    |
   |                      | library             | structure            |
   +----------------------+---------------------+----------------------+
   | library-manufacturer | ID of the Cryptoki  | "manufacturerID"     |
   |                      | library             | member of the        |
   |                      | manufacturer        | CK_INFO structure    |
   +----------------------+---------------------+----------------------+
   | library-version      | Cryptoki library    | "libraryVersion"     |
   |                      | version number      | member of CK_INFO    |
   |                      |                     | structure            |
   +----------------------+---------------------+----------------------+
   | manufacturer         | ID of the token     | "manufacturerID"     |
   |                      | manufacturer        | member of            |
   |                      |                     | CK_TOKEN_INFO        |
   |                      |                     | structure            |
   +----------------------+---------------------+----------------------+
   | model                | token model         | "model" member of    |
   |                      |                     | CK_TOKEN_INFO        |
   |                      |                     | structure            |
   +----------------------+---------------------+----------------------+
   | object               | description (name)  | "CKA_LABEL" object   |
   |                      | of the object       | attribute            |
   +----------------------+---------------------+----------------------+
   | serial               | character-string    | "serialNumber"       |
   |                      | serial number of    | member of            |
   |                      | the token           | CK_TOKEN_INFO        |
   |                      |                     | structure            |
   +----------------------+---------------------+----------------------+
   | token                | application-defined | "label" member of    |
   |                      | label, assigned     | the CK_TOKEN_INFO    |
   |                      | during token        | structure            |
   |                      | initialization      |                      |
   +----------------------+---------------------+----------------------+
   | type                 | object class (type) | "CKA_CLASS" object   |
   |                      |                     | attribute            |
   +----------------------+---------------------+----------------------+

    Table 1: Mapping between URI path component attributes and PKCS#11
                            specification names

   The query component attribute "pin-source" specifies where the
   application or library should find the normal user's token PIN, the
   "pin-value" attribute provides the normal user's PIN value directly,
   if needed, and the "module-name" and "module-path" attributes modify
   default settings for accessing PKCS#11 providers.  For the definition
   of a "normal user", see [pkcs11_spec].

   The ABNF rules above is a best effort definition and this paragraph
   specifies additional constraints.  The PKCS#11 URI must not contain
   duplicate attributes of the same name in the URI path component.  It
   means that each attribute may be present at most once in the PKCS#11
   URI path.  Aside from the query attributes defined in this document,
   duplicate attributes may be present in the URI query component and it
   is up to the URI consumer to decide on how to deal with such
   duplicates.
   It is recommended to percent-encode the whole value of the "id"
   attribute which is supposed to be handled as arbitrary binary data.

   The "library-version" attribute represents the major and minor
   version number of the library and its format is "M.N".  Both numbers
   are one byte in size, see the "libraryVersion" member of the CK_INFO
   structure in [pkcs11_spec] for more information.  Value "M" for the
   attribute must be interpreted as "M" for the major and "0" for the
   minor version of the library.  If the attribute is present the major
   version number is mandatory.

   An empty PKCS#11 URI path attribute that does allow for an empty
   value matches a corresponding structure member or an object attribute
   with an empty value.  Note that according to the PKCS#11
   specification [pkcs11_spec], empty character values in a PKCS#11 API
   producer must be padded with spaces and should not be NULL
   terminated.

manufacturer=Snake%20Oil,%20Inc.;
model=1.0;
object=my-certificate;
type=cert;
id=%69%95%3E%5C%F4%BD%EC%91;
serial=
type=private
type=private
manufacturer=Snake%20Oil,%20Inc.
library-description=Soft%20Token%20Library;
library-version=1.23

library-version=3;
id=%01%02%03%Ba%dd%Ca%fe%04%05%06

object=my-certificate;
type=cert
object=my-certificate;
type=cert
object=my-certificate;
type=cert;
x-vend-aaa=value-a
x-vend-bbb=value-b

