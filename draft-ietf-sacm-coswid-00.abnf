concise-software-identity = {
     global-attributes,
     ? entity-entry,
     ? evidence-entry,
     ? link-entry,
     ? software-meta-entry,
     ? payload-entry,
     ? any-element-entry,
     ? corpus,
     ? patch,
     ? media,
     swid-name,
     ? supplemental,
     tag-id,
     ? tag-version,
     ? version,
     ? version-scheme,
NMTOKEN = text
NMTOKENS = text

date-time = time
any-uri = text
label = text / int

any-attribute = (
label => text / int / [ 2* text ] / [ 2* int ]
any-element-map = {
     global-attributes,
     * label => any-element-map / [ * any-element-map ],
global-attributes = (
     ? lang,
     * any-attribute,
resource-collection = (
     ? directory-entry,
     ? file-entry,
     ? process-entry,
     ? resource-entry
file = {
     filesystem-item,
     ? size,
     ? version,
     ? file-hash,
filesystem-item = (
     global-attributes,
     ? key,
     ? location,
     fs-name,
     ? root,
directory = {
     filesystem-item,
     path-elements,
process = {
     global-attributes,
     process-name,
     ? pid,
resource = {
     global-attributes,
     type,
entity = {
     global-attributes,
     meta-elements,
     entity-name,
     ? reg-id,
     role,
     ? thumbprint,
evidence = {
     global-attributes,
     resource-collection,
     ? date,
     ? device-id,
link = {
     global-attributes,
     ? artifact,
     href,
     ? media,
     ? ownership,
     rel,
     ? type,
     ? use,
software-meta = {
     global-attributes,
     ? activation-status,
     ? channel-type,
     ? colloquial-version,
     ? description,
     ? edition,
     ? entitlement-data-required,
     ? entitlement-key,
     ? generator,
     ? persistent-id,
     ? product,
     ? product-family,
     ? revision,
     ? summary,
     ? unspsc-code,
     ? unspsc-version,
payload = {
     global-attributes,
     resource-collection,
tag-id = (0: text)
swid-name = (1: text)
entity-entry = (2: entity / [ * entity ])
evidence-entry = (3: evidence / [ * evidence ])
link-entry = (4: link / [ * link ])
software-meta-entry = (5: software-meta / [ * software-meta ])
payload-entry = (6: payload / [ * payload ])
any-element-entry = (7: any-element-map / [ * any-element-map ])
corpus = (8: bool)
patch = (9: bool)
media = (10: text)
supplemental = (11: bool)
tag-version = (12: integer)
version = (13: text)
version-scheme = (14: NMTOKEN)
lang = (15: text)
directory-entry = (16: directory / [ * directory ])
file-entry = (17: file / [ * file ])
process-entry = (18: process / [ * process ])
resource-entry = (19: resource / [ * resource ])
size = (20: integer)
key = (21: bool)
location = (22: text)
fs-name = (23: text)
root = (24: text)
path-elements = (25: { ? directory-entry,
                          ? file-entry,
                        }
                   )
process-name = (26: text)
pid = (27: integer)
type = (28: text)
meta-elements = (29: any-element-map / [ * any-element-map ])
entity-name = (30: text)
reg-id = (31: any-uri)
role = (32: NMTOKENS)
thumbprint = (33: text)
date = (34: date-time)
device-id = (35: text)
artifact = (36: text)
href = (37: any-uri)
ownership = (38: "shared" / "private" / "abandon")
rel = (39: NMTOKEN)
use = (40: "optional" / "required" / "recommended")
activation-status = (41: text)
channel-type = (42: text)
colloquial-version = (43: text)
description = (44: text)
edition = (45: text)
entitlement-data-required = (46: bool)
entitlement-key = (47: text)
generator = (48: text)
persistent-id = (49: text)
product = (50: text)
product-family = (51: text)
revision = (52: text)
summary = (53: text)
unspsc-code = (54: text)
unspsc-version = (55: text)
file-hash = (56: [ hash-alg-id: int,
                      hash-value: bstr,
                    ]
               )


signed-software-identity = #6.997(COSE-Sign1-coswid) ; see TBS7 in current COSE I-D

label = int / tstr  ; see COSE I-D 1.4.
values = any        ; see COSE I-D 1.4.

unprotected-signed-coswid-header = {
    1 => int,                   ; algorithm identifier
    3 => "application/coswid",  ; request for CoAP IANA registry to become an int
    * label => values,
protected-signed-coswid-header = {
    4 => bstr,                  ; key identifier
    * label => values,
COSE-Sign1-coswid = [
    protected: bstr .cbor protected-signed-coswid-header,
    unprotected: unprotected-signed-coswid-header,
    payload: bstr .cbor concise-software-identity,
    signature: bstr,
