



IPFIX Working Group                                       P. Aitken, Ed.
Internet-Draft                                                 B. Claise
Intended status: Standards Track                                  S. B S
Expires: September 5, 2014                                   C. McDowall
                                                     Cisco Systems, Inc.
                                                        J. Schoenwaelder
                                                Jacobs University Bremen
                                                           March 4, 2014


            Exporting MIB Variables using the IPFIX Protocol
                draft-ietf-ipfix-mib-variable-export-05

Abstract

   This document specifies a way to complement IPFIX Data Records with
   Management Information Base (MIB) objects, avoiding the need to
   define new IPFIX Information Elements for existing Management
   Information Base objects that are already fully specified.

   An IPFIX Option Template and method are specified, which are used to
   export the extra information required to fully describe Simple
   Network Management Protocol (SNMP) MIB Objects.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 5, 2014.

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents



Aitken, et al.          Expires September 5, 2014               [Page 1]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Motivation and Architectural Model  . . . . . . . . . . . . .   6
   3.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   7
   4.  MIB Object Value Information Elements and the MIB Field
       Option Templates  . . . . . . . . . . . . . . . . . . . . . .   8
     4.1.  MIB Field Option Architecture . . . . . . . . . . . . . .   9
     4.2.  MIB Field Options - Specifications and Required Fields  .  11
       4.2.1.  mibFieldOption  . . . . . . . . . . . . . . . . . . .  12
       4.2.2.  mibSubFieldOption . . . . . . . . . . . . . . . . . .  13
       4.2.3.  mibTypeOption . . . . . . . . . . . . . . . . . . . .  13
     4.3.  IPFIX and MIB Data Model  . . . . . . . . . . . . . . . .  14
     4.4.  MIB Field Option Template Formats . . . . . . . . . . . .  15
       4.4.1.  Data Template containing a mibObject Field  . . . . .  15
       4.4.2.  mibFieldOption Template . . . . . . . . . . . . . . .  17
       4.4.3.  mibFieldOption Data Records . . . . . . . . . . . . .  18
       4.4.4.  Option Template containing a mibObject Field  . . . .  19
       4.4.5.  mibFieldOption Template with Semantics Fields . . . .  20
       4.4.6.  mibFieldOption Template with extra MIB Object Details  21
     4.5.  Use of field order in the MIB Field Option template . . .  24
     4.6.  Identifying the SNMP Context  . . . . . . . . . . . . . .  24
     4.7.  Template Management . . . . . . . . . . . . . . . . . . .  25
     4.8.  Exporting Sequences . . . . . . . . . . . . . . . . . . .  25
       4.8.1.  Exporting Sequences - indexing  . . . . . . . . . . .  26
       4.8.2.  Exporting Sequences - mibObjectValueSequence  . . . .  26
       4.8.3.  Exporting Sequences - Augments  . . . . . . . . . . .  31
       4.8.4.  Exporting Sequence OF - mibObjectValueTable . . . . .  32
       4.8.5.  Exporting Sequences - Explicit  . . . . . . . . . . .  32
   5.  Example Use Cases . . . . . . . . . . . . . . . . . . . . . .  34
     5.1.  Non-indexed MIB Object: Established TCP Connections . . .  34
     5.2.  Enterprise Specific MIB Object: Detailing CPU Load
           History . . . . . . . . . . . . . . . . . . . . . . . . .  37
     5.3.  Exporting A Sequence Table: The OSPF Neighbor Sequence  .  40
     5.4.  Exporting Augmented Sequence Table: The IF-MIB id to name
           mapping . . . . . . . . . . . . . . . . . . . . . . . . .  44
     5.5.  Exporting Selected Objects Sequence : The
           ipIfStatsInForwDatagrams  . . . . . . . . . . . . . . . .  49
     5.6.  Indexed MIB Object with an IPFIX Information Element:
           Output Interface Queue Size in PSAMP Packet Report  . . .  52



Aitken, et al.          Expires September 5, 2014               [Page 2]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


     5.7.  Indexed MIB Object with an OID: Output Interface Queue
           Size in PSAMP Packet Report . . . . . . . . . . . . . . .  57
     5.8.  Exporting With Multiple Contexts: The OSPF Neighbor
           Sequence Revisited  . . . . . . . . . . . . . . . . . . .  61
   6.  Configuration Considerations  . . . . . . . . . . . . . . . .  64
   7.  The Collecting Process's Side . . . . . . . . . . . . . . . .  64
   8.  Applicability . . . . . . . . . . . . . . . . . . . . . . . .  65
   9.  Security Considerations . . . . . . . . . . . . . . . . . . .  65
   10. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  66
     10.1.  New MIB Value Information Elements . . . . . . . . . . .  66
       10.1.1.  mibObjectValueInteger  . . . . . . . . . . . . . . .  66
       10.1.2.  mibObjectValueOctetString  . . . . . . . . . . . . .  67
       10.1.3.  mibObjectValueOID  . . . . . . . . . . . . . . . . .  67
       10.1.4.  mibObjectValueBits . . . . . . . . . . . . . . . . .  68
       10.1.5.  mibObjectValueIPAddress  . . . . . . . . . . . . . .  68
       10.1.6.  mibObjectValueCounter  . . . . . . . . . . . . . . .  69
       10.1.7.  mibObjectValueGauge  . . . . . . . . . . . . . . . .  69
       10.1.8.  mibObjectValueTime . . . . . . . . . . . . . . . . .  70
       10.1.9.  mibObjectValueUnsigned . . . . . . . . . . . . . . .  70
       10.1.10. mibObjectValueTable  . . . . . . . . . . . . . . . .  71
       10.1.11. mibObjectValueSequence . . . . . . . . . . . . . . .  71
       10.1.12. mibSubIdentifier . . . . . . . . . . . . . . . . . .  72
     10.2.  New mibFieldOption Information Elements  . . . . . . . .  72
       10.2.1.  mibObjectIdentifier  . . . . . . . . . . . . . . . .  72
       10.2.2.  mibIndexIndicator  . . . . . . . . . . . . . . . . .  73
       10.2.3.  mibCaptureTimeSemantics  . . . . . . . . . . . . . .  73
       10.2.4.  mibContextEngineID . . . . . . . . . . . . . . . . .  75
       10.2.5.  mibContextName . . . . . . . . . . . . . . . . . . .  75
     10.3.  New mibType Information Elements . . . . . . . . . . . .  75
       10.3.1.  mibObjectName  . . . . . . . . . . . . . . . . . . .  75
       10.3.2.  mibObjectDescription . . . . . . . . . . . . . . . .  76
       10.3.3.  mibObjectSyntax  . . . . . . . . . . . . . . . . . .  76
       10.3.4.  mibModuleName  . . . . . . . . . . . . . . . . . . .  77
   11. Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  77
   12. References  . . . . . . . . . . . . . . . . . . . . . . . . .  77
     12.1.  Normative References . . . . . . . . . . . . . . . . . .  77
     12.2.  Informative References . . . . . . . . . . . . . . . . .  78
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  79

1.  Introduction

   There is growing interest in using IPFIX as a push mechanism for
   exporting management information.  Using a push protocol such as
   IPFIX instead of a polling protocol like SNMP is especially
   interesting in situations where large chunks of repetitive data need
   to be exported periodically.





Aitken, et al.          Expires September 5, 2014               [Page 3]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   While initially targeted at different problems, there is a large
   parallel between the information transported via IPFIX and SNMP.
   Furthermore, certain Management Information Base (MIB) objects are
   highly relevant to flows as they are understood today.  For example,
   in the IPFIX information model [RFC7012], Information Elements coming
   from the SNMP world have already been specified, e.g.,
   ingressInterface and egressInterface both refer to the ifIndex
   defined in [RFC2863].

   In particular the Management Information Base was designed as a
   separate system of definitions.  There are no dependencies between
   the SMIv2 [RFC2578] and the SNMP protocol.  This opens up the
   possibility to exporting Objects defined via the MIB over other
   protocols.

   Rather than mapping existing MIB objects to IPFIX Information
   Elements on a case by case basis, it would be advantageous to enable
   the export of any existing or future MIB objects as part of an IPFIX
   Data Record.  This way, the duplication of data models [RFC3444],
   both as SMIv2 MIB objects and IPFIX Information Elements, out of the
   same information model [RFC3444] would be avoided.

   This document specifies a method for creating IPFIX Option Templates
   that are used to export the extra data required to describe MIB
   variables (see Section 4.1).

   This allows IPFIX Templates to contain any combination of fields
   defined by traditional IPFIX Information Element(s) and/or MIB Object
   Identifier(s).  The MIB Object Identifiers can reference either non-
   indexed or indexed MIB object(s).  Enterprise-specific MIB Object
   Identifiers are also supported.

   This document also defines three standard Option Templates (see
   Section 4.2) that are used as part of the mechanism to export MIB
   Object meta data:

   o  mibFieldOption (Section 4.2.1)

   o  mibSubFieldOption (Section 4.2.2)

   o  mibTypeOption (Section 4.2.3)

   This document defines three classes of new IPFIX Information
   Elements.  These are used to export values from the MIB, export
   required Object Identifier information, and optionally export type
   data from a MIB Module:

   o  mibObjectValue Information Elements (Section 10.1)



Aitken, et al.          Expires September 5, 2014               [Page 4]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   o  mibFieldOption Information Elements (Section 10.2)

   o  mibTypeInformation Information Elements (Section 10.3)

   The Architectural Overview is shown in Figure 1.


                                       +------------------------+
                                       | mibFieldOptionTemplate |
                                       +------------------------+
                                                   |
                                                   V
          +----------------------+     +------------------------+
          |   Data Template      |     | mibFieldOption         |
          |                      |     |                        |
          |   mibObjectValue     |<----| OIDs                   |
          | Information Elements |<----| OIDs                   |
          +----------------------+     +------------------------+
                  |
                  V
          +----------------------+
          |   Data Flows         |
          |                      |
          |   MIB Object Values  |
          +----------------------+

                     Figure 1: Architectural Overview

   One common type defined in the SMIv2 are SEQUENCEs or conceptual
   tables.  It is desirable that exporting a complete or partial
   SEQUENCE is simple and efficient.  This is accomplished by using
   IPFIX Structured Data [RFC6313] to reduce repetition of Object
   Identifier and indexing data.

   To allow the use of individual columnar Objects that make up a
   Sequence, a method is also specified to detail that a MIB Object is
   indexed by other fields in the same Data Flow.  For an individually
   indexed mibObjectValue the INDEX fields are sent as any of the other
   fields in the same Record and may be mibObjectValue Information
   Element or other existing Information Element.

   Also, in some cases Exporters may not want (or be able) to export the
   full information on how the MIB objects being exported are indexed.
   This may be because the MIB Object is being used purely as type
   information or the Exporting process may not have knowledge of the
   indexing required.  Therefore providing index information for
   Columnar Objects is optional.




Aitken, et al.          Expires September 5, 2014               [Page 5]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   A set of example use cases illustrates how these specifications can
   be used.

2.  Motivation and Architectural Model

   The intended scope of this work is the addition of MIB variable(s) to
   IPFIX Information Elements in Data Records, in order to complement
   the Records with useful and already standardized information.  More
   specifically, the case of an existing Template Record which needs to
   be augmented with some MIB variables whose index was already present
   in the Template Record as an IPFIX Information Element: typically, a
   7-tuple Record containing the ingressInterface Information Element,
   augmented by interface counters [RFC2863], which are indexed by the
   respective ingressInterface values in the Data Records.

   Most Flow Records contain the ingressInterface and/or the
   egressInterface Information Elements.  These Information Elements
   carry an ifIndex value, a MIB object defined in [RFC2863].  In order
   to retrieve additional information about the identified interface, a
   Collector could simply poll relevant objects from the device running
   the Exporter via SNMP.  However, that approach has several problems:

   o  It requires implementing a mediation function between two data
      models, i.e., MIB objects and IPFIX Information Elements.

   o  Confirming the validity of simple mappings (e.g., ifIndex to
      ifName) requires either checking on a regular basis that the
      Exporter's network management system did not reload, or imposing
      ifIndex persistence across an Exporter's reload.

   o  Synchronization problems occur since counters carried in Flow
      Records and counters carried in SNMP messages are retrieved from
      the Exporter at different points in time and thus cannot be
      correlated.  In the best case, assuming very tight integration of
      an IPFIX Collector with and SNMP polling engine, SNMP data is
      retrieved shortly after Data Records have been received, which
      implies a delay of the sum of the active or inactive timeouts (if
      not null) plus the time to export the Flow Record to the
      Collector.  If, however, the SNMP data is retrieved by a generic
      Network Management Station (NMS) polling interface statistics,
      then the time lag between IPFIX counters and SNMP counters can be
      significantly higher.

   This draft does not specify SNMP notifications, even if the
   specifications in this document could potentially allow this.






Aitken, et al.          Expires September 5, 2014               [Page 6]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   Since IPFIX is a push mechanism, initiated from the Exporter with no
   acknowledgment method, this specification does not provide the
   ability to execute configuration changes.

   The Distributed Management Expression MIB [RFC2982], which is a
   mechanism to create new MIB variables based on the content of
   existing ones, could also be advantageous in the context of this
   specification.  Indeed, newly created MIB objects (for example, the
   link utilization MIB variable), created with the Distributed
   Management Expression MIB [RFC2982] could nicely complement Data
   Records.

   Another advantage of exporting MIB objects via IPFIX is that IPFIX
   would benefit from an extended series of types to be exported.  The
   simple and application-wide data types specified in SMIv2 [RFC2578],
   along with a new Textual Conventions, can be exported within IPFIX
   and then decoded in the Collector.  However, since a Textual
   Convention can contain almost any name, this document does not extend
   the existing informationElementDataType registry [RFC5610].

   The overall architectural model is depicted in Figure 2.  The IPFIX
   Exporter accesses the device's instrumentation, which follows the
   specifications contained in MIB modules.  Other management interfaces
   such as NETCONF or the device's Command Line Interface (CLI) may
   provide access to the same instrumentation.

                +------+  +-------+  +.........+  +.....+
                | SNMP |  | IPFIX |  : NETCONF :  : CLI :
                +------+  +-------+  +.........+  +.....+
                    |         |           |          |
              +--------------------------------------------+
              | Instrumentation (specified in MIB modules) |
              +--------------------------------------------+

                       Figure 2: Architectural Model

3.  Terminology

   IPFIX-specific terminology (Information Element, Template, Template
   Record, Options Template Record, Template Set, Collector, Exporter,
   Flow Record, etc.) used in this document is defined in Section 2 of
   [RFC7011].  As in [RFC7011], these IPFIX-specific terms have the
   first letter of a word capitalized.

   This document prefers the more generic term "Data Record" (as opposed
   to "Flow Record") in relation to the export of MIB objects.

   MIB Object Identifier (MIB OID)



Aitken, et al.          Expires September 5, 2014               [Page 7]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      An ASCII character sequence of decimal non-negative sub-identifier
      values.  Each sub-identifier value MUST NOT exceed 2^32-1
      (4294967295) and MUST NOT have leading zeros.  Sub-identifiers are
      separated by single dots and without any intermediate whitespace.

   MIB Object Identifier Information Element

      An IPFIX Information Element ("mibObjectIdentifier") which denotes
      that a MIB Object Identifier (MIB OID) is exported in the
      (Options) Data Record.  See Section 10.2.1.

   SMIv2 Terminology

      The key words "SEQUENCE", "SEQUENCE OF", "INDEX" and "AUGMENTS" in
      this document are to be interpreted as described in SMIv2
      [RFC2578]

   mibObjectValue

      Refers to any and all of the mibObjectValue Information Elements
      generically.  Any restriction or requirement in this document that
      refers to mibObjectValue applies to the following Information
      Elements defined in Section 10.1: mibObjectValueInteger,
      mibObjectValueOctetString, mibObjectValueOID, mibObjectValueBITS,
      mibObjectValueCounter, mibObjectValueGauge, mibObjectValueTime,
      mibObjectValueUnsigned, mibObjectValueTable and
      mibObjectValueSequence.

   IE

      Used as a shorthand for "Information Element" [RFC7011] in the
      figures.

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   [RFC2119].

4.  MIB Object Value Information Elements and the MIB Field Option
    Templates

   This document defines new mibObjectValue Information Elements (in
   Section 10.1).  These are used to export MIB Objects as part of
   standard IPFIX Templates.  The mibObjectValue Information Elements
   contains the actual data values.

   The Exporting process MAY extract the data values for mibObjectValue
   fields from a Process that resides on the same device or MAY capture/



Aitken, et al.          Expires September 5, 2014               [Page 8]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   create the data required to match the definition of the MIB Object.
   In particular exporting a value from a MIB does not imply that the
   SNMP process on the Device supports that MIB.

   The main issue that arises from exporting MIBs in IPFIX is that MIB
   Object Identifiers do not fit into the standard IPFIX Template format
   [RFC7011], as this only provides a 16-bit Information Element
   identifier and the length of the Information Element.  The values of
   a MIB Object could be exported using a MIB specific Information
   Element but without exporting the actual MIB OID the full type of the
   data would be unknown and every MIB Field would appear identical.
   Without exporting the OID the contents of the MIB field would be
   incomprehensible data to a Collector.

   For the values in the mibObjectValue fields to be understandable,
   more meta information about the mibObjectValue fields must be sent as
   part of the IPFIX export.  The required minimum to understand each
   field is the OID as defined in Section 4.2.1.

   One approach to this problem would be to extend the IPFIX standard to
   allow extended field specifiers so metadata about Fields can be
   included in Data Templates.  This would however require a new version
   of the IPFIX standard which may not be backwards compatible.
   However, future versions of IPFIX MAY export the required MIB
   metadata as part of newer set versions.

   This document defines a mibFieldOption Template to export the extra
   meta information required for a mibObjectValue field.  This is a
   standard IPFIX Option Template Set that MUST include a minimum set of
   required fields (see Section 4.2.1) and MAY include extra fields to
   provide more meta information about one of the mibObjectValue fields.

   The mibFieldOption export is used to tell the Collecting process: for
   the following (template, field) the MIB Object has this OID.

4.1.  MIB Field Option Architecture

   Four IPFIX Sets are used together to export a Flow using the
   mibObjectValue Field.  These are:

   1.  A Template Set which includes the mibObjectValue field.

          The Template Set informs the Collector that a MIB Object Value
          of length n will be exported.  This Set may be also be an
          Option Template Set.

   2.  A mibFieldOption Template Set




Aitken, et al.          Expires September 5, 2014               [Page 9]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


          The mibFieldOption Template describes which metadata will be
          sent for each mibObjectValue being exported.

   3.  A mibFieldOption Data Set

          The mibFieldOption Data Set includes the metadata for each MIB
          object (i.e. the mibObjectIdentifier or mibSubIdentifier).
          The metadata about the mibObjectValue only needs to be resent
          as per normal Template refreshes or resends.

   4.  A Data Set.

          The Data Set contains only the actual data extracted from the
          MIB or described by the MIB.

   Figure 3 shows the IPFIX Message structure for a MIB Field in a
   Template Set.

          +----------------------------------------------------+
          | IPFIX Message Header                               |
          +----------------------------------------------------+
          | Template Set        (A)                            |
          +----------------------------------------------------+
          | Option Template Set (B) (mibFieldOption Template)  |
          +----------------------------------------------------+
          | Data Set            (B) (mibFieldOption Data)      |
          +----------------------------------------------------+
          | Data Set            (A)                            |
          +----------------------------------------------------+

    Figure 3: IPFIX Message structure for a MIB Field in a Template Set

   The mibFieldOption Template defines mibFieldOption Records.  The
   mibFieldOption Data record annotate the Data Template with
   mibObjectValue metadata.  Together the Data Template and
   mibFieldOption define the Data Records that will be exported.

   The Data Records (A) have a dependency on the two Templates and the
   mibFieldOption Data Records.

   More Data Sets that use the mibObjectValue can then be send in
   subsequent packets.

   Figure 4 shows the relationships between the Sets discussed above.







Aitken, et al.          Expires September 5, 2014              [Page 10]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


                                            +--------------------------+
                                            |mibFieldOption Template(B)|
                                            +--------------------------+
                                            |(templateId, elementIndex)|
                                            +--------------------------+
                                            |        mibOID            |
                                            +--------------------------+
                                                     |
                                                     | Defines
                                                     V
    +------------------------+              +--------------------------+
    |    Data Template (A)   |              | mibFieldOption Data (B)  |
    +------------------------+              +--------------------------+
    |Field 0 - regular IE    |              |                          |
    +------------------------+              +--------------------------+
    |Field 1-mibObjectValue  | <----------- | (X,1) =  OID             |
    +------------------------+   Annotates  +--------------------------+
    |Field 2-mibObjectValue  | <----------- | (X,2) =  OID             |
    +------------------------+              +--------------------------+
                |                                    |
                |------------------------------------/
                |
                | Defines
                |
                V
    +------------------------+
    |    Data Records  (A)   |
    |------------------------|
    | Field 0 data           |
    +------------------------+
    | Field 1 data           |
    +------------------------+
    | Field 2 data           |
    +------------------------+

                   Figure 4: Relationships between Sets

4.2.  MIB Field Options - Specifications and Required Fields

   For each mibObjectValue field that is defined in an IPFIX Template, a
   single mibFieldOption Data Record MUST be exported that provides the
   required minimum information to define the MIB object that is being
   exported (see Section 4.2.1).

   This mibFieldOption Data is defined in a template referred to in this
   document as a mibFieldOption Template with the format specified in
   Section 4.4.




Aitken, et al.          Expires September 5, 2014              [Page 11]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   A Template that uses a mibObjectValue Field MUST be exported prior to
   the corresponding mibFieldOption Data Records.  It is RECOMMENDED
   that these are all exported in the same IPFIX Message.  Note that
   this places an implicit size constraint on the export.

   These MUST all be exported prior to the corresponding Data Records
   which depend upon them.  i.e. referring to Figure 1, the export order
   MUST be:

   1.  Data Template for mibObjectValue Information Elements

   2.  mibFieldOptionTemplate Template

   3.  mibFieldOption OID Data Records

   4.  MIB Object Value Data Records

   Note that the ID of an identical mibFieldOptionTemplate which has
   already been exported MAY be reused without exporting the Template
   again.

4.2.1.  mibFieldOption

   Three fields are REQUIRED to unambiguously export a standalone
   mibObjectValue Field with a mibFieldOption:

   o  (scope) templateId [IANA-IPFIX]

   o  (scope) informationElementIndex [IANA-IPFIX]

   o  mibObjectIdentifier (Section 10.2.1)

   These are the minimum fields required in a mibFieldOptionTemplate
   (see Section 4.4.2).

   While the following are optional, they are nevertheless RECOMMENDED
   in certain circumstances as they are per field:

   o  mibCaptureTimeSemantics (Section 10.2.3)

   o  mibIndexIndicator (Section 10.2.2)

   o  mibContextEngineID (Section 10.2.4)

   o  mibContextName (Section 10.2.5)






Aitken, et al.          Expires September 5, 2014              [Page 12]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


4.2.2.  mibSubFieldOption

   To export a mibObjectValue that is contained in a
   mibObjectValueSequence Field with a mibSubFieldOption three fields
   are REQUIRED:

   o  (scope) templateId [IANA-IPFIX]

   o  (scope) informationElementIndex [IANA-IPFIX]

   o  mibSubIdentifier (Section 10.1.12)

   These are the minimum fields required in a mibSubFieldOptionTemplate
   (see Section 4.8.2).

   While the following are optional, they are nevertheless RECOMMENDED
   in certain circumstances as they are per field:

   o  mibCaptureTimeSemantics (Section 10.2.3)

   o  mibIndexIndicator (Section 10.2.2)

   o  mibContextEngineID (Section 10.2.4)

   o  mibContextName (Section 10.2.5)

4.2.3.  mibTypeOption

   There are also fields that provide type information from a MIB Object
   definition that MAY be exported to a Collecting Process.

   Since these values are statically defined in the MIB they are not
   expected to change frequently.  However the additional information
   about the MIB may help a Collecting Process that does not have access
   to the MIB.

   The mibObjectSyntax field is RECOMMENDED as it provides the full type
   of the field as specified in the MIB definition and will contain any
   Textual Conventions.

   To export a mibSubTypeOption, two fields are RECOMMENDED:

   o  (scope) mibObjectIdentifier Section 10.2.2

   o  mibObjectSyntax (Section 10.3.3)

   The Exporting process MAY also include the following extra Fields:




Aitken, et al.          Expires September 5, 2014              [Page 13]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   o  mibObjectName (Section 10.3.1)

   o  mibObjectDescription (Section 10.3.2)

   o  mibModuleName (Section 10.3.4).

4.3.  IPFIX and MIB Data Model

   [RFC2578] species that the SYNTAX clause for a MIB Object defines the
   abstract data structure of an Object and must contain:

   "The data structure must be one of the following: a base type, the
   BITS construct, or a textual convention.  (SEQUENCE OF and SEQUENCE
   are also possible for conceptual tables, see section 7.1.12)."
   [RFC2578] section-7.1

   For each of these the options this draft specifies exactly which
   mibObjectValue to use.

   If a MIB Object to be exported is a Textual Convention the definition
   of the Textual Convention must be consulted and the SYNTAX clause
   used to determine the correct base type.  This may recurse if the
   Textual Convention is defined in terms of another Textual Convention
   but this should end at a base type.

   If the SYNTAX clause contains a Textual Convention or Subtyping the
   mibObjectSyntax Information Element SHOULD be used to export this
   detail to the Collecting Process.

   The Options for the SYNTAX are then mapped as follows:





















Aitken, et al.          Expires September 5, 2014              [Page 14]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   +-----------------+---------------------+---------------------------+
   | RFC2578 Section | SYNTAX              | mibObjectValue            |
   +-----------------+---------------------+---------------------------+
   | 7.1.1           | INTEGER/Integer32   | mibObjectValueInteger     |
   | 7.1.2           | OCTET STRING        | mibObjectValueOctetString |
   | 7.1.3           | OBJECT IDENTIFIER   | mibObjectValueOID         |
   | 7.1.4           | The BITS construct  | mibObjectValueBits        |
   | 7.1.5           | IpAddress           | mibObjectValueIPAddress   |
   | 7.1.6           | Counter32           | mibObjectValueCounter     |
   | 7.1.7           | Gauge32             | mibObjectValueGauge       |
   | 7.1.8           | TimeTicks           | mibObjectValueTime        |
   | 7.1.9           | Opaque              | mibObjectValueOctetString |
   | 7.1.10          | Counter64           | mibObjectValueCounter     |
   | 7.1.11          | Unsigned32          | mibObjectValueUnsigned    |
   | 7.1.12          | SEQUENCE            | mibObjectValueSequence    |
   | 7.1.12          | SEQUENCE OF         | mibObjectValueTable       |
   +-----------------+---------------------+---------------------------+

               Table 1: SMIv2 SYNTAX -> mibObjectValue types

   Values are encoded as per the standard IPFIX encoding of Abstract
   Data Types.  The only new encoding references in this document is
   that Object Identifiers (OID) will be encoded as per ASN.1/BER [BER]
   in an octetArray.

   The mibObjectValue and mibObjectIdentifier Information Elements are
   standard IPFIX fields.  Therefore the E bit of the mibObjectValue or
   mibObjectIdentifier Information Elements is set to "0".

   This holds true even if the data carried inside the mibObjectValue or
   mibObjectIdentifier may be related to an enterprise specific MIB.
   The OID itself encodes if the Object is in an Enterprise specific MIB
   Module.

4.4.  MIB Field Option Template Formats

4.4.1.  Data Template containing a mibObject Field

   The Template Record Format of a Template that uses a mibObjectValue
   field is identical to the standard IPFIX Format as defined in
   [RFC7011], so the mibObjectValue field is specified using standard
   IPFIX Field Specifiers as in [RFC7011].

   The only extra requirement on a Template Record using mibObjectValue
   Fields is that it MUST export the required metadata specified for
   EACH mibObjectValue Field (see Section 4.2.1).  Multiple
   mibFieldOption that refer to a single mibObjectValue MUST NOT be
   exported.



Aitken, et al.          Expires September 5, 2014              [Page 15]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   There is a one to one mapping between each mibObjectValue field and a
   mibFieldOption.

   A mibFieldOption Template and corresponding Data Record MUST be
   exported to provide the minimum required metadata.

   Figure 5 shows an IPFIX Template Set using a mibObjectValue Field.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 2           |          Length               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID             |         Field Count = 2       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = Existing IPFIX Field   |        Field Length           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = mibObjectValueInteger  |        Field Length (mib)     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

          Figure 5: IPFIX Template Set using mibObjectValue Field

   Where:

      mibObjectValueInteger

         One of the mibObjectValue IPFIX Information Elements that
         denotes that a MIB Object data (i.e, the value of a MIB Object)
         will be exported in the (Options) Template Record.  The
         specific type of the data in this case would be an Integer.
         Any other mibObjectValue could be used to export a different
         MIB object type.  When a mibObjectValue Information Element is
         used, the MIB Object Identifier ("mibObjectIdentifier") MUST be
         exported via a mibFieldOption or by other means.  See
         Section 4.2.1.

      Field Length (mib)

         The length of the encoded MIB Object data in the corresponding
         Data Records, in octets.  The definition is as [RFC7011].  Note
         that the Field Length can be expressed using reduced size
         encoding per [RFC7011].  Note that the Field Length may be
         encoded using variable-length encoding per [RFC7011].








Aitken, et al.          Expires September 5, 2014              [Page 16]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


4.4.2.  mibFieldOption Template

   The mibFieldOption Template is a Standard Option Template which
   defines the Fields that will be exported to provide enough metadata
   about a mibObjectValue so that the Collector can tie the data values
   in the mibObjectValue back to the definition of the MIB Object.

   All mibFieldOption Templates MUST contain the following Fields:

   o  (scope) templateId [IANA-IPFIX]

   o  (scope) informationElementIndex [IANA-IPFIX]

   o  mibObjectIdentifier or mibSubIdentifier

   A mibFieldOption Template MAY specify other Information Elements as
   part of the mibFieldOption template.

   This document defines some common optional Information Elements which
   allow exporting more information about MIB indexing, extra data from
   the MIB and the semantics of how the mibObjectValue was collected
   prior to export.  See Section 10.2.

   Figure 6 shows the required fields for the MIB Field Option Template
   Format.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID             |        Field Count = 3        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field Count = 2       |0| IE = templateId             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = informationElementIndex|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibObjectIdentifier    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

       Figure 6: MIB Field Option Template Format - Required Fields

   Where:

      templateId




Aitken, et al.          Expires September 5, 2014              [Page 17]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


         The first scope field is an IPFIX Information Element which
         denotes that a Template Identifier will be exported as part of
         the mibFieldOption Data Record.  This Template Identifier
         paired with an index into that template, the
         "informationElementIndex" field, uniquely references one
         mibObjectValue Field being exported.

      informationElementIndex

         The second scope field is an IPFIX Information Element which
         denotes a zero based index into the fields defined by a
         Template.  When paired with a "templateId" the Record uniquely
         references one mibObjectValue Field being exported.

      mibObjectIdentifier

         An IPFIX Information Element which denotes the a MIB Object
         Identifier for the mibObjectValue exported in the (Options)
         Template Record.

         When a MIB Object Value Information Element is used, the MIB
         Object Identifier MUST be specified in the mibFieldOption
         Template Record or specified by other means.

         The Object Identifier is encoded in the IPFIX data record in
         ASN.1/BER [BER] format.

         Variable-length encoding SHOULD be used with the
         mibObjectIdentifier so that multiple different length MIB OIDs
         can be exported efficiently.  This will also allow reuse of the
         mibFieldOption Template.

4.4.3.  mibFieldOption Data Records

   The mibFieldOption Data Records conform to the Template Specification
   in the mibFieldOption Template.  There may be multiple mibFieldOption
   Records exported.

   The Collecting Process MUST store all received mibFieldOption Data
   information for the duration of each Transport Session, because the
   Collecting Process will need to refer to the extra meta information
   to fully decode each mibObjectValue field.

   Figure 7 shows the format of the exported mib Field Option detailing
   the metadata that will be exported to match the Template in Figure 6.






Aitken, et al.          Expires September 5, 2014              [Page 18]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID               |          Length = N           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId             |  informationElementIndex      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   VLEN        |                  mibObjectIdentifier ...      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |         ... mibObjectIdentifier continued ...                 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId             |  informationElementIndex      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |    VLEN       |  mibObjectIdentifier  ...                     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |         ... mibObjectIdentifier continued ...                 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

              Figure 7: Format of mibFieldOption Data Record

4.4.4.  Option Template containing a mibObject Field

   The Option Template Record Format of a Template that uses the
   mibObjectValue field is identical to the standard Format as defined
   in [RFC7011].  The mibObjectValue field is specified using standard
   Field Specifiers as in [RFC7011].

   A mibObjectValue Field can be a Scope Field or a Non Scope Option
   Field.

   The only extra requirement on a Option Template Record using
   mibObjectValue Fields is that it MUST export the required metadata
   specified in Section 4.2.1 for EACH mibObjectValue Field.

   An IPFIX Option Template Record MUST export a mibFieldOption Template
   and Data Record to provide the minimum required metadata for each
   mibObjectValue Field.

   Figure 8 shows an IPFIX Option Template Set using a Non Scope
   mibObjectValueInteger Field, while Figure 9 shows an IPFIX Option
   Template Set using a Scope mibObjectValueInteger Field.










Aitken, et al.          Expires September 5, 2014              [Page 19]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID             |         Field Count = 2       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |      Scope Field Count = 1    |0| IE = Existing IPFIX Field   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length           |0| IE = mibObjectValueInteger  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

           Figure 8: IPFIX Option Template Set using a Non Scope
                        mibObjectValueInteger Field

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID             |         Field Count = 2       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |      Scope Field Count = 1    |0| IE = mibObjectValueInteger  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length           |0| IE = Existing IPFIX Field   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

             Figure 9: IPFIX Option Template Set using a Scope
                        mibObjectValueInteger Field

4.4.5.  mibFieldOption Template with Semantics Fields

   A mibFieldOption Template MAY specify that extra Information Elements
   will be exported to record how the mibObjectValue was collected.

   Another alternative to export this information is to use one of the
   existing IPFIX observationTime* elements [IANA-IPFIX] to specify
   exactly when the value was collected.

   Figure 10 shows the mibFieldOption Format for a non-indexed Field
   with Semantic Data.






Aitken, et al.          Expires September 5, 2014              [Page 20]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID             |        Field Count = 4        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field Count = 2       |0| IE = templateId             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = informationElementIndex|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibObjectIdentifier    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |0| IE = mibCaptureTimeSemantics|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 1       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

       Figure 10: mibFieldOption Format for a non-indexed Field with
                               Semantic Data

   Where:

      mibCaptureTimeSemantics

         The MIB Capture Time Semantics IPFIX Information Element, as
         defined in Section 10.2.3.

         It is RECOMMENDED to include this field when exporting a
         mibObjectValue that specifies counters or statistics, in
         particular for situations with long lived Flows.

4.4.6.  mibFieldOption Template with extra MIB Object Details

   The MIB OID exported within the mibObjectIdentifier IPFIX Information
   Element provides a reference to a MIB that will fully describe the
   MIB Variable being Exported.

   However an Exported Process MAY decide to include some extra MIB
   Fields to more fully describe the mibObjectValue.

   This can be helpful if the Collecting Process may not have access to
   the MIB.  It also allows the IPFIX Field Types to be extended with
   any MIB Variable already defined purely through IPFIX.

   The exporting process can either include the extra object details
   fields as part of the mibFieldOption Template, or export a separate




Aitken, et al.          Expires September 5, 2014              [Page 21]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   Option Template and Data that maps MIB OIDs in mibObjectIdentifier
   Fields to the object details.

   If a single or few fields are being exported then including extra
   type data in the mibFieldOption export will be more efficient.

   The mibFieldOption Format for a non-indexed Field with extra MIB
   object details is shown in Figure 11.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID             |        Field Count = 7        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field Count = 2       |0| IE = templateId             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = informationElementIndex|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibObjectIdentifier    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |0| IE = mibObjectSyntax        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |0| IE = mibObjectName          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |0| IE = mibObjectDescription   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |0| IE = mibModuleName          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    Figure 11: mibFieldOption Format for a non-indexed Field with extra
                            MIB object details

   Where:

      mibObjectSyntax

         The MIB SYNTAX clause string for a mibObjectIdentifier, which
         contains the SYNTAX string as defined for the MIB Object
         referenced by the MIB OID.  This will either be the name of one
         of the primitive "base types" from [RFC2578] or a Textual
         Convention name.

         The SYNTAX clause may also include subtyping or specific
         enumerations for known values or flags.



Aitken, et al.          Expires September 5, 2014              [Page 22]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


         Note that a separate mibObjectSyntax Information Element is
         required (rather than extend the existing [RFC5610]
         informationElementDataType registry) because the SYNTAX clause
         could contain almost any name.

      mibObjectName

         The textual name a mibObjectIdentifier Object.

      mibObjectDescription

         The textual description for a mibObjectIdentifier.

      mibModuleName

         The textual name of the MIB which defines a MIB OID Object.

   The MIB details can be exported as an standard IPFIX Option export
   [RFC7011] as shown in Figure 12.  This may be more efficient as the
   bulk of this data is text based and SHOULD be exported only once to
   the Collecting Process if there are many MIB objects being exported.
   This prevents this large textual data being included for every use of
   a mibObjectValue field.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID             |        Field Count = 5        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field Count = 1       |0| IE = mibObjectIdentifier    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |0| IE = mibObjectSyntax        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |0| IE = mibObjectName          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |0| IE = mibObjectDescription   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |0| IE = mibModuleName          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 12: Alternative mibObjectIdentifier Option Export with object
                                  details





Aitken, et al.          Expires September 5, 2014              [Page 23]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


4.5.  Use of field order in the MIB Field Option template

   The mibFieldOption export makes use of the informationElementIndex
   [IANA-IPFIX] to specify which field in the template that the metadata
   relates to, which avoids any ordering constraints on the data
   template.  The MIB fields in a IPFIX Template can be in any order in
   the export packet.  However, Fields used as an INDEX MUST be in the
   same order as specified in the MIB Sequence Object's INDEX clause.

   The informationElementIndex specifies which Field in the Template
   extra information is being provided for.

   This is analogous to standard IPFIX Template Sets which also specify
   the order of the fields and provide their type and size.

   If the template changes such that the order is different then the
   mibFieldOption data MUST be resent to reflect the new ordering.  A
   new Template ID MUST be used to reflect that the ordering has
   changed.  Older mibFieldOption details may refer to the incorrect
   field.

   A templateId [IANA-IPFIX] is only locally unique within a combination
   of a Observation Domain and Transport session.  As such each
   mibFieldOption can only refer to templateIds within the same
   Observation Domain and session.

4.6.  Identifying the SNMP Context

   Each MIB OID is looked up in a specific context, usually the default
   context.  If exporting a MIB OID value that isn't in the default
   context then the MIB context MUST be identified by including the
   mibContextEngineID Section 10.2.4 and mibContextName Section 10.2.5
   fields in the mibFieldOption Template and associated mibFieldOption
   data records, or be included in the same template as the
   mibFieldValue Field.

   This context data MUST be included for each field that is not in the
   default context.

   The context information MAY be exported as part of the Template that
   includes the mibObjectValue fields or the context information MAY be
   exported in the mibFieldOption that refers to the field.  Context
   fields exported in the same Template MUST take precedence over those
   that refer to the template.  Context fields MUST apply to all
   mibObjectValue fields in the same template and there MUST NOT be
   duplicates of mibContextName or mibContextEngineID in a Template.





Aitken, et al.          Expires September 5, 2014              [Page 24]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   So a mibFieldOption MAY specify no Context information, just the
   Context Engine ID or both the context engine and context name.  This
   allows the exported to export the bulk of data in the default context
   and only tag those required.

   Since the mibFieldOption applies for all the records of a Template
   using Context Fields in the mibFieldOption requires that each
   mibContextEngineID / mibContextName pair have its own Template.

4.7.  Template Management

   Templates are managed as per section 8 of [RFC7011] with the
   additional constraint that the mibFieldOption Template and Data
   Records MUST be exported in the same IPFIX Message as any (Option)
   Template Record that uses a mibObjectValue.

   If a Template using a mibObjectValue is resent for any reason the
   Records it depends on MUST be sent as well.

   If a Template is replaced with a new (Option) Template Record then a
   new mibFieldOption Data Record MUST be sent with the replacement
   referencing the new Template ID.

   An Exporting Process SHOULD reuse mibFieldOption Template IDs IFF the
   Templates are identical.  Each (Option) Template Record MUST still be
   accompanied by a copy of the mibFieldOption Template.

4.8.  Exporting Sequences

   There are three approaches for an IPFIX exporting process to export
   MIB SEQUENCE Objects (also known as conceptual tables).

   1.  Ignoring the indexing of the Columnar Object

   2.  Exporting Rows/Tables using structured data

   3.  Exporting individual indexed Column Objects

   Firstly, a columnar object may be used purely use as a data type.  In
   this case there is no indexing or relation to a sequence provided by
   the exporting process.

   Secondly, mibObjectValueSequence or mibObjectValueTable can be used
   to export partial/complete rows using [RFC6313] structured data.

   Thirdly, in a mixed option/data IPFIX/MIB template, the mib value can
   be indexed by other fields in the record.  In this case each field
   must specify which other field(s) in the template it's indexed by.



Aitken, et al.          Expires September 5, 2014              [Page 25]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


4.8.1.  Exporting Sequences - indexing

   This draft defines two forms of indexing that can be used for
   SEQUENCE MIB Objects.

   SEQUENCE based indexing is used solely by the mibObjectValueSequence
   Field.  Each SEQUENCE or row of the MIB Object corresponds to a
   single Flow Record.  The index Fields defined in the INDEX clause of
   the MIB Object MUST all be present the same order as the Scope
   fields.  This allows a simple table export of a MIB SEQUENCE without
   any extra fields required to indicate which fields are the INDEX.

   FIELD based indexing is used by having every mibObjectValue export a
   mibIndexIndicator to flag the required index fields.  This allows
   complex indexing or mixing of existing IPFIX Information Element with
   MIB Fields.  It also allows multiple MIB SEQUENCE values to be
   exported with complete indexing in one IPFIX Template.

4.8.2.  Exporting Sequences - mibObjectValueSequence

   The simplest approach to exporting a complete or partial MIB Sequence
   is done with the mibObjectValueSequence Information Element.

   This is a Structured Data subTemplateList Information Element.  The
   template specified MUST be an Option Template.  It also MUST have the
   INDEX fields for the SEQUENCE as Scope fields for the Option Export.

   An overview of this Architecture is given in Figure 13.  This shows
   that the full OID is exported for the mibObjectValueSequence field
   but that the columns contained only require the subIdentifier to be
   exported.  To make the diagram clearer the Templates for the
   mibFieldOption and mibSubFieldOption are not shown.



















Aitken, et al.          Expires September 5, 2014              [Page 26]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


            +-----------------------+      +-----------------+
            |   Data Template       |      | mibFieldOption  |
            |                       |      |                 |
            |mibObjectValueSequence |<-----| OID             |
            +-----------------------+      +-----------------+
              |
              | +---------------------+    +-----------------+
              | | Option Template     |    |mibSubFieldOption|
              | |                     |    |                 |
              | |Scope mibObjectValue*|<---| subIdentifiers  |
              | |      mibObjectValue*|<---| subIdentifiers  |
              | +---------------------+    +-----------------+
              |             |
              V             V
            +-------------------------+
            |  Data Flows             |
            |                         |
            |Sequence subTemplateList |
            +-------------------------+


           Figure 13: Architecture for Exporting Sequences with
                          mibObjectValueSequence

   The mibIndexIndicator is not required for each individual
   mibObjectValue field as mibObjectValueSequence provides a structure
   that includes the index details.

   When SEQUENCE based indexing is used all scope fields MUST be the
   INDEX Objects in the same order as defined in the MIB SEQUENCE being
   exported.

   The Full OID for the mibObjectValueSequence field MUST be exported.
   However the fields that are members of the Sequence need not have the
   full OID exported.  Instead the mibSubIdentifier Information Element
   can be used to document which entry in the Sequence the Field is.

   In this case the export flow will contain a complete or partial row
   from a table inside a single field of the record.

   There may be MIB Objects that are part of the INDEX but not part of
   the Sequence, for these the Exporter MUST provide the full OID in a
   mibObjectIdentifier field.

   So for a Sequence with the OID "1.2.3.4.5.6" the columnar objects
   "1.2.3.4.5.6.1" "1.2.3.4.5.6.2" can be exported with just a
   subIdentifier of "1" and "2" respectively.




Aitken, et al.          Expires September 5, 2014              [Page 27]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   The mibObjectValue fields exported using the mibObjectValueSequence
   export MUST all be Objects defined in the INDEX clause, Columnar
   Objects of the same SEQUENCE Object or Columnar Objects that AUGMENTS
   the same SEQUENCE.

   Figure 14 shows an IPFIX Template for a SEQUENCE, while Figure 15
   shows an IPFIX Option Template for a complete SEQUENCE with five
   columns and two INDEX fields.  Figure 16 shows the mibFieldOption
   Format for a SEQUENCE Object.  Figure 17 shows the mibSubFieldOption
   Format for the Fields inside the SEQUENCE.  Figure 18 shows the OID
   data for the SEQUENCE would be exported.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 2           |          Length               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 300       |         Field Count = 1       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = mibObjectValueSequence |         Field Length          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                 Figure 14: IPFIX Template for a SEQUENCE

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 301       |         Field Count = 5       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |      Scope Field Count = 2    |0| IE = mibObjectValue  INDEX1 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length           |0| IE = mibObjectValue  INDEX2 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length           |0| IE = mibObjectValue  COLUM3 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length           |0| IE = mibObjectValue  COLUM4 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length           |0| IE = mibObjectValue  COLUM5 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 15: IPFIX Option Template for a mibObjectValueSequence with 5
                        columns and 2 INDEX fields





Aitken, et al.          Expires September 5, 2014              [Page 28]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 302       |        Field Count = 3        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field Count = 2       |0| IE = templateId             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = informationElementIndex|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibObjectIdentifier    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

          Figure 16: mibFieldOption Format for a SEQUENCE Object

   Where:

      templateId

         The templateId for the MIB Option that will be exported.

      mibObjectIdentifier

         The MIB OID for the SEQUENCE that is being exported with this
         mibSequenceOption.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 303       |        Field Count = 3        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field Count = 2       |0| IE = templateId             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = informationElementIndex|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibSubIdentifier       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

         Figure 17: mibSubFieldOption Format for a SEQUENCE Object

   Where:



Aitken, et al.          Expires September 5, 2014              [Page 29]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      templateId

         The templateId used will be for the Template referred to in the
         subTemplateList of the mibObjectValueSequence that will be
         exported.

      mibSubIdentifier

         The sub identifier that specifies the columnar object's ID
         within the Sequence.


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | Set ID = 302 (mibFieldOption) |          Length = N           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId = 300       |  informationElementIndex      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   VLEN        |                  mibObjectIdentifier ...      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |         ... mibObjectIdentifier continued ...                 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Set ID=303 (mibSubFieldOption) |          Length = N           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId = 301       |  informationElementIndex      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  mibSubIdentifier             |        templateId = 301       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  informationElementIndex      |  mibSubIdentifier             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId = 301       |  informationElementIndex      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  mibSubIdentifier             |        templateId = 301       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  informationElementIndex      |  mibSubIdentifier             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId = 301       |  informationElementIndex      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  mibSubIdentifier             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

             Figure 18: mibOption Data Record for the Sequence

   Where:




Aitken, et al.          Expires September 5, 2014              [Page 30]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      mibObjectIdentifier

         Will contain the OID for the sequence as a whole.

      mibSubIdentifier

         The mibSubIdentifier fields will contain the extra Sub
         Identifier that when added to the OID for the sequence give the
         full OID for the Object.

4.8.3.  Exporting Sequences - Augments

   SMIv2 defines Sequences as either having an INDEX clause or an
   AUGMENTS clause.  Sequence definitions with an AUGMENTS clause extend
   an existing base Sequence with an INDEX clause.  It is not defined as
   possible in SMIv2 to AUGMENT a Sequence that itself has an AUGMENTS
   clause.  The base table and the augmentation have an identical INDEX.

   Since augmentations allow adding extra columns to existing tables it
   is beneficial to be able to support them easily in IPFIX exports of
   Sequences.

   The mibObjectValueSequence OID MAY refer either to the base table
   with the INDEX clause, or to a Sequence with an AUGMENTS clause.  The
   subIdentifiers in any mibSubFieldOption MUST always refer to the OID
   exported for the mibObjectValueSequence field.

   If the mibObjectValueSequence OID refers to a base table then any
   extra columns from Sequences with an AUGMENTS clause MUST have their
   full OID exported.

   If the mibObjectValueSequence OID refers to a Sequence that augments
   another Sequence using the AUGMENTS clause then any MIB fields from
   the original table's INDEX or Columnar Objects MUST NOT use the
   mibSubIdentifier and MUST instead export the full OID in a
   mibObjectIdentifier.

   If the mibObjectValueSequence refers to an AUGMENTS Sequence the
   scope fields of the Template using in the subTemplateList MUST have
   the INDEX fields from the base table, in the same order as its scope.
   This is identical to the Scope field requirements for Sequences with
   an INDEX clause.

   This flexibility is provided so that the Sequence with the most
   columns can be exported using the more efficient mibSubIdentifier.
   For example exporting a complete set of augmentation columns would
   only require the full OIDs for the MIB objects in the INDEX.




Aitken, et al.          Expires September 5, 2014              [Page 31]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   It is possible to export MIB OBJECT columns from multiple AUGMENTS
   Sequences.  If this is done then the base table SHOULD be used as the
   main OID for the mibObjectValueSequence.

4.8.4.  Exporting Sequence OF - mibObjectValueTable

   A list of mibObjectValueSequence Information Element can be exported
   in the mibObjectValueTable Information Element Section 10.1.10.  This
   allows a set of conceptual rows corresponding to a conceptual table
   to be exported as a single field.  This allows a complete set of rows
   to be used as a single entry with other information elements in a
   Template.

   The contents of a mibObjectValueTable MUST be mibObjectValueSequence
   entries that all refer to the same MIB Sequence.

   The complete OID for the 'SEQUENCE OF' MUST be exported for any
   mibObjectValueTable fields.  The complete OID for the contained
   mibObjectValueSequence MUST also be exported.

   Each individual mibObjectValueSequence includes in the
   mibObjectValueTable MUST follow the requirements in Section 4.8.2.

4.8.5.  Exporting Sequences - Explicit

   The other option for indexing a sequence is explicit indexing.  In
   this case there may be non index fields in the scope of the option
   export or there may be multiple mib objects being exported with
   different indexes.  In this case each mibObjectValue field requires
   the mibIndexIndicator with the bits set for the fields that are used
   to index that individual Object.  The index fields MUST be in the
   'correct' order as defined in the SEQUENCE that the columnar object
   is a member of.

   If a mibObjectValue field that is being indexed using
   mibIndexIndicator is being used as an Option Template scope field,
   then all fields used to index that field MUST also be scope fields.

   Figure 19 shows the mibFieldOption Format for an indexed MIB Object.












Aitken, et al.          Expires September 5, 2014              [Page 32]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID             |        Field Count = 4        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field Count = 2       |0| IE = templateId             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = informationElementIndex|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibIndexIndicator      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibObjectIdentifier    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

        Figure 19: mibFieldOption Format for an indexed MIB Object

   Where:

      mibIndexIndicator

         The MIB Index Indicator IPFIX Information Element which marks
         which fields in the record will act as INDEX values for the
         exported MIB Object.

         The index data for a mibObjectValue will be other fields
         contained in the same Data Record.  The mibIndexIndicator marks
         the Fields whose value(s) should be added to the
         mibObjectIdentifier to completely index the value.

         Elements used to index MIB Objects MUST be exported in the same
         order as they are specified in the INDEX field of the SEQUENCE
         they belong to.

         The Information Elements referred to by mibIndexIndicator could
         be any Information Element(s) that can be appended onto a the
         mibObjectIdentifier to index it fully.

         See '7.7.  Mapping of the INDEX clause' [RFC2578] for which MIB
         Objects will be suitable for indexing a Sequence and how they
         are appended to fully index an OID.

         If there are no other suitable Fields to index a
         mibObjectValue, then one or more mibSubIdentifier fields can be
         included in the (Options) Template Record and referred to by



Aitken, et al.          Expires September 5, 2014              [Page 33]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


         the mibIndexIndicator.  This allows the implementer some
         flexibility to export a MIB values with a simple Information
         Element that will always be an option.

5.  Example Use Cases

5.1.  Non-indexed MIB Object: Established TCP Connections

   The number of established TCP connections of a remote network device
   could be monitored by configuring it to periodically export the
   number of established TCP connections to a centralized Collector.  In
   this example, the Exporter would export an IPFIX Message every 30
   minutes that contained Data Records detailing the number of
   established TCP connections.

   The table of data that is to be exported looks like:

            +-------------------------+-----------------------+
            |        TIMESTAMP        | ESTABLISHED TCP CONN. |
            +-------------------------+-----------------------+
            | StartTime +   0 seconds |           10          |
            | StartTime +  60 seconds |           14          |
            | StartTime + 120 seconds |           19          |
            | StartTime + 180 seconds |           16          |
            | StartTime + 240 seconds |           23          |
            | StartTime + 300 seconds |           29          |
            +-------------------------+-----------------------+

                   Table 2: Established TCP Connections

   The Template Record for such a Data Record will detail two
   Information Elements:

   1.  flowStartSeconds from [RFC7012], Information Element 150: The
       absolute timestamp of the first packet of this Flow.

   2.  tcpCurrEstab from [RFC4022], Object ID "1.3.6.1.2.1.6.9": The
       number of TCP connections for which the current state is either
       ESTABLISHED or CLOSE-WAIT.

   Figure 20 shows the exported Template Set detailing the Template
   Record for exporting the number of established TCP connections (see
   Section 5.1).








Aitken, et al.          Expires September 5, 2014              [Page 34]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 2           |          Length = 16          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 400       |        Field Count = 2        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0|   IE = flowStartSeconds     |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0|   IE = mibObjectValueGauge  |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

              Figure 20: Example of tcpCurrEstab Template Set

   Figure 21 shows the exported mib Field Option detailing the metadata
   that will be exported about the mibObjectValueGauge Field in Template
   400 in Template Record (see Section 5.1).

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length = 26          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 401       |        Field Count = 3        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  Scope Field Count = 2        |0| IE = templateId             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = informationElementIndex|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibObjectIdentifier    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      Figure 21: Example of tcpCurrEstab mibFieldOption Template Set

   Figure 22 shows the exported mib Field Option detailing the metadata
   that will be exported about the mibObjectValueGauge Field in Template
   400 in Template Record (see Section 5.1).

   The OID for the MIB Object tcpCurrEstab from [RFC4022], Object ID
   "1.3.6.1.2.1.6.9", will be encoded in ASN.1/BER [BER] as
   '06072b060102010609' in the data record.  This will take nine bytes.








Aitken, et al.          Expires September 5, 2014              [Page 35]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 401         |          Length = 25          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId = 400       | informationElementIndex = 1   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  VLEN=9       | mibObjectIdentifier                           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |      ... mibObjectIdentifier =  "1.3.6.1.2.1.6.9"             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   ...  MIB Object Identifier  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

        Figure 22: Example of tcpCurrEstab mibFieldOption Data Set

   Figure 23 shows the start of the Data Set for exporting the number of
   established TCP connections (see Section 5.1).

































Aitken, et al.          Expires September 5, 2014              [Page 36]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 400         |         Length = 52           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                    StartTime +   0 seconds                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                              10                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                    StartTime +  60 seconds                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                              14                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                    StartTime + 120 seconds                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                              19                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                    StartTime + 180 seconds                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                              16                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                    StartTime + 240 seconds                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                              23                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                    StartTime + 300 seconds                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                              29                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                Figure 23: Example of tcpCurrEstab Data Set

5.2.  Enterprise Specific MIB Object: Detailing CPU Load History

   For the sake of demonstrating a enterprise-specific MIB object, a
   non-indexed MIB object is chosen for simplicity.  The CPU Usage of a
   remote network device could be monitored by configuring it to
   periodically export CPU usage information, i.e. the
   cpmCPUTotal1minRev from the proprietary CISCO-PROCESS-MIB, Object ID
   "1.3.6.1.4.1.9.9.109.1.1.1.1.7", to a centralized Collector.  In this
   example, the Exporter would export an IPFIX Message every 30 minutes
   that contained Data Records detailing the CPU 1 minute busy average
   at 1 minute intervals.

   The table of data that is to be exported looks like:






Aitken, et al.          Expires September 5, 2014              [Page 37]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


             +-------------------------+---------------------+
             |        TIMESTAMP        | CPU BUSY PERCENTAGE |
             +-------------------------+---------------------+
             | StartTime +   0 seconds |         10%         |
             | StartTime +  60 seconds |         14%         |
             | StartTime + 120 seconds |         19%         |
             | StartTime + 180 seconds |         16%         |
             | StartTime + 240 seconds |         23%         |
             | StartTime + 300 seconds |         29%         |
             +-------------------------+---------------------+

                          Table 3: CPU Usage Data

   The Template Record for such a Data Record will detail two
   Information Elements:

   1.  flowStartSeconds from [RFC7012], Information Element 150: The
       absolute timestamp of the first packet of this Flow.

   2.  a mibObjectValueGauge for cpmCPUTotal1minRev, the overall CPU
       busy percentage in the last one-minute period

   Figure 24 shows the exported Template Set detailing the Template
   Record for exporting CPU Load (see Section 5.2).

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 2           |          Length = 53          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 402       |        Field Count = 2        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0|   IE = flowStartSeconds     |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0|   IE = mibObjectValueGauge  |        Field Length = 1       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                Figure 24: Example of CPU Load Template Set

   Figure 25 shows the exported Template Set detailing the
   mibFieldOption Template Record for exporting CPU Load (see
   Section 5.2).  Note this identical to the mibFieldOption template
   given in Figure 21 so the same template could have been reused.








Aitken, et al.          Expires September 5, 2014              [Page 38]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length = 26          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 403       |        Field Count = 3        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  Scope Field Count  = 2       |0| IE = templateId             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = informationElementIndex|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibObjectIdentifier    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

        Figure 25: Example of CPU Load mibFieldOption Template Set

   Figure 26 shows the exported mib Field Option detailing the metadata
   that will be exported about the mibObjectValueGauge Field in Template
   402 in Template Record (see Section 5.2).

   The OID for the cpmCPUTotal1minRev has been encoded using ASN.1/BER
   to '060d2b0601040109096d0101010107' at 15 bytes long.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 403         |          Length = 40          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId = 402       | informationElementIndex = 1   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  VLEN=15      |  mibObjectIdentifier                     ...  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              "1.3.6.1.4.1.9.9.109.1.1.1.1.7"             ...  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |               060d2b0601040109096d0101010107             ...  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                                                          ...  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

           Figure 26: Example of CPULoad mibFieldOption Data Set

   Note that although cpmCPUTotal1minRev is 32 bits long, reduced size
   encoding [RFC7011] has been used to encoded it within a single octet.

   This example stresses that, even though the OID cpmCPUTotal1minRev is
   enterprise-specific, the E bit for the mibObjectValueGauge and
   mibObjectIdentifier is set to "0" since the "mibObjectValueGauge" and



Aitken, et al.          Expires September 5, 2014              [Page 39]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   "mibObjectIdentifier" Information Element is not enterprise-specific.
   That this data is from an Enterprise MIB is included in the OID that
   includes an Enterprise ID.

   The corresponding Data Set does not add any value for this example,
   and is therefore not displayed.

5.3.  Exporting A Sequence Table: The OSPF Neighbor Sequence

   Many conceptual tables are already defined in standard and
   proprietary MIBs.  These can be exported with a minimum of overhead
   by using the mibObjectValueSequence.  This allows the Exporting
   Process to unambiguously define the INDEX for the entire sequence as
   the Scope fields of an Option Export.  The use of mibSequenceOption
   means that each individual columnar object does not need to have its
   OID exported to the collector

   The ospfNbrTable defined in the OSPF MIB [RFC4750] is a Sequence Of
   ospfNbrEntry, which has the OID "1.3.6.1.2.1.14.10.1".  Each
   mibObjectValueSequence data record will therefore correspond to an
   ospfNbrEntry.

   The following fields will be exported:

   +----------------------+------------+----------------------+--------+
   | Object               | ID         | mibObjectValue       | Length |
   |                      |            |                      |   in   |
   |                      |            |                      | bytes  |
   +----------------------+------------+----------------------+--------+
   | ospfNbrIpAddr        | ospfNbrEnt | mibObjectValueIPAddr |   4    |
   |                      | ry 1       | ess                  |        |
   | ospfNbrAddressLessIn | ospfNbrEnt | mibObjectValueIntege |   4    |
   | dex                  | ry 2       | r                    |        |
   | ospfNbrRtrId         | ospfNbrEnt | mibObjectValueIPAddr |   4    |
   |                      | ry 3       | ess                  |        |
   | ospfNbrState         | ospfNbrEnt | mibObjectValueIntege |   1    |
   |                      | ry 6       | r                    |        |
   +----------------------+------------+----------------------+--------+

                   Table 4: OSPF Neighbor Entry Objects

   The OIDs that will be used to export this table will be Table 7









Aitken, et al.          Expires September 5, 2014              [Page 40]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   +-----------------------+----------------------+--------------------+
   | Entity                | Full OID             | Exported as        |
   +-----------------------+----------------------+--------------------+
   | ospfNbrEntry          | 1.3.6.1.2.1.14.10.1  | OID = 1.3.6.1.2.1. |
   |                       |                      | 14.10.1            |
   | ospfNbrIpAddr         | 1.3.6.1.2.1.14.10.1. | subID = 1          |
   |                       | 1                    |                    |
   | ospfNbrAddressLessInd | 1.3.6.1.2.1.14.10.1. | subID = 2          |
   | ex                    | 2                    |                    |
   | ospfNbrRtrId          | 1.3.6.1.2.1.14.10.1. | subID = 3          |
   |                       | 3                    |                    |
   | ospfNbrState          | 1.3.6.1.2.1.14.10.1. | subID = 6          |
   |                       | 6                    |                    |
   +-----------------------+----------------------+--------------------+

                            Table 5: OSPF OIDs

   Figure 27 shows the Templates Exported to Support the
   mibObjectValueSequence.  Figure 28 shows the example OID Data for the
   Sequence exported in mibObjectValueSequence Figure 29 shows the
   example data export for a few neighbors in the table.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 2           |          Length = 12          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 500       |         Field Count = 1       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = mibObjectValueSequence |         Field Length = 16     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length = 30          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 501       |        Field Count = 4        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field Count = 2       |0| IE = mibObjectValueIPAddress|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 4       |0| IE = mibObjectValueInteger  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 4       |0| IE = mibObjectValueIPAddress|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 4       |0| IE = mibObjectValueInteger  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 1       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+




Aitken, et al.          Expires September 5, 2014              [Page 41]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


                                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                                     |       Set ID = 3              |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Length = 22          |      Template ID = 502        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Count = 3        |  Scope Field Count = 2        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = templateId             |        Field Length = 2       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = informationElementIndex|        Field Length = 2       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = mibObjectIdentifier    |        Field Length = 65535   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |        Length = 22            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 503       |        Field Count = 3        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field Count = 2       |0| IE = templateId             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = informationElementIndex|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibSubIdentifier       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

             Figure 27: Example of ospfNbarEntry Template Sets






















Aitken, et al.          Expires September 5, 2014              [Page 42]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 502         |          Length = 38          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId = 500       | informationElementIndex = 0   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   VLEN=22     | mibObjectIdentifier = "1.3.6.1.2.1.14.10.1"   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              060f2b8006800180028001800e800a8001               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          ....                                 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          ....                                 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          ....                                 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                                               | Padding = 0   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 503         |          Length = 28          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | templateId              = 501 | informationElementIndex = 0   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | mibSubIdentifier        = 1   | templateId              = 501 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | informationElementIndex = 1   | mibSubIdentifier        = 2   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | templateId              = 501 | informationElementIndex = 2   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | mibSubIdentifier        = 3   | templateId              = 501 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | informationElementIndex = 3   | mibSubIdentifier        = 6   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

            Figure 28: Example of ospfNbarEntry OID Data export














Aitken, et al.          Expires September 5, 2014              [Page 43]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 500         |         Length = 52           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Semantic=FF    |     Template ID = 501         |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrIpAddr = 192.0.2.1               |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrAddressLessIndex = 0             |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrRtrId = 1.1.1.1                  |ospfNbrState=8 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Semantic=FF    |     Template ID = 501         |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrIpAddr = 192.0.2.2               |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrAddressLessIndex = 0             |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrRtrId = 2.2.2.2                  |ospfNbrState=8 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Semantic=FF    |     Template ID = 501         |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrIpAddr = 192.0.2.3               |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrAddressLessIndex = 0             |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrRtrId = 3.3.3.3                  |ospfNbrState=1 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

            Figure 29: Example of Data Export for ospfNbrEntry

5.4.  Exporting Augmented Sequence Table: The IF-MIB id to name mapping

   The IF-MIB [RFC2863] defines the IfXEntry to extend the ifTable and
   ifEntry.

   The specific MIB Object that specified the AUGMENTS clause is the
   ifXEntry object.

   The ifTable defined in the Interfaces Group MIB [RFC2863] is a
   Sequence Of ifEntry, which has the OID "1.3.6.1.2.1.2.2.1".  Each
   mibObjectValueSequence data record will therefore correspond to an
   ifEntry.

   The following fields will be exported Table 6





Aitken, et al.          Expires September 5, 2014              [Page 44]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


        +---------+------------------+-------+-------------------+
        | ifIndex | ifType           | ifMTU | ifName            |
        +---------+------------------+-------+-------------------+
        | 1       | ethernetCsmacd:6 | 1500  | Ethernet 0/0      |
        | 2       | ethernetCsmacd:6 | 1500  | Ethernet 0/1      |
        | 3       | ethernetCsmacd:6 | 1500  | FastEthernet 1/0  |
        +---------+------------------+-------+-------------------+

                           Table 6: IF-MIB Data

   The OIDs that will be used to export this table will be Table 7

   +---------+------------------------+--------------------------------+
   | Entity  | Full OID               | Exported as                    |
   +---------+------------------------+--------------------------------+
   | ifEntry | 1.3.6.1.2.1.2.2.1      | OID   = 1.3.6.1.2.1.2.2.1      |
   | ifIndex | 1.3.6.1.2.1.2.2.1.1    | subID = 1                      |
   | ifType  | 1.3.6.1.2.1.2.2.1.3    | subID = 3                      |
   | ifMTU   | 1.3.6.1.2.1.2.2.1.4    | subID = 4                      |
   | ifName  | 1.3.6.1.2.1.31.1.1.1.1 | OID   = 1.3.6.1.2.1.31.1.1.1.1 |
   +---------+------------------------+--------------------------------+

                           Table 7: IF-MIB OIDs

   Figure 30 shows the Templates Exported to Support the
   mibObjectValueSequence.  Figure 31 shows the example OID Data for the
   Sequence exported in mibObjectValueSequence to match Table 7.
   Figure 32 shows the example data export as per Table 6.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 2           |          Length = 12          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 600       |         Field Count = 1       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = mibObjectValueSequence |         Field Length = 24     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length = 25          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 601       |        Field Count = 4        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field Count = 1       |0| IE = mibObjectValueInteger  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 1       |0| IE = mibObjectValueInteger  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+



Aitken, et al.          Expires September 5, 2014              [Page 45]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


     |        Field Length = 4       |0| IE = mibObjectValueInteger  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 4       |0|IE =mibObjectValueOctetString|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 16      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                                     |       Set ID = 3              |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Length = 22          |      Template ID = 602        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Count = 3        |  Scope Field Count = 2        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = templateId             |        Field Length = 2       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = informationElementIndex|        Field Length = 2       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = mibObjectIdentifier    |        Field Length = 65535   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |        Length = 22            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 603       |        Field Count = 3        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field Count = 2       |0| IE = templateId             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = informationElementIndex|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibSubIdentifier       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

           Figure 30: Example of Augmented ifEntry Template Sets















Aitken, et al.          Expires September 5, 2014              [Page 46]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 602         |          Length = 62          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId = 600       | informationElementIndex = 0   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   VLEN=11     | mibObjectIdentifier ...                       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              ifEntry = 1.3.6.1.2.1.2.2.1                      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              06082b06010201020201                             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId = 601       | informationElementIndex = 3   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   VLEN=12     | mibObjectIdentifier ifName = ""               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              ifName = 1.3.6.1.2.1.31.1.1.1.1                  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              060a2b060102011f01010101                         |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |               | Padding = 0                                   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 603         |          Length = 28          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | templateId              = 601 | informationElementIndex = 0   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | mibSubIdentifier        = 1   | templateId              = 601 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | informationElementIndex = 1   | mibSubIdentifier        = 3   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | templateId              = 601 | informationElementIndex = 2   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | mibSubIdentifier        = 4   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

          Figure 31: Example of Augmented ifEntry OID Data export












Aitken, et al.          Expires September 5, 2014              [Page 47]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 600         |         Length = 76           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Semantic=FF    |     Template ID = 601         | ifIndex = 1   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ifType = 6              |        ifMTU = 1500           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                      ifName = Ethernet 0/0                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        ...                                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        ...                                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        ...                                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Semantic=FF    |     Template ID = 601         | ifIndex = 2   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ifType = 6              |        ifMTU = 1500           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                      ifName = Ethernet 0/1                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        ...                                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        ...                                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        ...                                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Semantic=FF    |     Template ID = 601         | ifIndex = 3   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ifType = 6              |        ifMTU = 1500           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                      ifName = FastEthernet 1/0                |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        ...                                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        ...                                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        ...                                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

          Figure 32: Example of Data Export for Augmented ifEntry








Aitken, et al.          Expires September 5, 2014              [Page 48]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


5.5.  Exporting Selected Objects Sequence : The ipIfStatsInForwDatagrams

   It may be that the full set of columnar objects that are supported by
   a SEQUENCE are not required to be exported.  But if index information
   is to be provided then the Objects specified by the INDEX clause of
   the SEQUENCE MUST be exported in the correct order and referred to by
   the mibIndexIndicator included in the mibFieldOption Template.

   This example shows the export of ipIfStatsInForwDatagrams from the
   IP-MIB [RFC4293].  ipIfStatsInForwDatagrams is a columnar object that
   is part of the conceptual table ipIfStatsTable SEQUENCE.  This is
   comprised of ipIfStatsEntry conceptual rows.

   The ipIfStatsTable SEQUENCE is indexed by the ipIfStatsIPVersion and
   ipIfStatsIfIndex, therefore to export ipIfStatsInForwDatagrams
   clearly they should be included.

   The Options Template Record for the example Data Record contains the
   following Information Elements:

   1.  ipIfStatsIPVersion (1.3.6.1.2.1.4.31.3.1.1) (scope field)

   2.  ipIfStatsIfIndex (1.3.6.1.2.1.4.31.3.1.2) (scope field)

   3.  ipIfStatsInForwDatagrams (1.3.6.1.2.1.4.31.3.1.12) (non-scope
       field)

   Figure 33 shows the exported Options Template Set.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length = 22          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 701       |        Field Count = 3        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |     Scope Field Count = 2     |0|Scope 1=mibObjectValueInteger|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field 1 Length = 1    |0|Scope 2=mibObjectValueInteger|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field 1 Length = 2    |0| IE = mibObjectValueCounter  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           Field Length = 4    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    Figure 33: Example of an Options Template for an Indexed MIB Object
                             with two indices.




Aitken, et al.          Expires September 5, 2014              [Page 49]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   Figure 34 shows the exported mibFieldOption Template used to export
   the required mibObjectValue metadata.  This example of the
   mibFieldOption Template includes the mibIndexIndicator to indicate
   that some of the other fields in the data records are indexes.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length = 34          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 702       |        Field Count = 4        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  Scope Field Count  = 2       |0| IE = templateId             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = informationElementIndex|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibIndexIndicator      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 1       |0| IE = mibObjectIdentifier    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    Figure 34: Example of an MIB Field Options Template for an Indexed
                       MIB Object with two indices.

   Figure 35 shows the exported mibFieldOption Data used to export the
   required mibObjectValue metadata.  Note that the first two Data
   Records have all their mibIndexIndicator bits set to 0.  The third
   mibIndexIndicator has the value '11000000' to show that the first two
   fields in the record are the INDEX's for this columnar object.




















Aitken, et al.          Expires September 5, 2014              [Page 50]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 702         |          Length = 140         |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId = 701       | informationElementIndex = 0   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Index 00000000 | VLEN = 21     | mibObjectIdentifier       ... |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              "1.3.6.1.2.1.4.31.3.1.1"                     ... |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |               06132b80068001800280018004801f800380018001  ... |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                                                           ... |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                                               | templateId 701|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |... templateId | informationElementIndex = 1   |Index 00000000 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   VLEN = 21   |   mibObjectIdentifier                     ... |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              "1.3.6.1.2.1.4.31.3.1.2"                     ... |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |               06132b80068001800280018004801f800380018002  ... |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                                                           ... |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                               |        templateId = 701       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | informationElementIndex = 2   |Index 11000000 | OID VLEN = 21 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  mibObjectIdentifier  "1.3.6.1.2.1.4.31.3.1.12"          ...  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |               06132b80068001800280018004801f80038001800c ...  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                                                          ...  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                                                          ...  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |               |
     +-+-+-+-+-+-+-+-+

    Figure 35: Example of an MIB Field Options Data Set for an Indexed
                       MIB Object with two indices.

   Figure 36 shows the Data records that export the values of the 3
   mibObjectValue.




Aitken, et al.          Expires September 5, 2014              [Page 51]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 701         |           Length = 18         |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | ipVer = 1     |    ifIndex =  10              |  ...          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |    InForwDatagrams = 10000                    | ipVer = 2     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |    ifIndex = 10               | InForwDatagrams = 20000       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |             ...               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 36: Example of an MIB Data Set for an Indexed MIB Object with
                               two indices.

5.6.  Indexed MIB Object with an IPFIX Information Element: Output
      Interface Queue Size in PSAMP Packet Report

   If a PSAMP Packet Report [RFC5476] was generated on any dropped
   packets on an interface then it may be desirable to know if the send
   queue on the output interface was full.  This could be done be
   exporting the size of the send queue (ifOutQLen) in the same Data
   Record as the PSAMP Packet Report.

   The exported data looks like:

   +-----------+-----------+--------+--------------+-------------------+
   |  SRC ADDR |  DST ADDR |  PAK   |    OUTPUT    |   OUTPUT Q. LEN   |
   |           |           |  LEN   |  INTERFACE   |    (ifOutQLen)    |
   +-----------+-----------+--------+--------------+-------------------+
   | 192.0.2.1 | 192.0.2.3 |  150   | Eth 1/0 (15) |         45        |
   | 192.0.2.4 | 192.0.2.9 |  350   | Eth 1/0 (15) |         45        |
   | 192.0.2.3 | 192.0.2.9 |  650   | Eth 1/0 (15) |         23        |
   | 192.0.2.4 | 192.0.2.6 |  350   | Eth 1/1 (16) |         0         |
   +-----------+-----------+--------+--------------+-------------------+

   Table 8: Packet Report with Interface Output Queue Length (ifOutQLen)
                                   Data

   The MIB object for the Interface Output Queue Length, ifOutQLen
   ("1.3.6.1.2.1.2.2.1.21"), this is part of the ifEntry SEQUENCE that
   has as its index ifIndex interface index as detailed in the IF-MIB
   [RFC2863].  If, for example, the interface index of "Eth 1/0" in the
   example is 15, the full MIB Object Identifier for (ifOutQLen) would
   be "1.3.6.1.2.1.2.2.1.21.15".




Aitken, et al.          Expires September 5, 2014              [Page 52]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   This relationship between the ifOutQLen field and the index field is
   exported using mibIndexIndicator in the mibFieldOption.  The value of
   "00010000" flags the index fields concisely.

   In fact, only how the indexed object was indexed is necessary,
   although it is often useful to specify the index value.  The example
   identifies the Egress Interface, but for other uses it may be
   sufficient to know that the ifOutQLen value was taken for the
   interface that the packet was switched out of, without identifying
   the actual interface.

   The Template Record for the example Data Record contains the
   following Information Elements:

   1.  sourceIPv4Address

   2.  destinationIPv4Address

   3.  totalLengthIPv4

   4.  egressInterface

   5.  ifOutQLen indexed by: egressInterface

   Figure 37 shows the exported Template Set detailing the Template for
   exporting a PSAMP Report with Interface Output Queue Length
   (ifOutQLen).  Figure 38 and Figure 39 show the mibFieldOption
   Template and Data Record.























Aitken, et al.          Expires September 5, 2014              [Page 53]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 2           |          Length = 63          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 703       |        Field Count = 5        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = sourceIPv4Address      |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = destinationIPv4Address |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = totalLengthIPv4        |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = egressInterface        |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = mibObjectValueGauge    |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

     Figure 37: Example of Template for a PSAMP Report with ifOutQLen
                        indexed by egressInterface

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length = 34          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 704       |        Field Count = 4        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  Scope Field Count  = 2       |0| IE = templateId             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = informationElementIndex|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibIndexIndicator      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 1       |0| IE = mibObjectIdentifier    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 38: Example of mibFieldOption Template for a PSAMP Report with
                   ifOutQLen indexed by egressInterface










Aitken, et al.          Expires September 5, 2014              [Page 54]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 704         |          Length = 41          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId = 703       | informationElementIndex = 4   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Index 00010000  | VLEN = 19    | mibObjectIdentifier    ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |             "1.3.6.1.2.1.2.2.1.21"                     ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              06112b80068001800280018002800280018015    ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                                                        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |               |
     +-+-+-+-+-+-+-+-+

    Figure 39: Example of mibFieldOption Data Record for a PSAMP Report
                 with ifOutQLen indexed by egressInterface

   The corresponding IPFIX Data Record is shown in Figure 40.  For the
   sake of the example, the interface index of "Eth 1/0" is 15 and the
   interface index of "Eth 1/1" is 16.



























Aitken, et al.          Expires September 5, 2014              [Page 55]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 703         |         Length = 84           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          192.0.2.1                            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          192.0.2.3                            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                             150                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        15 (Eth 1/0)                           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                              45                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          192.0.2.4                            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          192.0.2.9                            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                             350                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        15 (Eth 1/0)                           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                              45                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          192.0.2.3                            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          192.0.2.9                            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                             650                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        15 (Eth 1/0)                           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                              23                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          192.0.2.4                            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          192.0.2.6                            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                             350                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        16 (Eth 1/1)                           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                               0                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    Figure 40: Example of PSAMP Packet Report with ifOutQLen indexed by
                              egressInterface



Aitken, et al.          Expires September 5, 2014              [Page 56]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


5.7.  Indexed MIB Object with an OID: Output Interface Queue Size in
      PSAMP Packet Report

   Following on the example from the previous section (see Section 5.6),
   if the Template Record for the example Data Record does not contain
   the egressInterface, the ifOutQLen can be indexed by the ifIndex
   interface index as detailed in the IF-MIB [RFC2863] by including as
   many mibSubIdentifier as are required.

   The Template Record for the example Data Record contains the
   following Information Elements:

   1.  sourceIPv4Address

   2.  destinationIPv4Address

   3.  totalLengthIPv4

   4.  ifOutQLen indexed by: the mibSubIdentifier

   5.  mibSubIdentifier

   Note the only significant difference between this and the previous
   example is that by using the mibSubIdentifier the exporter is
   exposing less information about the type of the index.

   Figure 41 shows the exported Template Set detailing the Template for
   exporting a PSAMP Report with Interface Output Queue Length
   (ifOutQLen) but using the ifIndex MIB object as the exported index.
   Figure 42 and Figure 43 show the mibFieldOption Template and Data
   Record.




















Aitken, et al.          Expires September 5, 2014              [Page 57]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 2           |          Length = 63          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 705       |        Field Count = 5        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = sourceIPv4Address      |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = destinationIPv4Address |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = totalLengthIPv4        |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = mibObjectValueGauge    |        Field Length = 1       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = mibSubIdentifier       |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

     Figure 41: Example of Template for a PSAMP Report with ifOutQLen
                        indexed by a sub identifier

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length = 34          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 706       |        Field Count = 4        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  Scope Field Count  = 2       |0| IE = templateId             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = informationElementIndex|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibIndexIndicator      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 1       |0| IE = mibObjectIdentifier    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 65535   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 42: Example of mibFieldOption Template for a PSAMP Report with
                   ifOutQLen indexed by a sub identifier










Aitken, et al.          Expires September 5, 2014              [Page 58]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 706         |          Length = 41          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId = 705       | informationElementIndex = 4   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Index 00001000  | VLEN = 19    | mibObjectIdentifier    ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              "1.3.6.1.2.1.2.2.1.21"                    ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              06112b80068001800280018002800280018015    ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                                                        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |               |
     +-+-+-+-+-+-+-+-+

    Figure 43: Example of mibFieldOption Data Record for a PSAMP Report
                with ifOutQLen indexed by a sub identifier

   Note that IPFIX reduced size encoding [RFC7011] has been used in this
   example to express ifOutQLen in a single octet, rather than the 32
   bits specified in the IF-MIB [RFC2863].

   The corresponding IPFIX Data Record is shown in Figure 44.  For the
   sake of the example, the interface index of "Eth 1/0" is 15 and the
   interface index of "Eth 1/1" is 16.























Aitken, et al.          Expires September 5, 2014              [Page 59]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 703         |         Length = 72           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          192.0.2.1                            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          192.0.2.3                            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                             150                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |      45       |                     15 ...                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |      ...      |                  192.0.2.4 ...                |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |      ...      |                  192.0.2.9 ...                |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |      ...      |                     350 ...                   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |      ...      |       45      |              15  ...          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |             ...               |         192.0.2.3 ...         |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |             ...               |         192.0.2.9 ...         |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |             ...               |              650 ...          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |             ...               |       23      |    ...        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                 ...  15                       |    ...        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                 ... 192.0.2.4                 |    ...        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                 ... 192.0.2.6                 |    ...        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                 ...  350                      |       0       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                               16                              |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    Figure 44: Example of PSAMP Packet Report with the ifOutQLen using
                 ifIndex from IF-MIB [RFC2863] as an index









Aitken, et al.          Expires September 5, 2014              [Page 60]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


5.8.  Exporting With Multiple Contexts: The OSPF Neighbor Sequence
      Revisited

   If the Context used to export the MIB Objects is the default one no
   extra context fields are required.  This example demonstrates how to
   handle the case when the Context needs to be specified.  It is based
   on the previous example Section 5.3.

   The OSPF details exported of the Sequence in section Section 5.3
   would be suitable if there were only one OSPF process running at the
   Observation Point.  If multiple OSPF processes are present then they
   can be differentiated by also exporting the mibContextEngineID and
   mibContextName.

   The following fields will be exported:

   +----------------------+------------+----------------------+--------+
   | Object               | ID         | mibObjectValue       | Length |
   |                      |            |                      |   in   |
   |                      |            |                      | bytes  |
   +----------------------+------------+----------------------+--------+
   | ospfNbrIpAddr        | ospfNbrEnt | mibObjectValueIPAddr |   4    |
   |                      | ry 1       | ess                  |        |
   | ospfNbrAddressLessIn | ospfNbrEnt | mibObjectValueIntege |   4    |
   | dex                  | ry 2       | r                    |        |
   | ospfNbrRtrId         | ospfNbrEnt | mibObjectValueIPAddr |   4    |
   |                      | ry 3       | ess                  |        |
   | ospfNbrState         | ospfNbrEnt | mibObjectValueIntege |   1    |
   |                      | ry 6       | r                    |        |
   +----------------------+------------+----------------------+--------+

                   Table 9: OSPF Neighbor Entry Objects

   Figure 45 shows the Templates Exported to Support a
   mibObjectValueSequence that is defined within a context.  Figure 46
   shows the example OID Data for the Sequence exported in
   mibObjectValueSequence.  These are unchanged from the previous
   example.  Figure 47 shows the example data for 2 OSPF neighbors.
   Although these have identical INDEX/Scope values the context
   information indicates they come from different OSPF processes.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 2           |          Length = 20          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 800       |         Field Count = 3       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+



Aitken, et al.          Expires September 5, 2014              [Page 61]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


     |0| IE = mibContextEngineID     |         Field Length = 4      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = mibContextName         |         Field Length = 4      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = mibObjectValueSequence |         Field Length = 16     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |          Length = 30          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 801       |        Field Count = 4        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field Count = 2       |0| IE = mibObjectValueIPAddress|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 4       |0| IE = mibObjectValueInteger  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 4       |0| IE = mibObjectValueIPAddress|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 4       |0| IE = mibObjectValueInteger  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 1       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                                     |       Set ID = 3              |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Length = 22          |      Template ID = 802        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Count = 3        |  Scope Field Count = 2        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = templateId             |        Field Length = 2       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = informationElementIndex|        Field Length = 2       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = mibObjectIdentifier    |        Field Length = 65535   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 3           |        Length = 22            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Template ID = 803       |        Field Count = 3        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Scope Field Count = 2       |0| IE = templateId             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = informationElementIndex|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Field Length = 2       |0| IE = mibSubIdentifier       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+



Aitken, et al.          Expires September 5, 2014              [Page 62]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


     |        Field Length = 2       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      Figure 45: Example of ospfNbarEntry Template Sets with Context

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 802         |          Length = 38          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        templateId = 800       | informationElementIndex = 2   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   VLEN=22     | mibObjectIdentifier = "1.3.6.1.2.1.14.10.1"   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              060f2b8006800180028001800e800a8001               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          ....                                 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          ....                                 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                          ....                                 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                                               | Padding = 0   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 803         |          Length = 28          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | templateId              = 801 | informationElementIndex = 0   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | mibSubIdentifier        = 1   | templateId              = 801 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | informationElementIndex = 1   | mibSubIdentifier        = 2   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | templateId              = 801 | informationElementIndex = 2   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | mibSubIdentifier        = 3   | templateId              = 801 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | informationElementIndex = 3   | mibSubIdentifier        = 6   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

     Figure 46: Example of ospfNbarEntry OID Data export with Context









Aitken, et al.          Expires September 5, 2014              [Page 63]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 800         |         Length = 52           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  mibContextEngineID   = 0001                                  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  mibContextName = con1                                        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Semantic=FF    |     Template ID = 801         |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrIpAddr = 192.0.2.1               |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrAddressLessIndex = 0             |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrRtrId = 1.1.1.1                  |ospfNbrState=8 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  mibContextEngineID   = 0001                                  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  mibContextName = con2                                        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Semantic=FF    |     Template ID = 801         |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrIpAddr = 192.0.2.1               |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrAddressLessIndex = 0             |        ...    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       ospfNbrRtrId = 2.2.2.2                  |ospfNbrState=8 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      Figure 47: Example of Data Export for ospfNbrEntry with Context

6.  Configuration Considerations

   When configuring a MIB OID for export, consideration should be given
   to whether the SNMP Context String should also be configurable.  If a
   non-default Context String is used then it should be associated with
   the fields as per Section 4.6.

7.  The Collecting Process's Side

   The specifications in section 9 of [RFC7011] also apply to Collectors
   that implement this specification.  In addition, the following
   specifications should be noted.

   A Collecting Process that implements this specification SHOULD have
   access to MIB modules in order to look up the received MIB Object
   Identifiers and find the type and name of MIB OID fields used in



Aitken, et al.          Expires September 5, 2014              [Page 64]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   received templates.  It should be noted that since reduced size
   encoding MAY be used by the Exporting Process, the Collecting Process
   cannot assume a received size for a field is the maximum size it
   should expect for that field.

   If a Collecting Process receives a MIB Object Identifier that it
   cannot decode, it SHOULD log an error.

   If a Collecting Process receives a MIB Object Identifier for an
   indexed MIB object but isn't sent the appropriate number of indices
   then it MAY log an error, but it MAY use the Template Record to
   decode the Data Records as the associated indices are purely semantic
   information.

8.  Applicability

   Making available the many and varied items from MIB modules opens up
   a wide range of possible applications for the IPFIX protocol, some
   quite different from the usual flow information.

   Some monitoring applications periodically export an interface ID to
   interface name mapping using IPFIX Options Templates.  This could be
   expanded to include the MIB object "ifInUcastPkts" of the IF-MIB
   [RFC2863] indexed using the ingressInterface Information Element, as
   an index.  This would give the input statistics for each interface
   which can be compared to the flow information to ensure the sampling
   rate is expected.  Or, if there is no sampling, to ensure that all
   the expected packets are being monitored.

9.  Security Considerations

   For this extension to the IPFIX protocol, the same security
   considerations as for the IPFIX protocol apply [RFC7011].

   If the exporter is generating or capturing the field values itself,
   e.g. using the MIB Objects only as an encoding or type mechanism,
   there are no extra security considerations beyond standard IPFIX.

   However if the exporter is a client of an SNMP engine on the same
   device it MUST abide by existing SNMP security rules.

   The access to particular MIB objects is controlled by the
   configuration of the IPFIX exporter.  This is consistent with the way
   IPFIX controls access to other Information Elements in general.

   The configuration of an IPFIX Exporter determines which MIB objects
   are included in IPFIX Data Records sent to certain collectors.
   Network operators should take care that the only MIB objects which



Aitken, et al.          Expires September 5, 2014              [Page 65]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   are included in IPFIX Data Records are ones which the receiving flow
   collector is allowed to receive.

10.  IANA Considerations

   The new Information Elements in Table 10 must be allocated in IANA's
   IPFIX registry [IANA-IPFIX], as defined in the sub-sections below.

   In each case the "Units" and "Range" are to be left blank, since
   these are not applicable.

                 +-----------+---------------------------+
                 | ElementId | Name                      |
                 +-----------+---------------------------+
                 | TBD1      | mibObjectValueInteger     |
                 | TBD2      | mibObjectValueOctetString |
                 | TBD3      | mibObjectValueOID         |
                 | TBD4      | mibObjectValueBits        |
                 | TBD5      | mibObjectValueIPAddress   |
                 | TBD6      | mibObjectValueCounter     |
                 | TBD7      | mibObjectValueGauge       |
                 | TBD8      | mibObjectValueTime        |
                 | TBD9      | mibObjectValueUnsigned    |
                 | TBD10     | mibObjectValueTable       |
                 | TBD11     | mibObjectValueSequence    |
                 | TBD12     | mibSubIdentifier          |
                 | TBD13     | mibObjectIdentifier       |
                 | TBD14     | mibIndexIndicator         |
                 | TBD15     | mibCaptureTimeSemantics   |
                 | TBD16     | mibContextEngineID        |
                 | TBD17     | mibContextName            |
                 | TBD18     | mibObjectName             |
                 | TBD19     | mibObjectDescription      |
                 | TBD20     | mibObjectSyntax           |
                 | TBD21     | mibModuleName             |
                 +-----------+---------------------------+

                    Table 10: New Information Elements

10.1.  New MIB Value Information Elements

10.1.1.  mibObjectValueInteger

   A new Information Element "mibObjectValueInteger" must be allocated
   in IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: An IPFIX Information Element which denotes that an
      integer value from a MIB will be exported.  The MIB Object



Aitken, et al.          Expires September 5, 2014              [Page 66]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      Identifier ("mibObjectIdentifier") for this field MUST be exported
      in a MIB Field Option or via another means.  This Information
      Element is used for MIB Objects with the Base Syntax of Integer32
      and INTEGER with RLE used as required.  The value is encoded as
      per the standard IPFIX Abstract Data Type of signed64.

      Abstract Data Type: signed64

      Data Type Semantics: identifier

      ElementId: TBD1

      Status: current

      Reference: [this document].

10.1.2.  mibObjectValueOctetString

   A new Information Element "mibObjectValueOctetString" must be
   allocated in IANA's IPFIX registry [IANA-IPFIX], with the following
   definition:

      Description: An IPFIX Information Element which denotes that an
      Octet String or Opaque value from a MIB will be exported.  The MIB
      Object Identifier ("mibObjectIdentifier") for this field MUST be
      exported in a MIB Field Option or via another means.  This
      Information Element is used for MIB Objects with the Base Syntax
      of OCTET STRING and Opaque.  The value is encoded as per the
      standard IPFIX Abstract Data Type of octetArray.

      Abstract Data Type: octetArray

      Data Type Semantics: default

      ElementId: TBD2

      Status: current

      Reference: [this document].

10.1.3.  mibObjectValueOID

   A new Information Element "mibObjectValueOID" must be allocated in
   IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: An IPFIX Information Element which denotes that an
      Object Identifier or OID value from a MIB will be exported.  The
      MIB Object Identifier ("mibObjectIdentifier") for this field MUST



Aitken, et al.          Expires September 5, 2014              [Page 67]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      be exported in a MIB Field Option or via another means.  This
      Information Element is used for MIB Objects with the Base Syntax
      of OBJECT IDENTIFIER.  Note - In this case the
      "mibObjectIdentifier" will define which MIB Object is being
      exported while the value contained in this Information Element
      will be an OID as a value.  The mibObjectValueOID Information
      Element is encoded as ASN.1/BER [BER] in an octetArray.

      Abstract Data Type: octetArray

      Data Type Semantics: default

      ElementId: TBD3

      Status: current

      Reference: [this document].

10.1.4.  mibObjectValueBits

   A new Information Element "mibObjectValueBits" must be allocated in
   IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: An IPFIX Information Element which denotes that a set
      of Enumerated flags or bits from a MIB will be exported.  The MIB
      Object Identifier ("mibObjectIdentifier") for this field MUST be
      exported in a MIB Field Option or via another means.  This
      Information Element is used for MIB Objects with the Base Syntax
      of BITS.  The value is encoded as per the standard IPFIX Abstract
      Data Type of unsigned64.

      Abstract Data Type: unsigned64

      Data Type Semantics: flags

      ElementId: TBD4

      Status: current

      Reference: [this document].

10.1.5.  mibObjectValueIPAddress

   A new Information Element "mibObjectValueIPAddress" must be allocated
   in IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: An IPFIX Information Element which denotes that an
      IPv4 Address Object from a MIB will be exported.  The MIB Object



Aitken, et al.          Expires September 5, 2014              [Page 68]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      Identifier ("mibObjectIdentifier") for this field MUST be exported
      in a MIB Field Option or via another means.  This Information
      Element is used for MIB Objects with the Base Syntax of IPAddress.
      The value is encoded as per the standard IPFIX Abstract Data Type
      of ipv4Address.

      Abstract Data Type: ipv4Address

      Data Type Semantics: default

      ElementId: TBD5

      Status: current

      Reference: [this document].

10.1.6.  mibObjectValueCounter

   A new Information Element "mibObjectValueCounter" must be allocated
   in IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: An IPFIX Information Element which denotes that a
      counter value from a MIB will be exported.  The MIB Object
      Identifier ("mibObjectIdentifier") for this field MUST be exported
      in a MIB Field Option or via another means.  This Information
      Element is used for MIB Objects with the Base Syntax of Counter32
      or Counter64 with RLE used as required.  The value is encoded as
      per the standard IPFIX Abstract Data Type of unsigned64.

      Abstract Data Type: unsigned64

      Data Type Semantics: totalCounter

      ElementId: TBD6

      Status: current

      Reference: [this document].

10.1.7.  mibObjectValueGauge

   A new Information Element "mibObjectValueGauge" must be allocated in
   IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: An IPFIX Information Element which denotes that a
      Gauge value from a MIB will be exported.  The MIB Object
      Identifier ("mibObjectIdentifier") for this field MUST be exported
      in a MIB Field Option or via another means.  This Information



Aitken, et al.          Expires September 5, 2014              [Page 69]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      Element is used for MIB Objects with the Base Syntax of Gauge32.
      The value is encoded as per the standard IPFIX Abstract Data Type
      of unsigned64.  This value will represent a non-negative integer,
      which may increase or decrease, but shall never exceed a maximum
      value, nor fall below a minimum value.

      Abstract Data Type: unsigned32

      Data Type Semantics: totalCounter

      ElementId: TBD7

      Status: current

      Reference: [this document].

10.1.8.  mibObjectValueTime

   A new Information Element "mibObjectValueTime" must be allocated in
   IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: An IPFIX Information Element which denotes that a
      TimeTicks value from a MIB will be exported.  The MIB Object
      Identifier ("mibObjectIdentifier") for this field MUST be exported
      in a MIB Field Option or via another means.  This Information
      Element is used for MIB Objects with the Base Syntax of TimeTicks.
      The value is encoded as per the standard IPFIX Abstract Data Type
      of dateTimeMilliseconds.

      Abstract Data Type: dateTimeMilliseconds

      Data Type Semantics: default

      ElementId: TBD8

      Status: current

      Reference: [this document].

10.1.9.  mibObjectValueUnsigned

   A new Information Element "mibObjectValueUnsigned" must be allocated
   in IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: An IPFIX Information Element which denotes that an
      unsigned integer value from a MIB will be exported.  The MIB
      Object Identifier ("mibObjectIdentifier") for this field MUST be
      exported in a MIB Field Option or via another means.  This



Aitken, et al.          Expires September 5, 2014              [Page 70]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      Information Element is used for MIB Objects with the Base Syntax
      of unsigned64 with RLE used as required.  The value is encoded as
      per the standard IPFIX Abstract Data Type of unsigned64.

      Abstract Data Type: unsigned64

      Data Type Semantics: identifier

      ElementId: TBD9

      Status: current

      Reference: [this document].

10.1.10.  mibObjectValueTable

   A new Information Element "mibObjectValueTable" must be allocated in
   IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: An IPFIX Information Element which denotes that a
      complete MIB 'SEQUENCE OF X' or conceptual table value from a MIB
      will be exported.  The MIB Object Identifier
      ("mibObjectIdentifier") for this field MUST be exported in a MIB
      Field Option or via another means.  This Information Element is
      used for MIB Objects with a SYNTAX of SEQUENCE OF.  This is
      encoded as a basicList of "mibObjectValueSequence"s. The Field ID
      for the basicList MUST be TBD11.  The mibObjectValueSequence MUST
      be of the same type/OID as specified in this MIB Object's syntax.

      Abstract Data Type: basicList

      Data Type Semantics: list

      ElementId: TBD10

      Status: current

      Reference: [this document].

10.1.11.  mibObjectValueSequence

   A new Information Element "mibObjectValueSequence" must be allocated
   in IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: An IPFIX Information Element which denotes that a MIB
      SEQUENCE or a row from a conceptual table value as defined in a
      MIB will be exported.  The MIB Object Identifier
      ("mibObjectIdentifier") for this field MUST be exported in a MIB



Aitken, et al.          Expires September 5, 2014              [Page 71]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      Field Option or via another means.  This Information Element is
      used for MIB Objects with a SYNTAX of SEQUENCE.  This is encoded
      as a subTemplateList of mibObjectValue Information Elements.  The
      template specified in MUST be an Option Template and MUST include
      all the Objects listed in the INDEX clause as Scope fields.

      Abstract Data Type: subTemplateList

      Data Type Semantics: list

      ElementId: TBD11

      Status: current

      Reference: [this document].

10.1.12.  mibSubIdentifier

   A new Information Element "mibSubIdentifier" must be allocated in
   IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: A non-negative sub-identifier.  One Sub number from
      an Object Identifier (OID).  Can be used to provide an index to a
      columnar object without fully exporting the details of the INDEX.

      Abstract Data Type: unsigned32

      Data Type Semantics: identifier

      ElementId: TBD12

      Status: current

      Reference: [this document].

10.2.  New mibFieldOption Information Elements

10.2.1.  mibObjectIdentifier

   A new Information Element "mibObjectIdentifier" must be allocated in
   IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: An IPFIX Information Element which denotes that a MIB
      Object Identifier (MIB OID) is exported in the (Options) Template
      Record.  The mibObjectIdentifier Information Element contains the
      OID assigned to the MIB object definition encoded as ASN.1/BER
      [BER]




Aitken, et al.          Expires September 5, 2014              [Page 72]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      Abstract Data Type: octetArray

      Data Type Semantics: default

      ElementId: TBD13

      Status: current

      Reference: [this document].

10.2.2.  mibIndexIndicator

   A new Information Element "mibIndexIndicator" must be allocated in
   IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: This set of bit fields is used for marking the
      Information Elements of a Data Record that serve as INDEX MIB
      Objects or Information Element for a mibField.  Each bit
      represents an Information Element in the Data Record with the n-th
      bit representing the n-th Information Element.  A bit set to value
      1 indicates that the corresponding Information Element is an index
      of the Columnar Object represented by the mibFieldValue.  A bit
      set to value 0 indicates that this is not the case.  If the Data
      Record contains more than 64 Information Elements, the
      corresponding Template SHOULD be designed such that all INDEX
      Fields are among the first 64 Information Elements, because the
      mibIndexIndicator only contains 64 bits.  If the Data Record
      contains less than 64 Information Elements, then the extra bits in
      the mibIndexIndicator for which no corresponding Information
      Element exists MUST have the value 0.  This Information Element
      may be exported with RLE.

      Abstract Data Type: unsigned64

      Data Type Semantics: flags

      ElementId: TBD14

      Status: current

      Reference: [this document].

10.2.3.  mibCaptureTimeSemantics

   A new Information Element "mibCaptureTimeSemantics" must be allocated
   in IANA's IPFIX registry [IANA-IPFIX], with the following definition:





Aitken, et al.          Expires September 5, 2014              [Page 73]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      Description: Indicates when in the lifetime of the flow the MIB
      value was retrieved from SNMP for a mibObjectIdentifier.  This is
      used to indicate if the value exported was collected from the MIB
      closer to flow creation or flow export time and will refer to the
      Timestamp fields included in the same record.  This field SHOULD
      be used when exporting a mibObjectValue that specifies counters or
      statistics.

      If the OID could be sampled by SNMP prior to the IPFIX Metering
      Process or Exporting Process retrieving the value (i.e. the data
      is already stale) and it's important to know the exact SNMP
      sampling time, then an additional observationTime* element should
      be paired with the OID using structured data.  Similarly, if
      different mibCaptureTimeSemantics apply to different mibObject
      elements within the flow record, then individual
      mibCaptureTimeSemantics should be paired with each OID using
      structured data.

      Values:

      1.  undefined

      2.  flow creation - The value for the MIB Object is captured from
          the MIB when the Flow is created

      3.  flow end - The value for the MIB Object is captured from the
          MIB when the Flow ends

      4.  flow export - The value for the MIB Object is captured from
          the MIB the Flow is being Exported

      5.  average - The value for the MIB Object is an average of
          multiple captures from the MIB over the life of the Flow

      Abstract Data Type: unsigned8

      Data Type Semantics: identifier

      ElementId: TBD15

      Status: current

      Reference: [this document].








Aitken, et al.          Expires September 5, 2014              [Page 74]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


10.2.4.  mibContextEngineID

   A new Information Element "mibContextEngineID" must be allocated in
   IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: A mibContextEngineID ( also known as snmpEngineID)
      that specifies the SNMP engine ID for a mib field being exported
      over IPFIX.  Definition as per [RFC3411] section 3.3

      Abstract Data Type: octetArray

      Data Type Semantics: default

      ElementId: TBD16

      Status: current

      Reference: [this document].

10.2.5.  mibContextName

   A new Information Element "mibContextName" must be allocated in
   IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: This Information Element denotes that a MIB Context
      Name is specified for a mib field being exported over IPFIX.
      Reference [RFC3411] section 3.3

      Abstract Data Type: string

      Data Type Semantics: default

      ElementId: TBD17

      Status: current

      Reference: [this document].

10.3.  New mibType Information Elements

10.3.1.  mibObjectName

   A new Information Element "mibObjectName" must be allocated in IANA's
   IPFIX registry [IANA-IPFIX], with the following definition:

      Description: The name (called a descriptor in RFC 2578) of an
      object type definition.




Aitken, et al.          Expires September 5, 2014              [Page 75]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


      Abstract Data Type: string

      Data Type Semantics: default

      ElementId: TBD18

      Status: current

      Reference: [this document].

10.3.2.  mibObjectDescription

   A new Information Element "mibObjectDescription" must be allocated in
   IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: The value of the DESCRIPTION clause of an MIB object
      type definition.

      Abstract Data Type: string

      Data Type Semantics: default

      ElementId: TBD19

      Status: current

      Reference: [this document].

10.3.3.  mibObjectSyntax

   A new Information Element "mibObjectSyntax" must be allocated in
   IANA's IPFIX registry [IANA-IPFIX], with the following definition:

      Description: The value of the SYNTAX clause of an MIB object type
      definition.  This will start with abstract data structure of the
      MIB object which may be a base type, the BITS construct, a Textual
      Convention, SEQUENCE OF or SEQUENCE.  This may be followed by
      subtyping or enumeration for the object.  [RFC2578]

      Abstract Data Type: string

      Data Type Semantics: default

      ElementId: TBD20

      Status: current

      Reference: [this document].



Aitken, et al.          Expires September 5, 2014              [Page 76]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


10.3.4.  mibModuleName

   A new Information Element "mibModuleName" must be allocated in IANA's
   IPFIX registry [IANA-IPFIX], with the following definition:

      Description: The textual name of the MIB that defines a MIB OID
      Object.

      Abstract Data Type: string

      Data Type Semantics: default

      ElementId: TBD21

      Status: current

      Reference: [this document].

11.  Acknowledgements

   The authors would like to thank Andrew Johnson for his collaboration
   on the first version of the draft, and to thank Andrew Feren and
   Brian Trammell for their detailed reviews.

12.  References

12.1.  Normative References

   [BER]      International Organization for Standardization,
              "Information processing systems - Open Systems
              Interconnection - Specification of Basic Encoding Rules
              for Abstract Syntax Notation One (ASN.1),International
              Organization for Standardization.  International Standard
              8825, December 1987", <http://www.iso.org>.

   [IANA-IPFIX]
              IANA, "IPFIX Information Elements registry",
              <http://www.iana.org/assignments/ipfix/ipfix.xml>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2578]  McCloghrie, K., Ed., Perkins, D., Ed., and J.
              Schoenwaelder, Ed., "Structure of Management Information
              Version 2 (SMIv2)", STD 58, RFC 2578, April 1999.






Aitken, et al.          Expires September 5, 2014              [Page 77]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   [RFC3411]  Harrington, D., Presuhn, R., and B. Wijnen, "An
              Architecture for Describing Simple Network Management
              Protocol (SNMP) Management Frameworks", STD 62, RFC 3411,
              December 2002.

   [RFC4293]  Routhier, S., "Management Information Base for the
              Internet Protocol (IP)", RFC 4293, April 2006.

   [RFC7011]  Claise, B., Trammell, B., and P. Aitken, "Specification of
              the IP Flow Information Export (IPFIX) Protocol for the
              Exchange of Flow Information", STD 77, RFC 7011, September
              2013.

   [RFC7012]  Claise, B. and B. Trammell, "Information Model for IP Flow
              Information Export (IPFIX)", RFC 7012, September 2013.

12.2.  Informative References

   [RFC2863]  McCloghrie, K. and F. Kastenholz, "The Interfaces Group
              MIB", RFC 2863, June 2000.

   [RFC2982]  Kavasseri, R., "Distributed Management Expression MIB",
              RFC 2982, October 2000.

   [RFC3444]  Pras, A. and J. Schoenwaelder, "On the Difference between
              Information Models and Data Models", RFC 3444, January
              2003.

   [RFC4022]  Raghunarayan, R., "Management Information Base for the
              Transmission Control Protocol (TCP)", RFC 4022, March
              2005.

   [RFC4750]  Joyal, D., Galecki, P., Giacalone, S., Coltun, R., and F.
              Baker, "OSPF Version 2 Management Information Base", RFC
              4750, December 2006.

   [RFC5476]  Claise, B., Johnson, A., and J. Quittek, "Packet Sampling
              (PSAMP) Protocol Specifications", RFC 5476, March 2009.

   [RFC5610]  Boschi, E., Trammell, B., Mark, L., and T. Zseby,
              "Exporting Type Information for IP Flow Information Export
              (IPFIX) Information Elements", RFC 5610, July 2009.

   [RFC6313]  Claise, B., Dhandapani, G., Aitken, P., and S. Yates,
              "Export of Structured Data in IP Flow Information Export
              (IPFIX)", RFC 6313, July 2011.





Aitken, et al.          Expires September 5, 2014              [Page 78]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


Authors' Addresses

   Paul Aitken (editor)
   Cisco Systems, Inc.
   96 Commercial Quay
   Commercial Street
   Edinburgh  EH6 6LX
   UK

   Phone: +44 131 561 3616
   Email: paitken@cisco.com


   Benoit Claise
   Cisco Systems, Inc.
   De Kleetlaan 6a b1
   Diegem  1813
   Belgium

   Phone: +32 2 704 5622
   Email: bclaise@cisco.com


   Srikar
   Cisco Systems, Inc.
   Mail Stop BGL13/3/, SEZ Unit, Cessna Business Park, Kadubeesanahalli
   Village Varthur Hobli, Sarjapur Marathalli Outer Ring Road
   Bangalore  KARNATAKA 560 103
   IN

   Phone: +91 80 4426 3264
   Email: srikar@cisco.com


   Colin McDowall
   Cisco Systems, Inc.
   96 Commercial Quay
   Commercial Street
   Edinburgh  EH6 6LX
   UK

   Phone: +44 131 561 3634
   Email: cmcdowal@cisco.com








Aitken, et al.          Expires September 5, 2014              [Page 79]

Internet-Draft     Exporting MIB Variables with IPFIX         March 2014


   Juergen Schoenwaelder
   Jacobs University Bremen
   Campus Ring 1
   Bremen  28725
   Germany

   Phone: +49 421 200-3587
   Email: j.schoenwaelder@jacobs-university.de











































Aitken, et al.          Expires September 5, 2014              [Page 80]
