digits = 9 (see section 9.3 of [RFC6020]) with resolution of
digits = 9 (see section 9.3 of [RFC6020]) with resolution of
digits = 4 (see section 9.3 of [RFC6020]) with resolution of
Trunc = 30.0000 seconds.)

Reciprocal_lambda = 1/lambda, in seconds.
digits = 4 (see section 9.3 of [RFC6020]) with resolution of
digits = 9 (see section 9.3 of [RFC6020]) with resolution of
Max = (FiniteDelay [j])

                  such that for some index, j, where 1 <= j <= N
                  FiniteDelay[j] >= FiniteDelay[n] for all n

digits = 9 (see section 9.3 of [RFC6020]) with resolution of
digits = 9 (see section 9.3 of [RFC6020]) with resolution of
Max = (FiniteDelay [j])

                  such that for some index, j, where 1 <= j <= N
                  FiniteDelay[j] >= FiniteDelay[n] for all n

digits = 9 (see section 9.3 of [RFC6020]) with resolution of
Max = (FiniteDelay [j])

                  such that for some index, j, where 1 <= j <= N
                  FiniteDelay[j] >= FiniteDelay[n] for all n

RTDelay = RTD_fwd + RTD_rev

RTDelay_HS = RTD_HS_fwd + RTD_HS_rev

RTLoss = RTL_fwd + RTL_rev

Max = (FiniteDelay [j])

                  such that for some index, j, where 1 <= j <= N
                  FiniteDelay[j] >= FiniteDelay[n] for all n

