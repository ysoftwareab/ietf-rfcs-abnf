
SIMPLE                                                      J. Rosenberg
Internet-Draft                                               dynamicsoft
Expires: August 9, 2004                                 February 9, 2004


   An Extensible Markup Language (XML) Representation for Expressing
                          Policy Capabilities
              draft-rosenberg-simple-common-policy-caps-00

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups. Note that other
   groups may also distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on August 9, 2004.

Copyright Notice

   Copyright (C) The Internet Society (2004). All Rights Reserved.

Abstract

   An important component of presence and location services is policy.
   Policy systems allow the presentity or location target to grant
   access to specific pieces of information to specific watchers or
   requestors. These policy systems can be extremely simple, allowing a
   user to accept or block requests based solely on the identity of the
   requestor, to extremely complex, allowing for time based rules that
   grant or deny specific pieces of information. Policy systems often
   support vendor proprietary features. To allow for interoperability
   between clients which set such policies, and servers which execute
   them, it is necessary for clients to be able to determine the
   capabilities of the server to which it is connected. This
   specification defines an Extensible Markup Language (XML) based



Rosenberg                Expires August 9, 2004                 [Page 1]

Internet-Draft         Common Policy Capabilities          February 2004


   format for expressing such capabilities.

Table of Contents

   1.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   3.  Overview of Operation  . . . . . . . . . . . . . . . . . . . .  3
   4.  Structure of Policy Capabilities . . . . . . . . . . . . . . .  4
   5.  XML Schema . . . . . . . . . . . . . . . . . . . . . . . . . .  4
   6.  Example Document . . . . . . . . . . . . . . . . . . . . . . .  5
   7.  Usage with XCAP  . . . . . . . . . . . . . . . . . . . . . . .  6
   7.1 Application Unique ID  . . . . . . . . . . . . . . . . . . . .  6
   7.2 Structure of Supported Permissions . . . . . . . . . . . . . .  6
   7.3 Naming Conventions . . . . . . . . . . . . . . . . . . . . . .  6
   7.4 Authorization Policies . . . . . . . . . . . . . . . . . . . .  7
   8.  Security Considerations  . . . . . . . . . . . . . . . . . . .  7
   9.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . .  7
   9.1 XCAP Application Usage ID  . . . . . . . . . . . . . . . . . .  7
   9.2 URN Sub-Namespace Registrations  . . . . . . . . . . . . . . .  8
   9.3 XML Schema Registration  . . . . . . . . . . . . . . . . . . .  8
       Normative References . . . . . . . . . . . . . . . . . . . . .  8
       Informative References . . . . . . . . . . . . . . . . . . . .  9
       Author's Address . . . . . . . . . . . . . . . . . . . . . . .  9
       Intellectual Property and Copyright Statements . . . . . . . . 10



























Rosenberg                Expires August 9, 2004                 [Page 2]

Internet-Draft         Common Policy Capabilities          February 2004


1. Terminology

   In this document, the key words "MUST", "MUST NOT", "REQUIRED",
   "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
   and "OPTIONAL" are to be interpreted as described in RFC 2119 [1] and
   indicate requirement levels for compliant implementations.

2. Introduction

   An important component of presence [7] and location services [9] is
   policy. Policy systems allow the presentity or location target
   (referred to generically as the Presentity Target (PT)) to grant
   access to specific pieces of information to specific watchers or
   requestors (referred to as a WR). These policy systems can be
   extremely simple, allowing a PT to accept or block requests based
   solely on the identity of the WR, to extremely complex, allowing for
   time based rules that grant or deny specific pieces of information.
   [8] specifies a generic format for representing these policies, using
   the Extensible Markup Language (XML). These policies consist of
   conditions, actions, and transformations. That specification defines
   very few actual conditions, actions or transformations. Rather, it
   leaves such definitions to actual policy systems, such as [10] for
   location services, and [11] for presence services.

   In addition to the conditions, actions and transformations specificed
   in the documents referenced above, policy systems often support
   vendor proprietary features. It is also anticipated that future
   specifications will be continually developed that add new types of
   policies. This presents an interoperability challenge. Clients may
   support policies that are not supported by the servers they are
   using. This could lead to protocol failures or poor user experiences.

   To address this problem, it is necessary for a capability declaration
   system to be put in place. This specification defines a general
   purpose format for representing policy capabilities within the
   framework established in [8].

3. Overview of Operation

   This specification defines an XML-based document format that allows a
   server to represent its capabilities. When a client, acting as an
   agent of a PT, starts up, it obtains this document from its policy
   server. This specification does not prescribe a singular means of
   transporting such a document between the server and the client. It is
   anticipated that different systems may use different techniques.
   However, for systems that make use of the XML Configuration Access
   Protocol (XCAP) [4], Section 7 defines an application usage that
   allows for the transfer of the document using XCAP.



Rosenberg                Expires August 9, 2004                 [Page 3]

Internet-Draft         Common Policy Capabilities          February 2004


   Once the document has been obtained by the client, it can determine
   which actions, conditions and transformations are understood by the
   server. This set is matched against those supported by the client.
   Those actions, conditions and transformations  supported by the
   client, but not by the server, can be "greyed out" from a user
   interface, for example.

   It is anticipated that the capabilities of the server can change over
   time. As a result, it is RECOMMENDED that clients obtain a fresh copy
   of the capabilities document each time they start.

4. Structure of Policy Capabilities

   A supported permission documentis an XML [5] document that MUST be
   well-formed and SHOULD be valid. Supported permission documents MUST
   be based on XML 1.0 and MUST be encoded using UTF-8. This
   specification makes use of XML namespaces for identifying supported
   permission documents and document fragments. The namespace URI for
   elements defined for this purpose is a URN [2], using the namespace
   identifier 'ietf' defined by [3] and extended by [6]. This URN is:
      urn:ietf:params:xml:ns:supported-permissions

   A supported permission document is structured much like a policy
   document [8]. The root element is "supported-permissions". This
   element has three children - "conditions", "actions", and
   "transformations". Each of these contain a list of the supported
   conditions, actions, and transformations, respectively. Generally
   speaking, each specific condition, action or transformation element
   (referred to as a capability element) is empty, unless it requires
   additional content to further refine the capability.

   This specification defines four capability elements - "identity",
   "validity", "sphere" and "confirmation", matching the four
   permissions defined in [8]. Other specifications that define
   additional permissions SHOULD also define matching capability
   elements.

   A server constructing a document to represent its capabilities MUST
   include all of those supported, even if those capabilities represent
   mandatory-to-implement features. However, the server MAY indicate
   differing sets of capabilities to different users. As such, the set
   of capabilities combines both the ability and the willingness to
   support those permissions.

5. XML Schema


   <xs:schema



Rosenberg                Expires August 9, 2004                 [Page 4]

Internet-Draft         Common Policy Capabilities          February 2004


   targetNamespace="urn:ietf:params:xml:ns:supported-permissions"
   xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns:cp="urn:ietf:params:xml:ns:supported-permissions"
   elementFormDefault="qualified" attributeFormDefault="unqualified">
    <xs:element name="supported-permissions">
     <xs:complexType>
      <xs:sequence>
       <xs:element name="conditions" minOccurs="0">
        <xs:complexType>
         <xs:sequence>
          <xs:element ref="cp:condition" minOccurs="0" maxOccurs="unbounded"/>
         </xs:sequence>
        </xs:complexType>
       </xs:element>
       <xs:element name="actions" minOccurs="0">
        <xs:complexType>
         <xs:sequence>
          <xs:element ref="cp:action" minOccurs="0" maxOccurs="unbounded"/>
         </xs:sequence>
        </xs:complexType>
       </xs:element>
       <xs:element name="transformations" minOccurs="0">
        <xs:complexType>
         <xs:sequence>
          <xs:element ref="cp:transformation" minOccurs="0"
                      maxOccurs="unbounded"/>
         </xs:sequence>
        </xs:complexType>
       </xs:element>
      </xs:sequence>
     </xs:complexType>
    </xs:element>
    <xs:element name="condition" abstract="true"/>
    <xs:element name="action" abstract="true"/>
    <xs:element name="transformation" abstract="true"/>
    <xs:element name="validity" substitutionGroup="cp:condition"/>
    <xs:element name="sphere" substitutionGroup="cp:condition"/>
    <xs:element name="identity" substitutionGroup="cp:condition"/>
    <xs:element name="confirmation" substitutionGroup="cp:action"/>
   </xs:schema>


6. Example Document

   The following document indicates that the identity, validity, sphere
   and confirmation attributes are supported. It also indicates that a
   vendor-specific condition, called "temp", is supported, in addition
   to two vendor-specific transformations - "max-security" and



Rosenberg                Expires August 9, 2004                 [Page 5]

Internet-Draft         Common Policy Capabilities          February 2004


   "min-security".


   <?xml version="1.0" encoding="UTF-8"?>
   <supported-permissions
   xmlns="urn:ietf:params:xml:ns:supported-permissions"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="urn:ietf:params:xml:ns:supported-permissions"
   xmlns:vpp="http://www.vendor.com/extension1">
     <conditions>
       <identity/>
       <validity/>
       <sphere/>
       <vpp:temp/>
     </conditions>
     <actions>
       <confirmation/>
     </actions>
     <transformations>
       <vpp:min-security/>
       <vpp:max-security/>
     </transformations>
   </supported-permissions>


7. Usage with XCAP

   The following section defines the details necessary for clients to
   read supported permissions documents from a server using XCAP.

7.1 Application Unique ID

   XCAP requires application usages to define a unique application usage
   ID (AUID) in either the IETF tree or a vendor tree. This
   specification defines the "supported-permissions" AUID within the
   IETF tree, via the IANA registration in Section 9.

7.2 Structure of Supported Permissions

   The structure of the document is defined in Section 4, and the schema
   is defined in Section 5.

7.3 Naming Conventions

   When a client starts, it can fetch the permissions understood by the
   server in one of two places. If the server capabilities differ on a
   user by user basis, the supported permissions for user foo can be
   found in http://[xcap root services uri]/supported-permissions/users/



Rosenberg                Expires August 9, 2004                 [Page 6]

Internet-Draft         Common Policy Capabilities          February 2004


   foo/sp.xml. A client SHOULD check this file first. If this document
   doesn't exist, the client should next check for the system wide
   permissions by checking http://[xcap root services uri]/
   supported-permissions/global/sp.xml.

7.4 Authorization Policies

   By default, a user cannot modify the supported permissions document -
   they can only read it. Write access is granted only to
   administrators.

8. Security Considerations

   Supported permission documents reveal capability information about a
   server. This information can potentially be used by an enterprise to
   determine the features found in competitive products. However, such
   information could just as easily be obtained through other means, for
   example, by signing up as a legitimate user of the competitive
   service. Because supported permission documents can vary by user to
   user, they can also reveal information about the grade of service
   offered to a particular user. However, this information does not
   appear particularly sensitive. As a result, encryption of these
   documents is not terribly important.

   If an attacker can modify the contents of a supported permission
   document as it passes from client to server, the attacker can remove
   capability elements, therefore reducing the level of service received
   by the client. This can therefore form a type of denial-of-service
   attack. As a result, systems which transfer these documents SHOULD
   provide for message integrity.

9. IANA Considerations

   There are several IANA considerations associated with this
   specification.

9.1 XCAP Application Usage ID

   This section registers an XCAP Application Usage ID (AUID) according
   to the IANA procedures defined in [4].
      Name of the AUID: supported-permissions
      Description: Supported permissions are documents that describe the
      types of permissions which are supported by a policy server. For
      example, these permissions specify the information that watchers
      [7] of presence are allowed to see.






Rosenberg                Expires August 9, 2004                 [Page 7]

Internet-Draft         Common Policy Capabilities          February 2004


9.2 URN Sub-Namespace Registrations

   This section registers a new XML namespace, as per the guidelines in
   [6]
      URI: The URI for this namespace is
      urn:ietf:params:xml:ns:supported-permissions.
      Registrant Contact: IETF, SIMPLE working group, (simple@ietf.org),
      Jonathan Rosenberg (jdrosen@jdrosen.net).
      XML:


                BEGIN
                <?xml version="1.0"?>
                <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.0//EN"
                          "http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd">
                <html xmlns="http://www.w3.org/1999/xhtml">
                <head>
                  <meta http-equiv="content-type"
                     content="text/html;charset=iso-8859-1"/>
                  <title>Supported Permissions Namespace</title>
                </head>
                <body>
                  <h1>Namespace for Supported Permissions</h1>
                  <h2>urn:ietf:params:xml:ns:supported-permissions</h2>
                  <p>See <a href="[[[URL of published RFC]]]">RFCXXXX</a>.</p>
                </body>
                </html>
                END


9.3 XML Schema Registration

   This section registers an XML schema as per the procedures in [6].
      URI: please assign.
      Registrant Contact: IETF, SIMPLE working group, (simple@ietf.org),
      Jonathan Rosenberg (jdrosen@jdrosen.net).
      The XML for this schema can be found as the sole content of
      Section 5.

Normative References

   [1]  Bradner, S., "Key words for use in RFCs to Indicate Requirement
        Levels", BCP 14, RFC 2119, March 1997.

   [2]  Moats, R., "URN Syntax", RFC 2141, May 1997.

   [3]  Moats, R., "A URN Namespace for IETF Documents", RFC 2648,
        August 1999.



Rosenberg                Expires August 9, 2004                 [Page 8]

Internet-Draft         Common Policy Capabilities          February 2004


   [4]  Rosenberg, J., "The Extensible Markup Language (XML)
        Configuration Access Protocol (XCAP)", draft-ietf-simple-xcap-01
        (work in progress), October 2003.

   [5]  Bray, T., Paoli, J., Sperberg-McQueen, C. and E. Maler,
        "Extensible Markup Language (XML) 1.0 (Second Edition)", W3C
        FirstEdition REC-xml-20001006, October 2000.

   [6]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688, January
        2004.

Informative References

   [7]   Day, M., Rosenberg, J. and H. Sugano, "A Model for Presence and
         Instant Messaging", RFC 2778, February 2000.

   [8]   Schulzrinne, H., Morris, J., Tschofenig, H., Cuellar, J., Polk,
         J. and J. Rosenberg, "Common Policy",
         draft-ietf-geopriv-common-policy-00 (work in progress),
         February 2004.

   [9]   Cuellar, J., Morris, J. and D. Mulligan, "Geopriv
         requirements", draft-ietf-geopriv-reqs-04 (work in progress),
         October 2003.

   [10]  Schulzrinne, H., Morris, J., Tschofenig, H., Cuellar, J. and J.
         Polk, "Geopriv Authorization Rules",
         draft-ietf-geopriv-rules-00 (work in progress), February 2004.

   [11]  Rosenberg, J., "Presence Authorization Rules",
         draft-rosenberg-simple-rules-00 (work in progress), February
         2004.


Author's Address

   Jonathan Rosenberg
   dynamicsoft
   600 Lanidex Plaza
   Parsippany, NJ  07054
   US

   Phone: +1 973 952-5000
   EMail: jdrosen@dynamicsoft.com
   URI:   http://www.jdrosen.net






Rosenberg                Expires August 9, 2004                 [Page 9]

Internet-Draft         Common Policy Capabilities          February 2004


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights. Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11. Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard. Please address the information to the IETF Executive
   Director.


Full Copyright Statement

   Copyright (C) The Internet Society (2004). All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works. However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assignees.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION



Rosenberg                Expires August 9, 2004                [Page 10]

Internet-Draft         Common Policy Capabilities          February 2004


   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.











































Rosenberg                Expires August 9, 2004                [Page 11]


