

Network Working Group                                        S. Pfeiffer
Internet-Draft                                                 C. Parker
Expires: September 5, 2006                                         CSIRO
                                                                 A. Pang
                                                                     RSR
                                                           March 4, 2006


        The Continuous Media Markup Language (CMML), Version 2.1
                         draft-pfeiffer-cmml-03

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on September 5, 2006.

Copyright Notice

   Copyright (C) The Internet Society (2006).

Abstract

   This specification defines the Continuous Media Markup Language
   (CMML), version 2.1, an XML-based [1] markup language for time-
   continuous data.  It is a sister document to the specification of the
   Annodex [2] annotation, indexing and hyperlinking format for time-
   continuous data.  A CMML file is essentially a textual representation
   of an Annodex file.



Pfeiffer, et al.        Expires September 5, 2006               [Page 1]

Internet-Draft                    CMML                        March 2006


   The tags of a CMML file provide for the creation of structured and
   unstructured annotations as well as hyperlinks and addressable named
   anchor points for clips of time-continuous data.  Through its import
   tag, the CMML is also an authoring language for Annodex [2] streams.
   The tag names in use in CMML are similar to the ones in XHTML [3].

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [4].


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  4
   2.  The CMML data types  . . . . . . . . . . . . . . . . . . . . .  6
     2.1.  ContentType  . . . . . . . . . . . . . . . . . . . . . . .  6
     2.2.  LinkTypes  . . . . . . . . . . . . . . . . . . . . . . . .  6
     2.3.  MediaDesc  . . . . . . . . . . . . . . . . . . . . . . . .  7
     2.4.  Text . . . . . . . . . . . . . . . . . . . . . . . . . . .  8
     2.5.  URI  . . . . . . . . . . . . . . . . . . . . . . . . . . .  8
     2.6.  LanguageCode . . . . . . . . . . . . . . . . . . . . . . .  8
     2.7.  Internationalisation support . . . . . . . . . . . . . . .  8
     2.8.  Time specifications  . . . . . . . . . . . . . . . . . . .  9
     2.9.  Core Attributes  . . . . . . . . . . . . . . . . . . . . .  9
   3.  The preamble and the 'cmml' root element . . . . . . . . . . . 10
   4.  The cmml 'stream' tag  . . . . . . . . . . . . . . . . . . . . 11
     4.1.  The 'import' tag . . . . . . . . . . . . . . . . . . . . . 12
     4.2.  The 'param' tag  . . . . . . . . . . . . . . . . . . . . . 13
   5.  The cmml 'head' element  . . . . . . . . . . . . . . . . . . . 15
     5.1.  The 'title' element  . . . . . . . . . . . . . . . . . . . 15
     5.2.  The 'base' element . . . . . . . . . . . . . . . . . . . . 16
     5.3.  The 'meta' element . . . . . . . . . . . . . . . . . . . . 16
     5.4.  The 'link' element . . . . . . . . . . . . . . . . . . . . 17
   6.  The cmml 'clip' tag  . . . . . . . . . . . . . . . . . . . . . 18
     6.1.  The 'meta' element . . . . . . . . . . . . . . . . . . . . 19
     6.2.  The 'a' element  . . . . . . . . . . . . . . . . . . . . . 19
     6.3.  The 'img' element  . . . . . . . . . . . . . . . . . . . . 19
     6.4.  The 'desc' element . . . . . . . . . . . . . . . . . . . . 20
   7.  Serialising CMML . . . . . . . . . . . . . . . . . . . . . . . 21
     7.1.  The format of the CMML ident header packet . . . . . . . . 21
     7.2.  The format of the CMML secondary headers . . . . . . . . . 22
     7.3.  The format of the CMML data packets  . . . . . . . . . . . 23
   8.  Mapping CMML into Ogg and Annodex  . . . . . . . . . . . . . . 25
     8.1.  Media mapping for a CMML logical bitstream inside Ogg  . . 25
     8.2.  Using CMML to author Annodex bitstreams  . . . . . . . . . 26
       8.2.1.  Creating the skeleton ident packet . . . . . . . . . . 27
       8.2.2.  Creating the skeleton fisbone packets  . . . . . . . . 27
       8.2.3.  The CMML fisbone packet fields . . . . . . . . . . . . 28



Pfeiffer, et al.        Expires September 5, 2006               [Page 2]

Internet-Draft                    CMML                        March 2006


       8.2.4.  Usage of the 'stream' tag  . . . . . . . . . . . . . . 29
   9.  Extracting CMML from Annodex bitstreams  . . . . . . . . . . . 31
     9.1.  Extracting the preamble, 'head' and 'clip' tags  . . . . . 31
     9.2.  Creating a 'stream' tag  . . . . . . . . . . . . . . . . . 31
   10. MIME media type registration for 'text/cmml' . . . . . . . . . 33
     10.1. URI addressing into CMML files . . . . . . . . . . . . . . 33
       10.1.1. Query parameters for use with the http protocol
               server-side  . . . . . . . . . . . . . . . . . . . . . 34
       10.1.2. Fragment identifiers for use with the http
               protocol client-side . . . . . . . . . . . . . . . . . 35
   11. Security considerations  . . . . . . . . . . . . . . . . . . . 36
   12. ChangeLog  . . . . . . . . . . . . . . . . . . . . . . . . . . 37
   13. References . . . . . . . . . . . . . . . . . . . . . . . . . . 37
   Appendix A.  CMML DTD  . . . . . . . . . . . . . . . . . . . . . . 39
   Appendix B.  An example CMML document  . . . . . . . . . . . . . . 47
   Appendix C.  Definitions of terms and abbreviations  . . . . . . . 48
   Appendix D.  Glossary of acronyms  . . . . . . . . . . . . . . . . 49
   Appendix E.  Acknowledgements  . . . . . . . . . . . . . . . . . . 50
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 51
   Intellectual Property and Copyright Statements . . . . . . . . . . 52































Pfeiffer, et al.        Expires September 5, 2006               [Page 3]

Internet-Draft                    CMML                        March 2006


1.  Introduction

   The Continuous Media Markup Language (CMML) specifies XML based
   markup for time-continuous data to allow it to become an integral
   part of the World Wide Web analogously to how HTML allowed text
   documents to become part of the Web. Therefore, format of the CMML
   derives much from XHTML.

   CMML allows to attach free-text annotations, metadata, captions and
   other textual information to clips of time-continuous data, thus
   enabling a timed textual representation of the data, which can be
   indexed by Web search engines.

   CMML also allows to attach a hyperlink to clips of time-continuous
   data, enabling Web search engines to crawl the content.  This also
   enables users to surf seamlessly between time-continuous data and
   other Web resources, integrating clips of media into the browsing
   history of a Web browser.

   CMML also allows to attach a representative image to clips of time-
   continuous data, providing for a visual representation of the clip in
   conjunction with the textual representation as, for example, in the
   presentation of search results or in a table of clips.

   CMML provides for a "head" element to store information that concerns
   the complete time-continous resource, and a set of "clip" elements
   that each store information for a temporal subpart of the resource.

   The practical use of a CMML file is in conjunction with the Annodex
   exchange format [2].  CMML markup can be interleaved inside an
   Annodex file or stream to allow a synchronised delivery of marked-up
   time-continuous data in a single stream between a Web server and a
   user agent.

   CMML has also been designed as an authoring language for Annodex
   bitstreams.  It allows to describe the time-continuous data
   bitstream(s) that need to be multiplexed together to create an
   Annodex bitstream.  This information is stored in the "stream"
   element of a CMML document.  Such a document can be used to control
   the multiplexing process that creates an Annodex file.

   The following picture illustrates the multiplexing activity
   schematically; in reality, the stream tag is not preserved in its
   original form and some attribute values are also encoded in the
   binary data.  Details of how CMML markup is encoded in an Annodex
   bitstream are given later in this document.





Pfeiffer, et al.        Expires September 5, 2006               [Page 4]

Internet-Draft                    CMML                        March 2006


      ----------
      |stream  | CMML
      ---------- instance
      | head   | document
      ----------
      | clip_1 |     ---------------------------------------------------
      ----------     | data bitstream in packets                       |
      | ...    |     ---------------------------------------------------
      ----------          |
      | clip_n |          |
      ----------          |
          |               |
          ------->-<-------
                  |          Multiplexing
                  |
                  v
   ---------------------------------------------------------------------
   |stream|head|clip_1|  data packets         |clip_2| data packets  ...
   ---------------------------------------------------------------------

   The CMML is technically fully specified through its DTD as given in
   the Appendix.  The semantic meaning of each of the tags, their
   content and their attributes is specified in the following sections.
   The Appendix also contains an example of a CMML (instance) document.

   The file extension of CMML files is ".cmml".  This document also
   applies for registration of the mime-type "text/cmml" for CMML files
   with IANA.  In the meantime, "text/x-cmml" will be used.

   Please note that this document assumes that the reader has a fluent
   working knowledge of Extensible Markup Language (XML) [1], Hypertext
   Markup Language (HTML) [5], XHTML [3] and the World Wide Web. Basic
   knowledge about the Annodex [2] format is also assumed.


















Pfeiffer, et al.        Expires September 5, 2006               [Page 5]

Internet-Draft                    CMML                        March 2006


2.  The CMML data types

   At the beginning of the CMML DTD, several parameter entities are
   defined that are used throughout the DTD as data types.  This section
   gives a brief overview of them and refers to the relevant standards
   in which they are defined.

2.1.  ContentType

   A "ContentType" specifies the media type and subtype of a document as
   defined in RFC 2045 [6].  It is used to specify the type of content
   that one input time-continuous bitstream contains.  Examples are
   "application/annodex", "audio/x-speex", "video/x-theora", or "video/
   mpeg".

2.2.  LinkTypes

   "LinkTypes" specifies a space-separated list of the types of
   relationships a linked, i.e. related, document has to the current
   one.  As in XHTML, user agents, search engines, etc. may interpret
   these link types in a variety of ways.  For example, user agents may
   provide access to linked documents through a navigation bar.  Authors
   may use the following recognized link types which are a superset of
   the ones used for XHTML/HTML:

   o  edit: Refers to a document that allows editing the resource.  This
      enables a document author to allow others to edit the CMML which
      is the basis for an Annodex resource.

   o  alternate: Designates substitute versions for the document in
      which the link occurs.  When used together with the media
      attribute, it implies a version designed for a different medium
      (or media).

   o  stylesheet: Refers to an external style sheet.

   o  start: Refers to the first document in a collection of documents.
      This link type tells search engines which document is considered
      by the author to be the starting point of the collection.

   o  next: Refers to the next document in a linear sequence of
      documents.  User agents may choose to pre-load the "next"
      document, to reduce the perceived load time.

   o  prev: Refers to the previous document in an ordered series of
      documents.





Pfeiffer, et al.        Expires September 5, 2006               [Page 6]

Internet-Draft                    CMML                        March 2006


   o  contents: Refers to a document serving as a table of contents.
      Although this may seem strange in a CMML file, it makes sense in
      an Annodex file and may simply refer back to the CMML file or to a
      HTML page that provides similar information.

   o  index: Refers to a document providing an index for the current
      document.

   o  glossary: Refers to a document providing a glossary of terms that
      pertain to the current document.

   o  copyright: Refers to a copyright statement for the current
      document.  While this could also be given in the meta tags, this
      could refer to a formatted, legal document.

   o  chapter: Refers to a document serving as a chapter in a collection
      of documents.

   o  section: Refers to a document serving as a section in a collection
      of documents.

   o  subsection: Refers to a document serving as a subsection in a
      collection of documents.

   o  appendix: Refers to a document serving as an appendix in a
      collection of documents.

   o  help: Refers to a document offering help (more information, links
      to other sources information, etc.)

   o  bookmark: Refers to a bookmark.  A bookmark is a link to a key
      entry point within an extended document.  The title attribute may
      be used, for example, to label the bookmark.  Note that several
      bookmarks may be defined in each document.

2.3.  MediaDesc

   A "MediaDesc" describes one or several types of devices for which the
   given style is appropriate.  It is given as a list of comma-separated
   media descriptors.  Which devices are supported will need to be
   specified in a separate style sheet specification.  The following set
   of device types, adapted from XHTML/HTML in CSS1 [7] and CSS2 [8],
   are recognized:

   o  all: suitable for all devices.

   o  aural: suitable for speech synthesizers.




Pfeiffer, et al.        Expires September 5, 2006               [Page 7]

Internet-Draft                    CMML                        March 2006


   o  braille: intended for braille tactile feedback devices.

   o  embossed: intended for paged braille printers.

   o  handheld: intended for handheld devices (characterized by a small,
      monochrome or colour display and limited bandwidth).

   o  print: intended for paged output to a printer or print preview on
      a screen.

   o  projection: intended for projected presentations (projectors or
      print to transparencies).

   o  screen: intended for non-paged, colour computer screens.

   o  tty: intended for fixed-pitch character grid displays (such as the
      teletypes or terminals).

   o  tv: for television-type devices with low resolution and limited
      scrollability.

2.4.  Text

   A "Text" describes a short, free form text being used for the "title"
   attribute.

2.5.  URI

   A "URI" is a character string that conforms to the specification of
   the Uniform Resource Identifier as defined in RFC 3986 [9].  A URI
   generally points to a Web resource.  The URI time interval
   specification [10] is supported for CMML and Annodex files.  Also,
   direct addressing of clips as specified in the MIME type application
   part of this document is supported for CMML and Anndex files.

2.6.  LanguageCode

   The "LanguageCode" defines a collection of constant strings that each
   identify a specific language as defined in RFC 1766 [11].  Examples
   are: en-au, de, x-klingon.  Language codes are used to provide
   internationalisation support.

2.7.  Internationalisation support

   To provide international language support, the i18n entity draws
   together a language given by a "LanguageCode" in "lang" with the
   directionality of that language in "dir" given either as ltr (left-
   to-right) or rtl (right-to-left). "ltr" is the default.



Pfeiffer, et al.        Expires September 5, 2006               [Page 8]

Internet-Draft                    CMML                        March 2006


2.8.  Time specifications

   There are three different time specifications in use in CMML:
   "Timestamp", "Playbacktime" and "UTCtime".

   A "Timestamp" is generally a name-value pair which defines a time
   point.  The time point value is interpreted according to the time
   scheme given in the name.  If the name is ommitted, it defaults to
   "npt:".  Valid time schemes are the ones defined in the temporal URI
   specification [10].

   The "Playbacktime" entity is a data type that just specifies a SMPTE
   [12] or a NPT [13] time.  It is therefore equal to the Timestamp
   entity without the UTC [14] specification.

   The "UTCtime" entity is a data type that just specifies a UTC time
   without an identifier.  UTC time is specified as in the Timestamp
   entity, but without the "clock:" identifier.

2.9.  Core Attributes

   To cluster together the attributes that are common to most
   displayable elements, the "attrs" entity draws them together.  As
   "i18n" is already a cluster, a "coreattrs" entity is defined, which
   groups together the other commonly used attributes for displayable
   elements, namely the unique identifier given in "id", the "class"
   attribute which provides a space-separated list of style sheet
   classes that the element belongs to, and the "title" attribute, which
   provides a short tooltip-like description for an element.






















Pfeiffer, et al.        Expires September 5, 2006               [Page 9]

Internet-Draft                    CMML                        March 2006


3.  The preamble and the 'cmml' root element

   A CMML file is an XML instance document of the CMML DTD.  An example
   is given in the Appendix.  It starts with the usual xml directive and
   the DTD specification (see
   http://www.w3.org/TR/REC-xml#sec-prolog-dtd).  The following is an
   example preamble:

   <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
   <!DOCTYPE cmml SYSTEM "cmml.dtd">

   After the preamble, the CMML tag follows.  A CMML file has a "cmml"
   tag as the root element.  It embraces all the other tags.

   <!ELEMENT cmml (stream?, head, clip*)>
   <!ATTLIST cmml
     %i18n;
     id          ID             #IMPLIED
     xmlns       %URI;          #FIXED 'http://www.annodex.net/cmml'
     granulerate CDATA          #IMPLIED
     >

   The "cmml" tag encloses at most one "stream" element, exactly one
   "head" element, and as many "clip" elements as the document author
   requires.  A "clip" element describes a section of the related
   Annodex bitstream.

   Attributes of the "cmml" element are the usual xml root tag
   attributes: the internationalisation attributes "lang" and "dir", an
   identifier "id", a fixed namespace "xmlns", and the "granulerate".

   The internationalisation attributes specify the default language
   (language and directionality) of the complete CMML document.  If not
   given, the language default adheres to the same rules as HTML, where
   the setting of the HTTP "Content-Language" header may specify the
   default language of a HTML document received over HTTP, or ultimately
   the user agent defaults and user preferences set the language. (see
   http://www.w3.org/TR/REC-html40/struct/dirlang.html)

   Every element has an "id" attribute.  The value of the "id" attribute
   MUST be unique within the document.  It allows to uniquely identify
   an instance of an element and address it.

   The "granulerate" attribute may provide a base temporal resolution
   for the CMML bitstream.  This is in particular used for creation of
   Annodex files from a given CMML instance document.





Pfeiffer, et al.        Expires September 5, 2006              [Page 10]

Internet-Draft                    CMML                        March 2006


4.  The cmml 'stream' tag

   The "stream" element contains information that is used for authoring
   Annodex [2] bitstreams from existing time-continuous data.  The
   Annodex bistream is created by multiplexing the bitstreams given in
   the "src" attributes of the "import" tags of the "stream" element
   together with the CMML annotations in a time-synchronous manner.

   The "stream" element describes in the "import" tags the input time-
   continuous bitstreams that are to be multiplexed together on
   authoring the Annodex bitstream.  Its attributes describe other
   features of the Annodex bitstream such as the time mappings for the
   start of the file.

   <!ELEMENT stream (import*)>
   <!ATTLIST stream
     id          ID             #IMPLIED
     basetime    %Playbacktime; "0"
     timebase    %Playbacktime; "0"
     utc         %UTCtime;      #IMPLIED
     >

   The "stream" element has no text attributes and thus
   internationalisation attributes are not required.  The "id" attribute
   follows the default language specified in the "cmml" element.

   The "basetime" attribute contains a playback time in seconds
   associated with the first data packet of the Annodex bitstream.  All
   other times in the CMML file MUST be calculated relative to this
   basetime.  For example, a basetime of 300 seconds npt for a video
   file implies that the first frame is related to a play time of 300
   seconds, and a clip with a start time of 350 seconds is to be
   included 50 seconds into the Annodex bitstream.  If no basetime (or
   no stream tag) is given, the basetime defaults to 0 npt.  The
   basetime can be given as a SMPTE or NPT time, or as a rational number
   as in 5/1300, but not as a utc time.

   The "timebase" attribute is retained in CMML 2.1 for backwards
   compatibility, but deprecated.  It will disappear with CMML 3.0.  The
   "basetime" attribute has precedence over the "timebase" attribute.

   The "utc" attribute associates a calendar date and a wall-clock time
   with the basetime.  It therefore provides a mapping of the basetime
   to a real-world clock time and is given as a UTC time.  If it is
   omitted, the start attribute in the import tag, and the start and end
   attributes in clip tags MUST NOT be specified as UTC times.

   The content model of the "stream" tag then proposes an arbitrary



Pfeiffer, et al.        Expires September 5, 2006              [Page 11]

Internet-Draft                    CMML                        March 2006


   number of input bitstreams.  These are described one by one in the
   "import" element.

4.1.  The 'import' tag

   A "import" tag contains information on one of the input bitstreams
   for the multiplexing process.  It may also contain additional
   parameters to set up the Annodex encoder for each import bitstream.

   <!ELEMENT import (param*)>
   <!ATTLIST import
     %i18n;
     id          ID             #IMPLIED
     title       CDATA          #IMPLIED
     granulerate CDATA          #IMPLIED
     contenttype %ContentType;  #IMPLIED
     src         %URI;          #REQUIRED
     start       %Timestamp;    "0"
     end         %Timestamp;    #IMPLIED
     >

   The relevant bitstream (fragment) is referenced through the "src"
   attribute.  The src is a URI and may thus also contain a time
   interval specification in URIs which narrows down the input file to
   that given subpart.  That resource is multiplexed into the Annodex
   bitstream starting at the time given in the "start" attribute and
   ending at the latest at the time given in the "end" attribute.  The
   "start" and "end" attributes are interpreted relative to the timeline
   of the Annodex bitstream.

   The internationalisation attributes provide the language of the
   import element's and the contained param tags' attribute values, such
   as the "id" attributes and the "title" attribute.

   The optional "title" attribute provides a chance to jot down a human
   readable comment on the source bitstream.  This may e.g. be used in
   authoring applications for a more human readable display than the
   "id" tag which is really a key for identifying elements uniquely.

   The "granulerate" attribute contains the base temporal resolution in
   Hz of the input bitstream referred in the "src" attribute.  It
   depends on the encoding format of the input bitstream and typically
   contains the framerate for video (e.g. 25 frames/sec) and the
   samplerate for audio (e.g. 44100 samples/sec), but may contain any
   rational number given with an integer denominator larger than 1 sec
   (e.g. 25 frames on 2 seconds).  Each bitstream has its own
   granulerate dependent on its specific encoding.  This attribute is
   implied as it can be determined automatically during the multiplexing



Pfeiffer, et al.        Expires September 5, 2006              [Page 12]

Internet-Draft                    CMML                        March 2006


   process from the headers of the encoded media bitstream.  For
   bitstreams without header, such as uncompressed audio, the author of
   the CMML file can provide the granulerate to the multiplexer in this
   attribute.

   The "contenttype" attribute specifies the media type [6] of the input
   bitstream referred in the "src" attribute.  It is optional as the
   media type can often be derived from the file name or file header of
   the media source during multiplexing.

   The "src" attribute specifies a URI to the input bitstream.  Commonly
   used URI schemes are "file" and "http".  For specifying temporal
   subsets of the input bitstream, use the time interval specification
   for URIs [10].

   The "start" attribute specifies a time in the output Annodex
   bitstream at which the media bitstream will be inserted.  This time
   is specified with respect to the "basetime" attribute given in the
   "stream" element.

   The "end" attribute specifies a time in the output Annodex bitstream
   at which the media bitstream will stop at the latest.  This time is
   also specified with respect to the "basetime" attribute given in the
   "stream" element.  This attribute is not required when the full
   bitstream is used.

   The content model of the "import" tag then allows an arbitrary number
   of "param" tags to add as many descriptive parameter values to the
   mulitplexing activity as necessary.

4.2.  The 'param' tag

   A "param" tag is empty, but its attributes contain a name-value pair
   for describing the input bitstream in the parent "import" element.
   It inherits its internationalisation from that element, too, to avoid
   overhead.  The "param" element is declared as follows:

   <!ELEMENT param EMPTY>
   <!ATTLIST param
     id          ID             #IMPLIED
     name        CDATA          #REQUIRED
     value       CDATA          #REQUIRED
     >

   The "name" attribute identifies a property name.  It does not list
   legal values for this attribute.

   The "value" attribute specifies a property's value.  It does not list



Pfeiffer, et al.        Expires September 5, 2006              [Page 13]

Internet-Draft                    CMML                        March 2006


   legal values for this attribute.

   An example parametrisation is the provision of machine-processable
   low level meta information about the import bitstream such as a
   video's image height and width and framerate.














































Pfeiffer, et al.        Expires September 5, 2006              [Page 14]

Internet-Draft                    CMML                        March 2006


5.  The cmml 'head' element

   The CMML "head" element contains annotation information on the
   complete Annodex bitstream, for whose creation the CMML file is used.
   It therefore contains header-type information such as a title, style
   information, related documents and meta information describing the
   bitstream.

   The "head" element is declared as the following:

   <!ENTITY % head.misc "(meta|link)*">
   <!ELEMENT head (%head.misc;,
                   ((title, %head.misc;, (base, %head.misc;)?) |
                    (base, %head.misc;, (title, %head.misc;))))>
   <!ATTLIST head
     %i18n;
     id          ID             #IMPLIED
     profile     %URI;          #IMPLIED
     >

   The "head" tag must contain a "title" tag.  It may contain one "base"
   tag before or after the "title" tag and any number of "meta" or
   "link" tags at any position.

   The "%i18n;" attribute specifies the base language of the "head"
   tag's attribute values.

   The value of the "profile" attribute is a space-separated list of
   base URIs specifying locations of "meta" tag schemes such as the
   Dublin Core (see http://dublincore.org/).  These schemes may be used
   in the "meta" elements of the "head" or the "clip" tags.

5.1.  The 'title' element

   The "title" tag gives a descriptive title for the complete Annodex
   bitstream.  It is not considered to be part of the presentation and
   should be displayed, e.g. as the title of the window that the Annodex
   bitstream is being displayed in.  Exactly one title is required per
   document.  The "title" element is declared as the following:

   <!ELEMENT title (#PCDATA)>
   <!ATTLIST title
     %i18n;
     id          ID       #IMPLIED
   >

   The "%i18n;" attribute specifies the base language of the "title"
   text.



Pfeiffer, et al.        Expires September 5, 2006              [Page 15]

Internet-Draft                    CMML                        March 2006


5.2.  The 'base' element

   The "base" element defines the base URI of the Annodex bitstream.
   All relative URIs of the bitstream get interpreted relative to this
   base.  The "base" element is empty, but its attributes contain the
   base URI.  It is declared as follows:

   <!ELEMENT base EMPTY>
   <!ATTLIST base
     id      ID       #IMPLIED
     href    %URI;    #REQUIRED
   >

   The "href" attribute contains the base URI.  If the "base" element is
   omitted, the base URI of the Annodex bitstream is derived from the
   address through which the Annodex bitstream is accessed.

5.3.  The 'meta' element

   The "meta" element in the "head" element defines structured
   annotations for the complete Annodex bitstream.  A "meta" element is
   empty, but its attributes contain the name-value pairs of a
   structured annotation.  The "meta" element is declared as follows:

   <!ELEMENT meta EMPTY>
   <!ATTLIST meta
     %i18n;
     id       ID       #IMPLIED
     name     NMTOKEN  #IMPLIED
     content  CDATA    #REQUIRED
     scheme   CDATA    #IMPLIED
   >

   The "%i18n;" attribute specifies the language of the meta attribute
   and content texts.

   The "name" attribute identifies a property name.  It does not list
   legal values for this attribute.

   The "content" attribute specifies a property's value.  It does not
   list legal values for this attribute.

   The "scheme" attribute names a scheme to be used to interprete the
   property's value.  The scheme can be located via the "profile"
   attribute in the "head" element.






Pfeiffer, et al.        Expires September 5, 2006              [Page 16]

Internet-Draft                    CMML                        March 2006


5.4.  The 'link' element

   The "link" element in the "head" element defines links to a related
   external resource.  These resources are often used to augment the
   user agent's ability to process the current document.  The "link"
   element is declared as follows:

   <!ELEMENT link EMPTY>
   <!ATTLIST link
     %attrs;
     href        %URI;          #IMPLIED
     type        %ContentType;  #IMPLIED
     rel         %LinkTypes;    #IMPLIED
     rev         %LinkTypes;    #IMPLIED
     media       %MediaDesc;    #IMPLIED
     >

   The "attrs;" attribute covers the specification of the language of
   the title attribute, a unique identifing name, a reference to a style
   sheet specification, and a title attribute to provide a short
   description of the relationship between the current document and the
   one referred to in the "href" attributed.

   The "href" attribute contains a URI reference to a related external
   resource.  These resources are often used to augment the user agent's
   ability to process the current document.

   The "type" attribute contains a media type specification for the
   linked document as per RFC 2045 [6], e.g. "text/x-css-cmml".

   The "rel" attribute describes the relationship from the current
   document to the resource specified by the href attribute.  The value
   of this attribute is a space-separated list of link types.

   The "rev" attribute describes a reverse link from the resource
   specified by the href attribute to the current document.  The value
   of this attribute is a space-separated list of link types.

   The "media" attribute specifies the intended destination device for
   style information, if the href points to an external style sheet.  It
   may be a single media descriptor or a comma-separated list.  The
   default value for this attribute is "screen".









Pfeiffer, et al.        Expires September 5, 2006              [Page 17]

Internet-Draft                    CMML                        March 2006


6.  The cmml 'clip' tag

   A CMML file typically contains a number of sections given through
   "clip" tags.  The CMML "clip" tag contains information about a
   section of the Annodex bitstream.  This is expressed in a number of
   elements and attributes annotating, indexing, and hyperlinking the
   section.  The "start" and "end" attributes are used to give the
   insertion time for the clip into the Annodex bitstream.

   <!ELEMENT clip (meta*, a?, img?, desc?)>
   <!ATTLIST clip
     %attrs;
     track       CDATA          "default"
     start       %Timestamp;    #REQUIRED
     end         %Timestamp;    #IMPLIED
     >

   Any number of "meta" elements may appear in a clip, and at most one
   "a" element, one "img" element, and one "desc" element.  Though
   "meta", "a", "img", and "desc" tag are given in a specific order in
   the DTD, their order is actually random.

   The "%i18n;" attributes part of the "%attrs;" attributes specify the
   base language for all the clip's attribute values and content
   elements.  Also, a unique identifying name is specified for the clip
   in the "id" attribute.  This name can be used in URIs that point
   either to the CMML file or the Annodex bitstream created from it, and
   allows to point straight at the clip.  This may either be done as a
   URI fragment or URI query specification.  The "class" attribute
   provides a space-separated list of style sheet classes, and the
   "title" attribute a short tooltip-like clip description.

   The "track" attribute specifies the track that this clip belongs to.
   An annotation track is a set of clips that belong together from a
   semantic point of view.  Clips in the same track must not overlap
   temporally.  A default track must be available always.  This track is
   the one a client (such as a Web browser plugin) will display by
   default.  Other annotation tracks may be created by the document
   author to describe a more specific content.  An example use are
   different annotation tracks for each speaker in an audio recording of
   a meeting or tracks of different languages.

   The "start" and "end" attributes specify the time range during which
   the clip element is defined.  This time range is specified with
   respect to the "basetime" and "utc" attributes given in the "stream"
   tag.  If the "stream" tag does not contain a "utc" specification,
   "start" and "end" times are not allowed to be given in UTC time.
   "start" is a required attribute because a clip without a start time



Pfeiffer, et al.        Expires September 5, 2006              [Page 18]

Internet-Draft                    CMML                        March 2006


   is useless. "end" is optional and only required where clips cannot
   continue on to the following clip.

6.1.  The 'meta' element

   The "meta" element is specified above in the "head" section.  While a
   "meta" element in the "head" tag provides meta information for the
   complete Annodex bitstream, the "meta" elements in a "clip" tag only
   provide meta information for the clip.

6.2.  The 'a' element

   The "a" element specifies a link to a related Web resource together
   with some information on that related resource.  The "a" element
   definition is very closely related to the xhtml "a" element
   definition with a reduced number of attributes as they make sense for
   time-continuous data.

   <!ELEMENT a (#PCDATA)>
   <!ATTLIST a
     %attrs;
     href        %URI;          #REQUIRED
     >

   The "attrs" attributes specify internationalisation of the anchor's
   attribute values and of the anchor text, style sheet class, unique
   id, and a short, textual description of the hyperlink to be given
   e.g. in tooltips.

   The "href" attribute specifies the location of a Web resource given
   through a URI.  It thus defines a link between the current clip and a
   resource which the author believes to be connected closely to this
   clip's content.  This might be a html page or another Annodex
   bitstream clip or an image etc.  An "a" element without a "href"
   attribute is illegal and MUST be flagged or ignored.

   The text contained in an "a" element (i.e. the anchor text) provides
   a short textual description of the link specified through the "href"
   attribute.  It explains why the connection between the current clip
   and the destination URI is made.  It may e.g. encourage the viewer to
   follow the link to "Get more information on blah".

6.3.  The 'img' element

   The "img" element specifies a link to a representative image for the
   clip.  This image should be quite small as it is the representative
   image (known as "keyframe") for the current clip.  This image may be
   used to visually summarise the content of the clip when a link to it



Pfeiffer, et al.        Expires September 5, 2006              [Page 19]

Internet-Draft                    CMML                        March 2006


   is displayed, e.g. by a search engine or in a table of clips.  The
   "img" element definition is very closely related to the xhtml "img"
   element definition with a reduced number of attributes as they make
   sense for time-continuous data.

   <!ELEMENT img EMPTY>
   <!ATTLIST img
     %attrs;
     src         %URI;          #REQUIRED
     alt         CDATA          #IMPLIED
     >

   The "attrs" attributes specify internationalisation of the image's
   attribute values, provide an "id" attribute, a short "title" text,
   and a style sheet "class" for formatting the layout of the image.

   The "src" attribute specifies the location of an image on the Web
   given through a URI.

   The "alt" attribute specifies alternative text to be displayed
   instead of the image as required e.g. for accessibility.

6.4.  The 'desc' element

   The "desc" tag contains a human readable, textual description of the
   content of the clip.  The "desc" element is declared as the
   following:

   <!ELEMENT desc  (#PCDATA)>
   <!ATTLIST desc
     %attrs;
   >

   The internationalisation attributes specify the language of the text
   in the description, the "id" attribute a unique identifier for the
   element, the "class" attribute a style-sheet mapping, and the "title"
   attribute a brief description to be displayed in e.g. a table of
   clips or as caption.













Pfeiffer, et al.        Expires September 5, 2006              [Page 20]

Internet-Draft                    CMML                        March 2006


7.  Serialising CMML

   CMML is an annotation language that is meant to mark up any time-
   continuous data and be interleaved in a time-synchronous fashion with
   other time-continuous bitstreams.  Therefore, CMML must be able to be
   serialised into a time-continuous bitstream of data packets.  This is
   described in this section.

   CMML is serialised by having some initial header pages that set up
   the CMML decoding environment, and contain header type information.
   The content of a CMML bitstream then consists of "clip" tags.  The
   "stream" tag is not copied into the CMML bitstream as it controls the
   authoring of the Annodex bitstream.  Its information can be used in
   the encapsulation format.

   All of the CMML bitstream information is text.  As it gets encoded
   into a binary bitstream, an encoding format has to be specified.  To
   simplify things, UTF-8 is defined as the mandatory encoding format
   for all data in a CMML binary bitstream.  Also, the encoding process
   MUST ensure that newline characters are represented as LF (or "\n" in
   C) only and replace any new line representations that come as CR LF
   combinations (or "\r\n" in C) with LF only.

7.1.  The format of the CMML ident header packet

   The first header packet of a CMML logical bitstream is the CMML ident
   header.  It contains all information required to identify the CMML
   bitstream and to set up a CMML decoder.  It has the following format:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1| Byte
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Identifier 'CMML\0\0\0\0'                                     | 0-3
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               | 4-7
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Version major                 | Version minor                 | 8-11
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | ...


   The fields in a CMML ident header packet have the following meaning:

   1.  Identifier: a 8 Byte field that identifies this file to be of a
       CMML logical input bitstream.  It contains the magic numbers:






Pfeiffer, et al.        Expires September 5, 2006              [Page 21]

Internet-Draft                    CMML                        March 2006


          0x43 'C'

          0x4d 'M'

          0x4d 'M'

          0x4c 'L'

          0x00 '\0'

          0x00 '\0'

          0x00 '\0'

          0x00 '\0'

   2.  Version major: 2 Byte short integer number signifying the major
       version number of the CMML format bitstream.

   3.  Version minor: 2 Byte short integer number signifying the minor
       version number of the CMML format bitstream.

   When encapsulating a CMML bitstream, more fields may be added to this
   header as required by the encapsulation or exchange format.

7.2.  The format of the CMML secondary headers

   The CMML secondary headers are a sequence of two packets that contain
   the CMML and XML "setup" information:

   o  one packet with the CMML xml preamble and "cmml" tag.

   o  one packet with the CMML "head" tag.

   These packets contain textual, not binary information.

   The CMML preamble tags are all single-line tags, such as the xml
   processing instruction (<?xml...>) and the document type declaration
   (<!DOCTYPE...>).

   The only CMML tag that is not already serialized from a CMML file is
   the "cmml" tag, as it encloses all the other content tags.  To
   serialise it, the "cmml" start tag is transformed into a processing
   instruction, retaining all its attributes (<?cmml ...>), and the
   "cmml" end tag is deleted.

   The first CMML secondary header packet has the following format:




Pfeiffer, et al.        Expires September 5, 2006              [Page 22]

Internet-Draft                    CMML                        March 2006


    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1| Byte
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | <?xml ...                                                     | 0-
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | ...                                                           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | <!DOCTYPE ...                                                 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | ...                                                           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | <?cmml ...                                                    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   The second CMML secondary header packet contains the CMML head
   element with all its attributes and other containing elements and has
   the following format.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1| Byte
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | <head ...                                                     | 0-
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | ...                                                           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | </head>                                                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


7.3.  The format of the CMML data packets

   The data packets of the CMML bitstream contain the CMML clip
   elements.  Their "start" and "end" attributes however only exist for
   authoring purposes and are not copied into the bitstream, but are
   rather represented through the time mapping of the encapsulation
   format that interleaves CMML data with data from other time-
   continuous bitstreams.  This avoids contradictory doubly represented
   timing information.  Generally the time mapping is done through some
   timestamp representation and through the position in the stream.

   A "clip" tag is encoded with all tags (except for the "start" and
   "end" attributes) as a string printed into a clip packet.  The "clip"
   tag's "start" attribute tells the encapsulator at what time to insert
   the clip packet into the bitstream.  If an "end" attribute is
   present, it leads to the creation of another clip packet, unless
   another clip packet starts on the same track beforehand.  This clip
   packet contains an empty "clip" tag, i.e. a "clip" tag without



Pfeiffer, et al.        Expires September 5, 2006              [Page 23]

Internet-Draft                    CMML                        March 2006


   "meta", "a", "img" or "desc" elements and no attribute values except
   for a copy of the "track" attribute from the original "clip" tag.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1| Byte
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | <clip ...                                                     | 0-
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | ...                                                           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | </clip>                                                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+







































Pfeiffer, et al.        Expires September 5, 2006              [Page 24]

Internet-Draft                    CMML                        March 2006


8.  Mapping CMML into Ogg and Annodex

8.1.  Media mapping for a CMML logical bitstream inside Ogg

   When mapping a CMML logical bitstream into Ogg, the serialisation as
   described in the previous section is used as a logical bitstream.
   The ident packet is extended by a few fields that are necessary for
   handling the time stamping of the content packets (i.e. the clips)
   for Ogg. Here is its format:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1| Byte
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Identifier 'CMML\0\0\0\0'                                     | 0-3
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               | 4-7
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Version major                 | Version minor                 | 8-11
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Granulerate numerator                                         | 12-15
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               | 16-19
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Granulerate denominator                                       | 20-23
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               | 24-27
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Granuleshift  |                                                 28
   +-+-+-+-+-+-+-+-+


   Fields with more than one byte length are encoded LSB (least
   significant byte) first.

   The additional fields in a CMML ident header packet for Ogg have the
   following meaning:

   1.  Granule rate numerator & denominater: 8 Byte integer number each.
       They represent the temporal resolution of the logical bitstream
       in Hz given as a rational number in the same way as the fishead
       basetime field above.

   2.  Granuleshift: a 1 Byte integer number describing whether to
       partition the granule_position into two for the CMML logical
       bitstream, and how many of the lower bits to use for the
       partitioning.  The upper bits then still signify a time-
       continuous granule position for a directly decodable and
       presentable data granule.  The lower bits allow for specification



Pfeiffer, et al.        Expires September 5, 2006              [Page 25]

Internet-Draft                    CMML                        March 2006


       of the granule position of a previous CMML data packet (i.e.
       "clip" element), which helps to identify how much backwards
       seeking is necessary to get to the last and still active "clip"
       element (of the given track).  The granuleshift is therefore the
       log of the maximum possible clip spacing.

   The default granule rate for CMML is: 1/1000.  The default granule
   shift used is 32, which halfs the granule position to allow for the
   backwards pointer.

   The media mapping for CMML into Ogg is as follows:

   o  The bos page MUST contain the extended CMML ident packet.

   o  The first secondary header packet of CMML contains the xml
      preamble as described above.

   o  The second secondary header packet contains the CMML "head" tag as
      described above.

   o  The content or data packets for CMML contain the CMML "clip" tags
      each encoded in their own packet and inserted at the accurate
      time.

   o  The eos page contains a packet with an empty clip tag.

   If CMML is encapsulated in Ogg without the skeleton bitstream, it
   potentially loses time information.  The basetime will then be mapped
   always to 0 and utc time mappings cannot be represented.  It also
   loses all the message header fields which contain machine-readable
   meta information about the physical bitstream.

8.2.  Using CMML to author Annodex bitstreams

   As CMML contains authoring information for Annodex bitstreams, a CMML
   instance document contains more than just the annotation information
   necessary for the CMML logical bitstream.  It also contains control
   information to create the control section of an Annodex bitstream,
   i.e. the skeleton bitstream with its secondary header packets
   describing each of the contained logical bitstreams.  Note that we
   only describe the creation of Annodex Version 3.0 bitstreams here.

   The authoring information stems in particular from the "stream" tag
   plus some specific information from the "cmml" tag.  Generally, the
   "stream" tag's attributes contribute to the skeleton fishead packet,
   the "import" tag's attributes to the skeleton fisbone packets of each
   logical bitstream, and the "cmml" tag's attributes to the fisbone of
   the CMML logical bitstream.  While the "cmml" tag is represented in



Pfeiffer, et al.        Expires September 5, 2006              [Page 26]

Internet-Draft                    CMML                        March 2006


   full as a processing instruction in the secondary header packets of
   the CMML logical bitstream (see above), this is not the case for the
   "stream" tag.  Therefore, this section also contains a description of
   what tags of the "stream" tag are not used inside an Annodex
   bitstream.

8.2.1.  Creating the skeleton ident packet

   The skeleton ident packet receives the "basetime" and the "utc" field
   information from the "stream" tag.

   "Basetime numerator & denominator": if the "basetime" attribute is
   given in a CMML instance document, it MUST be represented in the
   skeleton ident header in the fields "Basetime numerator" and
   "Basetime denominator".  It is converted from a possible NPT or SMPTE
   representation to a rational number to be stored in these fishead
   fields.

   "Presentationtime numerator & denominator": to be filled by the muxer
   appropriately, e.g. reusing the basetime values.

   "UTC": if the "utc" attribute is given in a CMML instance document,
   it MUST be represented in the skeleton ident header in the "UTC"
   field.

8.2.2.  Creating the skeleton fisbone packets

   A fisbone packet for a logical bitstream is created through the
   authoring information of an "import" tag in a CMML instance
   document's "stream" tag.  One "import" tag contains information on
   one particular logical bitstream in the interleaved bitstream and
   thus creates one particular skeleton fisbone packet.

   "Granulerate numerator & denominator": if the "granulerate" attribute
   is present in the "import" tag, it MUST be represented in the fisbone
   header for the respective media bitstream in the fields "Granulerate
   numerator" and "Granulerate denominator".  The encoder MUST however
   ascertain that the values are sensible, and if it knows the accurate
   granule rate for a logical bitstream overrun the user input with the
   one that was used during creation of the interleaved bitstream.

   "Content-type" message header field: this attribute MUST be
   represented in the respective skeleton fisbone packet as a message
   header field with name "Content-type", as it signifies the MIME type
   of the media bitstream, providing for a decoding hint.  If the user
   does not specify the "contenttype" attribute, the encoder MUST
   provide it during the interleaving process.




Pfeiffer, et al.        Expires September 5, 2006              [Page 27]

Internet-Draft                    CMML                        March 2006


   "ID" message header field: if an "id" attribute is specified for an
   "import" tag, it SHOULD be represented in the skeleton fisbone header
   for the respecitve media bitstream as a message header field with
   name "ID", as it signifies a short identifying machine-readable
   string for the import media bitstream.

   User specified message header fields: if "name" and "value"
   attributes are specified in the "param" tags of the "import" tag,
   these SHOULD be represented in the skeleton fisbone packet of the
   respective media bitstream as a message header field with the given
   name-value pair.  These fields are highly dependent on the type of
   media bitstream handled and it therefore depends on the encoding tool
   to make a selection of the parameters acquired.  For example, an
   audio bitstream that contains speech in a specific language may be
   identified during CMML authoring through a param element with
   "Content-Language" name, and acquired into the media bitstream
   message header field of the same name.

8.2.3.  The CMML fisbone packet fields

   A CMML instance document that specifies annotations in "head" and
   "clip" elements does not get to use the "stream" tag to provide
   encoding hints for its CMML logical bitstream.  Its encoding hints
   come from the "cmml" tag and the "encoding" attribute of the xml
   processing directive.

   "Number of header packets": this field has a fixed size of 3 for the
   CMML specification given in this document.  It counts the CMML ident
   packet, the XML preamble packet and the head tag packet.

   "Granulerate numerator & denominator": if the "granulerate" attribute
   is present in the "cmml" tag, it MUST be represented in the fisbone
   header in the fields "Granulerate numerator" and "Granulerate
   denominator".  The encoder MUST however ascertain that the values are
   sensible.  The value defaults to "1/1000" if it is not specified by
   the user.

   "Content-type" message header field: the content type for the fisbone
   packet that describes the CMML logical bitstream is fixed at "text/
   x-cmml".

   "charset": if the xml processing directive contains an "encoding"
   attribute, this MUST be represented in the CMML fisbone packet as an
   addendum to the message header field "Content-type" as a charset.
   For example: "Content-type: text/x-cmml; charset=UTF-8".

   "ID" message header field: if an "id" attribute is specified for the
   "cmml" tag, it SHOULD be represented in the skeleton fisbone header



Pfeiffer, et al.        Expires September 5, 2006              [Page 28]

Internet-Draft                    CMML                        March 2006


   for CMML as a message header field with name "ID", as it signifies a
   short identifying machine-readable string for the import media
   bitstream.

   "Content-Language" and "Content-Dir" message header fields: if the
   "lang" and "dir" attributes are given in a "cmml" tag, they MUST be
   represented in the fishbone packet of the CMML bitstream as message
   header fields with name "Content-Language" and "Content-Dir".

8.2.4.  Usage of the 'stream' tag

   Here is a list of the attribute values of the "stream" tag and how
   they are being used:

   o  id: not used, as this attribute is only used to enable addressing
      of the stream tag the XML way (e.g.  XPath).  It is not relevant
      for the encoded bitstream and will therefore be lost on encoding.

   o  basetime: this attribute maps to the skeleton ident header fields
      "Basetime numerator" and "Basetime denominator".

   o  utc: this attribute maps to the skeleton ident header field "UTC".

   Here is a list of the attribute values of the "import" tag and how
   they are being used:

   o  id: this attribute may be represented as a message header field in
      the respective skeleton fisbone packet.

   o  lang, dir: not used, as these attributes signify the language and
      directionality of the human readable texts in the stream tag which
      are not acquired into the Annodex bitstream.

   o  granulerate: this attribute is used in the skeleton fisbone header
      fields "Granule rate numerator" and "Granule rate denominator" as
      well as for the "Presentationtime numerator" and "Presentationtime
      denominator".

   o  contenttype: this attribute is represented in the respective
      skeleton fisbone packet as a message header field with name
      "Content-type".

   o  src: not used, as this attribute only points to the location of
      the import media bitstream and is thus pure authoring information.

   o  start, end: not used, as this attribute only specifies the segment
      of the import media bitstream that is to be used during authoring.




Pfeiffer, et al.        Expires September 5, 2006              [Page 29]

Internet-Draft                    CMML                        March 2006


   o  title: not used, as this attribute provides a human readable
      comment on the import bitstream for authoring purposes.

   Here is a list of the attribute values of the "param" tag list and
   how they are being used:

   o  id: not used, as this attribute is only used to enable addressing
      of the param tag the XML way (e.g.  XPath).  It is not relevant
      for the encoded bitstream and will therefore be lost on encoding.

   o  name, value: these attributes may be represented in the skeleton
      fisbone packet of the respective media bitstream as a message
      header field with the given name-value pair.






































Pfeiffer, et al.        Expires September 5, 2006              [Page 30]

Internet-Draft                    CMML                        March 2006


9.  Extracting CMML from Annodex bitstreams

   The decoding of an Annodex bitstream to CMML is roughly inverse to
   the encoding of an Annodex bitstream from a CMML file.  There are
   some special cases to take care of, therefore the decoding steps are
   outlined here.

9.1.  Extracting the preamble, 'head' and 'clip' tags

   The data encoded in the CMML logical bitstream conists of the xml
   preamble, the "cmml" tag, the "head" tag, and the "clip" tags.  These
   are fairly straightforward to extract.

   xml preamble and "cmml" tag: The xml preamble is constructed from the
   second header packet of the CMML logical bitstream.  It contains the
   full xml preamble.  It also contains the "cmml" processing
   instruction, which MUST be transformed back to a normal element and
   an end "cmml" tag be added at the end of the created CMML document.

   "head" tag: The "head" tag is constructed from the third header
   packet of the CMML logical bitstream, which contains the complete
   content of the "head" element.

   "clip" tags: The "clip" tags are constructed from the content of the
   CMML logical bitstream.  Each packet contains a "clip" tag with all
   of the information except for the timing information.  A decoder MUST
   take care to add the start time of each "clip" element into the
   "start" attribute of the respective CMML "clip" tag.  The start time
   will be calculated from the granulerate in the CMML fisbone packet
   and the granulepos given in the respective "clip" Ogg packet.  Empty
   "clip" tags should also be converted to end time attributes of the
   previous "clip" tag on the same track.

9.2.  Creating a 'stream' tag

   The creation of a "stream" tag is not necessary to extract the
   content of the CMML logical bitstream and thus a textual
   representation of the interleaved bitstream.  However, if the Annodex
   bitstream has a non-zero "basetime" or a non-null "utc" time in the
   skeleton ident header, a "stream" tag will allow accurate time
   information in the CMML file and SHOULD be created with these
   attribute values.

   If a "stream" tag is created with the "basetime" and "utc"
   attributes, it is empty by default.  A ripping application MAY
   however extract all the data bitstreams out of the Annodex bitstream
   into files, and then reference these files in the "src" attribute of
   "import" tags.



Pfeiffer, et al.        Expires September 5, 2006              [Page 31]

Internet-Draft                    CMML                        March 2006


   Other attributes of the "import" tags MAY also be filled from the
   logical bitstreams:

   o  the "contenttype" attribute from the "Content-type" Message header
      field of the respective skeleton secondary header packet,

   o  the "granulerate" attribute from the Granulerate fields of the
      respective skeleton secondary header packet,

   o  the "id" attribute from a Message header field called "ID" if
      available,

   o  and "param" elements from all the remaining Message header fields
      of the respective skeleton secondary header packet, where the
      field name is stored in the "name" attribute and the value in the
      "value" attribute.

   A stream tag will thus roughly be created like this:

   <stream  basetime="[Basetime]" utc="[UTC]">
     <import      id="[ID message header value]"
         granulerate="[Granulerate numerator]/[Granulerate denominator]"
         contenttype="[Content-type message header value]"
                 src="[stream1.ogg]"
               start="[t]">
       <param   name="[message header name]"
               value="[message header value]"/>
     </import>
   </stream>






















Pfeiffer, et al.        Expires September 5, 2006              [Page 32]

Internet-Draft                    CMML                        March 2006


10.  MIME media type registration for 'text/cmml'

   This section contains the registration information for the 'text/
   cmml' media type.  While this media type is not approved by the IANA,
   'text/x-cmml' may be used to identify CMML instance documents.

   To: ietf-types@iana.org

   Subject: Registration of MIME media type 'text/cmml'

   MIME media type name: text

   MIME subtype name: cmml

   Required parameters: none

   Optional parameters: charset (as in the text/xml media type [15]).

   Encoding Considerations: as appropriate for the charset and the
   transport mechanism (see text/xml media type [15]).

   Security considerations: see next section.

   Interoperability considerations: CMML is a free specification that is
   independent of any media encoding format.  It is designed to provide
   interoperability with existing XML tools and systems.  Its
   specification is not patented and can be implemented by third parties
   without patent considerations.

   Additional information:

      Magic numbers: none.  However, CMML files start with the XML
      preamble as any XML document [15] and will also have the string
      '<cmml' near the beginning of the file.

      File extension: .cmml

      Macintosh File Type Code: "TEXT"

      Intended usage: COMMON

10.1.  URI addressing into CMML files

   There are two ways of hyperlinking via URIs into CMML files: via
   specification of a temporal interval or via specification of a clip.
   Both of these ways of addressing are supported for URI queries and
   URI fragments on CMML files.  A server that is capable of supporting
   these URI queries indicates this by adding the X-Accept-TimeURI



Pfeiffer, et al.        Expires September 5, 2006              [Page 33]

Internet-Draft                    CMML                        March 2006


   header field to its response header fields as defined in the temporal
   URI query specification [10].  Specifications of a clip in a URI
   query via the clip's name are regarded as an alias for a time offset.
   Therefore, a server that supports CMML temporal URI addressing MUST
   also support the named addressing.

10.1.1.  Query parameters for use with the http protocol server-side

   For the purposes of URI queries on CMML files, it is assumed that the
   query string takes the format of a CGI query string.  The Common
   Gateway Interface, or CGI, is a convention for external gateway
   programs to interface with information servers such as HTTP servers
   (see http://hoohoo.ncsa.uiuc.edu/cgi/).  This query string is
   expected to be interpreted by the HTTP server to return a valid CMML
   file that differs from the original CMML file only by reducing the
   set of clip tags to the specified interval.

   Temporal query parameter specification:

   Addressing of temporal intervals of CMML files is possible through
   specification of temporal query intervals in URIs [10].  An example
   is the following URI: http://example.com/sample.cmml?t=npt:4 , which
   in the case of CMML relates to the last clip whose start time is just
   before the given temporal offset and all the clips thereafter.

   Clip specification:

   Addressing of a clip is possible through specification of the clip's
   id attribute value.  The BNF for such an id URI query parameter is:

   id-parameter = "id" "=" id-interval ["," id-interval]

   id-interval = id-name [ "/" [ id-name] ]

   id-name     = *( unreserved / pct-encoded / ":" / "?" / "#" /
                 "[" / "]" / "@" / "!" / "$" / "&" / "'" /
                 "(" / ")" / "*" / "+" / ";" / "=" )


   All id-name specifications map onto a start and end time.  Specifying
   just an id-name maps to just the start and end times of that clip.
   Specifying an id-name with a "/" maps to the document starting from
   the beginning of that clip until the end of the file or stream.
   Specifying an id range is inclusive and maps to the start time of the
   first clip and end time of the second clip.  Overlapping time
   intervals MUST be interpreted by merging the intervals into one.

   It is not valid to give several temporal URI query parameters in one



Pfeiffer, et al.        Expires September 5, 2006              [Page 34]

Internet-Draft                    CMML                        March 2006


   URI query.  They all need to be wrapped into a single specification.

   Examples for URIs containing id queries are:

   o  http://example.com/sample.cmml?id="dolphin" --- sample.cmml is
      transferred from the start time of the "dolphin" clip to the end
      of the file/stream.

   o  http://example.com/sample.cmml?id="dolphin/" --- sample.cmml is
      transferred from the start time of the "dolphin" clip to the end
      of the file or stream.

   o  http://example.com/sample.cmml?id="dolphin/goldfish" ---
      sample.cmml is transferred from the start time of the "dolphin"
      clip to the end of the "goldfish" clip.

   Note that id attribute values of all elements have to be unique
   throughout a XML file (and thus also throughout a CMML file).

10.1.2.  Fragment identifiers for use with the http protocol client-side

   For the purposes of URI fragment specifications on CMML files, it is
   assumed that the fragment gets interpreted by the HTTP client after
   the retrieval action.  The HTTP client is expected to restrict the
   usage of the resource to the specified interval.

   Temporal fragment specification:

   Addressing of temporal intervals of CMML files is possible through
   specification of temporal fragments in URIs [10].  An example is the
   following URI: http://example.com/sample.cmml#t=npt:4 .  This then
   relates to the last clip whose start time is just before the given
   temporal offset and all the clips thereafter.  This may e.g. be
   useful to do a zoom into a retrieved CMML resource.

   Clip specification:

   The values of the id attribute of the clip tags can be used for
   addressing media clips directly through fragment identifiers as in
   http://example.com/sample.cmml#id=dolphin.











Pfeiffer, et al.        Expires September 5, 2006              [Page 35]

Internet-Draft                    CMML                        March 2006


11.  Security considerations

   As CMML is a markup language created by using XML, the same security
   considerations that apply to XML [15], apply to CMML.

   As the CMML is an authoring language for Annodex bitstreams, there is
   no executable code attached to this language.  The implementation of
   a multiplexer to actually create an Annodex bitstream must be careful
   when handling input bitstreams, which are binary data.










































Pfeiffer, et al.        Expires September 5, 2006              [Page 36]

Internet-Draft                    CMML                        March 2006


12.  ChangeLog

   draft-pfeiffer-cmml-01:

   o  CMML version 2.0: changes to the tags to make CMML more similar to
      XHTML, in particular from "media" to "import", the introduction of
      an "img" tag, and the the change from an "a" tag that covers all
      the other elements to a "clip" tag, reducing the "a" tag back to
      its HTML meaning.

   draft-pfeiffer-cmml-02:

   o  CMML was not changed - only the media mapping into Annodex was
      adapted because the binary format had changed substantially.

   draft-pfeiffer-cmml-03:

   o  added the link tag to the head, which has recognized link types of
      html plus "edit".

   o  added granulerate to the cmml root tag and changed the muxing
      description for CMML tracks.

   o  added title tags for each element.

   o  replaced timebase with basetime as a better name.

   o  kept the basetime attribute of the stream tag for backwards
      compatibility.

   o  fixed hyperlinks in section 10.1.1 by deleting quotes and
      introducing "id=" into the fragment reference.


13.  References

   [1]   World Wide Web Consortium, "Extensible Markup Language (XML)
         1.0", W3C XML, October 2000,
         <http://www.w3.org/TR/2000/REC-xml-20001006>.

   [2]   Pfeiffer, S., Parker, C., and A. Pang, "The Annodex exchange
         format for time-continuous data files, Version 3.0 (work in
         progress)", I-D draft-pfeiffer-annodex-02.txt, March 2005,
         <http://www.annodex.net/TR/annodex.txt>.

   [3]   World Wide Web Consortium, "XHTML(TM) 1.0 The Extensible Hyper
         Text Markup Language", W3C XHTML, January 2000,
         <http://www.w3.org/TR/xhtml1/>.



Pfeiffer, et al.        Expires September 5, 2006              [Page 37]

Internet-Draft                    CMML                        March 2006


   [4]   Bradner, S., "Key words for use in RFCs to Indicate
         Requirements Levels", RFC 2119, BCP 14, March 1997.

   [5]   World Wide Web Consortium, "HTML 4.01 Specification", W3C HTML,
         December 1999, <http://www.w3.org/TR/html4/>.

   [6]   Freed, N. and N. Borenstein, "Multipurpose Internet Mail
         Extensions (MIME) Part One: Format of Internet Message Bodies",
         RFC 2045, November 1996, <http://www.ietf.org/rfc/rfc2045.txt>.

   [7]   Lie, H. and B. Bos, "Cascading Style Sheets, level 1", W3C CSS,
         January 1999, <http://www.w3.org/TR/REC-CSS1/>.

   [8]   Bos, B., Lie, H., Lilley, C., and I. Jacobs, "Cascading Style
         Sheets, level 2", W3C CSS, May 1998,
         <http://www.w3.org/TR/REC-CSS2/>.

   [9]   Berners-Lee, T., Fielding, R., and L. Masinter, "Uniform
         Resource Identifiers (URI): Generic Syntax", RFC 3986,
         January 2005, <http://www.ietf.org/rfc/rfc3986.txt>.

   [10]  Pfeiffer, S., Parker, C., and A. Pang, "Specifying time
         intervals in URI queries and fragments of time-based Web
         resources (work in progress)",
         I-D draft-pfeiffer-temporal-fragments-03.txt, March 2005,
         <http://www.annodex.net/TR/URI_fragments.txt>.

   [11]  Alvestrand, H., "Tags for the Identification of Languages",
         RFC 1766, March 1995, <http://www.ietf.org/rfc/rfc1766.txt>.

   [12]  The Society of Motion Picture and Television Engineers, "SMPTE
         STANDARD for Television, Audio and Film - Time and Control
         Code", ANSI 12M-1999, September 1999.

   [13]  Schulzrinne, H., Rao, A., and R. Lanphier, "Real Time Streaming
         Protocol (RTSP)", RFC 2326, April 1998,
         <Http://www.ietf.org/rfc/rfc2326.txt>.

   [14]  ISO, TC154., "Data elements and interchange formats --
         Information interchange -- Representation of dates and times",
         ISO 8601, 2000.

   [15]  Whitehead, E. and M. Murata, "XML Media Types", RFC 2376,
         July 1998, <http://www.ietf.org/rfc/rfc2376.txt>.







Pfeiffer, et al.        Expires September 5, 2006              [Page 38]

Internet-Draft                    CMML                        March 2006


Appendix A.  CMML DTD

   <!--

     Continuous Media Markup Language CMML version 2.1 DTD
     Authoring language for ANNODEX(TM) media.

     Namespace = http://www.annodex.net/cmml

     Copyright (c) 2001-
     Commonwealth Scientific and Industrial Research Organisation
     (CSIRO), Australia.
     All Rights Reserved.

     This DTD module is identified by the PUBLIC and SYSTEM identifiers:

     PUBLIC "-//CSIRO//DTD CMML 2.1//EN"
     SYSTEM "http://www.annodex.net/DTD/cmml_2_1.dtd"

     $Revision: 2.1 $
     $Date: 2006/03/04 24:00:00 $
   -->

   <!-- **************************** -->
   <!-- Definition of Imported Names -->
   <!-- **************************** -->

   <!-- media type, as per [RFC2045] -->
   <!ENTITY % ContentType "CDATA">

   <!-- space-separated list of link types -->
   <!ENTITY % LinkTypes "CDATA">

   <!-- single or comma-separated list of media descriptors -->
   <!ENTITY % MediaDesc "CDATA">

   <!-- used for titles etc. -->
   <!ENTITY % Text "CDATA">

   <!-- a Uniform Resource Identifier, see [RFC2396] -->
   <!ENTITY % URI "CDATA">

   <!-- a language code, as per [RFC1766] -->
   <!ENTITY % LanguageCode "NMTOKEN">

   <!-- timestamps similar to [RFC2326]
    "smpte-24:" SMPTE time with a 24 fps basis
    "smpte-24-drop:" SMPTE time with a 24/1.001 fps basis



Pfeiffer, et al.        Expires September 5, 2006              [Page 39]

Internet-Draft                    CMML                        March 2006


    "smpte-25:" SMPTE time with a 25 fps basis
    "smpte-30:" SMPTE time with a 30 fps basis
    "smpte-30-drop:" SMPTE time with a 30/1.001 fps basis
    "smpte-50:" SMPTE time with a 50 fps basis
    "smpte-60:" SMPTE time with a 60 fps basis
    "smpte-60-drop:" SMPTE time with a 60/1.001 fps basis
    "npt:" npt-time
    "clock:" utc-time

    Playbacktime is specified as a smpte-time
    or npt-time only.

    UTCtime is specified as in [RFC2326], but
    without the "clock" identifier
   -->
   <!ENTITY % Timestamp    "CDATA">
   <!ENTITY % Playbacktime "CDATA">
   <!ENTITY % UTCtime      "CDATA">


   <!-- ******************************** -->
   <!-- Definition of Generic Attributes -->
   <!-- ******************************** -->

   <!-- core attributes common to most displayable elements
     id       document-wide unique id
     class    space separated list of classes
     title    advisory title/amplification
   -->
   <!ENTITY % coreattrs
    "id          ID                #IMPLIED
     class       CDATA             #IMPLIED
     title       %Text;            #IMPLIED"
     >

   <!-- internationalization attributes
     xml:lang    language code (as per XML 1.0 spec)
     dir         direction for weak/neutral text
   -->
   <!ENTITY % i18n
    "lang        %LanguageCode; #IMPLIED
     dir         (ltr|rtl)      #IMPLIED"
     >

   <!ENTITY % attrs "%coreattrs; %i18n;">


   <!-- **************************** -->



Pfeiffer, et al.        Expires September 5, 2006              [Page 40]

Internet-Draft                    CMML                        March 2006


   <!-- Document Structure           -->
   <!-- **************************** -->

   <!-- ROOT ELEMENT: -->
   <!-- cmml tag containing sequence of head and a tags -->
   <!-- =============================================== -->
   <!-- i18n  = the default language for the whole document including
                the id tag of the cmml element -->
   <!-- xmlns = namespace of the cmml tags -->
   <!-- granulerate = the base temporal resolution to be used for the
                      cmml bitstream -->
   <!ELEMENT cmml (stream?, head, clip*)>
   <!ATTLIST cmml
     %i18n;
     id          ID             #IMPLIED
     xmlns       %URI;          #FIXED 'http://www.annodex.net/cmml'
     granulerate CDATA          #IMPLIED
     >


   <!-- **************************** -->
   <!-- Definition of stream element -->
   <!-- **************************** -->

   <!-- STREAM tag providing timing information for the ANNODEX file -->
   <!-- (will be stored in the binary headers of the ANX bitstreams) -->
   <!-- ============================================================ -->
   <!-- (has no text attributes and thus no i18n; id tag follows default
         language specified in cmml tag) -->
   <!-- basetime  = base time associated with the first frame of the
                    media document from which subsequent time references
                    (such as in clip tags) will be taken relative to -->
   <!-- timebase  = same as basetime; kept for backwards compatibility;
                    deprecated and will not be used in versions>=3.0 -->
   <!-- utc       = a mapping of the first frame to clock time;
                    specifications of utc time offsets into the document
                    as in a URI will be taken relative to this -->
   <!ELEMENT stream (import*)>
   <!ATTLIST stream
     id          ID             #IMPLIED
     basetime    %Playbacktime; "0"
     timebase    %Playbacktime; "0"
     utc         %UTCtime;      #IMPLIED
     >

   <!-- IMPORT tag giving descriptions on an input bitstream
        (empty content)                                              -->
   <!-- ============================================================ -->



Pfeiffer, et al.        Expires September 5, 2006              [Page 41]

Internet-Draft                    CMML                        March 2006


   <!-- i18n        = the language of the import tag's and the contained
                      param tags' attribute values -->
   <!-- title       = human readable comment on the import bitstream -->
   <!-- granulerate = the base temporal resolution of the bitstream
                      (e.g. its framerate for video or samplerate for
                      audio) -->
   <!-- contenttype = encoding format of the input document (a MIME type
                      and a character encoding separated by semicolon)
                      -->
   <!-- src         = URI to the media document -->
   <!-- start       = the start time of the media bitstream specified
                      in src -->
   <!-- end         = the end time of the media bitstream specified
                      in src -->
   <!ELEMENT import (param*)>
   <!ATTLIST import
     %i18n;
     id          ID             #IMPLIED
     title       %Text;         #IMPLIED
     granulerate CDATA          #IMPLIED
     contenttype %ContentType;  #IMPLIED
     src         %URI;          #REQUIRED
     start       %Timestamp;    "0"
     end         %Timestamp;    #IMPLIED
     >

   <!-- PARAM description tags of an input bitstream (empty content) -->
   <!-- (name-value pairs e.g. comments on recording quality or so)  -->
   <!-- ============================================================ -->
   <!-- (internationalisation inherited from the parent import tag)  -->
   <!-- name  = identifies a property name; does not list legal values
                for this attribute -->
   <!-- value = specifies a property's value; does not list legal values
                for this attribute -->
   <!ELEMENT param EMPTY>
   <!ATTLIST param
     id          ID             #IMPLIED
     name        CDATA          #REQUIRED
     value       CDATA          #REQUIRED
     >


   <!-- **************************** -->
   <!-- Definition of document head  -->
   <!-- **************************** -->

   <!-- head tag containing description of a specific media stream -->
   <!-- ========================================================== -->



Pfeiffer, et al.        Expires September 5, 2006              [Page 42]

Internet-Draft                    CMML                        March 2006


   <!-- i18n    = the base language of the head's attribute values
                  and text content -->
   <!-- profile = space-separated list of URIs to locate meta tag
                  schemes -->

   <!-- content model is %head.misc; combined with a single
        title and an optional base element in any order -->
   <!ENTITY % head.misc "(meta|link)*">
   <!ELEMENT head (%head.misc;,
                   ((title, %head.misc;, (base, %head.misc;)?) |
                    (base, %head.misc;, (title, %head.misc;))))>
   <!ATTLIST head
     %i18n;
     id          ID             #IMPLIED
     profile     %URI;          #IMPLIED
     >

   <!-- TITLE tag giving descriptive title of the media document  -->
   <!-- ========================================================= -->
   <!-- i18n  = the language of the title text -->
   <!ELEMENT title (#PCDATA)>
   <!ATTLIST title
     %i18n;
     id          ID             #IMPLIED
     >


   <!-- BASE URI of the document (empty content) -->
   <!-- ======================================== -->
   <!-- (internationalisation inherited from the parent head tag) -->
   <!-- href = URI associated with the document; all relative URI
               references get interpreted relative to this base -->
   <!ELEMENT base EMPTY>
   <!ATTLIST base
     id          ID             #IMPLIED
     href        %URI;          #REQUIRED
     >

   <!-- META description tags of the document (empty content) -->
   <!-- ===================================================== -->
   <!-- i18n    = the language of the meta attributes -->
   <!-- name    = identifies a property name; does not list legal
                  values for this attribute -->
   <!-- content = specifies a property's value; does not list legal
                  values for this attribute -->
   <!-- scheme  = names a scheme to be used to interpret the property's
                  value (see the profiles tag in the head element for
                  locating these) -->



Pfeiffer, et al.        Expires September 5, 2006              [Page 43]

Internet-Draft                    CMML                        March 2006


   <!ELEMENT meta EMPTY>
   <!ATTLIST meta
     %i18n;
     id          ID             #IMPLIED
     name        NMTOKEN        #IMPLIED
     content     CDATA          #REQUIRED
     scheme      CDATA          #IMPLIED
     >

   <!-- LINK tag to specify relationship values (empty content) -->
   <!-- ======================================================= -->
   <!-- Relationship values can be used in principle:
        a) for document specific toolbars/menus when used
           with the link element in document head e.g.
           start, contents, previous, next, index, end, help
        b) to link to a separate style sheet (rel="stylesheet")
        As charsets are given in the xml directive of cmml documents,
        this attribute of html is not required for cmml.
     -->
   <!-- attrs = the language of the title text; a short description of
                the relationship through title, and the stylesheet class
                -->
   <!-- href  = reference to a related document -->
   <!-- type  = type of the document referenced, e.g. "text/css" -->
   <!-- rel   = type of relationship to forward linked document -->
   <!-- rev   = type of relationship to reverse linked document -->
   <!-- media = type or medium/media to be rendered on, default "screen"
                -->

   <!ELEMENT link EMPTY>
   <!ATTLIST link
     %attrs;
     href        %URI;          #IMPLIED
     type        %ContentType;  #IMPLIED
     rel         %LinkTypes;    #IMPLIED
     rev         %LinkTypes;    #IMPLIED
     media       %MediaDesc;    #IMPLIED
     >


   <!-- ************************** -->
   <!-- Definition of clip tags    -->
   <!-- ************************** -->

   <!-- Clip tag containing information for a specific fragment -->
   <!-- ======================================================= -->
   <!-- through meta, a, img and desc are given in specific order
        here, their order is acutally random -->



Pfeiffer, et al.        Expires September 5, 2006              [Page 44]

Internet-Draft                    CMML                        March 2006


   <!-- attrs    = the base language of the clip's attribute values and
                   of its content elements; a short title representing
                   the anchor (e.g. in tooltips) -->
   <!-- track    = defines different sets of clip tags; clip tags of
                   same type cannot overlap temporally -->
   <!-- start    = specifies the start time of the clip; specified in
                  time relative to the basetime of the header
                   [NOT INCLUDED IN ANNODEXED DOCUMENT] -->
   <!-- end      = specifies the end time of the clip; specified in
                   time relative to the basetime of the header
                   [NOT INCLUDED IN ANNODEXED DOCUMENT] -->

   <!ELEMENT clip (meta*, a?, img?, desc?)>
   <!ATTLIST clip
     %attrs;
     track       CDATA          "default"
     start       %Timestamp;    #REQUIRED
     end         %Timestamp;    #IMPLIED
     >

   <!-- A tag containing information for a specific clip -->
   <!-- ================================================ -->
   <!-- a tag contains anchor text being a textual description of the
        link between the current element (the source anchor) and the
        destination anchor given by the href attribute -->
   <!-- attrs    = the base language of the clip's attribute values
                   and of its content elements; the stylesheet class
                   attribute; a short title representing the anchor
                   (e.g. in tooltips) -->
   <!-- href     = specifies the location of a Web resource, thus
                   defining a link between the current element (the
                   source anchor) and the destination anchor given by
                   this attribute -->
   <!ELEMENT a (#PCDATA)>
   <!ATTLIST a
     %attrs;
     href        %URI;          #REQUIRED
     >

   <!-- IMG tag to include a representative image for the clip -->
   <!-- ====================================================== -->
   <!-- attrs = the language of the image's attribute values;
                the stylesheet class attribute; a short title
                representing the image (e.g. in tooltips) -->
   <!-- src   = reference to the image                          -->
   <!-- alt   = alternative text for the image (accessibility)  -->
   <!ELEMENT img EMPTY>
   <!ATTLIST img



Pfeiffer, et al.        Expires September 5, 2006              [Page 45]

Internet-Draft                    CMML                        March 2006


     %attrs;
     src         %URI;          #REQUIRED
     alt         CDATA          #IMPLIED
     >

   <!-- DESC human-readable, textual description of the clip
        (annotation)                                            -->
   <!-- ======================================================= -->
   <!-- attrs    = the base language of the data in the
                   description; the class & style attributes;
                   a short title representing the desc (e.g. in
                   tooltips) -->
   <!ELEMENT desc (#PCDATA)>
   <!ATTLIST desc
     %attrs;
     >



































Pfeiffer, et al.        Expires September 5, 2006              [Page 46]

Internet-Draft                    CMML                        March 2006


Appendix B.  An example CMML document

   <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
   <!DOCTYPE cmml SYSTEM "cmml.dtd">

   <cmml lang="en">

   <stream basetime="0">
     <import contenttype="video/x-theora" src="fish.ogg" start="0"/>
   </stream>

   <head>
     <title>Types of fish</title>
     <meta name="Producer" content="Joe Ordinary"/>
     <meta name="DC.Author" content="Joe's friend"/>
   </head>

   <clip id="intro" start="0" title="Introduction">
     <a href="http://example.com/fish.html">Read more about fish</a>
     <desc>This is the introduction to the film Joe made about fish.
     </desc>
   </clip>

   <clip id="dolphin" start="npt:3.5" end="npt:0:05:05.9"
         title="Dolphins">
     <img src="dolphin.png"/>
     <desc>Here, Joe caught sight of a dolphin in the ocean.</desc>
     <meta name="Subject" content="dolphin"/>
   </clip>

   <clip id="goldfish" start="npt:0:05:05.9" title="Goldfish">
     <a href="http://example.com/morefish.anx?id=goldfish">
        More video clips on goldfish.
     </a>
     <img src="http://example.com/goldfish.png"/>
     <desc>Joe has a fishtank at home with many colourful fish.
           The common goldfish is one of them and Joe's favourite.
           Here are some fabulous pictures he has taken of them.
     </desc>
     <meta name="Location" content="Joe's fishtank"/>
     <meta name="Subject" content="goldfish"/>
   </clip>

   </cmml>







Pfeiffer, et al.        Expires September 5, 2006              [Page 47]

Internet-Draft                    CMML                        March 2006


Appendix C.  Definitions of terms and abbreviations

   Mark-up: XML tags and their content used to describe a document.

   Annotating: The task of authoring mark-up for a document thus
      creating a Web resources.

   Hyperlinking: The task of linking from one Web resource to another.
      When a link contains a fragment offset into a resource, this is
      called "deep hyperlinking".

   Clip: A section of a time-continuous document covering some temporal
      interval.

   Indexing: The task of identifying index points or clips for time-
      continuous documents.

   Annotation track: A set of clips representing semantically correlated
      annotations of a time-continuous resource.

   Annodex bitstream: A specific file format for storing annotation,
      hyperlinking, and indexing information in annotation tracks and
      multiplexed together with the time-continuous documents they
      describe.

   Bitstream: A sequence of data containing samples of a time-continous
      document.

   Time-continuous document: A file containing time-sampled data in a
      temporally sequential manner.





















Pfeiffer, et al.        Expires September 5, 2006              [Page 48]

Internet-Draft                    CMML                        March 2006


Appendix D.  Glossary of acronyms

   Annodex: Annotated and indexed bitstream format.

   CMML: Continuous Media Markup Language.

   CSS: Cascading Style Sheets.

   DTD: Document Type Declaration.

   XML: eXtensible Markup Language.

   Web: World Wide Web.

   URI: Unified Resource Identifier.




































Pfeiffer, et al.        Expires September 5, 2006              [Page 49]

Internet-Draft                    CMML                        March 2006


Appendix E.  Acknowledgements

   The authors greatly acknowledge the contributions of Zentaro
   Kavanagh, Andrew Nesbit and Simon Lai in developing this
   specification.














































Pfeiffer, et al.        Expires September 5, 2006              [Page 50]

Internet-Draft                    CMML                        March 2006


Authors' Addresses

   Silvia Pfeiffer
   Commonwealth Scientific and Industrial Research Organisation CSIRO
   PO Box 76
   Epping, NSW  1710
   Australia

   Phone: +61 2 9372 4180
   Email: Silvia.Pfeiffer@csiro.au
   URI:   http://www.ict.csiro.au/


   Conrad D. Parker
   Commonwealth Scientific and Industrial Research Organisation CSIRO
   PO Box 76
   Epping, NSW  1710
   Australia

   Phone: +61 2 9372 4222
   Email: Conrad.Parker@csiro.au
   URI:   http://www.ict.csiro.au/


   Andre T. Pang
   Rising Sun Research
   133 Gouger Street
   Adelaide, SA  5000
   Australia

   Phone: +61 8 8400 6494
   Email: andre.pang@risingsunresearch.com
   URI:   http://www.risingsunresearch.com/


















Pfeiffer, et al.        Expires September 5, 2006              [Page 51]

Internet-Draft                    CMML                        March 2006


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Disclaimer of Validity

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Copyright Statement

   Copyright (C) The Internet Society (2006).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.




Pfeiffer, et al.        Expires September 5, 2006              [Page 52]
