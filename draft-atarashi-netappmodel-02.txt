

Network Working Group                                        R. Atarashi
Internet-Draft                                               M. Ninomiya
Intended status: Informational            Internet Initiative Japan Inc.
Expires: September 27, 2009                               March 26, 2009


                 The Model for Net and App Interaction
                     draft-atarashi-netappmodel-02

Status of this Memo

   This Internet-Draft is submitted to IETF in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on September 27, 2009.

Copyright Notice

   Copyright (c) 2009 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents in effect on the date of
   publication of this document (http://trustee.ietf.org/license-info).
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.









Atarashi & Ninomiya    Expires September 27, 2009               [Page 1]

Internet-Draft    The Model for Net and App Interaction       March 2009


Abstract

   This document describes the model for application and network
   interaction in reaction to Application Area Architecture Workshop
   held on February 11 and 12, 2008.  There is not completed mechanism
   for collaboration between application and network yet even though a
   solution is required.  The model proposed in this document is
   designed without a layer violation.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1.  Motivation . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.2.  Problems . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.3.  Requirements notation  . . . . . . . . . . . . . . . . . .  4
   2.  Adding Building Block  . . . . . . . . . . . . . . . . . . . .  5
   3.  Network and Application Interaction  . . . . . . . . . . . . .  6
   4.  Security Considerations  . . . . . . . . . . . . . . . . . . .  8
   5.  Normative References . . . . . . . . . . . . . . . . . . . . .  9
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 10






























Atarashi & Ninomiya    Expires September 27, 2009               [Page 2]

Internet-Draft    The Model for Net and App Interaction       March 2009


1.  Introduction

   This document describes the model for application and network
   interaction in reaction to Application Area Architecture Workshop
   held on February 11 and 12, 2008.  There is not completed mechanism
   for collaboration between application and network yet even though a
   solution is required.  The model proposed in this document is
   designed without a layer violation.

1.1.  Motivation

   From the application point of view, application users want to use
   network resources (ex. bandwidth, response time) and new network
   functions (ex.  QoS, VLAN) flexibly.  Applications and services have
   requirements for network behavior depending on the functions provided
   by the application.  For example, a streaming service requires high
   bandwidth and low delay network, database transactions need no
   packet-loss network but don't need high bandwidth.
   From the network point of view, it is useful for operation to know
   the application behavior.  If they can know the requirement from
   application, it may be possible to prepare the responded environment.
   It was impossible to change the configurations on demand, but NETCONF
   can be change the configuration flexibly.
   Now, it is ready to design the application common architecture,
   because the components are all together.

1.2.  Problems

   One of the reasons that the collaboration is difficult is that we
   don't share a common architecture and terminology.  There is a gap
   between application requirements and network functions.  Application
   requirements and behavior are defined by service level, but network
   functions are implemented by routing and low level configurations.
   When we have a requirement for network behavior, we have to configure
   routers using CLI (Command Line Interface).  It is hard because we
   have to master router configuration.  And it is impossible that
   configuration changes automatically and frequently.
   We need an interface to collaborate between the applications and the
   network.  IMO, the interface is defined not API-like function, but
   also model-like description.  For example,

      - Application service model

      - Network function model

   These kinds of models may be higher level concept than API.  As a
   application user for the NETCONF, the guideline is need to use and
   combine the application technologies and protocols.



Atarashi & Ninomiya    Expires September 27, 2009               [Page 3]

Internet-Draft    The Model for Net and App Interaction       March 2009


1.3.  Requirements notation

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].














































Atarashi & Ninomiya    Expires September 27, 2009               [Page 4]

Internet-Draft    The Model for Net and App Interaction       March 2009


2.  Adding Building Block

   At the Application Area Architecture Workshop, we agreed to add the
   application *semantic* layer which is really what users are
   interested in, and this is different even from the application
   *protocol* layer.  For example, "jabber" is in the Semantic Layer,
   "xmpp" is in the Protocol Layer.

        Layer              examples

   +-----------------+    +----------+
   | Semantic Layer  |    | jabber   |
   +-----------------+    +----------+
   | Protocol Layer  |    |  xmpp    |
   +-----------------+    +----------+
   | Transport Layer |    | TCP/SCTP |
   +-----------------+    +----------+
   | Internet Layer  |    | IP/IPv6  |
   +-----------------+    +----------+
   | Datalink Layer  |    | VLAN     |
   +-----------------+    +----------+
   | Physical Layer  |    | Ethernet |
   +-----------------+    +----------+




























Atarashi & Ninomiya    Expires September 27, 2009               [Page 5]

Internet-Draft    The Model for Net and App Interaction       March 2009


3.  Network and Application Interaction

   In order to implement to interact with application and network,
   *Management function* is needed outside the layer.  Each layer is
   managed by the management function.  The requirements from the
   Semantic Layer are conveyed to the management function to implement
   in the other layer.  For example, a "closed network" is requested
   from the application, an VLAN is implemented in the Datalink Layer.

   +-----------------+    +------------+
   | Semantic Layer  |<-->|            |
   +-----------------+    |            |
   | Protocol Layer  |<-->|            |
   +-----------------+    |            |
   | Transport Layer |<-->|            |
   +-----------------+    | management |
   | Internet Layer  |<-->|            |
   +-----------------+    |            |
   | Datalink Layer  |<-->|            |
   +-----------------+    |            |
   | Physical Layer  |<-->|            |
   +-----------------+    +------------+

   Management function consists of Management Block and APIs to
   collaborate with each layer and application, network devices.
   Management block is application or management scenario suite.
   Applications make requirement to Management Block through the API,
   Network devices are configured by Management Block through the API.

   +-----------------+    +---+-------------+---+
   | Semantic Layer  |<-->|   |             |   |
   +-----------------+    |   |             |   |requirements
   | Protocol Layer  |<-->|   |             |   |<-----> Applications
   +-----------------+    |   |             |   |
   | Transport Layer |<-->| A |             | A |
   +-----------------+    | P |  Management | P |configuration
   | Internet Layer  |<-->| I |   Block     | I |<-----> Network Devices
   +-----------------+    |   |             |   |
   | Datalink Layer  |<-->|   |             |   |
   +-----------------+    |   |             |   |
   | Physical Layer  |<-->|   |             |   |
   +-----------------+    +---+-------------+---+

   The Management block consists of scenarios that is a sequence of
   procedure in order to implement the requirements.  The implementation
   depend on the scenario rely on the network and system environments.

   It is important to define "data model" for primitive network



Atarashi & Ninomiya    Expires September 27, 2009               [Page 6]

Internet-Draft    The Model for Net and App Interaction       March 2009


   functions in corresponding to requirements.  These requirements are
   composed based on the function data model.  The network devices are
   configured when scenario involved the network devices and resources.
















































Atarashi & Ninomiya    Expires September 27, 2009               [Page 7]

Internet-Draft    The Model for Net and App Interaction       March 2009


4.  Security Considerations

   TBD
















































Atarashi & Ninomiya    Expires September 27, 2009               [Page 8]

Internet-Draft    The Model for Net and App Interaction       March 2009


5.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.















































Atarashi & Ninomiya    Expires September 27, 2009               [Page 9]

Internet-Draft    The Model for Net and App Interaction       March 2009


Authors' Addresses

   Ray S. Aatarashi
   Internet Initiative Japan Inc.
   Jinbocho-Mitsui Buld., 1-105 Kanda Jinbo-cho,
   Chiyoda-ku, Tokyo  101-0051
   Japan

   Phone: +81 3 5205 6464
   Email: ray@iijlab.net


   Megumi Ninomiya
   Internet Initiative Japan Inc.
   Jinbocho-Mitsui Buld., 1-105 Kanda Jinbo-cho,
   Chiyoda-ku, Tokyo  101-0051
   Japan

   Phone: +81 3 5205 6464
   Email: ninomiya@iij.ad.jp































Atarashi & Ninomiya    Expires September 27, 2009              [Page 10]


