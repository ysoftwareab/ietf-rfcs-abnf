atomFeed =
         element atom:feed {
            atomCommonAttributes,
            (atomAuthor*
             & atomCategory+
             & atomContributor*
             & atomGenerator?
             & atomIcon?
             & atomId
             & atomLink+
             & atomLogo?
             & atomRights?
             & atomSubtitle?
             & atomTitle
             & atomUpdated
             & extensionElement*),
            atomEntry*
         }

rel="service" and href attribute whose value is a IRI that points to
atomEntry =
       element atom:entry {
         atomCommonAttributes,
         (atomAuthor*
         & atomCategory*
         & atomContent
         & atomContributor*
         & atomId
         & atomLink*
         & atomPublished?
         & atomRights?
         & atomSource?
         & atomSummary?
         & atomTitle
         & atomUpdated
         & rolieFormat
         & rolieProperty
         & extensionElement*)
atomContent =
       element atom:content {
         atomCommonAttributes,
         attribute type { atomMediaType },
         attribute src { atomUri },
         empty
rolieFormat =
       element rolie:format {
         appCommonAttributes,
         attribute ns { atomURI },
         attribute version { text } ?,
         attribute schema-location { atomURI } ?,
         attribute schema-type { atomMediaType } ?,
         empty
ns="urn:ietf:params:xml:ns:iodef-2.0" version="2.0" schema-
location="https://www.iana.org/assignments/xml-registry/schema/iodef-
rolieProperty =
       element rolie:property {
         app:appCommonAttributes,
         attribute name { atom:atomURI },
         attribute value { text }
         empty
name="urn:ietf:params:rolie:property:csirt-iodef-id" value="12345"/>
href="[IRI of the containing Collection]".  This allows the Feed
scheme="urn:ietf:params:rolie:category:information-type"
term="incident"/>

rolieFormat =
       element rolie:format {
          app:appCommonAttributes,
          attribute ns { atom:atomURI },
          attribute version { text } ?,
          attribute schema-location { atom:atomURI } ?,
          attribute schema-type { atom:atomMediaType } ?,
          empty
rolieProperty =
       element rolie:property {
         app:appCommonAttributes,
         attribute name { atom:atomURI },
         attribute value { text }
         empty
     }

scheme="urn:ietf:params:rolie:category:information-type"
term="vulnerability"/>
href="http://example.org/provider/public/vulns">
href="www.example.com/rolie/servicedocument">
scheme="urn:ietf:params:rolie:category:information-type"
term="vulnerability"/>
href="http://example.org/provider/private/incidents">
href="www.example.com/rolie/servicedocument">
scheme="urn:ietf:params:rolie:category:information-type"
term="incident"/>
scheme="urn:ietf:params:rolie:category:information-type"
term="vulnerability"/>
href="http://example.org/provider/public/vulns" />
href="http://example.org/rolie/servicedocument"/>
src="http://www.example.org/provider/vulns/123456/data"
scheme="urn:ietf:params:rolie:category:information-type"
term="vulnerability"/>
src="http://www.example.org/provider/vulns/123456/data">
