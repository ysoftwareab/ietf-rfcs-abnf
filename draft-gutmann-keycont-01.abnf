keydata = keydef | comment | blank

keydef = algorithm ":" key-hash ":" service ":" host ":" port rfu CRLF

comment = "#" *(WSP / VCHAR) CRLF

blank = *(WSP) CRLF

algorithm = *(ALPHA / DIGIT)

key-hash = *(HEXDIG)

service = *(ALPHA)

host = [wherever this is specified]

port = *(DIGIT) / ""

rfu = "" / ":" *(WSP / VCHAR)

   The algorithm field contains the hash/fingerprint algorithm, usually
   "sha1".  This allows multiple hash algorithms to be used for a
   fingerprint.  For example while the current standard algorithm is
   SHA-1, some legacy implementations may require MD5, and future
   implementations may use SHA-1 successors.

   The key-hash field contains the hash/fingerprint of the key.  This
   value may be truncated as described in section 3.  When comparing
   truncated hashes for equality, the first min( hash1_length,
   hash2_length ) bytes of the two values are compared.

   The service field specifies the service or protocol that the hash/
   fingerprint applies to.  For example if both a TLS and and SSH server
   were running on the same host, the protocol field would be used to





   distinguish between the key hashes for the two servers.

   The host-name and (optional) host-port fields contain the host name
   and port that the key corresponds to.  Typically the port is
   implicitly specified in the service field, but it may also be
   explicitly specified here.

   For example a typical key continuity data file might consist of:

   # Sample key continuity data file

   sha1:B65427F83CED23A70263F8247C8D94192F751983:tls:www.example.com:443
   sha1:17A2FE37808F3E84:ssh:ssh.example.com:22
   md5:B2071C526B19F27C:ssh:ssh.example.com:22

   The first entry contains the fingerprint of an X.509 certificate used
   by the web server for www.example.com.  The second and third entries
   contain the (truncated) fingerprint of the SSH key used by the server
   ssh.example com, first in the standard SHA-1 format and then in the
   alternative MD5 format.

































