zz = DH(skE, pkR)
enc = Marshal(pkE)
pkE = Unmarshal(enc)
zz = DH(skE, pkR) + DH(skI, pkR)
enc = Marshal(pkE)
pkE = Unmarshal(enc)
context = ciphersuite + mode +
               len(kemContext) + kemContext +
               len(info) + info
key = Expand(secret, "hpke key" + context, Nk)
nonce = Expand(secret, "hpke nonce" + context, Nn)
kemContext = enc + pkR
secret = Extract(0\*Nh, zz)
zz = Decap(enc, skR)
kemContext = enc + pkR + pskID
secret = Extract(psk, zz)
zz = Decap(enc, skR)
kemContext = enc + pkR + pkI
secret = Extract(0*Nh, zz)
zz = AuthDecap(enc, skR, pkI)
encSeq = encode\_big\_endian(seq, len(self.nonce))
ct = Seal(self.key, self.Nonce(self.seq), aad, pt)
pt = Open(self.key, self.Nonce(self.seq), aad, pt)
