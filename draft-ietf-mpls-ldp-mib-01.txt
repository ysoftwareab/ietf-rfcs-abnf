
                   Definitions of Managed Objects for
 the Multiprotocol Label Switching, Label Distribution Protocol (LDP)

                               June 1999

                    <draft-ietf-mpls-ldp-mib-01.txt>

      Joan Cucchiara           Hans Sjostrand     James V. Luciani
      IronBridge Networks       Ericsson           Nortel Networks


                          Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC 2026.  Internet-Drafts are
   working documents of the Internet Engineering Task Force (IETF), its
   areas, and its working groups.  Note that other groups may also
   distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress".

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html

   Distribution of this document is unlimited. Please send comments to
   the Multiprotocol Label Switching (mpls) Working Group,
   <mpls@uu.net>.

Copyright Notice

   Copyright (C) The Internet Society (1999).  All Rights Reserved.

Abstract

   This memo defines a portion of the Management Information Base (MIB)
   for use with network management protocols in the Internet community.
   In particular, it describes managed objects for the Multiprotocol
   Label Switching, Label Distribution Protocol (LDP).







Expires December 1999                                           [Page 1]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


   Table of Contents

   1 Introduction .................................................    3
   2 The SNMP Management Framework ................................    3
   3 Structure of the MIB .........................................    5
   3.1 The MPLS LDP General Group .................................    5
   3.1.1 The Label Distribution Protocol's Entity Table ...........    5
        Table .....................................................    5
   3.1.3 The LDP Peer Table .......................................    5
   3.1.4 The LDP Sessions Table ...................................    6
   3.1.5 The LDP Adjacencies Table ................................    6
   3.1.6 The LDP Label Information Base (LIB) Table ...............    6
   3.2 The LDP Notifications Group ................................    6
   3.2.1 LDP Notifications ........................................    6
   4 MPLS Label Distribution Protocol MIB Definitions .............    6
   5 Revision History .............................................   29
   5.1 Changes from <draft-ietf-mpls-ldp-mib-00.txt> ..............   29
   6 TO DO List ...................................................   29
   7 Acknowledgments ..............................................   30
   8 References ...................................................   31
   9 Security Considerations ......................................   33
   10 Authors' Addresses ..........................................   33
   11 Full Copyright Statement ....................................   33
   12 IANA Address Family Numbers MIB .............................   34



























Expires December 1999                                           [Page 2]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


1.  Introduction

   This memo defines a portion of the Management Information Base (MIB)
   for use with network management protocols in the Internet community.
   In particular, it describes managed objects for the Multiprotocol
   Label Switching, Label Distribution Protocol (LDP) [18].

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [22].


2.  The SNMP Management Framework

   The SNMP Management Framework presently consists of five major
   components:

    o   An overall architecture, described in RFC 2571 [RFC2571].

    o   Mechanisms for describing and naming objects and events for the
        purpose of management. The first version of this Structure of
        Management Information (SMI) is called SMIv1 and described in
        STD 16, RFC 1155 [RFC1155], STD 16, RFC 1212 [RFC1212] and RFC
        1215 [RFC1215]. The second version, called SMIv2, is described
        in STD 58, RFC 2578 [RFC2578], RFC 2579 [RFC2579] and RFC 2580
        [RFC2580].

    o   Message protocols for transferring management information. The
        first version of the SNMP message protocol is called SNMPv1 and
        described in STD 15, RFC 1157 [RFC1157]. A second version of the
        SNMP message protocol, which is not an Internet standards track
        protocol, is called SNMPv2c and described in RFC 1901 [RFC1901]
        and RFC 1906 [RFC1906]. The third version of the message
        protocol is called SNMPv3 and described in RFC 1906 [RFC1906],
        RFC 2572 [RFC2572] and RFC 2574 [RFC2574].

    o   Protocol operations for accessing management information. The
        first set of protocol operations and associated PDU formats is
        described in STD 15, RFC 1157 [RFC1157]. A second set of
        protocol operations and associated PDU formats is described in
        RFC 1905 [RFC1905].

    o   A set of fundamental applications described in RFC 2573
        [RFC2573] and the view-based access control mechanism described
        in RFC 2575 [RFC2575].

   A more detailed introduction to the current SNMP Management Framework
   can be found in RFC 2570 [RFC2570].

   Managed objects are accessed via a virtual information store, termed


Expires December 1999                                           [Page 3]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


   the Management Information Base or MIB.  Objects in the MIB are
   defined using the mechanisms defined in the SMI.

   This memo specifies a MIB module that is compliant to the SMIv2. A
   MIB conforming to the SMIv1 can be produced through the appropriate
   translations. The resulting translated MIB must be semantically
   equivalent, except where objects or events are omitted because no
   translation is possible (use of Counter64). Some machine readable
   information in SMIv2 will be converted into textual descriptions in
   SMIv1 during the translation process. However, this loss of machine
   readable information is not considered to change the semantics of the
   MIB.







































Expires December 1999                                           [Page 4]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


3.  Structure of the MIB

   The following aspects are not addressed in this document: Interfaces
   with respect to the IFMIB (e.g. is ldp an interface in the sense of
   being stacked onto of the data link layer, and its relationship to
   the network layer), VPN issues (i.e. potential MIB objects such as
   the VPN Identifier are not included at this time), and lastly,
   multicast issues are not discussed.

   Some of these issues need further clarification before adding to this
   MIB.

   Currently, there is two groups.  The MPLS LDP General Group and the
   MPLS LDP Notifications Group.


3.1.  The MPLS LDP General Group

   This group contains information about the specific LDP Entities which
   are associated with this agent. Each LSR must have one LDP Entity.


3.1.1.  The Label Distribution Protocol's Entity Table

   The LDP Entity Table represents the LDP Entities which exist on a
   single Label Switch Router (LSR).  The LDP Entity performs the LDP
   protocol.  There must be at least one LDP Entity for the LSR to
   support LDP.

   Each entry/row in this table represents a single LDP Entity.


3.1.2.  The Label Distribution Protocol's Entity Statistics Table

   The LDP Entity Statistics Table will maintain counters related to an
   LDP Entity.  This Table should be a read-only table which contains
   statistical information.

   Each row in this table will be related to a single LDP Entity.


3.1.3.  The LDP Peer Table

   The LDP Peer Table contains information about LDP Peers.  Each row in
   this table represents an LDP Peer which is known to an LDP Entity.






Expires December 1999                                           [Page 5]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


3.1.4.  The LDP Sessions Table

   Each entry in this table represents a session between an LDP Entity
   and a Peer.



3.1.5.  The LDP Adjacencies Table

   This is a table of all adjacencies between all LPD Entities and all
   LDP Peers.  A Session may have one or more adjacencies.


3.1.6.  The LDP Label Information Base (LIB) Table

   TBD. Some potential objects: incoming label, outgoing label, and the
   mid.


3.2.  The LDP Notifications Group



3.2.1.  LDP Notifications

   Currently, there is one notification which will be sent when an LDP
   attempts to initialize the same session beyond the configured
   threshold.


4.  MPLS Label Distribution Protocol MIB Definitions

     MPLS-LDP-MIB DEFINITIONS ::= BEGIN

     IMPORTS
         OBJECT-TYPE, MODULE-IDENTITY, NOTIFICATION-TYPE,
         experimental,
         Integer32, Counter32, Unsigned32
             FROM SNMPv2-SMI
         MODULE-COMPLIANCE, OBJECT-GROUP, NOTIFICATION-GROUP
             FROM SNMPv2-CONF

         TEXTUAL-CONVENTION, TruthValue, RowStatus, TimeInterval
             FROM SNMPv2-TC
         ifIndex
             FROM IF-MIB
         AddressFamilyNumbers
             FROM IANA-ADDRESS-FAMILY-NUMBERS-MIB
         ;


Expires December 1999                                           [Page 6]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


     mplsLdpMIB MODULE-IDENTITY
         LAST-UPDATED "9906301200Z"  -- June 30, 1999
         ORGANIZATION "Multiprotocol Label Switching (mpls) Working Group"
         CONTACT-INFO
             "Joan Cucchiara (joan@ironbridgenetworks.com)
              IronBridge Networks

              Hans Sjostrand (hans.sjostrand@etx.ericsson.se)
              Ericsson

              James V. Luciani (luciani@baynetworks.com)
              Nortel Networks"
         DESCRIPTION
             "This MIB contains managed object definitions for the
             Multiprotocol Label Switching, Label Distribution
             Protocol, LDP, as defined in draft-ietf-mpls-ldp-04.txt."
         ::= { experimental 9876 } -- to be assigned

     --********************************************************************
     -- MPLS LDP Textual Conventions
     --********************************************************************
     --

     MplsLsrIdentifier ::= TEXTUAL-CONVENTION
         STATUS      current
         DESCRIPTION
             "The Label Switch Router (LSR) identifier
             is the first 4 bytes or the IP Address component
             of the Label Distribution Protocol (LDP) identifier."
         SYNTAX      OCTET STRING (SIZE (4))


     MplsLdpGenAddr ::= TEXTUAL-CONVENTION
         STATUS      current
         DESCRIPTION
             "The value of an network layer or data link layer address."
         SYNTAX      OCTET STRING (SIZE (0..64))

     MplsLdpIdentifier ::= TEXTUAL-CONVENTION
         STATUS      current
         DESCRIPTION
             "The LDP identifier is a six octet quantity
             which is used to identify an Label Switch Router
             (LSR) label space.

             The first four octets encode an IP address
             assigned to the LSR, and the last two octets
             identify a specific label space within the LSR."
         SYNTAX      OCTET STRING (SIZE (6))


Expires December 1999                                           [Page 7]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999



     AtmVpIdentifier ::= TEXTUAL-CONVENTION
          STATUS      current
          DESCRIPTION
              "The VPI value for a VPL. The value VPI=0 is not
              used for a VPL not associated with a VCL. For ATM
              UNIs supporting VPCs the VPI value ranges from 1
              to 255. For ATM UNIs supporting VCCs the VPI value
              ranges from 0 to 255.  The maximum VPI value
              cannot exceed the value allowable by
              atmInterfaceMaxVpiBits defined in ATM-MIB."
          SYNTAX Unsigned32 (0..4095)

     AtmVcIdentifier ::= TEXTUAL-CONVENTION
          STATUS      current
          DESCRIPTION
              "The VCI value for a VCL. The maximum VCI value
              cannot exceed the value allowable by
              atmInterfaceMaxVciBits defined in ATM-MIB."
          SYNTAX Unsigned32 (0..65535)

     -- Top-level structure of the MIB (the following is proposed)
     mpls                 OBJECT IDENTIFIER ::= { mplsProtocols }

     mplsProtocols        OBJECT IDENTIFIER ::= { mplsLdpObjects }
     -- under mplsProtocols will be LDP, CR-LDP,
     --       and other MPLS "Protocols".

     mplsLdpObjects       OBJECT IDENTIFIER ::= { mplsLdpMIB 1 }
     mplsLdpNotifications OBJECT IDENTIFIER ::= { mplsLdpMIB 2 }
     mplsLdpConformance   OBJECT IDENTIFIER ::= { mplsLdpMIB 3 }

     --****************************************************************
     -- MPLS LDP Objects
     --****************************************************************

     mplsLdpLsrObjects    OBJECT IDENTIFIER ::= { mplsLdpObjects 1 }

     mplsLdpEntityObjects OBJECT IDENTIFIER ::= { mplsLdpObjects 2 }

     --
     -- The MPLS Label Distribution Protocol Label Switch Router Objects
     --

     mplsLdpLsrID OBJECT-TYPE
         SYNTAX      MplsLsrIdentifier
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The LSR's Identifier."


Expires December 1999                                           [Page 8]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


         ::= { mplsLdpLsrObjects 1 }

     mplsLdpLsrLoopDetectionPresent OBJECT-TYPE
         SYNTAX      TruthValue
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "A indication of whether this LSR supports
             loop detection.  A value of 'true' indicates
             this LSR does support loop detection.  A value
             of 'false' indicates this LSR does not support
             loop detection."
         ::= { mplsLdpLsrObjects 2 }

     mplsLdpLsrLoopDetectionAdminStatus OBJECT-TYPE
         SYNTAX      INTEGER {
                         enabled(1),
                         disabled(2)
                     }
         MAX-ACCESS  read-write
         STATUS      current
         DESCRIPTION
             "To enable loop detection the value of
             this object should be 'enabled(1)'.
             Otherwise, to turn off loop detection,
             set this value to 'disabled(2)'."
         ::= { mplsLdpLsrObjects 3 }

     mplsLdpLsrPathVectorLimit OBJECT-TYPE
         SYNTAX      Integer32
         MAX-ACCESS  read-write
         STATUS      current
         DESCRIPTION
             "This object only has meaning if
             mplsLdpLsrLoopDetectionPresent has
             the value of 'true'.

             The value of this object represents the
             limit of path vectors which this LSR uses
             to treat the message as if it had
             traversed a loop."
         ::= { mplsLdpLsrObjects 4 }

     mplsLdpLsrHopCountLimit OBJECT-TYPE
         SYNTAX      Integer32
         MAX-ACCESS  read-write
         STATUS      current
         DESCRIPTION
             "This object only has meaning if
             mplsLdpLsrLoopDetectionPresent has


Expires December 1999                                           [Page 9]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


             the value of 'true'.

             The value of this object represents the
             limit on the Hop Count which this LSR uses
             to treat the message as if it had
             traversed a loop."
         ::= { mplsLdpLsrObjects 5 }

     mplsLdpLsrLoopPreventionPresent OBJECT-TYPE
         SYNTAX      TruthValue
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "A indication of whether this LSR supports
             loop prevention.  A value of 'true' indicates
             this LSR does support loop prevention.  A value
             of 'false' indicates this LSR does not support
             loop prevention."
         ::= { mplsLdpLsrObjects 6 }

     mplsLdpLsrLoopPreventionAdminStatus OBJECT-TYPE
         SYNTAX      INTEGER {
                         enabled(1),
                         disabled(2)
                     }
         MAX-ACCESS  read-write
         STATUS      current
         DESCRIPTION
             "To enable loop prevention the value of
             this object should be 'enabled(1)'.
             Otherwise, to turn off loop prevention,
             set this value to 'disabled(2)'."
         ::= { mplsLdpLsrObjects 7 }

     mplsLdpLsrLabelRetentionMode OBJECT-TYPE
         SYNTAX      INTEGER {
                         conservative(1),
                         liberal(2)
                     }
         MAX-ACCESS  read-write
         STATUS      current
         DESCRIPTION
             "The LSR can be configured to use either
             conservative or liberal label retention mode.

             If the value of this object is conservative(1)
             then advertized label mappings are retained
             only if they will be used to forward packets,
             i.e. if label came from a valid next hop.


Expires December 1999                                          [Page 10]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


             If the value of this object is liberal(2)
             then all advertized label mappings are retained
             whether they are from a valid next hop or not."
         ::= { mplsLdpLsrObjects 8 }

     --
     -- The MPLS Label Distribution Protocol Entity Table
     --

     mplsLdpEntityTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsLdpEntityEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "This table contains information about the
             MPLS Label Distribution Protocol Entities which
             exist on this Label Switch Router (LSR)."
         ::= { mplsLdpEntityObjects 1 }

     mplsLdpEntityEntry OBJECT-TYPE
         SYNTAX      MplsLdpEntityEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "An entry in this table represents an LDP entity.
             An entry can be created by a network administrator
             or by an SNMP agent as instructed by LDP.

             An LPD Entity is uniquely indexed by its LPD
             Identifier."
         INDEX       {  mplsLdpEntityID  }
         ::= { mplsLdpEntityTable 1 }

     MplsLdpEntityEntry ::= SEQUENCE {
         mplsLdpEntityID                            MplsLdpIdentifier,
         mplsLdpEntityLabelSpaceType                INTEGER,
         mplsLdpEntityDefVpi                        AtmVpIdentifier,
         mplsLdpEntityDefVci                        AtmVcIdentifier,
         mplsLdpEntityUnlabTrafVpi                  AtmVpIdentifier,
         mplsLdpEntityUnlabTrafVci                  AtmVcIdentifier,
         mplsLdpEntityMergeCapability               INTEGER,
         mplsLdpEntityVcDirectionality              INTEGER,
         mplsLdpEntityWellKnownDiscoveryPort        Unsigned32,
         mplsLdpEntityMtu                           Integer32,
         mplsLdpEntityKeepAliveHoldTimer            Integer32,
         mplsLdpEntityFailedInitSessionThreshold    Integer32,
         mplsLdpEntityLabelDistributionMethod       INTEGER,
         mplsLdpEntityRowStatus                     RowStatus
     }


Expires December 1999                                          [Page 11]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


     mplsLdpEntityID OBJECT-TYPE
         SYNTAX      MplsLdpIdentifier
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "The LDP identifier which uniquely identifies
             the LDP Entity.  This is s six octet quantity
             which is used to identify an Label Switch Router
             (LSR) label space.

             The first four octets encode an IP address
             assigned to the LSR, and the last two octets
             identify a specific label space within the
             LSR."
         REFERENCE
             "LDP Specification, Section on LDP Identifiers."
         ::= { mplsLdpEntityEntry 1 }


     mplsLdpEntityLabelSpaceType OBJECT-TYPE
         SYNTAX      INTEGER {
                         unknown(1),
                         perInterface(2),
                         perPlatform(3)
                         }
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The type of label spaces associated with this
             LDP Entity.  The values are

                'unknown(1)'        The type of label space is
                                    not known.

                'perInterface(2)'   The type of label space is
                                    tied to an interface.
                'perPlatform(3)'    The type of label space is
                                    tied to the platform."
         REFERENCE
             "LDP Specification, Section on Label Spaces."
         ::= { mplsLdpEntityEntry 2 }

     mplsLdpEntityDefVpi OBJECT-TYPE
         SYNTAX      AtmVpIdentifier
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The Default VPI value used in the label for the default
             VPI."
         ::= { mplsLdpEntityEntry 3 }


Expires December 1999                                          [Page 12]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


     mplsLdpEntityDefVci OBJECT-TYPE
         SYNTAX      AtmVcIdentifier
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The Default VCI value used in the label for the default
             VCI."
         ::= { mplsLdpEntityEntry  4 }

     mplsLdpEntityUnlabTrafVpi OBJECT-TYPE
         SYNTAX      AtmVpIdentifier
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "VPI value of the VCC supporting unlabeled traffic."
         DEFVAL  { 0 }
         ::= { mplsLdpEntityEntry 5 }

     mplsLdpEntityUnlabTrafVci OBJECT-TYPE
         SYNTAX      AtmVcIdentifier
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "VCI value of the VCC supporting unlabeled traffic."
         DEFVAL  { 31 }
         ::= { mplsLdpEntityEntry 6 }

     mplsLdpEntityMergeCapability OBJECT-TYPE
         SYNTAX      INTEGER {
                         noMerge(0),
                         vpMerge(1),
                         vcMerge(2),
                         vpVcMerge(3)
                      }
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "Sets the merge capability for this LDP entity."
         REFERENCE
             "draft-ietf-mpls-ldp-04.txt, Section 3.5.3"
         ::= { mplsLdpEntityEntry 7 }

     mplsLdpEntityVcDirectionality OBJECT-TYPE
         SYNTAX      INTEGER {
                         bidirectional(1),
                         unidirectional(2)
                     }
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION


Expires December 1999                                          [Page 13]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


             "Sets the VC directionality for this LDP entity."
         REFERENCE
             "draft-ietf-mpls-ldp-04.txt, Section 3.5.3"
         ::= { mplsLdpEntityEntry 8 }

     mplsLdpEntityWellKnownDiscoveryPort OBJECT-TYPE
         SYNTAX      Unsigned32
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The well known LDP Discovery Port."
         ::= { mplsLdpEntityEntry 9 }

     mplsLdpEntityMtu OBJECT-TYPE
         SYNTAX      Integer32 (0..65535)
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The maximum transmission unit (MTU) that was configured
             for this entity."
         ::= { mplsLdpEntityEntry 10 }

     mplsLdpEntityKeepAliveHoldTimer OBJECT-TYPE
         SYNTAX      Integer32 (1..65535)
         UNITS       "seconds"
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The two octet value which is the proposed keep alive hold
             timer for this LDP Entity."
         ::= { mplsLdpEntityEntry 11 }

     mplsLdpEntityFailedInitSessionThreshold OBJECT-TYPE
         SYNTAX      Integer32
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "When attempting to establish a session with a
             given Peer, the given LDP Entity should
             send out a notification when exceeding this threshold.
             A value of 0 (zero) for this object
             indicates that the threshold is infinity.
             In other words, a notification will not
             be sent if the value of this object is 0 (zero)."
         ::= { mplsLdpEntityEntry 12 }


     mplsLdpEntityLabelDistributionMethod OBJECT-TYPE
         SYNTAX      INTEGER {
                        downstreamOnDemand(1),


Expires December 1999                                          [Page 14]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


                        downstreamUnsolicited(2)
                     }
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "For any given LDP session, the method of
             label distribution must be specified."
         REFERENCE
             "draft-ietf-mpls-arch-04.txt [20]."
         ::= { mplsLdpEntityEntry 13 }

     mplsLdpEntityRowStatus OBJECT-TYPE
         SYNTAX      RowStatus
         MAX-ACCESS  read-create
         STATUS      current
              DESCRIPTION
                  "An object that allows entries in this table to
                  be created and deleted using the
                  RowStatus convention."
         ::= { mplsLdpEntityEntry 14 }

     --
     -- The MPLS LDP Entity Configurable ATM Label Range Table
     --

     mplsLdpEntityConfAtmLabelRangeTable OBJECT-TYPE
         SYNTAX SEQUENCE OF MplsLdpEntityConfAtmLabelRangeEntry
         MAX-ACCESS not-accessible
         STATUS current
         DESCRIPTION
             "The MPLS LDP Entity Configurable ATM Label Range Table.
             The purpose of this table is to provide a mechanism
             for specifying a contiguous range of vpi's
             with a contiguous range of vci's, or a 'label range'
             for LDP Entities.

             LDP Entities which use ATM must have at least one
             entry in this table."
         ::= { mplsLdpEntityObjects 2 }

     mplsLdpEntityConfAtmLabelRangeEntry OBJECT-TYPE
         SYNTAX MplsLdpEntityConfAtmLabelRangeEntry
         MAX-ACCESS not-accessible
         STATUS current
         DESCRIPTION
             "A row in the LDP Entity Configurable ATM Label
             Range Table.  One entry in this table contains
             information on a single range of labels
             represented by the configured Upper and Lower
             Bounds VPI/VCI pairs.


Expires December 1999                                          [Page 15]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


             NOTE:  The ranges for a specific LDP Entity
             are UNIQUE and non-overlapping.  For example,
             for a specific LDP Entity index, there could
             be one entry having ConfLowerBound vpi/vci == 0/32, and
             ConfUpperBound vpi/vci == 0/100, and a second entry for this
             same interface with ConfLowerBound vpi/vci == 0/101 and
             ConfUpperBound vpi/vci == 0/200.  However, there could not be
             a third entry with ConfLowerBound vpi/vci == 0/200 and
             ConfUpperBound vpi/vci == 0/300 because this label range overlaps
             with the second entry (i.e. both entries now have 0/200).

             A row will not be created unless a unique and non-overlapping
             range is specified.  Thus, row creation implies a one-shot
             row creation of LDP EntityID and ConfLowerBound vpi/vci and
             ConfUpperBound vpi/vci.  At least one label range entry
             for a specific LDP Entity MUST include the default VPI/VCI
             values denoted in the LDP Entity Table."
         INDEX { mplsLdpEntityID,
                 mplsLdpEntityConfAtmLabelRangeLowerBoundVPI,
                 mplsLdpEntityConfAtmLabelRangeLowerBoundVCI  }
         ::= { mplsLdpEntityConfAtmLabelRangeTable 1 }

     MplsLdpEntityConfAtmLabelRangeEntry ::= SEQUENCE {
         mplsLdpEntityConfAtmLabelRangeLowerBoundVPI  AtmVpIdentifier,
         mplsLdpEntityConfAtmLabelRangeLowerBoundVCI  AtmVcIdentifier,
         mplsLdpEntityConfAtmLabelRangeUpperBoundVPI  AtmVpIdentifier,
         mplsLdpEntityConfAtmLabelRangeUpperBoundVCI  AtmVcIdentifier,
         mplsLdpEntityConfAtmLabelRangeRowStatus      RowStatus
     }

     mplsLdpEntityConfAtmLabelRangeLowerBoundVPI OBJECT-TYPE
         SYNTAX AtmVpIdentifier
         MAX-ACCESS not-accessible
         STATUS current
         DESCRIPTION
             "The minimum VPI number configured for this range."
         ::= { mplsLdpEntityConfAtmLabelRangeEntry 1 }

     mplsLdpEntityConfAtmLabelRangeLowerBoundVCI OBJECT-TYPE
         SYNTAX AtmVcIdentifier
         MAX-ACCESS not-accessible
         STATUS current
         DESCRIPTION
             "The minimum VCI number configured for this range."
         ::= { mplsLdpEntityConfAtmLabelRangeEntry 2 }

     mplsLdpEntityConfAtmLabelRangeUpperBoundVPI OBJECT-TYPE
         SYNTAX AtmVpIdentifier
         MAX-ACCESS read-create
         STATUS current


Expires December 1999                                          [Page 16]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


         DESCRIPTION
             "The maximum VPI number configured for this range."
         ::= { mplsLdpEntityConfAtmLabelRangeEntry 3 }

     mplsLdpEntityConfAtmLabelRangeUpperBoundVCI OBJECT-TYPE
         SYNTAX AtmVcIdentifier
         MAX-ACCESS read-create
         STATUS current
         DESCRIPTION
             "The maximum VCI number configured for this range."
        ::= { mplsLdpEntityConfAtmLabelRangeEntry 4 }

     mplsLdpEntityConfAtmLabelRangeRowStatus OBJECT-TYPE
         SYNTAX RowStatus
         MAX-ACCESS read-create
         STATUS current
              DESCRIPTION
                  "An object that allows entries in this
                  table to be created and deleted using
                  the RowStatus convention."
         ::= { mplsLdpEntityConfAtmLabelRangeEntry 5 }


     --
     -- The MPLS LDP Entity Statistics Table
     --

     mplsLdpEntityStatsTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsLdpEntityStatsEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "This table is a read-only table which augments
             the MplsLdpConfEntityTable.  The purpose of this
             table is to keep statistical information about
             the LDP Entities on the LSR."
         ::= { mplsLdpEntityObjects 3 }

     mplsLdpEntityStatsEntry OBJECT-TYPE
         SYNTAX      MplsLdpEntityStatsEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "A row in this table contains statistical information
             about an LDP Entity."
         AUGMENTS       {   mplsLdpEntityEntry  }
         ::= { mplsLdpEntityStatsTable 1 }

     MplsLdpEntityStatsEntry ::= SEQUENCE {
         mplsLdpAttemptedSessions      Counter32


Expires December 1999                                          [Page 17]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


     }

     mplsLdpAttemptedSessions OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "A count of the total attempted sessions for
             this LDP Entity."
         ::= { mplsLdpEntityStatsEntry 1 }


     --
     -- The MPLS LDP Peer Table
     --

     mplsLdpPeerObjects OBJECT IDENTIFIER ::= { mplsLdpObjects 3 }

     mplsLdpPeerTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsLdpPeerEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "Information about LDP peers which have been discovered
             by the LDP Entities that are managed by this agent."
         ::= { mplsLdpPeerObjects 1 }

     mplsLdpPeerEntry OBJECT-TYPE
         SYNTAX      MplsLdpPeerEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "Information about a single Peer."
         INDEX       { mplsLdpEntityID,
                       mplsLdpPeerIndex }
         ::= { mplsLdpPeerTable 1 }

     MplsLdpPeerEntry ::= SEQUENCE {
         mplsLdpPeerIndex                      Unsigned32,
         mplsLdpPeerID                         MplsLdpIdentifier,
         mplsLdpPeerInternetworkAddrType       AddressFamilyNumbers,
         mplsLdpPeerInternetworkAddr           MplsLdpGenAddr,
         mplsLdpPeerDefaultMtu                 Integer32,
         mplsLdpPeerKeepAliveHoldTimer         Integer32,
         mplsLdpPeerLabelDistributionMethod    INTEGER,
         mplsLdpPeerRowStatus                  RowStatus
     }

     mplsLdpPeerIndex OBJECT-TYPE
         SYNTAX      Unsigned32 (1..4294967295)


Expires December 1999                                          [Page 18]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "An identifier for the LDP peer that is unique within the
              scope of this agent."
         ::= { mplsLdpPeerEntry 1 }

     mplsLdpPeerID OBJECT-TYPE
         SYNTAX      MplsLdpIdentifier
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The LDP identifier of this LDP Peer."
         ::= { mplsLdpPeerEntry 2 }

     mplsLdpPeerInternetworkAddrType OBJECT-TYPE
         SYNTAX      AddressFamilyNumbers
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The type of the internetwork layer address of this
             LDP peer. This object indicates how the value of
             mplsLdpPeerInternetworkAddr is to be interpreted."
         ::= { mplsLdpPeerEntry 3 }

     mplsLdpPeerInternetworkAddr OBJECT-TYPE
         SYNTAX      MplsLdpGenAddr
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The value of the internetwork layer address of this LDP peer."
         ::= { mplsLdpPeerEntry 4 }

     mplsLdpPeerDefaultMtu OBJECT-TYPE
         SYNTAX      Integer32 (0..65535)
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The default maximum transmission unit (MTU) of the
             LDP Peer."
         DEFVAL      { 9180 }
         ::= { mplsLdpPeerEntry 5 }

     mplsLdpPeerKeepAliveHoldTimer OBJECT-TYPE
         SYNTAX      Integer32 (1..65535)
         UNITS       "seconds"
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The two octet unsigned non zero integer that indicates


Expires December 1999                                          [Page 19]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


             the number of seconds that this Peer proposes for the
             value of the KeepAlive Interval."
         ::= { mplsLdpPeerEntry 6 }

     mplsLdpPeerLabelDistributionMethod OBJECT-TYPE
         SYNTAX      INTEGER {
                        downstreamOnDemand(1),
                        downstreamUnsolicited(2)
                     }
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "For any given LDP session, the method of
             label distribution must be specified."
         REFERENCE
             "draft-ietf-mpls-arch-05.txt [20]."
         ::= { mplsLdpPeerEntry 7 }

     mplsLdpPeerRowStatus OBJECT-TYPE
         SYNTAX      RowStatus
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "An object that allows entries in this table to be created
             and deleted using the RowStatus convention."
         ::= { mplsLdpPeerEntry 8 }

     --
     -- The MPLS LDP Peer Configurable ATM Label Range Table
     --

     mplsLdpPeerConfAtmLabelRangeTable OBJECT-TYPE
         SYNTAX SEQUENCE OF MplsLdpPeerConfAtmLabelRangeEntry
         MAX-ACCESS not-accessible
         STATUS current
         DESCRIPTION
             "The MPLS LDP Peer Configurable ATM Label Range Table.
             The purpose of this table is to provide a mechanism
             for specifying a contiguous range of vpi's with a contiguous
             range of vci's, or a 'label range' for LDP Peers.
             LDP Peers which use ATM must have at least one
             entry in this table."
         ::= { mplsLdpPeerObjects 2 }

     mplsLdpPeerConfAtmLabelRangeEntry OBJECT-TYPE
         SYNTAX MplsLdpPeerConfAtmLabelRangeEntry
         MAX-ACCESS not-accessible
         STATUS current
         DESCRIPTION
             "A row in the LDP Peer Configurable ATM Label Range Table.


Expires December 1999                                          [Page 20]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


             One entry in this table contains information
             on a single range of labels represented by
             the configured Upper and Lower Bounds VPI/VCI pairs.

             NOTE:  The ranges for a specific LDP Peer
             are UNIQUE and non-overlapping.  For example,
             for a specific LDP Peer index, there could
             be one entry having ConfLowerBound vpi/vci == 0/32, and
             ConfUpperBound vpi/vci == 0/100, and a second entry for this
             same interface with ConfLowerBound vpi/vci == 0/101 and
             ConfUpperBound vpi/vci == 0/200.  However, there could not be
             a third entry with ConfLowerBound vpi/vci == 0/200 and
             ConfUpperBound vpi/vci == 0/300 because this label range overlaps
             with the second entry (i.e. both entries now have 0/200).

             A row will not be created unless a unique and non-overlapping
             range is specified.  Thus, row creation implies a one-shot
             row creation of LDP PeerIndex and ConfLowerBound vpi/vci and
             ConfUpperBound vpi/vci.  At least one label range entry
             for a specific LDP Peer MUST include the default VPI/VCI
             values denoted in the LDP Peer Table."
         INDEX { mplsLdpPeerIndex,
                 mplsLdpPeerConfAtmLabelRangeLowerBoundVPI,
                 mplsLdpPeerConfAtmLabelRangeLowerBoundVCI  }
         ::= { mplsLdpPeerConfAtmLabelRangeTable 1 }

     MplsLdpPeerConfAtmLabelRangeEntry ::= SEQUENCE {
         mplsLdpPeerConfAtmLabelRangeLowerBoundVPI      AtmVpIdentifier,
         mplsLdpPeerConfAtmLabelRangeLowerBoundVCI      AtmVcIdentifier,
         mplsLdpPeerConfAtmLabelRangeUpperBoundVPI      AtmVpIdentifier,
         mplsLdpPeerConfAtmLabelRangeUpperBoundVCI      AtmVcIdentifier,
         mplsLdpPeerConfAtmLabelRangeRowStatus          RowStatus
     }

     mplsLdpPeerConfAtmLabelRangeLowerBoundVPI OBJECT-TYPE
         SYNTAX AtmVpIdentifier
         MAX-ACCESS not-accessible
         STATUS current
         DESCRIPTION
             "The minimum VPI number configured for this range."
         ::= { mplsLdpPeerConfAtmLabelRangeEntry 1 }

     mplsLdpPeerConfAtmLabelRangeLowerBoundVCI OBJECT-TYPE
         SYNTAX AtmVcIdentifier
         MAX-ACCESS not-accessible
         STATUS current
         DESCRIPTION
             "The minimum VCI number configured for this range."
         ::= { mplsLdpPeerConfAtmLabelRangeEntry 2 }


Expires December 1999                                          [Page 21]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


     mplsLdpPeerConfAtmLabelRangeUpperBoundVPI OBJECT-TYPE
         SYNTAX AtmVpIdentifier
         MAX-ACCESS read-create
         STATUS current
         DESCRIPTION
             "The maximum VPI number configured for this range."
         ::= { mplsLdpPeerConfAtmLabelRangeEntry 3 }

     mplsLdpPeerConfAtmLabelRangeUpperBoundVCI OBJECT-TYPE
         SYNTAX AtmVcIdentifier
         MAX-ACCESS read-create
         STATUS current
         DESCRIPTION
             "The maximum VCI number configured for this range."
        ::= { mplsLdpPeerConfAtmLabelRangeEntry 4 }

     mplsLdpPeerConfAtmLabelRangeRowStatus OBJECT-TYPE
         SYNTAX RowStatus
         MAX-ACCESS read-create
         STATUS current
              DESCRIPTION
                  "An object that allows entries in this table to be created
                  and deleted using the RowStatus convention."
         ::= { mplsLdpPeerConfAtmLabelRangeEntry 5 }

     --
     -- The MPLS LDP Sessions Table
     --

     mplsLdpSessionObjects OBJECT IDENTIFIER ::= { mplsLdpObjects 4 }

     mplsLdpSessionTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsLdpSessionEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "A table of Sessions between the LDP Entities and
             LDP Peers."
         ::= { mplsLdpSessionObjects 1 }

     mplsLdpSessionEntry OBJECT-TYPE
         SYNTAX      MplsLdpSessionEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "An entry in this table represents information on a
             single session between an LDP Entity and LDP Peer."
         INDEX       { mplsLdpEntityID,
                       mplsLdpPeerIndex,
                       mplsLdpSessionIndex


Expires December 1999                                          [Page 22]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


                     }
         ::= { mplsLdpSessionTable 1 }

     MplsLdpSessionEntry ::= SEQUENCE {
         mplsLdpSessionIndex                          Unsigned32,
         mplsLdpSessionID                             MplsLdpIdentifier,
         mplsLdpSessionProtocolVersion                Integer32,
         mplsLdpSessionKeepAliveHoldTimeRemaining     TimeInterval,
         mplsLdpSessionRole                           INTEGER,
         mplsLdpSessionState                          INTEGER,
         mplsLdpSessionAtmLabelRangeLowerBoundVPI     AtmVpIdentifier,
         mplsLdpSessionAtmLabelRangeLowerBoundVCI     AtmVcIdentifier,
         mplsLdpSessionAtmLabelRangeUpperBoundVPI     AtmVpIdentifier,
         mplsLdpSessionAtmLabelRangeUpperBoundVCI     AtmVcIdentifier,
         mplsLdpSessionRowStatus                      RowStatus
     }

     mplsLdpSessionIndex OBJECT-TYPE
         SYNTAX      Unsigned32 (1..4294967295)
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "An unique identifier for this entry such that it
             identifies a specific LDP Session."
         ::= { mplsLdpSessionEntry 1 }

     mplsLdpSessionID OBJECT-TYPE
         SYNTAX      MplsLdpIdentifier
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The LDP Session identifier."
         ::= { mplsLdpSessionEntry 2 }

     mplsLdpSessionProtocolVersion OBJECT-TYPE
              SYNTAX      Integer32(0..65535)
              MAX-ACCESS  read-only
              STATUS      current
              DESCRIPTION
                  "The version of the LDP Protocol which
                  this session is using."
              ::= { mplsLdpSessionEntry 3 }

     mplsLdpSessionKeepAliveHoldTimeRemaining OBJECT-TYPE
         SYNTAX      TimeInterval
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The keep alive hold time remaining for this session."
         ::= { mplsLdpSessionEntry 4 }


Expires December 1999                                          [Page 23]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


     mplsLdpSessionRole OBJECT-TYPE
         SYNTAX      INTEGER {
                        active(1),
                        passive(2)
                     }
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "An indication of whether the LDP Entity associated with
             this session is acting in an 'active' role or
             a 'passive' role."
         ::= { mplsLdpSessionEntry 5 }

     mplsLdpSessionState OBJECT-TYPE
         SYNTAX      INTEGER {
                        nonexistent(1),
                        initialized(2),
                        openrec(3),
                        opensent(4),
                        operational(5)
                     }
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The current state of the session, all of the
             states 1 - 5 are based on the state machine for
             session negotiation behavior."
         ::= { mplsLdpSessionEntry 6 }

     mplsLdpSessionAtmLabelRangeLowerBoundVPI OBJECT-TYPE
         SYNTAX AtmVpIdentifier
         MAX-ACCESS read-only
         STATUS current
         DESCRIPTION
             "The minimum VPI number for this range."
         ::= { mplsLdpSessionEntry 7 }

     mplsLdpSessionAtmLabelRangeLowerBoundVCI OBJECT-TYPE
         SYNTAX AtmVcIdentifier
         MAX-ACCESS read-only
         STATUS current
         DESCRIPTION
             "The minimum VCI number for this range."
         ::= { mplsLdpSessionEntry 8 }

     mplsLdpSessionAtmLabelRangeUpperBoundVPI OBJECT-TYPE
         SYNTAX AtmVpIdentifier
         MAX-ACCESS read-only
         STATUS current
         DESCRIPTION


Expires December 1999                                          [Page 24]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


             "The maximum VPI number for this range."
         ::= { mplsLdpSessionEntry 9 }

     mplsLdpSessionAtmLabelRangeUpperBoundVCI OBJECT-TYPE
         SYNTAX AtmVcIdentifier
         MAX-ACCESS read-only
         STATUS current
         DESCRIPTION
             "The maximum VCI number for this range."
         ::= { mplsLdpSessionEntry 10 }

     mplsLdpSessionRowStatus OBJECT-TYPE
         SYNTAX      RowStatus
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "An object that allows entries in this table to be created
             and deleted using the RowStatus convention."
         ::= { mplsLdpSessionEntry 11 }

     --
     -- The MPLS LDP Hello Adjacency Table
     --

     mplsLdpHelloAdjacencyObjects OBJECT IDENTIFIER ::= { mplsLdpObjects 5 }

     mplsLdpHelloAdjacencyTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsLdpHelloAdjacencyEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "A table of Hello Adjacencies for Sessions."
         ::= { mplsLdpHelloAdjacencyObjects 1 }

     mplsLdpHelloAdjacencyEntry OBJECT-TYPE
         SYNTAX      MplsLdpHelloAdjacencyEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "Each row represents a single LDP Hello Adjacency.
             An LDP Session can have one or more Hello adjacencies."
         INDEX       { mplsLdpSessionIndex,
                       mplsLdpHelloAdjacencyIndex }
         ::= { mplsLdpHelloAdjacencyTable 1 }

     MplsLdpHelloAdjacencyEntry ::= SEQUENCE {
         mplsLdpHelloAdjacencyIndex                  Unsigned32,
         mplsLdpHelloAdjacencyHoldTimeRemaining      TimeInterval
     }


Expires December 1999                                          [Page 25]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


     mplsLdpHelloAdjacencyIndex OBJECT-TYPE
         SYNTAX      Unsigned32 (1..4294967295)
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "An identifier for the adjacency."
         ::= { mplsLdpHelloAdjacencyEntry 1 }

     mplsLdpHelloAdjacencyHoldTimeRemaining OBJECT-TYPE
         SYNTAX      TimeInterval
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The time remaining for this Hello Adjacency."
         ::= { mplsLdpHelloAdjacencyEntry 2 }

     ---
     --- Notifications
     ---

     mplsLdpNotificationPrefix   OBJECT IDENTIFIER ::=
                                      { mplsLdpNotifications 0 }

     mplsLdpFailedInitSessionThresholdExceeded NOTIFICATION-TYPE
          OBJECTS     {
                        mplsLdpEntityFailedInitSessionThreshold
                      }
          STATUS      current
          DESCRIPTION
             "This notification is generated whenever the value
             of mplsLdpEntityFailedInitSessionThreshold is
             exceeded."
          ::= { mplsLdpNotificationPrefix 1 }


     --********************************************************************
     -- Module Compliance Statement
     --********************************************************************


     mplsLdpGroups
         OBJECT IDENTIFIER ::= { mplsLdpConformance 1 }

     mplsLdpCompliances
         OBJECT IDENTIFIER ::= { mplsLdpConformance 2 }

     mplsLdpModuleCompliance MODULE-COMPLIANCE
         STATUS current
         DESCRIPTION
             "The compliance statement for agents that support


Expires December 1999                                          [Page 26]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


             the MPLS LDP MIB."
         MODULE -- this module
             MANDATORY-GROUPS    { mplsLdpGeneralGroup,
                                   mplsLdpNotificationsGroup
                                 }
         OBJECT   mplsLdpEntityRowStatus
         MIN-ACCESS  read-only
         DESCRIPTION
             "The agent is not required to support a SET operation
             to this object."

         OBJECT   mplsLdpPeerRowStatus
         MIN-ACCESS  read-only
         DESCRIPTION
             "The agent is not required to support a SET operation
             to this object."
         ::= { mplsLdpCompliances 1 }

     -- units of conformance

     mplsLdpGeneralGroup OBJECT-GROUP
         OBJECTS {
         mplsLdpLsrID,
         mplsLdpLsrLoopDetectionPresent,
         mplsLdpLsrLoopDetectionAdminStatus,
         mplsLdpLsrPathVectorLimit,
         mplsLdpLsrHopCountLimit,
         mplsLdpLsrLoopPreventionPresent,
         mplsLdpLsrLoopPreventionAdminStatus,
         mplsLdpLsrLabelRetentionMode,
         mplsLdpEntityLabelSpaceType,
         mplsLdpEntityDefVpi,
         mplsLdpEntityDefVci,
         mplsLdpEntityUnlabTrafVpi,
         mplsLdpEntityUnlabTrafVci,
         mplsLdpEntityMergeCapability,
         mplsLdpEntityVcDirectionality,
         mplsLdpEntityWellKnownDiscoveryPort,
         mplsLdpEntityMtu,
         mplsLdpEntityKeepAliveHoldTimer,
         mplsLdpEntityFailedInitSessionThreshold,
         mplsLdpEntityLabelDistributionMethod,
         mplsLdpEntityRowStatus,
         mplsLdpEntityConfAtmLabelRangeUpperBoundVPI,
         mplsLdpEntityConfAtmLabelRangeUpperBoundVCI,
         mplsLdpEntityConfAtmLabelRangeRowStatus,
         mplsLdpAttemptedSessions,
         mplsLdpPeerID,
         mplsLdpPeerInternetworkAddrType,
         mplsLdpPeerInternetworkAddr,


Expires December 1999                                          [Page 27]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


         mplsLdpPeerDefaultMtu,
         mplsLdpPeerKeepAliveHoldTimer,
         mplsLdpPeerLabelDistributionMethod,
         mplsLdpPeerRowStatus,
         mplsLdpPeerConfAtmLabelRangeUpperBoundVPI,
         mplsLdpPeerConfAtmLabelRangeUpperBoundVCI,
         mplsLdpPeerConfAtmLabelRangeRowStatus,
         mplsLdpSessionProtocolVersion,
         mplsLdpSessionKeepAliveHoldTimeRemaining,
         mplsLdpSessionRole,
         mplsLdpSessionState,
         mplsLdpSessionAtmLabelRangeLowerBoundVPI,
         mplsLdpSessionAtmLabelRangeLowerBoundVCI,
         mplsLdpSessionAtmLabelRangeUpperBoundVPI,
         mplsLdpSessionAtmLabelRangeUpperBoundVCI,
         mplsLdpSessionRowStatus,
         mplsLdpHelloAdjacencyHoldTimeRemaining
         }
         STATUS    current
         DESCRIPTION
             "Objects that apply to all MPLS LDP implementations over ATM."
         ::= { mplsLdpGroups 1 }


         mplsLdpNotificationsGroup NOTIFICATION-GROUP
             NOTIFICATIONS { mplsLdpFailedInitSessionThresholdExceeded }
             STATUS   current
             DESCRIPTION
                 "The notification(s) which an MPLS LDP implemention
                 is required to implement."
             ::= { mplsLdpGroups 2 }


     END

















Expires December 1999                                          [Page 28]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


5.  Revision History

   This section should be removed when this document is published as an
   RFC.

5.1.  Changes from <draft-ietf-mpls-ldp-mib-00.txt>

   Textual conventions were added for the LSR Identifier and the LDP
   Identifier.

   Top-level mib structure was added. The LDP MIB falls under a proposed
   hierarchy of mpls.mplsProtocols.

   The mib hierarchy within the LDP MIB was also changed.  A new branch,
   under mpls.mplsProtocols.mplsLdpMIB.mplsLdpObjects was added.  This
   branch is mplsLdpLsrObjects.  Currently, this contains several new
   scalar objects:  mplsLdpLsrID, mplsLdpLsrLoopDectectionPresent,
   mplsLdpLsrLoopDetectinAdminStatus, mplsLdpLsrPathVectorLimit,
   mplsLdpLsrHopCountLimit, mplsLdpLsrLoopPreventionPresent,
   mplsLdpLsrLoopPreventionAdminStatus, and
   mplsLdpLsrLabelRetentionMode.

   mplsLdpEntityTable is now indexed by mplsLdpEntityIdentifier, which
   is the LDP Identifier used in Session establishment.
   mplsLdpEntityLoopDetection and mplsLdpEntityLoopPrevention objects
   were removed from this table.

   The following objects were added to the mplsLdpEntityTable:
   mplsLdpEntityLabelSpaceType, mplsLdpEntityUnlabTrafVpi,
   mplsLdpEntityUnlabTrafVci, mplsLdpEntityMergeCapability,
   mplsLdpEntityVcDirectionality, and
   mplsLdpEntityLabelDistributionMethod.

   The following objects were added to the mplsLdpPeerEntityTable:
   mplsLdpPeerLabelDistributionMethod.

   The following object was removed from the mplsLdpEntityStatsTable:
   mplsLdpEntityEstablishedSessions.

   The LIB table was added.

   The following notifications were added.

   References were added and revised.


6.  TO DO List

   This section should be removed when this document is published as an
   RFC.  This section outlines the next areas the authors intend to


Expires December 1999                                          [Page 29]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


   address.

    o   The MIB should be enhanced support other L2 protocols (e.g.
        Frame Relay).

    o   Update this draft to reflect the latest changes to draft-ietf-
        mpls-ldp-05.txt (or later LDP drafts).

    o   Update the Introduction section of the draft to reflect all the
        changes made to the LDP MIB.

    o   Fix conformance statements.

    o   Remove the following sections prior to final publication:  IANA
        Considerations Section, Revisions Section and this (TO DO List)
        Section.


7.  Acknowledgments

   The authors would like to thank the following people:  Leigh
   McLellan, Geetha Brown, Geping Chen and Charlan Zhou from Nortel
   Networks, and Zoltan Takacs and Bo Augustsson from Ericsson.




























Expires December 1999                                          [Page 30]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


8.  References

[RFC2571]   Harrington, D., Presuhn, R., and B. Wijnen, "An Architecture
            for Describing SNMP Management Frameworks", RFC 2571, April
            1999

[RFC1155]   Rose, M., and K. McCloghrie, "Structure and Identification
            of Management Information for TCP/IP-based Internets", STD
            16, RFC 1155, May 1990

[RFC1212]   Rose, M., and K. McCloghrie, "Concise MIB Definitions", STD
            16, RFC 1212, March 1991

[RFC1215]   M. Rose, "A Convention for Defining Traps for use with the
            SNMP", RFC 1215, March 1991

[RFC2578]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
            Rose, M., and S. Waldbusser, "Structure of Management
            Information Version 2 (SMIv2)", STD 58, RFC 2578, April 1999

[RFC2579]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
            Rose, M., and S. Waldbusser, "Textual Conventions for
            SMIv2", STD 58, RFC 2579, April 1999

[RFC2580]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
            Rose, M., and S. Waldbusser, "Conformance Statements for
            SMIv2", STD 58, RFC 2580, April 1999

[RFC1157]   Case, J., Fedor, M., Schoffstall, M., and J. Davin, "Simple
            Network Management Protocol", STD 15, RFC 1157, May 1990.

[RFC1901]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
            "Introduction to Community-based SNMPv2", RFC 1901, January
            1996.

[RFC1906]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
            "Transport Mappings for Version 2 of the Simple Network
            Management Protocol (SNMPv2)", RFC 1906, January 1996.

[RFC2572]   Case, J., Harrington D., Presuhn R., and B. Wijnen, "Message
            Processing and Dispatching for the Simple Network Management
            Protocol (SNMP)", RFC 2572, April 1999

[RFC2574]   Blumenthal, U., and B. Wijnen, "User-based Security Model
            (USM) for version 3 of the Simple Network Management
            Protocol (SNMPv3)", RFC 2574, April 1999

[RFC1905]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
            "Protocol Operations for Version 2 of the Simple Network
            Management Protocol (SNMPv2)", RFC 1905, January 1996.


Expires December 1999                                          [Page 31]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


[RFC2573]   Levi, D., Meyer, P., and B. Stewart, "SNMPv3 Applications",
            RFC 2573, April 1999

[RFC2575]   Wijnen, B., Presuhn, R., and K. McCloghrie, "View-based
            Access Control Model (VACM) for the Simple Network
            Management Protocol (SNMP)", RFC 2575, April 1999

[RFC2570]   Case, J., Mundy, R., Partain, D., and B. Stewart,
            "Introduction to Version 3 of the Internet-standard Network
            Management Framework", RFC 2570, April 1999

[17] Narten, T., and H. Alvestrand, "Guidelines for Writing an IANA
     Considerations Section in RFCs.", RFC 2434, IBM, Maxware, October
     1998

[18] Andersson, Loa, Doolan, P., Feldman, N., Fredette, A., and Thomas,
     B., "LDP Specification.", draft-ietf-mpls-ldp-04.txt, Nortel
     Networks, Ennovate Networks, IBM, Nortel Networks, cisco Systems
     May 1999.

[19] Callon, R., Doolan, P., Feldman, N., Fredette, A., Swallow, G., and
     A. Viswanathan, "A Framework for Multiprotocol Label Switching",
     draft-ietf-mpls-framework-02.txt, Ascend Communications, Ennovate
     Networks, IBM, Bay Networks, cisco Systems, November 1997.

[20] Rosen, E., Viswananthan, A., and R. Callon, "Multiprotocol Label
     Switching Architecture", draft-ietf-mpls-arch-05.txt, cisco
     Systems, Lucent Technologies, and IronBridge Networks, April 1999.

[21] Jamoussi, B., editor, "Constraint-Based LSP Setup using LDP",
     draft-ietf-mpls-cr-ldp-01.txt, February 1999.

[22] Bradner, S., "Key words for use in RFCs to Indicate Requirement
     Levels", BCP 14, RFC 2119, Harvard University, March 1997

[23] Bradner, S., "The Internet Standards Process -- Revision 3", BCP 9,
     RFC 2026, Harvard University, October 1996

[24] Srinivansan, C., and A. Viswanathan, "MPLS Traffic Engineering
     Management Information Base Using SMIv2", draft-ietf-mpls-te-mibs-
     00.txt, Lucent Technologies, February 1999.

[25] Greene, M., J. Cucchiara, J. Luciani, "Definition of Managed
     Objects for the NBMA Next Hop Resolution Protocol (NHRP)", draft-
     ietf-ion-nhrp-mib-09.txt, May 1999.






Expires December 1999                                          [Page 32]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


9.  Security Considerations

   Assuming that secure network management (such as SNMP v3) is
   implemented, the objects represented in this MIB do not pose a threat
   to the security of the network.


10.  Authors' Addresses


                  Joan Cucchiara
                  IronBridge Networks
                  55 Hayden Ave., Suite 1000
                  Lexington, MA  02421
                  Phone: (781) 372-8236
                  Email: joan@ironbridgenetworks.com


                  Hans Sjostrand
                  Ericsson
                  Business Unit Datacom Networks and IP Services
                  S-126 25 Stockholm, Sweden
                  Phone: +46 8 719 9960
                  Email: hans.sjostrand@etx.ericsson.se


                  James V. Luciani
                  Nortel Networks
                  3 Federal Street
                  Mail Stop:  BL3-03
                  Billerica, MA 01821
                  Phone: (978) 916-4734
                  Email: luciani@baynetworks.com




11.  Full Copyright Statement

   Copyright (C) The Internet Society (1999). All Rights Reserved.


   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other


Expires December 1999                                          [Page 33]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


   Internet organizations, except as needed for the  purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.



12.  IANA Address Family Numbers MIB

   This section is copied verbatim from the draft-ietf-ion-nhrp-mib-
   09.txt[].  This section will be removed in future versions of this
   draft.  This section was copied here to for convenience, as it is
   IMPORTED into the LDP MIB.

   This appendix defines the initial content of the IANA-ADDRESS-
   FAMILY-NUMBERS-MIB.  This section should be removed from this
   document prior to its approval, at which time this MIB will be
   administered by IANA.

   The branch for this MIB needs to be determined, and an appropriate
   number should be added where XXX is currently.

     IANA-ADDRESS-FAMILY-NUMBERS-MIB DEFINITIONS ::= BEGIN

     IMPORTS
         MODULE-IDENTITY,
         mib-2                               FROM SNMPv2-SMI
         TEXTUAL-CONVENTION                  FROM SNMPv2-TC;

     ianaAddressFamilyNumbers MODULE-IDENTITY
         LAST-UPDATED "9905191200Z"  -- May 19, 1999
         ORGANIZATION "IANA"
         CONTACT-INFO
             "Postal:    Internet Assigned Numbers Authority
                         USC/Information Sciences Institute
                         4676 Admiralty Way
                         Marina del Rey, CA 90292-6695
                         USA


Expires December 1999                                          [Page 34]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


             Tel:    +1  310-822-1511
             E-Mail: iana@isi.edu"
         DESCRIPTION
             "The MIB module defines the AddressFamilyNumbers
             textual convention."

         -- revision history

         REVISION     "9905191200Z"  -- May 19, 1999
                                     -- RFC-Editor assigns RFC xxxx
         DESCRIPTION  "Initial version, published as RFC xxxx."

         ::= { mib-2 XXX }           -- to be assigned by IANA


     AddressFamilyNumbers ::= TEXTUAL-CONVENTION
         STATUS       current
         DESCRIPTION
             "The definition of this textual convention with the
             addition of newly assigned values is published
             periodically by the IANA, in either the Assigned
             Numbers RFC, or some derivative of it specific to
             Internet Network Management number assignments.
             (The latest arrangements can be obtained by
             contacting the IANA.)

             The enumerations are described as:

             other(0),    -- none of the following
             ipV4(1),     -- IP Version 4
             ipV6(2),     -- IP Version 6
             nsap(3),     -- NSAP
             hdlc(4),     -- (8-bit multidrop)
             bbn1822(5),
             all802(6),   -- (includes all 802 media
                          --   plus Ethernet 'canonical format')
             e163(7),
             e164(8),     -- (SMDS, Frame Relay, ATM)
             f69(9),      -- (Telex)
             x121(10),    -- (X.25, Frame Relay)
             ipx(11),     -- IPX (Internet Protocol Exchange)
             appletalk(12),  -- Apple Talk
             decnetIV(13),   -- DEC Net Phase IV
             banyanVines(14),  -- Banyan Vines
             e164withNsap(15),
                          -- (E.164 with NSAP format subaddress)

             reserved(65535)



Expires December 1999                                          [Page 35]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


             Requests for new values should be made to IANA via
             email (iana@isi.edu)."

         SYNTAX  INTEGER {
                     other(0),
                     ipV4(1),
                     ipV6(2),
                     nsap(3),
                     hdlc(4),
                     bbn1822(5),
                     all802(6),
                     e163(7),
                     e164(8),
                     f69(9),
                     x121(10),
                     ipx(11),
                     appletalk(12),
                     decnetIV(13),
                     banyanVines(14),
                     e164withNsap(15),
                     reserved(65535)
                 }

     END



























Expires December 1999                                          [Page 36]

INTERNET-DRAFT                MPLS LDP MIB                     June 1999


