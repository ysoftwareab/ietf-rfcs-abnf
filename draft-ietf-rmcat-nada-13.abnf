d_tilde = <                                           (1)
              |                  (d_queue-QTH)
              \ QTH exp(-LAMBDA ---------------) , otherwise.
                                    QTH


loss_exp = MULTILOSS * loss_int.


x_curr = d_tilde + DMARK*|--------|  + DLOSS*|--------|.  (2)
                            \ PMRREF /          \ PLRREF /
x_prev = x_curr
t_last = t_curr

gamma = min(GAMMA_MAX, ------------------)     (3)
                               rtt+DELTA+DFILT

r_ref = max(r_ref, (1+gamma) r_recv)           (4)


x_offset = x_curr - PRIO*XREF*RMAX/r_ref          (5)

x_diff   = x_curr - x_prev                        (6)

                              delta    x_offset
r_ref = r_ref - KAPPA*-------*------------*r_ref
                               TAU       TAU

                                   x_diff
                     - KAPPA*ETA*---------*r_ref         (7)
                                    TAU


r_ref = min(r_ref, RMAX)        (8)
r_ref = max(r_ref, RMIN)        (9)


p_loss = ALPHA*p_inst + (1-ALPHA)*p_loss.   (10)

r_diff_v = min(0.05*r_ref, BETA_V*8*buffer_len*FPS).     (11)
r_diff_s = min(0.05*r_ref, BETA_S*8*buffer_len*FPS).     (12)
r_vin  = max(RMIN, r_ref - r_diff_v).      (13)
r_send = min(RMAX, r_ref + r_diff_s).    (14)


BETA_S = 0.1 and reference frame rate of FPS = 30.

q_avg = w*q + (1-w)*q_avg.

p= <  p_max*--------------, if q_lo <= q < q_hi;
              |         q_hi - q_lo
              |
              \ p = 1,                if q >= q_hi.

p = <  p_max* --------------, if b_lo<= b-b_tk <b_hi;
            |           b_hi-b_lo
            |
            \ 1,                     if b-b_tk>=b_hi.


