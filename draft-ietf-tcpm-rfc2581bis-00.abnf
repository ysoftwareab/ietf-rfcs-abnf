IW = 2 * SMSS bytes and MUST NOT be more than 2 segments
    If (SMSS > 1095 bytes) and (SMSS <= 2190 bytes):
IW = 3 * SMSS bytes and MUST NOT be more than 3 segments
    if SMSS <= 1095 bytes:
IW = 4 * SMSS bytes and MUST NOT be more than 4 segments

    A detailed rationale and discussion of the IW setting is provided in
    [RFC3390].  

    When larger initial windows are implemented along with Path MTU
    Discovery [RFC1191], and the MSS being used is found to be too
    large, the congestion window cwnd SHOULD be reduced to prevent
    large bursts of smaller segments.  Specifically, cwnd SHOULD be
    reduced by the ratio of the old segment size to the new segment
    size.
    
    The initial value of ssthresh SHOULD be arbitrarily high (for
    example, some implementations use the size of the advertised
    window), but ssthresh MUST be reduced in response to congestion.
    The slow start algorithm is used when cwnd < ssthresh, while the
    congestion avoidance algorithm is used when cwnd > ssthresh.  When
    cwnd and ssthresh are equal the sender may use either slow start or
    congestion avoidance.
    
    During slow start, a TCP increments cwnd by at most SMSS bytes for
    each ACK received that acknowledges new data.  Slow start ends when
    cwnd exceeds ssthresh (or, optionally, when it reaches it, as noted
    above) or when congestion is observed.  While traditionally TCP
    implementations have increased cwnd by precisely SMSS bytes upon
    receipt of an ACK covering new data, we RECOMMEND that TCP
    implementations increase cwnd, per:

        cwnd += min (N, SMSS)                      (2)

    where N is the number of previously unacknowledged bytes
    acknowledged in the incoming ACK.  This adjustment is part of
    Appropriate Byte Counting [RFC3465] and provides robustness against
    misbehaving receivers which may attempt to induce a sender to
    artificially inflate cwnd using a mechanism known as "ACK Division"
    [SCWA99].  ACK Division consists of a receiver sending multiple ACKs
ssthresh = max (FlightSize / 2, 2*SMSS)            (4)
    
ssthresh = max (ssthresh / 2, 2*SMSS)              (5)

