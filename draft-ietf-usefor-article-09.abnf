header              = other-header
header              =/ Date-header
header              = other-header / Date-header

UTF8-2          = %xC2-DF UTF8-tail
UTF8-3          = %xE0 %xA0-BF UTF8-tail / %xE1-EC 2(UTF8-tail) /
                        %xED %x80-9F UTF8-tail / %xEE-EF 2(UTF8-tail)
UTF8-4          = %xF0 %x90-BF 2(UTF8-tail) / %xF1-F7 3(UTF8-tail)
UTF8-5          = %xF8 %x88-BF 3(UTF8-tail) / %xF9-FB 4(UTF8-tail)
UTF8-6          = %xFC %x84-BF 4(UTF8-tail) / %xFD 5(UTF8-tail)
UTF8-tail       = %x80-BF
UTF8-xtra-char  = UTF8-2 / UTF8-3 / UTF8-4 / UTF8-5 / UTF8-6
text            = %d1-9 /            ; all UTF-8 characters except
                        %d11-12 /          ; US-ASCII NUL, CR and LF
                        %d14-127 /
                        UTF8-xtra-char
ctext           = NO-WS-CTL /        ; all of <text> except
                        %d33-39 /          ; SP, HTAB, "(", ")"
                        %d42-91 /          ; "\" and DEL
                        %d93-126 /
                        UTF8-xtra-char
qtext           = NO-WS-CTL /        ; all of <text> except
                        %d33 /             ; SP, HTAB, "\" DQUOTE
                        %d35-91 /          ; and DEL
                        %d93-126 /
                        UTF8-xtra-char
utext           = NO-WS-CTL /        ; Non white space controls
                        %d33-126 /         ; The rest of UTF-8
                        UTF8-xtra-char
strict-text     = %d1-9 /            ; text restricted to
                        %d11-12 /          ; US-ASCII
                        %d14-127
strict-qtext    = NO-WS-CTL /        ; qtext restricted to
                        %d33 /             ; US-ASCII
                        %d35-91 /
                        %d93-126
strict-qcontent = strict-qtext / strict-quoted-pair
unstructured    = 1*( [FWS] utext ) [FWS]

ALPHA         = %x41-5A /          ; A-Z
                      %x61-7A            ; a-z
CR            = %x0D               ; carriage return
CRLF          = CR LF
DIGIT         = %x30-39            ; 0-9
HTAB          = %x09               ; horizontal tab
LF            = %x0A               ; line feed
SP            = %x20               ; space
NO-WS-CTL     = %d1-8 /            ; US-ASCII control characters
                      %d11 /             ; which do not include the
                      %d12 /             ; carriage return, line feed,
                      %d14-31 /          ; and whitespace characters
                      %d127
specials      = "(" / ")" /        ; Special characters used in
                      "<" / ">" /        ; other parts of the syntax
                      "[" / "]" /
                      ":" / ";" /
                      "@" / "\" /
                      "," / "." /
                      DQUOTE
WSP           = SP / HTAB          ; whitespace characters
FWS           = ([*WSP CRLF] 1*WSP); folding whitespace
ccontent      = ctext / quoted-pair / comment
comment       = "(" *([FWS] ccontent) [FWS] ")"
CFWS          = *([FWS] comment) ( ([FWS] comment) / FWS )
DQUOTE        = %d34               ; quote mark
quoted-pair   = "\" text
                          News Article Format              February 2003

atext         = ALPHA / DIGIT /
                      "!" / "#" /        ; Any US-ASCII character except
                      "$" / "%" /        ; controls, SP, and specials.
                      "&" / "'" /        ; Used for atoms
                      "*" / "+" /
                      "-" / "/" /
                      "=" / "?" /
                      "^" / "_" /
                      "`" / "{" /
                      "|" / "}" /
                      "~"
atom          = [CFWS] 1*atext [CFWS]
dot-atom      = [CFWS] dot-atom-text [CFWS]
dot-atom-text = 1*atext *( "." 1*atext )
qcontent      = qtext / quoted-pair
quoted-string = [CFWS] DQUOTE
                         *( [FWS] qcontent ) [FWS]
                         DQUOTE [CFWS]
word          = atom / quoted-string
phrase        = 1*word

        NOTE: Following [RFC 2234], literal text included in the syntax
        is to be regarded as case-insensitive.  However, in
        contradistinction to [RFC 2822], the Netnews protocols are
        sensitive to case in some instances (as in newsgroup-names, some
        header parameters, etc.). Care has been taken to indicate this
        explicitly where required.

article           = 1*( header CRLF ) separator body
header            = other-header
other-header      = header-name ":" 1*SP other-content
header-name       = 1*name-character *( "-" 1*name-character )
name-character    = ALPHA / DIGIT
other-content     = <the content of a header defined by some
                           other standard>
separator         = CRLF
body              = *( *998text CRLF )

header            =/ USENET-header
USENET-header     = "USENET" ":" SP USENET-content
                             *( ";" ( USENET-parameter /
                                      extension-parameter ) )
USENET-content    = <syntax specific to that USENET-header>
USENET-parameter  = <a parameter specific to that USENET-header>

extension-parameter= <a parameter not defined by this standard>
parameter         = attribute "=" value
attribute         = [CFWS] token [CFWS]
x-token           = "x-" token
token             = 1*<any (US-ASCII) CHAR except SP, CTLs,
                             or tspecials>
tspecials         = "(" / ")" / "<" / ">" / "@" /
                          "," / ";" / ":" / "\" / DQUOTE /
                          "/" / "[" / "]" / "?" / "="
value             = [CFWS] token [CFWS] / quoted-string

sender-value      = mailbox / "verified"
sender = "\"Joe D. Bloggs\" <jdbloggs@bloggs.example>" (authinfo)
header              =/ Date-header
Date-header         = "Date" ":" SP Date-content
Date-content        = date-time
zone                = (( "+" / "-" ) 4DIGIT) / "UT" / "GMT"

header              =/ From-header
From-header         = "From" ":" SP From-content
From-content        = mailbox-list
addr-spec           = local-part "@" domain
local-part          = dot-atom / strict-quoted-string

        NOTE: This syntax ensures that the local-part of an addr-spec is
        restricted to pure US-ASCII (and is thus in strict compliance
        with [RFC 2822]), whilst allowing any UTF-8 character to be used
        in a preceding quoted-string containing the poster's full name.
        If some future extension to the Email protocols should relax
        this restriction, one would expect the Netnews protocols to
        follow.

        Observe that there is no provision for parameters in this
        header, or in other headers containing addresses likely to be
        used for sending email (see 4.2.2).

header             =/ Message-ID-header
Message-ID-header  = "Message-ID" ":" SP Message-ID-content
Message-ID-content = [FWS] msg-id [FWS]
msg-id             = "<" id-left "@" id-right ">"
id-left            = dot-atom-text / no-fold-quote
id-right           = dot-atom-text / no-fold-literal
no-fold-quote      = DQUOTE
                              *( strict-qtext / "\\" / "\" DQUOTE )
                              qspecial
                              *( strict-qtext / "\\" / "\" DQUOTE )
                              DQUOTE
qspecial           = "(" / ")" /        ; same as specials except
                           "<" / ">" /        ; "\" and DQUOTE quoted
                           "[" / "]" /
                           ":" / ";" /
                           "@" / "\\" /
                           "," / "." /
                           "\" DQUOTE
no-fold-literal    = "[" *( dtext / "\[" / "\]" / "\\" ) "]"

header              =/ Subject-header
Subject-header      = "Subject" ":" SP Subject-content
Subject-content     = [ [FWS] back-reference ] pure-subject
pure-subject        = unstructured
back-reference      = %x52.65.3A.20
                                    ; which is a case-sensitive "Re: "
                          News Article Format              February 2003

header              =/ Newsgroups-header
Newsgroups-header   = "Newsgroups"  ":" SP Newsgroups-content
                                    *( ";" extension-parameter )
Newsgroups-content  = [FWS] newsgroup-name
                               *( [FWS] ng-delim [FWS] newsgroup-name )
                               [FWS]
newsgroup-name      = component *( "." component )
component           = 1*component-grapheme
ng-delim            = ","
component-grapheme  = combiner-base *combiner-mark
combiner-base       = combiner-ASCII / combiner-extended
combiner-ASCII      = DIGIT / ALPHA / "+" / "-" / "_"
combiner-extended   = <any character with a Unicode code value
                             of 0080 or greater but excluding any
                             character in Unicode categories
                             Cc, Cf, Cs, M* and Z*>
combiner-mark       = <any character with a Unicode code value of
                             0080 or greater and in Unicode category M*>

        NOTE: the excluded characters in a combiner-extended are control
        characters (Cc), format control characters (Cf), surrogates
        (Cs), marks (M*) and separators (Z*). In particular, this
        excludes all whitespace characters.  To all intents and
        purposes, a component-grapheme is what a user might regard as a
        single "character" as displayed on his screen, though it might
        be transmitted as several actual characters (e.g. q-circumflex
        is two characters). Note also that, in some writing schemes,
        several component-graphemes will merge into one visible object
        of variable size.

header          =/ Path-header
Path-header     = "Path" ":" SP Path-content
                           *( ";" extension-parameter )
Path-content    = [FWS]
                           *( path-identity [FWS] path-delimiter [FWS] )
                           tail-entry [FWS]
path-identity   = ( ALPHA / DIGIT )
                           *( ALPHA / DIGIT / "-" / "." / ":" / "_" )
path-delimiter  = "/" / "?" / "%" / "," / "!"
tail-entry      = path-identity
                          News Article Format              February 2003

        NOTE: A Path-content will inevitably contain at least one path-
        identity, except possibly in the case of a proto-article that
        has not yet been injected onto the network.

        NOTE: Observe that the syntax does not allow comments within the
        Path-header; this is to simplify processing by relaying and
        injecting agents which have a requirement to process this header
        extremely rapidly.

header              =/ Reply-To-header
Reply-To-header     = "Reply-To" ":" SP Reply-To-content
Reply-To-content    = address-list

header              =/ Sender-header
Sender-header       = "Sender" ":" SP Sender-content
Sender-content      = mailbox

header              =/ Organization-header
Organization-header = "Organization" ":" SP Organization-content
Organization-content= unstructured

        NOTE: Posting and injecting agents are discouraged from
        providing a default value for this header unless it is
        acceptable to all posters using those agents. Unless this header
        contains useful information (including some indication of the
        posters physical location) posters are discouraged from
        including it.

header              =/ Keywords-header
Keywords-header     = "Keywords" ":" SP Keywords-content
Keywords-content    = phrase *( "," phrase )

        NOTE: The list is comma separated, NOT space separated.

        NOTE: Contrary to the usage defined in [RFC 2822], this standard
        does not permit multiple occurrences of this header.

header              =/ Summary-header
Summary-header      = "Summary" ":" SP Summary-content
                          News Article Format              February 2003

Summary-content     = unstructured

header              =/ Distribution-header
Distribution-header = "Distribution" ":" SP Distribution-content
                               *( ";" extension-parameter )
Distribution-content= distribution *( dist-delim distribution )
dist-delim          = ","
distribution        = [FWS] distribution-name [FWS]
distribution-name   = ALPHA 1*distribution-rest
distribution-rest   = ALPHA / "+" / "-" / "_"

        NOTE: The use of ALPHA in the syntax ensures that distribution
        names are always in US-ASCII.

header              =/ Followup-To-header
Followup-To-header  = "Followup-To" ":" SP Followup-To-content
                               *( ";" extension-parameter )
Followup-To-content = Newsgroups-content /
                            [FWS] %x70.6F.73.74.65.72 [FWS]
                            ; which is a case-sensitive "poster"

header      =/ Mail-Copies-To-header
                          News Article Format              February 2003

copy-addr   = address-list

header      =/ Posted-And-Mailed-header
header              =/ References-header
References-header   = "References" ":" SP References-content
References-content  = [CFWS] msg-id *( CFWS msg-id ) [CFWS]

        NOTE: This differs from the syntax of [RFC 2822] by requiring at
        least one CFWS between the msg-ids (a SP at this point was an
        [RFC 1036] requirement).

header              =/ Expires-header
Expires-header      = "Expires" ":" SP Expires-content
                               *( ";" extension-parameter )
Expires-content     = date-time

header              =/ Archive-header
Archive-header      = "Archive" ":" SP Archive-content
                               *( ";" ( Archive-parameter /
                                        extension-parameter ) )
Archive-content     = [CFWS] ("no" / "yes" ) [CFWS]
                          News Article Format              February 2003

Archive-parameter   = <a parameter with attribute "filename"
                             and any value>

header              =/ Control-header
Control-header      = "Control" ":" SP Control-content
                               *( ";" extension-parameter )
Control-content     = [CFWS] control-message [CFWS]
control-message     = <empty>

control-message     =/ CONTROL-message
CONTROL-message     = "CONTROL" CONTROL-arguments
CONTROL-arguments   = <the argument(s) specific to that
                             CONTROL-message>

header              =/ Approved-header
Approved-header     = "Approved" ":" SP Approved-content
                               *( ";" extension-parameter )
Approved-content    = From-content  ; see 5.2

header              =/ Supersedes-header
Supersedes-header   = "Supersedes" ":" SP Supersedes-content
Supersedes-content  = [CFWS] msg-id [CFWS]

        NOTE: There is no "c" in "Supersedes".

        NOTE: The Supersedes-header defined here has no connection with
        the Supersedes-header that sometimes appears in Email messages
        converted from X.400 according to [RFC 2156]; in particular, the
        syntax here permits only one msg-id in contrast to the multiple
        msg-ids in that Email version.

header            =/ Xref-header
Xref-header       = "Xref" ":" SP Xref-content
                             *( ";" extension-parameter )
Xref-content      = [CFWS] server-name 1*( CFWS location ) [CFWS]
server-name       = path-identity  ; see 5.6.1
location          = newsgroup-name ":" article-locator
article-locator   = 1*( %x21-27 / %x29-3A / %x3C-7E )
                             ; US-ASCII printable characters
                             ; except '(' and ';'

header              =/ Lines-header
Lines-header        = "Lines" ":" SP Lines-content
                               *( ";" extension-parameter )
Lines-content       = [CFWS] 1*DIGIT [CFWS]

header              =/ User-Agent-header
User-Agent-header   = "User-Agent" ":" SP User-Agent-content
                               *( ";" extension-parameter )
User-Agent-content  = product *( CFWS product )
product             = [CFWS] token [CFWS] [ "/" product-version ]
product-version     = [CFWS] token [CFWS]

header          =/ Injector-Info-header
                          News Article Format              February 2003

host-value      = dot-atom /
                        [ dot-atom ":" ]
                          ( IPv4address / IPv6address ); see [RFC 2373]
sender-value    = mailbox / "verified"
posting-account=client0002623; logging-data=2427;
posting-date="Wed, 2 Aug 2000 20:05:33 -0100 (BST)"


header            =/ Complaints-To-header
usage=inject
usage=relay
batch             = 1*( batch-header article )
batch-header      = "#!" SP rnews SP article-size CRLF
rnews             = %x72.6E.65.77.73 ; case sensitive "rnews"
article-size      = 1*DIGIT

control-message     =/ Newgroup-message
Newgroup-message    = "newgroup" Newgroup-arguments
Newgroup-arguments  = CFWS newsgroup-name [ CFWS newgroup-flag ]
newgroup-flag       = "moderated"

groupinfo-body      = [ newsgroups-tag CRLF ]
                               newsgroups-line CRLF
newsgroups-tag      = %x46.6F.72 SP %x79.6F.75.72 SP
                               %x6E.65.77.73.67.72.6F.75.70.73 SP
                               %x66.69.6C.65.3A
                               ; case sensitive
                               ; "For your newsgroups file:"
newsgroups-line     = newsgroup-name
                               [ 1*HTAB newsgroup-description ]
                               [ 1*WSP moderation-flag ]
moderation-flag     = %x28.4D.6F.64.65.72.61.74.65.64.29
                               ; case sensitive "(Moderated)"

control-message     =/ Rmgroup-message
Rmgroup-message     = "rmgroup" Rmgroup-arguments
Rmgroup-arguments   = CFWS newsgroup-name

control-message   =/ Mvgroup-message
Mvgroup-message   = "mvgroup" Mvgroup-arguments
Mvgroup-arguments = CFWS newsgroup-name CFWS newsgroup-name
                             [ CFWS newgroup-flag ]

control-message     =/ Checkgroup-message
Checkgroup-message  = "checkgroups" Checkgroup-arguments
Checkgroup-arguments= [ chkscope ] [ chksernr ]
chkscope            = 1*( CFWS ["!"] newsgroup-name )
chksernr            = CFWS "#" 1*DIGIT

checkgroups-body    = *( valid-group CRLF )
valid-group         = newsgroups-line ; see 7.2.1.2
control-message     =/ Cancel-message
Cancel-message      = "cancel" Cancel-arguments
Cancel-arguments    = CFWS msg-id [CFWS]

control-message     =/ Ihave-message
Ihave-message       = "ihave" Ihave-arguments
Ihave-arguments     = relayer-name
control-message     =/ Sendme-message
Sendme-message      = "sendme" Sendme-arguments
Sendme-arguments    = Ihave-arguments
relayer-name        = path-identity  ; see 5.6.1
ihave-body          = *( msg-id CRLF )
sendme-body         = ihave-body

Ihave-arguments     = [FWS] *( msg-id FWS ) [relayer-name]
UTF8-2               = %xC2-DF UTF8-tail
UTF8-3               = %xE0 %xA0-BF UTF8-tail /
                          %xE1-EC 2(UTF8-tail) /
                          %xED %x80-9F UTF8-tail /
                          %xEE-EF 2(UTF8-tail)
UTF8-4               = %xF0 %x90-BF 2(UTF8-tail) /
                          %xF1-F7 3(UTF8-tail)
UTF8-5               = %xF8 %x88-BF 3(UTF8-tail) /
                          %xF9-FB 4(UTF8-tail)
UTF8-6               = %xFC %x84-BF 4(UTF8-tail) /
                          %xFD 5(UTF8-tail)
UTF8-tail            = %x80-BF
UTF8-xtra-char       = UTF8-2 / UTF8-3 / UTF8-4 / UTF8-5 / UTF8-6
strict-qcontent      = strict-qtext / strict-quoted-pair
strict-quoted-pair   = "\" strict-text
strict-qtext         = NO-WS-CTL /      ; qtext restricted to
                          %d33 /           ; US-ASCII
                          %d35-91 /
                          %d93-126
strict-text          = %d1-9 /          ; text restricted to
                          %d11-12 /        ; US-ASCII
                          %d14-127
article              = 1*( header CRLF ) separator body
body                 = *( *998text CRLF )
header-name          = 1*name-character *( "-" 1*name-character )
                          News Article Format              February 2003

name-character       = ALPHA / DIGIT
other-header         = header-name ":" 1*SP other-content
other-content        = <the content of a header defined by some
                             other standard>
extension-parameter  = <a parameter not defined by this standard>
separator            = CRLF
header               = other-header /
                          Date-header /
                          From-header /
                          Message-ID-header /
                          Subject-header /
                          Newsgroups-header /
                          Path-header /
                          Reply-To-header /
                          Sender-header /
                          Organization-header /
                          Keywords-header /
                          Summary-header /
                          Distribution-header /
                          Followup-To-header /
                          Mail-Copies-To-header /
                          Posted-And-Mailed-header /
                          References-header /
                          Expires-header /
                          Archive-header /
                          Control-header /
                          Approved-header /
                          Supersedes-header /
                          Xref-header /
                          News Article Format              February 2003

                          Lines-header /
                          User-Agent-header /
                          Injector-Info-header /
                          Complaints-To-header

Approved-content     = From-content
Approved-header      = "Approved" ":" SP Approved-content
                             *( ";" extension-parameter )
Archive-content      = [CFWS] ("no" / "yes" ) [CFWS]
Archive-header       = "Archive" ":" SP Archive-content
                             *( ";" ( Archive-parameter /
                                      extension-parameter ) )
Archive-parameter    = <a parameter with attribute "filename"
                           and any value>
Complaints-To-content= address-list
Complaints-To-header = "Complaints-To" ":" SP Complaints-To-content
Control-content      = [CFWS] control-message [CFWS]
Control-header       = "Control" ":" SP Control-content
                             *( ";" extension-parameter )
Date-content         = date-time
Date-header          = "Date" ":" SP Date-content
Distribution-content = distribution *( dist-delim distribution )
Distribution-header  = "Distribution" ":" SP Distribution-content
                             *( ";" extension-parameter )
Expires-content      = date-time
Expires-header       = "Expires" ":" SP Expires-content
                             *( ";" extension-parameter )
Followup-To-content  = Newsgroups-content /
                          [FWS] %x70.6F.73.74.65.72 [FWS]
                          ; which is a case-sensitive "poster"
Followup-To-header   = "Followup-To" ":" SP Followup-To-content
                             *( ";" extension-parameter )
From-content         = mailbox-list
From-header          = "From" ":" SP From-content
Injector-Info-content= [CFWS] path-identity [CFWS]
Injector-Info-header = "Injector-Info" ":" SP Injector-Info-content
                             *( ";" ( Injector-Info-parameter /
                                      extension-parameter ) )
Keywords-content     = phrase *( "," phrase )
Keywords-header      = "Keywords" ":" SP Keywords-content
Lines-content        = [CFWS] 1*DIGIT [CFWS]
Lines-header         = "Lines" ":" SP Lines-content
                             *( ";" extension-parameter )
Mail-Copies-To-header= "Mail-Copies-To" ":" SP Mail-Copies-To-content
Message-ID-content   = [FWS] msg-id [FWS]
                          News Article Format              February 2003

Message-ID-header    = "Message-ID" ":" SP Message-ID-content
Newsgroups-content   = [FWS] newsgroup-name
                             *( [FWS] ng-delim [FWS] newsgroup-name )
                             [FWS]
Newsgroups-header    = "Newsgroups"  ":" SP Newsgroups-content
                                  *( ";" extension-parameter )
Organization-content = unstructured
Organization-header  = "Organization" ":" SP Organization-content
Path-content         = [FWS] *( path-identity [FWS]
                                      path-delimiter [FWS]
                                 ) tail-entry [FWS]
Path-header          = "Path" ":" SP Path-content
                             *( ";" extension-parameter )
References-content   = [CFWS] msg-id *( CFWS msg-id ) [CFWS]
References-header    = "References" ":" SP References-content
Reply-To-content     = address-list
Reply-To-header      = "Reply-To" ":" SP Reply-To-content
Sender-content       = mailbox
Sender-header        = "Sender" ":" SP Sender-content
Subject-content      = [ [FWS] back-reference ] pure-subject
Subject-header       = "Subject" ":" SP Subject-content
Summary-content      = unstructured
Summary-header       = "Summary" ":" SP Summary-content
Supersedes-content   = [CFWS] msg-id [CFWS]
Supersedes-header    = "Supersedes" ":" SP Supersedes-content
User-Agent-content   = product *( CFWS product )
User-Agent-header    = "User-Agent" ":" SP User-Agent-content
                             *( ";" extension-parameter )
Xref-content         = [CFWS] server-name 1*( CFWS location ) [CFWS]
Xref-header          = "Xref" ":" SP Xref-content
                             *( ";" extension-parameter )

control-message      = <empty> /
                          Newgroup-message /
                          Rmgroup-message /
                          Mvgroup-message /
                          Checkgroup-message /
                          Cancel-message /
                          Ihave-message /
                          Sendme-message

Cancel-arguments     = CFWS msg-id [CFWS]
Cancel-message       = "cancel" Cancel-arguments
Checkgroup-arguments = [ chkscope ] [ chksernr ]
Checkgroup-message   = "checkgroups" Checkgroup-arguments
Ihave-arguments      = relayer-name
                          News Article Format              February 2003

Ihave-message        = "ihave" Ihave-arguments
Mvgroup-arguments    = CFWS newsgroup-name CFWS newsgroup-name
                             [ CFWS newgroup-flag ]
Mvgroup-message      = "mvgroup" Mvgroup-arguments
Newgroup-arguments   = CFWS newsgroup-name [ CFWS newgroup-flag ]
Newgroup-message     = "newgroup" Newgroup-arguments
Rmgroup-arguments    = CFWS newsgroup-name
Rmgroup-message      = "rmgroup" Rmgroup-arguments
Sendme-arguments     = Ihave-arguments
Sendme-message       = "sendme" Sendme-arguments

article-locator      = 1*( %x21-27 / %x29-3A / %x3C-7E )
                                  ; US-ASCII printable characters
                                  ; except'(' and ';'
article-size         = 1*DIGIT
back-reference       = %x52.65.3A.20
                                  ; which is a case-sensitive "Re: "
batch                = 1*( batch-header article )
batch-header         = "#!" SP rnews SP article-size CRLF
checkgroups-body     = *( valid-group CRLF )
chkscope             = 1*( CFWS ["!"] newsgroup-name )
chksernr             = CFWS "#" 1*DIGIT
combiner-ASCII       = DIGIT / ALPHA / "+" / "-" / "_"
combiner-base        = combiner-ASCII / combiner-extended
combiner-extended    = <any character with a Unicode code value of
                           0080 or greater but excluding any character
                           in Unicode categories Cc, Cf, Cs, M* and Z*>
combiner-mark        = <any character with a Unicode code value of
                           0080 or greater and in Unicode category M*>
component            = 1*component-grapheme
component-grapheme   = combiner-base *combiner-mark
copy-addr            = address-list
dist-delim           = ","
distribution         = [FWS] distribution-name [FWS]
distribution-name    = ALPHA 1*distribution-rest
distribution-rest    = ALPHA / "+" / "-" / "_"
groupinfo-body       = [ newsgroups-tag CRLF ]
                             newsgroups-line CRLF
host-value           = dot-atom /
                          [ dot-atom ":" ]
                            ( IPv4address / IPv6address )
                            ; see  [RFC 2373]
ihave-body           = *( msg-id CRLF )
location             = newsgroup-name ":" article-locator
moderation-flag      = %x28.4D.6F.64.65.72.61.74.65.64.29
                             ; case sensitive "(Moderated)"
newgroup-flag        = "moderated"
newsgroup-name       = component *( "." component )
newsgroups-line      = newsgroup-name
                             [ 1*HTAB newsgroup-description ]
                             [ 1*WSP moderation-flag ]
newsgroups-tag       = %x46.6F.72 SP %x79.6F.75.72 SP
                             %x6E.65.77.73.67.72.6F.75.70.73 SP
                             %x66.69.6C.65.3A
                             ; case sensitive
                             ; "For your newsgroups file:"
ng-delim             = ","
path-delimiter       = "/" / "?" / "%" / "," / "!"
path-identity        = ( ALPHA / DIGIT )
                             *( ALPHA / DIGIT / "-" / "." / ":" / "_" )
product              = [CFWS] token [CFWS] [ "/" product-version ]
product-version      = [CFWS] token [CFWS]
pure-subject         = unstructured
qspecial             = "(" / ")" /        ; same as specials except
                          "<" / ">" /        ; "\" and DQUOTE quoted
                          "[" / "]" /
                          ":" / ";" /
                          "@" / "\\" /
                          "," / "." /
                          "\" DQUOTE
relayer-name         = path-identity
rnews                = %x72.6E.65.77.73 ; case sensitive "rnews"
sender-value         = mailbox / "verified"
                          News Article Format              February 2003

sendme-body          = ihave-body
server-name          = path-identity
tail-entry           = path-identity
valid-group          = newsgroups-line

