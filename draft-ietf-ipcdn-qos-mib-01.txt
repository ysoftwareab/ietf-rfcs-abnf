IPCDN  Working Grop                                    Mike Patrick
<draft-ietf-ipcdn-qos-mib-01.txt>                      John Harvey
                                                       Motorola ING


               Data Over Cable System Quality of Service
              Management Information Base (DOCSIS-QOS MIB)

                             June 25, 1999






Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all the provisions of Section 10 of RFC2026.  Internet-Drafts are
   working documents of the Internet Engineering Task Force (IETF), its
   Areas, and its Working Groups.  Note that other groups may also
   distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as a "work in progress".

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.


   Copyright (c) The Internet Society 1998.  All Rights Reserved.

Abstract

   This document defines a basic set of managed objects for SNMP-based
   management of extended QOS features of Cable Modems (CMs) and Cable
   Modem Termination Systems (CMTSs) conforming to the Data over Cable
   System (DOCSIS) standard version 1.1.







Expires January 2000                                            [Page 1]









Table of Contents








                                   CONTENTS


   1.  Introduction........................................   3
       1.1  Management.....................................   3
       1.2  Glossary.......................................   5

   2.  Overview............................................   6
       2.1  Textual Conventions............................   7
       2.2  Structure......................................   7
       2.3  Externally Administered Classification.........  13

   3.  Definitions.........................................  16

   4.  References..........................................  40

   5.  Authors'............................................  43



Revision History


   Rev  Date               Description
   ---  --------           -----------
   -01  06/25/99           Complete rewrite based on -I01 draft
   -00  08/07/98           Initial draft posted for discussion.














Expires January 2000                                            [Page 2]









1.  IIIInnnnttttrrrroooodddduuuuccccttttiiiioooonnnn


This memo specifies a MIB module in a manner that is compliant to the
SNMP SMIv2[5][6][7].  The set of objects is consistent with the SNMP
framework and existing SNMP standards.

This memo is a product of the IPCDN working group within the Internet
Engineering Task Force.  Comments are solicited and should be addressed
to the working group's mailing list at ipcdn@terayon.com and/or the
author.


1.1  MMMMaaaannnnaaaaggggeeeemmmmeeeennnnttttFFFFrrrraaaammmmeeeewwwwoooorrrrkkkk


The SNMP Management Framework presently consists of five major
components:
































Expires January 2000                                            [Page 3]









    o   An overall architecture, described in RFC 2271 [1].

    o   Mechanisms for describing and naming objects and events for the
        purpose of management. The first version of this Structure of
        Management Information (SMI) is called SMIv1 and described in
        RFC 1155 [2], RFC 1212 [3] and RFC 1215 [4]. The second version,
        called SMIv2, is described in RFC 1902 [5], RFC 1903 [6] and RFC
        1904 [7].

    o   Message protocols for transferring management information. The
        first version of the SNMP message protocol is called SNMPv1 and
        described in RFC 1157 [8]. A second version of the SNMP message
        protocol, which is not an Internet standards track protocol, is
        called SNMPv2c and described in RFC 1901 [9] and RFC 1906 [10].
        The third version of the message protocol is called SNMPv3 and
        described in RFC 1906 [10], RFC 2272 [11] and RFC 2274 [12].

    o   Protocol operations for accessing management information. The
        first set of protocol operations and associated PDU formats is
        described in RFC 1157 [8]. A second set of protocol operations
        and associated PDU formats is described in RFC 1905 [13].

    o   A set of fundamental applications described in RFC 2273 [14] and
        the view-based access control mechanism described in RFC 2275
        [15].


Managed objects are accessed via a virtual information store, termed the
Management Information Base or MIB.  Objects in the MIB are defined
using the mechanisms defined in the SMI.

This memo specifies a MIB module that is compliant to the SMIv2. A MIB
conforming to the SMIv1 can be produced through the appropriate
translations. The resulting translated MIB must be semantically
equivalent, except where objects or events are omitted because no
translation is possible (use of Counter64). Some machine readable
information in SMIv2 will be converted into textual descriptions in
SMIv1 during the translation process. However, this loss of machine
readable information is not considered to change the semantics of the
MIB.










Expires January 2000                                            [Page 4]









1.2  GGGGlllloooossssssssaaaarrrryyyy


Active QPS  Active Qos Parameter Set.  The set of QOS parameters that
            describe the current level service provided to a Service Flow.

Active SF   Active Service Flow. An SF with a non-empty Active QPS.

Admitted    Admitted Qos Parameter Set. The set of QOS parameters that
QPS         describe a level of service which the Service Flow is
            not currently using, but which it is guaranteed to receive
            upon the SF's request to make the set Active.

Admitted    A Service Flow with a non-empty Admitted QPS.
SF

CATV        Cable TV

CM          Cable Modem, a modem connecting a subscriber's LAN
            the CATF RF network. DOCSIS CMs operate as a MAC layer
            bridge between the home LAN and the RF network.

CMTS        Cable Modem Termination System, the "head-end" device providing
            connectivity between the RF network and the Internet.

Downstream  The direction from the head end towards the subscriber.

DSA         Dynamic Service Addition, a DOCSIS MAC management message
            requesting the dynamic creation of a new Service Flow.
            New SFs are created with a three-message exchange of a
            DSA-REQ, DSA-RSP, and DSA-ACK.

DSC         Dynamic Service Change, a DOCSIS MAC management message
            requesting a change to the attributes of a Service Flow.
            SFs are changed with a three-message exchange of a DSC-REQ,
            DSC-RSP, and DSC-ACK.

DSD         Dynamic Service Delete, a DOCSIS MAC management message
            requesting the deletion of a Service Flow. SFs are deleted
            with a two-message exchange of a DSD-REQ and DSD-ACK.

Head-end    The origination point in most cable systems of the subsriber
            video signals. It is generally also the location of the CMTS.

NSI         Network System Interface, the LAN interface of a CMTS





Expires January 2000                                            [Page 5]









            to the rest of the Internet.

PHS         Payload Header Suppression, a feature of DOCSIS 1.1 in
            which header bytes that are common in a sequence of packets
            of a Service Flow are replaced by a one-byte PHSI Index (PHSI)
            when transmitting the packet on the RF network.

Provisioned A QOS Parameter Set describing an envelope of service within
QPS         which a Service Flow is authorized to request admission.
            All existing service flows must have a non-empty Provisioned
            QPS, hence all SFs are considered to be "Provisioned".

SCN         Service Class Name -- a named set of QOS parameters.  A Service
            Flow may or may not be associated with a single named Service
            Class.  A Service Class has as an attribute a Qos Parameter
            Set that is used as the default set of values for all
            Service Flows belonging to the Service Class.

SID         Service ID. A 16-bit integer assigned by the CMTS for an
            Upstream Service Flow with a non-empty Active QOS Parameter
            Set.

SF          Service Flow. A unidirectional stream of packets between the
            CM and CMTS. SFs are characterized as upstream or downstream.
            The SF is the fundamental unit of service provided on a
            DOCSIS CATV network.

SFID        Service Flow ID.  A 32-bit unsigned integer assigned by the
            CMTS to each Service Flows

Upstream    The direction from a subscriber CM to the head-end CMTS.





2.  OOOOvvvveeeerrrrvvvviiiieeeewwww


This MIB provides a set of objects required for the management of DOCSIS
1.1 compliant Cable Modems (CM) and Cable Modem Termination Systems
(CMTS).  The specification is derived from the DOCSIS 1.1 Radio
Frequency Interface specification [16].   Please note that the DOCSIS
standard only requires Cable Modems to implement SNMPv1 and to process
IPv4 customer traffic. Design choices in this MIB reflect those





Expires January 2000                                            [Page 6]









requirements.  Future versions of the DOCSIS standard are expected to
require support for SNMPv3 and IPv6 as well.

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this
document are to be interpreted as described in [19].


2.1  TTTTeeeexxxxttttuuuuaaaallll CCCCoooonnnnvvvveeeennnnttttiiiioooonnnnssss


The textual convention "IfDirection" is defined to indicate the
direction of a packet classifier relative to an interface. It takes the
values of either inbound(1) or outbound(2).

The textual convention "BitRate" corresponds to the bits per second as
defined for QOS Parameter Sets in DOCSIS1.1. This definition includes
all bits of the Ethernet MAC frame as transmitted on the RF network,
starting with the Destination Address and ending with the Ethernet FCS.
It does NOT includes bits in the DOCSIS MAC header.





2.2  SSSSttttrrrruuuuccccttttuuuurrrreeee

The structure of the MIB is summarized below:






















Expires January 2000                                            [Page 7]









docsQosMIB
  docsQosMIBObjects
    docsQosPktClassTable
      docsQosPktClassEntry
        docsQosPktClassid
        docsQosPktClassId
        docsQosPktClassDirection
        docsQosPktClassPriority
        docsQosPktClassIpTosLow
        docsQosPktClassIpTosHigh
        docsQosPktClassIpTosMask
        docsQosPktClassIpProtocol
        docsQosPktClassIpSourceAddr
        docsQosPktClassIpSourceMask
        docsQosPktClassIpDestAddr
        docsQosPktClassIpDestMask
        docsQosPktClassSourcePortStart
        docsQosPktClassSourcePortEnd
        docsQosPktClassDestPortStart
        docsQosPktClassDestPortEnd
        docsQosPktClassDestMacAddr
        docsQosPktClassDestMacMask
        docsQosPktClassSourceMacAddr
        docsQosPktClassEnetProtocolType
        docsQosPktClassEnetProtocol
        docsQosPktClassUserPriLow
        docsQosPktClassUserPriHigh
        docsQosPktClassVlanId
    docsQosParamSetTable
      docsQosParamSetEntry
        docsQosParamSetType
        docsQosParamSetIndex
        docsQosParamSetRowStatus
        docsQosServiceClassName
        docsQosParamSetPriority
        docsQosParamSetMaxTrafficRate
        docsQosParamSetMaxTrafficBurst
        docsQosParamSetMinReservedRate
        docsQosParamSetMinReservedPkt
        docsQosParamSetActiveTimeout
        docsQosParamSetAdmittedTimeout
        docsQosParamSetMaxConcatBurst
        docsQosParamSetServiceFlowType
        docsQosParamSetRequestPolicy
        docsQosParamSetNomPollInterval





Expires January 2000                                            [Page 8]









        docsQosParamSetTolPollJitter
        docsQosParamSetUnsolicitGrantSize
        docsQosParamSetNomGrantInterval
        docsQosParamSetTolGrantJitter
        docsQosParamSetGrantsPerInterval
        docsQosParamSetTosAndMask
        docsQosParamSetTosOrMask
        docsQosParamSetMinPhsSize
        docsQosParamSetMaxLatency
    docsQosServiceFlowTable
      docsQosServiceFlowEntry
        docsQosServiceFlowId
        docsQosServiceFlowProvisionedParamSetIndex
        docsQosServiceFlowAdmittedParamSetIndex
        docsQosServiceFlowActiveParamSetIndex
        docsQosServiceFlowSID
    docsQosServiceClassTable
      docsQosServiceClassEntry
        docsQosServiceClassName
        docsQosServiceClassParamSetIndex
        docsQosServiceClassStatus
    docsQosServiceClassPolicyTable
      docsQosServiceClassPolicyEntry
        docsQosServiceClassPolicyIndex
        docsQosServiceClassPolicyName
        docsQosServiceClassPolicyRulePriority
        docsQosServiceClassPolicyStatus
    docsQosPHSTable
      docsQosPHSEntry
        docsQosPHSIndex
        docsQosPHSField
        docsQosPHSMask
        docsQosPHSSize
        docsQosPHSVerify




2.2.1  _d_o_c_s_Q_o_s_P_k_t_C_l_a_s_s_T_a_b_l_e   The docsQosPktClassTable reports the
Service Flow Classifiers implemented by the managed device. The table is
indexed by the tuple {ifIndex, docsQosServiceFlowId, docsQosPktClassId}.
The ifIndex corresponds to an CATV MAC interface.  Each CATV MAC
interfaces has a set of Service Flows, identified with a
docsQosServiceFlowId value that is unique for that interface. Each
service flow may have a number of packet classifiers that map packets to





Expires January 2000                                            [Page 9]









the flow. The ClassifierId for the classifier is unique only within a
particular service flow.

The semantics of packet classification are provided in [16]. Briefly,
the DOCSIS MAC interface calls for matching packets based on values
within the 802.2 (LLC), 802.3, IP, and/or  UDP/TCP headers.  Packets
which map more than one classifier are prioritized according to their
docsQosPktClassPriority value. The docsQosServiceFlowId (an index
object) indicates to which service flow the packet is classified.

The docsQosPktClassTable is distinct from the docsDevIpFilterTable of
[21] in that docsQosPktClassTable is intended only to reflect the state
of the "internal" (to DOCSIS) Service Flow Classifiers. SF Classifiers
may be created only via a DOCSIS CM configuration file or from the
Dynamic Service Addition/Creation (DSA/DSC) messages.  For this reason,
docsQosPktClassTable is read-only.  The docsDevIpFilterTable is intended
for "external" classification of packets for QOS purposes.  See
"Externally Administered Classification", below.


2.2.2  _d_o_c_s_Q_o_s_P_a_r_a_m_S_e_t_T_a_b_l_e   DOCSIS defines the concept of a "set" of
QOS parameters. Each service flow has associated with it three different
QOS parameter sets, depicted below:



                      +---------------------+
                      | Provisioned         |
                      |                     |
                      |  +---------------+  |
                      |  |  Admitted     |  |
                      |  |               |  |
                      |  |  +---------+  |  |
                      |  |  |  Active |  |  |
                      |  |  |         |  |  |
                      |  |  +---------+  |  |
                      |  |               |  |
                      |  +---------------+  |
                      |                     |
                      +---------------------+

                    Figure 1: Qos Parameter Sets








Expires January 2000                                           [Page 10]









Each Qos Parameter Set (QPS) defines an envelope of data communication
services.  The Provisioned QPS describes the maximum service envelope
for which the SF is authorized. The Admitted QPS is the set of services
for which a service flow has requested admission to the DOCSIS RF
network, but which is not yet active. The Admitted QPS is used during
the two-phase process of IP Telephony service flow admission to admit
the bandwidth for a bidirectional voice call when the far end is
ringing.  Since ringing may occur for up to four minutes, this permits
the bandwidth to be reserved but not actually consumed during this
interval.  The Active QPS is the set of services actually being used by
the Service Flow. The DOCSIS v1.1 specification [16] defines what it
means for a QPS envelope to be "within" another.

In addition to their use as attributes of a Service Flow, a QPS is also
an attribute of a Service Class.  A DOCSIS CM configuration file or DSA
message may request the creation of a new SF and give only the Service
Class Name. The CMTS "expands the macro" of a Service Class Name
creation by populating the Provisioned, Admitted, and/or Active QPSs of
the Service Flow with the QPS of the Service Class Name. All of the
QPSs of a Service Flow be expansions of the same Service Class, and in
this case the SF is said to "belong" to the Service Class.  Changing the
contents of a Service Class'es QPS does not affect the QPS of any
Service Flow earlier expanded from that Service Class name. Only the
CMTS implements docsQosServiceClassTable and docQosQosParamSetEntry's
for Service Classes; the CM does not.

See [16] section 8 for a full description and the theory of operation of
Docsis 1.1 QOS operation.

The docsQosParamSetTable of this MIB deprecates the
docsIfQosProfileTable of [22].  A DOCSIS 1.1 compliant CMTS implements
upstream and downstream Service Flows per DOCSIS 1.1 even for DOCSIS 1.0
modems.  The DOCSIS 1.1 QOS Parameter Set is a superset of the
parameters provided in docsIfQosProfileTable.

The docsQosParamSetTable sets are indexed by {docsQosParamSetType,
docsQosParamSetIndex}.  The docsQosParamSetType value indicates whether
the QPS belongs to a Service Flow or a Service Class.  The
docsQosParamSetIndex is a device-local small integer that is unique
within its docsQosParamSetType.

Only Service Class QPS rows may be created externally; the Service Flow
QPS rows are created internally via DOCSIS mechanisms and are read-only
to external SNMP applications.






Expires January 2000                                           [Page 11]









Because each Service Flow is semantically considered to have separate
QPSs, the managed device MUST NOT permit there to be more than one
reference to a particular docsQosParamSetIndex. For example, even though
the Provisioned, Admitted, and Active QPSs of a service flow may have
exactly the same values, the must appear in the MIB to have separate QPS
rows. Of course, implementations may only implement a single copy of the
QPS values in this case.

[Issue: This means a CMTS will need 24,000 QPS rows to show the QPSs for
8000 SFs. Should we adopt the same mechanism of docsQosProfileTable,
permitting multiple references to the same (read-only) QPS rows?]


2.2.3  _d_o_c_s_Q_o_s_S_e_r_v_i_c_e_F_l_o_w_T_a_b_l_e   The docsQosServiceFlowTable describes
each service flow known by the device (CM or CMTS).  It is indexed by
the combination of { ifIndex, dosQosServiceFlowId }, where ifIndex
corresponds to a CATV MAC interface and docsQosServiceFlowId is the 32-
bit integer assigned by the CMTS controlling the MAC domain.  A CM
typically has only a single CATV MAC interface, while a CMTS may have
several. See  [22] for a description of the ifIndex numbering for DOCSIS
devices.


2.2.4  _d_o_c_s_Q_o_s_S_e_r_v_i_c_e_C_l_a_s_s_T_a_b_l_e   This table defines the Service Class
Name and references a Qos Parameter Set for each Service Class defined
in a CMTS.  It is indexed by the Service Class Name string itself.  The
table is read-create on a CMTS, and is not implemented in a CM.


2.2.5  _d_o_c_s_Q_o_s_S_e_r_v_i_c_e_C_l_a_s_s_P_o_l_i_c_y_T_a_b_l_e   This table  provides rows that
can be referenced by the docsDevFilterPolicyTable of [21] in order to
have a "policy" that classifies packets to a named Service Class. This
is one mechanism by which "external" entities (like an SNMP manager) may
control the classification of packet for QOS purposes. Entries are
indexed by a small integer docsQosServiceClassPolicyIndex.  They provide
a Service Class Name and a Rule Priority.  A policy referencing a row of
this table intends the packet to be forwarded on a Service Flow
"belonging" to the named Service Class.

See the section "Externally Administered Classification", below.


This table is implemented on both the CM and CMTS, and is read-create on
both.






Expires January 2000                                           [Page 12]









2.2.6  _d_o_c_s_Q_o_s_P_H_S_T_a_b_l_e   The Payload Header Suppression (PHS) feature of
DOCSIS 1.1 permits packets to replace the unchanging bytes of the
Ethernet, IP, and UDP headers with a one-byte index when transmitting on
the cable network.  This is especially useful for IP Telephony packets,
where such suppression can result in almost twice the number of calls
supported within the same upstream channel.

Each entry of the table corresponds to a PHS Rule as described in
section 8.4 of [16].  The rules are identified by an 8-bit PHS Index,
which is unique per Service Flow.  The table therefore indexed by the
tuple {docsQosServiceFlowId, docsQosPHSIndex}.

This table is read-only, and MUST be implemented on both the CM and CMTS
when PHS is supported.


2.3  EEEExxxxtttteeeerrrrnnnnaaaallllllllyyyy AAAAddddmmmmiiiinnnniiiisssstttteeeerrrreeeedddd CCCCllllaaaassssssssiiiiffffiiiiccccaaaattttiiiioooonnnn


Docsis 1.1 provides rich semantics for the classification of packets to
service flows with it Service Flow Classifier table. Service Flow
Classifiers may be created statically in the DOCSIS CM configuration
file, or may be created dynamically with Dynamic Service Addition (DSA)
and Dynamic Service Change (DSC) DOCSIS MAC messages.

Several major issues arose with the concept of externally administered
classification, i.e. should an external SNMP manager be permitted to
create classification rows? One problem was the co-ordination of
classifier IDs, since such an approach would require either separate
classifier ID number spaces or objects to co-ordinate both internal and
external classifier ID assignments.  A more serious problem, however,
was the requirement that external creation of SF Classifiers would
require "knowledge" of the individual Service Flow ID for service flows
by external applications.  It was strongly felt by the committee that
SFIDs should remain an internal Docsis object, and not be transmitted as
part of protocol flows, e.g. for IP packet telephony signalling.  Docsis
1.1 introduced the concept of named Service Classes for ease of
administration within a domain of CMs and CMTSs.  What was desired was
to permit external classification of packets to a Service Class, not a
particular Service Flow.

The DOCSIS committee therefore decided to use the already-defined IP
Packet Filter Table [21] for the external classification of packets for
QOS purposes.  The docsDevIpPacketFilterTable defines similar packet
matching criteria as docsQosPktClassTable, but it matches a packet to an





Expires January 2000                                           [Page 13]









arbitrary "policy set" instead of a particular Service Flow. One of the
policies in the policy set then selects the Service Class of the SF on
which to forward the packet.  The docsQosServiceClassPolicyTable of this
MIB defines the Service Class Name to which a packet is classified.

The interaction of external and internal packet classification is
depicted in Figure 2, below.


            |
            |  Outbound Pkt
            V
        docsDevIpFilterTable------> docsDevFilterPolicyTable
            |                                |
            |                                V
            |                      docsQosServiceClassPolicyTable
            |                                |
            | Pkt                            | ServiceClassName,
            |                                | ServiceClassPolicyRulePriority
            V                                V
   +--------------------------------------------------------+
   |        |   DOCSIS MAC LAYER ENTITY      |              |
   |        |                                | Select any   |
   |        V                                | SFID Y in SCN|
   |    docsQosPktClassTable <---------------|              |
   |        |                                |              |
   |        | docsQosPktClassPriority,       |              |
   |        | SFID X                         |              |
   |        V                                V              |
   |      ----------------------------------------+         |
   |      | Select the SFID associated with the   |         |
   |      | higher of docsQosPktClassPriority or  |         |
   |      | docsQosServiceClassPolicyRulePriority |         |
   |      +---------------------------------------+         |
   |                             |                          |
   |                             V                          |
   |           |    |          |    |                       |
   |           |    |    ...   |    |  Service Flows        |
   |           +----+          +----+                       |
   |           SFID X          SFID Y                       |
   +--------------------------------------------------------+

        Figure 2: Docsis Packet Classification

The processing of an outgoing packet proceeds as follows:





Expires January 2000                                           [Page 14]









  1.  The packet is first checked for matches with rows of the
      docsDevIpFilterTable. If it matches, the matching row provides a
      docsDevFilterPolicyId integer.

  2.  The docsDevFilterPolicyId indexes into one (or more) rows of
      docsDevFilterPolicyTable. Each row provides an arbitrary
      RowPointer (docsDevFilterPolicyPtr), corresponding to a policy to
      be applied to the packet.

  3.  This MIB defines a docsQosServiceClassPolicyTable whose entries
      may be pointed to by docsDevFilterPolicyPtr in order to
      administratively classify packets to a named DOCSIS Service Class.
      The docsQosServiceClassPolicyEntry provides a Service Class Name
      (SCN) as docsQosServiceClassPolicyName and a classification rule
      priority as docsQosServiceClassPolicyRulePriority. These are
      submitted to the device's Docsis MAC Layer entity as a special
      form of the MAC_DATA.request primitive, as described in Section
      E.2.1 of [16].

  4.  The MAC Layer selects an SFID ("Y") of an active Service Flow
      belonging to the named class, choosing an SF arbitrarily if there
      is more than one.

  5.  The packet is then classified according to the
      docsQosPktClassTable, which may classify the packet to a different
      SFID "X".  Associated with the classifier is a
      docsQosPktClassPriority.

  6.  In the event of a conflict between the SCN-determined SFID and the
      classified SFID, the greater of docsQosPktClassPriority and
      docsQosServiceClassPolicyRulePriority determines which SFID is
      selected to forward the packet.

A packet which does not match a docsQosServiceClassPolicyEntry is
directly submitted to the Docsis MAC layer, where the
docsQosPktClassTable selects the SID on which it is to be forwarded.

By convention (in [16]), the "internal" docsQosPktClassPriority values
should be in the range of 64-191, while the "external" priorities may be
either in the range 192-255 to override the internal classification or
the range 0-63 to be overriden by internal classification.

This classification mechanism applies both upstream from the CM and
downstream from the CMTS.






Expires January 2000                                           [Page 15]









3.  DDDDeeeeffffiiiinnnniiiittttiiiioooonnnnssss



-- -- Docsis QOS Extensions MIB --

DOCS-QOS-MIB  DEFINITIONS ::= BEGIN

IMPORTS
        MODULE-IDENTITY, OBJECT-TYPE,
        Integer32, Counter32,

        IpAddress, Unsigned32            FROM SNMPv2-SMI
        TEXTUAL-CONVENTION, MacAddress,
        RowStatus, TruthValue,
        DisplayString                    FROM SNMPv2-TC
        OBJECT-GROUP, MODULE-COMPLIANCE  FROM SNMPv2-CONF
        ifIndex                          FROM IF-MIB
        docsIfMib                        FROM DOCS-IF-MIB;

docsQosMIB   MODULE-IDENTITY
        LAST-UPDATED    "9906251527Z" -- June 25, 1999
        ORGANIZATION    "IETF IPCDN Working Group"
        CONTACT-INFO
            "              Co-Author: Michael Patrick
             Postal:    Motorola ISG
                        20 Cabot Blvd, MS M4-30
                        Mansfield, MA 02048-1193
                        U.S.A.
             Phone:     +1 508 261 5707
             E-mail:    lzz007@email.mot.com

             Co-Author: John Harvey
             Postal:    Motorola ING
                        20 Cabot Blvd, MS M4-25
                        Mansfield, MA 02048-1193
                        U.S.A.
             Phone:     +1-508-261-4579
             E-mail:    ljh031@dma.isg.mot.com"
        DESCRIPTION
            "This is the management information for
             Quality Of Service (QOS) for DOCSIS 1.1."
        ::= { docsIfMib 6 }                -- BPI mib was docsIfMIb 5

docsQosMIBObjects  OBJECT IDENTIFIER ::= { docsQosMIB 1 }





Expires January 2000                                           [Page 16]









-- Textual Conventions
        IfDirection ::=  TEXTUAL-CONVENTION
        STATUS          current
        DESCRIPTION
        "Indicates a directionality on an interface, relative to the
        managed device."
        SYNTAX  INTEGER  {
                inbound(1),
                outbound(2)
        }

        BitRate ::= TEXTUAL-CONVENTION
        DISPLAY-HINT  "d"
        STATUS         current
        DESCRIPTION   "The rate of traffic in unit of bits per second.
                       Used to specify traffic rate for QOS."
        SYNTAX         Unsigned32


-- -- Packet Classifier Table -- docsQosPktClassTable OBJECT-TYPE
        SYNTAX          SEQUENCE OF DocsQosPktClassEntry
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION    "This table describes the packet classification
                        configured on the CM or CMTS.
                        The model is that a packet either received
                        as input from an interface or transmittted
                        for output on an interface may be compared
                        against an ordered list of rules pertaining to
                        the packet contents. Each rule is a row of this
                        table. A matching rule provides a service flow
                        id to to which the packet is classified."
        ::= { docsQosMIBObjects 1 }


docsQosPktClassEntry OBJECT-TYPE
        SYNTAX          DocsQosPktClassEntry
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION     "An entry in this table provides a single packet
                         classifier rule. The index ifIndex is an ifType
                         of docsCableMaclayer(127)."
        INDEX {                 ifIndex,
                docsQosServiceFlowId,
                docsQosPktClassId





Expires January 2000                                           [Page 17]









              }
        ::= { docsQosPktClassTable 1 }


DocsQosPktClassEntry ::= SEQUENCE {
        docsQosPktClassId               Integer32,
        docsQosPktClassDirection        IfDirection,
        docsQosPktClassPriority         Integer32,
        docsQosPktClassIpTosLow         OCTET STRING,
        docsQosPktClassIpTosHigh        OCTET STRING,
        docsQosPktClassIpTosMask        OCTET STRING,
        docsQosPktClassIpProtocol       Integer32,
        docsQosPktClassIpSourceAddr     IpAddress,
        docsQosPktClassIpSourceMask     IpAddress,
        docsQosPktClassIpDestAddr       IpAddress,
        docsQosPktClassIpDestMask       IpAddress,
        docsQosPktClassSourcePortStart  Integer32,
        docsQosPktClassSourcePortEnd    Integer32,
        docsQosPktClassDestPortStart    Integer32,
        docsQosPktClassDestPortEnd      Integer32,
        docsQosPktClassDestMacAddr      MacAddress,
        docsQosPktClassDestMacMask      MacAddress,
        docsQosPktClassSourceMacAddr    MacAddress,
        docsQosPktClassEnetProtocolType INTEGER,
        docsQosPktClassEnetProtocol     Integer32,
        docsQosPktClassUserPriLow       Integer32,
        docsQosPktClassUserPriHigh      Integer32,
        docsQosPktClassVlanId           Integer32
      }

docsQosPktClassId       OBJECT-TYPE
        SYNTAX          Integer32 (1..65535)
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION     "Index assigned to packet classifier entry by
                         the CMTS which is unique per serivce flow."
        REFERENCE       "SP-RFIv1.1-I01-990311, Appendix C.2.1.3.2"
        ::= { docsQosPktClassEntry 1 }

docsQosPktClassDirection OBJECT-TYPE
        SYNTAX          IfDirection
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION
        "Indicates the direction inBound(1) or outBound(2) to which the





Expires January 2000                                           [Page 18]









         rule for this row applies"
        ::= { docsQosPktClassEntry 2 }

docsQosPktClassPriority OBJECT-TYPE
        SYNTAX          Integer32 (0..255)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION     "The value specificies the order of evaluation
                         of the classifiers.
                         The higher the value the higher the priority."
        REFERENCE       "SP-RFIv1.1-I01-990311, Appendix C.2.1.3.5"
        ::= { docsQosPktClassEntry 3 }

docsQosPktClassIpTosLow OBJECT-TYPE
        SYNTAX          OCTET STRING (SIZE(1))
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION     "The low value of a range of TOS byte values."
        REFERENCE       "SP-RFIv1.1-I01-990311, Appendix C.2.1.5.1"
        ::= { docsQosPktClassEntry 4 }

docsQosPktClassIpTosHigh OBJECT-TYPE
        SYNTAX          OCTET STRING (SIZE(1))
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION     "The 8-bit high value of a range of TOS byte
                         values."
        REFERENCE       "SP-RFIv1.1-I01-990311, Appendix C.2.1.5.1"
        ::= { docsQosPktClassEntry 5 }

docsQosPktClassIpTosMask OBJECT-TYPE
        SYNTAX          OCTET STRING (SIZE(1))
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION     "The mask value is bitwise ANDed with TOS byte
                         in ip packet and this value is used check for
                         the range checking of TosLow and TosHigh."
        REFERENCE       "SP-RFIv1.1-I01-990311, Appendix C.2.1.5.1"
        ::= { docsQosPktClassEntry 6 }

docsQosPktClassIpProtocol OBJECT-TYPE
        SYNTAX          Integer32 (0..257)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "This object indicates the value of the IP





Expires January 2000                                           [Page 19]









                        Protocol field required for IP packets to match
                        this rule. The value 256 matches traffic with
                        any IP Protocol value.
                        The value 257 by convention matches both TCP
                        and UDP. A value greater than 257 matches no
                        IP Protocol values."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.1.5.2"
        ::= { docsQosPktClassEntry 7 }

docsQosPktClassIpSourceAddr OBJECT-TYPE
        SYNTAX          IpAddress
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION     "This object specifies the value of the IP
                         Source Address required for packets to match
                         this rule. An IP packet matches the rule when
                         the packet ip source address bitwise ANDed
                         with the docsQosPktClassIpSourceMask value
                         equals the docsQosPktClassIpSourceAddr value."
        REFERENCE       "SP-RFIv1.1-I01-990311, Appendix C.2.1.5.3"
        ::= { docsQosPktClassEntry 8 }

docsQosPktClassIpSourceMask OBJECT-TYPE
        SYNTAX          IpAddress
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "This object specifies which bits of a packet's
                        IP Source Address that are compared to match
                        this rule.
                        An IP packet matches the rule when the packet
                        source address bitwise ANDed with the
                        docsQosPktClassIpSourceMask value equals the
                        docsQosIpPktClassSourceAddr value."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.1.5.4"
        ::= { docsQosPktClassEntry 9 }


docsQosPktClassIpDestAddr OBJECT-TYPE
        SYNTAX          IpAddress
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION     "This object specifies the value of the IP
                         Destination Address required for packets to
                         match this rule. An IP packet matches the rule
                         when the packet IP destination address





Expires January 2000                                           [Page 20]









                         bitwise ANDed with the
                         docsQosPktClassIpDestMask value equals the
                         docsQosPktClassIpDestAddr value."
        REFERENCE       "SP-RFIv1.1-I01-990311, Appendix C.2.1.5.5"
        ::= { docsQosPktClassEntry 10 }

docsQosPktClassIpDestMask OBJECT-TYPE
        SYNTAX          IpAddress
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "This object specifies which bits of a packet's
                        IP Destination Address that are compared to
                        match this rule.
                        An IP packet matches the rule when the packet
                        destination address bitwise ANDed with the
                        docsQosPktClassIpDestMask value equals the
                        docsQosPktClassIpDestAddr value."
        REFERENCE        "SP-RFIv1.1-I01-990311, Appendix C.2.1.5.6"
        ::= { docsQosPktClassEntry 11}

docsQosPktClassSourcePortStart OBJECT-TYPE
        SYNTAX          Integer32 (0..65535)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION     "This object specifies the low end inclusive
                         range of TCP/UDP source port numbers to which
                         a packet is compared."
        REFERENCE        "SP-RFIv1.1-I01-990311, Appendix C.2.1.5.7"
        ::= { docsQosPktClassEntry 12 }

docsQosPktClassSourcePortEnd OBJECT-TYPE
        SYNTAX          Integer32 (0..65535)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION     "This object specifies the high end inclusive
                         range of TCP/UDP source port numbers to which
                         a packet is compared."
        REFERENCE        "SP-RFIv1.1-I01-990311, Appendix C.2.1.5.8"
        ::= { docsQosPktClassEntry 13 }

docsQosPktClassDestPortStart OBJECT-TYPE
        SYNTAX          Integer32 (0..65535)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION     "This object specifies the low end inclusive





Expires January 2000                                           [Page 21]









                         range of TCP/UDP destination port numbers to
                         which a packet is compared."
        REFERENCE        "SP-RFIv1.1-I01-990311, Appendix C.2.1.5.9"
        ::= { docsQosPktClassEntry 14 }

docsQosPktClassDestPortEnd OBJECT-TYPE
        SYNTAX          Integer32 (0..65535)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "This object specifies the high end inclusive
                        range of TCP/UDP source port numbers to which
                        a packet is compared."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.1.5.10"
        ::= { docsQosPktClassEntry 15 }

docsQosPktClassDestMacAddr OBJECT-TYPE
        SYNTAX          MacAddress
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "An Ethernet packet matches an entry when its
                        destination MAC address bitwise ANDed with
                        docsQosPktClassDestMacMask equals the value of
                        docsQosPktClassDestMacAddr."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.1.6.1"
        ::= { docsQosPktClassEntry 16 }

docsQosPktClassDestMacMask OBJECT-TYPE
        SYNTAX          MacAddress
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "An Ethernet packet matches an entry when its
                        destination MAC address bitwise ANDed with
                        docsQosPktClassDestMacMask equals the value of
                        docsQosPktClassDestMacAddr."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.1.6.1"
        ::= { docsQosPktClassEntry 17 }

docsQosPktClassSourceMacAddr OBJECT-TYPE
        SYNTAX          MacAddress
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "An Ethernet packet matches this entry when its
                        source MAC address equals the value of
                        this object."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.1.6.2"





Expires January 2000                                           [Page 22]









        ::= { docsQosPktClassEntry 18 }

docsQosPktClassEnetProtocolType OBJECT-TYPE
        SYNTAX          INTEGER {
                          none(0),
                          ethertype(1),
                          dsap(2)
                        }
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "This object indicates the format of the layer 3
                        protocol id in the Ethernet packet. A value of
                        none(0) means that the rule does not use the
                        layer 3 protocol type as a matching criteria.

                        A value of ethertype(1) means that the rule
                        applies only to frames which contains an
                        EtherType value. Ethertype values are contained
                        in packets using the Dec-Intel-Xerox (DIX)
                        encapsulation or the RFC1042 Sub-Network Access
                        Protocol (SNAP) encapsulation formats.

                        A value of dsap(2) means that the rule applies
                        only to frames using the IEEE802.3
                        encapsulation format with a Destination Service
                        Access Point (DSAP) other
                        than 0xAA (which is reserved for SNAP).

                        If the Ethernet frame contains an 802.1P/Q Tag
                        header (i.e. EtherType 0x8100), this object
                        applies to the embedded EtherType field within
                        the 802.1P/Q header."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.1.6.3"
        ::= { docsQosPktClassEntry 19 }


docsQosPktClassEnetProtocol OBJECT-TYPE
        SYNTAX          Integer32 (0..65535)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION
        "If docsQosEthPktClassProtocolType is none(0), this object is
        ignored when considering whether a packet matches the current
        rule.
        If dosQosEthPktClassEncap is ethertype(1), this object gives the





Expires January 2000                                           [Page 23]









        16-bit value of the EtherType that the packet must match in
        order to match the rule.
        If docsQosEthPktClassEncap is dsap(2), the lower 8 bits of this
        object's value must match the DSAP byte of the packet in order
        to match the rule.

        If the Ethernet frame contains an 802.1P/Q Tag header (i.e.
        EtherType 0x8100), this object applies to the embedded EtherType
        field within the 802.1P/Q header."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.1.6.3""
        ::= { docsQosPktClassEntry 20 }


docsQosPktClassUserPriLow OBJECT-TYPE
        SYNTAX          Integer32 (0..7)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "This object applies only to Ethernet frames
                        using the 802.1P/Q tag header (indicated with
                        EtherType 0x8100). Such frames include a 16-bit
                        Tag that contains a 3 bit Priority field and
                        a 12 bit VLAN number.

                        Tagged Ethernet packets must have a 3-bit
                        Priority field within the range of
                        docsQosPktClassPriLow and
                        docsQosPktClassPriHigh in order to match this
                        rule."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.1.7.1"
        ::= { docsQosPktClassEntry 21 }

docsQosPktClassUserPriHigh OBJECT-TYPE
        SYNTAX          Integer32 (0..7)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "This object applies only to Ethernet frames
                        using the 802.1P/Qtag header (indicated with
                        EtherType 0x8100). Such frames include a 16-bit
                        Tag that contains a 3 bit Priority field and
                        a 12 bit VLAN number.

                        Tagged Ethernet packets must have a 3-bit
                        Priority field within the range of
                        docsQosPktClassPriLow and
                        docsQosPktClassPriHigh in order to match this





Expires January 2000                                           [Page 24]









                        rule."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.1.7.1"
        ::= { docsQosPktClassEntry 22 }

docsQosPktClassVlanId OBJECT-TYPE
        SYNTAX          Integer32 (0..4095)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "This object applies only to Ethernet frames
                        using the 802.1P/Q tag header.

                        If this object's value is nonzero, tagged
                        packets must have a VLAN Identifier that matches
                        the value in order to match the rule.
                        If this object's value is zero, it matches
                         *any* VLAN Identifier of a tagged packet."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.1.7.2"
        ::= { docsQosPktClassEntry 23 }

-- -- Qos Parameter Set Table -- docsQosParamSetTable OBJECT-TYPE
        SYNTAX          SEQUENCE OF DocsQosParamSetEntry
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION    "This table describes the set of DOCSIS QoS
                        parameters defined in a  managed device.
                        Each entry in this table is used to define one
                        Qos Parameter Set.

                        Only rows of serviceClass type are read-create.
                        The serviceFlow type rows are read-only."
        ::= { docsQosMIBObjects 2 }

docsQosParamSetEntry OBJECT-TYPE
        SYNTAX          DocsQosParamSetEntry
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION
        "A unique set of Qos parameters."
        INDEX {
                docsQosParamSetType,
                docsQosParamSetIndex
              }
        ::= { docsQosParamSetTable 1 }

DocsQosParamSetEntry ::= SEQUENCE {         docsQosParamSetType





Expires January 2000                                           [Page 25]









INTEGER,
        docsQosParamSetIndex              Unsigned32,
        docsQosParamSetRowStatus          RowStatus,
        docsQosServiceClassName           DisplayString,
        docsQosParamSetPriority           Integer32,
        docsQosParamSetMaxTrafficRate     BitRate,
        docsQosParamSetMaxTrafficBurst    Unsigned32,
        docsQosParamSetMinReservedRate    BitRate,
        docsQosParamSetMinReservedPkt     Integer32,
        docsQosParamSetActiveTimeout      Integer32,
        docsQosParamSetAdmittedTimeout    Integer32,
        docsQosParamSetMaxConcatBurst     Integer32,
        docsQosParamSetServiceFlowType    INTEGER,
        docsQosParamSetRequestPolicy      BITS,
        docsQosParamSetNomPollInterval    Unsigned32,
        docsQosParamSetTolPollJitter      Unsigned32,
        docsQosParamSetUnsolicitGrantSize Integer32,
        docsQosParamSetNomGrantInterval   Unsigned32,
        docsQosParamSetTolGrantJitter     Unsigned32,
        docsQosParamSetGrantsPerInterval  Integer32,
        docsQosParamSetTosAndMask         OCTET STRING,
        docsQosParamSetTosOrMask          OCTET STRING,
        docsQosParamSetMinPhsSize         Integer32,
        docsQosParamSetMaxLatency         Unsigned32
        }

docsQosParamSetType     OBJECT-TYPE
        SYNTAX          INTEGER {                            serviceFlow
(1),                            serviceClass (2)
                        }
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION     "Defines the type of parameter set.

                         A serviceFlow(1) type is used to define a
                         parameter set associated with a service flow
                         and are read-only entries in this table. The
                         entries are added and deleted by the device.

                         A serviceClass(2) type is used to define a
                         parameter set associated with a service class
                         name and are read-create entries in this
                         table."
        ::= { docsQosParamSetEntry 1 }






Expires January 2000                                           [Page 26]









docsQosParamSetIndex    OBJECT-TYPE
        SYNTAX          Unsigned32 (1..4294967295)
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION     "Unique index for a QOS parameter set for each
                         docsQosParamSetType."
        ::= { docsQosParamSetEntry 2 }

docsQosParamSetRowStatus OBJECT-TYPE
        SYNTAX          RowStatus
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Used to control creation and deletion of
                        rows of only type serviceClass(2)."
        ::= { docsQosParamSetEntry 3 }

docsQosParamSetServiceClassName OBJECT-TYPE
        SYNTAX          DisplayString
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "Refers to the Service Class Name that the
                        parameter set values were derived.
                        If service class name was not used to specify
                        parameter set values then used zero length
                        DisplayString value."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.3.4"
        ::= { docsQosParamSetEntry 4 }

docsQosParamSetPriority OBJECT-TYPE
        SYNTAX          Integer32 (0..7)
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "The relative priority of a service flow.
                        Higher numbers indicate higher priority.
                        This priority should only be used to diffentiate
                        service flow with identical parameter sets."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.5.2"
        DEFVAL          { 0 }
        ::= { docsQosParamSetEntry 5 }

docsQosParamSetMaxTrafficRate OBJECT-TYPE
        SYNTAX          BitRate
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Maximum data rate allowed for this service flow





Expires January 2000                                           [Page 27]









                        in bits/sec. Must could all MAC frame data PDU
                        from the bytes following the MAC header HCS to
                        the end of the CRC. The number of bytes
                        forwarded is limited during any time interval.
                        The value zero means no maximum traffic rate is
                        enforced."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.5.3"
        DEFVAL          { 0 }
        ::= { docsQosParamSetEntry 6 }

docsQosParamSetMaxTrafficBurst OBJECT-TYPE
        SYNTAX          Unsigned32
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the maximum token bucket size in bytes
                        for this parameter set. The value is calculated
                        from the byte following the MAC header HCS to
                        the end of the CRC."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.5.4"
        DEFVAL          { 1522 }
        ::= { docsQosParamSetEntry 7 }

docsQosParamSetMinReservedRate OBJECT-TYPE
        SYNTAX          BitRate
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the guaranteed minimum rate in
                        bits/sec for this parameter set. The value is
                        calculated from the byte following the MAC
                        header HCS to the end of the CRC. The default
                        0, meaning no bandwidth is reserved."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.5.5"
        DEFVAL          { 0 }
        ::= { docsQosParamSetEntry 8 }

docsQosParamSetMinReservedPkt OBJECT-TYPE
        SYNTAX          Integer32 (0..65535)
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies an assumed minimum packet size in
                        bytes for which the
                        docsQosParamSetMinReservedRate will
                        be provided. The value is calculated from
                        the byte following the MAC header HCS to the
                        end of the CRC."





Expires January 2000                                           [Page 28]









        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.5.6"
        DEFVAL          { 0 }
        ::= { docsQosParamSetEntry 9 }

docsQosParamSetActiveTimeout OBJECT-TYPE
        SYNTAX          Integer32 (0..65535)
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the maximum duration in seconds that
                        resources remain unused on an active service
                        flow before CMTS signals that both active and
                        admitted parameters set are null.
                        The default value of zero signifies an
                        infinite amount of time."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.5.7"
        DEFVAL          { 0 }
        ::= { docsQosParamSetEntry 10 }

docsQosParamSetAdmittedTimeout OBJECT-TYPE
        SYNTAX          Integer32 (0..65535)
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the maximum duration in seconds that
                        resources remain in admitted state before
                        resources must be released.
                        The value of zero signifies an infinite amount
                        of time."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.5.9"
        DEFVAL          { 200 }
        ::= { docsQosParamSetEntry 11 }

docsQosParamSetMaxConcatBurst OBJECT-TYPE
        SYNTAX          Integer32 (0..65535)
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the maximum concatenated burst in
                        bytes which a service flow is allowed.
                        The value is calculated from the FC byte of the
                        Concatenation MAC Header to the last CRC in
                        concatenated MAC frame.
                        The value of zero specifies no maximum burst."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.6.1"
        DEFVAL          { 0 }
        ::= { docsQosParamSetEntry 12 }






Expires January 2000                                           [Page 29]









docsQosParamSetServiceFlowType OBJECT-TYPE
        SYNTAX          INTEGER {
                          undefined (1),
                          bestEffort (2),
                          nonRealTimePollingService(3),
                          realTimePollingService(4),
                          unsolictedGrantServiceWithAD(5),
                          unsolictedGrantService(6)
                        }
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies which upstream service is used for
                        upstream transmission."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.6.2"
        DEFVAL          { bestEffort }
        ::= { docsQosParamSetEntry 13 }

docsQosParamSetRequestPolicy OBJECT-TYPE
        SYNTAX          BITS {
                          broadcastReqOpp (0),
priorityReqMulticastReq (1),                           reqDataForReq
(2),
                          reqDataForData (3),
piggybackReqWithData (4),                           concatenateData (5),
                          fragmentData (6),
                          supressPayloadHeaders (7),
                          dropPktsExceedUGSize (8)
                        }
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies which IUC opportunities the CM uses
                        for upstream tranmission requests and packet
                        transmissions.
                        A bit value of 1 mean is must not use that
                        opportunity for transmission."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.6.3"
        DEFVAL          { { } }
        ::= { docsQosParamSetEntry 14 }

docsQosParamSetNomPollInterval OBJECT-TYPE
        SYNTAX          Unsigned32
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the nominal interval in microseconds
                        between successive unicast request





Expires January 2000                                           [Page 30]









                        opportunities on an upstream service flow."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.6.4"
        DEFVAL          { 0 }
        ::= { docsQosParamSetEntry 15 }

docsQosParamSetTolPollJitter OBJECT-TYPE
        SYNTAX          Unsigned32
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the maximum amount of time in
                        microseconds that the unicast request interval
                        may be delayed from the nominal periodic
                        schedule."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.6.5"
        DEFVAL          { 0 }
        ::= { docsQosParamSetEntry 16 }

docsQosParamSetUnsolicitGrantSize OBJECT-TYPE
        SYNTAX          Integer32 (0..65535)
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the unsolicited grant size in bytes.
                        The grant size includes the entired MAC frame
                        data PDU from the Frame Control byte to end of
                        the MAC frame."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.6.6"
        DEFVAL          { 0 }
        ::= { docsQosParamSetEntry 17 }

docsQosParamSetNomGrantInterval OBJECT-TYPE
        SYNTAX          Unsigned32
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the nominal interval in microseconds
                        between successive data grant opportunities
                        on an upstream service flow."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.6.7"
        DEFVAL          { 0 }
        ::= { docsQosParamSetEntry 18 }

docsQosParamSetTolGrantJitter OBJECT-TYPE
        SYNTAX          Unsigned32
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the maximum amount of time in





Expires January 2000                                           [Page 31]









                        microseconds that the transmission opportunities
                        may be delayed from the nominal periodic
                        schedule."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.6.8"
        DEFVAL          { 0 }
        ::= { docsQosParamSetEntry 19 }

docsQosParamSetGrantsPerInterval OBJECT-TYPE
        SYNTAX          Integer32 (0..255)
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the number of data grants per Nominal
                        Grant Interval
                        (docsQosParamSetNomGrantInterval)."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.6.9"
        DEFVAL          { 0 }
        ::= { docsQosParamSetEntry 20 }

docsQosParamSetTosAndMask OBJECT-TYPE
        SYNTAX          OCTET STRING (SIZE(1))
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the AND mask for IP TOS byte."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.6.10"
        DEFVAL          { '00'H }
        ::= { docsQosParamSetEntry 21 }

docsQosParamSetTosOrMask OBJECT-TYPE
        SYNTAX          OCTET STRING (SIZE(1))
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the OR mask for IP TOS byte."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.6.10"
        DEFVAL          { '00'H }
        ::= { docsQosParamSetEntry 22 }

docsQosParamSetMinPhsSize OBJECT-TYPE
        SYNTAX          Integer32 (0..255)
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the minimum payload header suppression
                        size in bytes to be used by CM."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.6.11"
        DEFVAL          { 0 }
        ::= { docsQosParamSetEntry 23 }





Expires January 2000                                           [Page 32]









docsQosParamSetMaxLatency OBJECT-TYPE
        SYNTAX          Unsigned32
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Specifies the maximum latency between the
                        reception of a packet by the CMTS on its NSI
                        and the forwarding of the packet to the RF
                        interface."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.7.1"
        DEFVAL          { 0 }
        ::= { docsQosParamSetEntry 24 }

-- --  Service Flow Table -- docsQosServiceFlowTable OBJECT-TYPE
        SYNTAX          SEQUENCE OF DocsQosServiceFlowEntry
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION     "This table describes the set of Docsis-QOS
                         Service Flows active in a managed device. "
        ::= { docsQosMIBObjects 3 }

docsQosServiceFlowEntry OBJECT-TYPE
        SYNTAX          DocsQosServiceFlowEntry
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION     "Describe a service flow.
                         An entry in the table exists for each
                         Service Flow ID. The ifIndex is an
                         ifType of docsCableMaclayer(127)."
        INDEX {                 ifIndex,
                docsQosServiceFlowId,
              }
        ::= { docsQosServiceFlowTable 1 }

DocsQosServiceFlowEntry ::= SEQUENCE {
        docsQosServiceFlowId                       Unsigned32,
        docsQosServiceFlowProvisionedParamSetIndex Unsigned32,
        docsQosServiceFlowAdmittedParamSetIndex    Unsigned32,
        docsQosServiceFlowActiveParamSetIndex      Unsigned32,
        docsQosServiceFlowSID                       Unsigned32
        }

docsQosServiceFlowId    OBJECT-TYPE
        SYNTAX          Unsigned32
        MAX-ACCESS      not-accessible
        STATUS          current





Expires January 2000                                           [Page 33]









        DESCRIPTION    "An index assigned to a service flow by CMTS."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.3.2"
        ::= { docsQosServiceFlowEntry 1 }

docsQosServiceFlowProvisionedParamSetIndex  OBJECT-TYPE
        SYNTAX          Unsigned32 (0..4294967295)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "Refers to an entry in docsQosParamSetTable
                        with a docsQosParamSetType of serviceFlow(1)
                        that contains the provisioned parameter set
                        values for this service flow.
                        The value is docsQosParamSetIndex for the
                        provisioned parameters set associated with
                        this service flow entry.
                        This object return zero if the
                        docsQosParamSetEntry does not exist."
        ::= { docsQosServiceFlowEntry 3 }

docsQosServiceFlowAdmittedParamSetIndex  OBJECT-TYPE
        SYNTAX          Unsigned32 (0..4294967295)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "Refers to an entry in docsQosParamSetTable
                        with a docsQosParamSetType of serviceFlow(1)
                        that contains the admitted parameter set
                        values for this service flow.
                        The value is docsQosParamSetIndex for the
                        admitted parameters set associated with
                        this service flow entry.
                        This object return zero if the
                        docsQosParamSetEntry does not exist."
        ::= { docsQosServiceFlowEntry 4 }

docsQosServiceFlowActiveParamSetIndex  OBJECT-TYPE
        SYNTAX          Unsigned32 (0..4294967295)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "Refers to an entry in docsQosParamSetTable
                        with a docsQosParamSetType of serviceFlow(1)
                        that contains the active parameter set
                        values for this service flow.
                        The value is docsQosParamSetIndex for the
                        active parameters set associated with
                        this service flow entry.





Expires January 2000                                           [Page 34]









                        This object return zero if the
                        docsQosParamSetEntry does not exist."
        ::= { docsQosServiceFlowEntry 5 }

docsQosServiceFlowSID  OBJECT-TYPE
        SYNTAX          Unsigned32 (1..16383)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "Service Identifier (SID) assigned to an
                        addmitted or active service flow."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.3.3"
        ::= { docsQosServiceFlowEntry 6 }


-- -- Service Class Table (CMTS ONLY) -- docsQosServiceClassTable
OBJECT-TYPE
        SYNTAX          SEQUENCE OF DocsQosServiceClassEntry
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION     "This table describes the set of Docsis-QOS
                         Service Classes in a CMTS. "
        ::= { docsQosMIBObjects 4 }

docsQosServiceClassEntry OBJECT-TYPE
        SYNTAX          DocsQosServiceClassEntry
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION     "A provisioned service class."
        INDEX {
                 docsQosServiceClassName
              }
        ::= { docsQosServiceClassTable 1 }

DocsQosServiceClassEntry ::= SEQUENCE {
        docsQosServiceClassName          DisplayString,
        docsQosServiceClassParamSetIndex Unsigned32,
        docsQosServiceClassStatus        RowStatus
        }

docsQosServiceClassName OBJECT-TYPE
        SYNTAX          DisplayString
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Service Class Name."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.2.3.4"





Expires January 2000                                           [Page 35]









        ::= { docsQosServiceClassEntry 1 }

docsQosServiceClassParamSetIndex OBJECT-TYPE
        SYNTAX          Unsigned32 (1..4294967295)
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Refers  to an entry in docsQosParamSetTable
                        with a docsQosParamSetType of serviceClass(2).
                        The value is docsQosParamSetIndex for the
                        parameters set associated with this service
                        class entry."
        ::= { docsQosServiceClassEntry 2 }

docsQosServiceClassStatus OBJECT-TYPE
        SYNTAX          RowStatus
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Used to create or delete rows in this table.
                        This object should delete the entry in
                        docsQosParamSetTable referenced by
                        docsQosServiceClassParamSetIndex first
                        before deleting this entry."
        ::= { docsQosServiceClassEntry 3 }


-- -- Service Class PolicyTable -- docsQosServiceClassPolicyTable
OBJECT-TYPE
        SYNTAX          SEQUENCE OF DocsQosServiceClassPolicyEntry
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION    "This table describes the set of Docsis-QOS
                        Service Class Policies.

                        This table is an adjunt to the
                        docsDevFilterPolicy table.  Entries in
                        docsDevFilterPolicy table can  point to
                        specific rows in this table.

                        This table permits mapping a packet to a service
                        class name of an active service flow so long as
                        a classifier does not exist at a higher
                        priority.
                       "
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix E.2.1"
        ::= { docsQosMIBObjects 5 }





Expires January 2000                                           [Page 36]









docsQosServiceClassPolicyEntry OBJECT-TYPE
        SYNTAX          DocsQosServiceClassPolicyEntry
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION     "A service class name policy entry."
        INDEX {
                docsQosServiceClassPolicyIndex
              }
        ::= { docsQosServiceClassPolicyTable 1 }

DocsQosServiceClassPolicyEntry ::= SEQUENCE {
        docsQosServiceClassPolicyIndex        Integer32,
        docsQosServiceClassPolicyName         DisplayString,
        docsQosServiceClassPolicyRulePriority Integer32,
        docsQosServiceClassPolicyStatus       RowStatus
        }

docsQosServiceClassPolicyIndex OBJECT-TYPE
        SYNTAX          Integer32 (1..2147483647)
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION    "Index value to uniquely identify an entry in
                        this table."
        ::= { docsQosServiceClassPolicyEntry 1 }

docsQosServiceClassPolicyName OBJECT-TYPE
        SYNTAX          DisplayString
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Service Class Name to identify the name of the
                        service class flow to which the packet should be
                        directed."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix E.2.1"
        ::= { docsQosServiceClassPolicyEntry 2 }

docsQosServiceClassPolicyRulePriority OBJECT-TYPE
        SYNTAX          Integer32 (0..255)
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Service Class Policy rule priority for the
                        entry."
        REFERENCE      "SP-RFIv1.1-I01-990311, Appendix C.2.1.3.5"
        ::= { docsQosServiceClassPolicyEntry 3 }

docsQosServiceClassPolicyStatus OBJECT-TYPE





Expires January 2000                                           [Page 37]









        SYNTAX          RowStatus
        MAX-ACCESS      read-create
        STATUS          current
        DESCRIPTION    "Used to create or delete rows in this table.
                        This object should not be deleted if it is
                        reference by an entry in docsDevFilterPolicy.
                        The reference should be deleted first."
        ::= { docsQosServiceClassPolicyEntry 4 }

-- -- Payload Header Suppression(PHS) Table -- docsQosPHSTable OBJECT-
TYPE
        SYNTAX          SEQUENCE OF DocsQosPHSEntry
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION     "This table describes set of payload header
                         suppression entries."
        ::= { docsQosMIBObjects 6 }

docsQosPHSEntry OBJECT-TYPE
        SYNTAX          DocsQosPHSEntry
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION     "A payload header supression entry"
        INDEX {                 docsQosServiceFlowId,
                docsQosPHSIndex
              }
        ::= { docsQosPHSTable 1 }

DocsQosPHSEntry ::= SEQUENCE {
        docsQosPHSIndex    Integer32,         docsQosPHSField    OCTET
STRING,         docsQosPHSMask     OCTET STRING,         docsQosPHSSize
Integer32,         docsQosPHSVerify   TruthValue
        }

docsQosPHSIndex         OBJECT-TYPE
        SYNTAX          Integer32 (1..255)
        MAX-ACCESS      not-accessible
        STATUS          current
        DESCRIPTION    "Payload header suppression index uniquely
                        references an entry on a per
                        docsQosServiceFlowId."
        REFERENCE       "SP-RFIv1.1-I01-990311, Appendix C.2.2.10.2"
        ::= { docsQosPHSEntry 1 }

docsQosPHSField         OBJECT-TYPE





Expires January 2000                                           [Page 38]









        SYNTAX          OCTET STRING (SIZE(0..255))
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "Payload header suppression field defines the
                        bytes of the header which must be
                        supressed/restored by the sending/receiving
                        device.

                        The number of octets in this object should be
                        the same as the value of docsQosPHSSize."
        REFERENCE       "SP-RFIv1.1-I01-990311, Appendix C.2.2.10.1"
        ::= { docsQosPHSEntry 2 }

docsQosPHSMask          OBJECT-TYPE
        SYNTAX          OCTET STRING(SIZE(0..32))
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "Payload header suppression mask defines the
                        bit mask which used in combination with the
                        docsQosPHSField defines which bytes in header
                        must be supressed/restored by the sending or
                        receiving device.

                        Each bit of this bit mask corresponds to a byte
                        in the docsQosPHSField, with the least
                        significant  bit corresponding to first byte of
                        the docsQosPHSField.

                        Each bit of the bit mask specifies whether of
                        not the corresponding byte should be supressed
                        in the packet. A bit value of '1' indicates that
                        the byte should be suppressed by the sending
                        device and restored by the receiving device.
                        A bit value of '0' indicates that
                        the byte should not be suppressed by the sending
                        device or restored by the receiving device.

                        If the bit mask does not contain a bit for each
                        byte in the docsQosPHSField then the bit mask is
                        extended with bit values of '1' to be the
                        neccessary length."
        REFERENCE       "SP-RFIv1.1-I01-990311, Appendix C.2.2.10.3"
        ::= { docsQosPHSEntry 3 }

docsQosPHSSize          OBJECT-TYPE





Expires January 2000                                           [Page 39]









        SYNTAX          Integer32 (0..255)
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "Payload header suppression size specifies the
                        number of bytes in the header to be suppressed
                        and restored.

                        The value of this object must match the number
                        of bytes in the docsQosPHSField."
        REFERENCE       "SP-RFIv1.1-I01-990311, Appendix C.2.2.10.4"
        ::= { docsQosPHSEntry 4 }

docsQosPHSVerify       OBJECT-TYPE
        SYNTAX          TruthValue
        MAX-ACCESS      read-only
        STATUS          current
        DESCRIPTION    "Payload header suppression verification value of
                        'true' the sender must verify docsQosPHSField
                        is the same as what is contained in the packet
                        to be suppressed."
        REFERENCE       "SP-RFIv1.1-I01-990311, Appendix C.2.2.10.5"
        ::= { docsQosPHSEntry 5 }


END





4.  RRRReeeeffffeeeerrrreeeennnncccceeeessss



















Expires January 2000                                           [Page 40]









[1]  Harrington, D., Presuhn, R., and B. Wijnen, "An Architecture for
     Describing SNMP Management Frameworks", RFC 2271, Cabletron
     Systems, Inc., BMC Software, Inc., IBM T. J. Watson Research,
     January 1998

[2]  Rose, M., and K. McCloghrie, "Structure and Identification of
     Management Information for TCP/IP-based Internets", RFC 1155,
     Performance Systems International, Hughes LAN Systems, May 1990

[3]  Rose, M., and K. McCloghrie, "Concise MIB Definitions", RFC 1212,
     Performance Systems International, Hughes LAN Systems, March 1991

[4]  M. Rose, "A Convention for Defining Traps for use with the SNMP",
     RFC 1215, Performance Systems International, March 1991

[5]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Structure
     of Management Information for Version 2 of the Simple Network
     Management Protocol (SNMPv2)", RFC 1902, SNMP Research,Inc., Cisco
     Systems, Inc., Dover Beach Consulting, Inc., International Network
     Services, January 1996.

[6]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Textual
     Conventions for Version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1903, SNMP Research, Inc., Cisco Systems, Inc.,
     Dover Beach Consulting, Inc., International Network Services,
     January 1996.

[7]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Conformance
     Statements for Version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1904, SNMP Research, Inc., Cisco Systems, Inc.,
     Dover Beach Consulting, Inc., International Network Services,
     January 1996.

[8]  Case, J., Fedor, M., Schoffstall, M., and J. Davin, "Simple Network
     Management Protocol", RFC 1157, SNMP Research, Performance Systems
     International, Performance Systems International, MIT Laboratory
     for Computer Science, May 1990.

[9]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
     "Introduction to Community-based SNMPv2", RFC 1901, SNMP Research,
     Inc., Cisco Systems, Inc., Dover Beach Consulting, Inc.,
     International Network Services, January 1996.

[10] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Transport
     Mappings for Version 2 of the Simple Network Management Protocol





Expires January 2000                                           [Page 41]









     (SNMPv2)", RFC 1906, SNMP Research, Inc., Cisco Systems, Inc.,
     Dover Beach Consulting, Inc., International Network Services,
     January 1996.

[11] Case, J., Harrington D., Presuhn R., and B. Wijnen, "Message
     Processing and Dispatching for the Simple Network Management
     Protocol (SNMP)", RFC 2272, SNMP Research, Inc., Cabletron Systems,
     Inc., BMC Software, Inc., IBM T. J. Watson Research, January 1998.

[12] Blumenthal, U., and B. Wijnen, "User-based Security Model (USM) for
     version 3 of the Simple Network Management Protocol (SNMPv3)", RFC
     2274, IBM T. J. Watson Research, January 1998.

[13] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Protocol
     Operations for Version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1905, SNMP Research, Inc., Cisco Systems, Inc.,
     Dover Beach Consulting, Inc., International Network Services,
     January 1996.

[14] Levi, D., Meyer, P., and B. Stewart, "SNMPv3 Applications", RFC
     2273, SNMP Research, Inc., Secure Computing Corporation, Cisco
     Systems, January 1998

[15] Wijnen, B., Presuhn, R., and K. McCloghrie, "View-based Access
     Control Model (VACM) for the Simple Network Management Protocol
     (SNMP)", RFC 2275, IBM T. J. Watson Research, BMC Software, Inc.,
     Cisco Systems, Inc., January 1998

[16] " Data-Over-Cable Service Interface Specifications: Cable Modem
     Radio Frequency Interface Specification SP-RFIv1_1-I01-990311", DOCSIS,
     March 1999, http://www.cablemodem.com.

[17] L. Steinberg, "Techniques for Managing Asynchronously Generated
     Alerts", RFC 1224, May 1991.

[18] "Data-Over-Cable Service Interface Specifications: Operations
     Support System Interface Specification RF Interface SP-OSSI-RF-
     I02-980410", DOCSIS, April 1998,
     http://www.cablemodem.com/public/pubtechspec/ossi/sp-ossi.PDF.

[19] Bradner, S., "Key words for use in RFCs to Indicate Requirement
     Levels", RFC2119, Harvard University, March 1997

[20] "Data-Over-Cable Service Interface Specifications: Baseline Privacy
     Interface Specification SP-BPI-I01-970922", DOCSIS, September 1977,





Expires January 2000                                           [Page 42]









     http://www.cablemodem.com/public/pubtechspec/ss/SP-BPI-I01-
     970922.pdf

[21] "Cable Device Management Information Base for DOCSIS compliant Cable
     Modems and Cable Modem Termination Systems",
     <draft-ietf-ipcdn-cable-device-mib-08.txt>

[22] "Radio Frequency (RF) Interface Management Information Base
     for MCNS/DOCSIS compliant RF interfaces",
     <draft-ietf-ipcdn-rf-interface-mib-06.txt>





5.  AAAAuuuutttthhhhoooorrrrssss''''AAAAddddddddrrrreeeesssssssseeeessss

       John Harvey
       Motorola Information Networking Group
       20 Cabot Blvd., MS M4-25
       Mansfield, MA 02048
       Phone: (508) 261-4579
       Email: ljh031@email.mot.com

       Michael Patrick
       Motorola Information Networking Group
       20 Cabot Blvd., MS M4-30
       Mansfield, MA 02048
       Phone: (508) 261-5707
       Email: lzz007@email.mot.com




















Expires January 2000                                           [Page 43]


