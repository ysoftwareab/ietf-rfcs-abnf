profile = component "-" usage

component       = "EVENT" / "event" / "TODO" / "todo"
                        / "JOURNAL" / "journal" / "FREEBUSY"
                        / "freebusy" / x-token  / iana-comp

usage   = "REQUEST" / "request" / "REPLY" / "reply"
                / "CANCEL" / "cancel" / x-token / iana-usage

x-token = <The two characters "X-" or "x-" followed, with
                   no intervening white space, by any atom, where
                   atom is from section 3.3 of [RFC 822]>

iana-comp = <A publicly defined extension component,
                     registered with IANA, as specified by this
                     document>

iana-usage = <A publicly defined extension usage,
                      registered with IANA, as specified by this
                      document>

contentline = name [";" paramlist] ":" value CRLF
LWSP       = SPACE / HTAB

SPACE      = <ASCII Decimal 32>

HTAB       = <ASCII Decimal 9>

name       = x-name / iana-name    ;An iCalendar attribute/property

x-name     = <The two characters "X-" or "x-" followed, with no
                   intervening white space, by any atom>

iana-name  = <A publicly defined name, registered with IANA>

paramlist  = parameter / paramlist ";" parameter

parameter  = encodingparm
                / valuetypeparm         ;If not present => inline value
                / languageparm
                / [parmtype "="] parmvalues

encodingparm = "encoding" "=" encodetype

encodetype = "8bit"        ;From [RFC 2045]
                / "7bit"        ;From [RFC 2045]
                / "q"           ;From [RFC 2045]
                / "b"           ;From [RFC 2045]

valuetypeparm = "value" "=" valuetype

valuetype  = "url"
                / "text"
                / "date"
                / "time"
                / "date-time"
                / "period"
                / "duration"
                / "boolean"
                / "integer"
                / "float"
                / "cal-address"
                / "utc-offset"
                / x-token
                / iana-value

iana-value = <A publicly defined extension value type, registered
                   with IANA, as specified by this document>

languageparm = "language" "=" language
parmtype   = x-token / iana-ptype

iana-ptype = <A publicly defined extension parameter type,
                   registered with IANA, as specified by this document>

parmvalues = parmvalue / parmvalues "," parmvalue
parmvalue  = x-name / iana-pvalue

iana-pvalue = <A publicly defined extension parameter value,
                    registered with IANA, as specified by this document>

value      = url / text / date / time / date-time / period /
                / duration / boolean / integer / float / cal-address
                / utc-offset / x-token / iana-value

iana-value = <A publicly defined property value data type,
                   registered with IANA, as defined in this document>

Conference_Room_-_3B=0D=0A
SBQcmVwYXJIZC4NCg = =

boolean    = "TRUE" / "FALSE"

cal-address        = addr-spec / [phrase] "<" addr-spec ">"

addr-spec  = local-part "@" domain         ;RFC 822 style address
local-part = WORD *("." WORD)
domain     = domain-ref *("." domain-ref)
domain-ref = ATOM

phrase     = 1*WORD
WORD       = ATOM / quoted-string
quoted-string = <"> *(qtext/quoted-pair) <"> ; Regular qtext or
                                                  ;   quoted chars.
qtext      = <any CHAR excepting <">,        ; => may be folded
                  "\" & CR, and including linear-white-space>
quoted-pair ="\" CHAR                        ; may quote any char
CHAR       = <any a character from the selected character set>
ATOM       = 1*<any CHAR except specials, SPACE and CTLs>

DIGIT      =<any ASCII decimal digit>      ;0-9

date-fullyear      = 4DIGIT
date-month         = 2DIGIT        ;01-12
date-mday          = 2DIGIT        ;01-28, 01-29, 01-30, 01-31
                                        ;based on month/year

date               = date-fullyear date-month date-mday

date-time  = date "T" time ;As specified above in date and time

DIGIT      =<any ASCII decimal digit>      ;0-9

dur-second = 1*DIGIT "S"
dur-minute = 1*DIGIT "M" [dur-second]
dur-hour   = 1*DIGIT "H" [dur-minute]
dur-time   = "T" (dur-hour / dur-minute / dur-second)

dur-week   = 1*DIGIT "W"
dur-day    = 1*DIGIT "D"
dur-month  = 1*DIGIT "M" [dur-day]
dur-year   = 1*DIGIT "Y" [dur-month]
dur-date   = (dur-day / dur-month / dur-year) [dur-time]
duration   = "P" (dur-date / dur-time / dur-week)

DIGIT      =<any ASCII decimal digit>      ;0-9

float      = ["+" / "-"] *DIGIT ["." *DIGIT]

DIGIT      =<any ASCII decimal digit>      ;0-9

integer    = ["+" / "-"] *DIGIT

period-explicit = date-time "/" date-time
period-start = date-time "/" duration
period     = period-explicit / period-start

CHAR       = <Any character in the selected character set>

DIGIT      =<any ASCII decimal digit>      ;0-9

time-hour          = 2DIGIT        ;00-23
time-minute        = 2DIGIT        ;00-59
time-second        = 2DIGIT        ;00-59
time-numzone       = ("+" / "-") time-hour time-minute
time-zone          = "Z" / time-numzone

time               = time-hour time-minute time-second [time-zone]

url        = <As defined by any IETF RFC>

text       = <Any CHAR, including bare CR & bare LF but not
                   including CRLF>

utc-offset = time-numzone  ;As defined above in time data type

icalobject = "BEGIN" ":" "VCALENDAR" CRLF
                  icalbody
                  "END" ":" "VCALENDAR" CRLF [icalobject]

property   = propname [";" parmlist] ":" value CRLF

propname   = <any properties defined in this document>
                / iana-prop / x-token

x-token    = <The two characters "X-" or "x-" followed, with no
                   intervening white space, by any atom>
iana-prop  = <A publicly defined extension property, registered
                   with IANA, as specified by this document>

icalbody   = calprops 1*component

calprops   = [calscale] prodid [profile] [profile-version]
                  [source] [name] version

component  = 1*(eventc / todoc / journalc / freebusyc /
                / timezonec)

eventc     = "BEGIN" ":" "VEVENT" CRLF
                  *eventprop *alarmc
                  "END" ":" "VEVENT" CRLF

eventprop  = *attach *attendee *categories [class] [created]
                  description [dtend] dtstart *exdate *exrule
                  [geo] *last-mod [location] [priority] [rstatus]
                  *related *resources *rdate *rrule dtstamp
                  [resp-seq] [seq] [status] [summary] [transp]
                  uid *url [recurid] *(comment)
todoc      = "BEGIN" ":" "VTODO" CRLF
                  *todoprop *alarmc
                  "END" ":" "VTODO" CRLF

todoprop   = *attach *attendee *categories [class] [completed]
                  [created] description dtstamp dtstart due *exdate
                  *exrule [geo] *last-mod [location] priority [rstatus]
                  *related *resources *rdate *rrule [resp-seq] [recurid]
                  [seq] [status] [summary] [transp] uid *url *(comment)

journalc   = "BEGIN" ":" "VJOURNAL" CRLF
                  *jourprop
                  "END" ":" "VJOURNAL" CRLF

jourprop   = *attach *attendee *categories [class] [created]
                  description dtstart dtstamp *last-mod *related
                  [rdate] [rrule] [rstatus] [resp-seq] [seq] uid *url
                  [recurid] *(comment)

freebusyc  = "BEGIN" ":" "VFREEBUSY" CRLF
                  *fbprop
                  "END" ":" "VFREEBUSY" CRLF

fbprop     = *attendee [created] [duration] [dtend] [dtstart]
                  dtstamp #freebusy *last-mod *related [rstatus]
                  [resp-seq] [seq] uid *url *(comment)

alarmc     = "BEGIN" ":" "VALARM" CRLF
                  *alarmprop
                  "END" ":" "VALARM" CRLF

alarmprop  = *attach [created] [description] dtstart duration
                / *last-mod *related repeat [summary] *(comment)

timezonec  = "BEGIN" ":" "VTIMEZONE" CRLF
                  *tzprop
                  "END" ":" "VTIMEZONE" CRLF

tzprop     = [created] [daylight] dtstart [rdate / rrule]
                  [tzname] tzoffset *(comment)

calscale   = "CALSCALE" ":" calvalue CRLF

calvalue   = "GREGORIAN" / iana-scale

iana-scale = <Any other designator for a calendar scale
                   registered with IANA>

prodid     = "prodid" ":" pidvalue CRLF

pidvalue   = text
profile    = "PROFILE" ": profvalue CRLF

profvalue  = " component "-" action

component  = "EVENT" / "TODO" / "JOURNAL" / "FREEBUSY"
                / iana-component / x-token

action     = <Any IANA registered iCalendar action type.>

x-token    = <The two characters "X-" or "x-" followed, with no
                   intervening white space, by any atom>

iana-component = <Any other component registered with IANA>

prof-version = "PROFILE-VERSION" ":" profvalue CRLF

profvalue  = iana-prfver

iana-prfver = max-prfver / (min-prfver ";" max-prfver)

min-prfver = <A IANA registered iCalendar profile identifier>

max-prfver = <A IANA registered iCalendar profile identifier>

source     = "SOURCE" ":" url CRLF

name       = "NAME" ":" text CRLF

version    = "VERSION" ":" vervalue CRLF
vervalue   = "2.0"         ;This specification
                / maxver
                / (minver ";" maxver)

minver     = <A IANA registered iCalendar profile identifier>
maxver     = <A IANA registered iCalendar profile identifier>
attach     = "ATTACH" ":" url CRLF

attendee   = "ATTENDEE" [";" attparamlist] ":"
                  (cal-address / URL) CRLF
attparamlist       = attparam / attparamlist ";" attparam
                        / paramlist / paramlist ";" attparam
                        / paramlist ";" attparamlist ";"
                          attparam

attparam   = typeparm / roleparm / statusparm / rsvpparm
                / expectparm / memberparm / deletoparm / delefromparm

typeparm   = "TYPE" "="
                ("INDIVIDUAL"   ; An individual
                / "GROUP"       ; A group of individuals
                / "RESOURCE"    ; A physical resource
                / "ROOM"        ; A room resource
                / "UNKNOWN")    ; Otherwise not known
roleparm   = "ROLE" "="
                ("ATTENDEE"     ; Indicates a regular attendee
                / "OWNER"       ; Indicates owner of event or to-do
                / "ORGANIZER"   ; Indicates organizer of event or to-do
                / "DELEGATE")   ; Indicates delegate to event or to-do
statusparm = "STATUS" "="
                ("NEEDS-ACTION" ; Indicates event or to-do needs action
                / "ACCEPTED"    ; Indicates event or to-do accepted
                / "DECLINED"    ; Indicates event or to-do not accepted
                / "TENTATIVE"   ; Indicates event or to-do tentatively
                ; accepted. Status may change in the future.
                / "COMPLETED"   ; Indicates to-do was completed.
                ; COMPLETED property has date/time completed.
                / "DELEGATED"   ; Indicateds event or to-do delegated
                ; to another ATTENDEE
                / "CANCELED")   ; Indicates event or to-do canceled for
                                ; ATTENDEE
rsvpparm   = "RSVP" "="
                  ("TRUE"               ; Indicates response requested
                / "FALSE")              ; Indicates no response needed
expectparm = "EXPECT" "="
                ("FYI"          ; Indicates request is for your info
                / "REQUIRE"     ; Indicates presence is required
                / "REQUEST")    ; Indicates presence is requested
memberparm = "MEMBER" "=" cal-address
deletoparm = "DELEGATED-TO" "=" cal-address
delefromparm = "DELEGATED-FROM" "=" cal-address
categories = "CATEGORIES" [";" paramlist] ":"
                  catvalue CRLF

catvalue   = cat1value *["," cat1value]
                / cat2value *["," cat2value]

cat1value  = "APPOINTMENT" / "BUSINESS" / "EDUCATION" / "HOLIDAY"
                / "MEETING" / "MISCELLANEOUS" / "NON-WORKING HOURS"
                / "NOT IN OFFICE" / "PERSONAL" / "PHONE CALL"
                / "SICK DAY" / "SPECIAL OCCASION" / "TRAVEL"
                / "VACATION" / word
cat2value  = "AUDIO" / "DISPLAY" / "EMAIL" / "PROCEDURE"
                / x-token / iana-word
class      = "CLASS" [";" paramlist] ":"
                  classvalue CRLF

classvalue = "PUBLIC" / "PRIVATE" / "CONFIDENTIAL" / x-token
comment    = "COMMENT" ":" text CRLF

completed  = "COMPLETED" ":" date-time CRLF
created    = "CREATED" ":" date-time CRLF

due        = "DUE" ":" (date-time / duration) CRLF
dtend      = "DTEND" ":" date-time CRLF

dtstamp    = "DTSTAMP" ":" date-time CRLF

dtstart    = "DTSTART" ":" (date-time / date) CRLF
daylight   = "DAYLIGHT" ":" boolean CRLF
Description        = "DESCRIPTION" [";" paramlist] ":"
                          text CRLF

duration   = "DURATION" ":" duration CRLF

exdate     = "EXDATE" ":" date-time *["," date-time]
                  CRLF

exrule     = "EXRULE" [";" paramlist] ":" rvalue CRLF

freebusy   = "FREEBUSY" [";" fbparmlist] ":" fbvalue
                  CRLF

fbparmlist = fbparam / paramlist ";" fbparam
                / fbparam ";" fbparmlist

fbparam    = fbtype / fbstatus

fbtype     = "TYPE" "=" ("FREE" or "BUSY")
fbstatus   = "STATUS" "="
                  "BUSY"        ;Represents busy time interval
                / "OUT"         ;Represents out-of-office, non-working
                                ;hours, or other unavailable interval
                / "PRIVATE"     ;Represents private unavailable time 
                / "CONFIDENTIAL" ;Represents confidential unavailable
                                ;time
fbvalue    = period *["," period]
decimal = degrees + minutes/60 + seconds/3600.
geo        = "GEO" ":" geovalue CRLF

geovalue   = float ";" float
last-mod   = "LAST-MODIFIED" ":" date-time ["," date-time]
                  CRLF

location   = "LOCATION [";" paramlist] ":" locavalue
                  CRLF

locavalue  = text / url    ;The value must be the same type as the
                                ;default or explicit data type.

priority   = "PRIORITY" ":" integer CRLF
rdate      = "RDATE" ":" rdvalue *["," rdvalue] CRLF

rdvalue    = date-time / period
recurid            = "RECURRENCE-ID" [";" rangeparm] ":" date-time

rangeparm  = "RANGE" "=" ("THISANDPRIOR" / "THISANDFUTURE")

NAME=VALUE pair. The components are separated from each other by the
rrule      = "RRULE" [paramlist] ":" rvalue CRLF

paramlist  = param / paramlist ";" param

rvalue     = "FREQ" = freq
                *("UNTIL" "=" enddate
                / "COUNT" "=" interval
                / "INTERVAL" "=" rinterval
                / "BYDAY" "=" bdweekdaylist
                / "BYMONTHDAY" "=" bmdaylist
                / "BYYEARDAY" "=" bydaylist
                / "BYSETPOS" "=" bsplist
                / "BYWEEKNO" "=" bwdaylist
                / "BYMONTH" "=" bmlist
                / "WKST" "=" weekday
                / "X-" word "=" word)

freq       = "HOURLY" / "DAILY" / "WEEKLY" / "YEARLY"

rinterval  = interval      ; For any rvalue
                / duration      ; Only for rvalue = HOURLY

DIGIT      =<any ASCII decimal digit>      ;0-9

digits     = 1*DIGIT

interval   = digits

enddate    = date          ;A UTC value

plus       = "+"

minus      = "-"

ordmoday   = 1*2digits     ;1 to 31

ordwk      = 1*2digits     ;1 to 52

ordyrday   = 1*3digits     ;1 to 366

daynumber  = (plus / minus) ordmoday

weekday    = "SU" / "MO" / "TU" / "WE" / "TH" / "FR" / "SA"
bdweekdaynum = [daynumber] weekday

bdweekdaylist      = bdweekdaynum / bdweekdaynum ","
                          *(bdweekdaynum)

bmposday   = [plus] ordmoday

bmnegday   = minus ordmoday

bmdaylist  = bmposday *("," bmposday / bmnegday)
                / bmnegday *("," bmnegday / bmposday)

byposday   = [plus] ordyrday

bynegday   = minus ordyrday

bydaylist  = byposday *("," byposday / bynegday)
                / bynegday *("," bynegday / byposday)

bsplist    = byposday *("," byposday / bynegday)
                / bynegday *("," bynegday / byposday)

bwposday   = [plus] ordwk
bwnegday   = minus ordwk

bwdaylist  = bwposday *("," bwposday / bwnegday)
                / bwnegday *("," bwnegday / bwposday)

bmposmon   = 1*2digits     ;1 to 12

bmlist     = bmposmon *("," bmposmon)

FREQ=WEEKLY

FREQ=MONTHLY

FREQ=YEARLY

related    = "RELATED-TO" [";" paramlist] ":" relvalue
                  CRLF

relvalue   = text

repeatcnt  = "REPEAT" ":" integer CRLF
Rstatus    = "REQUEST-STATUS" ":" statcode ";"
                         statdesc [";" extdata]

Statcode   = 3*DIGIT
Statdesc   = *WORD
Extdata    = *WORD
resource   = "RESOURCES" [";" paramlist] ":"
                  resvalist CRLF

resvalist  = resvalue / resvalue "," resvalist

resvalue   = "CATERING" / "CHAIRS" / "COMPUTER PROJECTOR"
                / "EASEL" / "OVERHEAD PROJECTOR" / "SPEAKER PHONE"
                / "TABLE" / "TV" / "VCR" / "VIDEO PHONE" / "VEHICLE"
                / word

respseq    = "RESPONSE-SEQUENCE" ":" integer CRLF
sequence   = "SEQUENCE" ":" integer CRLF
status     = "STATUS" [";" paramlist] ":" statvalue CRLF

statvalue  = "NEEDS ACTION"        ;Indicates to-do needs action.
                / "COMPLETED"           ;Indicates to-do completed
                / "TENTATIVE"           ;Indicates event is being
                                        ;tentatively scheduled
                / "CONFIRMED"           ;Indicates event is definite
                / "CANCELLED"           ;Indicates event was canceled

summary    = "SUMMARY" [";" paramlist] ":" text CRLF

transp     = "TRANSP" [";" paramlist] ":" transvalue
                  CRLF

transvalue = "BUSY"        ;Opaque/blocks on free/busy searches
                                ;Default value is BUSY
                / "OUT"         ;Opaque/blocks on free/busy searches
                / "PRIVATE"     ;Opaque/blocks on free/busy searches
                / "CONFIDENTIAL" ;Opaque/blocks on free/busy searches
                / "TRANSPARENT" ;Transparent on free/time searches

tzname     = "TZNAME" [";" paramlist] ":" text CRLF

tzoffset   = "TZOFFSET" ":" utc-offset CRLF

url        = "URL" ":" url CRLF

uid        = "UID" [";" paramlist] ":" text CRLF
extension  = "X-" [vendorid] word [";" paramlist] ":"
                  value

vendorid   = 1*char "-"    ;Vendor identification prefix text

and_Exhibit=0D=0A
Atlanta_World_Congress_Center=0D=0A
Conference_and_Exhibit=0D=0A
