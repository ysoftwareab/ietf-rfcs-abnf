
Mobile Ad Hoc Networking Working Group                   Charles Perkins
INTERNET DRAFT                                          Sun Microsystems
10 August 1998                                        Elizabeth M. Royer
                                 University of California, Santa Barbara

            Ad Hoc On Demand Distance Vector (AODV) Routing
                      draft-ietf-manet-aodv-01.txt


Status of This Memo

   This document is a submission by the Mobile Ad Hoc Networking Working
   Group of the Internet Engineering Task Force (IETF).  Comments should
   be submitted to the manet@itd.nrl.navy.mil mailing list.

   Distribution of this memo is unlimited.

   This document is an Internet-Draft.  Internet-Drafts are working
   documents of the Internet Engineering Task Force (IETF), its areas,
   and its working groups.  Note that other groups may also distribute
   working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at
   any time.  It is inappropriate to use Internet- Drafts as reference
   material or to cite them other than as ``work in progress.''

   To view the entire list of current Internet-Drafts, please check
   the ``1id-abstracts.txt'' listing contained in the Internet-Drafts
   Shadow Directories on ftp.is.co.za (Africa), ftp.nordu.net (Northern
   Europe), ftp.nis.garr.it (Southern Europe), munnari.oz.au (Pacific
   Rim), ftp.ietf.org (US East Coast), or ftp.isi.edu (US West Coast).


Abstract

   The Ad Hoc On-Demand Distance Vector (AODV) routing protocol is
   intended for use by mobile nodes in an ad hoc network characterized
   by frequent changes in link connectivity to each other caused
   by relative movement.  It offers quick adaptation to dynamic
   link conditions, low processing and memory overhead, low network
   utilization, and establishment of both unicast and multicast routes
   between sources and destinations which are loop free at all times.
   It makes use of destination sequence numbers, which are a novel means
   of ensuring loop freedom even in the face of anomalous delivery
   of routing control messages, and which solve classical problems
   associated with distance vector protocols, including the problem of
   "counting to infinity".







Perkins, Royer             Expires 10 February 1999             [Page i]

Internet Draft                    AODV                    10 August 1998




                                Contents


Status of This Memo                                                    i

Abstract                                                               i

 1. Introduction                                                       2

 2. Overview                                                           2

 3. AODV Terminology                                                   4

 4. Route Request Message Format                                       6

 5. Route Reply Message Format                                         8

 6. Multicast Route Invalidation Message Format                       10

 7. Node Operation - Unicast                                          11
     7.1. Maintaining Route Utilization Records . . . . . . . . . .   11
     7.2. Generating Route Requests . . . . . . . . . . . . . . . .   11
     7.3. Forwarding Route Requests . . . . . . . . . . . . . . . .   12
     7.4. Generating Route Replies  . . . . . . . . . . . . . . . .   13
     7.5. Generating Hello Messages . . . . . . . . . . . . . . . .   13
     7.6. Initiating Triggered Route Replies  . . . . . . . . . . .   14
     7.7. Detecting Link Breakage . . . . . . . . . . . . . . . . .   15

 8. Node Operation - Multicast                                        15
     8.1. Maintaining Multicast Tree Utilization Records  . . . . .   15
     8.2. Generating Multicast Route Requests . . . . . . . . . . .   15
     8.3. Forwarding Multicast Route Requests . . . . . . . . . . .   17
     8.4. Generating Multicast Route Replies  . . . . . . . . . . .   17
     8.5. Route Deletion and Multicast Tree Pruning . . . . . . . .   18
     8.6. Repairing Link Breakages  . . . . . . . . . . . . . . . .   20
     8.7. Initiating Triggered Route Replies  . . . . . . . . . . .   22

 9. Configuration Parameters                                          22

10. Extensions                                                        24

11. Security Considerations                                           24








Perkins, Royer             Expires 10 February 1999             [Page 1]

Internet Draft                    AODV                    10 August 1998


1. Introduction

   The Ad-Hoc On-Demand Distance Vector (AODV) algorithm enables
   dynamic, self-starting, multihop routing between participating mobile
   nodes wishing to establish and maintain an ad-hoc network.  AODV
   allows mobile nodes to obtain routes quickly for new destinations,
   and does not require nodes to maintain routes to destinations that
   are not in active communication.  Additionally, AODV allows for the
   formation of multicast groups whose membership is free to change
   during the lifetime of the network.  AODV also defines timely
   responses to link breakages and changes in network topology.  The
   operation of AODV is loop free, and by avoiding the Bellman-Ford
   "counting to infinity" problem offers quick convergence when the
   ad-hoc network topology changes (typically, when a node moves in the
   network).

   One distinguishing feature of AODV is its use of a destination
   sequence number for each route entry.  The destination sequence
   number is created by the destination or the multicast grouphead for
   any usable route information it sends to requesting nodes.  Using
   destination sequence numbers ensures loop freedom and is simple to
   program.  Given the choice between two routes to a destination, a
   requesting node always selects the one with the greatest sequence
   number.

   Another feature of AODV is that link breakages cause immediate
   notifications to be sent to the affected set of nodes, but only that
   set of nodes.


2. Overview

   Route Requests (RREQs), Route Replies (RREPs), and Multicast
   Route Invalidations (MINVs) are the three message types defined
   by AODV. These message types are handled by UDP, and normal IP
   header processing applies.  So, for instance, the requesting node
   is expected to use its IP address as the source IP address for the
   messages.  The range of dissemination of broadcast RREQs can be
   indicated by the TTL in the IP header.  Fragmentation is typically
   not required.

   As long as the endpoints of a communication connection have valid
   routes to each other, AODV does not play any role.  When a route
   to a new destination (either a single node or a multicast group)
   is needed, the node uses a broadcast RREQ to find a route to the
   destination.  A route can be determined when the request reaches
   either the destination itself, or an intermediate node with a fresh
   enough route to the destination.  The route is made available by
   unicasting a RREP back to the source of the RREQ. Since each node



Perkins, Royer             Expires 10 February 1999             [Page 2]

Internet Draft                    AODV                    10 August 1998


   receiving the request keeps track of a route back to the source of
   the request, the RREP can be unicast back from the destination to the
   source, or from any intermediate node that is able to satisfy the
   request back to the source.  In the multicast scenario, RREQs are
   also used when a node wishes to join a multicast group.  A special
   join flag in the RREQ lets nodes know that when they receive the
   RREP, they are not just setting route pointers but are actually
   grafting a branch on to the multicast tree.

   If a RREP is broadcast to the limited broadcast address
   (255.255.255.255), and has a TTL of one, and a destination address
   of the node itself with metric 0, then it is received by all the
   node's neighbors, and treated by them as a "hello" message.  This
   hello message is a local advertisement for the continued presence of
   the node.  Neighbors that are using routes through the broadcasting
   node will continue to mark the routes as valid.  If hello messages
   from a particular node stop coming, the neighbor can assume that the
   node has moved away.  When that happens, the neighbor will mark the
   link to the node as broken, and may trigger a notification to some of
   its other neighbors that the link has broken.  Hello messages also
   carry multicast group and corresponding grouphead IP addresses.  This
   information is used for repairing multicast trees after a previously
   disconnected portion of the network containing part of the multicast
   tree becomes reachable once again.

   Since AODV is a routing protocol, it deals with route table
   management.  AODV assumes the following fields exist in each route
   table entry:

      - Destination IP Address
      - Destination Sequence Number
      - Hop Count
      - Next Hop
      - Lifetime


   This information must be kept even for ephemeral routes, such as are
   created to temporarily keep track of reverse paths towards nodes
   originating RREQs.  For multicast tree routes, the Next Hop field is
   likely to contain more than one entry.  For multicast tree routes,
   the following information is stored in each entry of the multicast
   route table:

      - Multicast Group IP Address
      - Multicast Grouphead IP Address
      - Hop Count
      - Next Hops
      - Lifetime




Perkins, Royer             Expires 10 February 1999             [Page 3]

Internet Draft                    AODV                    10 August 1998


   Here the Hop Count corresponds to the distance in hops to the
   multicast grouphead.  Also, the Next Hops field is a linked list of
   structures, each of which contain the fields:

      - Node IP Address
      - Active Flag


   The Active Flag indicates whether the link has actually been set, or
   whether an MINV messages is still pending (see Section 8.5).


3. AODV Terminology

   This section defines terminology used with AODV that is not already
   defined in [2].

      multicast grouphead

         A node which is a member of the given multicast group and which
         is the first such group member in the connected portion of
         the network.  This node is responsible for initializing the
         multicast group destination sequence number.

      multicast tree

         The tree containing all nodes which are members of the
         multicast group and all nodes which are needed to connect the
         multicast group members.

      multicast route table

         The table were ad-hoc nodes keep routing (including next hops)
         information for various multicast groups.

      request table

         The table where ad-hoc nodes keep information concerning the
         first node to request to join a multicast group.  There is one
         entry in the table for each multicast group for which the node
         has received a RREQ with the J flag set (see Section 8.2.

      route table

         The table where ad-hoc nodes keep routing (including next hop)
         information for various destinations.  For IPv6, this can be
         associated with the Destination Cache.





Perkins, Royer             Expires 10 February 1999             [Page 4]

Internet Draft                    AODV                    10 August 1998


      triggered update

         An unsolicited route update transmitted by an intermediate node
         along the path to the destination.

   This protocol specification uses conventional meanings [1] for
   capitalized words such as MUST, SHOULD, etc., to indicate requirement
   levels for various protocol features.












































Perkins, Royer             Expires 10 February 1999             [Page 5]

Internet Draft                    AODV                    10 August 1998


4. Route Request Message Format

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |J|R|        Reserved           |   Hop Count   |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                          Broadcast ID                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     Destination IP address                    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  Destination Sequence Number                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                       Source IP address                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     Source Sequence Number                    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   The format of the Route Request message is illustrated above, and
   contains the following fields:

      Type         xx

      J            Join flag; set when source node wants to join
                   multicast group.

      R            Repair flag; set when a node wants to initiate
                   a repair to connect two previously disconnected
                   portions of the multicast tree.

      Reserved     Sent as 0; ignored on reception.

      Hop Count    The number of hops from the Source IP Address to the
                   node handling the request.

      Broadcast ID
                   A sequence number identifying the particular RREQ
                   uniquely when taken in conjunction with the source
                   node's IP address.

      Destination IP Address
                   The IP address of the destination for which a route
                   is desired.

      Destination Sequence Number
                   The last sequence number received in the past by the
                   source for any route towards the destination.





Perkins, Royer             Expires 10 February 1999             [Page 6]

Internet Draft                    AODV                    10 August 1998


      Source IP Address
                   The IP address of the node which originated the Route
                   Request.

      Source Sequence Number
                   The current sequence number for route information
                   generated by the source of the route request.

   Extension:

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |     Type      |    Length     | Multicast Grouphead IP Addr...
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      ...Multicast Grouphead IP Addr |   Multicast Group Hop Count   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      Type     xx

      Length
               The length of the extension field.

      Multicast Grouphead IP Address
               The IP Address of the Multicast Grouphead.  This
               extension is only used when a route to the Multicast
               Grouphead is known.

      Multicast Group Hop Count
               The distance in hops of the node sending the RREQ from
               the Multicast Grouphead.  This extension is only used for
               route rebuilding.

   This extension is included only when a route to the multicast
   grouphead is known.

















Perkins, Royer             Expires 10 February 1999             [Page 7]

Internet Draft                    AODV                    10 August 1998


5. Route Reply Message Format

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |L|          Reserved           |   Hop Count   |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     Destination IP address                    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  Destination Sequence Number                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                           Lifetime                            |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   The format of the Route Reply message is illustrated above, and
   contains the following fields:

      Type        xx

      Reserved
                  Sent as 0; ignored on reception.

      Hop Count
                  The number of hops from the Source IP Address to the
                  Destination IP Address.  For multicast route requests
                  this indicates the number of hops to the multicast
                  grouphead.

      L           If the 'L' bit is set, the message is a "hello"
                  message and contains a list of the node's neighbors.

      Destination IP Address
                  The IP address of the destination for which a route is
                  supplied.

      Destination Sequence Number
                  The destination sequence number associated to the
                  route.

      Lifetime    The time for which nodes receiving the RREP consider
                  the route to be valid.











Perkins, Royer             Expires 10 February 1999             [Page 8]

Internet Draft                    AODV                    10 August 1998


   Extension:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |  Multicast Group IP Address ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ... Multicast Group IP Address  | Multicast Grouphead IP Addr ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ... Multicast Grouphead IP Addr |  Multicast Group Seq Number ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ... Multicast Group Seq Number  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      Type     xx

      Length
               The length of the extension field.

      Multicast Group IP Address
               The IP Address of the Multicast Group.

      Multicast Grouphead IP Address
               The IP Address of the Multicast Grouphead.

      Multicast Group Sequence Number
               The current sequence number of the Multicast Group.

   This extension is included when responding to a multicast group route
   request.






















Perkins, Royer             Expires 10 February 1999             [Page 9]

Internet Draft                    AODV                    10 August 1998


6. Multicast Route Invalidation Message Format

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |            Reserved           |   Hop Count   |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     Destination IP address                    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  Destination Sequence Number                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                       Source IP address                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     Source Sequence Number                    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   The format of the Multicast Route Invalidation message is illustrated
   above, and contains the following fields:

      Type     xx

      Reserved
               Sent as 0; ignored on reception.

      Hop Count
               The number of hops from the Source IP Address to the
               Destination IP Address.

      Destination IP Address
               The IP address of the Multicast Group for which a route
               is supplied.

      Destination Sequence Number
               The destination sequence number associated to the
               Multicast Group.

      Source IP Address
               The IP address of the node which originated the Route
               Request.

      Source Sequence Number
               The current sequence number for route information
               generated by the source of the route request.








Perkins, Royer            Expires 10 February 1999             [Page 10]

Internet Draft                    AODV                    10 August 1998


   Extensions:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |      Next Hop IP Address...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       ...Next Hop IP Address      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      Type     xx

      Length
               The length of the extension field

      Next Hop IP Address
               The IP address of the node chosen to be the next hop for
               the multicast tree.

   This extension is included when a source node wishes to invalidate
   all but one of the routes set up by RREPs.  It is not included when a
   multicast tree member is pruning itself from the tree.


7. Node Operation - Unicast

   This section describes the scenarios under which nodes generate
   RREQs and RREPs for unicast communication, and how the fields in the
   message are handled.


7.1. Maintaining Route Utilization Records

   For each valid route maintained by a node (containing a finite
   metric), the node also maintains a list of those neighbors that are
   actively using the route.  This active-list of neighbors will receive
   notifications from the node in the event of detection of a link
   breakage.


7.2. Generating Route Requests

   A node broadcasts a RREQ when it determines that it needs a route to
   a destination and does not have one available.  This can happen if
   the destination is previously unknown to the node, or if a previously
   valid route to the destination expires.  Routes can become invalid
   if they time out (the Lifetime associated with the route expires),
   or else if a link breakage results in an infinite metric being
   associated with the route.  When a route table entry is marked



Perkins, Royer            Expires 10 February 1999             [Page 11]

Internet Draft                    AODV                    10 August 1998


   with an infinite metric, its expiration time is also updated to be
   the current time plus BAD_LINK_LIFETIME milliseconds.  After the
   expiration time, the route MAY be expunged from the node's route
   table.

   After broadcasting a RREQ a node waits for a RREP, and if the
   reply is not received within RREP_WAIT_TIME seconds, the node may
   rebroadcast the RREQ. The RREQ may be rebroadcast up to a maximum of
   RREQ_RETRIES times.  Each rebroadcast has to increment the Broadcast
   ID field.  The node MAY choose to use larger TTL values in the IP
   header field, or wait for longer times for the RREP to arrive.


7.3. Forwarding Route Requests

   When a node receives a broadcast RREQ, it first checks to see whether
   it has received a RREQ with the same Source IP Address and broadcast
   ID fields within the last BCAST_ID_SAVE milliseconds.  If such a RREQ
   has been received, the node silently discards the newly received
   RREQ. Otherwise, the node checks to see whether it has a route to
   the destination.  If the node does not have a route, it rebroadcasts
   the RREQ from its interface(s) with the same field values, but using
   its own IP address in the IP header of the outgoing RREQ. The TTL or
   hop limit field in the outgoing IP header is decreased by one.  The
   Hop Count field in the broadcast RREQ message is incremented by one,
   to account to the new hop through the intermediate node.  In this
   case, the node also creates a reverse route to the Source IP Address
   in its routing table with next hop equal to the IP address of the
   neighboring node that sent the broadcast RREQ (often not equal to the
   Source IP Address field in the RREQ message).  This reverse route
   might be used for an eventual RREP back to the original node making
   the RREQ (identified by the Source IP Address).  The reverse route is
   put into the route table with lifetime REV_ROUTE_LIFE milliseconds.

   If, on the other hand, the node does have a route for the
   destination, it compares the destination sequence number (dest-seqno)
   for that route with the Destination Sequence Number field of the
   incoming RREQ. If the node's existing dest-seqno is smaller than
   the Destination Sequence Number field of the RREQ, the node again
   rebroadcasts the RREQ just as if it did not have a route to the
   destination at all.

   If the node has a route to the destination, and the node's existing
   dest-seqno is greater than or equal to the Destination Sequence
   Number of the RREQ, then the node generates a RREP as discussed
   further in section 7.4.






Perkins, Royer            Expires 10 February 1999             [Page 12]

Internet Draft                    AODV                    10 August 1998


7.4. Generating Route Replies

   If a node receives a route request for a destination, and has a
   fresh enough route to satisfy the request, the node generates a RREP
   message and unicasts it back to the node indicated by the Source
   IP Address field of the received RREQ. First, the node copies over
   its destination sequence number from the entry in its route table,
   or if the generating node is the node itself, it uses a destination
   sequence number at least equal to a sequence number generated after
   the last detected change in its neighbor set.  If the node has not
   detected any change in its set of neighbors since it last incremented
   its destination sequence number, it may use the same destination
   sequence number.

   As part of the process of generating the RREP, the generating node
   creates or updates an entry in its routing table for the Source
   IP Address, if necessary as described in section 7.3.  The Source
   Sequence Number is put into the route entry, along with the Hop Count
   from the RREQ. The expiration time for the route table entry is set
   to the current time plus ACTIVE_ROUTE_TIMEOUT seconds.

   If the generating node is not the destination node, then the
   generating node calculates the Hop Count between the Source IP
   Address and the Destination IP Address by adding together the Hop
   Count from the RREQ and the hop count stored in the route table entry
   for the destination node.  If, on the other hand, the generating node
   is the destination node itself, the Hop Count field in the RREP is
   simply equal to the Hop Count received in the RREQ.

   If the node is not the destination node, it calculates the Lifetime
   field of the RREP by subtracting the current time from the expiration
   time in its route table entry.  Otherwise, if the generating node is
   also the destination node, it copies the value MY_ROUTE_TIMEOUT into
   the Lifetime field of the RREP.

   If the generating node is not the node indicated by the Destination
   IP Address, then it puts the next hop towards the destination in the
   active-list for the reverse path route entry.


7.5. Generating Hello Messages

   Every node generates a "hello" message once every HELLO_INTERVAL
   milliseconds.  This hello message is a broadcast RREP with TTL = 1,
   and the message fields set as follows:

      Destination IP Address
                  the node's IP address,




Perkins, Royer            Expires 10 February 1999             [Page 13]

Internet Draft                    AODV                    10 August 1998


      Destination Sequence Number
                  the latest sequence number

      Hop Count   0

      Lifetime    (1 + ALLOWED_HELLO_LOSS) * HELLO_INTERVAL

   The Hello Messages MAY also contain extensions denoting the
   multicast groups which are known to the node, along with the groups'
   corresponding groupheads.  These extensions can be used by nodes
   which have just joined the network to fill in their Request Table
   up-to-date request information.  The information is also used for
   route rebuilding, as is described later.

   The extensions have the following format:

      Multicast Group IP Address
                        IP address of known multicast group

      Multicast Grouphead IP Address
                        IP Address of corresponding multicast grouphead


7.6. Initiating Triggered Route Replies

   A node can trigger an unsolicited RREP if either it detects a link
   breakage for a next hop along an active route in its route table, or
   if it receives a RREP from a neighbor with an infinite metric for an
   active route (i.e., containing a Destination IP Address for which
   there is a route table entry with a nonempty active-list)

   The unsolicited RREP is unicast to each neighbor in the nonempty
   active-list for the route to that destination.  The contents of the
   RREP fields are set as follows:

      L           0

      Hop Count   65,535

      Destination IP Address
                  The destination in the broken route

      Destination Sequence Number
                  One plus the destination sequence number recorded in
                  the route.







Perkins, Royer            Expires 10 February 1999             [Page 14]

Internet Draft                    AODV                    10 August 1998


7.7. Detecting Link Breakage

   A node can detect a link breakage by listening for "hello" messages
   from its set of neighbors.  If it has received hello messages from
   a particular neighbor, but misses more than ALLOWED_HELLO_LOSS
   consecutive hello messages from that neighbor, the node can presume
   that the particular neighbor is no longer able to maintain a direct
   link with the mobile node.  When this happens, the node should assume
   that its link with the former neighbor has been broken, and proceed
   as in Section 7.6.  A node should assume that a hello message has
   been missed if it is not received within 1.5 times the duration of
   the HELLO_INTERVAL.

   Alternatively, the node can use any physical-layer or link-layer
   methods to detect link breakages with nodes it has considered as
   neighbors.


8. Node Operation - Multicast

   This section describes the scenarios under which nodes generate
   RREQs, RREPs, and MINVs for multicast communication, and how the
   fields in the messages are handled.


8.1. Maintaining Multicast Tree Utilization Records

   For each valid multicast group (containing a finite metric) of
   which a node is a part, either because it is a member of the group
   or because it is a router for the multicast tree, the node also
   maintains a list of those neighbors that are likewise a part of the
   multicast tree.  This active-list of neighbors is used for forwarding
   messages received for the multicast group.  A node will forward such
   a message to every neighbor listed as a part of the multicast tree,
   except that neighbor from which the message arrived.


8.2. Generating Multicast Route Requests

   A node sends a route request (RREQ) either when it determines that it
   should be a part of a multicast group, and it is not already a member
   of that group, or when it has a message to send to the multicast
   group but does not have a route to that group.  If the node wishes to
   join the multicast group, it sets the flag J in the RREQ; otherwise,
   it leaves the flag unset.  The destination address of the RREQ is
   always set to the multicast group address.  If the node has a record
   of another node (the multicast grouphead) requesting to be a member
   of that multicast group, it has two options.  If the node has a known
   route to the grouphead, it will place the address of that node in



Perkins, Royer            Expires 10 February 1999             [Page 15]

Internet Draft                    AODV                    10 August 1998


   the extension field and will unicast the RREQ to the corresponding
   next hop for that destination.  Otherwise, if the node does not have
   a route to the grouphead, or if it does not know who the multicast
   grouphead is, it will broadcast the RREQ with destination IP address
   set to the IP address of the multicast group, and it will not include
   the extension field.

   These scenarios can occur during initialization of a node, when a
   node discovers it should be a member of a multicast group, or when
   a previously valid branch of the multicast tree expires.  Branches
   of the multicast tree become invalid if they time out (the Lifetime
   associated with the route expires), or if a link breakage results in
   an infinite metric being associated with the route.

   The process of waiting for a RREP to a RREQ with a multicast
   destination address is the same as that described in Section 7.2.
   The node may resend the RREQ up to RREQ_RETRIES times if a RREP is
   not received.  If the original RREQ was unicast to a specific node
   and a RREP is not received within RREP_WAIT_TIME seconds, the node
   will broadcast the next RREQ (and all subsequent RREQs for that
   multicast group) across the network.  The destination IP address of
   the rebroadcast is set to the address of the multicast group, and
   the extension field containing the multicast grouphead address is
   not included.  If a RREP is not received after RREQ_RETRIES total
   requests, the node may assume that there are no other members of
   that particular group within the network.  If it wanted to join the
   multicast group, it will then become the multicast grouphead for that
   multicast group and initialize the destination sequence number of
   the multicast group.  Otherwise, if it only wanted to send packets
   to that group without actually joining the group, it will drop the
   packets it had for that group.

   Each node in the network receiving a RREQ message with the J flag
   set, i.e.  every member of the network, checks their Request Table
   to see whether there is already an entry for this multicast group.
   If there is no entry for the group, the node records the IP Address
   of the node which sent the RREQ, together with the IP address of
   the group for which it requested to be a member, in the Request
   Table.  Because the first node to request to be in a group becomes
   the multicast grouphead, entries in the Request Table represent
   multicast groupheads.  If a node wishes to join or send a message to
   a multicast group in the future, it will first consult its Request
   Table to see if another node had previously requested to join that
   group.  Based on the existence or nonexistence of an entry for the
   multicast group in the Request Table, the node will then send the
   RREQ as described at the beginning of the section.






Perkins, Royer            Expires 10 February 1999             [Page 16]

Internet Draft                    AODV                    10 August 1998


8.3. Forwarding Multicast Route Requests

   The operation of nodes forwarding RREQs for multicast is similar
   to that for the reception and forwarding of RREQs as described in
   Section 7.3, with the following exceptions.  If the RREQ is a join
   request, when the node creates a reverse route to the Source IP
   Address, it places a route pointer in its multicast routing table, in
   addition to its (unicast) routing table.  Further, a node can only
   respond to a join RREQ if it is a member of the multicast tree.  The
   generation of the route reply (RREP) message is discussed in the
   following section.


8.4. Generating Multicast Route Replies

   If a node receives a multicast join route request for a multicast
   group, and it is already a member of the multicast tree for that
   group, the node updates its route and multicast route tables and
   then generates a RREP message.  It unicasts the RREP back to the
   node indicated by the Source IP Address field of the received
   RREQ. The RREP contains the current destination sequence number for
   the multicast group, as well as the IP address of the multicast
   grouphead.

   If a node receives a multicast join route request for a multicast
   group and it is not already a member of the multicast tree for that
   group, it will rebroadcast the RREQ to its neighbors.

   If a node receives a multicast route request that is not a join
   message, it can reply if it has a route to the multicast tree.
   Otherwise it will continue forwarding the message.

   In the event that a node receives a unicasted multicast route request
   that specifies its own IP address as the destination address (i.e.
   the source node believes this destination node to be the multicast
   grouphead), but the node is in fact not the grouphead, it can simply
   ignore the RREQ. The source node will time out after RREP_WAIT_TIME
   seconds and will broadcast a new RREQ without the grouphead address
   specified.

   Every time the Multicast Grouphead sends an RREP in response to a
   RREQ, it increments the multicast group sequence number by one and
   attaches the new value of the sequence number to the RREP.

   Regardless of whether the multicast grouphead or an intermediate node
   generates the RREP, the RREP fields are set as follows:

      Hop Count    The distance in hops the node initiating the RREP
                   is from the multicast grouphead.  This field is



Perkins, Royer            Expires 10 February 1999             [Page 17]

Internet Draft                    AODV                    10 August 1998


                   incremented by each node that forwards the RREP along
                   the route to the source.

      Destination IP Address
                   The IP address of the destination for which a route
                   is supplied, in this case the multicast grouphead.

      Destination Sequence Number
                   The destination sequence number associated with the
                   route to the grouphead.

      Lifetime     The time for which nodes receiving the RREP consider
                   the route to be valid.

      Multicast Group IP Address
                   The IP Address of the Multicast Group.

      Multicast Grouphead IP Address
                   The IP Address of the Multicast Grouphead.

      Multicast Group Sequence Number
                   The current sequence number of the Multicast Group.


8.5. Route Deletion and Multicast Tree Pruning

   When a node broadcasts an RREQ message, it is likely to receive more
   than one reply since any node in the multicast tree can respond.
   If the RREQ was a join request, the RREP message traveling back
   to the node which originated the request sets up route pointers,
   effectively grafting a branch onto the multicast tree.  If multiple
   branches to the same destination are created in such a manner, a
   loop will be formed.  Hence, in order to prevent the formation of
   any such loops, it is necessary to delete all but one of the routes
   created by the RREP messages.  The RREP containing the largest
   destination sequence number is chosen to be the added branch to the
   multicast tree.  In the event that a node receives more than one
   RREP with the same (largest) sequence number, it selects the first
   one with the smallest hop count, i.e.  the shortest distance to the
   multicast grouphead.  After waiting for RREP_WAIT_TIME seconds,
   the node must then deactivate all routes created by other RREPs.
   This is accomplished by broadcasting a multicast-invalidate (MINV)
   message.  The Destination IP Address of the MINV packet is set to the
   IP address of the multicast group, and the IP address of the next hop
   along the branch which was added to the multicast tree is included
   in an extension field.  The Hop Count field of the MINV is set to 1.
   All nodes receiving this message whose address does not match that
   listed in the extension field of the packet will delete the multicast
   tree pointer to the node from which the packet came.  The node which



Perkins, Royer            Expires 10 February 1999             [Page 18]

Internet Draft                    AODV                    10 August 1998


   was chosen as the next hop sets the 'active' flag for the sending
   node to true, thereby finalizing the creation of the tree branch.

   Various scenarios exist for the nodes receiving the MINV message.
   If the node receiving this message is a member of the multicast
   group, it will not forward the MINV any further.  If it is not a
   member of the multicast group and no other nodes use it as a router
   for the multicast group, it will propagate the MINV further up the
   tree, effectively removing (pruning) itself from the multicast tree.
   The Destination IP Address of the propagated MINV message is set
   to the IP address of the multicast group, and the extension field
   indicating the next hop is not included.  The lack of the next hop
   extension field indicates to all nodes receiving the packet that
   their multicast tree route pointer to this source node (if such a
   route pointer exists) should be deleted.  If the next hop selected
   by the source node's MINV message was not previously a multicast
   tree member, it will have propagated the original RREQ further up
   the network in search of nodes which are tree members.  Thus it is
   possible that this node also received more than one RREP. When the
   node receives more than one RREP for the same RREQ, it operates in
   a manner similar to the source node by saving the route information
   with the greatest sequence number, and beyond that the lowest hop
   count; it discards all other RREPs.  This node forwards the first
   RREP towards the source of the RREQ, and then forwards later RREPs
   only if they have a greater sequence number or smaller metric.  When
   the node receives an MINV announcing it as the next hop, it will
   send its own MINV announcing the node it has chosen as its next hop,
   and so on up the tree, until a node which was already a part of the
   multicast tree is reached.  If a node receives an MINV and discovers
   it was not chosen as the next hop and is not otherwise a part of the
   multicast tree, it will delete the tree pointers and send an MINV
   without the next hop extension field to prune itself from the tree.

   When a source node sends an MINV selecting a next hop, it sets the
   'active' flag for this next hop to true.  If the next hop also needs
   to send an MINV message specifying which node it has chosen as its
   next hop, it lists the IP address of this next hop in the next hop
   extension of the MINV. Upon receiving this MINV message, the source
   node will not delete the tree pointer to this node (even though its
   IP address is not listed in the next hop extension) because the
   'active' flag has already been set.

   To prevent the possibility of multicast group data messages being
   delivered to the source node from multiple neighboring nodes before
   the MINV messages is broadcast, no node is allowed to forward a data
   packet to this source node before the reception of the MINV message.
   The nodes know they have not yet received the MINV message because
   the 'active' flag for that tree branch remains unset.  Only after
   receiving the MINV and setting the 'active' flag can the node to



Perkins, Royer            Expires 10 February 1999             [Page 19]

Internet Draft                    AODV                    10 August 1998


   which the MINV is addressed forward any multicast group data packets
   to the node.

   If a multicast group member revokes its member status and wishes to
   remove itself from the multicast tree, it can do so if it is not a
   multicast router for any other nodes in the multicast group.  If this
   is the case, it may broadcast an MINV message without the next hop
   extension and with the Destination IP Address set to the IP address
   of the multicast group to prune itself from the tree.  Similarly,
   if the node receiving this message is not a member of the multicast
   group and does not have any other nodes routing through it, it may
   send its own MINV message up the tree.


8.6. Repairing Link Breakages

   When a link breakage is detected between two nodes on the multicast
   tree, the node upstream of the break (i.e.  the node which is further
   from the multicast grouphead) is responsible for initiating the
   repair of the broken link.  In order to build the route back up, this
   node will broadcast a RREQ with destination IP address set to the IP
   address of the grouphead and with the J flag set.  The destination
   sequence number of the RREQ is the last known sequence number of the
   multicast group.  The Multicast Group Hop Count field is set to the
   distance of the source node from the multicast grouphead.  Only a
   node which has a hop count for the multicast group smaller than the
   indicated value can respond.  This hop count requirement is included
   to prevent nodes on the same side of the break as the node initiating
   the repair from replying to the RREQ. The RREQ is broadcast using an
   expanding rings search.  Because of the high probability that other
   nearby nodes can be used to rebuild the route to the grouphead, the
   original RREQ is broadcast with a TTL (time to live) field value
   equal to the Multicast Group Hop Count.  In this way, the effects of
   the link breakage may be localized.  If no reply is received within
   RREP_WAIT_TIME seconds, the RREQ will be rebroadcast with a larger
   TTL value, and so on until the message is broadcast across the entire
   network or until the route is rebuilt.  Any node that is a part of
   the multicast tree and which had a multicast group hop count smaller
   than that contained in the RREQ can return an RREP. If there is more
   than one RREP received at the originating node, route deletions occur
   as described in the previous section.

   If no response is received after RREQ_RETRIES broadcasts, it can be
   assumed that the network has become partitioned and the multicast
   tree cannot be repaired at this time.  In this situation, the
   node which had initiated the route rebuilding becomes the new
   multicast grouphead for its part of the multicast tree partition.
   It broadcasts a RREP with an infinity metric and with the multicast
   group address extension field containing the corresponding multicast



Perkins, Royer            Expires 10 February 1999             [Page 20]

Internet Draft                    AODV                    10 August 1998


   group IP address included.  All nodes receiving this RREP update
   their Request Tables to indicate the new grouphead information.
   Nodes which are a part of the multicast group also update the
   grouphead information for that group in their Multicast Route Table
   to indicate the new grouphead.  All nodes will change the information
   in their hello messages to reflect this update.

   In the event that the link break could not be repaired, the multicast
   tree will remain partitioned until the two parts of the network
   become connected once again.  A node from one partition of the
   network will know that it has come into contact with a node from
   the other side of the network by noting the difference in the hello
   message multicast group information.  The node who is a part of the
   network partition with the lower grouphead IP address will initiate
   the tree repair.  It will unicast a RREQ message with the R flag set
   back to the multicast grouphead of its partition in order to get
   permission to rebuild the tree.  The node must seek permission to
   rebuild the tree in order to prevent multiple nodes from attempting
   to rebuild the tree if contact between the two partitions is
   re-established in more than one place.  Multiple repairs would create
   loops within the multicast tree.  Additionally, since the node
   initiating the repair is not necessarily a multicast tree member, it
   may itself have become disconnected from the multicast grouphead on
   its side of the partition, and so the lack of reply will prevent it
   from attempting to repair the tree.  The grouphead is the only node
   which can respond to an RREQ with the R flag set.  It will respond to
   the request by sending an RREP granting permission to one and only
   one node to rebuild the tree.  Any nodes which requested permission
   and which do not receive an RREP will time out and not attempt the
   repair.  As the RREP travels back to the node, it will establish a
   multicast tree branch if one did not already exist.  After receiving
   the RREP, the node which sent the repair request will unicast a RREQ
   to the grouphead of the other network partition, using the node it
   had received the hello message from as the next hop.  This RREQ will
   contain the current value of the partitions multicast group sequence
   number.  Upon receiving the RREQ, the multicast grouphead will take
   the larger of its and the received multicast group sequence number,
   increment this value by one, and respond with a RREP. As the RREP
   is propagated back to the source node, a branch on to the multicast
   tree is added.  When the initiating node receives the RREP, it will
   broadcast across the network an RREP with an infinity metric and the
   multicast group address extension field containing the corresponding
   multicast group IP address, and with the multicast grouphead IP
   address and multicast group sequence number fields set to show the
   updated information.  All nodes receiving this RREP (i.e.  the entire
   connected portion of the network), will have the updated multicast
   group information for that group.  The node which was the grouphead
   of the other partition will also note this message and update its




Perkins, Royer            Expires 10 February 1999             [Page 21]

Internet Draft                    AODV                    10 August 1998


   tables to indicate that the other grouphead is now the multicast
   grouphead for the entire network.


8.7. Initiating Triggered Route Replies

   A node can trigger an unsolicited RREP if it has an entry in its
   Request Table for a multicast group, sends a RREQ to join the
   multicast group, and after RREQ_RETRIES times does not receives a
   response.  The node will then become the new multicast grouphead, and
   it will broadcast a RREP with infinity metric and with the multicast
   group / grouphead extension information set to reflect that it is
   now the grouphead for the multicast group.  In addition, in order to
   ensure nodes maintain consistent and up-to-date information about
   who the multicast groupheads are, any node which is a grouphead for
   a multicast group will broadcast an unsolicited RREP containing its
   IP Address and the multicast group IP address for which it is the
   grouphead across the network every RREP_UPDATE seconds.  The contents
   of the RREP fields are set as follows:

      L           0

      Hop Count   65,535

      Destination IP Address
                  The IP Address of the node sending the RREP.

      Destination Sequence Number
                  One plus the destination sequence number recorded in
                  the route.

      Multicast Group IP Address
                  The IP Address of the Multicast Group of which the
                  node just became the grouphead.

      Multicast Grouphead IP Address
                  The IP Address of the new Multicast Grouphead, i.e.
                  the node sending the RREP.

      Multicast Group Sequence Number
                  The Sequence Number of the multicast group, as set by
                  the new multicast grouphead.


9. Configuration Parameters

   This section gives default values for some important values
   associated with AODV protocol operations.




Perkins, Royer            Expires 10 February 1999             [Page 22]

Internet Draft                    AODV                    10 August 1998


      ACTIVE_ROUTE_TIMEOUT   3000

      ALLOWED_HELLO_LOSS     2

      BAD_LINK_LIFETIME      2 * RREP_WAIT_TIME

      BCAST_ID_SAVE          3000

      HELLO_INTERVAL         1000

      NET_DIAMETER           35

      NODE_TRAVERSAL_TIME    40

      MY_ROUTE_TIMEOUT       6000

      REV_ROUTE_LIFE         RREP_WAIT_TIME

      RREP_UPDATE            5000

      RREP_WAIT_TIME         3 * NODE_TRAVERSAL_TIME * NET_DIAMETER / 2

      RREQ_RETRIES           3

   Note that the network may contain more than NET_DIAMETER ** 2 nodes.
   NET_DIAMETER measures the number of "cells" (typically wireless) that
   would have to be placed end to end in order to cover the area of the
   network.
























Perkins, Royer            Expires 10 February 1999             [Page 23]

Internet Draft                    AODV                    10 August 1998


10. Extensions

   RREQ, RREP, and MINV messages may have further extensions defined
   in future versions of the protocol.  These extensions will have the
   following format:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |     type-specific data ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   where:

      Type     xx

      Length   The length of the type-specific data, not including the
               Type and Length fields of the extension.

   Extensions with types between 128 and 255 may NOT be skipped.  The
   rules for extensions will be spelled out more fully, and conform with
   the rules for handling IPv6 options.


11. Security Considerations

   Currently, AODV does not specify any special security measures.
   Route protocols, however, are prime targets for impersonation
   attacks, and must be protected by use of authentication techniques
   involving generation of unforgeable and cryptographically strong
   message digests or digital signatures.  It is expected that, in
   environments where security is an issue, that IPSec authentication
   headers will be deployed along with the necessary key management to
   distribute keys to the members of the ad hoc network using AODV.


















Perkins, Royer            Expires 10 February 1999             [Page 24]

Internet Draft                    AODV                    10 August 1998


References

   [1] S. Bradner.  Key Words for Use in RFCs to Indicate Requirement
       Levels.  RFC 2119, March 1997.

   [2] Charles E. Perkins.  Terminology for Ad-Hoc Networking.
       draft-ietf-manet-terms-00.txt, November 1997.  (work in
       progress).


Author's Address

   Questions about this memo can be directed to:

      Charles E. Perkins
      Sun Microsystems
      901 San Antonio Rd.
      Palo Alto, CA 94303
      USA
      1 650 786 6464
      1 650 786 6445 (fax)
      cperkins@eng.sun.com


      Elizabeth M. Royer
      Dept of Electrical and Computer Engineering
      University of California, Santa Barbara
      Santa Barbara, CA 93106
      1 805 893 7788
      1 805 893 3262 (fax)
      eroyer@alpha.ece.ucsb.edu





















Perkins, Royer            Expires 10 February 1999             [Page 25]



