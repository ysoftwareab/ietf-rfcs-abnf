cInput = Generate(m)
req = cInput.req

                                 req
                         ------------------->

serverResp = Issue(pkS, skS, req)

tokens = Process(pkS, cInput, issueResp)
token = store[Issue.id].pop()
req = Redeem(token, info)

                                  req
                           ------------------>

                                  if (dsIdx.includes(req.data)) {
                                    raise ERR_DOUBLE_SPEND
                                  }
resp = Verify(pkS, skS, req)
tokens = []
blindedTokens = []
x = random_bytes()
Ev = Evaluate(skS, pkS, req)
unblindedTokens = Unblind(pkS, input.data, input.req, resp)
redemptionTokens = []
rt = RedemptionToken { data: input.data, issued: bt }
tag = Finalize(token.data, token.issued, info)
resp = VerifyFinalize(skS, pkS, req.data, req.info, req.tag)
