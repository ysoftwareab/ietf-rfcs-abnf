asterisk = %x2A ; "*"
dash = %x2D ; "-"
dot = %x2E ; "."
underscore = %x5F ; "_"
ANY = asterisk dot ; "*."
dns-char = ALPHA / DIGIT / dash
id-prefix = ALPHA / DIGIT
label = id-prefix [*61dns-char id-prefix]
sldn = label dot label
base-char = (dns-char / underscore)
domain = *(label dot) sldn
tpa-label = base32( sha-1( lcase(signing-domain)))

              +--------+------------------------------------+
              |   Tag  | Function                           |
              +--------+------------------------------------+
              | scope= | Authorization Scope List (as-list) |
              |  tpa=  | Authorized Domains List (ad-list)  |
              |   g=   | Local-part restriction             |
              +--------+------------------------------------+

                           TPA-label Policy Tags

scope= Authorization Scope List (Optional).  This tag defines a list
scope = "F" / "F-i" / "O" / "O-i" / "M" / "M-i" / "NO-TPA"
as-list = "scope" [WSP] "=" [WSP] scope 0*([WSP] ":" [WSP] scope)

tpa= Authorized Signing Domain list (Optional).  This tag repeats all
ad = [ANY] domain
ad-list = "tpa" [WSP] "=" [WSP] ad 0*([WSP] ":" [WSP] ad)




g= Granularity of the TPA authorization (plain-text; OPTIONAL,
tpa-g-tag-lpart = [dot-atom-text] ["*" [dot-atom-text] ]


ret_val = in_mode = out_mode = verbose = done = 0;
len = 0;

in_mode = 1;          /* input from file */
out_mode = 1;         /* out to time */
verbose = 1;
in_file = stdin;
out_file = stdout;
ch = 0;
ch = 0;
len = i;         /* string length */
done = 1;
b_5 =  (unsigned long long) sha_res[(i * 5)] << 32;
ret_val = 6;
ret_val = 7;
