
TN3270E Working Group                                      Thomas Brawn
Internet Draft: <draft-ietf-tn3270e-ohio-00.txt>        IBM Corporation
Expiration Date: tbd                                       Stephen Gunn
                                                 Attachmate Corporation

                Open Host Interface Objects for TN3270E

Status of this Memo

   This document is an Internet-Draft.  Internet-Drafts are working
   documents of the Internet Engineering Task Force (IETF), its Areas,
   and its Working Groups.  Note that other groups may also distribute
   working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six
   months and may be updated, replaced, or obsoleted by other documents
   at any time.  It is inappropriate to use Internet-Drafts as
   reference material or to cite them other than as "work in
   progress."

   To view the entire list of current Internet-Drafts, please check
   the "lid-abstracts.txt" listing contained in the Internet-Drafts
   Shadow Directories on ftp.is.co.za (Africa), ftp.nordu.net
   (Northern Europe), ftp.nis.garr.it (Southern Europe), munnari.oz.au
   (Pacific Rim), ftp.ietf.org (US East Coast), or ftp.isi.edu (US
   West Coast).

Abstract

The purpose of this memo is to define an object oriented interface to
TN3270E.


Brawn & Gunn                 Informational                      çPage 1Ÿ

Ohio-00              Open Host Interface Objects          September 1998


Copyright Notice

   Copyright (C) The Internet Society (1997).  All Rights Reserved.

Table of Contents

   1.0 Introduction...................................................2
   2.0 Object Definitions.............................................3
   2.1 Ohio...........................................................3
   2.2 OhioField......................................................5
   2.3 OhioFields.....................................................5
   2.4 OhioManager....................................................6
   2.5 OhioOIA........................................................6
   2.6 OhioPosition...................................................7
   2.7 OhioScreen.....................................................7
   2.8 OhioSession....................................................7
   2.9 OhioSessions...................................................8
   3.0 Acknowledgements...............................................8
   4.0 References.....................................................9
   5.0 How to Contact the Authors.....................................9
   Appendix A - Ohio Java Mapping....................................10
   Appendix B - Ohio ActiveX IDL Mapping.............................16
   Appendix C - Sendkeys Mnemonics...................................27


1.0 Introduction
   The following is the Ohio containment hierarchy:
      OhioManager:  Contains one:
         OhioSessions:  Contains a collection of:
            OhioSession:  Contains one:
               OhioScreen:  Contains one of each of:
               OhioOIA:  The operator information area
               OhioFields:  Contains a collection of:
                  OhioField:  A field in the presentation space

   The Ohio inheritance hierarchy is:
      Ohio:  Base class
         OhioManager
         OhioSessions
         OhioSession
         OhioScreen
         OhioOIA
         OhioFields
         OhioField


Brawn & Gunn                 Informational                      çPage 2Ÿ

Ohio-00              Open Host Interface Objects          September 1998


2.0 Object Definitions

   OMG IDL Version 2.1 is used to define the following objects.  For a
   mapping of the IDL to Java, see Appendix A - Ohio Java Mapping.  For
   a mapping of the IDL to ActiveX IDL, see Appendix B - Ohio ActiveX
   IDL Mapping.

   Note:  "1" based counting is used throughout this standard for both
   positions (the first position on the screen is position 1, not
   position 0) and sizes (the first item in a collection is item 1, not
   item 0).


2.1 Ohio

   Interface Ohio {

      // Properties
      Readonly enum OHIO_DIRECTION {
         OHIO_DIRECTION_FORWARD,
         OHIO_DIRECTION_BACKWARD
      };

      Readonly enum OHIO_TYPE {
         OHIO_TYPE_UNKNOWN,
         OHIO_TYPE_3270,
         OHIO_TYPE_5250,
         OHIO_TYPE_VT
      };

      Readonly enum OHIO_STATE {
        OHIO_STATE_DISCONNECTED,
        OHIO_STATE_CONNECTED
      };

      Readonly enum OHIO_PLANE {
         OHIO_PLANE_TEXT,
         OHIO_PLANE_COLOR,
         OHIO_PLANE_FIELD,
         OHIO_PLANE_EXTENDED
      };



Brawn & Gunn                 Informational                      çPage 3Ÿ

Ohio-00              Open Host Interface Objects          September 1998


      Readonly enum OHIO_COLOR {
         OHIO_COLOR_BLACK,
         OHIO_COLOR_BLUE,
         OHIO_COLOR_GREEN,
         OHIO_COLOR_CYAN,
         OHIO_COLOR_RED,
         OHIO_COLOR_MAGENTA,
         OHIO_COLOR_WHITE,
         OHIO_COLOR_YELLOW
      };

      Readonly enum OHIO_EXTENDED {
         OHIO_EXTENDED_HILITE,
         OHIO_EXTENDED_COLOR,
         OHIO_EXTENDED_RESERVED,
         OHIO_EXTENDED_HILITE_NORMAL,
         OHIO_EXTENDED_HILITE_BLINK,
         OHIO_EXTENDED_HILITE_REVERSEVIDEO,
         OHIO_EXTENDED_HILITE_UNDERSCORE,
         OHIO_EXTENDED_COLOR_DEFAULT,
         OHIO_EXTENDED_COLOR_BLUE,
         OHIO_EXTENDED_COLOR_RED,
         OHIO_EXTENDED_COLOR_PINK,
         OHIO_EXTENDED_COLOR_GREEN,
         OHIO_EXTENDED_COLOR_TURQUOISE,
         OHIO_EXTENDED_COLOR_YELLOW,
         OHIO_EXTENDED_COLOR_WHITE
      };

      Readonly enum OHIO_FIELD {
         OHIO_FIELD_ATTRIBUTE,
         OHIO_FIELD_PROTECTED,
         OHIO_FIELD_NUMERIC,
         OHIO_FIELD_PEN_SELECTABLE,
         OHIO_FIELD_HIGH_INTENSITY,
         OHIO_FIELD_HIDDEN,
         OHIO_FIELD_RESERVED,
         OHIO_FIELD_MODIFIED
      };

      Readonly enum OHIO_UPDATE {
         OHIO_UPDATE_HOST,
         OHIO_UPDATE_CLIENT
      };


Brawn & Gunn                 Informational                      çPage 4Ÿ

Ohio-00              Open Host Interface Objects          September 1998


      Readonly enum OHIO_OWNER {
         OHIO_OWNER_UNKNOWN,
         OHIO_OWNER_APP,
         OHIO_OWNER_MYJOB,
         OHIO_OWNER_NVT,
         OHIO_OWNER_UNOWNED,
         OHIO_OWNER_SSCP
      };

      Readonly enum OHIO_INPUTINHIBITED {
         OHIO_INPUTINHIBITED_NOTINHIBITED,
         OHIO_INPUTINHIBITED_SYSTEM_WAIT,
         OHIO_INPUTINHIBITED_COMMCHECK,
         OHIO_INPUTINHIBITED_PROGCHECK,
         OHIO_INPUTINHIBITED_MACHINECHECK,
         OHIO_INPUTINHIBITED_OTHER
      };

   };


2.2 OhioField

   Interface OhioField {

      // Properties
      Readonly OhioPosition Start;
      Readonly OhioPosition End;
      Readonly long Length;
      Readonly boolean Modified;
      Readonly boolean Protected;
      Readonly boolean Numeric;
      Readonly boolean HighIntensity;
      Readonly boolean PenSelectable;
      Readonly boolean Hidden;
      Readonly boolean Normal;
      Read/Write string Text;
      Readonly OHIO_FIELD Attribute;

      // Methods
      byte çŸ GetData(OHIO_PLANE);

   };


2.3 OhioFields

   Interface OhioFields {


Brawn & Gunn                 Informational                      çPage 5Ÿ

Ohio-00              Open Host Interface Objects          September 1998


      // Properties
      Readonly long count;

      // Methods
      OhioField Item(long);
      Void Refresh();
      OhioField FindByString(string target, OhioPosition start,
         OhioPosition end, OHIO_DIRECTION direction,
         boolean IgnoreCase);
      OhioField FindByPosition(OhioPosition);

   };


2.4 OhioManager

   Interface OhioManager {

      // Properties
      OhioSessions Sessions;

      // Methods
      OhioSession FindSession(string configurationResource,
                              string sessionName);

   };


2.5 OhioOIA

   Interface OhioOIA {

      // Properties
      Readonly boolean Alphanumeric;
      Readonly boolean APL;
      Readonly boolean Numeric;
      Readonly boolean InsertMode;
      Readonly OHIO_OWNER owner;
      Readonly OHIO_INPUTINHIBITED InputInhibited;
      Readonly long ProgCheckCode;
      Readonly long CommCheckCode;
      Readonly long MachineCheckCode;

      // Methods

      // Events
      OIAChanged()

   };


Brawn & Gunn                 Informational                      çPage 6Ÿ

Ohio-00              Open Host Interface Objects          September 1998


2.6 OhioPosition

   Interface OhioPosition {

      // Properties
      long Row;
      long Column;

   };


2.7 OhioScreen

   Interface OhioScreen {

      // Properties
      Readonly Attribute OhioPosition Cursor; // Position of cursor
      Readonly Attribute OhioOIA OIA; // OIA object for this Screen
      Readonly Attribute OhioFields Fields; // Collection of fields
      Readonly Attribute long Rows; // Number of rows in Screen
      Readonly Attribute long Columns; // Number of columns in Screen
      Readonly Attribute string Text; // Entire Screen as text string

      // Methods
      bytes çŸ  GetData(long BuffLen, OhioPosition Start,
                        OhioPosition End, OHIO_PLANE Plane);
      OhioPosition FindString(string text, OhioPosition Start,
                              OhioPosition End, PS_DIR Dir,
                              boolean IgnoreCase);
      void SendKeys(string text, OhioPosition insertPosition);
      void PutString(string text, OhioPosition insertLocation);

      // Events
      CursorMoved(cursor position)
      ScreenChanged(screen delta, OHIO_UPDATE, OhioPosition pos,
                    OhioPosition  pos);
      SizeChanged - tbd

   };


2.8 OhioSession

   Interface OhioSession {


Brawn & Gunn                 Informational                      çPage 7Ÿ

Ohio-00              Open Host Interface Objects          September 1998


      // Properties
      Readonly string configurationResource;
      Readonly  string sessionName;
      Readonly OHIO_TYPE sessionType;
      Readonly OHIO_STATE connected;
      Readonly OhioScreen Screen;

      // Methods
      void Connect();
      void Disconnect();

      // Events
      SessionChanged(OHIO_UPDATE);

   };


2.9 OhioSessions

   Interface OhioSessions{

      // Properties
      long count;

      // Methods
      OhioSession Item(long);
      OhioSession Item(string);
      Void Refresh();

      // Events

};


3.0 Acknowledgments
   This document is a product of the TN3270E Working Group.

   The authors wish to thank the following individuals for their
   contributions to this standard:
      Mark McMillan, IBM Corporation
      Hemant Nanivadekar, Attachmate Corporation
      J. Burke Ryder, Attachmate Corporation
      Blair Cooper, Attachmate Corporation
      Brian L. Henry, Attachmate Corporation


Brawn & Gunn                 Informational                      çPage 8Ÿ

Ohio-00              Open Host Interface Objects          September 1998


4.0 References
   1) International Business Machines Corporation, "eNetwork Personal
      Communications Version 4.2 for Windows 95 and Windows NT Host
      Access Class Library", September 1997.
   2) International Business Machines Corporation, "Host On-Demand
      Version 2.0 Host Access Class Library for Java Reference",
      October 1997.
   3) Attachmate Corporation, "EXTRA! Objects SDK Reference Guide for
      C++", October 1997.


5.0 How to Contact the Authors
   Thomas Brawn
   IBM Corporation
   4205 S. Miami Blvd
   RTP, NC  27709
   e-mail:  brawntj@us.ibm.com
   phone:  919-254-8301

   Stephen Gunn
   Attachmate Corporation
   3617 131st Ave. S.E.
   Bellevue, Washington  98006
   e-mail:  stevegu@attachmate.com
   phone:  425-649-6221


Brawn & Gunn                 Informational                      çPage 9Ÿ

Ohio-00              Open Host Interface Objects          September 1998


Appendix A - Ohio Java Mapping


//
//
// Ohio -- Base interface for all Ohio Interfaces
//
//
public interface Ohio
{
   public Object getVendor();

   // enum OHIO_DIRECTION
   public static final int OHIO_DIRECTION_FORWARD  = 0;
   public static final int OHIO_DIRECTION_BACKWARD = 1;

   // enum OHIO_TYPE -- used by OHIOSession.SessionType
   public static final int OHIO_TYPE_UNKNOWN = 0;
   public static final int OHIO_TYPE_3270    = 1;
   public static final int OHIO_TYPE_5250    = 2;
   public static final int OHIO_TYPE_VT      = 3;

   // enum OHI_STATE -- used by OHIOSessionEvents.onSessionChanged
   public static final int OHIO_STATE_DISCONNECTED = 0;
   public static final int OHIO_STATE_CONNECTED    = 1;

   // enum OHIO_PLANE - used by OHIOScreen.getData
   public static final int OHIO_PLANE_TEXT     = 1;
   public static final int OHIO_PLANE_COLOR    = 2;
   public static final int OHIO_PLANE_FIELD    = 4;
   public static final int OHIO_PLANE_EXTENDED = 8;

   // type OHIO_COLOR - used by OHIOScreen.getData(COLOR)
   public static final int OHIO_COLOR_BLACK   = 0;
   public static final int OHIO_COLOR_BLUE    = 1;
   public static final int OHIO_COLOR_GREEN   = 2;
   public static final int OHIO_COLOR_CYAN    = 3;
   public static final int OHIO_COLOR_RED     = 4;
   public static final int OHIO_COLOR_MAGENTA = 5;
   public static final int OHIO_COLOR_WHITE   = 7;
   public static final int OHIO_COLOR_YELLOW  = 14;

   // OHIO_EXTENDED  -- used by OhioScreen.getData(EXTENDED)
   public static final int OHIO_EXTENDED_HILITE   = 0xC0;
   public static final int OHIO_EXTENDED_COLOR    = 0x38;
   public static final int OHIO_EXTENDED_RESERVED = 0x07;


Brawn & Gunn                 Informational                     çPage 10Ÿ

Ohio-00              Open Host Interface Objects          September 1998


   // OHIO_EXTENDED >> 6
   public static final int OHIO_EXTENDED_HILITE_NORMAL       = 0;
   public static final int OHIO_EXTENDED_HILITE_BLINK        = 1;
   public static final int OHIO_EXTENDED_HILITE_REVERSEVIDEO = 2;
   public static final int OHIO_EXTENDED_HILITE_UNDERSCORE   = 3;

   // (OHIO_EXTENDED>>3) & 7
   public static final int OHIO_EXTENDED_COLOR_DEFAULT   = 0;
   public static final int OHIO_EXTENDED_COLOR_BLUE      = 1;
   public static final int OHIO_EXTENDED_COLOR_RED       = 2;
   public static final int OHIO_EXTENDED_COLOR_PINK      = 3;
   public static final int OHIO_EXTENDED_COLOR_GREEN     = 4;
   public static final int OHIO_EXTENDED_COLOR_TURQUOISE = 5;
   public static final int OHIO_EXTENDED_COLOR_YELLOW    = 6;
   public static final int OHIO_EXTENDED_COLOR_WHITE     = 7;

   // type OHIO_FIELD -- used by OhioScreen.getData(FIELD)
   public static final int OHIO_FIELD_ATTRIBUTE      = 0xC0;
   public static final int OHIO_FIELD_PROTECTED      = 0x20;
   public static final int OHIO_FIELD_NUMERIC        = 0x10;
   public static final int OHIO_FIELD_PEN_SELECTABLE = 0x08;
   public static final int OHIO_FIELD_HIGH_INTENSITY = 0x04;
   public static final int OHIO_FIELD_HIDDEN         = 0x0C;
   public static final int OHIO_FIELD_RESERVED       = 0x02;
   public static final int OHIO_FIELD_MODIFIED       = 0x01;

   // enum OHIO_UPDATE - used by OhioScreenEvents.onScreenChanged
   public static final int OHIO_UPDATE_HOST   = 0;
   public static final int OHIO_UPDATE_CLIENT = 1;

   // enum OHIO_OWNER -- used by OhioOIA.owner
   public static final int OHIO_OWNER_UNKNOWN  = 0;
   public static final int OHIO_OWNER_APP      = 1;
   public static final int OHIO_OWNER_MYJOB    = 1;
   public static final int OHIO_OWNER_NVT      = 2;
   public static final int OHIO_OWNER_UNOWNED  = 3;
   public static final int OHIO_OWNER_SSCP     = 4;

   // enum OHIO_INPUTINHIBITED - used by OhioOIA.InputInhibited
   public static final int OHIO_INPUTINHIBITED_NOTINHIBITED  = 0;
   public static final int OHIO_INPUTINHIBITED_SYSTEM_WAIT   = 1;
   public static final int OHIO_INPUTINHIBITED_COMMCHECK     = 2;
   public static final int OHIO_INPUTINHIBITED_PROGCHECK     = 3;
   public static final int OHIO_INPUTINHIBITED_MACHINECHECK  = 4;
   public static final int OHIO_INPUTINHIBITED_OTHER         = 5;
}

public interface OhioManager
{


Brawn & Gunn                 Informational                     çPage 11Ÿ

Ohio-00              Open Host Interface Objects          September 1998


   // Properties
   public OhioSessions getSessions();

   // Methods
   public OhioSession findSession(String configurationResource,
                                  String sessionName);

}

public interface OhioSessions extends Ohio
{

   // Properties
   public int getCount();

   // Methods
   public OhioSession Item(int sessionNumber);
   public OhioSession Item(String sessionName);
   public void refresh();

}

public interface OhioSession extends Ohio
{

   // Properties
   public String getConfigurationResource();
   public boolean isConnected();
   public String getSessionName();
   public int getSessionType();
   public OhioScreen Screen;

   // Methods
   public void connect();
   public void disconnect();

   // Events
   public void addSessionListener(OHIOSessionListener listener);
   public void removeSessionListener(OHIOSessionListener listener);
}

public interface OhioScreen extends Ohio {

   // Properties
   public OhioPosition getCursor();
   public void setCursor(OhioPosition position);
   public OhioOIA getOIA();
   public OhioFields getFields();
   public int getRows();


Brawn & Gunn                 Informational                     çPage 12Ÿ

Ohio-00              Open Host Interface Objects          September 1998


   public int getColumns();
   public String getText();

   // Methods
   public byteçŸ getData(OhioPosition start,
                         OhioPosition end,
                         int plane);
   public OhioPosition findString(String text,
                                  OhioPosition start,
                                  OhioPosition end,
                                  int direction,
                                  boolean ignoreCase);
   public void sendKeys(String text,
                        OhioPosition location);
   public void putString(String text,
                         OhioPosition location);

   // Events
   public void addScreenListener(OHIOScreenListener listener);
   public void removeScreenListener(OHIOScreenListener listener);

}

public interface OhioScreenListener
{
   public void onScreenChanged(int inUpdate,
                               OhioPosition inStart,
                               OhioPosition inEnd);

}

public interface OhioOIA extends Ohio
{

   // Properties
   public boolean isAlphanumeric();
   public boolean isAPL();
   public int getCommCheckCode();
   public int getInputInhibited(); // Uses OHIO_INPUT_INHIBITED
   public int getMachineCheckCode();
   public boolean isNumeric();
   //public boolean isInsertMode();
   public int getOwner();          // Uses OHIO_OWNER
   public int getProgCheckCode();

   // Methods


Brawn & Gunn                 Informational                     çPage 13Ÿ

Ohio-00              Open Host Interface Objects          September 1998


   // Events
   public void addOIAListener(OhioOIAListener listener);
   public void removeOIAListener(OhioOIAListener listener);

}

public interface OhioOIAListener
{
   public void onOIAChanged();
}

public interface OhioFields extends Ohio
{

   // Properties
   public int getCount();

   // Methods
   public OhioField Item(int fieldIndex);
   public void refresh();
   public OhioField findByString(String targetString,
                                 OhioPosition startPos,
                                 OhioPosition endPos,
                                 int dir, // Uses OHIO_DIRECTION
                                 boolean ignoreCase);
   public OhioField findByPosition(OhioPosition targetPosition);

}

public interface OhioField extends Ohio
{

   // Properties
   public OhioPosition getStart();
   public OhioPosition getEnd();

   public int getLength();

   public int getAttribute();  // Uses OHIO_FIELD enumeration
   public boolean isModified();
   public boolean isProtected();
   public boolean isNumeric();
   public boolean isHighIntensity();
   public boolean isPenSelectable();
   public boolean isHidden();

   public String getText();
   public void setText(String text);


Brawn & Gunn                 Informational                     çPage 14Ÿ

Ohio-00              Open Host Interface Objects          September 1998


   // Methods
   public byteçŸ getData(int targetPlane);  // Uses OHIO_PLANE

}

public interface OhioPosition {
   // Properties
   public int getRow();
   public int getColumn();
   public void setRow(int);
   public void setColumn(int);

}




Brawn & Gunn                 Informational                     çPage 15Ÿ

Ohio-00              Open Host Interface Objects          September 1998


Appendix B - Ohio ActiveX IDL Mapping


//+--------------------------------------------------------------------+
//∫ OPEN HOST INTERFACE OBJECT (OHIO) INTERFACE DEFINITIONS            ∫
//+--------------------------------------------------------------------+
//∫  IOhioManager                Manager provides access to a...       ∫
//∫     IOhioSessions               Collection of...                   ∫
//∫        IOhioSession                Sessions, which has a...        ∫
//∫           IOhioScreen                 Screen containing an...      ∫
//∫              IOhioOIA                    OIA, and a...             ∫
//∫              IOhioFields                 Collection of...          ∫
//∫                 IOhioField                  Fields                 ∫
//∫                                                                    ∫
//∫  IOhioPosition               1-based Row/Col Position used         ∫
//∫                                                                    ∫
//+--------------------------------------------------------------------+
import "oaidl.idl";
import "ocidl.idl";

//+--------------------------------------------------------------+
//∫ OHIO DATA TYPES                                              ∫
//+--------------------------------------------------------------+
typedef çv1_enumŸ enum OHIO_DIRECTION
{
   OHIO_DIRECTION_FORWARD                       = 0,
   OHIO_DIRECTION_BACKWARD                      = 1

} OHIO_DIRECTION;

//+---------------------------------------------+
//∫ SESSION DATA TYPES                          ∫
//+---------------------------------------------+
typedef çv1_enumŸ enum OHIO_TYPE
{
   OHIO_TYPE_UNKNOWN                            = 0,
   OHIO_TYPE_3270                               = 1,
   OHIO_TYPE_5250                               = 2,
   OHIO_TYPE_VT                                 = 3

} OHIO_TYPE; // USED BY IOhioSession.SessionType

typedef çv1_enumŸ enum OHIO_STATE
{
   OHIO_STATE_DISCONNECTED                      = 0,
   OHIO_STATE_CONNECTED                         = 1

} OHIO_STATE; //USED BY IOhioSessionEvents.OnSessionChanged


Brawn & Gunn                 Informational                     çPage 16Ÿ

Ohio-00              Open Host Interface Objects          September 1998


//+---------------------------------------------+
//∫ SCREEN DATA TYPES                           ∫
//+---------------------------------------------+
typedef çv1_enumŸ enum OHIO_PLANE
{
   OHIO_PLANE_TEXT                              = 1,
   OHIO_PLANE_COLOR                             = 2,
   OHIO_PLANE_FIELD                             = 4,
   OHIO_PLANE_EXTENDED                          = 8

} OHIO_PLANE; //USED BY IOhioScreen.GetData

typedef long OHIO_COLOR; //USED BY IOhioScreen.GetData(COLOR)
const   long OHIO_COLOR_BLACK                   = 0;
const   long OHIO_COLOR_BLUE                    = 1;
const   long OHIO_COLOR_GREEN                   = 2;
const   long OHIO_COLOR_CYAN                    = 3;
const   long OHIO_COLOR_RED                     = 4;
const   long OHIO_COLOR_MAGENTA                 = 5;
const   long OHIO_COLOR_WHITE                   = 7;
const   long OHIO_COLOR_YELLOW                  = 14;

typedef long OHIO_EXTENDED; //USED BY IOhioScreen.GetData(EXTENDED)
const   long OHIO_EXTENDED_HILITE               = 0xC0;
const   long OHIO_EXTENDED_COLOR                = 0x38;
const   long OHIO_EXTENDED_RESERVED             = 0x07;

//OHIO_EXTENDED>>6
const   long OHIO_EXTENDED_HILITE_NORMAL        = 0;
const   long OHIO_EXTENDED_HILITE_BLINK         = 1;
const   long OHIO_EXTENDED_HILITE_REVERSEVIDEO  = 2;
const   long OHIO_EXTENDED_HILITE_UNDERSCORE    = 3;

//(OHIO_EXTENDED>>3)&7
const   long OHIO_EXTENDED_COLOR_DEFAULT        = 0;
const   long OHIO_EXTENDED_COLOR_BLUE           = 1;
const   long OHIO_EXTENDED_COLOR_RED            = 2;
const   long OHIO_EXTENDED_COLOR_PINK           = 3;
const   long OHIO_EXTENDED_COLOR_GREEN          = 4;
const   long OHIO_EXTENDED_COLOR_TURQUOISE      = 5;
const   long OHIO_EXTENDED_COLOR_YELLOW         = 6;
const   long OHIO_EXTENDED_COLOR_WHITE          = 7;


Brawn & Gunn                 Informational                     çPage 17Ÿ

Ohio-00              Open Host Interface Objects          September 1998


typedef long OHIO_FIELD; //USED BY IOhioScreen.GetData(FIELD)
const   long OHIO_FIELD_ATTRIBUTE               = 0xC0;
const   long OHIO_FIELD_PROTECTED               = 0x20;
const   long OHIO_FIELD_NUMERIC                 = 0x10;
const   long OHIO_FIELD_PEN_SELECTABLE          = 0x08;
const   long OHIO_FIELD_HIGH_INTENSITY          = 0x04;
const   long OHIO_FIELD_HIDDEN                  = 0x0C;
const   long OHIO_FIELD_RESERVED                = 0x02;
const   long OHIO_FIELD_MODIFIED                = 0x01;

typedef çv1_enumŸ enum OHIO_UPDATE
{
   OHIO_UPDATE_HOST                             = 0,
   OHIO_UPDATE_CLIENT                           = 1,

} OHIO_UPDATE; //USED BY IOhioScreenEvents.OnScreenChanged

//+---------------------------------------------+
//∫ OIA DATA TYPES                              ∫
//+---------------------------------------------+
typedef çv1_enumŸ enum OHIO_OWNER
{
   OHIO_OWNER_UNKNOWN                          = 0,
   OHIO_OWNER_APP                              = 1,
   OHIO_OWNER_MYJOB                            = 1,
   OHIO_OWNER_NVT                              = 2,
   OHIO_OWNER_UNOWNED                          = 3,
   OHIO_OWNER_SSCP                             = 4

} OHIO_OWNER; //USED BY IOhioOIA.Owner

typedef çv1_enumŸ enum OHIO_INPUTINHIBITED
{
   OHIO_INPUTINHIBITED_NOTINHIBITED            = 0,
   OHIO_INPUTINHIBITED_SYSTEM_WAIT             = 1,
   OHIO_INPUTINHIBITED_COMMCHECK               = 2,
   OHIO_INPUTINHIBITED_PROGCHECK               = 3,
   OHIO_INPUTINHIBITED_MACHINECHECK            = 4,
   OHIO_INPUTINHIBITED_OTHER                   = 5

} OHIO_INPUTINHIBITED; //USED BY IOhioOIA.InputInhibited


Brawn & Gunn                 Informational                     çPage 18Ÿ

Ohio-00              Open Host Interface Objects          September 1998


//+--------------------------------------------------------------+
//∫ IOhio                                                        ∫
//+--------------------------------------------------------------+
//∫ Base interface for all OHIO interfaces                       ∫
//+--------------------------------------------------------------+
ç
   object,
   uuid(10065CA3-E921-11D1-B2DF-0060080708DC),
   dual,
   helpstring("IOhio Interface"),
   pointer_default(unique)
Ÿ
interface IOhio : IDispatch
{
   çid(99),propgetŸ HRESULT Vendor (çout,retvalŸ IDispatch** outValue);
}

//+--------------------------------------------------------------+
//∫ IOhioPosition                                                ∫
//+--------------------------------------------------------------+
//∫ Zero is a "don't care" value.                                ∫
//+--------------------------------------------------------------+
ç
   object,
   uuid(25BEAEFC-B795-11D1-B2D1-0060080708DC),
   dual,
   helpstring("IOhioPosition Interface"),
   pointer_default(unique)
Ÿ
interface IOhioPosition : IOhio
{
   çid(1), propputŸ HRESULT Row   (çinŸ         long   inRow   );
   çid(1), propgetŸ HRESULT Row   (çout,retvalŸ long* outRow   );

   çid(2), propputŸ HRESULT Column(çinŸ         long   inColumn);
   çid(2), propgetŸ HRESULT Column(çout,retvalŸ long* outColumn);
};

//+--------------------------------------------------------------+
//∫ IOhioOIA                                                     ∫
//+--------------------------------------------------------------+
ç
   object,
   uuid(25BEAEF2-B795-11D1-B2D1-0060080708DC),
   dual,
   helpstring("IOhioOIA Interface"),
   pointer_default(unique)
Ÿ


Brawn & Gunn                 Informational                     çPage 19Ÿ

Ohio-00              Open Host Interface Objects          September 1998


interface IOhioOIA : IOhio
{
   çid(0 ),propgetŸ HRESULT Text (çout,retvalŸ BSTR* outValue);

   çid(1 ),propgetŸ HRESULT Alphanumeric (çout,retvalŸ
                                          VARIANT_BOOL* outValue);
   çid(2 ),propgetŸ HRESULT APL (çout,retvalŸ VARIANT_BOOL* outValue);
   çid(3 ),propgetŸ HRESULT Numeric (çout,retvalŸ
                                     VARIANT_BOOL* outValue);
   çid(4 ),propgetŸ HRESULT InsertMode (çout,retvalŸ
                                        VARIANT_BOOL* outValue);

   çid(10),propgetŸ HRESULT ProgCheckCode (çout,retvalŸ
                                           long* outValue);
   çid(11),propgetŸ HRESULT CommCheckCode (çout,retvalŸ
                                           long* outValue);
   çid(12),propgetŸ HRESULT MachineCheckCode (çout,retvalŸ
                                              long* outValue);

   çid(20),propgetŸ HRESULT Owner (çout,retvalŸ
                                   OHIO_OWNER* outValue);
   çid(21),propgetŸ HRESULT InputInhibited (çout,retvalŸ
                                        OHIO_INPUTINHIBITED*  outValue);
};

ç
   object,
   uuid(45896ACE-BCF8-11D1-B2D3-0060080708DC),
   dual,
   helpstring("IOhioOIAEvents Interface"),
   pointer_default(unique)
Ÿ
interface IOhioOIAEvents : IUnknown
{
   çid(0)Ÿ HRESULT OnOIAChanged();
};

cpp_quote("EXTERN_C const IID IID_DOhioOIAEvents;")
ç
   uuid(45896AD0-BCF8-11D1-B2D3-0060080708DC),
   hidden,
   helpstring("DOhioOIAEvents Interface"),
Ÿ
dispinterface DOhioOIAEvents
{
properties:
methods:
   çid(0)Ÿ HRESULT OnOIAChanged();
};


Brawn & Gunn                 Informational                     çPage 20Ÿ

Ohio-00              Open Host Interface Objects          September 1998


//+--------------------------------------------------------------+
//∫ IOhioField                                                   ∫
//+--------------------------------------------------------------+
ç
   object,
   uuid(25BEAEF4-B795-11D1-B2D1-0060080708DC),
   dual,
   helpstring("IOhioField Interface"),
   pointer_default(unique)
Ÿ
interface IOhioField : IOhio
{
   çid(0), propputŸ HRESULT Text (çinŸ BSTR inValue);
   çid(0), propgetŸ HRESULT Text (çout,retvalŸ BSTR* outValue);

   çid(1), propgetŸ HRESULT Start (çout,retvalŸ IOhioPosition**
                                   outValue);
   çid(2), propgetŸ HRESULT End (çout,retvalŸ IOhioPosition** outValue);
   çid(3), propgetŸ HRESULT Length (çout,retvalŸ long* outValue);

   çid(10),propgetŸ HRESULT Attribute (çout,retvalŸ OHIO_FIELD*
                                       outValue);
   çid(11),propgetŸ HRESULT Modified (çout,retvalŸ VARIANT_BOOL*
                                      outValue);
   çid(12),propgetŸ HRESULT Protected (çout,retvalŸ VARIANT_BOOL*
                                       outValue);
   çid(13),propgetŸ HRESULT Numeric (çout,retvalŸ VARIANT_BOOL*
                                     outValue);
   çid(14),propgetŸ HRESULT PenSelectable (çout,retvalŸ
                                           VARIANT_BOOL* outValue);
   çid(15),propgetŸ HRESULT Hidden (çout,retvalŸ VARIANT_BOOL*
                                    outValue);
   çid(16),propgetŸ HRESULT HighIntensity (çout,retvalŸ
                                           VARIANT_BOOL* outValue);
   çid(17),propgetŸ HRESULT Normal (çout,retvalŸ VARIANT_BOOL*
                                    outValue);

   çid(30)        Ÿ HRESULT GetData (çinŸ OHIO_PLANE
                                 inPlane,çout,retvalŸ VARIANT* outData);
};


Brawn & Gunn                 Informational                     çPage 21Ÿ

Ohio-00              Open Host Interface Objects          September 1998


//+--------------------------------------------------------------+
//∫ IOhioFields                                                  ∫
//+--------------------------------------------------------------+
ç
   object,
   uuid(25BEAEFA-B795-11D1-B2D1-0060080708DC),
   dual,
   helpstring("IOhioFields Interface"),
   pointer_default(unique)
Ÿ
interface IOhioFields : IOhio
{
   çid(0), propgetŸ HRESULT Item (çinŸ long inIndexOrKey,çout,retvalŸ
                                  IOhioField** outElement);
   çid(1), propgetŸ HRESULT Count (çout,retvalŸ long *pVal);
   çid(10)        Ÿ HRESULT Refresh ();

   çid(20)        Ÿ HRESULT FindByPosition (çinŸ IOhioPosition*
                         inPosition,çout,retvalŸ IOhioField** outField);
   çid(21)        Ÿ HRESULT FindByString (çinŸ BSTR inString,
                                    çinŸ IOhioPosition* inStart,
                                    çinŸ IOhioPosition* inEnd,
                                    çinŸ OHIO_DIRECTION inDir,
                                    çinŸ VARIANT_BOOL inIgnoreCase,
                                    çout,retvalŸ IOhioField** outField);

   çid(DISPID_NEWENUM),propget,restricted Ÿ HRESULT
                              _NewEnum(çout,retvalŸ IUnknown** outEnum);
};

//+--------------------------------------------------------------+
//∫ IOhioScreen                                                  ∫
//+--------------------------------------------------------------+
ç
   object,
   uuid(25BEAEEE-B795-11D1-B2D1-0060080708DC),
   dual,
   helpstring("IOhioScreen Interface"),
   pointer_default(unique)
Ÿ
interface IOhioScreen : IOhio
{
   çid(0), propgetŸ HRESULT OIA (çout,retvalŸ IOhioOIA** outOIA);
   çid(1), propgetŸ HRESULT Fields (çout,retvalŸ IOhioFields** outOIA);

   çid(2), propgetŸ HRESULT Text (çout,retvalŸ BSTR* outText);


Brawn & Gunn                 Informational                     çPage 22Ÿ

Ohio-00              Open Host Interface Objects          September 1998


   çid(10),propgetŸ HRESULT Rows (çout,retvalŸ long* outRows);
   çid(11),propgetŸ HRESULT Columns (çout,retvalŸ long* outColumns);
   çid(12),propputŸ HRESULT Cursor (çinŸ IOhioPosition* inPos);
   çid(12),propgetŸ HRESULT Cursor (çout,retvalŸ IOhioPosition**
                                    outPos);

   çid(20)        Ÿ HRESULT SendKeys (çinŸ BSTR inKeys,
                                      çinŸ IOhioPosition* inPos);

   çid(22)        Ÿ HRESULT FindString (çinŸ BSTR inString,
                                        çinŸ IOhioPosition* inStart,
                                        çinŸ IOhioPosition* inEnd,
                                        çinŸ OHIO_DIRECTION inDir,
                                        çinŸ VARIANT_BOOL inIgnoreCase,
                                        çout,retvalŸ IOhioPosition**
                                           outPos);
   çid(23)        Ÿ HRESULT PutString (çinŸ BSTR inText,
                                       çinŸ IOhioPosition* inStart);

   çid(30)        Ÿ HRESULT GetData (çinŸ IOhioPosition* inStart,
                                     çinŸ IOhioPosition* inEnd,
                                     çinŸ OHIO_PLANE inPlane,
                                     çout,retvalŸ VARIANT* outData);
};

ç
   object,
   uuid(45896AC5-BCF8-11D1-B2D3-0060080708DC),
   dual,
   helpstring("IOhioScreenEvents Interface"),
   pointer_default(unique)
Ÿ
interface IOhioScreenEvents : IUnknown
{
   çid(0)Ÿ HRESULT OnScreenChanged (çinŸ OHIO_UPDATE inUpdate,
                                    çinŸ IOhioPosition* inStart,
                                    çinŸ IOhioPosition* inEnd);
};


Brawn & Gunn                 Informational                     çPage 23Ÿ

Ohio-00              Open Host Interface Objects          September 1998


cpp_quote("EXTERN_C const IID IID_DOhioScreenEvents;")
ç
   uuid(45896AC7-BCF8-11D1-B2D3-0060080708DC),
   hidden,
   helpstring("DOhioScreenEvents Interface"),
Ÿ
dispinterface DOhioScreenEvents
{
properties:
methods:
   çid(0)Ÿ HRESULT OnScreenChanged (çinŸ OHIO_UPDATE inUpdate,
                                    çinŸ IOhioPosition* inStart,
                                    çinŸ IOhioPosition* inEnd);
};

//+--------------------------------------------------------------+
//∫ IOhioSession                                                 ∫
//+--------------------------------------------------------------+
ç
   object,
   uuid(25BEAEF6-B795-11D1-B2D1-0060080708DC),
   dual,
   helpstring("IOhioSession Interface"),
   pointer_default(unique)
Ÿ
interface IOhioSession : IOhio
{
   çid(0), propgetŸ HRESULT Screen (çout,retvalŸ IOhioScreen**
                                    outScreen);

   çid(1), propgetŸ HRESULT Connected (çout,retvalŸ OHIO_STATE*
                                       outValue);
   çid(2)         Ÿ HRESULT Connect ();
   çid(3)         Ÿ HRESULT Disconnect ();

   çid(10),propgetŸ HRESULT ConfigurationResource(çout,retvalŸ BSTR*
                                                  outValue);
   çid(11),propgetŸ HRESULT SessionName (çout,retvalŸ BSTR* outValue);
   çid(12),propgetŸ HRESULT SessionType (çout,retvalŸ OHIO_TYPE*
                                         outValue);
};

ç
   object,
   uuid(45896ACA-BCF8-11D1-B2D3-0060080708DC),
   dual,
   helpstring("IOhioSessionEvents Interface"),
   pointer_default(unique)
Ÿ


Brawn & Gunn                 Informational                     çPage 24Ÿ

Ohio-00              Open Host Interface Objects          September 1998


interface IOhioSessionEvents : IUnknown
{
   çid(0)Ÿ HRESULT OnSessionChanged  (çinŸ OHIO_STATE inState);
};

cpp_quote("EXTERN_C const IID IID_DOhioSessionEvents;")
ç
   uuid(45896ACC-BCF8-11D1-B2D3-0060080708DC),
   hidden,
   helpstring("DOhioSessionEvents Interface"),
Ÿ
dispinterface DOhioSessionEvents
{
properties:
methods:
   çid(0)Ÿ HRESULT OnSessionChanged  (çinŸ OHIO_STATE inState);
};

//+--------------------------------------------------------------+
//∫ IOhioSessions                                                ∫
//+--------------------------------------------------------------+
ç
   object,
   uuid(25BEAEF8-B795-11D1-B2D1-0060080708DC),
   dual,
   helpstring("IOhioSessions Interface"),
   pointer_default(unique)
Ÿ
interface IOhioSessions : IOhio
{
   çid(0), propgetŸ HRESULT Item    (çinŸ VARIANT inIndexOrKey,
                                çout,retvalŸ IOhioSession** outElement);
   çid(1), propgetŸ HRESULT Count   (çout,retvalŸ long *pVal);
   çid(10),       Ÿ HRESULT Refresh ();

   çid(DISPID_NEWENUM),propget,restricted Ÿ HRESULT
                              _NewEnum(çout,retvalŸ IUnknown** outEnum);
};

//+--------------------------------------------------------------+
//∫ IOhioManager                                                 ∫
//+--------------------------------------------------------------+
ç
   object,
   uuid(25BEAF00-B795-11D1-B2D1-0060080708DC),
   dual,
   helpstring("IOhioManager Interface"),
   pointer_default(unique)
Ÿ


Brawn & Gunn                 Informational                     çPage 25Ÿ

Ohio-00              Open Host Interface Objects          September 1998


interface IOhioManager : IOhio
{
   çid(0), propgetŸ HRESULT Sessions     (çout,retvalŸ
                                          IOhioSessions** outSessions);

   çid(1)         Ÿ HRESULT FindSession  (çinŸ BSTR inConfigResource,
                                          çinŸ BSTR inSessionName,
                               çout,retvalŸ IOhioSession** outSession);
};


Brawn & Gunn                 Informational                     çPage 26Ÿ

Ohio-00              Open Host Interface Objects          September 1998


Appendix C - SendKeys Mnemonics

   This table contains the list of mnemonic keywords valid in the
   OhioScreen::SendKey() method.  Mnemonic keywords adhere to the
   following rules:

      1) Keywords are enclosed in square brackets "çŸ".
      2) Keywords are case insensitive (for example, çAttnŸ is
         identical to çattnŸ).
      3) Literal square brackets must be doubled.

   Example SendKey strings:

      abcçpf1Ÿ           Sends character keys "abc" followed by the
                         PF1 AID key
      çbackspaceŸççxŸŸ   Sends 3270 backspace key followed by the 3
                         characters "çxŸ"
      xyzçççCLEARŸ       Sends characters "xyzç" followed by 3270 Clear
                         AID key


+----------------+-----------------------+------------+----------------+
∫                ∫        3270           ∫  IBM HACL  ∫ Extra! Objects ∫
∫    Mnemonic    ∫ Function Description  ∫ Equivalent ∫   Equivalent   ∫
+----------------+-----------------------+------------+----------------+
∫ çattnŸ         ∫ Attention AID key     ∫ çattnŸ     ∫ <Attn>         ∫
+----------------+-----------------------+------------+----------------+
∫ çclearŸ        ∫ Clear AID key         ∫ çclearŸ    ∫ <Clear>        ∫
+----------------+-----------------------+------------+----------------+
∫ çcursorselectŸ ∫ Cursor Select AID key ∫ çcrselŸ    ∫ <CursorSelect> ∫
∫                ∫                       ∫            ∫ <PenSelect>??? ∫
+----------------+-----------------------+------------+----------------+
∫ çenterŸ        ∫ Enter AID key         ∫ çenterŸ    ∫ <Enter>        ∫
+----------------+-----------------------+------------+----------------+
∫ çsysreqŸ       ∫ System Request        ∫ çsysreqŸ   ∫ <SysReq>       ∫
+----------------+-----------------------+------------+----------------+
∫ çpa1Ÿ          ∫ Program Attention 1   ∫ çpa1Ÿ      ∫ <Pa1>          ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpa2Ÿ          ∫ Program Attention 2   ∫ çpa2Ÿ      ∫ <Pa2>          ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpa3Ÿ          ∫ Program Attention 3   ∫ çpa3Ÿ      ∫ <Pa3>          ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf1Ÿ          ∫ Program Function 1    ∫ çpf1Ÿ      ∫ <Pf1>          ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf2Ÿ          ∫ Program Function 2    ∫ çpf2Ÿ      ∫ <Pf2>          ∫
∫                ∫  AID key              ∫            ∫                ∫


Brawn & Gunn                 Informational                     çPage 27Ÿ

Ohio-00              Open Host Interface Objects          September 1998


+----------------+-----------------------+------------+----------------+
∫ çpf3Ÿ          ∫ Program Function 3    ∫ çpf3Ÿ      ∫ <Pf3>          ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf4Ÿ          ∫ Program Function 4    ∫ çpf4Ÿ      ∫ <Pf4>          ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf5Ÿ          ∫ Program Function 5    ∫ çpf5Ÿ      ∫ <Pf5>          ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf6Ÿ          ∫ Program Function 6    ∫ çpf6Ÿ      ∫ <Pf6>          ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf7Ÿ          ∫ Program Function 7    ∫ çpf7Ÿ      ∫ <Pf7>          ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf8Ÿ          ∫ Program Function 8    ∫ çpf8Ÿ      ∫ <Pf8>          ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf9Ÿ          ∫ Program Function 9    ∫ çpf9Ÿ      ∫ <Pf9>          ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf10Ÿ         ∫ Program Function 10   ∫ çpf10Ÿ     ∫ <Pf10>         ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf11Ÿ         ∫ Program Function 11   ∫ çpf11Ÿ     ∫ <Pf11>         ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf12Ÿ         ∫ Program Function 12   ∫ çpf12Ÿ     ∫ <Pf12>         ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf13Ÿ         ∫ Program Function 13   ∫ çpf13Ÿ     ∫ <Pf13>         ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf14Ÿ         ∫ Program Function 14   ∫ çpf14Ÿ     ∫ <Pf14>         ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf15Ÿ         ∫ Program Function 15   ∫ çpf15Ÿ     ∫ <Pf15>         ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf16Ÿ         ∫ Program Function 16   ∫ çpf16Ÿ     ∫ <Pf16>         ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf17Ÿ         ∫ Program Function 17   ∫ çpf17Ÿ     ∫ <Pf17>         ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf18Ÿ         ∫ Program Function 18   ∫ çpf18Ÿ     ∫ <Pf18>         ∫
∫                ∫  AID key              ∫            ∫                ∫


Brawn & Gunn                 Informational                     çPage 28Ÿ

Ohio-00              Open Host Interface Objects          September 1998


+----------------+-----------------------+------------+----------------+
∫ çpf19Ÿ         ∫ Program Function 19   ∫ çpf19Ÿ     ∫ <Pf19>         ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf20Ÿ         ∫ Program Function 20   ∫ çpf20Ÿ     ∫ <Pf20>         ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf21Ÿ         ∫ Program Function 21   ∫ çpf21Ÿ     ∫ <Pf21>         ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf22Ÿ         ∫ Program Function 22   ∫ çpf22Ÿ     ∫ <Pf22>         ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf23Ÿ         ∫ Program Function 23   ∫ çpf23Ÿ     ∫ <Pf23>         ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çpf24Ÿ         ∫ Program Function 24   ∫ çpf24Ÿ     ∫ <Pf24>         ∫
∫                ∫  AID key              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çtabŸ          ∫ Tab forward to next   ∫ çtabŸ      ∫ <Tab>          ∫
∫                ∫  unprotected field    ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çbacktabŸ      ∫ Back Tab - tab to     ∫ çbacktabŸ  ∫ <BackTab>      ∫
∫                ∫  previous unprotected ∫            ∫                ∫
∫                ∫  field                ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çupŸ           ∫ Cursor up             ∫ çupŸ       ∫ <Up>           ∫
+----------------+-----------------------+------------+----------------+
∫ çdownŸ         ∫ Cursor down           ∫ çdownŸ     ∫ <Down>         ∫
+----------------+-----------------------+------------+----------------+
∫ çrightŸ        ∫ Cursor right          ∫ çrightŸ    ∫ <Right>        ∫
+----------------+-----------------------+------------+----------------+
∫ çleftŸ         ∫ Cursor left           ∫ çleftŸ     ∫ <Left>         ∫
+----------------+-----------------------+------------+----------------+
∫ çfastupŸ       ∫ Cursor up two rows    ∫ çfastupŸ   ∫ <Up><Up>       ∫
+----------------+-----------------------+------------+----------------+
∫ çfastdownŸ     ∫ Cursor down two rows  ∫ çfastdownŸ ∫ <Down><Down>   ∫
+----------------+-----------------------+------------+----------------+
∫ çfastrightŸ    ∫ Cusor right two       ∫ çfastrightŸ∫ <Right2>       ∫
∫                ∫  positions            ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çfastleftŸ     ∫ Cursor left two       ∫ çfastleftŸ ∫ <Left2>        ∫
∫                ∫  positions            ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çhomeŸ         ∫ Home                  ∫ çhomeŸ     ∫ <Home>         ∫


Brawn & Gunn                 Informational                     çPage 29Ÿ

Ohio-00              Open Host Interface Objects          September 1998


+----------------+-----------------------+------------+----------------+
∫ çnewlineŸ      ∫ New line - move to    ∫ çnewlineŸ  ∫ <NewLine>      ∫
∫                ∫  first unprotected    ∫            ∫                ∫
∫                ∫  field on next or     ∫            ∫                ∫
∫                ∫  subsequent line      ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çresetŸ        ∫ Reset - clear         ∫ çresetŸ    ∫ <Reset>        ∫
∫                ∫  keyboard lock and    ∫            ∫                ∫
∫                ∫  clear insert mode    ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çinsertŸ       ∫ Insert mode - turns   ∫ çinsertŸ   ∫ <Insert>       ∫
∫                ∫  on insert mode for   ∫            ∫                ∫
∫                ∫  all subsequent       ∫            ∫                ∫
∫                ∫  keystrokes until     ∫            ∫                ∫
∫                ∫  çresetŸ              ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çbackspaceŸ    ∫ Destructive Backspace ∫ çbackspaceŸ∫ <Backspace>    ∫
∫                ∫  - move cursor one    ∫            ∫                ∫
∫                ∫  position left, delete∫            ∫                ∫
∫                ∫  character, shift     ∫            ∫                ∫
∫                ∫  remainder of field   ∫            ∫                ∫
∫                ∫  one position left.   ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çdeleteŸ       ∫ Delete at cursor,     ∫ çdeleteŸ   ∫ <Delete>       ∫
∫                ∫  shift remainder of   ∫            ∫                ∫
∫                ∫  field one position   ∫            ∫                ∫
∫                ∫  left                 ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çeraseinputŸ   ∫ Erase input - clear   ∫ çerinpŸ    ∫ <EraseInput>   ∫
∫                ∫  all unprotected      ∫            ∫                ∫
∫                ∫  fields               ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çeraseeofŸ     ∫ Erase from cursor to  ∫ çeraseeofŸ ∫ <EraseEOF>     ∫
∫                ∫  end of field,        ∫            ∫                ∫
∫                ∫  inclusive            ∫            ∫                ∫
+----------------+-----------------------+------------+----------------+
∫ çdupŸ          ∫ Duplicate             ∫ çdupŸ      ∫ <Dup>          ∫
+----------------+-----------------------+------------+----------------+
∫ çfieldmarkŸ    ∫ Field Mark            ∫ çfieldmarkŸ∫ <FieldMark>    ∫
+----------------+-----------------------+------------+----------------+


Brawn & Gunn                 Informational                     çPage 30Ÿ

