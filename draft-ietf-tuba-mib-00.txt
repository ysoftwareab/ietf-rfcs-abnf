
TUBA Working Group				      James West (NIST)
INTERNET-DRAFT


	       Extensions to MIB-II for	TUBA/CLNP systems

		      (draft-ietf-tuba-mib-00.txt)

	     (Posted: July 21, 1994/Expires: Jan 21, 1995)



Status of This Memo


   This	document is an Internet-Draft.	Internet-Drafts	are working
   documents of	the Internet Engineering Task Force (IETF), it's Areas,
   and it's Working Groups.  Note that other groups may	also distribute
   working documents as	Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six
   months.  Internet-Drafts may	be updated, replaced, or obsoleted by
   other documents at any time.	 It is not appropriate to use Internet-
   Drafts as reference material	or to cite them	other than as a	"working
   draft" or "work in progress."

   To learn the	status of any Internet-Draft, please check the 1id-
   abstract.txt	listing	contained in the Internet-Drafts Shadow	Direc-
   tories on nic.ddn.mil, nnsc.nsf.net,	nic.nordu.net, ftp.nisc.sri.com,
   or munnari.oz.au.



Abstract


   This	Internet Draft specifies additional MIB	elements to allow a TUBA
   End System to managed at the	same level as a	MIB-II compliant IP sys-
   tem.












West								[Page 1]





INTERNET DRAFT		     July 21, 1994	    Expires Jan	21, 1995


Contents


   Section 1.  Introduction
   Section 2.  SNMPv1 MIB
   Section 3.  SNMPv2 MIB
   References












































West								[Page 2]





INTERNET DRAFT		     July 21, 1994	    Expires Jan	21, 1995


1.  Introduction


   This	document defines additional managed objects to allow a TUBA [1]
   system to be	managed	via SNMP [2] at	the same level as a pure IPv4
   system with a SNMP and MIB-II [3].  Because all TUBA	systems	are
   expected to be dual-stack systems [4	TUBA Transition	plan] for the
   fore	seeable	future,	the objects defined in this document will exist
   on a	TUBA system with MIB-II	objects, and objects to	provide	manage-
   ment	of the CLNP [5]	entities on the	TUBA system.


   Since the Internet Community	is considering a transition from SNMPv1
   to SNMPv2 [6] these definitions of been supplied in both [7]	and [8]
   format.



2.  SNMPv1 MIB




TUBA-MIB DEFINITIONS ::= BEGIN

IMPORTS	internet, private   FROM RFC1155-SMI
	ClnpAddress FROM CLNS-MIB
	OBJECT-TYPE FROM RFC-1212;

nistPrivate OBJECT IDENTIFIER ::= { private 724	}
nistTUBAMIB OBJECT IDENTIFIER ::= { nistPrivate	1 }

tcpTUBAGroup OBJECT IDENTIFIER ::= { nistTUBAMIB 1 }
udpTUBAGroup OBJECT IDENTIFIER ::= { nistTUBAMIB 2 }

	  -- the TCP TUBA Connection table

	  -- This table	serves the same	purpose	as MIB-II's
	  -- tcpConnTable; it contains information about this
	  -- entity's existing TCP connections.	 It is expected
	  -- that a TUBA agent will instantiate	this table as well
	  -- as	the tcpConnTable in MIB-II.  A manager will have
	  -- to	access both table to get a complete picture of
	  -- the TCP connections active	on a TUBA end system.
	  --
	  -- NOTE:  This is not	a complete reproduction	of MIB-II's



West								[Page 3]





INTERNET DRAFT		     July 21, 1994	    Expires Jan	21, 1995


	  --	    TCP	group.	Many of	the objects in the TCP group
	  --	    are	not dependent on Network addresses.  This
	  --	    group only address portions	of the TCP group
	  --	    that depend	on Network addresses.
	  --

	  tcpTubaConnTable OBJECT-TYPE
	      SYNTAX  SEQUENCE OF TcpTubaConnEntry
	      ACCESS  not-accessible
	      STATUS  mandatory
	      DESCRIPTION
		      "A table containing TCP over CLNP	(TUBA)
		       connection-specific information."
	      ::= { tcpTUBAGroup 1 }

	  tcpTubaConnEntry OBJECT-TYPE
	      SYNTAX  TcpTubaConnEntry
	      ACCESS  not-accessible
	      STATUS  mandatory
	      DESCRIPTION
		      "Information about a particular current TCP
		       over CLNP connection.  An object	of this
		       type is transient, in that it ceases to
		       exist when (or soon after) the connection
		       makes the transition to the CLOSED state."
	      INDEX   {	tcpConnLocalNSAPAddress,
			tcpConnLocalPort,
			tcpConnRemNSAPAddress,
			tcpConnRemPort }
	      ::= { tcpTubaConnTable 1 }


	  TcpTubaConnEntry ::=
	      SEQUENCE {
		  tcpConnState
		      INTEGER,
		  tcpConnLocalNSAPAddress
		      ClnpAddress,
		  tcpConnLocalPort
		      INTEGER (0..65535),
		  tcpConnRemNSAPAddress
		      ClnpAddress,
		  tcpConnRemPort
		      INTEGER (0..65535)
	      }

	  tcpConnState OBJECT-TYPE
	      SYNTAX  INTEGER {



West								[Page 4]





INTERNET DRAFT		     July 21, 1994	    Expires Jan	21, 1995


			  closed(1),
			  listen(2),
			  synSent(3),
			  synReceived(4),
			  established(5),
			  finWait1(6),
			  finWait2(7),
			  closeWait(8),
			  lastAck(9),
			  closing(10),
			  timeWait(11),
			  deleteTCB(12)
		      }
	      ACCESS  read-write
	      STATUS  mandatory
	      DESCRIPTION
		      "The state of this TCP connection.

		      The only value which may be set by a management
		      station is deleteTCB(12).	 Accordingly, it is
		      appropriate for an agent to return a `badValue'
		      response if a management station attempts	to
		      set this object to any other value.

		      If a management station sets this	object to the
		      value deleteTCB(12), then	this has the effect
		      of deleting the TCB (as defined in RFC 793) of
		      the corresponding	connection on the managed node,
		      resulting	in immediate termination of the
		      connection.

		      As an implementation-specific option, a RST
		      segment may be sent from the managed node	to
		      the other	TCP endpoint (note however that	RST
		      segments are not sent reliably)."
	      ::= { tcpTubaConnEntry 1 }

	  tcpConnLocalNSAPAddress OBJECT-TYPE
	      SYNTAX  ClnpAddress
	      ACCESS  read-only
	      STATUS  mandatory
	      DESCRIPTION
		      "The local NSAP address for this TCP
		       connection.  In the case	of a connection
		       in the listen state which is willing to
		       accept connections for any NSAP interface
		       associated with the node, the value 0 is
		       used. This is a zero length NSAP	Address"



West								[Page 5]





INTERNET DRAFT		     July 21, 1994	    Expires Jan	21, 1995


	      ::= { tcpTubaConnEntry 2 }

	  tcpConnLocalPort OBJECT-TYPE
	      SYNTAX  INTEGER (0..65535)
	      ACCESS  read-only
	      STATUS  mandatory
	      DESCRIPTION
		      "The local port number for this TCP connection."
	      ::= { tcpTubaConnEntry 3 }

	  tcpConnRemNSAPAddress	OBJECT-TYPE
	      SYNTAX  ClnpAddress
	      ACCESS  read-only
	      STATUS  mandatory
	      DESCRIPTION
		      "The remote NSAP address for this	TCP connection."
	      ::= { tcpTubaConnEntry 4 }

	  tcpConnRemPort OBJECT-TYPE
	      SYNTAX  INTEGER (0..65535)
	      ACCESS  read-only
	      STATUS  mandatory
	      DESCRIPTION
		      "The remote port number for this TCP connection."
	      ::= { tcpTubaConnEntry 5 }


	  -- TUBA UDP Group
	  -- the UDP TUBA Listener table

	  -- As	with the TCP table, this table serves the same
	  -- purpose as	the udpTable from MIB-II.
	  -- The UDP listener table contains information about this
	  -- entity's UDP end-points on	which a	local application is
	  -- currently accepting datagrams.

	  udpTubaTable OBJECT-TYPE
	      SYNTAX  SEQUENCE OF UdpTubaEntry
	      ACCESS  not-accessible
	      STATUS  mandatory
	      DESCRIPTION
		      "A table containing UDP listener information."
	      ::= { udpTUBAGroup 1 }

	  udpTubaEntry OBJECT-TYPE
	      SYNTAX  UdpTubaEntry
	      ACCESS  not-accessible
	      STATUS  mandatory



West								[Page 6]





INTERNET DRAFT		     July 21, 1994	    Expires Jan	21, 1995


	      DESCRIPTION
		      "Information about a particular current UDP
		      listener."
	      INDEX   {	udpLocalNSAPAddress, udpLocalPort }
	      ::= { udpTubaTable 1 }

	  UdpTubaEntry ::=
	      SEQUENCE {
		  udpLocalNSAPAddress
		      ClnpAddress,
		  udpLocalPort
		      INTEGER (0..65535)
	      }

	  udpLocalNSAPAddress OBJECT-TYPE
	      SYNTAX  ClnpAddress
	      ACCESS  read-only
	      STATUS  mandatory
	      DESCRIPTION
		      "The local NSAP address for this UDP listener.
		       In the case of a	UDP listener which is willing
		       to accept datagrams for any IP interface
		       associated with the node, the value 0 is	used."
	      ::= { udpTubaEntry 1 }

	  udpLocalPort OBJECT-TYPE
	      SYNTAX  INTEGER (0..65535)
	      ACCESS  read-only
	      STATUS  mandatory
	      DESCRIPTION
		      "The local port number for this UDP listener."
	      ::= { udpTubaEntry 2 }

END



3.  SNMPv2 MIB


TUBA-MIB DEFINITIONS ::= BEGIN

IMPORTS	internet, private   FROM RFC1155-SMI
	NsapAddress FROM SNMPv2-SMI
	MODULE-IDENTITY, OBJECT-TYPE FROM SNMPv2-SMI;

nistPrivate OBJECT IDENTIFIER ::= { private 724	}
nistTUBAModules	OBJECT IDENTIFIER ::= {	nistPrivate 1 }
nistTUBAMIB	OBJECT IDENTIFIER ::= {


West								[Page 7]





INTERNET DRAFT		     July 21, 1994	    Expires Jan	21, 1995


nistPrivate 2 }

tcpTUBAGroup OBJECT IDENTIFIER ::= { nistTUBAMIB 1 } udpTUBAGroup OBJECT
IDENTIFIER ::= { nistTUBAMIB 2 }

	  tubaMIB MODULE-IDENTITY
	      LAST-UPDATED "9403101200Z"
	      ORGANIZATION "NIST"
	      CONTACT-INFO
		      "	       Jim West

		       Postal: NIST
			       Building	225/B217
			       Gaithersburg MD,	20899
			       US

			  Tel: +1 301 975 3619
			  Fax: +1 301 590 XXXX

		       E-mail: west@osi.ncsl.nist.gov"
	      DESCRIPTION
		      "The MIB module for TUBA systems"
	      ::= { nistTUBAModules 1 }


	  -- the TCP TUBA Connection table

	  -- This table	serves the same	purpose	as MIB-II's
	  -- tcpConnTable.  It contains	information about this
	  -- entity's existing TCP connections.	 It is expected
	  -- that a TUBA agent will instantiate	this table as
	  -- well as the tcpConnTable in MIB-II.  A manager will
	  -- have to access both table to get a	complete picture
	  -- of	the TCP	connections active on a	TUBA end system.
	  --
	  -- NOTE:  This is not	a complete reproduction	of
	  --	    MIB-II's TCP group.	 May of	the objects in
	  --	    the	TCP group are not dependent on Network
	  --	    addresses.	This group only	address	portions
	  --	    of the TCP group that depend on Network
	  --	    addresses.
	  --

	  tcpTubaConnTable OBJECT-TYPE
	      SYNTAX  SEQUENCE OF TcpTubaConnEntry
	      MAX-ACCESS  not-accessible
	      STATUS  current
	      DESCRIPTION



West								[Page 8]





INTERNET DRAFT		     July 21, 1994	    Expires Jan	21, 1995


		      "A table containing TCP over CLNP	(TUBA)
		       connection-specific information."
	      ::= { tcpTUBAGroup 1 }

	  tcpTubaConnEntry OBJECT-TYPE
	      SYNTAX  TcpTubaConnEntry
	      MAX-ACCESS  not-accessible
	      STATUS  current
	      DESCRIPTION
		      "Information about a particular current TCP
		       over CLNP connection.  An object	of this
		       type is transient, in that it ceases to exist
		       when (or	soon after) the	connection makes the
		       transition to the CLOSED	state."
	      INDEX   {	tcpConnLocalNSAPAddress,
			tcpTubaConnLocalPort,
			tcpConnRemNSAPAddress,
			tcpTubaConnRemPort }
	      ::= { tcpTubaConnTable 1 }


	  TcpTubaConnEntry ::=
	      SEQUENCE {
		  tcpTubaConnState
		      INTEGER,
		  tcpConnLocalNSAPAddress
		      NsapAddress,
		  tcpTubaConnLocalPort
		      INTEGER (0..65535),
		  tcpConnRemNSAPAddress
		      NsapAddress,
		  tcpTubaConnRemPort
		      INTEGER (0..65535)
	      }

	  tcpTubaConnState OBJECT-TYPE
	      SYNTAX  INTEGER {
			  closed(1),
			  listen(2),
			  synSent(3),
			  synReceived(4),
			  established(5),
			  finWait1(6),
			  finWait2(7),
			  closeWait(8),
			  lastAck(9),
			  closing(10),
			  timeWait(11),



West								[Page 9]





INTERNET DRAFT		     July 21, 1994	    Expires Jan	21, 1995


			  deleteTCB(12)
		      }
	      MAX-ACCESS  read-write
	      STATUS  current
	      DESCRIPTION
		      "The state of this TCP connection.

		      The only value which may be set by a management
		      station is deleteTCB(12).	 Accordingly, it is
		      appropriate for an agent to return a `badValue'
		      response if a management station attempts	to set
		      this object to any other value.

		      If a management station sets this	object to the
		      value deleteTCB(12), then	this has the effect of
		      deleting the TCB (as defined in RFC 793) of the
		      corresponding connection on the managed node,
		      resulting	in immediate termination of the
		      connection.

		      As an implementation-specific option, a RST
		      segment may be sent from the managed node	to the
		      other TCP	endpoint (note however that RST	segments
		      are not sent reliably)."
	      ::= { tcpTubaConnEntry 1 }

	  tcpConnLocalNSAPAddress OBJECT-TYPE
	      SYNTAX  NsapAddress
	      MAX-ACCESS  read-only
	      STATUS  current
	      DESCRIPTION
		      "The local NSAP address for this TCP connection.
In
		      the case of a connection in the listen state which
		      is willing to accept connections for any NSAP
		      interface	associated with	the node, the value
		      0	is used. This is a zero	length NSAP Address"
	      ::= { tcpTubaConnEntry 2 }

	  tcpTubaConnLocalPort OBJECT-TYPE
	      SYNTAX  INTEGER (0..65535)
	      MAX-ACCESS  read-only
	      STATUS  current
	      DESCRIPTION
		      "The local port number for this TCP connection."
	      ::= { tcpTubaConnEntry 3 }

	  tcpConnRemNSAPAddress	OBJECT-TYPE



West							       [Page 10]





INTERNET DRAFT		     July 21, 1994	    Expires Jan	21, 1995


	      SYNTAX  NsapAddress
	      MAX-ACCESS  read-only
	      STATUS  current
	      DESCRIPTION
		      "The remote NSAP address for this	TCP connection."
	      ::= { tcpTubaConnEntry 4 }

	  tcpTubaConnRemPort OBJECT-TYPE
	      SYNTAX  INTEGER (0..65535)
	      MAX-ACCESS  read-only
	      STATUS  current
	      DESCRIPTION
		      "The remote port number for this TCP connection."
	      ::= { tcpTubaConnEntry 5 }


	  -- TUBA UDP Group
	  -- the UDP TUBA Listener table

	  -- As	with the TCP table, this table serves the same purpose
	  -- as	the udpTable from MIB-II.
	  -- The UDP listener table contains information about this
	  -- entity's UDP end-points on	which a	local application is
	  -- currently accepting datagrams.

	  udpTubaTable OBJECT-TYPE
	      SYNTAX  SEQUENCE OF UdpTubaEntry
	      MAX-ACCESS  not-accessible
	      STATUS  current
	      DESCRIPTION
		      "A table containing UDP listener information."
	      ::= { udpTUBAGroup 1 }

	  udpTubaEntry OBJECT-TYPE
	      SYNTAX  UdpTubaEntry
	      MAX-ACCESS  not-accessible
	      STATUS  current
	      DESCRIPTION
		      "Information about a particular current UDP
		      listener."
	      INDEX   {	udpLocalNSAPAddress, udpTubaLocalPort }
	      ::= { udpTubaTable 1 }

	  UdpTubaEntry ::=
	      SEQUENCE {
		  udpLocalNSAPAddress
		      NsapAddress,
		  udpTubaLocalPort



West							       [Page 11]





INTERNET DRAFT		     July 21, 1994	    Expires Jan	21, 1995


		      INTEGER (0..65535)
	      }

	  udpLocalNSAPAddress OBJECT-TYPE
	      SYNTAX  NsapAddress
	      MAX-ACCESS  read-only
	      STATUS  current
	      DESCRIPTION
		      "The local NSAP address for this UDP listener.  In
		      the case of a UDP	listener which is willing to
		      accept datagrams for any IP interface associated
		      with the node, the value 0 is used."
	      ::= { udpTubaEntry 1 }

	  udpTubaLocalPort OBJECT-TYPE
	      SYNTAX  INTEGER (0..65535)
	      MAX-ACCESS  read-only
	      STATUS  current
	      DESCRIPTION
		      "The local port number for this UDP listener."
	      ::= { udpTubaEntry 2 }

END




























West							       [Page 12]





INTERNET DRAFT		     July 21, 1994	    Expires Jan	21, 1995


					    References


   [1]	     Callon, R., TCP/UDP over Bigger Addresses (TUBA), RFC
	     1347,  May	1992.

   [2]	     Case, J.; Fedor, M.; Schoffstall, M.; Davin, C.  Simple
	     Network Management	Protocol (SNMP).,  RFC 1157, May 1990

   [3]	     McCloghrie, K., Management	Information Base for Network
	     Management	of TCP/IP-based	internets: MIB-II, RFC 1213,
	     March 1991.

   [4]	     Piscitello, D., "Transition Plan for TUBA/CLNP",
	     Internet Draft (draft-ietf-tuba-mib-00.txt)

   [5]	     Satz, G.  CLNS MIB	for use	with Connectionless Network
	     Protocol (ISO 8473) and End System	to Intermediate	System
	     (ISO 9542)., RFC 1238, June 1991

   [6]	     The complete SNMPv2 architecture is defined in 12 RFCs:
	     RFC 1441 -	RFC 1452

   [7]	     Rose, M.; McCloghrie, K.,eds.  Concise MIB	definitions.,
	     RFC 1212, March 1991

   [8]	     Case, J.; McCloghrie, K.; Rose, M.; Waldbusser, S.
	     Structure of Management Information for version 2 of the
	     Simple Network Management Protocol	(SNMPv2)., RFC 1442,
	     April 1993





















West							       [Page 13]

