




PPP Working Group                                         Craig Richards
Internet Draft                                         Shiva Corporation
expires August 1996                                          Kevin Smith
                                             Ascend Communications, Inc.
                                                           February 1996


              The PPP Bandwidth Allocation Protocol (BAP)
          The PPP Bandwidth Allocation Control Protocol (BACP)
                     draft-ietf-pppext-bacp-01.txt


Status of this Memo

   This document is a submission to the Point-to-Point Protocol Working
   Group of the Internet Engineering Task Force (IETF).  Comments should
   be submitted to the ietf-ppp@merit.edu mailing list.

   Distribution of this memo is unlimited.

   Internet Drafts are working documents of the Internet Engineering
   Task Force (IETF), its Areas, and its Working Groups.  Note that
   other groups may also distribute working documents as Internet
   Drafts.

   Internet Drafts are draft documents valid for a maximum of six
   months.  Internet Drafts may be updated, replaced, or obsoleted by
   other documents at any time.  It is not appropriate to use Internet
   Drafts as reference material or to cite them other than as a
   ``working draft'' or ``work in progress.''

   Please check the 1id-abstracts.txt listing contained in the
   internet-drafts Shadow Directories on nic.ddn.mil, ds.internic.net,
   venera.isi.edu, nic.nordu.net, or munnari.oz.au to learn the current
   status of any Internet Draft.

Abstract

   This document proposes a method to manage the dynamic bandwidth
   allocation of implementations supporting the PPP multilink protocol
   [2].  This is done by defining the Bandwidth Allocation Protocol
   (BAP), as well as its associated control protocol, the Bandwidth
   Allocation Control Protocol (BACP).  BAP can be used to manage the
   number of links in a multilink bundle.  BAP defines datagrams to co-
   ordinate adding and removing individual links in a multilink bundle,
   as well as specifying which peer is responsible for which decisions
   regarding managing bandwidth during a multilink connection.




Richards & Smith          expires August 1996                   [Page i]

RFC DRAFT                       PPP BACP                   February 1996


1.  Introduction

   As PPP multilink implementations become increasingly common, there is
   a greater need for some conformity in how to manage bandwidth over
   such links. Interoperable implementations of PPP multilink have had
   problems such as thrashing, when links are repeatedly brought up and
   torn down in a short amount of time.  BACP and BAP provide a means of
   solving problems associated with interoperable thrashing
   implementations, they also provide a flexible yet robust way of
   managing bandwidth between 2 peers.  BAP does this by defining Call-
   Control packets and a protocol that allows peers to co-ordinate the
   actual bandwidth allocation and de-allocation.  Phone numbers may be
   passed in the Call-Control packets to minimize the end user's
   configuration.

1.1.  Specification of Requirements

   In this document, several words are used to signify the requirements
   of the specification.  These words are often capitalized.

   MUST      This word, or the adjective "required", means that the
             definition is an absolute requirement of the specification.

   MUST NOT  This phrase means that the definition is an absolute
             prohibition of the specification.

   SHOULD    This word, or the adjective "recommended", means that there
             may exist valid reasons in particular circumstances to
             ignore this item, but the full implications must be
             understood and carefully weighed before choosing a
             different course.

   MAY       This word, or the adjective "optional", means that this
             item is one of an allowed set of alternatives.  An
             implementation which does not include this option MUST be
             prepared to interoperate with another implementation which
             does include the option.

1.2.  Terminology

   This document frequently uses the following terms:

   peer      The other end of the point-to-point link

   silently discard
             This means the implementation discards the packet without
             further processing.  The implementation SHOULD provide the
             capability of logging the error, including the contents of



Richards & Smith          expires August 1996                   [Page 1]

RFC DRAFT                       PPP BACP                   February 1996


             the silently discarded packet, and SHOULD record the event
             in a statistics counter.

   BOD (bandwidth on demand)
             BOD refers to the ability of a system to allocate and
             remove links in a multilink system to change the bandwidth
             of a multilink bundle.  This may be done in response to
             changing line conditions and it also may be done in
             response to changing resource conditions.  In either case,
             changing bandwidth dynamically during a multilink
             connection is referred to as BOD.


2.  New LCP Configuration Option

   Implementations MUST implement LCP as defined in [1].  LCP MUST be in
   the Network-Layer Protocol phase before BACP can be negotiated.

2.1.  Link Discriminator

   Description

      This option is used to declare a unique discriminator for the link
      that the option is sent over.  This option MAY be in an LCP
      configure request packet.  BAP uses the link discriminator to
      differentiate the various links in a multilink bundle.  If this
      option is negotiated on one link of a bundle, each link in a
      multilink bundle MUST have a unique discriminator.  The
      discriminator is independent for each peer, so each link may have
      2 different LCP Link Discriminator values, one for each peer.
      When the Link Discriminator is sent in a BAP packet, it is the
      peer's Link Discriminator which is sent.

   A summary of the Link Discriminator LCP Option format is shown below.
   The fields are transmitted from left to right.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |     Length    |       Link Discriminator      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Type

      23 for Link Discriminator option.





Richards & Smith          expires August 1996                   [Page 2]

RFC DRAFT                       PPP BACP                   February 1996


   Length

      The Length field is one octet, and indicates the Length of this
      LCP Option including the Type, Length, and Link Discriminator
      fields.

   Link Discriminator

      The Link Discriminator field is 2 octets in Length, and it
      contains a unique identifier used to indicate a particular link in
      a multilink bundle.  The Link Discriminator for a link MUST be
      unique among the Link Discriminators assigned by this endpoint for
      this bundle.  The Link Discriminator SHOULD be assigned in a
      sequential, monotonically increasing manner.  It MUST be unique
      among the Link Discriminators assigned by this endpoint for this
      bundle.

3.  BACP Operation

   BACP uses the same packet exchange mechanism as the Link Control
   Protocol defined in [1].  BACP packets MUST NOT be exchanged until
   PPP has reached the Network-Layer Protocol phase.  BACP packets
   received before this phase is reached should be silently discarded.

   BACP is negotiated once per multilink bundle.  If BACP is negotiated
   on any of the links in a multilink bundle, it is opened for all of
   the links in the bundle.

   The Bandwidth Allocation Control Protocol is exactly the same as the
   Link Control Protocol [1] with the following exceptions:

      Data Link Layer Protocol Field

         Exactly one BACP packet is encapsulated in the Information
         field of PPP Data Link Layer frames where the Protocol field
         indicates Type hex 8071 (Bandwidth Allocation Control
         Protocol).

      Code field

         Only Codes 1 through 7 (Configure-Request, Configure-Ack,
         Configure-Nak, Configure-Reject, Terminate-Request, Terminate-
         Ack and Code-Reject) are used.  Other Codes should be treated
         as unrecognized and should result in Code-Rejects.

      Configuration Option Types

         BACP has a distinct set of Configuration Options, which are



Richards & Smith          expires August 1996                   [Page 3]

RFC DRAFT                       PPP BACP                   February 1996


         defined in the next section.  BACP uses only those options
         defined in the BACP Configuration Options section.  Any other
         option SHOULD not be sent and SHOULD be silently discarded if
         received.


3.1.  BACP Configuration Options

   BACP Configuration Options allow negotiation of BACP parameters.
   These options are used in Config-Request, Config-Ack, Config-Nak, and
   Config-Reject packets.  BACP uses the same Configuration Option
   format defined for LCP [1], with a separate set of Options.

   Current values of BACP Configuration Options are assigned as follows:

      1     Datagrams-Supported
      2     Base-Phone-Number


3.2.  Datagrams-Supported

   Description

      This option is used to inform the peer of which Bandwidth
      Allocation Protocol datagrams this implementation supports.  This
      option MUST be included in every BACP Configure-Request packet.
      An implementation MUST NOT send its peer any packets which it does
      not support, as indicated by this option.  If an implementation
      receives a packet that it does not support, it MUST silently
      discard it.

      Since this configuration option is used to inform the peer, and
      can not be negotiated, an implementation SHOULD NOT transmit a
      Config-Nak or a Config-Rej in response to this configuration
      option.

   A summary of the Datagrams-Supported Option format is shown below.
   The fields are transmitted from left to right.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |     Datagrams Supported       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+







Richards & Smith          expires August 1996                   [Page 4]

RFC DRAFT                       PPP BACP                   February 1996


   Type

      1 for Datagrams-Supported.

   Length

      The Length field is one octet, and indicates the Length of this
      BACP Option including the Type, Length and Datagrams Supported
      fields.

   Datagrams Supported

      The Datagrams Supported field is a bit mask.  It is 2 octets long.
      If a bit is set, it indicates support of both a Bandwidth
      Allocation Protocol Request or Indication datagram as well as the
      corresponding Response datagram.  Bit 0 of the Datagrams Supported
      field corresponds to bit 16 of the Datagrams-Supported Option as
      diagrammed above.

         Bit     Datagram Supported
         ---     ------------------
          0      Call-Request & Call-Response
          1      Callback-Request & Callback-Response
          2      Link-Drop-Request & Link-Drop-Response
          3      Link-Drop-Query-Request & Link-Drop-Query-Response
          4      Bundle-Drop-Request & Bundle-Drop-Response
          5      Link-Type-Request & Link-Type-Response
          6      Available-Link-Indication & Available-Link-Response
          7      Call-Fail-Indication & Call-Fail-Response

      If the Length field contains more bits than are defined by this
      specification, then any bits that are not defined should be
      ignored.  If the Length field is shorter than the number of bits
      defined, then the implementation should set all bits not received
      to 0.

3.3.  Base-Phone-Number

   Description

      An implementation informs its peer of its base phone number by
      sending the Base-Phone-Number option in the Config-Request packet.
      The base phone number indicates the primary phone number used to
      call that implementation.  The base phone number MAY be used with
      or without the BAP Phone-Number Option to indicate the phone
      number to be used for setting up additional links.  Each endpoint
      MAY include this option in the Config-Request.  An implementation
      that originated the call to create the multilink bundle SHOULD



Richards & Smith          expires August 1996                   [Page 5]

RFC DRAFT                       PPP BACP                   February 1996


      include this option if it intends to receive calls during the
      lifetime of the bundle (e.g., originate a Callback-Request or Ack
      a Call-Request).

      If an answering implementation does not receive the Base-Phone-
      Number Option in a Config-Request, it SHOULD set the default to no
      base phone number for its peer; however, it MAY use a
      preconfigured default of the Calling Party ID if received from the
      phone network.  If an originating implementation does not receive
      the Base-Phone-Number Option in a Config-Request, it SHOULD set
      the default to the phone number used to make the call.  If the
      multilink bundle is initiated with a callback connection, then the
      callback phone number MAY be used as the default Base Phone
      Number.

      Since this configuration option is used to inform the peer, and
      can not be negotiated, an implementation SHOULD NOT transmit this
      option in a Config-Nak or Config-Rej packet and MUST include this
      option in a Config-Ack in response to a Config-Request including
      this option.

   A summary of the Base-Phone-Number Option format is shown below.  The
   fields are transmitted from left to right.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |     Base Phone Number...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Type

      2 for Base-Phone-Number.

   Length

      The Length field is one octet and is binary encoded.  It indicates
      the Length of this BACP Option in bytes including the Type, Length
      and Base Phone Number fields.

   Base Phone Number

      The Base Phone Number field is an ASCII string consisting of
      digits in the range 0-9 inclusive and SHOULD denote a valid phone
      number.  It MAY contain the complete set of digits that must be
      dialed by the calling implementation to reach the called
      implementation.  This might include a code to reach an outside



Richards & Smith          expires August 1996                   [Page 6]

RFC DRAFT                       PPP BACP                   February 1996


      line, long distance prefix, national destination code, country
      prefix and/or country code, as well as the phone number to be
      dialed.  It MAY be similar to the format of a phone number used
      when performing a callback connection.


4.  BAP Operation

4.1.  Link Management

   BAP defines packets, parameters and negotiation procedures to allow
   two endpoints to negotiate gracefully adding and dropping links from
   a multilink bundle.  An implementation can:

      Request permission to add a Link to a bundle (Call-Request)

      Request that the peer add a link to a bundle via a callback
      (Callback-Request)

      Notify the peer that it is going to drop a link from a bundle
      (whether the peer agrees or not) (Link-Drop-Request)

      Negotiate with the peer to drop a link from a bundle (this implies
      that the peer can refuse) (Link-Drop-Query-Request)

   After BACP reaches the opened state, either peer MAY request that
   another link be added to the bundle by sending a BAP Call- or
   Callback-Request packet.  A Call-Request packet is sent if the
   implementation wishes to originate the call for the new link, and a
   Callback-Request packet is sent if the implementation wishes its peer
   to originate the call for the new link.  The implementation receiving
   a Call- or Callback-Request MUST respond with a Call- or Callback-
   Response with a valid Response Code.

   After BACP reaches the opened state, either peer MAY request that a
   link be dropped from the bundle by sending a BAP Drop-Link-Request or
   a Drop-Link-Query-Request.  A Drop-Link-Request packet is sent if the
   implementation wishes to force dropping a link with no negotiation
   and a Drop-Link-Query-Request packet is sent if the implementation
   wishes to negotiate dropping a link with its peer.  The
   implementation receiving a Drop-Link-Request or Drop-Link-Query-
   Request MUST respond with a Drop-Link-Response or a Drop-Link-Query-
   Response.  The Drop-Link-Response MUST have the Response Code set to
   Request-Ack.

   A Link-Drop-Request is used to inform the peer that the
   implementation is going to drop a link from the multilink bundle.
   Originating a Link-Drop-Request is an optional part of BAP.  A system



Richards & Smith          expires August 1996                   [Page 7]

RFC DRAFT                       PPP BACP                   February 1996


   implementing BAP MUST support receiving a Link-Drop-Request from its
   peer.  The peer MUST reply to a Link-Drop-Request with a Link-Drop-
   Response with the Response Code set to Request-Ack.  No other
   response is allowed.  The endpoint that originates a Link-Drop-
   Request MAY choose to drop the link even if a Request-Ack has not
   been received.  This SHOULD only be done if there is a time critical
   quality to dropping the link.  An example of this is when there is an
   incoming call on a line in use by the multilink bundle, and the line
   must be dropped quickly before the incoming call goes away.

   A Link-Drop-Query-Request is used to inquire if the peer agrees to
   drop a link from the current multilink bundle. Origination of a
   Link-Drop-Query-Request is an optional part of BAP.  A system
   implementing BAP MUST support the receipt of Link-Drop-Query-Request
   from its peer.  When an implementation wants to negotiate dropping a
   link, it MUST transmit a Link-Drop-Query-Request.  When an
   implementation receives a Link-Drop-Query-Request, it MUST base its
   response on its transmit heuristics or on its configuration (e.g., if
   the request would cause the number of active links to fall below the
   allowable minimum number of links configured for the active multilink
   bundle).  If the implementation receiving a Link-Drop-Query-Request
   is not monitoring its transmit data and is not configured otherwise,
   it MUST accept the request to drop a link.


4.2.  Bandwidth Management


   BAP allows two peer implementations to manage the bandwidth available
   to the protocols using the multilink bundle by negotiating when to
   add and drop links (See Link Management).  The Bandwidth Allocation
   Protocol does not include an algorithm for determining when to add
   and remove links in a multilink bundle. These algorithms are left to
   the implementors. It is not necessary to include such an algorithm in
   the protocol, and including it may limit the abilities of
   implementations to work optimally.  Leaving out the bandwidth on
   demand algorithm also improves chances for interoperability and makes
   the protocol more flexible.

   This section defines two important Types of BOD: Resource BOD and
   Throughput BOD.  This does not preclude other Types of BOD from being
   implemented (e.g., Time of Day).  The rest of this specification
   refers to actions to take when implementing these types of BOD.

   Throughput BOD refers to BOD decisions made based on the amount of
   data being sent, received or queued to be sent over a multilink
   bundle. An example of this is when a link is added to a bundle due to
   a large file being transferred across the bundle.



Richards & Smith          expires August 1996                   [Page 8]

RFC DRAFT                       PPP BACP                   February 1996


   Resource BOD refers to BOD decisions based on the resources (e.g.,
   physical port, B-channel, etc.) available to an implementation.  For
   example, an implementation might remove a link from a multilink
   bundle to answer an incoming voice call, or might add a link when a
   line becomes free due to the termination of a separate PPP call on
   another port.  A system implementing BACP/BAP MAY support  neither,
   either, both or some other Type of Bandwidth On Demand.  Regardless
   of the Type of BOD implemented, if it uses BAP it must use the
   procedures in this specification for adding and dropping links.

   Resource BOD support is an optional part of BAP. An implementation
   does not have to locally make resource based BOD decisions as part of
   BAP.  However, any system implementing BAP MUST support resource BOD
   management by its peer (i.e., support receipt of Link-Drop-Request).
   An implementation MUST use a Link-Drop-Request to remove a link due
   to Resource BOD.  An implementation sends a Link-Drop-Request to
   inform the peer that it is going to drop a link from the multilink
   bundle.  The peer MUST reply to this request with a Link-Drop-
   Response with the Response Code set to Request-Ack.  No other
   response is allowed.  The peer that decides to drop a link MAY choose
   to drop the link even if a Request-Ack has not been received.  This
   SHOULD only be done if there is a time critical quality to dropping
   the link or if the implementation does not receive a response (e.g.,
   after 2 retransmissions). An example of this is when there is an
   incoming call on a link in use by the multilink bundle, and the link
   must be dropped quickly to answer the incoming call before the
   incoming call goes away.

   Throughput BOD support is an optional part of BAP.  An implementation
   does not have to locally make throughput based BOD decisions as part
   of BAP.  However, any system implementing BAP must handle throughput
   BOD management by its peer (i.e., receipt of Link-Drop-Query-
   Request). When an implementation decides that it's time to remove a
   link due to a throughput BOD decision, an implementation MUST
   transmit a Link-Drop-Query-Request to inquire if the peer agrees to
   drop a link from the current multilink bundle.  When an
   implementation receives a Link-Drop-Query-Request, it MUST base its
   response on its transmit heuristics (if it implements Throughput BOD)
   or on its configuration (e.g., if the request would cause the number
   of active links to fall below the allowable minimum number of links
   configured for the active multilink bundle).  If the implementation
   receiving a Link-Drop-Query-Request is not monitoring its transmit
   data and is not configured otherwise, it MUST accept the request to
   drop a link.  It MUST NOT base its response on its receive data
   heuristics. By making the decision to respond to a Link-Drop-Query-
   Request based on transmit heuristics only, BAP maximizes
   interoperability of various types of throughput BOD implementations.




Richards & Smith          expires August 1996                   [Page 9]

RFC DRAFT                       PPP BACP                   February 1996


   A BAP implementation may monitor its transmit traffic, both transmit
   and receive traffic, or choose not to monitor traffic in either
   direction.  Server systems SHOULD implement bi-directional monitoring
   and single-user dialin clients MAY implement any type of monitoring.
   This will allow client BOD implementations that require minimal end-
   user configuration.


4.3.  BAP Packets

   All of the BAP Request and Indication packets require a Response
   packet in response before taking any action, except the Link-Drop-
   Request packet.  The sender of the Link-Drop-Request packet is not
   required to receive a response to this packet before dropping a link,
   because there may be a time critical event depending on dropping the
   link.  However, when possible, the sender of a Link-Drop-Request
   packet SHOULD wait for a response before dropping the link.

   With the exception of the Link-Drop-Request packet, an implementation
   MUST set a timer when sending a Request or Indication packet. An
   implementation MAY set a timer for the Link-Drop-Request packet. The
   value of this timer SHOULD depend on the type and speed of the link
   or links in use.  Upon expiration of this timer, the implementation
   MUST retransmit the same request or indication, with the identical
   identification number unless the implementation has exceeded the
   maximum number of retransmissions it supports for this packet.  If
   the number of retransmissions exceeds the number supported by the
   implementation for this packet, the implementation MAY take
   appropriate recovery action. For example, if no response to a Link-
   Drop-Request is received after 2 retransmissions, an implementation
   MAY initiate dropping the link by sending an LCP Terminate-Request
   for that link.

   This procedure will insure that the peer receives the proper request
   or indication even if a packet is lost during transmission.  If a
   Response packet is lost, this retransmission scheme will insure that
   the original Request or Indication will be retransmitted with the
   same identification number, so the peer will realize that this is not
   a new request or indication packet.

   Since BAP packets help determine the amount of bandwidth available to
   an implementation, PPP SHOULD give them priority over other data
   packets when transmitting.  This will help insure the prompt addition
   and removal of links in a multilink bundle.  This is especially
   important when adding links to a bundle due to bandwidth constraints.






Richards & Smith          expires August 1996                  [Page 10]

RFC DRAFT                       PPP BACP                   February 1996


4.4.  Race Conditions

   A race condition can occur if both implementations send a Call-
   Request, Callback-Request, Link-Drop-Request, or Link-Drop-Query-
   Request at the same time.  These race conditions should be solved as
   follows:

      If each implementation sends a Call-Request (or Callback-Request)
      at the same time, the implementation with the lowest username
      value SHOULD be favored.  A username value is compared by
      converting the ASCII bytes into hexadecimal octets to create a
      number.  If both implementations are using the same username, then
      the lowest Multilink Endpoint Discriminator SHOULD be favored.
      Once again, each Multilink Endpoint Discrininators is first
      converted into hexadecimal octets starting with the Class octet,
      before being compared.  This means that the favored peer's request
      SHOULD be acked by its peer, and the unfavored peer's request
      SHOULD be naked by the favored peer.

      If each implementation sends a Link-Drop-Request at the same time,
      the same scheme SHOULD be used as for Call-Requests.

      If each implementation sends a Link-Drop-Query-Request at the same
      time, the same scheme SHOULD be used as for Call-Requests.

4.5.  BAP Datagram Format

   Description

      Before any BAP packets may be communicated, PPP MUST reach the
      Network-Layer Protocol phase, and BACP MUST reach the opened
      state.

      Exactly one BAP packet is encapsulated in the Information field of
      PPP Data Link Layer frames where the Protocol field indicates type
      hex 0071 (Bandwidth Allocation Protocol).

      The maximum length of a BAP packet transmitted over a PPP link is
      the same as the maximum length of the Information field of a PPP
      data link layer frame.

      Bandwidth Allocation Protocol datagrams can be catagorized as
      either Request, Indication or Response packets.  Every Request and
      Indication datagram has a corresponding Response packet.  Request
      and Indication datagrams have a slightly different format from
      Response datagrams, as the Response datagrams include a Response
      Code octet.




Richards & Smith          expires August 1996                  [Page 11]

RFC DRAFT                       PPP BACP                   February 1996


   A summary of the Bandwidth Allocation Protocol datagram Request and
   Indication packet format is shown below.  The fields are transmitted
   from left to right.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |  Identifier   |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   Data ...
   +-+-+-+-+-+-+-+-+

   A summary of the Bandwidth Allocation Protocol datagram Response
   packet format is shown below.  The fields are transmitted from left
   to right.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |  Identifier   |            Length             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Response Code |    Data ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Type

      The Type field is one octet and identifies the type of BAP
      datagram packet.  Datagram types are defined as follows.  This
      field is coded in binary coded hexadecimal.


         01       Call-Request
         02       Call-Response
         03       Callback-Request
         04       Callback-Response
         05       Link-Drop-Request
         06       Link-Drop-Response
         07       Link-Drop-Query-Request
         08       Link-Drop-Query-Response
         09       Bundle-Drop-Request
         0A       Bundle-Drop-Response
         0B       Link-Type-Request
         0C       Link-Type-Response
         0D       Available-Link-Indication
         0E       Available-Link-Response
         0F       Call-Failure-Indication
         10       Call-Failure-Response



Richards & Smith          expires August 1996                  [Page 12]

RFC DRAFT                       PPP BACP                   February 1996


      The various types of BAP datagrams are explained in the following
      sections.

   Identifier

      The Identifier field is one octet and is binary coded.  It aids in
      matching Requests and Indications with Responses, as well as which
      links are added or removed.  Call-Failure-Indication packets MUST
      use the same Identifier as was used by the original Call-Request
      or Callback-Request that was used to initiate the call that
      failed. All other Request or Indication packets MUST use a unique
      Identifier for each new Request or Indication.  All Response
      packets MUST use the same identifier as the Identifier in the
      Request or Indication packet being responded to.  When re-
      transmitting a request or indication, the Identifier MUST be the
      same as the Identifier used on the previous transmission of the
      request or indication.

   Length

      The Length field is two octets and indicates the length of the
      packet including the Type, Identifier, Length and Options fields.
      It is binary encoded. Octets outside the range of the Length field
      should be treated as Data Link Layer padding and should be ignored
      on reception.

   Response Code

      The Response Code is only present in Response datagrams.  It is
      binary coded and can have the following values:

         00000000        Request-Ack
         00000001        Request-Nak


   Data

      The Data field is variable in length, and will usually contain the
      list of zero or more BAP Options that the sender desires to
      transmit. The format of BAP Options is described in a later
      chapter.

4.5.1.  Call-Request

   Before originating a call to add another link to a multilink bundle,
   an implementation MUST transmit a Call-Request packet.  This will
   inform the peer of the request to add another link to the bundle and
   give the peer a chance to inform the implementation of the phone



Richards & Smith          expires August 1996                  [Page 13]

RFC DRAFT                       PPP BACP                   February 1996


   number of a free port that can be called.

   The options field MUST include the Link-Type option.  The options
   field MAY include the No-Phone-Number and/or the Call-Add-Code
   options.

   Upon reception of a Call-Request, a Call-Response datagram MUST be
   transmitted.

4.5.2.  Call-Response

   An implementation MUST transmit a Call-Response datagram in response
   to a received Call-Request datagram.  If the Call-Request is
   acceptable, the Call-Response MUST have a Response Code of Request-
   Ack; otherwise the Response Code MUST be Request-Nak.  The Phone-
   Number option MUST be included in a Call-Response packet with a
   Response Code of Request-Ack unless the Call-Request included the
   No-Phone-Number option.  The Nak-Code option MUST be included in a
   Call-Response packet with a Response Code of Request-Nak, and the
   Time-Until-Retry and Link-Types options MAY be included in such a
   packet.

4.5.3.  Callback-Request

   An implementation that wants its peer to originate another link to
   add to the multilink bundle MUST transmit a Callback-Request packet
   to its peer.  This will inform the peer of the request to add another
   link to the bundle and will also inform the peer of the number to be
   called.

   The options field MUST include the Link-Type and Phone-Number
   options.  The Call-Add-Code option MAY also be included.

   Upon reception of a Callback-Request, a Callback-Response datagram
   MUST be transmitted.

4.5.4.  Callback-Response

   An implementation MUST transmit a Callback-Response datagram in
   response to a received Callback-Request datagram.  If the Callback-
   Request is acceptable, the Callback-Response MUST have a Response
   Code of Request-Ack; otherwise the Response Code MUST be Request-Nak.
   In a Callback-Response packet with a Response Code of "Request-Nak",
   the implementation MUST include the Nak-Code option and MAY include
   the Time-Until-Retry option.






Richards & Smith          expires August 1996                  [Page 14]

RFC DRAFT                       PPP BACP                   February 1996


4.5.5.  Link-Drop-Request

   An implementation that requires that a link be removed from the
   current multilink bundle MUST transmit a Link-Drop-Request packet.
   This may be due to Resource BOD decisions. The options field MUST
   include the Link-Type option and MAY include the Drop-Code option.
   If the Link-Discriminator was negotiated in LCP, it MUST be included.

   Upon reception of a Link-Drop-Request, a Link-Drop-Response datagram
   with a Response Code of Request-Ack MUST be transmitted. After the
   receipt of the Link-Drop-Response datagram, the transmitter of the
   Link-Drop-Request MUST initiate tear down of the indicated link.  The
   implementation SHOULD initiate tear down of the link by sending an
   LCP Terminate-Request packet.

   The Link-Drop-Request is the only BAP Request packet that does not
   require a response before an action is taken. An implementation MAY
   drop a link from the multilink bundle without receiving a response
   from its peer (e.g., if there are time constraints).

4.5.6.  Link-Drop-Response

   An implementation transmits a Link-Drop-Response datagram in response
   to a received Link-Drop-Request datagram.  The Response Code MUST be
   set to Request-Ack in this packet.

4.5.7.  Link-Drop-Query-Request

   An implementation that determines that a link is no longer needed and
   wishes to negotiate dropping it (e.g., based on a throughput BOD
   decision), MUST transmit a Link-Drop-Query-Request packet. The
   options field MUST include the Link-Type option and MAY include the
   Drop-Code option.  If the Link-Discriminator was negotiated in LCP,
   it MUST be included.

   Upon reception of a Link-Drop-Query-Request, an implementation MUST
   transmit a Link-Drop-Query-Response datagram.  The Response-Code will
   be Request-Ack if it agrees to drop the link, or Request-Nak if it
   does not agree to drop the link. After the receipt of a Link-Drop-
   Query-Response with a Response Code of Request-Ack, the transmitter
   of the Link-Drop-Query-Request MUST initiate tear down of the
   indicated link by sending an LCP Terminate-Request packet on the
   designated link.

4.5.8.  Link-Drop-Query-Response

   An implementation transmits a Link-Drop-Query-Response datagram in
   response to a received Link-Drop-Query-Request datagram.  If the



Richards & Smith          expires August 1996                  [Page 15]

RFC DRAFT                       PPP BACP                   February 1996


   implementation agrees (e.g., based on its throughput BOD algorithm)
   to reduce the bandwidth of the multilink bundle, then the Response
   Code MUST be set to Request-Ack.  Otherwise, the Response Code MUST
   be set to Request-Nak.

   If the Response Code is Request-Nak, the Nak-Code option MUST be
   included, and the Time-Until-Retry option MAY be included.

4.5.9.  Bundle-Drop-Request

   An implementation that wishes to terminate a multilink bundle MAY
   transmit a Bundle-Drop-Request to its peer.  This packet indicates
   that the peer is going to terminate all the links in the current
   bundle.  This packet can be used instead of sending Link-Drop-
   Requests for each link in a multilink bundle.  The options field MAY
   include a Drop-Code option.

   Upon reception of a Bundle-Drop-Request, an implementation MUST
   transmit a Bundle-Drop-Response with a Response Code of Request-Ack.
   After the receipt of the Bundle-Drop-Response, the transmitter of the
   Bundle-Drop-Request MUST initiate tear down of all links in the
   bundle by sending an LCP Terminate-Request packet on each link.

4.5.10.  Bundle-Drop-Response

   An implementation transmits a Bundle-Drop-Response datagram in
   response to a received Bundle-Drop-Request datagram.  The Response
   Code MUST be set to Request-Ack in this packet.

4.5.11.  Link-Type-Request

   If an implementation desires to know which types of links its peer
   supports for the current multilink bundle, it MAY send a Link-Type-
   Request to its peer.

   Upon reception of a Link-Type-Request, a Link-Type-Response datagram
   MUST be transmitted.

4.5.12.  Link-Type-Response

   An implementation MUST transmit a Link-Type-Response datagram in
   response to a received Link-Type-Request datagram.  The Response Code
   MUST be set to Request-Ack in this packet. An implementation MUST
   include the Link-Types option in this datagram informing the peer of
   the link types supported by this implementation.






Richards & Smith          expires August 1996                  [Page 16]

RFC DRAFT                       PPP BACP                   February 1996


4.5.13.  Available-Link-Indication

   Whenever an implementation transmits a Call-Response or a Callback-
   Response with the Response Code set to Request-Nak and the Nak Code
   set to "link not currently available" and if both peers support the
   Available-Link-Indication packet (as negotiated in BACP), that
   implementation enters a link denied state.  While an implementation
   is in a link denied state, if a link of the type previously requested
   becomes available and if the implementation is ready to make the link
   available, then the implementation MUST send an Available-Link-
   Indication packet to the peer.  When an Available-Link-Indication
   packet is sent to the peer, the link denied state is cleared for that
   link type.  Each independent link type has an independent link denied
   state.  The Available-Link-Indication datagram MUST include the
   Link-Type.

   When an implementation receives an Available-Link-Indication packet,
   it MUST transmit an Available-Link-Response packet in response so
   that the peer knows that the indication was received.

4.5.14.  Available-Link-Response

   An implementation transmits an Available-Link-Response datagram in
   response to a received Available-Link-Indication datagram.  The
   Response Code MUST be set to Request-Ack in this packet.

4.5.15.  Call-Failure-Indication

   After an implementation fails an attempt to add a link to a bundle as
   the result of a Call-Request or a Callback-Request, it MUST send a
   Call-Failure-Indication packet to its peer. The options field MUST
   include the Call-Failure-Code option to indicate why the call failed
   as well as whether or not the implementation will retry the call.
   The Link-Type option MAY be included and the Phone-Number option
   indicating the phone number of the attempted call MAY be included.

   Upon reception of a Call-Failure-Indication packet, an implementation
   MAY log the failure and reason code, and a Call-Failure-Response
   datagram MUST be transmitted.

4.5.16.  Call-Failure-Response

   An implementation transmits a Call-Failure-Response datagram in
   response to a received Call-Failure-Indication datagram.  The
   Response Code field MUST be set to Request-Ack in this packet.






Richards & Smith          expires August 1996                  [Page 17]

RFC DRAFT                       PPP BACP                   February 1996


5.  BAP Datagram Options

   BAP Datagram Options are used in various BAP packets.  Their use in
   various packets is as defined below.  The format of these options
   loosely follows the formatting conventions of LCP Configuration
   Options.  When there are multiple BAP Options in one BAP packet, the
   options MAY be transmitted in any order.

   A summary of the BAP Option format is shown below.  The fields are
   transmitted from left to right.


    0                   1
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |    Data ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Type

      The type field is one octet, and indicates the type of the BAP
      Datagram Option.  This field is binary coded Hexadecimal.  The
      following options are currently defined:

         01   Link-Type
         02   Link-Types
         03   Phone-Number
         04   No-Phone-Number-Needed
         05   Call-Add-Code
         06   Nak-Code
         07   Drop-Code
         08   Call-Failure-Code
         09   Time-Until-Retry
         0A   Link-Discriminator


   Length

      The Length field is one octet, and indicates the length of this
      BAP Option including the Type, Length, and Data fields.

   Data

      The Data field is zero or more octets, and contains information
      specific to the BAP Option.  The format and length of the Data
      field is determined by the Type and Length fields.




Richards & Smith          expires August 1996                  [Page 18]

RFC DRAFT                       PPP BACP                   February 1996


5.1.  Link-Type

   Description

      This option indicates the type of link indicated for the operation
      being performed.  Exactly one bit MUST be set in the Link Type
      field.  This option MUST be included in all Bandwidth Allocation
      Protocol datagrams except Bundle-Drop-Request/Response and Link-
      Type-Request/Response datagrams.

   A summary of the Link-Type BAP Option format is shown below.  The
   fields are transmitted from left to right.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |           Link Type
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                         Link Type (continued)
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
         Link Type (continued)     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Type

      01 for Link-Type.

   Length

      The Length field is one octet, and indicates the length of this
      BAP Option including the Type, Length and Link Type fields.

   Link Type

      The Link Type field is a bit mask.  It is 8 octets in length.  Bit
      0 of the Link Type field corresponds to bit 16 of the Link-Type
      BAP Option as described above.  If a bit is set, it indicates
      support of the corresponding link type:












Richards & Smith          expires August 1996                  [Page 19]

RFC DRAFT                       PPP BACP                   February 1996



         Bit     Link type
         ---     -------------
          0      Sync ISDN 64K
          1      Sync ISDN 56K
          2      Sync ISDN Data over voice
          3      V.120 on Sync ISDN 64K
          4      V.120 on Sync ISDN 56K
          5      V.120 on Sync ISDN Data over voice
          6      V.110 on Sync ISDN 64K
          7      V.110 on Sync ISDN 56K
          8      V.110 on Sync ISDN Data over voice
          9      ISDN PRI H0 Channel
         10      X.25
         11      Asynchronous analog modem
         12      Synchronous analog modem
         13      ISDN PRI H11 Channel
         16      ISDN PRI H12 Channel
         17-46   ISDN Multirate Channel, n=2-30
         47      Switched 56 (4-wire)
         48      Switched 56 over T1 with Robbed Bit Signaling

      If the Length field contains more bits than are defined by this
      specification, then any bits that are not defined should be
      ignored.  If the Length field is shorter than the number of bits
      defined, then the implementation should set all bits not received
      to 0.

5.2.  Link-Types

   Description

      This option indicates the types of links capable of being
      supported in this multilink bundle.  This option has a similar
      format to the Link-Type option, except that the Link Type field
      can have multiple bits set instead of instead of having exactly
      one bit set.

      This option MUST be included in the Link-Type-Response datagram.

   A summary of the Link-Types BAP Option format is shown below.  The
   fields are transmitted from left to right.









Richards & Smith          expires August 1996                  [Page 20]

RFC DRAFT                       PPP BACP                   February 1996



    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |           Link Types
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                         Link Types (continued)
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
         Link Types (continued)    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Type

      02 for Link-Types.

   Length

      The Length field is one octet, and indicates the length of this
      BAP Option including the Type, Length and Link Types fields.

   Link Types

      The Link Types field is a bit mask.  It is 8 octets long. See the
      bit definitions in the previous section (Link-Type Option) for a
      definition of the bits in the Link Types field.  If a bit is set,
      it indicates support of the corresponding link type.

      If the Length field contains more bits than are defined by this
      specification, then any bits that are not defined should be
      ignored.  If the Length field is shorter than the number of bits
      defined, then the implementation should set all bits not received
      to 0.

5.3.  Phone-Number

   Description

      This option is used to transmit an implementation's phone number
      to its peer.  For example, this phone number could be either the
      phone number of a hunt group for this device, or the specific
      phone number of a free port on this device.  If there are no free
      ports on this device, a Response with a Response Code of Request-
      Nak SHOULD be sent, and this option SHOULD not be sent.

      Note that an implementation MAY include more than one Phone-Number
      option in a response.  This means that there is more than one
      phone number that can be used for the requested operation.  The



Richards & Smith          expires August 1996                  [Page 21]

RFC DRAFT                       PPP BACP                   February 1996


      Phone-Number option MUST appear in a Callback-Request. It also
      MUST appear in a Call-Response if the Call-Request did not contain
      the No-Phone-Number option and if the Response Code is Request-
      Ack. It MAY appear in the Call-Failure-Indication datagram.

   A summary of the Phone-Number BAP Option format is shown below.  The
   fields are transmitted from left to right.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |Sub-Option Type| Sub-Option Len|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      Sub-Option...
   +-+-+-+-+-+-+-+-+


   Type

      03 for Phone-Number.

   Length

      The Length field is one octet, and indicates the length of this
      BAP Option including the Type, Length, and Sub-Option fields.

   Sub-Option Type

      The following Sub-Options Types are defined for the Phone-Number
      option.

          01   Unique Digits
          02   Subscriber Number
          03   National Destination Code
          04   Country Code
          05   Phone Number Sub Address


5.3.1.  Phone-Number Sub-Options

   Unique Digits

      This byte is a count of the number of unique digits in the phone
      number.  The Unique Digits byte indicates the number of rightmost
      digits of the complete phone number that are different from port
      to port on the given device.  (For example, if all phone numbers
      on a given device are 617/555-89XX, the Unique Digits byte is 2,
      if all phone numbers are 617/55X-XXXX, then the Unique Digits byte



Richards & Smith          expires August 1996                  [Page 22]

RFC DRAFT                       PPP BACP                   February 1996


      will be 5).  This field is required.

      The purpose of the unique digits sub-option is to aid the
      originating implementation in phone number parsing.  With this
      information, the implementation that originates a call does not
      have to know which combination of access codes, country codes,
      dialing codes, area codes and extension numbers are necessary.  It
      just takes the digits contained in the original phone number
      dialed, and replaces the rightmost unique digits with the
      rightmost unique digits of the new phone number. For example, if
      the original number dialed is 9,16175512345, and the new phone
      number has an area code of 617, a phone number of 5598765, and a
      unique digits value of 5, then the number to be dialed will be
      created by replacing the rightmost 5 digits of the original number
      (12345) with the rightmost 5 digits of the new number (98765),
      which results in a new phone number to be dialed of 9,16175598765.

   Subscriber Number

      This field is the phone number of the port that should be called
      by the peer.  It MUST NOT include the area code and country code
      fields IF they are defined in separate sub-options.  This field is
      an ASCII string and MUST contain only ASCII characters 0-9
      inclusive (valid phone number digits).  This field is required.

   National Destination Code

      This field is the national destination code (as defined in ITU-T
      Recommendation E.164) of the port that should be called by the
      peer. This field is an ASCII string and only contains a valid
      national destination code.  This field is optional.  If the
      National Destination Code is not included, the receiving endpoint
      SHOULD assume that it is the same as the first link.

   Country Code

      This field is the country code (as defined in ITU-T Recommendation
      E.164) of the port that should be called by the peer. This field
      is an ASCII string and only contains a valid country code.  This
      field is optional.  If the Country Code is not included, the
      receiving endpoint SHOULD assume that it is the same as the first
      link.

   Phone Number Sub Address

      This field is the sub address of the port to be called by the
      peer.  This sub-option SHOULD only be used for an ISDN call. This
      field is an ASCII string and only contains valid phone number



Richards & Smith          expires August 1996                  [Page 23]

RFC DRAFT                       PPP BACP                   February 1996


      digits. This field is optional.

5.4.  No-Phone-Number-Needed

   Description

      The No-Phone-Number option indicates that the calling
      implementation is already configured with the phone number of its
      multilink peer and the peer MUST NOT include the Phone Number
      option in the response.  This may be for security reasons, for
      configuration reasons, or for any other reason.

      This option MAY be used in a Call-Request packet.

   A summary of the No-Phone-Number BAP Option format is shown below.
   The fields are transmitted from left to right.

    0                   1
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Type

      04 for No-Phone-Number.

   Length

      The Length field is one octet, and indicates the length of this
      BAP Option including the Type and Length fields.

5.5.  Call-Add-Code

   Description

      This option is used to indicate the primary reason for requesting
      that a link be added to a bundle.  This option MAY be used in a
      Call-Request or a Callback-Request packet.

   A summary of the Call-Add-Code BAP Option format is shown below.  The
   fields are transmitted from left to right.








Richards & Smith          expires August 1996                  [Page 24]

RFC DRAFT                       PPP BACP                   February 1996



    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |    Reason     |    Description
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    String (Optional)...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Type

      05 for Call-Add-Code.

   Length

      The Length field is one octet, and indicates the length of this
      BAP Option including the Type, Length, Reason and optional
      Description String fields.

   Reason

      The reason code byte can have the following values:

         0 - unlisted reason
         1 - link has been freed up
         2 - other resources freed up
         3 - transmit queue length exceeds limit
         4 - receive traffic exceeds limit
         5 - transmit traffic exceeds limit
         6 - configuration change


   Description String

      The Description String field is optional.  If the length field
      indicates that the option continues past the Reason field, then
      the remaining octets in the option are the Description String.
      This is an ASCII string.  The content of the field is
      implementation dependent.  An implementation MAY ignore the
      Description String field.

5.6.  Nak-Code

   Description

      This option is used to transmit a Nak code to the peer. This
      option MUST be included in every Call-Response and Callback-



Richards & Smith          expires August 1996                  [Page 25]

RFC DRAFT                       PPP BACP                   February 1996


      Response with a Response Code of Request-Nak and MAY be included
      in a Drop-Link-Query-Response with a Response code of Request-Nak.

   A summary of the Nak-Code BAP Option format is shown below.  The
   fields are transmitted from left to right.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |    Reason     |    Description
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    String (Optional)...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Type

      06 for Nak-Code.

   Length

      The Length field is one octet, and indicates the length of this
      BAP Option including the Type, Length, Reason and optional
      Description String fields.

   Reason

      The reason code byte can have the following values:


         0 - unlisted reason
         1 - link not currently available
         2 - multilink bundle has reached its maximum capacity
         3 - invalid phone number
         4 - no resources
         5 - peer does not have sufficient privilege
         6 - multilink bundle cannot drop below this minimum number
         7 - dropping channel would cause thrashing in the local algorithm


   Description String

      The Description String field is optional.  If the length field
      indicates that the option continues past the Reason field, then
      the remaining octets in the option are the Description String.
      This is an ASCII string.  The content of the field is
      implementation dependent.  An implementation MAY ignore the
      Description String field.



Richards & Smith          expires August 1996                  [Page 26]

RFC DRAFT                       PPP BACP                   February 1996


5.7.  Drop-Code

   Description

      This option is used to indicate the primary reason for requesting
      that a link be removed from the bundle.  This option MAY be used
      in a Link-Drop-Request, Link-Drop-Query-Request or a Bundle-Drop-
      Request packet.

   A summary of the Drop-Code BAP Option format is shown below.  The
   fields are transmitted from left to right.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |    Reason     |    Description
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    String (Optional)...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Type

      07 for Drop-Code.

   Length

      The Length field is one octet, and indicates the length of this
      BAP Option including the Type, Length, Reason and optional
      Description String fields.

   Reason

      The reason code byte can have the following values:

         0 - unlisted reason
         1 - higher priority incoming call
         2 - higher priority outgoing call
         3 - transmit data dropped below threshold
         4 - receive data dropped below threshold
         5 - transmit queue dropped below threshold
         6 - user initiated disconnect
         7 - error threshold exceeded


   Description String

      The Description String field is optional.  If the length field



Richards & Smith          expires August 1996                  [Page 27]

RFC DRAFT                       PPP BACP                   February 1996


      indicates that the option continues past the Reason field, then
      the remaining octets in the option are the Description String.
      This is an ASCII string.  The content of the field is
      implementation dependent.  An implementation MAY ignore the
      Description String field.

5.8.  Call-Failure-Code

   Description

      This option is used to indicate the action that will be taken
      after a call failed, as well as a reason code for the failure.
      This option MUST be included in a Call-Failure-Indication packet.

   A summary of the Call-Failure-Code BAP Option format is shown below.
   The fields are transmitted from left to right.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |    Action     |    Reason     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |Description String (Optional)...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Type

      08 for Call-Failure-Code.

   Length

      The Length field is one octet, and indicates the length of this
      BAP Option including the Type, Length, Action, Reason and optional
      Description String fields.

   Action

      The Action octet indicates what action the calling implementation
      is taking after a failed call.

      The Action octet can have the following values:

         0 - No retry
         1 - Will retry same number
         2 - Will try next number in list





Richards & Smith          expires August 1996                  [Page 28]

RFC DRAFT                       PPP BACP                   February 1996


   Reason

      The reason code byte can have the following values:

         0 - unlisted reason
         1 - no dial tone
         2 - no answer
         3 - no carrier
         4 - unable to negotiate LCP
         5 - unable to authenticate
         6 - call canceled
         7 - Q.931 Cause Information Element follows


   Description String

      The Description String field is optional.  If the length field
      indicates that the option continues past the Reason field, then
      the remaining octets in the option are the Description String.
      This is an ASCII string.  The content of the field is
      implementation dependent.  An implementation MAY ignore the
      Description String field.

      If the call failure is caused by receiving a Q.931
      Disconnect/Release/ Release Complete from the network, thie field
      SHOULD include the Cause Code received in the Cause Information
      Element.

5.9.  Time-Until-Retry

   Description

      The Time-Until-Retry option MAY be used in Call-Response,
      Callback-Response, and Link-Drop-Query-Response datagrams with the
      Response Code set to Request-Nak.  This option is used to inform
      the peer that it MUST NOT send a Request equivalent to the Request
      being Nak'ed for the time period indicated in this option.  This
      retry time only applies to the link type or types being requested.

      When an implementation receives this field in a Call-Response,
      Callback-Response or a Link-Drop-Query-Response datagram with the
      Response Code set to Request-Nak, it MUST NOT retry the same type
      of Request again for the indicated time period.

   A summary of the Time-Until-Retry BAP Option format is shown below.
   The fields are transmitted from left to right.





Richards & Smith          expires August 1996                  [Page 29]

RFC DRAFT                       PPP BACP                   February 1996



    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |         Time (seconds)
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
            Time (continued)       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Type

      09 for Time-Until-Retry.

   Length

      The Length field is one octet, and indicates the length of this
      BAP Option including the Type, Length and Time fields.

   Time

      The Time field is 4 octets in length (network byte order), and
      indicates the time in seconds before the Request being Nak'd may
      be retried.

5.10.  Link-Discriminator

   Description

      The Link-Discriminator option SHOULD be used in a Link-Drop-
      Request or a Link-Drop-Query-Request datagram.  This option is
      used to inform the peer of which link will be dropped.  If the
      peer did not send the LCP Link Discriminator Configuration Option
      during the LCP link negotiation phase, then this option MUST NOT
      be sent.

   A summary of the Link-Discriminator BAP Option format is shown below.
   The fields are transmitted from left to right.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |       Link Discriminator      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+







Richards & Smith          expires August 1996                  [Page 30]

RFC DRAFT                       PPP BACP                   February 1996


   Type

      0A for Link-Discriminator

   Length

      The Length field is one octet, and indicates the length of this
      BAP Option including the Type, Length and Link Discriminator
      fields.

   Link Discriminator

      The Link Discriminator field is 2 octets in length.  It contains
      the Link Discriminator that was contained in the LCP Link-
      Discriminator Configuration Option sent by the peer.




































Richards & Smith          expires August 1996                  [Page 31]

RFC DRAFT                       PPP BACP                   February 1996


Appendix


   List of BAP datagrams and associated fields.

   datagram                      mandatory fields           allowed options
   --------                      -----------------          ---------------
   Call-Request                  Link-Type                  No-Phone-Number
                                                            Call-Add-Code
   Call-Response                                            Phone-Number
                                                            Nak-Code
                                                            Time-Until-Retry
                                                            Link-Types
   Callback-Request              Link-Type                  Phone-Number
                                                            Call-Add-Code
   Callback-Response                                        Nak-Code
                                                            Time-Until-Retry
                                                            Link-Types
   Link-Drop-Request             Link-Type                  Link-Discriminator
                                                            Drop-Code
   Link-Drop-Response
   Link-Drop-Query-Request       Link-Type                  Link-Discriminator
                                                            Drop-Code
   Link-Drop-Query-Response                                 Nak-Code
                                                            Time-Until-Retry
   Bundle-Drop-Request                                      Drop-Code
   Bundle-Drop-Response
   Link-Type-Request
   Link-Type-Response            Link-Types
   Available-Link-Indication     Link-Type
   Available-Link-Response
   Call-Failure-Indication       Call-Failure-Code          Phone-Number
                                                            Link-Type
   Call-Failure-Response


History of BACP

   The first version of BACP was written by Craig Richards of Shiva
   Corporation.  This version was enhanced and improved by the MPCP
   Working Group, a collaborative effort of 3Com, Ascend, Bay Networks,
   Cisco, Microsoft, Shiva, US Robotics and Xylogics.

Acknowledgements

   Kevin Smith of Ascend for his contributions based on his work on the
   MP+ Specification.  Gerry Meyer and Robert Myhill of Shiva for their
   early comments and improvements.  Andy Nicholson of Microsoft for his



Richards & Smith          expires August 1996                  [Page 32]

RFC DRAFT                       PPP BACP                   February 1996


   improvements to the bandwidth management scheme.  Dana Blair and Andy
   Valencia of Cisco, Cheng Chen and Dan Brennan of 3Com for their good
   ideas as part of the MPCP Working Group. All of the members of the
   MPCP working group for their ability to work with their competitors
   with enthusiasm to produce a better protocol for the industry.

Security Considerations

   Security issues are not discussed in this memo.



References

   [1]   Simpson, W., Editor, "The Point-to-Point Protocol (PPP)", STD
         51, RFC 1661, Daydreamer, July 1994.

   [2]   Sklower, Lloyd, McGregor & Carr, "The PPP Multilink Protocol",
         RFC 1717,  PPP Extensions Working Group, Work in Progress.

Chair's Address

   The working group can be contacted via the current chair:

      Fred Baker
      Cisco Systems
      519 Lado Drive
      Santa Barbara, California 93111
      VOICE   +1 408 526 4257
      FAX     +1 805 681-0115

      EMail: fred@cisco.com



Editors' Addresses

   Craig Richards
   Shiva Corporation
   63 Third Avenue
   Burlington, MA  01803
   VOICE   +1 617 270 8419
   FAX     +1 617 270 8599

   EMail: crich@shiva.com


   Kevin Smith



Richards & Smith          expires August 1996                  [Page 33]

RFC DRAFT                       PPP BACP                   February 1996


   Ascend Communications, Inc.
   1275 Harbor Bay Parkway
   Alameda, CA  94501
   CA

   EMail: kevin@ascend.com













































Richards & Smith          expires August 1996                  [Page 34]

RFC DRAFT                       PPP BACP                   February 1996


                           Table of Contents


     1.     Introduction ..........................................    1
        1.1       Specification of Requirements ...................    1
        1.2       Terminology .....................................    1

     2.     New LCP Configuration Option ..........................    2
        2.1       Link Discriminator ..............................    2

     3.     BACP Operation ........................................    3
        3.1       BACP Configuration Options ......................    4
        3.2       Datagrams-Supported .............................    4
        3.3       Base-Phone-Number ...............................    5

     4.     BAP Operation .........................................    7
        4.1       Link Management .................................    7
        4.2       Bandwidth Management ............................    8
        4.3       BAP Packets .....................................   10
        4.4       Race Conditions .................................   11
        4.5       BAP Datagram Format .............................   11
           4.5.1  Call-Request ....................................   13
           4.5.2  Call-Response ...................................   14
           4.5.3  Callback-Request ................................   14
           4.5.4  Callback-Response ...............................   14
           4.5.5  Link-Drop-Request ...............................   15
           4.5.6  Link-Drop-Response ..............................   15
           4.5.7  Link-Drop-Query-Request .........................   15
           4.5.8  Link-Drop-Query-Response ........................   15
           4.5.9  Bundle-Drop-Request .............................   16
           4.5.10 Bundle-Drop-Response ............................   16
           4.5.11 Link-Type-Request ...............................   16
           4.5.12 Link-Type-Response ..............................   16
           4.5.13 Available-Link-Indication .......................   17
           4.5.14 Available-Link-Response .........................   17
           4.5.15 Call-Failure-Indication .........................   17
           4.5.16 Call-Failure-Response ...........................   17

     5.     BAP Datagram Options ..................................   18
        5.1       Link-Type .......................................   19
        5.2       Link-Types ......................................   20
        5.3       Phone-Number ....................................   21
           5.3.1  Phone-Number Sub-Options ........................   22
        5.4       No-Phone-Number-Needed ..........................   24
        5.5       Call-Add-Code ...................................   24
        5.6       Nak-Code ........................................   25
        5.7       Drop-Code .......................................   27
        5.8       Call-Failure-Code ...............................   28



Richards & Smith          expires August 1996                  [Page ii]

RFC DRAFT                       PPP BACP                   February 1996


        5.9       Time-Until-Retry ................................   29
        5.10      Link-Discriminator ..............................   30

     Appendix - List of BAP datagrams and associated fields .......   32

     ACKNOWLEDEMENTS ..............................................   32

     SECURITY CONSIDERATIONS ......................................   33

     REFERENCES ...................................................   33

     CHAIR'S ADDRESS ..............................................   33

     EDITORS'S ADDRESSES ..........................................   33





































Richards & Smith          expires August 1996                 [Page iii]

