unstructured    =  1*( [FWS] utext ) [FWS]

fields          =/ *( newsgroups /
                         path /
                         injection-date /
                         followup-to /
                         expires /
                         control /
                         supersedes /
                         distribution /
                         summary /
                         approved /
                         organization /
                         xref /
                         archive /
                         user-agent /
                         injection-info )

from            =  "From:" SP mailbox-list CRLF

orig-date       =  "Date:" SP date-time CRLF

      NOTE: This specification does not change [RFC2822], which says
      that agents MUST NOT generate <date-time> constructs which include
      any zone names defined by <obs-zone>.

message-id      =  "Message-ID:" SP [FWS] msg-id [FWS] CRLF

msg-id          =  "<" id-left "@" id-right ">"
                      ; maximum length is 250 octets

id-left         =  dot-atom-text / no-fold-quote

id-right        =  dot-atom-text / no-fold-literal

no-fold-quote   =  DQUOTE
                         ( "." *mqtext /
                           *mqtext "." /
                           *mqtext mqspecial *mqtext )
                         DQUOTE

mqtext          =  atext / "." / mqspecial

mqspecial       =  "(" / ")" /      ; same as specials except
                      "<" /            ; "\" and DQUOTE quoted
                      "[" / "]" /      ; "." doubled and ">" omitted
                      ":" / ";" /
                      "@" / "," /
                      ".." / "\\" / "\" DQUOTE

no-fold-literal =  "[" *( mdtext / "\[" / "\]" / "\\" ) "]"

mdtext          =  %d33-61 /        ; The rest of the US-ASCII
                      %d63-90 /        ; characters not including
                      %d94-126         ; ">", "[", "]", or "\"

subject         =  "Subject:" SP unstructured CRLF

newsgroups      =  "Newsgroups:" SP newsgroup-list CRLF

newsgroup-list  =  [FWS] newsgroup-name
                      *( [FWS] "," [FWS] newsgroup-name ) [FWS]

newsgroup-name  =  component *( "." component )

component       =  1*component-char

component-char  =  ALPHA / DIGIT / "+" / "-" / "_"

path            =  "Path:" SP path-list CRLF

path-list       =  [FWS]
                      *( ( path-identity / path-keyword /
                           path-diagnostic ) [FWS]
                         path-delimiter [FWS] )
                      tail-entry [FWS]


path-identity   =  ( ALPHA / DIGIT )
                      *( ALPHA / DIGIT / "-" / "." / "_" )

path-keyword    =  "POSTED" / "MISMATCH"

path-diagnostic =  1*( ALPHA / DIGIT / "-" / "." / ":" / "_" )

tail-entry      =  path-identity

path-delimiter  =  "!" / "!!"

sender          =  "Sender:" SP mailbox CRLF

reply-to        =  "Reply-To:" SP address-list CRLF

comments        =  "Comments:" SP unstructured CRLF

keywords        =  "Keywords:" SP phrase *("," phrase) CRLF

injection-date  =  "Injection-Date:" SP date-time CRLF


references      =  "References:" SP [CFWS] msg-id *(CFWS msg-id)
                      [CFWS] CRLF

followup-to     =  "Followup-To:" SP ( newsgroup-list / poster-text )
                      CRLF

poster-text     =  [FWS] %d112.111.115.116.101.114 [FWS]
                      ; "poster" in lower-case

expires         =  "Expires:" SP date-time CRLF

control         =  "Control:" SP [FWS] control-command [FWS] CRLF

control-command =  verb *( [FWS] argument )

verb            =  token

argument        =  value

supersedes      =  "Supersedes:" SP [FWS] msg-id [FWS] CRLF

distribution    =  "Distribution:" SP dist-list CRLF

dist-list       =  [FWS] dist-name
                      *( [FWS] "," [FWS] dist-name ) [FWS]

dist-name       =  ALPHA / DIGIT
                      *( ALPHA / DIGIT / "+" / "-" / "_" )

summary         =  "Summary:" SP unstructured CRLF

approved        =  "Approved:" SP mailbox-list CRLF

organization    =  "Organization:" SP unstructured CRLF

xref            =  "Xref:" SP [FWS] server-name
                      1*( FWS location ) [FWS] CRLF

server-name     =  path-identity

location        =  newsgroup-name ":" article-locator

article-locator =  1*( %x21-27 / %x29-3A / %x3C-7E )
                      ; US-ASCII printable characters
                      ; except '(' and ';'

archive         =  "Archive:" SP [CFWS] ("no" / "yes")
                      *( [CFWS] ";" archive-param ) CRLF

archive-param   =  parameter

user-agent      =  "User-Agent:" SP 1*product [CFWS] CRLF

product         =  [CFWS] token [ [CFWS] "/" product-version ]

product-version =  [CFWS] token

injection-info  =  "Injection-Info:" SP [CFWS] path-identity
                      [CFWS] *(';' parameter) CRLF

      NOTE: The syntax of <parameter> ([RFC2045] as amended by
      [RFC2231]), taken in conjunction with the folding rules of
      [RFC0822], effectively allows [CFWS] to occur both before and
      after the <parameter>, and also on either side of its "=".

host-value      =  dot-atom-text / [ dot-atom-text ":" ]
                      ( IPv4address / IPv6address ) ;  see [RFC 3986]

sender-value    =  mailbox / "verified"

      NOTE: Since any such <host-value>>, <sender-value> or <address-
      list> has also to be a syntactically correct <value>, it will
      usually be necessary to encapsulate is as a <quoted-string>, for
      example:

sender = "\"Joe Q. Public\" <joe@example.com>"

lines           =  "Lines" ":" SP [FWS] 1*DIGIT [FWS] CRLF

