challenge = auth-scheme 1*SP 1#auth-param

auth-scheme = token

auth-param = token "=" (token | quoted-string)

credentials = auth-scheme 1*SP 1#auth-param

challenge       = SASL 1*SP sasl-response-parameters

sasl-mechanisms = "mechanisms" "=" <"> 1#sasl-mech-name <">

realm           = "realm" "=" quoted-string
        ; See RFC 2617

sasl-sid        = "id" "=" quoted-string

sasl-challenge  =  "challenge" "=" base64-string

sasl-mech-name  = 1*20 SASLCHAR
        ; Name must be from IANA set of registered SASL mechanisms,
        ; e.g. "SECURID"

base64-string   = *base64-group [base64-fingroup]
        ; Encoding must be in accordance with section 3 of [RFC3548] ,
        ; except not limited to 76 chars/line

base64-group    = 4*BASE64

base64-fingroup = 4*BASE64 | (3*BASE64 "=") | (2*BASE64 "==")

SASLCHAR        = UPALPHA | DIGIT | "-" | "_"
        ; Characters allowed in SASL mechanism name
BASE64          = DIGIT | ALPHA | "+" | "/"

WSAC            = *LWS "," *LWS

credentials      = SASL [1*SP sasl-request-parameters]

sasl-mechanism   = "mechanism" "=" <"> sasl-mech-name <">

sasl-credentials = "credentials" "="
                        (base64-string | cancel-token)
cancel-token     = "*"

mechanisms="DIGEST-MD5,GSSAPI,CRAM-MD5",
realm="testrealm@example.com",
id="jfkasdgru42705"

mechanism="CRAM-MD5",
id="jfkasdgru42705"

id="jfkasdgru42705",
challenge=PDE4OTYuNjk3MTcwOTUyQHBvc3RvZmZpY2UucmVzdG9u
                           Lm1jaS5uZXQ+

id="jfkasdgru42705",
credentials=dGltIGI5MTNhNjAyYzdlZGE3YTQ5NWI0ZTZlNzMzNGQ
                            zODkw

id="jfkasdgru42705"

mechanism="SECURID",
credentials=AG1hZ251cwAxMjM0NTY3OAA=

id="jfkasdgru42705"

mechanisms="CRAM-MD5",
realm="testrealm@example.com",
id="jfkasdgru42705",
challenge=PDE4OTYuNjk3MTcwOTUyQHBvc3RvZmZpY2UucmVzdG9u
                           Lm1jaS5uZXQ+

id="jfkasdgru42705",
credentials=dGltIGI5MTNhNjAyYzdlZGE3YTQ5NWI0ZTZlNzMzNGQ
                            zODkw

id="jfkasdgru42705"

mechanisms="DIGEST-MD5,GSSAPI,CRAM-MD5",
realm="testrealm@example.com",
id="0001"

mechanism="DIGEST-MD5",
id="0001"

id="0001",
challenge=cmVhbG09ImVsd29vZC5pbm5vc29mdC5jb20iLG5vbmNl
                           PSJPQTZNRzl0RVFHbTJoaCIscW9wPSJhdXRoIixhbGdv
cml0aG09bWQ1LXNlc3MsY2hhcnNldD11dGYtOA==
id="0001",
credentials=Y2hhcnNldD11dGYtOCx1c2VybmFtZT0iY2hyaXMiLHJ
                            lYWxtPSJlbHdvb2QuaW5ub3NvZnQuY29tIixub25jZT
                            0iT0E2TUc5dEVRR20yaGgiLG5jPTAwMDAwMDAxLGNub
                            25jZT0iT0E2TUhYaDZWcVRyUmsiLGRpZ2VzdC11cmk9
                            ImltYXAvZWx3b29kLmlubm9zb2Z0LmNvbSIscmVzcG9
                            uc2U9ZDM4OGRhZDkwZDRiYmQ3NjBhMTUyMzIxZjIxND
NhZjcscW9wPWF1dGg=

id="0001",
challenge=cnNwYXV0aD00YjJiYjM3ZjA0OTEwNTA1Nzc3YzJmNjM
                           4YzkyMjcyNQ==

id="0001"

id="0001"

mechanisms="DIGEST-MD5,GSSAPI,CRAM-MD5",
realm="testrealm@example.com",
id="0001"

mechanism="DIGEST-MD5",
id="0001"

id="0001",
challenge=cmVhbG09ImVsd29vZC5pbm5vc29mdC5jb20iLG5vbmNl
                           PSJPQTZNRzl0RVFHbTJoaCIscW9wPSJhdXRoIixhbGdv
cml0aG09bWQ1LXNlc3MsY2hhcnNldD11dGYtOA==

id="0001",
credentials=*

mechanism="DIGEST-MD5,GSSAPI,CRAM-MD5",
realm="testrealm@example.com",
id="jfkasdgru42705"

mechanism="CRAM-MD5",
id="jfkasdgru42705"

id="jfkasdgru42705",
challenge=PDE4OTYuNjk3MTcwOTUyQHBvc3RvZmZpY2UucmVzdG9u
                           Lm1jaS5uZXQ+

id="jfkasdgru42705",
credentials=dGltIGI5MTNhNjAyYzdlZGE3YTQ5NWI0ZTZlNzMzNGQ
                            zODkw

id="jfkasdgru42705"

mechanisms="DIGEST-MD5,GSSAPI,OTP",
realm="testrealm@example.com",
id="0001"

mechanism="OTP",id="0001",credentials=AHRpbQ==

id="0001",challenge=b3RwLW1kNSAxMjMga2UxMjM0IGV4dA==

id="0001",credentials=aGV4OjExZDRjMTQ3ZTIyN2MxZjE=

