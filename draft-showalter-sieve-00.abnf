action = toss / fileinto / forward / bounce / reply / stop /
       extension-action

address = string
           ;; any legal IMAIL address

any-of = "any-of" WSP "(" [WSP] #(condition) [WSP] ")"

all-of = "all-of" WSP "(" [WSP] #(condition) [WSP] ")"

big-number = number [ UNIT ]

bounce = "bounce" WSP string
           ;; string is a text message to be sent with the bounce as the
           ;; reason

control-structure = if / extension-control-structure

command = action [WSP] ";" [WSP] / control-structure

commands = #(command)

comment = "#" *CHAR newline

fileinto = "fileinto" WSP string

forward = "forward" WSP address

if = "if" WSP test WSP "then" WSP commands WSP #("elsif" WSP
       test WSP "then" WSP commands) [ "else" WSP commands WSP ]
       "endif"
           ;; if <cond> then <commands>
           ;; [elsif <cond> then <commands> [elsif ...]]
header = "header" WSP string-list WSP match-keyword WSP string-list

match-keyword = "contains" / "matches" / "is" / "contains-nocase" /
       "contains-nocase" / "is-nocase"

newline = CRLF / CR / LF
           ;; A CRLF is ALWAYS one newline.

number = 1*DIGIT

or = condition WSP "or" WSP condition

quoted-string = "
           ;;
           ;; \ inside a string maps to    ;; Note that newlines and other weird characters
           ;; are all strings.

size = "size" WSP ( "over" / "under" ) WSP big-number

stop = "stop"

string = quoted-string / user-message

string-list = "(" [WSP] #(string) [WSP] ")"

test = [WSP] any-of / all-of / exists / false / header /
       not / size / extension-test [WSP]

UNIT = "K" / "M" / "G"
           ;; kilobytes, megabytes, or gigabytes

user-message = "message" [WSP] newline "." newline
           ;; note when used,
           ;; a CR that is not followed by an LF becomes a CRLF;
           ;; an LF that is not followed by a CR becomes a CRLF.
           ;; a leading .. on a line is mapped to .

WSP = " " / CR / LF / tab
           ;; just whitespace


