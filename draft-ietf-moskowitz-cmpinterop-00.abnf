pvno = 1,
sender = distinguished name of requester,
recipient = distinguished name of CA/RA
messageTime = time message was generated with a
                     granularity of seconds, in Greenwich Mean Time
iterationCount=1024,
transactionID = octet string selected by requester
           }     /* end of header */

certReqId = integer selected by requester,
algorithm = OID for algorithm of the public key
parameters = NULL
                        },
subjectPublicKey = BIT STRING of the public key }
algorithm = 1.2.840.113533.7.66.13
                                    --PasswordBasedMac--,
parameters = --as needed
                            }
value = BIT STRING, value is HMAC of public key
algorithm = OID for algorithm of the public key
parameters = NULL
                          },
subjectPublicKey = BIT STRING of the public key
algorithm = OID for algorithm of the public key ,
parameters = NULL
signature = BIT STRING, the signature computed over
                               the DER-encoded value of the certReq
                               message if the subject and
                               subjectPublicKey values are present in
                               the CertTemplate.  Use the popoSKInput
                               field if either the subject or
                               subjectPublicKey values/fields are not
                               present.

PKIProtection = BIT STRING, is the HMAC value calculated over the
pvno = 1,
sender = distinguished name of CA/RA,
recipient = distinguished name of requester,
messageTime = time message was generated with a
                     granularity of seconds, in Greenwich Mean Time
iterationCount=1024,
transactionID = transactionID from the ir message
           }     /* end of header */

caPub = X.509 certificate of issuing CA,


certReqId = certReqId from the ir,
              status {
                 PKIStatusInfo {
Status = integer specifying { granted, rejected, or
                           waiting },
FailInfo = if status = rejected, this bit string
                             specifies the reason  [if status !=
                             rejected,this field is absent]
                     },
certificate = X.509 certificate of requester
PKIProtection = BIT STRING, HMAC value calculated over the
pvno = 1,
sender = distinguished name of requester,
recipient = distinguished name of CA/RA
messageTime = time message was generated with a
                     granularity of seconds, in Greenwich Mean Time
iterationCount=1024,
transactionID = transactionID from the ir message
           }     /* end of header */

PKIProtection = BIT STRING, HMAC value calculated over the PKIHeader
pvno = 1,
sender = distinguished name of requester,
recipient = distinguished name of revoaction processor [this is
                      usually the CA/RA, but could also be an indirect
messageTime = time message was generated with a
                     granularity of seconds, in Greenwich Mean Time
transactionID = octet string selected by requester
revocationReason = reason certificate(s) should be revoked,
badSinceDate = last date use of private key should be
PKIProtection = BIT STRING, value is ASN.1 encoded structure as
r = 160 bits, one half of DSA signature
s = 160 bits, one half of DSA signature
pvno = 1,
sender = distinguished name of CA/RA,
recipient = distinguished name of requester,
messageTime = time message was generated with a
                     granularity of seconds, in Greenwich Mean Time
transactionID = transactionID from the rr message
         }     /* end of header */

Status = integer specifying { granted, rejected, or
                        waiting },
FailInfo = if status = rejected, this bit string
                          specifies the reason  [if status != rejected,
                          this field is absent]
Issuer = distinguished name of issuer,
Serial = serial number of revoked certificate
PKIProtection = BIT STRING, value is ASN.1 encoded structure as
      follows: {
       Dss-Sig-Value  {
r = 160 bits, one half of DSA signature
s = 160 bits, one half of DSA signature
certificate = CA protocol verification certificate
pvno = 1,
sender = distinguished name of requester,
recipient = distinguished name of CA/RA,
messageTime = time message was generated with a
                     granularity of seconds, in Greenwich Mean Time
transactionID = octet string selected by requester
         }     /* end of header */

certReqId = integer selected by requester,
algorithm = OID for algorithm of the public key
parameters = NULL
                        },
subjectPublicKey = BIT STRING of the public key }
algorithm = 1.2.840.113533.7.66.13
                                    --PasswordBasedMac--,
parameters = --as needed
                            }
value = BIT STRING, value is HMAC of public key
algorithm = OID for algorithm of the public key
parameters = NULL
                          },
subjectPublicKey = BIT STRING of the public key
algorithm = OID for algorithm of the public key ,
parameters = NULL
signature = BIT STRING, the signature computed over
                               the DER-encoded value of the certReq
                               message if the subject and
                               subjectPublicKey values are present in
                               the CertTemplate.  Use the popoSKInput
                               field if either the subject or
                               subjectPublicKey values/fields are not
                               present.
PKIProtection = BIT STRING, value is ASN.1 encoded structure as
r = 160 bits, one half of DSA signature
s = 160 bits, one half of DSA signature

pvno = 1,
sender = distinguished name of CA/RA,
recipient = distinguished name of requester,
messageTime = time message was generated with a
                     granularity of seconds, in Greenwich Mean Time
transactionID = transactionID from the cr message
         }     /* end of header */

certReqId = certReqId from the cr,
Status = integer specifying { granted, rejected, or
                             waiting },
FailInfo = if status = rejected, this bit string
                               specifies the reason  [if status !=
                               rejected, this field is absent]
                      },
certificate = X.509 certificate of requester
PKIProtection = BIT STRING, value is ASN.1 encoded structure as
r = 160 bits, one half of DSA signature
s = 160 bits, one half of DSA signature
certificate = CA protocol verification certificate

pvno = 1,
sender = distinguished name of requester,
recipient = distinguished name of CA/RA,
messageTime = time message was generated with a
                     granularity of seconds, in Greenwich Mean Time
transactionID = transactionID from the cr message
         }     /* end of header */

PKIProtection = BIT STRING, value is ASN.1 encoded structure as
r = 160 bits, one half of DSA signature
s = 160 bits, one half of DSA signature
pvno = 1,
sender = current distinguished name of requester,
recipient = distinguished name of CA,
messageTime = time message was generated with a
                     granularity of seconds, in Greenwich Mean Time
transactionID = octet string selected by requester
         }     /* end of header */

certReqId = integer selected by requester,
subject = new distinguished name of requester,
algorithm = OID for algorithm of the public key
parameters = NULL
                        },
subjectPublicKey = BIT STRING of the public key }
algorithm = 1.2.840.113533.7.66.13
                                    --PasswordBasedMac--,
parameters = --as needed
                            }
value = BIT STRING, value is HMAC of public key
algorithm = OID for algorithm of the public key
parameters = NULL
                          },
subjectPublicKey = BIT STRING of the public key
algorithm = OID for algorithm of the public key ,
parameters = NULL
signature = BIT STRING, the signature computed over
                               the DER-encoded value of the certReq
                               message if the subject and

PKIProtection = BIT STRING, value is ASN.1 encoded structure as
r = 160 bits, one half of DSA signature
s = 160 bits, one half of DSA signature
pvno = 1,
sender = distinguished name of CA,
recipient = distinguished name of requester,
messageTime = time message was generated with a
                     granularity of seconds, in Greenwich Mean Time
transactionID = transactionID from the cr message
         }     /* end of header */

certReqId = certReqId from the cr,
Status = integer specifying { granted, rejected, or
                             waiting },
FailInfo = if status = rejected, this bit string
                               specifies the reason  [if status !=
                               rejected, this field is absent]
                      },
certificate = X.509 certificate of requester
PKIProtection = BIT STRING, value is ASN.1 encoded structure as
r = 160 bits, one half of DSA signature
s = 160 bits, one half of DSA signature
certificate = CA protocol verification certificate
pvno = 1,
sender = distinguished name of requester,
recipient = distinguished name of CA/RA,
messageTime = time message was generated with a
                     granularity of seconds, in Greenwich Mean Time
transactionID = transactionID from the cr message
         }     /* end of header */

PKIProtection = BIT STRING, value is ASN.1 encoded structure as
r = 160 bits, one half of DSA signature
s = 160 bits, one half of DSA signature
