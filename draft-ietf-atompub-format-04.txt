

Network Working Group                                 M. Nottingham, Ed.
Internet-Draft
Expires: July 11, 2005                                     R. Sayre, Ed.
                                               Boswijck Memex Consulting
                                                        January 10, 2005


                      The Atom Syndication Format
                      draft-ietf-atompub-format-04

Status of this Memo

   By submitting this Internet-Draft, I certify that any applicable
   patent or other IPR claims of which I am aware have been disclosed,
   and any of which I become aware will be disclosed, in accordance with
   RFC 3668.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as
   Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on July 11, 2005.

Copyright Notice

   Copyright (C) The Internet Society (2005).  All Rights Reserved.

Abstract

   This document specifies Atom, an XML-based Web content and metadata
   syndication format.









Nottingham & Sayre       Expires July 11, 2005                  [Page 1]

Internet-Draft                Atom Format                   January 2005


Table of Contents

   1.   Introduction . . . . . . . . . . . . . . . . . . . . . . . .   4
     1.1  Editorial Notes  . . . . . . . . . . . . . . . . . . . . .   4
     1.2  Example  . . . . . . . . . . . . . . . . . . . . . . . . .   5
     1.3  Conformance  . . . . . . . . . . . . . . . . . . . . . . .   5
     1.4  Notational Conventions . . . . . . . . . . . . . . . . . .   5
   2.   Atom Documents . . . . . . . . . . . . . . . . . . . . . . .   7
   3.   Common Atom Constructs . . . . . . . . . . . . . . . . . . .   8
     3.1  Text Constructs  . . . . . . . . . . . . . . . . . . . . .   8
       3.1.1  "type" Attribute . . . . . . . . . . . . . . . . . . .   8
     3.2  Person Constructs  . . . . . . . . . . . . . . . . . . . .   9
       3.2.1  "atom:name" Element  . . . . . . . . . . . . . . . . .   9
       3.2.2  "atom:uri" Element . . . . . . . . . . . . . . . . . .   9
       3.2.3  "atom:email" Element . . . . . . . . . . . . . . . . .   9
     3.3  Date Constructs  . . . . . . . . . . . . . . . . . . . . .   9
     3.4  Service Constructs . . . . . . . . . . . . . . . . . . . .   9
       3.4.1  "href" Attribute . . . . . . . . . . . . . . . . . . .  10
     3.5  Link Constructs  . . . . . . . . . . . . . . . . . . . . .  10
       3.5.1  "rel" Attribute  . . . . . . . . . . . . . . . . . . .  10
       3.5.2  "type" Attribute . . . . . . . . . . . . . . . . . . .  11
       3.5.3  "href" Attribute . . . . . . . . . . . . . . . . . . .  11
       3.5.4  "hreflang" Attribute . . . . . . . . . . . . . . . . .  11
       3.5.5  "title" Attribute  . . . . . . . . . . . . . . . . . .  11
       3.5.6  "length" Attribute . . . . . . . . . . . . . . . . . .  11
     3.6  Identity Constructs  . . . . . . . . . . . . . . . . . . .  12
       3.6.1  Dereferencing Identity Constructs  . . . . . . . . . .  12
       3.6.2  Comparing Identity Constructs  . . . . . . . . . . . .  12
     3.7  The Category Construct . . . . . . . . . . . . . . . . . .  13
       3.7.1  The "term" Attribute . . . . . . . . . . . . . . . . .  13
       3.7.2  The "scheme" Attribute . . . . . . . . . . . . . . . .  13
       3.7.3  The "label" attribute  . . . . . . . . . . . . . . . .  13
   4.   The "atom:feed" Element  . . . . . . . . . . . . . . . . . .  14
     4.1  "version" Attribute  . . . . . . . . . . . . . . . . . . .  14
     4.2  The "atom:head" Element  . . . . . . . . . . . . . . . . .  14
       4.2.1  "atom:title" Element . . . . . . . . . . . . . . . . .  14
       4.2.2  "atom:link" Element  . . . . . . . . . . . . . . . . .  14
       4.2.3  "atom:category" Element  . . . . . . . . . . . . . . .  15
       4.2.4  "atom:introspection" Element . . . . . . . . . . . . .  15
       4.2.5  "atom:post" Element  . . . . . . . . . . . . . . . . .  15
       4.2.6  "atom:author" Element  . . . . . . . . . . . . . . . .  15
       4.2.7  "atom:contributor" Element . . . . . . . . . . . . . .  15
       4.2.8  "atom:tagline" Element . . . . . . . . . . . . . . . .  15
       4.2.9  "atom:id" Element  . . . . . . . . . . . . . . . . . .  16
       4.2.10   "atom:generator" Element . . . . . . . . . . . . . .  16
       4.2.11   "atom:copyright" Element . . . . . . . . . . . . . .  16
       4.2.12   "atom:info" Element  . . . . . . . . . . . . . . . .  16
       4.2.13   "atom:updated" Element . . . . . . . . . . . . . . .  16



Nottingham & Sayre       Expires July 11, 2005                  [Page 2]

Internet-Draft                Atom Format                   January 2005


   5.   The "atom:entry" Element . . . . . . . . . . . . . . . . . .  18
     5.1  "atom:title" Element . . . . . . . . . . . . . . . . . . .  18
     5.2  "atom:link" Element  . . . . . . . . . . . . . . . . . . .  18
     5.3  "atom:category" Element  . . . . . . . . . . . . . . . . .  18
     5.4  "atom:edit" Element  . . . . . . . . . . . . . . . . . . .  19
     5.5  "atom:author" Element  . . . . . . . . . . . . . . . . . .  19
     5.6  "atom:contributor" Element . . . . . . . . . . . . . . . .  19
     5.7  "atom:host" Element  . . . . . . . . . . . . . . . . . . .  19
     5.8  "atom:id" Element  . . . . . . . . . . . . . . . . . . . .  19
     5.9  "atom:updated" Element . . . . . . . . . . . . . . . . . .  19
     5.10   "atom:published" Element . . . . . . . . . . . . . . . .  20
     5.11   "atom:summary" Element . . . . . . . . . . . . . . . . .  20
     5.12   "atom:content" Element . . . . . . . . . . . . . . . . .  20
       5.12.1   "type" attribute . . . . . . . . . . . . . . . . . .  20
       5.12.2   "src" attribute  . . . . . . . . . . . . . . . . . .  21
       5.12.3   Processing Model . . . . . . . . . . . . . . . . . .  21
     5.13   "atom:copyright" Element . . . . . . . . . . . . . . . .  22
     5.14   "atom:head" Element  . . . . . . . . . . . . . . . . . .  22
   6.   Managing Feed State  . . . . . . . . . . . . . . . . . . . .  23
   7.   Securing Atom Documents  . . . . . . . . . . . . . . . . . .  24
     7.1  Digital Signatures . . . . . . . . . . . . . . . . . . . .  24
     7.2  Encryption . . . . . . . . . . . . . . . . . . . . . . . .  24
   8.   Embedding Atom in Other Formats  . . . . . . . . . . . . . .  25
   9.   Extending Atom . . . . . . . . . . . . . . . . . . . . . . .  26
   10.  IANA Considerations  . . . . . . . . . . . . . . . . . . . .  27
     10.1   Registry of Link Relations . . . . . . . . . . . . . . .  27
   11.  Security Considerations  . . . . . . . . . . . . . . . . . .  29
   12.  References . . . . . . . . . . . . . . . . . . . . . . . . .  30
   12.1   Normative References . . . . . . . . . . . . . . . . . . .  30
   12.2   Informative References . . . . . . . . . . . . . . . . . .  31
        Authors' Addresses . . . . . . . . . . . . . . . . . . . . .  32
   A.   Contributors . . . . . . . . . . . . . . . . . . . . . . . .  33
   B.   Revision History . . . . . . . . . . . . . . . . . . . . . .  34
        Intellectual Property and Copyright Statements . . . . . . .  36

















Nottingham & Sayre       Expires July 11, 2005                  [Page 3]

Internet-Draft                Atom Format                   January 2005


1.  Introduction

   Atom is an XML-based document format intended to allow lists of
   related information, known as "feeds".  Feeds are composed of a
   number of items, known as "entries", each with an extensible set of
   attached metadata.  For example, each entry has a title.

   The primary use case that Atom addresses is the syndication of Web
   content such as Weblogs and news headlines to Web sites as well as
   directly to user agents.  However, nothing precludes it from being
   used for other purposes and kinds of content.

   Details of communication protocols between software agents using Atom
   can be found in the Atom Protocol specification [Atom-protocol].

   [[ more motivation / design principles ]]

1.1  Editorial Notes

   The Atom format is a work-in-progress, and this draft is both
   incomplete and likely to change rapidly.  As a result, THE FORMAT
   DESCRIBED BY THIS DRAFT SHOULD NOT BE DEPLOYED, either in production
   systems or in any non-experimental fashion on the Internet.

   Discussion of this draft happens in two fora;

      The mailing list [1]
      The Atom Wiki Web site [2]

   Active development takes place on the mailing list, while the Wiki is
   used for issue tracking and new proposals.

   This document is an early draft and known to be incomplete.  Topics
   marked [[like this]] indicate where additional text is likely to be
   added.
















Nottingham & Sayre       Expires July 11, 2005                  [Page 4]

Internet-Draft                Atom Format                   January 2005


1.2  Example

   A minimal, single-entry Atom Feed Document:

   <?xml version="1.0" encoding="UTF-8"?>
   <feed version="draft-ietf-atompub-format-04
   : do not deploy"
    xmlns="http://purl.org/atom/ns#draft-ietf-atompub-format-04
   ">
     <head>
       <title>Example Feed</title>
       <link href="http://example.org/"/>
       <updated>2003-12-13T18:30:02Z</updated>
       <author>
         <name>John Doe</name>
       </author>
     </head>
     <entry>
       <title>Atom-Powered Robots Run Amok</title>
       <link href="http://example.org/2003/12/13/atom03"/>
       <id>vemmi://example.org/2003/32397</id>
       <updated>2003-12-13T18:30:02Z</updated>
     </entry>
   </feed>


1.3  Conformance

   [[ talk about atom documents and atom consumers, and how requirements
   are placed on them ]]

1.4  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in BCP 14, [RFC2119].

   This specification uses XML Namespaces [W3C.REC-xml-names-19990114]
   to uniquely identify XML elements and attribute names.  It uses the
   following namespace prefixes for the indicated namespace URIs;

   "atom":  http://purl.org/atom/ns#draft-ietf-atompub-format-04

   Note that the choice of any namespace prefix is arbitrary and not
   semantically significant.

   Atom is specified using terms from the XML Infoset
   [W3C.REC-xml-infoset-20011024].  However, this specification uses a



Nottingham & Sayre       Expires July 11, 2005                  [Page 5]

Internet-Draft                Atom Format                   January 2005


   shorthand for two common terms; the phrase "Information Item" is
   omitted when naming Element Information Items and Attribute
   Information Items.

   Therefore, when this specification uses the term "element," it is
   referring to an Element Information Item in Infoset terms.  Likewise,
   when it uses the term "attribute," it is referring to an Attribute
   Information Item.











































Nottingham & Sayre       Expires July 11, 2005                  [Page 6]

Internet-Draft                Atom Format                   January 2005


2.  Atom Documents

   This specification describes two kinds of Atom Documents; Atom Feed
   Documents and Atom Entry Documents.

   An Atom Feed Document is a representation of an Atom feed, including
   metadata about the feed, and some or all of the entries associated
   with it.  Its document element is atom:feed.

   An Atom Entry Document represents exactly one Atom Entry, outside of
   the context of an Atom Feed.  Its document element is atom:entry.

   Both kinds of Atom documents are specified in terms of the XML
   Information Set, serialised as XML 1.0 [W3C.REC-xml-20040204] and
   identified with the "application/atom+xml" media type.  Atom
   Documents MUST be well-formed XML.

   [[ Validity? ]]

   Atom constrains the appearance and content of elements and
   attributes; unless otherwise stated, Atom Documents MAY contain other
   Information Items as appropriate.  In particular, Comment Information
   Items and Processing Instruction Information Items SHOULD be ignored
   in the normal processing of an Atom Document.

   Any element in an Atom Document MAY have an xml:base attribute.  XML
   Base [W3C.REC-xmlbase-20010627] processing MUST be applied to any
   relative reference [RFC2396bis] present in an Atom Document.  This
   includes such elements and attributes as specified by Atom itself, as
   well as those specified by extensions to Atom.

   Any element in an Atom Document MAY have an xml:lang attribute, whose
   content indicates the default natural language of the element's
   content.  Requirements regarding the content and interpretation of
   xml:lang are specified in XML 1.0 [W3C.REC-xml-20040204] Section
   2.12.

   [[ discussion of URI escaping and i18n, IRI ]]

   [[ discussion of white space ]]

   Atom is extensible.  See the section titled 'Extending Atom' later in
   this document for a full description of how Atom Documents can be
   extended.







Nottingham & Sayre       Expires July 11, 2005                  [Page 7]

Internet-Draft                Atom Format                   January 2005


3.  Common Atom Constructs

   Many of Atom's elements share a few common structures.  This section
   defines a few such structures and their requirements, for convenient
   reference by the appropriate element definitions.

   When an element is identified as being a particular kind of
   construct, it inherits the corresponding requirements from that
   construct's definition in this section.

3.1  Text Constructs

   A Text construct contains human readable text, usually in fairly
   small quantities.

3.1.1  "type" Attribute

   Text constructs MAY have a "type" attribute.  When present, the value
   MUST be one of "TEXT", "HTML" or "XHTML".  If the "type" attribute is
   not provided, software MUST behave as though it were present with a
   value of "TEXT".

   Note that MIME media types [RFC2045] are not acceptable values for
   the "type" attribute.

   If the value is "TEXT", the content of the Text construct MUST NOT
   contain child elements.  Such text is intended to be presented to
   humans in a readable fashion.  Thus, software MAY display it using
   normal text rendering techniques such as proportional fonts,
   white-space collapsing, and justification.

   If the value of "type" is "HTML", the content of the Text construct
   MUST NOT contain child elements, and SHOULD be suitable for handling
   by software that knows HTML.  The HTML markup must be escaped; for
   example, "<br>" as "&lt;br>".  The HTML markup SHOULD be such that it
   could validly appear directly within an HTML <DIV> element.
   Receiving software which displays the content MAY use the markup to
   aid in displaying it.

   If the value of "type" is "XHTML", the content of the Text construct
   MAY contain child elements.  The content SHOULD be XHTML text and
   markup that could validly appear directly within an xhtml:div
   element.  Receiving software which displays the content MAY use the
   markup to aid in displaying it.  Escaped markup is interpreted as a
   text representation of markup, and MUST NOT be interpreted as markup
   itself.





Nottingham & Sayre       Expires July 11, 2005                  [Page 8]

Internet-Draft                Atom Format                   January 2005


3.2  Person Constructs

   A Person construct is an element that describes a person,
   corporation, or similar entity.

   Person constructs MAY be extended by namespace-qualified element
   children.

   This specification assigns no significance to the order of appearance
   of the child elements of a Person construct.

3.2.1  "atom:name" Element

   The "atom:name" element's content conveys a human-readable name for
   the person.  Person constructs MUST contain exactly one "atom:name"
   element.

3.2.2  "atom:uri" Element

   The "atom:uri" element's content conveys a URI associated with the
   person.  Person constructs MAY contain an atom:uri element, but MUST
   NOT contain more than one.  The content of atom:uri in a Person
   construct MUST be a URI reference [RFC2396bis].

   xml:base [W3C.REC-xmlbase-20010627] processing MUST be applied to the
   atom:uri element's content.

3.2.3  "atom:email" Element

   The "atom:email" element's content conveys an e-mail address
   associated with the persons.  Person constructs MAY contain an
   atom:email element, but MUST NOT contain more than one.  Its content
   MUST be an e-mail address [RFC2822].

3.3  Date Constructs

   A Date construct is an element whose content MUST conform to the
   date-time BNF rule in [RFC3339].

3.4  Service Constructs

   A Service construct is an empty element that conveys the URI of an
   Atom Publishing Protocol [Atom-protocol] service associated with an
   entry or feed.  The type of service is identified by the element
   name.

   A Service construct has the following attribute:




Nottingham & Sayre       Expires July 11, 2005                  [Page 9]

Internet-Draft                Atom Format                   January 2005


3.4.1  "href" Attribute

   The "href" attribute contains the a URI pointing to the endpoint of
   the service named by the name attribute.  atom:service elements MUST
   have a "href" attribute, whose value MUST be a URI reference
   [RFC2396bis].

   xml:base processing MUST be applied to the "href" attribute.

3.5  Link Constructs

   A Link construct is an empty element that describes a connection from
   an Atom Document to another Web resource.

3.5.1  "rel" Attribute

   Link constructs MAY have an optional "rel" attribute that indicates
   the link relation type.  If the "rel" attribute is not present, the
   link construct MUST be interpreted as if the link relation type is
   "alternate".

   rel_attribute = segment-nz-nc / URI

   The value of "rel" MUST be either a name, which is non-empty and does
   not contain any colon (":") characters, or a URI [RFC2396bis].  Note
   that use of a relative reference to the "rel" value URI is not
   allowed.  If a name is given, implementations MUST consider the link
   relation type to be equivalent to the same name registered within the
   IANA Registry of Link Relations Section 10, and thus the URI that
   would be obtained by appending the value of the rel attribute to the
   string "http://www.iana.org/assignments/relation/".  The value of
   "rel" describes the meaning of the link, but does not impose any
   behavioral requirements on implementations.

   This document defines two initial values for the Registry of Link
   Relations:

   The value "alternate" signifies that the URI in the value of the href
   attribute identifies an alternate version of the resource described
   by the containing element.

   The value "related" signifies that the URI in the value of the href
   attribute identifies a resource to which the resource described by
   the containing atom:feed or atom:entry element is related.  For
   example, the feed for a site which discusses the performance of the
   search engine at "http://search.example.com" might contain, as a
   child of atom:head:
   <link rel="related" href="http://search.example.com/">



Nottingham & Sayre       Expires July 11, 2005                 [Page 10]

Internet-Draft                Atom Format                   January 2005


   An identical link might appear as a child of any atom:entry whose
   content contains a discussion of that same search engine.

3.5.2  "type" Attribute

   Link constructs MAY have a type attribute, whose value MUST conform
   to the syntax of a MIME media type [RFC2045].

   The type attribute's value is an advisory media type; it MAY be used
   as a hint to determine the type of the representation which is
   expected to be returned when the value of the href attribute is
   dereferenced.  Note that the type attribute does not override the
   actual media type returned with the representation.

3.5.3  "href" Attribute

   The "href" attribute contains the link's URI.  Link constructs MUST
   have a href attribute, whose value MUST be a URI reference
   [RFC2396bis].

   xml:base [W3C.REC-xmlbase-20010627] processing MUST be applied to the
   href attribute's content.

3.5.4  "hreflang" Attribute

   The "hreflang" attribute's content describes the language of the
   resource pointed to by the href attribute.  When used together with
   the rel="alternate", it implies a translated version of the entry.
   Link constructs MAY have an hreflang attribute, whose value MUST be a
   language tag [RFC3066].

3.5.5  "title" Attribute

   The "title" attribute conveys human-readable information about the
   link.  Link constructs MAY have a title attribute.

3.5.6  "length" Attribute

   The "length" attribute indicates an advisory length of the linked
   content in octets; it MAY be used as a hint to determine the content
   length of the representation returned when the URI in the href
   attribute is dereferenced.  Note that the length attribute does not
   override the actual content length of the representation as reported
   by the underlying protocol.

   Link constructs MAY have a length attribute.





Nottingham & Sayre       Expires July 11, 2005                 [Page 11]

Internet-Draft                Atom Format                   January 2005


3.6  Identity Constructs

   An Identity construct is an element whose content conveys a
   permanent, universally unique identifier for the construct's parent.
   Its content MUST be a URI, as defined by [RFC2396bis].  Note that the
   definition of "URI" excludes relative references.

   When an Atom document is relocated, migrated, syndicated,
   republished, exported or imported, the content of its Identity
   construct MUST NOT change.  Put another way, an Identity construct
   pertains to all instantiations of a particular Atom entry or feed;
   revisions retain the same content in their Identity constructs.

3.6.1  Dereferencing Identity Constructs

   The content of an Identity construct MAY be dereferencable (e.g.  an
   HTTP URI).  However, processors MUST NOT assume it to be
   dereferencable.

   The content of an Identity construct MUST be created in a way that
   assures uniqueness, and it is suggested that the Identity construct
   be stored along with the associated resource.

   Because of the risk of confusion between URIs that would be
   equivalent if dereferenced, the following normalization strategy is
   strongly encouraged when generating Identity constructs:

   o  Provide the scheme in lowercase characters.
   o  Provide the host, if any, in lowercase characters.
   o  Only perform percent-encoding where it is essential.
   o  Use uppercase A-through-F characters when percent-encoding.
   o  Prevent dot-segments appearing in paths.
   o  For schemes that define a default authority, use an empty
      authority if the default is desired.
   o  For schemes that define an empty path to be equivalent to a path
      of "/", use "/".
   o  For schemes that define a port, use an empty port if the default
      is desired.
   o  Preserve empty fragment identifiers and queries.
   o  Ensure that all portions of the URI are UTF-8 encoded NFC form
      Unicode strings.

3.6.2  Comparing Identity Constructs

   Instances of Identity constructs can be compared to determine whether
   an entry or feed is the same as one seen before.  Processors MUST
   compare Identity constructs on a character-by-character basis in a
   case-sensitive fashion.



Nottingham & Sayre       Expires July 11, 2005                 [Page 12]

Internet-Draft                Atom Format                   January 2005


   As a result, two URIs that resolve to the same resource but are not
   character-for-character identical will be considered different for
   the purposes of Identifier comparison.

   For example, "http://www.example.org/thing",
   "http://www.example.org/Thing", "http://www.EXAMPLE.org/thing" and
   "HTTP://www.example.org/thing" will all be considered different
   identifiers, despite their differences in case.

   Likewise, "http://www.example.com/~bob",
   "http://www.example.com/%7ebob" and "http://www.example.com/%7Ebob"
   will all be considered different identifiers, because URI %-escaping
   is significant for the purposes of comparison.

3.7  The Category Construct

   Category constructs contain information about a category to which an
   Atom feed or entry is associated.

3.7.1  The "term" Attribute

   The "term" attribute will be a string which identifies the category
   within the categorization scheme to which the entry or feed belongs.
   Category constructs MUST have a "term" attribute.

3.7.2  The "scheme" Attribute

   The is a URI that identifies a categorization scheme.  Category
   constructs MAY have a "scheme" attribute.

3.7.3  The "label" attribute

   The "label" attribute provides a human-readable label that may be
   displayed in end-user applications.  Category constructs MAY have a
   "label" attribute.
















Nottingham & Sayre       Expires July 11, 2005                 [Page 13]

Internet-Draft                Atom Format                   January 2005


4.  The "atom:feed" Element

   The "atom:feed" element is the document (i.e., top-level) element of
   an Atom Feed Document, acting as a container for metadata and data
   associated with the feed.  Its first element child MUST be atom:head,
   which MAY be followed zero or more atom:entry child elements.

4.1  "version" Attribute

   atom:feed elements MUST have a "version" attribute whose content
   indicates the version of the Atom specification that the feed
   conforms to.  The content of this attribute is unstructured text.

   The version identifier for this specification is
   "draft-ietf-atompub-format-04 : do not deploy".

4.2  The "atom:head" Element

   The atom:head element acts as a container for metadata about the feed
   itself.

   The atom:head element MAY contain any namespace-qualified
   [W3C.REC-xml-names-19990114] elements as children.  This
   specification assigns no significance to the order of appearance of
   the child elements of atom:head.

   The following child elements are defined by this specification (note
   that the presence of some of these elements is required):

4.2.1  "atom:title" Element

   The "atom:title" element is a Text construct that conveys a
   human-readable title for the feed.  atom:head elements MUST contain
   exactly one atom:title element.

4.2.2  "atom:link" Element

   The "atom:link" element is a Link construct that conveys a URI
   associated with the feed.  The nature of the relationship is
   determined by the construct's rel attribute.

   atom:head elements MUST contain at least one atom:link element with a
   rel attribute value of "alternate".

   atom:head elements MUST NOT contain more than one atom:link element
   with a rel attribute value of "alternate" that has the same type
   attribute value.




Nottingham & Sayre       Expires July 11, 2005                 [Page 14]

Internet-Draft                Atom Format                   January 2005


   If a feed's atom:link element with type="alternate" resolves to an
   HTML document, then that document SHOULD have a autodiscovery link
   element [Atom-autodiscovery] that reflects back to the feed.

   atom:head elements MAY contain additional atom:link elements beyond
   those described above.

4.2.3  "atom:category" Element

   A Category Construct identifying a category with which the feed is
   associated.  atom:head elements MAY contain any number of
   atom:category elements.

4.2.4  "atom:introspection" Element

   The "atom:introspection" element is a Service construct that conveys
   the URI of an introspection file associated with the feed.  atom:head
   elements MUST NOT contain more than one atom:introspection element.

4.2.5  "atom:post" Element

   The "atom:post" element is a Service construct that conveys the URI
   used to add entries to the feed.  atom:head elements MUST NOT contain
   more than one atom:post element.

4.2.6  "atom:author" Element

   The "atom:author" element is a Person construct that indicates the
   default author of the feed.  atom:head elements MUST contain exactly
   one atom:author element, UNLESS all of the atom:feed element's child
   atom:entry elements contain an atom:author element.  atom:head
   elements MUST NOT contain more than one atom:author element.

   [[explain inheritance]]

4.2.7  "atom:contributor" Element

   The "atom:contributor" element is a Person construct that indicates a
   person or other entity who contributes to the feed.  atom:head
   elements MAY contain one or more atom:contributor elements.

4.2.8  "atom:tagline" Element

   The "atom:tagline" element is a Text construct that conveys a
   human-readable description or tagline for the feed.  atom:head
   elements MAY contain an atom:tagline element, but MUST NOT contain
   more than one.




Nottingham & Sayre       Expires July 11, 2005                 [Page 15]

Internet-Draft                Atom Format                   January 2005


4.2.9  "atom:id" Element

   The "atom:id" element is an Identity construct that conveys a
   permanent, universally unique identifier for a feed.  atom:head
   elements MAY contain an atom:id element, but MUST NOT contain more
   than one.

4.2.10  "atom:generator" Element

   The "atom:generator" element's content identifies the software agent
   used to generate the feed, for debugging and other purposes.
   atom:head elements MAY contain an atom:generator element, but MUST
   NOT contain more than one.

   The content of this element, when present, MUST be a string that is a
   human-readable name for the generating agent.

   The atom:generator element MAY have a "uri" attribute whose value
   MUST be a URI reference [RFC2396bis].  When dereferenced, that URI
   SHOULD produce a representation that is relevant to that agent.

   The atom:generator element MAY have a "version" attribute that
   indicates the version of the generating agent.  When present, its
   value is unstructured text.

4.2.11  "atom:copyright" Element

   The "atom:copyright" element is Text construct that conveys a
   human-readable copyright statement for the feed.  atom:head elements
   MAY contain an atom:copyright element, but MUST NOT contain more than
   one.

   The atom:copyright element SHOULD NOT be used to convey
   machine-readable licensing information.

4.2.12  "atom:info" Element

   The "atom:info" element is a Text construct that conveys a
   human-readable explanation of the feed format itself.  atom:head
   elements MAY contain an atom:info element, but MUST NOT contain more
   than one.

   The atom:info element SHOULD NOT considered meaningful by processors;
   it is a convenience to publishers in certain situations.

4.2.13  "atom:updated" Element

   The "atom:updated" element is a Date construct indicating the most



Nottingham & Sayre       Expires July 11, 2005                 [Page 16]

Internet-Draft                Atom Format                   January 2005


   recent instant in time when the feed was modified in a way the
   producer considers significant.  Therefore, not all modifications
   necessarily result in a changed atom:updated value.

   atom:head elements MUST contain exactly one atom:updated element.














































Nottingham & Sayre       Expires July 11, 2005                 [Page 17]

Internet-Draft                Atom Format                   January 2005


5.  The "atom:entry" Element

   The "atom:entry" element represents an individual entry.  This
   element can appear as a child of the atom:feed element, or it can
   appear as the document (i.e., top-level) element of a standalone Atom
   Entry Document.

   When appearing in an Atom Entry Document, atom:entry elements MUST
   have a "version" attribute whose content indicates the version of the
   Atom specification that the entry conforms to.

   The version identifier for this specification is
   "draft-ietf-atompub-format-04 : do not deploy".

   The atom:entry element MAY contain any namespace-qualified
   [W3C.REC-xml-names-19990114] elements as children.  This
   specification assigns no significance to the order of appearance of
   the child elements of atom:entry.

   The following child elements are defined by this specification (note
   that it requires the presence of some of these elements):

5.1  "atom:title" Element

   The "atom:title" element is a Text construct that conveys a
   human-readable title for the entry.  atom:entry elements MUST have
   exactly one "atom:title" element.

5.2  "atom:link" Element

   The "atom:link" element is a Link construct that conveys a URI
   associated with the entry.  The nature of the relationship as well as
   the link itself is determined by the element's content.

   atom:entry elements that contain no child atom:content element MUST
   contain at least one atom:link element with a rel attribute value of
   "alternate".

   atom:entry elements MUST NOT contain more than one atom:link element
   with a rel attribute value of "alternate" that has the same type
   attribute value.

   atom:entry elements MAY contain additional atom:link elements beyond
   those described above.

5.3  "atom:category" Element

   A Category Construct identifying a category with which the entry is



Nottingham & Sayre       Expires July 11, 2005                 [Page 18]

Internet-Draft                Atom Format                   January 2005


   associated.  atom:entry elements MAY contain any number of
   atom:category elements.

5.4  "atom:edit" Element

   The "atom:edit" element is a Service construct that conveys the URI
   used to retrieve and edit the source representation of the entry.
   atom:entry elements MUST NOT contain more than one atom:edit element.

5.5  "atom:author" Element

   The "atom:author" element is a Person construct that indicates the
   default author of the entry.  atom:entry elements MUST contain
   exactly one atom:author element, unless, in an Atom Feed Document,
   the atom:head element contains an atom:author element itself.
   atom:entry elements MUST NOT contain more than one atom:author
   element.

5.6  "atom:contributor" Element

   The "atom:contributor" element is a Person construct that indicates a
   person or other entity who contributes to the entry.  atom:entry
   elements MAY contain one or more atom:contributor elements.

5.7  "atom:host" Element

   The "atom:host" element's content conveys a domain name or network
   address associated with the entry's origin.  atom:entry elements MAY
   contain a single atom:host element.  Its content MUST be a domain
   name [RFC1035], a dotted-decimal IPv4 address [RFC0791], or a
   colon-delimited IPv6 address [RFC2460].

5.8  "atom:id" Element

   The "atom:id" element is an Identity construct that conveys a
   permanent, universally unique identifier for an entry.  atom:entry
   elements MUST contain exactly one atom:id element.

5.9  "atom:updated" Element

   The "atom:updated" element is a Date construct indicating the most
   recent instant in time when the entry was modified in a way the
   producer considers significant.  Therefore, not all modifications
   necessarily result in a changed atom:updated value.

   atom:entry elements MUST contain exactly one atom:updated element.

   Publishers MAY change the value of this element over time.



Nottingham & Sayre       Expires July 11, 2005                 [Page 19]

Internet-Draft                Atom Format                   January 2005


   Processors MAY present entries sorted using this value.  Processors
   MAY choose not to present entries until the instant in time specified
   in the atom:updated element has passed.

5.10  "atom:published" Element

   The "atom:published" element is a Date construct indicating an
   instant in time associated with an event early in the life cycle of
   the entry.  Typically, atom:published will be associated with the
   initial creation or first availability of the resource.

   atom:entry elements MAY contain an atom:published element, but MUST
   NOT contain more than one.

   Processors MAY present entries sorted using this value.  Processors
   MAY choose not to present entries until the instant in time specified
   in the atom:published element has passed.

5.11  "atom:summary" Element

   The "atom:summary" element is a Text construct that conveys a short
   summary, abstract or excerpt of the entry.  atom:entry elements MAY
   contain an atom:summary element, but MUST NOT contain more than one.

   atom:entry elements MUST contain an atom:summary element in any of
   the following cases:

   o  the atom:entry element contains no atom:content element.
   o  the atom:entry contains an atom:content which has a "src"
      attribute (and is thus empty).
   o  the atom:entry contains content which is encoded in Base64; i.e.
      the "type" attribute of atom:content is a MIME media type
      [RFC2045] and does not begin with "text/" nor end with "+xml".

5.12  "atom:content" Element

   The "atom:content" element either contains or links to the content of
   the entry.  atom:entry elements MUST contain zero or one atom:content
   elements.

5.12.1  "type" attribute

   atom:content MAY have a "type" attribute, When present, the value MAY
   be one of "TEXT", "HTML", or "XHTML".  Failing that, it MUST be a
   MIME media type [RFC2045] in which, to use the terminology of Section
   5 of [RFC2045], the top level is a discrete type.  If the type
   attribute is not provided, software MUST behave as though it were
   present with a value of "TEXT".



Nottingham & Sayre       Expires July 11, 2005                 [Page 20]

Internet-Draft                Atom Format                   January 2005


5.12.2  "src" attribute

   atom:content MAY have a "src" attribute, whose value MUST be a URI
   reference [RFC2396bis].  If the "src" attribute is present, software
   MAY use the URI to retrieve the content.  If the "src" attribute is
   present, atom:content MUST be empty.  That is to say, the content may
   be retrievable using "src=" URI, or it may be contained within
   atom:content, but not both.

   If the "src" attribute is present, the "type" attribute SHOULD be
   provided and MUST be a MIME media type [RFC2045], rather than "TEXT",
   "HTML", or "XHTML".  The value is advisory; that is to say, upon
   dereferencing the URI to retrieve the content, if the server
   providing that content also provides a media type, the
   server-provided media type is authoritative.

   If the value of type begins with "text/" or ends with "+xml", the
   content SHOULD be local; that is to say, no "src" attribute should be
   provided.

5.12.3  Processing Model

   Software MUST apply the following rules in succession in the order
   below to ascertain the rules governing the content of "atom:content".

   1.  If the value is "TEXT", the content of atom:content MUST NOT
       contain child elements.  Such text is intended to be presented to
       humans in a readable fashion.  Thus, software MAY display it
       using normal text rendering techniques such as proportional
       fonts, white-space collapsing, and justification.
   2.  If the value of "type" is "HTML", the content of atom:content
       MUST NOT contain child elements, and SHOULD be suitable for
       handling by software that knows HTML.  The HTML markup must be
       escaped; for example, "<br>" as "&lt;br>".  The HTML markup
       SHOULD be such that it could validly appear directly within an
       HTML <DIV> element.  Receiving software which displays the
       content SHOULD use the markup to aid in displaying it.
   3.  If the value of "type" is "XHTML", the content of atom:content
       MAY contain child elements.  The content SHOULD be XHTML text and
       markup that could validly appear directly within an xhtml:div
       element.  Receiving software which displays the content SHOULD
       use the markup to aid in displaying it.  Escaped markup is
       interpreted as a text representation of markup, and MUST NOT be
       interpreted as markup itself.
   4.  If the value of "type" ends with "+xml" or "/xml", the content of
       atom:content may include child elements, and SHOULD be suitable
       for handling by software that knows the indicated media type.  If
       the "src" attribute is not provided, this would normally mean



Nottingham & Sayre       Expires July 11, 2005                 [Page 21]

Internet-Draft                Atom Format                   January 2005


       that the "atom:content" element would contain a single child
       element which would serve as the root element of the XML document
       of the indicated type.
   5.  If the value of "type" begins with "text/" the content of
       atom:content MUST NOT contain child elements.
   6.  For all other values of "type", the content of atom:content MUST
       be a valid Base64 encoding [RFC3548], which when decoded SHOULD
       be suitable for handling by software that knows the indicated
       media type.  In this case, the characters in the Base64 encoding
       may be preceded and followed in the atom:content element by
       whitespace, and lines are separated by a single newline (U+000A)
       character, as required by XML.

5.13  "atom:copyright" Element

   The "atom:copyright" element is a Text construct that conveys a
   human-readable copyright statement for the entry.  atom:entry
   elements MAY contain an atom:copyright element, but MUST NOT contain
   more than one.

   The atom:copyright element SHOULD NOT be used to convey
   machine-readable licensing information.

   If an atom:entry element does not contain an atom:copyright element,
   then the atom:copyright element of the containing atom:feed element's
   atom:head element, if present, should be considered to apply to the
   entry.

5.14  "atom:head" Element

   The atom:head element acts as a container for metadata about the feed
   within which the entry was created.

   atom:entry elements MAY contain at most one atom:head element.  If
   the atom:head element is present, it SHOULD be the first child
   element of atom:entry.

   If an atom:entry is copied into one feed from another feed, then the
   atom:head element of the source feed SHOULD be inserted into the
   atom:entry unless the entry, as copied, already contains an atom:head
   element.  If the atom:entry already contains an atom:head, then that
   atom:head SHOULD be copied without modification.

   [[ ...  example ...  ]]







Nottingham & Sayre       Expires July 11, 2005                 [Page 22]

Internet-Draft                Atom Format                   January 2005


6.  Managing Feed State

   [[ talk about what it means to keep a view of a feed ]]
















































Nottingham & Sayre       Expires July 11, 2005                 [Page 23]

Internet-Draft                Atom Format                   January 2005


7.  Securing Atom Documents

   Because Atom is an XML-based format, existing XML security mechanisms
   can be used to secure its content.

   Note that while these mechanisms are available to secure Atom
   documents, they should not be used indiscriminately.

7.1  Digital Signatures

   The document element of an Atom document (i.e., atom:feed in an Atom
   Feed Document, atom:entry in an Atom Entry Document) MAY have an
   Enveloped Signature, as described by XML-Signature and Syntax
   Processing [W3C.REC-xmldsig-core-20020212].  Other XML signature
   mechanisms MUST NOT be used on the document element of an Atom
   document.

   Processors MUST NOT reject an Atom document containing such a
   signature because they are not capable of verifying it; they MUST
   continue processing and MAY inform the user of their failure to
   validate the signature.

   In other words, the presence of an element with the namespace URI
   "http://www.w3.org/2000/09/xmldsig#" and a local name of "Signature"
   as a child of the document element must not cause a processor to fail
   merely because of its presence.

   Other elements in an Atom document MUST NOT be signed unless their
   definitions explicitly specify such a capability.

7.2  Encryption

   The document element of an Atom document (i.e., atom:feed in an Atom
   Feed Document, atom:entry in an Atom Entry Document) MAY be
   encrypted, using the mechanisms described by XML Encryption Syntax
   and Processing [W3C.REC-xmlenc-core-20021210].  Other XML encryption
   mechanisms MUST NOT be used on the document element of an Atom
   document.













Nottingham & Sayre       Expires July 11, 2005                 [Page 24]

Internet-Draft                Atom Format                   January 2005


8.  Embedding Atom in Other Formats

   [[ ...  ]]
















































Nottingham & Sayre       Expires July 11, 2005                 [Page 25]

Internet-Draft                Atom Format                   January 2005


9.  Extending Atom

   [[ ...  ]]
















































Nottingham & Sayre       Expires July 11, 2005                 [Page 26]

Internet-Draft                Atom Format                   January 2005


10.  IANA Considerations

   An Atom Document, when serialized as XML 1.0, can be identified with
   the following media type:

   MIME media type name: application
   MIME subtype name: atom+xml
   Mandatory parameters: None.
   Optional parameters:
      "charset": This parameter has identical semantics to the charset
         parameter of the "application/xml" media type as specified in
         RFC 3023 [RFC3023].  [RFC3023].
   Encoding considerations: Identical to those of "application/xml" as
      described in RFC 3023 [RFC3023], section 3.2.
   Security considerations: As defined in this specification.  [[update
      upon publication]]
      In addition, as this media type uses the "+xml" convention, it
      shares the same security considerations as described in RFC 3023
      [RFC3023], section 10.
   Interoperability considerations: There are no known interoperability
      issues.
   Published specification: This specification.  [[update upon
      publication]]
   Applications which use this media type: No known applications
      currently use this media type.

   Additional information:

   Magic number(s): As specified for "application/xml" in RFC 3023
      [RFC3023], section 3.2.
   File extension: .atom
   Fragment identifiers: As specified for "application/xml" in RFC 3023
      [RFC3023], section 5.
   Base URI: As specified in RFC 3023 [RFC3023], section 6.
   Macintosh File Type code: TEXT
   Person and email address to contact for further information: Mark
      Nottingham <mnot@pobox.com>
   Intended usage: COMMON
   Author/Change controller: This specification's author(s).  [[update
      upon publication]]

10.1  Registry of Link Relations

   This registry is maintained by IANA and initially contains the two
   values: "alternate" and "related".  New assignments are subject to
   IESG Approval, as outlined in [RFC2434].  Requests should be made by
   email to IANA, which will then forward the request to the IESG
   requesting approval.  The request should contain discussion of at



Nottingham & Sayre       Expires July 11, 2005                 [Page 27]

Internet-Draft                Atom Format                   January 2005


   least the following five topics:

   o  A value for the "rel" attribute that conforms to the syntax rule
      given in Section 3.5.1
   o  Common name for link type.
   o  Description of link type semantics.
   o  Expected display characteristics.
   o  Security considerations.











































Nottingham & Sayre       Expires July 11, 2005                 [Page 28]

Internet-Draft                Atom Format                   January 2005


11.  Security Considerations

   Atom document can be encrypted and signed using
   [W3C.REC-xmlenc-core-20021210] and [W3C.REC-xmldsig-core-20020212],
   respectively, and is subject to the security considerations implied
   by their use.













































Nottingham & Sayre       Expires July 11, 2005                 [Page 29]

Internet-Draft                Atom Format                   January 2005


12.  References

12.1  Normative References

   [Atom-autodiscovery]
              Pilgrim, M., "Atom Feed Autodiscovery",  work-in-progress,
              August 2004.

   [Atom-protocol]
              Gregorio, J. and R. Sayre, "The Atom Publishing Protocol",
              work-in-progress, July 2004.

   [RFC0791]  Postel, J., "Internet Protocol", STD 5, RFC 791, September
              1981.

   [RFC1035]  Mockapetris, P., "Domain names - implementation and
              specification", STD 13, RFC 1035, November 1987.

   [RFC2045]  Freed, N. and N. Borenstein, "Multipurpose Internet Mail
              Extensions (MIME) Part One: Format of Internet Message
              Bodies", RFC 2045, November 1996.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2396bis]
              Berners-Lee, T., Fielding, R. and L. Masinter, "Uniform
              Resource Identifier (URI): Generic Syntax",  awaiting RFC
              number, December 2004.

   [RFC2460]  Deering, S. and R. Hinden, "Internet Protocol, Version 6
              (IPv6) Specification", RFC 2460, December 1998.

   [RFC2822]  Resnick, P., "Internet Message Format", RFC 2822, April
              2001.

   [RFC3023]  Murata, M., St. Laurent, S. and D. Kohn, "XML Media
              Types", RFC 3023, January 2001.

   [RFC3066]  Alvestrand, H., "Tags for the Identification of
              Languages", BCP 47, RFC 3066, January 2001.

   [RFC3339]  Klyne, G. and C. Newman, "Date and Time on the Internet:
              Timestamps", RFC 3339, July 2002.

   [RFC3548]  Josefsson, S., "The Base16, Base32, and Base64 Data
              Encodings", RFC 3548, July 2003.




Nottingham & Sayre       Expires July 11, 2005                 [Page 30]

Internet-Draft                Atom Format                   January 2005


   [W3C.NOTE-datetime-19980827]
              Wolf, M. and C. Wicksteed, "Date and Time Formats", W3C
              NOTE NOTE-datetime-19980827, August 1998.

   [W3C.REC-xml-20040204]
              Yergeau, F., Paoli, J., Sperberg-McQueen, C., Bray, T. and
              E. Maler, "Extensible Markup Language (XML) 1.0 (Third
              Edition)", W3C REC REC-xml-20040204, February 2004.

   [W3C.REC-xml-infoset-20011024]
              Tobin, R. and J. Cowan, "XML Information Set", W3C
              FirstEdition REC-xml-infoset-20011024, October 2001.

   [W3C.REC-xml-names-19990114]
              Hollander, D., Bray, T. and A. Layman, "Namespaces in
              XML", W3C REC REC-xml-names-19990114, January 1999.

   [W3C.REC-xmlbase-20010627]
              Marsh, J., "XML Base", W3C REC REC-xmlbase-20010627, June
              2001.

   [W3C.REC-xmldsig-core-20020212]
              Solo, D., Reagle, J. and D. Eastlake, "XML-Signature
              Syntax and Processing", W3C REC REC-xmldsig-core-20020212,
              February 2002.

   [W3C.REC-xmlenc-core-20021210]
              Reagle, J. and D. Eastlake, "XML Encryption Syntax and
              Processing", W3C REC REC-xmlenc-core-20021210, December
              2002.

12.2  Informative References

   [RFC2434]  Narten, T. and H. Alvestrand, "Guidelines for Writing an
              IANA Considerations Section in RFCs", BCP 26, RFC 2434,
              October 1998.















Nottingham & Sayre       Expires July 11, 2005                 [Page 31]

Internet-Draft                Atom Format                   January 2005


URIs

   [1]  <http://www.imc.org/atom-syntax/index.html>

   [2]  <http://www.intertwingly.net/wiki/pie/FrontPage>


Authors' Addresses

   Mark Nottingham (editor)

   EMail: mnot@pobox.com
   URI:   http://www.mnot.net/


   Robert Sayre (editor)
   Boswijck Memex Consulting

   EMail: rfsayre@boswijck.com
   URI:   http://boswijck.com































Nottingham & Sayre       Expires July 11, 2005                 [Page 32]

Internet-Draft                Atom Format                   January 2005


Appendix A.  Contributors

   The following people contributed to preliminary drafts of this
   document: Tim Bray, Mark Pilgrim, and Sam Ruby.  The content and
   concepts within are a product of the Atom community and the Atom
   Publishing Format and Protocol Working Group.













































Nottingham & Sayre       Expires July 11, 2005                 [Page 33]

Internet-Draft                Atom Format                   January 2005


Appendix B.  Revision History

   [[ this section should be removed before final publication.  ]]

   -04:  Update URI terms for 2396bis.
      Add Category construct (PaceCategoryRevised).
      Insert paranoid XHTML interpretation guidelines.
      Adjust atom:copyright, per chairs' instruction.
      Add atom:host as child element of atom:entry, per chairs'
      direction (PacePersonConstruct).
      Add link/content co-constraint (PaceContentOrLink).
      Remove atom:origin as a side effect of adding atom:head to
      atom:entry (PaceHeadInEntry).
      Add optional length attribute to atom:link (PaceLinkRelated).
      Add Link registry to Link Construct, IANA Considerations
      placeholder (PaceFieldingLinks).
      Change definition of atom:updated (PaceUpdatedDefinition).
   -03:  Move definition of Link @rel to format spec, restrict
      acceptable values (PaceMoveLinkElement, PaceLinkAttrDefaults).
      Add Service Construct, head/post, head/introspection, entry/edit
      (PaceServiceElement).
      Add Text Construct, entry/content (PaceReformedContent3).
      Add entry/published (PaceDatePublished).
      Adjust definition of Identity Construct per chairs' direction to
      "fix it."
      Add Sayre to editors.
   -02:  Removed entry/modified, entry/issued, entry/created; added
      entry/updated (PaceDateUpdated).
      Changed date construct from W3C date-time to RFC3339
      (PaceDateUpdated).
      Feed links to HTML pages should be reflected back
      (PaceLinkReflection).
      Added Identity construct (PaceIdConstruct).
      Changed feed/id and entry/id to be Identity constructs
      (PaceIdConstruct).
      Changed entry/origin's content so that it's the same as the feed's
      id, rather than its link/@rel="alternate" (PaceIdConstruct).
      Added "Securing Atom Documents" (PaceDigitalSignatures).
   -01:  Constrained omission of "Information Item" to just elements and
      attributes.
      Clarified xml:lang inheritence.
      Removed entry- and feed-specific langauge about xml:lang (covered
      by general discussion of xml:lang)
      Changed xml:lang to reference XML for normative requirements.
      Changed "...  MUST be a string" to "...  is unstructued text."






Nottingham & Sayre       Expires July 11, 2005                 [Page 34]

Internet-Draft                Atom Format                   January 2005


      Remomved langauge about DOCTYPEs, PIs, Comments, Entities.
      Changed atom:url to atom:uri, @url to @uri
      Introduced atom:head
      Introduced "Atom Feed Document" and "Atom Entry Document".
      Removed requirement for all elements and attributes to be
      namespace-qualified; now children of selective elements
      Added extensibility to Person constructs.
      Removed requirement for media types to be registered
      (non-registered media types are legal)
      Added atom:origin (PaceEntryOrigin)
      Added requirement for entry/id to be present and a URI
      (PaceEntryIdRequired).
      Clarified approach to Comments, PIs and well-formedness, as per
      RFC3470.
      Referenced escaping algorithm in XML.
      Assorted editorial nits and cleanup, refactoring
   -00:  Initial IETF Internet-Draft submission.
      Added optional version attribute to entry
      (PaceEntryElementNeedsVersionAttribute).
      Added hreflang attribute (PaceHrefLang).
      Clarified inheritence of copyright element (PaceItemCopyright).
      Added xml:lang to entries (PaceItemLang).
      Tweaked Infoset-related language (PaceNoInfoSet).
      Clarified lack of structure in version attribute
      (PaceVersionAsText).
      Changed approach to XML Base (PaceXmlBaseEverywhere).
      Added XML Base processing to atom:id (PaceXmlBaseId).
      Various editorial cleanup and adjustments for IETF publication.























Nottingham & Sayre       Expires July 11, 2005                 [Page 35]

Internet-Draft                Atom Format                   January 2005


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Disclaimer of Validity

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Copyright Statement

   Copyright (C) The Internet Society (2005).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.




Nottingham & Sayre       Expires July 11, 2005                 [Page 36]


