CoRI = [?(scheme:    1, text .regexp "[A-Za-z][A-Za-z0-9+.-]*"),
              ?(host.name: 2, text //
                host.ip:   3, bytes .size 4 / bytes .size 16),
              ?(port:      4, 0..65535),
              ?(path.type: 5, 0..127),
              *(path:      6, text),
              *(query:     7, text),
              ?(fragment:  8, text)]

SCHEME = 1
HOST_NAME = 2
HOST_IP = 3
PORT = 4
PATH_TYPE = 5
PATH = 6
QUERY = 7
FRAGMENT = 8
ABSOLUTE_PATH = 0
APPEND_RELATION = 1
APPEND_PATH = 2
RELATIVE_PATH = 3
RELATIVE_PATH_1UP = 4
RELATIVE_PATH_2UP = 5
RELATIVE_PATH_3UP = 6
RELATIVE_PATH_4UP = 7

previous = Option._BEGIN
previous = option
result = []
option = Option.FRAGMENT
option = href[0][0]
option = Option.HOST_NAME
type = href[0][1]
href = href[1:]
type = PathType.RELATIVE_PATH
option = Option.PATH_TYPE
result = ''
no_path = True
first_query = True
no_path = False
no_path = False
first_query = False
no_path = False
no_path = False
result = b''
previous = 0
opt = 3  # Uri-Host
val = value.encode('utf-8')
previous = opt
opt = 3  # Uri-Host
val = '.'.join(str(c) for c in value).encode('utf-8')
val = b'[' + ... + b']'  # see RFC 5952
previous = opt
opt = 7  # Uri-Port
val = value.to_bytes((value.bit_length() + 7) // 8, 'big')
previous = opt
opt = 11  # Uri-Path
val = value.encode('utf-8')
previous = opt
opt = 15  # Uri-Query
val = value.encode('utf-8')
previous = opt
opt = 39  # Proxy-Scheme
val = value.encode('utf-8')
previous = opt
length = len(value)
delta_nibble = _encode_coap_option_nibble(delta)
length_nibble = _encode_coap_option_nibble(length)
result = bytes([delta_nibble << 4 | length_nibble])
