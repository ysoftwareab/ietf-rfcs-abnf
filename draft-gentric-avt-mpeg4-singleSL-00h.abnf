a=fmtp:<format> decodingTimeStampDeltaLength=<value>

a=fmtp:<format> remainingSLPacketHeaderSize=<value>

a=fmtp:<format> OCRDeltaLength=<value>

a=fmtp:<format> SLConfigDescriptor=<value>

a=fmtp:<format> profile-level-id=<value>

a=fmtp:<format> object-type=<value>

a=fmtp:<format> bitrate=<value>

a=fmtp:<format> config=<value>

a=fmtp:<format> profile-level-id=<value>

a=fmtp:<format> config=<value>

o= ....
I= ....
c=IN IP4 123.234.71.112
m=video 1034 RTP/AVT 97
a=fmtp:97 decodingTimeStampDeltaLength=6;
remainingSLPacketHeaderSizeLength=2
a=rtpmap:97 mpeg4-sl
m=audio 810  RTP/AVT 98
a=rtpmpa:98 mpeg4-sl
m=application 1234  RTP/AVT 99
a=rtpmap:99 mpeg4-sl

tag=SLConfigDescrTag {
  bit(8) predefined;
  if (predefined==0) {
    bit(1) useAccessUnitStartFlag; = 1
    bit(1) useAccessUnitEndFlag; = 0
    bit(1) useRandomAccessPointFlag; = 1
    bit(1) hasRandomAccessUnitsOnlyFlag; = 0
    bit(1) usePaddingFlag; = 0

a=fmtp: <format> decodingTimeStampDeltaLength=6;
remainingSLPacketHeaderSizeLength=2

tag=SLConfigDescrTag {
  bit(8) predefined;
  if (predefined==0) {
    bit(1) useAccessUnitStartFlag; = 0
    bit(1) useAccessUnitEndFlag; = 0
    bit(1) useRandomAccessPointFlag; = 0
    bit(1) hasRandomAccessUnitsOnlyFlag; = 1
    bit(1) usePaddingFlag; = 0
    bit(1) useTimeStampsFlag; = 0
    bit(1) useIdleFlag; = 0
    bit(1) durationFlag; = 0
    bit(32) timeStampResolution; = 0
    bit(32) OCRResolution; = 0
    bit(8) timeStampLength;     // must be <= 64  = 0
    bit(8) OCRLength;           // must be <= 64 = 0
    bit(8) AU_Length;           // must be <= 32 = 0
    bit(8) instantBitrateLength; = 0
    bit(4) degradationPriorityLength; = 0
    bit(5) AU_seqNumLength; // must be <= 16 = 0
    bit(5) packetSeqNumLength; // must be <= 16 = 0
    bit(2) reserved=0b11;
  }
  if (durationFlag) {
    bit(32) timeScale; // NOT USED
    bit(16) accessUnitDuration;  // NOT USED
    bit(16) compositionUnitDuration;  // NOT USED
  }
  if (!useTimeStampsFlag) {
    bit(timeStampLength) startDecodingTimeStamp; = 0
    bit(timeStampLength) startCompositionTimeStamp; = 0
  }

