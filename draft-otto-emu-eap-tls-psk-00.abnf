EAP-Type=EAP-TLS-PSK
EAP-Type=EAP-TLS-PSK
EAP-Type=EAP-TLS-PSK
EAP-Type=EAP-TLS-PSK
EAP-Type=EAP-TLS-PSK
EAP-Type=EAP-TLS-PSK ->
                              <- EAP-Success


EAP-Type=EAP-TLS-PSK, the Start (S) bit set, and no data.  The EAP-
Type=EAP-TLS-PSK.  The data field of this packet will encapsulate one
MSK  = TLS-PRF-128 (master_secret, "client EAP encryption",
        client.random || server.random)[0..63]

EMSK = TLS-PRF-128 (master_secret, "client EAP encryption",
        client.random || server.random)[64..127]

IV   = TLS-PRF-64 ("", "client EAP encryption",
        client.random || server.random)[0..63]

master_secret = TLS-PRF-48 (pre_master_secret, "master secret",
      client.random || server.random)

TEK = TLS-PRF-X (master_secret, "key expansion",
      server.random || client.random)

L = Length included
M = More fragments
S = EAP-TLS-PSK start
R = Reserved

       The L bit (length included) is set to indicate the presence of
       the four octet TLS Message Length field, and MUST be set for the
       first fragment of a fragmented TLS message or set of messages.
       The M bit (more fragments) is set on all but the last fragment.
       The S bit (EAP-TLS-PSK start) is set in an EAP-TLS-PSK Start
       message.  This differentiates the EAP-TLS-PSK Start message from
       a fragment acknowledgement.  Implementations of this
       specification MUST set the reserved bits to zero, and MUST ignore
       them on reception.

