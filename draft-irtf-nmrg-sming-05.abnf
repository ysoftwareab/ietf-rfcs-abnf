severityKeyword   = \"severity\"";
smingFile               = optsep *(moduleStatement optsep)

moduleStatement         = moduleKeyword sep ucIdentifier optsep
                                 "{" stmtsep
                                 *(importStatement stmtsep)
                                 organizationStatement stmtsep
                                 contactStatement stmtsep
                                 descriptionStatement stmtsep
                                 *1(referenceStatement stmtsep)
                                 1*(revisionStatement stmtsep)
                                 *(extensionStatement stmtsep)
                                 *(typedefStatement stmtsep)
                                 *(identityStatement stmtsep)
                                 *(classStatement stmtsep)
                             "}" optsep ";"

extensionStatement      = extensionKeyword sep lcIdentifier optsep
                                 "{" stmtsep
                                 statusStatement stmtsep
                                 descriptionStatement stmtsep
                                 *1(referenceStatement stmtsep)
                                 *1(abnfStatement stmtsep)
                             "}" optsep ";"

typedefStatement        = typedefKeyword sep ucIdentifier optsep
                                 "{" stmtsep
                                 typedefTypeStatement stmtsep
                                 *1(defaultStatement stmtsep)
                                 *1(formatStatement stmtsep)
                                 *1(unitsStatement stmtsep)
                                 statusStatement stmtsep
                                 descriptionStatement stmtsep
                                 *1(referenceStatement stmtsep)
                             "}" optsep ";"

identityStatement       = identityStmtKeyword sep lcIdentifier optsep
                                 "{" stmtsep
                                 *1(parentStatement stmtsep)
                                 statusStatement stmtsep
                                 descriptionStatement stmtsep
                                 *1(referenceStatement stmtsep)
                             "}" optsep ";"

classStatement          = classKeyword sep ucIdentifier optsep
                                 "{" stmtsep
                                 *1(extendsStatement stmtsep)
                                 *(attributeStatement stmtsep)
                                 *1(uniqueStatement stmtsep)
                                 *(eventStatement stmtsep)
                                 statusStatement stmtsep
                                 descriptionStatement stmtsep
                                 *1(referenceStatement stmtsep)
                             "}" optsep ";"

attributeStatement      = attributeKeyword sep
                                 lcIdentifier optsep
                                 "{" stmtsep
                                 typeStatement stmtsep
                                 *1(accessStatement stmtsep)
                                 *1(defaultStatement stmtsep)
                                 *1(formatStatement stmtsep)
                                 *1(unitsStatement stmtsep)
                                 statusStatement stmtsep
                                 descriptionStatement stmtsep
                                 *1(referenceStatement stmtsep)
                             "}" optsep ";"

uniqueStatement         = uniqueKeyword optsep
                                 "(" optsep qlcIdentifierList
                                 optsep ")" optsep ";"

eventStatement          = eventKeyword sep lcIdentifier
                                 optsep "{" stmtsep
                                 statusStatement stmtsep
                                 descriptionStatement stmtsep
                                 *1(referenceStatement stmtsep)
                             "}" optsep ";"

importStatement         = importKeyword sep ucIdentifier optsep
                                 "(" optsep
                                 identifierList optsep
                             ")" optsep ";"

revisionStatement       = revisionKeyword optsep "{" stmtsep
                                 dateStatement stmtsep
                                 descriptionStatement stmtsep
                             "}" optsep ";"

typedefTypeStatement    = typeKeyword sep refinedBaseType optsep ";"

typeStatement           = typeKeyword sep
                             (refinedBaseType / refinedType) optsep ";"

parentStatement         = parentKeyword sep qlcIdentifier optsep ";"

extendsStatement        = extendsKeyword sep qucIdentifier optsep ";"

dateStatement           = dateKeyword sep date optsep ";"

organizationStatement   = organizationKeyword sep text optsep ";"

contactStatement        = contactKeyword sep text optsep ";"

formatStatement         = formatKeyword sep format optsep ";"

unitsStatement          = unitsKeyword sep units optsep ";"

statusStatement         = statusKeyword sep status optsep ";"

accessStatement         = accessKeyword sep access optsep ";"

defaultStatement        = defaultKeyword sep anyValue optsep ";"

descriptionStatement    = descriptionKeyword sep text optsep ";"

referenceStatement      = referenceKeyword sep text optsep ";"
abnfStatement           = abnfKeyword sep text optsep ";"

refinedBaseType         = ObjectIdentifierKeyword /
                             OctetStringKeyword *1(optsep numberSpec) /
                             PointerKeyword *1(optsep pointerSpec) /
                             Integer32Keyword *1(optsep numberSpec) /
                             Unsigned32Keyword *1(optsep numberSpec) /
                             Integer64Keyword *1(optsep numberSpec) /
                             Unsigned64Keyword *1(optsep numberSpec) /
                             Float32Keyword *1(optsep floatSpec) /
                             Float64Keyword *1(optsep floatSpec) /
                             Float128Keyword *1(optsep floatSpec) /
                             EnumerationKeyword
                                         optsep namedSignedNumberSpec /
                             BitsKeyword optsep namedNumberSpec

refinedType             = qucIdentifier *1(optsep anySpec)

anySpec                 = pointerSpec / numberSpec / floatSpec

pointerSpec             = "(" optsep qlcIdentifier optsep ")"

numberSpec              = "(" optsep numberElement
                                 *furtherNumberElement
                                 optsep ")"

furtherNumberElement    = optsep "|" optsep numberElement

numberElement           = signedNumber *1numberUpperLimit

numberUpperLimit        = optsep ".." optsep signedNumber

floatSpec               = "(" optsep floatElement
                                 *furtherFloatElement
                                 optsep ")"

furtherFloatElement     = optsep "|" optsep floatElement

floatElement            = floatValue *1floatUpperLimit

floatUpperLimit         = optsep ".." optsep floatValue

namedNumberSpec         = "(" optsep namedNumberList optsep ")"
namedNumberList         = namedNumberItem
                                 *(optsep "," optsep namedNumberItem)

namedNumberItem         = lcIdentifier optsep "(" optsep number
                                 optsep ")"

namedSignedNumberSpec   = "(" optsep namedSignedNumberList optsep ")"

namedSignedNumberList   = namedSignedNumberItem
                                 *(optsep "," optsep
                                              namedSignedNumberItem)

namedSignedNumberItem   = lcIdentifier optsep "(" optsep signedNumber
                                 optsep ")"

identifierList          = identifier
                                 *(optsep "," optsep identifier)

qIdentifierList         = qIdentifier
                                 *(optsep "," optsep qIdentifier)

qlcIdentifierList       = qlcIdentifier
                                 *(optsep "," optsep qlcIdentifier)

bitsValue               = "(" optsep bitsList optsep ")"

bitsList                = *1(lcIdentifier
                                 *(optsep "," optsep lcIdentifier))

identifier              = ucIdentifier / lcIdentifier

qIdentifier             = qucIdentifier / qlcIdentifier

ucIdentifier            = ucAlpha *63(ALPHA / DIGIT / "-")

qucIdentifier           = *1(ucIdentifier "::") ucIdentifier

lcIdentifier            = lcAlpha *63(ALPHA / DIGIT / "-")

qlcIdentifier           = *1(ucIdentifier "::") lcIdentifier

attrIdentifier          = lcIdentifier *("." lcIdentifier)

qattrIdentifier         = *1(ucIdentifier ".") attrIdentifier
cattrIdentifier         = ucIdentifier "."
                                 lcIdentifier *("." lcIdentifier)

qcattrIdentifier        = qucIdentifier "."
                                 lcIdentifier *("." lcIdentifier)

text                    = textSegment *(optsep textSegment)

textSegment             = DQUOTE *textAtom DQUOTE
                             ; See Section 4.2.

textAtom                = textVChar / HTAB / SP / lineBreak

date                    = DQUOTE 4DIGIT "-" 2DIGIT "-" 2DIGIT
                                 *1(" " 2DIGIT ":" 2DIGIT)
                                 DQUOTE
                             ; always in UTC

format                  = textSegment

units                   = textSegment

anyValue                = bitsValue /
                             signedNumber /
                             hexadecimalNumber /
                             floatValue /
                             text /
                             objectIdentifier
                             ; Note: `objectIdentifier' includes the
                             ; syntax of enumeration labels and
                             ; identities.
                             ; They are not named literally to
                             ; avoid reduce/reduce conflicts when
                             ; building LR parsers based on this
                             ; grammar.

status                  = currentKeyword /
                             deprecatedKeyword /
                             obsoleteKeyword

access                  = eventonlyKeyword /
                             readonlyKeyword /
                             readwriteKeyword

objectIdentifier        = (qlcIdentifier / subid "." subid)
                                 *127("." subid)

subid                   = decimalNumber
number                  = hexadecimalNumber / decimalNumber

negativeNumber          = "-" decimalNumber

signedNumber            = number / negativeNumber

decimalNumber           = "0" / (nonZeroDigit *DIGIT)

zeroDecimalNumber       = 1*DIGIT

hexadecimalNumber       = %x30 %x78 ; "0x" with x only lower-case
                             1*(HEXDIG HEXDIG)

floatValue              = neginfKeyword /
                             posinfKeyword /
                             snanKeyword /
                             qnanKeyword /
                             signedNumber "." zeroDecimalNumber
                                 *1("E" ("+"/"-") zeroDecimalNumber)

unknownStatement        = unknownKeyword optsep *unknownArgument
                                 optsep ";"

unknownArgument         = ("(" optsep unknownList optsep ")") /
                             ("{" optsep *unknownStatement optsep "}") /
                             qucIdentifier /
                             anyValue /
                             anySpec

unknownList             = namedNumberList /
                             qIdentifierList

unknownKeyword          = lcIdentifier

moduleKeyword       =  %x6D %x6F %x64 %x75 %x6C %x65
importKeyword       =  %x69 %x6D %x70 %x6F %x72 %x74
revisionKeyword     =  %x72 %x65 %x76 %x69 %x73 %x69 %x6F %x6E
dateKeyword         =  %x64 %x61 %x74 %x65
organizationKeyword =  %x6F %x72 %x67 %x61 %x6E %x69 %x7A %x61 %x74
                          %x69 %x6F %x6E
contactKeyword      =  %x63 %x6F %x6E %x74 %x61 %x63 %x74
descriptionKeyword  =  %x64 %x65 %x73 %x63 %x72 %x69 %x70 %x74 %x69
                          %x6F %x6E
referenceKeyword    =  %x72 %x65 %x66 %x65 %x72 %x65 %x6E %x63 %x65
extensionKeyword    =  %x65 %x78 %x74 %x65 %x6E %x73 %x69 %x6F %x6E
typedefKeyword      =  %x74 %x79 %x70 %x65 %x64 %x65 %x66
typeKeyword         =  %x74 %x79 %x70 %x65
parentKeyword       =  %x70 %x61 %x72 %x65 %x6E %x74
identityStmtKeyword =  %x69 %x64 %x65 %x6E %x74 %x69 %x74 %x79
classKeyword        =  %x63 %x6C %x61 %x73 %x73
extendsKeyword      =  %x65 %x78 %x74 %x65 %x6E %x64 %x73
attributeKeyword    =  %x61 %x74 %x74 %x72 %x69 %x62 %x75 %x74 %x65
uniqueKeyword       =  %x75 %x6E %x69 %x71 %x75 %x65
eventKeyword        =  %x65 %x76 %x65 %x6E %x74
formatKeyword       =  %x66 %x6F %x72 %x6D %x61 %x74
unitsKeyword        =  %x75 %x6E %x69 %x74 %x73
statusKeyword       =  %x73 %x74 %x61 %x74 %x75 %x73
accessKeyword       =  %x61 %x63 %x63 %x65 %x73 %x73
defaultKeyword      =  %x64 %x65 %x66 %x61 %x75 %x6C %x74
abnfKeyword         =  %x61 %x62 %x6E %x66

OctetStringKeyword  =  %x4F %x63 %x74 %x65 %x74 %x53 %x74 %x72 %x69
                          %x6E %x67
PointerKeyword      =  %x50 %x6F %x69 %x6E %x74 %x65 %x72
ObjectIdentifierKeyword  =  %x4F %x62 %x6A %x65 %x63 %x74 %x49 %x64
                          %x65 %x6E %x74 %x69 %x66 %x69 %x65 %x72
Integer32Keyword    =  %x49 %x6E %x74 %x65 %x67 %x65 %x72 %x33 %x32
Unsigned32Keyword   =  %x55 %x6E %x73 %x69 %x67 %x6E %x65 %x64 %x33
                          %x32
Integer64Keyword    =  %x49 %x6E %x74 %x65 %x67 %x65 %x72 %x36 %x34
Unsigned64Keyword   =  %x55 %x6E %x73 %x69 %x67 %x6E %x65 %x64 %x36
                          %x34
Float32Keyword      =  %x46 %x6C %x6F %x61 %x74 %x33 %x32
Float64Keyword      =  %x46 %x6C %x6F %x61 %x74 %x36 %x34
Float128Keyword     =  %x46 %x6C %x6F %x61 %x74 %x31 %x32 %x38
BitsKeyword         =  %x42 %x69 %x74 %x73
EnumerationKeyword  =  %x45 %x6E %x75 %x6D %x65 %x72 %x61 %x74 %x69
                          %x6F %x6E

currentKeyword      =  %x63 %x75 %x72 %x72 %x65 %x6E %x74
deprecatedKeyword   =  %x64 %x65 %x70 %x72 %x65 %x63 %x61 %x74 %x65
                          %x64
obsoleteKeyword     =  %x6F %x62 %x73 %x6F %x6C %x65 %x74 %x65

eventonlyKeyword    =  %x65 %x76 %x65 %x6E %x74 %x6F %x6E %x6C %x79
readonlyKeyword     =  %x72 %x65 %x61 %x64 %x6F %x6E %x6C %x79
readwriteKeyword    =  %x72 %x65 %x61 %x64 %x77 %x72 %x69 %x74 %x65

neginfKeyword       =  %x6E %x65 %x67 %x69 %x6E %x66
posinfKeyword       =  %x70 %x6F %x73 %x69 %x6E %x66
snanKeyword         =  %x73 %x6E %x61 %x6E
qnanKeyword         =  %x71 %x6E %x61 %x6E

sep                     = 1*(comment / lineBreak / WSP)
                             ; unconditional separator

optsep                  = *(comment / lineBreak / WSP)

stmtsep                 = *(comment /
                               lineBreak /
                               WSP /
                               unknownStatement)

comment                 = "//" *(WSP / VCHAR) lineBreak

lineBreak               = CRLF / LF

textVChar               = %x21 / %x23-7E
                             ; any VCHAR except DQUOTE

ucAlpha                 = %x41-5A

lcAlpha                 = %x61-7A
nonZeroDigit            = %x31-39

ALPHA          =  %x41-5A / %x61-7A
                          ; A-Z / a-z

CR             =  %x0D
                          ; carriage return

CRLF           =  CR LF
                          ; Internet standard newline

DIGIT          =  %x30-39
                          ; 0-9

DQUOTE         =  %x22
                          ; " (Double Quote)

HEXDIG         =  DIGIT /
                     %x61 / %x62 / %x63 / %x64 / %x65 / %x66
                          ; only lower-case a..f

HTAB           =  %x09
                          ; horizontal tab

LF             =  %x0A
                          ; linefeed

SP             =  %x20
                          ; space

VCHAR          =  %x21-7E
                          ; visible (printing) characters

WSP            =  SP / HTAB
                          ; white space
