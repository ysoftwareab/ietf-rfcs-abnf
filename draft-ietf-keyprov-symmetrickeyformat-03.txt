KEYPROV Working Group                                 Sean Turner, IECA 
Internet Draft                             Russ Housley, Vigil Security 
Intended Status: Standard Track                           July 14, 2008 
Expires: January 14, 2009 
 
 
                                      
                    Symmetric Key Package Content Type 
               draft-ietf-keyprov-symmetrickeyformat-03.txt 


Status of this Memo 

   By submitting this Internet-Draft, each author represents that any 
   applicable patent or other IPR claims of which he or she is aware 
   have been or will be disclosed, and any of which he or she becomes 
   aware will be disclosed, in accordance with Section 6 of BCP 79. 

   Internet-Drafts are working documents of the Internet Engineering 
   Task Force (IETF), its areas, and its working groups.  Note that 
   other groups may also distribute working documents as Internet-
   Drafts. 

   Internet-Drafts are draft documents valid for a maximum of six months 
   and may be updated, replaced, or obsoleted by other documents at any 
   time.  It is inappropriate to use Internet-Drafts as reference 
   material or to cite them other than as "work in progress." 

   The list of current Internet-Drafts can be accessed at 
   http://www.ietf.org/ietf/1id-abstracts.txt 

   The list of Internet-Draft Shadow Directories can be accessed at 
   http://www.ietf.org/shadow.html 

   This Internet-Draft will expire on January 14, 2008. 

Copyright Notice 

   Copyright (C) The IETF Trust (2008). 

Abstract 

   This document defines the symmetric key format content type.  It is 
   transport independent. The Cryptographic Message Syntax can be used 
   to digitally sign, digest, authenticate, or encrypt this content 
   type. 


 
 
 
Turner & Housley        Expires January 14, 2009               [Page 1] 

Internet-Draft    Symmetric Key Package Content Type          July 2008 
    

Table of Contents 

   1. Introduction...................................................2 
      1.1. Requirements Terminology..................................2 
      1.2. ASN.1 Syntax Notation.....................................2 
   2. Use Cases......................................................3 
      2.1. Online Use Cases..........................................3 
         2.1.1. Transport of Keys from Server to Cryptomodule........3 
         2.1.2. Transport of Keys from Cryptomodule to Cryptomodule..3 
         2.1.3. Transport of Keys from Cryptomodule to Server........3 
         2.1.4. Server to Server Bulk Import/Export of Keys..........4 
      2.2. Offline Use Cases.........................................4 
         2.2.1. Server to Server Bulk Import/Export of Keys..........4 
   3. Symmetric Key Package Content Type.............................5 
   4. Security Considerations........................................6 
   5. IANA Considerations............................................6 
   6. References.....................................................6 
      6.1. Normative References......................................6 
      6.2. Non-Normative References..................................7 
   APPENDIX A: ASN.1 Module..........................................8 
    
1. Introduction 

   This document defines the symmetric key format content type.  It is 
   transport independent. The Cryptographic Message Syntax [RFC3852] can 
   be used to digitally sign, digest, authenticate, or encrypt this 
   content type. 

1.1. Requirements Terminology 

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", 
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this 
   document are to be interpreted as described in [RFC2119]. 

1.2. ASN.1 Syntax Notation 

   The key package is defined using the ASN.1 [X.680, X.681, X.682, 
   X.683]. 









 
 
Turner & Housley        Expires January 14, 2009               [Page 2] 

Internet-Draft    Symmetric Key Package Content Type          July 2008 
    

2. Use Cases 

   These use cases help in understanding the applicability of this 
   specification to real world situations. 

2.1. Online Use Cases 

   This section describes the use cases related to provisioning the keys 
   using an online provisioning protocol such as [DSKPP]. 

2.1.1. Transport of Keys from Server to Cryptomodule 

   For example, a mobile device user wants to obtain a symmetric key for 
   use with a cryptomodule on the device.  The cryptomodule client from 
   vendor A initiates the provisioning process against a provisioning 
   system from vendor B using a standards-based provisioning protocol 
   such as [DSKPP].  The provisioning entity delivers one or more keys 
   in a standard format that can be processed by the mobile device. 

   For example, in a variation of the above, instead of the user's 
   mobile phone, a key is provisioned in the user's soft token 
   application on a laptop using a network-based online protocol.  As 
   before, the provisioning system delivers a key in a standard format 
   that can be processed by the soft token on the PC. 

   For example, the end-user or the key issuer wants to update or 
   configure an existing key in the cryptomodule and requests a 
   replacement key container.  The container may or may not include a 
   new key and may include new or updated key attributes such as a new 
   counter value in HOTP key case, a modified response format or length, 
   a new friendly name, etc. 

2.1.2. Transport of Keys from Cryptomodule to Cryptomodule 

   For example, a user wants to transport a key from one cryptomodule to 
   another.  There may be two cryptographic modules, one on a computer 
   one on a mobile phone, and the user wants to transport a key from the 
   computer to the mobile phone.  The user can export the key and 
   related data in a standard format for input into the other 
   cryptomodule. 

2.1.3. Transport of Keys from Cryptomodule to Server 

   For example, a user wants to activate and use a new key and related 
   data against a validation system that is not aware of this key.  This 
   key may be embedded in the cryptomodule (e.g., SD card, USB drive) 
   that the user has purchased at the local electronics retailer.  Along 
 
 
Turner & Housley        Expires January 14, 2009               [Page 3] 

Internet-Draft    Symmetric Key Package Content Type          July 2008 
    

   with the cryptomodule, the user may get the key on a CD or a floppy 
   in a standard format.  The user can now upload via a secure online 
   channel or import this key and related data into the new validation 
   system and start using the key. 

2.1.4. Server to Server Bulk Import/Export of Keys 

   From time to time, a key management system may be required to import 
   or export keys in bulk from one entity to another. 

   For example, instead of importing keys from a manufacturer using a 
   file, a validation server may download the keys using an online 
   protocol.  The keys can be downloaded in a standard format that can 
   be processed by a validation system. 

   For example, in a variation of the above, an OTA key provisioning 
   gateway that provisions keys to mobile phones may obtain key material 
   from a key issuer using an online protocol.  The keys are delivered 
   in a standard format that can be processed by the key provisioning 
   gateway and subsequently sent to the end-user's mobile phone. 

2.2. Offline Use Cases 

   This section describes the use cases relating to offline transport of 
   keys from one system to another, using some form of export and import 
   model. 

2.2.1. Server to Server Bulk Import/Export of Keys 

   For example, cryptomodules such as OTP authentication tokens, may 
   have their symmetric keys initialized during the manufacturing 
   process in bulk, requiring copies of the keys and algorithm data to 
   be loaded into the authentication system through a file on portable 
   media.  The manufacturer provides the keys and related data in the 
   form of a file containing records in standard format, typically on a 
   CD.  Note that the token manufacturer and the vendor for the 
   validation system may be the same or different.  Some crypto modules 
   will allow local PIN management (the device will have a PIN pad) 
   hence random initial PINs set at manufacturing should be transmitted 
   together with the respective keys they protect. 

   For example, an enterprise wants to port keys and related data from 
   an existing validation system A into a different validation system B. 
   The existing validation system provides the enterprise with a 
   functionality that enables export of keys and related data (e.g., for 
   OTP authentication tokens) in a standard format.  Since the OTP 
   tokens are in the standard format, the enterprise can import the 
 
 
Turner & Housley        Expires January 14, 2009               [Page 4] 

Internet-Draft    Symmetric Key Package Content Type          July 2008 
    

   token records into the new validation system B and start using the 
   existing tokens.  Note that the vendors for the two validation 
   systems may be the same or different. 

3. Symmetric Key Package Content Type 

   The symmetric key package content type is used to transfer one or 
   more plaintext symmetric keys from one party to another.  A symmetric 
   key package MAY be encapsulated in one or more CMS protecting content 
   types.  This content type must be DER encoded [X.690]. 

   The symmetric key package content type has the following syntax: 

     PKCS7-CONTENT-TYPE ::= TYPE-IDENTIFIER 

     symmetric-key-package PKCS7-CONTENT-TYPE ::= 
       { SymmetricKeyPackage IDENTIFIED BY id-ct-KP-sKeyPackage } 

     id-ct-KP-sKeyPackage OBJECT IDENTIFIER ::= | 
       { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9) 
         smime(16) ct(1) 25 } 

     SymmetricKeyPackage ::= SEQUENCE { 
       version          KeyPkgVersion DEFAULT v1, 
       sKeyPkgAtts  [0] SEQUENCE SIZE (1..MAX) OF Attribute OPTIONAL, 
       sKeys            SymmetricKeys } 

     SymmetricKeys ::= SEQUENCE SIZE (1..MAX) OF OneSymmetricKey 

     OneSymmetricKey ::= SEQUENCE { 
       sKeyAttrs  SEQUENCE SIZE (1..MAX) OF Attribute OPTIONAL, 
       sKey       OCTET STRING OPTIONAL 
                  -- MUST contain sKeyAttrs, sKey, or sKeyAttrs and sKey 
     } 

     KeyPkgVersion ::= INTEGER  { v1(1), ... } 

   The SymmetricKeyPackage fields are used as follows: 

   - version identifies version of the symmetric key package content 
     structure.  For this version of the specification, the default 
     value, v1, MUST be used. 

   - sKeyPkgAttrs optionally provides attributes that apply to all of 
     the symmetric keys in the package.  If an attribute appears here it 
     MUST NOT also be included in sKeyAttrs. 

 
 
Turner & Housley        Expires January 14, 2009               [Page 5] 

Internet-Draft    Symmetric Key Package Content Type          July 2008 
    

   - sKeys contains a sequence of OneSymmetricKey values.  This 
     structure is discussed below. 

   The OneSymmetricKey fields are used as follows: 

   - sKeyAttrs optionally provides attributes that apply to one 
      symmetric key. If an attribute appears here it MUST NOT also be 
      included in sKeyPkgAttrs. 

   - sKey optionally contains the key value encoded as an OCTET STRING. 

   The OneSymmetricKey field MUST include either sKeyAttrs, sKey, or 
   sKeyAttrs and sKey. 

4. Security Considerations 

   The symmetric key package contents are not protected.  This content 
   type can be combined with a security protocol to protect the contents 
   of the package. 

5. IANA Considerations 

   None: All identifiers are already registered.  Please remove this 
   section prior to publication as an RFC. 

6. References 

6.1. Normative References 

   [RFC2119] Bradner, S., "Key words for use in RFCs to Indicate 
   Requirement Levels", BCP 14, RFC 2119, March 1997. 

   [X.680] ITU-T Recommendation X.680 (2002) | ISO/IEC 8824-1:2002. 
   Information Technology - Abstract Syntax Notation One. 

   [X.681] ITU-T Recommendation X.681 (2002) | ISO/IEC 8824-2:2002. 
   Information Technology - Abstract Syntax Notation One: Information 
   Object Specification. 

   [X.682] ITU-T Recommendation X.682 (2002) | ISO/IEC 8824-3:2002. 
   Information Technology - Abstract Syntax Notation One: Constraint 
   Specification. 

   [X.683] ITU-T Recommendation X.683 (2002) | ISO/IEC 8824-4:2002. 
   Information Technology - Abstract Syntax Notation One: 
   Parameterization of ASN.1 Specifications. 

 
 
Turner & Housley        Expires January 14, 2009               [Page 6] 

Internet-Draft    Symmetric Key Package Content Type          July 2008 
    

   [X.690] ITU-T Recommendation X.690 (2002) | ISO/IEC 8825-1:2002. 
   Information Technology - ASN.1 encoding rules: Specification of Basic 
   Encoding Rules (BER), Canonical Encoding Rules (CER) and 
   Distinguished Encoding Rules (DER). 

6.2. Non-Normative References 

   [DSKPP] Doherty, A., Pei, M., Machani, S., and M. Nystrom, "Dynamic 
   Symmetric Key Provisioning Protocol (DSKPP)", work-in-progress. 

   [RFC3852] Housley, R., "Cryptographic Message Syntax (CMS)", RFC3852, 
   July 2004. 



































 
 
Turner & Housley        Expires January 14, 2009               [Page 7] 

Internet-Draft    Symmetric Key Package Content Type          July 2008 
    

APPENDIX A: ASN.1 Module 

   This appendix provides the normative ASN.1 definitions for the 
   structures described in this specification using ASN.1 as defined in 
   [X.680] through [X.683]. 

   SymmetricKeyPackageModulev1 
     { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) 
       smime(16) modules(0) 33 } 

   DEFINITIONS IMPLICIT TAGS ::= 

   BEGIN 

   -- EXPORTS ALL  

   -- IMPORTS NOTHING 

     PKCS7-CONTENT-TYPE ::= TYPE-IDENTIFIER 

     KeyPackageContentTypes PKCS7-CONTENT-TYPE ::= { 
       symmetric-key-package | 
       ... -- Expect additional content types -- 
     } 

     symmetric-key-package PKCS7-CONTENT-TYPE ::= 
       { SymmetricKeyPackage IDENTIFIED BY id-ct-KP-sKeyPackage } 

     id-ct-KP-sKeyPackage OBJECT IDENTIFIER ::= 
       { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9) 
         smime(16) ct(1) 25 } 

     SymmetricKeyPackage ::= SEQUENCE { 
       version           KeyPkgVersion DEFAULT v1, 
       sKeyPkgAttrs  [0] SEQUENCE SIZE (1..MAX) OF Attribute OPTIONAL, 
       sKeys             SymmetricKeys } 

     SymmetricKeys ::= SEQUENCE SIZE (1..MAX) OF OneSymmetricKey 

     OneSymmetricKey ::= SEQUENCE { 
       sKeyAttrs  SEQUENCE SIZE (1..MAX) OF Attribute OPTIONAL, 
       sKey       OCTET STRING OPTIONAL 
                  -- MUST contain sKeyAttrs, sKey, or sKeyAttrs and sKey 
     } 

     KeyPkgVersion ::= INTEGER  { v1(1), ... } 

 
 
Turner & Housley        Expires January 14, 2009               [Page 8] 

Internet-Draft    Symmetric Key Package Content Type          July 2008 
    

     Attribute ::= SEQUENCE { 
       type          ATTRIBUTE.&id ({SupportedAttributes}), 
       values        SET SIZE (1..MAX) OF ATTRIBUTE.&Type 
                          ({SupportedAttributes}{@type}) } 

     SupportedAttributes ATTRIBUTE ::= { ... } 

     ATTRIBUTE ::= CLASS { 
       &derivation             ATTRIBUTE OPTIONAL, 
       &Type                   OPTIONAL, 
       -- either &Type or &derivation required 
       &equality-match         MATCHING-RULE OPTIONAL, 
       &ordering-match         MATCHING-RULE OPTIONAL, 
       &substrings-match       MATCHING-RULE OPTIONAL, 
       &single-valued          BOOLEAN DEFAULT FALSE, 
       &collective             BOOLEAN DEFAULT FALSE, 
       -- operational extensions 
       &no-user-modification   BOOLEAN DEFAULT FALSE, 
       &usage                  AttributeUsage DEFAULT userApplications, 
       &id                     OBJECT IDENTIFIER UNIQUE } 
     WITH SYNTAX { 
       [ SUBTYPE OF               &derivation ] 
       [ WITH SYNTAX              &Type ] 
       [ EQUALITY MATCHING RULE   &equality-match ] 
       [ ORDERING MATCHING RULE   &ordering-match ] 
       [ SUBSTRINGS MATCHING RULE &substrings-match ] 
       [ SINGLE VALUE             &single-valued ] 
       [ COLLECTIVE               &collective ] 
       [ NO USER MODIFICATION     &no-user-modification ] 
       [ USAGE                    &usage ] 
       ID                         &id } 

     MATCHING-RULE ::= CLASS { 
       &AssertionType             OPTIONAL, 
       &id                        OBJECT IDENTIFIER UNIQUE } 
     WITH SYNTAX { 
       [ SYNTAX                   &AssertionType ] 
       ID                         &id } 

     AttributeType ::= ATTRIBUTE.&id 

     AttributeValue ::= ATTRIBUTE.&Type 





 
 
Turner & Housley        Expires January 14, 2009               [Page 9] 

Internet-Draft    Symmetric Key Package Content Type          July 2008 
    

     AttributeUsage ::= ENUMERATED { 
       userApplications          (0), 
       directoryOperation        (1), 
       distributedOperation      (2), 
       dSAOperation              (3) } 

   END 

Author's Address 

   Sean Turner 

   IECA, Inc. 
   3057 Nutley Street, Suite 106 
   Fairfax, VA 22031 
   USA 

   Email: turners@ieca.com 

   Russ Housley 

   Vigil Security, LLC 
   918 Spring Knoll Drive 
   Herndon, VA 20170 
   USA 

   EMail: housley@vigilsec.com 




















 
 
Turner & Housley        Expires January 14, 2009              [Page 10] 

Internet-Draft    Symmetric Key Package Content Type          July 2008 
    

Full Copyright Statement 

   Copyright (C) The IETF Trust (2008). 

   This document is subject to the rights, licenses and restrictions 
   contained in BCP 78, and except as set forth therein, the authors 
   retain all their rights. 

   This document and the information contained herein are provided on an 
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS 
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND 
   THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS 
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF 
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED 
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 

Intellectual Property 

   The IETF takes no position regarding the validity or scope of any 
   Intellectual Property Rights or other rights that might be claimed to 
   pertain to the implementation or use of the technology described in 
   this document or the extent to which any license under such rights 
   might or might not be available; nor does it represent that it has 
   made any independent effort to identify any such rights.  Information 
   on the procedures with respect to rights in RFC documents can be 
   found in BCP 78 and BCP 79. 

   Copies of IPR disclosures made to the IETF Secretariat and any 
   assurances of licenses to be made available, or the result of an 
   attempt made to obtain a general license or permission for the use of 
   such proprietary rights by implementers or users of this 
   specification can be obtained from the IETF on-line IPR repository at 
   http://www.ietf.org/ipr. 

   The IETF invites any interested party to bring to its attention any 
   copyrights, patents or patent applications, or other proprietary 
   rights that may cover technology that may be required to implement 
   this standard.  Please address the information to the IETF at 
   ietf-ipr@ietf.org. 

Acknowledgment 

   Funding for the RFC Editor function is provided by the IETF 
   Administrative Support Activity (IASA). 



 
 
Turner & Housley        Expires January 14, 2009              [Page 11] 

