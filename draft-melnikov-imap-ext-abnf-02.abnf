append          = "APPEND" SP mailbox 1*append-message
                       ;; only a single append-message may appear
                       ;; if MULTIAPPEND [MULTIAPPEND] capability
                       ;; is not present
     
append-message  = append-opts SP append-data
     
append-ext      = append-opt-name SP append-opt-val
     
append-opt-comp = astring /
                       append-opt-comp
                        *(SP append-opt-comp) /
                       "(" append-opt-comp ")"
     
append-opt-name = atom
     
append-opt-val  = astring / "(" append-opt-comp ")"
     
append-data     = literal / literal8
     
append-opts     = [SP flag-list] [SP date-time] *(SP append-ext)
     
examine         = "EXAMINE" SP mailbox [select-params]
                       ;; modifies the original IMAP EXAMINE command
                       ;; to accept optional parameters
     
fetch           = "FETCH" SP sequence-set SP ("ALL" / "FULL" /
                       "FAST" / fetch-att /
                       "(" fetch-att *(SP fetch-att) ")")
                       [SP fetch-modifiers]
                       ;; modifies the original IMAP4 FETCH command to
                       ;; accept optional modifiers
     
fetch-modifiers = "(" fetch-modifier *(SP fetch-modifier) ")"
     
fetch-modifier  = fetch-modifier-name
                       [ SP ( astring /
                              "(" fetch-modif-params
                                              ")" ) ]
                       ;; modifiers to FETCH may contain a modifier
                       ;; name followed by zero or more atoms or
                       ;; strings - multiple items are always
                       ;; parenthesised, nesting is allowed
     
fetch-modif-params  = astring *(SP astring) /
                           "(" fetch-modif-params
                               *(SP fetch-modif-params) ")"
fetch-modifier-name = atom
     
literal8        = "~{" number "}" CRLF *OCTET
                        ;; A string that might contain NULs.
                        ;; <number> represents the number of OCTETs
                        ;; in the response string.
     
search          = "SEARCH" [search-return-opts]
                       [SP "CHARSET" SP astring] 1*(SP search-key)
                       ;; CHARSET argument to SEARCH MUST be
                       ;; registered with IANA
     
search-return-opts = "RETURN" SP "(" [search-return-opt
                          *(SP search-return-opt)] ")"
                          ;; SEARCH return options, e.g. MIN
     
search-return-opt = search-modifier-name
                            [SP search-mod-params]
                          ;; MUST start with atom (label)
     
search-modifier-name = atom
     
search-mod-params = astring / "(" [search-mod-comp] ")"
     
search-mod-comp  = astring /
                           search-mod-comp
                               *(SP search-mod-comp) /
                           "(" search-mod-comp ")"
                          ;; same structure as for store-modparam-comp
     
select          = "SELECT" SP mailbox [select-params]
                       ;; modifies the original IMAP SELECT command to
                       ;; accept optional parameters
     
select-params   = SP "(" select-param *(SP select-param) ")"
     
select-param    = astring / "(" astring 1*(SP astring) ")"
                       ;; parameters to SELECT may contain one or
                       ;; more atoms or strings - multiple items
                       ;; are always parenthesised
     
status          = "STATUS" SP mailbox SP
                       "(" status-att-req *(SP status-att-req) ")"
                       ;; redefine STATUS command syntax defined in
                       ;; [IMAP4]
     
status-att-list = status-rsp-info *(SP status-rsp-info)
                       ;; Redefines status-att-list from RFC 3501
     
status-att-req  = status-att
     
status-rsp-info = status-att SP number
     
store           = "STORE" SP sequence-set store-modifiers
                       SP store-att-flags
                       ;; extend [IMAP4] STORE command syntax
                       ;; to allow for optional store-modifiers
     
store-modifiers = [ SP "(" store-modifier *(SP store-modifier)
                         ")" ]
     
store-modifier  = store-modifier-name [SP store-modif-params]
                       ;; MUST start with atom (label)
     
store-modif-params = astring / "(" [store-modparam-comp] ")"
     
store-modparam-comp = astring /
                           store-modparam-comp
                              *(SP store-modparam-comp) /
                           "(" store-modparam-comp ")"
     
store-modifier-name = atom


     
