



DetNet                                                           N. Finn
Internet-Draft                                                P. Thubert
Intended status: Standards Track                                   Cisco
Expires: January 9, 2017                                 M. Johas Teener
                                                                Broadcom
                                                            July 8, 2016


                 Deterministic Networking Architecture
                   draft-finn-detnet-architecture-06

Abstract

   Deterministic Networking (DetNet) provides a capability to carry
   specified unicast or multicast data flows for real-time applications
   with extremely low data loss rates and bounded latency.  Techniques
   used include: 1) reserving data plane resources for individual (or
   aggregated) DetNet flows in some or all of the intermediate nodes
   (e.g. bridges or routers) along the path of the flow; 2) providing
   fixed paths for DetNet flows that do not rapidly change with the
   network topology; and 3) sequentializing, replicating, tracing and
   eliminating duplicate packets at various points to ensure delivery of
   each packet over at least one path.  The capabilities can be managed
   by configuration, or by manual or automatic network management.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on January 9, 2017.

Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.





Finn, et al.             Expires January 9, 2017                [Page 1]

Internet-Draft    Deterministic Networking Architecture        July 2016


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   4
     2.1.  Terms used in this document . . . . . . . . . . . . . . .   4
     2.2.  IEEE 802 TSN to DetNet dictionary . . . . . . . . . . . .   6
   3.  Providing the DetNet Quality of Service . . . . . . . . . . .   6
     3.1.  Zero Congestion Loss  . . . . . . . . . . . . . . . . . .   8
     3.2.  Explicit routes . . . . . . . . . . . . . . . . . . . . .   8
     3.3.  Jitter Reduction  . . . . . . . . . . . . . . . . . . . .   9
     3.4.  Packet Replication and Elimination  . . . . . . . . . . .  10
   4.  DetNet Architecture . . . . . . . . . . . . . . . . . . . . .  11
     4.1.  Traffic Engineering for DetNet  . . . . . . . . . . . . .  11
       4.1.1.  The Application Plane . . . . . . . . . . . . . . . .  12
       4.1.2.  The Controller Plane  . . . . . . . . . . . . . . . .  12
       4.1.3.  The Network Plane . . . . . . . . . . . . . . . . . .  13
     4.2.  DetNet flows  . . . . . . . . . . . . . . . . . . . . . .  14
       4.2.1.  Source guarantees . . . . . . . . . . . . . . . . . .  14
       4.2.2.  Incomplete Networks . . . . . . . . . . . . . . . . .  15
     4.3.  Queuing, Shaping, Scheduling, and Preemption  . . . . . .  15
     4.4.  Coexistence with normal traffic . . . . . . . . . . . . .  16
     4.5.  Fault Mitigation  . . . . . . . . . . . . . . . . . . . .  17
     4.6.  Representative Protocol Stack Model . . . . . . . . . . .  17
     4.7.  Exporting flow identification . . . . . . . . . . . . . .  19
     4.8.  Advertising resources, capabilities and adjacencies . . .  21
     4.9.  Provisioning model  . . . . . . . . . . . . . . . . . . .  21
       4.9.1.  Centralized Path Computation and Installation . . . .  21
       4.9.2.  Distributed Path Setup  . . . . . . . . . . . . . . .  22
     4.10. Scaling to larger networks  . . . . . . . . . . . . . . .  22
     4.11. Connected islands vs. networks  . . . . . . . . . . . . .  22
   5.  Compatibility with Layer-2  . . . . . . . . . . . . . . . . .  23
   6.  Open Questions  . . . . . . . . . . . . . . . . . . . . . . .  23
     6.1.  DetNet flow identification and sequencing . . . . . . . .  23
     6.2.  Flat vs. hierarchical control . . . . . . . . . . . . . .  24
     6.3.  Peer-to-peer reservation protocol . . . . . . . . . . . .  24
     6.4.  Wireless media interactions . . . . . . . . . . . . . . .  25
     6.5.  Packet encoding for loss prevention . . . . . . . . . . .  25
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .  25



Finn, et al.             Expires January 9, 2017                [Page 2]

Internet-Draft    Deterministic Networking Architecture        July 2016


   8.  Privacy Considerations  . . . . . . . . . . . . . . . . . . .  26
   9.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  26
   10. Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  26
   11. Access to IEEE 802.1 documents  . . . . . . . . . . . . . . .  26
   12. Informative References  . . . . . . . . . . . . . . . . . . .  27
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  32

1.  Introduction

   Deterministic Networking (DetNet) is a service that can be offered by
   a network to data flows (DetNet flows) that that are limited, at
   their source, to a maximum data rate specified by that source.
   DetNet provides these flows extremely low packet loss rates and
   assured maximum end-to-end delivery latency.  This is accomplished by
   dedicating network resources such as link bandwidth and buffer space
   to DetNet flows and/or classes of DetNet flows, and by replicating
   packets along multiple paths.  Unused reserved resources are
   available to non-DetNet packets.

   The Deterministic Networking Problem Statement
   [I-D.ietf-detnet-problem-statement] introduces Deterministic
   Networking, and Deterministic Networking Use Cases
   [I-D.ietf-detnet-use-cases] summarizes the need for it.

   A goal of DetNet is a converged network in all respects.  That is,
   the presence of DetNet flows does not preclude non-DetNet flows, and
   the benefits offered DetNet flows should not, except in extreme
   cases, prevent existing QoS mechanisms from operating in a normal
   fashion, subject to the bandwidth required for the DetNet flows.  A
   single source-destination pair can trade both DetNet and non-DetNet
   flows.  End systems and applications need not instantiate special
   interfaces for DetNet flows.  Networks are not restricted to certain
   topologies; connectivity is not restricted.  Any application that
   generates a data flow that can be usefully characterized as having a
   maximum bandwidth should be able to take advantage of DetNet, as long
   as the necessary resources can be reserved.  Reservations can be made
   by the application itself, via network management, by an applications
   controller, or by other means.

   Many applications of interest to Deterministic Networking require the
   ability to synchronize the clocks in end systems to a sub-microsecond
   accuracy.  Some of the queue control techniques defined in
   Section 4.3 also require time synchronization among relay and transit
   nodes.  The means used to achieve time synchronization are not
   addressed in this document.  DetNet should accommodate various
   synchronization techniques and profiles that are defined elsewhere to
   solve exchange time in different market segments.




Finn, et al.             Expires January 9, 2017                [Page 3]

Internet-Draft    Deterministic Networking Architecture        July 2016


   The present document is an individual contribution, but it is
   intended by the authors for adoption by the DetNet working group.

2.  Terminology

2.1.  Terms used in this document

   The following special terms are used in this document in order to
   avoid the assumption that a given element in the architecture does or
   does not have Internet Protocol stack, functions as a router, bridge,
   firewall, or otherwise plays a particular role at Layer-2 or higher.

   destination
           An end system capable of receiving a DetNet flow.

   DetNet domain
           The portion of a network that is DetNet aware.  It includes
           end systems and other DetNet nodes.

   DetNet flow
           A DetNet flow is a sequence of packets to which the DetNet
           service is to be applied.  It can be limited by the source in
           its maximum packet size and transmission rate, and can thus
           be provided congestion-free delivery by the network.

   DetNet compound flow and DetNet member flow
           A DetNet compound flow is a DetNet flow that has been
           separated into multiple duplicate DetNet member flows, which
           are eventually merged back into a single DetNet compound
           flow, at the DetNet transport layer.  "Compound" and "member"
           are strictly relative to each other, not absolutes; a DetNet
           compound flow comprising multiple DetNet member flows can, in
           turn, be a member of a higher-order compound.

   DetNet intermediate node
           A DetNet relay node or transit node.

   DetNet relay edge node
           An instance of a DetNet relay node that includes a service
           layer proxy function for DetNet loss prevention (e.g. packet
           sequencing and/or elimination) for one or more end systems,
           analogous to a Label Edge Router (LER).

   end system
           Commonly called a "host" or "node" in IETF documents, and an
           "end station" is IEEE 802 documents.  End systems of interest
           to this document are either sources or destinations of DetNet




Finn, et al.             Expires January 9, 2017                [Page 4]

Internet-Draft    Deterministic Networking Architecture        July 2016


           flows.  And end system may or may not be DetNet transport
           layer aware or DetNet service layer aware.

   link
           A connection between two DetNet nodes.  It may be composed of
           a physical link or a sub-network technology that can provide
           appropriate traffic delivery for DetNet flows.

   DetNet node
           A DetNet aware end system, transit node, or relay node.
           "DetNet" may be omitted in some text.

   Detnet relay node
           A DetNet service layer function that interconnects different
           DetNet transport layer protocols or networks (instances) to
           perform packet replication and elimination (Section 3.4.  A
           DetNet relay node typically incorporates DetNet transport
           layer functions as well, in which case it is collocated with
           a transit node, such as a bridge, a router, a Label Switch
           Router (LSR), a firewall, or any other system that
           participates in the DetNet service layer.

   reservation
           A trail of configuration between source to destination(s)
           through transit nodes and subnets associated with a DetNet
           flow, required to deliver the benefits of DetNet.

   DetNet service layer
           The layer at which loss prevention services such as packet
           sequencing and the elimination part of replication and
           elimination (Section 3.4) are performed.

   source
           An end system capable of sourcing a DetNet flow.

   DetNet transit node
           A node operating at the DetNet transport layer, that utilizes
           link layer and/or network layer switching across multiple
           links and/or sub-networks to provide paths for DetNet service
           layer functions.  An MPLS LSR is an example of a DetNet
           transit node.

   DetNet transport layer
           The layer that splits and merges Detnet flows for packet
           replication and elimination (Section 3.4).






Finn, et al.             Expires January 9, 2017                [Page 5]

Internet-Draft    Deterministic Networking Architecture        July 2016


2.2.  IEEE 802 TSN to DetNet dictionary

   This section also serves as a dictionary for translating from the
   terms used by the IEEE 802 Time-Sensitive Networking (TSN) Task Group
   to those of the DetNet WG.

   Listener
           The IEEE 802 term for a destination of a DetNet flow.

   relay system
           The IEEE 802 term for a DetNet intermediate node.

   Stream
           The IEEE 802 term for a DetNet flow.

   Talker
           The IEEE 802 term for the source of a DetNet flow.

3.  Providing the DetNet Quality of Service

   The DetNet Quality of Service can be expressed in terms of:

   o  Minimum and maximum end-to-end latency from source to destination;
      timely delivery and jitter avoidance derive from these constraints

   o  Probability of loss of a packet, under various assumptions as to
      the operational states of the nodes and links.  A derived property
      is whether it is acceptable to deliver a duplicate packet, which
      is an inherent risk in highly reliable and/or broadcast
      transmissions

   It is a distinction of DetNet that it is concerned solely with worst-
   case values for the end-to-end latency.  Average, mean, or typical
   values are of no interest, because they do not affect the ability of
   a real-time system to perform its tasks.  In general, a trivial
   priority-based queuing scheme will give better average latency to a
   data flow than DetNet, but of course, the worst-case latency can be
   essentially unbounded.

   Three techniques are used by DetNet to provide these qualities of
   service:

   o  Bandwidth reservation and enforcement (Section 3.1).

   o  Explicit routes (Section 3.2).

   o  A DetNet loss protection mechanism.




Finn, et al.             Expires January 9, 2017                [Page 6]

Internet-Draft    Deterministic Networking Architecture        July 2016


   The DetNet techniques are meant to address both of the DetNet QoS
   requirements (latency and packet loss).  Given that DetNet nodes have
   a finite amount of buffer space, zero congestion loss necessarily
   results in a maximum end-to-end latency.  It also addresses the
   largest contribution to packet loss, which is buffer congestion.

   After congestion, the most important contributions to packet loss are
   typically from random media errors and equipment failures.
   Additional mechanisms, such as encoding schemes and/or data
   replication techniques are needed.  The mechanisms employed are
   constrained by the requirement to meet the users' latency
   requirements.  Packet replication and elimination (Section 3.4) is
   one possible mechanism to provide DetNet loss protection.

   These three techniques can be applied independently, giving eight
   possible combinations, including none (no DetNet), although some
   combinations are of wider utility than others.  This separation keeps
   the protocol stack coherent and maximizes interoperability with
   existing and developing standards in this (IETF) and other Standards
   Development Organizations.  Some examples of typical expected
   combinations:

   o  Explicit routes (a) plus packet replication (b) are exactly the
      techniques employed by [HSR-PRP].  Explicit routes are achieved by
      limiting the physical topology of the network, and the
      sequentialization, replication, and duplicate elimination are
      facilitated by packet tags added at the front or the end of
      Ethernet frames.

   o  Zero congestion loss (a) alone is is offered by IEEE 802.1 Audio
      Video bridging [IEEE802.1BA-2011].  As long as the network suffers
      no failures, zero congestion loss can be achieved through the use
      of a reservation protocol (MSRP), shapers in every bridge, and a
      bit of network calculus.

   o  Using all three together gives maximum protection.

   There are, of course, simpler methods available (and employed, today)
   to achieve levels of latency and packet loss that are satisfactory
   for many applications.  Prioritization and over-provisioning is one
   such technique.  However, these methods generally work best in the
   absence of any significant amount of non-critical traffic in the
   network (if, indeed, such traffic is supported at all), or work only
   if the critical traffic constitutes only a small portion of the
   network's theoretical capacity, or work only if all systems are
   functioning properly, or in the absence of actions by end systems
   that disrupt the network's operations.




Finn, et al.             Expires January 9, 2017                [Page 7]

Internet-Draft    Deterministic Networking Architecture        July 2016


   There are any number of methods in use, defined, or in progress for
   accomplishing each of the above techniques.  It is expected that this
   DetNet Architecture will assist various vendors, users, and/or
   "vertical" Standards Development Organizations (dedicated to a single
   industry) to make selections among the available means of
   implementing DetNet networks.

3.1.  Zero Congestion Loss

   The primary means by which DetNet achieves its QoS assurances is to
   completely eliminate congestion at an output port as a cause of
   packet loss.  Given that a DetNet flow cannot be throttled, this can
   be achieved only by the provision of sufficient buffer storage at
   each hop through the network to ensure that no packets are dropped
   due to a lack of buffer storage.

   Ensuring adequate buffering requires, in turn, that the source, and
   every intermediate node along the path to the destination (or nearly
   every node -- see Section 4.2.2) be careful to regulate its output to
   not exceed the data rate for any DetNet flow, except for brief
   periods when making up for interfering traffic.  Any packet sent
   ahead of its time potentially adds to the number of buffers required
   by the next hop, and may thus exceed the resources allocated for a
   particular DetNet flow.

   The low-level mechanisms described in Section 4.3 provide the
   necessary regulation of transmissions by an end system or
   intermediate node to ensure zero congestion loss.  The reservation of
   the bandwidth and buffers for a DetNet flow requires the provisioning
   described in Section 4.9.  A DetNet node may have other resources
   requiring allocation and/or scheduling, that might otherwise be over-
   subscribed and trigger the rejection of a reservation.

3.2.  Explicit routes

   In networks controlled by typical peer-to-peer protocols such as IEEE
   802.1 ISIS bridged networks or IETF OSPF routed networks, a network
   topology event in one part of the network can impact, at least
   briefly, the delivery of data in parts of the network remote from the
   failure or recovery event.  Thus, even redundant paths through a
   network, if controlled by the typical peer-to-peer protocols, do not
   eliminate the chances of brief losses of contact.

   Many real-time networks rely on physical rings or chains of two-port
   devices, with a relatively simple ring control protocol.  This
   supports redundant paths with a minimum of wiring.  As an additional
   benefit, ring topologies can often utilize different topology
   management protocols than those used for a mesh network, with a



Finn, et al.             Expires January 9, 2017                [Page 8]

Internet-Draft    Deterministic Networking Architecture        July 2016


   consequent reduction in the response time to topology changes.  Of
   course, this comes at some cost in terms of increased hop count, and
   thus latency, for the typical path.

   In order to get the advantages of low hop count and still ensure
   against even very brief losses of connectivity, DetNet employs
   explicit routes, where the path taken by a given DetNet flow does not
   change, at least immediately, and likely not at all, in response to
   network topology events.  When combined with a loss prevention
   mechanism such as packet replication and elimination (Section 3.4),
   this results in a high likelihood of continuous connectivity.
   Explicit routes are commonly used in MPLS TE LSPs.

3.3.  Jitter Reduction

   A core objective of DetNet is to enable the convergence of Non-IP
   networks onto a common network infrastructure.  This requires the
   accurate emulation of currently deployed mission-specific networks,
   which typically rely on point-to-point analog (e.g. 4-20mA
   modulation) and serial-digital cables (or buses) for highly reliable,
   synchronized and jitter-free communications.  While the latency of
   analog transmissions is basically the speed of light, legacy serial
   links are usually slow (in the order of Kbps) compared to, say, GigE,
   and some latency is usually acceptable.  What is not acceptable is
   the introduction of excessive jitter, which may, for instance, affect
   the stability of control systems.

   Applications that are designed to operate on serial links usually do
   not provide services to recover the jitter, because jitter simply
   does not exists there.  Streams of information are expected to be
   delivered in-order and the precise time of reception influences the
   processes.  In order to converge such existing applications, there is
   a desire to emulate all properties of the serial cable, such as clock
   transportation, perfect flow isolation and fixed latency.  While
   minimal jitter (in the form of specifying minimum, as well as
   maximum, end-to-end latency) is supported by DetNet, there are
   practical limitations on packet-based networks in this regard.  In
   general, users are encouraged to use, instead of, "do this when you
   get the packet," a combination of:

   o  Sub-microsecond time synchronization among all source and
      destination end systems, and

   o  Time-of-execution fields in the application packets.







Finn, et al.             Expires January 9, 2017                [Page 9]

Internet-Draft    Deterministic Networking Architecture        July 2016


3.4.  Packet Replication and Elimination

   After congestion loss has been eliminated, the most important causes
   of packet loss are random media and/or memory faults, and equipment
   failures.  Both causes of packet loss can be greatly reduced by
   apreading the data in a packet over multiple transmissions.  One such
   method is described in this section, which sends the same packets
   over multiple paths.  Other methods, such as ones that use encoding
   methods to combine the information in multiple packets, may also be
   applicable.  See Section 6.5.

   Packet replication and elimination, also known as seamless redundancy
   [HSR-PRP], or 1+1 hitless protection, is a function of the DetNet
   service layer.  It involves three capabilities:

   o  Replicating these packets into multiple DetNet member flows and,
      typically, sending them along at least two different paths to the
      destination(s), e.g. over the explicit routes of Section 3.2.

   o  Providing sequencing information, once, at or near the source, to
      the packets of a DetNet compound flow.  This may be done by adding
      a sequence number or time stamp as part of DetNet, or may be
      inherent in the packet, e.g. in a transport protocol, or
      associated to other physical properties such as the precise time
      (and radio channel) of reception of the packet.

   o  Eliminating duplicated packets.  This may be done at any step
      along the path to save network resources further down, in
      particular if multiple Replication points exist.  But the most
      common case is to perform this operation at the very edge of the
      DetNet network, preferably in or near the receiver.

   This function is a "hitless" version of, e.g., the 1+1 linear
   protection in [RFC6372].  That is, instead of switching from one flow
   to the other when a failure of a flow is detected, DetNet combines
   both flows, and performs a packet-by-packet selection of which to
   discard, based on sequence number.

   In the simplest case, this amounts to replicating each packet in a
   source that has two interfaces, and conveying them through the
   network, along separate paths, to the similarly dual-homed
   destinations, that discard the extras.  This ensures that one path
   (with zero congestion loss) remains, even if some intermediate node
   fails.  The sequence numbers can also be used for loss detection and
   for re-ordering.






Finn, et al.             Expires January 9, 2017               [Page 10]

Internet-Draft    Deterministic Networking Architecture        July 2016


   Alternatively, Detnet relay nodes in the network can provide
   replication and elimination facilities at various points in the
   network, so that multiple failures can be accommodated.

   This is shown in the following figure, where the two relay nodes each
   replicate (R) the DetNet flow on input, sending the DetNet member
   flows to both the other relay node and to the end system, and
   eliminate duplicates (E) on the output interface to the right-hand
   end system.  Any one link in the network can fail, and the Detnet
   compound flow can still get through.  Furthermore, two links can
   fail, as long as they are in different segments of the network.

                    Packet replication and elimination

                > > > > > > > > > relay > > > > > > > >
               > /------------+ R node E +------------\ >
              > /                  v + ^               \ >
      end    R +                   v | ^                + E end
      system   +                   v | ^                +   system
              > \                  v + ^               / >
               > \------------+ R relay E +-----------/ >
                > > > > > > > > >  node > > > > > > > >

                                 Figure 1

   Note that packet replication and elimination does not react to and
   correct failures; it is entirely passive.  Thus, intermittent
   failures, mistakenly created packet filters, or misrouted data is
   handled just the same as the equipment failures that are detected
   handled by typical routing and bridging protocols.

   When combining member flows that take different-length paths through
   the network, and which are also guaranteed a worst-case latency by
   packet shaping, a merge point may require extra buffering to equalize
   the delays over the different paths.  This equalization ensures that
   the resultant compound flow will not exceed its contracted bandwidth
   even after one or the other of the paths is restored after a failure.

4.  DetNet Architecture

4.1.  Traffic Engineering for DetNet

   Traffic Engineering Architecture and Signaling (TEAS) [TEAS] defines
   traffic-engineering architectures for generic applicability across
   packet and non-packet networks.  From TEAS perspective, Traffic
   Engineering (TE) refers to techniques that enable operators to
   control how specific traffic flows are treated within their networks.




Finn, et al.             Expires January 9, 2017               [Page 11]

Internet-Draft    Deterministic Networking Architecture        July 2016


   Because if its very nature of establishing explicit optimized paths,
   Deterministic Networking can be seen as a new, specialized branch of
   Traffic Engineering, and inherits its architecture with a separation
   into planes.

   The Deterministic Networking architecture is thus composed of three
   planes, a (User) Application Plane, a Controller Plane, and a Network
   Plane, which echoes that of Figure 1 of Software-Defined Networking
   (SDN): Layers and Architecture Terminology [RFC7426].:

4.1.1.  The Application Plane

   Per [RFC7426], the Application Plane includes both applications and
   services.  In particular, the Application Plane incorporates the User
   Agent, a specialized application that interacts with the end user /
   operator and performs requests for Deterministic Networking services
   via an abstract Flow Management Entity, (FME) which may or may not be
   collocated with (one of) the end systems.

   At the Application Plane, a management interface enables the
   negotiation of flows between end systems.  An abstraction of the flow
   called a Traffic Specification (TSpec) provides the representation.
   This abstraction is used to place a reservation over the (Northbound)
   Service Interface and within the Application plane.  It is associated
   with an abstraction of location, such as IP addresses and DNS names,
   to identify the end systems and eventually specify intermediate
   nodes.

4.1.2.  The Controller Plane

   The Controller Plane corresponds to the aggregation of the Control
   and Management Planes in [RFC7426], though Common Control and
   Measurement Plane (CCAMP) [CCAMP] makes an additional distinction
   between management and measurement.  When the logical separation of
   the Control, Measurement and other Management entities is not
   relevant, the term Controller Plane is used for simplicity to
   represent them all, and the term controller refers to any device
   operating in that plane, whether is it a Path Computation entity or a
   Network Management entity (NME).  The Path Computation Element (PCE)
   [PCE] is a core element of a controller, in charge of computing
   Deterministic paths to be applied in the Network Plane.

   A (Northbound) Service Interface enables applications in the
   Application Plane to communicate with the entities in the Controller
   Plane.

   One or more PCE(s) collaborate to implement the requests from the FME
   as Per-Flow Per-Hop Behaviors installed in the intermediate nodes for



Finn, et al.             Expires January 9, 2017               [Page 12]

Internet-Draft    Deterministic Networking Architecture        July 2016


   each individual flow.  The PCEs place each flow along a deterministic
   sequence of intermediate nodes so as to respect per-flow constraints
   such as security and latency, and optimize the overall result for
   metrics such as an abstract aggregated cost.  The deterministic
   sequence can typically be more complex than a direct sequence and
   include redundancy path, with one or more packet replication and
   elimination points.

4.1.3.  The Network Plane

   The Network Plane represents the network devices and protocols as a
   whole, regardless of the Layer at which the network devices operate.
   It includes Forwarding Plane (data plane), Application, and
   Operational Plane (control plane) aspects.

   The network Plane comprises the Network Interface Cards (NIC) in the
   end systems, which are typically IP hosts, and intermediate nodes,
   which are typically IP routers and switches.  Network-to-Network
   Interfaces such as used for Traffic Engineering path reservation in
   [RFC5921], as well as User-to-Network Interfaces (UNI) such as
   provided by the Local Management Interface (LMI) between network and
   end systems, are both part of the Network Plane, both in the control
   plane and the data plane.

   A Southbound (Network) Interface enables the entities in the
   Controller Plane to communicate with devices in the Network Plane.
   This interface leverages and extends TEAS to describe the physical
   topology and resources in the Network Plane.

                          Flow Management Entity

       End                                                     End
       System                                               System

      -+-+-+-+-+-+-+ Northbound -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-

                PCE         PCE              PCE              PCE

      -+-+-+-+-+-+-+ Southbound -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-

              intermediate  intermed.   intermed.  intermed.
                  Node       Node       Node       Node
       NIC                                                     NIC
              intermediate  intermed.   intermed.  intermed.
                  Node       Node       Node       Node

                                 Figure 2




Finn, et al.             Expires January 9, 2017               [Page 13]

Internet-Draft    Deterministic Networking Architecture        July 2016


   The intermediate nodes (and eventually the end systems NIC) expose
   their capabilities and physical resources to the controller (the
   PCE), and update the PCE with their dynamic perception of the
   topology, across the Southbound Interface.  In return, the PCE(s) set
   the per-flow paths up, providing a Flow Characterization that is more
   tightly coupled to the intermediate node Operation than a TSpec.

   At the Network plane, intermediate nodes may exchange information
   regarding the state of the paths, between adjacent systems and
   eventually with the end systems, and forward packets within
   constraints associated to each flow, or, when unable to do so,
   perform a last resort operation such as drop or declassify.

   This specification focuses on the Southbound interface and the
   operation of the Network Plane.

4.2.  DetNet flows

4.2.1.  Source guarantees

   DetNet flows can by synchronous or asynchronous.  In synchronous
   DetNet flows, at least the intermediate nodes (and possibly the end
   systems) are closely time synchronized, typically to better than 1
   microsecond.  By transmitting packets from different DetNet flows or
   classes of DetNet flows at different times, using repeating schedules
   synchronized among the intermediate nodes, resources such as buffers
   and link bandwidth can be shared over the time domain among different
   DetNet flows.  There is a tradeoff among techniques for synchronous
   DetNet flows between the burden of fine-grained scheduling and the
   benefit of reducing the required resources, especially buffer space.

   In contrast, asynchronous DetNet flows are not coordinated with a
   fine-grained schedule, so relay and end systems must assume worst-
   case interference among DetNet flows contending for buffer resources.
   Asynchronous DetNet flows are characterized by:

   o  A maximum packet size;

   o  An observation interval; and

   o  A maximum number of transmissions during that observation
      interval.

   These parameters, together with knowledge of the protocol stack used
   (and thus the size of the various headers added to a packet), limit
   the number of bit times per observation interval that the DetNet flow
   can occupy the physical medium.




Finn, et al.             Expires January 9, 2017               [Page 14]

Internet-Draft    Deterministic Networking Architecture        July 2016


   The source promises that these limits will not be exceeded.  If the
   source transmits less data than this limit allows, the unused
   resources such as link bandwidth can be made available by the system
   to non-DetNet packets.  However, making those resources available to
   DetNet packets in other DetNet flows would serve no purpose.  Those
   other DetNet flows have their own dedicated resources, on the
   assumption that all DetNet flows can use all of their resources over
   a long period of time.

   Note that there is no provision in DetNet for throttling DetNet flows
   (reducing the transmission rate via feedback); the assumption is that
   a DetNet flow, to be useful, must be delivered in its entirety.  That
   is, while any useful application is written to expect a certain
   number of lost packets, the real-time applications of interest to
   DetNet demand that the loss of data due to the network is
   extraordinarily infrequent.

   Although DetNet strives to minimize the changes required of an
   application to allow it to shift from a special-purpose digital
   network to an Internet Protocol network, one fundamental shift in the
   behavior of network applications is impossible to avoid: the
   reservation of resources before the application starts.  In the first
   place, a network cannot deliver finite latency and practically zero
   packet loss to an arbitrarily high offered load.  Secondly, achieving
   practically zero packet loss for unthrottled (though bandwidth
   limited) DetNet flows means that bridges and routers have to dedicate
   buffer resources to specific DetNet flows or to classes of DetNet
   flows.  The requirements of each reservation have to be translated
   into the parameters that control each system's queuing, shaping, and
   scheduling functions and delivered to the hosts, bridges, and
   routers.

4.2.2.  Incomplete Networks

   The presence in the network of transit nodes or subnets that are not
   fully capable of offering DetNet services complicates the ability of
   the intermediate nodes and/or controller to allocate resources, as
   extra buffering, and thus extra latency, must be allocated at points
   downstream from the non-DetNet intermediate node for a DetNet flow.

4.3.  Queuing, Shaping, Scheduling, and Preemption

   As described above, DetNet achieves its aims by reserving bandwidth
   and buffer resources at every hop along the path of the DetNet flow.
   The reservation itself is not sufficient, however.  Implementors and
   users of a number of proprietary and standard real-time networks have
   found that standards for specific data plane techniques are required
   to enable these assurances to be made in a multi-vendor network.  The



Finn, et al.             Expires January 9, 2017               [Page 15]

Internet-Draft    Deterministic Networking Architecture        July 2016


   fundamental reason is that latency variation in one system results in
   the need for extra buffer space in the next-hop system(s), which in
   turn, increases the worst-case per-hop latency.

   Standard queuing and transmission selection algorithms allow a
   central controller to compute the latency contribution of each
   transit node to the end-to-end latency, to compute the amount of
   buffer space required in each transit node for each incremental
   DetNet flow, and most importantly, to translate from a flow
   specification to a set of values for the managed objects that control
   each relay or end system.  The IEEE 802 has specified (and is
   specifying) a set of queuing, shaping, and scheduling algorithms that
   enable each transit node (bridge or router), and/or a central
   controller, to compute these values.  These algorithms include:

   o  A credit-based shaper [IEEE802.1Q-2014] Clause 34.

   o  Time-gated queues governed by a rotating time schedule,
      synchronized among all transit nodes [IEEE802.1Qbv].

   o  Synchronized double (or triple) buffers driven by synchronized
      time ticks.  [IEEE802.1Qch].

   o  Pre-emption of an Ethernet packet in transmission by a packet with
      a more stringent latency requirement, followed by the resumption
      of the preempted packet [IEEE802.1Qbu], [IEEE802.3br].

   While these techniques are currently embedded in Ethernet and
   bridging standards, we can note that they are all, except perhaps for
   packet preemption, equally applicable to other media than Ethernet,
   and to routers as well as bridges.

4.4.  Coexistence with normal traffic

   A DetNet network supports the dedication of a high proportion (e.g.
   75%) of the network bandwidth to DetNet flows.  But, no matter how
   much is dedicated for DetNet flows, it is a goal of DetNet to coexist
   with existing Class of Service schemes (e.g., DiffServ).  It is also
   important that non-DetNet traffic not disrupt the DetNet flow, of
   course (see Section 4.5 and Section 7).  For these reasons:

   o  Bandwidth (transmission opportunities) not utilized by a DetNet
      flow are available to non-DetNet packets (though not to other
      DetNet flows).

   o  DetNet flows can be shaped or scheduled, in order to ensure that
      the highest-priority non-DetNet packet also is ensured a worst-
      case latency (at any given hop).



Finn, et al.             Expires January 9, 2017               [Page 16]

Internet-Draft    Deterministic Networking Architecture        July 2016


   o  When transmission opportunities for DetNet flows are scheduled in
      detail, then the algorithm constructing the schedule should leave
      sufficient opportunities for non-DetNet packets to satisfy the
      needs of the users of the network.  Detailed scheduling can also
      permit the time-shared use of buffer resources by different DetNet
      flows.

   Ideally, the net effect of the presence of DetNet flows in a network
   on the non-DetNet packets is primarily a reduction in the available
   bandwidth.

4.5.  Fault Mitigation

   One key to building robust real-time systems is to reduce the
   infinite variety of possible failures to a number that can be
   analyzed with reasonable confidence.  DetNet aids in the process by
   providing filters and policers to detect DetNet packets received on
   the wrong interface, or at the wrong time, or in too great a volume,
   and to then take actions such as discarding the offending packet,
   shutting down the offending DetNet flow, or shutting down the
   offending interface.

   It is also essential that filters and service remarking be employed
   at the network edge to prevent non-DetNet packets from being mistaken
   for DetNet packets, and thus impinging on the resources allocated to
   DetNet packets.

   There exist techniques, at present and/or in various stages of
   standardization, that can perform these fault mitigation tasks that
   deliver a high probability that misbehaving systems will have zero
   impact on well-behaved DetNet flows, except of course, for the
   receiving interface(s) immediately downstream of the misbehaving
   device.  Examples of such techniques include traffic policing
   functions (e.g.  [RFC2475]) and separating flows into per-flow rate-
   limited queues.

4.6.  Representative Protocol Stack Model

   Figure 3 illustrates a conceptual DetNet data plane layering model.
   One may compare it to that in [IEEE802.1CB], Annex C, a work in
   progress.










Finn, et al.             Expires January 9, 2017               [Page 17]

Internet-Draft    Deterministic Networking Architecture        July 2016


                     DetNet data plane protocol stack

             |  packets going  |        ^  packets coming   ^
             v down the stack  v        |   up the stack    |
           +----------------------+   +-----------------------+
           |        source        |   |      destination      |
           +----------------------+   +-----------------------+
           |    Service layer     |   |     Service layer     |
           |  Packet sequencing   |   | Duplicate elimination |
           +----------------------+   +-----------------------+
           |   Transport layer    |   |    Transport layer    |
           |  flow duplication    |   |      flow merging     |
           +----------------------+   +-----------------------+
           |    Subnet services   |   |    Subnet services    |
           +----------------------+   +-----------------------+
           |     Lower layers     |   |     Lower layers      |
           +----------------------+   +-----------------------+
                      v                           ^
                       \_________________________/

                                 Figure 3

   Not all layers are required for any given application, or even for
   any given network.  The layers are, from top to bottom:

   Application
           Shown as "source" and "destination" in the diagram.

   OAM
           Operations, Administration, and Maintenance leverages in-band
           and out-of-and signaling that validates whether the service
           is effectively obtained within QoS constraints.  It is not
           shown in Figure 3; OAM may reside in any number of the
           layers.  OAM can involve specific tagging added in the
           packets for tracing implementation or network configuration
           errors; traceability enables to find whether a packet is a
           replica, which relay node performed the replication, and
           which segment was intended for the replica.

   Packet sequencing
           As part of DetNet loss prevention, supplies the sequence
           number for providing DetNet loss prevention via packet
           replication and elimination (Section 3.4) for packets going
           down the stack.  Peers with Duplicate elimination.  This
           layer is not needed if a higher-layer transport protocol is
           expected to perform any packet sequencing and duplicate
           elimination required by the DetNet flow duplication.




Finn, et al.             Expires January 9, 2017               [Page 18]

Internet-Draft    Deterministic Networking Architecture        July 2016


   Duplicate elimination
           As part of the DetNet service layer, based on the sequenced
           number supplied by its peer, packet sequencing, Duplicate
           elimination discards any duplicate packets generated by
           DetNet flow duplication.  It can operate on member flows,
           compound flows, or both.  The duplication may also be
           inferred from other information such as the precise time of
           reception in a scheduled network.  The duplicate elimination
           layer may also perform resequencing of packets to restore
           packet order in a flow that was disrupted by the loss of
           packets on one or another of the multiple paths taken.

   Network flow duplication
           As part of DetNet loss prevention, replicates packets going
           down the stack, that belong to a DetNet compound flow, into
           two or more DetNet member flows.  Note that this function is
           separate from packet sequencing.  Flow duplication can be an
           explicit duplication and remarking of packets, or can be
           performed by, for example, techniques similar to ordinary
           multicast replication.  Peers with DetNet flow merging.

   Network flow merging
           As part of the DetNet network layer, merges DetNet member
           flows together for packets coming up the stack belonging to a
           specific DetNet compound flow.  Peers with DetNet flow
           duplication.  DetNet flow merging, together with packet
           sequencing, duplicate elimination, and DetNet flow
           duplication, performs packet replication and elimination
           (Section 3.4).

   Queuing shaping scheduling
           The subnet services layer provides the latency and congestion
           loss parts of the DetNet QoS.  See Section 4.3.  Note that
           additional shaping elements may be provided for DetNet edge
           nodes in order to precondition potentially malformed DetNet
           flows from a source end system.  Note also that these subnet
           services are typically required of DetNet intermediate nodes
           that are connected by direct links, not just those connected
           by subnets such as bridged LANs.

4.7.  Exporting flow identification

   An interesting feature of DetNet, and one that invites
   implementations that can be accused of "layering violations", is the
   need for lower layers to be aware of specific flows at higher layers,
   in order to provide specific queuing and shaping services for
   specific flows.  For example:




Finn, et al.             Expires January 9, 2017               [Page 19]

Internet-Draft    Deterministic Networking Architecture        July 2016


   o  A non-IP, strictly L2 source end system X may be sending multiple
      flows to the same L2 destination end system Y.  Those flows may
      include DetNet flows with different QoS requirements, and may
      include non-DetNet flows.

   o  A router may be sending any number of flows to another router.
      Again, those flows may include DetNet flows with different QoS
      requirements, and may include non-DetNet flows.

   o  Two routers may be separated by bridges.  For these bridges to
      perform any required per-flow queuing and shaping, they must be
      able to identify the individual flows.

   o  A Label Edge Router (LERs) may have a Label Switched Path (LSP)
      set up for handling traffic destined for a particular IP address
      carrying only non-DetNet flows.  If a DetNet flow to that same
      address is requested, a separate LSP may be needed, in order that
      all of the Label Switch Routers (LSRs) along the path to the
      destination give that flow special queuing and shaping.

   The need for a lower-level DetNet node to be aware of individual
   higher-layer flows is not unique to DetNet.  But, given the endless
   complexity of layering and relayering over tunnels that is available
   to network designers, DetNet needs to provide a model for flow
   identification that is at least somewhat better than deep packet
   inspection.  That is not to say that deep inspection will not be
   used, or the capability standardized; but, there are alternatives.

   The main alternative is the sequence encode/decode and, particularly,
   the DetNet flow encoding/decoding layers shown in Figure 3.  In this
   model, at the time a DetNet flow is established and the resources for
   it reserved, an alternate encapsulation of the DetNet flow at the
   lower layer is requested and established.  For example:

   o  A single unicast DetNet flow passing from router A through a
      bridged network to router B may be assigned a {VLAN, multicast
      destination MAC address} pair that is unique within that bridged
      network.  The bridges can then identify the flow without accessing
      higher-layer headers.  Of course, the receiving router must
      recognize and accept that multicast MAC address.

   o  A DetNet flow passing from LSR A to LSR B may be assigned a
      different label than that used for other flows to the same IP
      destination.

   The DetNet flow encoding/decoding layers shown in Figure 3 perform
   the required alternate encapsulations.  For example, one could place
   a DetNet flow encoding shim between the Address Resolution Protocol



Finn, et al.             Expires January 9, 2017               [Page 20]

Internet-Draft    Deterministic Networking Architecture        July 2016


   (ARP) layer and the MAC layer, which alters the {VLAN, MAC address}
   pair to identify particular streams going up and down the stack, so
   that the layers above the shim need no alteration to service DetNet
   flows.

   In any of the above cases, it is possible that an existing DetNet
   flow can be used as a carrier for multiple DetNet sub-flows.  (Not to
   be confused with DetNet compound vs. member flows.)  Of course, this
   requires that the aggregate DetNet flow be provisioned properly to
   carry the sub-flows.

   Thus, rather than deep packet inspection, there is the option to
   export higher-layer information to the lower layer.  The requirement
   to support one or the other method for flow identification (or both)
   is the essential complexity that DetNet brings to existing control
   plane models.

4.8.  Advertising resources, capabilities and adjacencies

   There are three classes of information that a central controller or
   decentralized control plane needs to know that can only be obtained
   from the end systems and/or transit nodes in the network.  When using
   a peer-to-peer control plane, some of this information may be
   required by a system's neighbors in the network.

   o  Details of the system's capabilities that are required in order to
      accurately allocate that system's resources, as well as other
      systems' resources.  This includes, for example, which specific
      queuing and shaping algorithms are implemented (Section 4.3), the
      number of buffers dedicated for DetNet allocation, and the worst-
      case forwarding delay.

   o  The dynamic state of an end or transit node's DetNet resources.

   o  The identity of the system's neighbors, and the characteristics of
      the link(s) between the systems, including the length (in
      nanoseconds) of the link(s).

4.9.  Provisioning model

4.9.1.  Centralized Path Computation and Installation

   A centralized routing model, such as provided with a PCE (RFC 4655
   [RFC4655]), enables global and per-flow optimizations.  (See
   Section 4.1.)  The model is attractive but a number of issues are
   left to be solved.  In particular:





Finn, et al.             Expires January 9, 2017               [Page 21]

Internet-Draft    Deterministic Networking Architecture        July 2016


   o  Whether and how the path computation can be installed by 1) an end
      device or 2) a Network Management entity,

   o  And how the path is set up, either by installing state at each hop
      with a direct interaction between the forwarding device and the
      PCE, or along a path by injecting a source-routed request at one
      end of the path.

4.9.2.  Distributed Path Setup

   Significant work on distributed path setup can be leveraged from MPLS
   Traffic Engineering, in both its GMPLS and non-GMPLS forms.  The
   protocols within scope are Resource ReSerVation Protocol [RFC3209]
   [RFC3473](RSVP-TE), OSPF-TE [RFC4203] [RFC5392] and ISIS-TE [RFC5307]
   [RFC5316].  These should be viewed as starting points as there are
   feature specific extensions defined that may be applicable to DetNet.

   In a Layer-2 only environment, or as part of a layered approach to a
   mixed environment, IEEE 802.1 also has work, either completed or in
   progress.  [IEEE802.1Q-2014] Clause 35 describes SRP, a peer-to-peer
   protocol for Layer-2 roughly analogous to RSVP [RFC2205].
   [IEEE802.1Qca] defines how ISIS can provide multiple disjoint paths
   or distribution trees.  Also in progress is [IEEE802.1Qcc], which
   expands the capabilities of SRP.

   The integration/interaction of the DetNet control layer with an
   underlying IEEE 802.1 sub-network control layer will need to be
   defined.

4.10.  Scaling to larger networks

   Reservations for individual DetNet flows require considerable state
   information in each transit node, especially when adequate fault
   mitigation (Section 4.5) is required.  The DetNet data plane, in
   order to support larger numbers of DetNet flows, must support the
   aggregation of DetNet flows into tunnels, which themselves can be
   viewed by the transit nodes' data planes largely as individual DetNet
   flows.  Without such aggregation, the per-relay system may limit the
   scale of DetNet networks.

4.11.  Connected islands vs. networks

   Given that users have deployed examples of the IEEE 802.1 TSN TG
   standards, which provide capabilities similar to DetNet, it is
   obvious to ask whether the IETF DetNet effort can be limited to
   providing Layer-2 connections (VPNs) between islands of bridged TSN
   networks.  While this capability is certainly useful to some
   applications, and must not be precluded by DetNet, tunneling alone is



Finn, et al.             Expires January 9, 2017               [Page 22]

Internet-Draft    Deterministic Networking Architecture        July 2016


   not a sufficient goal for the DetNet WG.  As shown in the
   Deterministic Networking Use Cases draft [I-D.ietf-detnet-use-cases],
   there are already deployments of Layer-2 TSN networks that are
   encountering the well-known problems of over-large broadcast domains.
   Routed solutions, and combinations routed/bridged solutions, are both
   required.

5.  Compatibility with Layer-2

   Standards providing similar capabilities for bridged networks (only)
   have been and are being generated in the IEEE 802 LAN/MAN Standards
   Committee.  The present architecture describes an abstract model that
   can be applicable both at Layer-2 and Layer-3, and over links not
   defined by IEEE 802.  It is the intention of the authors (and
   hopefully, as this draft progresses, of the DetNet Working Group)
   that IETF and IEEE 802 will coordinate their work, via the
   participation of common individuals, liaisons, and other means, to
   maximize the compatibility of their outputs.

   DetNet enabled end systems and intermediate nodes can be
   interconnected by sub-networks, i.e., Layer-2 technologies.  These
   sub-networks will provide DetNet compatible service for support of
   DetNet traffic.  Examples of sub-networks include 802.1TSN and a
   point-to-point OTN link.  Of course, multi-layer DetNet systems may
   be possible too, where one DetNet appears as a sub-network, and
   provides service to, a higher layer DetNet system.

6.  Open Questions

   There are a number of architectural questions that will have to be
   resolved before this document can be submitted for publication.
   Aside from the obvious fact that this present draft is subject to
   change, there are specific questions to which the authors wish to
   direct the readers' attention.

6.1.  DetNet flow identification and sequencing

   The techniques to be used for DetNet flow identification must be
   settled.  The following paragraphs provide a snapshot of the authors'
   opinions at the time of writing.  See [I-D.dt-detnet-dp-alt] for a
   detailed analysis.  See also Section 4.7

   IEEE 802.1 TSN streams are identified by giving each stream (DetNet
   flow) a {VLAN identifier, destination MAC address} pair that is
   unique in the bridged network, and that the MAC address must be a
   multicast address.  If a source is generating, for example, two
   unicast UDP flows to the same destination, one DetNet and one not,
   the DetNet flow's packets must be transformed at some point to have a



Finn, et al.             Expires January 9, 2017               [Page 23]

Internet-Draft    Deterministic Networking Architecture        July 2016


   multicast destination MAC address, and perhaps, a different VLAN than
   the non-DetNet flow's packets.

   A similar provision would apply to DetNet packets that are identified
   by MPLS labels; any bridges between the LSRs need a {VLAN identifier,
   destination MAC address} pair uniquely identifying the DetNet flow in
   the bridged network.

   Provision is made in current draft of [IEEE802.1CB] to make these
   transformations either in a Layer-2 shim in the source end system, on
   the output side of a router or LSR, or in a proxy function in the
   first-hop bridge.  It remains to be seen whether this provision is
   adequate and/or acceptable to the IETF DetNet WG.

   There are also questions regarding the sequentialization of packets
   for use with packet replication and elimination (Section 3.4).
   [IEEE802.1CB] defines an EtherNet tag carrying a sequence number.  If
   MPLS Pseudowires are used with a control word containing a sequence
   number, the relationship and interworking between these two formats
   must be defined.

6.2.  Flat vs. hierarchical control

   Boxes that are solely routers or solely bridges are rare in today's
   market.  In a multi-tenant data center, multiple users' virtual
   Layer-2/Layer-3 topologies exist simultaneously, implemented on a
   network whose physical topology bears only accidental resemblance to
   the virtual topologies.

   While the forwarding topology (the bridges and routers) are an
   important consideration for a DetNet Flow Management Entity
   (Section 4.1.1), so is the purely physical topology.  Ultimately, the
   model used by the management entities is based on boxes, queues, and
   links.  The authors hope that the work of the TEAS WG will help to
   clarify exactly what model parameters need to be traded between the
   intermediate nodes and the controller(s).

6.3.  Peer-to-peer reservation protocol

   As described in Section 4.9.2, the DetNet WG needs to decide whether
   to support a peer-to-peer protocol for a source and a destination to
   reserve resources for a DetNet stream.  Assuming that enabling the
   involvement of the source and/or destination is desirable (see
   Deterministic Networking Use Cases [I-D.ietf-detnet-use-cases]), it
   remains to decide whether the DetNet WG will make it possible to
   deploy at least some DetNet capabilities in a network using only a
   peer-to-peer protocol, without a central controller.




Finn, et al.             Expires January 9, 2017               [Page 24]

Internet-Draft    Deterministic Networking Architecture        July 2016


   (Note that a UNI (see Section 4.1.3) between an end system and an
   edge node, for sources and/or listeners to request DetNet services,
   can be either the first hop of a per-to-peer reservation protocol, or
   can be deflected by the edge node to a central controller for
   resolution.  Similarly, a decision by a central controller can be
   effected by the controller instructing the end system or edge node to
   initiate a per-to-peer protocol activity.)

6.4.  Wireless media interactions

   Deterministic Networking Use Cases [I-D.ietf-detnet-use-cases]
   illustrates cases where wireless media are needed in a DetNet
   network.  Some wireless media in general use, such as IEEE 802.11
   [IEEE802.1Q-2014], have significantly higher packet loss rates than
   typical wired media, such as Ethernet [IEEE802.3-2012].  IEEE 802.11
   includes support for such features as MAC-layer acknowledgements and
   retransmissions.

   The techniques described in Section 3 are likely to improve the
   ability of a mixed wired/wireless network to offer the DetNet QoS
   features.  The interaction of these techniques with the features of
   specific wireless media, although they may be significant, cannot be
   addressed in this document.  It remains to be decided to what extent
   the DetNet WG will address them, and to what extent other WGs, e.g.
   6TiSCH, will do so.

6.5.  Packet encoding for loss prevention

   There are other methods for reducing packet loss caused by random
   hardware errors and/or equipment failues that involve encoding the
   information in a packet belonging to a DetNet flow into multiple
   transmission units, typically combining information from multiple
   packets into any given transmission unit.  Such techniques may be
   applicable for use as a DetNet loss prevention technique, assuming
   that the DetNet users' needs for timeliness of delivery and freedom
   from interference with misbehaving DetNet flows can be met.

7.  Security Considerations

   Security in the context of Deterministic Networking has an added
   dimension; the time of delivery of a packet can be just as important
   as the contents of the packet, itself.  A man-in-the-middle attack,
   for example, can impose, and then systematically adjust, additional
   delays into a link, and thus disrupt or subvert a real-time
   application without having to crack any encryption methods employed.
   See [RFC7384] for an exploration of this issue in a related context.





Finn, et al.             Expires January 9, 2017               [Page 25]

Internet-Draft    Deterministic Networking Architecture        July 2016


   Furthermore, in a control system where millions of dollars of
   equipment, or even human lives, can be lost if the DetNet QoS is not
   delivered, one must consider not only simple equipment failures,
   where the box or wire instantly becomes perfectly silent, but bizarre
   errors such as can be caused by software failures.  Because there is
   essential no limit to the kinds of failures that can occur,
   protecting against realistic equipment failures is indistinguishable,
   in most cases, from protecting against malicious behavior, whether
   accidental or intentional.  See also Section 4.5.

   Security must cover:

   o  the protection of the signaling protocol

   o  the authentication and authorization of the controlling systems

   o  the identification and shaping of the DetNet flows

8.  Privacy Considerations

   DetNet is provides a Quality of Service (QoS), and as such, does not
   directly raise any new privacy considerations.

   However, the requirement for every (or almost every) node along the
   path of a DetNet flow to identify DetNet flows may present an
   additional attack surface for privacy, should the DetNet paradigm be
   found useful in broader environments.

9.  IANA Considerations

   This document does not require an action from IANA.

10.  Acknowledgements

   The authors wish to thank Jouni Korhonen, Erik Nordmark, George
   Swallow, Rudy Klecka, Anca Zamfir, David Black, Thomas Watteyne,
   Shitanshu Shah, Craig Gunther, Rodney Cummings, Balazs Varga,
   Wilfried Steiner, Marcel Kiessling, Karl Weber, Janos Farkas, Ethan
   Grossman, Pat Thaler, and Lou Berger for their various contribution
   with this work.

11.  Access to IEEE 802.1 documents

   To access password protected IEEE 802.1 drafts, see the IETF IEEE
   802.1 information page at https://www.ietf.org/proceedings/52/slides/
   bridge-0/tsld003.htm.





Finn, et al.             Expires January 9, 2017               [Page 26]

Internet-Draft    Deterministic Networking Architecture        July 2016


12.  Informative References

   [AVnu]     http://www.avnu.org/, "The AVnu Alliance tests and
              certifies devices for interoperability, providing a simple
              and reliable networking solution for AV network
              implementation based on the Audio Video Bridging (AVB)
              standards.".

   [CCAMP]    IETF, "Common Control and Measurement Plane",
              <https://datatracker.ietf.org/doc/charter-ietf-ccamp/>.

   [HART]     www.hartcomm.org, "Highway Addressable Remote Transducer,
              a group of specifications for industrial process and
              control devices administered by the HART Foundation".

   [HSR-PRP]  IEC, "High availability seamless redundancy (HSR) is a
              further development of the PRP approach, although HSR
              functions primarily as a protocol for creating media
              redundancy while PRP, as described in the previous
              section, creates network redundancy.  PRP and HSR are both
              described in the IEC 62439 3 standard.",
              <http://webstore.iec.ch/webstore/webstore.nsf/
              artnum/046615!opendocument>.

   [I-D.dt-detnet-dp-alt]
              Korhonen, J., Farkas, J., Mirsky, G., Thubert, P.,
              Zhuangyan, Z., and L. Berger, "DetNet Data Plane Protocol
              and Solution Alternatives", draft-dt-detnet-dp-alt-01
              (work in progress), July 2016.

   [I-D.ietf-6tisch-architecture]
              Thubert, P., "An Architecture for IPv6 over the TSCH mode
              of IEEE 802.15.4", draft-ietf-6tisch-architecture-10 (work
              in progress), June 2016.

   [I-D.ietf-6tisch-tsch]
              Watteyne, T., Palattella, M., and L. Grieco, "Using
              IEEE802.15.4e TSCH in an IoT context: Overview, Problem
              Statement and Goals", draft-ietf-6tisch-tsch-06 (work in
              progress), March 2015.

   [I-D.ietf-detnet-problem-statement]
              Finn, N. and P. Thubert, "Deterministic Networking Problem
              Statement", draft-ietf-detnet-problem-statement-00 (work
              in progress), April 2016.






Finn, et al.             Expires January 9, 2017               [Page 27]

Internet-Draft    Deterministic Networking Architecture        July 2016


   [I-D.ietf-detnet-use-cases]
              Grossman, E., Gunther, C., Thubert, P., Wetterwald, P.,
              Raymond, J., Korhonen, J., Kaneko, Y., Das, S., Zha, Y.,
              Varga, B., Farkas, J., Goetz, F., and J. Schmitt,
              "Deterministic Networking Use Cases", draft-ietf-detnet-
              use-cases-10 (work in progress), July 2016.

   [I-D.ietf-roll-rpl-industrial-applicability]
              Phinney, T., Thubert, P., and R. Assimiti, "RPL
              applicability in industrial networks", draft-ietf-roll-
              rpl-industrial-applicability-02 (work in progress),
              October 2013.

   [I-D.svshah-tsvwg-deterministic-forwarding]
              Shah, S. and P. Thubert, "Deterministic Forwarding PHB",
              draft-svshah-tsvwg-deterministic-forwarding-04 (work in
              progress), August 2015.

   [IEEE802.11-2012]
              IEEE, "Wireless LAN Medium Access Control (MAC) and
              Physical Layer (PHY) Specifications", 2012,
              <http://standards.ieee.org/getieee802/
              download/802.11-2012.pdf>.

   [IEEE802.1AS-2011]
              IEEE, "Timing and Synchronizations (IEEE 802.1AS-2011)",
              2011, <http://standards.ieee.org/getIEEE802/
              download/802.1AS-2011.pdf>.

   [IEEE802.1BA-2011]
              IEEE, "AVB Systems (IEEE 802.1BA-2011)", 2011,
              <http://standards.ieee.org/getIEEE802/
              download/802.1BA-2011.pdf>.

   [IEEE802.1CB]
              IEEE, "Frame Replication and Elimination for Reliability
              (IEEE Draft P802.1CB)", 2016,
              <http://www.ieee802.org/1/files/private/cb-drafts/>.

   [IEEE802.1Q-2014]
              IEEE, "MAC Bridges and VLANs (IEEE 802.1Q-2014", 2014,
              <http://standards.ieee.org/getieee802/
              download/802-1Q-2014.pdf>.

   [IEEE802.1Qbu]
              IEEE, "Frame Preemption", 2016,
              <http://www.ieee802.org/1/files/private/bu-drafts/>.




Finn, et al.             Expires January 9, 2017               [Page 28]

Internet-Draft    Deterministic Networking Architecture        July 2016


   [IEEE802.1Qbv]
              IEEE, "Enhancements for Scheduled Traffic", 2016,
              <http://www.ieee802.org/1/files/private/bv-drafts/>.

   [IEEE802.1Qca]
              IEEE 802.1, "IEEE 802.1Qca Bridges and Bridged Networks -
              Amendment 24: Path Control and Reservation", IEEE
              P802.1Qca/D2.1 P802.1Qca, June 2015,
              <https://standards.ieee.org/findstds/standard/802.1Qca-
              2015.html>.

   [IEEE802.1Qcc]
              IEEE, "Stream Reservation Protocol (SRP) Enhancements and
              Performance Improvements", 2016,
              <http://www.ieee802.org/1/files/private/cc-drafts/>.

   [IEEE802.1Qch]
              IEEE, "Cyclic Queuing and Forwarding", 2016,
              <http://www.ieee802.org/1/files/private/ch-drafts/>.

   [IEEE802.1TSNTG]
              IEEE Standards Association, "IEEE 802.1 Time-Sensitive
              Networks Task Group", 2013,
              <http://www.IEEE802.org/1/pages/avbridges.html>.

   [IEEE802.3-2012]
              IEEE, "IEEE Stabdard for Ethernet", 2012,
              <http://standards.ieee.org/getieee802/
              download/802.3-2012.pdf>.

   [IEEE802.3br]
              IEEE, "Interspersed Express Traffic", 2016,
              <http://www.ieee802.org/3/br/>.

   [IEEE802154]
              IEEE standard for Information Technology, "IEEE std.
              802.15.4, Part. 15.4: Wireless Medium Access Control (MAC)
              and Physical Layer (PHY) Specifications for Low-Rate
              Wireless Personal Area Networks", June 2011.

   [IEEE802154e]
              IEEE standard for Information Technology, "IEEE std.
              802.15.4e, Part. 15.4: Low-Rate Wireless Personal Area
              Networks (LR-WPANs) Amendment 1: MAC sublayer", April
              2012.






Finn, et al.             Expires January 9, 2017               [Page 29]

Internet-Draft    Deterministic Networking Architecture        July 2016


   [ISA100.11a]
              ISA/IEC, "ISA100.11a, Wireless Systems for Automation,
              also IEC 62734", 2011, < http://www.isa100wci.org/en-
              US/Documents/PDF/3405-ISA100-WirelessSystems-Future-broch-
              WEB-ETSI.aspx>.

   [ISA95]    ANSI/ISA, "Enterprise-Control System Integration Part 1:
              Models and Terminology", 2000, <https://www.isa.org/
              isa95/>.

   [ODVA]     http://www.odva.org/, "The organization that supports
              network technologies built on the Common Industrial
              Protocol (CIP) including EtherNet/IP.".

   [PCE]      IETF, "Path Computation Element",
              <https://datatracker.ietf.org/doc/charter-ietf-pce/>.

   [Profinet]
              http://us.profinet.com/technology/profinet/, "PROFINET is
              a standard for industrial networking in automation.",
              <http://us.profinet.com/technology/profinet/>.

   [RFC2205]  Braden, R., Ed., Zhang, L., Berson, S., Herzog, S., and S.
              Jamin, "Resource ReSerVation Protocol (RSVP) -- Version 1
              Functional Specification", RFC 2205, DOI 10.17487/RFC2205,
              September 1997, <http://www.rfc-editor.org/info/rfc2205>.

   [RFC2475]  Blake, S., Black, D., Carlson, M., Davies, E., Wang, Z.,
              and W. Weiss, "An Architecture for Differentiated
              Services", RFC 2475, DOI 10.17487/RFC2475, December 1998,
              <http://www.rfc-editor.org/info/rfc2475>.

   [RFC3209]  Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,
              and G. Swallow, "RSVP-TE: Extensions to RSVP for LSP
              Tunnels", RFC 3209, DOI 10.17487/RFC3209, December 2001,
              <http://www.rfc-editor.org/info/rfc3209>.

   [RFC3473]  Berger, L., Ed., "Generalized Multi-Protocol Label
              Switching (GMPLS) Signaling Resource ReserVation Protocol-
              Traffic Engineering (RSVP-TE) Extensions", RFC 3473,
              DOI 10.17487/RFC3473, January 2003,
              <http://www.rfc-editor.org/info/rfc3473>.

   [RFC4203]  Kompella, K., Ed. and Y. Rekhter, Ed., "OSPF Extensions in
              Support of Generalized Multi-Protocol Label Switching
              (GMPLS)", RFC 4203, DOI 10.17487/RFC4203, October 2005,
              <http://www.rfc-editor.org/info/rfc4203>.




Finn, et al.             Expires January 9, 2017               [Page 30]

Internet-Draft    Deterministic Networking Architecture        July 2016


   [RFC4655]  Farrel, A., Vasseur, J., and J. Ash, "A Path Computation
              Element (PCE)-Based Architecture", RFC 4655,
              DOI 10.17487/RFC4655, August 2006,
              <http://www.rfc-editor.org/info/rfc4655>.

   [RFC5307]  Kompella, K., Ed. and Y. Rekhter, Ed., "IS-IS Extensions
              in Support of Generalized Multi-Protocol Label Switching
              (GMPLS)", RFC 5307, DOI 10.17487/RFC5307, October 2008,
              <http://www.rfc-editor.org/info/rfc5307>.

   [RFC5316]  Chen, M., Zhang, R., and X. Duan, "ISIS Extensions in
              Support of Inter-Autonomous System (AS) MPLS and GMPLS
              Traffic Engineering", RFC 5316, DOI 10.17487/RFC5316,
              December 2008, <http://www.rfc-editor.org/info/rfc5316>.

   [RFC5392]  Chen, M., Zhang, R., and X. Duan, "OSPF Extensions in
              Support of Inter-Autonomous System (AS) MPLS and GMPLS
              Traffic Engineering", RFC 5392, DOI 10.17487/RFC5392,
              January 2009, <http://www.rfc-editor.org/info/rfc5392>.

   [RFC5673]  Pister, K., Ed., Thubert, P., Ed., Dwars, S., and T.
              Phinney, "Industrial Routing Requirements in Low-Power and
              Lossy Networks", RFC 5673, DOI 10.17487/RFC5673, October
              2009, <http://www.rfc-editor.org/info/rfc5673>.

   [RFC5921]  Bocci, M., Ed., Bryant, S., Ed., Frost, D., Ed., Levrau,
              L., and L. Berger, "A Framework for MPLS in Transport
              Networks", RFC 5921, DOI 10.17487/RFC5921, July 2010,
              <http://www.rfc-editor.org/info/rfc5921>.

   [RFC6372]  Sprecher, N., Ed. and A. Farrel, Ed., "MPLS Transport
              Profile (MPLS-TP) Survivability Framework", RFC 6372,
              DOI 10.17487/RFC6372, September 2011,
              <http://www.rfc-editor.org/info/rfc6372>.

   [RFC7384]  Mizrahi, T., "Security Requirements of Time Protocols in
              Packet Switched Networks", RFC 7384, DOI 10.17487/RFC7384,
              October 2014, <http://www.rfc-editor.org/info/rfc7384>.

   [RFC7426]  Haleplidis, E., Ed., Pentikousis, K., Ed., Denazis, S.,
              Hadi Salim, J., Meyer, D., and O. Koufopavlou, "Software-
              Defined Networking (SDN): Layers and Architecture
              Terminology", RFC 7426, DOI 10.17487/RFC7426, January
              2015, <http://www.rfc-editor.org/info/rfc7426>.

   [TEAS]     IETF, "Traffic Engineering Architecture and Signaling",
              <https://datatracker.ietf.org/doc/charter-ietf-teas/>.




Finn, et al.             Expires January 9, 2017               [Page 31]

Internet-Draft    Deterministic Networking Architecture        July 2016


   [WirelessHART]
              www.hartcomm.org, "Industrial Communication Networks -
              Wireless Communication Network and Communication Profiles
              - WirelessHART - IEC 62591", 2010.

Authors' Addresses

   Norman Finn
   Cisco Systems
   170 W Tasman Dr.
   San Jose, California  95134
   USA

   Phone: +1 408 526 4495
   Email: nfinn@cisco.com


   Pascal Thubert
   Cisco Systems
   Village d'Entreprises Green Side
   400, Avenue de Roumanille
   Batiment T3
   Biot - Sophia Antipolis  06410
   FRANCE

   Phone: +33 4 97 23 26 34
   Email: pthubert@cisco.com


   Michael Johas Teener
   Broadcom Corp.
   3151 Zanker Rd.
   San Jose, California  95134
   USA

   Phone: +1 831 824 4228
   Email: MikeJT@broadcom.com














Finn, et al.             Expires January 9, 2017               [Page 32]
