c = a;
d = b;
a = a + 1;
b = b + 1;
equality = function simpleDiff_equality() {
       do {
           table[one[c]].one -= 1;
           table[one[c]].two -= 1;
           c                 += 1;
           d                 += 1;
       } while (
           c < lena &&
           d < lenb &&
           one[c] === two[d]
        );
       fix(["equal", a, c, b, d]);
b = d - 1;
a = c - 1;
deletion = function simpleDiff_deletion() {
       do {
           table[one[c]].one -= 1;
           c                 += 1;
       } while (
           c < lena &&
           table[one[c]].two < 1
        );
       fix(["delete", a, c, -1, -1]);
a = c - 1;
b = d - 1;
deletionStatic = function simpleDiff_deletionStatic() {
       table[one[a]].one -= 1;
       fix([
           "delete", a, a + 1,
           -1,
           -1
       ]);
a = c;
b = d - 1;
insertion = function simpleDiff_insertion() {
       do {
           table[two[d]].two -= 1;
           d                 += 1;
       } while (
           d < lenb &&
           table[two[d]].one < 1
        );
       fix(["insert", -1, -1, b, d]);
a = c - 1;
b = d - 1;
insertionStatic = function simpleDiff_insertionStatic() {
       table[two[b]].two -= 1;
       fix([
           "insert", -1, -1, b, b + 1
       ]);
a = c - 1;
b = d;
replacement = function simpleDiff_replacement() {
       do {
           table[one[c]].one -= 1;
           table[two[d]].two -= 1;
           c                 += 1;
           d                 += 1;
       } while (
           c < lena &&
           d < lenb &&
           table[one[c]].two > 0 &&
           table[two[d]].one > 0
       );
       fix(["replace", a, c, b, d]);
a = c - 1;
b = d - 1;
replaceUniques = function simpleDiff_replaceUniques() {
       do {
           table[one[c]].one -= 1;
           c                 += 1;
           d                 += 1;
       } while (
           c < lena &&
           d < lenb &&
           table[one[c]].two < 1 &&
           table[two[d]].one < 1
       );
       fix(["replace", a, c, b, d]);
a = c - 1;
b = d - 1;
fix = function simpleDiff_fix(code) {
       var prior = codes[codes.length - 1];
       if (prior !== undefined) {
           if (prior[0] === code[0]) {
               if (code[0] === "replace" || code[0] === "equal") {
                   prior[2] = code[2];
                   prior[4] = code[4];
               } else if (code[0] === "delete") {
                   prior[2] = code[2];
               } else if (code[0] === "insert") {
                   prior[4] = code[4];
               }
               return;
           }
           if (prior[0] === "insert" && prior[4] - prior[3] === 1) {
               if (code[2] - code[1] === 1) {
                   if (code[0] === "replace") {
                       prior[0] = "replace";
                       prior[1] = code[1];
                       prior[2] = code[2];
                       code[0]  = "insert";
                       code[1]  = -1;
                       code[2]  = -1;
                   } else if (code[0] === "delete") {
                       code[0] = "replace";
                       code[3] = prior[3];
                       code[4] = prior[4];
                       codes.pop();
prior = codes[codes.length - 1];
c        = prior[2];
d        = prior[4];
prior = codes[codes.length - 1];
c        = prior[2];
d        = prior[4];
c = c - 1;
d = d - 1;
c = c - 1;
d = d - 1;
lines           = function simpleDiff_lines(str) {
str = str
                   .replace(/\r\n/g, "\n")
                   .replace(/\r/g, "\n");
one             = (typeof options.source === "string")
               ? lines(options.source)
               : options.source,
two             = (typeof options.diff === "string")
               ? lines(options.diff)
               : options.diff,
lena            = one.length,
lenb            = two.length,
a               = 0,
b               = 0,
c               = 0,
d               = 0,
codes           = [],
fix             = function simpleDiff_fix(code) {
               var prior = codes[codes.length - 1];
               if (prior !== undefined) {
                   if (prior[0] === code[0]) {
                       if (
                           code[0] === "replace" ||
                           code[0] === "equal"
                       ) {
                           prior[2] = code[2];
                           prior[4] = code[4];
                       } else if (code[0] === "delete") {
                           prior[2] = code[2];
                       } else if (code[0] === "insert") {
                           prior[4] = code[4];
                       }
                       return;
                   }
                   if (
                       prior[0] === "insert" &&
                       prior[4] - prior[3] === 1
                   ) {
                       if (code[2] - code[1] === 1) {
                           if (code[0] === "replace") {
                               prior[0] = "replace";
                               prior[1] = code[1];
                               prior[2] = code[2];
                               code[0]  = "insert";
                               code[1]  = -1;
                               code[2]  = -1;
                           } else if (code[0] === "delete") {
                               code[0] = "replace";
                               code[3] = prior[3];
                               code[4] = prior[4];
                               codes.pop();
prior = codes[codes.length - 1];
c        = prior[2];
d        = prior[4];
prior = codes[codes.length - 1];
c        = prior[2];
d        = prior[4];
c = c - 1;
d = d - 1;
c = c - 1;
d = d - 1;
equality        = function simpleDiff_equality() {
               do {
                   table[one[c]][0] = table[one[c]][0] - 1;
                   table[one[c]][1] = table[one[c]][1] - 1;
c                = c + 1;
d                = d + 1;
b = d - 1;
a = c - 1;
deletion        = function simpleDiff_deletion() {
               do {
                   table[one[c]][0] = table[one[c]][0] - 1;
c                = c + 1;
a = c - 1;
b = d - 1;
deletionStatic  = function simpleDiff_deletionStatic() {
               table[one[a]][0] = table[one[a]][0] - 1;
               fix([
                   "delete", a, a + 1,
                   -1,
                   -1
               ]);
a = c;
b = d - 1;
insertion       = function simpleDiff_insertion() {
               do {
                   table[two[d]][1] = table[two[d]][1] - 1;
d                = d + 1;
a = c - 1;
b = d - 1;
insertionStatic = function simpleDiff_insertionStatic() {
               table[two[b]][1] = table[two[b]][1] - 1;
               fix([
                   "insert", -1, -1, b, b + 1
               ]);
a = c - 1;
b = d;
replacement     = function simpleDiff_replacement() {
               do {
                   table[one[c]][0] = table[one[c]][0] - 1;
                   table[two[d]][1] = table[two[d]][1] - 1;
c                = c + 1;
d                = d + 1;
a = c - 1;
b = d - 1;
replaceUniques  = function simpleDiff_replaceUniques() {
               do {
                   table[one[c]][0] = table[one[c]][0] - 1;
c                = c + 1;
d                = d + 1;
a = c - 1;
b = d - 1;
b = b + 1;
lena = one.length;
a    = 0;
a = a + 1;
a = 0;
b = 0;

c = a;
d = b;
a = a + 1;
b = b + 1;
