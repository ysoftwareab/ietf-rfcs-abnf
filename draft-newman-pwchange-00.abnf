ALPHA          = %x41-5A / %x61-7A
                      ;; A US-ASCII letter

KCHAR          = %x21 / %x23-27 / %x2A-5B / %x5D-7A / %x7C-7E
                      ;; All printable US-ASCII characters except SPACE,
                      ;; <">, "(", ")", "\", and "{"

keyword        = ALPHA *63KCHAR


QCHAR              = US-ASCII-SAFE / %x80-FF
                          ;; UTF8 is used for text

QCHAR-QUOTED       = QCHAR / QUOTED

QUOTED             = "\" QUOTED-SPECIAL

QUOTED-SPECIAL     = "\" / <">

US-ASCII-SAFE      = %x01-09 / %x0B-0C / %x0E-21
                          / %x23-5B / %x5D-7F
                         ;; US-ASCII except QUOTED-SPECIALs, CR, LF, NUL

UTF8-NON-NUL       = UTF8-SAFE / CR / LF / QUOTED-SPECIAL
UTF8-QUOTED        = UTF8-SAFE / QUOTED

UTF8-SAFE          = US-ASCII-SAFE / UTF8-1 / UTF8-2 / UTF8-3
                          / UTF8-4 / UTF8-5

UTF8-CONT          = %x80-BF

UTF8-1             = %xC0-DF UTF8-CONT

UTF8-2             = %xE0-EF 2UTF8-CONT

UTF8-3             = %xF0-F7 3UTF8-CONT

UTF8-4             = %xF8-FB 4UTF8-CONT

UTF8-5             = %xFC-FD 5UTF8-CONT

quoted-string      = <"> *QCHAR-QUOTED <">
                          ;; limited to 1024 octets

utf8-qstring       = <"> *UTF8-QUOTED <">
                          ;; limited to 1024 octets


DIGIT          = "0" / "1" / "2" / "3" / "4" / "5"
                      / "6" / "7" / "8" / "9"

OCTET          = %x00-FF

OCTET-NZ       = %x01-FF

number         = 1*DIGIT
                      ;; limited to 0 <= number < 4,294,967,296
literal        = "{" number "}" CRLF *OCTET
                      ;; number indicates the number of OCTETs.
                      ;; UTF-8 is used for text

string         = literal / quoted-string

response         = resp-continue / resp-done

resp-continue    = "CONT" SPACE string

response-data    = resp-group

resp-detail      = *("/" keyword)
                        ;; MUST be registered with IANA

resp-done        = resp-status resp-detail [SPACE response-data]
                        SPACE utf8-quoted [SPACE signature]

resp-group       = "(" resp-extend *(SPACE resp-extend) ")"

resp-status      = "OK" / "NO" / "BAD" / "GOODBYE"

resp-extend      = keyword / number / string / resp-group

signature        = literal
                        ;; a signature computed over the response
                        ;; using the algorithm specified in the AUTHCHANGE
                        ;; command


command-authchg  = "AUTHCHANGE" SPACE sig-mech SPACE random
                        SPACE sasl-mech [SPACE sasl-data] CRLF
                        *(string CRLF)

random           = literal
                        ;; client-generated random data

sasl-data        = string
                        ;; A mechanism based client initial string.

sasl-mech        = "PLAIN-CHANGE" / "SHA1-CHANGE" / keyword
                        ;; MUST be registered with IANA according to
                        ;; procedures in SASL and listed in server greeting

sig-mech         = "HMAC-SHA1" / "NONE" / keyword
                        ;; MUST be registered with IANA

command-logout   = "LOGOUT" CRLF


plain-change     = change-user NUL auth-user NUL auth-pass NUL new-pass

change-user      = *UTF8-SAFE
                        ;; if empty, then is same as auth-user

auth-user        = 1*UTF8-SAFE

auth-pass        = 1*256UTF8-SAFE

new-pass         = 1*256UTF8-SAFE

NUL              = %x00
                        ;; zero octet, US-ASCII NUL


server-message-1 = challenge

client-message-1 = change-user NUL auth-user NUL
                        challenge NUL signature

server-message-2 = signature

client-message-2 = sha1-new-pass

signature        = 20OCTET
                        ;; 20 octet output of HMAC-SHA1
challenge        = 20*OCTET-NZ
                        ;; randomly generated challenge with no NUL
                        ;; octets.  MUST be at least 20 octets long

sha1-new-pass    = 1*13xor-sig-block

xor-sig-block    = 20OCTET
                        ;; signature exclusive ored with new passphrase
                        ;; buffer as described above


