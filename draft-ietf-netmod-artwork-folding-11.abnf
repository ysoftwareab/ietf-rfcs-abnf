xmlns="urn:ietf:params:xml:ns:yang:ietf-yang-library"
xmlns="urn:ietf:params:xml:ns:yang:ietf-yang-library"
xmlns="urn:ietf:params:xml:ns:yang:ietf-yang-library"
xmlns="urn:ietf:params:xml:ns:yang:ietf-yang-library"
strategy=0 # auto
debug=0
quiet=0
reversed=0
infile=""
outfile=""
maxcol=69  # default, may be overridden by param
col_gvn=0  # maxcol overridden?
hdr_txt_1="NOTE: '\\' line wrapping per BCP XXX (RFC XXXX)"
hdr_txt_2="NOTE: '\\\\' line wrapping per BCP XXX (RFC XXXX)"
equal_chars="======================================================="
space_chars="                                                       "
temp_dir=""
prog_name='rfcfold'

format_string="${prog_name}: $1: %s\n"
foldcol=$(expr "$maxcol" - 1) # for the inserted '\' char

length=$(expr ${#hdr_txt_1} + 2)
left_sp=$(expr \( "$maxcol" - "$length" \) / 2)
right_sp=$(expr "$maxcol" - "$length" - "$left_sp")
header=$(printf "%.*s %s %.*s" "$left_sp" "$equal_chars"\
                      "$hdr_txt_1" "$right_sp" "$equal_chars")

foldcol=$(expr "$maxcol" - 1) # for the inserted '\' char

length=$(expr ${#hdr_txt_2} + 2)
left_sp=$(expr \( "$maxcol" - "$length" \) / 2)
right_sp=$(expr "$maxcol" - "$length" - "$left_sp")
header=$(printf "%.*s %s %.*s" "$left_sp" "$equal_chars"\
                      "$hdr_txt_2" "$right_sp" "$equal_chars")

testcol=$(expr "$maxcol" + 1)
quiet_sav="$quiet"
quiet=1
result=$?
quiet="$quiet_sav"
temp_dir=$(mktemp -d)

temp_dir=$(mktemp -d)

line=$(head -n 1 "$infile")
line2=$("$SED" -n '2p' "$infile")
result=$(echo "$line" | fgrep "$hdr_txt_1")
result=$(echo "$line" | fgrep "$hdr_txt_2")
debug=1
quiet=1
strategy="$2"
col_gvn=1
maxcol="$2"
reversed=1
infile="$2"
outfile="$2"
min_supported=$(expr ${#hdr_txt_2} + 8)
min_supported=$(expr ${#hdr_txt_1} + 8)
max_supported=$(expr ${#equal_chars} + 1 + ${#hdr_txt_1} + 1\
          + ${#equal_chars})
code=$?
code=$?
