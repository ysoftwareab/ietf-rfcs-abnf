





Network Working Group                                          C. Newman
Internet Draft: IMAP URL Scheme                                 Innosoft
Document: draft-newman-url-imap-05.txt                      January 1997


                            IMAP URL Scheme


Status of this memo

     This document is an Internet Draft.  Internet Drafts are working
     documents of the Internet Engineering Task Force (IETF), its Areas,
     and its Working Groups.  Note that other groups may also distribute
     working documents as Internet Drafts.

     Internet Drafts are draft documents valid for a maximum of six
     months.  Internet Drafts may be updated, replaced, or obsoleted by
     other documents at any time.  It is not appropriate to use Internet
     Drafts as reference material or to cite them other than as a
     ``working draft'' or ``work in progress``.

     To learn the current status of any Internet-Draft, please check the
     1id-abstracts.txt listing contained in the Internet-Drafts Shadow
     Directories on ds.internic.net, nic.nordu.net, ftp.isi.edu, or
     munnari.oz.au.

     A revised version of this draft document will be submitted to the
     RFC editor as a Proposed Standard for the Internet Community.
     Discussion and suggestions for improvement are requested.  This
     document will expire six months after publication.  Distribution of
     this draft is unlimited.



1. Introduction

     IMAP [IMAP4] is a rich protocol for accessing remote message
     stores.  It provides an ideal mechanism for accessing public
     mailing list archives as well as private and shared message stores.
     This document defines a URL scheme for referencing objects on an
     IMAP server.


2. Conventions used in this document

     The key words "MUST", "MUST NOT", "SHOULD", "SHOULD NOT", and "MAY"
     in this document are to be interpreted as defined in this section.




Newman                                                          [Page 1]

Internet Draft              IMAP URL Scheme                 January 1997


     1. MUST   This word means that the definition is an absolute
        requirement of the specification.

     2. MUST NOT   This phrase means that the definition is an absolute
        prohibition of the specification.

     3. SHOULD   This word means that there may exist valid reasons in
        particular circumstances to ignore a particular item, but the
        full implications must be understood and carefully weighed
        before choosing a different course.

     4. SHOULD NOT   This phrase means that there may exist valid
        reasons in particular circumstances when the particular behavior
        is acceptable or even useful, but the full implications should
        be understood and the case carefully weighed before implementing
        any behavior described with this label.

     5. MAY   This word means that an item is truly optional.  One
        vendor may choose to include the item because a particular
        marketplace requires it or because the vendor feels that it
        enhances the product while another vendor may omit the same
        item. An implementation which does not include a particular
        option MUST be prepared to interoperate with another
        implementation which does include the option, though perhaps
        with reduced functionality. In the same vein an implementation
        which does include a particular option MUST be prepared to
        interoperate with another implementation which does not include
        the option (except, of course, for the feature the option
        provides.)

3. IMAP scheme

     The IMAP URL scheme is used to designate mailboxes, messages, MIME
     bodies [MIME], and search programs on Internet hosts accessible
     using the IMAP protocol.

     The IMAP URL follows the common Internet scheme syntax as defined
     in RFC 1738 [RFC1738].  If :<port> is omitted, the port defaults to
     143.

     An IMAP URL takes one of the following forms:

         imap://<iserver>/<enc_list_mailbox>;TYPE=<list_type>
         imap://<iserver>/<enc_mailbox>[uidvalidity]?<enc_search_program>
         imap://<iserver>/<enc_mailbox>[uidvalidity]<iuid>[isection]

     The first form is used to refer to a list of mailboxes, the second
     form refers to a list of messages, and the final form refers to a



Newman                                                          [Page 2]

Internet Draft              IMAP URL Scheme                 January 1997


     specific message or message part.


4. IMAP User Name, Authentication Mechanism and Password

     A user name, authentication mechanism and/or password may be
     supplied.  They are used in the "LOGIN" or "AUTHENTICATE" commands
     after making the connection to the IMAP server.  If no user name,
     authentication mechanism or password is supplied, the user name
     "anonymous" is used with the "LOGIN" command and the password is
     supplied as the Internet e-mail address of the end user accessing
     the resource.  If the URL supplies a user name but no password, the
     program interpreting the IMAP URL SHOULD request one from the user
     if necessary.

     An authentication mechanism can be expressed by adding
     ";AUTH=<enc_auth_type>" to the end of the user name.  When such an
     <enc_auth_type> is indicated, the client SHOULD request appropriate
     credentials from that mechanism and use the "AUTHENTICATE" command
     instead of the "LOGIN" command.  If no user name is specified, one
     SHOULD be obtained from the mechanism or requested from the user as
     appropriate.

     The string ";AUTH=*" indicates that the client SHOULD select an
     appropriate authentication mechanism.  It MAY use any mechanism
     listed in the CAPABILITY command or use an out of band security
     service resulting in a PREAUTH connection.  If no user name is
     specified and no appropriate authentication mechanisms are
     available, the client SHOULD fall back to anonymous login as
     described above.  This allows a URL which grants read-write access
     to authorized users, and read-only anonymous access to other users.

     Note that if unsafe or reserved characters such as " " or ";" are
     present in the user name, authentication mechanism or password,
     they MUST be encoded as described in RFC 1738 [RFC1738].


5. Lists of mailboxes

     An IMAP URL referring to a list of mailboxes has the following
     form:

         imap://<iserver>/<enc_list_mailbox>;TYPE=<list_type>

     The <list_type> may be either "LIST" or "LSUB", and is case
     insensitive.  The field ";TYPE=<list_type>" MUST be included.

     The <enc_list_mailbox> is any argument suitable for the



Newman                                                          [Page 3]

Internet Draft              IMAP URL Scheme                 January 1997


     list_mailbox field of the IMAP [IMAP4] LIST or LSUB commands.  The
     field <enc_list_mailbox> may be omitted, in which case the program
     interpreting the IMAP URL may use "*" or "%" as the
     <enc_list_mailbox>.  The program SHOULD use "%" if it supports a
     hierarchical view, otherwise it SHOULD use "*".

     Note that if unsafe or reserved characters such as " " or "%" are
     present in <enc_list_mailbox> they MUST be encoded as described in
     RFC 1738 [RFC1738].  If the character "/" is present in
     enc_list_mailbox, it SHOULD NOT be encoded.


6. Lists of messages

     An IMAP URL referring to a list of messages has the following form:

         imap://<iserver>/<enc_mailbox>[uidvalidity]?<enc_search_program>

     The <enc_mailbox> field is used as the argument to the IMAP4
     "SELECT" command.  Note that if unsafe or reserved characters such
     as " ", ";", or "?" are present in <enc_mailbox> they MUST be
     encoded as described in RFC 1738 [RFC1738].  If the character "/"
     is present in enc_mailbox, it SHOULD NOT be encoded.

     The [uidvalidity] field is optional.  If it is present, it MUST be
     the argument to the IMAP4 UIDVALIDITY status response at the time
     the URL was created.  This SHOULD be used by the program
     interpreting the IMAP URL to determine if the URL is stale.

     The "?<enc_search_program>" field is optional.  If it is not
     present, a list of all messages in the mailbox SHOULD be presented
     by the program interpreting the URL.  If it is present, it SHOULD
     be used as the arguments following an IMAP4 SEARCH command with
     unsafe characters such as " " (which are likely to be present in
     the <enc_search_program>) encoded as described in RFC 1738
     [RFC1738].


7. A specific message or message part

     An IMAP URL referring to a specific message or message part has the
     following form:

         imap://<iserver>/<enc_mailbox>[uidvalidity]<iuid>[isection]

     The <enc_mailbox> and [uidvalidity] are as defined above.

     If [uidvalidity] is present in this form, it SHOULD be used by the



Newman                                                          [Page 4]

Internet Draft              IMAP URL Scheme                 January 1997


     program interpreting the URL to determine if the URL is stale.

     The <uid> refers to an IMAP4 message UID, and SHOULD be used as the
     <set> argument to the IMAP4 "UID FETCH" command.

     The [isection] field is optional.  If not present, the URL refers
     to the entire RFC 822 message as returned by the IMAP command "UID
     FETCH <uid> RFC822.PEEK".  If present, the URL refers to the object
     returned by a "UID FETCH <uid> BODY.PEEK[<section>]" command.  The
     type of the object may be determined with a "UID FETCH <uid>
     BODYSTRUCTURE" command and locating the appropriate part in the
     resulting BODYSTRUCTURE.  Note that unsafe characters in
     [isection], such as " " MUST be encoded as described in RFC 1738
     [RFC1738].


8. Relative IMAP URLs

     Relative IMAP URLs are permitted and are resolved according to the
     rules defined in RFC 1808 [RFC1808] with one exception.  When the
     relative URL includes a "SECTION=" parameter and does not include a
     "UID=" parameter, then the "UID=" parameter is inherited from the
     base URL.  The following observations are also important:

     The <iauth> grammar element is considered part of the user name for
     purposes of resolving relative IMAP URLs.  This means that unless a
     new login/server specification is included in the relative URL, the
     authentication mechanism is inherited from a base IMAP URL.

     URLs always use "/" as the hierarchy delimiter for the purpose of
     resolving paths in relative URLs.  IMAP4 permits the use of any
     hierarchy delimiter in mailbox names.  For this reason, relative
     mailbox paths will only work if the mailbox uses "/" as the
     hierarchy delimiter.  Relative URLs may be used on mailboxes which
     use other delimiters, but in that case, the entire mailbox name
     MUST be specified in the relative URL or inherited as a whole from
     the base URL.

     The base URL for a list of mailboxes or messages which was referred
     to by an IMAP URL is always the referring IMAP URL itself.  The
     base URL for a message or message part which was referred to by an
     IMAP URL may be more complicated to determine.  The program
     interpreting the relative URL will have to check the headers of the
     MIME entity and any enclosing MIME entities in order to locate the
     "Content-Base" and "Content-Location" headers.  These headers are
     used to determine the base URL as defined in [HTTP].  For example,
     if the referring IMAP URL contains a ";SECTION=1.2" parameter, then
     the MIME headers for section 1.2, for section 1, and for the



Newman                                                          [Page 5]

Internet Draft              IMAP URL Scheme                 January 1997


     enclosing message itself SHOULD be checked in that order for
     "Content-Base" or "Content-Location" headers.


9. Examples

     The following examples demonstrate how an IMAP4 client program
     might translate various IMAP4 URL into a series of IMAP4 commands.
     Commands sent from the client to the server are prefixed with "C:",
     and responses sent from the server to the client are prefixed with
     "S:".

     The URL:

         <imap://minbari.org/gray-council;UIDVALIDITY=385759045;UID=20>

     Results in the following client commands:

         <connect to minbari.org, port 143>
         C: A001 LOGIN ANONYMOUS sheridan@babylon5.org
         C: A002 SELECT gray-council
         <client verifies the UIDVALIDITY matches>
         C: A003 UID FETCH 20 RFC822.PEEK

     The URL:

         <imap://michael@minbari.org/users.*;type=list>

     Results in the following client commands:

         <client requests password from user>
         <connect to minbari.org, port 143>
         C: A001 LOGIN MICHAEL zipper
         C: A002 LIST "" users.*

     The URL:

         <imap://;AUTH=KERBEROS_V4@minbari.org/gray-council;uid=20;section=1.2>

     Results in the following client commands:

         <connect to minbari.org, port 143>
         C: A001 AUTHENTICATE KERBEROS_V4
         <authentication exchange>
         C: A002 SELECT gray-council
         C: A003 UID FETCH 20 BODY.PEEK[1.2]





Newman                                                          [Page 6]

Internet Draft              IMAP URL Scheme                 January 1997


     If the following relative URL is located in that body part:

          <;section=1.4>

     This could result in the following client commands:

         C: A004 UID FETCH 20 (BODY.PEEK[1.2.MIME]
                 BODY.PEEK[1.MIME]
                 BODY.PEEK[HEADER.FIELDS (Content-Base Content-Location)])
         <Client looks for Content-Base or Content-Location headers in
          result.  If no such headers, then it does the following>
         C: A005 UID FETCH 20 BODY.PEEK[1.4]

     The URL:

         <imap://;AUTH=*@minbari.org/gray%20council?SUBJECT%20shadows>

     Could result in the following:

         <connect to minbari.org, port 143>
         C: A001 CAPABILITY
         S: * CAPABILITY IMAP4rev1 AUTH=GSSAPI
         S: A001 OK
         C: A002 AUTHENTICATE GSSAPI
         <authentication exchange>
         S: A002 OK user lennier authenticated
         C: A003 SELECT "gray council"
         ...
         C: A004 SEARCH SUBJECT shadows
         S: * SEARCH 8 10 13 14 15 16
         S: A004 OK SEARCH completed
         C: A005 FETCH 8,10,13:16 ALL
         ...

     NOTE: In this final example, the client has implementation dependent
     choices.  The authentication mechanism could be anything, including
     PREAUTH.  And the final FETCH command could fetch more or less
     information about the messages, depending on what it wishes to display
     to the user.












Newman                                                          [Page 7]

Internet Draft              IMAP URL Scheme                 January 1997


10. ABNF for IMAP URL scheme

     This uses ABNF as used in the IMAP specification [IMAP4].
     Terminals from the BNF for URLs [RFC1738] are also used.  Strings
     are not case sensitive.

     achar            ::= uchar / "&" / "=" / "~"
                             ; see RFC 1738 for "uchar" definition

     bchar            ::= achar / ":" / "@" / "/"

     enc_auth_type    ::= 1*achar
                             ; encoded version of [IMAP-AUTH] "auth_type"

     enc_list_mailbox ::= 1*bchar
                             ; encoded version of [IMAP4] "list_mailbox"

     enc_mailbox      ::= 1*bchar
                             ; encoded version of [IMAP4] "mailbox"

     enc_pass         ::= *achar
                             ; encoded version of [IMAP4] "password"

     enc_search_program
                      ::= 1*bchar
                             ; encoded version of search_program below

     enc_section      ::= 1*bchar
                             ; encoded version of section below

     enc_user         ::= *achar
                             ; encoded version of [IMAP4] "userid"

     imapurl          ::= "imap://" iserver "/" [ icommand ] [ iauth ]

     iauth            ::= ";AUTH=" ( "*" / enc_auth_type )

     icommand         ::= imailboxlist / ipath / isearch

     imailboxlist     ::= [enc_list_mailbox] [ ";TYPE=" list_type ]

     ipath            ::= enc_mailbox [uidvalidity] iuid [isection]

     isearch          ::= enc_mailbox [ "?" enc_search_program ] [uidvalidity]

     isection         ::= ";SECTION=" enc_section





Newman                                                          [Page 8]

Internet Draft              IMAP URL Scheme                 January 1997


     iserver          ::= [enc_user [ iauth ] [ ":" enc_pass ] "@"] hostport
                             ; See RFC 1738 for "hostport" definition

     iuid             ::= ";UID=" nz_number
                             ; See [IMAP4] for "nz_number" definition

     list_type        ::= "LIST" / "LSUB"

     search_program   ::= ["CHARSET" SPACE astring SPACE] 1#search_key
                             ; IMAP4 literals may not be used
                             ; See [IMAP4] for "astring" and "search_key"

     section          ::= section_text / (nz_number *["." nz_number]
                         ["." (section_text / "MIME")])
                 ; See [IMAP4] for "section_text" and "nz_number"

     uidvalidity      ::= ";UIDVALIDITY=" nz_number
                             ; See [IMAP4] for "nz_number" definition


11. References

     [IMAP4] Crispin, M., "Internet Message Access Protocol - Version
     4rev1", RFC 2060, University of Washington, December 1996.

         <ftp://ds.internic.net/rfc/rfc2060.txt>

     [IMAP-AUTH] Myers, J., "IMAP4 Authentication Mechanism", RFC 1731,
     Carnegie-Mellon University, December 1994.

         <ftp://ds.internic.net/rfc/rfc1731.txt>

     [MIME] Freed, N., Borenstein, N., "Multipurpose Internet Mail
     Extensions", RFC 2045, Innosoft, First Virtual, November 1996.

        <ftp://ds.internic.net/rfc/rfc2045.txt>

     [RFC1738] Berners-Lee, Masinter, McCahill, "Uniform Resource
     Locators (URL)", RFC 1738, CERN, Xerox Coproration, University of
     Minnesota, December 1994.

         <ftp://ds.internic.net/rfc/rfc1738.txt>

     [RFC1808] Fielding, "Relative Uniform Resource Locators", RFC 1808,
     UC Irvine, June 1995.

         <ftp://ds.internic.net/rfc/rfc1808.txt>




Newman                                                          [Page 9]

Internet Draft              IMAP URL Scheme                 January 1997


     [HTTP] Fielding, Gettys, Mogul, Frystyk, Berners-Lee, "Hypertext
     Transfer Protocol -- HTTP/1.1", RFC 2068, UC Irvine, DEC, MIT/LCS,
     January 1997.

         <ftp://ds.internic.net/rfc/rfc2068.txt>


12. Security Considerations

     IMAP URLs have the same security considerations as general Internet
     URLs [RFC1738].  Specifically, including passwords in the URL makes
     the password vulnerable to network eavesdroppers both when the URL
     is transmitted and when the "LOGIN" command is sent to the IMAP
     server.  Some web browsers store URLs in history files which may
     expose them further.  For these reasons, passwords SHOULD NOT be in
     the URL.

     Security considerations discussed in the IMAP specification [IMAP4]
     are also relevant.

     Client authors SHOULD be careful when selecting an authentication
     mechanism if ";AUTH=*" is specified.  Clients SHOULD NOT fall back
     to the "LOGIN" command with a user other than "anonymous".  A
     client which violates this rule is vulnerable to an active attacker
     which spoofs the server and does not declare support for any
     AUTHENTICATE mechanisms.

     Many email clients store the plain text password for later use
     after logging into an IMAP server.  Such clients MUST NOT use a
     stored password in response to an IMAP URL without explicit
     permission from the user to supply that password to the specified
     host name.


13. Author's Address

     Chris Newman
     Innosoft International, Inc.
     1050 East Garvey Ave. South
     West Covina, CA 91790 USA

     Email: chris.newman@innosoft.com









Newman                                                         [Page 10]
