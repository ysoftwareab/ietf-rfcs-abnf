pk11-URI                = "pkcs11" ":" pk11-identifier
pk11-identifier         = *1(pk11-attr *(";" pk11-attr))
pk11-attr               = pk11-token / pk11-manuf / pk11-serial /
                           pk11-model / pk11-lib-manuf / pk11-lib-ver /
                           pk11-lib-desc / pk11-object /
                           pk11-objecttype / pk11-id / pk11-pinfile
pk11-reserved-avail     = ":" / "/" / "?" / "#" / "[" / "]" / "@" /
                           "!" / "$" / "&" / "'" / "(" / ")" / "*" /
                           "+" / "," / "="
pk11-value              = *(unreserved / pk11-reserved-avail /
                           pct-encoded)
pk11-ck-char            = unreserved / "%20" / "!" / "%22" / "#" /
                           "%25" / "&" / "'" / "(" / ")" / "*" /
                           "+" / "," / "-" / "." / "/" / ":" / "%3B" /
                           "%3C" / "=" / "%3E" / "?" / "[" / "%5C" /
                           "]" / "%5E" / "_" / "%7B" / "%7C" / "%7D" /
                           "~"
pk11-token              = "token" "=" pk11-value
pk11-manuf              = "manufacturer" "=" pk11-value
pk11-serial             = "serial" "=" *pk11-ck-char
pk11-model              = "model" "=" pk11-value
pk11-lib-manuf          = "library-manufacturer" "=" pk11-value
pk11-lib-desc           = "library-description" "=" pk11-value
pk11-lib-ver            = "library-version" "=" 1*DIGIT *("." 1*DIGIT)
pk11-object             = "object" "=" pk11-value
pk11-objecttype         = "objecttype" "=" ("public" / "private" /
                           "cert" / "secretkey" / "data")
pk11-id                 = "id" "=" *pct-encoded
pk11-pinfile            = "pinfile" "=" pk11-value

   While the PKCS#11 specification limits the length of some fields, eg.
   the manufacturer label can be up to thirty-two characters long, the
   PKCS#11 URI does not impose such limitations.  It is up to the
   consumer of the PKCS#11 URI to perform any necessary sanity length
   checks.

   The attribute "token" represents a token label, the attribute
   "manufacturer" represents a token manufacturer ID, the attribute
   "serial" represents a token serial number, the attribute "model"
   represents a token model, the attribute "library-manufacturer"
   represents the Cryptoki library manufacturer, the attribute "library-
   description" represents the character string description of the
   library, the attribute "library-version" represents the Cryptoki
   library version, the attribute "object" represents a PKCS#11 object
   label, the attribute "objecttype" represents the type of the object,
   the attribute "id" represents the object ID, and the attribute
   "pinfile" specifies where the application or library should find the
   token PIN, if needed.  Application could overload this attribute.
   For example, "pinfile=%7Cprog-name" could mean to read a PIN from an
   external application (%7C denotes a pipe '|' character).  Note that
   an application can always ask for a PIN by any means it decides to.


manufacturer=Snake%20Oil,%20Inc.;
serial=;
model=1.0;
object=my-certificate;
objecttype=cert;
id=%69%95%3E%5C%f4%BD%EC%91;
pinfile=%2Fetc%2Fssh%2Ftoken_pin

manufacturer=Snake%20Oil,%20Inc.;
pinfile=%2Fetc%2Fssh%2Ftoken_pin

library-description=Soft%20Token%20Library;
library-version=1.23

object=my-certificate;
objecttype=cert;
id=%69%95%3e%5c%f4%bd%ec%91;
pinfile=%2Fetc%2Fssh%2Ftoken_pin

object=my-certificate;
objecttype=cert;
pinfile=/etc/ssh/token_pin
object=my-certificate;
objecttype=cert;


