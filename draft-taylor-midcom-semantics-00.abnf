filter={external endpoint address,  
      {type=IPv4, space="public", value="CHOOSE", count=2, parity=even}, 
      internal endpoint address + port, UDP}, 
action="permit" 
    
filter={ internal endpoint address (port = ANY), 
       {type=IPv4, space="public", value="CHOOSE"}, 
       external endpoint address + port, UDP}, 
action="permit" 
    
request = sessionInitiateReq / ruleInstallReq / ruleDeleteReq /  
               ruleResetReq /ruleQueryReq / ruleBundleReq / 
               bundleDeleteReq / ruleRemovalNotif / mbStatusNotif / 
               sessionAuditReq / sessionTerminationReq 
      
response = sessionInitiateAns / ruleInstallAns / ruleDeleteAns /  
               ruleResetAns /ruleQueryAns / ruleBundleAns / 
               bundleDeleteAns / ruleRemovalAck / mbStatusAck / 
               sessionAuditAns / sessionTerminationAns 
      
policyRule = 1*filter action  ; filters are ANDed 
      
filter = source mapped destination protocol 
      
source = addressTuple 
      
mapped = (addressTuple / mapRequest) [portCount] [parity] 
destination = addressTuple 
      
addressTuple = addrType addrSpace addrValue [portValue] 
mapRequest = addrType addrSpace (addrValue / CHOOSE) CHOOSE 
      
addrType = IPv4 / IPv6 
      
addrSpace = PUBLIC / PRIVATE 
      
addrValue = address / ANY 
      
portValue = portNumber / ANY 
    
action = PERMIT / DENY 
    




 
 
 
 
