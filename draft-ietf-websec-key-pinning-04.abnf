Public-Key-Pins =
    "Public-Key-Pins" ":" [ directive ] *( ";" [ directive ] )
Public-Key-Pins-Report-Only =
    "Public-Key-Pins-Report-Only" ":" [ directive ] *( ";" [ directive ] )

directive        = simple-directive
                   / pin-directive

simple-directive = directive-name [ "=" directive-value ]
directive-name   = token
directive-value  = token
                   / quoted-string

pin-directive    = "pin-" token "=" quoted-string

                       Figure 1: HPKP Header Syntax

   token and quoted-string are used as defined in [RFC2616], Section
   2.2.

   The directives defined in this specification are described below.
   The overall requirements for directives are:

   1.  The order of appearance of directives is not significant.

   2.  All simple-directives MUST appear only once in a PKP header
       field.  Directives are either optional or required, as stipulated
       in their definitions.

   3.  Directive names are case-insensitive.

   4.  UAs MUST ignore any PKP header fields containing directives, or
       other header field value data, that do not conform to the syntax
       defined in this specification.

   5.  If a PKP header field contains any directive(s) the UA does not
       recognize, the UA MUST ignore the those directives.

   6.  If the PKP header field otherwise satisfies the above
       requirements (1 through 5), the UA MUST process the directives it
       recognizes.

   Additional directives extending the semantic functionality of the PKP
   header field can be defined in other specifications, with a registry
   (having an IANA policy definition of IETF Review [RFC2616]) defined
   for them at such time.  Such future directives will be ignored by UAs
   implementing only this specification, as well as by generally non-
   conforming UAs.
   In the pin-directive, the token is the name of a cryptographic hash
   algorithm, and MUST be either "sha1" or "sha256".  The quoted-string
   is a sequence of base 64 digits: the base 64-encoded SPKI
   Fingerprint.  See Section 2.4.

max-age-value = delta-seconds
delta-seconds = 1*DIGIT

                      Figure 2: max-age Value Syntax

pin-sha1="4n972HfV354KP560yw4uqe/baXc=";
pin-sha1="IvGeLsbqzPxdI0b0wuj2xVTdXgc="

pin-sha1="4n972HfV354KP560yw4uqe/baXc=";
pin-sha256="LPJNul+wow4m6DsqxbninhsWHlwfp0JecwQzYpOLmCQ="

pin-sha1="qvTGHdzF6KLavt4PO0gs2a6pQ00=";
pin-sha256="LPJNul+wow4m6DsqxbninhsWHlwfp0JecwQzYpOLmCQ=";
max-age=2592000

pin-sha1="qvTGHdzF6KLavt4PO0gs2a6pQ00=";
pin-sha256="LPJNul+wow4m6DsqxbninhsWHlwfp0JecwQzYpOLmCQ=";
max-age=2592000; includeSubDomains

                      Figure 3: HPKP Header Examples

known-pin = token "=" quoted-string

                        Figure 6: Known Pin Syntax

