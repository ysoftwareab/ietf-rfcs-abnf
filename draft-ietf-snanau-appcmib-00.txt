
Internet Draft                  APPC MIB                   July 18, 1994


                    Definitions of Managed Objects
                                for APPC

                             July 18, 1994


                         Michael Allen (editor)
                            IBM Corporation
                          moallen@vnet.ibm.com



                     Zbigniew Kielczewski (editor)
                      Eicon Technology Corporation
                            zbig@eicon.qc.ca



                         William Kwan (editor)
                         CrossComm Corporation
                           kwan@crosscomm.com



                    <draft-ietf-snanau-appcmib-00.txt>



                          Status of this Memo

This document is an Internet-Draft.  Internet-Drafts are working
documents of the Internet Engineering Task Force (IETF), its areas, and
its working groups.  Note that other groups may also distribute working
documents as Internet-Drafts.

Internet-Drafts are draft documents valid for a maximum of six months.
Internet-Drafts may be updated, replaced, or obsoleted by other
documents at any time.  It is not appropriate to use Internet-Drafts as
reference material or to cite them other than as a "working draft" or
"work in progress".

To learn the current status of any Internet-Draft, please check the
1id-abstracts.txt listing contained in the Internet-Drafts Shadow
Directories on ds.internic.net, nic.nordu.net, ftp.isi.edu, or
munnari.oz.au.





Expires December 1994                                           [Page 1]




Internet Draft                  APPC MIB                   July 18, 1994


1.  Introduction

This memo defines a portion of the Management Information Base (MIB) for
use with network management protocols in the Internet community.  In
particular, it defines objects for managing the configuration,
monitoring and control of network devices with APPC (Advanced Program to
Program Communications) capabilities. This memo identifies managed
objects for SNA-capable devices with one or more Type 2.1 nodes. These
objects are specific for the LU6.2 protocols and supplement the generic
SNA objects defined in the SNA NAU MIB module[7]. Many of the tables in
this APPC MIB module are extensions of tables described in the SNA NAU
MIB module.  The SNA terms and overall architecture are documented in
[1].


This memo does not specify a standard for the Internet community.

































Expires December 1994                                           [Page 2]




Internet Draft                  APPC MIB                   July 18, 1994


2.  The SNMPv2 Network Management Framework

The SNMPv2 Network Management Framework consists of four major
components.  They are:

o    RFC 1442 [2] which defines the SMI, the mechanisms used for
     describing and naming objects for the purpose of management.

o    RFC 1213 [3] defines MIB-II, the core set of managed objects for
     the Internet suite of protocols.

o    RFC 1445 [4] which defines the administrative and other
     architectural aspects of the framework.

o    RFC 1448 [5] which defines the protocol used for network access to
     managed objects.


The Framework permits new objects to be defined for the purpose of
experimentation and evaluation.


2.1.  Object Definitions

Managed objects are accessed via a virtual information store, termed the
Management Information Base or MIB.  Objects in the MIB are defined
using the subset of Abstract Syntax Notation One (ASN.1) defined in the
SMI (RFC 1442 [2]).  In particular, each object type is named by an
OBJECT IDENTIFIER, an administratively assigned name.  The object type
together with an object instance serves to uniquely identify a specific
instantiation of the object.  For human convenience, we often use a
textual string, termed the descriptor, to refer to the object type.

















Expires December 1994                                           [Page 3]




Internet Draft                  APPC MIB                   July 18, 1994


3.  Overview

This document identifies the proposed set of objects for managing the
configuration, monitoring and controlling devices with APPC
capabilities. APPC is the aspect of SNA which supports peer to peer
communication. It consists of physical nodes (typically T2.1, but could
be 2.0 or 5), which provide the lower layer networking protocols and
logical units (LU Type 6.2) which provide the interface for applications
to communicate. Local LUs and remote partner LUs connect with each other
using sessions. Multiple different sessions can be established between
LUs with characteristics defined by Modes. Transaction Programs (TP) are
the applications which use the sessions to communicate with each other.
Multiple TPs can use the same sessions, but not at the same time. A
single usage of a session is called a conversation. While a session can
stay active for a long time, a conversation can come up and down based
on usage by the TPs. Common Programming Interface - Communication (CPI-
C) is a standard API (Application Programming Interface) for APPC that
is used by TPs for accessing conversations.

Highlights of the management functions supported by the APPC MIB module
include the following:


o    Monitoring of global APPC information.

o    Activate and deactivate statistics keeping and counting.

o    Modification of APPC defaults.

o    Creation and deletion of partner LUs, modes, TPs and CPI-C side
     information via the RowStatus objects in their respective admin
     tables.

o    Monitoring and modification of parameters related to local LU,
     partner LU, modes, TPs and CPIC side information.

o    Monitoring of APPC specific session operational parameters.

o    Monitoring of conversation operational parameters.

o    Traps for:
                     + No traps defined.







Expires December 1994                                           [Page 4]




Internet Draft                  APPC MIB                   July 18, 1994


This MIB module does not support:


o    Activation or deactivation of local LUs.

o    Activation or deactivation of partner LUs.

o    Activation or deactivation of conversations.

o    Activation or deactivation of Transaction Programs.

o    Activation of sessions.

o    Deactivation of sessions (supported in SNANAU MIB).


3.1.  Applying MIB II to managing APPC devices

This section identifies how MIB II objects, specifically the MIB II
system group will be used in SNMP-based management of SNA NAUs.  The MIB
II system group applies to the SNMP Agent.

The following object is from the MIB II system group:


sysUpTime:  clock in the SNMP Agent/proxy-Agent; expressed in
                TimeTicks (1/100s of a seconds).

This MIB module uses the TimeStamp TEXTUAL-CONVENTION which is defined
in the SNMPv2 Textual Conventions (RFC 1443 [6]) as "the value of MIB
II's sysUpTime object when a specific occurrence happens." The specific
occurrences related to APPC management are defined in this MIB module.


3.2.  APPC MIB Structure

The APPC MIB module contains six groups of objects:


o    appcGlobal - objects related to global statistics, defaults and
     controls.

o    appcLu   - objects related to LU6.2 specific local and partner LU,
     mode definition, monitoring and control.






Expires December 1994                                           [Page 5]




Internet Draft                  APPC MIB                   July 18, 1994


o    appcTp  - objects related transaction program definition,
     monitoring and control.

o    appcSession  - objects related to LU6.2 specific session
     monitoring.

o    appcConversation  - objects related conversation monitoring.

o    appcCPIC  - objects related related CPI-C side information
     definition and monitoring.


These groups are described below in more detail.

The objects related to APPC are generally organized into two types of
tables: the Admin and Oper tables.


The "Admin" table contains parameters which are used by a Management
Station to affect the operation of APPC.  Some parameters are used to
initialize and configure the APPC service at the next startup, while
others can take effect immediately.  A Management Station can
dynamically define APPC resources (LUs, modes, TPs, CPI-C side
information tables) by creating new entries in the Admin table.


The "Oper" table is an extension (supplement) of the corresponding Admin
table.  It contains objects which correspond to the values of parameters
currently used by the APPC system.

Some of tables also supplements Admin and Oper tables from the SNA NAU
MIB module.


3.2.1.  appcGlobal group

The appcGlobal group consists of the following tables and objects:

1) appcGlobalTable 

This table contains objects which describe global APPC information for
each node. The type of information includes number of active local LUs
and number of active sessions.

This table supplements the snaNodeOperTable, defined in the SNA NAU MIB





Expires December 1994                                           [Page 6]




Internet Draft                  APPC MIB                   July 18, 1994


module, as such uses the same index(i.e., snaNodeAdminIndex). However,
only entries in the snaNodeOperTable that are nodes which support APPC
or LU6.2 protocols, would have a corresponding entry in this table.  The
rows in this table are created by an Agent as soon as the entry in the
snaNodeOperTable becomes 'active'.  The entries in this table cannot be
modified by a Management Station.

2) appcStatCntlGroup

This group of objects controls whether certain statistics and counters
(e.g., session and RSCV counters) are maintained by an Agent. These
objects are for implementations that wish to provide this level of
operational control and is optional.

These objects can be generated initially, after startup of SNA service,
by the Agent which uses information from the Node configuration file.
Subsequent modifications of parameters is possible by a Management
station.  The modifications to these objects can be saved in the Node
configuration file for the next startup (i.e., restart or next
initialization) of SNA service, but the mechanism for this function is
not defined in this document.


3) appcDefaultTable -

This table contains objects which describe default APPC configurations
for each node. The type of default information includes mode name, LU,
and maximum logical record size.

This table supplements the snaNodeAdminTable, defined in the SNA NAU MIB
module, and as such uses the same index (i.e., snaNodeAdminIndex).
However, only entries in the snaNodeAdminTable that are nodes which
support APPC or LU6.2 protocols, would have a corresponding entry in
this table.  The rows in this table are created by an Agent as soon as
the entry in the snaNodeAdminTable becomes 'active'.

The entries in this table can be modified by a Management Station.


3.2.2.  appcLu group

The appcLu group consists of the following tables:

1) appcLluOperTable 





Expires December 1994                                           [Page 7]




Internet Draft                  APPC MIB                   July 18, 1994


This table contains objects which describe specific APPC local LU
operational information. The type of information includes maximum number
of sessions supported and whether the LU is the Control Point.

This table supplements the snaLuOperTable, defined in the SNA NAU MIB
module, and as such uses the same set of indices(i.e., snaNodeAdminIndex
and snaLuAdminLuIndex). However, only entries in the snaLuOperTable that
support APPC or LU6.2 protocols, would have a corresponding entry in
this table.  The rows in this table are created by an Agent as soon as
the entry in the snaLuOperTable becomes 'active'. The entries in this
table cannot be modified by a Management Station.

There is no appcLluAdminTable because all of the information needed to
configure a LU6.2 LU is already present in the snaLuAdminTable.

2) appcParLuAdminTable

This table contains objects which describe partner LU configuration
information. The type of information includes the name and whether
parallel session is supported.

The rows in this table can be created, modified, and deleted by a
Management Station. The appcParLuAdminRowStatus object describes the
status of an entry and is used to change the status of that entry.
Entries are indexed by snaNodeAdminIndex and appcParLuAdminIndex.

There is a single appcParLuAdminTable for each node. For those
implementations that have partner LU definitions associated with each
local LU, multiple entries with the same appcParLuAdminParLuName could
exist with different appcParLuAdminLocLuName. For those implementations
in which partner LU definitions applies to all local LUs, it will have
appcParLuAdminLocLuName set to '*ALL'.

For each entry in the appcParLuAdminTable, there is one or more
corresponding entry in the appcParLuOperTable. While the objects in this
table describe the desired or configured values, the actual runtime
values are contained in the appcParLuOperTable.

3) appcParLuOperTable

This table contains objects which describe partner LU run-time
operational information. The type of information includes the name and
whether parallel session is supported.

This table supplements the appcParLuAdminTable. Although the admin table





Expires December 1994                                           [Page 8]




Internet Draft                  APPC MIB                   July 18, 1994


entries could be global to all local LUs in a node, the oper table
entries are always associated with a local LU. Entries are indexed by
snaNodeAdminIndex, snaLuAdminLuIndex and appcParLuAdminIndex.

The rows in this table is created as soon as there is an active session
between the local and partner LU. The entries in this table cannot be
modified by a Management Station.

4) appcModeAdminTable

This table contains objects which describe mode configuration
information. The type of information includes the name and maximum
session limited.

The rows in this table can be created, modified, and deleted by a
Management Station. The appcModeAdminRowStatus object describes the
status of an entry and is used to change the status of that entry.
Entries are indexed by snaNodeAdminIndex and appcModeAdminIndex.

There is a single appcModeAdminTable for each node. For those
implementations that have mode definitions associated with each local
and partner LU pair, multiple entries with the same
appcModeAdminModeName could exist with different appcModeAdminLocLuName
and appcModeAdminParLuName. For those implementations in which mode
definitions applies to all local and partner LUs, it will have
appcModeAdminLocLuName and appcModeAdminParLuName set to '*ALL'.

For each entry in the appcModeAdminTable, there is one or more
corresponding entry in the appcModeOperTable. While the objects in this
table describe the desired or configured values, the actual runtime
values are contained in the appcModeOperTable.

5) appcModeOperTable

This table contains objects which describe mode run-time operational
information. The type of information includes the name and maximum
session limit.

This table supplements the appcModeAdminTable. Although the admin table
entries could be global to all local and partner LUs in a node, the oper
table entries are always associated with a local and partner LU. Entries
are indexed by snaNodeAdminIndex, snaLuAdminLuIndex,
appcParLuAdminIndex, and appcModeAdminIndex.

The rows in this table is created as soon as there is an active session





Expires December 1994                                           [Page 9]




Internet Draft                  APPC MIB                   July 18, 1994


between the local and partner LU for this mode. The entries in this
table cannot be modified by a Management Station.



3.2.3.  appcTp group

The appcTp group consists of the following tables:

1) appcTpAdminTable

This table contains objects which describe transaction program (TP)
configuration information. The type of information includes the name and
TP privileges.

The rows in this table can be created, modified, and deleted by a
Management Station. The appcTpAdminRowStatus object describes the status
of an entry and is used to change the status of that entry. Entries are
indexed by snaNodeAdminIndex and appcTpAdminIndex.

There is a single appcTpAdminTable for each node. For those
implementations that have TP definitions associated with each local LU,
multiple entries with the same appcTpAdminTpName could exist with
different appcTpAdminLocLuName. For those implementations in which TP
definitions applies to all local LUs, it will have appcTpAdminLocLuName
set to '*ALL'.

For each entry in the appcTpAdminTable, there is one or more
corresponding entry in the appcTpOperTable. While the objects in this
table describe the desired or configured values, the actual runtime
values are contained in the appcTpOperTable.


2) appcTpOperTable

This table contains objects which describe TP run-time operational
information. The type of information includes the name and TP
privileges.


Although the admin table entries could be global to all local LUs in a
node, the oper table entries are always associated with a local LU. In
addition, some TPs could be started up locally without any
configuration. Therefore, this entry in the appcTpOperTable may not have
a corresponding entry in the appcTpAdminTable (i.e., the





Expires December 1994                                          [Page 10]




Internet Draft                  APPC MIB                   July 18, 1994


appcTpOperTpAdminIndex is set to 0) Entries are indexed by
snaNodeAdminIndex, snaLuAdminLuIndex, and appcTpOperIndex.

The rows in this table is created as soon as a TP is started up. The
entries in this table cannot be modified by a Management Station.



3.2.4.  appcSession group

The appcSession group consists of the following table:

1) appcSessnTable

This table contains objects which describe APPC-specific session
information. The type of information includes the PCID and the pacing
counts.

This table supplements the snaLuSesnTable, defined in the SNA NAU MIB
module, and as such uses the same indices(i.e., snaNodeAdminIndex,
snaLuAdminLuIndex, snaLuSessnRluIndex, snaLuSessnIndex). However, only
entries in the snaLuSesnTable that are APPC or LU6.2 sessions, would
have a corresponding entry in this table.  Note that the
snaLuSessnRluIndex is the same as appcParLuAdminIndex.

The rows in this table are created by an Agent as soon as the entry in
the snaLuSesnTable becomes 'active'.  The entries in this table cannot
be modified by a Management Station.


3.2.5.  appcConversation group

The appcConversation group consists of the following table:

1) appcConvTable

This table contains objects which describe conversation information. The
type of information includes the state and type.

Since conversations can come up and down in a short period, it would be
more useful for a Management Station, if this table also contains
historical information. An entry is created by an Agent when the
conversation is started but not deleted when it stops. How the entries
are removed is implementation dependent and does not affect the usage of
this table. The entries in this table cannot be modified by a Management





Expires December 1994                                          [Page 11]




Internet Draft                  APPC MIB                   July 18, 1994


Station.



3.2.6.  appcCPIC group

The appcCPIC group consists of the following tables:

1) appcCpicAdminTable

This table contains objects which describe CPI-C side information. The
type of information includes the symbolic destination name and local LU
name.

The rows in this table can be created, modified, and deleted by a
Management Station. The appcCpicAdminRowStatus object describes the
status of an entry and is used to change the status of that entry.
Entries are indexed by appcCpicAdminIndex.

There is a single appcCpicAdminTable for the system. For those
implementations that have CPI-C definitions associated with each local
LU, multiple entries with the same appcCpicAdminSymbDestName could exist
with different appcCpicAdminLocLuName. For those implementations in
which CPI-C definitions applies to all local LUs, it will have
appcCpicAdminLocLuName set to '*ALL'.

For each entry in the appcCpicAdminTable, there is one or more
corresponding entry in the appcCpicOperTable. While the objects in this
table describe the desired or configured values, the actual runtime
values are contained in the appcCpicOperTable.


2) appcCpicOperTable

This table contains objects which describe CPI-C run-time operational
information. The type of information includes the symbolic destination
name and local LU name.


This table supplements the appcCpicAdminTable. Although the admin table
entries could be global to all local LUs in a node, the oper table
entries are always associated with a local LU. Entries are indexed by
appcCpicOperIndex.

The rows in this table is created as soon as it is being used by an





Expires December 1994                                          [Page 12]




Internet Draft                  APPC MIB                   July 18, 1994


active TP. The entries in this table cannot be


3.2.7.  Conformance statement

Compliance of the SNMPv2 management entity to the APPC MIB is defined in
terms of following conformance units called groups.

Unconditionally mandatory groups:

appcGlobalGroup, appcDefaultGroup, appcLluGroup, appcParLuGroup,
appcModeGroup, appcTpGroup, appcSessionGroup, and appcConversationGroup.

Conditionally mandatory groups:

appcStatControlGroup - mandatory only for those entities which supports
the option of activating and deactivating statistic collection and
counting.

appcCpicGroup - mandatory only for those entities which supports CPI-C.

Refinement of requirements for objects access:

an Agent which does not implement row creation for appcParLuAdminTable,
appcModeAdminTable, appcTpAdminTable and appcCpicAdminTable must at
least support object modification requests (i.e., read-write access
instead of read-create).


3.3.  APPC MIB special feature

This section describes the mechanism used for row creation in the Admin
tables.


3.3.1.  Row Creation mechanism

The row creation mechanism for the Admin tables in this MIB module is
based on the use of the RowStatus object.  Restriction of some
operations for specific tables are described in each table.  In
particular, before accepting the 'destroy' value for an entry, an Agent
has to verify the operational state of the corresponding entry in the
Oper table.






Expires December 1994                                          [Page 13]




Internet Draft                  APPC MIB                   July 18, 1994


4.  Object Definitions

APPC-MIB DEFINITIONS          ::= BEGIN

IMPORTS
        DisplayString, RowStatus, TimeStamp, InstancePointer
                FROM SNMPv2-TC

        experimental, Counter32, Gauge32, Integer32,
        OBJECT-TYPE, MODULE-IDENTITY, NOTIFICATION-TYPE
                FROM SNMPv2-SMI

        MODULE-COMPLIANCE, OBJECT-GROUP
                FROM SNMPv2-CONF

        snaNodeAdminIndex, snaLuAdminLuIndex, snaLuSessnIndex,
        snaLuSessnRluIndex
                FROM SNA-NAU-MIB;

appcMIB MODULE-IDENTITY
        LAST-UPDATED  "9407181800Z"
        ORGANIZATION  "IETF SNA NAU MIB Working Group"
        CONTACT-INFO
                "
                        Michael Allen
                        Networking Systems
                        IBM Corporation
                        Research Triangle Park, NC 27709
                        Tel:    1 919 254 4442
                        E-mail: moallen@vnet.ibm.com

                        Zbigniew Kielczewski
                        Eicon Technology Inc.
                        2196 32nd Avenue
                        Lachine, Que  H8T 3H7
                        Canada
                        Tel:    1 514 631 2592
                        E-mail: zbig@eicon.qc.ca

                        William Kwan
                        CrossComm Corporation
                        450 Donald Lynch Blvd.
                        Marlboro, MA 01752
                        Tel:    1 508 229 5429
                        E-mail: kwan@crosscomm.com





Expires December 1994                                          [Page 14]




Internet Draft                  APPC MIB                   July 18, 1994


                "
        DESCRIPTION
                "This is the MIB module for objects used to
                 manage network devices with APPC capabilities."
::= { experimental 999 }

appcObjects          OBJECT IDENTIFIER ::= { appcMIB 1 }
  appcGlobal         OBJECT IDENTIFIER ::= { appcObjects 1 }
  appcLu             OBJECT IDENTIFIER ::= { appcObjects 2 }
  appcTp             OBJECT IDENTIFIER ::= { appcObjects 3 }
  appcSession        OBJECT IDENTIFIER ::= { appcObjects 4 }
  appcConversation   OBJECT IDENTIFIER ::= { appcObjects 5 }
  appcCPIC           OBJECT IDENTIFIER ::= { appcObjects 6 }


-- *********************************************************************
-- Objects in this MIB will be used to model a SNA device which contains
-- one or more Nodes of type 2.1.
-- The structure of tables is related to tables defined in the SNA NAU MIB.
-- In particular, the tables for Local LUs and Sessions use the same
-- system of indices as corresponding tables in SNA NAU MIB and contain
-- only information specific to APPC.
--
-- 1.   APPC Global Objects            - global stats, defaults, controls
-- 2.   APPC Defined Lu Tables         - Oper only (Admin in NAU MIB)
-- 3.   APPC Defined Partner Lu Tables - Admin and Oper
-- 4.   APPC Mode Tables               - Admin and Oper
-- 5.   APPC TP Tables                 - Admin and oper
-- 6.   APPC Session Tables            - Oper and Stats
-- 7.   APPC Conversation Table        - Oper only
-- 8.   APPC CPIC side info            - Admin and oper
-- *********************************************************************

-- *********************************************************************
-- APPC Global Objects
-- These objects are organised in a table and defined for each PU 2.1
-- *********************************************************************

appcGlobalTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcGlobalEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC global info Table"
      ::= { appcGlobal 1 }





Expires December 1994                                          [Page 15]




Internet Draft                  APPC MIB                   July 18, 1994


appcGlobalEntry OBJECT-TYPE
      SYNTAX AppcGlobalEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
         "Information about Nodes, indexed by Node Index from NAU MIB."

      INDEX { snaNodeAdminIndex }

::= { appcGlobalTable 1 }

AppcGlobalEntry     ::= SEQUENCE {
        appcNbLocLUInUse Gauge32,
        appcNbSessnInUse Gauge32
        }
appcNbLocLUInUse   OBJECT-TYPE
        SYNTAX         Gauge32
        MAX-ACCESS     read-only
        STATUS         current
        DESCRIPTION
           "the number of local LUs currently active."

        ::= { appcGlobalEntry 1 }

appcNbSessnInUse       OBJECT-TYPE
        SYNTAX         Gauge32
        MAX-ACCESS     read-only
        STATUS         current
        DESCRIPTION
           "Number of active sessions between local LUs and remote LUs."

        ::= { appcGlobalEntry 2 }


-- *********************************************************************
-- APPC Statistics Control Objects
-- ---------------------------------------------------------------------
-- The following simple objects allow:
--    * the collection of APPC Session Information counters
--      to be started and stopped
--    * the collection of APPC Session RSCVs
--      to be started and stopped
--
-- These objects are for implementations that wish to provide
-- this level of operational control.  This group should be





Expires December 1994                                          [Page 16]




Internet Draft                  APPC MIB                   July 18, 1994


-- optional in the conformance section of the MIB.
--
-- *********************************************************************

appcStatCntrlGroup OBJECT IDENTIFIER ::= { appcGlobal 2 }

appcStatCntrlStatus  OBJECT-TYPE
      SYNTAX INTEGER  {
                      notActive(1),
                      active(2)
                      }
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "Indicates the current collection options in effect
              notActive  collection of counters and some names
                         is not active.
              active     collection of counters and some names
                         is active."

      ::= { appcStatCntrlGroup  1 }

appcStatCntrlRscv    OBJECT-TYPE
      SYNTAX INTEGER    {
                      notActive(1),
                      active(2)
                      }
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "Indicates the current collection options in effect
              notActive  collection of route selection control vectors
                         is not active.
              active     collection of route selection control vectors
                         is active."

      ::= { appcStatCntrlGroup  2 }

appcStatCntrlRscvTime OBJECT-TYPE
      SYNTAX TimeStamp
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Time when the appcStatCntrlRscv object last changed.
           This time is in hundreds of a second."





Expires December 1994                                          [Page 17]




Internet Draft                  APPC MIB                   July 18, 1994


      ::= { appcStatCntrlGroup  3 }

appcStatCntrlCtrStatus  OBJECT-TYPE
      SYNTAX INTEGER  {
                      notActive(1),
                      active(2)
                      }
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "Indicates whether or not the appc session counters
           are active.  This object reflects the combination of the
           appcStatCntrlStatus object and any other product
           dependent object(s).  The values are:

              notActive  collection of counters and some names
                         is not active.
              active     collection of counters and some names
                         is active."

      ::= { appcStatCntrlGroup  4 }

appcStatCntrlCtrStatusTime OBJECT-TYPE
      SYNTAX TimeStamp
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Time when the appcStatCntrlCtrStatus object last changed.
           This time is in hundreds of a second."

      ::=  { appcStatCntrlGroup 5  }

-- ******************************************************************
--
--    Table of APPC defaults per SNA node
--
-- ******************************************************************

appcDefaultTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcDefaultEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Table of APPC default settings per SNA node."
      ::= { appcGlobal 3 }





Expires December 1994                                          [Page 18]




Internet Draft                  APPC MIB                   July 18, 1994


appcDefaultEntry OBJECT-TYPE
      SYNTAX AppcDefaultEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC default settings per SNA node."

      INDEX     { snaNodeAdminIndex }

::= { appcDefaultTable 1 }

AppcDefaultEntry     ::= SEQUENCE {
            appcDefaultModeName          DisplayString,
            appcDefaultLuAlias           DisplayString,
            appcDefaultImplInbndPlu      INTEGER,
            appcDefaultMaxMcLlSndSize    Gauge32,
            appcDefaultFileSpec          DisplayString,
            appcDefaultTpOperation       INTEGER,
            appcDefaultTpConvSecRqd      INTEGER
                                }

appcDefaultModeName     OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..8))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the mode name to be used under the following
           conditions:

              When an incoming BIND request contains a mode name not
              defined at the local node.  The parameters defined for
              this mode are used for the inbound implicit mode
              capability.

              When an APPC program issues an [MC_]ALLOCATE,
              [MC_]SEND_CONVERSATION, or CNOS verb, or when a CPI-C
              program issues an Allocate (CMALLC) call,
              specifying a mode name not defined at the local node.  The
              parameters defined for this mode are used for the outbound
              implicit mode capability.

           Display convention

              A get operation against this object will return the string
              'BLANK' if the actual value is 8 spaces.  This convention





Expires December 1994                                          [Page 19]




Internet Draft                  APPC MIB                   July 18, 1994


              is intended to prevent operator confusion and is
              consistent with the practice of some existing
              implementations.  "

        ::= { appcDefaultEntry 1 }

appcDefaultLuAlias OBJECT-TYPE
        SYNTAX  DisplayString (SIZE(0..48))
        MAX-ACCESS  read-create
        STATUS  current
        DESCRIPTION
           "Specifies the alias of the local LU that is to serve as the
           default LU.  This The default LU is the one to which are
           routed inbound BIND requests that exclude the secondary LU
           name.  This local LU alias must have been previously defined
           in snaLuAdminName for the intended local LU."

        ::= { appcDefaultEntry 2 }

appcDefaultImplInbndPlu OBJECT-TYPE
        SYNTAX  INTEGER {
                           yes(1),
                           no(2)
                          }
        MAX-ACCESS  read-create
        STATUS  current
        DESCRIPTION
           "Specifies whether or not inbound implicit partner LU support
           is enabled.  The following values are defined:

              YES
              Specifies that inbound implicit partner LU support is
              enabled, which provides the capability to accept an
              incoming BIND request that contains a partner LU name that
              is not defined at the local node.

              NO
              Specifies that inbound implicit partner LU support is
              disabled, which means that an incoming bind that specifies
              a partner LU that is not defined at the local node will be
              rejected."

        ::= { appcDefaultEntry 3 }

appcDefaultMaxMcLlSndSize OBJECT-TYPE





Expires December 1994                                          [Page 20]




Internet Draft                  APPC MIB                   July 18, 1994


        SYNTAX      Gauge32
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
             "Specifies the maximum size of a logical record to be used
              on a mapped conversation for sending data to either the
              inbound or outbound implicit partner LU.  The size is the
              number of bytes in the logical record, as indicated in the
              LL field of the record. The default value is 32767."

        ::= { appcDefaultEntry 4 }

appcDefaultFileSpec OBJECT-TYPE
      SYNTAX        DisplayString (SIZE (0..80))
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "The local file specification that is to be searched by the
           APPC attach manager when no DEFINE_TP verb has been issued
           for the TP name received on an incoming attach.  In this
           case, the attach manager will attempt to start a program
           whose file name is the same as the incoming TP name.  If
           found, the program is loaded. If not found, the attach is
           rejected.

           The value '*' indicates that the normal search path for
           executable programs is to be used for locating an undefined
           transaction program.

           A null string indicates that there is no default file
           specification for undefined transaction programs."

        ::= { appcDefaultEntry 5 }

appcDefaultTpOperation   OBJECT-TYPE
      SYNTAX INTEGER {
                 queuedOperatorStarted(1),
                 queuedOperatorPreloaded(2),
                 queuedAmStarted(3),
                 nonqueuedAmStarted(4)
                     }
      MAX-ACCESS read-create
      STATUS     current
      DESCRIPTION
                "Specifies how the program will be started.





Expires December 1994                                          [Page 21]




Internet Draft                  APPC MIB                   July 18, 1994


                 queuedOperatorStarted -- Specifies that one version of
                       the program will be run at a time.  If an incoming
                       attach arrives and the program has not been
                       started yet, APPC will issue a message to the
                       operator to start the specified program.
                       Subsequent attaches that arrive while the program
                       is active will be queued.

                 queuedOperatorPreloaded -- Specifies that one version
                       of the program will be run at a time.  If an
                       incoming attach arrives and the program has not
                       been started yet, the Attach will be rejected.
                       The APPC attach manager determines that a TP has
                       started upon reception of an APPC RECEIVE_ALLOCATE
                       verb or a CPI-C program Accept_Conversation (CMACCP)
                       call.  No message is sent to the operator.
                       Subsequent attaches that arrive while the program
                       is active are queued.

                 queuedAmStarted -- Specifies that one version of the
                       program will be run at a time and will be started
                       by the APPC attach manager.  Subsequent attaches
                       that arrive while the program is active will be
                       queued.

                 nonqueuedAmStarted -- Specifies that multiple copies of
                       the program will be run at a time and will be
                       started by the APPC attach manager."

        ::= { appcDefaultEntry 6 }

appcDefaultTpConvSecRqd OBJECT-TYPE
        SYNTAX       INTEGER {
                               yes(1),
                               no(2)
                               }
        MAX-ACCESS   read-create
        STATUS       current
        DESCRIPTION
              "Specifies whether or not conversation security will be
              used for default TPs.

              YES
                 Specifies that the incoming attach must contain a valid
                 user ID and password.





Expires December 1994                                          [Page 22]




Internet Draft                  APPC MIB                   July 18, 1994


              NO
                 Specifies that the incoming attach does not have to
                 contain security information."

        ::= { appcDefaultEntry 7 }

-- *********************************************************************
--    APPC LU information
-- ---------------------------------------------------------------------
--
--  The entries in the following table supplement the entries in the NAU
--  MIB table snaLuOperTable.  However, these entries do not AUGMENT
--  snaLuOperEntry, since the entries here provide APPC-level information,
--  which is not applicable to non-6.2 LUs.
--
--  An appcLluAdminTable is not needed, since all of the
--  information needed to define a local 6.2 LU on most implementations
--  is already present in snaLuAdminTable.  There are some operational
--  characteristics for a local 6.2 LU that we do need to model, hence
--  this appcLluOperTable.
--
-- *********************************************************************
appcLluOperTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcLluOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC Local Lu Table.  This table supplements snaLuOperTable
           for type 6.2 LUs."

      ::= { appcLu 1 }

appcLluOperEntry OBJECT-TYPE
      SYNTAX AppcLluOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Information about local APPC LUs.  This entry supplements
          the information in snaLuOperEntry, uses the same indices,
          but entries in this table are present only for 6.2 LUs."

      INDEX { snaNodeAdminIndex, snaLuAdminLuIndex }

      ::= { appcLluOperTable 1 }





Expires December 1994                                          [Page 23]




Internet Draft                  APPC MIB                   July 18, 1994


AppcLluOperEntry     ::= SEQUENCE {
        appcLluOperDefType         INTEGER,
        appcLluOperSessLimit       Integer32,
        appcLluOperBindRspMayQ     INTEGER,
        appcLluOperDefaultLu       INTEGER,
        appcLluOperCPlu            INTEGER
        }

appcLluOperDefType   OBJECT-TYPE
      SYNTAX INTEGER {
                     sysdef(1),
                     operator(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Indicates whether the LU definition was specified in the
           nodes system definitions, by operator command (either
           locally or from network management workstation)."

      ::= { appcLluOperEntry 1 }


appcLluOperSessLimit OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The maximum number of session supported by this LU."

      ::= { appcLluOperEntry 2 }

appcLluOperBindRspMayQ OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Indicates whether or not the local LU, as the sender of a
           BIND request, allows a remote partner LU to delay sending the
           BIND response if the partner LU cannot process the BIND request
           immediately."





Expires December 1994                                          [Page 24]




Internet Draft                  APPC MIB                   July 18, 1994


      ::= { appcLluOperEntry 3 }

appcLluOperDefaultLu OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Indicates whether the LU is the default LU, to which are
          routed inbound BIND requests that exclude the secondary LU name."

      ::= { appcLluOperEntry 4 }

appcLluOperCPlu  OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Indicates whether or not the LU is the control point (CP)
           for the node."

      ::= { appcLluOperEntry 5 }

-- *********************************************************************
--    APPC Partner LU  Admin Table
-- ---------------------------------------------------------------------
-- This table contains information about partner LU's
-- *********************************************************************
appcParLuAdminTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcParLuAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC Partner LU administrative Table"

      ::= { appcLu 2 }

appcParLuAdminEntry OBJECT-TYPE
      SYNTAX AppcParLuAdminEntry
      MAX-ACCESS not-accessible





Expires December 1994                                          [Page 25]




Internet Draft                  APPC MIB                   July 18, 1994


      STATUS current
      DESCRIPTION
           "Entry of APPC Partner LU Information Table.
           It is indexed by snaNodeAdminIndex plus an index for
           the partner LU."
      INDEX { snaNodeAdminIndex,
               appcParLuAdminIndex }

      ::= { appcParLuAdminTable 1 }

AppcParLuAdminEntry     ::= SEQUENCE {

      appcParLuAdminIndex           Integer32,
      appcParLuAdminLocLuName       DisplayString,
      appcParLuAdminParLuName       DisplayString,
      appcParLuAdminAlias           DisplayString,
      appcParLuAdminDefType         INTEGER,
      appcParLuAdminDefParaSessSup  INTEGER,
      appcParLuAdminDefCnosSup      INTEGER,
      appcParLuAdminDefSessSec      INTEGER,
      appcParLuAdminDefConvSec      INTEGER,
      appcParLuAdminDefAlVerSup     INTEGER,
      appcParLuAdminLinkName        DisplayString,
      appcParLuAdminRowStatus       RowStatus

          }

appcParLuAdminIndex OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Index for partner LU admin instances."

      ::= { appcParLuAdminEntry 1 }

appcParLuAdminLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The SNA name of the local LU to which this partner LU
           definition applies. This field is from 1 to 17 characters in
           length, including a period (.) which separates the
           NetId from the NAU name if the netId is present.





Expires December 1994                                          [Page 26]




Internet Draft                  APPC MIB                   July 18, 1994


           The reserved value '*ALL' indicates that the partner LU
           definition applies to all local LUs, and not just to a single
           local LU.

           Row creation conventions:

             When row creation is attempted, the agent must verify that
             the partner LU name in the new row is not the same as in
             an existing partner LU definition for the same local LU name.
             If it is, the creation must fail. Implementations that do not
             support definition of modes on an LU by LU basis will reject
             any attempt to set this object to a value other than '*ALL'."

      ::= { appcParLuAdminEntry 2 }

appcParLuAdminParLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The SNA name of the partner LU.
           This field is from 1 to 17 characters in
           length, including a period (.) which separates the
           NetId from the NAU name if the netId is present."

      ::= { appcParLuAdminEntry 3 }

appcParLuAdminAlias  OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..48))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "A local alias for the partner LU.  If not known or
           not applicable, this object contains a zero-length
           string."

      ::= { appcParLuAdminEntry 4 }

appcParLuAdminDefType   OBJECT-TYPE
      SYNTAX INTEGER {
                     sysdef(1),
                     operator(2),
                     dynamic(3)
                     }
      MAX-ACCESS read-create





Expires December 1994                                          [Page 27]




Internet Draft                  APPC MIB                   July 18, 1994


      STATUS current
      DESCRIPTION
          "Indicates whether the LU definition was specified in the
           nodes system definitions, by operator command (either
           locally or from network management workstation), or was
           dynamically created in response to an Allocate or Bind."

      ::= { appcParLuAdminEntry 5 }

appcParLuAdminDefParaSessSup OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Defined Parallel Sessions Supported.
           Indicates whether or not multiple session between
           the partner LU and its associated local LU are
           permitted."

      ::= { appcParLuAdminEntry 6 }

appcParLuAdminDefCnosSup OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Defined CNOS Supported.
           Indicates whether or not Change Number of Sessions (CNOS)
           will be used to negotiate session limits between the
           logical points."

      ::= { appcParLuAdminEntry 7 }

appcParLuAdminDefSessSec    OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create





Expires December 1994                                          [Page 28]




Internet Draft                  APPC MIB                   July 18, 1994


      STATUS current
      DESCRIPTION
          "Specifies the type of security information that a local LU
          will accept on BIND requests it receives from the partner LU.

          yes -- Specifies that the BIND request may carry a password
          that will be verified upon receipt.

          no  -- Specifies that the BIND request may carry a password
          but no session level security verification will be done."

      ::= { appcParLuAdminEntry 8 }

appcParLuAdminDefConvSec    OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Level of access security that will be accepted on
           attach requests received from the partner LU. Possible
           values are:

           yes -- conversation level security is supported.

           no -- conversation level security is not supported."

      ::= { appcParLuAdminEntry 9 }

appcParLuAdminDefAlVerSup   OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     already(2),
                     persistent(3),
                     already-persistent(4)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies support for different levels of verified security in
           ATTACH requests received from this remote LU.  This object is
           only valid if conversation level security is supported.
           Possible values are:





Expires December 1994                                          [Page 29]




Internet Draft                  APPC MIB                   July 18, 1994


                none    -   No allocation requests will be accepted
                            that includes already-verified or persistent
                            verification indications.
                            The requests must include a user id and password
                            (optionally a profile).
                already -   Allocation requests will be accepted that include
                            already-verified indications. Persistent
                            verification indications will not be accepted.
                persistent -
                            Allocation requests will be accepted that include
                            persistent verification indications.
                            Already-verified indications will not be
                            accepted.
                already-persistent -
                            Allocation requests will be accepted that
                            include already-verified or persistent
                            verification indications."

      ::= { appcParLuAdminEntry 10 }

appcParLuAdminLinkName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..48))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Local name for the link that provides connection to partner
          LU.  This object may contain a zero-length string if the
          link name is not specified or if link name is not
          applicable (as for APPN-level nodes)."

      ::= { appcParLuAdminEntry 11 }

appcParLuAdminRowStatus OBJECT-TYPE
          SYNTAX  RowStatus
          MAX-ACCESS  read-create
          STATUS  current
          DESCRIPTION
                  "This object is used by a Management Station to
                  create or delete the row entry in the
                  appcParLuAdminTable following the RowStatus textual
                  convention.

                  <Need description in SNA terms of what is expected
                  when a row is created or deleted>
                  "





Expires December 1994                                          [Page 30]




Internet Draft                  APPC MIB                   July 18, 1994


      ::= { appcParLuAdminEntry 12 }

-- *********************************************************************
--    APPC Partner Lu  Oper Table
-- *********************************************************************

appcParLuOperTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcParLuOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Table of active partner LUs"

      ::= { appcLu 3 }

appcParLuOperEntry OBJECT-TYPE
      SYNTAX AppcParLuOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry in operational table of partner LUs."

      INDEX
             { snaNodeAdminIndex,
               snaLuAdminLuIndex,
               appcParLuAdminIndex  }

      ::= { appcParLuOperTable 1 }

AppcParLuOperEntry     ::= SEQUENCE {
    appcParLuOperLocLuName             DisplayString,
    appcParLuOperParLuName             DisplayString,
    appcParLuOperParLuAlias            DisplayString,
    appcParLuOperState                 INTEGER,
    appcParLuOperActParaSessSup        INTEGER,
    appcParLuOperActCnosSup            INTEGER,
    appcParLuOperActSessSec            INTEGER,
    appcParLuOperActConvSec            INTEGER,
    appcParLuOperActAlVerSup           INTEGER,
    appcParLuOperLinkName              DisplayString

   }

appcParLuOperLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))





Expires December 1994                                          [Page 31]




Internet Draft                  APPC MIB                   July 18, 1994


      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The SNA name of the local LU.
           This field is from 1 to 17 characters in
           length, including a period (.) which separates the
           NetId from the NAU name if the netId is present.

           This value is redundant, because the snaLuAdminLuIndex
           could be used to retrieve this value from the snaLuAdminTable,
           but the value is duplicated here to simplify management station
           application programming."

      ::= { appcParLuOperEntry 1 }

appcParLuOperParLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The SNA name of the partner LU.
           This field is from 1 to 17 characters in
           length, including a period (.) which separates the
           NetId from the NAU name if the netId is present."

      ::= { appcParLuOperEntry 2 }

appcParLuOperParLuAlias   OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..48))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "A local alias for the partner LU.  If not known or
           not applicable, this object contains a zero-length
           string."

      ::= { appcParLuOperEntry 3 }

appcParLuOperState OBJECT-TYPE
        SYNTAX  INTEGER {
                inactive (1),
                active (2)
                }
        MAX-ACCESS  read-only
        STATUS  current





Expires December 1994                                          [Page 32]




Internet Draft                  APPC MIB                   July 18, 1994


        DESCRIPTION
                "The value identifies the current operational state of this
                LU.

                  active (2) - the LU is defined and is able to
                        receive BIND.
                  inactive (1) - the LU has a session count equal
                        to 0."

      ::= { appcParLuOperEntry 4 }

appcParLuOperActParaSessSup OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Active Parallel Sessions Supported.
           Indicates whether or not multiple session between
           the partner LU and its associated local LU are
           permitted."

      ::= { appcParLuOperEntry 5 }

appcParLuOperActCnosSup OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Active CNOS Supported.
           Indicates whether or not Change Number of Sessions (CNOS)
           will be used to negotiate session limits between the
           logical points."

      ::= { appcParLuOperEntry 6 }

appcParLuOperActSessSec    OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)





Expires December 1994                                          [Page 33]




Internet Draft                  APPC MIB                   July 18, 1994


                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the type of security information that a local LU
          will accept on BIND requests it receives from the partner LU.

          yes -- Specifies that the BIND request may carry a password
          that will be verified upon receipt.

          no  -- Specifies that the BIND request may carry a password
          but no session level security verification will be done."

      ::= { appcParLuOperEntry 7 }

appcParLuOperActConvSec    OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Level of access security that will be accepted on
           attach requests received from the partner LU. Possible
           values are:

           yes -- conversation level security is supported.

           no -- conversation level security is not supported."

      ::= { appcParLuOperEntry 8 }

appcParLuOperActAlVerSup   OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     already(2),
                     persistent(3),
                     already-persistent(4)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies support for different levels of verified security in
           ATTACH requests received from this remote LU.  This object is





Expires December 1994                                          [Page 34]




Internet Draft                  APPC MIB                   July 18, 1994


           only valid if conversation level security is supported.
           Possible values are:

                none    -   No allocation requests will be accepted
                            that includes already-verified or persistent
                            verification indications.
                            The requests must include a user id and password
                            (optionally a profile).
                already -   Allocation requests will be accepted that include
                            already-verified indications. Persistent
                            verification indications will not be accepted.
                persistent -
                            Allocation requests will be accepted that include
                            persistent verification indications.
                            Already-verified indications will not be accepted.
                already-persistent -
                            Allocation requests will be accepted that
                            include already-verified or persistent
                            verification indications."

      ::= { appcParLuOperEntry 9 }

appcParLuOperLinkName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..48))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Local name for the link that provides connection to partner
          LU.  This object may contain a zero-length string if the
          link name is not specified or if link name is not
          applicable (as for APPN-level nodes)."

      ::= { appcParLuOperEntry 10  }


-- *********************************************************************
--    APPC Mode Table
-- ---------------------------------------------------------------------
-- This table contains information about session mode definitions.
-- Modes can be defined by creating a row in this table.
-- Modes that have active sessions appear in the appcModeOperTable.
-- *********************************************************************
appcModeAdminTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcModeAdminEntry
      MAX-ACCESS not-accessible





Expires December 1994                                          [Page 35]




Internet Draft                  APPC MIB                   July 18, 1994


      STATUS current
      DESCRIPTION
           "APPC Mode Table"

      ::= { appcLu 4 }

appcModeAdminEntry OBJECT-TYPE
      SYNTAX AppcModeAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC Mode Information Table."

      INDEX
             { snaNodeAdminIndex,
               appcModeAdminIndex }

      ::= { appcModeAdminTable 1 }

AppcModeAdminEntry     ::= SEQUENCE {
               appcModeAdminIndex              Integer32,
               appcModeAdminModeName           DisplayString,
               appcModeAdminLocLuName          DisplayString,
               appcModeAdminParLuName          DisplayString,
               appcModeAdminCosName            DisplayString,
               appcModeAdminDefType            INTEGER,
               appcModeAdminSessEndTpName      DisplayString,
               appcModeAdminMaxSessLimit       Gauge32,
               appcModeAdminConWinAutoActLimit Gauge32,
               appcModeAdminAdaptivePacing     INTEGER,
               appcModeAdminRecvPacWinSz       Integer32,
               appcModeAdminSendPacWinSz       Integer32,
               appcModeAdminPrefRecvRuSz       Integer32,
               appcModeAdminPrefSendRuSz       Integer32,
               appcModeAdminRecvRuSzUpBnd      Integer32,
               appcModeAdminSendRuSzUpBnd      Integer32,
               appcModeAdminRecvRuSzLoBnd      Integer32,
               appcModeAdminSendRuSzLoBnd      Integer32,
               appcModeAdminDfSyncLvl          INTEGER,
               appcModeAdminDfCrypto           INTEGER,
               appcModeAdminSingSessReinit     INTEGER,
               appcModeAdminAltCode            INTEGER,
               appcModeAdminCompression        INTEGER,
               appcModeAdminInBoundCompLevel   INTEGER,
               appcModeAdminOutBoundCompLevel  INTEGER,





Expires December 1994                                          [Page 36]




Internet Draft                  APPC MIB                   July 18, 1994


               appcModeAdminCompRleBeforeLZ    INTEGER,
               appcModeAdminRowStatus          RowStatus

                                   }

appcModeAdminIndex OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Index for entry in mode definition table."

      ::= { appcModeAdminEntry 1 }

appcModeAdminModeName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..8))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the mode name. A mode defines the characteristics
           for a group of sessions. The mode name can be blank (8
           space characters).

           Row creation conventions:

             When row creation is attempted, the agent must verify that
             the mode name in the new row is not the same as an existing
             mode definition.  If it is, the creation must fail.

             If the desired mode name is the default blank mode name,
             the appcModeAdminModeName object must be set to the
             reserved value 'BLANK', which represents the value of
             8 space characters operationally.
             A set with a shorter string of space characters will be
             padded to 8 spaces by the agent.

           Display convention

             A get operation against this object will return the string
             'BLANK' if the actual value is 8 spaces.  This convention
             is intended to prevent operator confusion and is consistent
             with the practice of some existing implementations.
            "

      ::= { appcModeAdminEntry 2 }





Expires December 1994                                          [Page 37]




Internet Draft                  APPC MIB                   July 18, 1994


appcModeAdminLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The SNA name of the local LU to which this mode definition
           applies.  This field is from 1 to 17 characters in length,
           including a period (.)  which separates the NetId from the
           NAU name if the netId is present.

           The reserved value '*ALL' indicates that the mode definition
           applies to all local LUs for the SNA node identified by
           snaNodeAdminIndex, and not just to a single local LU.

           Row creation conventions:

             When row creation is attempted, the agent must verify that
             the local LU name in the new row is not the same as in
             an existing mode definition for the same mode name.
             If it is, the creation must fail.  Implementations that do
             not support definition of modes on an LU-by-LU basis will
             reject any attempt to set this object to a value other than
             '*ALL'."

      ::= { appcModeAdminEntry 3 }

appcModeAdminParLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The SNA name of the partner LU to which this mode definition
           applies.  This field is from 1 to 17 characters in length,
           including a period (.) which separates the NetId from the
           NAU name if the netId is present.

           The reserved value '*ALL' indicates that the mode definition
           applies to all partner LUs for the SNA node identified by
           snaNodeAdminIndex, and not just to a single partner LU.

           Row creation conventions:

             When row creation is attempted, the agent must verify that
             the partner LU name in the new row is not the same as in
             an existing mode definition for the same mode name and the





Expires December 1994                                          [Page 38]




Internet Draft                  APPC MIB                   July 18, 1994


             same local LU name. If it is, the creation must fail.
             Implementations that do not support definition of modes
             on an LU-by-LU basis will reject any attempt to set this
             object to a value other than '*ALL'."

      ::= { appcModeAdminEntry 4 }

appcModeAdminCosName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..8))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the class of service (COS) name associated with
           this mode.  If the implementation does not support COS names,
           a null string is returned."

      ::= { appcModeAdminEntry 5 }

appcModeAdminDefType   OBJECT-TYPE
      SYNTAX INTEGER {
                     sysdef(1),
                     dynamic(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Indicates whether the mode definition was specified in the
           nodes system definitions or was dynamically created."

      ::= { appcModeAdminEntry 6 }

appcModeAdminSessEndTpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..64))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the name of the transaction program (TP) to be invoked
          when a session using this mode is deactivated or ended.  If no
          such TP is defined, this object is a null string.  When the
          TP name consists entirely of displayable EBCDIC codepoints,
          it is mapped directly to the equivalent ASCII display string.
          However, registered TP names always have a non-displayable EBCDIC
          codepoint (value less than or equal to x'3F') as the first
          character, so they cannot be directly mapped to an ASCII display
          string.  These TP names are converted to a display string that





Expires December 1994                                          [Page 39]




Internet Draft                  APPC MIB                   July 18, 1994


          is equivalent to a hexadecimal display of the EBCDIC codepoints.
          For example, the 2-byte TP name x'06F1' (CNOS) is converted to the
          4-byte ASCII display string '06F1'. "

      ::= { appcModeAdminEntry 7 }

appcModeAdminMaxSessLimit    OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the maximum value that the local LU is to use, during
           CNOS processing, for the session limit. The local LU, as a target
           LU, will negotiate a higher session limit it receives in the CNOS
           request down to this maximum value. The local LU, as a source LU,
           will restrict the session limit it sends in a CNOS request to a
           value less than or equal to this maximum value."

      ::= { appcModeAdminEntry 8 }

appcModeAdminConWinAutoActLimit    OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the limit on the number of contention winner sessions
          to be automatically activated when the minimum number of
          contention winner sessions increases (as a result of CNOS
          processing). The actual number of sessions activated is the
          lesser of this value and the new minimum number of contention
          winner sessions. "

      ::= { appcModeAdminEntry 9 }

appcModeAdminAdaptivePacing OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }

      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies whether adaptive session-level pacing is supported.
           This is only supported for APPN nodes.





Expires December 1994                                          [Page 40]




Internet Draft                  APPC MIB                   July 18, 1994


           This value is used for negotiation during session activations
           (SNA BIND)."

      ::=  { appcModeAdminEntry 10 }

appcModeAdminRecvPacWinSz OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the size of the receive pacing window. This value is
           used for negotiation during session activations (SNA BIND).

           If appcModeAdminAdaptivePacing is yes, then this value is set to
           0. If appcModeAdminAdaptivePacing is no and this value is set to
           0, then pacing is not supported.

           The meaning of this value when set to 0 is as follows:
              appcModeAdminAdaptivePacing = yes    No limit on window size
              appcModeAdminAdaptivePacing = no     No pacing is supported"

      ::=  { appcModeAdminEntry 11 }

appcModeAdminSendPacWinSz OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the size of the send pacing window. This value is
           used for negotiation during session activations (SNA BIND).

           If appcModeAdminAdaptivePacing is yes,then this value is set to
           0.If appcModeAdminAdaptivePacing is no and this value is set to
           0, then pacing is not supported.

           The meaning of this value when set to 0 is as follows:
              appcModeAdminAdaptivePacing = yes    No limit on window size
              appcModeAdminAdaptivePacing = no     No pacing is supported"

      ::=  { appcModeAdminEntry 12 }

appcModeAdminPrefRecvRuSz OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current





Expires December 1994                                          [Page 41]




Internet Draft                  APPC MIB                   July 18, 1994


      DESCRIPTION
          "Specifies the preferred receive RU (Request Unit) size of
           normal-flow requests on the sessions. This value must be less
           than or equal to the value specified in appcModeAdminRecvRuSzUpBnd
           and greater than or equal to the value specified in
           appcModeAdminRecvRuSzLoBnd.

           The local LU specifies this value for the receive maximum RU
           size in session activation (SNA BIND) requests and responses.
           It will allow negotiation up to the appcModeAdminRecvRuSzUpBnd
           value or down to the appcModeAdminRecvRuSzLoBnd value."

      ::=  { appcModeAdminEntry 13 }

appcModeAdminPrefSendRuSz OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the preferred send RU (Request Unit) size of
           normal-flow requests on the sessions. This value must be less
           than or equal to the value specified in appcModeAdminSendRuSzUpBnd
           and greater than or equal to the value specified in
           appcModeAdminSendRuSzLoBnd.

           The local LU specifies this value for the send maximum RU
           size in session activation (SNA BIND) requests and responses.
           It will allow negotiation up to the appcModeAdminSendRuSzUpBnd
           value or down to the appcModeAdminSendRuSzLoBnd value."

      ::=  { appcModeAdminEntry 14 }

appcModeAdminRecvRuSzUpBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the upper bound for the maximum receive RU
           (Request Unit) size of normal-flow requests. This is used
           for negotiation during session activations (SNA BIND). "

      ::=  { appcModeAdminEntry 15 }

appcModeAdminSendRuSzUpBnd OBJECT-TYPE
      SYNTAX Integer32





Expires December 1994                                          [Page 42]




Internet Draft                  APPC MIB                   July 18, 1994


      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
         "Specifies the upper bound for the maximum send RU (Request Unit)
           size of normal-flow requests. This is used for negotiation
           during session activations (SNA BIND). "

      ::=  { appcModeAdminEntry 16 }

appcModeAdminRecvRuSzLoBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
       "Specifies the lower bound for the maximum receive RU
           (Request Unit) size of normal-flow requests. This is used
           for negotiation during session activations (SNA BIND). "

      ::=  { appcModeAdminEntry 17 }

appcModeAdminSendRuSzLoBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the lower bound for the maximum send RU
           (Request Unit) size of normal-flow requests. This is used
           for negotiation during session activations (SNA BIND). "

      ::=  { appcModeAdminEntry 18 }

appcModeAdminDfSyncLvl      OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     noneConfirm(2),
                     noneConfirmSyncPoint(3)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the sync level support. This value is used for
           negotiation during session activations (SNA BIND).

                none             -       No sync level is supported.
                noneConfirm      -       None and Confirm levels supported.





Expires December 1994                                          [Page 43]




Internet Draft                  APPC MIB                   July 18, 1994


                noneConfirmSyncPoint -   All sync levels is supported.
           "

      ::=  { appcModeAdminEntry 19 }

appcModeAdminDfCrypto      OBJECT-TYPE
      SYNTAX INTEGER {
                     notsupported(1),
                     mandatory(2),
                     selective(3)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies whether session-level cryptography is supported.
           This value is used for negotiation during session activations
           (SNA BIND).
                notsupported    -   Specifies session-level cryptography
                                        is not to be used.
                mandatory       -   Specifies session-level cryptography
                                        must be used.
                selective       -   Specifies session-level cryptography
                                        is required just on selected requests
                                        flowing on the sessions."

      ::=  { appcModeAdminEntry 20 }

appcModeAdminSingSessReinit        OBJECT-TYPE
      SYNTAX INTEGER {
                     operatorControlled(1),
                     primaryOnly(2),
                     secondaryOnly(3),
                     primaryOrSecondary(4)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the responsibility for session reinitiation of a single
           session with the remote LU (when the session goes down).
           The local LU uses this parameter to
           specify the session reinitiation responsibility in session
           activation (SNA BIND) requests and responses. The value
           is only supported if the remote LU is defined to
           not support parallel sessions (i.e., appcInRluDefParaSessSup is
           set to no).





Expires December 1994                                          [Page 44]




Internet Draft                  APPC MIB                   July 18, 1994


                operatorControlled - specifies that neither LU will
                                     automatically attempt to reinitiate
                                     the session. The operator on either
                                     side will manually reactivate the
                                     session.
                                     A contention race (both side
                                     reinitiating at the same time) is won
                                     by the LU with the lexigraphically
                                     greater fully-qualified LU name.
                primaryOnly        - specifies that the primary LU will
                                     automatically attempt to reinitiate the
                                     session.
                secondaryOnly      - specifies that the secondary LU will
                                     automatically attempt to reinitiate the
                                     session.
                primaryOrSecondary - specifies that either the primary or
                                     the secondary may automatically attempt
                                     to reinitiate the session. A contention
                                     race is handled the same way as with
                                     operatorControlled.
           "
      ::=  { appcModeAdminEntry 21 }

appcModeAdminAltCode       OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies whether an alternate code is supported.
                yes - ASCII
                no  - EBCDIC
          This value is used for negotiation during session activations
          (SNA BIND)."

      ::=  { appcModeAdminEntry 22 }

appcModeAdminCompression OBJECT-TYPE
      SYNTAX INTEGER {
                    prohibited(1),
                    required(2),
                    negotiable(3)
                    }





Expires December 1994                                          [Page 45]




Internet Draft                  APPC MIB                   July 18, 1994


      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
         "Specifies whether compression is supported. The local LU uses
          this value for negotiation during session activation
          (SNA BIND).

              prohibited    -    specifies that no compression is to be used.
              required      -    specifies that compression is required.
              negotiable    -    specifies that the usage of compression
                                 is to be negotiated between the LU's. The
                                 level of compression is also negotiated."

      ::=  { appcModeAdminEntry 23 }

appcModeAdminInBoundCompLevel OBJECT-TYPE
      SYNTAX INTEGER {
                    none(1),
                    rle(2),
                    lz9(3),
                    lz10(4),
                    lz12(5)
                    }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
         "Specifies the maximum level of compression supported for inbound
          data. The local LU uses this value in conjunction with
          appcModeAdminCompression for negotiation during session activation
          (SNA BIND).

              none  -    specifies that no compression is to be used.
              rle   -    specifies run-length encoding compression
                         in which a 1 or 2 byte sequence substitution is
                         used for each repeated run of the same character.
              lz9   -    specifies Lempel-Ziv-like compression in which
                         9 bit codes are used to substitute repeated
                         substrings in the data stream. These codes are
                         indices that refer to entries in a common dictionary
                         generated adaptively at both sender and receiver as
                         the data flows and compression occurs. The larger
                         of number bits used for the code, the more storage
                         space is required for the dictionary, but the
                         larger the compression ratio.
              lz10  -    specifies a 10 bit code Lempel-Ziv-like





Expires December 1994                                          [Page 46]




Internet Draft                  APPC MIB                   July 18, 1994


                                compression.
              lz12  -    specifies a 12 bit code Lempel-Ziv-like
                                compression."

      ::=  { appcModeAdminEntry 24 }

appcModeAdminOutBoundCompLevel OBJECT-TYPE
      SYNTAX INTEGER {
                    none(1),
                    rle(2),
                    lz9(3),
                    lz10(4),
                    lz12(5)
                    }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
         "Specifies the maximum level of compression supported for outbound
          data. The local LU uses this value in conjunction with
          appcModeAdminCompression for negotiation during session activation
          (SNA BIND).

              none  -    specifies that no compression is to be used.
              rle   -    specifies run-length encoding compression
                         in which a 1 or 2 byte sequence substitution is
                         used for each repeated run of the same character.
              lz9   -    specifies Lempel-Ziv-like compression in which
                         9 bit codes are used to substitute repeated
                         substrings in the data stream. These codes are
                         indices that refer to entries in a common dictionary
                         generated adaptively at both sender and receiver as
                         the data flows and compression occurs. The larger
                         of number bits used for the code, the more storage
                         space is required for the dictionary, but the
                         larger the compression ratio.
              lz10  -    specifies a 10 bit code Lempel-Ziv-like
                                compression.
              lz12  -    specifies a 12 bit code Lempel-Ziv-like
                                compression."

      ::=  { appcModeAdminEntry 25 }

appcModeAdminCompRleBeforeLZ OBJECT-TYPE
      SYNTAX INTEGER {
                    yes(1),





Expires December 1994                                          [Page 47]




Internet Draft                  APPC MIB                   July 18, 1994


                    no(2)
                    }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
         "Specifies whether run-length encoding is to be applied to the
          data before applying Lempel-Ziv-like compression. The local LU uses
          this value for negotiation during session activation
          (SNA BIND). This parameter is only supported if LZ compression
          is used."

      ::=  { appcModeAdminEntry 26 }

appcModeAdminRowStatus OBJECT-TYPE
          SYNTAX  RowStatus
          MAX-ACCESS  read-create
          STATUS  current
          DESCRIPTION
                  "This object is used by a Management Station to
                  create or delete the row entry in the appcModeAdminTable
                  following the RowStatus textual convention.

                  <Need description in SNA terms of what is expected when
                  a row is created or deleted>
                  "

      ::=  { appcModeAdminEntry 27 }

-- *********************************************************************
--    APPC Mode Oper Table
-- ---------------------------------------------------------------------
-- This table contains operational information about session mode entries
--
--  Can we put CNOS support into the entries in this table?  How would
--  it be done?  Admin values for each oper value on session limits and
--  then have a AdminCnos object that would trigger the verb?
--
-- *********************************************************************
appcModeOperTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcModeOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Operational APPC Mode Information"





Expires December 1994                                          [Page 48]




Internet Draft                  APPC MIB                   July 18, 1994


      ::= { appcLu 5 }

appcModeOperEntry OBJECT-TYPE
      SYNTAX AppcModeOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC mode operational information table. This entry
           does not augment the appcModeAdminEntry, but reflects an actual
           operational mode for a given local LU-remote LU pair."

      INDEX
             { snaNodeAdminIndex,
               snaLuAdminLuIndex,
               appcParLuAdminIndex,
               appcModeAdminIndex }

      ::= { appcModeOperTable 1 }


AppcModeOperEntry     ::= SEQUENCE {
   appcModeOperLluName              DisplayString,
   appcModeOperRluName              DisplayString,
   appcModeOperModeName             DisplayString,
   appcModeOperCosName              DisplayString,
   appcModeOperDefType              INTEGER,
   appcModeOperSessEndTpName        DisplayString,
   appcModeOperSessLimit            Gauge32,
   appcModeOperMaxSessLimit         Gauge32,
   appcModeOperConWinAutoActLimit   Gauge32,
   appcModeOperDrainSelf            INTEGER,
   appcModeOperDrainPart            INTEGER,
   appcModeOperMinCwinLimit         Gauge32,
   appcModeOperMinClosLimit         Gauge32,
   appcModeOperRecvPacWinSz         Gauge32,
   appcModeOperSendPacWinSz         Gauge32,
   appcModeOperPrefRecvRuSz         Integer32,
   appcModeOperPrefSendRuSz         Integer32,
   appcModeOperRecvRuSzUpBnd        Integer32,
   appcModeOperSendRuSzUpBnd        Integer32,
   appcModeOperRecvRuSzLoBnd        Integer32,
   appcModeOperSendRuSzLoBnd        Integer32,
   appcModeOperDfSyncLvl            INTEGER,
   appcModeOperDfCrypto             INTEGER,
   appcModeOperSingSessReinit       INTEGER,





Expires December 1994                                          [Page 49]




Internet Draft                  APPC MIB                   July 18, 1994


   appcModeOperAltCode              INTEGER,
   appcModeOperCNOSNeg              INTEGER,
   appcModeOperActSess              Gauge32,
   appcModeOperPndSess              Gauge32,
   appcModeOperActCwin              Gauge32,
   appcModeOperActClos              Gauge32,
   appcModeOperPndCwin              Gauge32,
   appcModeOperPndClos              Gauge32,
   appcModeOperPtmCwin              Gauge32,
   appcModeOperPtmClos              Gauge32,
   appcModeOperFreeSessLst          Gauge32,
   appcModeOperWaitReqLst           Gauge32,
   appcModeOperCompression          INTEGER,
   appcModeOperInBoundCompLevel     INTEGER,
   appcModeOperOutBoundCompLevel    INTEGER,
   appcModeOperCompRleBeforeLZ      INTEGER
                                   }

appcModeOperLluName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the fully-qualified local LU name.  This field is
           from 1 to 17 characters in length, in the form of NetID.LUName.
           The period(.)  is not present when there is no NetID."

      ::= { appcModeOperEntry 1 }

appcModeOperRluName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the fully-qualified remote LU name.
           This field is from 1 to 17 characters in
           length, in the form of NetID.LUName. The period(.) is not present
           when there is no NetID."

      ::= { appcModeOperEntry 2 }

appcModeOperModeName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..8))
      MAX-ACCESS read-only
      STATUS current





Expires December 1994                                          [Page 50]




Internet Draft                  APPC MIB                   July 18, 1994


      DESCRIPTION
          "Specifies the mode name. A mode defines the characteristics
           for a group of sessions. The mode name can be blank (8
           space characters).

           Row creation conventions:

             When row creation is attempted, the agent must verify that
             the mode name in the new row is not the same as an existing
             mode definition.  If it is, the creation must fail.

             If the desired mode name is the default BLANK mode name,
             the appcModeAdminModeName object must be set to 8 spaces.
             A set with a shorter string of space characters will be
             padded to 8 spaces by the agent.

           Display convention

             A get operation against this object will return the string
             'BLANK' if the actual value is 8 spaces.  This convention
             is intended to prevent operator confusion and is consistent
             with the practice of some existing implementations.
            "

      ::= { appcModeOperEntry 3 }

appcModeOperCosName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the class of service (COS) name associated with
           this mode.  If the implementation does not support COS names,
           a zero-length string is returned."

      ::= { appcModeOperEntry 4 }

appcModeOperDefType   OBJECT-TYPE
      SYNTAX INTEGER {
                     sysdef(1),
                     dynamic(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION





Expires December 1994                                          [Page 51]




Internet Draft                  APPC MIB                   July 18, 1994


          "Indicates whether the mode definition was specified in the
           nodes system definitions or was dynamically created."

      ::= { appcModeOperEntry 5 }

appcModeOperSessEndTpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..64))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the name of the transaction program (TP) to be invoked
          when a session using this mode is deactivated or ended. If the
          name is NULL, no transaction program is invoked. When the
          TP name consists entirely of displayable EBCDIC codepoints,
          it is mapped directly to the equivalent ASCII display string.
          However, registered TP names always have a non-displayable EBCDIC
          codepoint (value less than or equal to x'3F') as the first
          character, so they cannot be directly mapped to an ASCII display
          string.  These TP names are converted to a display string that
          is equivalent to a hexadecimal display of the EBCDIC codepoints.
          For example, the 2-byte TP name x'06F1' (CNOS) is converted to the
          4-byte ASCII display string '06F1'. "

      ::= { appcModeOperEntry 6 }

appcModeOperSessLimit    OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the current session limit of this mode as
           negotiated through APPC CNOS (Change Number of Sessions)
           processing. Identifies the total number of sessions that can
           be established between the local and remote LU using this mode."

      ::= { appcModeOperEntry 7 }

appcModeOperMaxSessLimit    OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the maximum value that the local LU is to use, during
           CNOS processing, for the session limit. The local LU, as a target
           LU, will negotiate a higher session limit it receives in the CNOS





Expires December 1994                                          [Page 52]




Internet Draft                  APPC MIB                   July 18, 1994


           request down to this maximum value. The local LU, as a source LU,
           will restrict the session limit it sends in a CNOS request to a
           value less than or equal to this maximum value."

      ::= { appcModeOperEntry 8 }

appcModeOperConWinAutoActLimit    OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the limit on the number of contention winner sessions
          to be automatically activated when the minimum number of
          contention winner sessions increases (as a result of CNOS
          processing). The actual number of sessions activated is the
          lesser of this value and the new minimum number of contention
          winner sessions. "

      ::= { appcModeOperEntry 9 }

appcModeOperDrainSelf    OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies whether the local LU is draining its conversations for
          this mode. Whan a mode session limit is reset (via a CNOS
          RESET_SESSION_LIMIT request), the local LU could be set to
          process all queued conversations before deactivating all of
          the sessions (using the SNA Bracket Initiation Stopped or BIS
          protocol). "

      ::= { appcModeOperEntry 10 }

appcModeOperDrainPart    OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION





Expires December 1994                                          [Page 53]




Internet Draft                  APPC MIB                   July 18, 1994


         "Specifies whether the remote LU is draining its conversations for
          this mode. Whan a mode session limit is reset (via a CNOS
          RESET_SESSION_LIMIT request), the remote LU could be set to
          process all queued conversations before deactivating all of
          the sessions (using the SNA Bracket Initiation Stop or BIS
          protocol). "

      ::= { appcModeOperEntry 11 }

appcModeOperMinCwinLimit OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the minimum contention winner sessions limit that
           was negotiated via CNOS processing."

      ::= { appcModeOperEntry 12 }

appcModeOperMinClosLimit OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the minimum contention loser sessions limit that
           was negotiated via CNOS processing."

      ::=  { appcModeOperEntry 13 }

appcModeOperRecvPacWinSz OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the size of the receive pacing window. This value is
           used for negotiation during session activations (SNA BIND)."

      ::=  { appcModeOperEntry 14 }

appcModeOperSendPacWinSz OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the size of the send pacing window. This value is





Expires December 1994                                          [Page 54]




Internet Draft                  APPC MIB                   July 18, 1994


           used for negotiation during session activations (SNA BIND)."

      ::=  { appcModeOperEntry 15 }

appcModeOperPrefRecvRuSz OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the preferred receive RU (Request Unit) size of
           normal-flow requests on the sessions. This value must be less
           than or equal to the value specified in appcModeOperRecvRuSzUpBnd
           and greater than or equal to the value specified in
           appcModeOperRecvRuSzLoBnd.

           The local LU specifies this value for the receive maximum RU
           size in session activation (SNA BIND) requests and responses.
           It will allow negotiation up to the appcModeOperRecvRuSzUpBnd
           value or down to the appcModeOperRecvRuSzLoBnd value."

      ::=  { appcModeOperEntry 16 }

appcModeOperPrefSendRuSz OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the preferred send RU (Request Unit) size of
           normal-flow requests on the sessions. This value must be less
           than or equal to the value specified in appcModeOperSendRuSzUpBnd
           and greater than or equal to the value specified in
           appcModeOperSendRuSzLoBnd.

           The local LU specifies this value for the send maximum RU
           size in session activation (SNA BIND) requests and responses.
           It will allow negotiation up to the appcModeOperSendRuSzUpBnd
           value or down to the appcModeOperSendRuSzLoBnd value."

      ::=  { appcModeOperEntry 17 }

appcModeOperRecvRuSzUpBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION





Expires December 1994                                          [Page 55]




Internet Draft                  APPC MIB                   July 18, 1994


          "Specifies the upper bound for the maximum receive RU
           (Request Unit) size of normal-flow requests. This is used
           for negotiation during session activations (SNA BIND). "

      ::=  { appcModeOperEntry 18 }

appcModeOperSendRuSzUpBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
         "Specifies the upper bound for the maximum send RU (Request Unit)
           size of normal-flow requests. This is used for negotiation
           during session activations (SNA BIND). "

      ::=  { appcModeOperEntry 19 }

appcModeOperRecvRuSzLoBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
       "Specifies the lower bound for the maximum receive RU
           (Request Unit) size of normal-flow requests. This is used
           for negotiation during session activations (SNA BIND). "

      ::=  { appcModeOperEntry 20 }

appcModeOperSendRuSzLoBnd OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the lower bound for the maximum send RU
           (Request Unit) size of normal-flow requests. This is used
           for negotiation during session activations (SNA BIND). "

      ::=  { appcModeOperEntry 21 }

appcModeOperDfSyncLvl      OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     noneConfirm(2),
                     noneConfirmSyncPoint(3)
                     }





Expires December 1994                                          [Page 56]




Internet Draft                  APPC MIB                   July 18, 1994


      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the sync level support. This value is used for
           negotiation during session activations (SNA BIND).

                none             -       No sync level is supported.
                noneConfirm      -       None and Confirm level supported.
                noneConfirmSyncPoint -   All sync level is supported.
           "

      ::=  { appcModeOperEntry 22 }

appcModeOperDfCrypto      OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies whether cryptography is supported. This value is used
           for negotiation during session activations (SNA BIND)."

      ::=  { appcModeOperEntry 23 }

appcModeOperSingSessReinit        OBJECT-TYPE
      SYNTAX INTEGER {
                     operatorControlled(1),
                     primaryOnly(2),
                     secondaryOnly(3),
                     primaryOrSecondary(4)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the responsibility for session reinitiation of a
           single session with the remote LU (when the session goes
           down).  The local LU uses this parameter to specify the
           session reinitiation responsibility in session activation (SNA
           BIND) requests and responses.  The value is only supported if
           the remote LU is defined to not support parallel sessions
           (i.e., appcInRluDefParaSessSup is set to no).

                operatorControlled - specifies that neither LU will





Expires December 1994                                          [Page 57]




Internet Draft                  APPC MIB                   July 18, 1994


                                     automatically attempt to reinitiate
                                     the session. The operator on either
                                     side will manually reactivate the
                                     session.
                                     A contention race (both side
                                     reinitiating at the same time) is won
                                     by the LU with the lexigraphically
                                     greater fully-qualified LU name.
                primaryOnly        - specifies that the primary LU will
                                     automatically attempt to reinitiate the
                                     session.
                secondaryOnly      - specifies that the secondary LU will
                                     automatically attempt to reinitiate the
                                     session.
                primaryOrSecondary - specifies that either the primary or
                                     the secondary may automatically attempt
                                     to reinitiate the session. A contention
                                     race is handled the same way as with
                                     operatorControlled.
           "
      ::=  { appcModeOperEntry 24 }

appcModeOperAltCode       OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies whether an alternate code is supported.
                yes - ASCII
                no  - EBCDIC
          This value is used for negotiation during session activations
          (SNA BIND)."

      ::=  { appcModeOperEntry 25 }

appcModeOperCNOSNeg OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-only
      STATUS current





Expires December 1994                                          [Page 58]




Internet Draft                  APPC MIB                   July 18, 1994


      DESCRIPTION
          "Specifies whether CNOS negotiation is in process. CNOS negotiation
           is used to set or change the various session limits for a mode."

      ::=  { appcModeOperEntry 26 }

appcModeOperActSess        OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the total number of currently active sessions
          between the local LU and the partner LU for this mode."

      ::=  { appcModeOperEntry 27 }

appcModeOperPndSess        OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the number of pending sessions (waiting for session
          activation to complete."

      ::=  { appcModeOperEntry 28 }


appcModeOperActCwin        OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the number of active contention winner sessions."

      ::=  { appcModeOperEntry 29 }

appcModeOperActClos        OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the number of active contention loser sessions."

      ::=  { appcModeOperEntry 30 }





Expires December 1994                                          [Page 59]




Internet Draft                  APPC MIB                   July 18, 1994


appcModeOperPndCwin        OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the number of contention winner sessions that are
           pending activation."

      ::=  { appcModeOperEntry 31 }

appcModeOperPndClos        OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the number of contention loser sessions that are
           pending activation."

      ::=  { appcModeOperEntry 32 }

appcModeOperPtmCwin        OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the number of contention winner sessions that are
           pending termination."

      ::=  { appcModeOperEntry 33 }

appcModeOperPtmClos        OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the number of contention loser sessions that are
           pending termination."

      ::=  { appcModeOperEntry 34 }

appcModeOperFreeSessLst    OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION





Expires December 1994                                          [Page 60]




Internet Draft                  APPC MIB                   July 18, 1994


          "Specifies the size of the free session list. This is the number
           of sessions that are available for conversations."

      ::=  { appcModeOperEntry 35 }

appcModeOperWaitReqLst     OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Specifies the size of the waiting request list. This is the
           number of allocate requests that are waiting (queued) for an
           available session with this mode."

      ::=  { appcModeOperEntry 36 }

appcModeOperCompression OBJECT-TYPE
      SYNTAX INTEGER {
                    prohibited(1),
                    required(2),
                    negotiable(3)
                    }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
         "Specifies whether compression is supported. The local LU uses
          this value for negotiation during session activation
          (SNA BIND).

              prohibited    -    specifies that no compression is to be used.
              required      -    specifies that compression is required.
              negotiable    -    specifies that the usage of compression
                                 is to be negotiated between the LU's. The
                                 level of compression is also negotiated."

      ::=  { appcModeOperEntry 37 }

appcModeOperInBoundCompLevel OBJECT-TYPE
      SYNTAX INTEGER {
                    none(1),
                    rle(2),
                    lz9(3),
                    lz10(4),
                    lz12(5)
                    }





Expires December 1994                                          [Page 61]




Internet Draft                  APPC MIB                   July 18, 1994


      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
         "Specifies the maximum level of compression supported for inbound
          data. The local LU uses this value in conjunction with
          appcModeOperCompression for negotiation during session activation
          (SNA BIND).

              none  -    specifies that no compression is to be used.
              rle   -    specifies run-length encoding compression
                         in which a 1 or 2 byte sequence substitution is
                         used for each repeated run of the same character.
              lz9   -    specifies Lempel-Ziv-like compression in which
                         9 bit codes are used to substitute repeated
                         substrings in the data stream. These codes are
                         indices that refer to entries in a common dictionary
                         generated adaptively at both sender and receiver as
                         the data flows and compression occurs. The larger
                         of number bits used for the code, the more storage
                         space is required for the dictionary, but the
                         larger the compression ratio.
              lz10  -    specifies a 10 bit code Lempel-Ziv-like
                                compression.
              lz12  -    specifies a 12 bit code Lempel-Ziv-like
                                compression."

      ::=  { appcModeOperEntry 38 }

appcModeOperOutBoundCompLevel OBJECT-TYPE
      SYNTAX INTEGER {
                    none(1),
                    rle(2),
                    lz9(3),
                    lz10(4),
                    lz12(5)
                    }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
         "Specifies the maximum level of compression supported for outbound
          data. The local LU uses this value in conjunction with
          appcModeOperCompression for negotiation during session activation
          (SNA BIND).

              none  -    specifies that no compression is to be used.





Expires December 1994                                          [Page 62]




Internet Draft                  APPC MIB                   July 18, 1994


              rle   -    specifies run-length encoding compression
                         in which a 1 or 2 byte sequence substitution is
                         used for each repeated run of the same character.
              lz9   -    specifies Lempel-Ziv-like compression in which
                         9 bit codes are used to substitute repeated
                         substrings in the data stream. These codes are
                         indices that refer to entries in a common dictionary
                         generated adaptively at both sender and receiver as
                         the data flows and compression occurs. The larger
                         of number bits used for the code, the more storage
                         space is required for the dictionary, but the
                         larger the compression ratio.
              lz10  -    specifies a 10 bit code Lempel-Ziv-like
                                compression.
              lz12  -    specifies a 12 bit code Lempel-Ziv-like
                                compression."

      ::=  { appcModeOperEntry 39 }

appcModeOperCompRleBeforeLZ OBJECT-TYPE
      SYNTAX INTEGER {
                    yes(1),
                    no(2)
                    }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
         "Specifies whether run-length encoding is to be applied to the
          data before applying Lempel-Ziv-like compression. The local LU uses
          this value for negotiation during session activation
          (SNA BIND). This parameter is only supported if LZ compression
          is used."

      ::=  { appcModeOperEntry 40 }

-- *********************************************************************
--    APPC  TP Admin Table
-- ---------------------------------------------------------------------
-- This table contains information about configured remotely attachable
-- transaction programs.
-- *********************************************************************
appcTpAdminTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcTpAdminEntry
      MAX-ACCESS not-accessible
      STATUS current





Expires December 1994                                          [Page 63]




Internet Draft                  APPC MIB                   July 18, 1994


      DESCRIPTION
           "APPC Local TP Table"

      ::= { appcTp 1 }

appcTpAdminEntry OBJECT-TYPE
      SYNTAX AppcTpAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC Local TP Information Table."

      INDEX
             { snaNodeAdminIndex,
               appcTpAdminIndex  }

      ::= { appcTpAdminTable 1 }

AppcTpAdminEntry     ::= SEQUENCE {
       appcTpAdminIndex           Integer32,
       appcTpAdminLocLuName       DisplayString,
       appcTpAdminTpName          DisplayString,
       appcTpAdminFileSpec        DisplayString,
       appcTpAdminStartParm       DisplayString,
       appcTpAdminTpOperation     INTEGER,
       appcTpAdminQdepthLimit     Gauge32,
       appcTpAdminInAttachTimeout Integer32,
       appcTpAdminRcvAllocTimeout Integer32,
       appcTpAdminDefType         INTEGER,
       appcTpAdminSyncLvl         INTEGER,
       appcTpAdminInstLmt         Integer32,
       appcTpAdminStatus          INTEGER,
       appcTpAdminLongRun         INTEGER,
       appcTpAdminPfCnos          INTEGER,
       appcTpAdminPfSessCntl      INTEGER,
       appcTpAdminPfDefine        INTEGER,
       appcTpAdminPfDisplay       INTEGER,
       appcTpAdminPfAllocSer      INTEGER,
       appcTpAdminConvType        INTEGER,
       appcTpAdminConvSecReq      INTEGER,
       appcTpAdminSecLvl          INTEGER,
       appcTpAdminVerPip          INTEGER,
       appcTpAdminPipSubNum       INTEGER,
       appcTpAdminRowStatus       RowStatus
       }





Expires December 1994                                          [Page 64]




Internet Draft                  APPC MIB                   July 18, 1994


appcTpAdminIndex OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Index for entry in TP administrative table."

      ::= { appcTpAdminEntry 1 }

appcTpAdminLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The SNA name of the local LU to which this TP definition
           applies. This field is from 1 to 17 characters in length,
           including a period (.) which separates the NetId from the NAU
           name if the netId is present.

           The reserved value '*ALL' indicates that the TP definition
           applies to all local LUs, and not just to a single local LU.

           Row creation conventions:

             When row creation is attempted, the agent must verify that
             the combination of requested local LU name and TP name is
             unique for the SNA node.  If it is not, the agent must
             reject the attempt.  Implementations that do not support
             definition of TPs on an LU-by-LU basis will reject any
             attempt to set this object to a value other than '*ALL'."

      ::= { appcTpAdminEntry 2 }

appcTpAdminTpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..64))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The local transaction program name.

           When the TP name consists entirely of displayable EBCDIC
           codepoints, it is mapped directly to the equivalent ASCII
           display string.  However, registered TP names always have a
           non-displayable EBCDIC codepoint (value less than or equal to
           x'3F') as the first character, so they cannot be directly





Expires December 1994                                          [Page 65]




Internet Draft                  APPC MIB                   July 18, 1994


           mapped to an ASCII display string.  These TP names are
           converted to a display string that is equivalent to a
           hexadecimal display of the EBCDIC codepoints.  For example,
           the 2-byte TP name x'06F1' (CNOS) is converted to the 4-byte
           ASCII display string '06F1'.

           Row creation conventions:

             When row creation is attempted, the agent must verify that
             the combination of requested local LU name and TP name is
             unique for the SNA node.  If it is not, the agent must
             reject the attempt."

      ::= { appcTpAdminEntry 3 }

appcTpAdminFileSpec OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..80))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The local file specification of the transaction program.
          May be a zero-length string if not applicable."

      ::= { appcTpAdminEntry 4 }

appcTpAdminStartParm OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..128))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "A parameter string passed to the transaction program when it
           is started.  May be a zero-length string if not supported. "

      ::= { appcTpAdminEntry 5 }

appcTpAdminTpOperation   OBJECT-TYPE
      SYNTAX INTEGER {
                 queuedOperatorStarted(1),
                 queuedOperatorPreloaded(2),
                 queuedAmStarted(3),
                 nonqueuedAmStarted(4)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION





Expires December 1994                                          [Page 66]




Internet Draft                  APPC MIB                   July 18, 1994


                "Specifies how the program will be started.

                 queuedOperatorStarted -- Specifies that one version of
                       the program will be run at a time.  If an incoming
                       attach arrives and the program has not been
                       started yet, APPC will issue a message to the
                       operator to start the specified program.
                       Subsequent attaches that arrive while the program
                       is active will be queued.

                 queuedOperatorPreloaded -- Specifies that one version
                       of the program will be run at a time.  If an
                       incoming attach arrives and the program has not
                       been started yet, the Attach will be rejected.
                       The APPC attach manager determines that a TP has
                       started upon reception of an APPC RECEIVE_ALLOCATE
                       verb or a CPI Communications program
                       Accept_Conversation (CMACCP) call.  No message is
                       sent to the operator.  Subsequent attaches that
                       arrive while the program is active are queued.

                 queuedAmStarted -- Specifies that one version of the
                       program will be run at a time and will be started
                       by the APPC attach manager.  Subsequent attaches
                       that arrive while the program is active will be
                       queued.

                 nonqueuedAmStarted -- Specifies that multiple copies of
                       the program will be run at a time and will be
                       started by the APPC attach manager."

      ::= { appcTpAdminEntry 6 }

appcTpAdminQdepthLimit    OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
                "This object specifies the number of incoming attaches
                 that will be queued before being rejected.
                 This parameter is meaningful only when
                 appcTpAdminTpOperation has one of the following values:

                     queuedOperatorStarted
                     queuedOperatorPreloaded





Expires December 1994                                          [Page 67]




Internet Draft                  APPC MIB                   July 18, 1994


                     queuedAmStarted

                 The object has a value of zero otherwise."

      ::= { appcTpAdminEntry 7 }

appcTpAdminInAttachTimeout OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
                 "This object specifies the number of seconds incoming
                 attaches will be queued waiting for an APPC program to
                 issue a RECEIVE_ALLOCATE verb or for a CPI
                 Communications program to issue an Accept_Conversation
                 (CMACCP) call.  This parameter is meaningful only when
                 appcTpAdminTpOperation has one of the following values:

                     queuedOperatorStarted
                     queuedOperatorPreloaded
                     queuedAmStarted

                 A value of zero indicates that there is no timeout."

      ::= { appcTpAdminEntry 8 }

appcTpAdminRcvAllocTimeout OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
                 "This object specifies the number of seconds an APPC
                 program's RECEIVE_ALLOCATE verb or a CPI Communications
                 program's Accept_Conversation (CMACCP) call will wait
                 for an incoming attach to arrive.

                 A value of zero indicates that there is no timeout."

      ::= { appcTpAdminEntry 9 }

appcTpAdminDefType      OBJECT-TYPE
      SYNTAX INTEGER {
                     sysdef(1),
                     dynamic(2)
                     }





Expires December 1994                                          [Page 68]




Internet Draft                  APPC MIB                   July 18, 1994


      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The TP definition type.
           Indicates whether the TP was specified in the nodes system
           definitions or was dynamically created to support an inbound
           attach."

      ::= { appcTpAdminEntry 10 }

appcTpAdminSyncLvl       OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     confirm(2),
                     noneAndConfirm(3),
                     syncPoint(4),
                     noneAndSyncPoint(5),
                     confirmAndSyncPoint(6),
                     all(7)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
                 "Indicates the synchronization level or levels that the
                 transaction program supports.  "

      ::= { appcTpAdminEntry 11 }

appcTpAdminInstLmt       OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The maximum number of concurrent instances of this transaction
           program that will be supported for a local LU.  A value of
           zero indicates that there is no limit."

      ::= { appcTpAdminEntry 12 }

appcTpAdminStatus        OBJECT-TYPE
      SYNTAX INTEGER {
                     enabled(1),
                     tempDisabled(2),
                     permDisabled(3)
                     }





Expires December 1994                                          [Page 69]




Internet Draft                  APPC MIB                   July 18, 1994


      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The TP status."

      ::= { appcTpAdminEntry 14 }

appcTpAdminLongRun       OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The long running transaction program."

      ::= { appcTpAdminEntry 15 }

appcTpAdminPfCnos        OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The TP Change Number of Sessions (CNOS) privileged
           function. This parameter specifies whether or not
           this program is allowed to issue CNOS verbs."

      ::= { appcTpAdminEntry 16 }


appcTpAdminPfSessCntl    OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The TP Session Control privileged
           function. This parameter specifies whether or not
           this program is allowed to issue ACTIVATE_SESSION





Expires December 1994                                          [Page 70]




Internet Draft                  APPC MIB                   July 18, 1994


           and DEACTIVATE_SESSION verbs."

      ::= { appcTpAdminEntry 17 }

appcTpAdminPfDefine      OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The TP Define privileged
           function. This parameter specifies whether or not
           this program is allowed to issue DEFINE and
           DELETE verbs."

      ::= { appcTpAdminEntry 18 }

appcTpAdminPfDisplay     OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The TP Display privileged
           function. This parameter specifies whether or not
           this program is allowed to issue DISPLAY verbs."

      ::= { appcTpAdminEntry 19 }

appcTpAdminPfAllocSer    OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The TP Allocate Service privileged
           function. This parameter specifies whether or not
           this program is allowed to issue the ALLOCATE
           verb with its TPN parameter specifying an SNA





Expires December 1994                                          [Page 71]




Internet Draft                  APPC MIB                   July 18, 1994


           service transmission program."

      ::= { appcTpAdminEntry 20 }

appcTpAdminConvType      OBJECT-TYPE
      SYNTAX INTEGER {
                     basic(1),
                     mapped(2),
                     basicOrMapped(3),
                     fdxBasic(4),
                     fdxMapped(5),
                     fdxBasicOrFdxMapped(6),
                     anyType(7)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
                "Specifies the type (basic or mapped) and style
                 (half-duplex or full-duplex) of conversations that will
                 be used by the TP.  This value is verified upon receipt
                 of an incoming attach.  The acceptable values are:

                 basic -- Indicates that this transaction program
                       supports basic conversations.

                 mapped -- Indicates that this transaction program
                       supports mapped conversations.

                 basicOrMapped -- Indicates that this transaction program
                       supports either basic or mapped conversations.

                 fdxBasic -- Indicates that this transaction program
                       supports basic conversation verbs for full-duplex
                       operation.

                 fdxMapped -- Indicates that this transaction program
                       supports mapped conversation verbs for full-duplex
                       operation.

                 fdxBasicOrFdxMapped -- Indicates that this transaction
                       program supports either basic or mapped
                       conversation verbs for full-duplex operation.

                 anyType -- Indicates that this transaction program
                       supports either basic or mapped conversation





Expires December 1994                                          [Page 72]




Internet Draft                  APPC MIB                   July 18, 1994


                       verbs, and can accept either a half-duplex or
                       full-duplex conversation, depending upon what
                       arrives on the incoming allocation request.
                 "

      ::= { appcTpAdminEntry 21 }

appcTpAdminConvSecReq    OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
                "Indicates whether conversation-level security
                 information is required on incoming attaches designating
                 this tp_name.  Conversation-level security verification
                 is always performed on those requests that include
                 security information.

                 yes -- Indicates that conversation-level security
                       information is required.  Attaches designating the
                       transaction program must carry a user_id and
                       either a password or an already verified
                       indicator.

                 no -- Indicates that no security information is
                       required.  Attaches designating the transaction
                       program can omit or include security information.
                 "

      ::= { appcTpAdminEntry 22 }

appcTpAdminSecLvl        OBJECT-TYPE
      SYNTAX INTEGER {
                     noAdditional(1),
                     specificUsers(2),
                     specificProfiles(3),
                     specificUserProfiles(4),
                     specificUserLus(5),
                     specificUserProfLus(6)
                     }
      MAX-ACCESS read-create
      STATUS current





Expires December 1994                                          [Page 73]




Internet Draft                  APPC MIB                   July 18, 1994


      DESCRIPTION
          "The TP security level parameter."

      ::= { appcTpAdminEntry 23 }

appcTpAdminVerPip        OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The TP verify pip parameter."

      ::= { appcTpAdminEntry 24 }

appcTpAdminPipSubNum     OBJECT-TYPE
      SYNTAX INTEGER {
                     yes(1),
                     no(2)
                     }
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "The TP number of pip subfields."

      ::= { appcTpAdminEntry 25 }

 appcTpAdminRowStatus OBJECT-TYPE
          SYNTAX  RowStatus
          MAX-ACCESS  read-create
          STATUS  current
          DESCRIPTION
                  "This object is used by a Management Station to
                  create or delete the row entry in the
                  appcTpAdminTable following the RowStatus textual
                  convention.

                  <Need description in SNA terms of what is expected
                  when a row is created or deleted>
                  "
      ::= { appcTpAdminEntry 26 }






Expires December 1994                                          [Page 74]




Internet Draft                  APPC MIB                   July 18, 1994


-- *********************************************************************
--    APPC  TP Oper Table
-- ---------------------------------------------------------------------
-- This table contains information about active transaction programs.
-- *********************************************************************
appcTpOperTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcTpOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC Local TP Table"

      ::= { appcTp 2 }

appcTpOperEntry OBJECT-TYPE
      SYNTAX AppcTpOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC Local TP Information Table."

      INDEX
             { snaNodeAdminIndex,
               snaLuAdminLuIndex,
               appcTpOperIndex  }

      ::= { appcTpOperTable 1 }

AppcTpOperEntry     ::= SEQUENCE {
      appcTpOperIndex            Integer32,
      appcTpOperAdminIndex       Integer32,
      appcTpOperTpId             DisplayString,
      appcTpOperLocLuName        DisplayString,
      appcTpOperTpName           DisplayString
       }

appcTpOperIndex OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Index for entry in TP Operational table."

      ::= { appcTpOperEntry 1 }





Expires December 1994                                          [Page 75]




Internet Draft                  APPC MIB                   July 18, 1994


appcTpOperAdminIndex OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Index of entry in TP administrative table associated with this
           TP. If this TP was started up locally (i.e., not by an incoming
           FMH5 ATTACH), it may not have an associated admin entry. In this
           case, the index is set to 0."

      ::= { appcTpOperEntry 2 }

appcTpOperTpId OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The internal identifier of the transaction program."

          ::= { appcTpOperEntry 3 }

appcTpOperLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The SNA name of the local LU associated with this active TP.
           This field is from 1 to 17 characters in length,
           including a period (.) which separates the NetId from the NAU
           name if the netId is present.

           This value is redundant, because the snaLuAdminLuIndex
           could be used to retrieve this value from the snaLuAdminTable,
           but the value is duplicated here to simplify management station
           application programming."

      ::= { appcTpOperEntry 4 }

appcTpOperTpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..64))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The local transaction program name.





Expires December 1994                                          [Page 76]




Internet Draft                  APPC MIB                   July 18, 1994


           When the TP name consists entirely of displayable EBCDIC
           codepoints, it is mapped directly to the equivalent ASCII
           display string.  However, registered TP names always have a
           non-displayable EBCDIC codepoint (value less than or equal to
           x'3F') as the first character, so they cannot be directly
           mapped to an ASCII display string.  These TP names are
           converted to a display string that is equivalent to a
           hexadecimal display of the EBCDIC codepoints.  For example,
           the 2-byte TP name x'06F1' (CNOS) is converted to the 4-byte
           ASCII display string '06F1'.

           This value is redundant, because the appcTpOperAdminIndex
           could be used to retrieve this value from the appcTpAdminTable,
           but the value is duplicated here to simplify management station
           application programming. If appcTpOperAdminIndex is 0 (i.e.,
           no entry in appcTpAdminTable), then this name is set to a NULL
           string."

      ::= { appcTpOperEntry 5 }

-- *********************************************************************
-- APPC Session Table - only objects specific to APPC session are defined
-- here.  The generic objects are defined in snanau mib.
-- ---------------------------------------------------------------------
-- This table contains information about APPC sessions
-- *********************************************************************
appcSessnTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcSessnEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC Session Table"

      ::= { appcSession 1 }

appcSessnEntry OBJECT-TYPE
      SYNTAX AppcSessnEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC Session Information Table.
           Indexed as NAU MIB session table."
      INDEX   { snaNodeAdminIndex,
                 snaLuAdminLuIndex,
                 snaLuSessnRluIndex,





Expires December 1994                                          [Page 77]




Internet Draft                  APPC MIB                   July 18, 1994


                 snaLuSessnIndex }
      ::= { appcSessnTable 1 }

AppcSessnEntry     ::= SEQUENCE {
      appcSessnPcidCpName           DisplayString,
      appcSessnPcid                 OCTET STRING,
      appcSessnPluIndicator         INTEGER,
      appcSessnLluName              DisplayString,
      appcSessnModeName             DisplayString,
      appcSessnCosName              DisplayString,
      appcSessnTransPriority        Integer32,
      appcSessnEnhanceSecSup        INTEGER,
      appcSessnSendPacingType       INTEGER,
      appcSessnSendRpc              Gauge32,
      appcSessnSendNxWndwSize       Gauge32,
      appcSessnRecvPacingType       INTEGER,
      appcSessnRecvRpc              Gauge32,
      appcSessnRecvNxWndwSize       Gauge32,
      appcSessnUpTime               TimeStamp,
      appcSessnCtrUpTime            TimeStamp,
      appcSessnP2SFmdPius           Counter32,
      appcSessnS2PFmdPius           Counter32,
      appcSessnP2SNonFmdPius        Counter32,
      appcSessnS2PNonFmdPius        Counter32,
      appcSessnP2SFmdBytes          Counter32,
      appcSessnS2PFmdBytes          Counter32,
      appcSessnP2SNonFmdBytes       Counter32,
      appcSessnS2PNonFmdBytes       Counter32,
      appcSessnRscv                 OCTET STRING
                                   }

appcSessnPcidCpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The network-qualified CP name of the node at which the
           session and pcid originated.  For APPN and LEN nodes, this is
           either CP name of the APPN node at which the origin LU is
           located or the CP name of the NN serving the LEN node at which
           the origin LU is located.  This field is from 1 to 17
           characters in length, including a period (.)  which separates
           the NetId from the NAU name if the netId is present."

      ::=  { appcSessnEntry 1 }





Expires December 1994                                          [Page 78]




Internet Draft                  APPC MIB                   July 18, 1994


appcSessnPcid OBJECT-TYPE
      SYNTAX OCTET STRING  (SIZE (8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The procedure correlation identifier (pcid) of a session.  It
           is an 8-octet value assigned by the primary LU."

      ::=  { appcSessnEntry 2 }

appcSessnPluIndicator OBJECT-TYPE
      SYNTAX INTEGER {
                     localLuIsPlu(1),
                     remoteLuIsPlu(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates which LU is the PLU for this session.  For
           independent LUs, the PLU (primary LU) is the one that
           initiated the session (sent BIND), while the SLU (secondary
           LU) is the one that accepted the session initiation (received
           BIND).

           The 'local' LU is the one identified by snaLuAdminLuIndex and
           by appcSessnLluName.

           The 'remote' LU is the one identified by snaLuSessnRluIndex
           and by snaLuSessnRemoteLuName."

      ::=  { appcSessnEntry 3 }

appcSessnLluName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The name of the local LU for this session.  This is the LU
           identified by snaLuAdminIndex.  It is included here for
           convenience only (also accessible as snaLuAdminSnaName using
           snaLuAdminIndex).  This field is from 1 to 17 characters in
           length, including a period (.)  which separates the NetId from
           the NAU name if the netId is present."

      ::=  { appcSessnEntry 4 }





Expires December 1994                                          [Page 79]




Internet Draft                  APPC MIB                   July 18, 1994


appcSessnModeName OBJECT-TYPE
      SYNTAX DisplayString  (SIZE (1..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The mode name name used for this session."

      ::=  { appcSessnEntry 5 }

appcSessnCosName OBJECT-TYPE
      SYNTAX DisplayString  (SIZE (1..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The Class of Service (COS) name used for this session."

      ::=  { appcSessnEntry 6 }

appcSessnTransPriority OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The transmission priority of this session."

      ::=  { appcSessnEntry 7 }

appcSessnEnhanceSecSup OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     level1(2),
                     level2(3)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Enhanced security supported.  Indicates the level of enhanced
           security support:

           1 = none
           2 = level 1
           3 = level 2
           "

      ::=  { appcSessnEntry 8 }





Expires December 1994                                          [Page 80]




Internet Draft                  APPC MIB                   July 18, 1994


appcSessnSendPacingType OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     fixed(2),
                     adaptive(3)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The type of pacing being used for sending data."

      ::=  { appcSessnEntry 9 }

appcSessnSendRpc OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The send residual pace count.  This represents the number of
          MU's that can still be sent in the current session window."

      ::=  { appcSessnEntry 10 }

appcSessnSendNxWndwSize OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The size of the next window which will be used to send data."

      ::=  { appcSessnEntry 11 }

appcSessnRecvPacingType OBJECT-TYPE
      SYNTAX INTEGER {
                     none(1),
                     fixed(2),
                     adaptive(3)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The type of pacing being used for receiving data."

      ::=  { appcSessnEntry 12 }





Expires December 1994                                          [Page 81]




Internet Draft                  APPC MIB                   July 18, 1994


appcSessnRecvRpc OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The receive residual pace count.  This represents the number
           of MU's that can still be received in the current session
           window."

      ::=  { appcSessnEntry 13 }

appcSessnRecvNxWndwSize OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The size of the next window which will be used to receive data."

      ::=  { appcSessnEntry 14 }

appcSessnUpTime   OBJECT-TYPE
      SYNTAX TimeStamp
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Length of time the session has been up in hundreds of a
           second.  This is the elapsed time since the session started
           (snaLuSessnActiveTime)."

      ::=  { appcSessnEntry 15 }

appcSessnCtrUpTime   OBJECT-TYPE
      SYNTAX TimeStamp
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Length of time the session counters have been active in
           hundreds of a second.  This value is included for
           implementations that allow an operator or management
           workstation to enable and disable the collection of session
           statistics.  For implementations that do not provide that
           option, i.e., counters are always enabled, this value will be
           the same as appcSessnUpTime."

      ::=  { appcSessnEntry 16 }





Expires December 1994                                          [Page 82]




Internet Draft                  APPC MIB                   July 18, 1994


appcSessnP2SFmdPius OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of FMD PIUs sent from the Primary LU to the Secondary
           LU.  This value differs from snaLuSessnStatsReceivedRus, which
           counts both FM data RUs and control RUs.  This counter is just
           for FM data."

      ::=  { appcSessnEntry 17 }

appcSessnS2PFmdPius OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of FMD PIUs sent from the Secondary LU to the Primary
           LU.  This value differs from snaLuSessnStatsSentRus, which
           counts both FM data RUs and control RUs.  This counter is just
           for FM data."

      ::=  { appcSessnEntry 18 }

appcSessnP2SNonFmdPius OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of non-FMD PIUs sent from the Primary LU to the
           Secondary LU"

      ::=  { appcSessnEntry 19 }

appcSessnS2PNonFmdPius OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of non-FMD PIUs sent from the Secondary LU to the
           Primary LU"

      ::=  { appcSessnEntry 20 }

appcSessnP2SFmdBytes  OBJECT-TYPE





Expires December 1994                                          [Page 83]




Internet Draft                  APPC MIB                   July 18, 1994


      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of FMD Bytes sent from the Primary LU to the Secondary
           LU"

      ::=  { appcSessnEntry 21 }

appcSessnS2PFmdBytes  OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of FMD Bytes sent from the Secondary LU to the Primary
           LU"

      ::=  { appcSessnEntry 22 }

appcSessnP2SNonFmdBytes  OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of non-FMD Bytes sent from the Primary LU to the
           Secondary LU"

      ::=  { appcSessnEntry 23 }

appcSessnS2PNonFmdBytes  OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Number of non-FMD Bytes sent from the Secondary LU to the
           Primary LU"

      ::=  { appcSessnEntry 24 }

appcSessnRscv     OBJECT-TYPE
      SYNTAX OCTET STRING   (SIZE (0..255))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The route selection control vector (RSCV CV2B) used for this





Expires December 1994                                          [Page 84]




Internet Draft                  APPC MIB                   July 18, 1994


           session.  It is present for APPN-level implementations.
           LEN-level implementations will return a null string.  The
           internal format of this vector is described in SNA Formats.
           This object contains an un-interpreted copy of the control
           vector (including the length and key fields)."

      ::=  { appcSessnEntry 25 }

-- *********************************************************************
--    APPC Conversation Table
-- ---------------------------------------------------------------------
-- This table contains information about active and inactive APPC
-- conversations. This table represents a historical log of conversations.
-- Since some conversations could be very dynamic and can come up and down
-- relatively quickly, we felt it might be more useful if this table showed
-- not only active conversations, but those that became inactive. However,
-- this could also mean that the number of entries could get pretty big.
-- So, this does present some issues with regard to how the older entries get
-- removed:
-- 1) Should we use an aging mechanism so that older entries automatically
--    get deleted?
-- 2) Should we have have a maximum number of entries and once it is
--    exceeded, oldest entries are automatically reused? Should we specify
--    the maximum or should it be implemention dependent?
-- 3) Should we have objects to manage this table (e.g., delete entries)?
-- 4) Is it worth the added complexity to make this table show historical
--    information?
-- *********************************************************************

appcConvTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcConvEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Table of APPC Conversations"

      ::= { appcConversation 1 }

appcConvEntry OBJECT-TYPE
      SYNTAX AppcConvEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC Conversation Table."





Expires December 1994                                          [Page 85]




Internet Draft                  APPC MIB                   July 18, 1994


      INDEX
             { snaNodeAdminIndex,
               snaLuAdminLuIndex,
               appcTpOperIndex,
               appcConvIndex  }

      ::= { appcConvTable 1}

AppcConvEntry     ::= SEQUENCE {
           appcConvIndex               Integer32,
           appcConvId                  OCTET STRING,
           appcConvState               INTEGER,
           appcConvType                INTEGER,
           appcConvCorrelator          OCTET STRING,
           appcConvSyncLvl             INTEGER,
           appcConvSource              INTEGER,
           appcConvStyle               INTEGER,
           appcConvStartTime           TimeStamp,
           appcConvStopTime            TimeStamp,
           appcConvSendBytes           Counter32,
           appcConvRcvBytes            Counter32,
           appcConvUserid              DisplayString,
           appcConvPcidNauName         DisplayString,
           appcConvPcid                String,
           appcConvModeName            DisplayString,
           appcConvLuwIdName           DisplayString,
           appcConvLuwIdInstance       String,
           appcConvLuwIdSequence       String,
           appcConvTpName              DisplayString,
           appcConvSessnIndex          Integer32
         }

appcConvIndex OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Index for entry in Conversation table."

      ::= { appcConvEntry 1 }

appcConvId   OBJECT-TYPE
      SYNTAX OCTET STRING  (SIZE (4))
      MAX-ACCESS read-only
      STATUS current





Expires December 1994                                          [Page 86]




Internet Draft                  APPC MIB                   July 18, 1994


      DESCRIPTION
           "The 4-byte ID of the conversation."

      ::= { appcConvEntry 2 }

appcConvState    OBJECT-TYPE
      SYNTAX INTEGER {
                      reset(1),
                      send(2),
                      receive(3),
                      confirm(4),
                      confirmSend(5),
                      confirmDealloc(6),
                      pendingDeallocate(7),
                      pendingPost(8),
                      sendReceive(9),
                      sendOnly(10),
                      receiveOnly(11)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates the state of the conversation at the instant when the
           information was retrieved. The values are:

              reset     The conversation is reset (i.e., deallocated).

              send
                        The conversation can send data.  This value also
                        is returned if the conversation is in
                        Send-Pending state.

              receive
                        The conversation can receive data.

              confirm
                        The conversation has received a confirm
                        indicator.  It can issue an [MC_]CONFIRMED or
                        [MC_]SEND_ERROR verb to change state.  It will
                        continue in Receive state if an [MC_]CONFIRMED
                        verb is issued.

              confirmSend
                        The conversation is in Confirm state and changes
                        to Send state when an [MC_]CONFIRMED verb is





Expires December 1994                                          [Page 87]




Internet Draft                  APPC MIB                   July 18, 1994


                        issued.

              confirmDealloc
                        The conversation is in Confirm state and becomes
                        inactive when an [MC_]CONFIRMED verb is issued.

              pendingDeallocate
                        The conversation is in Pending-Deallocate state
                        while it waits for (MC_)DEALLOCATE TYPE
                        (sync_level) to complete.

              pendingPost
                        The conversation is in Pending-Post state while
                        it waits for the [MC_]RECEIVE_AND_POST verb to
                        complete its receive function.

              sendReceive
                        The full-duplex conversation can send or receive
                        data.

              sendOnly
                        The full-duplex conversation can send data, but
                        it does not have permission to receive data,
                        because the partner TP has already deallocated
                        its side of the conversation.

              receiveOnly
                        The full-duplex conversation can receive data,
                        but it does not have permission to send data,
                        because it has already deallocated its side of
                        the conversation.

              "
      ::= { appcConvEntry 3 }

appcConvType  OBJECT-TYPE
      SYNTAX INTEGER {
                      basic(1),
                      mapped(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates the type of conversation.  The values are:
              basic





Expires December 1994                                          [Page 88]




Internet Draft                  APPC MIB                   July 18, 1994


                        Indicates that this conversation supports
                        basic verbs.

              mapped
                        Indicates that this conversation supports
                        mapped verbs."


      ::= { appcConvEntry 4 }

appcConvCorrelator  OBJECT-TYPE
      SYNTAX OCTET STRING  (SIZE (0..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "This is an 8-byte identifier that the source LU assigns to the
           conversation; the source LU is the one that sent the allocation
           request. The conversation correlator is included on the allocation
           request. The conversation correlator uniquely identifies a
           conversation, from among all conversations, between the local and
           partner LUs. It may be used, for example, during problem
           determination associated with a conversation. A length of 0
           indicates that no conversation correlator is defined."

      ::= { appcConvEntry 5 }


appcConvSyncLvl  OBJECT-TYPE
      SYNTAX INTEGER {
                      none(1),
                      confirm(2),
                      syncpt(3)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates the highest sync level support for the conversation.
           The values are:

                none
                        Indicates that no sync-level processing can be
                        performed on this conversation. The
                        transaction program does not issue verbs or
                        recognize any returned parameters
                        relating to any sync-level function.





Expires December 1994                                          [Page 89]




Internet Draft                  APPC MIB                   July 18, 1994


                confirm
                        Indicates that confirmation processing can be
                        performed on this conversation.  The
                        transaction program can issue verbs and
                        recognize returned parameters relating to
                        confirmation.

                syncpt
                        Indicates that syncpt and confirmation processing
                        can be performed on this conversation. The
                        transaction program can issue verbs and recognize
                        returned parameters relating to syncpt and
                        confirmation."

      ::= { appcConvEntry 6 }

appcConvSource OBJECT-TYPE
      SYNTAX INTEGER {
                      localLu(1),
                      partnerLu(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates whether the local or partner LU is the source of
            the conversation, that is, which LU started the conversation
            by sending the allocation request.

               localLu
                        The local LU is the source of the conversation,
                        and the partner LU is the target of the
                        conversation.

               partnerLu
                        The partner LU is the source of the
                        conversation, and the local LU is the target of
                        the conversation."

      ::= { appcConvEntry 7 }

appcConvStyle  OBJECT-TYPE
      SYNTAX INTEGER {
                      twoWayAlternate(1),
                      twoWaySimultaneous(2)
                     }





Expires December 1994                                          [Page 90]




Internet Draft                  APPC MIB                   July 18, 1994


      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates the conversation style in effect for the
           conversation.

            twoWayAlternate
                        Indicates that information is transferred in
                        both directions, but only in one direction at a
                        time.  This style of data transfer is also known
                        as half-duplex conversation.

            twoWaySimultaneous
                        Indicates that information is transferred in
                        both directions at the same time.  This style of
                        data transfer is also known as full-duplex
                        conversation."
      ::= { appcConvEntry 8 }

appcConvStartTime  OBJECT-TYPE
      SYNTAX TimeStamp
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Time when the conversation started in hundreds of a second."

      ::= { appcConvEntry 9  }

appcConvStopTime   OBJECT-TYPE
      SYNTAX TimeStamp
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Time when the conversation stopped in hundreds of a second."

      ::= { appcConvEntry 10 }

appcConvSendBytes OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates the number of bytes that was sent on the
           conversation.
           The count includes all SNA RU bytes sent, including those in the





Expires December 1994                                          [Page 91]




Internet Draft                  APPC MIB                   July 18, 1994


           FMH-5 (Attach), FMH-7 (Error Description), SIGNAL, LUSTAT, and
           SNA responses; it does not include SNA TH and RH bytes."

        ::= { appcConvEntry 11 }

appcConvRcvBytes OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Indicates the number of bytes that was received on the
           conversation.
           The count includes all SNA RU bytes sent, including those in the
           FMH-5 (Attach), FMH-7 (Error Description), SIGNAL, LUSTAT, and
           SNA responses; it does not include SNA TH and RH bytes."

      ::= { appcConvEntry 12 }

appcConvUserid OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..10))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The user ID that the initiating program provided in the
          incoming attach."

      ::= { appcConvEntry 13 }

appcConvPcidNauName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (3..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The network-qualified NAU name or of the
           node at which the session and pcid originated.  For APPN
           and LEN nodes, this is either CP name of the APPN node at
           which the origin LU is located or the CP name of the
           NN serving the LEN node at which the origin LU is
           located.  This field is from 3 to 17 characters in
           length, including a period (.) which separates the
           NetId from the NAU name."

      ::=  { appcConvEntry 14 }

appcConvPcid OBJECT-TYPE





Expires December 1994                                          [Page 92]




Internet Draft                  APPC MIB                   July 18, 1994


      SYNTAX OCTET STRING  (SIZE (8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The procedure correlation identifier (pcid) of the
           session.  It is an 8-octet value assigned by the primary LU."

      ::=  { appcConvEntry 15 }

appcConvModeName OBJECT-TYPE
      SYNTAX DisplayString  (SIZE (1..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The Mode Name name used for this conversation.
           This is a 1-8 character name."

      ::=  { appcConvEntry 16 }

appcConvLuwIdName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The SNA name of the LU that initiated the logical unit of work
           that is associated with this active TP. This field is from
           1 to 17 characters in length, including a period (.) which
           separates the NetId from the LU name if the netId is present."

      ::= { appcConvEntry 17 }

appcConvLuwIdInstance OBJECT-TYPE
      SYNTAX OCTET STRING (SIZE (0..6))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The instance identifier for the logical unit of work."

      ::= { appcConvEntry 18 }

appcConvLuwIdSequence OBJECT-TYPE
      SYNTAX OCTET STRING (SIZE (0..2))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION





Expires December 1994                                          [Page 93]




Internet Draft                  APPC MIB                   July 18, 1994


          "The sequence identifier for the logical unit of work."

      ::= { appcConvEntry 19 }

appcConvTpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..64))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The transaction program name from the FMH5 ATTACH which started
            this conversation.

           When the TP name consists entirely of displayable EBCDIC
           codepoints, it is mapped directly to the equivalent ASCII
           display string.  However, registered TP names always have a
           non-displayable EBCDIC codepoint (value less than or equal to
           x'3F') as the first character, so they cannot be directly
           mapped to an ASCII display string.  These TP names are
           converted to a display string that is equivalent to a
           hexadecimal display of the EBCDIC codepoints.  For example,
           the 2-byte TP name x'06F1' (CNOS) is converted to the 4-byte
           ASCII display string '06F1'."

      ::= { appcConvEntry 20 }

appcConvSessnIndex OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Index of entry in appcSessnTable that is associated with this
           conversation. If the conversation is reset, then this value is
           set to 0."

      ::= { appcConvEntry 21 }

-- *********************************************************************
--    APPC CPIC Admin Table
-- *********************************************************************
appcCpicAdminTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcCpicAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC CPI-C side information table."





Expires December 1994                                          [Page 94]




Internet Draft                  APPC MIB                   July 18, 1994


      ::= { appcCPIC 1 }

appcCpicAdminEntry OBJECT-TYPE
      SYNTAX AppcCpicAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC CPI-C side information Table."

      INDEX
             { appcCpicAdminIndex }

      ::= { appcCpicAdminTable 1 }

AppcCpicAdminEntry ::= SEQUENCE {
          appcCpicAdminIndex              Integer32,
          appcCpicAdminLocLuName          DisplayString,
          appcCpicAdminSymbDestName       DisplayString,
          appcCpicAdminParLuAlias         DisplayString,
          appcCpicAdminParLuName          DisplayString,
          appcCpicAdminModeName           DisplayString,
          appcCpicAdminTpNameType         INTEGER,
          appcCpicAdminTpName             DisplayString,
          appcCpicAdminUserid             DisplayString,
          appcCpicAdminRowStatus          RowStatus
    }

appcCpicAdminIndex   OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Index to the table of CPI-C side information.
           This field is from 1 to 17 characters in
           length, including a period (.) which separates the
           NetId from the NAU name if the netId is present."

      ::= { appcCpicAdminEntry 1 }

appcCpicAdminLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
           "The SNA name of the local LU to which this CPI-C side





Expires December 1994                                          [Page 95]




Internet Draft                  APPC MIB                   July 18, 1994


           information definition applies.  This field is from 1 to 17
           characters in length, including a period (.)  which separates
           the NetId from the NAU name if the netId is present.

           The reserved value '*ALL' indicates that the definition applies
           to all local LUs, and not just to a single local LU.

           Row creation conventions:

              When row creation is attempted, the agent must verify that
              the combination of local LU name and symbolic destination
              name is unique for the SNA node, i.e., the values in the
              newly created row must not conflict with an existing
              definition.  If they do conflict, the agent must reject the
              attempt to create the new row.  Implementations that do not
              support definition of CPI-C side information on an LU by LU
              basis will reject any attempt to set this object to a value
              other than '*ALL'."

      ::= { appcCpicAdminEntry 2 }

appcCpicAdminSymbDestName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..8))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
              "Specifies the symbolic destination name used by CPI-C
               applications to identify this definition."

      ::= { appcCpicAdminEntry 3 }

appcCpicAdminParLuAlias  OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..8))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "A local alias for the partner LU.  If not known or
           not applicable, this object contains a zero-length
           string."

      ::= { appcCpicAdminEntry 4 }


appcCpicAdminParLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))





Expires December 1994                                          [Page 96]




Internet Draft                  APPC MIB                   July 18, 1994


      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
           "The SNA name of the partner LU.  This field is from 1 to 17
           characters in length, including a period (.)  which separates
           the NetId from the NAU name if the netId is present."

      ::= { appcCpicAdminEntry 5 }


appcCpicAdminModeName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..8))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
           "Specifies the mode name.  A mode defines the characteristics
           for a group of sessions.  The mode name can be blank (8 space
           characters).

           Row creation conventions:

             If the desired mode name is the default blank mode name,
             the appcCpicAdminModeName object must be set to the
             reserved value 'BLANK', which represents the value of
             8 space characters operationally.
             A set with a shorter string of space characters will be
             padded to 8 spaces by the agent.

           Display convention

             A get operation against this object will return the string
             'BLANK' if the actual value is 8 spaces.  This convention
             is intended to prevent operator confusion and is consistent
             with the practice of some existing implementations.
            "

      ::= { appcCpicAdminEntry 6 }


appcCpicAdminTpNameType OBJECT-TYPE
      SYNTAX INTEGER {
                     normal(1),
                     snaServiceTp(2)
                     }
      MAX-ACCESS read-create





Expires December 1994                                          [Page 97]




Internet Draft                  APPC MIB                   July 18, 1994


      STATUS current
      DESCRIPTION
          "Specifies whether the tp name in appcCpicAdminTpName
          identifies a normal TP or an SNA service TP.  In this context,
          a normal TP is one with a name consisting only of displayable
          characters, while an SNA service TP has a name containing
          octets that do not map to displayable characters."

      ::= { appcCpicAdminEntry 7 }

appcCpicAdminTpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..64))
      MAX-ACCESS read-create
      STATUS current
      DESCRIPTION
          "Specifies the name of the partner TP to be used when a CPI-C
           application initiates a conversation specifying this side
           information entry.

           Row creation conventions:

              For a 'normal' TP name (displayable string), the default
              value of appcCpicAdminTpNameType is acceptable, and the
              management station sets appcCpicAdminTpName to the desired
              value (a display string equivalent to the EBCDIC TP name).

              For a 'snaServiceTp' TP name (non-displayable string), the
              management station must set appcCpicAdminTpNameType to the
              value snaServiceTp BEFORE setting appcCpicAdminTpName to
              the desired value.  When appcCpicAdminTpNameType has the
              value snaServiceTp, the management station will follow the
              display convention described below when it sets the TP
              name.  The agent system will then interpret the string as
              equivalent to a hexadecimal display of the EBCDIC
              codepoints.

           Display convention

              When the TP name consists entirely of displayable EBCDIC
              codepoints, it is mapped directly to the equivalent ASCII
              display string.  However, registered TP names always have a
              non-displayable EBCDIC codepoint (value less than or equal
              to x'3F') as the first character, so they cannot be
              directly mapped to an ASCII display string.  These TP names
              are converted to a display string that is equivalent to a





Expires December 1994                                          [Page 98]




Internet Draft                  APPC MIB                   July 18, 1994


              hexadecimal display of the EBCDIC codepoints.  For example,
              the 2-byte TP name x'06F1' (CNOS) is converted to the
              4-byte ASCII display string '06F1'."

      ::= { appcCpicAdminEntry 8 }

appcCpicAdminUserid      OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..10))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The security userid, if any, associated with the side
           information definition."

      ::= { appcCpicAdminEntry 9 }

 appcCpicAdminRowStatus OBJECT-TYPE
          SYNTAX  RowStatus
          MAX-ACCESS  read-create
          STATUS  current
          DESCRIPTION
                  "This object is used by a Management Station to
                  create or delete the row entry in the
                  appcCpicAdminTable following the RowStatus textual
                  convention.

                  <Need description in SNA terms of what is expected
                  when a row is created or deleted>
                  "
      ::= { appcCpicAdminEntry 10 }

-- *********************************************************************
--    APPC CPIC Oper Table
-- *********************************************************************

appcCpicOperTable OBJECT-TYPE
      SYNTAX SEQUENCE OF AppcCpicOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "APPC CPI-C side information table."

      ::= { appcCPIC 2 }

appcCpicOperEntry OBJECT-TYPE





Expires December 1994                                          [Page 99]




Internet Draft                  APPC MIB                   July 18, 1994


      SYNTAX AppcCpicOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Entry of APPC CPI-C side information Table."

      INDEX
             { appcCpicOperIndex }

      ::= { appcCpicOperTable 1 }


AppcCpicOperEntry ::= SEQUENCE {
          appcCpicOperIndex              Integer32,
          appcCpicOperLocLuName          DisplayString,
          appcCpicOperSymbDestName       DisplayString,
          appcCpicOperParLuAlias         DisplayString,
          appcCpicOperParLuName          DisplayString,
          appcCpicOperModeName           DisplayString,
          appcCpicOperTpNameType         INTEGER,
          appcCpicOperTpName             DisplayString,
          appcCpicOperUserid             DisplayString
    }

appcCpicOperIndex   OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
           "Index to the table of CPI-C side information.  This field is
           from 1 to 17 characters in length, including a period (.)
           which separates the NetId from the NAU name if the netId is
           present."

      ::= { appcCpicOperEntry 1 }

appcCpicOperLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The SNA name of the local LU to which this CPI-C side
           information definition applies.  This field is from 1 to 17
           characters in length, including a period (.)  which separates
           the NetId from the NAU name if the netId is present.





Expires December 1994                                         [Page 100]




Internet Draft                  APPC MIB                   July 18, 1994


           The reserved value '*ALL' indicates that the definition
           applies to all local LUs, and not just to a single local LU."

      ::= { appcCpicOperEntry 2 }

appcCpicOperSymbDestName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Specifies the symbolic destination name used by CPI-C
            applications to identify this definition."

      ::= { appcCpicOperEntry 3 }

appcCpicOperParLuAlias  OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "A local alias for the partner LU.  If not known or not
           applicable, this object contains a zero-length string."

      ::= { appcCpicOperEntry 4 }

appcCpicOperParLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The SNA name of the partner LU.  This field is from 1 to 17
           characters in length, including a period (.)  which separates
           the NetId from the NAU name if the netId is present."

      ::= { appcCpicOperEntry 5 }


appcCpicOperModeName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Specifies the mode name.  A mode defines the characteristics
           for a group of sessions.  The mode name can be blank (8 space
           characters).





Expires December 1994                                         [Page 101]




Internet Draft                  APPC MIB                   July 18, 1994


           Display convention

             A get operation against this object will return the string
             'BLANK' if the actual value is 8 spaces.  This convention
             is intended to prevent operator confusion and is consistent
             with the practice of some existing implementations. "

      ::= { appcCpicOperEntry 6 }


appcCpicOperTpNameType OBJECT-TYPE
      SYNTAX INTEGER {
                     normal(1),
                     snaServiceTp(2)
                     }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Specifies whether the tp name in appcCpicOperTpName
           identifies a normal TP or an SNA service TP.  In this context,
           a normal TP is one with a name consisting only of displayable
           characters, while an SNA service TP has a name containing
           octets that do not map to displayable characters."

      ::= { appcCpicOperEntry 7 }

appcCpicOperTpName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..64))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "Specifies the name of the partner TP to be used when a CPI-C
           application initiates a conversation specifying
           this side information entry.

           Display convention

              When the TP name consists entirely of displayable EBCDIC
              codepoints, it is mapped directly to the equivalent ASCII
              display string.  However, registered TP names always have
              a non-displayable EBCDIC codepoint (value less than or
              equal to x'3F') as the first character, so they cannot be
              directly mapped to an ASCII display string.  These TP
              names are converted to a display string that is equivalent
              to a hexadecimal display of the EBCDIC codepoints.  For





Expires December 1994                                         [Page 102]




Internet Draft                  APPC MIB                   July 18, 1994


              example, the 2-byte TP name x'06F1' (CNOS) is converted to
              the 4-byte ASCII display string '06F1'."

      ::= { appcCpicOperEntry 8 }

appcCpicOperUserid      OBJECT-TYPE
      SYNTAX DisplayString (SIZE (0..10))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
           "The security userid, if any, associated with the active side
           information definition."

      ::= { appcCpicOperEntry 9 }

-- ***************************************************************
-- Conformance information
-- ***************************************************************

appcConformance       OBJECT IDENTIFIER ::= {appcMIB 2 }

appcCompliances       OBJECT IDENTIFIER ::= {appcConformance 1 }
appcGroups            OBJECT IDENTIFIER ::= {appcConformance 2 }

-- Compliance statements
appcCompliance  MODULE-COMPLIANCE
        STATUS  current
        DESCRIPTION
                "The compliance statement for the SNMPv2 entities
                which implement the APPC MIB."
        MODULE  -- this module

--      Unconditionally mandatory groups
                MANDATORY-GROUPS  { appcGlobalGroup,
                        appcDefaultGroup,
                        appcLluGroup,
                        appcParLuGroup,
                        appcModeGroup,
                        appcTpGroup,
                        appcSessionGroup,
                        appcConversationGroup
                 }

--      Conditionally mandatory groups
                GROUP  appcStatControlGroup





Expires December 1994                                         [Page 103]




Internet Draft                  APPC MIB                   July 18, 1994


                DESCRIPTION
                        "The appcStatControlGroup is mandatory only for those
                        entities which implement activation and deactivation
                        of statistics collecting and counting."

                GROUP  appcCpicGroup
                DESCRIPTION
                        "The appcCpicGroup is mandatory only for
                        those entities which implement CPI-C. "

--      Refinement of requirements for objects access.
--      The Agent which does not implement row creation for
--      appcDefaultTable, appcParLuAdminTable, appcModeAdminTable,
--      appcTpAdminTable, and appcCpicAdminTable must at least accept
--      objects modification (read-write access instead of read-create).

--      appcDefaultTable
                OBJECT  appcDefaultModeName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT appcDefaultLuAlias
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcDefaultImplInbndPlu
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcDefaultMaxMcLlSndSize
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcDefaultFileSpec
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write





Expires December 1994                                         [Page 104]




Internet Draft                  APPC MIB                   July 18, 1994


                        access to this object."

                OBJECT appcDefaultTpOperation
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT appcDefaultTpConvSecRqd
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

--      appcParLuAdminTable
                OBJECT  appcParLuAdminLocLuName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcParLuAdminParLuName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcParLuAdminAlias
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcParLuAdminDefType
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcParLuAdminDefParaSessSup
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."





Expires December 1994                                         [Page 105]




Internet Draft                  APPC MIB                   July 18, 1994


                OBJECT  appcParLuAdminDefCnosSup
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcParLuAdminDefSessSec
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcParLuAdminDefConvSec
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcParLuAdminDefAlVerSup
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcParLuAdminLinkName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

--      appcModeAdminTable

                OBJECT  appcModeAdminModeName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminLocLuName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminParLuName





Expires December 1994                                         [Page 106]




Internet Draft                  APPC MIB                   July 18, 1994


                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminCosName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminDefType
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminSessEndTpName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminMaxSessLimit
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminConWinAutoActLimit
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminAdaptivePacing
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminRecvPacWinSz
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write





Expires December 1994                                         [Page 107]




Internet Draft                  APPC MIB                   July 18, 1994


                        access to this object."

                OBJECT  appcModeAdminSendPacWinSz
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminPrefRecvRuSz
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminPrefSendRuSz
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminRecvRuSzUpBnd
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminSendRuSzUpBnd
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminRecvRuSzLoBnd
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminSendRuSzLoBnd
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminDfSyncLvl





Expires December 1994                                         [Page 108]




Internet Draft                  APPC MIB                   July 18, 1994


                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminDfCrypto
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminSingSessReinit
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminAltCode
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminCompression
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminInBoundCompLevel
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminOutBoundCompLevel
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcModeAdminCompRleBeforeLZ
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write





Expires December 1994                                         [Page 109]




Internet Draft                  APPC MIB                   July 18, 1994


                        access to this object."

--      appcTpAdminTable
                OBJECT  appcTpAdminLocLuName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminTpName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminFileSpec
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminStartParm
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminTpOperation
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminQdepthLimit
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminInAttachTimeout
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."





Expires December 1994                                         [Page 110]




Internet Draft                  APPC MIB                   July 18, 1994


                OBJECT  appcTpAdminRcvAllocTimeout
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminDefType
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminSyncLvl
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminInstLmt
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminStatus
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminLongRun
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminPfCnos
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminPfSessCntl
                MIN-ACCESS  read-write
                DESCRIPTION





Expires December 1994                                         [Page 111]




Internet Draft                  APPC MIB                   July 18, 1994


                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminPfDefine
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminPfDisplay
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminPfAllocSer
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminConvType
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminConvSecReq
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminSecLvl
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcTpAdminVerPip
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."





Expires December 1994                                         [Page 112]




Internet Draft                  APPC MIB                   July 18, 1994


                OBJECT  appcTpAdminPipSubNum
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

--      appcCpicAdminTable
                OBJECT  appcCpicAdminLocLuName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcCpicAdminSymbDestName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcCpicAdminParLuAlias
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcCpicAdminParLuName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcCpicAdminModeName
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcCpicAdminTpNameType
                MIN-ACCESS  read-write
                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

                OBJECT  appcCpicAdminTpName
                MIN-ACCESS  read-write





Expires December 1994                                         [Page 113]




Internet Draft                  APPC MIB                   July 18, 1994


                DESCRIPTION
                        "An Agent is required to implement read-write
                        access to this object."

        ::= {appcCompliances 1 }

-- Units of conformance
appcGlobalGroup  OBJECT-GROUP
        OBJECTS  {
                appcNbLocLUInUse,
                appcNbSessnInUse
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC global information."
        ::= { appcGroups 1 }

appcStatControlGroup  OBJECT-GROUP
        OBJECTS  {
                appcStatCntrlStatus,
                appcStatCntrlRscv,
                appcStatCntrlRscvTime,
                appcStatCntrlCtrStatus,
                appcStatCntrlCtrStatusTime
                }
        STATUS current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC statistic collection and counting"
        ::= { appcGroups 2 }

appcDefaultGroup  OBJECT-GROUP
        OBJECTS  {
                appcDefaultModeName,
                appcDefaultLuAlias,
                appcDefaultImplInbndPlu,
                appcDefaultMaxMcLlSndSize,
                appcDefaultFileSpec,
                appcDefaultTpOperation,
                appcDefaultTpConvSecRqd
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the





Expires December 1994                                         [Page 114]




Internet Draft                  APPC MIB                   July 18, 1994


                instrumentation of APPC Defaults."
        ::= { appcGroups 3 }

appcLluGroup  OBJECT-GROUP
        OBJECTS  {
                appcLluOperDefType,
                appcLluOperSessLimit,
                appcLluOperBindRspMayQ,
                appcLluOperDefaultLu,
                appcLluOperCPlu
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC local LU6.2s."
        ::= { appcGroups 4 }

appcParLuGroup  OBJECT-GROUP
        OBJECTS  {
                appcParLuAdminLocLuName,
                appcParLuAdminParLuName,
                appcParLuAdminAlias,
                appcParLuAdminDefType,
                appcParLuAdminDefParaSessSup,
                appcParLuAdminDefCnosSup,
                appcParLuAdminDefSessSec,
                appcParLuAdminDefConvSec,
                appcParLuAdminDefAlVerSup,
                appcParLuAdminLinkName,
                appcParLuAdminRowStatus,
                appcParLuOperLocLuName,
                appcParLuOperParLuName,
                appcParLuOperParLuAlias,
                appcParLuOperState,
                appcParLuOperActParaSessSup,
                appcParLuOperActCnosSup,
                appcParLuOperActSessSec,
                appcParLuOperActConvSec,
                appcParLuOperActAlVerSup,
                appcParLuOperLinkName
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC partner LUs."





Expires December 1994                                         [Page 115]




Internet Draft                  APPC MIB                   July 18, 1994


        ::= { appcGroups 5 }

appcModeGroup  OBJECT-GROUP
        OBJECTS  {
               appcModeAdminModeName,
               appcModeAdminLocLuName,
               appcModeAdminParLuName,
               appcModeAdminCosName,
               appcModeAdminDefType,
               appcModeAdminSessEndTpName,
               appcModeAdminMaxSessLimit,
               appcModeAdminConWinAutoActLimit,
               appcModeAdminAdaptivePacing,
               appcModeAdminRecvPacWinSz,
               appcModeAdminSendPacWinSz,
               appcModeAdminPrefRecvRuSz,
               appcModeAdminPrefSendRuSz,
               appcModeAdminRecvRuSzUpBnd,
               appcModeAdminSendRuSzUpBnd,
               appcModeAdminRecvRuSzLoBnd,
               appcModeAdminSendRuSzLoBnd,
               appcModeAdminDfSyncLvl,
               appcModeAdminDfCrypto,
               appcModeAdminSingSessReinit,
               appcModeAdminAltCode,
               appcModeAdminCompression,
               appcModeAdminInBoundCompLevel,
               appcModeAdminOutBoundCompLevel,
               appcModeAdminCompRleBeforeLZ,
               appcModeAdminRowStatus,
               appcModeOperLluName,
               appcModeOperRluName,
               appcModeOperModeName,
               appcModeOperCosName,
               appcModeOperDefType,
               appcModeOperSessEndTpName,
               appcModeOperSessLimit,
               appcModeOperMaxSessLimit,
               appcModeOperConWinAutoActLimit,
               appcModeOperDrainSelf,
               appcModeOperDrainPart,
               appcModeOperMinCwinLimit,
               appcModeOperMinClosLimit,
               appcModeOperRecvPacWinSz,
               appcModeOperSendPacWinSz,





Expires December 1994                                         [Page 116]




Internet Draft                  APPC MIB                   July 18, 1994


               appcModeOperPrefRecvRuSz,
               appcModeOperPrefSendRuSz,
               appcModeOperRecvRuSzUpBnd,
               appcModeOperSendRuSzUpBnd,
               appcModeOperRecvRuSzLoBnd,
               appcModeOperSendRuSzLoBnd,
               appcModeOperDfSyncLvl,
               appcModeOperDfCrypto,
               appcModeOperSingSessReinit,
               appcModeOperAltCode,
               appcModeOperCNOSNeg,
               appcModeOperActSess,
               appcModeOperPndSess,
               appcModeOperActCwin,
               appcModeOperActClos,
               appcModeOperPndCwin,
               appcModeOperPndClos,
               appcModeOperPtmCwin,
               appcModeOperPtmClos,
               appcModeOperFreeSessLst,
               appcModeOperWaitReqLst,
               appcModeOperCompression,
               appcModeOperInBoundCompLevel,
               appcModeOperOutBoundCompLevel,
               appcModeOperCompRleBeforeLZ
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC modes."
        ::= { appcGroups 6 }

appcTpGroup  OBJECT-GROUP
        OBJECTS  {
                appcTpAdminLocLuName,
                appcTpAdminTpName,
                appcTpAdminFileSpec,
                appcTpAdminStartParm,
                appcTpAdminTpOperation,
                appcTpAdminQdepthLimit,
                appcTpAdminInAttachTimeout,
                appcTpAdminRcvAllocTimeout,
                appcTpAdminDefType,
                appcTpAdminSyncLvl,
                appcTpAdminInstLmt,





Expires December 1994                                         [Page 117]




Internet Draft                  APPC MIB                   July 18, 1994


                appcTpAdminStatus,
                appcTpAdminLongRun,
                appcTpAdminPfCnos,
                appcTpAdminPfSessCntl,
                appcTpAdminPfDefine,
                appcTpAdminPfDisplay,
                appcTpAdminPfAllocSer,
                appcTpAdminConvType,
                appcTpAdminConvSecReq,
                appcTpAdminSecLvl,
                appcTpAdminVerPip,
                appcTpAdminPipSubNum,
                appcTpAdminRowStatus,
                appcTpOperTpId,
                appcTpOperLocLuName,
                appcTpOperTpName
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC Transaction Programs."
        ::= { appcGroups 7 }

appcSessionGroup  OBJECT-GROUP
        OBJECTS  {
                appcSessnPcidCpName,
                appcSessnPcid,
                appcSessnPluIndicator,
                appcSessnLluName,
                appcSessnModeName,
                appcSessnCosName,
                appcSessnTransPriority,
                appcSessnEnhanceSecSup,
                appcSessnSendPacingType,
                appcSessnSendRpc,
                appcSessnSendNxWndwSize,
                appcSessnRecvPacingType,
                appcSessnRecvRpc,
                appcSessnRecvNxWndwSize,
                appcSessnUpTime,
                appcSessnCtrUpTime,
                appcSessnP2SFmdPius,
                appcSessnS2PFmdPius,
                appcSessnP2SNonFmdPius,
                appcSessnS2PNonFmdPius,





Expires December 1994                                         [Page 118]




Internet Draft                  APPC MIB                   July 18, 1994


                appcSessnP2SFmdBytes,
                appcSessnS2PFmdBytes,
                appcSessnP2SNonFmdBytes,
                appcSessnS2PNonFmdBytes,
                appcSessnRscv
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC LU6.2 sessions."
        ::= { appcGroups 8 }

appcConversationGroup  OBJECT-GROUP
        OBJECTS  {
                appcConvId,
                appcConvState,
                appcConvType,
                appcConvCorrelator,
                appcConvSyncLvl,
                appcConvSource,
                appcConvStyle,
                appcConvStartTime,
                appcConvStopTime,
                appcConvSendBytes,
                appcConvRcvBytes,
                appcConvUserid,
                appcConvPcidNauName,
                appcConvPcid,
                appcConvModeName,
                appcConvLuwIdName,
                appcConvLuwIdInstance,
                appcConvLuwIdSequence,
                appcConvTpName,
                appcConvSessnIndex
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC conversations."
        ::= { appcGroups  9 }

appcCpicGroup  OBJECT-GROUP
        OBJECTS  {
                appcCpicAdminLocLuName,
                appcCpicAdminSymbDestName,





Expires December 1994                                         [Page 119]




Internet Draft                  APPC MIB                   July 18, 1994


                appcCpicAdminParLuAlias,
                appcCpicAdminParLuName,
                appcCpicAdminModeName,
                appcCpicAdminTpNameType,
                appcCpicAdminTpName,
                appcCpicAdminRowStatus,
                appcCpicAdminUserid,
                appcCpicOperLocLuName,
                appcCpicOperSymbDestName,
                appcCpicOperParLuAlias,
                appcCpicOperParLuName,
                appcCpicOperModeName,
                appcCpicOperTpNameType,
                appcCpicOperTpName,
                appcCpicOperUserid
                }
        STATUS  current
        DESCRIPTION
                "A collection of objects providing the
                instrumentation of APPC CPI-C side information."
        ::= { appcGroups 10 }

-- end of conformance statement

END
























Expires December 1994                                         [Page 120]




Internet Draft                  APPC MIB                   July 18, 1994


5.  Acknowledgments

This MIB module is the product of the SNA NAU MIB Working Group.

6.  References


[1]  IBM, Systems Network Architecture Technical Overview, GC30-3073-3,
     March, 1991.

[2]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Structure
     of Management Information for version 2 of the Simple Network
     Management Protocol (SNMPv2)", RFC 1442, SNMP Research, Inc.,
     Hughes LAN Systems, Dover Beach Consulting, Inc., Carnegie Mellon
     University, April 1993.

[3]  McCloghrie, K., and M. Rose, "Management Information Base for
     Network Management of TCP/IP-based internets - MIB-II", STD 17, RFC
     1213, Hughes LAN Systems, Performance Systems International, March
     1991.

[4]  Galvin, J., and K. McCloghrie, "Administrative Model for version 2
     of the Simple Network Management Protocol (SNMPv2)", RFC 1445,
     Trusted Information Systems, Hughes LAN Systems, April 1993.

[5]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Protocol
     Operations for version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1448, SNMP Research, Inc., Hughes LAN Systems, Dover
     Beach Consulting, Inc., Carnegie Mellon University, April 1993.

[6]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, "Textual
     Conventions for version 2 of the Simple Network Management Protocol
     (SNMPv2)", RFC 1443, SNMP Research, Inc., Hughes LAN Systems, Dover
     Beach Consulting, Inc., Carnegie Mellon University, April 1993.

[7]  Kielczewski, Z., Kostick, D., and K. Shih, "Definitions of Managed
     Objects for SNA NAUs", RFC xxxx, Eicon Technology Corporation,
     Bellcore, Novell, Inc., May 1994.











Expires December 1994                                         [Page 121]




Internet Draft                  APPC MIB                   July 18, 1994


7.  Security Considerations

Security issues are not discussed in this memo.


8.  Authors' Addresses

     Michael Allen
     Networking Systems
     IBM Corporation
     Research Triangle Park, NC 27709

     Tel:    1 919 254 4442
     E-mail: moallen@vnet.ibm.com


     Zbigniew Kielczewski
     Eicon Technology Corporation
     2196 32nd Avenue
     Montreal, Quebec, Canada H8T 3H7

     Tel:    1 514 631 2592
     E-mail: zbig@eicon.qc.ca


     William Kwan
     CrossComm Corporation
     450 Donald Lynch Blvd.
     Marlboro, MA 01752

     Tel:    1 508 229 5429
     E-mail: kwan@crosscomm.com

















Expires December 1994                                         [Page 122]




Internet Draft                  APPC MIB                   July 18, 1994


9.  Table of Contents


1 Introduction ....................................................    2
2 The SNMPv2 Network Management Framework .........................    3
2.1 Object Definitions ............................................    3
3 Overview ........................................................    4
3.1 Applying MIB II to managing APPC devices ......................    5
3.2 APPC MIB Structure ............................................    5
3.2.1 appcGlobal group ............................................    6
3.2.2 appcLu group ................................................    7
3.2.3 appcTp group ................................................   10
3.2.4 appcSession group ...........................................   11
3.2.5 appcConversation group ......................................   11
3.2.6 appcCPIC group ..............................................   12
3.2.7 Conformance statement .......................................   13
3.3 APPC MIB special feature ......................................   13
3.3.1 Row Creation mechanism ......................................   13
4 Object Definitions ..............................................   14
5 Acknowledgments .................................................  121
6 References ......................................................  121
7 Security Considerations .........................................  122
8 Authors' Addresses ..............................................  122
9 Table of Contents ...............................................  123

























Expires December 1994                                         [Page 123]
