
INTERNET-DRAFT                                      Kurt D. Zeilenga
Intended Category: Standard Track                   OpenLDAP Foundation
Expires: 11 June 2000                               11 December 1999


                  LDAP Authentication Password Attribute
                 <draft-zeilenga-ldap-authpasswd-01.txt>


1.      Status of this Memo

  This document is an Internet-Draft and is in full conformance with all
  provisions of Section 10 of RFC2026.

  This document is intended to be, after appropriate review and
  revision, to be submitted to the RFC Editor as a Standard Track
  document.  Distribution of this memo is unlimited.  Technical
  discussion of this document will take place on the IETF LDAP Extension
  Working Group mailing list <ietf-ldapext@netscape.com>.  Please send
  editorial comments directly to the author <Kurt@OpenLDAP.org>.

  Internet-Drafts are working documents of the Internet Engineering Task
  Force (IETF), its areas, and its working groups.  Note that other
  groups may also distribute working documents as Internet-Drafts.
  Internet-Drafts are draft documents valid for a maximum of six months
  and may be updated, replaced, or obsoleted by other documents at any
  time.  It is inappropriate to use Internet-Drafts as reference
  material or to cite them other than as ``work in progress.''

  The list of current Internet-Drafts can be accessed at
  http://www.ietf.org/ietf/1id-abstracts.txt The list of Internet-Draft
  Shadow Directories can be accessed at http://www.ietf.org/shadow.html.

  Copyright 2000, The Internet Society.  All Rights Reserved.

  Please see the Copyright section near the end of this document for
  more information.


2.      Abstract

  This document describes schema for storing authentication passwords in
  a LDAP [RFC2251] directory.  The document provides schema definitions
  for authPassword and related schema definitions.  The authPassword is
  intended to used instead of clear text password storage mechanisms
  such as userPassword [RFC2256] to support simple bind operations.  The
  attribute may be used to store SASL [RFC2222] authentication passwords
  in entries of a directory.



Zeilenga                                                        [Page 1]

INTERNET-DRAFT              LDAP AuthPasswd             11 December 1999


  The key words ``MUST'', ``MUST NOT'', ``REQUIRED'', ``SHALL'', ``SHALL
  NOT'', ``SHOULD'', ``SHOULD NOT'', ``RECOMMENDED'',  and ``MAY'' in
  this document are to be interpreted as described in RFC 2119
  [RFC2119].


3.      Background and Intended Use

  The userPassword attribute type [RFC 2256] is intended for plain text
  storage of user passwords and may be used to implement the LDAP [RFC
  2251] bind operation.  It is inappropriate for userPassword to have
  values which are encrypted.

  The authPassword attribute type is intended to be used to store hashed
  password values for authentication purposes.  The attribute type
  supports multiple storage schemes and provides an equality matching
  rule which allows clients to assert that a clear text password
  "matches" one of the attribute's values.  Storage schemes may make use
  of one-way hashing and encryption.

  The attribute may be used by LDAP servers to implement simple bind and
  SASL [RFC 2222] user/password mechanisms such as DIGEST-MD5 [DIGEST-
  MD5].

  Though values of authPassword are generally secured by use of a
  cryptographically safe one-way hash, they SHOULD be protected as if
  the password was stored in plain text.  In particular, if the values
  used by some SASL mechanisms are compromised for a given user, then
  the attacker may falsely authenticate as this user and gain immediate
  access to all information to which that user is authorized.


4.   Schema Definitions

  The following schema definitions are written using the BNF form
  described in RFC 2252 [RFC2252].


4.1. authPasswordSyntax

    ( authPasswordSyntaxOID
      DESC 'authentication password syntax' )

  Values of this syntax are encoded according to the following BNF:

    authPasswordValue = scheme "$" [ info ] "$" hashedValue
    scheme = <an IA5 string of letters, numbers, and "-", "_", and "/">
    info = <a base64 encoded value>



Zeilenga                                                        [Page 2]

INTERNET-DRAFT              LDAP AuthPasswd             11 December 1999


    hashedValue = <a base64 encoded value>

  where scheme describes the hash mechanism, info is a scheme specific,
  and hashedValue is the hashed value.  The info field is often a salt.


4.2. authPasswordMatch

    ( authPasswordMatchOID
      NAME 'authPasswordMatch'
      DESC 'authentication password matching rule'
      SYNTAX 1.3.6.1.4.1.1466.115.121.1.40 )

  This matching rule allows a client to assert that a password matches
  values of authPasswordSyntax.  The server SHALL compare the stored
  hashedValue with a value derived from the asserted value and the
  stored info field according to the scheme of the stored value.  This
  syntax may only be used for equality comparisons.

  Transfer of authPasswordMatch assertion values is strongly discouraged
  where the underlying transport service cannot guarantee
  confidentiality and may result in disclosure of the values to
  unauthorized parties.


4.3. supportedAuthPasswordSchemes

    ( supportedAuthPasswordSchemesOID
      NAME 'supportedAuthPasswordSchemes'
      DESC 'supported password hash schemes'
      SYNTAX 1.3.6.1.4.1.1466.115.121.1.26
      USAGE dSAOperation )

  The values of this attribute are case insensitive names of supported
  authentication password schemes which the server supports.  This
  attribute may only be present in the root DSE.  If the server does not
  support any mechanisms this attribute will not be present.


4.4. authPassword

    ( authPasswordOID NAME 'authPassword'
      EQUALITY authPasswordMatch
      SYNTAX authPasswordSyntaxOID )

  The values of this abbribute are derived from the user's password per
  the indicated scheme.  The attribute may be used for authentication
  purposes.



Zeilenga                                                        [Page 3]

INTERNET-DRAFT              LDAP AuthPasswd             11 December 1999


  Transfer of authPassword values is strongly discouraged where the
  underlying transport service cannot guarantee confidentiality and may
  result in disclosure of the values to unauthorized parties.


4.5. authPasswordObject

    ( authPasswordObjectOID NAME 'authPasswordObject'
      DESC 'hashed password mixin class'
      MAY 'authPassword'      AUXILIARY )

  Entries of this object class contain authentication passwords.


5.      Schemes

  This section describes the "MD5", "SHA1", and "SASL/DIGEST-MD5".
  Other schemes may be defined by other documents.  Schemes starting
  with string "SASL/" indicate association with a SASL mechanism.
  Schemes which are not described by standard track documents SHOULD be
  named with a leading "X-" or, if associated with a SASL mechanism,
  "SASL/X-" to indicate they are a private or implementation specific
  extension.  Scheme names are case insensitive.

5.1. MD5 scheme

  The MD5 [RFC1321] scheme name is "MD5".

  The hashedValue is the base64 encoding of an MD5 Digest of the
  concatenation the user password and optional salt.  The salt is
  provided in the info field.  Implementations of this scheme must
  support salts up to 128-bit in length.  Use with a 64-bit or larger
  salt is RECOMMENDED.

  Example:
    Given a user "joe" who's password is "mary" and a salt of "salt",
    the info field would be the base64 encoding of "salt" and the
    hashValue field would be the base64 encoding of the MD5 digest
    of "marysalt".

  Values of this scheme SHOULD only be used to implement simple
  user/password authentication.

  It is RECOMMENDED that values of this scheme be protected as if they
  were plaintext passwords.


5.2. SHA1 scheme



Zeilenga                                                        [Page 4]

INTERNET-DRAFT              LDAP AuthPasswd             11 December 1999


  The SHA1 [SHA1] scheme name is "SHA1".

  The hashedValue is the base64 encoding of an SHA1 Digest of the
  concatenation the user password and the optional salt.  The salt is
  provided in the info field.  Implementations of this scheme must
  support salts up to 128-bit in length.  Use with a 64-bit or larger
  salt is RECOMMENDED.

  Example:
    Given a user "joe" who's password is "mary" and a salt of "salt",
    the info field would be the base64 encoding of "salt" and the
    hashValue field would be the base64 encoding of the SHA1 digest
    of "marysalt".

  Values of this scheme SHOULD only be used to implement simple
  user/password authentication.

  It is RECOMMENDED that values of this scheme be protected as if they
  were plaintext passwords.


5.3. DIGEST-MD5 scheme

  The DIGEST-MD5 [DIGEST-MD5] scheme name is "SASL/DIGEST-MD5".

  The hashedValue is the base64 encoding of
    H( { username-value, ":", realm-value, ":", passwd } )

  and info is the base64 encoding of
    { username-value, ":", realm-value }

  as defined by the DIGEST-MD5 specfication.

  Example:
    Given a user "joe" within the realm "localhost" who's password
    is "mary", the info field would be the base64 encoding of
    "joe:localhost" and the hashValue field would be the base64
    encoding of the MD5 digest of "joe:localhost:mary".

  Values of this scheme SHOULD only be used to implement the
  SASL/DIGEST-MD5 as described by the AuthMeth [AuthMeth] specification.

  Values of this scheme MUST be protected as if it the values were
  plaintext passwords per reasons detailed in DIGEST-MD5, Section 3.9,
  "Storing Passwords."


6.   Implementation Issues



Zeilenga                                                        [Page 5]

INTERNET-DRAFT              LDAP AuthPasswd             11 December 1999


  For implementations of this specification:

    Servers MAY restrict schemes used to support a particular
    authentication process but SHOULD use all values of those schemes.
    Servers MAY use other authentication storage mechanisms in
    conjunction with authPassword to support authentication process.

    Servers that support simple bind SHOULD support MD5 scheme and
    SHOULD support the SHA1 scheme.

    Servers SHOULD not publish values of authPassword nor allow
    operations which provide authPassword or AuthPasswordMatch values
    to unless confidentiality protection is in place.

    Clients SHOULD not initiate operations which provide, assert, or
    request values of authPassword unless confidentiality protection
    is in place.


7.   Security Considerations

  This document describes how authentication information to support
  simple password authentication may be stored in directories.  Use of
  simple password authentication should only be used when privacy
  protection is in place.  Applications should use strong authentication
  mechanisms whenever possible.

  AuthPassword values stored SHOULD be protected as if they were
  plaintext passwords.

  AuthPasswordMatch matching rule allows applications to test the
  validality of a user password and, hence, may be used to mount a
  dictionary attack.  Servers SHOULD take appropriate measures to
  protect the directory from such attacks.

  Some password schemes may require CPU intensive operations.  Servers
  SHOULD take appropriate measures to protect against Denial of Service
  attacks.

  The level of protection offerred against various attacks differ from
  scheme to scheme.  It is RECOMMENDED that servers support scheme
  selection as a configuration item.  This allows for a scheme to be
  easily disabled if a significant security flaw is discovered.


8.      Copyright

  Copyright 2000, The Internet Society.  All Rights Reserved.



Zeilenga                                                        [Page 6]

INTERNET-DRAFT              LDAP AuthPasswd             11 December 1999


  This document and translations of it may be copied and furnished to
  others, and derivative works that comment on or otherwise explain it
  or assist in its implementation may be prepared, copied, published and
  distributed, in whole or in part, without restriction of any kind,
  provided that the above copyright notice and this paragraph are
  included on all such copies and derivative works.  However, this
  document itself may not be modified in any way, such as by removing
  the copyright notice or references to the Internet Society or other
  Internet organizations, except as needed for the  purpose of
  developing Internet standards in which case the procedures for
  copyrights defined in the Internet Standards process must be followed,
  or as required to translate it into languages other than English.

  The limited permissions granted above are perpetual and will not be
  revoked by the Internet Society or its successors or assigns.

  This document and the information contained herein is provided on an
  "AS IS" basis and THE AUTHORS, THE INTERNET SOCIETY, AND THE INTERNET
  ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED,
  INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
  INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
  WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


9.   Acknowledgement

  This document borrows from a number of IETF documents and is based
  upon input from the IETF LDAPext working group.


10.  Bibliography

  [RFC1321]       R. Rivest, "The MD5 Message-Digest Algorithm",
                  RFC 1321, April 1992

  [RFC2219]       S. Bradner, "Key words for use in RFCs to Indicate
                  Requirement Levels", RFC 2119, March 1997.

  [RFC2222]       J. Myers, "Simple Authentication and Security
                  Layer (SASL)", RFC 2222, October 1997.

  [RFC2251]       M. Wahl, T. Howes, S. Kille, "Lightweight
                  Directory Access Protocol (v3)", RFC 2251,
                  December 1997.

  [RFC2252]       M. Wahl, A. Coulbeck, T. Howes, S. Kille,
                  "Lightweight Directory Access Protocol (v3):
                  Attribute Syntax Definitions", RFC 2252,



Zeilenga                                                        [Page 7]

INTERNET-DRAFT              LDAP AuthPasswd             11 December 1999


                  December 1997.

  [RFC2256]       M. Wahl, "A Summary of the X.500(96) User Schema
                  for use with LDAPv3", RFC 2256, December 1997.

  [RFC2307]       L. Howard, "An Approach for Using LDAP as a
                  Network Information Service", RFC 2307, March
                  1998.

  [AUTHMETH]      M. Wahl, H. Alvestrand, J. Hodges, RL "Bob"
                  Morgan, "Authentication Methods for LDAP",
                  draft-ietf-ldapext-authmeth-04.txt, June 1999.

  [DIGEST-MD5]    P. Leach, C. Newman, "Using Digest Authentication
                  as a SASL Mechanism",
                  draft-leach-digest-sasl-05.txt, October 1999.

  [SHA1]          NIST, FIPS PUB 180-1: Secure Hash Standard,
                  April 1995.



11.  Author's Address

  Kurt D. Zeilenga
  OpenLDAP Foundation
  <Kurt@OpenLDAP.org>
























Zeilenga                                                        [Page 8]

