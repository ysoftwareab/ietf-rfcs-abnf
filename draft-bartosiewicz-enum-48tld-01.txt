Internet Draft                                      Tomek Zygmuntowicz
draft-bartosiewicz-enum-48tld-01.txt             Patrycja Wegrzynowicz
January 21, 2005                                      Kuba Laszkiewicz
Expires in six months                                 Juliusz Brzostek
Intended status: Informational                         Witold Zarowski
                                                      Krzysztof Olesik
                                                  Andrzej Bartosiewicz
                                              NASK (+48 ENUM Registry)



                 EPP parameters for 8.4.e164.arpa Registry




Status of this Memo

    By submitting this Internet-Draft, each author represents that any
    applicable patent or other IPR claims of which he or she is aware
    have been disclosed, and any of which he or she becomes aware will
    be disclosed, in accordance with RFC 3668.

    Internet-Drafts are working documents of the Internet Engineering
    Task Force (IETF), its areas, and its working groups.  Note that
    other groups may also distribute working documents as
    Internet-Drafts.

    Internet-Drafts are draft documents valid for a maximum of six
    months and may be updated, replaced, or obsoleted by other
    documents at any time.  It is inappropriate to use Internet-
    Drafts as reference material or to cite them other than as
    "work in progress."

    The list of current Internet-Drafts can be accessed at
    http://www.ietf.org/1id-abstracts.html

    The list of Internet-Draft Shadow Directories can be accessed at
    http://www.ietf.org/shadow.html

Abstract

   This document is a proposed description of the cooperation protocol
   between NASK and its Partners. The proposal can be replaced with the
   new document or can be invalidated.

   The content of this proposal relates to the documents:
   <draft-ietf-provreg-epp-08.txt>, <draft-ietf-provreg-epp-host-
   06.txt>, <draft-ietf-provreg-epp-domain-06.txt>, <draft-ietf-
   provreg-epp-contact-06.txt>, RFC 3375 published by Internet
   Engineering Task Force.


1.  Introduction

   The Extensible Provisioning Protocol (EPP, [2]) describes an
   application layer client-server protocol for the provisioning and
   management of objects stored in a shared central repository.
   Specified in XML, EPP defines generic object management operations
   and an extensible framework that maps protocol operations to
   objects.

   The intent of this document is to specify the protocol elements in
   EPP extensions in order to accomodate additional information
   required for a registrar to interconnect with the 8.4.e164.arpa
   registry via an EPP-compatible interface.

   This document is based on the protocol for .PL domain names
   registrations. Readers should take document "EPP parameters for
   .pl ccTLD" (draft-zygmuntowicz-epp-pltld-00.txt) into consideration.


2.  EPP modifications

   2.1.  The individual element

      The individual element has been added to commands:
      <contact:create>, <contact:update> and <contact:info>. It
      specifies whether the contact represents a private person.

   2.2.  The consentForPublishing element

      The consentForPublishing element has been added to commands:
      <contact:create>, <contact:update> and <contact:info>. It
      specifies for a contact representing a private person whether
      this person has given its assent for publishing personal details
      in WHOIS database. The consentForPublishing element has no
      meaning for a contact which does not represent a private person.

   2.3. A transfer of a domain or a contact does not require a
      confirmation of sponsoring client of that object. A result of a
      transfer command is returned directly in response to
      <domain:transfer> or <contact:transfer> command with option
      op=request (status serverApproved is set in case of successful
      processing of transfer command). Options of the <domain:transfer>
      and <contact:transfer> commands other than request are not
      supported.

   2.4. It is possible to delete a host using the <host:delete>
      command, even if there are domains delegated to that host, on the
      condition that the host is not configured for any domain which is
      delegated to this host. A side effect of a removal of a host is
      removal of all delegations to that host.

   2.5. Using the <host:create> command it is possible to create a host
      which belongs to a zone maintained by Registry (NASK) and for
      which no superordinate domain exists. Such created host has the
      pendingCreate status. It will be removed from the system if the
      superordinate domain is not reserved or registered before
      expiration of a period determined by the system parameters.

   2.6. A change of a host's name is forbidden. A providing of the
      <host:chg> element in the <host:update> element causes failure of
      the <host:update> command.

   2.7. The <host:info> command returns full set of information only
      for sponsoring client, for other clients operation fails.

   2.8. The <domain:info> command returns full set of information only
      for sponsoring client of a domain and client which provided a
      correct authorization information in the <domain:authInfo>
      element. In other cases command fails.

   2.9. The <contact:info> command returns full set of information
      only to sponsoring client of a domain and to client who provided
      a correct authorization information of domain in the
      <contact:authInfo> element. Furthermore, if contact represents a
      private person (individual=1) who consents to publish his/her
      personal details (consentForPublishing=1) then information is
      returned to the others clients. In other cases command fails.


3. Examples

Example 1: <domain:create> command

<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0 epp-1.0.xsd">
   <command>
    <create>
     <domain:create
      xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
      xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
      domain-1.0.xsd">
       <domain:name>0.7.5.1.4.2.6.0.6.8.4.e164.arpa</domain:name>
       <domain:period unit="y">2</domain:period>
       <domain:ns>ns1.example.tld</domain:ns>
       <domain:ns>ns1.example2.tld</domain:ns>
       <domain:registrant>jd1234</domain:registrant>
       <domain:authInfo><domain:pw>2fooBAR</domain:pw>
       </domain:authInfo>
     </domain:create>
   </create>
  <extension>
   <extdom:create
     xmlns:extdom="http://www.dns.pl/NASK-EPP/extdom-1.0"
     xsi:schemaLocation="http://www.dns.pl/NASK-EPP/extdom-1.0
     extdom-1.0.xsd">
    <extdom:reason>nice name</extdom:reason>
   </extdom:create>
  </extension>
  <clTRID>ABC-12345</clTRID>
 </command>
</epp>


Example 2: Processing of the <host:create> command

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
     epp-1.0.xsd">
  <command>
    <create>
      <host:create
       xmlns:host="urn:ietf:params:xml:ns:host-1.0"
       xsi:schemaLocation="urn:ietf:params:xml:ns:host-1.0
       host-1.0.xsd">
        <host:name>ns1.example.tld</host:name>
        <host:addr ip="v4">192.1.2.3</host:addr>
        <host:addr ip="v4">198.1.2.3</host:addr>
        <host:addr ip="v6">1080:0:0:0:8:800:200417A</host:addr>
      </host:create>
    </create>
    <clTRID>ABC-12345</clTRID>
  </command>
</epp>


Example 3: System answer to the <host:create> command

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
     epp-1.0.xsd">
  <response>
    <result code="1000">
      <msg>Command completed successfully</msg>
    </result>
    <resData>
      <host:creData
       xmlns:host="urn:ietf:params:xml:ns:host-1.0"
       xsi:schemaLocation="urn:ietf:params:xml:ns:host-1.0
       host-1.0.xsd">
        <host:name>ns1.example.tld</host:name>
        <host:crDate>1999-04-03T22:00:00.0Z</host:crDate>
      </host:creData>
    </resData>
    <trID>
      <clTRID>ABC-12345</clTRID>
      <svTRID>54322-XYZ</svTRID>
    </trID>  </response>
</epp>


Example 4: Processing of the <host:info> command

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
     epp-1.0.xsd">
  <command>
    <info>
      <host:info
       xmlns:host="urn:ietf:params:xml:ns:host-1.0"
       xsi:schemaLocation="urn:ietf:params:xml:ns:host-1.0
       host-1.0.xsd">
        <host:name>ns1.example.tld</host:name>
      </host:info>
    </info>
    <clTRID>ABC-12345</clTRID>
  </command>
</epp>

Example 5: System answer to the <host:info> command

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
     epp-1.0.xsd">
  <response>
    <result code="1000">
      <msg>Command completed successfully</msg>
    </result>
    <resData>
      <host:infData
       xmlns:host="urn:ietf:params:xml:ns:host-1.0"
       xsi:schemaLocation="urn:ietf:params:xml:ns:host-1.0
       host-1.0.xsd">
        <host:name>ns1.example.tld</host:name>
        <host:roid>NS1_EXAMPLE1-REP</host:roid>
        <host:status s="linked"/>
        <host:status s="clientUpdateProhibited"/>
        <host:addr ip="v4">192.1.2.3</host:addr>
        <host:addr ip="v4">198.1.2.3</host:addr>
        <host:addr ip="v6">1080:0:0:0:8:800:200417A</host:addr>
        <host:clID>ClientY</host:clID>
        <host:crID>ClientX</host:crID>
        <host:crDate>1999-04-03T22:00:00.0Z</host:crDate>
        <host:upID>ClientX</host:upID>
        <host:upDate>1999-12-03T09:00:00.0Z</host:upDate>
        <host:trDate>2000-04-08T09:00:00.0Z</host:trDate>
      </host:infData>
    </resData>
    <trID>
      <clTRID>ABC-12345</clTRID>
      <svTRID>54322-XYZ</svTRID>
    </trID>
  </response>
</epp>

Example 6: Processing of the <host:update> command

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
     epp-1.0.xsd">
  <command>
    <update>
      <host:update
       xmlns:host="urn:ietf:params:xml:ns:host-1.0"
       xsi:schemaLocation="urn:ietf:params:xml:ns:host-1.0
       host-1.0.xsd">
        <host:name>ns1.example.tld</host:name>
        <host:add>
          <host:addr ip="v4">192.3.2.1</host:addr>
          <host:status s="clientUpdateProhibited"/>
        </host:add>
        <host:rem>
          <host:addr ip="v6">1080:0:0:0:8:800:200417A</host:addr>
        </host:rem>
        <host:chg>
          <host:name>ns2.example.tld</host:name>
        </host:chg>
      </host:update>
    </update>
    <clTRID>ABC-12345</clTRID>
  </command>
</epp>


Example 7: System answer to the <host:update> command

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
     epp-1.0.xsd">
  <response>
    <result code="1000">
      <msg>Command completed successfully</msg>
    </result>
    <trID>
      <clTRID>ABC-12345</clTRID>
      <svTRID>54321-XYZ</svTRID>
    </trID>
  </response>
</epp>

Example 8: Processing of the <contact:create> command

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
     epp-1.0.xsd">
  <command>
    <create>
      <contact:create
       xmlns:contact="urn:ietf:params:xml:ns:contact-1.0"
       xsi:schemaLocation="urn:ietf:params:xml:ns:contact-1.0
       contact-1.0.xsd">
        <contact:id>sh8013</contact:id>
        <contact:postalInfo type="int">
          <contact:name>11John Doe</contact:name>
          <contact:org>Example Inc.</contact:org>
          <contact:addr>
            <contact:street>123 Example Dr.</contact:street>
            <contact:street>Suite 100</contact:street>
            <contact:city>Dulles</contact:city>
            <contact:sp>VA</contact:sp>
            <contact:pc>20166-6503</contact:pc>
            <contact:cc>US</contact:cc>
          </contact:addr>
        </contact:postalInfo>
        <contact:voice x="1234">+1.7035555555</contact:voice>
        <contact:fax>+1.7035555556</contact:fax>
        <contact:email>jdoe@example.tld</contact:email>
        <contact:authInfo>
          <contact:pw>2fooBAR</contact:pw>
        </contact:authInfo>
      </contact:create>
    </create>
      <extension>
       <extcon:create xmlns:extcon="urn:nask:params:xml:ns:extcon-1.0"
            xsi:schemaLocation="urn:nask:params:xml:ns:extcon-1.0
            extcon-1.0.xsd">
          <extcon:individual>1</extcon:individual>
          <extcon:consentForPublishing>1</extcon:consentForPublishing>
        </extcon:create>
      </extension>

    <clTRID>ABC-12345</clTRID>
  </command>
</epp>

Example 9: System answer to the <contact:create> command

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
     epp-1.0.xsd">
  <response>
    <result code="1000">
      <msg>Command completed successfully</msg>
    </result>
    <resData>
      <contact:creData
       xmlns:contact="urn:ietf:params:xml:ns:contact-1.0"
       xsi:schemaLocation="urn:ietf:params:xml:ns:contact-1.0
       contact-1.0.xsd">
        <contact:id>sh8013</contact:id>
        <contact:crDate>1999-04-03T22:00:00.0Z</contact:crDate>
      </contact:creData>
    </resData>
    <trID>
      <clTRID>ABC-12345</clTRID>
      <svTRID>54321-XYZ</svTRID>
    </trID>
  </response>
</epp>

Example 10: Processing of the <contact:info> command

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
     epp-1.0.xsd">
  <command>
    <info>
      <contact:info
       xmlns:contact="urn:ietf:params:xml:ns:contact-1.0"
       xsi:schemaLocation="urn:ietf:params:xml:ns:contact-1.0
       contact-1.0.xsd">
        <contact:id>666666</contact:id>
      </contact:info>
    </info>
      <extension>
          <extcon:info
           xmlns:extcon="urn:nask:params:xml:ns:extcon-1.0"
           xsi:schemaLocation="urn:nask:params:xml:ns:extcon-1.0
           extcon-1.0.xsd">
              <extcon:authInfo>
                <extcon:pw>2fooBAR</extcon:pw>
              </extcon:authInfo>
          </extcon:info>
      </extension>
    <clTRID>ABC-12345</clTRID>
  </command>
</epp>


Example 11: System answer to the <contact:info> command

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
     epp-1.0.xsd">
  <response>
    <result code="1000">
      <msg>Command completed successfully</msg>
    </result>
    <resData>
      <contact:infData
       xmlns:contact="urn:ietf:params:xml:ns:contact-1.0"
       xsi:schemaLocation="urn:ietf:params:xml:ns:contact-1.0
       contact-1.0.xsd">
        <contact:id>sh8013</contact:id>
        <contact:roid>SH8013-REP</contact:roid>
        <contact:status s="linked"/>
        <contact:status s="clientDeleteProhibited"/>
        <contact:postalInfo type="int">
          <contact:name>John Doe</contact:name>
          <contact:org>Example Inc.</contact:org>
          <contact:addr>
            <contact:street>123 Example Dr.</contact:street>
            <contact:street>Suite 100</contact:street>
            <contact:city>Dulles</contact:city>
            <contact:sp>VA</contact:sp>
            <contact:pc>20166-6503</contact:pc>
            <contact:cc>US</contact:cc>
          </contact:addr>
        </contact:postalInfo>
        <contact:voice x="1234">+1.7035555555</contact:voice>
        <contact:fax>+1.7035555556</contact:fax>
        <contact:email>jdoe@example.tld</contact:email>
        <contact:clID>ClientY</contact:clID>
        <contact:crID>ClientX</contact:crID>
        <contact:crDate>1999-04-03T22:00:00.0Z</contact:crDate>
        <contact:upID>ClientX</contact:upID>
        <contact:upDate>1999-12-03T09:00:00.0Z</contact:upDate>
        <contact:trDate>2000-04-08T09:00:00.0Z</contact:trDate>
        <contact:authInfo>
          <contact:pw>2fooBAR</contact:pw>
        </contact:authInfo>
      </contact:infData>
    </resData>
    <trID>
      <clTRID>ABC-12345</clTRID>
      <svTRID>54322-XYZ</svTRID>
    </trID>
  </response></epp>


Example 12: Processing of the <contact:update> command

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
     epp-1.0.xsd">
  <command>
    <update>
      <contact:update
       xmlns:contact="urn:ietf:params:xml:ns:contact-1.0"
       xsi:schemaLocation="urn:ietf:params:xml:ns:contact-1.0
       contact-1.0.xsd">
        <contact:id>sh8013</contact:id>
        <contact:add>
          <contact:status s="clientDeleteProhibited"/>
        </contact:add>
        <contact:chg>
          <contact:postalInfo type="int">
            <contact:org/>
            <contact:addr>
              <contact:street>124 Example Dr.</contact:street>
              <contact:street>Suite 200</contact:street>
              <contact:city>Dulles</contact:city>
              <contact:sp>VA</contact:sp>
              <contact:pc>20166-6503</contact:pc>
              <contact:cc>US</contact:cc>
            </contact:addr>
          </contact:postalInfo>
          <contact:voice>+1.7034444444</contact:voice>
          <contact:fax/>
        </contact:chg>
      </contact:update>
    </update>
      <extension>
        <extcon:update xmlns:extcon="urn:nask:params:xml:ns:extcon-1.0"
             xsi:schemaLocation="urn:nask:params:xml:ns:extcon-1.0
             extcon-1.0.xsd">
           <extcon:consentForPublishing>1</extcon:consentForPublishing>
         </extcon:update>
       </extension>
    <clTRID>ABC-12345</clTRID>
  </command>
</epp>


Example 13: System answer to the <contact:update> command

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:ietf:params:xml:ns:epp-1.0
     epp-1.0.xsd">
  <response>
    <result code="1000">
      <msg>Command completed successfully</msg>
    </result>
    <trID>
      <clTRID>ABC-12345</clTRID>
      <svTRID>54321-XYZ</svTRID>
    </trID>
  </response>
</epp>


4.  Formal syntax

Extdom-1.0.xsd:

<?xml version="1.0" encoding="UTF-8"?>
  <schema targetNamespace="http://www.dns.pl/NASK-EPP/extdom-1.0"
          xmlns:extdom="http://www.dns.pl/NASK-EPP/extdom-1.0"
          xmlns:epp="urn:ietf:params:xml:ns:epp-1.0"
          xmlns:eppcom="urn:ietf:params:xml:ns:eppcom-1.0"
          xmlns="http://www.w3.org/2001/XMLSchema"
          elementFormDefault="qualified">

  <!--
  Import common element types.
  -->
    <import namespace="urn:ietf:params:xml:ns:eppcom-1.0"
            schemaLocation="eppcom-1.0.xsd"/>
    <import namespace="urn:ietf:params:xml:ns:epp-1.0"
            schemaLocation="epp-1.0.xsd"/>

    <annotation>
      <documentation>
        NASK Extensible Provisioning Protocol v1.0
        domain extension.
      </documentation>
    </annotation>

    <element name="create" type="extdom:createType"/>
    <element name="dlgData" type="extdom:dlgDataType"/>

      <complexType name="createType">
          <sequence>
              <element name="reason" type="string" minOccurs="0"/>
              <element name="book" minOccurs="0"/>
          </sequence>
      </complexType>

      <complexType name="dlgDataType">
          <sequence>
              <element name="name" type="eppcom:labelType"
               maxOccurs="unbounded"/>
              <element name="ns" type="eppcom:labelType"/>
          </sequence>
      </complexType>
  <!--
  End of schema.
  -->
  </schema>

Extcon-1.0.xsd:

<?xml version="1.0" encoding="UTF-8"?>

  <schema targetNamespace="http://www.dns.pl/NASK-EPP/extcon-1.0"
          xmlns:extcon="http://www.dns.pl/NASK-EPP/extcon-1.0"
          xmlns:epp="urn:ietf:params:xml:ns:epp-1.0"
          xmlns:eppcom="urn:ietf:params:xml:ns:eppcom-1.0"
          xmlns:contact="urn:ietf:params:xml:ns:contact-1.0"
          xmlns="http://www.w3.org/2001/XMLSchema"
          elementFormDefault="qualified">

  <!--
  Import common element types.
  -->
    <import namespace="urn:ietf:params:xml:ns:eppcom-1.0"
            schemaLocation="eppcom-1.0.xsd"/>
    <import namespace="urn:ietf:params:xml:ns:epp-1.0"
            schemaLocation="epp-1.0.xsd"/>

    <annotation>      <documentation>
        NASK Extensible Provisioning Protocol v1.0
        contact extension.
      </documentation>
    </annotation>

    <element name="create" type="extcon:allType"/>
    <element name="update" type="extcon:updateType"/>
    <element name="infData" type="extcon:allType"/>
    <element name="info" type="extcon:infoType"/>

      <complexType name="allType">
          <sequence>
              <element name="individual" type="boolean" minOccurs="0"/>
              <element name="consentForPublishing" type="boolean"
               minOccurs="0"/>
          </sequence>
      </complexType>
      <complexType name="updateType">
          <sequence>
              <element name="consentForPublishing" type="boolean"
               minOccurs="0"/>
          </sequence>
      </complexType>

      <complexType name="infoType">
          <sequence>
              <element name="authInfo" type="extcon:authInfoType"/>
          </sequence>
      </complexType>

      <complexType name="authInfoType">
        <choice>
          <element name="pw" type="eppcom:pwAuthInfoType"/>
          <element name="ext" type="eppcom:extAuthInfoType"/>
        </choice>
      </complexType>

  <!--
  End of schema.
  -->
  </schema>


5.  Security Considerations

   This document does not require any special security considerations
   except those mentioned in documents [1], [2], [3], [4], [5], [6],
   [7].

6.  References

   [1]  S. Hollenbeck "Generic Registry-Registrar Protocol Requirements",
        September 2002, RFC 3375.
   [2]  S. Hollenbeck "Extensible Provisioning Protocol", August 2002,
        Internet-Draft.
   [3]  S. Hollenbeck "Extensible Provisioning Protocol Contact Mapping",
        August 2002, Internet-Draft.
   [4]  S. Hollenbeck "Extensible Provisioning Protocol Domain Name
        Mapping", August 2002, Internet-Draft.
   [5]  S. Hollenbeck "Extensible Provisioning Protocol Host Mapping",
        August 2002, Internet-Draft.
   [6]  S. Hollenbeck "Extensible Provisioning Protocol Transport Over TCP",
        August 2002, Internet-Draft.
   [7]  S. Hollenbeck "Guidelines for Extending the Extensible Provisioning
        Protocol", October 2002, Internet-Draft.
   [8]  T. Zygmuntowicz, P. Wegrzynowicz  "EPP parameters for .pl ccTLD"
        May 2003, Internet-Draft.


7.  Authors' Addresses

Patrycja Wegrzynowicz
NASK
ul. Wawozowa 18
02-796 Warszawa
Poland
Email: patrycjaw@nask.pl

Kuba Laszkiewicz
NASK
ul. Wawozowa 18
02-796 Warszawa
Poland
Email: jakubl@nask.pl

Juliusz Brzostek
NASK
ul. Wawozowa 18
02-796 Warszawa
Poland
Email: juliuszb@nask.pl

Tomek Zygmuntowicz
NASK
ul. Wawozowa 18
02-796 Warszawa
Poland
Email: tomekz@nask.pl

Witold Zarowski
NASK
ul. Wawozowa 18
02-796 Warszawa
Poland
Email: witzar@nask.pl

Krzysztof Olesik
NASK
ul. Wawozowa 18
02-796 Warszawa
Poland
Email: kolesik@nask.pl

Andrzej Bartosiewicz
NASK
ul. Wawozowa 18
02-796 Warszawa
Poland
Email: andrzejb@nask.pl


8.  Full Copyright Statement

   Copyright (C) The Internet Society (2005).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78 and
   except as set forth therein, the authors retain all their rights.

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE
   REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE
   INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed
   to pertain to the implementation or use of the technology
   described in this document or the extent to which any license
   under such rights might or might not be available; nor does it
   represent that it has made any independent effort to identify any
   such rights.  Information on the procedures with respect to
   rights in RFC documents can be found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use
   of such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository
   at http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention
   any copyrights, patents or patent applications, or other
   proprietary rights that may cover technology that may be required
   to implement this standard.  Please address the information to the
   IETF at ietf-ipr@ietf.org.

Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.

