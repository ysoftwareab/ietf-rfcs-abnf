t = current_time - epoch
                                               start

K = | /  ----------------
                             |/           C

                                  Figure 2

target = <                if W     (t + RTT) > 1.5 * cwnd
                  |1.5 * cwnd          cubic
                  |
                  |
                  |W     (t + RTT)
                  | cubic          otherwise
                  \

W    = W    + α      * --------------
                    est    est    cubic        cwnd

                                  Figure 4
ssthresh =                 cubic

            /max(ssthresh, 2)    // reduction on packet loss, cwnd is at least 2 MSS
            |
cwnd =      <
            |max(ssthresh, 1)    // reduction on ECE, cwnd is at least 1 MSS
            \

            max(ssthresh, 2)     // ssthresh is at least 2 MSS
ssthresh =

                               Figure 5

   A side effect of setting β__cubic_ to a value bigger than 0.5 is
   slower convergence.  We believe that while a more adaptive setting of
   β__cubic_ could result in faster convergence, it will make the
   analysis of CUBIC much harder.
   Note that CUBIC MUST continue to reduce _cwnd_ in response to
   congestion events due to ECN-Echo ACKs until it reaches a value of 1
   MSS.  If congestion events indicated by ECN-Echo ACKs persist, a
   sender with a _cwnd_ of 1 MSS MUST reduce its sending rate even
   further.  It can achieve that by using a retransmission timer with
   exponential backoff, as described in [RFC3168].

W    = <
 max   |                  further reduce W
       |                                  max
       |
       |                  otherwise, remember cwnd before reduction
       \cwnd

   At a congestion event, if the current _cwnd_ is less than _W_max_,
   this indicates that the saturation point experienced by this flow is
   getting reduced because of a change in available bandwidth.  Then we
   allow this flow to release more bandwidth by reducing _W_max_
   further.  This action effectively lengthens the time for this flow to
   increase its congestion window, because the reduced _W_max_ forces
   the flow to plateau earlier.  This allows more time for the new flow
   to catch up to its congestion window size.

   Fast Convergence is designed for network environments with multiple
   CUBIC flows.  In network environments with only a single CUBIC flow
   and without any other traffic, Fast Convergence SHOULD be disabled.
prior_cwnd = cwnd

prior_ssthresh = ssthresh

prior_W    = W
                              max    max

prior_K = K

prior_epoch      = epoch
                                  start        start

cwnd = prior_cwnd            |
                                         |
ssthresh = prior_ssthresh    |
                                         |
W    = prior_W               |
             max          max            |
                                         >if cwnd < prior_cwnd
K = prior_K                  |
                                         |
epoch      = prior_epoch     |
                 start              start|
                                         |
W    = prior_W               |
             est          est            /

AVG_W      = |  /  ---------------- * -------
                    cubic   | /   4 * (1 - β     )       __
                            |/              cubic     4 / 3
                                                      |/ p

                                  Figure 6

AVG_W      = | / ------- * -------
                         cubic   |/    1.2         __
                                                4 / 3
                                                |/ p

                                  Figure 7

AVG_W      = 1.054 * -------
                            cubic               __
                                             4 / 3
                                             |/ p

                                  Figure 8

