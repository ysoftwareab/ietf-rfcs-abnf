auth-scheme    = token
auth-param     = token "=" ( token | quoted-string )


challenge   = auth-scheme 1*SP 1#auth-param
realm       = "realm" "=" realm-value
realm-value = quoted-string


credentials = basic-credentials | auth-scheme #auth-param

credentials = basic-credentials
challenge   = "Basic" realm
basic-credentials = "Basic" SP base64-user-pass
base64-user-pass  = <base64 [4] encoding of user-pass,
                        except not limited to 76 char/line>
user-pass   = userid ":" password
userid      = *<TEXT excluding ":">
password    = *TEXT

challenge        =  "Digest" digest-challenge

digest-challenge  = 1#( realm | [ domain ] | nonce |
                         [ opaque ] |[ stale ] | [ algorithm ] |
                      [ qop-options ] )


domain            = "domain" "=" <"> URI ( 1*SP URI ) <">
nonce             = "nonce" "=" nonce-value
nonce-value       = quoted-string
opaque            = "opaque" "=" quoted-string
stale             = "stale" "=" ( "true" | "false" )
algorithm         = "algorithm" "=" ( "MD5" | "MD5-sess" )
qop-options       = "qop" "=" <"> 1#qop-value <">
qop-value         = "auth" | "auth-int" | token


credentials      = "Digest" digest-response

digest-response  = 1#( username | realm | nonce | digest-uri |
                       response | [ algorithm ] | [cnonce] |
                       [opaque] | [server] | [message-qop] |
                       [ nonce-count ] )

username         = "username" "=" username-value
username-value   = quoted-string
digest-uri       = "uri" "=" digest-uri-value
digest-uri-value = request-uri      ; As specified by HTTP/1.1
message-qop      = "qop" "=" qop-value
cnonce           = "cnonce" "=" cnonce-value
cnonce-value     = nonce-value
nonce-count      = "nc" "=" nc-value
nc-value         = 8LHEX
response         = "response" "=" request-digest
LHEX             = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7"
                      |"8" | "9" | "a" | "b" | "c" | "d" | "e" | "f"


request-digest  =
              <"> < KD ( H(A1), unq(nonce-value) ":" H(A2) ) >
request-digest  = <"> < KD ( H(A1),     unq(nonce-value)
                                       ":" nc-value
                                       ":" unq(cnonce-value)
                                       ":" unq(qop-value)
                                       ":" H(A2)
                               ) <">
passwd   = < user's password >

A1       = unq(username-value) ":" unq(realm-value) ":" passwd


A1       = H( unq(username-value) ":" unq(realm-value) ":"
A2       = Method ":" digest-uri-value

A2       = Method ":" digest-uri-value ":" H(entity-body)

username="Mufasa", realm=myhost@testrealm.com

AuthenticationInfo = "Authentication-Info" ":" auth-info
auth-info          = 1#(nextnonce | [ message-qop ]
                            | [ response-auth ] | [ cnonce ]
                            | [nonce-count] )
nextnonce          = "nextnonce" "=" nonce-value
response-auth      = "rspauth" "=" response-digest
response-digest    = <"> *LHEX <">

A2       = Status-Code ":" digest-uri-value

A2       = Status-Code ":" digest-uri-value ":" H(entity-body)

realm="testrealm@host.com",
qop="auth,auth-int",
nonce="dcd98b7102dd2f0e8b11d0f600bfb0c093",
opaque="5ccc069c403ebaf9f0171e9517f40e41"


realm="testrealm@host.com",
nonce="dcd98b7102dd2f0e8b11d0f600bfb0c093",
uri="/dir/index.html",
qop=auth,
nc=0001,
cnonce="0a4f113b",
response="96d2de7d9b47e2a6c0eccb6f7ef3548f",
opaque="5ccc069c403ebaf9f0171e9517f40e41"

