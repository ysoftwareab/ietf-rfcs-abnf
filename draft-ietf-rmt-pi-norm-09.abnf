send_rate = (((int)(Value_mantissa * 4096.0 / 10.0 + 0.5)) << 4) | Value_exponent;

send_rate = (((int)((3.2 * 4096.0 / 10.0) + 0.5)) << 4) | 4;

            = (0x51f << 4) | 0x4

            = 0x51f4

value = (send_rate >> 4) * 10.0 / 4096.0 * power(10.0, (send_rate & x000f))

NORM_REPAIR_ADV_FLAG_LIMIT = 0x01

B_max = Maximum source block length (i.e.,  maximum number of source
             symbols per source block)

L_sym = Encoding symbol length in bytes (i.e., NormSegmentSize)

L_obj = Object length in bytes
N_total = The total number of source blocks into which the transport
               object is partitioned.

N_large = Number of larger source blocks (first set of blocks)

B_large = Size (in encoding symbols) of the larger source blocks

N_small = Number of smaller source blocks (second set of blocks)

B_small = Size (in encoding symbols) of the smaller source blocks

L_final = Length (in bytes) of the last source symbol of the last
               source block (All other symbols are of length L_sym).


S_total = L_obj/L_sym [rounded up to the nearest integer]

N_total = S_total/B_max [rounded up to the nearest integer]

B_ave = S_total/N_total (this may be non-integer)

B_large = B_ave [rounded up to the nearest integer]
B_small = B_ave [rounded down to the nearest integer]
B_fraction = B_ave - B_small

N_large = B_fraction * N_total
N_small = N_total - N_large

L_final = L_obj - (N_large*B_large + N_small*B_small - 1) * L_sym
T_backoff = RandomBackoff(Ksender*GRTTsender, GSIZEsender)

T_rcvrHoldoff =(Ksender+2)*GRTTsender

T_sndrAggregate = (Ksender+1)*GRTT

T_sndrHoldoff = (1*GRTT)

Rsender = ---------------------------------------------------------------
            tRTT * (sqrt((2/3)*p) + 12 * sqrt((3/8)*p) * p * (1 + 32*(p^2)))
S = Nominal transmitted packet size. (In NORM, the "nominal"
         packet size can be determined by the sender as an
         exponentially weighted moving average (EWMA) of transmitted
         packet sizes to account for variable message sizes).

tRTT = The RTT estimate of the current "current limiting receiver"
         (CLR).

p = The loss event fraction of the CLR.


T_backoff = RandomBackoff(K*GRTTsender, GSIZEsender)

T_ccHoldoff = (K*GRTT)

RTT_rcvr = 0.5 * RTT_rcvrPrev + 0.5 * RTT_rcvrNew
RTT_clr = 0.9 * RTT_clr + 0.1 * RTT_clrNew

Rinitial = MIN(NormSegmentSize / GRTT, NormSegmentSize) bytes/second.

Rnew = Rrecv_min

Age = Seq_sender - Seq_clr;
Rsender = Rsender * 0.5;

