token         = <see RFC 2045 Section 5.1>
value         = <see RFC 2045 Section 5.1>
parameter     = <see RFC 2231 Section 7>
attribute     = <see RFC 2231 Section 7>

FWS           = <see RFC 5322 Section 3.2.2>
comment       = <see RFC 5322 Section 3.2.2>
CFWS          = <see RFC 5322 Section 3.2.2>
atext         = <see RFC 5322 Section 3.2.3>
dot-atom-text = <see RFC 5322 Section 3.2.3>
phrase        = <see RFC 5322 Section 3.2.5>
date-time     = <see RFC 5322 Section 3.3>
mailbox       = <see RFC 5322 Section 3.4>
mailbox-list  = <see RFC 5322 Section 3.4>
address-list  = <see RFC 5322 Section 3.4>
body          = <see RFC 5322 Section 3.5>
fields        = <see RFC 5322 Section 3.6>

IPv6address   = <see RFC 3986 Section 3.2.2>
IPv4address   = <see RFC 3986 Section 3.2.2>

ALPHA         = <see RFC 5234 Appendix B.1>
CRLF          = <see RFC 5234 Appendix B.1>
DIGIT         = <see RFC 5234 Appendix B.1>
DQUOTE        = <see RFC 5234 Appendix B.1>
SP            = <see RFC 5234 Appendix B.1>
VCHAR         = <see RFC 5234 Appendix B.1>

unstructured    =  *WSP VCHAR *( [FWS] VCHAR ) *WSP

         NOTE: The [RFC5322] specification sometimes uses [FWS] at the
         beginning or end of ABNF describing header field content.  This
         specification uses *WSP in such cases, also in cases where this
         specification redefines constructs from [RFC5322].  This is

         done for consistency with the restriction described here, but
         the restriction applies to all header fields, not just those
         where ABNF is defined in this document.

optional-field  = <see RFC 5322 Section 3.6.8> Expand

news-fields     =  approved /
                      archive /
                      control /
                      distribution /
                      expires /
                      followup-to /
                      injection-date /
                      injection-info /
                      lines /
                      newsgroups /
                      organization /
                      path /
                      summary /
                      supersedes /
                      user-agent /
                      xref

optional-field  =/    news-fields






fields          =/ *( approved /
                         archive /
                         control /
                         distribution /
                         expires /
                         followup-to /
                         injection-date /
                         injection-info /
                         lines /
                         newsgroups /
                         organization /
                         path /
                         summary /
                         supersedes /
                         user-agent /
                         xref )

optional-field  = <see RFC 5322 Section 3.6.8>

news-fields     =  approved /
                      archive /
                      control /
                      distribution /
                      expires /
                      followup-to /
                      injection-date /
                      injection-info /
                      lines /
                      newsgroups /
                      organization /
                      path /
                      summary /
                      supersedes /
                      user-agent /
                      xref

optional-field  =/    news-fields

fields          =/ *( approved /
                          archive /
                          control /
                          distribution /
                          expires /
                          followup-to /
                          injection-date /
                          injection-info /
                          lines /
                          newsgroups /
                          organization /
                          path /
                          summary /
                          supersedes /
                          user-agent /
                          xref )

fields          =   *(trace
                          *optional-field /
                          *(resent-date /
                           resent-from /
                           resent-sender /
                           resent-to /
                           resent-cc /
                           resent-bcc /
                           resent-msg-id))
                        *(orig-date /
                        from /
                        sender /
                        reply-to /
                        to /
                        cc /
                        bcc /
                        message-id /
                        in-reply-to /
                        references /
                        subject /
                        comments /
                        keywords /
                        optional-field)

message         =   (fields / obs-fields)
                        [CRLF body]

foo = *("a" / "b") / *("c" / "d")

foo = *("a" / "b" / "c" / "d")

fields          =/ *( approved / ...
                          xref )

orig-date       =  "Date:" SP date-time CRLF

      NOTE: This specification does not change [RFC5322], which says
      that agents MUST NOT generate <date-time> constructs that include
      any zone names defined by <obs-zone>.

from            =  "From:" SP mailbox-list CRLF

message-id      =  "Message-ID:" SP *WSP msg-id *WSP CRLF

msg-id          =  "<" msg-id-core ">"
                      ; maximum length is 250 octets

msg-id-core     =  id-left "@" id-right

id-left         =  dot-atom-text

id-right        =  dot-atom-text / no-fold-literal

no-fold-literal =  "[" *mdtext "]"

mdtext          =  %d33-61 /        ; The rest of the US-ASCII
                      %d63-90 /        ; characters not including
                      %d94-126         ; ">", "[", "]", or "\"

newsgroups      =  "Newsgroups:" SP newsgroup-list CRLF

newsgroup-list  =  *WSP newsgroup-name
                      *( [FWS] "," [FWS] newsgroup-name ) *WSP

newsgroup-name  =  component *( "." component )

component       =  1*component-char

component-char  =  ALPHA / DIGIT / "+" / "-" / "_"

path            =  "Path:" SP *WSP path-list tail-entry *WSP CRLF

path-list       =  *( path-identity [FWS] [path-diagnostic] "!" )

path-diagnostic =  diag-match / diag-other / diag-deprecated

diag-match      =  "!"          ; another "!"

diag-other      =  "!." diag-keyword [ "." diag-identity ] [FWS]

diag-deprecated =  "!" IPv4address [FWS]

diag-keyword    =  1*ALPHA      ; see [RFC5537]

diag-identity   =  path-identity / IPv4address / IPv6address

tail-entry      =  path-nodot
                      ; may be the string "not-for-mail"

path-identity   =  ( 1*( label "." ) toplabel ) / path-nodot

path-nodot      =  1*( alphanum / "-" / "_" )   ; legacy names

label           =  alphanum [ *( alphanum / "-" ) alphanum ]

toplabel        =  ( [ label *( "-" ) ] ALPHA *( "-" ) label ) /
                      ( label *( "-" ) ALPHA [ *( "-" ) label ] ) /
                      ( label 1*( "-" ) label )

alphanum        =  ALPHA / DIGIT        ; compare [RFC3696]

subject         =  "Subject:" SP unstructured CRLF

comments        =  "Comments:" SP unstructured CRLF

keywords        =  "Keywords:" SP phrase *("," phrase) CRLF

reply-to        =  "Reply-To:" SP address-list CRLF

sender          =  "Sender:" SP mailbox CRLF

approved        =  "Approved:" SP mailbox-list CRLF

archive         =  "Archive:" SP [CFWS] ("no" / "yes")
                      *( [CFWS] ";" [CFWS] archive-param ) [CFWS] CRLF

archive-param   =  parameter

control         =  "Control:" SP *WSP control-command *WSP CRLF

control-command =  verb *( 1*WSP argument )

verb            =  token

argument        =  1*( %x21-7E )

distribution    =  "Distribution:" SP dist-list CRLF

dist-list       =  *WSP dist-name
                      *( [FWS] "," [FWS] dist-name ) *WSP

dist-name       =  ALPHA / DIGIT
                      *( ALPHA / DIGIT / "+" / "-" / "_" )

expires         =  "Expires:" SP date-time CRLF

followup-to     =  "Followup-To:" SP ( newsgroup-list / poster-text )
                      CRLF

poster-text     =  *WSP %d112.111.115.116.101.114 *WSP
                      ; "poster" in lowercase

injection-date  =  "Injection-Date:" SP date-time CRLF

injection-info  =  "Injection-Info:" SP [CFWS] path-identity
                      [CFWS] *( ";" [CFWS] parameter ) [CFWS] CRLF

      NOTE: The syntax of <parameter> (Section 5.1 of [RFC2045], as
      amended by [RFC2231]), taken in conjunction with the folding rules
      of [RFC0822] (note: not [RFC2822] or [RFC5322]), effectively
      allows [CFWS] to occur on either side of the "=" inside a
      <parameter>.

host-value      =  dot-atom-text / IPv4address / IPv6address /
                      (dot-atom-text ":" ( IPv4address / IPv6address ))

      NOTE: Since any such <host-value> or <address-list> also has to be
      a syntactically correct <value>, it will usually be necessary to
      encapsulate it as a <quoted-string>, for example:

posting-host = "posting.example.com:192.0.2.1"

organization    =  "Organization:" SP unstructured CRLF

      NOTE: There is no "s" in Organization.

references      =  "References:" SP [CFWS] msg-id *(CFWS msg-id)
                      [CFWS] CRLF

summary         =  "Summary:" SP unstructured CRLF

supersedes      =  "Supersedes:" SP *WSP msg-id *WSP CRLF

      NOTE: There is no "c" in Supersedes.

      NOTE: The Supersedes header field defined here has no connection
      with the Supersedes header field that sometimes appears in Email
      messages converted from X.400 according to [RFC2156]; in
      particular, the syntax here permits only one <msg-id> in contrast
      to the multiple <msg-id>s in that Email version.

user-agent      =  "User-Agent:" SP 1*product [CFWS] CRLF

product         =  [CFWS] token [ [CFWS] "/" product-version ]

product-version =  [CFWS] token

xref            =  "Xref:" SP *WSP server-name
                      1*( FWS location ) *WSP CRLF

server-name     =  path-identity

location        =  newsgroup-name ":" article-locator

article-locator =  1*( %x21-27 / %x29-3A / %x3C-7E )
                      ; US-ASCII printable characters
                      ; except '(' and ';'

lines           =  "Lines:" SP *WSP 1*DIGIT *WSP CRLF

