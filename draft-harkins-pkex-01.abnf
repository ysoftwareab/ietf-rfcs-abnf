C = A + B
       The "group operation" on two elements, A and B, that produces a
       third element, C.  For finite field cryptography this is the
       modular multiplication, for elliptic curve cryptography this is
       point addition.

C = a * B
       This denotes repeated application of the group operation to B--
       i.e.  B + B-- (a - 1) times.

a = H(b)
       A cryptographic hash function that takes data b of indeterminate
       length and returns a fixed sized digest a.

a = F(B)
       A mapping function that takes an element and returns a scalar.
       For elliptic curve cryptography, F() returns the x-coordinate of
       the point B.  For finite field cryptography, F() is the identity
       function.

a = KDF-b(c, d)
       A key derivation function that derives an output key a of length
       b from an input key c and context d.

c = a | b
       Concatentation of data a with data b producing c.
Qi = H(Alice|pw)*Pi                Qr = H(Bob|pw)*Pr
M = X + Qa
                           M ------>
Qi = H(Alice|pw)*Pi
N = Y + Qr
Qr = H(Bob|pw)*Pr
ka = KDF-n(F(a*Y'), F(M) | F(N) |
              F(A) | F(Y') | pw)
u = HMAC(ka, F(X) | F(Y') |
              F(A) | Alice | 0)
z = KDF-n(F(x*Y'), F(M) | F(N) |
              F(X) | F(Y') | pw)

                      {A, u}z ------>

z = KDF-n(F(y*X'), F(M) | F(N) |
                                        F(X') | F(Y) | pw)
kb = KDF-n(F(b*X'), F(N) | F(M) |
                                             F(B) | F(X') | pw)
v = HMAC(kb, F(Y) | F(X') |
                                             F(B) | Bob | 1)

