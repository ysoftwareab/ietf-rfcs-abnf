


HTTP Working Group                                         M. Nottingham
Internet-Draft                                                    Akamai
Intended status: Standards Track                              P. McManus
Expires: June 17, 2016                                           Mozilla
                                                              J. Reschke
                                                              greenbytes
                                                       December 15, 2015


                       HTTP Alternative Services
                     draft-ietf-httpbis-alt-svc-10

Abstract

   This document specifies "Alternative Services" for HTTP, which allow
   an origin's resources to be authoritatively available at a separate
   network location, possibly accessed with a different protocol
   configuration.

Editorial Note (To be removed by RFC Editor)

   Discussion of this draft takes place on the HTTPBIS working group
   mailing list (ietf-http-wg@w3.org), which is archived at
   <https://lists.w3.org/Archives/Public/ietf-http-wg/>.

   Working Group information can be found at
   <https://tools.ietf.org/wg/httpbis/> and <http://httpwg.github.io/>;
   source code and issues list for this draft can be found at
   <https://github.com/httpwg/http-extensions>.

   The changes in this draft are summarized in Appendix A.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on June 17, 2016.



Nottingham, et al.        Expires June 17, 2016                 [Page 1]

Internet-Draft          HTTP Alternative Services          December 2015


Copyright Notice

   Copyright (c) 2015 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





































Nottingham, et al.        Expires June 17, 2016                 [Page 2]

Internet-Draft          HTTP Alternative Services          December 2015


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  4
     1.1.  Notational Conventions . . . . . . . . . . . . . . . . . .  4
   2.  Alternative Services Concepts  . . . . . . . . . . . . . . . .  5
     2.1.  Host Authentication  . . . . . . . . . . . . . . . . . . .  7
     2.2.  Alternative Service Caching  . . . . . . . . . . . . . . .  7
     2.3.  Requiring Server Name Indication . . . . . . . . . . . . .  7
     2.4.  Using Alternative Services . . . . . . . . . . . . . . . .  8
   3.  The Alt-Svc HTTP Header Field  . . . . . . . . . . . . . . . .  9
     3.1.  Caching Alt-Svc Header Field Values  . . . . . . . . . . . 11
   4.  The ALTSVC HTTP/2 Frame  . . . . . . . . . . . . . . . . . . . 12
   5.  The Alt-Used HTTP Header Field . . . . . . . . . . . . . . . . 14
   6.  The 421 Misdirected Request HTTP Status Code . . . . . . . . . 14
   7.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 14
     7.1.  Header Field Registrations . . . . . . . . . . . . . . . . 14
     7.2.  The ALTSVC HTTP/2 Frame Type . . . . . . . . . . . . . . . 15
     7.3.  Alt-Svc Parameter Registry . . . . . . . . . . . . . . . . 15
       7.3.1.  Procedure  . . . . . . . . . . . . . . . . . . . . . . 15
       7.3.2.  Registrations  . . . . . . . . . . . . . . . . . . . . 15
   8.  Internationalization Considerations  . . . . . . . . . . . . . 16
   9.  Security Considerations  . . . . . . . . . . . . . . . . . . . 16
     9.1.  Changing Ports . . . . . . . . . . . . . . . . . . . . . . 16
     9.2.  Changing Hosts . . . . . . . . . . . . . . . . . . . . . . 16
     9.3.  Changing Protocols . . . . . . . . . . . . . . . . . . . . 17
     9.4.  Tracking Clients Using Alternative Services  . . . . . . . 18
     9.5.  Confusion Regarding Request Scheme . . . . . . . . . . . . 18
   10. References . . . . . . . . . . . . . . . . . . . . . . . . . . 19
     10.1. Normative References . . . . . . . . . . . . . . . . . . . 19
     10.2. Informative References . . . . . . . . . . . . . . . . . . 20
   Appendix A.  Change Log (to be removed by RFC Editor before
                publication)  . . . . . . . . . . . . . . . . . . . . 20
     A.1.  Since draft-nottingham-httpbis-alt-svc-05  . . . . . . . . 20
     A.2.  Since draft-ietf-httpbis-alt-svc-00  . . . . . . . . . . . 20
     A.3.  Since draft-ietf-httpbis-alt-svc-01  . . . . . . . . . . . 20
     A.4.  Since draft-ietf-httpbis-alt-svc-02  . . . . . . . . . . . 21
     A.5.  Since draft-ietf-httpbis-alt-svc-03  . . . . . . . . . . . 21
     A.6.  Since draft-ietf-httpbis-alt-svc-04  . . . . . . . . . . . 21
     A.7.  Since draft-ietf-httpbis-alt-svc-05  . . . . . . . . . . . 21
     A.8.  Since draft-ietf-httpbis-alt-svc-06  . . . . . . . . . . . 22
     A.9.  Since draft-ietf-httpbis-alt-svc-07  . . . . . . . . . . . 22
     A.10. Since draft-ietf-httpbis-alt-svc-08  . . . . . . . . . . . 23
     A.11. Since draft-ietf-httpbis-alt-svc-09  . . . . . . . . . . . 24
   Appendix B.  Acknowledgements  . . . . . . . . . . . . . . . . . . 24







Nottingham, et al.        Expires June 17, 2016                 [Page 3]

Internet-Draft          HTTP Alternative Services          December 2015


1.  Introduction

   HTTP [RFC7230] conflates the identification of resources with their
   location.  In other words, "http://" (and "https://") URIs are used
   to both name and find things to interact with.

   In some cases, it is desirable to separate identification and
   location in HTTP; keeping the same identifier for a resource, but
   interacting with it at a different location on the network.

   For example:

   o  An origin server might wish to redirect a client to a different
      server when it is under load, or it has found a server in a
      location that is more local to the client.

   o  An origin server might wish to offer access to its resources using
      a new protocol (such as HTTP/2, see [RFC7540]) or one using
      improved security (such as Transport Layer Security (TLS), see
      [RFC5246]).

   o  An origin server might wish to segment its clients into groups of
      capabilities, such as those supporting Server Name Indication
      (SNI, see Section 3 of [RFC6066]) and those not supporting it, for
      operational purposes.

   This specification defines a new concept in HTTP, "Alternative
   Services", that allows an origin server to nominate additional means
   of interacting with it on the network.  It defines a general
   framework for this in Section 2, along with specific mechanisms for
   advertising their existence using HTTP header fields (Section 3) or
   HTTP/2 frames (Section 4), plus a way to indicate that an alternative
   service was used (Section 5).

   It also endorses the status code 421 (Misdirected Request)
   (Section 6) that origin servers (or their nominated alternatives) can
   use to indicate that they are not authoritative for a given origin,
   in cases where the wrong location is used.

1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

   This document uses the Augmented BNF defined in [RFC5234] along with
   the "#rule" extension defined in Section 7 of [RFC7230].  The rules
   below are defined in [RFC5234], [RFC7230], and [RFC7234]:



Nottingham, et al.        Expires June 17, 2016                 [Page 4]

Internet-Draft          HTTP Alternative Services          December 2015


   DIGIT         = <DIGIT, see [RFC5234], Appendix B.1>
   OWS           = <OWS, see [RFC7230], Section 3.2.3>
   delta-seconds = <delta-seconds; see [RFC7234], Section 1.2.1>
   port          = <port, see [RFC7230], Section 2.7>
   quoted-string = <quoted-string, see [RFC7230], Section 3.2.6>
   token         = <token, see [RFC7230], Section 3.2.6>
   uri-host      = <uri-host, see [RFC7230], Section 2.7>

2.  Alternative Services Concepts

   This specification defines a new concept in HTTP, the "Alternative
   Service".  When an origin (see [RFC6454]) has resources that are
   accessible through a different protocol / host / port combination, it
   is said to have an alternative service available.

   An alternative service can be used to interact with the resources on
   an origin server at a separate location on the network, possibly
   using a different protocol configuration.  Alternative services are
   considered authoritative for an origin's resources, in the sense of
   [RFC7230], Section 9.1.

   For example, an origin:

   ("http", "www.example.com", "80")

   might declare that its resources are also accessible at the
   alternative service:

   ("h2", "new.example.com", "81")

   By their nature, alternative services are explicitly at the
   granularity of an origin; i.e., they cannot be selectively applied to
   resources within an origin.

   Alternative services do not replace or change the origin for any
   given resource; in general, they are not visible to the software
   "above" the access mechanism.  The alternative service is essentially
   alternative routing information that can also be used to reach the
   origin in the same way that DNS CNAME or SRV records define routing
   information at the name resolution level.  Each origin maps to a set
   of these routes -- the default route is derived from the origin
   itself and the other routes are introduced based on alternative-
   service information.

   Furthermore, it is important to note that the first member of an
   alternative service tuple is different from the "scheme" component of
   an origin; it is more specific, identifying not only the major
   version of the protocol being used, but potentially communication



Nottingham, et al.        Expires June 17, 2016                 [Page 5]

Internet-Draft          HTTP Alternative Services          December 2015


   options for that protocol.

   This means that clients using an alternative service can change the
   host, port and protocol that they are using to fetch resources, but
   these changes MUST NOT be propagated to the application that is using
   HTTP; from that standpoint, the URI being accessed and all
   information derived from it (scheme, host, port) are the same as
   before.

   Importantly, this includes its security context; in particular, when
   TLS [RFC5246] is used to authenticate, the alternative service will
   need to present a certificate for the origin's host name, not that of
   the alternative.  Likewise, the Host header field ([RFC7230], Section
   5.4) is still derived from the origin, not the alternative service
   (just as it would if a CNAME were being used).

   The changes MAY, however, be made visible in debugging tools,
   consoles, etc.

   Formally, an alternative service is identified by the combination of:

   o  An Application Layer Protocol Negotiation (ALPN) protocol name, as
      per [RFC7301]

   o  A host, as per [RFC3986], Section 3.2.2

   o  A port, as per [RFC3986], Section 3.2.3

   The ALPN protocol name is used to identify the application protocol
   or suite of protocols used by the alternative service.  Note that for
   the purpose of this specification, an ALPN protocol name implicitly
   includes TLS in the suite of protocols it identifies, unless
   specified otherwise in its definition.  In particular, the ALPN name
   "http/1.1", registered by Section 6 of [RFC7301], identifies HTTP/1.1
   over TLS.

   Additionally, each alternative service MUST have:

   o  A freshness lifetime, expressed in seconds; see Section 2.2

   There are many ways that a client could discover the alternative
   service(s) associated with an origin.  This document describes two
   such mechanisms: the "Alt-Svc" HTTP header field (Section 3) and the
   "ALTSVC" HTTP/2 frame type (Section 4).

   The remainder of this section describes requirements that are common
   to alternative services, regardless of how they are discovered.




Nottingham, et al.        Expires June 17, 2016                 [Page 6]

Internet-Draft          HTTP Alternative Services          December 2015


2.1.  Host Authentication

   Clients MUST NOT use alternative services with a host that is
   different than the origin's without strong server authentication;
   this mitigates the attack described in Section 9.2.  One way to
   achieve this is for the alternative to use TLS with a certificate
   that is valid for that origin.

   For example, if the origin's host is "www.example.com" and an
   alternative is offered on "other.example.com" with the "h2" protocol,
   and the certificate offered is valid for "www.example.com", the
   client can use the alternative.  However, if "other.example.com" is
   offered with the "h2c" protocol, the client cannot use it, because
   there is no mechanism in that protocol to establish strong server
   authentication.

2.2.  Alternative Service Caching

   Mechanisms for discovering alternative services also associate a
   freshness lifetime with them; for example, the Alt-Svc header field
   uses the "ma" parameter.

   Clients can choose to use an alternative service instead of the
   origin at any time when it is considered fresh; see Section 2.4 for
   specific recommendations.

   Clients with existing connections to an alternative service do not
   need to stop using it when its freshness lifetime ends; i.e., the
   caching mechanism is intended for limiting how long an alternative
   service can be used for establishing new connections, not limiting
   the use of existing ones.

   Alternative services are fully authoritative for the origin in
   question, including the ability to clear or update cached alternative
   service entries, extend freshness lifetimes, and any other authority
   the origin server would have.

   When alternative services are used to send a client to the most
   optimal server, a change in network configuration can result in
   cached values becoming suboptimal.  Therefore, clients SHOULD remove
   from cache all alternative services that lack the "persist" flag with
   the value "1" when they detect such a change (when information about
   network state is available).

2.3.  Requiring Server Name Indication

   A client MUST only use a TLS-based alternative service if the client
   also supports TLS Server Name Indication (SNI).  This supports the



Nottingham, et al.        Expires June 17, 2016                 [Page 7]

Internet-Draft          HTTP Alternative Services          December 2015


   conservation of IP addresses on the alternative service host.

   Note that the SNI information provided in TLS by the client will be
   that of the origin, not the alternative (as will the Host HTTP header
   field value).

2.4.  Using Alternative Services

   By their nature, alternative services are OPTIONAL: clients do not
   need to use them.  However, it is advantageous for clients to behave
   in a predictable way when they are used by servers (e.g., for load
   balancing).

   Therefore, if a client becomes aware of an alternative service, the
   client SHOULD use that alternative service for all requests to the
   associated origin as soon as it is available, provided the
   alternative service information is fresh (Section 2.2) and the
   security properties of the alternative service protocol are
   desirable, as compared to the existing connection.  A viable
   alternative service is then treated in every way as the origin; this
   includes the ability to advertise alternative services.

   If a client becomes aware of multiple alternative services, it MAY
   choose the most suitable according to its own criteria (again,
   keeping security properties in mind).  For example, an origin might
   advertise multiple alternative services to notify clients of support
   for multiple versions of HTTP.

   A client configured to use a proxy for a given request SHOULD NOT
   directly connect to an alternative service for this request, but
   instead route it through that proxy.

   When a client uses an alternative service for a request, it can
   indicate this to the server using the Alt-Used header field
   (Section 5).

   The client does not need to block requests on any existing
   connection; it can be used until the alternative connection is
   established.  However, if the security properties of the existing
   connection are weak (e.g. cleartext HTTP/1.1) then it might make
   sense to block until the new connection is fully available in order
   to avoid information leakage.

   Furthermore, if the connection to the alternative service fails or is
   unresponsive, the client MAY fall back to using the origin or another
   alternative service.  Note, however, that this could be the basis of
   a downgrade attack, thus losing any enhanced security properties of
   the alternative service.  If the connection to the alternative



Nottingham, et al.        Expires June 17, 2016                 [Page 8]

Internet-Draft          HTTP Alternative Services          December 2015


   service does not negotiate the expected protocol (for example, ALPN
   fails to negotiate h2, or an Upgrade request to h2c is not accepted),
   the connection to the alternative service MUST be considered to have
   failed.

3.  The Alt-Svc HTTP Header Field

   An HTTP(S) origin server can advertise the availability of
   alternative services to clients by adding an Alt-Svc header field to
   responses.

   Alt-Svc       = clear / 1#alt-value
   clear         = %x63.6C.65.61.72; "clear", case-sensitive
   alt-value     = alternative *( OWS ";" OWS parameter )
   alternative   = protocol-id "=" alt-authority
   protocol-id   = token ; percent-encoded ALPN protocol name
   alt-authority = quoted-string ; containing [ uri-host ] ":" port
   parameter     = token "=" ( token / quoted-string )

   The field value consists either of a list of values, each of which
   indicating one alternative service, or the keyword "clear".

   A field value containing the special value "clear" indicates that the
   origin requests all alternatives for that origin to be invalidated
   (including those specified in the same response, in case of an
   invalid reply containing both "clear" and alternative services).

   ALPN protocol names are octet sequences with no additional
   constraints on format.  Octets not allowed in tokens ([RFC7230],
   Section 3.2.6) MUST be percent-encoded as per Section 2.1 of
   [RFC3986].  Consequently, the octet representing the percent
   character "%" (hex 25) MUST be percent-encoded as well.

   In order to have precisely one way to represent any ALPN protocol
   name, the following additional constraints apply:

   1.  Octets in the ALPN protocol name MUST NOT be percent-encoded if
       they are valid token characters except "%", and

   2.  When using percent-encoding, uppercase hex digits MUST be used.

   With these constraints, recipients can apply simple string comparison
   to match protocol identifiers.

   The "alt-authority" component consists of an OPTIONAL uri-host
   ("host" in Section 3.2.2 of [RFC3986]), a colon (":"), and a port
   number.




Nottingham, et al.        Expires June 17, 2016                 [Page 9]

Internet-Draft          HTTP Alternative Services          December 2015


   For example:

   Alt-Svc: h2=":8000"

   This indicates the "h2" protocol ([RFC7540]) on the same host using
   the indicated port 8000.

   An example involving a change of host:

   Alt-Svc: h2="new.example.org:80"

   This indicates the "h2" protocol on the host "new.example.org",
   running on port 80.  Note that the "quoted-string" syntax needs to be
   used because ":" is not an allowed character in "token".

   Examples for protocol name escaping:

   +--------------------+-------------+---------------------+
   | ALPN protocol name | protocol-id | Note                |
   +--------------------+-------------+---------------------+
   | h2                 | h2          | No escaping needed  |
   +--------------------+-------------+---------------------+
   | w=x:y#z            | w%3Dx%3Ay#z | "=" and ":" escaped |
   +--------------------+-------------+---------------------+
   | x%y                | x%25y       | "%" needs escaping  |
   +--------------------+-------------+---------------------+

   Alt-Svc MAY occur in any HTTP response message, regardless of the
   status code.  Note that recipients of Alt-Svc are free to ignore the
   header field (and indeed need to in some situations; see Sections 2.1
   and 6).

   The Alt-Svc field value can have multiple values:

   Alt-Svc: h2c=":8000", h2=":443"

   When multiple values are present, the order of the values reflects
   the server's preference (with the first value being the most
   preferred alternative).

   The value(s) advertised by Alt-Svc can be used by clients to open a
   new connection to an alternative service.  Subsequent requests can
   start using this new connection immediately, or can continue using
   the existing connection while the new connection is created.

   When using HTTP/2 ([RFC7540]), servers SHOULD instead send an ALTSVC
   frame (Section 4).  A single ALTSVC frame can be sent for a
   connection; a new frame is not needed for every request.  Note that,



Nottingham, et al.        Expires June 17, 2016                [Page 10]

Internet-Draft          HTTP Alternative Services          December 2015


   despite this recommendation, Alt-Svc header fields remain valid in
   responses delivered over HTTP/2.

   Each "alt-value" is followed by an OPTIONAL semicolon-separated list
   of additional parameters, each such "parameter" comprising a name and
   a value.

   This specification defines two parameters: "ma" and "persist",
   defined in Section 3.1.  Unknown parameters MUST be ignored, that is
   the values (alt-value) they appear in MUST be processed as if the
   unknown parameter was not present.

   New parameters can be defined in extension specifications (see
   Section 7.3 for registration details).

   Note that all field elements that allow "quoted-string" syntax MUST
   be processed as per Section 3.2.6 of [RFC7230].

3.1.  Caching Alt-Svc Header Field Values

   When an alternative service is advertised using Alt-Svc, it is
   considered fresh for 24 hours from generation of the message.  This
   can be modified with the 'ma' (max-age) parameter.

   Syntax:

   ma = delta-seconds; see [RFC7234], Section 1.2.1

   The delta-seconds value indicates the number of seconds since the
   response was generated the alternative service is considered fresh
   for.

   Alt-Svc: h2=":443"; ma=3600

   See Section 4.2.3 of [RFC7234] for details of determining response
   age.

   For example, a response:

     HTTP/1.1 200 OK
     Content-Type: text/html
     Cache-Control: max-age=600
     Age: 30
     Alt-Svc: h2c=":8000"; ma=60

   indicates that an alternative service is available and usable for the
   next 60 seconds.  However, the response has already been cached for
   30 seconds (as per the Age header field value), so therefore the



Nottingham, et al.        Expires June 17, 2016                [Page 11]

Internet-Draft          HTTP Alternative Services          December 2015


   alternative service is only fresh for the 30 seconds from when this
   response was received, minus estimated transit time.

   Note that the freshness lifetime for HTTP caching (here, 600 seconds)
   does not affect caching of Alt-Svc values.

   When an Alt-Svc response header field is received from an origin, its
   value invalidates and replaces all cached alternative services for
   that origin.

   By default, cached alternative services will be cleared when the
   client detects a network change.  Alternative services that are
   intended to be longer-lived (e.g., those that are not specific to the
   client access network) can carry the "persist" parameter with a value
   "1" as a hint that the service is potentially useful beyond a network
   configuration change.

   Syntax:

   persist = 1DIGIT

   For example:

   Alt-Svc: h2=":443"; ma=2592000; persist=1

   This specification only a defines a single value for "persist";
   others can be defined in future specifications.  Clients MUST ignore
   "persist" parameters with unknown values.

   See Section 2.2 for general requirements on caching alternative
   services.

4.  The ALTSVC HTTP/2 Frame

   The ALTSVC HTTP/2 frame ([RFC7540], Section 4) advertises the
   availability of an alternative service to an HTTP/2 client.

   The ALTSVC frame is a non-critical extension to HTTP/2.  Endpoints
   that do not support this frame can safely ignore it.

   An ALTSVC frame from a server to a client on a stream other than
   stream 0 indicates that the conveyed alternative service is
   associated with the origin of that stream.

   An ALTSVC frame from a server to a client on stream 0 indicates that
   the conveyed alternative service is associated with the origin
   contained in the Origin field of the frame.  An association with an
   origin that the client does not consider authoritative for the



Nottingham, et al.        Expires June 17, 2016                [Page 12]

Internet-Draft          HTTP Alternative Services          December 2015


   current connection MUST be ignored.

   The ALTSVC frame type is 0xa (decimal 10).

    +-------------------------------+-------------------------------+
    |         Origin-Len (16)       | Origin? (*)                 ...
    +-------------------------------+-------------------------------+
    |                   Alt-Svc-Field-Value (*)                   ...
    +---------------------------------------------------------------+

                           ALTSVC Frame Payload

   The ALTSVC frame contains the following fields:

   Origin-Len:  An unsigned, 16-bit integer indicating the length, in
      octets, of the Origin field.

   Origin:  An OPTIONAL sequence of characters containing the ASCII
      serialization of an origin ([RFC6454], Section 6.2) that the
      alternative service is applicable to.

   Alt-Svc-Field-Value:  A sequence of octets (length determined by
      subtracting the length of all preceding fields from the frame
      length) containing a value identical to the Alt-Svc field value
      defined in Section 3 (ABNF production "Alt-Svc").

   The ALTSVC frame does not define any flags.

   The ALTSVC frame is intended for receipt by clients; a server that
   receives an ALTSVC frame can safely ignore it.

   An ALTSVC frame on stream 0 with empty (length 0) "Origin"
   information is invalid and MUST be ignored.  An ALTSVC frame on a
   stream other than stream 0 containing non-empty "Origin" information
   is invalid and MUST be ignored.

   The ALTSVC frame is processed hop-by-hop.  An intermediary MUST NOT
   forward ALTSVC frames, though it can use the information contained in
   ALTSVC frames in forming new ALTSVC frames to send to its own
   clients.

   Receiving an ALTSVC frame is semantically equivalent to receiving an
   Alt-Svc header field.  As a result, the ALTSVC frame causes
   alternative services for the corresponding origin to be replaced.
   Note that it would be unwise to mix the use of Alt-Svc header fields
   with the use of ALTSVC frames, as the sequence of receipt might be
   hard to predict.




Nottingham, et al.        Expires June 17, 2016                [Page 13]

Internet-Draft          HTTP Alternative Services          December 2015


5.  The Alt-Used HTTP Header Field

   The Alt-Used header field is used in requests to indicate the
   identity of the alternative service in use, just as the Host header
   field (Section 5.4 of [RFC7230]) identifies the host and port of the
   origin.

   Alt-Used     = uri-host [ ":" port ]

   Alt-Used is intended to allow alternative services to detect loops,
   differentiate traffic for purposes of load balancing, and generally
   to ensure that it is possible to identify the intended destination of
   traffic, since introducing this information after a protocol is in
   use has proven to be problematic.

   When using an alternative service, clients SHOULD include an Alt-Used
   header field in all requests.

   For example:

     GET /thing HTTP/1.1
     Host: origin.example.com
     Alt-Used: alternate.example.net

6.  The 421 Misdirected Request HTTP Status Code

   The 421 (Misdirected Request) status code is defined in Section 9.1.2
   of [RFC7540] to indicate that the current server instance is not
   authoritative for the requested resource.  This can be used to
   indicate that an alternative service is not authoritative; see
   Section 2).

   Clients receiving 421 (Misdirected Request) from an alternative
   service MUST remove the corresponding entry from its alternative
   service cache (see Section 2.2) for that origin.  Regardless of the
   idempotency of the request method, they MAY retry the request, either
   at another alternative server, or at the origin.

   An Alt-Svc header field in a 421 (Misdirected Request) response MUST
   be ignored.

7.  IANA Considerations

7.1.  Header Field Registrations

   HTTP header fields are registered within the "Message Headers"
   registry maintained at
   <https://www.iana.org/assignments/message-headers/>.



Nottingham, et al.        Expires June 17, 2016                [Page 14]

Internet-Draft          HTTP Alternative Services          December 2015


   This document defines the following HTTP header fields, so their
   associated registry entries shall be added according to the permanent
   registrations below (see [BCP90]):

   +-------------------+----------+----------+-----------+
   | Header Field Name | Protocol | Status   | Reference |
   +-------------------+----------+----------+-----------+
   | Alt-Svc           | http     | standard | Section 3 |
   | Alt-Used          | http     | standard | Section 5 |
   +-------------------+----------+----------+-----------+

   The change controller is: "IETF (iesg@ietf.org) - Internet
   Engineering Task Force".

7.2.  The ALTSVC HTTP/2 Frame Type

   This document registers the ALTSVC frame type in the HTTP/2 Frame
   Types registry ([RFC7540], Section 11.2).

      Frame Type: ALTSVC

      Code: 0xa

      Specification: Section 4 of this document

7.3.  Alt-Svc Parameter Registry

   The HTTP Alt-Svc Parameter Registry defines the name space for
   parameters.  It will be created and maintained at (the suggested URI)
   <http://www.iana.org/assignments/http-alt-svc-parameters>.

7.3.1.  Procedure

   A registration MUST include the following fields:

   o  Parameter Name

   o  Pointer to specification text

   Values to be added to this name space require Expert Review (see
   [RFC5226], Section 4.1).

7.3.2.  Registrations

   The HTTP Alt-Svc Parameter Registry is to be populated with the
   registrations below:





Nottingham, et al.        Expires June 17, 2016                [Page 15]

Internet-Draft          HTTP Alternative Services          December 2015


   +-------------------+-------------+
   | Alt-Svc Parameter | Reference   |
   +-------------------+-------------+
   | ma                | Section 3.1 |
   | persist           | Section 3.1 |
   +-------------------+-------------+

8.  Internationalization Considerations

   An internationalized domain name that appears in either the header
   field (Section 3) or the HTTP/2 frame (Section 4) MUST be expressed
   using A-labels ([RFC5890], Section 2.3.2.1).

9.  Security Considerations

9.1.  Changing Ports

   Using an alternative service implies accessing an origin's resources
   on an alternative port, at a minimum.  An attacker that can inject
   alternative services and listen at the advertised port is therefore
   able to hijack an origin.  On certain servers, it is normal for users
   to be able to control some personal pages available on a shared port,
   and also to accept to requests on less-privileged ports.

   For example, an attacker that can add HTTP response header fields to
   some pages can redirect traffic for an entire origin to a different
   port on the same host using the Alt-Svc header field; if that port is
   under the attacker's control, they can thus masquerade as the HTTP
   server.

   On servers, this risk can be reduced by restricting the ability to
   advertise alternative services, and restricting who can open a port
   for listening on that host.  Clients can reduce this risk by imposing
   stronger requirements (e.g. strong authentication) when moving from
   System Ports to User or Dynamic Ports, or from User Ports to Dynamic
   Ports, as defined in Section 6 of [RFC6335].

   It is always valid for a client to ignore an alternative service
   advertisement which does not meet its implementation-specific
   security requirements.  Servers can increase the likelihood of
   clients using the alternative service by providing strong
   authentication even when not required.

9.2.  Changing Hosts

   When the host is changed due to the use of an alternative service, it
   presents an opportunity for attackers to hijack communication to an
   origin.



Nottingham, et al.        Expires June 17, 2016                [Page 16]

Internet-Draft          HTTP Alternative Services          December 2015


   For example, if an attacker can convince a user agent to send all
   traffic for "innocent.example.org" to "evil.example.com" by
   successfully associating it as an alternative service, they can
   masquerade as that origin.  This can be done locally (see mitigations
   in Section 9.1) or remotely (e.g., by an intermediary as a man-in-
   the-middle attack).

   This is the reason for the requirement in Section 2.1 that any
   alternative service with a host different from the origin's be
   strongly authenticated with the origin's identity; i.e., presenting a
   certificate for the origin proves that the alternative service is
   authorized to serve traffic for the origin.

   However, this authorization is only as strong as the method used to
   authenticate the alternative service.  In particular, there are well-
   known exploits to make an attacker's certificate appear as
   legitimate.

   Alternative services could be used to persist such an attack; for
   example, an intermediary could man-in-the-middle TLS-protected
   communication to a target, and then direct all traffic to an
   alternative service with a large freshness lifetime, so that the user
   agent still directs traffic to the attacker even when not using the
   intermediary.

   Implementations MUST perform any certificate-pinning validation (e.g.
   [RFC7469]) on alternative services just as they would on direct
   connections to the origin.  Implementations might also choose to add
   other requirements around which certificates are acceptable for
   alternative services.

9.3.  Changing Protocols

   When the ALPN protocol is changed due to the use of an alternative
   service, the security properties of the new connection to the origin
   can be different from that of the "normal" connection to the origin,
   because the protocol identifier itself implies this.

   For example, if an "https://" URI has a protocol advertised that does
   not use some form of end-to-end encryption (most likely, TLS), it
   violates the expectations for security that the URI scheme implies.

   Therefore, clients cannot blindly use alternative services, but
   instead evaluate the option(s) presented to assure that security
   requirements and expectations (of specifications, implementations and
   end users) are met.





Nottingham, et al.        Expires June 17, 2016                [Page 17]

Internet-Draft          HTTP Alternative Services          December 2015


9.4.  Tracking Clients Using Alternative Services

   Choosing an alternative service implies connecting to a new, server-
   supplied host name.  By using many different (potentially unique)
   host names, servers could conceivably track client requests.  Such
   tracking could follow users across multiple networks, when the
   "persist" flag is used.

   Clients concerned by the additional fingerprinting can choose to
   ignore alternative service advertisements.

   In a user agent, any alternative service information MUST be removed
   when origin-specific data is cleared (for instance, when cookies are
   cleared).

9.5.  Confusion Regarding Request Scheme

   Some server-side HTTP applications make assumptions about security
   based upon connection context; for example, equating being served
   upon port 443 with the use of an "https://" URI (and the various
   security properties that implies).

   This affects not only the security properties of the connection
   itself, but also the state of the client at the other end of it; for
   example, a Web browser treats "https://" URIs differently than
   "http://" URIs in many ways, not just for purposes of protocol
   handling.

   Since one of the uses of Alternative Services is to allow a
   connection to be migrated to a different protocol and port, these
   applications can become confused about the security properties of a
   given connection, sending information (e.g., cookies, content) that
   is intended for a secure context (e.g., an "https://" URI) to a
   client that is not treating it as one.

   This risk can be mitigated in servers by using the URI scheme
   explicitly carried by the protocol (e.g., ":scheme" in HTTP/2 or the
   "absolute form" of the request target in HTTP/1.1) as an indication
   of security context, instead of other connection properties
   ([RFC7540], Section 8.1.2.3 and [RFC7230], Section 5.3.2).

   When the protocol does not explicitly carry the scheme (e.g., as is
   usually the case for HTTP/1.1 over TLS, servers can, mitigate this
   risk by either assuming that all requests have an insecure context,
   or by refraining from advertising alternative services for insecure
   schemes (such as HTTP).

10.  References



Nottingham, et al.        Expires June 17, 2016                [Page 18]

Internet-Draft          HTTP Alternative Services          December 2015


10.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, DOI 10.17487/
              RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, "Uniform
              Resource Identifier (URI): Generic Syntax", STD 66,
              RFC 3986, DOI 10.17487/RFC3986, January 2005,
              <http://www.rfc-editor.org/info/rfc3986>.

   [RFC5226]  Narten, T. and H. Alvestrand, "Guidelines for Writing an
              IANA Considerations Section in RFCs", BCP 26, RFC 5226,
              DOI 10.17487/RFC5226, May 2008,
              <http://www.rfc-editor.org/info/rfc5226>.

   [RFC5234]  Crocker, D. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", STD 68, RFC 5234, DOI 10.17487/
              RFC5234, January 2008,
              <http://www.rfc-editor.org/info/rfc5234>.

   [RFC5890]  Klensin, J., "Internationalized Domain Names for
              Applications (IDNA): Definitions and Document Framework",
              RFC 5890, DOI 10.17487/RFC5890, August 2010,
              <http://www.rfc-editor.org/info/rfc5890>.

   [RFC6066]  Eastlake, D., "Transport Layer Security (TLS) Extensions:
              Extension Definitions", RFC 6066, DOI 10.17487/RFC6066,
              January 2011, <http://www.rfc-editor.org/info/rfc6066>.

   [RFC6454]  Barth, A., "The Web Origin Concept", RFC 6454,
              DOI 10.17487/RFC6454, December 2011,
              <http://www.rfc-editor.org/info/rfc6454>.

   [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
              Protocol (HTTP/1.1): Message Syntax and Routing",
              RFC 7230, DOI 10.17487/RFC7230, June 2014,
              <http://www.rfc-editor.org/info/rfc7230>.

   [RFC7234]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
              Ed., "Hypertext Transfer Protocol (HTTP/1.1): Caching",
              RFC 7234, DOI 10.17487/RFC7234, June 2014,
              <http://www.rfc-editor.org/info/rfc7234>.

   [RFC7301]  Friedl, S., Popov, A., Langley, A., and S. Emile,
              "Transport Layer Security (TLS) Application-Layer Protocol
              Negotiation Extension", RFC 7301, DOI 10.17487/RFC7301,



Nottingham, et al.        Expires June 17, 2016                [Page 19]

Internet-Draft          HTTP Alternative Services          December 2015


              July 2014, <http://www.rfc-editor.org/info/rfc7301>.

   [RFC7540]  Belshe, M., Peon, R., and M. Thomson, Ed., "Hypertext
              Transfer Protocol version 2", RFC 7540, DOI 10.17487/
              RFC7540, May 2015,
              <http://www.rfc-editor.org/info/rfc7540>.

10.2.  Informative References

   [BCP90]    Klyne, G., Nottingham, M., and J. Mogul, "Registration
              Procedures for Message Header Fields", BCP 90, RFC 3864,
              September 2004, <http://www.rfc-editor.org/info/bcp90>.

   [RFC5246]  Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.2", RFC 5246, DOI 10.17487/
              RFC5246, August 2008,
              <http://www.rfc-editor.org/info/rfc5246>.

   [RFC6335]  Cotton, M., Eggert, L., Touch, J., Westerlund, M., and S.
              Cheshire, "Internet Assigned Numbers Authority (IANA)
              Procedures for the Management of the Service Name and
              Transport Protocol Port Number Registry", RFC 6335,
              DOI 10.17487/RFC6335, August 2011,
              <http://www.rfc-editor.org/info/rfc6335>.

   [RFC7469]  Evans, C., Palmer, C., and R. Sleevi, "Public Key Pinning
              Extension for HTTP", RFC 7469, DOI 10.17487/RFC7469,
              April 2015, <http://www.rfc-editor.org/info/rfc7469>.

Appendix A.  Change Log (to be removed by RFC Editor before publication)

A.1.  Since draft-nottingham-httpbis-alt-svc-05

   This is the first version after adoption of
   draft-nottingham-httpbis-alt-svc-05 as Working Group work item.  It
   only contains editorial changes.

A.2.  Since draft-ietf-httpbis-alt-svc-00

   Selected 421 as proposed status code for "Not Authoritative".

   Changed header field syntax to use percent-encoding of ALPN protocol
   names (<https://github.com/http2/http2-spec/issues/446>).

A.3.  Since draft-ietf-httpbis-alt-svc-01

   Updated HTTP/1.1 references.




Nottingham, et al.        Expires June 17, 2016                [Page 20]

Internet-Draft          HTTP Alternative Services          December 2015


   Renamed "Service" to "Alt-Svc-Used" and reduced information to a flag
   to address fingerprinting concerns
   (<https://github.com/http2/http2-spec/issues/502>).

   Note that ALTSVC frame is preferred to Alt-Svc header field
   (<https://github.com/http2/http2-spec/pull/503>).

   Incorporate ALTSRV frame
   (<https://github.com/http2/http2-spec/pull/507>).

   Moved definition of status code 421 to HTTP/2.

   Partly resolved <https://github.com/httpwg/http-extensions/issues/5>.

A.4.  Since draft-ietf-httpbis-alt-svc-02

   Updated ALPN reference.

   Resolved <https://github.com/httpwg/http-extensions/issues/2>.

A.5.  Since draft-ietf-httpbis-alt-svc-03

   Renamed "Alt-Svc-Used" to "Alt-Used"
   (<https://github.com/httpwg/http-extensions/issues/17>).

   Clarify ALTSVC Origin information requirements
   (<https://github.com/httpwg/http-extensions/issues/19>).

   Remove/tune language with respect to tracking risks (see
   <https://github.com/httpwg/http-extensions/issues/34>).

A.6.  Since draft-ietf-httpbis-alt-svc-04

   Mention tracking by alt-svc host name in Security Considerations
   (<https://github.com/httpwg/http-extensions/issues/36>).

   "421 (Not Authoritative)" -> "421 (Misdirected Request)".

   Allow the frame to carry multiple indicator and use the same payload
   formats for both
   (<https://github.com/httpwg/http-extensions/issues/37>).

A.7.  Since draft-ietf-httpbis-alt-svc-05

   Go back to specifying the origin in Alt-Used, but make it a "SHOULD"
   (<https://github.com/httpwg/http-extensions/issues/34>).

   Restore Origin field in ALT-SVC frame



Nottingham, et al.        Expires June 17, 2016                [Page 21]

Internet-Draft          HTTP Alternative Services          December 2015


   (<https://github.com/httpwg/http-extensions/issues/38>).

A.8.  Since draft-ietf-httpbis-alt-svc-06

   Disallow use of alternative services when the protocol might not
   carry the scheme
   (<https://github.com/httpwg/http-extensions/issues/12>).

   Align opp-sec and alt-svc
   (<https://github.com/httpwg/http-extensions/issues/33>).

   alt svc frame on pushed (even and non-0) frame
   (<https://github.com/httpwg/http-extensions/issues/44>).

   "browser" -> "user agent"
   (<https://github.com/httpwg/http-extensions/pull/61>).

   ABNF for "parameter"
   (<https://github.com/httpwg/http-extensions/issues/65>).

   Updated HTTP/2 reference.

A.9.  Since draft-ietf-httpbis-alt-svc-07

   Alt-Svc alternative cache invalidation
   (<https://github.com/httpwg/http-extensions/issues/16>).

   Unexpected Alt-Svc frames
   (<https://github.com/httpwg/http-extensions/issues/18>).

   Associating Alt-Svc header with an origin
   (<https://github.com/httpwg/http-extensions/issues/21>).

   ALPN identifiers in Alt-Svc
   (<https://github.com/httpwg/http-extensions/issues/43>).

   Number of alternate services used
   (<https://github.com/httpwg/http-extensions/issues/58>).

   Proxy and .pac interaction
   (<https://github.com/httpwg/http-extensions/issues/62>).

   Need to define extensibility for alt-svc parameters
   (<https://github.com/httpwg/http-extensions/issues/69>).

   Persistence of alternates across network changes
   (<https://github.com/httpwg/http-extensions/issues/71>).




Nottingham, et al.        Expires June 17, 2016                [Page 22]

Internet-Draft          HTTP Alternative Services          December 2015


   Alt-Svc header with 421 status
   (<https://github.com/httpwg/http-extensions/issues/75>).

   Incorporate several editorial improvements suggested by Mike Bishop
   (<https://github.com/httpwg/http-extensions/pull/77>,
   <https://github.com/httpwg/http-extensions/pull/78>).

   Alt-Svc response header field in HTTP/2 frame
   (<https://github.com/httpwg/http-extensions/issues/87>).

A.10.  Since draft-ietf-httpbis-alt-svc-08

   Remove left over text about ext-params, applying to an earlier
   version of Alt-Used (see
   <https://github.com/httpwg/http-extensions/issues/34>).

   Conflicts between Alt-Svc and ALPN
   (<https://github.com/httpwg/http-extensions/issues/72>).

   Elevation of privilege
   (<https://github.com/httpwg/http-extensions/issues/73>).

   Alternates of alternates
   (<https://github.com/httpwg/http-extensions/issues/74>).

   Alt-Svc and Cert Pinning
   (<https://github.com/httpwg/http-extensions/issues/76>).

   Using alt-svc on localhost (no change to spec, see
   <https://github.com/httpwg/http-extensions/issues/89>).

   IANA procedure for alt-svc parameters
   (<https://github.com/httpwg/http-extensions/issues/96>).

   Alt-svc from https (1.1) to https (1.1)
   (<https://github.com/httpwg/http-extensions/issues/91>).

   Alt-svc vs the ability to convey the scheme inside the protocol
   (<https://github.com/httpwg/http-extensions/issues/92>).

   Reconciling MAY/can vs. SHOULD
   (<https://github.com/httpwg/http-extensions/issues/101>).

   Typo in alt-svc caching example
   (<https://github.com/httpwg/http-extensions/issues/117>).






Nottingham, et al.        Expires June 17, 2016                [Page 23]

Internet-Draft          HTTP Alternative Services          December 2015


A.11.  Since draft-ietf-httpbis-alt-svc-09

   Editorial improvements
   (<https://github.com/httpwg/http-extensions/issues/118>,
   <https://github.com/httpwg/http-extensions/issues/119>,
   <https://github.com/httpwg/http-extensions/issues/120>,
   <https://github.com/httpwg/http-extensions/issues/121>,
   <https://github.com/httpwg/http-extensions/issues/122>,
   <https://github.com/httpwg/http-extensions/issues/123>,
   <https://github.com/httpwg/http-extensions/issues/125>,
   <https://github.com/httpwg/http-extensions/issues/126>).

Appendix B.  Acknowledgements

   Thanks to Adam Langley, Bence Beky, Eliot Lear, Erik Nygren, Guy
   Podjarny, Herve Ruellan, Lucas Pardue, Martin Thomson, Matthew
   Kerwin, Mike Bishop, Paul Hoffman, Richard Barnes, Richard Bradbury,
   Stephen Farrell, Stephen Ludin, and Will Chan for their feedback and
   suggestions.

   The Alt-Svc header field was influenced by the design of the
   Alternate-Protocol header field in SPDY.

Authors' Addresses

   Mark Nottingham
   Akamai

   EMail: mnot@mnot.net
   URI:   https://www.mnot.net/


   Patrick McManus
   Mozilla

   EMail: mcmanus@ducksong.com
   URI:   https://mozillians.org/u/pmcmanus/


   Julian F. Reschke
   greenbytes GmbH

   EMail: julian.reschke@greenbytes.de
   URI:   https://greenbytes.de/tech/webdav/







Nottingham, et al.        Expires June 17, 2016                [Page 24]

