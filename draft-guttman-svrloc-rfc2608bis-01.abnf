list   = null / slist
null   = ; Null indicates no characters at all, an empty list.
slist  = string / string ',' slist
string = ; Allowable strings depend on the List
unsafe = ',' / NULL
escape = "\" HEXDIG HEXDIG

service-type       = generic-uri-scheme / service-scheme
generic-uri-scheme = ALPHA *( alpha / digit / '+' / '-' / '.' )
service-scheme     = "service:" type ['.' na ] [':' type ]
type               = 1*(alpha / digit / '+' / '-' )
na                 = 1*(alpha / digit / '+' / '-' )

scope-list = scope-val / scope-val ',' scope-list
scope-val = 1*safe
safe = ; Any character except reserved.
reserved = '(' / ')' / ',' / '\' / '!'  / '<' / '=' / '>' / '~' /
                  CTL / ';' / '*' / '+'
escape-val = '\' HEXDIG HEXDIG

attr-list  = attribute / attribute ',' attr-list
attribute  = '(' attr-tag '=' val-list ')' / attr-tag
val-list   = attr-val / attr-val ',' val-list
attr-tag   = 1*safe-tag / nonstd-tag
nonstd-tag = "x-" enum '-' 1*safe-tag
enum       = 1*DIGIT
                     ; The <enum> field corresponds to an Enterprise
                     ; Number registered with IANA. [IANA] Using this
                     ; prefix avoids collisions in interpretation of
                     ; nonstandard attribute name.
attr-val   = intval / strval / boolval / opaque
intval     = [-]1*DIGIT
strval     = 1*safe-val
boolval    = "true" / "false"
opaque     = "\FF" 1*escape-val
safe-val   = ; Any character except reserved.
safe-tag   = ; Any character except reserved, '*' and bad-tag.
reserved   = '(' / ')' / ',' / '\' / '!'  / '<' / '=' / '>' / '~' / CTL
escape-val = '\' HEXDIG HEXDIG
bad-tag    = CR / LF / HTAB / '_'

simple-query  =  conjoin / term
conjoin       =  "(&" term-list ')'
term-list     =  term term-list / term
term          =  '(' tag querytype item ')' / '(' tag "=*)"
                          ; The "=*" term tests if the attribute is
                          ; present.
tag           =  1*tag-safe
querytype     =  '='  / "~=" / ">=" / "<="
                          ; These correspond to equal, approx,
                          ; greater than or equal, less than or
                          ; equal.
item          =  value / substring
                          ; Only substring matching is supported.
value         =  1*val-safe
substring     =  [ value ] any [ value ]
any           =  '*' *(value "*")
tag-unsafe    =  val-unsafe / CR / LF / HTAB / '_'
tag-safe      =  ; All UTF-8 characters are included except
                          ; those in tag-unsafe.  Tag-unsafe must be
                          ; escaped.
val-unsafe    =  '(' / ')' / ',' / '' / '!'  / '<' / '=' /
                          '>' / '~' / CTL
val-safe      =  ; All UTF-8 characters are included
                          ; except those in val-unsafe. Val-unsafe
                          ; must be escaped.
escaped       =  '' HEXDIG HEXDIG

only=true" in their attribute list.

