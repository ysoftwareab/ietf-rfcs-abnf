vcard-entity = 1*(vcard)

vcard = "BEGIN" ":" "VCARD" CRLF
             1*contentline
             "END" ":" "VCARD" CRLF
       ;A vCard object MUST include the VERSION and FN properties.

contentline = [group "."] name *(";" param) ":" value CRLF
       ; When parsing a content line, folded lines must first
       ; be unfolded according to the unfolding procedure
       ; described above.
       ; When generating a content line, lines longer than 75
       ; characters SHOULD be folded according to the folding
       ; procedure described above.

group = 1*(ALPHA / DIGIT / "-")
name  = "SOURCE" / "NAME" / "KIND" / "FN" / "N" / "NICKNAME"
           / "PHOTO" / "BDAY" / "DDAY" / "BIRTH" / "DEATH"
           / "ANNIVERSARY" / "SEX" / "ADR" / "LABEL" / "TEL" / "EMAIL"
           / "IMPP" / "LANG" / "TZ" / "GEO" / "TITLE" / "ROLE" / "LOGO"
           / "ORG" / "MEMBER" / "RELATED" / "CATEGORIES" / "NOTE"
           / "PRODID" / "REV" / "SOUND" / "UID" / "CLIENTPIDMAP" / "URL"
           / "VERSION" / "CLASS" / "KEY" / "FBURL" / "CALADRURI"
           / "CALURI" / "XML" / iana-token / x-name
       ; Parsing of the param and value is based on the "name" as
       ; defined in ABNF sections below.
       ; Group and name are case-insensitive.

iana-token = 1*(ALPHA / DIGIT / "-")
       ; identifier registered with IANA

x-name = "x-" 1*(ALPHA / DIGIT / "-")
       ; Names that begin with "x-" or "X-" are
       ; reserved for experimental use, not intended for released
       ; products, or for use in bilateral agreements.

param = language-param / encoding-param / value-param / pref-param
           / pid-param / type-param / geo-param / tz-param /
           / sort-as-param / calscale-param / version-param
           / fmttype-param / any-param
       ; Allowed parameters depend on property name.

param-value = *SAFE-CHAR / DQUOTE *QSAFE-CHAR DQUOTE

any-param  = (iana-token / x-name) "=" param-value

NON-ASCII = %x80-FF
       ; Use is restricted by UTF-8

QSAFE-CHAR = WSP / %x21 / %x23-7E / NON-ASCII
       ; Any character except CTLs, DQUOTE

SAFE-CHAR = WSP / %x21 / %x23-39 / %x3C-7E / NON-ASCII
       ; Any character except CTLs, DQUOTE, ";", ":"

VALUE-CHAR = WSP / VCHAR / NON-ASCII
       ; Any textual character

value = text
           / text-list
           / date-list
           / time-list
           / date-time-list
           / date-and-or-time-list
           / timestamp-list
           / boolean
           / integer-list
           / float-list
           / binary
           / URI               ; from Section 3 of [RFC3986]
           / iana-valuespec
       ; Actual value type depends on property name and VALUE parameter.

text = *VALUE-CHAR

text-list = *TEXT-LIST-CHAR *("," *TEXT-LIST-CHAR)

TEXT-LIST-CHAR = "\\" / "\," / "\n"
                    / <any VALUE-CHAR except , or \ or newline>
        ; Backslashes, commas, and newlines must be encoded.

date-list             = date             *("," date)
time-list             = time             *("," time)
date-time-list        = date-time        *("," date-time)
date-and-or-time-list = date-and-or-time *("," date-and-or-time)
timestamp-list        = timestamp        *("," timestamp)
integer-list          = integer          *("," integer)
float-list            = float            *("," float)

boolean = "TRUE" / "FALSE"
integer = [sign] 1*DIGIT
float   = [sign] 1*DIGIT ["." 1*DIGIT]

sign = "+" / "-"
binary = <A binary string encoded as per the ENCODING parameter>

year   = 4DIGIT  ; 0000-9999
month  = 2DIGIT  ; 01-12
day    = 2DIGIT  ; 01-28/29/30/31 depending on month and leap year
hour   = 2DIGIT  ; 00-23
minute = 2DIGIT  ; 00-59
second = 2DIGIT  ; 00-58/59/60 depending on leap second
zone   = utc-designator / utc-offset
utc-designator = %d90  ; uppercase "Z"

date          = year    [month  day]
                   / year "-" month
                   / "--"     month [day]
                   / "--"      "-"   day
date-noreduc  = year     month  day
                   / "--"     month  day
                   / "--"      "-"   day
date-complete = year     month  day

time          = hour [minute [second]] [zone]
                   /  "-"  minute [second]  [zone]
                   /  "-"   "-"    second   [zone]
time-notrunc  = hour [minute [second]] [zone]
time-complete = hour  minute  second   [zone]

time-designator = %d84  ; uppercase "T"
date-time = date-noreduc  time-designator time-notrunc
timestamp = date-complete time-designator time-complete

date-and-or-time = date-time / date / time-designator time

utc-offset = sign hour [minute]

Language-Tag = <Language-Tag, defined in [RFC5646], Section 2.1>

iana-valuespec = <value-spec, see Section 12>
                    ; a publicly-defined valuetype format, registered
                    ; with IANA, as defined in section 12 of this
                    ; document

language-param = "LANGUAGE=" Language-Tag
             ; Language-Tag is defined in section 2.1 of RFC 5646

encoding-param = "ENCODING=" encoding-type

encoding-type = "b"          ; from [RFC2047]
                         / iana-token   ; registered as in section 12

value-param = "VALUE=" value-type

value-type = "text"
                / "uri"
                / "date"
                / "time"
                / "date-time"
                / "timestamp"
                / "boolean"
                / "integer"
                / "float"
                / "binary"
                / "language-tag"
                / iana-token  ; registered as described in section 12
                / x-name
pref-param = "PREF=" (1*2DIGIT / "100")
                                ; An integer between 1 and 100.

pid-param = "PID=" pid-value *("," pid-value)
pid-value = 1*DIGIT ["." 1*DIGIT]

type-param = "TYPE=" type-value *("," type-value)

type-value = "work" / "home" / type-param-tel
                      / type-param-related / iana-token / x-name
             ; This is further defined in individual property sections.

calscale-param = "CALSCALE=" calscale-value

calscale-value = "gregorian" / iana-token / x-name

sort-as-param = "SORT-AS=" sort-as-value

sort-as-value = list-component *(";" list-component)

geo-param = "GEO=" DQUOTE uri DQUOTE

tz-param  = "TZ=" DQUOTE (text / uri) DQUOTE

version-param = "VERSION=" param-value

fmttype-param = "FMTTYPE=" type-name "/" subtype-name
       ; "type-name" and "subtype-name" are defined in
       ; Section 4.2 of [RFC4288].

BEGIN-param =  ; no parameter allowed
BEGIN-value = "VCARD"

END-param =  ; no parameter allowed
END-value = "VCARD"

SOURCE-param = "VALUE=uri" / pid-param / pref-param / any-param
SOURCE-value = uri
NAME-param = "VALUE=text" / any-param
NAME-value = text

KIND-param = "VALUE=text" / any-param
KIND-value = "individual" / "group" / "org" / "location" / "thing"
                / iana-token / x-name

XML-param = XML-text-param / XML-binary-param
XML-value = XML-text-value / XML-binary-value
       ; Value and parameter MUST match.

XML-text-param = "VALUE=text"
XML-text-value = text

XML-binary-param = "VALUE=binary" / encoding-param
XML-binary-param = binary

XML-param =/ version-param
       ; VERSION parameter MUST be present.

FN-param = "VALUE=text" / type-param / language-param / pid-param
              / pref-param / any-param
FN-value = text

N-param = "VALUE=text" / sort-as-param / language-param / any-param
N-value = list-component 3(";" list-component)

list-component = list-component-value *("," list-component-value)
list-component-value = "\\" / "\," / "\;" / "\n" / WSP / NON-ASCII
                          / %x21-2B / %x2D-3A / %x3C-5B / %x5D-7E

NICKNAME-param = "VALUE=text" / type-param / language-param
                    / pid-param / pref-param / any-param
NICKNAME-value = text-list

PHOTO-param = inline-param / refer-param / type-param
PHOTO-value = inline-value / refer-value
       ; Value and parameter MUST match.

PHOTO-param =/ pid-param / pref-param / any-param

inline-param = "VALUE=binary" / encoding-param / fmttype-param
inline-value = binary

refer-param = "VALUE=uri" / fmttype-param
refer-value = uri

BDAY-param = "VALUE=" ("date-and-or-time" / "text")
BDAY-value = date-and-or-time / text
       ; Value and parameter MUST match.

BDAY-param =/ calscale-param / any-param
       ; calscale-param can only be present when BDAY-value is
       ; date-and-or-time and actually contains a date or date-time.

DDAY-param = "VALUE=" ("date-and-or-time" / "text")
DDAY-value = date-and-or-time / text
       ; Value and parameter MUST match.

DDAY-param =/ calscale-param / any-param
       ; calscale-param can only be present when DDAY-value is
       ; date-and-or-time and actually contains a date or date-time.

BIRTH-param = "VALUE=" / ("text" / "uri")
BIRTH-value = text / uri
       ; Value and parameter MUST match.

BIRTH-param =/ language-param / any-param
DEATH-param = "VALUE=" ("text / "uri")
DEATH-value = text / uri
       ; Value and parameter MUST match.

DEATH-param =/ language-param / any-param

ANNIVERSARY-param = "VALUE=" ("date-and-or-time" / "text")
ANNIVERSARY-value = date-and-or-time / text
       ; Value and parameter MUST match.

ANNIVERSARY-param =/ calscale-param / any-param
       ; calscale-param can only be present when ANNIVERSARY-value is
       ; date-and-or-time and actually contains a date or date-time.

SEX-param = "VALUE=integer" / any-param
SEX-value = "0" / "1" / "2" / "9"

ADR-param = "VALUE=text" / language-param / geo-param / tz-param
               / pid-param / pref-param / type-param / any-param
ADR-value = list-component 6(";" list-component)

LABEL-param = "VALUE=text" / language-param / pid-param
                 / pref-param / type-param / any-param
LABEL-value = text

TEL-param = "VALUE=uri" / type-param / pid-param / pref-param
               / any-param
TEL-value = uri

type-param-tel = "text" / "voice" / "fax" / "cell" / "video"
                    / "pager" / "textphone" / iana-token / x-name
       ; type-param-tel MUST NOT be used with a property other than TEL.

EMAIL-param = "VALUE=text" / pid-param / pref-param / type-param
                 / any-param
EMAIL-value = addr-spec  ; from [RFC5322] section 3.4.1

IMPP-param = "VALUE=uri" / pid-param / pref-param / type-param
                / any-param
IMPP-value = uri

LANG-param = "VALUE=language-tag" / pid-param / pref-param
                / type-param / any-param
LANG-value = Language-Tag

TZ-param = "VALUE=" ("text" / "uri" / "utc-offset")
TZ-value = text / uri / utc-offset
       ; Value and parameter MUST match

TZ-param =/ pid-param / pref-param / type-param / any-param

GEO-param = "VALUE=uri" / pid-param / pref-param / type-param
               / any-param
GEO-value = uri

TITLE-param = "VALUE=text" / language-param / pid-param
                 / pref-param / type-param / any-param
TITLE-value = text

ROLE-param = "VALUE=text" / language-param / pid-param / pref-param
                / type-param / any-param
ROLE-value = text

LOGO-param = inline-param / refer-param
LOGO-value = inline-value / refer-value
       ; Value and parameter MUST match.

LOGO-param =/ language-param / pid-param / pref-param / type-param
                 / any-param

ORG-param = "VALUE=text" / sort-as-param / language-param
               / pid-param / pref-param / type-param / any-param
ORG-value = component *(";" component)

component = "\\" / "\;" / "\n" / WSP / NON-ASCII
               / %x21-3A / %x3C-5B / %x5D-7E

MEMBER-param = "VALUE=uri" / pid-param / pref-param / any-param
MEMBER-value = uri

RELATED-param = "VALUE=" ("uri" / "text")
RELATED-value = uri / text
       ; Parameter and value MUST match.

RELATED-param =/ type-param / pid-param / pref-param / type-param
                    / any-param

type-param-related = "parent" / "child" / "sibling" / "spouse"
                        / "family" / "friend" / "supervisor"
                        / "supervisee" / "assistant" / "colleague"
                        / "agent" / "emergency" / iana-token / x-name
       ; type-param-related MUST NOT be used with a property other than
       ; RELATED.

CATEGORIES-param = "VALUE=text" / pid-param / pref-param
                      / type-param / any-param
CATEGORIES-value = text-list

NOTE-param = "VALUE=text" / language-param / pid-param / pref-param
                / type-param / any-param
NOTE-value = text

PRODID-param = "VALUE=text" / any-param
PRODID-value = text

REV-param = "VALUE=timestamp" / any-param
REV-value = timestamp

SOUND-param = inline-param / refer-param
SOUND-value = inline-value / refer-value
       ; Value and parameter MUST match.

SOUND-param =/ language-param / pid-param / pref-param / type-param
                  / any-param

UID-param = "VALUE=uri" / any-param
UID-value = uri

CLIENTPIDMAP-param = any-param
CLIENTPIDMAP-value = 1*DIGIT ";" uri

URL-param = "VALUE=uri" / pid-param / pref-param / type-param
               / any-param
URL-value = uri

VERSION-param = "VALUE=text" / any-param
VERSION-value = "4.0"

CLASS-param = "VALUE=text" / any-param
CLASS-value = "PUBLIC" / "PRIVATE" / "CONFIDENTIAL" / iana-token
                 / x-name

KEY-param = inline-param / refer-param / KEY-text-param
KEY-value = inline-value / refer-value / KEY-text-value
       ; Value and parameter MUST match.

KEY-text-param = "VALUE=text"
KEY-text-value = text

KEY-param =/ pid-param / pref-param / type-param / any-param

FBURL-param = "VALUE=uri" / pid-param / pref-param / type-param
                 / any-param
FBURL-value = uri

CALADRURI-param = "VALUE=uri" / pid-param / pref-param / type-param
                     / any-param
CALADRURI-value = uri

CALURI-param = "VALUE=uri" / pid-param / pref-param / type-param
                  / any-param
CALURI-value = uri

