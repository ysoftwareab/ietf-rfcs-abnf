





      
      
     MMUSIC Working Group                                       F. Andreasen 
     Internet Draft                                            Cisco Systems 
     Expires: July 2007                                      January 2, 2007 
                                         
      
                                           
                             SDP Capability Negotiation 
                 draft-ietf-mmusic-sdp-capability-negotiation-00.txt 


     Status of this Memo 

        By submitting this Internet-Draft, each author represents that       
        any applicable patent or other IPR claims of which he or she is       
        aware have been or will be disclosed, and any of which he or she       
        becomes aware will be disclosed, in accordance with Section 6 of       
        BCP 79. 

        Internet-Drafts are working documents of the Internet Engineering 
        Task Force (IETF), its areas, and its working groups.  Note that 
        other groups may also distribute working documents as Internet-
        Drafts. 

        Internet-Drafts are draft documents valid for a maximum of six months 
        and may be updated, replaced, or obsoleted by other documents at any 
        time.  It is inappropriate to use Internet-Drafts as reference 
        material or to cite them other than as "work in progress." 

        The list of current Internet-Drafts can be accessed at 
             http://www.ietf.org/ietf/1id-abstracts.txt 

        The list of Internet-Draft Shadow Directories can be accessed at 
             http://www.ietf.org/shadow.html 

        This Internet-Draft will expire on July 2, 2007. 

     Abstract 

        The Session Description Protocol (SDP) was intended for describing 
        multimedia sessions for the purposes of session announcement, session 
        invitation, and other forms of multimedia session initiation. SDP was 
        not intended to provide capability indication or capability 
        negotiation, however over the years, SDP has seen widespread adoption 
        and as a result it has been gradually extended to provide limited 
        support for these. SDP and its current extensions however do not have 
        the ability to negotiate one or more alternative transport protocols 
        (e.g. RTP profiles) which makes it particularly difficult to deploy 
        new RTP profiles such as secure RTP or RTP with RTCP-based feedback. 
      
      
      
     Andreasen                Expires July 2, 2007                  [Page 1] 
      







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        The purpose of this document is to address that and other real-life 
        limitations by extending SDP with capability negotiation parameters 
        and associated offer/answer procedures to use those parameters in a 
        backwards compatible manner.  

     Conventions used in this document 

        The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", 
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this 
        document are to be interpreted as described in [RFC2119]. 

     Table of Contents 

         
        1. Introduction...................................................3 
        2. SDP Capability Negotiation Solution............................5 
           2.1. Solution Overview.........................................5 
           2.2. Version and Extension Indication Attributes...............8 
              2.2.1. SDP Capability Negotiation Version Attribute.........8 
              2.2.2. Supported Capability Negotiation Extensions Attribute9 
              2.2.3. Required Capability Negotiation Extension Attribute.10 
           2.3. Capability Attributes....................................11 
              2.3.1. Media Type and Format Capability Attribute..........11 
              2.3.2. Attribute Parameter Capability Attribute............14 
              2.3.3. Transport Protocol Capability Attribute.............15 
           2.4. Configuration Attributes.................................16 
              2.4.1. Potential Configuration Attribute...................16 
              2.4.2. Actual Configuration Attribute......................19 
           2.5. Offer/Answer Model Extensions............................20 
              2.5.1. Generating the Initial Offer........................21 
              2.5.2. Generating the Answer...............................22 
              2.5.3. Offerer Processing of the Answer....................22 
              2.5.4. Modifying the Session...............................23 
        3. Examples......................................................23 
           3.1. Best-Effort Secure RTP...................................23 
        4. Security Considerations.......................................25 
        5. IANA Considerations...........................................25 
        6. To Do and Open Issues.........................................26 
        7. Acknowledgments...............................................26 
        8. Change Log....................................................26 
           8.1. draft-ietf-mmusic-sdp-capability-negotiation-00..........26 
        9. References....................................................27 
           9.1. Normative References.....................................27 
           9.2. Informative References...................................27 
        Author's Addresses...............................................29 
        Intellectual Property Statement..................................29 
        Disclaimer of Validity...........................................30 
      
      
     Andreasen                Expires July 2, 2007                  [Page 2] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        Copyright Statement..............................................30 
        Acknowledgment...................................................30 
         
     1. Introduction 

        The Session Description Protocol (SDP) was intended for describing 
        multimedia sessions for the purposes of session announcement, session 
        invitation, and other forms of multimedia session initiation. The SDP 
        contains one or more media stream descriptions with information such 
        as IP-address and port, type of media stream (e.g. audio or video), 
        transport protocol (possibly including profile information, e.g. 
        RTP/AVP or RTP/SAVP), media formats (e.g. codecs), and various other 
        session and media stream parameters that define the session.  

        Simply providing media stream descriptions is sufficient for session 
        announcements for a broadcast application, where the media stream 
        parameters are fixed for all participants. When a participant wants 
        to join the session, he obtains the session announcement and uses the 
        media descriptions provided, e.g., joins a multicast group and 
        receives media packets in the encoding format specified.  If the 
        media stream description is not supported by the participant, he is 
        unable to receive the media.  

        Such restrictions are not generally acceptable to multimedia session 
        invitations, where two or more entities attempt to establish a media 
        session that uses a set of media stream parameters acceptable to all 
        participants. First of all, each entity must inform the other of its 
        receive address, and secondly, the entities need to agree on the 
        media stream parameters to use for the session, e.g. transport 
        protocols and codecs. We here make a distinction between the 
        capabilities supported by each participant and the parameters that 
        can actually be used for the session. More generally, we can say that 
        we have the following: 

        o  A set of capabilities and potential configurations of the media 
           stream components, supported by each side.  

        o  A set of actual configurations of the media stream components, 
           which specifies which media stream components to use and with what 
           parameters. 

        o  A negotiation process that takes the set of potential 
           configurations (capabilities) as input and provides the actual 
           configurations as output.  

        SDP by itself was designed to provide only the second of these, i.e., 
        the actual configurations, however over the years, use of SDP has 
      
      
     Andreasen                Expires July 2, 2007                  [Page 3] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        been extended beyond its original scope.  Session negotiation 
        semantics were defined by the offer/answer model in RFC 3264.  It 
        defines how two entities, an offerer and an answerer, exchange 
        session descriptions to negotiate a session. The offerer can include 
        one or more media formats (codecs) per media stream, and the answerer 
        then selects one or more of those offered and returns them in an 
        answer. Both the offer and the answer contain actual configurations - 
        potential configurations are not supported. The answer however may 
        reduce the set of actual configurations from the offer.  

        Other relevant extensions have been defined. Simple capability 
        declarations, which define how to provide a simple and limited set of 
        capability descriptions in SDP was defined in RFC 3407.  Grouping of 
        media lines, which defines how media lines in SDP can have other 
        semantics than the traditional "simultaneous media streams" 
        semantics, was defined in RFC 3388, etc.   

        Each of these extensions was designed to solve a specific limitation 
        of SDP.  Since SDP had already been stretched beyond its original 
        intent, a more comprehensive capability declaration and negotiation 
        process was intentionally not defined.  Instead, work on a "next 
        generation" of a protocol to provide session description and 
        capability negotiation was initiated [SDPng].  SDPng however has not 
        gained traction and has remained as work in progress for an extended 
        period of time.  Existing real-time multimedia communication 
        protocols such as SIP, RTSP, Megaco, and MGCP continue to use SDP.  
        SDP and its current extensions however do not address an increasingly 
        important problem: the ability to negotiate one or more alternative 
        transport protocols (e.g., RTP profiles).  This makes it difficult to 
        deploy new RTP profiles such as secure RTP (SRTP) [SRTP], RTP with 
        RTCP-Based Feedback [AVPF], etc.  This particular problem is 
        exacerbated by the fact that RTP profiles are defined independently.  
        When a new profile is defined and N other profiles already exist, 
        there is a potential need for defining N additional profiles, since 
        profiles cannot be combined automatically.  For example, in order to 
        support the plain and secure RTP version of RTP with and without 
        RTCP-based feedback, four separate profiles (and hence profile 
        definitions) are needed: RTP/AVP [RFC3551], RTP/SAVP [SRTP], RTP/AVPF 
        [AVPF], and RTP/SAVPF [SAVPF].  In addition to the pressing profile 
        negotiation problem, other important real-life constraints have been 
        found as well.  

        The purpose of this document is to define a mechanism that enables 
        SDP to provide limited support for indicating capabilities and their 
        associated potential configurations and negotiate the use of those 
        potential configurations as actual configurations.  It is not the 
        intent to provide a full-fledged capability indication and 
      
      
     Andreasen                Expires July 2, 2007                  [Page 4] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        negotiation mechanism along the lines of SDPng or ITU-T H.245. 
        Instead, the focus is on addressing a set of well-known real-life 
        limitations.  

        As mentioned above, SDP is used by several protocols, and hence the 
        mechanism should be usable by all of these.  One particularly 
        important protocol for this problem however is the Session Initiation 
        Protocol (SIP) [RFC3261].  SIP uses the offer/answer model (which is 
        not specific to SIP) to negotiate sessions and hence any mechanism 
        must at least consider how it either interacts with offer/answer, or 
        how it should extend it.  

        The rest of the document is structured as follows. In Section 0we 
        present our SDP capability negotiation solution followed by examples 
        in Section 3. and security considerations in Section 4.  

     2. SDP Capability Negotiation Solution 

        In this section we first provide an overview of the SDP Capability 
        negotiation solution. This is followed by definitions of new SDP 
        attributes for the solution and its associated updated offer/answer 
        procedures.  

     2.1. Solution Overview  

        The solution consists of the following: 

        o  Three new attributes to support versioning and extensions to the 
           framework itself as follows: 

            o  A new attribute ("a=cver") that lists the version of the SDP 
               capability negotiation framework being used. 

            o  A new attribute ("a=csup") that lists the supported extensions 
               to the framework. 

            o  A new attribute ("a=creq") that lists the extensions to the 
               framework that are required to be supported by the entity 
               receiving the SDP. 

        o  Three new attributes used to express capabilities as follows 
           (additional attributes can be defined as extensions): 

            o  A new attribute ("a=cmed") that defines how to list the media 
               types and media formats supported as capabilities.  


      
      
     Andreasen                Expires July 2, 2007                  [Page 5] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

            o  A new attribute ("a=capar") that defines how to list the 
               attribute parameter values as capabilities.  

            o  A new attribute ("a=ctrpr") that defines how to list transport 
               protocols as capabilities. 

        o  Two new attributes to negotiate configurations as follows: 

            o  A new attribute ("a=pcfg") that lists the potential 
               configurations supported. This is done by reference to the 
               above capabilities from the SDP in question. The potential 
               configurations are listed in order of preference. Extensions 
               can be defined as well and included in the potential 
               configurations.  

            o  A new attribute ("a=acfg") to be used in an answer SDP. The 
               attribute identifies which of the potential configurations 
               from an offer SDP were used as actual configurations to form 
               the answer SDP.  

        o  Extensions to the offer/answer model that allow for capabilities 
           and potential configurations to be included in an offer, where 
           they constitute offers that may be accepted by the answerer 
           instead of the actual configuration(s) included in the "m=" 
           line(s). The answerer indicates which (if any) of the potential 
           configurations it used to form the answer by including the actual 
           configuration attribute ("a=cfg") in the answer.  Capabilities and 
           potential configurations may be included in answers as well, where 
           they can aid in guiding a subsequent new offer. 

        The mechanism is illustrated by the offer/answer exchange below, 
        where Alice sends an offer to Bob:  

                     Alice                               Bob 

                       | (1) Offer (SRTP and RTP)         | 
                       |--------------------------------->| 
                       |                                  | 
                       | (2) Answer (RTP)                 | 
                       |<---------------------------------| 
                       |                                  | 

        Alice's offer includes RTP and SRTP as alternatives. RTP is the 
        default, but SRTP is the preferred one: 

           v=0 
           o=- 25678 753849 IN IP4 128.96.41.1 
      
      
     Andreasen                Expires July 2, 2007                  [Page 6] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

           s=  
           c=IN IP4 128.96.41.1 
           t=0 0 
           m=audio 3456 RTP/AVP 0 18  
           a=cver:0 
           a=cmed:1 audio RTP/AVP 0 18 96 
           a=ctrpr:1 RTP/SAVP 
           a=capar:1 a=crypto:1 AES_CM_128_HMAC_SHA1_32    
              inline:NzB4d1BINUAvLEw6UzF3WSJ+PSdFcGdUJShpX1Zj|2^20|1:32  
           a=capar:2 a=rtpmap:96 iLBC/8000 
           a=pcfg: m=1,2|3 p=1 a=1,2 
           a=pcfg: m=1,2|3 a=2 
            
        The "m=" line indicates that Alice is offering to use plain RTP with 
        PCMU or G.729.  The capabilities are provided by the "a=cver", 
        "a=cmed", "a=ctrpr" and "a=capar" attributes. The capabilities 
        indicate that PCMU, G.729 and iLBC are supported with either RTP or 
        secure RTP. The first "capar" attribute provides a capability 
        parameter with a handle of 1. The capability parameter is a "crypto" 
        attribute in the capability set, which provides the keying material 
        for SRTP using SDP security descriptions [SDES]. The second "capar" 
        attribute provides the "rtpmap" for the dynamic payload type 96, 
        which is mapped to the iLBC codec. The "a=pcfg" attribute provides 
        the potential configurations included in the offer by reference to 
        the capability declarations.  Two alternatives are provided; the 
        first one, and hence the preferred one is using media capabilities 1 
        and 2, i.e. PCMU and G.729, or media capability 3, i.e. iLBC. 
        Furthermore, transport protocol capability 1 (i.e. the RTP/SAVP 
        profile - secure RTP), and the attribute capability parameter 1, i.e. 
        the crypto attribute provided, and the attribute capability parameter 
        2, i.e. the rtpmap for iLBC is included. The second one is simply 
        using media capabilities 1 and 2, i.e. PCMU and G.729, or media 
        capability 3, i.e. iLBC under the RTP/AVP profile as listed in the 
        "m=" line. The "capar" parameter is still needed to provide the 
        rtpmap for iLBC.  

        Bob receives the SDP offer from Alice. Bob supports RTP, but not 
        SRTP, and hence he accepts the potential configuration for RTP 
        provided by Alice. Furthermore, Bob wants to use the iLBC codec and 
        hence generates the following answer: 

           v=0 
           o=- 24351 621814 IN IP4 128.96.41.2 
           s=  
           c=IN IP4 128.96.41.2 
           t=0 0 
           m=audio 4567 RTP/AVP 96 
      
      
     Andreasen                Expires July 2, 2007                  [Page 7] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

           a=rtpmap:96 iLBC/8000  
           a=cver: 0 
           a=acfg: m=3 a=2 

        Bob includes the "a=cver" and "a=acfg" attribute in the answer to 
        inform Alice that he based his answer on an offer containing the 
        potential configuration with media capability 3 from the offer SDP 
        (i.e. iLBC under the RTP/AVP profile) and the attribute capability 
        parameter 2, i.e. the associated rtpmap.  Note that in this 
        particular example, the answerer supported the capability extensions 
        defined here, however had he not, he would simply have processed the 
        offer based on the offered PCMU and G.729 codecs under the RTP/AVP 
        profile only. Consequently, the answer would have omitted the 
        "a=cver" and "a=acfg" attribute line and chosen one or both of the 
        PCMU and G.729 codecs instead.  

     2.2. Version and Extension Indication Attributes 

        In this section, we present the new attributes associated with 
        indicating the SDP capability negotiation version and extensions 
        supported and required.  

     2.2.1. SDP Capability Negotiation Version Attribute 

        The SDP Capability Negotiation Version attribute ("a=cver") lists the 
        version of the SDP Capability Negotiation supported by the entity 
        that generated the SDP. The attribute is defined as follows: 

           a=cver: <version> 

        where <version> is a non-zero positive integer. White space is 
        permitted, but not required, before <version>. The value of <version> 
        defined by this document is 0 as illustrated by the following 
        example: 

           a=cver: 0  

        The SDP Capability Negotiation version attribute MUST be present in 
        each SDP that uses the SDP Capability negotiation solution defined in 
        this document. The attribute can be provided at either the session- 
        or media-level, however there MUST NOT be more than one occurrence of 
        it. Furthermore, the attribute SHOULD be the first of the SDP 
        capability negotiation attributes provided.  




      
      
     Andreasen                Expires July 2, 2007                  [Page 8] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

     2.2.2. Supported Capability Negotiation Extensions Attribute 

        The SDP Capability negotiation solution allows for capability 
        negotiation extensions to be defined. Associated with each such 
        extension is an option tag that identifies the extension in question. 
        Option-tags MUST be registered with IANA per the procedures defined 
        in Section 5.  

        The Supported Capability Negotiation Extensions attribute ("a=csup") 
        contains a comma-separated list of option tags identifying the SDP 
        Capability negotiation extensions supported by the entity that that 
        generated the SDP. The attribute is defined as follows: 

           a=csup: <option-tag-list> 

        where <option-tag-list> is defined by the following ABNF: 

           option-tag-list   = option-tag *(COMMA option-tag) 
           option-tag        = token    ; defined in [SDP] 
           COMMA             = *WSP "," *WSP  ; defined in [RFC4234] 

        White-space is permitted before the <option-tag-list>. 

          Implementers familiar with SIP should note that the above 
          definition of COMMA differs from the one in [RFC3261].  

          [EDITOR'S NOTE: There's nothing specific to the SDP Capability 
          Negotiation Solution for this parameter. Should consider 
          generalizing and/or providing in a separate document.]  

        The following examples illustrates the use of the "a=csup" attribute 
        with two hypothetical option tags, "foo" and "bar": 

           a=csup: foo 
           a=csup: bar 
           a=csup: foo, bar 

        The "a=csup" attribute can be provided at the session and the media-
        level. When provided at the session-level, it applies to the entire 
        SDP. When provided at the media-level, it applies to the media-stream 
        in question only. There can be one or more "a=csup" attributes at 
        both the session and media-level (one or more per media stream in the 
        latter case).  

        Whenever an entity that supports one or more extensions to the SDP 
        Capability Negotiation framework generates an SDP, it SHOULD include 

      
      
     Andreasen                Expires July 2, 2007                  [Page 9] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        the "a=csup" attribute with the option tags for the extensions it 
        supports.  

     2.2.3. Required Capability Negotiation Extension Attribute 

        The SDP Capability negotiation solution allows for capability 
        negotiation extensions to be defined. Associated with each such 
        extension is an option tag that identifies the extension in question. 
        Option-tags MUST be registered with IANA per the procedures defined 
        in Section 5.  

        The Required Capability Negotiation Extensions attribute ("a=csup") 
        contains a comma-separated list of option tags identifying the SDP 
        Capability negotiation extensions that MUST be supported by the 
        entity receiving the SDP in order for that entity to properly process 
        the SDP Capability negotiation. The attribute is defined as follows: 

           a=creq: <option-tag-list> 

        where <option-tag-list> is defined in Section 2.2.2.  

        White-space is permitted before the <option-tag-list>. 

          [EDITOR'S NOTE: There's nothing specific to the SDP Capability 
          Negotiation Solution for this parameter. Should consider 
          generalizing and/or providing in a separate document.]  

        The following examples illustrates the use of the "a=creq" attribute 
        with two hypothetical option tags, "foo" and "bar": 

           a=creq: foo 
           a=creq: bar 
           a=creq: foo, bar 

        The "a=creq" attribute can be provided at the session and the media-
        level. When provided at the session-level, it applies to the entire 
        SDP. When provided at the media-level, it applies to the media-stream 
        in question only. There can be one or more "a=creq" attributes at 
        both the session and media-level (one or more per media stream in the 
        latter case).  

        Whenever an entity generates an SDP and it requires the recipient of 
        that SDP to support one or more SDP capability negotiation extensions 
        in order to properly process the SDP Capability negotiation, the 
        "a=creq" attribute MUST be included with option-tags that identify 
        the required extensions.  

      
      
     Andreasen                Expires July 2, 2007                 [Page 10] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        A recipient that receives such an SDP and does not support one or 
        more of the required extensions, MUST NOT perform the SDP capability 
        negotiation defined in this document. For non-supported extensions 
        provided at the session-level, this implies that SDP capability 
        negotiation MUST NOT be performed at all. For non-supported 
        extensions at the media-level, this implies that SDP capability 
        negotiation MSUT NOT be performed for the media stream in question.  

        When an entity does not support one or more required SDP capability 
        negotiation extensions, the entity SHOULD proceed as if the SDP 
        capability negotiation attributes were not included in the first 
        place.  

          This ensures that introduction of the SDP capability negotiation 
          mechanism does not introduce any new failure scenarios.  

     2.3. Capability Attributes 

        In this section, we present the new attributes associated with 
        indicating the capabilities for use by the SDP Capability 
        negotiation. 

     2.3.1. Media Type and Format Capability Attribute 

        Media types and media formats can be expressed as capabilities by use 
        of the "a=cmed" attribute, which is defined as follows: 

          a=cmed: <med-cap-num> <media> [<proto> <fmt list>] 

        where <med-cap-num> is an integer between 1 and 2^32-1 (both 
        included) used to number the media capabilities, and <media>, 
        <proto>, and <fmt list> are defined as in the SDP "m=" line. The <fmt 
        list> may contain multiple media formats. In that case, the media 
        format capability number associated with the first one provided is 
        the value of <med-cap-num>, the number associated with the second one 
        is one higher, etc. Each occurrence of the attribute MUST use a 
        different value of <med-cap-num>. Furthermore, when a "cmed" 
        attribute indicates more than one media format, the capability 
        numbers implied MUST NOT be used by any other "cmed" attribute in the 
        session description (explicitly or implicitly).  When <proto> and 
        <fmt list> are omitted, the media capability merely indicates support 
        for the <media> type in question, without any details as to what kind 
        of transport protocol and media formats are supported. This can for 
        example be used to indicate support for additional types of media 
        than those included as actual configurations in an offer or answer.  


      
      
     Andreasen                Expires July 2, 2007                 [Page 11] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        A media capability merely indicates possible support for the media 
        type and media format(s) in question. In order to actually use a 
        media capability in an offer/answer exchange, it must be referenced 
        in a potential configuration (see Section 2.4.1.  

        Media capabilities can be provided at the session-level and the 
        media-level. Media capabilities provided at the session level apply 
        to the session description in general, whereas media capabilities 
        provided at the media level apply to that media stream only.  In 
        either case, the scope of the <med-cap-num> is the entire session 
        description.  This enables each media capability to be referenced 
        across the entire session description (e.g. in a potential 
        configuration - see Section 2.4.1.  

          [EDITOR'S NOTE: This is clear as mud. If a media capability applies 
          to a media-stream only, then why can it still be referenced and 
          hence used as capabilities in other media streams (by the "a=pcfg") 
          attribute. The motivation is message size efficiency, but the means 
          are not clean. Session versus media-level syntax and semantics need 
          further consideration] 

        The <proto> parameter indicates the default transport protocol 
        associated with the media capability.  As described in [RFC4566], the 
        value of the <proto> parameter guides the interpretation of the <fmt 
        list>, which is why it is included here. Note that <proto> is also a 
        capability that can be negotiated separately (see Section 2.3.3.  

        The <fmt list> contains one or more media formats supported, the 
        interpretation of which depends on the value of <proto>.  The rules 
        that apply to "m=" lines (as defined in [SDP]) for interpretation of 
        these apply here as well.  For RTP-based transports, this implies 
        that the <fmt list> contains one or more RTP payload type numbers. 
        When those payload type numbers are dynamic, SDP requires an 
        "a=rtpmap" attribute to determine the actual codec.  In the case of 
        SDP capability negotiation, such additional attribute parameters MUST 
        be provided in conjunction with the media capability.  There are two 
        different cases to consider for this: 

        o  The media capability is provided at the session level:   In this 
           case, the required parameters MUST be provided in one or more 
           attribute parameter capabilities (see Section 2.3.2.  listed 
           before the first "m=" line as well as before any other media 
           capability attributes ("a=cmed").  




      
      
     Andreasen                Expires July 2, 2007                 [Page 12] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        o  The media capability is provided at the media stream level: In 
           this case, when the payload type numbers are part of the "m=" line 
           itself, this is done by use of the "a=rtpmap" attribute as usual. 
           In all other cases, the required parameters MUST be provided in 
           one or more attribute parameter capabilities (see Section 2.3.2.  
           within the media stream description (i.e. before the next "m=" 
           line). 

          [EDITOR'S NOTE:    The above assumes that intermediaries will not 
          reorder session-level attributes. It would be safer to explicitly 
          link the two, but that will require yet another attribute. Also, it 
          sends us down the path of building more complicated capabilities 
          (made up of multiple parameters). Another issue here is that 
          payload type numbers, which really have only media-level scope, are 
          ill-suited to be used at the session-level or across multiple media 
          streams (as is being done here). However, an alternative (and more 
          proper) solution seems to involve significantly more work and 
          deviations from the current SDP framework. This in turn makes it 
          more difficult to automatically use new media types, formats, 
          protocols, etc. defined elsewhere within this framework, and that 
          is a major disadvantage. Another option is to forgo the session-
          level media capabilities as well as the ability to reference across 
          media streams - it will make the solution less efficient though and 
          difficult to express latent capabilities for media streams not 
          included in the offer or answer.] 

        The following example illustrates the first case above: 

           v=0 
           o=- 25678 753849 IN IP4 128.96.41.1 
           s=  
           c=IN IP4 128.96.41.1 
           t=0 0 
           a=cmed: 1 audio RTP/AVP 96 
           a=capar: 1 a=rtpmap:96 G729/8000 
           m=audio...  

        The following example illustrates the second case above: 

           v=0 
           o=- 25678 753849 IN IP4 128.96.41.1 
           s=  
           c=IN IP4 128.96.41.1 
           t=0 0 
           m=audio 2345 RTP/AVP 96 
           a=rtpmap:96 G729/8000 
           a=cver:0 
      
      
     Andreasen                Expires July 2, 2007                 [Page 13] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

           a=cmed: 1 audio RTP/AVP 96 97 
           a=capar: 1 a=rtpmap:97 iLBC/8000 

          Note:  Readers familiar with RFC 3407 may notice the similarity 
          between the "cmed" attribute defined above and the "cdsc" attribute 
          defined in RFC 3407. There are however a couple of important 
          differences, namely an increase in the capability numbering space 
          as well as a relaxation of certain requirements found in RFC 3407. 
          To simplify overall operation, the "cmed" parameter is limited to 
          media-level operation only as well.  

     2.3.2. Attribute Parameter Capability Attribute 

        Attributes can be expressed as negotiable parameters by use of a new 
        attribute parameter capability attribute ("a=capar"), which is 
        defined as follows: 

           a=capar: <att-cap-num> <att-par> 

        where <att-cap-num> is an integer between 1 and 2^32-1 (both 
        included) used to number the attribute parameter capability and <att-
        par> is an attribute ("a=") in its full  '<type>=<value>' form (see 
        [SDP]). 

        The "capar" attribute can be provided at the session level and the 
        media level. Each occurrence of the attribute MUST use a different 
        value of <app-cap-num>.  The <att-cap-num> values provided are 
        independent of similar <cap-num> values provided for other 
        attributes, i.e., they form a separate name-space for attribute 
        parameter capabilities.  

        Attribute parameter capabilities are generally used for two things. 
        First of all, they may be necessary to interpret a media format 
        capability (e.g. by including an rtpmap), or they may provide 
        attribute value parameters that are referenced in potential 
        configurations (see Section 2.4.1. ) 

        The following examples illustrate use of the "capar" attribute:  

           a=capar: 1 a=ptime:20 
         
           a=capar: 2 a=ptime:30 

           a=capar: 3 a=key-mgmt:mikey AQAFgM0XflABAAAAAAAAAAAAAAsAyONQ6gAA 
           AAAGEEoo2pee4hp2UaDX8ZE22YwKAAAPZG9uYWxkQGR1Y2suY29tAQAAAAAAAQAk0
           JKpgaVkDaawi9whVBtBt0KZ14ymNuu62+Nv3ozPLygwK/GbAV9iemnGUIZ19fWQUO
           SrzKTAv9zV 
      
      
     Andreasen                Expires July 2, 2007                 [Page 14] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

            
           a=capar: 4 a=crypto:1 AES_CM_128_HMAC_SHA1_32    
                 inline:NzB4d1BINUAvLEw6UzF3WSJ+PSdFcGdUJShpX1Zj|2^20|1:32  
            

        The first two provide attribute values for the ptime attribute. The 
        third one provides SRTP parameters by using MIKEY with the key-mgmt 
        attribute [KMGMT]. The fourth one provides SRTP parameters by use of 
        security descriptions with the crypto attribute [SDES]. 

          Readers familiar with RFC 3407 may notice the similarity between 
          the RFC 3407 "cpar" attribute and the above. There are however a 
          couple of important differences, most notably that the "capar" 
          attribute contains a handle that enables referencing it and it 
          furthermore supports attributes only (the "cpar" attribute defined 
          in RFC 3407 supports bandwidth information as well). The "capar" 
          attribute also is not automatically associated with any particular 
          capabilities.  

     2.3.3. Transport Protocol Capability Attribute 

        Transport Protocols can be expressed as capabilities by use of a new 
        Transport Protocol Capability attribute ("a=ctrpr") defined as 
        follows: 

           a=ctrpr: <trpr-cap-num> <proto-list> 

        where <trpr-cap-num> is an integer between 1 and 255 (both included) 
        used to number the transport address capability for later reference, 
        and <proto-list> is one or more <proto>, separated by white space, as 
        defined in the SDP "m=" line.  

        The "ctrpr" attribute can be provided at the session- and media-
        level. Each occurrence of the attribute MUST use a different value of 
        <trpr-cap-num>.  When multiple <proto> values are provided, the first 
        one is associated with the value <trpr-cap-num>, the second one with 
        the value one higher, etc. The <trpr-cap-num> values provided are 
        independent of similar <cap-num> values provided for other 
        attributes, i.e., they form a separate name-space for transport 
        protocol capabilities.  

        Below, we provide examples of the "a=ctrpr" attribute: 

           a=ctrpr: 1 RTP/AVP 
           a=ctrpr: 2 RTP/AVPF 
           a=ctrpr: 3 RTP/SAVP RTP/SAVPF 

      
      
     Andreasen                Expires July 2, 2007                 [Page 15] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        The first one provides a capability for the "RTP/AVP" profile defined 
        in [RFC3551] and the second one provides a capability for the RTP 
        with RTCP-Based Feedback profile defined in [AVPF]. The third one 
        provides capabilities for the "RTP/SAVP" and "RTP/SAVPF" profiles.  

        Note that the "cmed" attribute provides a similar functionality by 
        including <proto>, however having this as a separate capability 
        indication can provide significant message size reduction when 
        negotiating alternative profiles (of which there can be many). In 
        particular, there is no need to repeat supported payload types. Also, 
        use of this attribute combined with the potential configuration 
        attribute (see Section 2.4. ) provides for more expressive power.  

     2.4. Configuration Attributes 

     2.4.1. Potential Configuration Attribute 

        Potential Configurations can be expressed by use of a new Potential 
        Configuration Attribute ("a=pcfg") defined as follows:  

           a=pcfg: <pot-cfg-list> 

        where <pot-cfg-list> is defined as 

           pot-cfg-list   =  pot-config *(1*WSP pot-config) 
         
           pot-config     =  pot-media-config | 
                             pot-attribute-parameter-config | 
                             pot-transport-protocol-config | 
                             pot-extension-config 

        The potential configuration attribute includes one or more sets of 
        potential media configurations, attribute parameter configurations 
        and transport protocol configurations.  Each of these MUST NOT be 
        present more than once in a particular potential configuration 
        attribute. Potential extension configurations can be included as 
        well.  There can be more than one potential extension configuration, 
        however each particular potential extension configuration MUST NOT be 
        present more than once in a given potential configuration attribute.  

        Together, these values define a set of potential configurations. 
        There can be one or more potential configuration attributes provided 
        at the session-level as well as for each media stream. The attributes 
        are provided in order of preference.  

          [EDITOR'S NOTE: We run into another issue with session-level media 
          capabilities here. In the offer/answer model, potential 
      
      
     Andreasen                Expires July 2, 2007                 [Page 16] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

          configurations at the media-level constitute alternative offers, 
          however at the session-level, that would/should not be the case for 
          media capabilities. Other parameters however may be used as 
          alternative offers at the session level (e.g. key-mgmt attributes 
          at the session level)] 

        pot-media-config is defined by the following ABNF:  

           pot-media-config     = "m=" med-cap-list *(BAR med-cap-list) 
           med-cap-list         = med-cap-num *(COMMA med-cap-num) 
           med-cap-num          = 1*DIGIT   ; defined in [RFC4234] 
           BAR                  = *WSP "|" *WSP  ; defined in [RFC4234] 

        Each potential media configuration is a comma-separated list of media 
        capability numbers where med-cap-num refers to media capability 
        numbers and hence MUST be between 1 and 2^32-1 (both included).  
        Alternative potential media configurations are separated by a 
        vertical bar ("|"). The alternatives are ordered by preference. When 
        media capabilities are not included in a potential configuration at 
        the media level, the media type and media format from the associated 
        "m=" line will be used.   

        pot-attribute-parameter-config is defined by the following ABNF: 

           pot-attribute-parameter-config  
                             = "a=" capar-cap-list *(BAR capar-cap-list) 
           capar-cap-list    = att-cap-num *(COMMA att-cap-num) 
           att-cap-num       = 1*DIGIT   ;defined in [RFC4234] 

        Each potential attribute parameter configuration list is a comma-
        separated list of attribute capability parameter numbers where att-
        cap-num refers to attribute parameter capability numbers defined 
        above and hence MUST be between 1 and 2^32-1 (both included). 
        Alternative potential attribute parameter configurations are 
        separated by a vertical bar ("|"). The alternatives are ordered by 
        preference.  

        pot-transport-protocol-config is defined by the following ABNF: 

           pot-transport-protocol-config =  
                                "p=" trpr-cap-num *(BAR trpr-cap-num) 
           trpr-cap-num        = 1*DIGIT   ; defined in [RFC4234] 

        The trpr-cap-num refers to transport protocol capability numbers 
        defined above and hence MUST be between 1 and 2^32-1 (both included). 
        Alternative potential transport protocol configurations are separated 
        by a vertical bar ("|").  The alternatives are ordered by preference. 
      
      
     Andreasen                Expires July 2, 2007                 [Page 17] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        When transport protocol capabilities are not included in a potential 
        configuration, the transport protocol information from an included 
        potential media configuration will be used.  If a potential media 
        configuration is not included, the transport protocol from the media 
        description ("m=" line) will be used instead.   

        pot-extension-config is defined by the following ABNF: 

           pot-extension-config= ext-cap-name "="  
                             ext-cap-list *(BAR ext-cap-list) 
           ext-cap-name   = token     ; defined in [SDP] 
           ext-cap-list   = ext-cap-num *(COMMA ext-cap-num) 
           ext-cap-num    = 1*DIGIT   ; defined in [RFC4234] 

        The ext-cap-name refers to the type of extension capability and the 
        ext-cap-num refers to a capability number associated with that 
        particular type of extension capability.  The number MUST be between 
        1 and 2^32-1 (both included).  Alternative potential extension 
        configurations for a particular extension are separated by a vertical 
        bar ("|").  Unsupported or unknown potential extension configs MUST 
        be ignored, unless an option tag showing the extension as being 
        required was included (see Section 2.2.3.  

        The potential configuration ("a=pcfg") attribute can be provided at 
        the session level and the media-level. Each occurrence of the 
        attribute within a given media description ("m=" line) defines a set 
        of potential configurations that can be used for that media 
        description.  

          TO DO: Need to decide on relationship between session-level and 
          media-level (how should conflicts, overlap, etc. be handled - 
          simplicity at the possible expense of expressive power is 
          preferable in the editor's opinion).  

        Below, we provide an example of the "a=pcfg" attribute in a complete 
        media description in order to properly indicate the supporting 
        attributes: 

           v=0 
           o=- 25678 753849 IN IP4 128.96.41.1 
           s=  
           c=IN IP4 128.96.41.1 
           t=0 0 
           m=audio 3456 RTP/SAVPF 0 18  
           a=crypto:1 AES_CM_128_HMAC_SHA1_32    
              inline:NzB4d1BINUAvLEw6UzF3WSJ+PSdFcGdUJShpX1Zj|2^20|1:32  
           a=cver: 0 
      
      
     Andreasen                Expires July 2, 2007                 [Page 18] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

           a=cmed: 1 audio RTP/SAVP 0 4 18  
           a=ctrpr: 1 RTP/AVP RTP/AVPF 
           a=ctrpr: 3 RTP/SAVP RTP/SAVPF 
           a=pcfg: m=1|3 p=1|2|3|4 
           a=pcfg: m=2 p=1 

        We have two potential configurations listed here. The first one 
        indicates that PCMU (payload type number 0 referenced by media 
        capability number 1) or G.729 (payload type number 18 referenced by 
        media capability number 3) can be supported with either of the 
        profiles RTP/AVP, RTP/AVPF, RTP/SAVP, or RTP/SAVPF (specified by the 
        transport protocol capability numbers 1, 2, 3 and 4). The second 
        potential configuration indicates that G.723 (payload type number 4 
        referenced by media capability number 2) can be supported with the 
        RTP/AVP profile only (transport protocol capability number 1).  

     2.4.2. Actual Configuration Attribute 

        The actual configuration attribute identifies which of the potential 
        configurations from an offer SDP were used as actual configurations 
        in an answer SDP.  This is done by reference to the media 
        capabilities, attribute parameter capabilities and transport protocol 
        capabilities from the offer that were actually used by the answerer 
        in his offer/answer procedure. If extension capabilities were used, 
        those will be included by reference as well. 

        The Actual Configuration Attribute ("a=acfg") is defined as follows:  

           a=acfg:     <act-cfg-list> 

        where <act-cfg-list> is defined as 

           act-cfg-list   =  capability *(1*WSP capability) 
         
           capability        =  act-media-config | 
                                act-attribute-parameter-config | 
                                act-transport-protocol-config | 
                                act-extension-config 

        act-media-config is defined by the following ABNF:  

           act-media-config      = "m=" med-cap-list  

        where med-cap-list is as defined in Section 2.4.1.   

        act-attribute-parameter-config is defined by the following ABNF: 

      
      
     Andreasen                Expires July 2, 2007                 [Page 19] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

           act-attribute-parameter-config = "a=" capar-cap-list 

        where capar-cap-list is as defined in Section 2.4.1.  

        act-transport-protocol-config is defined by the following ABNF: 

           act-transport-protocol-config = "p=" trpr-cap-num 

        where trpr-cap-num is as defined in Section 2.4.1.  

           trpr-cap-num        = 1*3DIGIT   ; defined in [RFC4234] 

        act-extension-config is defined by the following ABNF: 

           act-extension-config = ext-cap-name "=" ext-cap-list 

        where ext-cap-name and ext-cap-list are as defined in Section 2.4.1.  

        The actual configuration ("a=acfg") attribute can be provided at the 
        session-level and the media-level. There MUST NOT be more than one 
        occurrence of an actual configuration attribute at the session level, 
        and there MUST NOT be more than one occurrence of an actual 
        configuration attribute within a given media description.  

        Below, we provide an example of the "a=acfg" attribute (building on 
        the previous example with the potential configuration attribute): 

           v=0 
           o=- 24351 621814 IN IP4 128.96.41.2 
           s=  
           c=IN IP4 128.96.41.2 
           t=0 0 
           m=audio 4567 RTP/AVPF 0  
           a=cver: 0 
           a=acfg: m=1 p=2 

        It indicates that the answerer used an offer consisting of media 
        capability 1 from the offer (PCMU) and transport protocol capability 
        2 from the offer (RTP/AVPF).  

     2.5. Offer/Answer Model Extensions 

        In this section, we define extensions to the offer/answer model 
        defined in [RFC3264] to allow for potential configurations to be 
        included in an offer, where they constitute offers that may be 
        accepted by the answerer instead of the actual configuration(s) 
        included in the "m=" line(s).  
      
      
     Andreasen                Expires July 2, 2007                 [Page 20] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

           [EDITOR'S NOTE: Multicast considerations have been omitted for 
           now.] 

           TO DO: Elaborate and firm up offer/answer procedures. 

     2.5.1. Generating the Initial Offer 

        An offerer that wants to use the SDP capability negotiation 
        extensions defined in this document MUST include the following in the 
        offer: 

        o  an SDP capability negotiation version attribute with the version 
           set to 0 

        o  one or more media capabilities (as defined in Section 2.3.1. ), if 
           alternative media types and media formats are to be indicated as 
           offerer capabilities or be negotiated. 

        o  one or more attribute parameter capability attributes (as defined 
           in Section 2.3.2. ) if alternative attribute parameter values are 
           to be indicated as offerer capabilities or be negotiated. 

        o  one or more transport protocol capability attributes (as defined 
           in Section 2.3.3. ) if alternative transport protocols are to be 
           to be indicated as offerer capabilities or be negotiated. 

        o  one or more potential configuration attributes (as defined in 
           Section 2.4. ) if alternative potential configurations are to be 
           negotiated.  

        o  one or more required capability negotiation extension attributes 
           (as defined in Section 2.2.3. ), if the answerer is required to 
           support one or more SDP capability negotiation extensions.  

        The offerer SHOULD furthermore include the following: 

        o  one or more supported capability negotiation extension attributes 
           (as defined in Section 2.2.2. ), if the offerer supports one or 
           more SDP capability negotiation extensions.  

        The capabilities provided merely indicate what the offerer is capable 
        of doing. They do not constitute a commitment or even an indication 
        to actually use them. Conversely, each of the potential 
        configurations listed constitutes an alternative offer which may be 
        used to negotiate and establish the session.   


      
      
     Andreasen                Expires July 2, 2007                 [Page 21] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

          [EDITOR'S NOTE: This is only partially true for potential 
          configurations listed at the session level. The only thing we want 
          to offer up as alternative offers at the session level is 
          attributes - not media types or media formats, which should be 
          capabilities only at the session level] 

        The current actual configuration is included in the "m=" line (as 
        defined by [RFC3264]).  

     2.5.2. Generating the Answer  

        When the answerer receives an offer with valid SDP capability 
        negotiation information in it and in particular with one or more 
        valid potential configuration information attributes present, it may 
        use any of the potential configurations as an alternative offer. A 
        potential configuration information attribute is valid if all of the 
        capabilities (media, attribute capabilities, transport protocol and 
        any extension capabilities) it references are present and valid 
        themselves.  

        The actual configuration is contained in the media description's "m=" 
        line. The answerer can send media to the offerer in accordance with 
        the actual configuration, however if it chooses to use one of the 
        alternative potential configurations, media sent to the offerer may 
        be discarded by the offerer until the answer is received.   

        If the answerer chooses to accept one of the alternative potential 
        configurations instead of the actual configuration, the answerer MUST 
        generate an answer as if the offer contained that potential 
        configuration instead of the actual configuration included. The 
        answerer MUST also include an actual configuration attribute in the 
        answer that identifies the potential configuration from the offer 
        used by the answerer. The actual configuration attribute in the 
        answer MUST include information about the media capabilities, 
        attribute capability parameters, transport protocol parameters, and 
        extension capabilities from the potential configuration that were 
        used to generate the answer.  

     2.5.3.  Offerer Processing of the Answer  

        When the offerer included potential configurations for a media 
        stream, it MUST examine the answer for the presence of an actual 
        configuration attribute for each such media stream.  If the attribute 
        is missing, offerer processing of the answer MUST proceed as defined 
        by [RFC3264]. If the attribute is present, processing continues as 
        follows: 

      
      
     Andreasen                Expires July 2, 2007                 [Page 22] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        The actual configuration attribute specifies which of the potential 
        configurations were used by the answerer to generate the answer. This 
        includes all the types of capabilities from the potential 
        configuration offered, i.e. the media formats ("cmed" capabilities), 
        attribute capability parameters ("capar"), transport protocol 
        capabilities ("ctrpr"), and any extension capability parameters 
        included.  

        The offerer MUST now process the answer as if the offer had contained 
        the potential configuration as the actual configuration in the media 
        description ("m=" line) and relevant attributes in the offer.  

     2.5.4. Modifying the Session        

        Potential configurations may be included in subsequent offers as 
        defined in [RFC3264, Section 8].  The procedure for doing so is 
        similar to that described above with the answer including an 
        indication of the actual configuration used by the answerer.  

     3. Examples 

        In this section, we provide examples showing how to use the SDP 
        Capability Negotiation.  

     3.1. Best-Effort Secure RTP 

        The following example illustrates how to use the SDP Capability 
        negotiation extensions to support so-called Best-Effort Secure RTP. 
        In that scenario, the offerer supports both RTP and Secure RTP. If 
        the answerer does not support secure RTP (or the SDP capability 
        negotiation extensions), an RTP session will be established. However, 
        if the answerer supports Secure RTP and the SDP Capability 
        Negotiation extensions, a Secure RTP session will be established.  

        The best-effort Secure RTP negotiation is illustrated by the 
        offer/answer exchange below, where Alice sends an offer to Bob:  











      
      
     Andreasen                Expires July 2, 2007                 [Page 23] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

                     Alice                               Bob 

                       | (1) Offer (SRTP and RTP)         | 
                       |--------------------------------->| 
                       |                                  | 
                       | (2) Answer (RTP)                 | 
                       |<---------------------------------| 
                       |                                  | 

        Alice's offer includes RTP and SRTP as alternatives. RTP is the 
        default, but SRTP is the preferred one: 

           v=0 
           o=- 25678 753849 IN IP4 128.96.41.1 
           s=  
           c=IN IP4 128.96.41.1 
           t=0 0 
           m=audio 3456 RTP/AVP 0 18  
           a=cver:0 
           a=ctrpr:1 RTP/SAVP RTP/AVP 
           a=capar:1 a=crypto:1 AES_CM_128_HMAC_SHA1_80              
              inline:WVNfX19zZW1jdGwgKCkgewkyMjA7fQp9CnVubGVz|2^20|1:4  
              FEC_ORDER=FEC_SRTP 
           a=pcfg: p=1 a=1 
           a=pcfg: p=2  
            
        The "m=" line indicates that Alice is offering to use plain RTP with 
        PCMU or G.729.  The capability declaration is provided by the 
        "a=cver", "a=ctrpr" and "a=capar" attributes.  The capabilities 
        indicate that both Secure RTP and normal RTP are supported. The 
        "capar" attribute provides a capability parameter with a handle of 1. 
        The capability parameter is a "crypto" attribute in the capability 
        set, which provides the keying material for SRTP using SDP security 
        descriptions [SDES]. The "a=pcfg" attribute provides the potential 
        configurations included in the offer by reference to the 
        capabilities.  Two alternatives are provided; the first one, and 
        hence the preferred one is transport protocol capability 1 (RTP/SAVP, 
        i.e. secure RTP) together with the attribute capability parameter 1, 
        i.e. the crypto attribute provided. The second one is using transport 
        protocol capability 2.  Since there are no media format capabilities 
        included, the media format parameters from the media description 
        itself is used.  

        Bob receives the SDP offer from Alice. Bob supports SRTP and the SCP 
        Capability Negotiation extensions, and hence he accepts the potential 
        configuration for Secure RTP provided by Alice: 

      
      
     Andreasen                Expires July 2, 2007                 [Page 24] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

           v=0 
           o=- 24351 621814 IN IP4 128.96.41.2 
           s=  
           c=IN IP4 128.96.41.2 
           t=0 0 
           m=audio 4567 RTP/SAVP 0 18  
           a=crypto:1 AES_CM_128_HMAC_SHA1_80 
                 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:4 
           a=cver: 0 
           a=acfg: p=1 a=1 

        Bob includes the "a=cver" and "a=acfg" attribute in the answer to 
        inform Alice that he based his answer on an offer containing the 
        potential configuration with transport protocol capability 1 and 
        attribute parameter capability 1 from the offer SDP (i.e. the 
        RTP/SAVP profile using the keying material provided).  Bob also 
        includes his keying material in a crypto attribute.  

        Note that in this particular example, the answerer supported the 
        capability extensions defined here, however had he not, the answerer 
        would simply have ignored the new attributes and accepted the offer 
        to use normal RTP. In that case, the following answer would have been 
        generated instead: 

           v=0 
           o=- 24351 621814 IN IP4 128.96.41.2 
           s=  
           c=IN IP4 128.96.41.2 
           t=0 0 
           m=audio 4567 RTP/AVP 0 18  
         

     4. Security Considerations 

        TBD. 

     5. IANA Considerations 

        TBD. 

        [EDITOR'S NOTE: Need to define registry and procedures for option 
        tags] 

        [EIDTOR'S NOTE: Need to define registry and procedures for extension 
        capabilities] 

         
      
      
     Andreasen                Expires July 2, 2007                 [Page 25] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

     6. To Do and Open Issues 

        o  Capability descriptions, potential configurations and actual 
           configurations can be provided at both the session level and media 
           level. It needs to be decided what the relationship between the 
           session level and media level parameters are.  

        o  Look for "EDITOR'S NOTE" throughout the document.  

     7. Acknowledgments 

        Thanks to Francois Audet and Dan Wing for comments on earlier 
        versions of this document. 

     8. Change Log 

     8.1. draft-ietf-mmusic-sdp-capability-negotiation-00 

        Version 00 is the initial version. The solution provided in this 
        initial version is based on an earlier (individual submission) 
        version of [SDPCapNeg]. The following are the major changes compared 
        to that document: 

        o  Solution no longer based on RFC 3407, but defines a set of similar 
           attributes (with some differences). 

        o  Various minor changes to the previously defined attributes. 

        o  Multiple transport capabilities can be included in a single 
           "ctrpr" attribute 

        o  A version attribute is now included. 

        o  Extensions to the framework are formally supported. 

        o  Option tags and the ability to list supported and required 
           extensions are supported.  

        o  A best-effort SRTP example use case has been added.  

        o  Some terminology change throughout to more clearly indicate what 
           constitutes capabilities and what constitutes configurations.  





      
      
     Andreasen                Expires July 2, 2007                 [Page 26] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

     9. References 

     9.1. Normative References 

        [RFC2119] Bradner, S., "Key words for use in RFCs to Indicate 
                  Requirement Levels", BCP 14, RFC 2119, March 1997. 

        [RFC2234] Crocker, D. and Overell, P.(Editors), "Augmented BNF for 
                  Syntax Specifications: ABNF", RFC 2234, Internet Mail 
                  Consortium and Demon Internet Ltd., November 1997. 

        [RFC3264] Rosenberg, J., and H. Schulzrinne, "An Offer/Answer Model 
                  with Session Description Protocol (SDP)", RFC 3264, June 
                  2002.  

        [RFC3407] F. Andreasen, "Session Description Protocol (SDP) Simple 
                  Capability Declaration", RFC 3407, October 2002. 

        [RFC3605] C. Huitema, "Real Time Control Protocol (RTCP) attribute in 
                  Session Description Protocol (SDP)", RFC 3605, October 
                  2003.  

        [RFC4234] Crocker, D., and P. Overell, "Augmented BNF for Syntax 
                  Specifications: ABNF", RFC 4234, October 2005. 

        [SDP]     Handley, M., Jacobson, V., and C. Perkins, "SDP: Session 
                  Description Protocol", RFC 4566, July 2006.  

     9.2. Informative References 

        [RFC2046] Freed, N., and N. Borensteain, "Multipurpose Internet Mail 
                  Extensions (MIME) Part Two: Media Types", RFC 2046, 
                  November 1996. 

        [RFC2327] Handley, M., Jacobson, V., and C. Perkins, "SDP: Session 
                  Description Protocol", RFC 2327, April 1998.  

        [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, 
                  A., Peterson, J., Sparks, R., Handley, M., and E. Schooler, 
                  "SIP: Session Initiation Protocol", RFC 3261, June 2002. 

        [RFC3388] Camarillo, G., Eriksson, G., Holler, J., and H. 
                  Schulzrinne, "Grouping of Media Lines in the Session 
                  Description Protocol (SDP)", RFC 3388, December 2002. 



      
      
     Andreasen                Expires July 2, 2007                 [Page 27] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        [RFC3551] Schulzrinne, H., and S. Casner, "RTP Profile for Audio and 
                  Video Conferences with Minimal Control", RFC 3551, July 
                  2003.  

        [SRTP]    Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K. 
                  Norrman, "The Secure Real-time Transport Protocol (SRTP)", 
                  RFC 3711, March 2004. 

        [RFC3851] B. Ramsdell, "Secure/Multipurpose Internet Mail Extensions 
                  (S/MIME) Version 3.1 Message Specification", RFC 3851, July 
                  2004.  

        [RFC4091] Camarillo, G., and J. Rosenberg, The Alternative Network 
                  Address Types (ANAT) Semantics for the Session Description 
                  Protocol (SDP) Grouping Framework, RFC 4091, June 2005.  

        [AVPF]    Ott, J., Wenger, S., Sato, N., Burmeister, C., and J. Rey, 
                  "Extended RTP Profile for RTCP-Based Feedback (RTP/AVPF)", 
                  Work in Progress, August 2004.  

        [I-D.jennings-sipping-multipart] Wing, D., and C. Jennings, "Session 
                  Initiation Protocol (SIP) Offer/Answer with Multipart 
                  Alternative", Work in Progress, March 2006. 

        [SAVPF]   Ott, J., and E Carrara, "Extended Secure RTP Profile for 
                  RTCP-based Feedback (RTP/SAVPF)", Work in Progress, 
                  December 2005.  

        [SDES]    Andreasen, F., Baugher, M., and D. Wing, "Session 
                  Description Protocol Security Descriptions for Media 
                  Streams", RFC 4568, July 2006.  

        [SDPng]   Kutscher, D., Ott, J., and C. Bormann, "Session Description 
                  and Capability Negotiation", Work in Progress, February 
                  2005.  

        [BESRTP]  Kaplan, H., and F. Audet, "Session Description Protocol 
                  (SDP) Offer/Answer Negotiation for Best-Effort Secure Real-
                  Time Transport Protocol, Work in progress, August 2006.  

        [KMGMT]   Arkko, J., Lindholm, F., Naslund, M., Norrman, K., and E. 
                  Carrara, "Key Management Extensions for Session Description 
                  Protocol (SDP) and Real Time Streaming Protocol (RTSP)", 
                  RFC 4567, July 2006.  



      
      
     Andreasen                Expires July 2, 2007                 [Page 28] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

        [SDPCapNegRqts]   Andreasen, F. "SDP Capability Negotiation: 
                  Requirementes and Review of Existing Work", work in 
                  progress, December 2006. 

        [SDPCapNeg] Andreasen, F. "SDP Capability Negotiation", work in 
                  progress, December 2006. 

        [MIKEY]   J. Arkko, E. Carrara, F. Lindholm, M. Naslund, and K. 
                  Norrman, "MIKEY: Multimedia Internet KEYing", RFC 3830, 
                  August 2004.  

     Author's Addresses 

        Flemming Andreasen 
        Cisco Systems 
        Edison, NJ 
            
        Email: fandreas@cisco.com 
         

     Intellectual Property Statement 

        The IETF takes no position regarding the validity or scope of any 
        Intellectual Property Rights or other rights that might be claimed to 
        pertain to the implementation or use of the technology described in 
        this document or the extent to which any license under such rights 
        might or might not be available; nor does it represent that it has 
        made any independent effort to identify any such rights.  Information 
        on the procedures with respect to rights in RFC documents can be 
        found in BCP 78 and BCP 79. 

        Copies of IPR disclosures made to the IETF Secretariat and any 
        assurances of licenses to be made available, or the result of an 
        attempt made to obtain a general license or permission for the use of 
        such proprietary rights by implementers or users of this 
        specification can be obtained from the IETF on-line IPR repository at 
        http://www.ietf.org/ipr. 

        The IETF invites any interested party to bring to its attention any 
        copyrights, patents or patent applications, or other proprietary 
        rights that may cover technology that may be required to implement 
        this standard.  Please address the information to the IETF at 
        ietf-ipr@ietf.org. 




      
      
     Andreasen                Expires July 2, 2007                 [Page 29] 
         







     Internet-Draft        SDP Capability Negotiation           January 2007 
         

     Disclaimer of Validity 

        This document and the information contained herein are provided on an 
        "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS 
        OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET 
        ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, 
        INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE 
        INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED 
        WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 

     Copyright Statement 

        Copyright (C) The Internet Society (2007). 

        This document is subject to the rights, licenses and restrictions 
        contained in BCP 78, and except as set forth therein, the authors 
        retain all their rights. 

     Acknowledgment 

        Funding for the RFC Editor function is currently provided by the 
        Internet Society. 

         























      
      
     Andreasen                Expires July 2, 2007                 [Page 30] 
         
