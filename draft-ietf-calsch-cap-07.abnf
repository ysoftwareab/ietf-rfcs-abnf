capurl   = scheme ":" [ "//" csid ] [ "/" relcalid ]
scheme   = "cap"
csid     = hostport   ; As defined in Section 3.2.2 of RFC 2396
relcalid = *uric      ; As defined in Section 2 of RFC 2396

comp-name  = "VEVENT"    / "VTODO"   / "VJOURNAL"
                  / "VTIMEZONE" / "VALARM"  / "VFREEBUSY"
                  / "VAGENDA"   / "VCAR"    / "CALSTORE"
                  / "VQUERY"    / iana-name / x-comp

querycomp  = queries / ( queryname queries) / queryname

queryname  = "QUERYNAME" *(";" xparam) ":" text CRLF

queries    = query
                  / queries query

query      = "QUERY" *(";" xparam) ":" cal-query CRLF

                    ; NOTE: There is exactly one space separating
                    ; the various parts of cal-query
                    ;
cal-query  = "SELECT"   SP   cap-cols  SP
                    "FROM"     SP   comp-name SP
                    *(cauprops SP / capcprops SP)
                    "WHERE"    SP   cap-expr

                  / "SELECT" SP cap-cols SP
                    "FROM"   SP comp-name

capuprops   = "USING_PROPERTIES" SP uprop-list

uprop-list  = (cap-col SP cap-local)
                   / uprop-list SP cap-col SP cap-local

capcprops   = "USING_COMPONENTS" SP cprop-list

cprop-list  = (cap-comp cap-local)
                   / cprop-list SP cap-col SP cap-local

cap-col     = ; Any property name found in the component
                     ; named in the comp-tbl used in the FROM clause.
                     ;
                     ;   SELECT ORGANIZER FROM VEVENT ...
                     ;
                     ; OR
                     ;
                     ; A component name of an existing component contained
                     ; inside of the cmp-tbl used in the FROM clause.
                     ;
                     ;   SELECT VALARM FROM VEVENT ...
                     ; NOTE: there is NO space around the "," on
                     ; the next line
cap-cols    = cap-col / ( cap-cols "," cap-col)
                     / "*"
                     /
cap-param   = ; Any parameter that may be contained in the cap-col
                     ; in the supplied PARAM() function

cap-local   = ; Any string that is composed of the characters
                     ; that could be a cap-col name, but is not any
                     ; cap-col name. It is suggested that the
                     ; string start with "my-" to ensure it does not
                     ; conflict with any existing or future cap-col name.
                     ; This name MUST BE defined in the cap-using and
                     ; can only be used in cap-expr of the same query.
                     ; And this name is only known and valid for the
                     ; provided query and only for the lifetime of
                     ; the query. If multiple QUERY properties exist
                     ; in the same component, it is only valid and usable
                     ; in the same QUERY property where it was supplied.

col-value   = col-literal
                   / "SELF()"
                   / "CAL-OWNERS(" cal-address ")"
                   / "CURRENT-CALID()"


cal-address = ; A CALID as define by CAP

col-literal = "'" literal-data "'"

literal-data = ; Any data that matches the value type of the
                     ; column that is being compared. That is you can
                     ; not compare PRIORITY to "some string" because
                     ; PRIORITY has a value type of integer. If it is
                     ; not preceded by the LIKE element, any '%' and '_'
                     ; characters in the literal data are not treated as
                     ; wildcard characters and do not have to be backslash
                     ; escaped.
                     ;
                     ; OR
                     ;
                     ; If the literal-data is preceded by the LIKE
                     ; element it may also contain the '%' and '_'
                     ; wildcard characters. And if the literal data
                     ; that is comparing contains any '%' or '_'
                     ; characters, they MUST BE backslash escaped as
                     ; described in the notes below in order for them not
                     ; to be treated as wildcard characters.

cap-ucol    = cap-col / cap-local

cap-expr    = "(" cap-expr ")"
                   / cap-term

cap-term    = cap-expr SP cap-logical SP cap-expr
                   / cap-factor

cap-factor  = cap-colval SP cap-oper SP col-value
                   / cap-colval SP "NOT LIKE" SP col-value
                   / cap-colval SP "LIKE" SP col-value
                   / cap-colval SP "IS NULL"
                   / cap-colval SP "IS NOT NULL"
                   / col-value SP "NOT IN" cap-colval"
                   / col-value SP "IN" cap-colval"

cap-colval     = cap-ucol
                   / "PARAM(" cap-ucol "," cap-param ")"

cap-oper    = "="
                   / "!="
                   / "<"
                   / ">"
                   / "<="
                   / ">="

cap-logical = "AND" / "OR"

SP          = ; A single white space ascii character
                     ; (value in HEX %x20).

CRLF        = ; As defined in RFC 2445.

xparam      = ; As defined in RFC 2445.

x-prop      = ; As defined in RFC 2445.

x-comp      = ; As defined in RFC 2445.



METHOD = 'REQUEST' OR METHOD = 'ADD' OR METHOD = 'PUBLISH' OR
METHOD = 'CANCEL' OR METHOD = 'REPLY' OR METHOD = 'COUNTER' OR
METHOD = 'REFRESH' OR METHOD = 'DECLINECOUNTER'
METHOD = 'REQUEST' OR METHOD = 'ADD' OR METHOD = 'PUBLISH' OR
METHOD = 'CANCEL' OR METHOD = 'REPLY' OR METHOD = 'COUNTER' OR
METHOD = 'REFRESH' OR METHOD = 'DECLINECOUNTER'
code="x.y"&gt tags.

upn        = "@" /
                     [ dot-atom-text ] "@" dot-atom-text

                     ; dot-atom-text is defined in RFC 2822

upn-filter    = "OWNER" /
                        "NONOWNER" /
                        "*" /
                        [ "*" / dot-atom-text ] "@" ( "*" / dot-atom-text )

                       ; dot-atom-text is defined in RFC 2822

agendac     = "BEGIN" ":" "VAGENDA" CRLF
                       agendaprop
                      "END" ":" "VAGENDA" CRLF

agendaprop  = *(
                        ; the following MUST occur exactly once

                        created / recalid / last-mod /

                        ; the following MUST occur at least once
                        owner /

                        ; the following are optional,
                        ; but MUST NOT occur more than once

                        allow-conflict / calscale / default-charset / default-locale /
                        method / default-tzid /

                        ; the following are optional,
                        ; and MAY occur more than once

                        name / related / iana-token / x-prop / x-comp
                       )

calstorec     = "BEGIN" ":" "VCALSTORE" CRLF
                        calstoreprop
                        "END" ":" "VCALSTORE" CRLF

calstoreprop  = *(
                          ; the following MUST occur exactly once
                          calmaster / current-datetime /

                          ; the following must occur at least once

                          default-vcar /

                          ; the following are optional,
                          ; but MUST NOT occur more than once

                          maxdate / mindate / recur-accepted / recur-expand /
                          recur-limit / csid /

                          ; the following are optional,
                          ; and MAY occur more than once

                          iana-token / x-prop / x-comp / vcard
                         )


carc    =  "BEGIN" ":" "VCAR" CRLF
                   carprop 1*rightc
                   "END" ":" "VCAR" CRLF

carprop = 1*(
                ; 'carid' is REQUIRED,
                ; but MUST NOT occur more than once

                carid /

                ; the following are OPTIONAL,
                ; and MAY occur more than once

                name / x-prop / iana-prop
                )

rightc    =  "BEGIN" ":" "VRIGHT" CRLF
                     rightprop
                     "END" ":" "VRIGHT" CRLF

rightprop = 2*(

                  ; either 'grant' or 'deny' MUST
                  ; occur at least once
                  ; and MAY occur more than once

                  grant / deny /

                  ; 'permission' MUST occur at least once
                  ; and MAY occur more than once

                  permission /
                  ; the following are optional,
                  ; and MAY occur more than once

                  scope / restriction / x-prop / iana-prop

                  )

allow-conflict     = "ALLOW-CONFLICT" allowconflictparam ":" boolean
allowconflictvalue  = *(";" xparam)

default-charset     = "DEFAULT-CHARSET" default-charsetparam ":" text CRLF

default-charsetparam  = *(";" xparam)
default-locale     = "DEFAULT-LOCALE" default-localeparam ":" language CRLF

default-localeparam  = *(";" xparam)

default-locale = Text identifying a locale, as defined in [RFC 2277]

default-tzid       = "DEFAULT-TZID" default-tzidpropparam ":" [tzidprefix] text CRLF

default-tzidpropparam      = *(";" xparam)

owner = "OWNER" ownerparam ":" upn CRLF

ownerparam = *(";" xparam)

recalidprop = "RELCALID" recalidparam ":" relcalid CRLF

recalidparam = *(";" xparam)

calmaster = "CALMASTER" calmasterparam ":" uri CRLF

calmasterparam = *(";" xparam)

uri = as defined by RFC 2445

csid = "CSID" csidparam ":" capurl CRLF

csidparam = *(";" xparam)

def-vcars      = "DEFAULT-VCARS" def-vcarsparam ":" text
                        *( "," text ) CRLF

def-vcarsparam = *( ";" xparam )

maxdate    = "MAXDATE" maxdateparam ":" date-time CRLF

maxdateparam  = *(";" xparam)

mindate    = "MINDATE" mindateparam ":" date-time CRLF

mindateparam  = *(";" xparam)

rstatus  = "REQUEST-STATUS" rstatparam ":"
       statcode [";" statdesc [";" extdata]]

rstatparam  = *(
      ; the following is optional,
      ; but MUST NOT occur more than once
        (";" languageparm) /


      ; the following is optional,
      ; and MAY occur more than once

      (";" xparam)

      )

statcode  = 1*DIGIT *("." 1*DIGIT)
      ;Hierarchical, numeric return status code

statdesc  = text
      ;An optional textual status description, content is
      ;decided by the implementor. May be empty.

extdata  = text
      ;Textual exception data. For example, the offending property
      ;name and value or complete property line.

CALID   = "DENY" ":" calid CRLF

transp   = "TRANSP" tranparam ":" transvalue CRLF

tranparam   = *(";" xparam)

transvalue   = "OPAQUE" ;Blocks or opaque on busy time searches.
                  / "TRANSPARENT"    ;Transparent on busy time searches.
                  / "TRANSPARENT-NOCONFLICT" ; Transparent on busy time
                  ; searches and no other OPAQUE
                  ; or OPAQUE-NOCONFLICT event
                  ; can overlap it.

                  / "OPAQUE-NOCONFLICT"  ; Opaque on busy time
                  ; searches and no other OPAQUE
                  ; or OPAQUE-NOCONFLICT event
                  ; can overlap it.
                  ;
                  ;Default value is OPAQUE

name = "NAME" nameparam ":" text CRLF

nameparam = *(
                       ; the following is optional,
                       ; but MUST NOT occur more than once

                       ( ";" languageparam ) /

                       ; the following is optional,
                       ; and MAY occur more than once

                       ( ";" xparam )
                     )

carid      = "CARID" caridparam ":" text CRLF

caridparam = *( ";" xparam )

decreed      = "DECREED" decreedparam ":" boolean CRLF

decreedparam = *( ";" xparam )

grant     = "GRANT" grantparam ":" upn-filter CRLF

grantparam  = *( ";" xparam )

deny       = "DENY" denyparam ":" upn-filter CRLF

denyparam  = *( ";" xparam )

perm      = "PERMISSION" permparam ":" permvalue CRLF
permparam = *( ";" xparam )

permvalue = ( "READ" / "WRITE" / "DELETE" / "MODIFY" / all )

all         = "*"

scope      = "SCOPE" scopeparam ":" cal-query CRLF

scopeparam = *( ";" xparam )

restrict      = "RESTRICTION" restrictparam ":" cal-query CRLF

restrictparam = *( ";" xparam )

