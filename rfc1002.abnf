ONT = B_NODE; /* broadcast node */
G = UNIQUE;   /* unique name */
TTL = 0;

ONT = B_NODE; /* broadcast node */
G = UNIQUE;   /* unique name */
TTL = 0;

G = GROUP;
ONT = B;
TTL = 0;
G = DONT CARE;

ONT = P;
G = UNIQUE;
G = GROUP;
ONT = P;
G = DONT CARE;

ONT = M;
G = GROUP;
ONT = M;
G = DONT CARE;

retry_count = 0;
retarget = FALSE;   /* TRUE: caller is being retargetted */
name_query = TRUE;  /* TRUE: caller must begin again with */
                            /*       name query. */

name_query = FALSE;
retarget = FALSE;
retarget = FALSE;
name_query = TRUE;
retarget = FALSE;
name_query = TRUE;
retarget = TRUE;
group = FALSE;

group = TRUE;
SOURCE_NAME = cat(source, SCOPE_ID);
SOURCE_IP = this nodes IP address;
SOURCE_PORT =  DGM_SRVC_UDP_PORT;

DESTINATION_NAME = cat("*", SCOPE_ID)
DESTINATION_NAME = cat(destination, SCOPE_ID)
MSG_TYPE = select_one_from_set
             {BROADCAST, DIRECT_UNIQUE, DIRECT_GROUP}
DGM_ID = next transaction id for Datagrams;
DGM_LENGTH = length of data + length of second level encoded
             source and destination names;

USER_DATA = data;
OFFSET = 0;
group = FALSE;

group = TRUE;
SOURCE_NAME = cat(source, SCOPE_ID);
SOURCE_IP = this nodes IP address;
SOURCE_PORT =  DGM_SRVC_UDP_PORT;

DESTINATION_NAME = cat("*", SCOPE_ID)
DESTINATION_NAME = cat(destination, SCOPE_ID)
MSG_TYPE = select_one_from_set
             {BROADCAST, DIRECT_UNIQUE, DIRECT_GROUP}
DGM_ID = next transaction id for Datagrams;
DGM_LENGTH = length of data + length of second level encoded
             source and destination names;

USER_DATA = data;
OFFSET = 0;
