SE=(r,b), NW=(l,t), NE=(r,t).  Thus l<=m<r and b<=n<t.  See notes
profile="civic-condition"
label="Siemens Neuperlach site 'Legoland'"
xmlns="urn:ietf:params:xml:ns:pidf:geopriv10:civicAddr">
xmlns="urn:ietf:params:xml:ns:common-policy"
label="Sydney Opera House"
profile="geodetic-condition">
xmlns="urn:ietf:params:xml:ns:common-policy"
xmlns="urn:ietf:params:xml:ns:pidf:geopriv10:civicAddr">
profile="civic-transformation">
profile="geodetic-transformation">
o=25, o=35, o=45, 0=55, and o=60 degrees (north) or at latitudes
o=-25, o=-35, o=-45, 0=-55, and o=-60 degrees (the minus to
latitude = o+d2*j).  The grid has almost no distorsion at the
i= floor(m/d1) = floor(-105/0.993) = -106

j= floor(n-o/d2) = floor(15/0.904) = 16

l=d1*floor(m/d1) = -105.243

r=l+d1 = -105.243+0.993 = -104.250

b=o+d2*floor(n-o/d2) = 39.467

t=b+d2 = 39.467+0.904 = 40.371

x=(m-l)/(r-l) = [-105 -(-105.243)]/0.993 = 0.245

y=(n-b)/(t-b) = [40 - 39.467]/0.904 = 0.590


targetNamespace="urn:ietf:params:xml:ns:basic-location-profiles"
elementFormDefault="qualified"
attributeFormDefault="unqualified">

targetNamespace="urn:ietf:params:xml:ns:geolocation-policy"
elementFormDefault="qualified"
attributeFormDefault="unqualified">

schemaLocation="http://www.w3.org/2001/xml.xsd"/>

type="gp:locationconditionType"/>

minOccurs="1" maxOccurs="unbounded"/>
minOccurs="0" maxOccurs="unbounded"/>
minOccurs="0" maxOccurs="unbounded"/>
type="xs:boolean" default="false"/>
type="xs:integer" default="0"/>
type="gp:notewellType"/>
type="xs:boolean" default="false"/>

type="gp:providelocationType"/>

minOccurs="0" maxOccurs="unbounded"/>
content="text/html;charset=iso-8859-1"/>
content="text/html;charset=iso-8859-1"/>
P = sqrt(3)/6  //  approx 0.2887
q = 1 - p      //  approx 0.7113

M = (m,n) : real * real
           // M is a pair of reals: m and n
           // m is the longitude and n the latitude,
           // respectively, of the measured location
           // The values are given as real numbers, in the
           // range: -180 < m <= 180; -90 < n < 90
           // minus values for longitude m correspond to "West"
           // minus values for latitude n correspond to "South"

prev-M = (prev-m1, prev-n1): real * real
           // the *previously* provided location, if available
           // prev-m1 is the longitude and
           // prev-n1 the latitude, respectively

M1 = (m1,n1) : real * real // longitude and latitude,
           // respectively, of the provided location

