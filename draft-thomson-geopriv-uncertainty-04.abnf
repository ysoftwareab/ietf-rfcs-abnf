d = 4 * sin(o/2) * (R*R + R*r + r*r) / (3*o*(R + r))

T = [ -Nx*Nz/p  -Ny*Nz/p   p  ]    T' = [  Nx/p  -Ny*Nz/p  Ny ]
          [    Nx        Ny      Nz ]         [   0      p       Nz ]
                 (Transform)                    (Reverse Transform)

               Figure 3: Recommended Transformation Matrices

A = sum from i=1..n of (x'[i]*y'[i+1]-x'[i+1]*y'[i]) / 2

Cx = -Ny * Cx' / p - Nx * Nz * Cy' / p + Nx * Cz'

Cy = Nx * Cx' / p - Ny * Nz * Cy' / p + Ny * Cz'

Cz = p * Cy' + Nz * Cz'

T = [ 1   0   0  ]  T' = [ -Nz  0  Ny ]  |   T = [  0   1  0  ] = T'
        [ 0   Ny  Nz ]       [  Ny  0  Nz ]  |       [  Nx  0  Nz ]

               Figure 6: Alternative Transformation Matrices

X = sqrt( d*d + R*R - 2*d*R*cos(o/2) )

x = sqrt( d*d + r*r - 2*d*r*cos(o/2) )

Cr = Co * Ur / Uo

Pi = Co * Ao / Au

a = (r^2 - R^2 + d^2)/(2*d)

Ao = r^2*acos(a/r) + R^2*acos((d - a)/R) - d*sqrt(r^2 - a^2)

d = sqrt((x1-x2)^2 + (y1-y2)^2 + (z1-z2)^2)

Drandom = Dmax * (1 - | rand() + rand() - 1 |)

pecef = [ -4.6470e+06  2.5531e+06  -3.5332e+06 ]
            [ -4.6469e+06  2.5531e+06  -3.5333e+06 ]
            [ -4.6469e+06  2.5531e+06  -3.5334e+06 ]
            [ -4.6469e+06  2.5531e+06  -3.5333e+06 ]

t = [ -0.48828   0.26827   0.83043 ]
        [ -0.72782   0.39987  -0.55712 ]

scale = erfinv(0.95^(1/3)) / erfinv(0.19^(1/3)) = 2.9937

N = R / sqrt(1 - e^2 * sin(latitude)^2)

X = (N + altitude) * cos(latitude) * cos(longitude)

Y = (N + altitude) * cos(latitude) * sin(longitude)

Z = (N*(1 - e^2) + altitude) * sin(latitude)

p = sqrt(X^2 + Y^2)

r = sqrt(X^2 + Y^2 + Z^2)

u = atan((1-f) * Z * (1 + e'^2 * (1-f) * R / r) / p)

latitude = atan((Z + e'^2 * (1-f) * R * sin(u)^3)
longitude = atan(Y / X)

altitude = sqrt((p - R * cos(u))^2 + (Z - (1-f) * R * sin(u))^2)
altitude = |Z| - R * (1 - f)
Nx = sum from i=1..n of (y[i] * (z[i+1] - z[i-1]))

Ny = sum from i=1..n of (z[i] * (x[i+1] - x[i-1]))

Nz = sum from i=1..n of (x[i] * (y[i+1] - y[i-1]))

Up = [ cos(lat) * cos(lng) ; cos(lat) * sin(lng) ; sin(lat) ]

