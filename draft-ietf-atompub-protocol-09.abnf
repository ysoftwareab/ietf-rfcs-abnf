appCommonAttributes =
      attribute xml:base { atomUri }?,
      attribute xml:lang { atomLanguageTag }?,
      undefinedAttribute*


title="My Blog Entries"
href="http://example.org/reilly/main" />
title="Pictures"
href="http://example.org/reilly/pic" >
href="http://example.org/reilly/list" />
start = appService


appService =
      element app:service {
         appCommonAttributes,
         ( appWorkspace+
           & extensionElement* )
      }


appWorkspace =
      element app:workspace {
         appCommonAttributes,
         attribute title { text },
         ( appCollection+
           & extensionElement* )
      }


href="http://example.org/myblog/entries" />
href="http://example.org/myblog/fotes">
appCollection =
      element app:collection {
         appCommonAttributes,
         attribute title { text },
         attribute href { atomUri  },
         ( appAccept?
           & extensionElement* )
      }


appAccept =
      element app:accept {
            appCommonAttributes,
            ( appTypeValue? )
      }

appTypeValue = ( "entry" | media-type |entry-or-media-type  )
media-type = xsd:string { pattern = "entry,(.+/.+,?)*" }
entry-or-media-type = xsd:string { pattern = "(.+/.+,?)*" }
href="http://example.org/edit/first-post.atom"/>
Title = "Title" ":" [TEXT]

src="http://example.org/media/img123.png"/>
href="http://example.org/edit/first-post.atom" />
href="http://example.org/edit/img123.png" />
href="http://example.org/entries/go" />
href="http://example.org/entries/2" />
href="http://example.org/entries/10" />
href="http://example.org/entries/go" />
href="http://example.org/entries/go" />
href="http://example.org/entries/3" />
href="http://example.org/entries/10" />
pubControl =
       element pub:control {
       atomCommonAttributes,
       pubDraft?
       & extensionElement
pubDraft =
      element pub:draft { "yes" | "no" }

start = appService

appCommonAttributes =
      attribute xml:base { atomUri }?,
      attribute xml:lang { atomLanguageTag }?,
      undefinedAttribute*

undefinedAttribute =
     attribute * - (xml:base | xml:lang | local:*) { text }

atomUri = text

atomLanguageTag = xsd:string {
pattern = "[A-Za-z]{1,8}(-[A-Za-z0-9]{1,8})*"
appService =
      element app:service {
         appCommonAttributes,
         ( appWorkspace+
           & extensionElement* )
      }

appWorkspace =
      element app:workspace {
         appCommonAttributes,
         attribute title { text },
         ( appCollection+
           & extensionElement* )
      }

appCollection =
      element app:collection {
         appCommonAttributes,
         attribute title { text },
         attribute href { atomUri  },
         ( appAccept?
           & extensionElement* )
      }


appAccept =
      element app:accept {
            appCommonAttributes,
            ( appTypeValue? )
      }

appTypeValue = ( "entry" | media-type |entry-or-media-type  )
media-type = xsd:string { pattern = "entry,(.+/.+,?)*" }
entry-or-media-type = xsd:string { pattern = "(.+/.+,?)*" }
simpleExtensionElement =
      element * - app:* {
         text
      }

structuredExtensionElement =
      element * - app:* {
         (attribute * { text }+,
            (text|anyElement)*)
       | (attribute * { text }*,
          (text?, anyElement+, (text|anyElement)*))
      }

extensionElement =
      simpleExtensionElement | structuredExtensionElement



anyElement =
      element * {
         (attribute * { text }
          | text
          | anyElement)*
      }

