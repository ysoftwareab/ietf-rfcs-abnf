RELTYPE=FINISHTOSTART:  Task-B cannot start until Task-A finishes.
      For example, when painting is complete, carpet-laying can begin.

                  ============
                  |  Task-A  |
                  ============
                             |
                             V
                             ============
                             |  Task-B  |
                             ============

                    Figure 1: Finish to start relationship

RELTYPE=FINISHTOFINISH:  Task-B can only be completed after Task-A is
      finished.  The related tasks may run in parallel before
      completion.

      For example, in the development of two related pieces of software,
      e.g. the api and the implementation, the design of the
      implementation (B) cannot be completed until the design of the api
      (A) has been completed.

                          ==================
                          |     Task-A     |--+
                          ==================  |
                                              |
                                ============  |
                                |  Task-B  |<-+
                                ============

                   Figure 2: Finish to finish relationship

RELTYPE=STARTTOFINISH:  The start of Task-A (which occurs after Task-
      B) controls the finish of Task-B.  For example, ticket sales
      (Task-B) end after the game starts (Task-A).

                                 ============
                              +--|  Task-A  |
                              |  ============
                              +---------+
                          ============  |
                          |  Task-B  |<-+
                          ============
                    Figure 3: Start to finish relationship

RELTYPE=STARTTOSTART:  The start of Task-A triggers the start of
      Task-B, that is Task-B can start anytime after Task-A starts.

                          ============
                       +--|  Task-A  |
                       |  ============
                       |
                       |  ============
                       +->|  Task-B  |
                          ============

                    Figure 4: Start to start relationship

RELTYPE=FIRST:  Indicates that the referenced calendar component is
      the first in a series the referencing calendar component is part
      of.

RELTYPE=NEXT:  Indicates that the referenced calendar component is
      the next in a series the referencing calendar component is part
      of.

RELTYPE=DEPENDS-ON:  Indicates that the current calendar component
      depends on the referenced calendar component in some manner.  For
      example a task may be blocked waiting on the other, referenced,
      task.

RELTYPE=REFID:  Establishes a reference from the current component to
      components with a REFID property which matches the value given in
      the associated RELATED-TO property.

RELTYPE=CONCEPT:  Establishes a reference from the current component
      to components with a CONCEPT property which matches the value
      given in the associated RELATED-TO property.

linkrelparam = "LINKREL" "="
                       ("SOURCE"      ; Link to source of this component
                       / DQUOTE uri DQUOTE
                       / iana-token)   ; Other IANA registered type

LINKREL=SOURCE:  identifies the source of the event information.

gapparam      = "GAP" "=" dur-value

concept        =  "CONCEPT" conceptparam ":"
                              uri CRLF

conceptparam = *(";" other-param)


link           = "LINK" linkparam ":"
                            ( uri /  ; for VALUE=XML-REFERENCE
                              uri /  ; for VALUE=URI
                              text ) ; for VALUE=UID
                          CRLF

linkparam      = ; the elements herein may appear in any order,
                          ; and the order is not significant.

                          (";" "VALUE" "=" ("XML-REFERENCE" /
                                            "URI" /
                                            "UID"))
                          1*(";" linkrelparam)
                          1*(";" fmttypeparam)
                          1*(";" labelparam)
                          1*(";" languageparam)
                          *(";" other-param)


VALUE=URI:
VALUE=XML-REFERENCE:
refid      = "REFID" refidparam ":" text CRLF


refidparam      = *(";" other-param)


related    = "RELATED-TO" relparam ":"
                                  ( text / ; for VALUE=UID
                                    uri /  ; for VALUE=URI
                                    text ) ; for VALUE=TEXT or default
                      CRLF

relparam   = ; the elements herein may appear in any order,
                      ; and the order is not significant.
                      [";" "VALUE" "=" ("UID" /
                                        "URI" /
                                        "TEXT")]
                      [";" reltypeparam]
                      [";" gapparam]
                      *(";" other-param)

