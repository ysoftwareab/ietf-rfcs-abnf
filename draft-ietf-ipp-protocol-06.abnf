ipp-message = ipp-request / ipp-response
ipp-request = version-number operation-id request-id
           *(xxx-attributes-tag  xxx-attribute-sequence) end-of-
ipp-response = version-number status-code request-id
           *(xxx-attributes-tag xxx-attribute-sequence)  end-of-
xxx-attribute-sequence = *compound-attribute

xxx-attributes-tag = operation-attributes-tag / job-attributes-tag /
        printer-attributes-tag / unsupported-attributes-tag

version-number = major-version-number minor-version-number
major-version-number = SIGNED-BYTE  ; initially %d1
minor-version-number = SIGNED-BYTE  ; initially %d0

operation-id = SIGNED-SHORT    ; mapping from model defined below
status-code = SIGNED-SHORT  ; mapping from model defined below
request-id = SIGNED-INTEGER ; whose value is > 0

compound-attribute = attribute *additional-values
attribute = value-tag name-length name value-length value
additional-values = value-tag zero-name-length value-length value

name-length = SIGNED-SHORT    ; number of octets of `name'
name = LALPHA *( LALPHA / DIGIT / "-" / """ / "." )
value-length = SIGNED-SHORT  ; number of octets of `value'
value = OCTET-STRING

data = OCTET-STRING

zero-name-length = %x00.00    ; name-length of 0
operation-attributes-tag =  %x01              ; tag of 1
job-attributes-tag    =  %x02                 ; tag of 2
printer-attributes-tag =  %x04                ; tag of 4
end-of-attributes-tag = %x03                
value-tag = %x10-FF

SIGNED-BYTE = BYTE
SIGNED-SHORT = 2BYTE
DIGIT = %x30-39    ;  "0" to "9"
LALPHA = %x61-7A   ;  "a" to "z"
BYTE = %x00-FF
OCTET-STRING = *BYTE

