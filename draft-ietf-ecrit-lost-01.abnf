xmlns="urn:ietf:params:xml:ns:lost1"
validate="false" operation="recursive">
validate="false" operation="recursive">
xmlns="urn:ietf:params:xml:ns:lost1"
xmlns="urn:ietf:params:xml:ns:lost1"
operation="false">

message="County-level routing"
redirect="lost:co.lancaster.pa.us"
message="postal code is outside of service boundary"
xmlns="urn:ietf:params:xml:ns:lost1"
message="Invalide Goegraphic Location" xml:lang="en">
message="invalid latitude" xml:lang="en" />
LoST-URI = "lost:" host

validate="false" operation="recursive">
start = findServiceByLocation | listServices | response

findServiceByLocation =
     element findServiceByLocation {
       query,
       attribute validate { xsd:boolean >> a:defaultValue [ "false" ] }?
     }
listServices = element listServices { query }
response =
     element response {

       ##
       ##               2xx responses.
       ##
       (result
        | element serviceList {
            list { xsd:anyURI* },
            status
          })?,
       ##
       ##             3xx, 4xx, and 4xx responses.
       ##
       ((error | redirect | failure)?),
       extensionPoint
     }
query =
     element locationInfo { anyElement* },
     element service { xsd:anyURI },
     extensionPoint,
     [ a:defaultValue [ "recursive" ] ] attribute operation { text }?
result =
     element result {
       element displayName {
         xsd:string,
         attribute xml:lang { xsd:language }
       }?,
       element service { xsd:anyURI },
       element serviceBoundary {
         (civicLocation, polygon?) | (civicLocation?, polygon)
       }?,
       element uri { xsd:anyURI }+,
       element serviceNumber {
         xsd:string { pattern = "[0-9]+" }
       }?,
       element validation {
         list { xsd:QName* }
       }?,
       extensionPoint,
       attribute timeToLive { xsd:positiveInteger },
       status
     }
error = element error { status, extensionPoint }

redirect =
     element redirect {
       status,
       attribute redirect { xsd:anyURI },
       extensionPoint
     }

failure =
     element failure {
       status,
       element cause {
         attribute name { xsd:QName },
         attribute message { xsd:string },
         attribute xml:lang { xsd:language }
       }*,
       extensionPoint
     }
status =
     attribute status { xsd:positiveInteger },
     attribute extendedStatus { xsd:positiveInteger }?,
     (attribute message { xsd:string },
      attribute xml:lang { xsd:language })?
anyElement =
     element * {
       (attribute * { text }
        | text
        | anyElement)*
     }

extensionPoint = anyElement*

civicAddress =
     element ns1:* {
       (attribute * { text }
        | text
        | anyElement)*
     }

civicLocation = element civicLocation { civicAddress*, anyElement* }

GML =
     element ns2:* {
       (attribute * { text }
        | text
        | anyElement)*
     }
polygon =
     element ns2:Polygon {
       attribute * { text }*,
       GML
     }
content="text/html;charset=iso-8859-1"/>
xmlns="http://relaxng.org/ns/structure/1.0"
datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

