name = definition
      The name of a rule and its definition are separated by the equals
      character ('=').  Whitespace is only significant in that
      continuation lines of a definition are indented.
alpha         = lowalpha | hialpha
lowalpha      = "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" |
                      "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" |
                      "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" |
                      "y" | "z"
hialpha       = "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" |
                      "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" |
                      "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" |
                      "Y" | "Z"
digit         = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" |
                      "8" | "9"
alphanum      = alpha | digit
OCTET         = <any 8-bit byte>
CHAR          = alpha | digit | separator | "!" | "#" | "$" |
                      "%" | "&" | "'" | "*" | "+" | "-" | "." | "`" |
                      "^" | "_" | "{" | "|" | "}" | "~" | CTL
CTL           = <any control character>
SP            = <space character>
HT            = <horizontal tab character>
NL            = <newline>
LWSP          = SP | HT | NL
separator     = "(" | ")" | "<" | ">" | "@" | "," | ";" | ":" |
                      "\" | <"> | "/" | "[" | "]" | "?" | "=" | "{" |
                      "}" | SP | HT
token         = 1*<any CHAR except CTLs or separators>
quoted-string = <"> *qdtext <">
qdtext        = <any CHAR except <"> and CTLs but including LWSP>
TEXT          = <any printable character>

reserved = ";" | "/" | "?" | ":" | "@" | "&" | "=" | "+" | "$" |
                 "," | "[" | "]"

hex        = digit | "A" | "B" | "C" | "D" | "E" | "F" | "a" | "b"
                   | "c" | "d" | "e" | "f"
escaped    = "%" hex hex
unreserved = alpha | digit | mark
mark       = "-" | "_" | "." | "!" | "~" | "*" | "'" | "(" | ")"

script-URI = <scheme> "://" <server-name> ":" <server-port>
                   <script-path> <extra-path> "?" <query-string>

meta-variable-name = "AUTH_TYPE" | "CONTENT_LENGTH" |
                           "CONTENT_TYPE" | "GATEWAY_INTERFACE" |
                           "PATH_INFO" | "PATH_TRANSLATED" |
                           "QUERY_STRING" | "REMOTE_ADDR" |
                           "REMOTE_HOST" | "REMOTE_IDENT" |
                           "REMOTE_USER" | "REQUEST_METHOD" |
                           "SCRIPT_NAME" | "SERVER_NAME" |
                           "SERVER_PORT" | "SERVER_PROTOCOL" |
                           "SERVER_SOFTWARE" | scheme |
                           protocol-var-name | extension-var-name
protocol-var-name  = ( protocol | scheme ) "_" var-name
scheme             = alpha *( alpha | digit | "+" | "-" | "." )
var-name           = token
extension-var-name = token

meta-variable-value = "" | 1*<TEXT, CHAR or tokens of value>

AUTH_TYPE      = "" | auth-scheme
auth-scheme    = "Basic" | "Digest" | extension-auth
extension-auth = token

CONTENT_LENGTH = "" | 1*digit

CONTENT_TYPE = "" | media-type
media-type   = type "/" subtype *( ";" parameter )
type         = token
subtype      = token
parameter    = attribute "=" value
attribute    = token
value        = token | quoted-string

GATEWAY_INTERFACE = "CGI" "/" 1*digit "." 1*digit

PATH_INFO = "" | ( "/" path )
path      = lsegment *( "/" lsegment )
lsegment  = *lchar
lchar     = <any TEXT or CTL except "/">
PATH_TRANSLATED = *<any character>

QUERY_STRING = query-string
query-string = *uric
uric         = reserved | unreserved | escaped

REMOTE_ADDR  = hostnumber
hostnumber   = ipv4-address | ipv6-address
ipv4-address = 1*3digit "." 1*3digit "." 1*3digit "." 1*3digit
ipv6-address = hexpart [ ":" ipv4-address ]
hexpart      = hexseq | ( [ hexseq ] "::" [ hexseq ] )
hexseq       = 1*4hex *( ":" 1*4hex )

REMOTE_HOST   = "" | hostname | hostnumber
hostname      = *( domainlabel "." ) toplabel [ "." ]
domainlabel   = alphanum [ *alphahypdigit alphanum ]
toplabel      = alpha [ *alphahypdigit alphanum ]
alphahypdigit = alphanum | "-"

REMOTE_IDENT = *TEXT

REMOTE_USER = *TEXT
REQUEST_METHOD   = method
method           = "GET" | "POST" | "HEAD" | extension-method
extension-method = "PUT" | "DELETE" | token

SCRIPT_NAME = "" | ( "/" path )

SERVER_NAME = server-name
server-name = hostname | ipv4-address | ( "[" ipv6-address "]" )
SERVER_PORT = server-port
server-port = 1*digit

SERVER_PROTOCOL   = HTTP-Version | "INCLUDED" | extension-version
HTTP-Version      = "HTTP" "/" 1*digit "." 1*digit
extension-version = protocol [ "/" 1*digit "." 1*digit ]
protocol          = token

SERVER_SOFTWARE = 1*( product | comment )
product         = token [ "/" product-version ]
product-version = token
comment         = "(" *( ctext | comment ) ")"
ctext           = <any TEXT excluding "(" and ")">

Request-Data   = [ request-body ] [ extension-data ]
request-body   = <CONTENT_LENGTH>OCTET
extension-data = *OCTET

search-string = search-word *( "+" search-word )
search-word   = 1*schar
schar         = unreserved | escaped | xreserved
xreserved     = ";" | "/" | "?" | ":" | "@" | "&" | "=" | "," |
                      "$"

generic-response = 1*header-field NL [ response-body ]

CGI-Response = document-response | local-redir-response |
                     client-redir-response | client-redirdoc-response

document-response = Content-Type [ Status ] *other-field NL
                          response-body
local-redir-response = local-Location NL

client-redir-response = client-Location *extension-field NL

client-redirdoc-response = client-Location Status Content-Type
                                 *other-field NL response-body

header-field    = CGI-field | other-field
CGI-field       = Content-Type | Location | Status
other-field     = protocol-field | extension-field
protocol-field  = generic-field
extension-field = generic-field
generic-field   = field-name ":" [ field-value ] NL
field-name      = token
field-value     = *( field-content | LWSP )
field-content   = *( token | separator | quoted-string )

Content-Type = "Content-Type:" media-type NL

Location        = local-Location | client-Location
client-Location = "Location:" fragment-URI NL
local-Location  = "Location:" local-pathquery NL
fragment-URI    = absoluteURI [ "#" fragment ]
fragment        = *uric
local-pathquery = abs-path [ "?" query-string ]
abs-path        = "/" path-segments
path-segments   = segment *( "/" segment )
segment         = *pchar
pchar           = unreserved | escaped | extra
extra           = ":" | "@" | "&" | "=" | "+" | "$" | ","

Status         = "Status:" status-code SP reason-phrase NL
status-code    = "200" | "302" | "400" | "501" | extension-code
extension-code = 3digit
reason-phrase  = *TEXT

response-body = *OCTET

