S/MIME WG                              Blake Ramsdell, Brute Squad Labs 
Internet Draft                                        Sean Turner, IECA 
Intended Status: Standard Track                         October 2, 2008 
Obsoletes: 3850 (once approved) 
Expires: April 2, 2009 
 
 
                                      
     Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.2 
                           Certificate Handling 
                      draft-ietf-smime-3850bis-08.txt 


Status of this Memo 

   By submitting this Internet-Draft, each author represents that any 
   applicable patent or other IPR claims of which he or she is aware 
   have been or will be disclosed, and any of which he or she becomes 
   aware will be disclosed, in accordance with Section 6 of BCP 79. 

   Internet-Drafts are working documents of the Internet Engineering 
   Task Force (IETF), its areas, and its working groups.  Note that 
   other groups may also distribute working documents as Internet-
   Drafts. 

   Internet-Drafts are draft documents valid for a maximum of six months 
   and may be updated, replaced, or obsoleted by other documents at any 
   time.  It is inappropriate to use Internet-Drafts as reference 
   material or to cite them other than as "work in progress." 

   The list of current Internet-Drafts can be accessed at 
   http://www.ietf.org/ietf/1id-abstracts.txt 

   The list of Internet-Draft Shadow Directories can be accessed at 
   http://www.ietf.org/shadow.html 

   This Internet-Draft will expire on April 2, 2008. 

Copyright Notice 

   Copyright (C) The IETF Trust (2008). 

Abstract 

   This document specifies conventions for X.509 certificate usage by 
   Secure/Multipurpose Internet Mail Extensions (S/MIME) agents.  S/MIME 
   provides a method to send and receive secure MIME messages, and 
   certificates are an integral part of S/MIME agent processing.  S/MIME 
 
 
 
Ramsdell & Turner       Expires April 2, 2009                  [Page 1] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   agents validate certificates as described in RFC 5280, the Internet 
   X.509 Public Key Infrastructure Certificate and CRL Profile.  S/MIME 
   agents must meet the certificate processing requirements in this 
   document as well as those in RFC 5280. This document obsoletes RFC 
   3850. 

Discussion 

   This draft is being discussed on the 'ietf-smime' mailing list. To 
   subscribe, send a message to ietf-smime-request@imc.org with the 
   single word subscribe in the body of the message. There is a Web site 
   for the mailing list at <http://www.imc.org/ietf-smime/>. 

Table of Contents 

   1. Introduction...................................................2 
      1.1. Definitions...............................................3 
      1.2. Conventions used in this document.........................4 
      1.3. Compatibility with Prior Practice S/MIME..................4 
      1.4. Changes From S/MIME v3 to S/MIME v3.1.....................4 
      1.5. Changes Since S/MIME v3.1.................................5 
   2. CMS Options....................................................6 
      2.1. Certificate Revocation Lists..............................6 
      2.2. Certificate Choices.......................................6 
         2.2.1. Historical Note About CMS Certificates...............6 
      2.3. CertificateSet............................................7 
   3. Using Distinguished Names For Internet Mail....................8 
   4. Certificate Processing.........................................9 
      4.1. Certificate Revocation Lists.............................10 
      4.2. Certificate Path Validation..............................10 
      4.3. Certificate and CRL Signing Algorithms and Key Sizes.....11 
      4.4. PKIX Certificate Extensions..............................12 
   5. IANA Considerations...........................................14 
   6. Security Considerations.......................................14 
   7. References....................................................16 
      7.1. Normative References.....................................16 
      7.2. Informative References...................................18 
   Appendix A. Moving S/MIME v2 Certificate Handling to Historic 
               Status...............................................20 
   Appendix B. Acknowledgements.....................................20 
    
1. Introduction 

   S/MIME (Secure/Multipurpose Internet Mail Extensions), described in 
   [SMIME-MSG], provides a method to send and receive secure MIME 
   messages.  Before using a public key to provide security services, 
   the S/MIME agent MUST verify that the public key is valid.  S/MIME 
 
 
Ramsdell & Turner       Expires April 2, 2009                  [Page 2] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   agents MUST use PKIX certificates to validate public keys as 
   described in the Internet X.509 Public Key Infrastructure (PKIX) 
   Certificate and CRL Profile [KEYM].  S/MIME agents MUST meet the 
   certificate processing requirements documented in this document in 
   addition to those stated in [KEYM]. 

   This specification is compatible with the Cryptographic Message 
   Syntax (CMS) RFC 3852 and RFC 4853 [CMS] in that it uses the data 
   types defined by CMS.  It also inherits all the varieties of 
   architectures for certificate-based key management supported by CMS. 

1.1. Definitions 

   For the purposes of this document, the following definitions apply. 

   ASN.1: Abstract Syntax Notation One, as defined in ITU-T X.680 
   [X.680]. 

   Attribute Certificate (AC): An X.509 AC is a separate structure from 
   a subject's public key X.509 Certificate.  A subject may have 
   multiple X.509 ACs associated with each of its public key X.509 
   Certificates.  Each X.509 AC binds one or more Attributes with one of 
   the subject's public key X.509 Certificates.  The X.509 AC syntax is 
   defined in [ACAUTH]. 

   Certificate: A type that binds an entity's name to a public key with 
   a digital signature.  This type is defined in the Internet X.509 
   Public Key Infrastructure (PKIX) Certificate and CRL Profile [KEYM]. 
   This type also contains the distinguished name of the certificate 
   issuer (the signer), an issuer-specific serial number, the issuer's 
   signature algorithm identifier, a validity period, and extensions 
   also defined in that document. 

   Certificate Revocation List (CRL): A type that contains information 
   about certificates whose validity an issuer has prematurely revoked. 
   The information consists of an issuer name, the time of issue, the 
   next scheduled time of issue, a list of certificate serial numbers 
   and their associated revocation times, and extensions as defined in 
   [KEYM].  The CRL is signed by the issuer.  The type intended by this 
   specification is the one defined in [KEYM]. 

   Receiving agent: Software that interprets and processes S/MIME CMS 
   objects, MIME body parts that contain CMS objects, or both. 

   Sending agent: Software that creates S/MIME CMS objects, MIME body 
   parts that contain CMS objects, or both. 

 
 
Ramsdell & Turner       Expires April 2, 2009                  [Page 3] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   S/MIME agent: User software that is a receiving agent, a sending 
   agent, or both. 

1.2. Conventions used in this document 

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", 
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this 
   document are to be interpreted as described in [MUSTSHOULD]. 

   We define some additional terms here: 

     SHOULD+ This term means the same as SHOULD.  However, the authors 
      expect that a requirement marked as SHOULD+ will be promoted at 
      some future time to be a MUST. 

     SHOULD- This term means the same as SHOULD.  However, the authors 
      expect that a requirement marked as SHOULD- will be demoted to a 
      MAY in a future version of this document. 

     MUST- This term means the same as MUST.  However, the authors 
      expect that this requirement will no longer be a MUST in a future 
      document.  Although its status will be determined at a later 
      time, it is reasonable to expect that if a future revision of a 
      document alters the status of a MUST- requirement, it will remain 
      at least a SHOULD or a SHOULD-. 

1.3. Compatibility with Prior Practice S/MIME 

   S/MIME version 3.2 agents should attempt to have the greatest 
   interoperability possible with agents for prior versions of S/MIME. 
   S/MIME version 2 is described in RFC 2311 through RFC 2315 inclusive 
   [SMIMEv2], S/MIME version 3 is described in RFC 2630 through RFC 2634 
   inclusive and RFC 5035 [SMIMEv3], and S/MIME version 3.1 is described 
   in RFC 3850, RFC 3851, RFC 3852, RFC 2634, RFC4853, and RFC 5035 
   [SMIMEv3.1].  RFC 2311 also has historical information about the 
   development of S/MIME. 

1.4. Changes From S/MIME v3 To S/MIME v3.1 

   Version 1 and Version 2 CRLs MUST be supported. 

   Multiple CA certificates with the same subject and public key, but 
   with overlapping validity periods, MUST be supported. 

   Version 2 attribute certificates SHOULD be supported, and version 1 
   attributes certificates MUST NOT be used. 

 
 
Ramsdell & Turner       Expires April 2, 2009                  [Page 4] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   The use of the MD2 digest algorithm for certificate signatures is 
   discouraged and security language added. 

   Clarified use of email address use in certificates.  Certificates 
   that do not contain an email address have no requirements for 
   verifying the email address associated with the certificate. 

   Receiving agents SHOULD display certificate information when 
   displaying the results of signature verification. 

   Receiving agents MUST NOT accept a signature made with a certificate 
   that does not have the digitalSignature or nonRepudiation bit set. 

   Clarifications for the interpretation of the key usage and extended 
   key usage extensions. 

1.5. Changes Since S/MIME v3.1 

   Conventions Used in This Document: Moved to section 1.2. Added 
   definitions for SHOULD+, SHOULD-, and MUST-. 

   Sec 1.1: Updated ASN.1 definition and reference. 

   Sec 1.3: Added text about v3.1 RFCs. 

   Sec 3: Updated note to indicate emailAddress IA5String upper bound is 
   255 characters. 

   Sec 4.2: Added text to indicate how S/MIME agents locate the correct 
   user certificate. 

   Sec 4.3: RSA with SHA-256 (PKCS #1 v1.5) added as MUST, DSA with SHA-
   256 added as SHOULD+, RSA with SHA-1, DSA with SHA-1, and RSA with 
   MD5 changed to SHOULD-, and RSA-PSS with SHA-256 added as SHOULD+. 
   Updated key sizes and changed pointer to PKIX RFCs. 

   Sec 4.4.1: Aligned with PKIX on use of basic constraints extension in 
   CA certificates. Clarified which extension is used to constrain EEs 
   from using their keys to perform issuing authority operations. 

   Sec 6: Updated security considerations. 

   Sec 7: Moved references from Appendix B to section 7. Updated the 
   references. 

   Appendix A: Moved Appendix A to Appendix B. Added Appendix A to move 
   S/MIME v2 Certificate Handling to Historic Status. 
 
 
Ramsdell & Turner       Expires April 2, 2009                  [Page 5] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

2. CMS Options 

   The CMS message format allows for a wide variety of options in 
   content and algorithm support.  This section puts forth a number of 
   support requirements and recommendations in order to achieve a base 
   level of interoperability among all S/MIME implementations.  Most of 
   the CMS format for S/MIME messages is defined in [SMIME-MSG]. 

2.1. Certificate Revocation Lists 

   Receiving agents MUST support the Certificate Revocation List (CRL) 
   format defined in [KEYM].  If sending agents include CRLs in outgoing 
   messages, the CRL format defined in [KEYM] MUST be used.  In all 
   cases, both v1 and v2 CRLs MUST be supported. 

   All agents MUST be capable of performing revocation checks using CRLs 
   as specified in [KEYM].  All agents MUST perform revocation status 
   checking in accordance with [KEYM].  Receiving agents MUST recognize 
   CRLs in received S/MIME messages. 

   Agents SHOULD store CRLs received in messages for use in processing 
   later messages. 

2.2. Certificate Choices 

   Receiving agents MUST support v1 X.509 and v3 X.509 certificates as 
   profiled in [KEYM].  End entity certificates MAY include an Internet 
   mail address, as described in section 3. 

   Receiving agents SHOULD support X.509 version 2 attribute 
   certificates.  See [ACAUTH] for details about the profile for 
   attribute certificates. 

2.2.1. Historical Note About CMS Certificates 

   The CMS message format supports a choice of certificate formats for 
   public key content types: PKIX, PKCS #6 Extended Certificates [PKCS6] 
   and PKIX Attribute Certificates. 

   The PKCS #6 format is not in widespread use.  In addition, PKIX 
   certificate extensions address much of the same functionality and 
   flexibility as was intended in the PKCS #6.  Thus, sending and 
   receiving agents MUST NOT use PKCS #6 extended certificates. 

   X.509 version 1 attribute certificates are also not widely 
   implemented, and have been superseded with version 2 attribute 

 
 
Ramsdell & Turner       Expires April 2, 2009                  [Page 6] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   certificates.  Sending agents MUST NOT send version 1 attribute 
   certificates. 

2.3. CertificateSet 

   Receiving agents MUST be able to handle an arbitrary number of 
   certificates of arbitrary relationship to the message sender and to 
   each other in arbitrary order.  In many cases, the certificates 
   included in a signed message may represent a chain of certification 
   from the sender to a particular root.  There may be, however, 
   situations where the certificates in a signed message may be 
   unrelated and included for convenience. 

   Sending agents SHOULD include any certificates for the user's public 
   key(s) and associated issuer certificates.  This increases the 
   likelihood that the intended recipient can establish trust in the 
   originator's public key(s).  This is especially important when 
   sending a message to recipients that may not have access to the 
   sender's public key through any other means or when sending a signed 
   message to a new recipient.  The inclusion of certificates in 
   outgoing messages can be omitted if S/MIME objects are sent within a 
   group of correspondents that has established access to each other's 
   certificates by some other means such as a shared directory or manual 
   certificate distribution.  Receiving S/MIME agents SHOULD be able to 
   handle messages without certificates using a database or directory 
   lookup scheme. 

   A sending agent SHOULD include at least one chain of certificates up 
   to, but not including, a Certificate Authority (CA) that it believes 
   that the recipient may trust as authoritative.  A receiving agent 
   MUST be able to handle an arbitrarily large number of certificates 
   and chains. 

   Agents MAY send CA certificates, that is, cross-certificates, self-
   issued certificates, and self-signed certificates. Note that 
   receiving agents SHOULD NOT simply trust any self-signed certificates 
   as valid CAs, but SHOULD use some other mechanism to determine if 
   this is a CA that should be trusted.  Also note that when 
   certificates contain DSA public keys the parameters may be located in 
   the root certificate.  This would require that the recipient possess 
   both the end-entity certificate as well as the root certificate to 
   perform a signature verification, and is a valid example of a case 
   where transmitting the root certificate may be required. 

   Receiving agents MUST support chaining based on the distinguished 
   name fields.  Other methods of building certificate chains MAY be 
   supported. 
 
 
Ramsdell & Turner       Expires April 2, 2009                  [Page 7] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   Receiving agents SHOULD support the decoding of X.509 attribute 
   certificates included in CMS objects.  All other issues regarding the 
   generation and use of X.509 attribute certificates are outside of the 
   scope of this specification.  One specification that addresses 
   attribute certificate use is defined in [SECLABEL]. 

3. Using Distinguished Names For Internet Mail 

   End-entity certificates MAY contain an Internet mail address as 
   described in [IMF].  The address must be an "addr-spec" as defined in 
   Section 3.4.1 of that specification.  The email address SHOULD be in 
   the subjectAltName extension, and SHOULD NOT be in the subject 
   distinguished name. 

   Receiving agents MUST recognize and accept certificates that contain 
   no email address.  Agents are allowed to provide an alternative 
   mechanism for associating an email address with a certificate that 
   does not contain an email address, such as through the use of the 
   agent's address book, if available.  Receiving agents MUST recognize 
   email addresses in the subjectAltName field.  Receiving agents MUST 
   recognize email addresses in the Distinguished Name field in the PKCS 
   #9 [PKCS9] emailAddress attribute: 

   pkcs-9-at-emailAddress OBJECT IDENTIFIER ::= 
    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) 1 } 

   Note that this attribute MUST be encoded as IA5String and has an 
   upper bound of 255 characters. 

   Sending agents SHOULD make the address in the From or Sender header 
   in a mail message match an Internet mail address in the signer's 
   certificate.  Receiving agents MUST check that the address in the 
   From or Sender header of a mail message matches an Internet mail 
   address, if present, in the signer's certificate, if mail addresses 
   are present in the certificate.  A receiving agent SHOULD provide 
   some explicit alternate processing of the message if this comparison 
   fails, which may be to display a message that shows the recipient the 
   addresses in the certificate or other certificate details. 

   A receiving agent SHOULD display a subject name or other certificate 
   details when displaying an indication of successful or unsuccessful 
   signature verification. 

   All subject and issuer names MUST be populated (i.e., not an empty 
   SEQUENCE) in S/MIME-compliant X.509 certificates, except that the 
   subject DN in a user's (i.e., end-entity) certificate MAY be an empty 

 
 
Ramsdell & Turner       Expires April 2, 2009                  [Page 8] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   SEQUENCE in which case the subjectAltName extension will include the 
   subject's identifier and MUST be marked as critical. 

4. Certificate Processing 

   S/MIME agents need to provide some certificate retrieval mechanism in 
   order to gain access to certificates for recipients of digital 
   envelopes.  There are many ways to implement certificate retrieval 
   mechanisms.  [X.500] directory service is an excellent example of a 
   certificate retrieval-only mechanism that is compatible with classic 
   X.500 Distinguished Names.  Another method under consideration by the 
   IETF is to provide certificate retrieval services as part of the 
   existing Domain Name System (DNS).  Until such mechanisms are widely 
   used, their utility may be limited by the small number of the 
   correspondent's certificates that can be retrieved. At a minimum, for 
   initial S/MIME deployment, a user agent could automatically generate 
   a message to an intended recipient requesting the recipient's 
   certificate in a signed return message. 

   Receiving and sending agents SHOULD also provide a mechanism to allow 
   a user to "store and protect" certificates for correspondents in such 
   a way so as to guarantee their later retrieval.  In many 
   environments, it may be desirable to link the certificate 
   retrieval/storage mechanisms together in some sort of certificate 
   database.  In its simplest form, a certificate database would be 
   local to a particular user and would function in a similar way as an 
   "address book" that stores a user's frequent correspondents.  In this 
   way, the certificate retrieval mechanism would be limited to the 
   certificates that a user has stored (presumably from incoming 
   messages).  A comprehensive certificate retrieval/storage solution 
   may combine two or more mechanisms to allow the greatest flexibility 
   and utility to the user.  For instance, a secure Internet mail agent 
   may resort to checking a centralized certificate retrieval mechanism 
   for a certificate if it can not be found in a user's local 
   certificate storage/retrieval database. 

   Receiving and sending agents SHOULD provide a mechanism for the 
   import and export of certificates, using a CMS certs-only message. 
   This allows for import and export of full certificate chains as 
   opposed to just a single certificate.  This is described in [SMIME- 
   MSG]. 

   Agents MUST handle multiple valid Certification Authority (CA) 
   certificates containing the same subject name and the same public 
   keys but with overlapping validity intervals. 


 
 
Ramsdell & Turner       Expires April 2, 2009                  [Page 9] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

4.1. Certificate Revocation Lists 

   In general, it is always better to get the latest CRL information 
   from a CA than to get information stored away from incoming messages. 
   A receiving agent SHOULD have access to some certificate revocation 
   list (CRL) retrieval mechanism in order to gain access to certificate 
   revocation information when validating certification paths.  A 
   receiving or sending agent SHOULD also provide a mechanism to allow a 
   user to store incoming certificate revocation information for 
   correspondents in such a way so as to guarantee its later retrieval. 

   Receiving and sending agents SHOULD retrieve and utilize CRL 
   information every time a certificate is verified as part of a 
   certification path validation even if the certificate was already 
   verified in the past.  However, in many instances (such as off-line 
   verification) access to the latest CRL information may be difficult 
   or impossible.  The use of CRL information, therefore, may be 
   dictated by the value of the information that is protected.  The 
   value of the CRL information in a particular context is beyond the 
   scope of this specification but may be governed by the policies 
   associated with particular certification paths. 

   All agents MUST be capable of performing revocation checks using CRLs 
   as specified in [KEYM].  All agents MUST perform revocation status 
   checking in accordance with [KEYM].  Receiving agents MUST recognize 
   CRLs in received S/MIME messages. 

4.2. Certificate Path Validation 

   In creating a user agent for secure messaging, certificate, CRL, and 
   certification path validation SHOULD be highly automated while still 
   acting in the best interests of the user.  Certificate, CRL, and path 
   validation MUST be performed as per [KEYM] when validating a 
   correspondent's public key.  This is necessary before using a public 
   key to provide security services such as: verifying a signature; 
   encrypting a content-encryption key (ex: RSA); or forming a pairwise 
   symmetric key (ex: Diffie-Hellman) to be used to encrypt or decrypt a 
   content-encryption key. 

   Certificates and CRLs are made available to the path validation 
   procedure in two ways: a) incoming messages, and b) certificate and 
   CRL retrieval mechanisms.  Certificates and CRLs in incoming messages 
   are not required to be in any particular order nor are they required 
   to be in any way related to the sender or recipient of the message 
   (although in most cases they will be related to the sender). Incoming 
   certificates and CRLs SHOULD be cached for use in path validation and 
   optionally stored for later use.  This temporary certificate and CRL 
 
 
Ramsdell & Turner       Expires April 2, 2009                 [Page 10] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   cache SHOULD be used to augment any other certificate and CRL 
   retrieval mechanisms for path validation on incoming signed messages. 

   When verifying a signature and the certificates are included in the 
   message, if a signingCertificate attribute from RFC 2634 [ESS] or a 
   signingCertificateV2 attribute from   RFC 5035 [ESS] is found in an 
   S/MIME message, it SHALL be used to identify the signer's 
   certificate.  Otherwise, the certificate is identified in an S/MIME 
   message, either using the issuerAndSerialNumber which identifies the 
   signer's certificate by the issuer's distinguished name and the 
   certificate serial number, or the subjectKeyIdentifier which 
   identifies the signer's certificate by a key identifier. 

   When decrypting an encrypted message, if a 
   SMIMEEncryptionKeyPreference attribute is found in an encapsulating 
   SignedData, it SHALL be used to identify the originator's certificate 
   found in OriginatorInfo. See [CMS] for the CMS fields that reference 
   the originator's and recipient's certificates. 

4.3. Certificate and CRL Signing Algorithms and Key Sizes 

   Certificates and Certificate Revocation Lists (CRLs) are signed by 
   the certificate issuer.  Receiving agents: 

    - MUST support RSA with SHA-256 

    - SHOULD+ support DSA with SHA-256 

    - SHOULD+ support RSA-PSS with SHA-256 

    - SHOULD- support RSA with SHA-1 

    - SHOULD- support DSA with SHA-1 

    - SHOULD- support RSA with MD5 

   The following are the RSA key size requirements for S/MIME receiving 
   agents during certificate and CRL signature verification: 

      0 <  key size <   512 : MAY  (see Section 6) 
    512 <= key size <= 4096 : MUST (see Section 6) 
   4096 <  key size         : MAY  (see Section 6) 





 
 
Ramsdell & Turner       Expires April 2, 2009                 [Page 11] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   The following are the DSA key size requirements for S/MIME receiving 
   agents during certificate and CRL signature verification: 

    512  <= key size <= 1023 : MAY      (see Section 6) 
    1024  = key size         : SHOULD-  (see Section 6) 

   For 512-bit RSA with SHA-1 see [KEYMALG] and [FIPS186-2] without 
   Change Notice 1, for 512-bit RSA with SHA-256 see [RSAOAEP] and 
   [FIPS186-2] without Change Notice 1, for 1024-bit through 3072-bit 
   RSA with SHA-256 see [RSAOAEP] and [FIPS186-2] with Change Notice 1, 
   and for 4096-bit RSA with SHA-256 see [RSAOAEP] and [PKCS1].  The 
   first reference provides the signature algorithm's object identifier 
   and the second provides the signature algorithm's definition. 

   For 512-bit DSA with SHA-1 see [KEYMALG] and [FIPS186-2] without 
   Change Notice 1, for 512-bit DSA with SHA-256 see [KEYMALG2] and 
   [FIPS186-2] without Change Notice 1, for 1024-bit DSA with SHA-1 see 
   [KEYMALG] and [FIPS186-2] with Change Notice 1, for 1024-bit DSA with 
   SHA-256 see [KEYMALG2] and [FIPS186-3]. The first reference provides 
   the signature algorithm's object identifier and the second provides 
   the signature algorithm's definition. 

   For 512-4096-bit RSA-PSS with SHA-256 see [RSAPSS]. 

4.4. PKIX Certificate Extensions 

   PKIX describes an extensible framework in which the basic certificate 
   information can be extended and describes how such extensions can be 
   used to control the process of issuing and validating certificates.  
   The PKIX Working Group has ongoing efforts to identify and create 
   extensions which have value in particular certification environments.  
   Further, there are active efforts underway to issue PKIX certificates 
   for business purposes.  This document identifies the minimum required 
   set of certificate extensions which have the greatest value in the 
   S/MIME environment.  The syntax and semantics of all the identified 
   extensions are defined in [KEYM]. 

   Sending and receiving agents MUST correctly handle the basic 
   constraints, key usage, authority key identifier, subject key 
   identifier, and subject alternative names certificate extensions when 
   they appear in end-entity and CA certificates.  Some mechanism SHOULD 
   exist to gracefully handle other certificate extensions when they 
   appear in end-entity or CA certificates. 

   Certificates issued for the S/MIME environment SHOULD NOT contain any 
   critical extensions (extensions that have the critical field set to 
   TRUE) other than those listed here.  These extensions SHOULD be 
 
 
Ramsdell & Turner       Expires April 2, 2009                 [Page 12] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   marked as non-critical unless the proper handling of the extension is 
   deemed critical to the correct interpretation of the associated 
   certificate.  Other extensions may be included, but those extensions 
   SHOULD NOT be marked as critical. 

   Interpretation and syntax for all extensions MUST follow [KEYM], 
   unless otherwise specified here. 

4.4.1. Basic Constraints 

   The basic constraints extension serves to delimit the role and 
   position that an issuing authority or end-entity certificate plays in 
   a certification path. 

   For example, certificates issued to CAs and subordinate CAs contain a 
   basic constraint extension that identifies them as issuing authority 
   certificates.  End-entity certificates contain the key usage 
   extension which restrains EEs from using the key to performing 
   issuing authority operations (see Section 4.4.2). 

   As per [KEYM], Certificates MUST contain a basicConstraints extension 
   in CA certificates, and SHOULD NOT contain that extension in end 
   entity certificates. 

4.4.2. Key Usage Certificate Extension 

   The key usage extension serves to limit the technical purposes for 
   which a public key listed in a valid certificate may be used. Issuing 
   authority certificates may contain a key usage extension that 
   restricts the key to signing certificates, certificate revocation 
   lists and other data. 

   For example, a certification authority may create subordinate issuer 
   certificates which contain a key usage extension which specifies that 
   the corresponding public key can be used to sign end user 
   certificates and sign CRLs. 

   If a key usage extension is included in a PKIX certificate, then it 
   MUST be marked as critical. 

   S/MIME receiving agents MUST NOT accept the signature of a message if 
   it was verified using a certificate which contains the key usage 
   extension without either the digitalSignature or nonRepudiation bit 
   set.  Sometimes S/MIME is used as a secure message transport for 
   applications beyond interpersonal messaging.  In such cases, the 
   S/MIME-enabled application can specify additional requirements 

 
 
Ramsdell & Turner       Expires April 2, 2009                 [Page 13] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   concerning the digitalSignature or nonRepudiation bits within this 
   extension. 

   If the key usage extension is not specified, receiving clients MUST 
   presume that the digitalSignature and nonRepudiation bits are set. 

4.4.3. Subject Alternative Name 

   The subject alternative name extension is used in S/MIME as the 
   preferred means to convey the RFC-2822 email address(es) that 
   correspond(s) to the entity for this certificate.  Any RFC-2822 email 
   addresses present MUST be encoded using the rfc822Name CHOICE of the 
   GeneralName type.  Since the SubjectAltName type is a SEQUENCE OF 
   GeneralName, multiple RFC-2822 email addresses MAY be present. 

4.4.4. Extended Key Usage Extension 

   The extended key usage extension also serves to limit the technical 
   purposes for which a public key listed in a valid certificate may be 
   used.  The set of technical purposes for the certificate therefore 
   are the intersection of the uses indicated in the key usage and 
   extended key usage extensions. 

   For example, if the certificate contains a key usage extension 
   indicating digital signature and an extended key usage extension 
   which includes the email protection OID, then the certificate may be 
   used for signing but not encrypting S/MIME messages.  If the 
   certificate contains a key usage extension indicating digital 
   signature, but no extended key usage extension then the certificate 
   may also be used to sign but not encrypt S/MIME messages. 

   If the extended key usage extension is present in the certificate 
   then interpersonal message S/MIME receiving agents MUST check that it 
   contains either the emailProtection or the anyExtendedKeyUsage OID as 
   defined in [KEYM].  S/MIME uses other than interpersonal messaging 
   MAY require the explicit presence of the extended key usage extension 
   or other OIDs to be present in the extension or both. 

5. IANA Considerations 

   None: All identifiers are already registered.  Please remove this 
   section prior to publication as an RFC. 

6. Security Considerations 

   All of the security issues faced by any cryptographic application 
   must be faced by a S/MIME agent.  Among these issues are protecting 
 
 
Ramsdell & Turner       Expires April 2, 2009                 [Page 14] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   the user's private key, preventing various attacks, and helping the 
   user avoid mistakes such as inadvertently encrypting a message for 
   the wrong recipient.  The entire list of security considerations is 
   beyond the scope of this document, but some significant concerns are 
   listed here. 

   When processing certificates, there are many situations where the 
   processing might fail.  Because the processing may be done by a user 
   agent, a security gateway, or other program, there is no single way 
   to handle such failures.  Just because the methods to handle the 
   failures has not been listed, however, the reader should not assume 
   that they are not important.  The opposite is true: if a certificate 
   is not provably valid and associated with the message, the processing 
   software should take immediate and noticeable steps to inform the end 
   user about it. 

   Some of the many places where signature and certificate checking 
   might fail include: 

    - no Internet mail addresses in a certificate matches the sender of 
      a message, if the certificate contains at least one mail address 

    - no certificate chain leads to a trusted CA 

    - no ability to check the CRL for a certificate 

    - an invalid CRL was received 

    - the CRL being checked is expired 

    - the certificate is expired 

    - the certificate has been revoked 

   There are certainly other instances where a certificate may be 
   invalid, and it is the responsibility of the processing software to 
   check them all thoroughly, and to decide what to do if the check 
   fails. 

   It is possible for there to be multiple unexpired CRLs for a CA.  If 
   an agent is consulting CRLs for certificate validation, it SHOULD 
   make sure that the most recently issued CRL for that CA is consulted, 
   since an S/MIME message sender could deliberately include an older 
   unexpired CRL in an S/MIME message.  This older CRL might not include 
   recently revoked certificates, which might lead an agent to accept a 
   certificate that has been revoked in a subsequent CRL. 

 
 
Ramsdell & Turner       Expires April 2, 2009                 [Page 15] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   When determining the time for a certificate validity check, agents 
   have to be careful to use a reliable time.  Unless it is from a 
   trusted agent, this time MUST NOT be the SigningTime attribute found 
   in an S/MIME message.  For most sending agents, the SigningTime 
   attribute could be deliberately set to direct the receiving agent to 
   check a CRL that could have out-of-date revocation status for a 
   certificate, or cause an improper result when checking the Validity 
   field of a certificate. 

   In addition to the Security Considerations identified in [KEYM], 
   caution should be taken when processing certificates which have not 
   first been validated to a trust anchor.  Certificates could be 
   manufactured by untrusted sources for the purpose of mounting denial 
   of service or other attacks.  For example, keys selected to require 
   excessive cryptographic processing, or extensive lists of CDP and/or 
   AIA addresses in the certificate, could be used to mount denial of 
   service attacks.  Similarly, attacker-specified CRL Distribution 
   Point (CRLDP) and/or Authority Information Access (AIA) addresses 
   could be included in fake certificates to allow the originator to 
   detect receipt of the message even if signature verification fails. 

   The 4096-bit RSA key size requirement for certificate and CRL 
   verification is larger than the 2048-bit RSA key sizes for message 
   signature generation/verification or message encryption/decryption in 
   [SMIME-MSG] because many Root CAs included in certificate stores have 
   already issued Root certificates with 4096-bit key.  The standard 
   that defines comparable key sizes for DSA is not yet available.  In 
   particular, [FIPS186-2] without Change Notice 1 allowed DSA key sizes 
   between 512 and 1024 bits and [FIPS186-2] with Change Notice 1 only 
   allowed DSA key sizes of 1024 bits.  A revision to support larger key 
   sizes is being developed, and once it is available, implementors 
   ought to support DSA key sizes comparable to the RSA key sizes 
   recommended in this specification.   

   Today, 512-bit RSA and DSA keys are considered by many experts to be 
   cryptographically insecure. 

   If an implementation is concerned about compliance with NIST key size 
   recommendations, then see [SP800-57]. 

7. References 

7.1. Normative References 

   [ACAUTH]     Farrell, S. and R. Housley, "An Internet Attribute 
                Certificate Profile for Authorization", RFC 3281, April 
                2002. 
 
 
Ramsdell & Turner       Expires April 2, 2009                 [Page 16] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   [CMS]        Housley, R., "Cryptographic Message Syntax (CMS)", RFC 
                3852, July 2004. 

                Housley, R., "Cryptographic Message Syntax (CMS) 
                Multiple Signer Clarification", RFC 4853, April 2007. 

   [ESS]        Hoffman, P., "Enhanced Security Services for S/MIME", 
                RFC 2634, June 1999.  

                Schaad, J., "ESS Update: Adding CertID Algorithm 
                Agility", RFC 5035, August 2007.  

   [FIPS186-2]  National Institute of Standards and Technology (NIST), 
                "Digital Signature Standard (DSS)", FIPS Publication 
                186-3, January 2000. [With Change Notice 1]  

   [FIPS186-3]  National Institute of Standards and Technology (NIST), 
                FIPS Publication 186-3: Digital Signature Standard, 
                (draft) March 2006.  

   [KEYM]       Cooper, D., Santesson, S., Farrell, S., Boeyen, S. 
                Housley, R., and W. Polk, "Internet X.509 Public Key 
                Infrastructure Certificate and Certificate Revocation 
                List (CRL) Profile", RFC 5280, May 2008. 

   [KEYMALG]    Bassham, L., Polk, W., and R. Housley, "Algorithms and 
                Identifiers for the Internet X.509 Public Key 
                Infrastructure Certificate and Certificate Revocation 
                List (CRL) Profile", RFC 3279, April 2002. 

   [KEYMALG2]   Dang, Q., Santesson, S., Moriarty, K., Brown, D., and 
                T. Polk, "Internet X.509 Public Key Infrastructure: 
                Additional Algorithms and Identifiers for DSA and 
                ECDSA", draft-ietf-pkix-sha2-dsa-ecdsa, work-in-
                progress. 

   [MUSTSHOULD] Bradner, S., "Key words for use in RFCs to Indicate 
                Requirement Levels", BCP 14, RFC 2119, March 1997. 

   [PKCS1]      Jonsson, J. and B. Kaliki, "Public-Key Cryptography 
                Standards (PKCS) #1: RSA Cryptography Specifications 
                Version 2.1", RFC 3447, February 2003. 

   [PKCS9]      Nystrom, M. and B. Kaliski, "PKCS #9: Selected Object 
                Classes and Attribute Types Version 2.0", RFC 2985, 
                November 2000. 

 
 
Ramsdell & Turner       Expires April 2, 2009                 [Page 17] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   [IMF]        Resnick, P., "Internet Message Format", RFC 5322, 
                October 2008. 

   [RSAPSS]     Schaad, J., "Use of RSASA-PSS Signature Algorithm in 
                Cryptographic Message Syntax (CMS)", RFC 4056, June 
                2005.  

   [RSAOAEP]    Schaad, J., Kaliski, B., and R. Housley, "Additional 
                Algorithms and Identifiers for RSA Cryptography for use 
                in the Internet X.509 Public Key Infrastructure 
                Certificate and Certificate Revocation List (CRL) 
                Profile", RFC 4055, June 2005.  

   [SMIME-MSG]  Ramsdell, B., and S. Turner, "S/MIME Version 3.2 
                Message Specification", draft-ietf-smime-3851bis-
                07.txt, work-in-progress. 

   [X.680]      ITU-T Recommendation X.680 (2002) | ISO/IEC 8824-
                1:2002. Information Technology - Abstract Syntax 
                Notation One (ASN.1):  Specification of basic notation. 

7.2. Informative References 

   [PKCS6]      RSA Laboratories, "PKCS #6: Extended-Certificate Syntax 
                Standard", November 1993. 

   [SECLABEL]   Nicolls, W., "Implementing Company Classification 
                Policy with the S/MIME Security Label", RFC 3114, May 
                2002. 

   [SMIMEv2]    Dusse, S., Hoffman, P., Ramsdell, B., Lundblade, L. and 
                L. Repka, "S/MIME Version 2 Message Specification", RFC 
                2311, March 1998. 

                Dusse, S., Hoffman, P., Ramsdell, B., and J. Weinstein, 
                "S/MIME Version 2 Certificate Handling", RFC 2312, 
                March 1998. 

                Kaliski, B., "PKCS #1: RSA Encryption Version 1.5", RFC 
                2313, March 1998. 

                Kaliski, B., "PKCS #10: Certificate Request Syntax 
                Version 1.5", RFC 2314, March 1998. 

                Kaliski, B., "PKCS #7: Certificate Message Syntax 
                Version 1.5", RFC 2315, March 1998. 

 
 
Ramsdell & Turner       Expires April 2, 2009                 [Page 18] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

   [SMIMEv3]    Housley, R., "Cryptographic Message Syntax", RFC 2630, 
                June 1999. 

                Rescorla, E., "Diffie-Hellman Key Agreement Method", 
                RFC 2631, June 1999. 

                Ramsdell, B., "S/MIME Version 3 Certificate Handling", 
                RFC 2632, June 1999. 

                Ramsdell, B., "S/MIME Version 3 Message Specification", 
                RFC 2633, June 1999. 

                Hoffman, P., "Enhanced Security Services for S/MIME", 
                RFC 2634, June 1999. 

                Schaad, J., "ESS Update: Adding CertID Algorithm 
                Agility", RFC 5035, August 2007.  

   [SMIMEv3.1]  Housley, R., "Cryptographic Message Syntax", RFC 3852, 
                July 2004.  

                Housley, R., "Cryptographic Message Syntax (CMS) 
                Multiple Signer Clarification", RFC 4853, April 2007. 

                Ramsdell, B., "S/MIME Version 3.1 Certificate 
                Handling", RFC 3850, July 2004. 

                Ramsdell, B., "S/MIME Version 3.1 Message 
                Specification", RFC 3851, July 2004. 

                Hoffman, P., "Enhanced Security Services for S/MIME", 
                RFC 2634, June 1999. 

                Schaad, J., "ESS Update: Adding CertID Algorithm 
                Agility", RFC 5035, August 2007.  

   [SP800-57]    National Institute of Standards and Technology (NIST), 
                 Special Publication 800-57: Recommendation for Key 
                 Management, August 2005. 

   [X.500]      ITU-T Recommendation X.500 (1997) | ISO/IEC 9594-
                1:1997, Information technology - Open Systems 
                Interconnection - The Directory:  Overview of concepts, 
                models and services. 



 
 
Ramsdell & Turner       Expires April 2, 2009                 [Page 19] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

Appendix A. Moving S/MIME v2 Certificate Handling to Historic Status 

   The S/MIME v3 [SMIMEv3], v3.1 [SMIMEv3.1], and v3.2 (this document) 
   are backwards compatible with the S/MIME v2 Certificate Handling 
   Specification [SMIMEv2], with the exception of the algorithms 
   (dropped RC2/40 requirement and added DSA and RSA-PSS requirements).  
   Therefore, it is recommended that RFC 2312 [SMIMEv2] be moved to 
   Historic status. 

Appendix B. Acknowledgements 

   Many thanks go out to the other authors of the S/MIME v2 RFC: Steve 
   Dusse, Paul Hoffman and Jeff Weinstein.  Without v2, there wouldn't 
   be a v3, v3.1 or v3.2. 

   A number of the members of the S/MIME Working Group have also worked 
   very hard and contributed to this document.  Any list of people is 
   doomed to omission and for that I apologize.  In alphabetical order, 
   the following people stand out in my mind due to the fact that they 
   made direct contributions to this document. 

   Bill Flanigan, Trevor Freeman, Elliott Ginsburg, Alfred Hoenes, Paul 
   Hoffman, Russ Housley, David P. Kemp, Michael Myers, John Pawling, 
   Denis Pinkas, and Jim Schaad. 

Author's Addresses 

   Blake Ramsdell 
   Brute Squad Labs, Inc. 

   Email: blaker@gmail.com 

   Sean Turner 

   IECA, Inc. 
   3057 Nutley Street, Suite 106 
   Fairfax, VA 22031 
   USA 

   Email: turners@ieca.com 







 
 
Ramsdell & Turner       Expires April 2, 2009                 [Page 20] 

Internet-Draft     S/MIME 3.2 Certificate Handling          August 2009 
    

Full Copyright Statement 

   Copyright (C) The IETF Trust (2008). 

   This document is subject to the rights, licenses and restrictions 
   contained in BCP 78, and except as set forth therein, the authors 
   retain all their rights. 

   This document and the information contained herein are provided on an 
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS 
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND 
   THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS 
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF 
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED 
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 

Intellectual Property 

   The IETF takes no position regarding the validity or scope of any 
   Intellectual Property Rights or other rights that might be claimed to 
   pertain to the implementation or use of the technology described in 
   this document or the extent to which any license under such rights 
   might or might not be available; nor does it represent that it has 
   made any independent effort to identify any such rights.  Information 
   on the procedures with respect to rights in RFC documents can be 
   found in BCP 78 and BCP 79. 

   Copies of IPR disclosures made to the IETF Secretariat and any 
   assurances of licenses to be made available, or the result of an 
   attempt made to obtain a general license or permission for the use of 
   such proprietary rights by implementers or users of this 
   specification can be obtained from the IETF on-line IPR repository at 
   http://www.ietf.org/ipr. 

   The IETF invites any interested party to bring to its attention any 
   copyrights, patents or patent applications, or other proprietary 
   rights that may cover technology that may be required to implement 
   this standard.  Please address the information to the IETF at 
   ietf-ipr@ietf.org. 

Acknowledgment 

   Funding for the RFC Editor function is provided by the IETF 
   Administrative Support Activity (IASA). 



 
 
Ramsdell & Turner       Expires April 2, 2009                 [Page 21]