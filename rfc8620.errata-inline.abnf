fooIds = [ "id1", "id2", null, null, "id3", "id4", null, null, null ]

removed = [ "id2", "id31", ... ];
fooIds => [ "id1", null, null, "id3", "id4", null, null, null ]

added = [{ id: "id5", index: 0, ... }];
fooIds => [ "id5", "id1", null, null, "id3", "id4", null, null, null ]

   and *truncates* or *extends* to the new total length, then the
   results will now be in the new state.

   Note: splicing in adds the item at the given index, incrementing the
   index of all items previously at that or a higher index.  Splicing
   out is the inverse, removing the item and decrementing the index of
   every item after it in the array.

   The following additional errors may be returned instead of the "Foo/
   queryChanges" response:

   "tooManyChanges": There are more changes than the client's
   "maxChanges" argument.  Each item in the removed or added array is
   considered to be one change.  The client may retry with higher max
   changes or invalidate its cache of the query results.

   "cannotCalculateChanges": The server cannot calculate the changes
   from the queryState string given by the client, usually due to the
   client's state being too old.  The client MUST invalidate its cache
   of the query results.

