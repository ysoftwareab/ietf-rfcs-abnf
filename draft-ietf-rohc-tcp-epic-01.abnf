L = 8 * v + p 
    
i = locate-first(encoding_name) 
    
temp_field = current_field 
j = 0 
can_compress = COMPRESS (encoding_name[i + j]) 
j = j + 1 
                         
i = encoding_name[i + j].forwards 
    
i = locate-last(encoding_name) 
    
i = i + chosen_encoding[current_field] 
i = encoding_name[i].backwards 
    
compressor_state = "IR" and once with compressor_state = "IR-DYN". 
i = locate-first(encoding_name) 
    
temp_list = empty 

list_output = BUILD (encoding_name[i]) 
                 
new_list = empty 
         
n = new_list.size 
list = new_list 
                 
i = encoding_name[i].forwards 
    
u = 0 
v = max_formats 
    
u = u + 2 
v = v + 2 
u = u + 1 
v = v + 1 
z = w 
z = list[z].pointer 
value = 0 
w = max_formats - 1 
         
value = (value + 1) * 2^(list[w].flaglength - list[w +  
w = w - 1 
temp_u = u 
temp_v = v 
    
temp_u = temp_u + 1 
temp_v = temp_v + 1 
variable = left(data_string, n) 
    
data_string = right(data_string, data_string.len - n) 
         
data_string = bits + data_string 
         
variable = context[current_field, i] 
    
current_field = current_field + 1 
    
n = context.len 
n = context.len 
new_value = NEXT (uncompressed_data, n) 
old_value = context.val 
temp = (new_value - old_value + p) mod 2^n 
n = context.len 
old_value = context.val 
new_value = (left(context, n - k) + temp).val 
new_value = ((new_value - old_value + p) mod 2^k +  
hdr = str(n, new_value) 
hdr = str(n - k, 0) + temp 
uncompressed_data = uncompressed_data + hdr 
scale_len = floor(length.val) / d) * m + p 
hdr = right(uncompressed_data, scale_len) 
uncompressed_data = left(uncompressed_data, 
base = MSN 
offset = str(n, (hdr.val - base.val) mod 2^n) 
base = MSN 
hdr = str(n, (offset.val + base.val) mod 2^n) 
base = MSN 
offset = str(n, (hdr.val - scale * base.val) mod 2^n) 
hdr = str(n, (offset.val + scale * base.val) mod 2^n) 
temp = left(temp, 80) + str(16, 0) + right(temp, 64) 
hdr = left(temp, 80) + checksum(temp) + right(temp, 64) 
format = BUILD (new_encoding_name) 
format = BUILD (new_encoding_name) 
format = BUILD (new_encoding_name) 
i = 0 
v = next.val 
i = i + 1 
can_compress = COMPRESS (encoding_name[i]) 
can_compress = COMPRESS (encoding_name[i]) 
i = last_value[list_name] 
temp_format = BUILD (encoding_name[i]) 
current_field = current_field - 1 
current_field = current_field - 1 
    
can_compress = COMPRESS (encoding_name[j]) 
index = str(n, j) 
j = index.val 
can_compress = COMPRESS (encoding_name[j]) 
current_set = current_set + max_sets * j 
max_sets = max_sets * k 
j = index.val 
current_set = current_set * k + j 
j = current_set mod k 
current_set = floor(current_set / k) 
format = empty 
temp_fmt = BUILD (encoding_name[i]) 
checksum_value = temp 
    
