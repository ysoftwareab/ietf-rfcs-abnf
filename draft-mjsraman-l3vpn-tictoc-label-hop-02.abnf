packet = makepacket(FEC,K, TS, A[i], I, Rseed);
S = 0     S = 0     S = 1
packet = CP-ReceivePacket(PEne); // from PEne
Rseed = ExtractRandomSeed(packet); // extract the Rseed value.
CurrentTimeSliceIndex = 0;

CurrentMasterClock = PTP LSP Master Clock Timestamp;

CurrentTimeInstant = CurrentMasterClock;

NextTimeInstant = CurrentMasterClock + TS[CurrentTimeSliceIndex];

packet = DP-ReceivePacket(Interface);
match = CheckFEC(packet); // Is the algorithm enabled?
hash-digest = calculateHash(A[i],packet);
CurrentTimeSliceIndex = 0;
CurrentTimeInstant = NextTimeInstant;
NextTimeInstant = CurrentTimeInstant + TS[CurrentTimeSliceIndex];
first-label = K[GenerateRandom(Rseed) MOD n(K)];
additional-label = process(hash-digest,I)
CurrentTimeSliceIndex = 0;
CurrentMasterClock = PTP LSP Clock Timestamp;
CurrentTimeInstant = CurrentMasterClock;
NextTimeInstant = CurrentMasterClock + TS[CurrentTimeSliceIndex];
packet = DP-ReceivePacket(Interface);
match = CheckFEC(packet);
label-in-packet=extractPacket(packet, LABEL);
inner-label=extractPacket(packet, INNER-LABEL);
hash-digest=calculateHash(A[i],packet);
OldRseedIndex = RseedIndex;
RseedIndex = (GenerateRandom(Rseed) MOD n(K));
NextRseedIndex = 
             LookAheadRseedIndex(GenerateRandom(Rseed) MOD n(K));
CurrentTimeSliceIndex = 0;
           end if
CurrentTimeInstant = NextTimeInstant;
NextTimeInstant = CurrentTimeInstant + TS[CurrentTimeSliceIndex];
first-label-range = K[RseedIndex (+or- 1)];
additional-label = process(hash-digest,I)
