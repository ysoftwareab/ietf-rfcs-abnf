



Network Working Group                                        J. Snijders
Internet-Draft                                                       NTT
Intended status: Informational                               May 3, 2020
Expires: November 4, 2020


A Default Validation Policy for the use of RPKI Manifests in the global
                        Internet Routing System.
          draft-spaghetti-sidrops-rpki-manifest-validation-00

Abstract

   Manifests are a critical cornerstone to the global Resource Public
   Key Infrastructure (RPKI).

   RFC 6486 describes a validation decision tree which introduced the
   notion of 'local policy', creating space for ambiguity.  This
   ambiguity has led to various RPKI implementations producing different
   output when presented with the same input, but also leads to severe
   operational security implications.

   This document updates RFC 6486 and introduces the notion of a default
   policy for Manifest validation to encourage harmony between
   implementations.

Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."




Snijders                Expires November 4, 2020                [Page 1]

Internet-Draft        RPKI Default Manifest Policy              May 2020


   This Internet-Draft will expire on November 4, 2020.

Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Suggested Reading . . . . . . . . . . . . . . . . . . . . . .   3
   3.  The Problem . . . . . . . . . . . . . . . . . . . . . . . . .   3
   4.  Update to RFC 6486  . . . . . . . . . . . . . . . . . . . . .   3
     4.1.  Tests for Determining Manifest State  . . . . . . . . . .   4
   5.  What to do when the CA's Publication Point is Distrusted  . .   5
   6.  TODO  . . . . . . . . . . . . . . . . . . . . . . . . . . . .   5
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .   5
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   5
   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   5
     9.1.  Normative References  . . . . . . . . . . . . . . . . . .   5
     9.2.  Informative References  . . . . . . . . . . . . . . . . .   6
   Appendix A.  Acknowledgements . . . . . . . . . . . . . . . . . .   7
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   7

1.  Introduction

   Manifests [RFC8416] are a critical cornerstone to the global Resource
   Public Key Infrastructure RPKI [RFC6480].

   RFC 6486 describes a validation decision tree which introduced the
   notion of 'local policy', creating space for ambiguity.  This
   ambiguity has led to various RPKI implementations producing different
   output when presented with the same input, but also operational
   security implications.

   This document updates RFC 6486 and introduces the notion of a global
   policy for Manifest validation to encourage harmony between
   implementations.



Snijders                Expires November 4, 2020                [Page 2]

Internet-Draft        RPKI Default Manifest Policy              May 2020


2.  Suggested Reading

   It is assumed that the reader understands BGP, [RFC4271], the RPKI
   [RFC6480], Route Origin Authorizations (ROAs) [RFC6482], RPKI-based
   Prefix Validation, [RFC6811], and Origin Validation Clarifications
   [RFC8481].

3.  The Problem

   It seems there is a mental trap in the RPKI system: contrary to
   intuition, implementers should focus on validation policies which
   minimize the number of Validated ROA Payloads (VRPs) at a RPKI cache.
   If RPKI cache implementers mistreat untrusted network data and
   'salvage whatever is possible', a number of critical issues are
   introduced which compromise our ability to deploy RPKI ROV
   incrementally.  Only a single path through the RFC 6486 decision tree
   is suitable for use in the global Internet system, as such that path
   is the Default Policy.

   If a dangerous condition is detected, not only MUST the manifest at
   the publication point be distrusted, but all VRPs encompassed by the
   IPAddrBlocks for which authority was delegated towards the
   Certificate Authority (CA) at the distrusted pulication point be
   removed from the RP's output.  If the result is no VRPs at all (for
   example because the RPKI subsystem is detected to be compromised at
   the root), that is a preferred state for the Internet routing system.
   The alternative is that a compromised RPKI system will permanently
   disrupt the global Internet routing system.

4.  Update to RFC 6486

   This section replaces section 6 of [RFC6486] in its entirety.

   The goal of an Relying Party (RP) is to determine which signed
   objects to use for validating assertions about INRs and their use
   (e.g., which VRPs to use in the construction of route filters).  The
   global Internet routing system is expected to benefit from uniform
   application of a similar validation policy, as such in the following
   sections we describe a sequence of tests that the RP MUST perform to
   determine the manifest state of the given publication point according
   to the default policy.  We then discuss the risks associated with
   using signed objects in the publication point, given the manifest
   state; we also provide suitable warning text that SHOULD be placed in
   a user-accessible log file.  Note that if a certificate is deemed
   unfit for use due to default policy, then any signed object that is
   validated using this certificate also SHOULD be deemed unfit for use
   (regardless of the status of the manifest at its own publication
   point).



Snijders                Expires November 4, 2020                [Page 3]

Internet-Draft        RPKI Default Manifest Policy              May 2020


4.1.  Tests for Determining Manifest State

   For a given publication point, the RP MUST perform the following
   tests to determine the manifest state of the publication point:

   1.  For each CA using this publication point, select the CA's current
       manifest (the "current" manifest is the manifest issued by this
       CA having the highest manifestNumber among all valid manifests,
       and where manifest validity is defined in Section 4.4 [RFC6486].
       If the publication point does not contain a valid manifest, see
       Section 5.  Lacking a valid manifest, the following tests cannot
       be performed.

   2.  To verify completeness, an RP MUST check that every file at each
       publication point appears in one and only one current manifest,
       and that every file listed in a current manifest is published at
       the same publication point as the manifest.

   3.  If files exist at the publication point that do not appear on any
       manifest, those can be ignored.

   4.  If files are listed in a manifest that do not appear at the
       publication point, see Section 5.

   5.  Check that the current time (translated to UTC) is between
       thisUpdate and nextUpdate.  If the current time does not lie
       within this interval, then see Section 5, but still continue with
       the following tests.

   6.  Verify that the listed hash value of every file listed in each
       manifest matches the value obtained by hashing the file at the
       publication point.  If the computed hash value of a file listed
       on the manifest does not match the hash value contained in the
       manifest, then see Section 5.

   7.  An RP MUST check that the contents of each current manifest
       conforms to the manifest's scope constraints, as specified in
       Section 2.

   8.  If a current manifest contains entries for objects that are not
       within the scope of the manifest, then the out-of-scope entries
       SHOULD be disregarded in the context of this manifest.  If there
       is no other current manifest that describes these objects within
       that other manifest's scope, then see Section 5.

   For each signed object, if all of the following conditions hold:





Snijders                Expires November 4, 2020                [Page 4]

Internet-Draft        RPKI Default Manifest Policy              May 2020


      the manifest for its publication and the associated publication
      point pass all of the above checks;

      the signed object is valid; and

      the manifests for every certificate on the certification path used
      to validate the signed object and the associated publication
      points pass all of the above checks;

   then the RP can conclude that no attack against the repository system
   has compromised the given signed object, and the signed object MUST
   be treated as valid (relative to manifest checking).

5.  What to do when the CA's Publication Point is Distrusted

   Once the RP has concluded the data at the publication point is
   distrusted, the RP MUST remove all VRPs encompassed by the
   IPAddrBlocks for which "right-of-use" authority was delegated to the
   CA at the distrusted publication from its output, regardless of the
   Trust Anchors.

6.  TODO

   o  Mention RIR transfer cases

   o  The case for a most conservative approach: a 'fail-closed' policy
      on the RPKI plane results in an collective ability to deploy ROV
      on the shared EBGP plane: as the default remains 'fail open' (aka
      'pre RPKI world'), operators in turn can deploy 'invalid ==
      reject' policies on their EBGP sessions incrementally.  A
      brilliant strategy, however it strongly depends erring to the side
      of caution (distrust?) in the validation process.

7.  Security Considerations

   ... where to start

8.  IANA Considerations

   None

9.  References

9.1.  Normative References







Snijders                Expires November 4, 2020                [Page 5]

Internet-Draft        RPKI Default Manifest Policy              May 2020


   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC4271]  Rekhter, Y., Ed., Li, T., Ed., and S. Hares, Ed., "A
              Border Gateway Protocol 4 (BGP-4)", RFC 4271,
              DOI 10.17487/RFC4271, January 2006,
              <https://www.rfc-editor.org/info/rfc4271>.

   [RFC6482]  Lepinski, M., Kent, S., and D. Kong, "A Profile for Route
              Origin Authorizations (ROAs)", RFC 6482,
              DOI 10.17487/RFC6482, February 2012,
              <https://www.rfc-editor.org/info/rfc6482>.

   [RFC6486]  Austein, R., Huston, G., Kent, S., and M. Lepinski,
              "Manifests for the Resource Public Key Infrastructure
              (RPKI)", RFC 6486, DOI 10.17487/RFC6486, February 2012,
              <https://www.rfc-editor.org/info/rfc6486>.

   [RFC6811]  Mohapatra, P., Scudder, J., Ward, D., Bush, R., and R.
              Austein, "BGP Prefix Origin Validation", RFC 6811,
              DOI 10.17487/RFC6811, January 2013,
              <https://www.rfc-editor.org/info/rfc6811>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8416]  Ma, D., Mandelberg, D., and T. Bruijnzeels, "Simplified
              Local Internet Number Resource Management with the RPKI
              (SLURM)", RFC 8416, DOI 10.17487/RFC8416, August 2018,
              <https://www.rfc-editor.org/info/rfc8416>.

   [RFC8481]  Bush, R., "Clarifications to BGP Origin Validation Based
              on Resource Public Key Infrastructure (RPKI)", RFC 8481,
              DOI 10.17487/RFC8481, September 2018,
              <https://www.rfc-editor.org/info/rfc8481>.

9.2.  Informative References

   [RFC6480]  Lepinski, M. and S. Kent, "An Infrastructure to Support
              Secure Internet Routing", RFC 6480, DOI 10.17487/RFC6480,
              February 2012, <https://www.rfc-editor.org/info/rfc6480>.







Snijders                Expires November 4, 2020                [Page 6]

Internet-Draft        RPKI Default Manifest Policy              May 2020


Appendix A.  Acknowledgements

   The authors wish to thank Rob Austein, Geoff Huston, Stephen Kent,
   Matt Lepinski, Martin Hoffman, Randy Bush, and Theo de Raadt for
   their insights and contributions which helped create this document.

Author's Address

   Job Snijders
   NTT Ltd.
   Theodorus Majofskistraat 100
   Amsterdam  1065 SZ
   The Netherlands

   Email: job@ntt.net




































Snijders                Expires November 4, 2020                [Page 7]
