s = realm
s = s + component;
key = key XOR 0xF0;
odd = 1;
s = string + salt;
tempkey = NULL;
odd = 1;
tempkey = tempkey XOR 8byteblock;
tempkey = key_correction(tempkey);
key = key_correction(DES-CBC-check(s,tempkey));
salt = name_to_default_salt(realm, name)
s = passwordString + salt
tmpKey1 = 168-fold(s)
tmpKey2 = DES3encrypt(tmpKey1, tmpKey1, zeroIvec)
key = DES3encrypt(tmpKey2, tmpKey1, tmpKey1[2])
Ke = DK(protocol key, key usage | 0xAA)
Ki = DK(protocol key, key usage | 0x55)

ciphertext = E(Ke, confounder | plaintext | padding) |
                     H(Ki, confounder | plaintext | padding)

Kc = DK(protocol key, key usage | 0x99)
MAC = H(Kc, plaintext)

key = get_decryption_key(resp.enc-part.kvno, resp.enc-part.etype,
                                      resp.padata);
server = req.second_ticket.client;
