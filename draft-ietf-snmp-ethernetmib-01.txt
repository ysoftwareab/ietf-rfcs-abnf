


                         Definitions of Managed Objects
                      for the Ethernet-like Interface Types

                             Mon Oct  1 13:27:00 1990


                          Transmission MIB Working Group
                                 J. Cook (editor)

                               Chipcom Corporation
                                118 Turnpike Road
                             Southborough, MA  01772

                                 cook@chipcom.com






          1.  Status of this Memo

          This draft document will be submitted to the RFC editor as an
          experimental extension to the SNMP MIB.  Distribution of this
          memo is unlimited.  Please send comments to the editor.


          2.  Abstract

          This memo defines an experimental portion of the Management
          Information Base (MIB) for use with network management
          protocols in TCP/IP-based internets.  In particular, it
          defines objects for managing ethernet-like objects.

          This memo does not specify a standard for the Internet
          community.  However, after experimentation, if sufficient
          consensus is reached in the Internet community, then a
          subsequent revision of this document may be incorporated into
          the Internet-standard MIB.

















          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          3.  Historical Perspective

          As reported in RFC 1052, IAB Recommendations for the
          Development of Internet Network Management Standards [1], a
          two-prong strategy for network management of TCP/IP-based
          internets was undertaken.  In the short-term, the Simple
          Network Management Protocol (SNMP), defined in RFC 1067, was
          to be used to manage nodes in the Internet community.  In the
          long-term, the use of the OSI network management framework was
          to be examined.  Two documents were produced to define the
          management information: RFC 1065, which defined the Structure
          of Management Information (SMI), and RFC 1066, which defined
          the Management Information Base (MIB).  Both of these
          documents were designed so as to be compatible with both the
          SNMP and the OSI network management framework.

          This strategy was quite successful in the short-term:
          Internet-based network management technology was fielded, by
          both the research and commercial communities, within a few
          months.  As a result of this, portions of the Internet
          community became network manageable in a timely fashion.

          As reported in RFC 1109, Report of the Second Ad Hoc Network
          Management Review Group [2], the requirements of the SNMP and
          the OSI network management frameworks were more different than
          anticipated.  As such, the requirement for compatibility
          between the SMI/MIB and both frameworks was suspended.  This
          action permitted the operational network management framework,
          based on the SNMP, to respond to new operational needs in the
          Internet community by producing MIB-II.

          In May of 1990, the core documents were elevated to "Standard
          Protocols" with "Recommended" status.  As such, the Internet-
          standard network management framework consists of: Structure
          and Identification of Management Information for TCP/IP-based
          internets, RFC 1155 [3], which describes how managed objects
          contained in the MIB are defined; Management Information Base
          for Network Management of TCP/IP-based internets, which
          describes the managed objects contained in the MIB, RFC 1156
          [4]; and, the Simple Network Management Protocol, RFC 1157
          [5], which defines the protocol used to manage these objects.

          Consistent with the IAB directive to produce simple, workable
          systems in the short-term, the list of managed objects defined
          in the Internet-standard MIB was derived by taking only those





          J. Cook (editor)                                      [Page 2]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          elements which are considered essential.  However, the SMI
          defined three extensibility mechanisms: one, the addition of
          new standard objects through the definitions of new versions
          of the MIB; two, the addition of widely-available but non-
          standard objects through the experimental subtree; and three,
          the addition of private objects through the enterprises
          subtree.  Such additional objects can not only be used for
          vendor-specific elements, but also for experimentation as
          required to further the knowledge of which other objects are
          essential.

          This memo defines extensions to the MIB using the second
          method.  It contains definitions of managed objects used for
          experimentation.  After experimentation, if sufficient
          consensus is reached in the Internet community, then a
          subsequent revision of this memo may be placed in the
          Internet-standard MIB.

































          J. Cook (editor)                                      [Page 3]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          4.  Objects

          Managed objects are accessed via a virtual information store,
          termed the Management Information Base or MIB.  Objects in the
          MIB are defined using the subset of Abstract Syntax Notation
          One (ASN.1) [7] defined in the SMI.  In particular, each
          object has a name, a syntax, and an encoding.  The name is an
          object identifier, an administratively assigned name, which
          specifies an object type.  The object type together with an
          object instance serves to uniquely identify a specific
          instantiation of the object.  For human convenience, we often
          use a textual string, termed the OBJECT DESCRIPTOR, to also
          refer to the object type.

          The syntax of an object type defines the abstract data
          structure corresponding to that object type.  The ASN.1
          language is used for this purpose.  However, the SMI [3]
          purposely restricts the ASN.1 constructs which may be used.
          These restrictions are explicitly made for simplicity.

          The encoding of an object type is simply how that object type
          is represented using the object type's syntax.  Implicitly
          tied to the notion of an object type's syntax and encoding is
          how the object type is represented when being transmitted on
          the network.

          The SMI specifies the use of the basic encoding rules of ASN.1
          [8], subject to the additional requirements imposed by the
          SNMP.


          4.1.  Format of Definitions

          Section 6 contains contains the specification of all object
          types contained in this MIB module.  The object types are
          defined using the conventions defined in the SMI, as amended
          by the extensions specified in [13,14].













          J. Cook (editor)                                      [Page 4]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          5.  Overview

          Instances of these object types represent attributes of an
          interface to an ethernet-like communications medium.  At
          present, ethernet-like media are identified by three values of
          the ifType object in the Internet-standard MIB:

               ethernet-csmacd(6)
               iso88023-csmacd(7)
               starLan(11)

          The definitions presented here are based on the IEEE 802.3
          Layer Management Specification [9], as originally interpreted
          by Frank Kastenholz of Interlan in [10].  Implementors of
          these MIB objects should note that the IEEE document
          explicitly describes (in the form of Pascal pseudocode) when,
          where, and how various MAC attributes are measured.  The IEEE
          document also describes the effects of MAC actions that may be
          invoked by manipulating instances of the MIB objects defined
          here.

          To the extent that some of the attributes defined in [9] are
          represented by previously defined objects in the Internet-
          standard MIB or in the generic interface extensions MIB [11],
          such attributes are not redundantly represented by objects
          defined in this memo. Among the attributes represented by
          objects defined in other memos are the number of octets
          transmitted or received on a particular interface, the number
          of frames transmitted or received on a particular interface,
          the promiscuous status of an interface, the MAC address of an
          interface, and multicast information associated with an
          interface.

          The relationship between an ethernet-like interface and an
          interface in the context of the Internet-standard MIB is one-
          to-one.  As such, the value of an ifIndex object instance can
          be directly used to identify corresponding instances of the
          objects defined herein.












          J. Cook (editor)                                      [Page 5]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          6.  Definitions


          RFCxxxx-MIB DEFINITIONS ::= BEGIN

          IMPORTS
                  experimental, Counter
                          FROM RFC1155-SMI
                  OBJECT-TYPE
                          FROM RFC-oooo
                  TRAP-TYPE
                          FROM RFC-tttt;

          --  This MIB module uses the extended OBJECT-TYPE macro as
          --  defined in [13], and the TRAP-TYPE macro as defined in [14]


          --  this is the MIB module for ethernet-like objects

          dot3    OBJECT IDENTIFIER ::= { experimental 3 }






























          J. Cook (editor)                                      [Page 6]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          -- the Generic Ethernet-like group

          -- Implementation of this group is mandatory for all systems
          -- that attach to an ethernet-like medium.

          dot3Table OBJECT-TYPE
              SYNTAX  SEQUENCE OF Dot3Entry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Operational attributes for a collection of
                      ethernet-like interfaces attached to a particular
                      system."
              ::= { dot3 1 }

          dot3Entry OBJECT-TYPE
              SYNTAX  Dot3Entry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Operational attributes of a particular interface
                      to an ethernet-like medium."
              INDEX   { dot3Index }
              ::= { dot3Table 1 }

          Dot3Entry ::=
              SEQUENCE {
                  dot3Index
                      INTEGER,
                  dot3InitializeMAC
                      INTEGER,
                  dot3MACSubLayerStatus
                      INTEGER,
                  dot3MulticastReceiveStatus
                      INTEGER,
                  dot3AlignmentErrors
                      Counter,
                  dot3FCSErrors
                      Counter
              }

          dot3Index OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory





          J. Cook (editor)                                      [Page 7]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


              DESCRIPTION
                      "An index value that uniquely identifies an
                      interface to an ethernet-like medium.  The
                      interface identified by a particular value of this
                      index is the same interface as identified by the
                      same value of ifIndex."
              ::= { dot3Entry 1 }

          dot3InitializeMAC OBJECT-TYPE
              SYNTAX  INTEGER { initialized(1), uninitialized(2) }
              ACCESS  read-writ
              STATUS  mandatory
              DESCRIPTION
                      "The initialization status of the MAC and PLS
                      (Physical Layer Signalling) subsystems for a
                      particular interface. The value initialized(1)
                      signifies that the subsystems for a particular
                      interface have been previously initialized; the
                      value uninitialized(2) signifies that they have
                      not been previously initialized.

                      Each alteration of an instance of this object to
                      either of the values initialized(1) or
                      uninitialized(2) is analogous to an invocation of
                      the initializeMAC action defined in [9] and has
                      the effect of (re-)initializing the MAC and PLS
                      subsystems for the associated interface. In
                      particular,

                           all management counters pertaining to the MAC
                           and PLS subsystems for said interface are
                           reset to zero;

                           The receive and transmit layer management
                           state variables (receiveEnabled and
                           transmitEnabled in [9]) are set to enable
                           reception and transmission of frames;

                           the promiscuous receive function is disabled;
                           and

                           multicast reception is disabled.  "
              ::= { dot3Entry 2 }

          dot3MACSubLayerStatus OBJECT-TYPE





          J. Cook (editor)                                      [Page 8]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


              SYNTAX  INTEGER { enabled(1), disabled(2) }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The operational status of the MAC sublayer for a
                      particular interface.  The value enabled(1)
                      signifies that the MAC sublayer for said interface
                      is operational for both transmitting and receiving
                      frames -- that is, that the value of both the
                      receive and transmit layer management state
                      variables (receiveEnabled and transmitEnabled in
                      [9]) for said interface are true.  The value
                      disabled(2) signifies that the MAC sublayer for
                      said interface is not operational for either
                      transmitting or receiving frames. In particular,
                      the value of an instance of this object is
                      disabled(2) whenever the value of the
                      corresponding instance of the dot3XTxEnabled
                      object is false(2).

                      Each alteration of an instance of this object to
                      the value enabled(1) is analogous to an invocation
                      of the enableMACSublayer action defined in [9] and
                      has the effect of starting normal transmit and
                      receive operations (from the ``idle'' state) on
                      the associated interface. In particular, such an
                      alteration has the effect of resetting the PLS for
                      said interface and of setting the receive and
                      transmit layer management state variables
                      (receiveEnabled and transmitEnabled in [9]) to be
                      true.

                      Each alteration of an instance of this object to
                      the value disabled(2) is analogous to an
                      invocation of the disableMACSublayer action
                      defined in [9] and has the effect of terminating
                      transmit and receive operations on the associated
                      interface. In particular, such an alteration has
                      the effect of setting the receive and transmit
                      layer management state variables (receiveEnabled
                      and transmitEnabled in [9]) to be false. Any
                      transmissions/receptions in progress are completed
                      before operation is terminated."
              ::= { dot3Entry 3 }






          J. Cook (editor)                                      [Page 9]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          dot3MulticastReceiveEnabled OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The multicast receive status for a particular
                      interface.  The value true(1) signifies that
                      reception of multicast frames by the MAC sublayer
                      is enabled on said interface. The value false(1)
                      signifies that reception of multicast frames by
                      the MAC sublayer is not enabled on said interface.

                      Each alteration of an instance of this object to
                      the value true(1) is analogous to an invocation of
                      the enableMulticastReceive action defined in [9]
                      and has the effect of enabling multicast frame
                      reception on the associated interface. Actual
                      reception of multicast frames is only possible on
                      an interface when the values for the associated
                      instances of the dot3MulticastReceiveEnabled and
                      dot3MACSubLayerStatus objects are true(1) and
                      enabled(1), respectively.

                      Each alteration of an instance of this object to
                      the value false(2) is analogous to an invocation
                      of the disableMulticastReceive action defined in
                      [9] and has the effect of inhibiting multicast
                      frame reception on the associated interface."
              ::= { dot3Entry 4 }

          dot3AlignmentErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of frames received on a particular
                      interface that are not an integral number of
                      octets in length and do not pass the FCS check.

                      The count represented by an instance of this
                      object is incremented when the alignmentError
                      status is returned by the MAC service to the LLC
                      (or other MAC user). Received frames for which
                      multiple error conditions obtain are, according to
                      the conventions of [9], counted exclusively





          J. Cook (editor)                                     [Page 10]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


                      according to the error status presented to the
                      LLC."
              ::= { dot3Entry 5 }

          dot3FCSErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of frames received on a particular
                      interface that are an integral number of octets in
                      length that do not pass the FCS check.

                      The count represented by an instance of this
                      object is incremented when the frameCheckError
                      status is returned by the MAC service to the LLC
                      (or other MAC user). Received frames for which
                      multiple error conditions obtain are, according to
                      the conventions of [9], counted exclusively
                      according to the error status presented to the
                      LLC."
              ::= { dot3Entry 6 }




























          J. Cook (editor)                                     [Page 11]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          -- the Ethernet-like Transmit group

          -- Implementation of this group is mandatory for all systems
          -- that transmit frames onto an ethernet-like medium.

          dot3TxTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF Dot3TxEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Transmit errors and statistics for a collection
                      of ethernet-like interfaces attached to a
                      particular system."
              ::= { dot3 2 }

          dot3TxEntry OBJECT-TYPE
              SYNTAX  Dot3TxEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Transmit errors and statistics for a particular
                      interface to an ethernet-like medium."
              INDEX   { dot3TxIndex }
              ::= { dot3TxTable 1 }

          Dot3TxEntry ::=
              SEQUENCE {
                  dot3TxIndex
                      INTEGER,
                  dot3TxSingleCollisionFrames
                      Counter,
                  dot3TxMultipleCollisionFrames
                      Counter,
                  dot3TxSQETestErrors
                      Counter
              }

          dot3TxIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "An index value that uniquely identifies an
                      interface to an ethernet-like medium.  The
                      interface identified by a particular value of this





          J. Cook (editor)                                     [Page 12]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


                      index is the same interface as identified by the
                      same value of ifIndex."
              ::= { dot3TxEntry 1 }

          dot3TxSingleCollisionFrames OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of successfully transmitted frames on a
                      particular interface for which transmission is
                      inhibited by exactly one collision.

                      A frame that is counted by an instance of this
                      object is also counted by the corresponding
                      instance of either the ifOutUcastPkts or
                      ifOutNUcastPkts object and is not counted by the
                      corresponding instance of the
                      dot3MultipleCollisionFrames object."
              ::= { dot3TxEntry 2 }

          dot3TxMultipleCollisionFrames OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of successfully transmitted frames on a
                      particular interface for which transmission is
                      inhibited by more than one collision.

                      A frame that is counted by an instance of this
                      object is also counted by the corresponding
                      instance of either the ifOutUcastPkts or
                      ifOutNUcastPkts object and is not counted by the
                      corresponding instance of the
                      dot3SingleCollisionFrames object."
              ::= { dot3TxEntry 3 }

          dot3TxSQETestErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandator
              DESCRIPTION
                      "A count of times that the SQE TEST ERROR message
                      is generated by the PLS sublayer for a particular





          J. Cook (editor)                                     [Page 13]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


                      interface. The SQE TEST ERROR message is defined
                      in section 7.2.2.2.4 of [12] and its generation is
                      described in section 7.2.4.6 of the same
                      document."
              ::= { dot3TxEntry 4 }













































          J. Cook (editor)                                     [Page 14]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          -- the Ethernet-like Extended Receive group

          -- Implementation of this group is optional; it is
          -- appropriate for all systems which the necessary metering
          -- is feasible.

          dot3XRxTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF Dot3XRxEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Receive errors and statistics for a collection of
                      ethernet-like interfaces attached to a particular
                      system."
              ::= { dot3 3 }

          dot3XRxEntry OBJECT-TYPE
              SYNTAX  Dot3XRxEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Receive errors and statistics for a particular
                      interface to an ethernet-like medium."
              INDEX   { dot3XRxIndex }
              ::= { dot3XRxTable 1 }

          Dot3XRxEntry ::=
              SEQUENCE {
                  dot3XRxIndex
                      INTEGER,
                  dot3XRxFrameTooLongs
                      Counter,
                  dot3XRxInRangeLengthErrors
                      Counter,
                  dot3XRxOutOfRangeLengthFields
                      Counter,
                  dot3XRxInternalMACReceiveErrors
                      Counter,
                  dot3XRxAutoPartitionStatus
                      INTEGER,
                  dot3XRxAutoPartitionLog
                      Counter,
                  dot3XRxLastSourceAddress
                      OCTET STRING,
                  dot3XRxSourceAddressLog





          J. Cook (editor)                                     [Page 15]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


                      Counter,
                  dot3XRxLastErrorAddress
                      OCTET STRING,
                  dot3XRxErrorAddressLog
                      Counter
              }

          dot3XRxIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "An index value that uniquely identifies an
                      interface to an ethernet-like medium.  The
                      interface identified by a particular value of this
                      index is the same interface as identified by the
                      same value of ifIndex."
              ::= { dot3XRxEntry 1 }

          dot3XRxFrameTooLongs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of frames received on a particular
                      interface that exceed the maximum permitted frame
                      size.

                      The count represented by an instance of this
                      object is incremented when the frameTooLong status
                      is returned by the MAC service to the LLC (or
                      other MAC user). Received frames for which
                      multiple error conditions obtain are, according to
                      the conventions of [9], counted exclusively
                      according to the error status presented to the
                      LLC."
              ::= { dot3XRxEntry 2 }

          dot3XRxInRangeLengthErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of frames received on a particular
                      interface with a length field value that falls





          J. Cook (editor)                                     [Page 16]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


                      between the minimum unpadded LLC data size and the
                      maximum allowed LLC data size inclusive and that
                      does not match the number of LLC data octets
                      received.

                      The count represented by an instance of this
                      object also includes frames for which the length
                      field value is less than the minimum unpadded LLC
                      data size."
              ::= { dot3XRxEntry 3 }

          dot3XRxOutOfRangeLengthFields OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of frames received on a particular
                      interface for which the length field value exceeds
                      the maximum allowed LLC data size.

                      The count represented by an instance of this
                      object is not incremented in implementations that
                      observe Ethernet encapsulation conventions (by
                      which the IEEE 802.3 length field is interpreted
                      as the Ethernet Type field)."
              ::= { dot3XRxEntry 4 }

          dot3XRxInternalMACReceiveErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of frames for which reception on a
                      particular interface fails due to an internal MAC
                      sublayer receive error. A frame counted by an
                      instance of this object is not counted by the
                      corresponding instance of either the
                      dot3XRxFrameTooLongs object, the
                      dot3XRxAlignmentErrors object, the
                      dot3XRxFCSErrors object, the
                      dot3XRxInRangeLengthErrors object, or the
                      dot3XRxOutOfRangeLengthFields object.

                      The precise meaning of the count represented by an
                      instance of this object is implementation-





          J. Cook (editor)                                     [Page 17]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


                      specific.  In particular, an instance of this
                      object may represent a count of receive errors on
                      a particular interface that are not otherwise
                      counted."
              ::= { dot3XRxEntry 5 }

          dot3XRxAutoPartitionStatus OBJECT-TYPE
              SYNTAX  INTEGER { partitioned(1), notPartitioned(2) }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The current auto-partition status for a
                      particular interface. An instance of this object
                      represents whether or not said interface is
                      currently detached from the medium as the result
                      of local, automatic detection of excessive or
                      ill-formed transmissions initiated by said
                      interface.

                      For an implementation that provides for
                      discretionary reattachment of an auto-partioned
                      interface, each alteration of an instance of this
                      object to the value notPartitioned(2) has the
                      effect of reattaching the associated interface to
                      the medium.

                      For an implementation that does not provide for
                      discretionary reattachment, alterations to an
                      instance of this object are rejected according to
                      the mechanisms of the management protocol in use.
                      In particular, alterations to the value
                      partitioned(1) are always so rejected. For
                      example, such an implementation may represent its
                      rejection of such alterations by the genErr
                      error-status value of the SNMP.

                      Note: this variable might be relocated to a group
                      associated with physical media attibutes.  Until
                      such a group is defined, it is defined here for
                      experimentation."
              ::= { dot3XRxEntry 6 }

          dot3XRxAutoPartitionLog OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only





          J. Cook (editor)                                     [Page 18]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


              STATUS  mandatory
              DESCRIPTION
                      "The number of times that the value of the
                      corresponding instance of the
                      dot3XRxAutoPartitionStatus object has changed from
                      the value notPartitioned(2) to the value
                      partitioned(1).

                      Note: this variable might be relocated to a group
                      associated with physical media attibutes.  Until
                      such a group is defined, it is defined here for
                      experimentation."
              ::= { dot3XRxEntry 7 }

          dot3XRxLastSourceAddress OBJECT-TYPE
              SYNTAX  OCTET STRING
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of the source address field of the last
                      MAC frame successfully received on a particular
                      interface. This value is either 16 or 48 bits in
                      length.

                      Note: this variable might be relocated to a group
                      associated with physical media attibutes.  Until
                      such a group is defined, it is defined here for
                      experimentation."
              ::= { dot3XRxEntry 8 }

          dot3XRxSourceAddressLog OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times that the value of the
                      corresponding instance of the
                      dot3XRxLastSourceAddress object has changed from
                      one value to another, distinct value.

                      A value of one indicates that there is only one
                      active station on the interface specified.

                      Note: this variable might be relocated to a group
                      associated with physical media attibutes.  Until





          J. Cook (editor)                                     [Page 19]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


                      such a group is defined, it is defined here for
                      experimentation."
              ::= { dot3XRxEntry 9 }

          dot3XRxLastErrorAddress OBJECT-TYPE
              SYNTAX  OCTET STRING
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of the source address field of the last
                      MAC frame received with errors on a particular
                      interface. This value is either 16 or 48 bits in
                      length.

                      Note: this variable might be relocated to a group
                      associated with physical media attibutes.  Until
                      such a group is defined, it is defined here for
                      experimentation."
              ::= { dot3XRxEntry 10 }

          dot3XRxErrorAddressLog OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times that the value of the
                      corresponding instance of the
                      dot3XRxLastErrorAddress object has changed from
                      one value to another, distinct value.

                      Note: this variable might be relocated to a group
                      associated with physical media attibutes.  Until
                      such a group is defined, it is defined here for
                      experimentation."
              ::= { dot3XRxEntry 11 }















          J. Cook (editor)                                     [Page 20]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          -- the Ethernet-like Extended Transmit group

          -- Implementation of this group is optional; it is
          -- appropriate for all systems which the necessary metering
          -- is feasible.

          dot3XTxTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF Dot3XTxEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Transmit errors and statistics for a collection
                      of ethernet-like interfaces attached to a
                      particular system."
              ::= { dot3 4 }

          dot3XTxEntry OBJECT-TYPE
              SYNTAX  Dot3XTxEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Receive errors and statistics for a particular
                      interface to an ethernet-like medium."
              INDEX   { dot3XTxIndex }
              ::= { dot3XTxTable 1 }

          Dot3XTxEntry ::=
              SEQUENCE {
                  dot3XTxIndex
                      INTEGER,
                  dot3XTxEnabled
                      INTEGER,
                  dot3XTxDeferredTransmissions
                      Counter,
                  dot3XTxLateCollisions
                      Counter,
                  dot3XTxExcessiveCollisions
                      Counter,
                  dot3XTxInternalMACErrors
                      Counter,
                  dot3XTxCarrierSenseErrors
                      Counter,
                  dot3XTxExcessiveDeferrals
                      Counter,
                  dot3XTxTDR





          J. Cook (editor)                                     [Page 21]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


                      Gauge
              }

          dot3XTxIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "An index value that uniquely identifies an
                      interface to an ethernet-like medium.  The
                      interface identified by a particular value of this
                      index is the same interface as identified by the
                      same value of ifIndex."
              ::= { dot3XTxEntry 1 }

          dot3XTxEnabled OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2)  }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The transmit layer management state variable
                      (transmitEnabled as defined in [9]) for a
                      particular interface.  The value true(1) signifies
                      that the MAC frame transmission is enabled on said
                      interface. The value false(1) signifies that the
                      MAC frame transmission is inhibited on said
                      interface. In particular, the value of an instance
                      of this object is false(2) whenever the value of
                      the corresponding instance of the
                      dot3MACSubLayerStatus object is disabled(2).

                      Each alteration of an instance of this object to
                      the value true(1) is analogous to an invocation of
                      the enableTransmit action defined in [9] and has
                      the effect of enabling MAC sublayer frame
                      transmission on the associated interface. In
                      particular, such an alteration has the effect of
                      setting the transmit layer management state
                      variable (transmitEnabled in [9]) for said
                      interface to be true.

                      Each alteration of an instance of this object to
                      the value false(2) is analogous to an invocation
                      of the disableTransmit action defined in [9] and
                      has the effect of inhibiting MAC sublayer frame





          J. Cook (editor)                                     [Page 22]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


                      transmission on the associated interface. In
                      particular, such an alteration has the effect of
                      setting the transmit layer management state
                      variable (transmitEnabled in [9]) for said
                      interface to be false. Any transmissions in
                      progress are completed before transmission is
                      inhibited."
              ::= { dot3XTxEntry 2 }

          dot3XTxDeferredTransmissions OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of frames for which the first
                      transmission attempt on a particular interface is
                      delayed because the medium is busy.

                      The count represented by an instance of this
                      object does not include frames involved in
                      collisions."
              ::= { dot3XTxEntry 3 }

          dot3XTxLateCollisions OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times that a collision is detected
                      on a particular interface later than 512 bit-times
                      into the transmission of a packet.

                      Five hundred and twelve bit-times corresponds to
                      51.2 microseconds on a 10 Mbit/s system. A (late)
                      collision included in a count represented by an
                      instance of this object is also considered as a
                      (generic) collision for purposes of other
                      collision-related statistics."
              ::= { dot3XTxEntry 4 }

          dot3XTxExcessiveCollisions OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION





          J. Cook (editor)                                     [Page 23]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


                      "A count of frames for which transmission on a
                      particular interface fails due to excessive
                      collisions."
              ::= { dot3XTxEntry 5 }

          dot3XTxInternalMACTransmitErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of frames for which transmission on a
                      particular interface fails due to an internal MAC
                      sublayer transmit error. A frame counted by an
                      instance of this object is not counted by the
                      corresponding instance of either the
                      dot3XTxLateCollisions object, the
                      dot3XTxExcessiveCollisions object, the
                      dot3XTxCarrierSenseErrors object, or the
                      dot3XTxExcessiveDeferrals object.

                      The precise meaning of the count represented by an
                      instance of this object is implementation-
                      specific.  In particular, an instance of this
                      object may represent a count of transmission
                      errors on a particular interface that are not
                      otherwise counted."
              ::= { dot3XTxEntry 6 }

          dot3XTxCarrierSenseErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times that the carrier sense
                      condition was lost or never asserted when
                      attempting to transmit a frame on a particular
                      interface.

                      The count represented by an instance of this
                      object is incremented at most once per
                      transmission attempt, even if the carrier sense
                      condition fluctuates during a transmission
                      attempt."
              ::= { dot3XTxEntry 7 }






          J. Cook (editor)                                     [Page 24]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          dot3XTxExcessiveDeferrals OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of frames for which transmission on a
                      particular interface is deferred for an excessive
                      period of time."
              ::= { dot3XTxEntry 8 }

          dot3XTxTDR OBJECT-TYPE
              SYNTAX  Gauge
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The result of the most recent time-domain
                      reflectometry (TDR) measurement for a particular
                      interface. An instance of this object represents
                      the length of time between the most recent TDR
                      test transmission and the detection of a collision
                      for said transmission at said interface.  This
                      measurement is represented in units of 100
                      nanoseconds, regardless of the measurement
                      granularity realized by the implementation. The
                      value of an instance of this object is zero
                      whenever results from a previous TDR measurement
                      may be unavailable.

                      The value of an instance of this object may be
                      continually adjusted by an implementation that
                      provides for automatic, periodic TDR measurements.

                      For an implementation that provides for
                      discretionary initiation of TDR measurements, each
                      alteration of an instance of this object to any
                      syntactically correct value (even if identical to
                      its current value) has the effect of initiating a
                      TDR test transmission on the associated interface.

                      For an implementation that does not provide for
                      discretionary TDR measurements, alterations to an
                      instance of this object are rejected according to
                      the mechanisms of the management protocol in use.
                      For example, such an implementation may represent
                      its rejection of such alterations by the genErr





          J. Cook (editor)                                     [Page 25]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


                      error-status value of the SNMP.

                      Additional control in the solicitation of a TDR
                      measurement may be provided in the future through
                      use of objects defined in the ifExtensions MIB."
              ::= { dot3XTxEntry 9 }












































          J. Cook (editor)                                     [Page 26]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          -- the Ethernet-like Collision Statistics group

          -- Implementation of this group is optional; it is
          -- appropriate for all systems which the necessary metering
          -- is feasible.

          dot3CollTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF Dot3CollEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A collection of collision histograms for a
                      particular set of interfaces."
              ::= { dot3 5 }

          dot3CollEntry OBJECT-TYPE
              SYNTAX  Dot3CollEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A cell in the histogram of per-frame collisions
                      for a particular interface.  An instance of this
                      object represents the frequency of individual MAC
                      frames for which the transmission (successful or
                      otherwise) on a particular interface is
                      accompanied by a particular number of media
                      collisions."
              INDEX   { dot3CollIndex, dot3CollCount }
              ::= { dot3CollTable 1 }

          Dot3CollEntry ::=
              SEQUENCE {
                  dot3CollIndex
                      INTEGER,
                  dot3CollCount
                      INTEGER (1..16),
                  dot3CollFrequency
                      Counter
              }

          dot3CollIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION





          J. Cook (editor)                                     [Page 27]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


                      "The index value that uniquely identifies the
                      interface to which a particular collision
                      histogram cell pertains.  The interface identified
                      by a particular value of this index is the same
                      interface as identified by the same value of
                      ifIndex."
              ::= { dot3CollEntry 1 }

          dot3CollCount OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of per-frame media collisions for
                      which a particular collision histogram cell
                      represents the frequency on a particular
                      interface."
              ::= { dot3CollEntry 2 }

          dot3CollFrequency OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of individual MAC frames for which the
                      transmission (successful or otherwise) on a
                      particular interface is accompanied by a
                      particular number of media collisions."
              ::= { dot3CollEntry 3 }

          END



















          J. Cook (editor)                                     [Page 28]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          7.  Acknowledgements

          This document was produced by the Transmission MIB Working
          Group.


          This document is based almost entirely on a document written
          by Frank Kastenholz of Interlan entitled IEEE 802.3 Layer
          Management Draft M compatible MIB for TCP/IP Networks [10].
          This document has been modestly reworked, initially by the
          SNMP Working Group, and then by the Transmission Working
          Group, to reflect the current conventions for defining objects
          for MIB interfaces.  James Davin, of the MIT Laboratory for
          Computer Science, contributed to later drafts of this memo.




































          J. Cook (editor)                                     [Page 29]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          8.  References

          [1]  V. Cerf, IAB Recommendations for the Development of
               Internet Network Management Standards.  Internet Working
               Group Request for Comments 1052.  Network Information
               Center, SRI International, Menlo Park, California,
               (April, 1988).

          [2]  V. Cerf, Report of the Second Ad Hoc Network Management
               Review Group, Internet Working Group Request for Comments
               1109.  Network Information Center, SRI International,
               Menlo Park, California, (August, 1989).

          [3]  M.T. Rose (editor), Management Information Base for
               Network Management of TCP/IP-based internets, Internet
               Working Group Request for Comments 1158.  Network
               Information Center, SRI International, Menlo Park,
               California, (May, 1990).

          [4]  M.T. Rose and K. McCloghrie, Structure and Identification
               of Management Information for TCP/IP-based internets,
               Internet Working Group Request for Comments 1155.
               Network Information Center, SRI International, Menlo
               Park, California, (May, 1990).

          [5]  K. McCloghrie and M.T. Rose, Management Information Base
               for Network Management of TCP/IP-based internets,
               Internet Working Group Request for Comments 1156.
               Network Information Center, SRI International, Menlo
               Park, California, (May, 1990).

          [6]  J.D. Case, M.S. Fedor, M.L. Schoffstall, and J.R. Davin,
               Simple Network Management Protocol, Internet Working
               Group Request for Comments 1157.  Network Information
               Center, SRI International, Menlo Park, California, (May,
               1990).

          [7]  Information processing systems - Open Systems
               Interconnection - Specification of Abstract Syntax
               Notation One (ASN.1), International Organization for
               Standardization.  International Standard 8824, (December,
               1987).

          [8]  Information processing systems - Open Systems
               Interconnection - Specification of Basic Encoding Rules





          J. Cook (editor)                                     [Page 30]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


               for Abstract Notation One (ASN.1), International
               Organization for Standardization.  International Standard
               8825, (December, 1987).

          [9]  IEEE, IEEE 802.3 Layer Management, (November, 1988).

          [10] F. Kastenholz, IEEE 802.3 Layer Management Draft M
               compatible MIB for TCP/IP Networks, electronic mail
               message to mib-wg@nnsc.nsf.net, (June 9, 1989).

          [11] K. McCloghrie, Extensions to the Generic-Interface MIB,
               RFC draft.  SNMP Working Group (in preparation).

          [12] IEEE. Carrier Sense Multiple Access with Collision
               Detection (CSMA/CD) Access Method and Physical Layer
               Specifications. ANSI/IEEE Std 802.3-1985.

          [13] M.T. Rose, K. McCloghrie (editors), Towards Concise MIB
               Definitions, Internet Draft, Internet Engineering Task
               Force, (September, 1990).

          [14] M.T. Rose (editor), A Convention for Defining Traps for
               use with the SNMP, Internet Draft, Internet Engineering
               Task Force, (September, 1990).


























          J. Cook (editor)                                     [Page 31]





          Internet Draft      ETHERNET-LIKE OBJECTS       September 1990


          Table of Contents


          1 Status of this Memo ...................................    1
          2 Abstract ..............................................    1
          3 Historical Perspective ................................    2
          4 Objects ...............................................    4
          4.1 Format of Definitions ...............................    4
          5 Overview ..............................................    5
          6 Definitions ...........................................    6
          6.1 The Generic Ethernet-like Group .....................    7
          6.2 The Ethernet-like Transmit Group ....................   12
          6.3 The Ethernet-like Extended Receive Group ............   15
          6.4 The Ethernet-Like Extended Transmit Group ...........   21
          6.5 The Ethernet-like Collision Statistics Group ........   27
          7 Acknowledgements ......................................   29
          8 References ............................................   30

































          J. Cook (editor)                                     [Page 32]


------- End of Forwarded Message

