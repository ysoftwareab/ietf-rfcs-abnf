


INTERNET-DRAFT                                25 March 2002



                                                  D. Massey
                                                    USC/ISI
                                                    S. Rose
                                                       NIST



        Limiting the Scope of the KEY Resource Record

        draft-ietf-dnsext-restrict-key-for-dnssec-02.txt


                  Status of this Document


This document is an Internet-Draft and is in full conformance with
all provisions of Section 10 of RFC2026.  Distribution of this document
is unlimited.  Comments regarding this document should be sent to
the author.

Internet-Drafts are working documents of the Internet Engineering
Task Force (IETF), its areas, and its working groups.  Note that
other groups may also distribute working documents as Internet-Drafts.
Internet-Drafts are draft documents valid for a maximum of six months
and may be updated, replaced, or obsoleted by other documents at
any time.  It is inappropriate to use Internet-Drafts as reference
material or to cite them other than as "work in progress."

The list of current Internet-Drafts can be accessed at
http://www.ietf.org/ietf/1id-abstracts.txt

The list of Internet-Draft Shadow Directories can be accessed at
http://www.ietf.org/shadow.html.


                         Abstract


    This document limits the Domain Name System KEY resource
    record to only keys used by the Domain Name System Security
    Extensions (DNSSEC). The original KEY resource record used
    sub-typing to store both DNSSEC keys and arbitrary application
    keys.  Storing both DNSSEC and application keys in one record
    was a mistake.  This document removes application keys from
    the KEY record by redefining the Protocol Octet field in
    the KEY Resource Record Data.  As a result of removing application
    keys, all but one of the flags in the KEY record become
    unnecessary and are removed.  Three existing application
    key sub-types are changed to reserved, but the format of
    the KEY record is not changed.  This document updates RFC
    2535.



Massey/Rose                                          Page 1



INTERNET-DRAFT                                25 March 2002



1 Introduction



This document limits the scope the KEY resource record.  The KEY
resource record was defined in [1] and used resource record sub-typing
to hold arbitrary public keys such as Email, IPSEC, DNSSEC, and TLS
keys.  This document eliminates the existing Email, IPSEC, and TLS
sub-types and prohibits the introduction of new sub-types.  DNSSEC
will be the only allowable sub-type for the KEY record (hence sub-typing
is essentially eliminated) and all but one of the KEY record flags
are also eliminated.

Section 2 presents the motivation for restricting the KEY record
and Section 3 defines the revised KEY record.  Section 4 and 5 summarize
the changes from RFC 2535 and discuss backwards compatibility.  It
is important to note that this document restricts the use of the
KEY record and simplifies the flags, but does not change the definition
or use of DNSSEC keys.



2 Motivation for Restricting the KEY Record



The KEY record RDATA [1] consists of Flags, a Protocol Octet, an
Algorithm type, and a Public Key.  The Protocol Octet identifies
the KEY record sub-type.  DNSSEC public keys are stored in the KEY
record using a Protocol Octet value of 3.  Email, IPSEC, and TLS
keys were also stored in the KEY record and used Protocol Octet values
of 1,2, and 4 (respectively).  Protocol Octet values 5-254 were available
for assignment by IANA and values were requested (but not assigned)
for applications such as SSH.

Any use of sub-typing has inherent limitations.  A resolver can not
specify the desired sub-type in a DNS query and most DNS operations
apply only to resource records sets.  For a example, a resolver can
not directly request KEY records with a particular sub-type.  Instead,
the resolver has to request all KEY records associated with a DNS
name and then search the set for the desired sub-type.  DNSSEC signatures
also apply to the set of all KEY resource records associated with
the DNS name, regardless of sub-type.

In the case of the KEY record, the inherent sub-type limitations
are exacerbated since the sub-type is used to distinguish between
DNSSEC keys and application keys.  DNSSEC keys and application keys
differ in virtually every respect and Section 2.1 discusses these
differences in more detail.  Combining these very different types
of keys into a single sub-typed resource record adds unnecessary
complexity and increases the potential for implementation and deployment



Massey/Rose                                          Page 2



INTERNET-DRAFT                                25 March 2002



errors.  Limited experimental deployment has shown that application
keys stored in KEY records are problematic.

This document addresses these issues by removing all application keys
from the KEY resource record.  Note that the scope of this document
is strictly limited to the KEY record and this document does not
endorse or restrict the storage of application keys in other resource
records.



2.1 Differences Between DNSSEC and Application Keys


DNSSEC keys are an essential part of the DNSSEC protocol and are
used by both name servers and resolvers in order to perform DNS tasks.
A DNS zone key, used to sign and authenticate RR sets, is the most
common example of a DNSSEC key.  SIG(0) [3] and TKEY [2] also use
DNSSEC keys.

Application keys such as Email keys, IPSEC keys, and TLS keys are
simply another type data.  These keys have no special meaning to
a name server or resolver.

The following table summarizes some of the differences between DNSSEC
keys and Application keys:

 1. They serve different purposes.

 2. They are managed by different administrators.

 3. They are authenticated according to different rules.

 4. Nameservers use different rules when including them in responses.

 5. Resolvers process them in different ways.

 6. Faults/key compromises have different consequences.


1.  The purpose of a DNSSEC key is to sign resource records associated
with a DNS zone (or generate DNS transaction signatures in the case
of SIG(0)/TKEY). But the purpose of an application key is specific
to the application.  Application keys, such as PGP/email, IPSEC, TLS,
and SSH keys, are not a mandatory part of any zone and the purpose
and proper use of application keys is outside the scope of DNS.

2.  DNSSEC keys are managed by DNS administrators, but application
keys are managed by application administrators.  The DNS zone administrator
determines the key lifetime, handles any suspected key compromises,
and manages any DNSSEC key changes.  Likewise, the application administrator



Massey/Rose                                          Page 3



INTERNET-DRAFT                                25 March 2002



is responsible for the same functions for the application keys related
to the application.  For example, a user typically manages her own
PGP key and a server manages its own TLS key.  Application key management
tasks are outside the scope of DNS administration.

3.  DNSSEC zone keys are used to authenticate application keys, but
application keys MUST NOT be used to authenticate DNS zone keys.
A DNS zone key is either configured as trusted key or authenticated
by constructing a chain of trust in the DNS hierarchy.  To participate
in the chain of trust, a DNS zone needs to exchange zone key information
with its parent zone [1].  Application keys are not configured as
trusted keys in the DNS and are never part of any DNS chain of trust.
Application key data SHOULD not be exchanged with the parent zone.
A resolver considers an application key authenticated if it has a
valid signature from the local DNS zone keys, but applications could
impose additional requirements before the application key is accepted
as authentic.

4.  It MAY be useful for nameservers to include DNS zone keys in
the additional section of a response, but application keys are typically
not useful unless they have been specifically requested.  For example,
it could be useful to include the isi.edu zone key along with a response
that contain the www.isi.edu A record and SIG record.  A secure resolver
will need the isi.edu zone key in order to check the SIG and authenticate
the www.isi.edu A record.  It is typical not useful to include the
IPSEC, email, and TLS keys along with the A record.  Note that by
placing application keys in the KEY record, a resolver will need
the IPSEC, email, TLS, and other key associated with isi.edu if the
resolver intends to authenticate the isi.edu zone key (since signatures
only apply to the entire KEY set).

5.  DNS zone keys require special handling by resolvers, but application
keys are treated the same as any other type of DNS data.  The DNSSEC
keys are of no value to end applications, unless the applications
plan to do their own DNS authentication.  Secure resolvers MUST NOT
use application keys as part of the authentication process.  Application
keys have no unique value to resolvers and are only useful to the
application requesting the key.  Note that if sub-types are used
to identify the application key, then either the interface to the
resolver needs to specify the sub-type or the application needs to
be able to accept all KEY records and pick out the desired the sub-type.

6.  A fault or compromise of a DNS zone key can lead to invalid
or forged DNS data, but a fault or compromise of an application key
SHOULD have no impact on other DNS data.  Incorrectly adding or changing
a DNS zone key can invalidate all of the DNS data in zone and in
all of its subzones.  By using a compromised key, an attacker can



Massey/Rose                                          Page 4



INTERNET-DRAFT                                25 March 2002



forge data from the effected zone and any for any of its sub-zones.
A fault or compromise of an application key has implications for
that application, but it SHOULD not have an impact on the DNS. Note
that application key faults and key compromises can have an impact
on the entire DNS if the application key and DNS zone keys are both
stored in the KEY record.

In summary, DNSSEC keys and application keys differ in most every
respect.  DNSSEC keys are an essential part of the DNS infrastructure
and require special handling by DNS administrators and DNS resolvers.
Application keys are simply another type of data and have no special
meaning to DNS administrators or resolvers.  These two different types
of data do not belong in the same resource record.



3 Definition of the KEY Resource Record



The KEY record uses type 25 and is used as resource record for storing
DNSSEC keys.  The RDATA for a KEY RR consists of flags, a protocol
octet, the algorithm number octet, and the public key itself.  The
format is as follows:

                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|              flags            |   protocol    |   algorithm   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               /
/                        public key                             /
/                                                               /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


In the flags field, all bits except bit 7 are reserved and SHOULD
be zero.  If Bit 7 (Zone bit) is set to 1, then the KEY is a DNS
Zone key.  If Bit 7 is set to 0, the KEY is not a zone key.  SIG(0)/TKEY
are examples of DNSSEC keys that are not zone keys.

The protocol field MUST be set to 3.

The algorithm and public key fields are not changed.



4 Changes from RFC 2535 KEY Record



The KEY RDATA format is not changed.



Massey/Rose                                          Page 5



INTERNET-DRAFT                                25 March 2002



All flags except for the zone key flag are eliminated:

 o  The A/C bits (bits 0 and 1) are eliminated.  They SHOULD be
    set to 0 by the sender and MUST be ignored by the receiver.

 o  The extended flags bit (bit 3) is eliminated.  It SHOULD be
    set to 0 by the sender and MUST be ignored by the receiver.

 o  The host/user bit (bit 6) is eliminated.  It SHOULD be set to
    0 by the sender and MUST be ignored by the receiver.

 o  The zone bit (bit 7) remains unchanged.

 o  The signatory field (bits 12-15) are eliminated by [4].  They
    SHOULD be set to 0 by the sender and MUST be ignored by the
    receiver.

 o  Bits 2,4,5,8,9,10,11 remain unchanged.  They are reserved, SHOULD
    be set to zero by the sender, and MUST be ignored by the receiver.


Assignment of any future KEY record Flag values requires a standards
action.

All Protocol Octet values except DNSSEC (3) are eliminated:

 o  Value 1 (Email) is renamed to reserved.

 o  Value 2 (IPSEC) is renamed to reserved.

 o  Value 3 (DNSSEC) is unchanged.

 o  Value 4 (TLS) is renamed to reserved.

 o  Value 5-254 remains unchanged (reserved).

 o  Value 255 (ANY) is renamed to reserved.


Name servers and resolvers SHOULD reject any KEY with a Protocol
other than 3.  Assignment of any future KEY record Protocol Octet
values requires a standards action.

The algorithm and public key fields are not changed.



Massey/Rose                                          Page 6



INTERNET-DRAFT                                25 March 2002



5 Backward Compatibility



DNSSEC zone key records are not change and remain backwards compatible.
A properly formatted RFC 2535 zone KEY would have all flag bits,
other than the Zone Bit (Bit 7), set to 0 and would have the Protocol
Octet set to 3.  This remains true under the restricted KEY.

DNSSEC non-zone key records (SIG(0)/TKEY keys) are backwards compatible,
but the distinction between host and user keys (flag bit 6) is lost.

No backwards compatibility is provided for application keys.  Any
Email, IPSEC, or TLS keys are now deprecated and SHOULD be rejected
by name servers and resolvers.  Storing application keys in the KEY
record created problems such as keys at the apex and large RR sets
and some change in the definition and/or usage of the KEY record
would have been required even if the approach described here were
not adopted.

Overall, existing nameservers and resolvers will continue to correctly
process KEY records with a sub-type of DNSSEC keys.



6 Storing Application Keys in the DNS



The scope of this document is strictly limited to the KEY record.
This document prohibits storing application keys in the KEY record,
but it does not endorse or restrict the storing application keys
in other record types.  Other documents can describe how DNS handles
application keys.



7 IANA Consideration



RFC 2535 created an IANA registry for DNS KEY Resource Record Protocol
Octet values.  Values to 1,2,3, 4, and 255 were assigned by RFC 2535
and values 5-254 were made available for assignment by IANA. This
document makes two sets of changes to this registry.

First, this document re-assigns DNS KEY Resource Record Protocol Octet
values 1, 2, 4, and 255 to ``reserved''.  DNS Key Resource Record
Protocol Octet Value 3 remains unchanged as ``DNSSEC''.

Second, new values are no longer available for assignment by IANA
and this document closes the IANA registry for DNS KEY Resource Record
Protocol Octet Values.  Assignment of any future KEY Resource Record
Protocol Octet values requires a standards action.


Massey/Rose                                          Page 7



INTERNET-DRAFT                                25 March 2002



8 Security Consideration



This document eliminates potential security problems that could arise
due to the coupling of DNS zone keys and application keys.  Prior
to the change described in this document, a correctly authenticated
KEY set could include both application keys and DNSSEC keys.  If
one of the application keys is compromised, it could be used as a
false zone key to create false DNS signatures (SIG records).  Resolvers
that do not carefully check the KEY sub-type could believe these
false signatures and incorrectly authenticate DNS data.  With this
change, application keys cannot appear in an authenticated KEY set
and this vulnerability is eliminated.

The format and correct usage of DNSSEC keys is not changed by this
document and no new security considerations are introduced.



9 Intellectual Property



The IETF takes no position regarding the validity or scope of any
intellectual property or other rights that might be claimed to pertain
to the implementation or use of the technology described in this
document or the extent to which any license under such rights might
or might not be available; neither does it represent that it has
made any effort to identify any such rights.  Information on the
IETF's procedures with respect to rights in standards-track and standards-
related documentation can be found in BCP-11.

Copies of claims of rights made available for publication and any
assurances of licenses to be made available, or the result of an
attempt made to obtain a general license or permission for the use
of such proprietary rights by implementors or users of this specification
can be obtained from the IETF Secretariat.

The IETF invites any interested party to bring to its attention any
copyrights, patents or patent applications, or other proprietary rights
which may cover technology that may be required to practice this
standard.  Please address the information to the IETF Executive Director.



10 References (Normative)



[1] Eastlake, D., "Domain Name System Security Extensions", RFC 2535,
March 1999.



Massey/Rose                                          Page 8



INTERNET-DRAFT                                25 March 2002



[2] Eastlake, D., "Secret Key Establishment for DNS (TKEY RR)", RFC
2930, September 2000.

[3] Eastlake, D., "DNS Request and Transaction Signatures ( SIG(0)s)",
RFC 2931, September 2000.

[4] Wellington, B., "Secure Domain Name System (DNS) Dynamic Update",
RFC 3007, November 2000.



11 Author Information


Daniel Massey <masseyd@isi.edu>
USC Information Sciences Institute
3811 North Fairfax Drive, Suite 200
Arlington, VA 22203


Scott Rose <scott.rose@nist.gov>
National Institute for Standards and Technology
Gaithersburg, MD



Full Copyright Statement



Copyright (C) The Internet Society (2001).  All Rights Reserved.

This document and translations of it may be copied and furnished
to others, and derivative works that comment on or otherwise explain
it or assist in its implementation may be prepared, copied, published
and distributed, in whole or in part, without restriction of any
kind, provided that the above copy- right notice and this paragraph
are included on all such copies and derivative works.  However, this
document itself may not be modified in any way, such as by removing
the copyright notice or references to the Internet Society or other
Internet organizations, except as needed for the purpose of developing
Internet standards in which case the procedures for copyrights defined
in the Internet Standards process must be followed, or as required
to translate it into languages other than English.

The limited permissions granted above are perpetual and will not
be revoked by the Internet Society or its successors or assigns.

This document and the information contained herein is provided on
an "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN



Massey/Rose                                          Page 9



INTERNET-DRAFT                                25 March 2002



WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY
OR FITNESS FOR A PARTICULAR PURPOSE."



Massey/Rose                                         Page 10
