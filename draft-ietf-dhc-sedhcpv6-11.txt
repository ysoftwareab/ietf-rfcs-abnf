



DHC Working Group                                               S. Jiang
Internet-Draft                              Huawei Technologies Co., Ltd
Intended status: Standards Track                                   L. Li
Expires: September 9, 2016                                        Y. Cui
                                                     Tsinghua University
                                                               T. Jinmei
                                                           Infoblox Inc.
                                                                T. Lemon
                                                           Nominum, Inc.
                                                                D. Zhang
                                                           March 8, 2016


                             Secure DHCPv6
                       draft-ietf-dhc-sedhcpv6-11

Abstract

   The Dynamic Host Configuration Protocol for IPv6 (DHCPv6) enables
   DHCPv6 servers to pass configuration parameters.  It offers
   configuration flexibility.  If not secured, DHCPv6 is vulnerable to
   various attacks.  This document analyzes the security issues of
   DHCPv6 and specifies the secure DHCPv6 mechanism for authentication
   and encryption of messages between a DHCPv6 client and a DHCPv6
   server.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 9, 2016.

Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.




Jiang, et al.           Expires September 9, 2016               [Page 1]

Internet-Draft                  SeDHCPv6                      March 2016


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Requirements Language and Terminology . . . . . . . . . . . .   3
   3.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   3
   4.  Security Issues of DHCPv6 . . . . . . . . . . . . . . . . . .   4
   5.  Secure DHCPv6 Overview  . . . . . . . . . . . . . . . . . . .   5
     5.1.  Solution Overview . . . . . . . . . . . . . . . . . . . .   5
     5.2.  New Components  . . . . . . . . . . . . . . . . . . . . .   6
     5.3.  Support for Algorithm Agility . . . . . . . . . . . . . .   7
     5.4.  Applicability . . . . . . . . . . . . . . . . . . . . . .   7
   6.  DHCPv6 Client Behavior  . . . . . . . . . . . . . . . . . . .   8
   7.  DHCPv6 Server Behavior  . . . . . . . . . . . . . . . . . . .  11
   8.  Relay Agent Behavior  . . . . . . . . . . . . . . . . . . . .  12
   9.  Processing Rules  . . . . . . . . . . . . . . . . . . . . . .  12
     9.1.  Timestamp Check . . . . . . . . . . . . . . . . . . . . .  12
   10. Extensions for Secure DHCPv6  . . . . . . . . . . . . . . . .  14
     10.1.  New DHCPv6 Options . . . . . . . . . . . . . . . . . . .  14
       10.1.1.  Certificate Option . . . . . . . . . . . . . . . . .  14
       10.1.2.  Timestamp Option . . . . . . . . . . . . . . . . . .  15
       10.1.3.  Encrypted-message Option . . . . . . . . . . . . . .  16
     10.2.  New DHCPv6 Messages  . . . . . . . . . . . . . . . . . .  17
     10.3.  Status Codes . . . . . . . . . . . . . . . . . . . . . .  17
   11. Security Considerations . . . . . . . . . . . . . . . . . . .  18
   12. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  18
   13. Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  19
   14. Change log [RFC Editor: Please remove]  . . . . . . . . . . .  20
   15. Open Issues [RFC Editor: Please remove] . . . . . . . . . . .  21
   16. References  . . . . . . . . . . . . . . . . . . . . . . . . .  22
     16.1.  Normative References . . . . . . . . . . . . . . . . . .  22
     16.2.  Informative References . . . . . . . . . . . . . . . . .  23
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  23

1.  Introduction

   The Dynamic Host Configuration Protocol for IPv6 (DHCPv6, [RFC3315])
   enables DHCPv6 servers to pass configuration parameters and offers




Jiang, et al.           Expires September 9, 2016               [Page 2]

Internet-Draft                  SeDHCPv6                      March 2016


   configuration flexibility.  If not being secured, DHCPv6 is
   vulnerable to various attacks.

   This document analyzes the security issues of DHCPv6 and provides the
   following mechanisms for improving the security of DHCPv6 between the
   DHCPv6 client and the DHCPv6 server:

   o  the authentication of the DHCPv6 client and the DHCPv6 server to
      defend against active attacks, such as spoofing attack.

   o  the encryption between the DHCPv6 client and the DHCPv6 server in
      order to protect the DHCPv6 from passive attacks, such as
      pervasive monitoring.

   Note: this secure mechanism in this document does not protect outer
   options in Relay-Forward and Relay-Reply messages, either added by a
   relay agent toward a server or added by a server toward a relay
   agent.  Communication between a server and a relay agent, and
   communications between relay agents, may be secured through the use
   of IPsec, as described in section 21.1 in [RFC3315].

   The security mechanism specified in this document achieves DHCPv6
   authentication and encryption based on the sender's certificate.  We
   introduce two new DHCPv6 messages: Encrypted-Query message and
   Encrypted-Response message and three new DHCPv6 options: Certificate
   option, Timestamp option and Encrypted-message option for DHCPv6
   authentication and encryption.  The Certificate option is used for
   DHCPv6 authentication.  The Encryption-Query message, Encryption-
   Response message and Encrypted-message option are used for DHCPv6
   encryption.  The timestamp option is used to defend against replay
   attack.

2.  Requirements Language and Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119] when they
   appear in ALL CAPS.  When these words are not in ALL CAPS (such as
   "should" or "Should"), they have their usual English meanings, and
   are not to be interpreted as [RFC2119] key words.

3.  Terminology

   This section defines terminology specific to secure DHCPv6 used in
   this document.

   secure DHCPv6 client:  A node that initiates the DHCPv6 request on a
                   link to obtain the DHCPv6 configuration parameters



Jiang, et al.           Expires September 9, 2016               [Page 3]

Internet-Draft                  SeDHCPv6                      March 2016


                   from one or more DHCPv6 servers.  The configuration
                   process is authenticated and encrypted using the
                   defined mechanisms in this document.

   secure DHCPv6 server:  A node that responds to requests from clients
                   using the authentication and encryption mechanism
                   defined in this document.

4.  Security Issues of DHCPv6

   DHCPv6 is a client/server protocol that provides managed
   configuration of devices.  It enables a DHCPv6 server to
   automatically configure relevant network parameters on clients.  The
   basic DHCPv6 specification [RFC3315] defines security mechanisms, but
   they have some flaws and can be improved.

   The basic DHCPv6 specifications can optionally authenticate the
   origin of messages and validate the integrity of messages using an
   authentication option with a symmetric key pair.  [RFC3315] relies on
   pre-established secret keys.  For any kind of meaningful security,
   each DHCPv6 client would need to be configured with its own secret
   key; [RFC3315] provides no mechanism for doing this.

   For the out of band approach, operators can set up a key database for
   both servers and clients from which the client obtains a key before
   running DHCPv6.  Manual key distribution runs counter to the goal of
   minimizing the configuration data needed at each host.

   [RFC3315] provides an additional mechanism for preventing off-network
   timing attacks using the Reconfigure message: the Reconfigure Key
   authentication method.  However, this method protects only the
   Reconfigure message.  The key is transmitted in plaintext to the
   client in earlier exchanges and so this method is vulnerable to
   active attacks.

   In addition, the current DHCPv6 messages are still transmitted in
   cleartext and the privacy information within the DHCPv6 message is
   not protected from passive attack, such as pervasive monitoring.  The
   IETF has expressed strong agreement that pervasive monitoring is an
   attack that needs to be mitigated where possible in [RFC7258].

   In comparison, the security mechanisms defined in this document
   provides for authentication and encryption based on the public key
   certificates of the client and server.  The DHCPv6 authentication can
   protect DHCPv6 from active attacks, such as spoofing attack.  And the
   DHCPv6 encryption defends against passive attacks, such as pervasive
   monitoring attack.




Jiang, et al.           Expires September 9, 2016               [Page 4]

Internet-Draft                  SeDHCPv6                      March 2016


5.  Secure DHCPv6 Overview

5.1.  Solution Overview

   This solution provides authentication and encryption mechanisms based
   on the certificates of the DHCPv6 client and server.  Before the
   standard DHCPv6 configuration process, the Information-request and
   Reply messages are exchanged to select one authenticated DHCPv6
   server.  After the mutual authentication between the DHCPv6 client
   and server, the following DHCPv6 configuration process is encrypted
   to avoid the privacy information disclosure.  We introduce two new
   DHCPv6 messages: Encrypted-Query message, Encrypted-Response message
   and three new DHCPv6 options: Encrypted-message option, Certificate
   option, Timestamp option.  Based on the new defined messages and
   options, the corresponding authentication and encryption mechanisms
   are achieved.

   The following figure illustrates secure DHCPv6 procedure.  The DHCPv6
   client first sends an Information-request message to the standard
   multicast address to all DHCPv6 servers.  The Information-request
   message is used to request the servers for the servers' certificates
   information, without going through any address, prefix or non-
   security option assignment process.  The Information-request is sent
   without any client's private information, such as Client Identifier
   option or the Certificate option, to minimize client's privacy
   information leakage.  When receiving the Information-request message,
   the server sends the Reply message that contains the server's
   Certificate option and Server Identifier option.  Upon the receipt of
   the Reply message, the DHCPv6 client verifies the server's identity
   according to the contained certificate in the Reply message.  If
   there are multiple authenticated DHCPv6 servers, the client selects
   one authenticated DHCPv6 server for the following DHCPv6
   configuration process.  If there are no authenticated DHCPv6 servers
   or existing servers failed authentication, the client should retry a
   number of times.  In this way, it is difficult for a rogue server to
   beat out a busy "real" server.  And then the client takes some other
   alternative action depending on its local policy.

   After the server's authentication, the first DHCPv6 message sent from
   the client to the server, such as Solicit message, contains the
   client's Certificate information for client authentication.  The
   DHCPv6 client sends the Encrypted-Query message to server, which
   carries the Encrypted-message option and the Server Identifier
   option.  The Encrypted-message option contains the encrypted DHCPv6
   message sent from the client to the server.  When the DHCPv6 server
   receives the Encrypted-Query message, it decrypts the message using
   its private key.  If the decrypted message contains the client's




Jiang, et al.           Expires September 9, 2016               [Page 5]

Internet-Draft                  SeDHCPv6                      March 2016


   Certificate option, the DHCPv6 server verifies the client's identity
   according to the contained client certificate information.

   After the client's authentication, the server sends the Encrypted-
   Response message to the client, which contains the Encrypted-message
   option.  The Encrypted-message option contains the encrypted DHCPv6
   message sent from server to client, which is encrypted using the
   client's public key.  If the message fails client authentication,
   then the server sends the corresponding error status code to the
   client.  During the encrypted DHCPv6 configuration process, the
   timestamp option can be contained in the encrypted DHCPv6 messages to
   defend against replay attacks.

           +-------------+                           +-------------+
           |DHCPv6 Client|                           |DHCPv6 Server|
           +-------------+                           +-------------+
                  |            Information-request           |
                  |----------------------------------------->|
                  |           Option Request option          |
                  |                                          |
                  |                    Reply                 |
                  |<-----------------------------------------|
                  |             Certificate option           |
                  |         Server Identifier option         |
                  |                                          |
                  |            Encryption-Query              |
                  |----------------------------------------->|
                  |          Encrypted-message option        |
                  |          Server Identifier option        |
                  |                                          |
                  |            Encryption-Response           |
                  |<-----------------------------------------|
                  |          Encrypted-message option        |
                  |                                          |

                          Secure DHCPv6 Procedure

5.2.  New Components

   The new components of the mechanism specified in this document are as
   follows:

   o  Servers and clients that use certificates first generate a public/
      private key pair and then obtain a certificate that signs the
      public key.  The Certificate option is defined to carry the
      certificate of the sender.





Jiang, et al.           Expires September 9, 2016               [Page 6]

Internet-Draft                  SeDHCPv6                      March 2016


   o  A timestamp that can be used to detect replayed packet.  The
      Timestamp option is defined to carry the current time of the
      client/server.  The secure DHCPv6 client/server need to meet some
      accuracy requirements and be synced to global time, while the
      timestamp checking mechanism allows a configurable time value for
      clock drift.  The real time provision is out of scope of this
      document.

   o  The Encrypted-message option that contains the encrypted DHCPv6
      message.

   o  The Encrypted-Query message that is sent from the secure DHCPv6
      client to the secure DHCPv6 server.  The Encrypted-Query message
      contains the Encrypted-message option and Server Identifier
      option.

   o  The Encrypted-Response message that is sent from the secure DHCPv6
      server to the secure DHCPv6 client.  The Encrypted-Response
      message contains the Encrypted-message option.

5.3.  Support for Algorithm Agility

   Encryption algorithm is used for DHCPv6 encryption to defend against
   passive attack.  In order to provide a means of addressing problems
   that may emerge in the future with existing encryption algorithms,
   this document provides a mechanism for negotiating the use of more
   encryption algorithms in the future.

   The support for algorithm agility in this document is mainly a
   unilateral notification mechanism from sender to recipient.  A
   recipient MAY support various algorithms simultaneously among
   different senders, and the different senders in a same administrative
   domain may be allowed to use various algorithms simultaneously.  It
   is NOT RECOMMENDED that the same sender and recipient use various
   algorithms in a single communication session.

   If the server does not support the algorithm used by the client, the
   server SHOULD reply with an AlgorithmNotSupported status code
   (defined in Section 10.3) to the client.  Upon receiving this status
   code, the client MAY resend the message protected with the mandatory
   algorithm (defined in Section 10.1.1).

5.4.  Applicability

   In principle, Secure DHCPv6 is applicable in any environment where
   physical security on the link is not assured and attacks on DHCPv6
   are a concern.  In practice, however, it will rely on some
   operational assumptions mainly regarding public key distribution and



Jiang, et al.           Expires September 9, 2016               [Page 7]

Internet-Draft                  SeDHCPv6                      March 2016


   management, until more lessons are learned and more experiences are
   achieved.

   One feasible environment in an early deployment stage would be
   enterprise networks.  In such networks the security policy tends to
   be strict and it will be easier to manage client hosts.  One trivial
   deployment scenario is therefore to manually pre-configure client
   with the trusted servers' public key and manually register clients'
   public keys for the server.  It may also be possible to deploy an
   internal PKI to make this less reliant on manual operations, although
   it is currently subject to future study specifically how to integrate
   such a PKI into the DHCPv6 service for the network.

   Note that this deployment scenario based on manual operation is not
   different very much from the existing, shared-secret based
   authentication mechanisms defined in [RFC3315] in terms of
   operational costs.  However, Secure DHCPv6 is still securer than the
   shared-secret mechanism in that even if clients' keys stored for the
   server are stolen that does not mean an immediate threat as these are
   public keys.  In addition, if some kind of PKI is used with Secure
   DHCPv6, even if the initial installation of the certificates is done
   manually, it will help reduce operational costs of revocation in case
   a private key (especially that of the server) is compromised.

   It is believed that Secure DHCPv6 could be more widely applicable
   with integration of generic PKI so that it will be more easily
   deployed.  But such a deployment requires more general issues with
   PKI deployment be addressed, and it is currently unknown whether we
   can find practical deployment scenarios.  It is subject to future
   study and experiments, and out of scope of this document.

6.  DHCPv6 Client Behavior

   For the secure DHCPv6 client, a certificate is needed for client
   authentication.  The client is pre-configured with a certificate and
   its corresponding private key.  If the client is pre-configured with
   public key not certificate, it can generate the self-signed
   certificate for client authentication.

   The secure DHCPv6 client multicasts the Information-request message
   to the DHCPv6 servers.  The Information-request message MUST NOT
   include any option which may reveal the private information of the
   client, such as the Client Identifier option or the Certificate
   option.  The Information-request message is used by the DHCPv6 client
   to request the server's identity verification information without
   having addresses, prefixes or any non-security options assigned to
   it.  The Option Request option in the Information-request message
   MUST contain the option code of the Certificate option.



Jiang, et al.           Expires September 9, 2016               [Page 8]

Internet-Draft                  SeDHCPv6                      March 2016


   When receiving the Reply messages from DHCPv6 servers, a secure
   DHCPv6 client SHOULD discard any DHCPv6 messages when the Certificate
   option or Server Identifier option is missing.  And then the client
   SHOULD first check the support of the encryption algorithm that the
   server used.  If the check fails, the Reply message SHOULD be
   dropped.  If the encryption algorithm is supported, the client then
   checks the authority of this server.  The client SHOULD also use the
   same algorithms in the return messages.

   The client SHOULD validate the certificate according to the rules
   defined in [RFC5280].  An implementation may create a local trust
   certificate record for verified certificates in order to avoid
   repeated verification procedure in the future.  A certificate that
   finds a match in the local trust certificate list is treated as
   verified.  The message transaction-id is used as the identifier of
   the authenticated server's public key for encryption.  At this point,
   the client has either recognized the certificate of the server, or
   decided to drop the message.

   If there are multiple authenticated DHCPv6 servers, the client
   selects one DHCPv6 server for the following network parameters
   configuration.  The client can also choose other implementation
   method depending on the client's local policy if the defined protocol
   can also run normally.  For example, the client can try multiple
   transactions (each with different server) at the "same" time.  If
   there are no authenticated DHCPv6 servers or existing servers failed
   authentication, the client should retry a number of times.  In this
   way, it is difficult for the rogue server to beat out a busy "real"
   server.  And then the client takes some alternative action depending
   on its local policy, such as attempting to use an unsecured DHCPv6
   server.  The client conducts the server discovery process as per
   section 18.1.5 of [RFC3315] to avoid the packet storm.

   Once the server has been authenticated, the DHCPv6 client sends the
   Encrypted-Query message to the DHCPv6 server.  The Encrypted-Query
   message contains the Encrypted-message option, which MUST be
   constructed as explained in Section 10.1.3, and Server Identifier
   option.  The Encrypted-message option contains the DHCPv6 message
   that is encrypted using the selected server's public key.  The Server
   Identifier option is externally visible to avoid decryption cost by
   those unselected servers.

   For the encrypted DHCPv6 message sent from the DHCPv6 client to the
   DHCPv6 server, the first DHCPv6 message, such as Solicit message,
   MUST contain the Certificate option for client authentication.  The
   Certificate option MUST be constructed as explained in
   Section 10.1.1.  If the client have multiple certificate with
   different public/private key pairs, the message transaction-id is



Jiang, et al.           Expires September 9, 2016               [Page 9]

Internet-Draft                  SeDHCPv6                      March 2016


   used as the identifier of the client's private key for decryption.
   In addition, the encrypted DHCPv6 message can contain the timestamp
   option to defend against replay attacks.  The timestamp option MUST
   be constructed as explained in Section 10.1.2.

   For the received Encrypted-Response message, the client extracts the
   Encrypted-message option and decrypts it using its private key to
   obtain the original DHCPv6 message.  Then it handles the message as
   per [RFC3315].  If the decrypted DHCPv6 message contains the
   timestamp option, the DHCPv6 client checks the timestamp according to
   the rule defined in Section 9.1.  The DHCPv6 message, which fails the
   timestamp check, MUST be discarded.  If the client fails to get the
   proper parameters from the chosen server, it sends the Encrypted-
   Query message to another authenticated server for parameters
   configuration until the client obtains the proper parameters.

   When the client receives a Reply message with an error status code,
   the error status code indicates the failure reason on the server
   side.  According to the received status code, the client MAY take
   follow-up action:

   o  Upon receiving an AlgorithmNotSupported error status code, the
      client SHOULD resend the message protected with one of the
      mandatory algorithms.

   o  Upon receiving an AuthenticationFail error status code, the client
      is not able to build up the secure communication with the server.
      However, there may be other DHCPv6 servers available that
      successfully complete authentication.  The client MAY use the
      AuthenticationFail as a hint and switch to other certificate if it
      has another one; but otherwise treat the message containing the
      status code as if it had not been received.  But it SHOULD NOT
      retry with the same certificate.  However, if the client decides
      to retransmit using the same certificate after receiving
      AuthenticationFail, it MUST NOT retransmit immediately and MUST
      follow normal retransmission routines defined in [RFC3315].

   o  Upon receiving a DecryptionFail error status code, the client MAY
      resend the message following normal retransmission routines
      defined in [RFC3315].

   o  Upon receiving a TimestampFail error status code, the client MAY
      resend the message with an adjusted timestamp according to the
      returned clock from the DHCPv6 server.  The client SHOULD NOT
      change its own clock, but only compute an offset for the
      communication session.





Jiang, et al.           Expires September 9, 2016              [Page 10]

Internet-Draft                  SeDHCPv6                      March 2016


7.  DHCPv6 Server Behavior

   For the secure DHCPv6 server, a certificate is need for server
   authentication.  The server is pre-configured with a certificate and
   its corresponding private key.  If the server is pre-configured with
   public key not certificate, it can generate the self-signed
   certificate for server authentication.

   When the DHCPv6 server receives the Information-request message and
   the contained Option Request option identifies the request is for the
   server certificate information, it replies with a Reply message to
   the client.  The Reply message MUST contain the requested Certificate
   option, which MUST be constructed as explained in Section 10.1.1, and
   Server Identifier option.

   Upon the receipt of Encrypted-Query message, the server checks the
   Server Identifier option.  It decrypts the Encrypted-message option
   using its private key if it is the target server.  The DHCPv6 server
   drops the message that is not for it, thus not paying cost to decrypt
   messages not for it.

   If the decrypted message is a Solicit/Information-request message,
   the secure DHCPv6 server SHOULD discard the received message if the
   Certificate option is missing.  In such failure, the server SHOULD
   reply with an UnspecFail (value 1, [RFC3315]) error status code.

   If a Certificate option is provided, the server SHOULD first check
   the support of the encryption algorithm that the client used.  If the
   check fails, the server SHOULD reply with an AlgorithmNotSupported
   error status code, defined in Section 10.3 back to the client.  If
   the encryption algorithm is supported, the server then checks the
   authority of this client.

   The server SHOULD validate the certificate according to the rules
   defined in [RFC5280].  An implementation may create a local trust
   certificate record for verified certificates in order to avoid
   repeated verification procedure in the future.  A certificate that
   finds a match in the local trust certificate list is treated as
   verified.  The message that fails certificate validation MUST be
   dropped.  In such failure, the DHCPv6 server SHOULD reply with an
   AuthenticationFail error status code, defined in Section 10.3, back
   to the client.  At this point, the server has either recognized the
   authentication of the client, or decided to drop the message.

   If the decrypted message contains the timestamp option, the server
   checks the timestamp according to the rule defined in Section 9.1.
   If the timestamp check fails, a TimestampFail error status code,
   defined in Section 10.3, should be sent back to the client.



Jiang, et al.           Expires September 9, 2016              [Page 11]

Internet-Draft                  SeDHCPv6                      March 2016


   Depending on server's local policy, the message without a Timestamp
   option MAY be acceptable or rejected.  If the server rejects such a
   message, a TimestampFail error status code should be sent back to the
   client.  The Reply message that carries the TimestampFail error
   status code SHOULD carry a timestamp option, which indicates the
   server's clock for the client to use.

   Once the client has been authenticated, the DHCPv6 server sends the
   Encrypted-response message to the DHCPv6 client.  The Encrypted-
   response message contains the Encrypted-message option, which MUST be
   constructed as explained in Section 10.1.3.  The Encrypted-message
   option contains the encrypted DHCPv6 message that is encrypted using
   the authenticated client's public key.  To provide the replay
   protection, the timestamp option can be contained in the encrypted
   DHCPv6 message.

8.  Relay Agent Behavior

   When a DHCPv6 relay agent receives an Encrypted-query or Encrypted-
   response message, it may not recognize this message.  The unknown
   messages MUST be forwarded as described in [RFC7283].

   When a DHCPv6 relay agent recognizes the Encrypted-query and
   Encrypted-response messages, it forwards the message according to
   section 20 of [RFC3315].  There is nothing more the relay agents have
   to do, it neither needs to verify the messages from client or server,
   nor add any secure DHCPv6 options.  Actually, by definition in this
   document, relay agents MUST NOT add any secure DHCPv6 options.

   Relay-forward and Relay-reply messages MUST NOT contain any
   additional Certificate option or Timestamp option, aside from those
   present in the innermost encapsulated messages from the client or
   server.

9.  Processing Rules

9.1.  Timestamp Check

   In order to check the Timestamp option, defined in Section 10.1.2,
   recipients SHOULD be configured with an allowed timestamp Delta
   value, a "fuzz factor" for comparisons, and an allowed clock drift
   parameter.  The recommended default value for the allowed Delta is
   300 seconds (5 minutes); for fuzz factor 1 second; and for clock
   drift, 0.01 second.

   Note: the Timestamp mechanism is based on the assumption that
   communication peers have roughly synchronized clocks, within certain
   allowed clock drift.  So, an accurate clock is not necessary.  If one



Jiang, et al.           Expires September 9, 2016              [Page 12]

Internet-Draft                  SeDHCPv6                      March 2016


   has a clock too far from the current time, the timestamp mechanism
   would not work.

   To facilitate timestamp checking, each recipient SHOULD store the
   following information for each sender, from which at least one
   accepted secure DHCPv6 message is successfully verified (for
   timestamp check):

   o  The receive time of the last received and accepted DHCPv6 message.
      This is called RDlast.

   o  The timestamp in the last received and accepted DHCPv6 message.
      This is called TSlast.

   A verified (for timestamp check) secure DHCPv6 message initiates the
   update of the above variables in the recipient's record.

   Recipients MUST check the Timestamp field as follows:

   o  When a message is received from a new peer (i.e., one that is not
      stored in the cache), the received timestamp, TSnew, is checked,
      and the message is accepted if the timestamp is recent enough to
      the reception time of the packet, RDnew:

         -Delta < (RDnew - TSnew) < +Delta

      After the signature verification also succeeds, the RDnew and
      TSnew values SHOULD be stored in the cache as RDlast and TSlast.

   o  When a message is received from a known peer (i.e., one that
      already has an entry in the cache), the timestamp is checked
      against the previously received Secure DHCPv6 message:

         TSnew + fuzz > TSlast + (RDnew - RDlast) x (1 - drift) - fuzz

      If this inequality does not hold or RDnew < RDlast, the recipient
      SHOULD silently discard the message.  If, on the other hand, the
      inequality holds, the recipient SHOULD process the message.

      Moreover, if the above inequality holds and TSnew > TSlast, the
      recipient SHOULD update RDlast and TSlast after the signature
      verification also successes.  Otherwise, the recipient MUST NOT
      update RDlast or TSlast.

   An implementation MAY use some mechanism such as a timestamp cache to
   strengthen resistance to replay attacks.  When there is a very large
   number of nodes on the same link, or when a cache filling attack is
   in progress, it is possible that the cache holding the most recent



Jiang, et al.           Expires September 9, 2016              [Page 13]

Internet-Draft                  SeDHCPv6                      March 2016


   timestamp per sender will become full.  In this case, the node MUST
   remove some entries from the cache or refuse some new requested
   entries.  The specific policy as to which entries are preferred over
   others is left as an implementation decision.

   An implementation MAY statefully record the latest timestamps from
   senders.  In such implementation, the timestamps MUST be strictly
   monotonously increasing.  This is reasonable given that DHCPv6
   messages are rarely misordered.

10.  Extensions for Secure DHCPv6

   This section describes the extensions to DHCPv6.  Three new DHCPv6
   options, two new DHCPv6 messages and four status codes are defined.

10.1.  New DHCPv6 Options

10.1.1.  Certificate Option

   The Certificate option carries the certificate of the client/server.
   The format of the Certificate option is described as follows:






























Jiang, et al.           Expires September 9, 2016              [Page 14]

Internet-Draft                  SeDHCPv6                      March 2016


    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |      OPTION_CERTIFICATE       |         option-len            |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     EA-id     |                                               |
   +-+-+-+-+-+-+-+-+                                               .
   .                  Certificate (variable length)                .
   .                                                               .
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   option-code    OPTION_CERTIFICATE (TBA1).

   option-len     1 + Length of certificate in octets.

   EA-id          Encryption Algorithm id. The encryption algorithm
                  is used for the encrypted DHCPv6 configuration
                  process. This design is adopted in order to provide
                  encryption algorithm agility. The value is from the
                  Encryption Algorithm for Secure DHCPv6 registry in
                  IANA. A registry of the initial assigned values
                  is defined in Section 12.

   Certificate    A variable-length field containing certificate. The
                  encoding of certificate and certificate data MUST
                  be in format as defined in Section 3.6, [RFC7296].
                  The support of X.509 certificate is mandatory.

10.1.2.  Timestamp Option

   The Timestamp option carries the current time on the sender.  It adds
   the anti-replay protection to the DHCPv6 messages.  It is optional.



















Jiang, et al.           Expires September 9, 2016              [Page 15]

Internet-Draft                  SeDHCPv6                      March 2016


    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     OPTION_TIMESTAMP          |        option-len             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   |                     Timestamp (64-bit)                        |
   |                                                               |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   option-code    OPTION_TIMESTAMP (TBA2).

   option-len     8, in octets.

   Timestamp      The current time of day (SeND-format timestamp
                  in UTC (Coordinated Universal Time). It can reduce
                  the danger of replay attacks. The timestamp data MUST
                  be in format as defined in Section 5.3.1, [RFC3971].

10.1.3.  Encrypted-message Option

   The Encrypted-message option carries the encrypted DHCPv6 message
   with the recipient's public key.

   The format of the Encrypted-message option is:

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          option-code          |           option-len          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                                                               |
     .                  encrypted DHCPv6 message                     .
     .                       (variable)                              .
     .                                                               .
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                 Figure 1: Encrypted-message Option Format

   option-code  OPTION_ENCRYPTED_MSG (TBA3).

   option-len  Length of the encrypted DHCPv6 message.

   encrypted DHCPv6 message  A variable length field containing the
      encrypted DHCPv6 message sent by the client or the server.  In
      Encrypted-Query message, it contains encrypted DHCPv6 message sent




Jiang, et al.           Expires September 9, 2016              [Page 16]

Internet-Draft                  SeDHCPv6                      March 2016


      by a client.  In Encrypted-response message, it contains encrypted
      DHCPv6 message sent by a server.

10.2.  New DHCPv6 Messages

   Two new DHCPv6 messages are defined to achieve the DHCPv6 encryption:
   Encrypted-Query and Encrypted-Response.  Both the DHCPv6 messages
   defined in this document share the following format:

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |    msg-type   |               transaction-id                  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                                                               |
     .                             options                           .
     .                           (variable)                          .
     |                                                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      Figure 2: The format of Encrypted-Query and Encrypted-Response
                                 Messages

   msg-type        Identifier of the message type.  It can be either
                   Encrypted-Query (TBA4) or DHCPv6-Response (TBA5).

   transaction-id  The transaction ID for this message exchange.

   options         The Encrypted-Query message MUST contain the Server
                   Identifier option and Encrypted-message option.  The
                   Encrypted-Response message MUST contain the
                   Encrypted-message option.

10.3.  Status Codes

   The following new status codes, see Section 5.4 of [RFC3315] are
   defined.

   o  AlgorithmNotSupported (TBD6): indicates that the DHCPv6 server
      does not support algorithms that sender used.

   o  AuthenticationFail (TBD7): indicates that the DHCPv6 client fails
      authentication check.

   o  TimestampFail (TBD8): indicates the message from DHCPv6 client
      fails the timestamp check.





Jiang, et al.           Expires September 9, 2016              [Page 17]

Internet-Draft                  SeDHCPv6                      March 2016


   o  DecryptionFail (TBD9): indicates the message from DHCPv6 client
      fails the DHCPv6 message decryption.

11.  Security Considerations

   This document provides the authentication and encryption mechanisms
   for DHCPv6.

   A server, whose local policy accepts messages without a Timestamp
   option, may have to face the risk of replay attacks.

   A window of vulnerability for replay attacks exists until the
   timestamp expires.  Secure DHCPv6 nodes are protected against replay
   attacks as long as they cache the state created by the message
   containing the timestamp.  The cached state allows the node to
   protect itself against replayed messages.  However, once the node
   flushes the state for whatever reason, an attacker can re-create the
   state by replaying an old message while the timestamp is still valid.
   In addition, the effectiveness of timestamps is largely dependent
   upon the accuracy of synchronization between communicating nodes.
   However, how the two communicating nodes can be synchronized is out
   of scope of this work.

   Attacks against time synchronization protocols such as NTP [RFC5905]
   may cause Secure DHCPv6 nodes to have an incorrect timestamp value.
   This can be used to launch replay attacks, even outside the normal
   window of vulnerability.  To protect against these attacks, it is
   recommended that Secure DHCPv6 nodes keep independently maintained
   clocks or apply suitable security measures for the time
   synchronization protocols.

12.  IANA Considerations

   This document defines three new DHCPv6 [RFC3315] options.  The IANA
   is requested to assign values for these three options from the DHCPv6
   Option Codes table of the DHCPv6 Parameters registry maintained in
   http://www.iana.org/assignments/dhcpv6-parameters.  The three options
   are:

      The Certificate option (TBA1), described in Section 10.1.1.

      The Timestamp option (TBA2),described in Section 10.1.2.

      The Encrypted-message option (TBA3), described in Section 10.1.3.

   The IANA is also requested to assign value for these two messages
   from the DHCPv6 Message Types table of the DHCPv6 Parameters registry




Jiang, et al.           Expires September 9, 2016              [Page 18]

Internet-Draft                  SeDHCPv6                      March 2016


   maintained in http://www.iana.org/assignments/dhcpv6-parameters.  The
   two messages are:

      The Encrypted-Query message (TBA4), described in Section 10.2.

      The Encrypted-Response message (TBA5), described in Section 10.2.

   The IANA is also requested to add one new registry tables to the
   DHCPv6 Parameters registry maintained in
   http://www.iana.org/assignments/dhcpv6-parameters.  The table is the
   Encryption Algorithm for Secure DHCPv6 table.

   Initial values for these registries are given below.  Future
   assignments are to be made through Standards Action [RFC5226].
   Assignments for each registry consist of a name, a value and a RFC
   number where the registry is defined.

   Encryption algorithm for Secure DHCPv6.  The values in this table are
   8-bit unsigned integers.  The following initial values are assigned
   for encryption algorithm for Secure DHCPv6 in this document:

             Name        |  Value  |  RFCs
      -------------------+---------+--------------
            RSA         |    0    | this document

   IANA is requested to assign the following new DHCPv6 Status Codes,
   defined in Section 10.3, in the DHCPv6 Parameters registry maintained
   in http://www.iana.org/assignments/dhcpv6-parameters:

         Code  |           Name        |   Reference
      ---------+-----------------------+--------------
         TBD6  | AlgorithmNotSupported | this document
         TBD7  |   AuthenticationFail  | this document
         TBD8  |     TimestampFail     | this document
         TBD9  |    DecryptionFail     | this document

13.  Acknowledgements

   The authors would like to thank Tomek Mrugalski, Bernie Volz,
   Jianping Wu, Randy Bush, Yiu Lee, Sean Shen, Ralph Droms, Jari Arkko,
   Sean Turner, Stephen Farrell, Christian Huitema, Stephen Kent, Thomas
   Huth, David Schumacher, Francis Dupont, Gang Chen, Suresh Krishnan,
   Fred Templin, Robert Elz, Nico Williams, Erik Kline, Alan DeKok,
   Bernard Aboba, Sam Hartman, Qi Sun, Zilong Liu and other members of
   the IETF DHC working group for their valuable comments.

   This document was produced using the xml2rfc tool [RFC2629].




Jiang, et al.           Expires September 9, 2016              [Page 19]

Internet-Draft                  SeDHCPv6                      March 2016


14.  Change log [RFC Editor: Please remove]

   draft-ietf-dhc-sedhcpv6-11: Delete the Signature option, because the
   encrypted DHCPv6 message and the Information-request message (only
   contain the certificate option) don't need the signature option for
   message integrity check; Rewrite the "Applicability" section; Add the
   encryption algorithm negotiation process; To support the encryption
   algorithm negotiation, the Certificate option contains the EA-
   id(encryption algorithm identifier) field; Reserve the timestamp
   option to defend against the replay attacks for encrypted DHCPv6
   configuration process; Modify the client behavior when there is no
   authenticated DHCPv6 server; Add the DecryptionFail error code.
   2016-3-9.

   draft-ietf-dhc-sedhcpv6-10: merge DHCPv6 authentication and DHCPv6
   encryption.  The public key option is removed, because the device can
   generate the self-signed certificate if it is pre-configured the
   public key not the certificate. 2015-12-10.

   draft-ietf-dhc-sedhcpv6-09: change some texts about the deployment
   part.2015-12-10.

   draft-ietf-dhc-sedhcpv6-08: clarified what the client and the server
   should do if it receives a message using unsupported algorithm;
   refined the error code treatment regarding to AuthenticationFail and
   TimestampFail; added consideration on how to reduce the DoS attack
   when using TOFU; other general editorial cleanups. 2015-06-10.

   draft-ietf-dhc-sedhcpv6-07: removed the deployment consideration
   section; instead, described more straightforward use cases with TOFU
   in the overview section, and clarified how the public keys would be
   stored at the recipient when TOFU is used.  The overview section also
   clarified the integration of PKI or other similar infrastructure is
   an open issue.  2015-03-23.

   draft-ietf-dhc-sedhcpv6-06: remove the limitation that only clients
   use PKI- certificates and only servers use public keys.  The new text
   would allow clients use public keys and servers use PKI-certificates.
   2015-02-18.

   draft-ietf-dhc-sedhcpv6-05: addressed comments from mail list that
   responsed to the second WGLC. 2014-12-08.

   draft-ietf-dhc-sedhcpv6-04: addressed comments from mail list.
   Making timestamp an independent and optional option.  Reduce the
   serverside authentication to base on only client's certificate.
   Reduce the clientside authentication to only Leaf of Faith base on
   server's public key. 2014-09-26.



Jiang, et al.           Expires September 9, 2016              [Page 20]

Internet-Draft                  SeDHCPv6                      March 2016


   draft-ietf-dhc-sedhcpv6-03: addressed comments from WGLC.  Added a
   new section "Deployment Consideration".  Corrected the Public Key
   Field in the Public Key Option.  Added consideration for large DHCPv6
   message transmission.  Added TimestampFail error code.  Refined the
   retransmission rules on clients. 2014-06-18.

   draft-ietf-dhc-sedhcpv6-02: addressed comments (applicability
   statement, redesign the error codes and their logic) from IETF89 DHC
   WG meeting and volunteer reviewers. 2014-04-14.

   draft-ietf-dhc-sedhcpv6-01: addressed comments from IETF88 DHC WG
   meeting.  Moved Dacheng Zhang from acknowledgement to be co-author.
   2014-02-14.

   draft-ietf-dhc-sedhcpv6-00: adopted by DHC WG. 2013-11-19.

   draft-jiang-dhc-sedhcpv6-02: removed protection between relay agent
   and server due to complexity, following the comments from Ted Lemon,
   Bernie Volz. 2013-10-16.

   draft-jiang-dhc-sedhcpv6-01: update according to review comments from
   Ted Lemon, Bernie Volz, Ralph Droms.  Separated Public Key/
   Certificate option into two options.  Refined many detailed
   processes.  2013-10-08.

   draft-jiang-dhc-sedhcpv6-00: original version, this draft is a
   replacement of draft-ietf-dhc-secure-dhcpv6, which reached IESG and
   dead because of consideration regarding to CGA.  The authors followed
   the suggestion from IESG making a general public key based mechanism.
   2013-06-29.

15.  Open Issues [RFC Editor: Please remove]

   this protocol changes DHCPv6 message exchanges quite substantially:
   previously, the client first sends a Solicit message, gets possibly
   multiple Advertise messages, chooses the server (= sender of one of
   the Advertises) that would be best for the client, and then sends a
   Request to that chosen server.  Now the server selection is done at
   the key exchange phase (the initial Information-request and Reply
   exchange), and the Solicit can be sent only to a single server.  If
   the client doesn't like the Advertise it could restart the whole
   process, but it will be more expensive, and there's no guarantee that
   other servers can provide a better Advertise.

   One might argue that it's okay as "secure DHCPv6" is an "optional"
   extension.  But, with keeping in mind that the current IETF trend is
   to make everything privacy-aware (often by making everything
   encrypted), I'd personally say we should consider it to be the



Jiang, et al.           Expires September 9, 2016              [Page 21]

Internet-Draft                  SeDHCPv6                      March 2016


   standard mode of DHCPv6 operation even if users can still disable it.
   From this point of view, I think we should either

   o  A. make the server selection behavior more compatible with the
      pre-encryption protocol, or

   o  B. accept we give up the previous server selection feature for
      privacy (after careful assessment of its effect and with clear wg
      consensus), and explicitly note that.  we might even have to
      reflect that in rfc3315bis.

16.  References

16.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [RFC2460]  Deering, S. and R. Hinden, "Internet Protocol, Version 6
              (IPv6) Specification", RFC 2460, DOI 10.17487/RFC2460,
              December 1998, <http://www.rfc-editor.org/info/rfc2460>.

   [RFC3315]  Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,
              C., and M. Carney, "Dynamic Host Configuration Protocol
              for IPv6 (DHCPv6)", RFC 3315, DOI 10.17487/RFC3315, July
              2003, <http://www.rfc-editor.org/info/rfc3315>.

   [RFC3971]  Arkko, J., Ed., Kempf, J., Zill, B., and P. Nikander,
              "SEcure Neighbor Discovery (SEND)", RFC 3971,
              DOI 10.17487/RFC3971, March 2005,
              <http://www.rfc-editor.org/info/rfc3971>.

   [RFC4443]  Conta, A., Deering, S., and M. Gupta, Ed., "Internet
              Control Message Protocol (ICMPv6) for the Internet
              Protocol Version 6 (IPv6) Specification", RFC 4443,
              DOI 10.17487/RFC4443, March 2006,
              <http://www.rfc-editor.org/info/rfc4443>.

   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,
              Housley, R., and W. Polk, "Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 5280, DOI 10.17487/RFC5280, May 2008,
              <http://www.rfc-editor.org/info/rfc5280>.






Jiang, et al.           Expires September 9, 2016              [Page 22]

Internet-Draft                  SeDHCPv6                      March 2016


   [RFC5905]  Mills, D., Martin, J., Ed., Burbank, J., and W. Kasch,
              "Network Time Protocol Version 4: Protocol and Algorithms
              Specification", RFC 5905, DOI 10.17487/RFC5905, June 2010,
              <http://www.rfc-editor.org/info/rfc5905>.

   [RFC7283]  Cui, Y., Sun, Q., and T. Lemon, "Handling Unknown DHCPv6
              Messages", RFC 7283, DOI 10.17487/RFC7283, July 2014,
              <http://www.rfc-editor.org/info/rfc7283>.

   [RFC7296]  Kaufman, C., Hoffman, P., Nir, Y., Eronen, P., and T.
              Kivinen, "Internet Key Exchange Protocol Version 2
              (IKEv2)", STD 79, RFC 7296, DOI 10.17487/RFC7296, October
              2014, <http://www.rfc-editor.org/info/rfc7296>.

16.2.  Informative References

   [RFC2629]  Rose, M., "Writing I-Ds and RFCs using XML", RFC 2629,
              DOI 10.17487/RFC2629, June 1999,
              <http://www.rfc-editor.org/info/rfc2629>.

   [RFC4270]  Hoffman, P. and B. Schneier, "Attacks on Cryptographic
              Hashes in Internet Protocols", RFC 4270,
              DOI 10.17487/RFC4270, November 2005,
              <http://www.rfc-editor.org/info/rfc4270>.

   [RFC5226]  Narten, T. and H. Alvestrand, "Guidelines for Writing an
              IANA Considerations Section in RFCs", BCP 26, RFC 5226,
              DOI 10.17487/RFC5226, May 2008,
              <http://www.rfc-editor.org/info/rfc5226>.

   [RFC6273]  Kukec, A., Krishnan, S., and S. Jiang, "The Secure
              Neighbor Discovery (SEND) Hash Threat Analysis", RFC 6273,
              DOI 10.17487/RFC6273, June 2011,
              <http://www.rfc-editor.org/info/rfc6273>.

   [RFC7258]  Farrell, S. and H. Tschofenig, "Pervasive Monitoring Is an
              Attack", BCP 188, RFC 7258, DOI 10.17487/RFC7258, May
              2014, <http://www.rfc-editor.org/info/rfc7258>.

   [RSA]      RSA Laboratories, "RSA Encryption Standard, Version 2.1,
              PKCS 1", November 2002.

Authors' Addresses








Jiang, et al.           Expires September 9, 2016              [Page 23]

Internet-Draft                  SeDHCPv6                      March 2016


   Sheng Jiang
   Huawei Technologies Co., Ltd
   Q14, Huawei Campus, No.156 Beiqing Road
   Hai-Dian District, Beijing, 100095
   CN

   Email: jiangsheng@huawei.com


   Lishan Li
   Tsinghua University
   Beijing  100084
   P.R.China

   Phone: +86-15201441862
   Email: lilishan48@gmail.com


   Yong Cui
   Tsinghua University
   Beijing  100084
   P.R.China

   Phone: +86-10-6260-3059
   Email: yong@csnet1.cs.tsinghua.edu.cn


   Tatuya Jinmei
   Infoblox Inc.
   3111 Coronado Drive
   Santa Clara, CA
   US

   Email: jinmei@wide.ad.jp


   Ted Lemon
   Nominum, Inc.
   2000 Seaport Blvd
   Redwood City, CA  94063
   USA

   Phone: +1-650-381-6000
   Email: Ted.Lemon@nominum.com







Jiang, et al.           Expires September 9, 2016              [Page 24]

Internet-Draft                  SeDHCPv6                      March 2016


   Dacheng Zhang
   Beijing
   CN

   Email: dacheng.zhang@gmail.com














































Jiang, et al.           Expires September 9, 2016              [Page 25]
