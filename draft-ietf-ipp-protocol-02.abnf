ipp-message = ipp-request / ipp-response
ipp-request = version operation
           *(xxx-attributes-tag  xxx-attribute-sequence) data-tag data
ipp-response = version status-code
           *(xxx-attributes-tag xxx-attribute-sequence)  data-tag  data
xxx-attribute-sequence = *compound-attribute
       ; where "xxx" in the three rules above stands for any of the
version = major-version minor-version
major-version = SIGNED-BYTE  ; initially %d1
minor-version = SIGNED-BYTE  ; initially %d0

operation = SIGNED-SHORT    ; mapping from model defined below
status-code = SIGNED-SHORT  ; mapping from model defined below

compound-attribute = attribute *additional-values

attribute = value-tag name-length name value-length value
additional-values = value-tag zero-name-length value-length value

name-length = SIGNED-SHORT    ; number of octets of `name'
name = LALPHA *( LALPHA / DIGIT / "-" / "_" / "." )
value-length = SIGNED-SHORT  ; number of octets of `value'
value = OCTET-STRING

data = OCTET-STRING

zero-name-length = %x00.00  ; name-length of 0
operation-attributes-tag=  %x01            ; tag of 1
job-attributes-tag     =  %x02             ; tag of 2
printer-attributes-tag =  %x04             ; tag of 4
unsupported-job-attributes-tag =  %x05     ; tag of 5
data-tag = %x03                                              ; tag of
value-tag = %x10-FF

SIGNED-BYTE = BYTE
SIGNED-SHORT = 2BYTE
DIGIT = %x30-39    ;  "0" to "9"
LALPHA = %x61-7A   ;  "a" to "z"
BYTE = %x00-FF
OCTET-STRING = *BYTE

