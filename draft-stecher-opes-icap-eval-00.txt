


Internet-Draft                                                M. Stecher
Expires: December, 2002                                    webwasher.com
                                                              June, 2002



             Evaluating the ICAP protocol regarding the
                OPES callout protocol requirements
                draft-stecher-opes-icap-eval-00.txt



                 
Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire in December, 2002.


Copyright Notice

   Copyright (C) The Internet Society (2002).  All Rights Reserved.


Abstract

   This document uses the requirements for OPES callout protocols [1]
   and evaluates whether they are fulfilled by the ICAP protocol [2].
   





Stecher                    Expires December, 2002               [Page 1]

Internet-Draft           Evaluating the ICAP protocol          June 2002


Table of Contents

   1.   Terminology  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.   Introduction . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.   Functional Requirements  . . . . . . . . . . . . . . . . . .   3
   3.1  Callout Transactions . . . . . . . . . . . . . . . . . . . .   3
   3.2  Callout Channels . . . . . . . . . . . . . . . . . . . . . .   3
   3.3  Reliability  . . . . . . . . . . . . . . . . . . . . . . . .   4
   3.4  Congestion and Flow Control  . . . . . . . . . . . . . . . .   4
   3.5  Support for Keep-Alive Mechanism . . . . . . . . . . . . . .   4
   3.6  Operation in NAT Environments  . . . . . . . . . . . . . . .   4
   3.7  Multiple Callout Servers . . . . . . . . . . . . . . . . . .   4
   3.8  Multiple OPES Processors . . . . . . . . . . . . . . . . . .   5
   3.9  Support for Different Application Protocols  . . . . . . . .   5
   3.10 Capability and Parameter Negotiations  . . . . . . . . . . .   5
   3.11 Meta Data and Instructions . . . . . . . . . . . . . . . . .   5
   3.12 Asynchronous Message Exchange  . . . . . . . . . . . . . . .   5
   3.13 Message Segmentation . . . . . . . . . . . . . . . . . . . .   6
   4.   Performance Requirements . . . . . . . . . . . . . . . . . .   6
   4.1  Protocol Efficiency  . . . . . . . . . . . . . . . . . . . .   6
   5.   Security Requirements  . . . . . . . . . . . . . . . . . . .   6
   5.1  Authentication, Confidentiality, and Integrity . . . . . . .   6
   5.2  Hop-by-Hop Confidentiality . . . . . . . . . . . . . . . . .   6
   5.3  Operation Across Un-trusted Domains  . . . . . . . . . . . .   7
   5.4  Privacy  . . . . . . . . . . . . . . . . . . . . . . . . . .   7
   6.   Summary  . . . . . . . . . . . . . . . . . . . . . . . . . .   7
   7.   Security Considerations  . . . . . . . . . . . . . . . . . .   7
        References . . . . . . . . . . . . . . . . . . . . . . . . .   7
        Authors' Addresses . . . . . . . . . . . . . . . . . . . . .   7
        Full Copyright Statement . . . . . . . . . . . . . . . . . .   8





















Stecher                    Expires December, 2002               [Page 2]

Internet-Draft           Evaluating the ICAP protocol          June 2002


1. Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [3].

2. Introduction

   The Internet Content Adaption Protocol (ICAP) in its version 1.0 has
   been described in an Internet draft that was posted one year ago and
   was updated recently [2].
   
   The OPES (Open Pluggable Edge Services) working group defined the
   requirements for OPES callout protocols in the Internet draft [1].
   
   This document checks for the requirements of [1] and evaluates
   whether they are fulfilled by the ICAP protocol [2].
   
   Sections 3, 4, 5 and 6 of this document are synchronized with the
   same sections of [1] for a convenient lookup of the referred
   requirements.

3. Functional Requirements

3.1 Callout Transactions

   fulfilled
   
   Enabling of callout transactions:  fulfilled
   Forward complete or partial app message: fulfilled
   Ability to return a modified app message: fulfilled

   Request/Response scheme: Defined, two main methods REQMOD/RESPMOD

   Terminating transactions: fulfilled (can be done as in HTTP)

   Premature termination of transaction: Possible. ICAP server can
   respond and close connection (graceful shutdown) w/o handling
   all data.
   
   Status Code: fulfilled (first line of response contains status code)

3.2 Callout Channels

   fulfilled
   
   Multiple transactions: fulfilled (ICAP connections are persistent
   by default as in HTTP/1.1)



Stecher                    Expires December, 2002               [Page 3]

Internet-Draft           Evaluating the ICAP protocol          June 2002


   Connect and close: fulfilled (only ICAP client connects to ICAP
   server, both sides can close a connection)

   Parameters: Parameters are negotiated with special OPTIONS requests

3.3 Reliability

   fulfilled
   
   "ICAP uses TCP/IP as a transport protocol" (4.1. of [2])

3.4 Congestion and Flow Control

   fulfilled

   "ICAP uses TCP/IP as a transport protocol" (4.1. of [2])

3.5 Support for Keep-Alive Mechanism

   incomplete
   
   There are no keep alive messages in the ICAP protocol.

   Although ICAP supports persistent connections, a normal connection
   itself is not an optimal method of detecting failures. As in HTTP
   open connections may time out and will be closed to release
   resources if no transactions have to be handled for some time.
   
   An ICAP client needs to implement some strategy to avoid data loss
   if a connection is timed out by the ICAP server as the client
   is sending a new request.

3.6 Operation in NAT Environments

   fulfilled

   (Not frequently implemented but we once encountered an ICAP server
   behind a firewall running NAT.)

3.7 Multiple Callout Servers

   fulfilled

   (There is nothing explicitly in the specs but it works the same
   way as a data processor communicates with different HTTP servers).






Stecher                    Expires December, 2002               [Page 4]

Internet-Draft           Evaluating the ICAP protocol          June 2002


3.8 Multiple Data Processors

   fulfilled

   (As in HTTP, an ICAP server can be contacted by any number of
   clients. Multiple services on one server are also planned)


3.9 Support for Different Application Protocols

   incomplete

   ICAP is designed for HTTP only.
   "Though transformations may be possible on other non-HTTP content,
   they are beyond the scope of this document." (chapter 1 of [2]).
   There are implementations that use ICAP for other protocols like
   FTP and SMTP.
   
3.10 Capability and Parameter Negotiations

   fulfilled

   (A basic form of these negotiations is implemented by the ICAP
   OTPIONS request/response. (4.10 of [2]))

3.11 Meta Data and Instructions

   fulfilled
   
   Meta data can be transferred in ICAP message headers (4.3 of [2]).
   
   Information about the parts of the application message through
   Encapsulation header (4.4.1 of [2]).
   
   Service is specified through ICAP URI (4.2 of [2])
   
   Cache-Control header for cacheability (4.3.1 of [2]).
   
   Keeping of local copy signaled by "Allow: 204" header (4.6 of [2])
   
   Tracing through via headers (4.4.2 of [2]).

3.12 Asynchronous Message Exchange

   fulfilled
   
   Many TCP connections possible, as well as parallel requests on
   parallel connections.



Stecher                    Expires December, 2002               [Page 5]

Internet-Draft           Evaluating the ICAP protocol          June 2002


   Preview feature to get an additional decision point (4.5 of [2])
   Asynchronous data handling of ICAP traffic is not a MUST but
   a SHOULD. This information is missing in the current ICAP draft.

3.13 Message Segmentation

   fulfilled
   
   Segmentation through chunked transfer encoding (6.3 of [2])

4. Performance Requirements

4.1 Protocol Efficiency

   fulfilled

   Easy encapsulation of HTTP messages, little overhead.
   Implementations are possible with little additional latency but
   this depends on the algorithms used by the ICAP services (whether
   data handling chunk by chunk is possible); some algorithms have
   restrictions that are independent of the callout protocol being
   used.
   
5. Security Requirements

   incomplete

   If ICAP can be compared with HTTP, the ICAP counterpart to HTTPS
   (ICAPS) is missing.
   The ICAP protocol itself and even more current implementations are
   designed for usage in a trusted environment where authentication and
   encryption of data between ICAP client and server are not necessary.
   
5.1 Authentication, Confidentiality, and Integrity

   incomplete
   
   Authentication can be done as in HTTP (7.1 of [2]).
   But ICAP is designed for usage in single trust domain
   
5.2 Hop-by-Hop Confidentiality

   incomplete

   There is a section about principle encryption methods (7.2 of [2])
   but there are no real specs for this.





Stecher                    Expires December, 2002               [Page 6]

Internet-Draft           Evaluating the ICAP protocol          June 2002


5.3 Operation Across Un-trusted Domains
   
   incomplete
   
   Although there is nothing in the specs, this could be implemented by
   a VPN solution providing a secure TCP tunnel across the untrusted
   domains.

5.4 Privacy

   failed
   
   Encryption of information relevant to privacy policies is not
   a MUST in ICAP.

6. Summary

   The ICAP protocol fulfills most of the requirements.
   
   ICAP is incomplete with respect to support for multiple application
   protocols, does not have keep alive messages and it lacks some
   security requirements.
   
7. Security Considerations

   The security requirements for the OPES callout protocol are discussed
   in Section 5.


References

   [1]  Beck, A., et al., "Requirements for OPES Callout Protocols",
        Internet Draft draft-ietf-opes-protocol-reqs-01.txt, 18-Jun-02

   [2]  J. Elson, A. Cerpa: ICAP - the Internet Content Adaptation
        Protocol, Internet Draft draft-elson-icap-01.txt, June 2002

   [2]  Bradner, S., "Key words for use in RFCs to Indicate Requirement
        Levels", RFC 2119, March 1997.

Authors' Address

   Martin Stecher
   webwasher.com AG
   Vattmannstr. 3
   33100 Paderborn
   Germany
   
   EMail: martin.stecher@webwasher.com


Stecher                    Expires December, 2002               [Page 7]

Internet-Draft           Evaluating the ICAP protocol          June 2002


Full Copyright Statement

   Copyright (C) The Internet Society (2002).  All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.



















Stecher                    Expires December, 2002               [Page 8]

