start = metalinkMetalink

metalinkCommonAttributes =
      attribute xml:base { metalinkUri }?,
      attribute xml:lang { metalinkLanguageTag }?,
      undefinedAttribute*

metalinkTextConstruct =
      metalinkCommonAttributes,
      text

metalinkDateConstruct =
      metalinkCommonAttributes,
      xsd:dateTime

metalinkMetalink =
      element metalink:metalink {
         metalinkCommonAttributes,
         (metalinkDynamic?
          & metalinkFile+
          & metalinkGenerator?
          & metalinkOrigin?
          & metalinkPublished?
          & metalinkUpdated?
          & extensionElement*)
      }

metalinkFile =
      element metalink:file {
         metalinkCommonAttributes,
         attribute name { text },
         (metalinkCopyright?
          & metalinkDescription?
          & metalinkHash*
          & metalinkIdentity?
          & metalinkLanguage?
          & metalinkLicense?
          & metalinkLogo?
          & metalinkMetaURL*
          & metalinkURL*
          & metalinkOS?
          & metalinkPieces*
          & metalinkPublisher?
          & metalinkSignature?
          & metalinkSize?
          & metalinkVersion?
          & extensionElement*)
      }

metalinkPieces =
      element metalink:pieces {
         attribute length { xsd:integer },
         attribute type { text },
         metalinkHash+
      }

metalinkCopyright =
      element metalink:copyright {
        metalinkTextConstruct
      }









metalinkDescription =
      element metalink:description {
        metalinkTextConstruct
      }

metalinkDynamic =
      element metalink:dynamic {
         "true" | "false"
      }

metalinkGenerator =
      element metalink:generator {
        metalinkTextConstruct
      }

metalinkHash =
      element metalink:hash {
        attribute type { text }?,
        text
      }

metalinkIdentity =
      element metalink:identity {
        metalinkTextConstruct
      }

metalinkLanguage =
      element metalink:language {
        metalinkTextConstruct
      }

metalinkLicense =
      element metalink:license {
        metalinkCommonAttributes,
        attribute url { metalinkUri }?,
        attribute name { text }?
      }

metalinkLogo =
      element metalink:logo {
        metalinkCommonAttributes,
        (metalinkUri)
      }

metalinkMetaURL =
      element metalink:metaurl {
         metalinkCommonAttributes,
         attribute priority { xsd:integer }?,
         attribute type { text },
         attribute name { text }?,
         metalinkUri
      }

metalinkOrigin =
      element metalink:origin {
        metalinkCommonAttributes,
        (metalinkUri)
      }

metalinkOS =
      element metalink:os {
        metalinkTextConstruct
      }

metalinkPublished =
      element metalink:published {
        metalinkDateConstruct
      }

metalinkPublisher =
      element metalink:publisher {
        metalinkCommonAttributes,
        attribute url { metalinkUri }?,
        attribute name { text }?
      }

metalinkSignature =
      element metalink:signature {
        attribute type { "pgp" },
        metalinkTextConstruct
      }

metalinkSize =
      element metalink:size {
        metalinkTextConstruct
      }

metalinkUpdated =
      element metalink:updated {
        metalinkDateConstruct
      }

metalinkURL =
      element metalink:url {
         metalinkCommonAttributes,
         attribute location { xsd:string {
minLength = "2"  maxLength="2"}
metalinkVersion =
      element metalink:version {
        metalinkTextConstruct
      }


simpleExtensionElement =
      element * - metalink:* {
         text
      }






structuredExtensionElement =
      element * - metalink:* {
         (attribute * { text }+,
            (text|anyElement)*)
       | (attribute * { text }*,
          (text?, anyElement+, (text|anyElement)*))
      }

metalinkCommonAttributes =
      attribute xml:base { metalinkUri }?,
      attribute xml:lang { metalinkLanguageTag }?,
      undefinedAttribute*

metalinkTextConstruct =
      metalinkCommonAttributes,
      text

metalinkDateConstruct =
      metalinkCommonAttributes,
      xsd:dateTime

start = metalinkMetalink

metalinkMetalink =
      element metalink:metalink {
         metalinkCommonAttributes,
         (metalinkDynamic?
          & metalinkFile+
          & metalinkGenerator?
          & metalinkOrigin?
          & metalinkPublished?
          & metalinkUpdated?
          & extensionElement*)
      }

metalinkFile =
      element metalink:file {
         metalinkCommonAttributes,
         attribute name { text },
         (metalinkCopyright?
          & metalinkDescription?
          & metalinkIdentity?
          & metalinkHash*
          & metalinkLanguage?
          & metalinkLicense?
          & metalinkLogo?
          & metalinkMetaURL*
          & metalinkURL*
          & metalinkOS?
          & metalinkPieces*





          & metalinkPublisher?
          & metalinkSignature?
          & metalinkSize?
          & metalinkVersion?
          & extensionElement*)
      }

metalinkPieces =
      element metalink:pieces {
         attribute length { xsd:integer },
         attribute type { text },
         metalinkHash+
      }

metalinkCopyright =
      element metalink:copyright {
         metalinkTextConstruct
      }

metalinkDescription =
      element metalink:description {
         metalinkTextConstruct
      }

metalinkDynamic =
      element metalink:dynamic {
         "true" | "false"
      }

metalinkGenerator =
      element metalink:generator {
         metalinkTextConstruct
      }

metalinkHash =
        element metalink:hash {
          attribute type { text }?,
          text
        }

metalinkIdentity =
      element metalink:identity {
         metalinkTextConstruct
      }

metalinkLanguage =
      element metalink:language {
         metalinkTextConstruct





      }

metalinkLicense =
      element metalink:license {
         metalinkCommonAttributes,
         attribute url { metalinkUri }?,
         attribute name { text }?
      }

metalinkLogo =
      element metalink:logo {
         metalinkCommonAttributes,
         (metalinkUri)
      }

metalinkMetaURL =
      element metalink:metaurl {
         metalinkCommonAttributes,
         attribute priority { xsd:integer }?,
         attribute type { text },
         attribute name { text }?,
         metalinkUri
      }

metalinkOrigin =
      element metalink:origin {
         metalinkCommonAttributes,
         (metalinkUri)
      }

metalinkOS =
      element metalink:os {
         metalinkTextConstruct
      }

metalinkPublished =
      element metalink:published {
         metalinkDateConstruct
      }

metalinkPublisher =
      element metalink:publisher {
         metalinkCommonAttributes,
         attribute url { metalinkUri }?,
         attribute name { text }?
      }

metalinkSignature =





      element metalink:signature {
         attribute type { "pgp" },
         metalinkTextConstruct
      }

metalinkSize =
      element metalink:size {
         metalinkTextConstruct
      }

metalinkUpdated =
      element metalink:updated {
         metalinkDateConstruct
      }

metalinkURL =
      element metalink:url {
         metalinkCommonAttributes,
         attribute location { xsd:string {
minLength = "2"  maxLength="2"}
metalinkVersion =
      element metalink:version {
         metalinkTextConstruct
      }

metalinkLanguageTag = xsd:string {
pattern = "[A-Za-z]{1,8}(-[A-Za-z0-9]{1,8})*"
metalinkUri = text

simpleExtensionElement =
      element * - metalink:* {
         text
      }

structuredExtensionElement =
      element * - metalink:* {
         (attribute * { text }+,
            (text|anyElement)*)
       | (attribute * { text }*,
          (text?, anyElement+, (text|anyElement)*))
      }

extensionElement =
      simpleExtensionElement | structuredExtensionElement

undefinedAttribute =
     attribute * - (xml:base | xml:lang | local:*) { text }

undefinedContent = (text|anyForeignElement)*

anyElement =
      element * {
         (attribute * { text }
          | text
          | anyElement)*
      }

anyForeignElement =
      element * - metalink:* {
         (attribute * { text }
          | text
          | anyElement)*
