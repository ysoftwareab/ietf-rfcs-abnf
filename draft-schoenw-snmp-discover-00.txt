


Network Working Group                                   J. Schoenwaelder
Internet-Draft                           International University Bremen
Expires: June 15, 2007                                 December 12, 2006


      Simple Network Management Protocol (SNMP) EngineID Discovery
                   draft-schoenw-snmp-discover-00.txt

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on June 15, 2007.

Copyright Notice

   Copyright (C) The Internet Society (2006).

Abstract

   To retrieve management information using the third version of the
   Simple Network Management Protocol (SNMP), it is necessary to know
   the identifier of the remote SNMP protocol engine.  This document
   introduces a discovery mechanism which can be used to learn the
   engine identifier of a remote SNMP protocol engine.  The proposed
   mechanism is independent of the features provided by SNMP security
   models and may be used also by other protocol interfaces to discover
   the engine identifier.




Schoenwaelder             Expires June 15, 2007                 [Page 1]

Internet-Draft           SNMP EngineID Discovery           December 2006


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . 3
   2.  Background  . . . . . . . . . . . . . . . . . . . . . . . . . . 3
   3.  Procedure . . . . . . . . . . . . . . . . . . . . . . . . . . . 4
     3.1.  Local EngineID  . . . . . . . . . . . . . . . . . . . . . . 4
     3.2.  EngineID Discovery  . . . . . . . . . . . . . . . . . . . . 5
   4.  Security Considerations . . . . . . . . . . . . . . . . . . . . 5
   5.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . 6
   6.  References  . . . . . . . . . . . . . . . . . . . . . . . . . . 6
     6.1.  Normative References  . . . . . . . . . . . . . . . . . . . 6
     6.2.  Informative References  . . . . . . . . . . . . . . . . . . 6
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . . . 7
   Intellectual Property and Copyright Statements  . . . . . . . . . . 8





































Schoenwaelder             Expires June 15, 2007                 [Page 2]

Internet-Draft           SNMP EngineID Discovery           December 2006


1.  Introduction

   To retrieve management information using the third version of the
   Simple Network Management Protocol (SNMPv3) [RFC3410], it is
   necessary to know the identifier of the remote SNMP protocol engine.
   While an appropriate engine identifier can in principle be configured
   by an operator, it is often desirable to discover the engine
   identifier automatically.

   This document introduces a discovery mechanism which can be used to
   learn the engine identifier of a remote SNMP protocol engine.  The
   proposed mechanism is independent of the features provided by SNMP
   security models and may be used also by other protocol interfaces to
   discover the engine identifier.  The mechanism has been designed that
   it nicely co-exists with discovery mechanisms which may exist in
   security models, such as the authoritative engine identifier
   discovery of the User-based Security Model (USM) of SNMP [RFC3414].

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].


2.  Background

   Within an administrative domain, an SNMP engine is uniquely
   identified by an snmpEngineID value [RFC3411].  An SNMP entity, which
   consists of an SNMP engine and several SNMP applications, may provide
   access to multiple contexts.

   An SNMP context is a collection of management information accessible
   by an SNMP entity.  An item of management information may exist in
   more than one context and an SNMP entity potentially has access to
   many contexts [RFC3411].  A context is identified by the snmpEngineID
   value of the entity hosting the management information (called a
   contextEngineID) and a context name which identifies the specific
   context (called a contextName).

   To identify an individual item of management information within an
   administrative domain, a four tuple is used consisting of

   1.  a contextEngineID,
   2.  a contextName,
   3.  an object type, and
   4.  its instance identification.

   The last two elements are typically encoded in an object identifier
   (OID) value.  The contextName is a string while the contextEngineID



Schoenwaelder             Expires June 15, 2007                 [Page 3]

Internet-Draft           SNMP EngineID Discovery           December 2006


   is a binary value constructed according to the rules defined as part
   of the SnmpEngineID textual convention of the SNMP-FRAMEWORK-MIB
   [RFC3411].

   The SNMP protocol operations and the protocol data units (PDUs)
   operate on OIDs and thus deal with object types and instances
   [RFC3416].  The SNMP architecture [RFC3411] introduces the concept of
   a scopedPDU as a data structure containing a contextEngineID, a
   contextName, and a PDU.  The SNMP version 3 (SNMPv3) message format
   uses ScopedPDUs to exchange management information [RFC3412].

   Within the SNMP framework, contextEngineIDs serve as end-to-end
   identifiers.  This becomes important in situations where SNMP proxies
   are deployed to translate between protocol versions or to cross
   middleboxes such as network address translators.  In addition,
   snmpEngineIDs separate the identification of an SNMP engine from the
   transport endpoints used to communicate with an SNMP engine.  This
   property allows to correlate management information easily even in
   situations where multiple different transports were used to retrieve
   the information or where transport endpoints can changed dynamically.

   To retrieve data from an SNMPv3 agent, it is necessary to know the
   appropriate contextEngineID.  The User-based Security Model (USM) of
   SNMPv3 provides a mechanism to discover the snmpEngineID of the
   remote SNMP engine since this is needed for security processing
   reasons.  This discovered snmpEngineID can subsequently be used as a
   contextEngineID in a ScopedPDU to access management information local
   to the remote SNMP engine.  Other security models, such as the
   Transport Security Model (TMS) [RFC.TSM], lack such a procedure and
   may use the discovery mechanism defined in this memo.


3.  Procedure

   The proposed discovery mechanism consists of two parts, namely the
   definition of a special well-known snmpEngineID value which always
   refers to a local context, and the definition of a procedure to
   require the snmpEngineID scalar of the SNMP-FRAMEWORK-MIB using the
   special well-known local snmpEngineID value.

3.1.  Local EngineID

   To facilitate discovery, it is assumed that SNMP agents register
   their snmpEngineID scalar using a special well known contextEngineID.
   This is consistent with the SNMPv3 specifications which explicitly
   allow to register management information in multiple contexts.

   The SnmpEngineID textual convention defines that an snmpEngineID



Schoenwaelder             Expires June 15, 2007                 [Page 4]

Internet-Draft           SNMP EngineID Discovery           December 2006


   value MUST be between 5 and 12 octets long.  This specification
   proposes to use the variable length format 3) and to allocate the
   format value 6 using the enterprise ID 0 for a well-known
   SnmpEngineID value which always refers to the "local" engine.  In
   concrete terms, the SnmpEngineID value '8000000006'H is allocated to
   refer to the local engineID.

   Agent implementations MAY choose to register additional objects under
   the local engineID.  However, management applications SHOULD NOT rely
   on this.

3.2.  EngineID Discovery

   Discovery of the snmpEngineID is simply done by sending an SNMP get
   request to retrieve the snmpEngineID scalar using the local engineID
   defined above as a contextEngineID.  Implementations SHOULD only
   perform this discovery step when it is needed.  In particular, if
   security models are used which already discover the remote engineID
   (such as USM), then no further discovery is necessary.  The same is
   true in situations where the application already supplies a suitable
   engineID value (e.g., in proxy situations).

   The pseudo code below illustrates how the engineID discovery fits
   into the control flow of an SNMP engine hosting a command generator
   application.

   do_discovery()
   {
       if (usm) {
           do_usm_security_engineid_discovery();
           if (contextEngineID == nil) {
               contextEngineID = securityEngineID;
           }
       }

       if (contextEngineID == nil) {
           contextEngineID = '8000000006'H;
           contextEngineID = get(snmpEngineID.0)
       }
   }


4.  Security Considerations

   TBD






Schoenwaelder             Expires June 15, 2007                 [Page 5]

Internet-Draft           SNMP EngineID Discovery           December 2006


5.  Acknowledgments

   Dave Perkins suggested to introduce a "local" contextEngineID during
   the ISMS interim meeting in Boston, 2006.  The email discussion in
   Fall 2006 with Joe Fernandez helped to clarify many details.


6.  References

6.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, March 1997.

   [RFC3411]  Harrington, D., Presuhn, R., and B. Wijnen, "An
              Architecture for Describing Simple Network Management
              Protocol (SNMP) Management Frameworks", STD 62, RFC 3411,
              December 2002.

   [RFC3412]  Case, J., Harrington, D., Presuhn, R., and B. Wijnen,
              "Message Processing and Dispatching for the Simple Network
              Management Protocol (SNMP)", STD 62, RFC 3412,
              December 2002.

   [RFC3414]  Blumenthal, U. and B. Wijnen, "User-based Security Model
              (USM) for version 3 of the Simple Network Management
              Protocol (SNMPv3)", STD 62, RFC 3414, December 2002.

   [RFC3416]  Presuhn, R., "Version 2 of the Protocol Operations for the
              Simple Network Management Protocol (SNMP)", STD 62,
              RFC 3416, December 2002.

6.2.  Informative References

   [RFC3410]  Case, J., Mundy, R., Partain, D., and B. Stewart,
              "Introduction and Applicability Statements for Internet-
              Standard Management Framework", RFC 3410, December 2002.

   [RFC.TSM]  Harrington, D., "Transport Security Model for SNMP",
              draft-ietf-isms-transport-security-model-00.txt (work in
              progress), October 2006.










Schoenwaelder             Expires June 15, 2007                 [Page 6]

Internet-Draft           SNMP EngineID Discovery           December 2006


Author's Address

   Juergen Schoenwaelder
   International University Bremen
   Campus Ring 1
   28725 Bremen
   Germany

   Phone: +49 421 200-3587
   Email: j.schoenwaelder@iu-bremen.de









































Schoenwaelder             Expires June 15, 2007                 [Page 7]

Internet-Draft           SNMP EngineID Discovery           December 2006


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Disclaimer of Validity

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Copyright Statement

   Copyright (C) The Internet Society (2006).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.




Schoenwaelder             Expires June 15, 2007                 [Page 8]

