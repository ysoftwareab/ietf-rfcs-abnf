bw = cwnd*8/rtt;
tp = max(0.001,max(rtpPacket.size*8/max(50000,bw)));

mss = max(mss,rtpPacket.size);
cwndMin = 2*mss;
tp = 0.001;
item = transmitted.find(rtcp.SSRC, rtcp.SN)
lossEvent = isLossEvent(rtcp.SN, rtcp.ackVector);

lastLostEvent = now;
offTarget = (owdTarget-owd)/owdTarget;

cwndHeadroom = cwndHeadroomMin+
       max(0.0,offTarget)*(cwndHeadroomMax-cwndHeadroomMin);

cwnd = max(cwndMin, beta*cwnd);
lossEvent = false;
rttFactor = Math.min(2.0,Math.max(0.1, getRtt())/0.1);
cwnd = max(3*mtuMax,cwnd);
lastOwd = owd;
rtpPacket = encode(..., scaleFactor);
skipFrame = true;
skipFrame = false;
age = ageHist.average(); // Compute average
owdFraction = owd/owdTarget;
scaleFactor = max(scaleFactorMin, scaleFactor*(1.0-age));
scaleLimit = max(scaleFactor, scaleFactorMax*0.1)*0.2;
rampUpSlowDown = min(5.0, max(rampUpSlowDown*0.9,
           1.0+5.0*max(0.0,owdFraction-0.2)));

increment =
           min(framePeriod*maxScaleFactor/
             (rampUpTime*rampUpSlowDown), scaleLimit);
scaleFactor = min(maxScaleFactor, scaleFactor+increment);
rtcpFeedbackPacket = RtcpFeedbackPacket(SSRC,now,rtp.SN,rtpSn)

