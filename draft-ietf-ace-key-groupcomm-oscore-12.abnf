AIF-OSCORE-GROUPCOMM = AIF_Generic<path, permissions>

path = tstr  ; Group name
permissions = uint . bits roles
roles = &(
         Requester: 1,
         Responder: 2,
         Monitor: 3,
         Verifier: 4
Type1 = Member as Requester and/or Responder        |  G  = GET
Type2 = Member as Monitor                           |  F  = FETCH
Type3 = Non-member (authorized to be Verifier)      |  Po = POST
           (*) = cannot join the group as Verifier     |  Pu = PUT
Type4 = Non-member (not authorized to be Verifier)  |  D  = DELETE

       Figure 2: Admitted CoAP Methods on the Group Manager Resources

ecdh_info = ecdh_info_req / ecdh_info_resp

ecdh_info_req = nil                   ; in the Token Transfer
                                         ; Request to the KDC

ecdh_info_res = [ + ecdh_info_entry ] ; in the Token Transfer
                                         ; Response from the KDC

ecdh_info_entry =
pub_key_enc = int
gname = tstr

gm_dh_pub_keys = gm_dh_pub_keys_req / gm_dh_pub_keys_resp

gm_dh_pub_keys_req = nil                        ; in the Token
                                                   ; Transfer Request to
                                                   ; the Group Manager

gm_dh_pub_keys_res = [ + gm_dh_pub_keys_entry ] ; in the Token
                                                   ; Transfer Response
                                                   ; from the Group
                                                   ; Manager

gm_dh_pub_keys_entry =
pub_key_enc = int,
pub_key = bstr
gname = tstr

MAC = HKDF(salt, IKM, info, L)

MAC = HKDF(salt, IKM, info, L)

ecdh_info_entry =
pub_key_enc = int / nil
gname = tstr

              Figure 12: 'ecdh_info_entry' with general format

