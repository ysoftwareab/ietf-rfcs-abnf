C = A + B
       The "group operation" on two elements, A and B, that produces a
       third element, C.  For finite field cryptography this is the
       modular multiplication, for elliptic curve cryptography this is
       point addition.

C = A - B
       The "group operation" on element A and the inverse of element B
       to produce a third element, C.  Inversion is defined such that
       the group operation on an element and its inverse results in the
       identity element, the value one (1) for finite field cryptography
       and the "point at infinity" for elliptic curve cryptography.

C = a * B
       This denotes repeated application of the group operation to B--
       i.e.  B + B-- (a - 1) times.

a = H(b)
       A cryptographic hash function that takes data b of indeterminate
       length and returns a fixed sized digest a.

a = F(B)
       A mapping function that takes an element and returns a scalar.
       For elliptic curve cryptography, F() returns the x-coordinate of
       the point B.  For finite field cryptography, F() is the identity
       function.

a = KDF-b(c, d)
       A key derivation function that derives an output key a of length
       b from an input key c and context d.

a = HMAC(b, c)
       A keyed MAC function that produces a digest a using key b and
       text c.

Qa = H(Alice|pw)*Pi                    Qb = H(Bob|pw)*Pr
M = X + Qa
                        Alice, M ------>
Qa = H(Alice|pw)*Pi
N = Y + Qb
z = KDF-n(F(y*X'),
                                                    Alice | Bob |
                                                    F(M) | F(N) | pw)
Qb = H(Bob|pw)*Pr
z = KDF-n(F(x*Y'),
               Alice | Bob |
               F(M) | F(N) | pw)

u = HMAC(F(a*Y'), Alice | F(A) |
              F(Y') | F(X))

                      {A, u}z[0] ------>

                                    if (SIV-decrypt returns fail) fail
                                    if (A not valid element) fail
                                    u' = HMAC(F(y*A), Alice | F(A) |
                                              F(Y) | F(X'))
                                    if (u' != u) fail
v = HMAC(F(b*X'), Bob | F(B) |
                                             F(X') | F(Y))

