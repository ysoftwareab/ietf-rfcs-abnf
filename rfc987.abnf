element        = protocol "." definition *( "." definition )
protocol       = "P1" / "P2"
definition     = identifier / context
identifier     = ALPHA *< ALPHA or DIGIT or "-" >
context        = "[" 1*DIGIT "]"
boolean = "TRUE" / "FALSE"

numericstring = *DIGIT

printablestring  = *( ps-char / ps-delim )

ps-char          = 1DIGIT /  1ALPHA / " " / "'" / "+" / ")"
                               / "," / "-" / "." / "/" / ":" / "=" / "?"

ps-delim         = "("

ps-encoded       = *( ps-char / ps-encoded-char )

ps-encoded-char  =   "(a)"               ; (@)
                               / "(p)"               ; (%)
                               / "(b)"               ; (!)
                               / "(q)"               ; (")
                               / "(u)"               ; (_)
                               / "(" 3DIGIT ")"

attributevalue = c / admd / prmd / x121 / t-id / o / ou
                         / ua-id / pn.g / pn.i / pn.s / pn.gq / dd.value

c        = printablestring       ; P1.CountryName
admd     = printablestring       ; P1.AdministrationDomainName
prmd     = printablestring       ; P1.PrivateDomainName
x121     = numericstring         ; P1.X121Address
t-id     = numericstring         ; P1.TerminalID
o        = printablestring       ; P1.OrganisationName
ou       = printablestring       ; P1.OrganisationalUnit
ua-id    = numericstring         ; P1.UniqueUAIdentifier
standard-type =
                   "C"           ; P1.CountryName
                 / "ADMD"        ; P1.AdministrationDomainName
                 / "PRMD"        ; P1.PrivateDomainName
                 / "X121"        ; P1.X121Address
                 / "T-ID"        ; P1.TerminalID
                 / "O"           ; P1.OrganisationName
                 / "OU"          ; P1.OrganisationalUnit
                 / "UA-ID"       ; P1.UniqueUAIdentifier
                 / "S"           ; P1.PersonalName.surName
                 / "G"           ; P1.PersonalName.givenName
                 / "I"           ; P1.PersonalName.initials
                 / "GQ"          ; P1.PersonalName.generationQualifier

standard-dd-type =
                   "RFC-822"     ; dd.type = "RFC-822"
                 / "JNT-Mail"    ; dd.type = "JNT-Mail"
                 / "UUCP"        ; dd.type = "UUCP"

encoded-pn      = [ given "." ] *( initial "." ) surname

given           = 2*<ps-char not including ".">

initial         = ALPHA

surname         = printablestring

GivenName       = "Marshall"
Surname         = "Rose"

Initials        = "MT"
Surname         = "Rose"

GivenName       = "Marshall"
Initials        = "MT"
Surname         = "Rose"

std-orname      = 1*( "/" attribute "=" value ) "/"
attribute       = standard-type
                            / "PN"
                            / standard-dd-type
                            / registered-dd-type
                            / "DD." std-printablestring
value           = std-printablestring
std-printablestring =
                            = *( std-char / std-pair )
std-char        = <ps-delim, and any ps-char except "/"
                              and "=">
std-pair        = "$" ( ps-delim / ps-char )

dmn-orname      = dmn-part *( "." dmn-part )
dmn-part        = attribute "$" value
attribute       = standard-type
                            / "~" dmn-printablestring
value           = dmn-printablestring
dmn-printablestring =
                            = *( dmn-char / dmn-pair )
dmn-char        = <ps-delim, and any ps-char except ".">
dmn-pair        = "\."

C="234", ADMD="BT", PRMD="DES"

C="234", ADMD="BT", PRMD="DES", O="Salford", OU="R-D"

domain-syntax   = ALPHA [ *alphanumhyphen alphanum ]
alphanum        = <ALPHA or DIGIT>
alphanumhyphen  = <ALPHA or DIGIT or HYPHEN>

C               = "GB"
ADMD            = "BT"
PRMD            = "AC"
C               = "US"
ADMD            = "Telemail"
PRMD            = "San Fransisco"
O               = "U Cal"
OU              = "Berkeley"
C               = "UK"
ADMD            = "BT"
PRMD            = "AC"
C               = "FR"
ADMD            = "PTT"
PRMD            = "Inria"
CountryName                  = ""
AdministrationDomainName     = "vax2.Cs.Ucl.AC.UK"
arrival                      = 18 Dec 85 10:40 GMT
action                       = relayed
CountryName               = ""
AdministrationDomainName  =
                               "44e.cs.ucl.ac.uk (with SMTP id a002110)"

CountryName                  = ""
AdministrationDomainName     = ""
arrival                      = time derived from Date:
action                       = relayed

extended-field  = "P1-Message-ID" ":" p1-msg-id
                         / "X400-Trace" ":" x400-trace
                         / "Original-Encoded-Information-Types"
                            ":"encoded-info
                         / "P1-Content-Type" ":" p1-content-type
                         / "UA-Content-ID" ":" printablestring
                         / "Priority" ":" priority
                         / "P1-Recipient" : 1 mailbox
                         / "Deferred-Delivery" ":" date-time
p1-msg-id       = global-id ";" *text

p1-content-type = "P2" / atom

x400-trace      = global-id ";"
                         "arrival" date-time
                         [ "deferred" date-time ]
                         [ "action" action ]
                         [ "converted" "(" encoded-info ")" ]
                         [ "previous" global-id ]

action          = "Relayed" / "Rerouted" / escape

global-id       = c "*" admd [ "*" prmd ]

encoded-info    = 1 encoded-type

encoded-type    = "Undefined"           ; undefined (0)
                         / "Telex"               ; tLX (1)
                         / "IA5-Text"            ; iA5Text (2)
                         / "G3-Fax"              ; g3Fax (3)
                         / "TIF0"                ; tIF0 (4)
                         / "Teletex"             ; tTX (5)
                         / "Videotex"            ; videotex (6)
                         / "Voice"               ; voice (7)
                         / "SFD"                 ; sFD (8)
                         / "TIF1"                ; tIF1 (9)
                         / escape

priority        = "normal" / "non-urgent" / "urgent" / escape

bilateral-info  = c "*" admd "*" *text

importance      = "low" / "normal" / "high" / escape

sensitivity     = "Personal" / "Private"
                         / "Company-Confidential" / escape

escape          = 1*DIGIT
drc-field    = "Delivery-Report-Content-Original"
                           ":" msg-id
                 / "Delivery-Report-Content-Intermediate-Trace"
                           ":" x400-trace
                 / "Delivery-Report-Content-UA-Content-ID"
                           ":" printablestring
                 / "Delivery-Report-Content-Billing-Information"
                           ":" *text
                 / "Delivery-Report-Content-Reported-Recipient-Info"
                           ":" drc-info

drc-info     = mailbox ";"
                            last-trace ";"
                            "ext" 1*DIGIT
                            "flags" 2DIGIT
                            [ "intended" mailbox ] ";"
                            [ "info" printablestring ]
last-trace   = drc-report ";"
                            date-time ";"
                            [ "converted" "(" encoded-info ")"

drc-report   = "SUCCESS" drc-success
                            / "FAILURE" drc-failure

drc-success  = date-time ";" 1*DIGIT

drc-failure  = *text [ ";" *text ] ";"

atom-encoded    = *( a-char / a-encoded-char )
a-char          = <any CHAR except specials, SPACE,
                                 CTL, "_", and "#">
a-encoded-char  = "_"                   ; (space)
                         / "#u#"                 ; (_)
                         / "#l#"                 ; <(>
                         / "#r#"                 ; <)>
                         / "#m#"                 ; (,)
                         / "#c#"                 ; (:)
                         / "#b#"                 ; (\)
                         / "#h#"                 ; (#)
                         / "#e#"                 ; ($=)
                         / "#s#"                 ; ($/)
                         / "#" 3DIGIT "#"

CountryName                  = ""
AdministrationDomainName     = "(EMAS V7)"
arrival                      = 17 Jun 85 9:15:29 BST
action                       = relayed
CountryName               = ""
AdministrationDomainName  = "UK.AC.Edinburgh"

original-sender     = "Original-Sender" ":" mailbox

