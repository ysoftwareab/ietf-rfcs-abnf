name =  elements

CR = 12

rulename = "abc"

rulename = 97 98 99

foo =  "a"

bar =  "b"

mumble =  foo bar foo

oldrule =/ <additional alternative(s)>

ruleset = alt1 / alt2

ruleset =/ alt3 / alt4

ruleset =/ alt5

ruleset = alt1 / alt2 / alt3 / alt4 / alt5

CR = 12

LF = 15

smallrange = LF..CR

rule           =  name ("=" / "=/")  elements [comment]
                            ; gotta start somewhere
                            ; continues if next line starts
                               with white space
                            ; basic rules definition and
                               incremental concatenation


name           =  ALPHA *(ALPHA / DIGIT / "-")
                            ; need to beef this up for richer
                               set of characters

comment        =  ";" *CHAR CRLF

elements       =  1*element *("/" 1*element)
                            ; concatenation and alternatives

element        =  el-component / grouping / repeating /
                    range

el-component   =  element / name

grouping       =  sequence / set / option

sequence       =  "(" name ")"

set            ="{" name "}"

option         =  "[" name "]

repeating      =  ( [number] ("*" / "#") [number] rule )
                            ; repetition and list
                       / exact-repetition

exact-repetition =  number name

range          =  (name / dval) ".." (name / dval)
                            ; Defines a sequence of values.

dval           =  1*(0..9)



ALPHA          = "a".."z" / "A".."Z"

CHAR           =  0..127

CR             =  13

CRLF           =  CR

DIGIT          =  "0".."9"

LF             =  10

QCHAR          =  <ascii character excepting " and \>
                    / ( "\\" CHAR )

SPACE          =  31

HTAB           =  8

