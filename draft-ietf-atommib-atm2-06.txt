

          draft        Supplemental ATM Management Objects    April 1996


                   Definitions of Supplemental Managed Objects
                                for ATM Management

                                    April 1996



                                Faye Ly  (editor)
                        Bay Networks Communications, Inc.
                               faye@Baynetworks.COM


                              Michael Noto (editor)
                           Bell Communications Research
                               noto@cc.bellcore.com


                              Andrew Smith  (editor)
                        Bay Networks Communications, Inc.
                              asmith@Baynetworks.COM


                               Kaj Tesink  (editor)
                           Bell Communications Research
                               kaj@cc.bellcore.com






          1.  Status of this Memo

          This document is an Internet Draft.  Internet Drafts are
          working documents of the Internet Engineering Task Force
          (IETF), its Areas, and its Working Groups.  Note that other
          groups may also distribute working documents as Internet
          Drafts.

          Internet Drafts are valid for a maximum of six months and may
          be updated, replaced, or obsoleted by other documents at any
          time.  It is inappropriate to use Internet Drafts as reference
          material or to cite them other than as a "work in progress".







          Expires 11/96                                       [Page 1]





          draft        Supplemental ATM Management Objects    April 1996


          2.  Introduction

          This memo defines an experimental portion of the Management
          Information Base (MIB) for use with network management
          protocols in the Internet community.  In particular, it
          describes objects used for managing ATM-based interfaces,
          devices, networks and services in addition to those defined in
          the ATM MIB [1], to provide additional support for the
          management of:
               - ATM Switched Virtual Connections (SVCs)
               - ATM Permanent Virtual Connections (PVCs)


          This memo specifies a MIB module in a manner that is both
          compliant to the SNMPv2 SMI, and semantically identical to the
          peer SNMPv1 definitions.

          This memo does not specify a standard for the Internet
          community.


          3.  The SNMPv2 Network Management Framework

          The SNMPv2 Network Management Framework consists of four major
          components.  They are:

          0    RFC 1442 [2] which defines the SMI, the mechanisms used
               for describing and naming objects for the purpose of
               management.

          0    STD 17, RFC 1213 [3] defines MIB-II, the core set of
               managed objects for the Internet suite of protocols.

          0    RFC 1445 [4] which defines the administrative and other
               architectural aspects of the framework.

          0    RFC 1448 [5] which defines the protocol used for network
               access to managed objects.

          The Framework permits new objects to be defined for the
          purpose of experimentation and evaluation.









          Expires 11/96                                       [Page 2]





          draft        Supplemental ATM Management Objects    April 1996


          4.  Object Definitions

          Managed objects are accessed via a virtual information store,
          termed the Management Information Base or MIB.  Objects in the
          MIB are defined using the subset of Abstract Syntax Notation
          One (ASN.1) defined in the SMI.  In particular, each object
          type is named by an OBJECT IDENTIFIER, an administratively
          assigned name.  The object type together with an object
          instance serves to uniquely identify a specific instantiation
          of the object.  For human convenience, we often use a textual
          string, termed the descriptor, to also refer to the object
          type.


          5.  Overview

          The purpose of this memo is to provide additional
          capabilities, not found in the ATM MIB [1], which are needed
          to manage ATM interfaces.  This memo addresses the following
          areas:
               - ATM Switch Support
               - ATM Service Support
               - ATM Host Support


          5.1.  Background

          In addition to the MIB module defined in this memo, other MIB
          modules are necessary to manage ATM interfaces, links and
          cross-connects.  Examples include MIB II for general system
          and interface management (RFC 1213 and RFC 1573), the DS3 or
          SONET MIBs for management of SONET and DS3 physical
          interfaces, and, as appropriate, MIB modules for applications
          that make use of ATM, such as SMDS [15] and LAN Emulation
          [14].  These MIB modules are outside the scope of this
          specification.

          This MIB module also requires the use of the ATM MIB module
          defined in [1].

          ATM Endpoint applications such as ATM LAN Emulation or
          Classical IP-over-ATM Clients and Servers use ATM to establish
          SVC/PVC connections for exchanging control and data
          information. The agents of these ATM applications must provide
          the network manager with information on the SVC/PVCs in use





          Expires 11/96                                       [Page 3]




          draft        Supplemental ATM Management Objects    April 1996


          and which applications are using them.  The information can be
          made generic so as to apply to all ATM applications.  This
          memo proposes extensions to the ATM MIB [1] in order to
          support this.

          The current specification of this supplemental ATM MIB is
          based on SNMPv2 SMI.

          5.2.  Important Definitions

          The following terms are defined here and used throughout this
          MIB:
               - Virtual Path Link (VPL)
               - Virtual Path Connection (VPC)
               - Virtual Path Segment (VP Segment)
               - Virtual Channel Link (VCL)
               - Virtual Channel Connection (VCC)
               - Virtual Channel Segment (VC Segment).


            _____      _______      _______      _______      _____
           |     |____|       |____|       |____|       |____|     |
           |Host1|    |SwitchA|    |SwitchB|    |SwitchC|    |Host2|
           |     |____|       |____|       |____|       |____|     |
           |_____|    |_______|    |_______|    |_______|    |_____|

               |<----->| Virtual          |<----->| Virtual
                         Path Link                  Path Link


               |<------------Virtual Path Connection---------->|
                             (between Host1 and Host2)


                              |<--------------->| Virtual Path
                                                  Segment (between
                                                  SwitchA and SwitchC)

             Figure 1: Examples of Virtual Path Links, Virtual Path
                       Connection, and Virtual Path Segment










          Expires 11/96                                       [Page 4]




          draft        Supplemental ATM Management Objects    April 1996


            _____      _______      _______      _______      _____
           |     |____|       |____|       |____|       |____|     |
           |Host1|----|SwitchA|----|SwitchB|----|SwitchC|----|Host2|
           |     |____|       |____|       |____|       |____|     |
           |_____|    |_______|    |_______|    |_______|    |_____|

               |<----->| Virtual          |<----->| Virtual
                         Channel Link               Channel Link


               |<----------Virtual Channel Connection--------->|
                           (between Host1 and Host2)


                              |<--------------->| Virtual Channel
                                                  Segment (between
                                                  SwitchA and SwitchC)

              Figure 2: Examples of Virtual Channel Links, Virtual
                    Channel Connection, and Virtual Channel Segment

          5.3.  Supported Functions

          The managed ATM objects are arranged as follows:

                    Table                         Host   Switch Service
              _____________________________________________________
                  atmSvcVcCrossConnectTable      |      |  Y   |  Y   |
                  atmSvcVpCrossConnectTable      |      |  Y   |  Y   |

                  atmSigTable                    |  Y   |  Y   |  Y   |
                  atmSigSupportTable             |      |  Y   |  Y   |
                  atmSigDescrParamTable          |  Y   |      |      |

                  atmIfAdminAddrTable            |      |  Y   |  Y   |
                  atmVclAddrBindTable            |  Y   |      |      |
                  atmAddrVclTable                |  Y   |  Y   |  Y   |

                  atmVplStatTable                |  Y   |  Y   |  Y   |
                  atmVplLogicalPortTable         |  Y   |  Y   |  Y   |

                  atmVclStatTable                |  Y   |  Y   |  Y   |
                  atmVclGenTable                 |  Y   |  Y*  |  Y*  |

                  atmInterfaceExtTable           |  Y   |  Y   |  Y   |





          Expires 11/96                                       [Page 5]




          draft        Supplemental ATM Management Objects    April 1996


          * - not all objects in the table are required

                           Table 1: MIB structure

          5.3.1.  ATM SVC VC Cross Connect Table

          This table provides the SVC VC Cross connection information.
          The equivalent PVC VC Cross Connect table is defined in [1].

          5.3.2.  ATM SVC VP Cross Connect Table

          This table provides the SVC VP Cross connection information.
          The equivalent PVC VP Cross Connect table is defined in [1].

          5.3.3.  ATM Interface Signalling Information

          This table provides configuration and monitoring information
          on the signalling entity.  A signalling entity can be deployed
          over an ATM interface as defined in the atmInterfaceConfTable
          [1], or a logical ATM interface defined in section 5.3.10.1 in
          this document.

          5.3.3.1.  ATM Interface Signalling Configuration

          A Network manager can configure the Signalling entity to run a
          specific signalling suit such as DSS2, ATM Forum UNI, PNNI or
          BICI.  It can also dictate the side of the siganlling suit.
          For example, if a signalling entity is configured to run ATM
          Forum UNI 3.1, it has to be told to run as the network side or
          the user side of the UNI.

          The objects atmConfigSigType and atmConfigSide are used for
          configuration and the objects atmActiveSigType and
          atmActiveSigSide are used for reading back the actual
          signalling configuraiton.

          The following table describes all the combinations of the
          configuration of the signalling entity:
                  atmConfigSigType        atmConfigSigSide
                  ----------------        ----------------
                  autoConfig              -
                  ituDss2                 user/network
                  atmfUni3Dot0            user/network
                  atmfUni3Dot1            user/network
                  atmfUni4Dot0            user/network





          Expires 11/96                                       [Page 6]




          draft        Supplemental ATM Management Objects    April 1996


                  atmfIisp3Dot0           user/network
                  atmfIisp3Dot1           user/network
                  atmfPnni1Dot0           -
                  atmfBici2Dot0           -

          When the value of the object atmConfigSigType is configured to
          autoConfig(2), the signalling type is determined via the ATM
          Forum ILMI auto-configuration procedures [22].  There is no
          need to set the signalling side since it should be a derived
          value. The PNNI and BICI interfaces are always symetric so
          setting the signalling side is also not necessary.

          5.3.3.2.  Signalling Monitoring Information

          To monitor the signalling entity, a few counters are provided.
          They are defined as:

          5.3.3.2.1.  SSCOP Counters

          This group contains information on the ATM SSCOP signalling
          layer and must be supported by signalling entities.

          5.3.3.2.2.  Unsupported Service Failures

          This group contains information on the setup failures that
          occur when setting up an ATM SVC.  Maintaining counters for
          each individual signalling cause codes would result in a large
          number of counters.  Instead, this memo uses an approach that
          lumps events into the following categories:

                  - Route Unavailability Counter
                  - Resources Unavailability Counter
                  - Called Party Events Counter
                  - Message Error Counter
                  - Calling Party Events Counter
                  - Timer Expiries Counter
                  - Restart Activity Counter


          In addition, a Setup Attempts Counter was added to keep track
          of the number of Setup attempts made (both successful and
          unsuccessful).

          Each counter is counted both at the receiving and sending
          sides.  For example, the object atmSigDetectSetupAttempts





          Expires 11/96                                       [Page 7]




          draft        Supplemental ATM Management Objects    April 1996


          counts the number of setup failures detected on the interface
          and the object atmSigEmittSetupAttempts counts the number of
          setup failures emitted from this interface.


          5.3.3.2.3.  ATM Signalling Layer Protocol Errors

          This group contains information on the Protocol Errors that
          occur at the signalling layer when establishing an ATM SVC.

          5.3.3.2.4.  UNI Signalling Sub-layer Statistics

          Configuration information is needed per signalling entity in
          order to manage attributes of all SVCs set up by that entity.
          Since signalling entities are not always bound one to one to
          ATM UNIs, a more flexible indexing mechanism would be to allow
          multiple signalling entities on a single UNI or vice versa -
          using ifIndex and VPI would provide sufficient flexibility
          here.

          Statistics per VCL are needed in order to find out the usage
          of VCL resources by ATM applications.  Additionally, to
          monitor the usage and health of a UNI signalling entity, some
          counters are needed per UNI signalling entity.  Two new
          objects are added to count the number of connections
          established.  One for incoming SVCs and one for outgoing SVCs.

          5.3.3.3.  Indexing of the ATM Signalling Table

          The atmSigTable (formerly the atmSvcTable) is indexed only by
          the ifIndex, which can either be of type ATM (ifType=37) or
          type ATM Logical Port (ifType=80).  The procedures for using
          an ifIndex of type ATM are described in RFC1695.  Procedures
          for using an ifIndex of type "ATM Logical Port" are described
          below.  For a description of the ATM Logical Port Interface
          and the use of the ATM Logical Port Interface Table please
          refer to Section 5.2.1.1.3 "ATM Logical Port Interface".

          The "ATM Logical Port" (ifType=80) interface type is used to
          represent the interface of a VP tunnel, and each such
          interface may have zero or one Signalling VCLs.  For a switch,
          this would include external and internal (virtual proprietary)
          interfaces. If such an interface has a signalling VCL, the
          atmSigTable row associated with that VCL is indexed by the
          interface ifIndex.





          Expires 11/96                                       [Page 8]




          draft        Supplemental ATM Management Objects    April 1996


          The Figure 6 illustrates the association of ATM Signalling
          Table rows, assuming all external ports, VP tunnels, and the
          switch itself signal for SVC setup:

                           ____________________________
                           | Switch                   |
                           |     ==============       |
                           |     | AAL5       |       |
                           |     |Applications|       |
                           |     ==============       |
                           |     |    AAL5    |       |
                           |     |   Entity   |       |
                           |     ==============       |
                           |           |              |
                           |         -----Prop. Virtual Interface.
                           |           |     1 row(atmSigEntry)
                           |     ==============       |
                           |     |   ATM      |       |
                           |     |  Entity    |       |
                           |     ==============       |
                           |_____|__|__|__|__|________|
                                 |  |  |  |  |
                                ---------------- ATM UNI/NNIs
                                 |  |  |  |  |
                                 |  |  |  |  | 1 row(atmSigEntry) per
                                 v  v  v  v  v  UNI/NNI/VP tunnel

                  Figure 6: Model of an ATM Switch Illustrating
                            Association of the ATM Signalling Table





















          Expires 11/96                                       [Page 9]




          draft        Supplemental ATM Management Objects    April 1996


          Figure 7 illustrates the Signalling channels and their
          associated interfaces for a switch. The cross-connecting of
          the Signalling channels is done to allow the reading of AAL5
          errors.



                                       ATM Switch
                     -------------------------------------------
                     |        o VCL4     o VCL5       o VCL6   |
                     |        |          |            |        |
                     |  -------------------------------------  |
                     |  | AAL5 Interface                IF5 |  |
                     |  |-----------------------------------|  |
                     |  | Proprietary Virtual Interface IF4 |  |
                     |  -------------------------------------  |
                     |        |          |            |        |
                     |--+     |          |            |     +--|
              VPI=0  |  |     |          |            |     |  |VPI=0
              VCL1   |  |     |          |            |     |  |VCL3
           o---------|--|-----X          |            X-----|--|-----o
           **********|**|**+             |                  |  |
              VPI=44 |  |  | IF2         |                  |  |
              VCL2   |  |  |             |                  |  |
           o---------|--|----------------X                  |  |
                     |  |  |                                |  |
           **********|**|**+                                |  |
                     |  |                                   |  |
                     |  | IF1                           IF3 |  |
                     |--+                                   +--|
                     |                                         |
                     -------------------------------------------
                                            X = ATM Cross-Connect

                 Figure 7: Model of ATM Switch's Signalling Channels
                           and Associated Interfaces




          In Figure 7 there are two physical interfaces, with ATM-layers
          depicted as IF1 and IF3. IF2 is the "ATM Logical Port"
          interface provided by the VP tunnel with VPI=44 on the
          physical interface. IF4 and IF5 are the ATM and AAL5
          (respectively) internal sub-layer interfaces for VCLs





          Expires 11/96                                      [Page 10]




          draft        Supplemental ATM Management Objects    April 1996


          terminating at the switch. It is assumed in this example that
          the ifIndex value for IF1 is 1, IF2 is 2, etc.

          In the case depicted:

              - On IF1, the VCL1 Signalling channel can be used to set
                up connections over the interface address space with
                the exception of the VP with VPI=44. An entry exists
                in the atmVplTable with index ifIndex=1,atmVplVpi=44,
                and in the augmenting atmVplLogIfConfTable,
                atmVplLogIfDef=isLogicalIf(2), atmVplLogIfIndex=2.

              - On IF2, the VCL2 Signalling channel can set up VCs
                over the ATM Logical Port interface's address space
                (VPI=44, VCI range dictated by configuration).

              - On IF3, the VCL3 Signalling channel can be used to set
                up VCs over the entire interface address space.


          The only VCLs depicted in the Figure 7 are those used for
          Signalling. External interface VCLs are cross-connected to
          VCLs at the proprietary interface. The indices for the VCLs
          are:
                  ifIndex, atmVclVpi, atmVclVci
                  =============================
          VCL1       1         0          5
          VCL2       2        44          5
          VCL3       3         0          5
          VCL4       4         p1         c1
          VCL5       4         p2         c2
          VCL6       4         p3         c3


          The p(i) and c(j) values for VPI/VCI on the VCLs on the
          proprietary interface indicate that these values are chosen by
          the switch software (versus the values dictated on the
          external interfaces).

          The atmSigTable is indexed only by ifIndex. Rows would
          certainly exist in the table for IF1, IF2, and IF3. The
          information in these rows would pertain to the Signalling
          protocols operating over VCL1, VCL2, and VCL3.







          Expires 11/96                                      [Page 11]




          draft        Supplemental ATM Management Objects    April 1996


          If the switch itself can originate and/or terminate SVCs,
          another row would exist for IF4. Assuming that the interface
          that the applications on a switch use to establish SVCs is a
          virtual interface, the IF4 row would be a degenerate row, in
          that some of the columns would apply and others may not:

            Applicable:
              atmConfigSigType
              atmActualSigType
              atmConfigSigSide
              atmActualSigSide
              atmSigDetectUnavailRoutes
              atmSigEmittUnavailRoutes
              atmSigDetectUnavailResrcs
              atmSigEmittUnavailResrcs
              atmSigSigInEstabls
              atmSigSigOutEstabls
              atmSigSupportClgPtyNumDel
              atmSigSupportClgPtySubAddr
              atmSigSupportCldPtySubAddr
              atmSigSupportHiLyrInfo
              atmSigSupportLoLyrInfo
              atmSigSupportRepeatInd
              atmSigSupportAALInfo
              atmSigSupportPrefCarrier

            Inapplicable:
              atmSigSSCOPConEvents
              atmSigSSCOPErrdPdus
              atmSigSigMsgErrors
              atmSigSigRestarts

            Maybe:
              atmSigCldPtyEvents
              atmSigClgPtyEvents
              atmSigSigTimerExpireds.


          5.3.4.  ATM UNI SVC Information Element Support

          A number of Information Elements may or may not be supported
          by ATM switches or ATM Service. Hence, for trouble isolation
          it is important to keep track which particular Information
          Elements are supported.  The corresponding group of objects
          must be supported by switches or networks supporting SVCs, and





          Expires 11/96                                      [Page 12]




          draft        Supplemental ATM Management Objects    April 1996


          indicate whether the following Information Elements are
          enabled/disabled:

          1)   Calling party number

          2)   Calling party subaddress

          3)   Called party subaddress

          4)   Broadband high layer information

          5)   Broadband low layer information

          7)   AAL parameters

          The last parameter, Preferred Carrier Pre-Subscription,
          identifies the carrier to which intercarrier calls originated
          from this interface are routed when transit network selection
          information is not provided by the calling party.

          5.3.5.  Signalling Descriptor Parameter Table

          This table extends the ATM VCL table of the ATM MIB [1] to
          include all other necessary signalling information as
          specified in both ATM Forum UNI Specifications [9] and [10].
          A user can create an entry with all signalling parameters and
          later use that entry to specify the signalling characteristics
          of SVCs.

          Signalling attributes can be grouped into following
          categories:

          1)   ATM Adaptation Layer Parameters

          Information in this group are captured in the ATM Signalling
          Descriptor Parameter Table defined in this memo.  Please refer
          to section 5.4.5.5 of [9] and [10].

          2)   Broadband Bearer Capability

          Information in this group are captured by the ATM Signalling
          Descriptor Parameter Table defined in this memo.  Please refer
          to section 5.4.5.7 of [9] and [10].







          Expires 11/96                                      [Page 13]




          draft        Supplemental ATM Management Objects    April 1996


          3)   Broadband High Layer Information

          Information in this group are captured by the ATM Signalling
          Descriptor Parameter Table defined in this memo.  Please refer
          to section 5.4.5.8 of [9] and [10].

          4)   Broadband Low Layer Information

          Information in this group are captured by the ATM Signalling
          Descriptor Parameter Table defined in this memo.  Please refer
          to section 5.4.5.9 of [9] and [10].


          5.3.6.  ATM Interface Administrative Address Table

          This group contains an ATM Interface Administrative Address
          Table (atmIfAdminAddrTable) which lists valid addresses for
          calls to and from a given interface.  One of these numbers
          shall be specified as the "default" number.

          5.3.7.  ATM VPI/VCI to Address Mapping Table

          In the atmVclAddrBindTable, the objects atmVclAddrBindAddr can
          either be an ATM Local Address or an ATM Remote Address which
          represent the two endpoint addresses of a VCL.  ATM Local
          Address identifies the local endpoint of the VCL represented
          by this agent.  While, the ATM Remote address represents the
          address of the ATM application at the other end of the VCL.

          5.3.8.  ATM Address to VPI/VCI Mapping Table

          This table provides an alternative way to retrieve the
          atmVclTable.  This table can be used to retrieve the indexing
          to the atmVclTable by an ATM address.

          5.3.9.  ATM VPL Statistics Table

          The atmVplStatTable includes per VPL cell counters.  The VPL
          cell counters count the valid ATM cells.  The valid ATM cells
          include the user and OAM cells but exclude the physical layer
          (e.g. idle cells) and unassigned cells.  Cells coming in to an
          ATM managed system are counted differently with the high Cell
          Loss Priority (CLP=0) or low Cell Loss Priority (CLP=1). The
          cells are tagged, passed or discarded depending on the
          incoming CLP value and the policed cell rate by the "traffic





          Expires 11/96                                      [Page 14]




          draft        Supplemental ATM Management Objects    April 1996


          policing" entity in the ATM managed system.  Refer to [9] and
          [10] for the description of the traffic policing.

                                _______________
                                | ATM Managed |
                     Input      | System      | Output
                     CLP=0 cells|             | CLP=0 cells
                     ---------->|             |----------->
                     CLP=1 cells| (traffic    | CLP=1 cells
                     ---------->| policing    |----------->
                                | entity)     | Tagged cells (CLP=1)
                                |_____________|----------->
                                 |Discard  | Discard
                                 |CLP=0    | CLP=1
                                 |cells    | cells
                                 |         |
                                 V         V


                 Figure 4. ATM Cell Counters per VPL


          In this table, cells coming into and out of the managed ATM
          system are counted as the total number of cells and the cells
          with the CLP=0.  The CLP=1 counter is derived by substracting
          CLP=0 cells from the total cells.  In addition, cells that are
          tagged on the output are also counted.  The output CLP=1 cells
          equals to the total cells out count minus






















          Expires 11/96                                      [Page 15]




          draft        Supplemental ATM Management Objects    April 1996


          5.3.10.  ATM VPL Logical Port Table

          The ATM VPL Logical Port Table includes all ATM logical port
          interface configuration information.

          5.3.10.1.  ATM Logical Port Interface   The interface type
          "ATM Logical Port" (ifType=80) is defined to allow the
          representation of a VP Tunnel, which is a VPL used as a trunk
          connection (most likely between devices that are not
          physically adjacent), providing for multiplexing and
          demultiplexing of VCs on the VP.  Figure 5 illustrates such a
          VP Tunnel.

          Note: the "ATM Logical Port" interface is more of a logical
          port, compared with an interface of type "ATM" which is more
          of a physical port that provides for the transport of many VP
          and VC connections between adjacent devices.

































          Expires 11/96                                      [Page 16]




          draft        Supplemental ATM Management Objects    April 1996


                               <------VP Tunnel------>
                         ATM Switch A             ATM Switch B
                        ------------             -----------
                        |ATM       |_____________|ATM       |
                        |X-Connect |      .      |X-Connect |
                 VCL1   |Point     | VPL1 . VPL2 |Point     |  VCL4
              O---------|----X-----|----- . -----|----X-----|-----O
                        |    X-----|----- . -----|----X     |
                        |    |     |_____________|    |     |
                        ------------             ------------
                             | VCL2                   | VCL3
                             O                        O

                           Figure 5: Virtual Path Tunnel


          In Figure 5, a VP tunnel (denoted as VPL1 by Switch A, and as
          VPL2 by Switch B) is used to connect VCL1 with VCL4 and VCL2
          with VCL3. Figure 5 shows only one VP tunnel, but there can be
          multiple VP tunnels over the same physical interface.

          A particularly useful VP tunnel scenario is tunneling across a
          public network that does not support signalling. In Figure 5
          above, assume Switches A and B are private switches that
          signal over the VP to set up connections transparently through
          the public network. The public network would just transport a
          PVC VP between the two switches.

          Because the VP Tunnel constitutes an interface between two ATM
          devices that are not necessarily physically adjacent, most of
          the management information pertaining to the interface may
          differ for the tunnel, including:
                  - active VPI/VCI fields (the tunnel may be a subset
                    of the parent interface).
                  - maximum number of VCCs
                  - configured VCCs
                  - ILMI VPI/VCI values
                  - ATM address type
                  - ATM administrative address
                  - received/transmitted cells.


          For details on how to use the ATM Logical Port interface and
          the ATM Logical Port Table see Section 5.2.1.1.3.1 below.






          Expires 11/96                                      [Page 17]




          draft        Supplemental ATM Management Objects    April 1996


          5.3.10.2.  How to create an ATM logical interface

          The ATM Logical Port Interface Table is used only by devices
          supporting VP tunnels. To create an Atm Logical Port interface
          via SNMP:
                  - Create a VPL (e.g., VPI=a on an existing interface
                    which has ifIndex=x).

                  - Set the augmenting object atmVplLogicalPortDef
                    with value isLogicalIf.  A new row in the
                    ifTable is then created, with ifIndex=y, to
                    represent the ATM Logical Port interface (e.g.,
                    VPL tunnel). Then set the augmenting object
                    atmVplLogicalPortIndex = y to represent the
                    ifIndex value of the ATM Logical Port interface.

                  - The ifEntry values are set for the ATM Logical
                    Port interface (ifIndex=y) as discussed in RFC
                    1695, with the following exceptions:
                          * ifType - a new enumerated value of "80" was
                            added to IANAifType, specifying an "ATM
                            Logical Port" interface.
                          * ifSpeed - The total bandwidth in bits per
                            second for use by the ATM layer. Computed
                            from the traffic descriptor for the VPL.
                          * ifOperStatus - determined hierarchically,
                            depending on the state of the physical
                            atm-cell layer interface beneath it,
                            and the ILMI on the VP.
                          * ifInOctets, ifOutOctets - support of
                            these objects is not mandatory for ATM
                            Logical Port interfaces.
                          * ifInErrors - always zero, HEC errors are
                            specified for the atm cell-layer interface
                            beneath it.
                          * ifInUnknownProtos - always zero, errors
                            are specified for the atm cell-layer
                            interface beneath it.

                  - The atmInterfaceConfEntry values are set as
                    discussed in RFC 1695, with the following
                    exceptions:
                          * atmInterfaceMaxVpcs - 0.
                          * atmInterfaceConfVpcs - 0.
                          * atmInterfaceIlmiVpi - VPI of the VP





          Expires 11/96                                      [Page 18]




          draft        Supplemental ATM Management Objects    April 1996


                            tunnel.

                  - An entry is created in the ifStackTable, with
                    values: ifStackHigherLayer=y, ifStackLowerLayer=x.

                  - VCLs defined on the VP tunnel are indexed by
                    ifIndex=y,VPI=a,VCI.


          5.3.11.  ATM VCL Statistics Table

          The atmVclStatTable includes per VCL cell counters.  The VCL
          cell counters count the valid ATM cells.  The valid ATM cells
          include the user and OAM cells but exclude the physical layer
          (e.g. idle cells) and unassigned cells.  Cells coming in to an
          ATM managed system are counted differently with the high Cell
          Loss Priority (CLP=0) or low Cell Loss Priority (CLP=1). The
          cells are tagged, passed or discarded depending on the
          incoming CLP value and the policed cell rate by the "traffic
          policing" entity in the ATM managed system.  Refer to [9] and
          [10] for the description of the traffic policing.

                                _______________
                                | ATM Managed |
                     Input      | System      | Output
                     CLP=0 cells|             | CLP=0 cells
                     ---------->|             |----------->
                     CLP=1 cells| (traffic    | CLP=1 cells
                     ---------->| policing    |----------->
                                | entity)     | Tagged cells (CLP=1)
                                |_____________|----------->
                                 |Discard  | Discard
                                 |CLP=0    | CLP=1
                                 |cells    | cells
                                 |         |
                                 V         V


                 Figure 3. ATM Cell Counters per VCL


          In this table, cells coming into and out of the managed ATM
          system are counted as the total number of cells and the cells
          with the CLP=0.  The CLP=1 counter is derived by substracting
          CLP=0 cells from the total cells.  In addition, cells that are





          Expires 11/96                                      [Page 19]




          draft        Supplemental ATM Management Objects    April 1996


          tagged on the output are also counted.  The output CLP=1 cells
          equals to the total cells out count minus both the CLP=0 cells
          and the tagged cells.  both the CLP=0 cells and the tagged
          cells.

          5.3.12.  ATM VC General Information Table

          This table contains the general information for each VCs.  It
          provides an index to the atmSigDescrParamTable defined in this
          MIB.  This table is an extention to the atmVclTable defined in
          the ATM MIB [1].

          5.3.13.  ATM Interface Configuration Extention Table

          The ATM Interface Configuration Extention Table contains SVC
          information that supplements the atmInterfaceConfTable defined
          in [1].  It includes the configured and negotiated minimum
          VPI/VCI values per ATM interface. refer to [1] Section 6.4 for
          detailed description

          The following figure provides an example how the current
          minimum VPI/VCI values are derived from the configured minimum
          VPI/VCI values and the neighboring minimum VPI/VCI values:

                 +--------+              +--------+              +--------+
                 |  ATM   | IF a    IF b |  ATM   | IF c    IF d |  ATM   |
                 | Device |--------------| Device |--------------| Device |
                 +--------+              +--------+              +--------+

                IF a:  Configured Min VPI Bits =  6  (configured)
                       Current Min VPI Bits = 8  (negotiated)

                IF b:  Configured Min VPI Bits =  8  (configured)
                       Current Min VPI Bits = 8  (negotiated)

                IF c:  Configured Min VPI Bits =  8  (configured)
                       Current Min VPI Bits = 8  (negotiated)

                IF d:  Configured Min VPI Bits =  8  (configured)
                       Current Min VPI Bits = 8  (negotiated)

                (between IF a and IF b, the maximum of the two configured
                 "Min Configured VPI Bits" is 8, so both interfaces set their
                 "Min Current VPI Bits" to 8.  Since IF c and IF d both
                 are configured with "Min Configured VPI Bits" of 8, they





          Expires 11/96                                      [Page 20]




          draft        Supplemental ATM Management Objects    April 1996


                 set their "Min Current VPI Bits" to 8.)

                                         Figure 8



          6.  Valid Address Sets / Default Address

          A given ATM UNI interface may have an Address,
          "ifPhysAddress", to identify the interface.  In addition, a
          given ATM UNI  interface may have several other valid
          addresses which can be used to originate and receive calls.
          The valid addresses that are used to receive calls are listed
          in the "ifRcvAddrTable" defined in RFC1573 [6].  ATM
          interfaces of switches and networks do not use the
          ifRcvAddrTable.  Valid addresses to be used by a switch or
          network are listed in the ATM Interface Administrative Address
          Table.  The ATM Interface Administrative Address Table is not
          supported by hosts.


          7.  Configuration of VPLs, VCLs, and Cross-Connects

          The ATM Managed Objects needed to support the configuration of
          VPLs, VCLs, and Cross-Connects are defined in the ATM MIB [1].


          8.  ATM History Group






















          Expires 11/96                                      [Page 21]




          draft        Supplemental ATM Management Objects    April 1996


          9.  Definitions

               ATM2-MIB DEFINITIONS ::= BEGIN

               IMPORTS
                  MODULE-IDENTITY, OBJECT-TYPE,
                  experimental, Counter32
                      FROM SNMPv2-SMI
                  RowStatus, TimeStamp
                      FROM SNMPv2-TC
                  MODULE-COMPLIANCE, OBJECT-GROUP
                      FROM SNMPv2-CONF
                  InterfaceIndex, ifIndex
                      FROM IF-MIB
                  atmMIBObjects, atmVclEntry,
                  atmVclVpi, atmVclVci, atmVplEntry, atmVplVpi
                      FROM ATM-MIB
                  PerfCurrentCount,
                  PerfIntervalCount,
                  PerfTotalCount
                      FROM PerfHist-TC-MIB
                  AtmAddr,
                  AtmSigDescrParamIndex,
                  AtmTrafficDescrParamIndex,
                  AtmConnCastType,
                  AtmConnKind,
                  AtmSignallingType,
                  AtmVcIdentifier,
                  AtmVpIdentifier
                      FROM ATM-TC-MIB;


               atm2MIB MODULE-IDENTITY
                    LAST-UPDATED "9601301200Z"
                    ORGANIZATION "IETF AToMMIB Working Group"
                    CONTACT-INFO
                      "          Faye Ly
                        Postal:  Bay Networks Inc.
                                 4401 Great America Parkway
                                 Santa Clara, CA 95052
                                 US
                        Tel:     +1 408 764 1702
                        Fax:     +1 408 988 5525
                        E-Mail:  faye@Baynetworks.COM






          Expires 11/96                                      [Page 22]




          draft        Supplemental ATM Management Objects    April 1996


                                 Michael Noto
                        Postal:  Bell Communications Research
                                 331 Newman Springs Road
                                 Red Bank, NJ 07701
                                 US
                        Tel:     +1 908 758 5104
                        Fax:     +1 908 758 4177
                        E-mail:  noto@cc.bellcore.com

                                 Andrew Smith
                        Postal:  Bay Networks Inc.
                                 4401 Great America Parkway
                                 Santa Clara, CA 95052
                                 US
                        Tel:     +1 408 764 1574
                        Fax:     +1 408 988 5525
                        E-Mail:  asmith@Baynetworks.COM

                                 Kaj Tesink
                        Postal:  Bell Communications Research
                                 331 Newman Springs Road
                                 Red Bank, NJ 07701
                                 US
                        Tel:     +1 908 758 5254
                        Fax:     +1 908 758 4177
                        E-mail:  kaj@cc.bellcore.com"
                    DESCRIPTION
                     "This MIB Module is a supplement to the
                     ATM-MIB [1].  This MIB provides
                     supplemental information from both a
                     switch/network perspective and an ATM
                     host/application prospective."
                    ::= { experimental XX }

               atm2MIBObjects  OBJECT IDENTIFIER ::= {atm2MIB 1}

               -- ********  NOTE TO THE RFC EDITOR  **************
               -- In case this module is put on the standards track
               --  replace the following:
               -- "atm2MIB MODULE-IDENTITY ::= {experimental XX}" with
               -- "atm2MIB MODULE-IDENTITY ::= {atmMIBObjects 13}"
               -- and include atmMIBObjects in the IMPORT clause.


               -- This ATM2-MIB Module consists of the following tables:





          Expires 11/96                                      [Page 23]




          draft        Supplemental ATM Management Objects    April 1996


               --      1. atmSvcVcCrossConnectTable
               --      2. atmSvcVpCrossConnectTable
               --      3. atmSigTable
               --      4. atmSigSupportTable
               --      5. atmSigDescrParamTable
               --      6. atmIfAdminAddrTable
               --      7. atmVclAddrBindTable
               --      8. atmAddrVclTable
               --      9. atmVplStatTable
               --      10. atmVplLogicalPortTable
               --      11. atmVclStatTable
               --      12. atmVclGenTable
               --





































          Expires 11/96                                      [Page 24]




          draft        Supplemental ATM Management Objects    April 1996


               -- 1. ATM VPL SVC Cross-Connect Table
               -- This group contains configuration and state
               -- information of all SVC point-to-point,
               -- point-to-multipoint, or multipoint-to-multipoint
               -- VP cross-connects.

               -- This table has read-only access and can be used
               -- to monitor the cross-connects which connect
               -- the VPLs together in an ATM switch
               -- or network. The atmSvcVpCrossConnectIndex
               -- is used to associate the related SVC
               -- VPLs that are cross-connected together.
               -- The atmSvcVpCrossConnectAdminStatus object
               -- has read-write access to allow for tear-down.

               -- The ATM SVC VP Cross Connect Table
               -- models each bi-directional Switched
               -- Virtual Circuit (SVC) VPC
               -- cross-connect as a set of entries in
               -- the atmSvcVpCrossConnectTable. A
               -- point-to-point VPC cross-connect is modeled
               -- as one entry; a point-to-multipoint (N leafs) VPC
               -- cross-connect as N entries in this table; and
               -- a multipoint-to-multipoint (N parties) VPC cross-
               -- connect as N(N-1)/2 entries in this table.
               -- In the latter cases, all the N (or N(N-1)/2) entries
               -- are associated with a single VPC cross-connect by
               -- having the same value of atmSvcVpCrossConnectIndex.

               --      _________________________________________
               --      |                                       |
               --  Low |         ATM Switch or Network         | High
               --  port|                                       | port
               -- _____|>> from low to high VPC traffic flow >>|______
               --      |<< from high to low VPC traffic flow <<|
               --      |                                       |
               --      |_______________________________________|
               --
               --          Figure 9: VPC Cross-Connect Model

               -- The terms low and high are chosen to represent
               -- numerical ordering of the two interfaces associated
               -- with a VPC cross-connect. That is, the ATM interface
               -- with the lower value of ifIndex is termed 'low',
               -- while the other ATM interface associated with the





          Expires 11/96                                      [Page 25]




          draft        Supplemental ATM Management Objects    April 1996


               -- VPC cross-connect is termed 'high'. This terminology
               -- is used to provide directional information; for
               -- example, the atmSvcVpCrossConnectL2HOperStatus
               -- applies to the low->high direction, and
               -- atmSvcVpCrossConnectH2LOperStatus applies to the
               -- high->low  direction, as illustrated in Figure 9.


               --  The ATM VP Cross Connect Table


               atmSvcVpCrossConnectTable OBJECT-TYPE
                    SYNTAX            SEQUENCE OF AtmSvcVpCrossConnectEntry
                    MAX-ACCESS        not-accessible
                    STATUS            current
                    DESCRIPTION
                    "The ATM SVC VP Cross Connect table.  A bi-
                    directional VP cross-connect which
                    cross-connects two SVC VPLs is modeled
                    as one entry in this table."
                    ::= { atm2MIBObjects 1 }


               atmSvcVpCrossConnectEntry OBJECT-TYPE
                    SYNTAX  AtmSvcVpCrossConnectEntry
                    MAX-ACCESS  not-accessible
                    STATUS  current
                    DESCRIPTION
                    "An entry in the ATM SVC VP Cross Connect table.
                    This entry is used to model a bi-directional
                    ATM SVC VP cross-connect which cross-connects
                    two VPLs."
                    INDEX { atmSvcVpCrossConnectIndex,
                            atmSvcVpCrossConnectLowIfIndex,
                            atmSvcVpCrossConnectLowVpi,
                            atmSvcVpCrossConnectHighIfIndex,
                            atmSvcVpCrossConnectHighVpi }
                    ::= { atmSvcVpCrossConnectTable 1 }

               AtmSvcVpCrossConnectEntry ::= SEQUENCE {
                    atmSvcVpCrossConnectIndex          INTEGER,
                    atmSvcVpCrossConnectLowIfIndex     InterfaceIndex,
                    atmSvcVpCrossConnectLowVpi         INTEGER,
                    atmSvcVpCrossConnectHighIfIndex    InterfaceIndex,
                    atmSvcVpCrossConnectHighVpi        INTEGER,





          Expires 11/96                                      [Page 26]




          draft        Supplemental ATM Management Objects    April 1996


                    atmSvcVpCrossConnectCreationTime   TimeStamp,
                    atmSvcVpCrossConnectRowStatus      RowStatus
                                 }

               atmSvcVpCrossConnectIndex OBJECT-TYPE
                    SYNTAX  INTEGER (1..2147483647)
                    MAX-ACCESS  not-accessible
                    STATUS  current
                    DESCRIPTION
                    "A unique value to identify this SVC VP cross-connect."
                    ::= { atmSvcVpCrossConnectEntry 1 }

               atmSvcVpCrossConnectLowIfIndex OBJECT-TYPE
                    SYNTAX  InterfaceIndex
                    MAX-ACCESS  not-accessible
                    STATUS  current
                    DESCRIPTION
                    "The value of this object is equal to MIB II's
                    ifIndex value of the ATM interface port for this
                    SVC VP cross-connect.  The term low implies
                    that this ATM interface has the numerically lower
                    ifIndex value than the other ATM interface
                    identified in the same atmSvcVpCrossConnectEntry."
                    ::= { atmSvcVpCrossConnectEntry 2 }

               atmSvcVpCrossConnectLowVpi OBJECT-TYPE
                    SYNTAX  INTEGER  (1..4095)
                    MAX-ACCESS  not-accessible
                    STATUS  current
                    DESCRIPTION
                    "The value of this object is equal to the VPI
                    value at the ATM interface
                    associated with the SVC VP cross-connect that is
                    identified by atmSvcVpCrossConnectLowIfIndex.
                    The VPI value cannot exceed the number
                    supported by the atmInterfaceMaxVpiBits
                    at the low ATM interface port."
                    ::= { atmSvcVpCrossConnectEntry 3 }

               atmSvcVpCrossConnectHighIfIndex OBJECT-TYPE
                    SYNTAX  InterfaceIndex
                    MAX-ACCESS  not-accessible
                    STATUS  current
                    DESCRIPTION
                     "The value of this object is equal to MIB II's





          Expires 11/96                                      [Page 27]




          draft        Supplemental ATM Management Objects    April 1996


                      ifIndex value of the ATM interface port for
                      this SVC VP cross-connect.  The term high
                      implies that this ATM interface has the
                      numerically higher ifIndex value than the
                      other ATM interface identified in the same
                      atmSvcVpCrossConnectEntry."
                    ::= { atmSvcVpCrossConnectEntry 4 }

               atmSvcVpCrossConnectHighVpi OBJECT-TYPE
                    SYNTAX  INTEGER   (1..4095)
                    MAX-ACCESS  not-accessible
                    STATUS  current
                    DESCRIPTION
                     "The value of this object is equal to the VPI
                      value at the ATM interface associated with
                      the SVC VP cross-connect that is identified
                      by atmSvcVpCrossConnectHighIfIndex.
                      The VPI value cannot exceed the number
                      supported by the atmInterfaceMaxVpiBits
                      at the high ATM interface port."
                    ::= { atmSvcVpCrossConnectEntry 5 }

               atmSvcVpCrossConnectCreationTime OBJECT-TYPE
                    SYNTAX  TimeStamp
                    MAX-ACCESS  read-only
                    STATUS  current
                    DESCRIPTION
                     "The value of MIB II's sysUpTime object
                      at the time this bi-directional SVC VP
                      cross-connect was created.  If the current
                      state was entered prior to the last
                      re-initialization of the agent, then this
                      object contains a zero value."
                    ::= { atmSvcVpCrossConnectEntry 6 }

               atmSvcVpCrossConnectRowStatus OBJECT-TYPE
                    SYNTAX             RowStatus
                    MAX-ACCESS         read-create
                    STATUS             current
                    DESCRIPTION
                      "This object is used to delete rows in the
                      atmSvcVpCrossConnectTable."
                   ::= { atmSvcVpCrossConnectEntry 7 }







          Expires 11/96                                      [Page 28]




          draft        Supplemental ATM Management Objects    April 1996


              -- 2. ATM Virtual Channel (VC) Cross Connect Group

              -- This group contains configuration and state
              -- information of a bi-directional SVC VC cross-connect.

              -- This group is used to model a bi-directional
              -- point-to-point, point-to-multipoint or
              -- multipoint-to-multipoint SVC VC cross-connect.

              -- This table has read-only access and is used
              -- to monitor the cross-connects which connect
              -- the VCLs together in an ATM switch
              -- or network that belong to a VC connection. The
              -- atmSvcVcCrossConnectIndex is used to associate
              -- the related SVC VCLs that are cross-connected together.
              -- The atmSvcVcCrossConnectAdminStatus object
              -- has read-write access to allow for tear-down.


              --  The ATM VC Cross Connect Table

              atmSvcVcCrossConnectTable OBJECT-TYPE
                   SYNTAX  SEQUENCE OF AtmSvcVcCrossConnectEntry
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "The ATM SVC VC Cross Connect table.  A bi-
                     directional SVC VC cross-connect which
                     cross-connects two end points (i.e., VCLs)
                     is modeled as one entry in this table."
                   ::= { atm2MIBObjects 2 }


              atmSvcVcCrossConnectEntry OBJECT-TYPE
                   SYNTAX  AtmSvcVcCrossConnectEntry
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "An entry in the ATM SVC VC Cross Connect table.
                     This entry is used to model a bi-directional ATM
                     SVC VC cross-connect cross-connecting two end points."
                   INDEX { atmSvcVcCrossConnectIndex,
                           atmSvcVcCrossConnectLowIfIndex,
                           atmSvcVcCrossConnectLowVpi,
                           atmSvcVcCrossConnectLowVci,





          Expires 11/96                                      [Page 29]




          draft        Supplemental ATM Management Objects    April 1996


                           atmSvcVcCrossConnectHighIfIndex,
                           atmSvcVcCrossConnectHighVpi,
                           atmSvcVcCrossConnectHighVci }
                   ::= { atmSvcVcCrossConnectTable 1 }

              AtmSvcVcCrossConnectEntry ::= SEQUENCE {
                   atmSvcVcCrossConnectIndex          INTEGER,
                   atmSvcVcCrossConnectLowIfIndex     InterfaceIndex,
                   atmSvcVcCrossConnectLowVpi         INTEGER,
                   atmSvcVcCrossConnectLowVci         INTEGER,
                   atmSvcVcCrossConnectHighIfIndex    InterfaceIndex,
                   atmSvcVcCrossConnectHighVpi        INTEGER,
                   atmSvcVcCrossConnectHighVci        INTEGER,
                   atmSvcVcCrossConnectCreationTime   TimeStamp,
                   atmSvcVcCrossConnectRowStatus      RowStatus
                           }

              atmSvcVcCrossConnectIndex OBJECT-TYPE
                   SYNTAX  INTEGER (1..2147483647)
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "A unique value to identify this SVC VC cross-
                     connect."
                   ::= { atmSvcVcCrossConnectEntry 1 }

              atmSvcVcCrossConnectLowIfIndex OBJECT-TYPE
                   SYNTAX  InterfaceIndex
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "The value of this object is equal to MIB II's
                     ifIndex value of the ATM interface port for this
                     SVC VC cross-connect.  The term low implies
                     that this ATM interface has the numerically lower
                     ifIndex value than the other ATM interface
                     identified in the same atmSvcVcCrossConnectEntry."
                   ::= { atmSvcVcCrossConnectEntry 2 }

              atmSvcVcCrossConnectLowVpi OBJECT-TYPE
                   SYNTAX  INTEGER  (0..4095)
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "The value of this object is equal to the VPI





          Expires 11/96                                      [Page 30]




          draft        Supplemental ATM Management Objects    April 1996


                     value at the ATM interface
                     associated with the SVC VC cross-connect that is
                     identified by atmSvcVcCrossConnectLowIfIndex.
                     The VPI value cannot exceed the number
                     supported by the atmInterfaceMaxVpiBits
                     at the low ATM interface port."
                   ::= { atmSvcVcCrossConnectEntry 3 }

              atmSvcVcCrossConnectLowVci OBJECT-TYPE
                   SYNTAX  INTEGER  (0..65535)
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "The value of this object is equal to the VCI
                     value at the ATM interface
                     associated with this SVC VC cross-connect that is
                     identified by atmSvcVcCrossConnectLowIfIndex.
                     The VCI value cannot exceed the number
                     supported by the atmInterfaceMaxVciBits
                     at the low ATM interface port."
                   ::= { atmSvcVcCrossConnectEntry 4 }

              atmSvcVcCrossConnectHighIfIndex OBJECT-TYPE
                   SYNTAX  InterfaceIndex
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "The value of this object is equal to MIB II's
                     ifIndex value for the ATM interface port for
                     this SVC VC cross-connect.  The term high
                     implies that this SVC VC cross-connect
                     that this ATM interface has the numerically higher
                     ifIndex value than the other ATM interface
                     identified in the same atmSvcVcCrossConnectEntry."
                   ::= { atmSvcVcCrossConnectEntry 5 }

              atmSvcVcCrossConnectHighVpi OBJECT-TYPE
                   SYNTAX  INTEGER   (0..4095)
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "The value of this object is equal to the VPI
                     value at the ATM interface
                     associated with the SVC VC cross-connect that is
                     identified by atmSvcVcCrossConnectHighIfIndex.





          Expires 11/96                                      [Page 31]




          draft        Supplemental ATM Management Objects    April 1996


                     The VPI value cannot exceed
                     the number supported by the atmInterfaceMaxVpiBits
                     at the high ATM interface port."
                   ::= { atmSvcVcCrossConnectEntry 6 }

              atmSvcVcCrossConnectHighVci OBJECT-TYPE
                   SYNTAX  INTEGER   (0..65535)
                   MAX-ACCESS  not-accessible
                   STATUS  current
                   DESCRIPTION
                    "The value of this object is equal to the VCI
                     value at the ATM interface
                     associated with the SVC VC cross-connect that is
                     identified by atmSvcVcCrossConnectHighIfIndex.
                     The VCI value cannot exceed
                     the number supported by the atmInterfaceMaxVciBits
                     at the high ATM interface port."
                   ::= { atmSvcVcCrossConnectEntry 7 }

              atmSvcVcCrossConnectCreationTime OBJECT-TYPE
                   SYNTAX  TimeStamp
                   MAX-ACCESS  read-only
                   STATUS  current
                   DESCRIPTION
                    "The value of MIB II's sysUpTime object
                     at the time this bi-directional SVC VC
                     cross-connect was created.  If the current
                     state was entered prior to the last
                     re-initialization of the agent, then this
                     object contains a zero value."
                   ::= { atmSvcVcCrossConnectEntry 8 }

              atmSvcVcCrossConnectRowStatus OBJECT-TYPE
                   SYNTAX             RowStatus
                   MAX-ACCESS         read-create
                   STATUS             current
                   DESCRIPTION
                     "This object is used to create and delete rows in
                     the atmSvcVcCrossConnectTable."
                  ::= { atmSvcVcCrossConnectEntry 9 }

             -- ****************************************************
             -- ATM Interface Signalling Table
             --
             -- This table contains signalling entity configuration





          Expires 11/96                                      [Page 32]




          draft        Supplemental ATM Management Objects    April 1996


             -- and monitoring information
             --

             atmSigTable       OBJECT-TYPE
                  SYNTAX       SEQUENCE OF AtmSigEntry
                  MAX-ACCESS   not-accessible
                  STATUS       current
                  DESCRIPTION
                   "This table contains ATM local interface
                    configuration parameters, one entry per ATM
                    signalling interface."
                  ::= { atm2MIBObjects 3 }

             atmSigEntry         OBJECT-TYPE
                  SYNTAX         AtmSigEntry
                  MAX-ACCESS     not-accessible
                  STATUS         current
                  DESCRIPTION
                   "This list contains signalling configuration
                    parameters and state variables."
                  INDEX { ifIndex }
                  ::= { atmSigTable  1}

             AtmSigEntry    ::= SEQUENCE  {
             --
             --  Configuration information
             --
                  atmConfigSigType            AtmSignallingType,
                  atmActualSigType            AtmSignallingType,
                  atmConfigSigSide            INTEGER,
                  atmActualSigSide            INTEGER,
             --
             --  Monitoring information
             --
                  atmSigSSCOPConEvents        Counter32,
                  atmSigSSCOPErrdPdus         Counter32,
                  atmSigDetectSetupAttempts   Counter32,
                  atmSigEmittSetupAttempts    Counter32,
                  atmSigDetectUnavailRoutes         Counter32,
                  atmSigEmittUnavailRoutes         Counter32,
                  atmSigDetectUnavailResrcs         Counter32,
                  atmSigEmittUnavailResrcs         Counter32,
                  atmSigDetectCldPtyEvents          Counter32,
                  atmSigEmittCldPtyEvents          Counter32,
                  atmSigDetectMsgErrors             Counter32,





          Expires 11/96                                      [Page 33]




          draft        Supplemental ATM Management Objects    April 1996


                  atmSigEmittMsgErrors             Counter32,
                  atmSigDetectClgPtyEvents          Counter32,
                  atmSigEmittClgPtyEvents          Counter32,
                  atmSigDetectTimerExpireds         Counter32,
                  atmSigEmittTimerExpireds         Counter32,
                  atmSigDetectRestarts              Counter32,
                  atmSigEmittRestarts              Counter32,
                  atmSigInEstabls             Counter32,
                  atmSigOutEstabls            Counter32
                       }

             atmConfigSigType     OBJECT-TYPE
                  SYNTAX          AtmSignallingType
                  MAX-ACCESS    read-write
                  STATUS        current
                  DESCRIPTION
                    "The type of signalling that is configured for the
                    interface.  Setting this variable to a value of
                    'other' is not allowed."
                 DEFVAL { autoConfig }
                 ::= { atmSigEntry 1 }

            atmActualSigType     OBJECT-TYPE
                 SYNTAX          AtmSignallingType
                 MAX-ACCESS      read-only
                 STATUS          current
                 DESCRIPTION
                   "The type of signalling that is currently being used
                   on the interface.  This may reflect a manually
                   configured value for the signalling type, or may be
                   determined by other means such as auto-configuration.
                   A value of `autoConfig' indicates that auto-
                   configuration was requested but has not yet been
                   completed."
                ::= { atmSigEntry 2 }

           atmConfigSigSide     OBJECT-TYPE
                SYNTAX       INTEGER  {
                             other(1),
                             user(2),
                             network(3) }
                MAX-ACCESS   read-write
                STATUS       current
                DESCRIPTION
                  "The role of this signalling entity.  This value





          Expires 11/96                                      [Page 34]




          draft        Supplemental ATM Management Objects    April 1996


                  does not apply when atmConfigSigType is set
                  to `autoConfig', `atmfPnni1Dot0', or
                  `atmfBici2Dot0'."
               ::= { atmSigEntry 3}

          atmActualSigSide     OBJECT-TYPE
               SYNTAX       INTEGER  {
                            other(1),
                            user(2),
                            network(3),
                            symmetric(4) }
               MAX-ACCESS   read-only
               STATUS       current
               DESCRIPTION
                 "The actual role of this signalling entity."
               ::= { atmSigEntry 4}

          atmSigSSCOPConEvents   OBJECT-TYPE
               SYNTAX            Counter32
               MAX-ACCESS        read-only
               STATUS            current
               DESCRIPTION
                 "SSCOP Connection Events Counter.  This
                 counter counts the sum of the following errors:

                 1) SSCOP Connection Disconnect Counter

                 The abnormal occurrence of this event is
                 characterized by the expiry of Timer_NO_RESPONSE.
                 (This event is communicated to the layer management
                 with MAA-ERROR code P.  See ITU-T Q.2110 [13].)

                 2) SSCOP Connection Initiation Failure

                 This condition indicates the inability to establish
                 an SSCOP connection.  This event occurs whenever the
                 number of expiries of the connection control timer
                 (Timer_CC) exceeds the MaxCC or upon receipt of a
                 connection reject message BGREJ PDU.  (This event is
                 communicated to layer management with MAA-ERROR
                 code O.  See ITU-T Q.2110.)

                 3) SSCOP Connection Re-Establ/Resynch

                 This event occurs upon receipt of a BGN PDU or RESYNC





          Expires 11/96                                      [Page 35]




          draft        Supplemental ATM Management Objects    April 1996


                 PDU."
               ::= { atmSigEntry 5}

          atmSigSSCOPErrdPdus   OBJECT-TYPE
               SYNTAX           Counter32
               MAX-ACCESS       read-only
               STATUS           current
               DESCRIPTION
                 "SSCOP Errored PDUs Counter.  This counter counts the
                 sum of the following errors:

                 1) Invalid PDUs.
                    These are defined in SSCOP and consist of PDUs
                    with incorrect length (MAA-ERROR code U),
                    undefined PDU type code or not 32-bit aligned.

                 2) PDUs that result in MAA error codes and are
                    discarded
                    See Errors A-M and Q-T defined in ITU-T Q.2110 [13]."
               ::= { atmSigEntry 6 }

          atmSigDetectSetupAttempts    OBJECT-TYPE
               SYNTAX            Counter32
               MAX-ACCESS        read-only
               STATUS            current
               DESCRIPTION
                 "Call Setup Attempts Counter.  This counter counts
                 the number of call setup attempts(both successful
                 and unsuccessful) detected on this interface."
               ::= { atmSigEntry 7 }

          atmSigEmittSetupAttempts    OBJECT-TYPE
               SYNTAX            Counter32
               MAX-ACCESS        read-only
               STATUS            current
               DESCRIPTION
                 "Call Setup Attempts Counter.  This counter counts
                 the number of call setup attempts(both successful
                 and unsuccessful) transmitted on this interface."
               ::= { atmSigEntry 8 }

          atmSigDetectUnavailRoutes    OBJECT-TYPE
               SYNTAX            Counter32
               MAX-ACCESS        read-only
               STATUS            current





          Expires 11/96                                      [Page 36]




          draft        Supplemental ATM Management Objects    April 1996


               DESCRIPTION
                 "Number of Route Unavailability detected on this interface. This counter is
                 incremented when a RELEASE, RELEASE COMPLETE (only
                 when not preceded by a RELEASE mesg for the same
                 call), ADD PARTY REJECT, or STATUS message that
                 contains one of the following cause code values is
                 received (Note: These cause values
                 apply to both UNI3.0 and UNI3.1):










































          Expires 11/96                                      [Page 37]




          draft        Supplemental ATM Management Objects    April 1996


                 Cause Value            Meaning

                    1            unallocated (unassigned) number
                    2            no route to specified transit network
                    3            no route to destination
                    88           incompatible destination

                 NOTE:  For this counter, RELEASE COMPLETE
                 messages that are a reply to a previous RELEASE
                 message and contain the same cause value, are
                 redundant (for counting purposes) and should not
                 be counted."
               ::= { atmSigEntry 9 }

          atmSigEmittUnavailRoutes    OBJECT-TYPE
               SYNTAX            Counter32
               MAX-ACCESS        read-only
               STATUS            current
               DESCRIPTION
                 "Number of Route Unavailability transmitted from this interface. This counter is
                 incremented when a RELEASE, RELEASE COMPLETE (only
                 when not preceded by a RELEASE mesg for the same
                 call), ADD PARTY REJECT, or STATUS message that
                 contains one of the following cause code values is
                 transmitted (Note: These cause values
                 apply to both UNI3.0 and UNI3.1):
























          Expires 11/96                                      [Page 38]




          draft        Supplemental ATM Management Objects    April 1996


                 Cause Value            Meaning

                    1            unallocated (unassigned) number
                    2            no route to specified transit network
                    3            no route to destination
                    88           incompatible destination

                 NOTE:  For this counter, RELEASE COMPLETE
                 messages that are a reply to a previous RELEASE
                 message and contain the same cause value, are
                 redundant (for counting purposes) and should not
                 be counted."
               ::= { atmSigEntry 10 }

          atmSigDetectUnavailResrcs     OBJECT-TYPE
               SYNTAX             Counter32
               MAX-ACCESS         read-only
               STATUS             current
               DESCRIPTION
                 "Number of Resource Unavailability detected on this
                 interfrace.  This counter is incremented when a
                 RELEASE, RELEASE COMPLETE (only when not preceded by a
                 RELEASE mesg for the same call), ADD PARTY REJECT, or
                 STATUS message that contains one of the following cause
                 code values is received or transmitted (Note: These
                 cause values apply to both UNI3.0 and UNI3.1 unless
                 otherwise stated):

                 Cause Value          Meaning

                    35          requested VPCI/VCI not available
                    37          user cell rate not available (UNI3.1
                                only)
                    38          network out of order
                    41          temporary failure
                    45          no VPCI/VCI available
                    47          resource unavailable, unspecified
                    49          Quality of Service unavailable
                    51          user cell rate not available (UNI3.0
                                only)
                    58          bearer capability not presently
                                available
                    63          Service or option not available,
                                unspecified
                    92          too many pending add party requests





          Expires 11/96                                      [Page 39]




          draft        Supplemental ATM Management Objects    April 1996


                 NOTE:  For this counter, RELEASE COMPLETE messages that
                 are a reply to a previous RELEASE message and contain
                 the same cause value, are redundant (for counting
                 purposes) and should not be counted."

               ::= { atmSigEntry 11 }

          atmSigEmittUnavailResrcs     OBJECT-TYPE
               SYNTAX             Counter32
               MAX-ACCESS         read-only
               STATUS             current
               DESCRIPTION
                 "Number of Resource Unavailability transmitted from
                 this interfrace.  This counter is incremented when a
                 RELEASE, RELEASE COMPLETE (only when not preceded by a
                 RELEASE mesg for the same call), ADD PARTY REJECT, or
                 STATUS message that contains one of the following cause
                 code values is received or transmitted (Note: These
                 cause values apply to both UNI3.0 and UNI3.1 unless
                 otherwise stated):

                 Cause Value          Meaning

                    35          requested VPCI/VCI not available
                    37          user cell rate not available (UNI3.1
                                only)
                    38          network out of order
                    41          temporary failure
                    45          no VPCI/VCI available
                    47          resource unavailable, unspecified
                    49          Quality of Service unavailable
                    51          user cell rate not available (UNI3.0
                                only)
                    58          bearer capability not presently
                                available
                    63          Service or option not available,
                                unspecified
                    92          too many pending add party requests

                 NOTE:  For this counter, RELEASE COMPLETE messages that
                 are a reply to a previous RELEASE message and contain
                 the same cause value, are redundant (for counting
                 purposes) and should not be counted."

               ::= { atmSigEntry 12 }





          Expires 11/96                                      [Page 40]




          draft        Supplemental ATM Management Objects    April 1996


          atmSigDetectCldPtyEvents     OBJECT-TYPE
               SYNTAX               Counter32
               MAX-ACCESS           read-only
               STATUS               current
               DESCRIPTION
                 "Number of Called Party Responsible For Unsuccessful Call
                 detected on this interface. This counter is
                 incremented when a RELEASE, RELEASE COMPLETE (only
                 when not preceded by a RELEASE mesg for the same call),
                 ADD PARTY REJECT, or STATUS message that contains one
                 of the following cause code values is received or
                 transmitted (Note: These cause values apply to both
                 UNI3.0 and UNI3.1):

                 Cause Value         Meaning

                    17           user busy
                    18           no user responding
                    21           call rejected
                    22           number changed
                    23           user rejects all calls with calling
                                 line id restriction (CLIR)
                    27           destination out of order
                    31           normal, unspecified

                 NOTE:  For this counter, RELEASE COMPLETE
                 messages that are a reply to a previous RELEASE
                 message and contain the same cause value, are
                 redundant (for counting purposes) and should not
                 be counted.

                 Note: Cause Value #30 'response to STATUS ENQUIRY'
                 was not included in this memo since it did not apply
                 to a hard failure."
               ::= { atmSigEntry 13 }

          atmSigEmittCldPtyEvents     OBJECT-TYPE
               SYNTAX               Counter32
               MAX-ACCESS           read-only
               STATUS               current
               DESCRIPTION
                 "Number of Called Party Responsible For Unsuccessful Call
                 transmitted from this interface. This counter is
                 incremented when a RELEASE, RELEASE COMPLETE (only
                 when not preceded by a RELEASE mesg for the same call),





          Expires 11/96                                      [Page 41]




          draft        Supplemental ATM Management Objects    April 1996


                 ADD PARTY REJECT, or STATUS message that contains one
                 of the following cause code values is received or
                 transmitted (Note: These cause values apply to both
                 UNI3.0 and UNI3.1):

                 Cause Value         Meaning

                    17           user busy
                    18           no user responding
                    21           call rejected
                    22           number changed
                    23           user rejects all calls with calling
                                 line id restriction (CLIR)
                    27           destination out of order
                    31           normal, unspecified

                 NOTE:  For this counter, RELEASE COMPLETE
                 messages that are a reply to a previous RELEASE
                 message and contain the same cause value, are
                 redundant (for counting purposes) and should not
                 be counted.

                 Note: Cause Value #30 'response to STATUS ENQUIRY'
                 was not included in this memo since it did not apply
                 to a hard failure."
               ::= { atmSigEntry 14 }

          atmSigDetectMsgErrors    OBJECT-TYPE
               SYNTAX           Counter32
               MAX-ACCESS       read-only
               STATUS           current
               DESCRIPTION
                 "Number of Incorrect Messages detected on this interface.  The Incorrect
                 Messages Counter reflects any sort of incorrect
                 information in a message.  This includes:

                 - RELEASE, RELEASE COMPLETE, ADD PARTY REJECT,
                   and STATUS messages transmitted or
                   received, that contain any of the Cause values
                   listed below.

                 - Ignored messages.  These messages are dropped
                   because the message was so damaged that it could
                   not be further processed.  A list of dropped
                   messages is compiled below:





          Expires 11/96                                      [Page 42]




          draft        Supplemental ATM Management Objects    April 1996


                    1.  Message with invalid protocol discriminator

                    2.  Message with errors in the call reference I.E.
                         - Bits 5-8 of the first octet not equal to
                           '0000'
                         - Bits 1-4 of the first octet indicating a
                           length other than 3 octets
                         - RELEASE COMPLETE message received with a
                           call reference that does not relate to a
                           call active or in progress
                         - SETUP message received with call reference
                           flag incorrectly set to 1
                         - SETUP message received with a call
                           reference for a call that is already
                           active or in progress.

                    3.  Message too short


                 The following cause values are monitored by this
                 counter (Note: These cause values apply to both UNI3.0
                 and UNI3.1 unless otherwise stated):

                 Cause Value     Meaning

                    10     VPCI/VCI unacceptable (UNI3.0 only)
                    36     VPCI/VCI assignment failure (UNI3.1 only)
                    81     invalid call reference value
                    82     identified channel does not exist
                    89     invalid endpoint reference
                    96     mandatory information element is missing
                    97     message type non-existent or not
                           implemented
                    99     information element non-existent or not
                           implemented
                    100    invalid information element contents
                    101    message not compatible with call state
                    104    incorrect message length
                    111    protocol error, unspecified

                    NOTE:  For this counter, RELEASE COMPLETE
                    messages that are a reply to a previous RELEASE
                    message and contain the same cause value, are
                    redundant (for counting purposes) and should not
                    be counted."





          Expires 11/96                                      [Page 43]




          draft        Supplemental ATM Management Objects    April 1996


               ::= { atmSigEntry 15 }

          atmSigEmittMsgErrors    OBJECT-TYPE
               SYNTAX           Counter32
               MAX-ACCESS       read-only
               STATUS           current
               DESCRIPTION
                 "Number of Incorrect Messages detected on this interface.  The Incorrect
                 Messages Counter reflects any sort of incorrect
                 information in a message.  This includes:

                 - RELEASE, RELEASE COMPLETE, ADD PARTY REJECT,
                   and STATUS messages transmitted or
                   received, that contain any of the Cause values
                   listed below.

                 - Ignored messages.  These messages are dropped
                   because the message was so damaged that it could
                   not be further processed.  A list of dropped
                   messages is compiled below:

                    1.  Message with invalid protocol discriminator

                    2.  Message with errors in the call reference I.E.
                         - Bits 5-8 of the first octet not equal to
                           '0000'
                         - Bits 1-4 of the first octet indicating a
                           length other than 3 octets
                         - RELEASE COMPLETE message received with a
                           call reference that does not relate to a
                           call active or in progress
                         - SETUP message received with call reference
                           flag incorrectly set to 1
                         - SETUP message received with a call
                           reference for a call that is already
                           active or in progress.

                    3.  Message too short


                 The following cause values are monitored by this
                 counter (Note: These cause values apply to both UNI3.0
                 and UNI3.1 unless otherwise stated):

                 Cause Value     Meaning





          Expires 11/96                                      [Page 44]




          draft        Supplemental ATM Management Objects    April 1996


                    10     VPCI/VCI unacceptable (UNI3.0 only)
                    36     VPCI/VCI assignment failure (UNI3.1 only)
                    81     invalid call reference value
                    82     identified channel does not exist
                    89     invalid endpoint reference
                    96     mandatory information element is missing
                    97     message type non-existent or not
                           implemented
                    99     information element non-existent or not
                           implemented
                    100    invalid information element contents
                    101    message not compatible with call state
                    104    incorrect message length
                    111    protocol error, unspecified

                    NOTE:  For this counter, RELEASE COMPLETE
                    messages that are a reply to a previous RELEASE
                    message and contain the same cause value, are
                    redundant (for counting purposes) and should not
                    be counted."
               ::= { atmSigEntry 16 }

          atmSigDetectClgPtyEvents    OBJECT-TYPE
               SYNTAX           Counter32
               MAX-ACCESS       read-only
               STATUS           current
               DESCRIPTION
                 "Number of Calling Party Events detected on this interface.  This counter
                 monitors error events that occur due to the
                 originating user doing something wrong. This counter
                 is incremented when a RELEASE, RELEASE COMPLETE (only
                 when not preceded by a RELEASE mesg for the same call),
                 ADD PARTY REJECT, or STATUS message that contains one
                 of the following cause code values is received or
                 transmitted (Note: These cause values apply to both
                 UNI3.0 and UNI3.1):

                 Cause Value     Meaning

                    28     invalid number format (address incomplete)
                    43     access information discarded
                    57     bearer capability not authorized
                    65     bearer capability not implemented
                    73     unsupported combination of traffic
                           parameters





          Expires 11/96                                      [Page 45]




          draft        Supplemental ATM Management Objects    April 1996


                    78     AAL parameters cannot be supported (UNI3.1
                           only)
                    91     invalid transit network selection
                    93     AAL parameters cannot be supported (UNI3.0
                           only)

                    NOTE:  For this counter, RELEASE COMPLETE
                    messages that are a reply to a previous RELEASE
                    message and contain the same cause value, are
                    redundant (for counting purposes) and should not
                    be counted."
               ::= { atmSigEntry 17 }

          atmSigEmittClgPtyEvents    OBJECT-TYPE
               SYNTAX           Counter32
               MAX-ACCESS       read-only
               STATUS           current
               DESCRIPTION
                 "Number of Calling Party Events transmitted from this interface.  This counter
                 monitors error events that occur due to the
                 originating user doing something wrong. This counter
                 is incremented when a RELEASE, RELEASE COMPLETE (only
                 when not preceded by a RELEASE mesg for the same call),
                 ADD PARTY REJECT, or STATUS message that contains one
                 of the following cause code values is received or
                 transmitted (Note: These cause values apply to both
                 UNI3.0 and UNI3.1):

                 Cause Value     Meaning

                    28     invalid number format (address incomplete)
                    43     access information discarded
                    57     bearer capability not authorized
                    65     bearer capability not implemented
                    73     unsupported combination of traffic
                           parameters
                    78     AAL parameters cannot be supported (UNI3.1
                           only)
                    91     invalid transit network selection
                    93     AAL parameters cannot be supported (UNI3.0
                           only)

                    NOTE:  For this counter, RELEASE COMPLETE
                    messages that are a reply to a previous RELEASE
                    message and contain the same cause value, are





          Expires 11/96                                      [Page 46]




          draft        Supplemental ATM Management Objects    April 1996


                    redundant (for counting purposes) and should not
                    be counted."
               ::= { atmSigEntry 18 }

          atmSigDetectTimerExpireds    OBJECT-TYPE
               SYNTAX               Counter32
               MAX-ACCESS           read-only
               STATUS               current
               DESCRIPTION
                 "Number of Timer Expiries detected on this interface.  The Timer Expiries Counter
                 provides a count of network timer expiries, and to
                 some extent, host or switch timer expiries.  The
                 conditions for incrementing this counter are:
                    - Expiry of any network timer

                    - Receipt of a RELEASE or RELEASE COMPLETE
                      message with Cause #102, 'recovery on
                      timer expiry'.

                 NOTE:  For this counter, RELEASE COMPLETE messages
                 that are a reply to a previous RELEASE message and
                 contain the same cause value, are redundant (for
                 counting purposes) and should not be counted."
               ::= { atmSigEntry 19 }

          atmSigEmittTimerExpireds    OBJECT-TYPE
               SYNTAX               Counter32
               MAX-ACCESS           read-only
               STATUS               current
               DESCRIPTION
                 "Number of Timer Expiries transmitted from this interface.  The Timer Expiries Counter
                 provides a count of network timer expiries, and to
                 some extent, host or switch timer expiries.  The
                 conditions for incrementing this counter are:
                    - Expiry of any network timer

                    - Receipt of a RELEASE or RELEASE COMPLETE
                      message with Cause #102, 'recovery on
                      timer expiry'.

                 NOTE:  For this counter, RELEASE COMPLETE messages
                 that are a reply to a previous RELEASE message and
                 contain the same cause value, are redundant (for
                 counting purposes) and should not be counted."
               ::= { atmSigEntry 20 }





          Expires 11/96                                      [Page 47]




          draft        Supplemental ATM Management Objects    April 1996


          atmSigDetectRestarts    OBJECT-TYPE
               SYNTAX          Counter32
               MAX-ACCESS      read-only
               STATUS          current
               DESCRIPTION
                 "Number of Restart Activity errors detected on this interface.  The Restart Activity
                 Counter provides a count of host, switch, or
                 network restart activity.  This counter is
                 incremented when receiving or transmitting a
                 RESTART message."
               ::= { atmSigEntry 21 }

          atmSigEmittRestarts    OBJECT-TYPE
               SYNTAX          Counter32
               MAX-ACCESS      read-only
               STATUS          current
               DESCRIPTION
                 "Number of Restart Activity errors transmitted from this interface.  The Restart Activity
                 Counter provides a count of host, switch, or
                 network restart activity.  This counter is
                 incremented when receiving or transmitting a
                 RESTART message."
               ::= { atmSigEntry 22 }

          atmSigInEstabls    OBJECT-TYPE
               SYNTAX          Counter32
               MAX-ACCESS      read-only
               STATUS          current
               DESCRIPTION
                 "Number of SVC VCCs established at this signalling
                 entity for incoming connections."
                  ::= { atmSigEntry 23 }

          atmSigOutEstabls    OBJECT-TYPE
               SYNTAX          Counter32
               MAX-ACCESS      read-only
               STATUS          current
               DESCRIPTION
                 "Number of SVC VCCs established at this signalling
                 entity for outgoing connections."
                  ::= { atmSigEntry 24 }









          Expires 11/96                                      [Page 48]




          draft        Supplemental ATM Management Objects    April 1996


          -- 4. ATM Interface Signalling Support Table
          -- This table provides information to support
          -- the signalling process which is used to establish
          -- ATM Switched Virtual Connections (SVCs).

          atmSigSupportTable       OBJECT-TYPE
               SYNTAX       SEQUENCE OF AtmSigSupportEntry
               MAX-ACCESS   not-accessible
               STATUS       current
               DESCRIPTION
                "This table contains ATM local interface
                 configuration parameters, one entry per ATM
                 signalling interface."
               ::= { atm2MIBObjects 4 }

          atmSigSupportEntry         OBJECT-TYPE
               SYNTAX         AtmSigSupportEntry
               MAX-ACCESS     not-accessible
               STATUS         current
               DESCRIPTION
                "This list contains signalling configuration
                 parameters and state variables."
               INDEX { ifIndex }
               ::= { atmSigSupportTable  1}

          AtmSigSupportEntry    ::= SEQUENCE  {
               atmSigSupportClgPtyNumDel   INTEGER,
               atmSigSupportClgPtySubAddr  INTEGER,
               atmSigSupportCldPtySubAddr  INTEGER,
               atmSigSupportHiLyrInfo      INTEGER,
               atmSigSupportLoLyrInfo      INTEGER,
               atmSigSupportRepeatInd      INTEGER,
               atmSigSupportAALInfo        INTEGER,
               atmSigSupportPrefCarrier    OCTET STRING
                    }

          atmSigSupportClgPtyNumDel     OBJECT-TYPE
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether the Calling Party Number
                 Information Element is transferred to the called party
                 address.  The value of this object can be:
                   - enabled(1)  This Information Element is transferred





          Expires 11/96                                      [Page 49]




          draft        Supplemental ATM Management Objects    April 1996


                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               DEFVAL        { enabled }
               ::= { atmSigSupportEntry 1 }

          atmSigSupportClgPtySubAddr   OBJECT-TYPE
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept and transfer
                 the Calling Party Subaddress Information Element from
                 the calling party to the called party.  Calling party
                 subaddress information shall only be transferred to the
                 called party if calling party number delivery is
                 enabled (i.e., atmSigSupportClgPtyNumDel =
                 'enabled(1)'.  The value of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               DEFVAL        { enabled }
               ::= { atmSigSupportEntry 2 }

          atmSigSupportCldPtySubAddr    OBJECT-TYPE
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and
                 deliver the Called Party Subaddress Information Element
                 from the calling party to the called party.  The value
                 of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               DEFVAL        { enabled }
               ::= { atmSigSupportEntry 3 }

          atmSigSupportHiLyrInfo     OBJECT-TYPE





          Expires 11/96                                      [Page 50]




          draft        Supplemental ATM Management Objects    April 1996


               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and
                 deliver the Broadband High Layer Information Element
                 from the calling party to the called party.  The value
                 of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               DEFVAL        { enabled }
               ::= { atmSigSupportEntry 4 }

          atmSigSupportLoLyrInfo     OBJECT-TYPE
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and
                 deliver the Broadband Low Layer Information Element
                 from the calling party to the called party.  The value
                 of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               DEFVAL        { enabled }
               ::= { atmSigSupportEntry 5 }

          atmSigSupportRepeatInd      OBJECT-TYPE
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and
                 deliver the Broadband Repeat Indicator with two or
                 three instances of the Broadband Low Layer Information
                 Element for low layer information selection from the
                 calling party to the called party.  This object shall
                 only be transferred if atmSigSupportLoLyrInfo =
                 'enabled(1)'.  The value of this object can be:





          Expires 11/96                                      [Page 51]




          draft        Supplemental ATM Management Objects    April 1996


                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               DEFVAL        { enabled }
               ::= { atmSigSupportEntry 6 }

          atmSigSupportAALInfo     OBJECT-TYPE
               SYNTAX        INTEGER  { enabled(1), disabled(2) }
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This object indicates whether to accept, transfer, and
                 deliver the ATM Adaptation Layer Parameters Information
                 Element from the calling party to the called party.
                 The value of this object can be:
                   - enabled(1)  This Information Element is transferred
                                 to the called party

                   - disabled(2) This Information Element is NOT
                                 transferred to the called party."
               DEFVAL        { enabled }
               ::= { atmSigSupportEntry 7 }

          atmSigSupportPrefCarrier     OBJECT-TYPE
               SYNTAX        OCTET STRING
               MAX-ACCESS    read-write
               STATUS        current
               DESCRIPTION
                 "This parameter identifies the carrier to which
                 intercarrier calls originated from this interface are
                 routed when transit network selection information is
                 not provided by the calling party.  If a Carrier
                 Identification Code (CIC) is used the parameter shall
                 contain the CIC.  For three-digit CICs, the first octet
                 shall be '0' and the CIC is contained in the three
                 following octets.  If the preferred carrier feature is
                 not supported the value is a zero-length string."
               ::= { atmSigSupportEntry 8 }


          -- 5. ATM Signalling Descriptor Parameter Table
          -- This table contains objects to provide signalling
          -- capabilities of VCLs.





          Expires 11/96                                      [Page 52]




          draft        Supplemental ATM Management Objects    April 1996


              atmSigDescrParamTable     OBJECT-TYPE
                  SYNTAX       SEQUENCE OF AtmSigDescrParamEntry
                  MAX-ACCESS   not-accessible
                  STATUS       current
                  DESCRIPTION
                      "A table contains signalling capabilities of VCLs
                      except the Traffic Descriptor.  Traffic
                      descriptors are described in the
                      atmTrafficDescrParamTable."
                  REFERENCE
                      "ATM Forum's ATM User-Network Interface
                      Specification, Version 3.0, Section 5.4.5 Variable
                      Length Information Elements."
                  ::= { atm2MIBObjects 5 }

              atmSigDescrParamEntry        OBJECT-TYPE
                  SYNTAX        AtmSigDescrParamEntry
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "Each entry in this table represents a set of
                      signalling capabilities that can be applied to a
                      VCL. There is no requirement for unique entries,
                      except that the index must be unique.  Objects
                      atmSigDescrParamRowStatus is required during
                      creation."
                  INDEX { atmSigDescrParamIndex }
                  ::= { atmSigDescrParamTable 1 }

              AtmSigDescrParamEntry ::=
                  SEQUENCE {
                      atmSigDescrParamIndex       AtmSigDescrParamIndex,
                      atmSigDescrParamAalType     INTEGER,
                      atmSigDescrParamAalMode     INTEGER,
                      atmSigDescrParamAalSscsType INTEGER,
                      atmSigDescrParamBhliType    INTEGER,
                      atmSigDescrParamBhliInfo    OCTET STRING,
                      atmSigDescrParamBbcConnConf INTEGER,
                      atmSigDescrParamBlliLayer2  INTEGER,
                      atmSigDescrParamBlliLayer3  INTEGER,
                      atmSigDescrParamBlliPktSize INTEGER,
                      atmSigDescrParamBlliSnapId  INTEGER,
                      atmSigDescrParamBlliOuiPid  OCTET STRING,
                      atmSigDescrParamRowStatus   RowStatus
                  }





          Expires 11/96                                      [Page 53]




          draft        Supplemental ATM Management Objects    April 1996


              atmSigDescrParamIndex OBJECT-TYPE
                  SYNTAX        AtmSigDescrParamIndex
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "The value of this object is used by the
                      atmVclExtTable to identify a row in this table."
                  ::= { atmSigDescrParamEntry 1 }

               atmSigDescrParamAalType OBJECT-TYPE
                   SYNTAX       INTEGER {
                      other(1),      -- not defined
                      aal1(2),       -- AAL type 1
                      aal34(3),      -- AAL type 3/4
                      aal5(4),       -- AAL type 5
                      userDefined(5) -- User-Defined AAL
                      }
                   MAX-ACCESS   read-create
                   STATUS       current
                   DESCRIPTION
                      "The AAL type. The value of this object is set to
                      other(1) when not defined."
                  DEFVAL { other }
                  ::= { atmSigDescrParamEntry 2 }

               atmSigDescrParamAalMode OBJECT-TYPE
                   SYNTAX     INTEGER {
                      other(1),       -- not defined
                      msg(2),         -- Message mode
                      stream(3)       -- Streaming mode
                      }
                   MAX-ACCESS read-create
                   STATUS     current
                   DESCRIPTION
                      "The AAL mode.  The value of this object is
                      other(1) when atmSigDescrParamAalType is aal1(2).
                      Values msg(2) and stream(3) are only applicable
                      when atmSigDescrParamAalType is set to aal34(3) or
                      aal5(4).  This object is applicable to UNI 3.0
                      only."
                   DEFVAL { other }
                   ::= { atmSigDescrParamEntry 3 }

               atmSigDescrParamAalSscsType OBJECT-TYPE
                   SYNTAX     INTEGER {





          Expires 11/96                                      [Page 54]




          draft        Supplemental ATM Management Objects    April 1996


                      other(1),       -- other, or not used
                      assured(2),     -- Data SSCS based on SSCOP
                                      -- assured operation
                      nonassured(3),  -- Data SSCS based on SSCOP
                                      -- non-assured operation
                      frameRelay(4)   -- frame relay SSCS
                      }
                   MAX-ACCESS read-create
                   STATUS     current
                   DESCRIPTION
                      "The SSCS type used by this entry."
                   DEFVAL { other }
                   ::= { atmSigDescrParamEntry 4 }

                atmSigDescrParamBhliType OBJECT-TYPE
                   SYNTAX      INTEGER {
                      other(1),         -- not defined
                      iso(2),           -- ISO
                      user(3),          -- User specific
                      hiProfile(4),     -- Higher layer profile
                                        -- this enum applicable to
                                        -- UNI 3.0 only
                      vendorSpecific(5) -- Vender specific
                                        -- application identifier
                      }
                   MAX-ACCESS  read-create
                   STATUS      current
                   DESCRIPTION
                      "The Broadband high layer type."
                   DEFVAL { other }
                   ::= { atmSigDescrParamEntry 5 }

                atmSigDescrParamBhliInfo OBJECT-TYPE
                   SYNTAX     OCTET STRING (SIZE(0..7))
                   MAX-ACCESS read-create
                   STATUS     current
                   DESCRIPTION
                      "The Broadband high layer information.  When
                      atmSigDescrParamBhliType is set to iso(2), the
                      value of this object is a zero length string.
                      When atmSigDescrParamBhliType is set to
                      hiProfile(4), the value of this object is a length
                      of 4 octet string containing user to user profile
                      identifier.  When atmSigDescrParamBhliType is set
                      to    vendorSpecific(4), the value of this object





          Expires 11/96                                      [Page 55]




          draft        Supplemental ATM Management Objects    April 1996


                      is a length of 7 octet string.  The most
                      significant 3 octets consist of a globally-
                      administered OUI, the least significant 4 octets
                      are the vender administered application OUI."
                   DEFVAL { ''H }
                   ::= { atmSigDescrParamEntry 6 }

                atmSigDescrParamBbcConnConf OBJECT-TYPE
                   SYNTAX     INTEGER {
                       ptp(1),   -- point-to-point
                       ptmp(2)   -- point-to-multipoint
                       }
                   MAX-ACCESS read-create
                   STATUS     current
                   DESCRIPTION
                      "The Broadband bearer capability user plane
                      connection configuration parameter."
                   ::= { atmSigDescrParamEntry 10 }

                atmSigDescrParamBlliLayer2 OBJECT-TYPE
                    SYNTAX     INTEGER {
                       other(1),        -- not specified
                       iso1745(2),      -- Basic mode ISO 1745
                       q921(3),         -- CCITT Recommendation Q.921
                       x25linklayer(4), -- CCITT Recommendation X.25
                                        -- Link Layer
                       x25multilink(5), -- CCITT Recommendation X.25
                                        -- Multilink
                       lapb(6),         -- Extended LAPB; for half
                                        -- duplex operation
                       hdlcArm(7),      -- HDLC ARM (ISO 4335)
                       hdlcNrm(8),      -- HDLC NRM (ISO 4335)
                       hdlcAbm(9),      -- HDLC ABM (ISO 4335)
                       iso88022(10),    -- LAN logical link control
                                        -- (ISO 8802/2)
                       x75slp(11),      -- CCITT Recommendation X.75,
                                        -- single link
                                        -- procedure (SLP)
                       q922(12),        -- CCITT Recommendation Q.922
                       userDef(13),     -- User specified
                       iso7776(14)      -- ISO 7776 DTE-DTE operation
                       }
                    MAX-ACCESS read-create
                    STATUS     current
                    DESCRIPTION





          Expires 11/96                                      [Page 56]




          draft        Supplemental ATM Management Objects    April 1996


                      "The Broadband low layer information, protocol
                      type of layer 2.  The value of this object is
                      other(1) if layer 2 protocol is not used."
                    DEFVAL { other }
                    ::= { atmSigDescrParamEntry 12 }

                atmSigDescrParamBlliLayer3 OBJECT-TYPE
                    SYNTAX     INTEGER {
                       other(1),       -- not specified
                       x25pkt(2),      -- CCITT Recommendation X.25
                                       -- packet layer
                       isoiec8208(3),  -- ISO/IEC 8208 (X.25 packet
                                       -- level protocol for data
                                       -- terminal equipment)
                       x223iso8878(4), -- X.223/ISO 8878
                       isoiec8473(5),  -- ISO/IEC 8473 OSI
                                       -- connectionless
                                       -- mode protocol
                       t70(6),         -- CCITT Recommendation T.70
                                       -- minimum
                                       -- network layer
                       tr9577(7),      -- ISO/IEC TR 9577 Protocol
                                       -- Identification in the
                                       -- network layer
                       userDef(8)      -- user specified
                       }
                    MAX-ACCESS read-create
                    STATUS     current
                    DESCRIPTION
                      "The Broadband low layer information, protocol
                      type of layer 3.  The value of this object is
                      other(1) if layer 3 protocol is not used."
                    DEFVAL { other }
                    ::= { atmSigDescrParamEntry 13 }

                atmSigDescrParamBlliPktSize OBJECT-TYPE
                    SYNTAX     INTEGER {
                       other(1),        -- not used
                       s16(2),          -- 16 octets
                       s32(3),          -- 32 octets
                       s64(4),          -- 64 octets
                       s128(5),         -- 128 octets
                       s256(6),         -- 256 octets
                       s512(7),         -- 512 octets
                       s1024(8),        -- 1028 octets





          Expires 11/96                                      [Page 57]




          draft        Supplemental ATM Management Objects    April 1996


                       s2048(9),        -- 2048 octets
                       s4096(10)        -- 4096 octets
                    }
                    MAX-ACCESS read-create
                    STATUS     current
                    DESCRIPTION
                      "The default packet size defined in B-LLI."
                    DEFVAL { other }
                    ::= { atmSigDescrParamEntry 14 }

                atmSigDescrParamBlliSnapId OBJECT-TYPE
                    SYNTAX     INTEGER {
                       other(1),  -- not used
                       true(2),   -- SNAP ID is 1
                       false(3)   -- SNAP ID is 0
                    }
                    MAX-ACCESS read-create
                    STATUS     current
                    DESCRIPTION
                      "The SNAP ID used for Broadband low layer protocol
                      layer 3.  The value of this object is other(1) if
                      atmSigDescrParamBlliLayer3 is set to other(1)."
                    DEFVAL { other }
                    ::= { atmSigDescrParamEntry 15 }

                atmSigDescrParamBlliOuiPid OBJECT-TYPE
                    SYNTAX      OCTET STRING (SIZE(0..5))
                    MAX-ACCESS  read-create
                    STATUS      current
                    DESCRIPTION
                      "The OUI/PID encoding for Broadband low layer
                      protocol layer 3.  The value of this object is a
                      zero length string if atmSigDescrParamBlliLayer3
                      is set to none(1).  When used, it is always 5
                      octets with the most significant octet as the OUI
                      Octet 1 and the least significant octet as the PID
                      Octet 2."
                    DEFVAL { ''H }
                    ::= { atmSigDescrParamEntry 16 }

                 atmSigDescrParamRowStatus OBJECT-TYPE
                     SYNTAX      RowStatus
                     MAX-ACCESS  read-create
                     STATUS      current
                     DESCRIPTION





          Expires 11/96                                      [Page 58]




          draft        Supplemental ATM Management Objects    April 1996


                      "This object is used to create and delete rows in
                      the atmSigDescrParamTable. Writable values are:
                      -'createAndWait' which allows manager to create an
                      entry first and fill in the parameters later.
                      -'active' which allows manager to set the entry to
                      be available to users.  -'destroy' which allows
                      manager to delete an entry from this table.
                      Readable values are: -'createAndWait' which means
                      the entry is created but not available to be used.
                      -'active' means it is active and ready to be used
                      by agent or manager."
                    ::= { atmSigDescrParamEntry 17 }






































          Expires 11/96                                      [Page 59]




          draft        Supplemental ATM Management Objects    April 1996


          -- 6. ATM Interface Administrative Address Table
          -- This table contains a list of the valid
          -- addresses for a UNI in the case of both PVCs and SVCs.
          -- Implementation of this table is only mandatory for thoes
          -- PVCs that use the ATM address.

          atmIfAdminAddrTable    OBJECT-TYPE
               SYNTAX       SEQUENCE OF AtmIfAdminAddrEntry
               MAX-ACCESS   not-accessible
               STATUS       current
               DESCRIPTION
                 "This table contains an address list on a per interface
                 basis.  This table only applies to switches or networks
                 and only for interfaces that have more than one address
                 assigned."
               ::= { atm2MIBObjects 6 }

          atmIfAdminAddrEntry    OBJECT-TYPE
               SYNTAX            AtmIfAdminAddrEntry
               MAX-ACCESS        not-accessible
               STATUS            current
               DESCRIPTION
                 "An entry in the atmIfAdminAddrTable."
               INDEX { ifIndex, atmIfAdminAddrAddress }
               ::= { atmIfAdminAddrTable  1}

          AtmIfAdminAddrEntry    ::= SEQUENCE  {
               atmIfAdminAddrAddress        AtmAddr,
               atmIfAdminAddrAddressSource  INTEGER,
               atmIfAdminAddrRowStatus      RowStatus
                    }

          atmIfAdminAddrAddress   OBJECT-TYPE
               SYNTAX             AtmAddr
               MAX-ACCESS         not-accessible
               STATUS             current
               DESCRIPTION
                 "A valid address for a given switch or network
                 interface."
               ::= { atmIfAdminAddrEntry 1}

          atmIfAdminAddrAddressSource  OBJECT-TYPE
               SYNTAX                  INTEGER  {
                  other(1),
                  static(2),





          Expires 11/96                                      [Page 60]




          draft        Supplemental ATM Management Objects    April 1996


                  dynamic(3)
                  }
               MAX-ACCESS              read-only
               STATUS                  current
               DESCRIPTION
                 "The type of address source for a given ATM Address.
                 i.e. Value dynamic(3) is used when ILMI is used."
               ::= { atmIfAdminAddrEntry 2}


          atmIfAdminAddrRowStatus OBJECT-TYPE
               SYNTAX             RowStatus
               MAX-ACCESS         read-create
               STATUS             current
               DESCRIPTION
                 "This object is used to create and delete rows in the
                 atmIfAdminAddrTable."
               ::= { atmIfAdminAddrEntry 3}

          -- 7. ATM VPI/VCI to Address Mapping Table

              atmVclAddrBindTable  OBJECT-TYPE
                  SYNTAX         SEQUENCE OF AtmVclAddrBindEntry
                  MAX-ACCESS     not-accessible
                  STATUS         current
                  DESCRIPTION
                      "This table provides a mapping between the
                      atmVclTable and the ATM local/remote address. This
                      table can be used to retrieve the local and remote
                      ATM address pair for a given Vcl. Note that there
                      can be more than one pair of local and remote ATM
                      addresses for a VCL in a point to multi-point
                      call."
                  ::= { atm2MIBObjects 7 }

              atmVclAddrBindEntry    OBJECT-TYPE
                  SYNTAX        AtmVclAddrBindEntry
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "Each entry in this table represents a binding
                      between a VCL and an ATM address associated with
                      this call. This ATM address can be either the
                      called party address or the calling party address.
                      There can be more than one pair of local/remote





          Expires 11/96                                      [Page 61]




          draft        Supplemental ATM Management Objects    April 1996


                      ATM addresses associated with the VCL entry for
                      point to multi-point calls. Objects
                      atmVclAddrBindAddr, atmVclAddrBindType, and
                      atmVclAddrBindRowStatus are required during row
                      creation."
                  INDEX  { ifIndex, atmVclVpi, atmVclVci,
                           atmVclAddrBindAddr }
                  ::= { atmVclAddrBindTable 1 }

              AtmVclAddrBindEntry ::=
                  SEQUENCE {
                      atmVclAddrBindAddr       AtmAddr,
                      atmVclAddrBindType       INTEGER,
                      atmVclAddrBindRowStatus  RowStatus
                  }


              atmVclAddrBindAddr     OBJECT-TYPE
                  SYNTAX        AtmAddr
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "An ATM address on one end of the VCL.  For SVCs,
                      the agent supplies the value of this object at
                      creation time.  For PVCs, manager can supply the
                      value of this object during or after the PVC
                      creation."
                  ::= { atmVclAddrBindEntry 1 }

             atmVclAddrBindType     OBJECT-TYPE
                 SYNTAX       INTEGER { local(1), remote(2) }
                 MAX-ACCESS   read-create
                 STATUS       current
                 DESCRIPTION
                      "The type of ATM Address represented by the object
                      atmVclAddrBindAddr.  Choices are either local
                      address or remote address."
                  ::= { atmVclAddrBindEntry 2 }

             atmVclAddrBindRowStatus     OBJECT-TYPE
                 SYNTAX       RowStatus
                 MAX-ACCESS   read-create
                 STATUS       current
                 DESCRIPTION
                      "This object is used to create or destroy an entry





          Expires 11/96                                      [Page 62]




          draft        Supplemental ATM Management Objects    April 1996


                      from this table.  Writable values are and
                      'destroy' - used to delete an entry from this
                      table.  Readable values are 'active' - the entry
                      is active."
                  ::= { atmVclAddrBindEntry 3 }


          -- 8. ATM Address to VPI/VCI Mapping Table
          -- This table provides an alternative way to access
          -- a row in the atmVclAddrBindTable by using
          -- an ATM address as an index, instead of
          -- the ifIndex

              atmAddrVclTable   OBJECT-TYPE
                  SYNTAX        SEQUENCE OF AtmAddrVclEntry
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "This table provides an alternative way to
                      retrieve the atmVclTable.  This table can be used
                      to retrieve the indexing to the atmVclTable by an
                      ATM address."
                  ::= { atm2MIBObjects 8 }

              atmAddrVclEntry    OBJECT-TYPE
                  SYNTAX         AtmAddrVclEntry
                  MAX-ACCESS     not-accessible
                  STATUS         current
                  DESCRIPTION
                      "Each entry in this table represents an entry in
                      the atmVclTable of the ATM MIB [1] by it's ATM
                      address.  The ATM address is either the local or
                      remote ATM address of the call.  Entries in this
                      table are read only.  They show up when entries
                      are created in the atmVclAddrBindTable."
                  INDEX { atmVclAddrBindAddr, atmAddrVclAtmIfIndex,
                          atmAddrVclVpi, atmAddrVclVci }
                  ::= { atmAddrVclTable 1 }

              AtmAddrVclEntry ::=
                  SEQUENCE {
                      atmAddrVclAtmIfIndex  InterfaceIndex,
                      atmAddrVclVpi         INTEGER,
                      atmAddrVclVci         INTEGER,
                      atmAddrVclAddrType    INTEGER





          Expires 11/96                                      [Page 63]




          draft        Supplemental ATM Management Objects    April 1996


                      }

              atmAddrVclAtmIfIndex     OBJECT-TYPE
                  SYNTAX               InterfaceIndex
                  MAX-ACCESS           not-accessible
                  STATUS               current
                  DESCRIPTION
                      "The interface index of the ATM interface where
                      this VCL pertains to.  This object combined with
                      the atmAddrVclVpi and atmAddrVclVci objects serves
                      as an index to the atmVclTable."
                  ::= { atmAddrVclEntry 1 }

              atmAddrVclVpi     OBJECT-TYPE
                  SYNTAX        INTEGER (0..4095)
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "The VPI value of the VCL.  This object combined
                      with the atmAddrVclAtmIfIndex and atmAddrVclVci
                      objects serves as an index to the atmVclTable."
                  ::= { atmAddrVclEntry 2 }

              atmAddrVclVci     OBJECT-TYPE
                  SYNTAX        INTEGER (0..65535)
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "The VCI value of the VCL.  This object combined
                      with the atmAddrVclAtmIfIndex and atmAddrVclVpi
                      objects serves as an index to the atmVclTable."
                  ::= { atmAddrVclEntry 3 }

             atmAddrVclAddrType     OBJECT-TYPE
                 SYNTAX       INTEGER { local(1), remote(2) }
                 MAX-ACCESS   read-only
                 STATUS       current
                 DESCRIPTION
                      "The type of ATM Address represented by the object
                      atmVclAddrBindAddr.  Choices are either local
                      address or remote address."
                  ::= { atmAddrVclEntry 4 }


          -- 9. ATM VPL Statistics Table





          Expires 11/96                                      [Page 64]




          draft        Supplemental ATM Management Objects    April 1996


              atmVplStatTable   OBJECT-TYPE
                  SYNTAX        SEQUENCE OF AtmVplStatEntry
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "This table contains all statistic counters per
                      VPL.  It is used to monitor the usage of the VPL
                      in terms of incoming cells and outgoing cells."
                  ::= { atm2MIBObjects 9 }

              atmVplStatEntry    OBJECT-TYPE
                  SYNTAX         AtmVplStatEntry
                  MAX-ACCESS     not-accessible
                  STATUS         current
                  DESCRIPTION
                      "Each entry in this table represents a VPL."
                  INDEX { ifIndex, atmVplVpi }
                  ::= { atmVplStatTable 1 }

              AtmVplStatEntry ::=
                  SEQUENCE {
                      atmVplStatTotalCellIns Counter32,
                      atmVplStatClp0CellIns Counter32,
                      atmVplStatTotalDiscards Counter32,
                      atmVplStatClp0Discards Counter32,
                      atmVplStatTotalCellOuts Counter32,
                      atmVplStatClp0CellOuts Counter32,
                      atmVplStatTaggedOuts Counter32
              }

              atmVplStatTotalCellIns OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells received by
                      this VPL including both CLP=0 and CLP=1 cells.
                      The cells are counted prior to the application of
                      the traffic policing."
                  ::= { atmVplStatEntry 1 }

              atmVplStatClp0CellIns OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current





          Expires 11/96                                      [Page 65]




          draft        Supplemental ATM Management Objects    April 1996


                  DESCRIPTION
                      "The number of valid ATM cells received by this
                      VPL with CLP=0.  The cells are counted prior to
                      the application of the traffic policing."
                  ::= { atmVplStatEntry 2 }

              atmVplStatTotalDiscards OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells discarded by
                      the traffic policing entity. This includes cells
                      orginally received with CLP=0 and CLP=1."
                  ::= { atmVplStatEntry 3 }

              atmVplStatClp0Discards OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells received with
                      CLP=0 an  discarded by the traffic policing
                      entity."
                  ::= { atmVplStatEntry 4 }

              atmVplStatTotalCellOuts OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells transmitted
                      by this VPL.  This includes both CLP=0 and CLP=1
                      cells."
                  ::= { atmVplStatEntry 5 }

              atmVplStatClp0CellOuts OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells transmitted
                      with CLP=0 by this VPL."
                  ::= { atmVplStatEntry 6 }






          Expires 11/96                                      [Page 66]




          draft        Supplemental ATM Management Objects    April 1996


              atmVplStatTaggedOuts OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells tagged by the
                      traffic policing entity from CLP=0 to CLP=1 and
                      transmitted by this VPL."
                  ::= { atmVplStatEntry 7 }



          -- 10. ATM Logical Port Configuration Table


              atmVplLogicalPortTable OBJECT-TYPE
                  SYNTAX           SEQUENCE OF AtmVplLogicalPortEntry
                  MAX-ACCESS       not-accessible
                  STATUS           current
                  DESCRIPTION
                      "Indicates whether the VPL is an ATM Logical Port
                      interface (ifType=80)."
                  ::= { atm2MIBObjects 10 }


              atmVplLogicalPortEntry OBJECT-TYPE
                  SYNTAX  AtmVplLogicalPortEntry
                  MAX-ACCESS  not-accessible
                  STATUS  current
                  DESCRIPTION
                      "An entry with information about the Atm Logical
                      Port interface."
                  AUGMENTS { atmVplEntry }
                  ::= { atmVplLogicalPortTable 1 }


              AtmVplLogicalPortEntry ::=
                  SEQUENCE {
                      atmVplLogicalPortDef         INTEGER,
                      atmVplLogicalPortIndex       InterfaceIndex
                      }


              atmVplLogicalPortDef   OBJECT-TYPE
                  SYNTAX  INTEGER {





          Expires 11/96                                      [Page 67]




          draft        Supplemental ATM Management Objects    April 1996


                                  notLogicalIf(1),
                                  isLogicalIf(2)
                                  }
                  MAX-ACCESS  read-create
                  STATUS  current
                  DESCRIPTION
                      "Indicates whether the VPC at this VPL interface
                      is an Atm Logical Port interface."
                  DEFVAL { notLogicalIf }
                  ::= { atmVplLogicalPortEntry 1 }


              atmVplLogicalPortIndex OBJECT-TYPE
                  SYNTAX  InterfaceIndex
                  MAX-ACCESS  read-only
                  STATUS  current
                  DESCRIPTION
                      "The ifTable index of the Atm logical port
                      interface associated with this VPL. Only valid if
                      the value of atmVplLogicalPortDef is isLogicalIf,
                      and the VPL row is active."
                  ::= { atmVplLogicalPortEntry 2 }




























          Expires 11/96                                      [Page 68]




          draft        Supplemental ATM Management Objects    April 1996


          -- 12. ATM VCL Statistics Table

              atmVclStatTable   OBJECT-TYPE
                  SYNTAX        SEQUENCE OF AtmVclStatEntry
                  MAX-ACCESS    not-accessible
                  STATUS        current
                  DESCRIPTION
                      "This table contains all statistic counters per
                      VCL.  It is used to monitor the usage of the VCL
                      in terms of incoming cells and outgoing cells."
                  ::= { atm2MIBObjects 11 }

              atmVclStatEntry    OBJECT-TYPE
                  SYNTAX         AtmVclStatEntry
                  MAX-ACCESS     not-accessible
                  STATUS         current
                  DESCRIPTION
                      "Each entry in this table represents a VCL."
                  INDEX { ifIndex, atmVclVpi, atmVclVci }
                  ::= { atmVclStatTable 1 }

              AtmVclStatEntry ::=
                  SEQUENCE {
                      atmVclStatTotalCellIns Counter32,
                      atmVclStatClp0CellIns Counter32,
                      atmVclStatTotalDiscards Counter32,
                      atmVclStatClp0Discards Counter32,
                      atmVclStatTotalCellOuts Counter32,
                      atmVclStatClp0CellOuts Counter32,
                      atmVclStatTaggedOuts Counter32
                  }

              atmVclStatTotalCellIns OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells received by
                      this VCL including both CLP=0 and CLP=1 cells.
                      The cells are counted prior to the application of
                      the traffic policing."
                  ::= { atmVclStatEntry 1 }

              atmVclStatClp0CellIns OBJECT-TYPE
                  SYNTAX        Counter32





          Expires 11/96                                      [Page 69]




          draft        Supplemental ATM Management Objects    April 1996


                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The number of valid ATM cells received by this
                      VCL with CLP=0.  The cells are counted prior to
                      the application of the traffic policing."
                  ::= { atmVclStatEntry 2 }

              atmVclStatTotalDiscards OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells discarded by
                      the traffic policing entity. This includes cells
                      orginally received with CLP=0 and CLP=1."
                  ::= { atmVclStatEntry 3 }

              atmVclStatClp0Discards OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells received with
                      CLP=0 an  discarded by the traffic policing
                      entity."
                  ::= { atmVclStatEntry 4 }

              atmVclStatTotalCellOuts OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells transmitted
                      by this VCL.  This includes both CLP=0 and CLP=1
                      cells."
                  ::= { atmVclStatEntry 5 }

              atmVclStatClp0CellOuts OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells transmitted
                      with CLP=0 by this VCL."





          Expires 11/96                                      [Page 70]




          draft        Supplemental ATM Management Objects    April 1996


                  ::= { atmVclStatEntry 6 }

              atmVclStatTaggedOuts OBJECT-TYPE
                  SYNTAX        Counter32
                  MAX-ACCESS    read-only
                  STATUS        current
                  DESCRIPTION
                      "The total number of valid ATM cells tagged by the
                      traffic policing entity from CLP=0 to CLP=1 and
                      transmitted by this VCL."
                  ::= { atmVclStatEntry 7 }


          -- 12. ATM VC General Information Table

              atmVclGenTable OBJECT-TYPE
                  SYNTAX           SEQUENCE OF AtmVclGenEntry
                  MAX-ACCESS       not-accessible
                  STATUS           current
                  DESCRIPTION
                      "General Information for each VC."
                  ::= { atm2MIBObjects 12 }


              atmVclGenEntry OBJECT-TYPE
                  SYNTAX  AtmVclGenEntry
                  MAX-ACCESS  not-accessible
                  STATUS  current
                  DESCRIPTION
                      "An entry with general information about the ATM
                      VC."
                  AUGMENTS { atmVclEntry }
                  ::= { atmVclGenTable 1 }


              AtmVclGenEntry ::=
                  SEQUENCE {
                    atmVclGenSigDescrIndex
                                              AtmSigDescrParamIndex
          }


              atmVclGenSigDescrIndex   OBJECT-TYPE
                  SYNTAX            AtmSigDescrParamIndex
                  MAX-ACCESS        read-create





          Expires 11/96                                      [Page 71]




          draft        Supplemental ATM Management Objects    April 1996


                  STATUS            current
                  DESCRIPTION
                      "The value of this object identifies the row in
                      the ATM Signalling Descriptor Parameter Table
                      which applies to this VCL."
                  ::= { atmVclGenEntry 1 }

          -- 6. ATM Interface Configuration Extention table
          -- This table provides extra information not included in the
          -- atmInterfaceConfTable defined in [1],
          -- specifically, the minimum VPI/VCI values for switched VPC/VCCs
          -- per ATM interface

          atmInterfaceExtTable    OBJECT-TYPE
               SYNTAX       SEQUENCE OF AtmInterfaceExtEntry
               MAX-ACCESS   not-accessible
               STATUS       current
               DESCRIPTION
                          "This table contains extra information not
                 defined in the          atmInterfaceConfTable per [1].
                 This table includes          the configured and actual
                 minimum VPI/VCI values for all          switched
                 VPL/VCLs per ATM interface."
               ::= { atm2MIBObjects 13 }

          atmInterfaceExtEntry    OBJECT-TYPE
               SYNTAX            AtmInterfaceExtEntry
               MAX-ACCESS        not-accessible
               STATUS            current
               DESCRIPTION
                          "An entry extends the atmInterfaceEntry
                 defined in [1].  Each          entry corresponds to an
                 ATM interface."
               INDEX { ifIndex }
               ::= { atmInterfaceExtTable  1}

          AtmInterfaceExtEntry    ::= SEQUENCE  {
                  atmInterfaceConfMinSvpcVpci INTEGER,
                  atmInterfaceCurrentMinSvpcVpci INTEGER,
                  atmInterfaceConfMinSvccVpci INTEGER,
                  atmInterfaceCurrentMinSvccVpci INTEGER,
                  atmInterfaceConfMinSvccVci INTEGER,
                  atmInterfaceCurrentMinSvccVci INTEGER
          }






          Expires 11/96                                      [Page 72]




          draft        Supplemental ATM Management Objects    April 1996


          atmInterfaceConfMinSvpcVpci    OBJECT-TYPE
                  SYNTAX             INTEGER  (0..4096)
                  MAX-ACCESS         read-write
                  STATUS             current
                  DESCRIPTION
                             "The minimum VPCI that the signalling stack
                 on
                             the ATM interface is configured to support
                 for
                             allocation to switched virtual path
                             connections."
                  ::= { atmInterfaceExtEntry 1}

          atmInterfaceCurrentMinSvpcVpci    OBJECT-TYPE
               SYNTAX             INTEGER  (0..4096)
               MAX-ACCESS         read-write
               STATUS             current
               DESCRIPTION
                       "The minimum VPCI that the signalling stack on
                        the ATM interface may currently allocate
                        to switched virtual path connections.  This
                        value is the maximum of
                 atmInterfaceConfMinSvpcVpci,
                        and the MinSvpcVpci of the interface's
                        UNI/NNI peer.

                        If the interface does not negotiate with
                        its peer to determine the minimum VPCI that
                        can be allocated to SVPCs on the interface,
                        then the value of this object must equal
                        atmInterfaceConfMinSvpcVpci. "
               ::= { atmInterfaceExtEntry 2}

          atmInterfaceConfMinSvccVpci    OBJECT-TYPE
               SYNTAX             INTEGER  (0..4096)
               MAX-ACCESS         read-write
               STATUS             current
               DESCRIPTION
                       "The minimum VPCI that the signalling stack on
                        the ATM interface is configured to support for
                        allocation to switched virtual channel
                        connections."
               ::= { atmInterfaceExtEntry 3}

          atmInterfaceCurrentMinSvccVpci    OBJECT-TYPE





          Expires 11/96                                      [Page 73]




          draft        Supplemental ATM Management Objects    April 1996


               SYNTAX             INTEGER  (0..4096)
               MAX-ACCESS         read-write
               STATUS             current
               DESCRIPTION
                       "The minimum VPCI that the signalling stack on
                        the ATM interface may currently allocate
                        to switched virtual channel connections. This
                        value is the maximum of
                 atmInterfaceConfMinSvccVpci,
                        and the MinSvccVpci of the interface's
                        UNI/NNI peer.

                        If the interface does not negotiate with
                        its peer to determine the minimum VPCI that
                        can be allocated to SVCCs on the interface,
                        then the value of this object must equal
                        atmInterfaceConfMinSvpcVpci. "
               ::= { atmInterfaceExtEntry 4}

          atmInterfaceConfMinSvccVci    OBJECT-TYPE
                SYNTAX             INTEGER  (0..65535)
               MAX-ACCESS         read-write
               STATUS             current
               DESCRIPTION
                       "The minimum VCI that the signalling stack on
                        the ATM interface is configured to support for
                        allocation to switched virtual channel
                        connections.  The same value applies to all
                        SVCC VPCI values for which the signalling
                        stack is configured."
               ::= { atmInterfaceExtEntry 5}

          atmInterfaceCurrentMinSvccVci    OBJECT-TYPE
               SYNTAX             INTEGER  (0..65535)
               MAX-ACCESS         read-write
               STATUS             current
               DESCRIPTION
                       "The minimum VCI that the signalling stack on
                        the ATM interface may currently allocate
                        to switched virtual channel connections.  This
                        value is the maximum of
                 atmInterfaceConfMinSvccVci,
                        and the MinSvccVci of the interface's
                        UNI/NNI peer.






          Expires 11/96                                      [Page 74]




          draft        Supplemental ATM Management Objects    April 1996


                        If the interface does not negotiate with
                        its peer to determine the minimum VCI that
                        can be allocated to SVCCs on the interface,
                        then the value of this object must equal
                        atmInterfaceConfMinSvpcVci."
              ::= { atmInterfaceExtEntry 6}












































          Expires 11/96                                      [Page 75]




          draft        Supplemental ATM Management Objects    April 1996


          -- ************************************************

          -- Conformance Information

          atm2MIBConformance   OBJECT IDENTIFIER ::= {atm2MIB 2}

          atm2MIBGroups        OBJECT IDENTIFIER
                           ::= {atm2MIBConformance 1}

          atm2MIBCompliances   OBJECT IDENTIFIER
                           ::= {atm2MIBConformance 2}

          -- Compliance Statements

          atm2MIBCompliance   MODULE-COMPLIANCE
               STATUS         current
               DESCRIPTION
                 "The compliance statement for SNMP entities which
                 represent ATM interfaces.  The compliance statements
                 are used to determine if a particular group or object
                 applies to hosts, networks/switches, or both."

               MODULE  -- this module

                 MANDATORY-GROUPS  { atmSwitchServcHostGroup }

          -- Objects in the ATM Switch/Service/Host Group


          OBJECT      atmVclStatTotalCellIns
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VCC counters."

          OBJECT      atmVclStatClp0CellIns
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VCC counters."

          OBJECT      atmVclStatTotalDiscards
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VCC counters."

          OBJECT      atmVclStatClp0Discards





          Expires 11/96                                      [Page 76]




          draft        Supplemental ATM Management Objects    April 1996


          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VCC counters."

          OBJECT      atmVclStatTotalCellOuts
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VCC counters."

          OBJECT      atmVclStatClp0CellOuts
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VCC counters."

          OBJECT      atmVclStatTaggedOuts
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VCC counters."


          OBJECT      atmVplStatTotalCellIns
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VPC counters."

          OBJECT      atmVplStatClp0CellIns
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VPC counters."

          OBJECT      atmVplStatTotalDiscards
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VPC counters."

          OBJECT      atmVplStatClp0Discards
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VPC counters."

          OBJECT      atmVplStatTotalCellOuts
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VPC counters."






          Expires 11/96                                      [Page 77]




          draft        Supplemental ATM Management Objects    April 1996


          OBJECT      atmVplStatClp0CellOuts
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VPC counters."

          OBJECT      atmVplStatTaggedOuts
          DESCRIPTION
                   "This object is mandatory for systems that are
                 supporting per VPC counters."

          OBJECT      atmVplLogicalPortDef
          MIN-ACCESS  read-only
          DESCRIPTION
                   "This object is mandatory for systems support ATM
                 Logical Port interfaces."


          GROUP      atmSwitchServcGroup
          DESCRIPTION
                   "This group is mandatory for a Switch/Service that
                 implements ATM interfaces."

          OBJECT      atmIfAdminAddrRowStatus
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required, and only one of the
                 six enumerated values for the RowStatus textual
                 convention need be supported, specifically: active(1)."


          -- The ATM Switch/Service SVC Group

          GROUP      atmSwitchServcSVCGroup
          DESCRIPTION
                   "This group is mandatory for a Switch/Service that
                 implements ATM interfaces supporting Switched Virtual
                 Connections (SVCs)."

          OBJECT      atmSigSupportClgPtyNumDel
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required. This parameter is
                 required for ATM systems that support only a value of
                 'disabled(2)' (i.e., the ATM systems does not support
                 the feature associated with the parameter)."





          Expires 11/96                                      [Page 78]




          draft        Supplemental ATM Management Objects    April 1996


          OBJECT      atmSigSupportClgPtySubAddr
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required. This parameter is
                 required for ATM systems that support only a value of
                 'disabled(2)' (i.e., the ATM systems does not support
                 the feature associated with the parameter)."

          OBJECT      atmSigSupportCldPtySubAddr
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required. This parameter is
                 required for ATM systems that support only a value of
                 'disabled(2)' (i.e., the ATM systems does not support
                 the feature associated with the parameter)."

          OBJECT      atmSigSupportHiLyrInfo
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required. This parameter is
                 required for ATM systems that support only a value of
                 'disabled(2)' (i.e., the ATM systems does not support
                 the feature associated with the parameter)."

          OBJECT      atmSigSupportLoLyrInfo
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required. This parameter is
                 required for ATM systems that support only a value of
                 'disabled(2)' (i.e., the ATM systems does not support
                 the feature associated with the parameter)."

          OBJECT      atmSigSupportRepeatInd
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required. This parameter is
                 required for ATM systems that support only a value of
                 'disabled(2)' (i.e., the ATM systems does not support
                 the feature associated with the parameter)."

          OBJECT      atmSigSupportAALInfo
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required. This parameter is
                 required for ATM systems that support only a value of





          Expires 11/96                                      [Page 79]




          draft        Supplemental ATM Management Objects    April 1996


                 'disabled(2)' (i.e., the ATM systems does not support
                 the feature associated with the parameter)."

          OBJECT      atmSigSupportPrefCarrier
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSvcVpCrossConnectRowStatus
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required, and only one of the
                 six enumerated values for the RowStatus textual
                 convention need be supported, specifically:
                 destroy(6)."

          OBJECT      atmSvcVcCrossConnectRowStatus
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required, and only two of the
                 six enumerated values for the RowStatus textual
                 convention need be supported, specifically: active(1)
                 and destroy(6)."


          -- The ATM Host Group

          GROUP      atmHOSTGroup
          DESCRIPTION
                   "This group is mandatory for a Host that implements
                 ATM interfaces."

          OBJECT      atmVclAddrBindType
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmVclAddrBindRowStatus
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required, and only one of the
                 six enumerated values for the RowStatus textual
                 convention need be supported, specifically: active(1)."

          OBJECT      atmVclGenSigDescrIndex





          Expires 11/96                                      [Page 80]




          draft        Supplemental ATM Management Objects    April 1996


          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamAalType
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamAalMode
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamAalSscsType
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBhliType
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBhliInfo
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBbcConnConf
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBlliLayer2
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBlliLayer3
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBlliPktSize





          Expires 11/96                                      [Page 81]




          draft        Supplemental ATM Management Objects    April 1996


          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBlliSnapId
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamBlliOuiPid
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required."

          OBJECT      atmSigDescrParamRowStatus
          MIN-ACCESS  read-only
          DESCRIPTION
                   "Write access is not required, and only one of the
                 six enumerated values for the RowStatus textual
                 convention need be supported, specifically: active(1)."


                      ::= { atm2MIBCompliances 1 }

          -- **********************************************

          -- Units of Conformance


          atmSwitchServcHostGroup     OBJECT-GROUP

                 OBJECTS {
                     atmVclAddrBindType,
                     atmVclAddrBindRowStatus,
                     atmAddrVclAddrType,
                     atmVclStatTotalCellIns,
                     atmVclStatClp0CellIns,
                     atmVclStatTotalDiscards,
                     atmVclStatClp0Discards,
                     atmVclStatTotalCellOuts,
                     atmVclStatClp0CellOuts,
                     atmVclStatTaggedOuts,
                     atmVplStatTotalCellIns,
                     atmVplStatClp0CellIns,
                     atmVplStatTotalDiscards,





          Expires 11/96                                      [Page 82]




          draft        Supplemental ATM Management Objects    April 1996


                     atmVplStatClp0Discards,
                     atmVplStatTotalCellOuts,
                     atmVplStatClp0CellOuts,
                     atmVplStatTaggedOuts,
                     atmVplLogicalPortDef,
                     atmVplLogicalPortIndex,
                     atmInterfaceConfMinSvpcVpci,
                     atmInterfaceCurrentMinSvpcVpci,
                     atmInterfaceConfMinSvccVpci,
                     atmInterfaceCurrentMinSvccVpci,
                     atmInterfaceConfMinSvccVci,
                     atmInterfaceCurrentMinSvccVci}
                 STATUS    current
                 DESCRIPTION
                   "A collection of objects providing information
                    for a Switch/Service/Host that implements
                    ATM interfaces."
                 ::= { atm2MIBGroups 1 }


          atmSwitchServcHostSVCGroup     OBJECT-GROUP

                 OBJECTS {
                      atmConfigSigType,
                      atmActualSigType,
                      atmConfigSigSide,
                      atmActualSigSide,
                      atmSigSSCOPConEvents,
                      atmSigSSCOPErrdPdus,
                      atmSigDetectSetupAttempts,
                      atmSigEmittSetupAttempts,
                      atmSigDetectUnavailRoutes,
                      atmSigEmittUnavailRoutes,
                      atmSigDetectUnavailResrcs,
                      atmSigEmittUnavailResrcs,
                      atmSigDetectCldPtyEvents,
                      atmSigEmittCldPtyEvents,
                      atmSigDetectMsgErrors,
                      atmSigEmittMsgErrors,
                      atmSigDetectClgPtyEvents,
                      atmSigEmittClgPtyEvents,
                      atmSigDetectTimerExpireds,
                      atmSigEmittTimerExpireds,
                      atmSigDetectRestarts,
                      atmSigEmittRestarts,





          Expires 11/96                                      [Page 83]




          draft        Supplemental ATM Management Objects    April 1996


                      atmSigInEstabls,
                      atmSigOutEstabls
                 }
                 STATUS    current
                 DESCRIPTION
                   "A collection of objects providing information
                    for a Switch/Service/Host that implements
                    ATM SVCs."
                 ::= { atm2MIBGroups 2 }


          atmSwitchServcGroup     OBJECT-GROUP

                 OBJECTS {
                      atmIfAdminAddrAddressSource,
                      atmIfAdminAddrRowStatus}
                 STATUS    current
                 DESCRIPTION
                   "A collection of objects providing information
                    for a Switch/Service that implements ATM interfaces."
                 ::= { atm2MIBGroups 3 }


          atmSwitchServcSVCGroup     OBJECT-GROUP

                 OBJECTS {
                      atmSigSupportClgPtyNumDel,
                      atmSigSupportClgPtySubAddr,
                      atmSigSupportCldPtySubAddr,
                      atmSigSupportHiLyrInfo,
                      atmSigSupportLoLyrInfo,
                      atmSigSupportRepeatInd,
                      atmSigSupportAALInfo,
                      atmSigSupportPrefCarrier,
                      atmSvcVpCrossConnectCreationTime,
                      atmSvcVpCrossConnectRowStatus,
                      atmSvcVcCrossConnectCreationTime,
                      atmSvcVcCrossConnectRowStatus}
                 STATUS    current
                 DESCRIPTION
                   "A collection of objects providing information
                    for a Switch/Service that implements ATM SVCs."
                 ::= { atm2MIBGroups 4 }







          Expires 11/96                                      [Page 84]




          draft        Supplemental ATM Management Objects    April 1996


          atmHOSTGroup     OBJECT-GROUP

                 OBJECTS {
                      atmVclGenSigDescrIndex,
                      atmSigDescrParamAalType,
                      atmSigDescrParamAalMode,
                      atmSigDescrParamAalSscsType,
                      atmSigDescrParamBhliType,
                      atmSigDescrParamBhliInfo,
                      atmSigDescrParamBbcConnConf,
                      atmSigDescrParamBlliLayer2,
                      atmSigDescrParamBlliLayer3,
                      atmSigDescrParamBlliPktSize,
                      atmSigDescrParamBlliSnapId,
                      atmSigDescrParamBlliOuiPid,
                      atmSigDescrParamRowStatus}
                 STATUS    current
                 DESCRIPTION
                   "A collection of objects providing information
                    for a Host that implements ATM interfaces."
                 ::= { atm2MIBGroups 5 }


                END


























          Expires 11/96                                      [Page 85]




          draft        Supplemental ATM Management Objects    April 1996


          10.  Acknowledgments

          This document is a product of the AToMMIB Working Group.















































          Expires 11/96                                      [Page 86]




          draft        Supplemental ATM Management Objects    April 1996


          11.  References

          [1]  Ahmed, M., Tesink, K., "Definitions of Managed Objects
               for ATM Management Version 8.0 using SMIv2", RFC 1695,
               Bell Communications Research, August 1994.

          [2]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
               "Structure of Management Information for version 2 of the
               Simple Network Management Protocol (SNMPv2)", RFC 1442,
               SNMP Research,Inc., Hughes LAN Systems, Dover Beach
               Consulting, Inc., Carnegie Mellon University, April 1993.

          [3]  McCloghrie, K., and M. Rose, Editors, "Management
               Information Base for Network Management of TCP/IP-based
               internets: MIB-II", STD 17, RFC 1213, Hughes LAN Systems,
               Performance Systems International, March 1991.

          [4]  Galvin, J., and K. McCloghrie, "Administrative Model for
               version 2 of the Simple Network Management Protocol
               (SNMPv2)", RFC 1445, Trusted Information Systems, Hughes
               LAN Systems, April 1993.

          [5]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
               "Protocol Operations for version 2 of the Simple Network
               Management Protocol (SNMPv2)", RFC 1448, SNMP
               Research,Inc., Hughes LAN Systems, Dover Beach
               Consulting, Inc., Carnegie Mellon University, April 1993.

          [6]  McCloghrie, K. and F. Kastenholz, "Evolution of the
               Interfaces Group of MIB-II", RFC 1573, Hughes LAN
               Systems, FTP Software, January 1994.

          [7]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
               "Textual Conventions for SNMPv2", RFC1443, SNMP
               Research,Inc., Hughes LAN Systems, Dover Beach
               Consulting, Inc., Carnegie Mellon University, April 1993.

          [8]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
               "Conformance Statements for SNMPv2", RFC1444, SNMP
               Research,Inc., Hughes LAN Systems, Dover Beach
               Consulting, Inc., Carnegie Mellon University, April 1993.

          [9]  ATM Forum, "ATM User-Network Interface, Version 3.0 (UNI
               3.0) Specification, Part I", 1994.






          Expires 11/96                                      [Page 87]




          draft        Supplemental ATM Management Objects    April 1996


          [10] ATM Forum, "ATM User-Network Interface, Version 3.1 (UNI
               3.1) Specification, Part I", November 1994.

          [11] ITU-T Recommendation Q.2931, "Broadband Integrated
               Service Digital Network (B-ISDN) Digital Service
               Signalling System No.2 (DSS2) User-Network Interface
               (UNI) Layer 3 Specification for Basic Call/Connection
               Control", September 1994.

          [12] ATM Forum 94-0471R4, "P-NNI Draft Specification, P-NNI
               SWG", November 1994.

          [13] ITU-T Draft Recommendation Q.2110, "Broadband Integrated
               Service Digital Network (B-ISDN) - ATM Adaptation Layer -
               Service Specific Connection Oriented Protocol (SSCOP)
               Specification", 1994.

          [14] Newton, T., "Baseline Text For LAN Emulation Client
               Management", ATM Forum Contribution 94-0737R1, Digital
               Equipment Corporation, January 1995.

          [15] Brown, T., Tesink, K., "Definitions of Managed Objects
               for SMDS Interfaces using SMIv2", RFC 1694, Bell
               Communications Research, August 1994.

          [16] ATM Forum, "ATM User-Network Interface, Version 4.0 (UNI
               4.0) Specification, Part I", 1995.

          [17] ITU-T Draft Recommendation Q.2961, "Broadband Integrated
               Service Digital Network (B-ISDN) Digital Service
               Signalling System No.2 (DSS2) Support of Additional
               Traffic Parameters", May 1995.

          [18] ITU-T Draft Recommendation Q.2971, "Broadband Integrated
               Service Digital Network (B-ISDN) Digital Service
               Signalling System No.2 (DSS2) User Network Interface
               Layer 3 Specification for Point-to-multipoint
               Call/connection Control", May 1995.

          [19] ATM Forum, "Interim Inter-switch Signaling Protocol
               (IISP)Specification, Version 1.0", af-pnni-0026.000,
               December 1994.

          [20] ATM Forum B-ICI Recommendation, - Text to be provided






          Expires 11/96                                      [Page 88]




          draft        Supplemental ATM Management Objects    April 1996


          [21] ITU-T Recommendation I.610, "Broadband Integrated Service
               Digital Network (B-ISDN) Operation and Maintenance
               Principles and Functions", July 1995.















































          Expires 11/96                                      [Page 89]




          draft        Supplemental ATM Management Objects    April 1996


          12.  Security Considerations

          Security issues are not discussed in this memo.


          13.  Authors' Addresses

                            Faye Ly
                            Bay Networks Communications, Inc.
                            4401 Great America Pkwy
                            Santa Clara, CA 95052
                            Phone: (408) 764-1702
                            EMail: faye@Baynetworks.COM

                            Michael Noto
                            Bell Communications Research
                            Room 1E-348
                            331 Newman Springs Road
                            P.O. Box 7020
                            Red Bank, NJ  07701-7020
                            Phone: (908) 758-5104
                            EMail: noto@cc.bellcore.com

                            Andrew Smith
                            Bay Networks Communications, Inc.
                            4401 Great America Pkwy
                            Santa Clara, CA 95052
                            Phone: (408) 764-1574
                            EMail: asmith@Baynetworks.COM

                            Kaj Tesink
                            Bell Communications Research
                            Room 1A-427
                            331 Newman Springs Road
                            P.O. Box 7020
                            Red Bank, NJ  07701-7020
                            Phone: (908) 758-5254
                            EMail: kaj@cc.bellcore.com












          Expires 11/96                                      [Page 90]




          draft        Supplemental ATM Management Objects    April 1996


          Table of Contents


          1 Status of this Memo ...................................    1
          2 Introduction ..........................................    2
          3 The SNMPv2 Network Management Framework ...............    2
          4 Object Definitions ....................................    3
          5 Overview ..............................................    3
          5.1 Background ..........................................    3
          5.2 Important Definitions ...............................    4
          5.3 Supported Functions .................................    5
          5.3.1 ATM SVC VC Cross Connect Table ....................    6
          5.3.2 ATM SVC VP Cross Connect Table ....................    6
          5.3.3 ATM Interface Signalling Information ..............    6
          5.3.3.1 ATM Interface Signalling Configuration ..........    6
          5.3.3.2 Signalling Monitoring Information ...............    7
          5.3.3.2.1 SSCOP Counters ................................    7
          5.3.3.2.2 Unsupported Service Failures ..................    7
          5.3.3.2.3 ATM Signalling Layer Protocol Errors ..........    8
          5.3.3.2.4 UNI Signalling Sub-layer Statistics ...........    8
          5.3.3.3 Indexing of the ATM Signalling Table ............    8
          5.3.4 ATM UNI SVC Information Element Support ...........   12
          5.3.5 Signalling Descriptor Parameter Table .............   13
          5.3.6 ATM Interface Administrative Address Table ........   14
          5.3.7 ATM VPI/VCI to Address Mapping Table ..............   14
          5.3.8 ATM Address to VPI/VCI Mapping Table ..............   14
          5.3.9 ATM VPL Statistics Table ..........................   14
          5.3.10 ATM VPL Logical Port Table .......................   16
          5.3.10.1 ATM Logical Port Interface .....................   16
          5.3.10.2 How to create an ATM logical interface .........   18
          5.3.11 ATM VCL Statistics Table .........................   19
          5.3.12 ATM VC General Information Table .................   20
          5.3.13 ATM Interface Configuration Extention Table ......   20
          6 Valid Address Sets / Default Address ..................   21
          7 Configuration of VPLs, VCLs, and Cross-Connects .......   21
          8 ATM History Group .....................................   21
          9 Definitions ...........................................   22
          10 Acknowledgments ......................................   86
          11 References ...........................................   87
          12 Security Considerations ..............................   90
          13 Authors' Addresses ...................................   90



          :r svcFeb96





          Expires 11/96                                      [Page 91]




          draft        Supplemental ATM Management Objects    April 1996




















































          Expires 11/96                                      [Page 92]
