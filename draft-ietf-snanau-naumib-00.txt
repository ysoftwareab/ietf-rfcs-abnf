


                     Definitions of Managed Objects
                              for SNA NAUs

                             March 06, 1996


                              Bob Clouston
                             Cisco Systems
                           clouston@cisco.com


                          Zbigniew Kielczewski
                             Cisco Systems
                           zkielcze@cisco.com



                               Kitty Shih
                                 Novell
                           kmshih@novell.com



                               Bob Moore
                            IBM Corporation
                      remoore@ralvm6.vnet.ibm.com



                   <draft-ietf-snanau-naumib-00.txt>




1.  Status of this Memo

This document is an Internet-Draft.  Internet-Drafts are working
documents of the Internet Engineering Task Force (IETF), its areas, and
its working groups.  Note that other groups may also distribute working
documents as Internet-Drafts.

Internet-Drafts are draft documents valid for a maximum of six months.
Internet-Drafts may be updated, replaced, or obsoleted by other
documents at any time.  It is not appropriate to use Internet-Drafts as
reference material or to cite them other than as a working draft or work
in progress.



Expires September 06, 1996                                      [Page 1]

Internet Draft                 SNANAU MIB                     March 1996


To learn the current status of any Internet-Draft, please check the
1id-abstracts.txt listing contained in the Internet-Drafts Shadow
Directories on ds.internic.net, nic.nordu.net, ftp.isi.edu, or
munnari.oz.au.

2.  Introduction

This memo defines a portion of the Management Information Base (MIB) for
use with network management protocols in the Internet community.  In
particular, it defines objects for managing the configuration,
monitoring and control of Physical Units (PUs) and Logical Units (LUs)
in an SNA environment.  PUs and LUs are two types of Network Addressable
Units (NAUs) in the logical structure of an SNA network.  NAUs are the
origination or destination points for SNA data streams. This memo
identifies managed objects for PU Type 1.0, 2.0 and Type 2.1 and LU Type
0, 1, 2, 3, 4, 7.  The generic objects defined here can also be used to
manage LU 6.2 and any LU-LU session.  The SNA terms and overall
architecture are documented in [1].


This memo does not specify a standard for the Internet community.

3.  The SNMPv2 Network Management Framework

The Internet-standard Network Management Framework presently consists of
three major components.  They are:

o    RFC 1902 [2] which defines the SMI, the mechanisms used for
     describing and naming objects for the purpose of management.

o    STD 17, RFC 1213 [3] which defines MIB-II, the core set of managed
     objects for the Internet suite of protocols.

o    RFC 1157 [4] and/or RFC 1905 [5] which defines the protocol used
     for network access to managed objects.

The Framework permits new objects to be defined for the purpose of
experimentation and evaluation.


4.  Overview


This document identifies the proposed set of objects for managing the
configuration, monitoring and control of Physical Units (PUs) and
Logical Units (LUs) in an SNA environment. In this document, the name



Expires September 06, 1996                                      [Page 2]

Internet Draft                 SNANAU MIB                     March 1996


"Node" is used to describe SNA Node Type 1.0, 2.0 and Type 2.1 and the
name "LU" is used to describe Logical Unit of Type 0, 1, 2, 3, 4, 7 and
6.2.  Note however that only objects common to all PU and LU types are
covered here and LU 6.2 specific objects are not included in this MIB
module.

Highlights of the management functions supported by the SNANAU MIB
module include the following:


o    Activation/Deactivation of Nodes via the AdminState object in the
     snaNodeTable

o    Deactivation of sessions via the OperState object in the
     snaLuActSessnTable

o    Monitoring and modification of parameters related to Nodes, LUs,
     and Node/link associations

o    Monitoring of session operational parameters

o    PU2.0  operational statistics

o    Session operational statistics

o    RTM statistics

o    Traps for:
       + Node state change
       + Node activation failure
       + LU session BIND failure

     This MIB module does not support:


o    creation of objects,

o    activation or deactivation of LUs, nor

o    activation of sessions.


4.1.  SNANUAU MIB Structure

The SNANAU MIB module contains three groups of objects:




Expires September 06, 1996                                      [Page 3]

Internet Draft                 SNANAU MIB                     March 1996


o    snaNode - objects related to Node configuration, monitoring and
     control.

o    snaLu   - objects related to LU definition, monitoring and control.

o    snaMgtTools  - objects related to specific management tools well
     known in SNA environment.


These groups are described below in more detail.

Many objects are organized into two types of tables: the Admin and Oper
tables.


The "Admin" table contains read-only objects which contain default or
expected configuration values. This MIB does not create or modify
configuration values.  The "Oper" table contains objects which provide
current operational values, such as state values or negotiated
parameters, for dynamic or configured objects.  Dynamic objects are
created by the Agent system using one of the templates provided in the
"Admin" table.  Configured objects usually have a one-to-one
relationship between "Admin" and "Oper" entries.  However, some "Admin"
values may have changed since the object became operational, such that
the "Oper" values may no longer be based on the "Admin" values.  The
"Admin" entry could even be deleted.  For example, some implementations
may allow a link station definition (snaNodeLinkAdminEntry) to be
deleted even while the link station is active (snaNodeLinkOperEntry
still exists).  Where appropriate, the "Oper" table may include initial
starting values for objects that can be reconfigured while operational.
How the "Admin" values are changed or deleted is outside the scope of
this MIB.


4.1.1.  snaNode group

This table contains objects which describe runtime and operational state
variables for a Node, and an object to change the state of the node.
This table is indexed by the node name.


The snaNodeAdminState object describes the desired operational state of
a Node and is used to change the operational state of a Node.

How an Agent or a Management Station obtains the initial value of each
object at creation time is an implementation specific issue not



Expires September 06, 1996                                      [Page 4]

Internet Draft                 SNANAU MIB                     March 1996


addressed in this memo.

Link-specific configuration objects are contained in a separate MIB
module (e.g., the SNA DLC MIB module) corresponding to link type.

2) snaPu20Table

Each row contains statistics variables and operational variables about a
PU type 2.0.

3) snaNodeLinkAdminTable

This table contains all references to link-specific tables.  If a Node
is configured with multiple links, then it will have multiple entries in
this table.  The entries in this table can be generated initially, after
startup of SNA service, by the Agent which uses information from Node
configuration file.  Subsequent modifications of parameters, creation of
new Node link entries and deletion of entries is possible. The
modifications to this table can be saved in the Node configuration file
for the next startup (i.e., restart or next initialization) of SNA
service, but the mechanism for this function is not defined in this
memo.  Each entry contains the configuration information that associates
a Node instance to one link instance.  The table indices are the node
name and the link name.

4) snaNodeLinkOperTable

This table contains all references to link- specific tables for
operational parameters.  If the Node is configured for multiple links,
then it will have multiple entries in this table.  The table indices are
the node name and the link name.

5) snaNodeTraps

Two traps are defined for Nodes. The snaNodeStateChangeTrap indicates
that the operational state of a Node has changed.  The
snaNodeActFailTrap indicates the failure of ACTPU received from host.


4.1.2.  snaLu group

The snaLu group consists of the following tables:

1) snaLuAdminTable

Table containing LU configuration information.  The rows in this table



Expires September 06, 1996                                      [Page 5]

Internet Draft                 SNANAU MIB                     March 1996


cannot be created and deleted by a Management Station.  Only objects
which are common to all types of LUs are included in this table. The
entries are indexed by node name and LU name.

2) snaLuOperTable

Table containing dynamic runtime information and control variables
relating to LUs.  Only objects which are common to all types of LUs are
included in this table. This table is indexed by node name and LU name.

3) snaLuActSessnTable

This is a table containing objects which describe the operational state
of LU-LU sessions.  Only objects which are common to all types of LU-LU
sessions are included in this table.  When a session is started, an
entry in the session table is created by the Agent.  When a session has
ended, the entry for that session is removed from the session table by
the Agent.  Entries are indexed by node name, local LU name, and a
unique session index assigned by the agent.

4) snaLuHistSessTable

This table contains historical information about abnormally terminated
sessions.  The table is indexed by an integer which will eventually
wrap.

5)snaLuSessStats

This group has objects that indicate and control gathering of
statistics, as well as the snaLuSessnStatsTable, which is a table
containing dynamic statistics information relating to LU-LU sessions.

5) snaLuTraps

The snaLuActSessBindFailTrap indicates the failure of a BIND request.


4.1.3.  snaMgtTools group

This is an optional group.  The snaMgtTools group consists of the
following table:

1) snaLuRtmTable

Each row contains Response Time Monitor (RTM) variables for an LU.  The
table is indexed by Node and LU indices.  Entries correspond to LU 2



Expires September 06, 1996                                      [Page 6]

Internet Draft                 SNANAU MIB                     March 1996


entries in the snaLuAdminTable.  A Management Station can read
collection of RTM statistics for a given LU.


4.1.4.  Conformance statement

Compliance of the SNMPv2 management entity to the SNANAU MIB is defined
in terms of following conformance units called groups.

Unconditionally mandatory groups: snaNodeGroup, snaLuGroup,
snaSessionGroup.

Conditionally mandatory groups: snaPu20Group - mandatory only for those
entities which implement PU type 2.0.  The snaMgtToolsRtmGroup -
mandatory only for those entities which implement LU type 2 and RTM.


































Expires September 06, 1996                                      [Page 7]

Internet Draft                 SNANAU MIB                     March 1996


5.  Definitions

SNA-NAU-MIB DEFINITIONS ::= BEGIN

--  This MIB module contains objects necessary for management of the
--  following SNA devices:  node types 1.0, 2.0, 2.1 and LU types 0, 1,
--  2, 3, 4, 7.  It also contains generic objects which can be used to
--  manage LU 6.2.

-- Naming conventions in this document:
-- The following names are used in object descriptors according to
--  SNA conventions.  The name 'PU' or 'node' is used to describe nodes
--  type 1.0, 2.0 or 2.1. The name 'LU' is used to describe logical units
--  of type 0, 1, 2, 3, 4, 7 or 6.2.

IMPORTS
        DisplayString, RowPointer, DateAndTime, TEXTUAL-CONVENTION
                FROM SNMPv2-TC

        Counter32, Gauge32, Integer32, TimeTicks,
        OBJECT-TYPE, MODULE-IDENTITY, NOTIFICATION-TYPE
                FROM SNMPv2-SMI

        MODULE-COMPLIANCE, OBJECT-GROUP
                FROM SNMPv2-CONF;


snanauMIB MODULE-IDENTITY
        LAST-UPDATED  "9603061800Z"
        ORGANIZATION  "IETF SNA NAU MIB Working Group"
        CONTACT-INFO
                "       Zbigniew Kielczewski
                        Cisco Systems
                        7025 Kit Creek Road
                        P.O. Box 14987
                        Research Triangle Park, NC 27709, USA
                        Tel:    1 919 472 2326
                        E-mail: zkielcze@cisco.com

                        Kitty Shih
                        Novell
                        890 Ross Drive
                        Sunnyvale, CA 94089
                        Tel:   1 408 747 4305
                        E-mail: kmshih@novell.com




Expires September 06, 1996                                      [Page 8]

Internet Draft                 SNANAU MIB                     March 1996


                        Bob Moore (editor)
                        IBM Corporation
                        800 Park Offices Drive
                        CNMA/664
                        P.O. Box 12195
                        Research Triangle Park, NC 27709, USA
                        Tel:    1 919 254 4436
                        E-mail: remoore@ralvm6.vnet.ibm.com
                "

      DESCRIPTION
                "This is the MIB module for objects used to
                 manage SNA devices."
::= { mib-2 34 }

-- ********************************************************************
-- Textual Convention
-- ---------------------------------------------------------------------
SnaSenseData ::= TEXTUAL-CONVENTION
      STATUS current
      DESCRIPTION
          "To facilitate their display by a Management Station, sense
          data objects in the MIB are represented as DisplayStrings of
          size 8.  Eight '0' characters indicates that no sense data
          identifying an SNA error condition is available."

      SYNTAX DisplayString (SIZE (8))

-- ********************************************************************
-- The SNANAU MIB module contains an objects part and a conformance part.
-- Objects are organized into the following groups:
-- (1)snaNode group,
-- (2)snaLu group,
-- (3)snaMgtTools group.

snanauObjects   OBJECT IDENTIFIER ::= { snanauMIB 1 }

  snaNode       OBJECT IDENTIFIER ::= { snanauObjects 1 }
  snaLu         OBJECT IDENTIFIER ::= { snanauObjects 2 }
  snaMgtTools   OBJECT IDENTIFIER ::= { snanauObjects 3}


-- ********************************************************************
-- snaNode group
--
-- This group contains Managed Objects related to all node types,



Expires September 06, 1996                                      [Page 9]

Internet Draft                 SNANAU MIB                     March 1996


-- plus some specific objects for type 2.0 nodes.
-- ********************************************************************


-- ********************************************************************
--  With the exception of snaNodeAdminState, objects in this table
--  contain current operational values, such as state values or
--  negotiated parameters, for SNA nodes.  snaNodeAdminState provides
--  a Management Station with the ability to activate and deactivate
--  an SNA node.
-- ********************************************************************

snaNodeTable OBJECT-TYPE
      SYNTAX SEQUENCE OF SnaNodeEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "This table contains dynamic node parameters, which have read-
          only access.  These objects reflect the actual status of the
          node.  It also contains an object that a Management Station can
          set to activate or deactivate an SNA node."

      ::= { snaNode 3 }

snaNodeEntry OBJECT-TYPE
      SYNTAX SnaNodeEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "The entry contains parameters that describe the state of one
          node.  The entries are created by the Agent.  They have read-
          only access."

      INDEX { snaNodeName }

      ::= { snaNodeTable 1 }

SnaNodeEntry ::= SEQUENCE {
          snaNodeName                 DisplayString,
          snaNodeAdminState           INTEGER,
          snaNodeOperState            INTEGER,
          snaNodeSscpSuppliedName     DisplayString,
          snaNodeType                 INTEGER,
          snaNodeXidFormat            INTEGER,
          snaNodeId                   DisplayString,
          snaNodeEnablingMethod       INTEGER,



Expires September 06, 1996                                     [Page 10]

Internet Draft                 SNANAU MIB                     March 1996


          snaNodeLuTermDefault        INTEGER,
          snaNodeMaxLu                Integer32,
          snaNodeStopMethod           INTEGER,
          snaNodeStartTime            DateAndTime,
          snaNodeLastStateChange      DateAndTime,
          snaNodeActFailureReason     INTEGER
          }

snaNodeName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(1..17))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "The value indicates the locally-defined name of the node.  In
          a type 2.1 node, this is a fully qualified name, meaning that
          the node name is preceded by the NetId (if present) with a
          period as the delimiter."

      ::= { snaNodeEntry 1 }

snaNodeAdminState OBJECT-TYPE
      SYNTAX INTEGER {
                inactive(1),
                active(3),
                ready(5)
                }
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "Object by which a Management Station can activate or
          deactivate a node, by setting the value to active(3) or
          inactive(1), respectively.  The value ready(5) has no meaning
          on a set operation; it is returned in response to a get
          operation when no set directed to this object has been
          processed by the agent.

          If the current value in snaNodeState is 'active(3)', then
          setting this object to 'inactive(1)' will initiate the node
          shutdown process using the method indicated by
          snaNodeStopMethod.

          If the current value in snaNodeState is 'inactive(1)', then
          setting this object to 'active(3)' will initiate the node's
          activation.

          A Management Station can always set this object to 'active (3)'



Expires September 06, 1996                                     [Page 11]

Internet Draft                 SNANAU MIB                     March 1996


          irrespective of the value in the snaNodeEnablingMethod."

      ::= { snaNodeEntry 2 }

snaNodeOperState OBJECT-TYPE
      SYNTAX INTEGER {
                inactive(1),
                active(2),
                waiting(3),
                stopping(4)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The current state of the node.  The values have the following
          meanings:

                    inactive(1) - the node is ready for activation -or-
                                  an active node has been stopped -or-
                                  a waiting node has returned to the
                                  inactive state.
                    active(2)   - the node is ready and operating.
                    waiting(3)  - a request to have the node activated
                                  has been issued, and the node
                                  is pending activation.
                    stopping(4) - a request to stop the node has been
                                  issued while the StopMethod normal
                                  or immediate is used."

      ::= { snaNodeEntry 3 }

snaNodeSscpSuppliedName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(0..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value identifies the SNA name of the node.  This name is
          supplied to a PU by the SSCP that activated it.  If a value was
          not supplied, a zero-length string is returned.  In a type 2.1
          node, this is a fully qualified name, meaning that the node
          name is preceded by the NetId (if present) with a period as the
          delimiter."

      ::= { snaNodeEntry 4 }

snaNodeType OBJECT-TYPE



Expires September 06, 1996                                     [Page 12]

Internet Draft                 SNANAU MIB                     March 1996


      SYNTAX INTEGER {
                other(1),
                pu10(2),
                pu20(3),
                t21LEN(4),
                endNode(5),
                networkNode(6)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value identifies the current type of the node."

      ::= { snaNodeEntry 5 }

snaNodeXidFormat OBJECT-TYPE
      SYNTAX INTEGER {
                format0(1),
                format1(2),
                format3(3)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value identifies the type of XID format currently used for
          this node.  Note that there is no format type 2."

      ::= { snaNodeEntry 6 }

snaNodeId OBJECT-TYPE
      SYNTAX DisplayString (SIZE(8))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value indicates the node id for this node instance.  The
          node id consists of two parts:

                The block number is the first three digits of the
                node id.  These 3 hexadecimal digits identify the
                product.

                The ID number is the last 5 digits of the node id.
                These 5 hexadecimal digits are administratively
                defined and combined with the 3-digit block number
                form the node id.  This node_id is used to identify
                the local node and is included in XIDs.  A unique



Expires September 06, 1996                                     [Page 13]

Internet Draft                 SNANAU MIB                     March 1996


                value is required for connections to SNA subarea.
                In some implementations, the value of 'bbb00000'
                (where 'bbb' represents a 3-digit block number) is
                returned to mean that the ID number is not unique on
                this node."

      ::= { snaNodeEntry 7 }

snaNodeEnablingMethod OBJECT-TYPE
      SYNTAX INTEGER {
                other(1),
                startup(2),
                demand(3),
                onlyMS(4)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value indicates how the node is activated for the first
          time.  The values have the following meanings:

                     other(1)   - not at boot time, LU activation
                                  or by a Management Station;
                     startup(2) - at SNA services' initialization
                                  time (this is the default);
                     demand(3)  - only when LU is requested by
                                  application;
                     onlyMS(4)  - by a network Management Station only."

      ::= { snaNodeEntry 8 }

snaNodeLuTermDefault OBJECT-TYPE
      SYNTAX INTEGER {
                unbind(1),
                termself(2),
                rshutd(3),
                poweroff(4)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value identifies the default method used to deactivate LUs
          for this node.

          For LU6.2s, 'unbind(1)' is the only valid value.




Expires September 06, 1996                                     [Page 14]

Internet Draft                 SNANAU MIB                     March 1996


                unbind(1)   - terminate the LU-LU session by sending
                              an SNA UNBIND request.
                termself(2) - terminate the LU-LU session by sending
                              an SNA TERM-SELF (Terminate Self)
                              request on the SSCP-LU session. The
                              SSCP will inform the remote session LU
                              partner to send an UNBIND request to
                              terminate the session.
                rshutd(3)   - terminate the LU-LU session by sending
                              an SNA RSHUTD (Request ShutDown) request
                              to the remote session LU partner.
                              The remote LU will then send an UNBIND
                              request to terminate the session.
                poweroff(4) - terminate the LU-LU session by sending
                              either an SNA LUSTAT (LU Status) request
                              on the LU-LU session or an SNA NOTIFY
                              request on the SSCP-LU session indicating
                              that the LU has been powered off. Sending
                              both is also acceptable. The result
                              should be that the remote session LU
                              partner will send an UNBIND to terminate
                              the session.

            This object describes the default behavior for this node;
            however, it is possible that for a specific LU the behavior
            indicated by the snaLuOperTerm object is different."

      ::= { snaNodeEntry 9 }

snaNodeMaxLu OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This value identifies the current, maximum number of LUs that
          can be activated for this node.  For type 2.1 nodes, this
          object refers to the number of dependent LUs."

      ::= { snaNodeEntry 10 }

snaNodeStopMethod OBJECT-TYPE
      SYNTAX INTEGER {
                other(1),
                normal(2),
                immed(3),
                force(4)



Expires September 06, 1996                                     [Page 15]

Internet Draft                 SNANAU MIB                     March 1996


                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This value identifies the current node shutdown method to be
          used by the Agent to stop the node.  When the Agent changes the
          node's state to 'inactive (1)', the Agent must use the shutdown
          method indicated by this object.

          The values have the following meaning:

                  other(1) - proprietary method not listed in this
                              enumeration
                  normal(2) - deactivate only when there is no more
                              activity on this node (i.e., all data
                              flows have been completed and all
                              sessions have been terminated).
                  immed(3)  - deactivate immediately regardless of
                              current activities on this node.  Wait
                              for deactivation responses (from remote
                              node) before changing the node state to
                              inactive.
                  force(4)  - deactivate immediately regardless of
                              current activities on this node. Do not
                              wait for deactivation responses (from
                              remote node) before changing the node
                              state to inactive."

      ::= { snaNodeEntry 11 }

snaNodeStartTime OBJECT-TYPE
      SYNTAX DateAndTime
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The time of node activation."

      ::= { snaNodeEntry 12 }

snaNodeLastStateChange OBJECT-TYPE
      SYNTAX DateAndTime
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The time of the last state change of the node."




Expires September 06, 1996                                     [Page 16]

Internet Draft                 SNANAU MIB                     March 1996


      ::= { snaNodeEntry 13 }

snaNodeActFailureReason OBJECT-TYPE
      SYNTAX INTEGER {
                other(1),
                linkFailure(2),
                noResources(3),
                badConfiguration(4),
                internalError(5),
                unknown(255)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value indicates the reason for an activation failure.  The
          value 'other(1)' indicates a reason not listed in the
          enumeration.  The value 'unknown(255)' indicates that a reason
          for the failure cannot be determined.

          This object is sent in the trap snaNodeActFailTrap."

      ::= { snaNodeEntry 14 }


-- ********************************************************************
-- The following object is updated when there is a change to the value
-- of an object in any row of snaNodeTable, or when a row is added to
-- or deleted from the table.
-- ********************************************************************

snaNodeTableLastChange OBJECT-TYPE
      SYNTAX DateAndTime
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The time of at the last change made to any object in the
          snaNodeTable, including row deletions/additions.

          This object can be used to reduce frequent retrievals of the
          snaNodeTable by a Management Station.  It is expected that a
          Management Station will periodically poll this object and
          compare its current value with the previous one.  A difference
          indicates that some node operational information has been
          changed.  Only then will the Management Station retrieve the
          entire table."




Expires September 06, 1996                                     [Page 17]

Internet Draft                 SNANAU MIB                     March 1996


      ::= { snaNode 4 }


-- ********************************************************************
-- The following table contains information for type 2.0 nodes.
-- ********************************************************************

snaPu20Table OBJECT-TYPE
      SYNTAX SEQUENCE OF SnaPu20Entry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "This table contains dynamic parameters that have read-only
          access.  The entries in this table correspond to the type 2.0
          node entries in the snaNodeTable."

      ::= { snaNode 5 }

snaPu20Entry OBJECT-TYPE
      SYNTAX SnaPu20Entry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "The entry contains information related to one type 2.0 node.
          Counters represent traffic for all kinds of sessions:  LU-LU,
          SSCP-PU, and SSCP-LU."

      INDEX { snaPu20Name }

      ::= { snaPu20Table 1 }

SnaPu20Entry ::= SEQUENCE {
          snaPu20Name              DisplayString,
          snaPu20SentBytes         Counter32,
          snaPu20ReceivedBytes     Counter32,
          snaPu20SentPius          Counter32,
          snaPu20ReceivedPius      Counter32,
          snaPu20SentNegRsps       Counter32,
          snaPu20ReceivedNegRsps   Counter32,
          snaPu20ActLus            Gauge32,
          snaPu20InActLus          Gauge32,
          snaPu20BindLus           Gauge32,
          snaPu20HostSscpId        OCTET STRING,
          snaPu20HostDescription   DisplayString,
          snaPu20SscpName          OCTET STRING,
          snaPu20PuName            OCTET STRING



Expires September 06, 1996                                     [Page 18]

Internet Draft                 SNANAU MIB                     March 1996


          }

snaPu20Name OBJECT-TYPE
      SYNTAX DisplayString (SIZE(1..17))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "The locally defined name of the type 2.0 node."

      ::= { snaPu20Entry 1 }

snaPu20SentBytes OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of bytes sent by this node."

      ::= { snaPu20Entry 2 }

snaPu20ReceivedBytes OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of bytes received by this node."

      ::= { snaPu20Entry 3 }

snaPu20SentPius OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of PIUs sent by this node."

      ::= { snaPu20Entry 4 }

snaPu20ReceivedPius OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of PIUs received by this node."

      ::= { snaPu20Entry 5 }



Expires September 06, 1996                                     [Page 19]

Internet Draft                 SNANAU MIB                     March 1996


snaPu20SentNegRsps OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of negative responses sent by this node."

      ::= { snaPu20Entry 6 }

snaPu20ReceivedNegRsps OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of negative responses received by this node."

      ::= { snaPu20Entry 7 }

snaPu20ActLus OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of LUs on this PU that have received and responded
          to ACTLU from the host."

      ::= { snaPu20Entry 8 }

snaPu20InActLus OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of LUs on this PU that have not received an ACTLU
          from the host.  This is possible if the number of configured
          LUs exceeds that on the host."

      ::= { snaPu20Entry 9 }

snaPu20BindLus OBJECT-TYPE
      SYNTAX Gauge32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of LUs on this PU that have received and
          acknowledged a BIND request from the host."



Expires September 06, 1996                                     [Page 20]

Internet Draft                 SNANAU MIB                     March 1996


      ::= { snaPu20Entry 10 }

snaPu20HostSscpId OBJECT-TYPE
      SYNTAX OCTET STRING (SIZE(6))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This value identifies the current SSCP Id associated with the
          node.  It corresponds to bytes 3-8 of ACTPU."

      ::= { snaPu20Entry 11 }

snaPu20HostDescription OBJECT-TYPE
      SYNTAX DisplayString (SIZE(0..128))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value identifies the remote host associated with this
          node.  Since SSCP Id's may not be unique across hosts, the host
          description is required to uniquely identify the SSCP.

          If the remote host is unknown, then the value is the null
          string."

      ::= { snaPu20Entry 12 }

snaPu20SscpName OBJECT-TYPE
      SYNTAX OCTET STRING (SIZE(0 | 3..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The name of the SSCP that activated this 2.0 node.  If an
          ACTPU has not been received, a zero-length string is returned."

      ::= { snaPu20Entry 13 }

snaPu20PuName OBJECT-TYPE
      SYNTAX OCTET STRING (SIZE(0..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The name for this node received from the SSCP.  If an ACTPU
          has not been received, a zero-length string is returned."

      ::= { snaPu20Entry 14 }




Expires September 06, 1996                                     [Page 21]

Internet Draft                 SNANAU MIB                     March 1996


-- ********************************************************************
-- The following table associates an SNA node with its link stations.
-- It represents configured information.
-- ********************************************************************

snaNodeLinkAdminTable OBJECT-TYPE
      SYNTAX SEQUENCE OF SnaNodeLinkAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "This table associates an SNA node with its link stations, and
          contains references to link-specific tables.  If a node is
          configured for multiple links, then the node will have multiple
          entries in this table."

      ::= { snaNode 6 }

snaNodeLinkAdminEntry OBJECT-TYPE
      SYNTAX SnaNodeLinkAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Each entry contains configuration information associating
          an SNA node with one of its link stations."

      INDEX { snaNodeLinkAdminNodeName,
              snaNodeLinkAdminLsName }

      ::= { snaNodeLinkAdminTable 1 }

SnaNodeLinkAdminEntry ::= SEQUENCE {
          snaNodeLinkAdminNodeName   DisplayString,
          snaNodeLinkAdminLsName     DisplayString,
          snaNodeLinkAdminSpecific   RowPointer,
          snaNodeLinkAdminMaxPiu     Integer32
          }

snaNodeLinkAdminNodeName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(1..17))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Locally-defined name of the node.  In a type 2.1 node, this is
          a fully qualified name, meaning that the node name is preceded
          by the NetId (if present) with a period as the delimiter.




Expires September 06, 1996                                     [Page 22]

Internet Draft                 SNANAU MIB                     March 1996


          If this object has the same value as snaNodeName, then the two
          entries being indexed apply to the same SNA node."

      ::= { snaNodeLinkAdminEntry 1 }

snaNodeLinkAdminLsName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(1..10))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Administratively assigned name for the link station."

      ::= { snaNodeLinkAdminEntry 2 }

snaNodeLinkAdminSpecific OBJECT-TYPE
      SYNTAX RowPointer
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This value points to a row in a table containing configuration
          information for the link instance associated with this node and
          link station.  It may, for example, point to a row in the
          sdlcLSAdminTable defined in the SNA DLC MIB module."

      ::= { snaNodeLinkAdminEntry 3 }

snaNodeLinkAdminMaxPiu OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This value identifies the maximum number of octets that can be
          exchanged in one Path Information Unit (PIU) by this node
          through this link station.  This is a configured value, which
          the node will use the next time this link is established."

      ::= { snaNodeLinkAdminEntry 4 }


-- ********************************************************************
-- The following object is updated when there is a change to the value
-- of any object in the snaNodeLinkAdminTable.
-- ********************************************************************
snaNodeLinkAdminTableLastChg OBJECT-TYPE
      SYNTAX DateAndTime
      MAX-ACCESS read-only



Expires September 06, 1996                                     [Page 23]

Internet Draft                 SNANAU MIB                     March 1996


      STATUS current
      DESCRIPTION
          "The time of the last change made to any object in the
          snaNodeLinkAdminTable, including row deletions/additions.

          This object can be used to reduce frequent retrievals of the
          snaNodeLinkAdminTable by a Management Station.  It is expected
          that a Management Station will periodically poll this object
          and compare its current value with the previous one.  A
          difference indicates that some node configuration information
          has been changed.  Only then will the Management Station
          retrieve the entire table."

      ::= { snaNode 7 }

-- ********************************************************************
-- The following table associates an SNA node with its link stations.
-- It represents current operational information.
-- ********************************************************************

snaNodeLinkOperTable OBJECT-TYPE
      SYNTAX SEQUENCE OF SnaNodeLinkOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "This table associates an SNA node with its link stations, and
          contains references to link-specific tables.  If a node has
          multiple links, then the node will have multiple entries in
          this table."

      ::= { snaNode 8 }

snaNodeLinkOperEntry OBJECT-TYPE
      SYNTAX SnaNodeLinkOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Each entry contains operational information associating an SNA
          node with one of its link stations."

      INDEX { snaNodeLinkOperNodeName,
              snaNodeLinkOperLsName }

      ::= { snaNodeLinkOperTable 1 }

SnaNodeLinkOperEntry ::= SEQUENCE {



Expires September 06, 1996                                     [Page 24]

Internet Draft                 SNANAU MIB                     March 1996


          snaNodeLinkOperNodeName   DisplayString,
          snaNodeLinkOperLsName     DisplayString,
          snaNodeLinkOperSpecific   RowPointer,
          snaNodeLinkOperMaxPiu     Integer32
          }

snaNodeLinkOperNodeName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(1..17))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Locally-defined name of the node.  In a type 2.1 node, this is
          a fully qualified name, meaning that the node name is preceded
          by the NetId (if present) with a period as the delimiter.

          If this object has the same value as snaNodeName, then the two
          entries being indexed apply to the same SNA node."

      ::= { snaNodeLinkOperEntry 1 }

snaNodeLinkOperLsName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(1..10))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Administratively assigned name for the link station."

      ::= { snaNodeLinkOperEntry 2 }

snaNodeLinkOperSpecific OBJECT-TYPE
      SYNTAX RowPointer
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This value points to a row in a table containing operational
          information for the link instance associated with this node and
          link station.  It may, for example, point to a row in the
          sdlcLSOperTable defined in the SNA DLC MIB module."

      ::= { snaNodeLinkOperEntry 3 }

snaNodeLinkOperMaxPiu OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION



Expires September 06, 1996                                     [Page 25]

Internet Draft                 SNANAU MIB                     March 1996


          "This value identifies the maximum number of octets that can be
          exchanged in one Path Information Unit (PIU) by this node
          through this link station.  This is the current operational
          value."

      ::= { snaNodeLinkOperEntry 4 }


-- ********************************************************************
-- The following object is updated when there is a change to the value
-- of any object in the snaNodeLinkOperTable.
-- ********************************************************************
snaNodeLinkOperTableLastChg OBJECT-TYPE
      SYNTAX DateAndTime
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The time of the last change made to any object in the
          snaNodeLinkOperTable, including row deletions/additions.

          This object can be used to reduce frequent retrievals of the
          snaNodeLinkOperTable by a Management Station.  It is expected
          that a Management Station will periodically poll this object
          and compare its current value with the previous one.  A
          difference indicates that some node operational information has
          been changed.  Only then will the Management Station retrieve
          the entire table."

      ::= { snaNode 9 }


-- ********************************************************************
-- Traps
-- ********************************************************************

snaNodeTraps OBJECT IDENTIFIER ::= { snaNode 10 }

snaNodeStateChangeTrap NOTIFICATION-TYPE
      OBJECTS { snaNodeName,
                snaNodeOperState }
      STATUS current
      DESCRIPTION
          "This trap indicates that the operational state (i.e., the
          value of the snaNodeOperState object) of a node has changed.
          The following variables are returned:




Expires September 06, 1996                                     [Page 26]

Internet Draft                 SNANAU MIB                     March 1996


               snaNodeName      - name of the node being reported upon

               snaNodeOperState - state of the node after the change."

      ::= { snaNodeTraps 1 }

snaNodeActFailTrap NOTIFICATION-TYPE
      OBJECTS { snaNodeName,
                snaNodeOperState,
                snaNodeActFailureReason }
      STATUS current
      DESCRIPTION
          "This trap indicates a node activation failure.  The value of
          snaNodeOperState indicates the state of the node after the
          activation attempt.  The value of snaNodeActFailureReason
          indicates the reason for the failure."

      ::= { snaNodeTraps 2 }

-- ********************************************************************
-- snaLu group
--
--  This group contains Managed Objects related to all dependent LUs,
--  plus some specific objects for LUs of type 0, 1, 2, 3.
--
--  An implementation having both dependent and independent LU 6.2s, or
--  one having only independent LU 6.2s, reports on these LUs via the
--  APPC MIB.  An implementation having only dependent LU 6.2s reports on
--  them via this MIB.
-- ********************************************************************

-- ********************************************************************
-- snaLuAdminTable
--  Objects in this table contain default or expected configuration
--  values for local dependent LUs of types 0, 1, 2, 3, 4, 6.2, and 7.
-- ********************************************************************

snaLuAdminTable OBJECT-TYPE
      SYNTAX SEQUENCE OF SnaLuAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "This table contains LU configuration information."

      ::= { snaLu 1 }




Expires September 06, 1996                                     [Page 27]

Internet Draft                 SNANAU MIB                     March 1996


snaLuAdminEntry OBJECT-TYPE
      SYNTAX SnaLuAdminEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Contains configuration variables for an LU."

      INDEX { snaLuAdminNodeName,
              snaLuAdminLuName }

      ::= { snaLuAdminTable 1 }

SnaLuAdminEntry ::= SEQUENCE {
          snaLuAdminNodeName       DisplayString,
          snaLuAdminLuName         DisplayString,
          snaLuAdminUserLuName     DisplayString,
          snaLuAdminType           INTEGER,
          snaLuAdminLocalAddress   OCTET STRING,
          snaLuAdminDisplayModel   INTEGER,
          snaLuAdminTerm           INTEGER
          }

snaLuAdminNodeName OBJECT-TYPE
      SYNTAX DisplayString
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "The value indicates the locally-defined name of the node
          through which the LU is to be activated.  In a type 2.1 node,
          this is a fully qualified name, meaning that the node name is
          preceded by the NetId (if present) with a period as the
          delimiter.

          If this object has the same value as snaNodeName, then the two
          entries being indexed apply to the same SNA node."

      ::= { snaLuAdminEntry 1 }

snaLuAdminLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(1..17))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "This value identifies the locally-defined SNA LU name used in
          exchange of SNA data."




Expires September 06, 1996                                     [Page 28]

Internet Draft                 SNANAU MIB                     March 1996


      ::= { snaLuAdminEntry 2 }

snaLuAdminUserLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(0..48))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This value identifies the user configurable name for this LU.
          If a name is not assigned to the LU, then this object contains
          a zero length string."

      ::= { snaLuAdminEntry 3 }

snaLuAdminType OBJECT-TYPE
      SYNTAX INTEGER {
                other(1),
                lu0(2),
                lu1(3),
                lu2(4),
                lu3(5),
                lu4(6),
                lu62(7),          -- dependent only
                lu7(8),
                unknown(255)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This value identifies the LU type."

      ::= { snaLuAdminEntry 4 }

snaLuAdminLocalAddress OBJECT-TYPE
      SYNTAX OCTET STRING (SIZE(1))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The local address for this LU is a byte with a value ranging
          from 1 to 254."

      ::= { snaLuAdminEntry 5 }

snaLuAdminDisplayModel OBJECT-TYPE
      SYNTAX INTEGER {
                invalid(1),
                model2A(2),



Expires September 06, 1996                                     [Page 29]

Internet Draft                 SNANAU MIB                     March 1996


                model2B(3),
                model3A(4),
                model3B(5),
                model4A(6),
                model4B(7),
                model5A(8),
                model5B(9),
                dynamic(10)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value of this object identifies the model type and screen
          size of the terminal connected to the host.  This is only valid
          for LU Type 2.  The values have the following meaning:

              model2A(2) - Model 2 (24 rows x 80 columns) with base
                           attributes
              model2B(3) - Model 2 (24 rows x 80 columns) with extended
                           attributes
              model3A(4) - Model 3 (32 rows x 80 columns) with base
                           attributes
              model3B(5) - Model 3 (32 rows x 80 columns) with extended
                           attributes
              model4A(6) - Model 4 (43 rows x 80 columns) with base
                           attributes
              model4B(7) - Model 4 (43 rows x 80 columns) with extended
                           attributes
              model5A(8) - Model 5 (27 rows x 132 columns) with base
                           attributes
              model5B(9) - Model 5 (27 rows x 132 columns) with extended
                           attributes
              dynamic(10)- Screen size determine with BIND and Read
                           Partition Query.

        In case this LU is not Type 2, then this object contains the
        invalid(1) value."

      ::= { snaLuAdminEntry 6 }

snaLuAdminTerm OBJECT-TYPE
      SYNTAX INTEGER {
                unbind(1),
                termself(2),
                rshutd(3),
                poweroff(4)



Expires September 06, 1996                                     [Page 30]

Internet Draft                 SNANAU MIB                     March 1996


                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This value identifies the desired method for deactivation of
          this LU.  This value overrides the default method
          (snaNodeLuTermDefault) for this node.

          For LU6.2s, 'unbind(1)' is the only valid value.

                unbind(1)   - terminate the LU-LU session by sending
                              an SNA UNBIND request.
                termself(2) - terminate the LU-LU session by sending
                              an SNA TERM-SELF (Terminate Self)
                              request on the SSCP-LU session. The
                              SSCP will inform the remote session LU
                              partner to send an UNBIND request to
                              terminate the session.
                rshutd(3)   - terminate the LU-LU session by sending
                              an SNA RSHUTD (Request ShutDown) request
                              to the remote session LU partner.
                              The remote LU will then send an UNBIND
                              request to terminate the session.
                poweroff(4) - terminate the LU-LU session by sending
                              either an SNA LUSTAT (LU Status) request
                              on the LU-LU session or an SNA NOTIFY
                              request on the SSCP-LU session indicating
                              that the LU has been powered off. Sending
                              both is also acceptable. The result
                              should be that the remote session LU
                              partner will send an UNBIND to terminate
                              the session."

      ::= { snaLuAdminEntry 7 }


-- ********************************************************************
-- snaLuOperTable
--  Objects in this table contain current operational values, such as
--  state values or negotiated parameters, for local dependent LUs of
--  types 0, 1, 2, 3, 4, 6.2, and 7.
-- ********************************************************************

snaLuOperTable OBJECT-TYPE
      SYNTAX SEQUENCE OF SnaLuOperEntry
      MAX-ACCESS not-accessible



Expires September 06, 1996                                     [Page 31]

Internet Draft                 SNANAU MIB                     March 1996


      STATUS current
      DESCRIPTION
          "This table contains dynamic run-time information and control
          variables relating to LUs.  Only objects which are common to
          all types of LUs are included in this table."

      ::= { snaLu 2 }

snaLuOperEntry OBJECT-TYPE
      SYNTAX SnaLuOperEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Contains objects reflecting current information for an LU.
          Each entry is created by the Agent.  All entries have read-only
          access."

      INDEX { snaLuOperNodeName,
              snaLuOperLuName }

      ::= { snaLuOperTable 1 }

SnaLuOperEntry ::= SEQUENCE {
          snaLuOperNodeName           DisplayString,
          snaLuOperLuName             DisplayString,
          snaLuOperUserLuName         DisplayString,
          snaLuOperSscpSuppliedName   DisplayString,
          snaLuOperType               INTEGER,
          snaLuOperLocalAddress       OCTET STRING,
          snaLuOperDisplayModel       INTEGER,
          snaLuOperTerm               INTEGER,
          snaLuOperState              INTEGER
          }

snaLuOperNodeName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(1..17))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "The value indicates the locally-defined name of the node
          through which the LU was activated.  In a type 2.1 node, this
          is a fully qualified name, meaning that the node name is
          preceded by the NetId (if present) with a period as the
          delimiter.

          If this object has the same value as snaNodeName, then the two



Expires September 06, 1996                                     [Page 32]

Internet Draft                 SNANAU MIB                     March 1996


          entries being indexed apply to the same SNA node."

      ::= { snaLuOperEntry 1 }

snaLuOperLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(1..17))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "This value identifies the locally-defined SNA LU name used in
          exchanging SNA data.

          If this object has the same value as snaLuAdminLuName, then the
          two entries being indexed apply to the same LU."

      ::= { snaLuOperEntry 2 }

snaLuOperUserLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(0..48))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "User configurable name for this LU.  If a name is not
          assigned, then this object contains a zero-length string."

      ::= { snaLuOperEntry 3 }

snaLuOperSscpSuppliedName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(0..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value identifies the SNA name of the LU.  This name is
          supplied to a dependent LU by the SSCP that activated it.  If a
          value was not supplied, a zero-length string is returned."

      ::= { snaLuOperEntry 4 }

snaLuOperType OBJECT-TYPE
      SYNTAX INTEGER {
                other(1),
                lu0(2),
                lu1(3),
                lu2(4),
                lu3(5),
                lu4(6),



Expires September 06, 1996                                     [Page 33]

Internet Draft                 SNANAU MIB                     March 1996


                lu62(7),
                lu7(8)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value identifies the current LU type."

      ::= { snaLuOperEntry 5 }

snaLuOperLocalAddress OBJECT-TYPE
      SYNTAX OCTET STRING (SIZE(1))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The local address for this LU is a byte with a value ranging
          from 1 to 254."

      ::= { snaLuOperEntry 6 }

snaLuOperDisplayModel OBJECT-TYPE
      SYNTAX INTEGER {
                invalid(1),
                model2A(2),
                model2B(3),
                model3A(4),
                model3B(5),
                model4A(6),
                model4B(7),
                model5A(8),
                model5B(9),
                dynamic(10)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value of this object identifies the model type and screen
          size of the terminal connected to the host.  This is only valid
          for LU Type 2.  The values have the following meaning:

              model2A(2) - Model 2 (24 rows x 80 columns) with base
                           attributes
              model2B(3) - Model 2 (24 rows x 80 columns) with extended
                           attributes
              model3A(4) - Model 3 (32 rows x 80 columns) with base
                           attributes



Expires September 06, 1996                                     [Page 34]

Internet Draft                 SNANAU MIB                     March 1996


              model3B(5) - Model 3 (32 rows x 80 columns) with extended
                           attributes
              model4A(6) - Model 4 (43 rows x 80 columns) with base
                           attributes
              model4B(7) - Model 4 (43 rows x 80 columns) with extended
                           attributes
              model5A(8) - Model 5 (27 rows x 132 columns) with base
                           attributes
              model5B(9) - Model 5 (27 rows x 132 columns) with extended
                           attributes
              dynamic(10)- Screen size determine with BIND and Read
                           Partition Query.

          In case this LU is not Type 2, then this object contains the
          invalid(1) value."

      ::= { snaLuOperEntry 7 }

snaLuOperTerm OBJECT-TYPE
      SYNTAX INTEGER {
                unbind(1),
                termself(2),
                rshutd(3),
                poweroff(4)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value identifies the current method for deactivation of
          this LU.  This value overrides the default method
          (snaNodeLuTermDefault) for this node.

          For LU6.2s, 'unbind(1)' is the only valid value.

                unbind(1)   - terminate the LU-LU session by sending
                              an SNA UNBIND request.
                termself(2) - terminate the LU-LU session by sending
                              an SNA TERM-SELF (Terminate Self)
                              request on the SSCP-LU session. The
                              SSCP will inform the remote session LU
                              partner to send an UNBIND request to
                              terminate the session.
                rshutd(3)   - terminate the LU-LU session by sending
                              an SNA RSHUTD (Request ShutDown) request
                              to the remote session LU partner.
                              The remote LU will then send an UNBIND



Expires September 06, 1996                                     [Page 35]

Internet Draft                 SNANAU MIB                     March 1996


                              request to terminate the session.
                poweroff(4) - terminate the LU-LU session by sending
                              either an SNA LUSTAT (LU Status) request
                              on the LU-LU session or an SNA NOTIFY
                              request on the SSCP-LU session indicating
                              that the LU has been powered off. Sending
                              both is also acceptable. The result
                              should be that the remote session LU
                              partner will send an UNBIND to terminate
                              the session."

      ::= { snaLuOperEntry 8 }

snaLuOperState OBJECT-TYPE
      SYNTAX INTEGER {
                inactive(1),
                active(2)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value identifies the current operational state of this LU.
          The values indicate the following:

            inactive(1) - LU didn't receive an ACTLU, or it received a
                          DACTLU, or it received an ACTLU and returned a
                          negative response

            active(2)   - LU received an ACTLU and returned a positive
                          response."

      ::= { snaLuOperEntry 9 }


-- ********************************************************************
-- The following table contains information for active LU-LU sessions.
-- ********************************************************************

snaLuActSessTable OBJECT-TYPE
      SYNTAX SEQUENCE OF SnaLuActSessEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "This table contains objects that describe the operational
          state of LU-LU sessions.  Only objects common to all types of
          LUs are included in this table.



Expires September 06, 1996                                     [Page 36]

Internet Draft                 SNANAU MIB                     March 1996


          When a session's snaLuActSessOperState value changes to
          'pendingBind(2)', then the corresponding entry in this table is
          created by the Agent.

          When a session's snaLuActSessOperState value changes to
          'unbound(1)', then the entry for the session is removed from
          this table by the Agent."

      ::= { snaLu 3 }

snaLuActSessEntry OBJECT-TYPE
      SYNTAX SnaLuActSessEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "An entry contains dynamic parameters for an LU-LU session.
          The indices identify the node, local LU, and remote LU for this
          session."

      INDEX { snaLuActSessNodeName,
              snaLuActSessLocLuName,
              snaLuActSessIndex }
      ::= { snaLuActSessTable 1 }

SnaLuActSessEntry ::= SEQUENCE {
          snaLuActSessNodeName         DisplayString,
          snaLuActSessLocLuName        DisplayString,
          snaLuActSessIndex            Integer32,
          snaLuActSessOperState        INTEGER,
          snaLuActSessParLuIndex       RowPointer,
          snaLuActSessLocalApplName    DisplayString,
          snaLuActSessParLuName        DisplayString,
          snaLuActSessMaxSndRuSize     INTEGER,
          snaLuActSessMaxRcvRuSize     INTEGER,
          snaLuActSessSndPacingSize    INTEGER,
          snaLuActSessRcvPacingSize    INTEGER,
          snaLuActSessUpTime           TimeTicks,
          snaLuActSessLinkIndex        RowPointer
          }

snaLuActSessNodeName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(1..17))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "The value indicates the locally-defined name of the node



Expires September 06, 1996                                     [Page 37]

Internet Draft                 SNANAU MIB                     March 1996


          through which the LU for this session was activated.  In a type
          2.1 node, this is a fully qualified name, meaning that the node
          name is preceded by the NetId (if present) with a period as the
          delimiter.

          If this object has the same value as snaNodeName, then the two
          entries being indexed apply to the same SNA node."

      ::= { snaLuActSessEntry 1 }

snaLuActSessLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(1..17))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "This value identifies the locally-defined SNA LU name for the
          session's local LU.

          If this object has the same value as snaLuAdminLuName, then the
          two entries being indexed apply to the same LU."

      ::= { snaLuActSessEntry 2 }

snaLuActSessIndex OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "This value identifies the unique index of the session.  It is
          recommended that an Agent should not reuse the index of a
          deactivated session for a significant period of time (e.g., one
          week)."

      ::= { snaLuActSessEntry 3 }

snaLuActSessOperState OBJECT-TYPE
      SYNTAX INTEGER {
                unbound(1),
                pendingBind(2),
                bound(3),
                pendingUnbind(4)
                }
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "The value indicates the current operational state of the



Expires September 06, 1996                                     [Page 38]

Internet Draft                 SNANAU MIB                     March 1996


          session.

             'unbound(1)'       - session has been unbound; when a
                                  session enters this state, the Agent
                                  removes its entry from this table

             'pendingBind(2)'   - waiting for a BIND from the host; when
                                  a session enters this state, the Agent
                                  creates an entry for it in this table

             'bound(3)'         - session has been successfully bound.

             'pendingUnbind(4)' - session is in this state between the
                                  time when an UNBIND is sent and that
                                  when the rsp(UNBIND) is received.

          Session deactivation:

             If a session is in the operational state 'bound(3)' then
             setting the value of this object to 'unbound(1)' will
             initiate the session shutdown.

             If a session is in the operational state 'pendingBind(2)'
             then setting the value of this object to 'unbound(1)' will
             initiate the session shutdown.

             If a session is in the operational state 'pendingUnbind(4)'
             for an abnormally long period of time (e.g., three minutes)
             then setting the value of this object to 'unbound(1)' will
             change the session operational state to 'unbound(1)'."

      ::= { snaLuActSessEntry 4 }

snaLuActSessParLuIndex OBJECT-TYPE
      SYNTAX RowPointer
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This value may be used to identify information about the
          session partner LU in a table of information about remote LUs.
          Such a table is not defined in this document.

          If a table of remote LU information is not implemented, or if
          the table is implemented but it does not contain information
          about the partner LU for a particular session, then this object
          shall have the value zeroDotZero defined in SNMPv2-SMI."



Expires September 06, 1996                                     [Page 39]

Internet Draft                 SNANAU MIB                     March 1996


      ::= { snaLuActSessEntry 5 }

snaLuActSessLocalApplName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(0..48))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The name of the local application using this LU.  If the local
          application is unknown, then this object contains a zero-length
          string."
      ::= { snaLuActSessEntry 6 }

snaLuActSessParLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(0..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The name of the partner LU for the session.  If the partner's
          LU name is unknown, then this object contains a zero-length
          string."

      ::= { snaLuActSessEntry 7 }

snaLuActSessMaxSndRuSize OBJECT-TYPE
      SYNTAX INTEGER (1..8192)
      UNITS "bytes"
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The maximum RU size used on this session for sending RUs."

      ::= { snaLuActSessEntry 8 }

snaLuActSessMaxRcvRuSize OBJECT-TYPE
      SYNTAX INTEGER (1..8192)
      UNITS "bytes"
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The maximum RU size used on this session for receiving RUs."

      ::= { snaLuActSessEntry 9 }

snaLuActSessSndPacingSize OBJECT-TYPE
      SYNTAX INTEGER (1..63)
      MAX-ACCESS read-only



Expires September 06, 1996                                     [Page 40]

Internet Draft                 SNANAU MIB                     March 1996


      STATUS current
      DESCRIPTION
          "The size of the send pacing window on this session."

      ::= { snaLuActSessEntry 10 }

snaLuActSessRcvPacingSize OBJECT-TYPE
      SYNTAX INTEGER (1..63)
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The size of the receive pacing window on this session."

      ::= { snaLuActSessEntry 11 }

snaLuActSessUpTime OBJECT-TYPE
      SYNTAX TimeTicks
      UNITS "hundredths of a second"
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The length of time the session has been active, measured in
          hundredths of a second."

      ::= { snaLuActSessEntry 12 }

snaLuActSessLinkIndex OBJECT-TYPE
      SYNTAX RowPointer
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This value identifies the link over which the session passes.
          It is an index into snaNodeLinkAdminTable.  If the index value
          is not known, this object shall have the value zeroDotZero
          defined in SNMPv2-SMI."

      ::= { snaLuActSessEntry 13 }


-- *********************************************************************
-- SNA LU Historical Session Table
-- ---------------------------------------------------------------------
-- This table contains historical information about LU-LU sessions that
-- terminated abnormally.   It is an implementation choice how long to
-- retain information on a given session.
-- *********************************************************************



Expires September 06, 1996                                     [Page 41]

Internet Draft                 SNANAU MIB                     March 1996


snaLuHistSessTable OBJECT-TYPE
      SYNTAX SEQUENCE OF SnaLuHistSessEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Table of historical information about LU-LU sessions that
          terminated abnormally.  It is an implementation choice how long
          to retain information about a given session."

      ::= { snaLu 4 }

snaLuHistSessEntry OBJECT-TYPE
      SYNTAX SnaLuHistSessEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Entry of SNA LU Session History Table.  This table is indexed
          by an integer which is continuously incremented until it
          eventually wraps."

      INDEX
             { snaLuHistSessIndex }

      ::= { snaLuHistSessTable 1 }

SnaLuHistSessEntry ::= SEQUENCE {
          snaLuHistSessIndex           INTEGER,
          snaLuHistSessNodeName        DisplayString,
          snaLuHistSessLocLuName       DisplayString,
          snaLuHistSessParLuName       DisplayString,
          snaLuHistSessTime            DateAndTime,
          snaLuHistSessSenseData       SnaSenseData,
          snaLuHistSessTerminationRu   INTEGER,
          snaLuHistSessUnbindType      OCTET STRING
          }

snaLuHistSessIndex OBJECT-TYPE
      SYNTAX INTEGER (0..2147483647)
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Table index.  The value of the index begins at zero
           and is incremented up to a maximum value of 2**31-1
           (2,147,483,647) before wrapping."

      ::= { snaLuHistSessEntry 1 }



Expires September 06, 1996                                     [Page 42]

Internet Draft                 SNANAU MIB                     March 1996


snaLuHistSessNodeName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value indicates the locally-defined name of the node
          through which the LU for this session was activated.  In a type
          2.1 node, this is a fully qualified name, meaning that the node
          name is preceded by the NetId (if present) with a period as the
          delimiter.

          If this object has the same value as snaNodeName, then the two
          entries being indexed apply to the same SNA node."

      ::= { snaLuHistSessEntry 2 }

snaLuHistSessLocLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(1..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This value identifies the locally-defined SNA LU name for the
          session's local LU.

          If this object has the same value as snaLuAdminLuName, then the
          two entries being indexed apply to the same LU."

      ::= { snaLuHistSessEntry 3 }

snaLuHistSessParLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(0..17))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The name of the partner LU for the session.  If the partner's
          LU name is unknown, then this object contains a zero-length
          string."

      ::= { snaLuHistSessEntry 4 }

snaLuHistSessTime OBJECT-TYPE
      SYNTAX DateAndTime
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The time at which the session was either terminated or



Expires September 06, 1996                                     [Page 43]

Internet Draft                 SNANAU MIB                     March 1996


           failed to be established."

      ::= { snaLuHistSessEntry 5 }

snaLuHistSessSenseData OBJECT-TYPE
      SYNTAX SnaSenseData
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value identifies the sense data when there is a BIND
          failure.  It is taken from the negative BIND response or UNBIND
          request."

      ::= { snaLuHistSessEntry 6 }

snaLuHistSessTerminationRu OBJECT-TYPE
      SYNTAX INTEGER {
                other(1),
                bindFailure(2),
                unbind(3)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value identifies the SNA RU that terminated the session."

      ::= { snaLuHistSessEntry 7 }

snaLuHistSessUnbindType OBJECT-TYPE
      SYNTAX OCTET STRING (SIZE(0..1))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "If the session was terminated by an UNBIND, then this object
          contains the UNBIND type value (byte 1 of the UNBIND RU);
          otherwise the string is null."

      ::= { snaLuHistSessEntry 8 }


-- ********************************************************************
-- The following group covers statistics collection for LU-Lu sessions.
-- ********************************************************************
snaLuSessStats OBJECT IDENTIFIER ::= {snaLu 5 }

snaLuSessCntrlOperStat OBJECT-TYPE



Expires September 06, 1996                                     [Page 44]

Internet Draft                 SNANAU MIB                     March 1996


      SYNTAX INTEGER {
                notActive(1),
                active(2)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Indicates the current collection option in effect:

              notActive  collection of session statistics is not active.
              active     collection of session statistics is active.

          Statistical entries are present in the snaLuSessStatsTable
          only when the value of this object is 'active'."

      ::= { snaLuSessStats 1 }

snaLuSessCntrlAdminStat OBJECT-TYPE
      SYNTAX INTEGER {
                notActive(1),
                active(2)
                }
      MAX-ACCESS read-write
      STATUS current
      DESCRIPTION
          "Indicates the desired state of statistics collection:

              notActive  collection of session statistics is not active.
              active     collection of session statistics is active.

          When this object is set to notActive, all of the entries are
          removed from the snaLuSessStatsTable."

      ::= { snaLuSessStats 2 }

-- ********************************************************************
-- The following table contains session statistics for LU-LU sessions.
-- ********************************************************************

snaLuSessStatsTable OBJECT-TYPE
      SYNTAX SEQUENCE OF SnaLuSessStatsEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "This table contains dynamic statistics information relating to
          active LU-LU sessions.  The entries in this table cannot be



Expires September 06, 1996                                     [Page 45]

Internet Draft                 SNANAU MIB                     March 1996


          created by a Management Station."

      ::= { snaLuSessStats 3 }

snaLuSessStatsEntry OBJECT-TYPE
      SYNTAX SnaLuSessStatsEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Contains statistics information for LU-LU sessions.  Each
          entry is created by the Agent.  Objects in this table have
          read-only access.  Each session from snaLuActSessTable has one
          entry in this table."

      INDEX { snaLuSessStatsNodeName,
              snaLuSessStatsLuName,
              snaLuSessStatsParLuName,
              snaLuSessStatsSessIndex }

      ::= { snaLuSessStatsTable 1 }

SnaLuSessStatsEntry ::= SEQUENCE {
          snaLuSessStatsNodeName            DisplayString,
          snaLuSessStatsLuName              DisplayString,
          snaLuSessStatsParLuName           DisplayString,
          snaLuSessStatsSessIndex           Integer32,
          snaLuSessStatsSentFmdBytes        Counter32,
          snaLuSessStatsSentNonFmdBytes     Counter32,
          snaLuSessStatsRcvdFmdBytes        Counter32,
          snaLuSessStatsRcvdNonFmdBytes     Counter32,
          snaLuSessStatsSentFmdRus          Counter32,
          snaLuSessStatsSentNonFmdRus       Counter32,
          snaLuSessStatsRcvdFmdRus          Counter32,
          snaLuSessStatsRcvdNonFmdRus       Counter32,
          snaLuSessStatsSentNegRsps         Counter32,
          snaLuSessStatsRcvdNegRsps         Counter32
          }

snaLuSessStatsNodeName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Locally-defined name of the node through which the local LU
          for this session was activated.  In a type 2.1 node, this is a
          fully qualified name, meaning that the node name is preceded by



Expires September 06, 1996                                     [Page 46]

Internet Draft                 SNANAU MIB                     March 1996


          the NetId (if present) with a period as the delimiter.

          If this object has the same value as snaNodeName, then the two
          entries being indexed apply to the same SNA node."

      ::= { snaLuSessStatsEntry 1 }

snaLuSessStatsLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Specifies the name of the local LU for the session.  This
          field is from 1 to 17 characters in length, including a period
          (.) which separates the NetId from the NAU name if the NetId is
          present.

          If this object has the same value as snaLuOperLuName, then the
          two entries being indexed apply to the same resource
          (specifically, to the same local LU)."

      ::= { snaLuSessStatsEntry 2 }

snaLuSessStatsParLuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE (1..17))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Specifies the name of the partner LU for the session.  This
          field is from 1 to 17 characters in length, including a period
          (.) which separates the NetId from the NAU name if the NetId is
          present.

          If this object has the same value as snaLuActSessParLuName,
          then the two entries being indexed apply to the same resource
          (specifically, to the same partner LU)."

      ::= { snaLuSessStatsEntry 3 }

snaLuSessStatsSessIndex OBJECT-TYPE
      SYNTAX Integer32
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "This value identifies the index of the session, which is
          unique for this LU pair.  It is recommended that an Agent not



Expires September 06, 1996                                     [Page 47]

Internet Draft                 SNANAU MIB                     March 1996


          reuse the index of a deactivated session for a significant
          period of time (e.g., one week).

          If this object has the same value as snaLuActSessIndex for the
          same LU pair, then the two entries being indexed apply to the
          same resource (specifically, to the same session)."

      ::= { snaLuSessStatsEntry 4 }

snaLuSessStatsSentFmdBytes OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of function management data (FMD) bytes sent by the
          local LU."

      ::= { snaLuSessStatsEntry 5 }

snaLuSessStatsSentNonFmdBytes OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of non-function management data (non-FMD) bytes
          sent by the local LU."

      ::= { snaLuSessStatsEntry 6 }

snaLuSessStatsRcvdFmdBytes OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of function management data (FMD) bytes received by
          the local LU."

      ::= { snaLuSessStatsEntry 7 }

snaLuSessStatsRcvdNonFmdBytes OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of non-function management data (non-FMD) bytes
          received by the local LU."



Expires September 06, 1996                                     [Page 48]

Internet Draft                 SNANAU MIB                     March 1996


      ::= { snaLuSessStatsEntry 8 }

snaLuSessStatsSentFmdRus OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of function management data (FMD) RUs sent by the
          local LU."

      ::= { snaLuSessStatsEntry 9 }

snaLuSessStatsSentNonFmdRus OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of non-function management data (non-FMD) RUs sent
          by the local LU."

      ::= { snaLuSessStatsEntry 10 }

snaLuSessStatsRcvdFmdRus OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of function management data (FMD) RUs received by
          the local LU."

      ::= { snaLuSessStatsEntry 11 }

snaLuSessStatsRcvdNonFmdRus OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of non-function management data (non-FMD) RUs
          received by the local LU."

      ::= { snaLuSessStatsEntry 12 }

snaLuSessStatsSentNegRsps OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current



Expires September 06, 1996                                     [Page 49]

Internet Draft                 SNANAU MIB                     March 1996


      DESCRIPTION
          "The number of negative responses sent by the local LU."

      ::= { snaLuSessStatsEntry 13 }

snaLuSessStatsRcvdNegRsps OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of negative responses received by the local LU."

      ::= { snaLuSessStatsEntry 14 }


-- ********************************************************************
-- Traps
-- ********************************************************************

snaLuTraps OBJECT IDENTIFIER ::= { snaLu 6 }

snaLuActSessBindFailTrap NOTIFICATION-TYPE
      OBJECTS { snaLuActSessLocalApplName,
                snaLuActSessParLuName,
                snaLuActSessOperState,
                snaLuHistSessSenseData }
      STATUS current
      DESCRIPTION
          "This trap indicates the failure of a BIND.  The value of
          snaLuActSessLocalApplName indicates the local application name.
          The value of snaLuActSessParLuName indicates the partner name.
          The value of snaLuActSessOperState indicates the current state
          after change.  The value of snaLuHistSessSenseData indicates
          the failure reason.

          The Agent should not generate more than 1 trap of this type per
          minute to minimize the level of management traffic on the
          network."

      ::= { snaLuTraps 1 }


-- ********************************************************************
-- snaMgtTools group
--
-- Currently this group contains only one table.



Expires September 06, 1996                                     [Page 50]

Internet Draft                 SNANAU MIB                     March 1996


-- ********************************************************************

-- ********************************************************************
-- The following table contains Response Time Monitoring (RTM)
-- configuration information and statistics for LU Type 2s.
-- RTM supports the capability to measure and report end-user
-- response times for dependent LUs.  When the RTM state of an LU
-- is 'on', response times for each LU transaction are monitored.
-- A set of ranges is defined (e.g., Range 1 includes the number of
-- transactions with response times less than 1 second) using the
-- "boundary" definitions (e.g., boundary #2 is defined as 3 seconds).
-- A set of counters (one per range) identifies
-- the number of transactions within each response-time range.
-- ********************************************************************

snaLuRtmTable OBJECT-TYPE
      SYNTAX SEQUENCE OF SnaLuRtmEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "This table contains Response Time Monitoring (RTM) information
          relating to an LU (Type 2).  Each entry corresponds to an LU 2
          entry in snaLuAdminTable."

      ::= { snaMgtTools 1 }

snaLuRtmEntry OBJECT-TYPE
      SYNTAX SnaLuRtmEntry
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "Contains RTM information for an LU (Type 2).  Each entry is
          created by the Agent."

      INDEX { snaLuRtmPuName,
              snaLuRtmLuName }

      ::= { snaLuRtmTable 1 }

SnaLuRtmEntry ::= SEQUENCE {
          snaLuRtmPuName       DisplayString,
          snaLuRtmLuName       DisplayString,
          snaLuRtmCorrelator   OCTET STRING,
          snaLuRtmState        INTEGER,
          snaLuRtmStateTime    DateAndTime,
          snaLuRtmDef          INTEGER,



Expires September 06, 1996                                     [Page 51]

Internet Draft                 SNANAU MIB                     March 1996


          snaLuRtmBoundary1    Integer32,
          snaLuRtmBoundary2    Integer32,
          snaLuRtmBoundary3    Integer32,
          snaLuRtmBoundary4    Integer32,
          snaLuRtmCounter1     Counter32,
          snaLuRtmCounter2     Counter32,
          snaLuRtmCounter3     Counter32,
          snaLuRtmCounter4     Counter32,
          snaLuRtmOverflows    Counter32,
          snaLuRtmTotalTime    Integer32,
          snaLuRtmLastRspTime  Integer32
          }

snaLuRtmPuName OBJECT-TYPE
      SYNTAX DisplayString (SIZE(1..17))
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "The locally defined name of the type 2.0 node with which this
          LU is associated.

          If this object has the same value as snaPu20Name, then the two
          entries being indexed apply to the same PU."

      ::= { snaLuRtmEntry 1 }


snaLuRtmLuName OBJECT-TYPE
      SYNTAX DisplayString
      MAX-ACCESS not-accessible
      STATUS current
      DESCRIPTION
          "The name of the LU to which the RTM data applies.

          If this object has the same value as snaLuAdminLuName, then the
          two entries being indexed apply to the same LU."

      ::= { snaLuRtmEntry 2 }

snaLuRtmCorrelator OBJECT-TYPE
      SYNTAX OCTET STRING (SIZE (2))
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "A value that uniquely identifies an LU-LU session.  By
          examining this value, a Management Station can determine



Expires September 06, 1996                                     [Page 52]

Internet Draft                 SNANAU MIB                     March 1996


          whether RTM that it retrieves is for the same session as
          data that it had retrieved previously.

          This object corresponds to bytes 7-8 of the X'91' RTM MS
          subvector."

      ::= { snaLuRtmEntry 3 }

snaLuRtmState OBJECT-TYPE
      SYNTAX INTEGER {
                off(1),
                on(2)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value indicates the current RTM state of an LU.

          This object corresponds to bytes 5-6, bit 0 of the X'91'
          RTM MS subvector."

      ::= { snaLuRtmEntry 4 }

snaLuRtmStateTime  OBJECT-TYPE
      SYNTAX DateAndTime
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The time when the RTM state for this LU last changed."

      ::= { snaLuRtmEntry 5 }

snaLuRtmDef OBJECT-TYPE
      SYNTAX INTEGER {
                firstChar(1),
                kb(2),
                cdeb(3)
                }
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The value indicates the mode of measurement for this RTM
          request.  The values have following meaning:

             firstChar(1) - measured from the Attention or Action key
                            depression to the arrival back at the LU of



Expires September 06, 1996                                     [Page 53]

Internet Draft                 SNANAU MIB                     March 1996


                            the first character that can alter the
                            presentation space
             kb(2)        - measured from the Attention or Action key
                            depression until the LU is ready to accept
                            input from the end user
             cdeb(3)      - measured from the Attention or Action key
                            depression to the receipt and processing
                            back at the LU of Change Direction (CD) or
                            End Bracket (EB)

          This object corresponds to byte 2 of the X'93' RTM MS
          subvector."

      ::= { snaLuRtmEntry 6 }

snaLuRtmBoundary1 OBJECT-TYPE
      SYNTAX Integer32
      UNITS "tenths of a second"
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This object contains the value of the first boundary in units
          of 1/10th of a second.

          This object corresponds to bytes 9-10 of the X'93' RTM MS
          subvector."

      ::= { snaLuRtmEntry 7 }

snaLuRtmBoundary2 OBJECT-TYPE
      SYNTAX Integer32
      UNITS "tenths of a second"
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This object contains the value of the second boundary in units
          of 1/10th of a second.

          This object corresponds to bytes 11-12 of the X'93' RTM MS
          subvector."

      ::= { snaLuRtmEntry 8 }

snaLuRtmBoundary3 OBJECT-TYPE
      SYNTAX Integer32
      UNITS "tenths of a second"



Expires September 06, 1996                                     [Page 54]

Internet Draft                 SNANAU MIB                     March 1996


      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This object contains the value of the third boundary in units
          of 1/10th of a second.

          This object corresponds to bytes 13-14 of the X'93' RTM MS
          subvector."

      ::= { snaLuRtmEntry 9 }

snaLuRtmBoundary4 OBJECT-TYPE
      SYNTAX Integer32
      UNITS "tenths of a second"
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This object contains the value of the fourth boundary in units
          of 1/10th of a second.

          This object corresponds to bytes 15-16 of the X'93' RTM MS
          subvector."

      ::= { snaLuRtmEntry 10 }

snaLuRtmCounter1 OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Number of exchanges in the range (0, boundary1).

          This object corresponds to bytes p+1 - p+2 of the X'93' RTM MS
          subvector."

      ::= { snaLuRtmEntry 11 }

snaLuRtmCounter2 OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Number of exchanges in the range (boundary1 + 1, boundary2).

          This object corresponds to bytes p+3 - p+4 of the X'93' RTM MS
          subvector."



Expires September 06, 1996                                     [Page 55]

Internet Draft                 SNANAU MIB                     March 1996


      ::= { snaLuRtmEntry 12 }

snaLuRtmCounter3 OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Number of exchanges in the range (boundary2 + 1, boundary3).

          This object corresponds to bytes p+5 - p+6 of the X'93' RTM MS
          subvector."

      ::= { snaLuRtmEntry 13 }

snaLuRtmCounter4 OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "Number of exchanges in the range (boundary3 + 1, boundary4).

          This object corresponds to bytes p+7 - p+8 of the X'93' RTM MS
          subvector."

      ::= { snaLuRtmEntry 14 }

snaLuRtmOverflows OBJECT-TYPE
      SYNTAX Counter32
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The number of exchange durations greater than the maximum
          boundary specified.

          This object corresponds to bytes q+1 - q+2 of the X'93' RTM MS
          subvector."

      ::= { snaLuRtmEntry 15 }

snaLuRtmTotalTime OBJECT-TYPE
      SYNTAX Integer32
      UNITS "tenths of a second"
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "The total of all individual times for all exchanges measured



Expires September 06, 1996                                     [Page 56]

Internet Draft                 SNANAU MIB                     March 1996


          and reported by this table row, including overflows, in units
          of 1/10 of a second.

          This object corresponds to bytes q+3 - q+6 of the X'93' RTM MS
          subvector."

      ::= { snaLuRtmEntry 16 }

snaLuRtmLastRspTime OBJECT-TYPE
      SYNTAX Integer32
      UNITS "tenths of a second"
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
          "This value indicates the response time for the last
          transaction in units of 1/10th of a second."

      ::= { snaLuRtmEntry 17 }


-- ********************************************************************
-- Conformance information
-- ********************************************************************

snanauConformance       OBJECT IDENTIFIER ::= { snanauMIB 2 }

snanauCompliances       OBJECT IDENTIFIER ::= {snanauConformance 1 }
snanauGroups            OBJECT IDENTIFIER ::= {snanauConformance 2 }

-- Compliance statements
snanauCompliance  MODULE-COMPLIANCE
      STATUS current
      DESCRIPTION
          "The compliance statement for the SNMPv2 entities which
          implement the SNANAU MIB."  MODULE -- this module

--      Unconditionally mandatory groups
                MANDATORY-GROUPS  { snaNodeGroup,
                                    snaLuGroup,
                                    snaSessionGroup }

--      Conditionally mandatory groups
                GROUP  snaPu20Group
                DESCRIPTION
                    "The snaPu20Group is mandatory only for those
                    entities which implement PU type 2.0"



Expires September 06, 1996                                     [Page 57]

Internet Draft                 SNANAU MIB                     March 1996


                GROUP  snaMgtToolsRtmGroup
                DESCRIPTION
                    "The snaMgtToolsGroup is mandatory only for those
                    entities which implement LU type 2 and RTM."

                OBJECT  snaNodeAdminState
                MIN-ACCESS  read-only
                DESCRIPTION
                    "An Agent is not required to support node
                    deactivation via this object."

      ::= { snanauCompliances 1 }


-- Units of conformance

snaNodeGroup OBJECT-GROUP
      OBJECTS { snaNodeAdminState,
                snaNodeOperState,
                snaNodeSscpSuppliedName,
                snaNodeType,
                snaNodeXidFormat,
                snaNodeId,
                snaNodeEnablingMethod,
                snaNodeLuTermDefault,
                snaNodeMaxLu,
                snaNodeStopMethod,
                snaNodeStartTime,
                snaNodeLastStateChange,
                snaNodeActFailureReason,
                snaNodeTableLastChange,
                snaNodeLinkAdminSpecific,
                snaNodeLinkAdminMaxPiu,
                snaNodeLinkAdminTableLastChg,
                snaNodeLinkOperSpecific,
                snaNodeLinkOperMaxPiu,
                snaNodeLinkOperTableLastChg }
      STATUS current
      DESCRIPTION
          "A collection of objects providing the instrumentation for SNA
          nodes."

      ::= { snanauGroups 1 }

snaLuGroup OBJECT-GROUP
      OBJECTS { snaLuAdminUserLuName,



Expires September 06, 1996                                     [Page 58]

Internet Draft                 SNANAU MIB                     March 1996


                snaLuAdminType,
                snaLuAdminLocalAddress,
                snaLuAdminDisplayModel,
                snaLuAdminTerm,
                snaLuOperUserLuName,
                snaLuOperSscpSuppliedName,
                snaLuOperType,
                snaLuOperLocalAddress,
                snaLuOperDisplayModel,
                snaLuOperTerm,
                snaLuOperState }
      STATUS current
      DESCRIPTION
          "A collection of objects providing the instrumentation for
          dependent SNA LUs."

      ::= { snanauGroups 2 }

snaSessionGroup OBJECT-GROUP
      OBJECTS { snaLuActSessOperState,
                snaLuActSessParLuIndex,
                snaLuActSessLocalApplName,
                snaLuActSessParLuName,
                snaLuActSessMaxSndRuSize,
                snaLuActSessMaxRcvRuSize,
                snaLuActSessSndPacingSize,
                snaLuActSessRcvPacingSize,
                snaLuActSessUpTime,
                snaLuActSessLinkIndex,
                snaLuHistSessNodeName,
                snaLuHistSessLocLuName,
                snaLuHistSessParLuName,
                snaLuHistSessTime,
                snaLuHistSessSenseData,
                snaLuHistSessTerminationRu,
                snaLuHistSessUnbindType,
                snaLuSessCntrlOperStat,
                snaLuSessCntrlAdminStat,
                snaLuSessStatsSentFmdBytes,
                snaLuSessStatsSentNonFmdBytes,
                snaLuSessStatsRcvdFmdBytes,
                snaLuSessStatsRcvdNonFmdBytes,
                snaLuSessStatsSentFmdRus,
                snaLuSessStatsSentNonFmdRus,
                snaLuSessStatsRcvdFmdRus,
                snaLuSessStatsRcvdNonFmdRus,



Expires September 06, 1996                                     [Page 59]

Internet Draft                 SNANAU MIB                     March 1996


                snaLuSessStatsSentNegRsps,
                snaLuSessStatsRcvdNegRsps }
      STATUS current
      DESCRIPTION
          "A collection of objects providing the instrumentation for SNA
          sessions involving dependent LUs."

      ::= { snanauGroups 3 }

snaPu20Group OBJECT-GROUP
      OBJECTS { snaPu20SentBytes,
                snaPu20ReceivedBytes,
                snaPu20SentPius,
                snaPu20ReceivedPius,
                snaPu20SentNegRsps,
                snaPu20ReceivedNegRsps,
                snaPu20ActLus,
                snaPu20InActLus,
                snaPu20BindLus,
                snaPu20HostSscpId,
                snaPu20HostDescription,
                snaPu20SscpName,
                snaPu20PuName  }
      STATUS current
      DESCRIPTION
          "A collection of objects providing the instrumentation for type
          2.0 nodes."

      ::= { snanauGroups 4 }

snaMgtToolsRtmGroup OBJECT-GROUP
      OBJECTS { snaLuRtmCorrelator,
                snaLuRtmState,
                snaLuRtmStateTime,
                snaLuRtmDef,
                snaLuRtmBoundary1,
                snaLuRtmBoundary2,
                snaLuRtmBoundary3,
                snaLuRtmBoundary4,
                snaLuRtmCounter1,
                snaLuRtmCounter2,
                snaLuRtmCounter3,
                snaLuRtmCounter4,
                snaLuRtmOverflows,
                snaLuRtmTotalTime,
                snaLuRtmLastRspTime }



Expires September 06, 1996                                     [Page 60]

Internet Draft                 SNANAU MIB                     March 1996


      STATUS current
      DESCRIPTION
          "A collection of objects providing the instrumentation of RTM
          for SNA LU 2.0."

      ::= { snanauGroups 5 }

-- end of conformance statement


END






































Expires September 06, 1996                                     [Page 61]

Internet Draft                 SNANAU MIB                     March 1996


6.  Acknowledgments

This MIB module is the product of the SNA NAU MIB Working Group.


7.  References


[1]  IBM, Systems Network Architecture Technical Overview, GC30-3073-3,
     March, 1991.

[2]  SNMPv2 Working Group, Case, J., McCloghrie, K., Rose, M., and S.
     Waldbusser, "Structure of Management Information for version 2 of
     the Simple Network Management Protocol (SNMPv2)", RFC 1902, January
     1996.

[3]  McCloghrie, K., and M. Rose, Editors, "Management Information Base
     for Network Management of TCP/IP-based internets: MIB-II", STD 17,
     RFC 1213, March 1991.

[4]  Case, J., Fedor, M., Schoffstall, M., and J. Davin, "Simple Network
     Management Protocol", RFC 1157, May 1990.

[5]  SNMPv2 Working Group, Case, J., McCloghrie, K., Rose, M., and S.
     Waldbusser, "Protocol Operations for version 2 of the Simple
     Network Management Protocol (SNMPv2)", RFC 1905, January 1996.























Expires September 06, 1996                                     [Page 62]

Internet Draft                 SNANAU MIB                     March 1996


8.  Security Considerations

Security issues are not discussed in this memo.


9.  Authors' Addresses

     Zbigniew Kielczewski
     Cisco Systems
     7025 Kit Creek Road
     P.O. Box 14987
     Research Triangle Park, NC 27709, USA

     Tel:    1 919 472 2326
     E-mail: zkielcze@cisco.com


     Kitty Shih
     Novell
     890 Ross Drive
     Sunnyvale, CA 94089

     Tel:   1 408 747 4305
     E-mail: kmshih@novell.com


     Bob Moore
     IBM Corporation
     800 Park Offices Drive
     CNMA/664
     P.O. Box 12195
     Research Triangle Park, NC 27709, USA

     Tel:    1 919 254 4436
     E-mail: remoore@ralvm6.vnet.ibm.com














Expires September 06, 1996                                     [Page 63]

Internet Draft                 SNANAU MIB                     March 1996


10.  Table of Contents


   1.     Status of this Memo  ....................................  1
   2.     Introduction  ...........................................  2
   3.     The SNMPv2 Network Management Framework  ................  2
   4.     Overview  ...............................................  2
   4.1      SNANAU MIB structure ..................................  3
   5.     Definitions  ............................................  8
   6.     Acknowledgments  ........................................  62
   7.     References  .............................................  62
   8.     Security Considerations  ................................  63
   9.    Author's Addresses  ......................................  63




































Expires September 06, 1996                                     [Page 64]


