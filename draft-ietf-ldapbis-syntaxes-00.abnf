a = "a" / "b" / "c" / "d" / "e" / "f" / "g" / "h" / "i" / "j" /
          "k" / "l" / "m" / "n" / "o" / "p" / "q" / "r" / "s" / "t" /
          "u" / "v" / "w" / "x" / "y" / "z" / "A" / "B" / "C" / "D" /
          "E" / "F" / "G" / "H" / "I" / "J" / "K" / "L" / "M" / "N" /
          "O" / "P" / "Q" / "R" / "S" / "T" / "U" / "V" / "W" / "X" /
          "Y" / "Z"

d = "0" / "1" / "2" / "3" / "4" / "5" / "6" / "7" / "8" / "9"

hex-digit = d / "a" / "b" / "c" / "d" / "e" / "f" /
                 "A" / "B" / "C" / "D" / "E" / "F"

k = a / d / "-" / ";"

p = a / d / """ / "(" / ")" / "+" / "," / "-" / "." /
          "/" / ":" / "?" / " "

letterstring = 1*a

numericstring = 1*d

anhstring = 1*k

keystring = a [ anhstring ]

printablestring = 1*p

space = 1*" "
whsp = [ space ]

utf8 = <any sequence of octets formed from the UTF-8 [9] 
              transformation of a character from ISO10646 [10]>

dstring = 1*utf8

qdstring = whsp "'" dstring "'" whsp

qdstringlist = [ qdstring *( qdstring ) ]

qdstrings = qdstring / ( whsp "(" qdstringlist ")" whsp )

oid = descr / numericoid

descr = keystring

numericoid = numericstring *( "." numericstring ) [ "{" len "}" ]

len = numericstring

woid = whsp oid whsp

oids = woid / ( "(" oidlist ")" )  ; set of oids of either form

oidlist = woid *( "$" woid )

qdescrs = qdescr / ( whsp "(" qdescrlist ")" whsp )  ; object 
                  ;  descriptors used as schema element names

qdescrlist = [ qdescr *( qdescr ) ]

qdescr = whsp "'" descr "'" whsp

SyntaxDescription = "(" whsp 
          numericoid whsp 
          ["NAME" qdescrs ]
          [ "DESC" qdstring ] 
          whsp ")"

MatchingRuleDescription = "(" whsp 
         numericoid whsp  ; MatchingRule identifier
         [ "NAME" qdescrs ]
         [ "DESC" qdstring ]
         [ "OBSOLETE" whsp ]
         "SYNTAX" oid
         whsp ")"

MatchingRuleUseDescription = "(" whsp
         numericoid whsp   ;  MatchingRule identifier
         [ "NAME" qdescrs ]
         [ "DESC" qdstring ]
         [ "OBSOLETE" ]
         "APPLIES" oids    ;  AttributeType identifiers
         whsp ")" 

AttributeTypeDescription = "(" whsp
         numericoid whsp                  ; AttributeType identifier
         [ "NAME" qdescrs ]               ; name used in AttributeType
         [ "DESC" qdstring ]              ; description
         [ "OBSOLETE" whsp ]
         [ "SUP" woid ]                   ; derived from this other
                                          ; AttributeType
         [ "EQUALITY" woid ]              ; Matching Rule name
         [ "ORDERING" woid ]              ; Matching Rule name
         [ "SUBSTR" woid ]                ; Matching Rule name
         [ "SYNTAX" whsp noidlen whsp ]   ; see section 2.3
         [ "SINGLE-VALUE" whsp ]          ; default multi-valued
         [ "COLLECTIVE" whsp ]            ; default not collective
         [ "NO-USER-MODIFICATION" whsp ]  ; default user modifiable
         [ "USAGE" whsp AttributeUsage ]  ; default userApplications
         whsp ")"

ObjectClassDescription = "(" whsp 
         numericoid whsp      ; ObjectClass identifier
         [ "NAME" qdescrs ]
         [ "DESC" qdstring ]
         [ "OBSOLETE" whsp ]
         [ "SUP" oids ]       ; Superior ObjectClasses
         [ ( "ABSTRACT" / "STRUCTURAL" / "AUXILIARY" ) whsp ]
                              ; default structural
         [ "MUST" oids ]      ; AttributeTypes
         [ "MAY" oids ]       ; AttributeTypes
         whsp ")" 

bitstring = "'" *binary-digit "'B"

binary-digit = "0" / "1"

boolean = "TRUE" / "FALSE"

CountryString  = p p

delivery-value = pdm / ( pdm whsp "$" whsp delivery-value )

pdm = "any" / "mhs" / "physical" / "telex" / "teletex" /
                "g3fax" / "g4fax" / "ia5" / "videotex" / "telephone"

DITContentRuleDescription = "("
         numericoid           ; Structural ObjectClass identifier
         [ "NAME" qdescrs ]
         [ "DESC" qdstring ]
         [ "OBSOLETE" ]
         [ "AUX" oids ]       ; Auxiliary ObjectClasses
         [ "MUST" oids ]      ; AttributeType identifiers
         [ "MAY" oids ]       ; AttributeType identifiers
         [ "NOT" oids ]       ; AttributeType identifiers
         ")"
DITStructureRuleDescription = "(" whsp
         ruleidentifier whsp             ; DITStructureRule identifier
         [ "NAME" qdescrs ]
         [ "DESC" qdstring ]
         [ "OBSOLETE" whsp ]
         "FORM" woid whsp                ; NameForm
         [ "SUP" ruleidentifiers whsp ]  ; superior DITStructureRules
         ")"

ruleidentifier = numericstring

ruleidentifiers = ruleidentifier | "(" whsp ruleidentifierlist 
         whsp ")"

ruleidentifierlist = [ ruleidentifier *( whsp "$" whsp 
         ruleidentifier ) ]

CN=Steve Kille,O=Isode Limited,C=GB

OU=Sales+CN=J. Smith,O=Widget Inc.,C=US
CN=L. Eagle,O=Sue\, Grabbit and Runn,C=GB

CN=Before\0DAfter,O=Test,C=GB

SN=Lu\C4\8Di\C4\87

EnhancedGuide = woid whsp "#" whsp criteria whsp "#" whsp subset

subset = "baseobject" / "oneLevel" / "wholeSubtree"

criteria = criteria-item / criteria-set / ( "!" criteria )

criteria-set = ( [ "(" ] criteria "&" criteria-set [ ")" ] ) /
                     ( [ "(" ] criteria "|" criteria-set [ ")" ] )

criteria-item = [ "(" ] attributetype "$" match-type [ ")" ]

match-type = "EQ" / "SUBSTR" / "GE" / "LE" / "APPROX"

fax-number = printablestring [ "$" faxparameters ]

faxparameters = faxparm / ( faxparm "$" faxparameters )
faxparm = "twoDimensional" / "fineResolution" / "unlimitedLength" 
         / "b4Length" / "a3Width" / "b4Width" / "uncompressed"

guide-value = [ object-class "#" ] criteria

object-class = woid
NameAndOptionalUID = DistinguishedName [ "#" bitstring ]

NameFormDescription = "(" whsp
         numericoid whsp        ; NameForm identifier
         [ "NAME" qdescrs ]
         [ "DESC" qdstring ]
         [ "OBSOLETE" whsp ]
         "OC" woid              ; Structural ObjectClass
         "MUST" oids            ; AttributeTypes
         [ "MAY" oids ]         ; AttributeTypes
         whsp ")"

otherMailbox = mailbox-type "$" mailbox

mailbox-type = printablestring

mailbox = <an encoded IA5 String>

postal-address = dstring *( "$" dstring )

substring = [initial] any [final]

initial = value

any = "*" *(value "*")

final = value

teletex-id = ttx-term  0*("$" ttx-param)

ttx-term   = printablestring

ttx-param  = ttx-key ":" ttx-value

ttx-key    = "graphic" / "control" / "misc" / "page" / "private"

ttx-value  = octetstring

telex-number  = actual-number "$" country "$" answerback

actual-number = printablestring

country       = printablestring

answerback    = printablestring

