dfs_number = 0
dfs_number = 0
n = n.lowpoint_parent
e = n
x = pop(Stack)
ear_list = empty
cur_node = intf.remote_node
cur_intf = intf

cur_intf = cur_node.lowpoint_parent_intf
cur_intf = cur_node.dfs_parent_intf
cur_node = cur_intf.remote_node

localroot = x
localroot = x.localroot
y = remove_end_item_from_list(ear_list)
found_in_gadag = false
min_node = remove_lowest(spf_heap)
found_in_gadag = true
path_metric = min_node.spf_metric + intf.metric
end_ear = Mod_SPF(spf_root, block_root)
y = end_ear.spf_prev_hop
y = y.local_node.spf_prev_intf


               Figure 15: Modified SPF for GADAG computation

direction = A_TO_B
direction = B_TO_A
direction = B_TO_A
v = remove_start_item_from_list(cut_vertex_list)
cand_intf = remove_lowest(ordered_intfs_tree)
ear_end = SPF_for_Ear(cand_intf.remote_node, v, ear_list,
                         cut_vertex_list)
y = remove_start_item_from_list(working_list)
next_topo_order = 1
y = remove_start_item_from_list(topo_order_list)
min_node = remove_lowest(spf_heap)
path_metric = min_node.spf_metric + intf.metric
path_metric = min_node.spf_metric +
                                     intf.remote_intf.metric
D_lower = D.order_proxy.lower
D_higher = D.order_proxy.higher
D_topo_order = D.order_proxy.topo_order
D_lower = D.lower
D_higher = D.higher
D_topo_order = D.topo_order

