



ALTO WG                                                           K. Gao
Internet-Draft                                       Tsinghua University
Intended status: Standards Track                                  Y. Lee
Expires: September 12, 2019                                       Huawei
                                                          S. Randriamasy
                                                         Nokia Bell Labs
                                                                 Y. Yang
                                                         Yale University
                                                                J. Zhang
                                                       Tongji University
                                                          March 11, 2019


                 ALTO Extension: Path Vector Cost Type
                     draft-ietf-alto-path-vector-05

Abstract

   The Application-Layer Traffic Optimization (ALTO) protocol [RFC7285]
   has defined cost maps and endpoint cost maps to provide basic network
   information.  However, they provide only scalar (numerical or
   ordinal) cost mode values, which are insufficient to satisfy the
   demands of solving more complex network optimization problems.  This
   document introduces an extension to the base ALTO protocol, namely
   the path-vector extension, which allows ALTO clients to query
   information such as the capacity region for a given set of flows
   (called co-flows).  A non-normative example called co-flow scheduling
   is presented to illustrate the limitations of existing ALTO endpoint
   cost maps.  After that, details of the extension are defined.

Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any



Gao, et al.            Expires September 12, 2019               [Page 1]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 12, 2019.

Copyright Notice

   Copyright (c) 2019 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   5
   3.  Use Case: Capacity Region for Co-Flow Scheduling  . . . . . .   5
   4.  Overview of Path Vector Extensions  . . . . . . . . . . . . .   7
     4.1.  New Cost Type to Encode Path Vectors  . . . . . . . . . .   7
     4.2.  New ALTO Entity Domain to Provide ANE Properties  . . . .   8
     4.3.  Extended Cost Map/Endpoint Cost Service for Compound
           Resources . . . . . . . . . . . . . . . . . . . . . . . .   8
   5.  Cost Type . . . . . . . . . . . . . . . . . . . . . . . . . .   8
     5.1.  Cost Mode: array  . . . . . . . . . . . . . . . . . . . .   9
     5.2.  Cost Metric: ane-path . . . . . . . . . . . . . . . . . .   9
     5.3.  Path Vector Cost Type Semantics . . . . . . . . . . . . .   9
   6.  ANE Domain  . . . . . . . . . . . . . . . . . . . . . . . . .  10
     6.1.  Domain Name . . . . . . . . . . . . . . . . . . . . . . .  10
     6.2.  Domain-Specific Entity Addresses  . . . . . . . . . . . .  10
     6.3.  Hierarchy and Inheritance . . . . . . . . . . . . . . . .  10
   7.  Protocol Extensions for Path Vector . . . . . . . . . . . . .  10
     7.1.  Filtered Cost Map Extensions  . . . . . . . . . . . . . .  11
       7.1.1.  Accept Input Parameters . . . . . . . . . . . . . . .  11
       7.1.2.  Capabilities  . . . . . . . . . . . . . . . . . . . .  11
       7.1.3.  Response  . . . . . . . . . . . . . . . . . . . . . .  12
     7.2.  Endpoint Cost Service Extensions  . . . . . . . . . . . .  12
       7.2.1.  Accept Input Parameters . . . . . . . . . . . . . . .  13
       7.2.2.  Capabilities  . . . . . . . . . . . . . . . . . . . .  13
       7.2.3.  Response  . . . . . . . . . . . . . . . . . . . . . .  13
   8.  Examples  . . . . . . . . . . . . . . . . . . . . . . . . . .  13



Gao, et al.            Expires September 12, 2019               [Page 2]

Internet-Draft         ALTO Extension: Path Vector            March 2019


     8.1.  Workflow  . . . . . . . . . . . . . . . . . . . . . . . .  13
     8.2.  Information Resource Directory Example  . . . . . . . . .  14
     8.3.  Example # 1 . . . . . . . . . . . . . . . . . . . . . . .  16
     8.4.  Example # 2 . . . . . . . . . . . . . . . . . . . . . . .  18
     8.5.  Example #3  . . . . . . . . . . . . . . . . . . . . . . .  20
   9.  Compatibility . . . . . . . . . . . . . . . . . . . . . . . .  22
     9.1.  Compatibility with Base ALTO Clients/Servers  . . . . . .  22
     9.2.  Compatibility with Multi-Cost Extension . . . . . . . . .  23
     9.3.  Compatibility with Incremental Update . . . . . . . . . .  23
   10. General Discussions . . . . . . . . . . . . . . . . . . . . .  23
     10.1.  Provide Calendar for Property Map  . . . . . . . . . . .  23
     10.2.  Constraint Tests for General Cost Types  . . . . . . . .  24
     10.3.  General Compound Resources Query . . . . . . . . . . . .  24
   11. Security Considerations . . . . . . . . . . . . . . . . . . .  24
   12. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  25
     12.1.  ALTO Cost Mode Registry  . . . . . . . . . . . . . . . .  25
     12.2.  ALTO Cost Metric Registry  . . . . . . . . . . . . . . .  26
     12.3.  ALTO Entity Domain Registry  . . . . . . . . . . . . . .  26
     12.4.  ALTO Network Element Property Type Registry  . . . . . .  26
   13. Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  26
   14. References  . . . . . . . . . . . . . . . . . . . . . . . . .  27
     14.1.  Normative References . . . . . . . . . . . . . . . . . .  27
     14.2.  Informative References . . . . . . . . . . . . . . . . .  27
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  27

1.  Introduction

   The base ALTO protocol [RFC7285] is designed to expose network
   information through services such as cost maps and endpoint cost
   service.  These services use an extreme "single-node" network
   abstraction, which represents a whole network as a single node and
   hosts as "endpoint groups" directly connected to the node.

   Although the "single-node" abstraction works well in many settings,
   it lacks the ability to support emerging use cases, such as co-flow
   scheduling for large-scale data analytics.  For such a use case,
   applications require a more powerful network view abstraction beyond
   the "single-node" abstraction.

   To support capabilities like co-flow scheduling, this document uses a
   "path vector" abstraction to represent more detailed network graph
   information like capacity regions.  The path vector abstraction uses
   path vectors with abstract network elements to provide network graph
   view for applications.  A path vector consists of a sequence of
   abstract network elements (ANEs) that end-to-end traffic goes
   through.  Example ANEs include links, switches, middleboxes, and
   their aggregations.  An ANE can have properties such as "bandwidth",
   "delay".  Providing such information can help both applications to



Gao, et al.            Expires September 12, 2019               [Page 3]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   achieve better application performance and networks to avoid network
   congestion.

   Providing path vector abstraction using ALTO introduces the following
   additional requirements (ARs):

   AR-1:  The path vector abstraction requires the encoding of array-
      like cost values rather than scalar cost values in cost maps or
      endpoint cost maps.

      Specifically, the path vector abstraction requires the
      specification of the sequence of ANEs between sources and
      destinations.  Such a sequence, however, cannot be encoded by the
      scalar types (numerical or ordinal) which the base ALTO protocol
      supports.

   AR-2:  The path vector abstraction requires the encoding of the
      properties of aforementioned ANEs.

      Specifically, only the sequences of ANEs are not enough for
      existing use cases.  Properties of ANEs such as "bandwidth" and
      "delay" are needed by applications to properly construct capacity
      regions.

   AR-3:  The path vector abstraction requires consistent encoding of
      path vectors (AR-1) and the properties of the elements in a path
      vector (AR-2).

      Specifically, path vectors and the properties of abstract network
      elements in the vectors are dependent.  A mechanism to query both
      of them consistently is necessary.

   This document proposes the path vector extension which satisfies
   these additional requirements to the ALTO protocol.  Specifically,
   the ALTO protocol encodes the array of ANEs over an end-to-end path
   using a new cost type, and conveys the properties of ANEs using
   unified property map [I-D.ietf-alto-unified-props-new].  We also
   provide an optional solution to query separated path vectors and
   properties of ANEs in a consistent way.  But querying general
   separated resources consistently is not the scope in this document.

   The rest of this document is organized as follows.  Section 3 gives
   an example of co-flow scheduling and illustrates the limitations of
   the base ALTO protocol in such a use case.  Section 4 gives an
   overview of the path vector extension.  Section 5 introduces a new
   cost type.  Section 6 registers a new domain in Domain Registry.
   Section 7 extends Filtered Cost Map and Endpoint Cost Service to
   support the compound resource query.  Section 8 presents several



Gao, et al.            Expires September 12, 2019               [Page 4]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   examples.  Section 9 and Section 10 discusses compatibility issues
   with other existing ALTO extensions and design decisions.  Section 11
   and Section 12 review the security and IANA considerations.

2.  Terminology

   Besides the terms defined in [RFC7285] and
   [I-D.ietf-alto-unified-props-new], this document also uses the
   following additional terms: Abstract Network Element, Path Vector.

   o  Abstract Network Element (ANE): An abstract network element is an
      abstraction of network components; it can be an aggregation of
      links, middle boxes, virtualized network function (VNF), etc.  An
      abstract network element has two types of attributes: a name and a
      set of properties.

   o  Path Vector: A path vector is an array of ANEs.  It presents an
      abstract network path between source/destination points such as
      PIDs or endpoints.

3.  Use Case: Capacity Region for Co-Flow Scheduling

   Assume that an application has control over a set of flows, which may
   go through shared links or switches and share a bottleneck.  The
   application hopes to schedule the traffic among multiple flows to get
   better performance.  The capacity region information for those flows
   will benefit the scheduling.  However, existing cost maps can not
   reveal such information.

   Specifically, consider a network as shown in Figure 1.  The network
   has 7 switches (sw1 to sw7) forming a dumb-bell topology.  Switches
   sw1/sw3 provide access on one side, sw2/sw4 provide access on the
   other side, and sw5-sw7 form the backbone.  Endhosts eh1 to eh4 are
   connected to access switches sw1 to sw4 respectively.  Assume that
   the bandwidth of link eh1 -> sw1 and link sw1 -> sw5 are 150 Mbps,
   and the bandwidth of the rest links are 100 Mbps.















Gao, et al.            Expires September 12, 2019               [Page 5]

Internet-Draft         ALTO Extension: Path Vector            March 2019


                                  +------+
                                  |      |
                                --+ sw6  +--
                              /   |      |  \
        PID1 +-----+         /    +------+   \          +-----+  PID2
        eh1__|     |_       /                 \     ____|     |__eh2
             | sw1 | \   +--|---+         +---|--+ /    | sw2 |
             +-----+  \  |      |         |      |/     +-----+
                       \_| sw5  +---------+ sw7  |
        PID3 +-----+   / |      |         |      |\     +-----+  PID4
        eh3__|     |__/  +------+         +------+ \____|     |__eh4
             | sw3 |                                    | sw4 |
             +-----+                                    +-----+

                      Figure 1: Raw Network Topology.

   The single-node ALTO topology abstraction of the network is shown in
   Figure 2.

                          +----------------------+
                 {eh1}    |                      |     {eh2}
                 PID1     |                      |     PID2
                   +------+                      +------+
                          |                      |
                          |                      |
                 {eh3}    |                      |     {eh4}
                 PID3     |                      |     PID4
                   +------+                      +------+
                          |                      |
                          +----------------------+

             Figure 2: Base Single-Node Topology Abstraction.

   Consider an application overlay (e.g., a large data analysis system)
   which wants to schedule the traffic among a set of end host source-
   destination pairs, say eh1 -> eh2 and eh1 -> eh4.  The application
   can request a cost map providing end-to-end available bandwidth,
   using 'availbw' as cost-metric and 'numerical' as cost-mode.

   The application will receive from ALTO server that the bandwidth of
   eh1 -> eh2 and eh1 -> eh4 are both 100 Mbps.  But this information is
   not enough.  Consider the following two cases:

   o  Case 1: If eh1 -> eh2 uses the path eh1 -> sw1 -> sw5 -> sw6 ->
      sw7 -> sw2 -> eh2 and eh1 -> eh4 uses path eh1 -> sw1 -> sw5 ->
      sw7 -> sw4 -> eh4, then the application will obtain 150 Mbps at
      most.




Gao, et al.            Expires September 12, 2019               [Page 6]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   o  Case 2: If eh1 -> eh2 uses the path eh1 -> sw1 -> sw5 -> sw7 ->
      sw2 -> eh2 and eh1 -> eh4 uses the path eh1 -> sw1 -> sw5 -> sw7
      -> sw4 -> eh4, then the application will obtain only 100 Mbps at
      most.

   To allow applications to distinguish the two aforementioned cases,
   the network needs to provide more details.  In particular:

   o  The network needs to expose more detailed routing information to
      show the shared bottlenecks.

   o  The network needs to provide the necessary abstraction to hide the
      real topology information while providing enough information to
      applications.

   The path vector extension defined in this document propose a solution
   to provide these details.

   See [I-D.bernstein-alto-topo] for a more comprehensive survey of use
   cases where extended network topology information is needed.

4.  Overview of Path Vector Extensions

   This section presents an overview of approaches adopted by the path
   vector extension.  It assumes the readers are familiar with cost map
   and endpoint cost service defined in [RFC7285].  The path vector
   extension also requires the support of Filtered Property Map defined
   in [I-D.ietf-alto-unified-props-new].

   The path vector extension is composed of three building blocks: (1) a
   new cost type to encode path vectors; (2) a new ALTO entity domain
   for unified property extension [I-D.ietf-alto-unified-props-new] to
   encode properties of ANEs; and (3) an extension to the cost map and
   endpoint cost resource to provide path vectors and properties of ANEs
   in a single response.

4.1.  New Cost Type to Encode Path Vectors

   Existing cost types defined in [RFC7285] allow only scalar cost
   values.  However, the "path vector" abstraction requires to convey
   vector format information.  To achieve this requirement, this
   document defines a new cost mode to enable the cost value to carry an
   array of elements, and a new cost metric to take names of ANEs as
   elements in the array.  We call such an array of ANEs a path vector.
   In this way, the cost map and endpoint cost service can convey the
   path vector to represent the routing information.  Detailed
   information and specifications are given in Section 5.1 and
   Section 5.2.



Gao, et al.            Expires September 12, 2019               [Page 7]

Internet-Draft         ALTO Extension: Path Vector            March 2019


4.2.  New ALTO Entity Domain to Provide ANE Properties

   The path vector can only represent the route between the source and
   the destination.  Although the application can find the shared ANEs
   among different paths, it is not enough for most use cases, which
   requires the bandwidth or delay information of the ANEs.  So this
   document adopts the property map defined in
   [I-D.ietf-alto-unified-props-new] to provide the general properties
   of ANEs.  The document registers a new entity domain called "ane" to
   represent the ANE.  The address of the ANE entity is just the ANE
   name used by the path vector.  By requesting the property map of
   entities in the "ane" domain, the client can retrieve the properties
   of ANEs in path vectors.

4.3.  Extended Cost Map/Endpoint Cost Service for Compound Resources

   Providing the path vector information and the ANE properties by
   separated resources have several known benefits: (1) can be better
   compatible with the base ALTO protocol; (2) can make different
   property map resources reuse the same cost map or endpoint cost
   resource.  However, it conducts two issues:

   o  Efficiency: The separated resources will require the ALTO client
      to invoke multiple requests/responses to collect all needed
      information.  It increases the communication overhead.

   o  Consistency: The path vectors and properties of ANEs are
      correlated.  So querying them one by one may conduct consistency
      issue.  Once the path vector changes during the client requests
      the ANE properties, the ANE properties may be inconsistent with
      the previous path vector.

   To solve these issues, this document introduces an extension to cost
   map and endpoint cost service, which allows the ALTO server to attach
   a property map in the data entry of a cost map or an endpoint cost
   service response.

   These issues may exist in all general cases for querying separated
   ALTO information resources.  But solving this general problem is not
   in the scope of this document.

5.  Cost Type

   This document extends the cost types defined in Section 6.1 of
   [RFC7285] by introducing a new cost mode "array" and a new cost
   metric "ane-path".  In the rest content, this document uses "path-
   vector" to indicate the combination cost type of the cost mode
   "array" and the cost metric "ane-path".



Gao, et al.            Expires September 12, 2019               [Page 8]

Internet-Draft         ALTO Extension: Path Vector            March 2019


5.1.  Cost Mode: array

   This document extends the CostMode defined in Section 10.5 of
   [RFC7285] with a new cost mode: "array".  This cost mode indicates
   that every cost value in a cost map represents an array rather than a
   simple value.  The values are arrays of JSONValue.  The specific type
   of each element in the array depends on the cost metric.

5.2.  Cost Metric: ane-path

   This document specifies a new cost metric: "ane-path".  This cost
   metric indicates that the cost value is a list of ANEs which the path
   from a source to a destination goes across.  The values are arrays of
   ANE names which are defined in Section 6.2.

   The cost metric "ane-path" SHOULD NOT be used when the cost mode is
   not "array" unless it is explicitly specified by a future extension.
   If an ALTO client send queries with the cost metric "ane-path" and a
   non "array" cost mode, the ALTO server SHOULD return an error with
   the error code "E_INVALID_FIELD_VALUE"; If an ALTO server declares
   the support of a cost type with the cost metric "ane-path" and a non
   "array" cost mode, the ALTO client SHOULD assume such a cost type is
   invalid and ignore it.

5.3.  Path Vector Cost Type Semantics

   The new cost type follows the convention of the cost types in the
   base ALTO protocol.  Table 1 lists some of the current defined cost
   types and their semantics.

   +------------+--------------+---------------------------------------+
   | Cost Mode  | Cost Metric  | Semantics                             |
   +------------+--------------+---------------------------------------+
   | numerical  | routingcost  | a number representing the routing     |
   |            |              | cost                                  |
   | numerical  | hopcount     | a number representing the hop count   |
   | ordinal    | routingcost  | a ranking representing the routing    |
   |            |              | cost                                  |
   | ordinal    | hopcount     | a ranking representing the hop count  |
   | array      | ane-path     | a list representing the ane path      |
   +------------+--------------+---------------------------------------+

                  Table 1: Cost Types and Their Semantics

   The "routingcost" and "hopcount" can encoded in "numerical" or
   "ordinal", however, the cost metric "ane-path" can only be applied to
   the cost mode "array" defined in this document to convey path vector
   information.  The cost metric "ane-path" can not be used in



Gao, et al.            Expires September 12, 2019               [Page 9]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   "numerical" or "ordinal" unless it is defined in future extensions.
   If the ALTO server declares that it support cost type with cost
   metric being "ane-path" and cost mode not being "array", the ALTO
   client SHOULD ignore them.

6.  ANE Domain

   This document specifies a new ALTO entity domain called "ane" in
   addition to the ones in [I-D.ietf-alto-unified-props-new].  The ANE
   domain associates property values with the ANEs in a network.  The
   entity in ANE domain is often used in the path vector by cost maps or
   endpoint cost resources.  Accordingly, the ANE domain always depends
   on a cost map or an endpoint cost map.

6.1.  Domain Name

   ane

6.2.  Domain-Specific Entity Addresses

   The entity address of ane domain is encoded as a JSON string.  The
   string MUST be no more than 64 characters, and it MUST NOT contain
   characters other than US-ASCII alphanumeric characters
   (U+0030-U+0039, U+0041-U+005A, and U+0061-U+007A), the hyphen ("-",
   U+002D), the colon (":", U+003A), the at sign ("@", code point
   U+0040), the low line ("_", U+005F), or the "." separator (U+002E).
   The "." separator is reserved for future use and MUST NOT be used
   unless specifically indicated in this document, or an extension
   document.

   To simplify the description, we use "ANE name" to indicate the
   address of an entity in ANE domain in this document.

   The ANE name is usually unrelated to the physical device information.
   It is usually generated by the ALTO server on demand and used to
   distinguish from other ANEs in its dependent cost map or endpoint
   cost map.

6.3.  Hierarchy and Inheritance

   There is no hierarchy or inheritance for properties associated with
   ANEs.

7.  Protocol Extensions for Path Vector

   To make the ALTO client query the path vectors and properties of ANEs
   efficiently and consistently, this document extends the Filtered Cost
   Map and Endpoint Cost Service.



Gao, et al.            Expires September 12, 2019              [Page 10]

Internet-Draft         ALTO Extension: Path Vector            March 2019


7.1.  Filtered Cost Map Extensions

   This document extends Filtered Cost Map, as defined in Section 11.3.2
   of [RFC7285], by adding new input parameters and capabilities, and by
   augmenting the property map into the data entry of the response.

   The "media type", "HTTP method", and "uses" specifications (described
   in Sections 11.3.2.1, 11.3.2.2, and 11.3.2.5 of [RFC7285],
   respectively) remain the same.

7.1.1.  Accept Input Parameters

   The ReqFilteredCostMap object in Section 11.3.2.3 of [RFC7285] is
   extended as follows:

     object {
       [PropertyName compound-properties<1..*>;]
     } ReqPVFilteredCostMap : ReqFilteredCostMap;

   compound-properties:  If the capability "allow-compound-response" is
      false, the ALTO client MUST NOT specify this field, and the ALTO
      server MUST reject the request and return "E_INVALID_FILED_VALUE"
      error when it receives a request including this field.  If this
      field is specified and accepted, the ALTO server MUST augment the
      dependent property map with the properties in this field into the
      response automatically.

7.1.2.  Capabilities

   The Filtered Cost Map capabilities are extended with two new members:

   o  dependent-property-map

   o  allow-compound-response

   The capability "dependent-property-map" indicates which property map
   this resource depends on, and the capability "allow-compound-
   response" indicates whether the ALTO server supports the resource to
   compound the property map with its own response data.  With these two
   additional members, the FilteredCostMapCapabilities object in
   Section 11.3.2.4 of [RFC7285] is extended as follows:

     object {
       [ResourceID dependent-property-map;]
       [JSONBool   allow-compound-response;]
     } PVFCMCapabilities : FilteredCostMapCapabilities;





Gao, et al.            Expires September 12, 2019              [Page 11]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   dependent-property-map:  This field MUST be specified when the "cost-
      type-names" includes a cost type name indicating a "ane-path"
      metric.  Its value MUST be a resource id indicating a property map
      including "ane" domain.  If not, the ALTO client SHOULD consider
      this resource is invalid.

   allow-compound-response:  If present, the true value means the ALTO
      client can request the resource to augment its dependent property
      map into the response automatically; the false value means the
      ALTO client cannot request the compound response.  If omitted, the
      default value is false;

   To be noticed that the capability "cost-constraints" is unexpected
   for the "array" cost mode.  The syntax and semantics of constraint
   tests on the "array" cost mode depends on the implementation and can
   be defined in the future documents.  But it is not in the scope of
   this document.

7.1.3.  Response

   If the ALTO client specifies the "cost-type" input parameter with
   "ane-path" metric, the "dependent-vtags" field in the "meta" field of
   the response MUST include the version tag of its dependent property
   map following its dependent network map.

   If the ALTO client specifies the "compound-properties" input
   parameter which is accepted by the ALTO server, the response MUST
   include a "property-map" field following the "cost-map" field, and
   its value MUST be a PropertyMapData object.  This PropertyMapData
   object MUST be equivalent to the result when query the dependent
   property map resource using the following request: the "entities"
   field includes all the ANE names appearing in the cost values of the
   "cost-map" field, the "properties" field has the same value as the
   "compound-properties" field does.  The properties shown in the
   "compound-properties" input parameter but are not supported by the
   dependent property map SHOULD be omitted from the response.

7.2.  Endpoint Cost Service Extensions

   This document extends the Endpoint Cost Service, as defined in
   Section 11.5.1 of [RFC7285], by adding new input parameters and
   capabilities and by augmenting the property map into the data entry
   of the response.

   The media type, HTTP method, and "uses" specifications (described in
   Sections 11.5.1.1, 11.5.1.2, and 11.5.1.5 of [RFC7285], respectively)
   are unchanged.




Gao, et al.            Expires September 12, 2019              [Page 12]

Internet-Draft         ALTO Extension: Path Vector            March 2019


7.2.1.  Accept Input Parameters

   The ReqEndpointCostMap object in Section 11.5.1.3 of [RFC7285] is
   extended as follows:

     object {
       [PropertyName compound-properties<1..*>;]
     } ReqPVEndpointCostMap : ReqEndpointCostMap;

   The "compound-properties" has the same interpretation as defined in
   Section 7.1.1.

7.2.2.  Capabilities

   The extensions to the Endpoint Cost Service capabilities are
   identical to the extensions to the Filtered Cost Map (see
   Section 7.1.2).

7.2.3.  Response

   If the ALTO client specifies the "cost-type" input parameter with
   "ane-path" metric, the response MUST include the "meta" field with
   the "dependent-vtags" in it, and the "dependent-vtags" field MUST
   include the version tag of its dependent property map.

   If the ALTO client specifies the "compound-properties" input
   parameter which is accepted by the ALTO server, the response MUST
   include a "property-map" field following the "endpoint-cost-map"
   field, and its value MUST be a PropertyMapData object.  This
   PropertyMapData object MUST be equivalent to the result when query
   the dependent property map resource using the following request: the
   "entities" field includes all the ANE names appearing in the cost
   values of the "endpoint-cost-map" field, the "properties" field has
   the same value as the "compound-properties" field does.  The
   properties shown in the "compound-properties" input parameter but are
   not supported by the dependent property map SHOULD be omitted from
   the response.

8.  Examples

   This section lists some examples of path vector queries and the
   corresponding responses.

8.1.  Workflow

   This section gives a typical workflow of how an ALTO client query
   path vectors using the extension.




Gao, et al.            Expires September 12, 2019              [Page 13]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   1.  Send a GET request for the whole Information Resource Directory.

   2.  Look for the resource of the (Filtered) Cost Map/Endpoint Cost
       Service which supports the "ane-path" cost metric and get the
       resource ID of the dependent property map.

   3.  Check whether the capabilities of the property map includes the
       desired "prop-types".

   4.  Check whether the (Filtered) Cost Map/Endpoint Cost Service
       allows the compound response.

   5.  If allowed, the ALTO client can send a request including the
       desired ANE properties to the ALTO server and receive a compound
       response with the cost map/endpoint cost map and the property
       map.

   6.  If not allowed, the ALTO client sends a query for the cost map/
       endpoint cost map first.  After receiving the response, the ALTO
       client interprets all the ANE names appearing in the response and
       sends another query for the property map on those ANE names.

8.2.  Information Resource Directory Example

   Here is an example of an Information Resource Directory.  In this
   example, filtered cost map "cost-map-pv" doesn't support the multi-
   cost extension but support the path-vector extension, "endpoint-
   multicost-map" supports both multi-cost extension and path-vector
   extension.  Filtered Property Map "propmap-availbw-delay" supports
   properties "availbw" and "delay".

     {
       "meta": {
         "cost-types": {
           "path-vector": {
             "cost-mode": "array",
             "cost-metric": "ane-path"
           },
           "num-routingcost": {
             "cost-mode": "numerical",
             "cost-metric": "routingcost"
           },
           "num-hopcount": {
             "cost-mode": "numerical",
             "cost-metric": "hopcount"
           }
         }
       },



Gao, et al.            Expires September 12, 2019              [Page 14]

Internet-Draft         ALTO Extension: Path Vector            March 2019


       "resources": {
         "my-default-networkmap": {
           "uri" : "http://alto.example.com/networkmap",
           "media-type" : "application/alto-networkmap+json"
         },
         "my-default-cost-map": {
           "uri": "http://alto.example.com/costmap/pv",
           "media-type": "application/alto-costmap+json",
           "accepts": "application/alto-costmapfilter+json",
           "capabilities": {
             "cost-type-names": [ "num-hopcount",
                                  "num-routingcost" ]
           },
           "uses": [ "my-default-networkmap" ]
         },
         "cost-map-pv": {
           "uri": "http://alto.example.com/costmap/pv",
           "media-type": "application/alto-costmap+json",
           "accepts": "application/alto-costmapfilter+json",
           "capabilities": {
             "cost-type-names": [ "path-vector" ],
             "dependent-property-map": "propmap-availbw-delay"
           },
           "uses": [ "my-default-networkmap" ]
         },
         "endpoint-cost-pv": {
           "uri": "http://alto.exmaple.com/endpointcost/pv",
           "media-type": "application/alto-endpointcost+json",
           "accepts": "application/alto-endpointcostparams+json",
           "capabilities": {
             "cost-type-names": [ "path-vector" ],
             "dependent-property-map": "propmap-availbw-delay",
             "allow-compound-response": true
           }
         },
         "invalid-cost-map" : {
           "uri": "http://alto.example.com/costmap/invalid",
           "media-type": "application/alto-costmap+json",
           "accepts": "application/alto-costmapfilter+json",
           "capabilities": {
             "cost-type-names": [ "path-vector" ],
             "allow-compound-response": true
           },
           "uses": [ "my-default-networkmap" ]
         },
         "propmap-availbw-delay": {
           "uri": "http://alto.exmaple.com/propmap/ane-prop",
           "media-type": "application/alto-propmap+json",



Gao, et al.            Expires September 12, 2019              [Page 15]

Internet-Draft         ALTO Extension: Path Vector            March 2019


           "accepts": "application/alto-propmapparams+json",
           "capabilities": {
             "domain-types": [ "ane" ],
             "prop-types": [ "availbw", "delay" ]
           },
           "uses": [ "cost-map-pv", "endpoint-cost-pv" ]
         }
       }
     }

8.3.  Example # 1

   Query filtered cost map to get the path vectors.

   POST /costmap/pv HTTP/1.1
   Host: alto.example.com
   Accept: application/alto-costmap+json,
           application/alto-error+json
   Content-Length: [TBD]
   Content-Type: application/alto-costmapfilter+json

   {
     "cost-type": {
       "cost-mode": "array",
       "cost-metric": "ane-path"
     },
     "pids": {
       "srcs": [ "PID1" ],
       "dsts": [ "PID2", "PID3" ]
     }
   }




















Gao, et al.            Expires September 12, 2019              [Page 16]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   HTTP/1.1 200 OK
   Content-Length: [TBD]
   Content-Type: application/alto-costmap+json

   {
     "meta": {
       "dependent-vtags": [
         {
           "resource-id": "my-default-networkmap",
           "tag": "75ed013b3cb58f896e839582504f622838ce670f"
         }
       ],
       "cost-type": {
         "cost-mode": "array",
         "cost-metric": "ane-path"
       }
     },
     "cost-map": {
       "PID1": {
         "PID2": [ "ane:L001", "ane:L003" ],
         "PID3": [ "ane:L001", "ane:L004" ]
       }
     }
   }

   Then query the properties of ANEs in path vectors.

   POST /propmap/ane-prop HTTP/1.1
   Host: alto.example.com
   Accept: application/alto-propmap+json,
           application/alto-error+json
   Content-Length: [TBD]
   Content-Type: application/alto-propmapparams+json

   {
     "entities": [ "ane:L001", "ane:L003", "ane:L004" ],
     "properties": [ "delay" ]
   }













Gao, et al.            Expires September 12, 2019              [Page 17]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   HTTP/1.1 200 OK
   Content-Length: [TBD]
   Content-Type: application/alto-propmap+json

   {
     "meta": {
       "dependent-vtags": [
         {
           "resource-id": "cost-map-pv",
           "tag": "a7d57e120ab63124e3c9a82f7a54bc120fc96216"
         }
       ]
     },
     "property-map": {
       "ane:L001": { "delay": 46},
       "ane:L003": { "delay": 50},
       "ane:L004": { "delay": 70}
     }
   }

8.4.  Example # 2

   POST /endpointcost/pv HTTP/1.1
   Host: alto.example.com
   Accept: application/alto-endpointcost+json,
           application/alto-error+json
   Content-Length: [TBD]
   Content-Type: application/alto-endpointcostparams+json

   {
     "multi-cost-types": [
       {
         "cost-mode": "array",
         "cost-metric": "ane-path"
       },
       {
         "cost-mode": "numerical",
         "cost-metric": "routingcost"
       }
     ],
     "endpoints": {
       "srcs": [ "ipv4:192.0.2.2" ],
       "dsts": [ "ipv4:192.0.2.89",
                 "ipv4:203.0.113.45",
                 "ipv6:2001:db8::10" ]
     }
   }




Gao, et al.            Expires September 12, 2019              [Page 18]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   HTTP/1.1 200 OK
   Content-Length: [TBD]
   Content-Type: application/alto-endpointcost+json

   {
     "meta": {
       "cost-type": [
         {"cost-mode": "array", "cost-metric": "ane-path"}
       ]
     },
     "endpoint-cost-map": {
       "ipv4:192.0.2.2": {
         "ipv4:192.0.2.89":   [ "ane:L001", "ane:L003",
                                "ane:L004" ],
         "ipv4:203.0.113.45": [ "ane:L001", "ane:L004",
                                "ane:L005" ],
         "ipv6:2001:db8::10": [ "ane:L001", "ane:L005",
                                "ane:L007" ]
       }
     }
   }

   POST /endpointcost/pv HTTP/1.1
   Host: alto.example.com
   Accept: application/alto-endpointcost+json,
           application/alto-error+json
   Content-Length: [TBD]
   Content-Type: application/alto-endpointcostparams+json

   {
     "entities": [ "ane:L001", "ane:L003", "ane:L004",
                   "ane:L005", "ane:L007" ],
     "properties": [ "availbw" ]
   }

















Gao, et al.            Expires September 12, 2019              [Page 19]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   HTTP/1.1 200 OK
   Content-Length: [TBD]
   Content-Type: application/alto-propmap+json

   {
     "meta": {
       "dependent-vtags": [
         {
           "resource-id": "endpoint-cost-pv",
           "tag": "12c0889c3c0892bb67df561ed16d93f5d1fa75cf"
         }
       ]
     },
     "property-map": {
       "ane:L001": { "availbw": 50 },
       "ane:L003": { "availbw": 48 },
       "ane:L004": { "availbw": 55 },
       "ane:L005": { "availbw": 60 },
       "ane:L007": { "availbw": 35 }
     }
   }

8.5.  Example #3




























Gao, et al.            Expires September 12, 2019              [Page 20]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   POST /endpointcost/pv HTTP/1.1
   Host: alto.example.com
   Accept: application/alto-endpointcost+json,
           application/alto-error+json
   Content-Length: [TBD]
   Content-Type: application/alto-endpointcostparams+json

   {
     "multi-cost-types": [
       {
         "cost-mode": "array",
         "cost-metric": "ane-path"
       },
       {
         "cost-mode": "numerical",
         "cost-metric": "routingcost"
       }
     ],
     "endpoints": {
       "srcs": [ "ipv4:192.0.2.2" ],
       "dsts": [ "ipv4:192.0.2.89",
                 "ipv4:203.0.113.45",
                 "ipv6:2001:db8::10" ]
     },
     "properties": [ "delay", "availbw" ]
   }

























Gao, et al.            Expires September 12, 2019              [Page 21]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   HTTP/1.1 200 OK
   Content-Length: [TBD]
   Content-Type: application/alto-endpointcost+json

   {
     "meta": {
       "dependent-vtags": [
         {
           "resource-id": "propmap-availbw-delay",
           "tag": "bb6bb72eafe8f9bdc4f335c7ed3b10822a391cef"
         }
       ],
       "cost-type": [
         {"cost-mode": "array", "cost-metric": "ane-path"}
       ]
     },
     "endpoint-cost-map": {
       "ipv4:192.0.2.2": {
         "ipv4:192.0.2.89":   [ "ane:L001", "ane:L003",
                                "ane:L004" ],
         "ipv4:203.0.113.45": [ "ane:L001", "ane:L004",
                                "ane:L005" ],
         "ipv6:2001:db8::10": [ "ane:L001", "ane:L005",
                                "ane:L007" ]
       }
     },
     "property-map": {
       "ane:L001": { "availbw": 50, "delay": 46 },
       "ane:L003": { "availbw": 48, "delay": 50 },
       "ane:L004": { "availbw": 55, "delay": 70 },
       "ane:L005": { "availbw": 60, "delay": 100 },
       "ane:L007": { "availbw": 35, "delay": 100 }
     }
   }

9.  Compatibility

9.1.  Compatibility with Base ALTO Clients/Servers

   The path vector extension on Filtered Cost Map and Endpoint Cost
   Service is backward compatible with the base ALTO protocol:

   o  If the ALTO server provides extended capabilities "dependent-
      property-map" and "allow-compound-response" for Filtered Cost Map
      or Endpoint Cost Service, but the client only supports the base
      ALTO protocol, then the client will ignore those capabilities
      without conducting any incompatibility.




Gao, et al.            Expires September 12, 2019              [Page 22]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   o  If the client sends a request with the input parameter
      "properties", but the server only supports the base ALTO protocol,
      the server will ignore this field.

9.2.  Compatibility with Multi-Cost Extension

   This document does not specify how to integrate the "array" cost mode
   and the "ane-path" cost metric with the multi-cost extension
   [RFC8189].  Although there is no reason why somebody has to compound
   the path vectors with other cost types in a single query, there is no
   compatible issue doing it without constraint tests.

   As Section 7.1.2 mentions, the syntax and semantics of whether
   "constraints" or "or-constraints" field for the "array" cost mode is
   not specified in this document.  So if an ALTO server provides a
   resource with the "array" cost mode and the capability "cost-
   constraints" or "testable-cost-types-names", the ALTO client MAY
   ignore the capability "cost-constraints" or "testable-cost-types-
   names" unless the implementation or future documents specify the
   behavior.

9.3.  Compatibility with Incremental Update

   As this document still follows the basic request/response protocol
   with JSON encoding, it is surely compatible with the incremental
   update service as defined by [I-D.ietf-alto-incr-update-sse].  But
   the following details are to be noticed:

   o  When using the compound response, updates on both cost map and
      property map SHOULD be notified.

   o  When not using the compound response, because the cost map is in
      the "uses" attribute of the property map, once the path vectors in
      the cost map change, the ALTO server MUST send the updates of the
      cost map before the updates of the property map.

10.  General Discussions

10.1.  Provide Calendar for Property Map

   Fetching the historical network information is useful for many
   traffic optimization problem.  [I-D.ietf-alto-cost-calendar] already
   proposes an ALTO extension called Cost Calendar which provides the
   historical cost values using Filtered Cost Map and Endpoint Cost
   Service.  However, the calendar for only path costs is not enough.

   For example, as the properties of ANEs (e.g., available bandwidth and
   link delay) are usually the real-time network states, they change



Gao, et al.            Expires September 12, 2019              [Page 23]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   frequently in the real network.  It is very helpful to get the
   historical value of these properties.  Applications may predicate the
   network status using these information to better optimize their
   performance.

   So the coming requirement may be a general calendar service for the
   ALTO information resources.

10.2.  Constraint Tests for General Cost Types

   The constraint test is a simple approach to query the data.  It
   allows users to filter the query result by specifying some boolean
   tests.  This approach is already used in the ALTO protocol.
   [RFC7285] and [RFC8189] allow ALTO clients to specify the
   "constraints" and "or-constraints" tests to better filter the result.

   However, the current defined syntax is too simple and can only be
   used to test the scalar cost value.  For more complex cost types,
   like the "array" mode defined in this document, it does not work
   well.  It will be helpful to propose more general constraint tests to
   better perform the query.

   In practice, it is too complex to customize a language for the
   general-purpose boolean tests, and can be a duplicated work.  So it
   may be a good idea to integrate some already defined and widely used
   query languages (or their subset) to solve this problem.  The
   candidates can be XQuery and JSONiq.

10.3.  General Compound Resources Query

   As the last paragraph of Section 4.3 mentions, querying multiple ALTO
   information resources continuously is a general requirement.  And the
   coming issues like inefficiency and inconsistency are also general.
   There is no standard solving these issues yet.  So we need some
   approach to make the ALTO client request the compound ALTO
   information resources in a single query.

11.  Security Considerations

   This document is an extension of the base ALTO protocol, so the
   Security Considerations of the base ALTO protocol fully apply when
   this extension is provided by an ALTO server.

   The path vector extension requires additional considerations on two
   security considerations discussed in the base protocol:
   confidentiality of ALTO information (Section 15.3 of [RFC7285]) and
   availability of ALTO service (Section 15.5 of [RFC7285]).




Gao, et al.            Expires September 12, 2019              [Page 24]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   For confidentiality of ALTO information, a network operator should be
   aware of that this extension may introduce a new risk: the path
   vector information may make network attacks easier.  For example, as
   the path vector information may reveal more network internal
   structures than the more abstract single-node abstraction, an ALTO
   client may detect the bottleneck link and start a distributed denial-
   of-service (DDoS) attack involving minimal flows to conduct the in-
   network congestion.

   To mitigate this risk, the ALTO server should consider protection
   mechanisms to reduce information exposure or obfuscate the real
   information, in particular, in settings where the network and the
   application do not belong to the same trust domain.  But the
   implementation of path vector extension involving reduction or
   obfuscation should guarantees the constraints on the requested
   properties are still accurate.

   For availability of ALTO service, an ALTO server should be cognizant
   that using path vector extension might have a new risk: frequent
   requesting for path vectors might conduct intolerable increment of
   the server-side storage and break the ALTO server.  It is known that
   the computation of path vectors is unlikely to be cacheable, in that
   the results will depend on the particular requests (e.g., where the
   flows are distributed).  Hence, the service providing path vectors
   may become an entry point for denial-of-service attacks on the
   availability of an ALTO server.  To avoid this risk, authenticity and
   authorization of this ALTO service may need to be better protected.

   Even if there is no intentional attack, the dependent property map of
   path vector might be still dynamically enriched, in that every new
   request for path vectors will make the ALTO server generate a new
   property map.  So the properties of the abstract network elements can
   consume a large amount of resources when cached.  To avoid this, the
   ALTO server providing the path vector extension should support a
   time-to-live configuration for the property map, so that the outdated
   entries can be removed from the property map resource.

12.  IANA Considerations

12.1.  ALTO Cost Mode Registry

   This document specifies a new cost mode "array".  However, the base
   ALTO protocol does not have a Cost Mode Registry where new cost mode
   can be registered.  This new cost mode will be registered once the
   registry is defined either in a revised version of [RFC7285] or in
   another future extension.





Gao, et al.            Expires September 12, 2019              [Page 25]

Internet-Draft         ALTO Extension: Path Vector            March 2019


12.2.  ALTO Cost Metric Registry

   A new cost metric needs to be registered in the "ALTO Cost Metric
   Registry", listed in Table 2.

                   +-------------+---------------------+
                   | Identifier  | Intended Semantics  |
                   +-------------+---------------------+
                   | ane-path    | See Section 5.2     |
                   +-------------+---------------------+

                        Table 2: ALTO Cost Metrics

12.3.  ALTO Entity Domain Registry

   As proposed in Section 9.2 of [I-D.ietf-alto-unified-props-new],
   "ALTO Domain Entity Registry" is requested.  Besides, a new domain is
   to be registered, listed in Table 3.

   +-------------+--------------------------+--------------------------+
   | Identifier  | Entity Address Encoding  | Hierarchy & Inheritance  |
   +-------------+--------------------------+--------------------------+
   | ane         | See Section 6.2          | None                     |
   +-------------+--------------------------+--------------------------+

                        Table 3: ALTO Entity Domain

12.4.  ALTO Network Element Property Type Registry

   The "ALTO Abstract Network Element Property Type Registry" is
   required by the ALTO Domain "ane", listed in Table 4.

                +-------------+--------------------------+
                | Identifier  | Intended Semantics       |
                +-------------+--------------------------+
                | availbw     | The available bandwidth  |
                | delay       | The transmission delay   |
                +-------------+--------------------------+

           Table 4: ALTO Abstract Network Element Property Types

13.  Acknowledgments

   The authors would like to thank discussions with Andreas Voellmy,
   Erran Li, Haibin Son, Haizhou Du, Jiayuan Hu, Qiao Xiang, Tianyuan
   Liu, Xiao Shi, Xin Wang, and Yan Luo. The authors thank Greg
   Bernstein (Grotto Networks), Dawn Chen (Tongji University), Wendy
   Roome, and Michael Scharf for their contributions to earlier drafts.



Gao, et al.            Expires September 12, 2019              [Page 26]

Internet-Draft         ALTO Extension: Path Vector            March 2019


14.  References

14.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, DOI 10.17487/
              RFC2119, March 1997, <https://www.rfc-editor.org/info/
              rfc2119>.

14.2.  Informative References

   [I-D.bernstein-alto-topo]
              Bernstein, G., Yang, Y., and Y. Lee, "ALTO Topology
              Service: Uses Cases, Requirements, and Framework", draft-
              bernstein-alto-topo-00 (work in progress), October 2013.

   [I-D.ietf-alto-cost-calendar]
              Randriamasy, S., Yang, Y., Wu, Q., Lingli, D., and N.
              Schwan, "ALTO Cost Calendar", draft-ietf-alto-cost-
              calendar-01 (work in progress), February 2017.

   [I-D.ietf-alto-incr-update-sse]
              Roome, W., Yang, Y., and S. Chen, "ALTO Incremental
              Updates Using Server-Sent Events (SSE)", draft-ietf-alto-
              incr-update-sse-15 (work in progress), December 2018.

   [I-D.ietf-alto-unified-props-new]
              Roome, W., Chen, S., xinwang2014@hotmail.com, x., Yang,
              Y., and J. Zhang, "Extensible Property Maps for the ALTO
              Protocol", draft-ietf-alto-unified-props-new-01 (work in
              progress), December 2017.

   [RFC7285]  Alimi, R., Ed., Penno, R., Ed., Yang, Y., Ed., Kiesel, S.,
              Previdi, S., Roome, W., Shalunov, S., and R. Woundy,
              "Application-Layer Traffic Optimization (ALTO) Protocol",
              RFC 7285, DOI 10.17487/RFC7285, September 2014,
              <https://www.rfc-editor.org/info/rfc7285>.

   [RFC8189]  Randriamasy, S., Roome, W., and N. Schwan, "Multi-Cost
              Application-Layer Traffic Optimization (ALTO)", RFC 8189,
              DOI 10.17487/RFC8189, October 2017, <https://www.rfc-
              editor.org/info/rfc8189>.

Authors' Addresses







Gao, et al.            Expires September 12, 2019              [Page 27]

Internet-Draft         ALTO Extension: Path Vector            March 2019


   Kai Gao
   Tsinghua University
   Beijing  Beijing
   China

   Email: gaok12@mails.tsinghua.edu.cn


   Young Lee
   Huawei
   TX
   USA

   Email: leeyoung@huawei.com


   Sabine Randriamasy
   Nokia Bell Labs
   Route de Villejust
   NOZAY  91460
   FRANCE

   Email: Sabine.Randriamasy@nokia-bell-labs.com


   Y. Richard Yang
   Yale University
   51 Prospect St
   New Haven  CT
   USA

   Email: yry@cs.yale.edu


   Jingxuan Jensen Zhang
   Tongji University
   4800 Caoan Road
   Shanghai  201804
   China

   Email: jingxuan.n.zhang@gmail.com










Gao, et al.            Expires September 12, 2019              [Page 28]
