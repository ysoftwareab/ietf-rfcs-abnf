





Internet Engineering Task Force                            S. Hollenbeck
Internet-Draft                                            VeriSign, Inc.
April 9, 2001                                   Expires: October 9, 2001

            Extensible Provisioning Protocol Contact Mapping
                 <draft-hollenbeck-epp-contact-01.txt>

Status of this Memo

  This document is an Internet-Draft and is in full conformance with all
  provisions of Section 10 of RFC2026.

  Internet-Drafts are working documents of the Internet Engineering Task
  Force (IETF), its areas, and its working groups.  Note that other
  groups may also distribute working documents as Internet-Drafts.

  Internet-Drafts are draft documents valid for a maximum of six months
  and may be updated, replaced, or obsoleted by other documents at any
  time.  It is inappropriate to use Internet-Drafts as reference
  material or to cite them other than as "work in progress".

  The list of current Internet-Drafts can be accessed at
  http://www.ietf.org/ietf/1id-abstracts.txt

  The list of Internet-Draft Shadow Directories can be accessed at
  http://www.ietf.org/shadow.html.

Abstract

  This document describes an Extensible Provisioning Protocol (EPP)
  mapping for the provisioning and management of individual or
  organizational social information identifiers (known as "contacts")
  stored in a shared central repository. Specified in XML, the mapping
  defines EPP command syntax and semantics as applied to contacts.

Conventions Used In This Document

  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
  "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
  document are to be interpreted as described in [RFC2119].

  In examples, "C:" represents lines sent by a protocol client and "S:"
  represents lines returned by a protocol server.  Indentation in
  examples is provided only to illustrate element relationships and is
  not a REQUIRED feature of this protocol.

  XML protocol elements are case sensitive.  Data carried in XML is case
  insensitive unless stated otherwise.



Hollenbeck              Expires October 9, 2001                 [Page 1]

Internet-Draft            EPP Contact mapping              April 9, 2001


Table of Contents

  1. Introduction .................................................    3
  2. Object Attributes ............................................    4
  2.1 Contact Identifiers .........................................    4
  2.2 Client Identifiers ..........................................    4
  2.3 Individual and Organizational Names .........................    4
  2.4 Address .....................................................    4
  2.4.1 Street, City, and State or Province .......................    4
  2.4.2 Postal Code ...............................................    4
  2.4.3 Country ...................................................    5
  2.5 Telephone Numbers ...........................................    5
  2.6 E-Mail Addresses ............................................    5
  2.7 Dates and Times .............................................    5
  2.8 Authorization Identifiers ...................................    5
  3. EPP Command mapping ..........................................    6
  3.1 EPP Query Commands ..........................................    6
  3.1.1 EPP <check> Command .......................................    6
  3.1.2 EPP <info> Command ........................................    7
  3.1.3 EPP <transfer> Command ....................................   11
  3.2 EPP Transform Commands ......................................   13
  3.2.1 EPP <create> Command ......................................   13
  3.2.2 EPP <delete> Command ......................................   15
  3.2.3 EPP <renew> Command .......................................   16
  3.2.4 EPP <transfer> Command ....................................   17
  3.2.5 EPP <update> Command ......................................   19
  4. Formal Syntax ................................................   22
  5. Internationalization Considerations ..........................   29
  6. IANA Considerations ..........................................   29
  7. Security Considerations ......................................   29
  8. References ...................................................   30
  9. Author's Address .............................................   32
  A. Full Copyright Statement .....................................   33


















Hollenbeck              Expires October 9, 2001                 [Page 2]

Internet-Draft            EPP Contact mapping              April 9, 2001


1. Introduction

  This document describes a personal and organizational identifier
  mapping for version 1.0 of the Extensible Provisioning Protocol (EPP).
  This mapping is specified using the Extensible Markup Language (XML)
  1.0 as described in [XML] and XML Schema notation as described in
  [XMLS-1] and [XMLS-2].

  [EPP] provides a complete description of EPP command and response
  structures.  A thorough understanding of the base protocol
  specification is necessary to understand the mapping described in this
  document.

  It is important to note that XML is case sensitive.  XML
  specifications and examples provided in this document MUST be
  interpreted in the exact character case presented to develop a
  conforming implementation.

  This document is being discussed on the "rrp" mailing list.  To join
  the list, send a message to <majordomo@verisign-grs.com> with the
  words "subscribe rrp" in the body of the message.  There is a web site
  for the list archives at <http://www.verisign-grs.com/maillist/rrp>.





























Hollenbeck              Expires October 9, 2001                 [Page 3]

Internet-Draft            EPP Contact mapping              April 9, 2001


2. Object Attributes

  An EPP contact object has attributes and associated values that may be
  viewed and modified by the sponsoring client or the server.  This
  section describes each attribute type in detail.  The formal syntax
  for the attribute values described here can be found in the "Formal
  Syntax" section of this document.

2.1 Contact Identifiers

  All EPP contacts are identified by a server-unique identifier.
  Contact identifiers are character strings with a specified minimum
  length, a specified maximum length, and a specified format.  Contact
  identifiers use the "roidType" syntax described in [EPP].

2.2 Client Identifiers

  All EPP clients are identified by a server-unique identifier.  Client
  identifiers use the "clIDType" syntax described in [EPP].

2.3 Individual and Organizational Names

  Individual and organizational names associated with a contact are
  represented using character strings.  These strings have a specified
  minimum length and a specified maximum length.  Individual and
  organizational names MAY be provided in both 7-bit ASCII format
  defined in [US-ASCII] and UTF-8 format defined in [RFC2279].

2.4 Address

  Every contact has associated postal address information.  A postal
  address contains street information, city information, OPTIONAL
  state/province information, a postal code, and a country identifier.
  Address information MAY be provided in both 7-bit ASCII format defined
  in [US-ASCII] and UTF-8 format defined in [RFC2279].  Address elements
  MUST be exchanged in the order described in the protocol schema, but
  display order MAY be altered to reflect local preferences.

2.4.1 Street, City, and State or Province

  Contact street, city, and state or province information is represented
  using character strings.  These strings have a specified minimum
  length and a specified maximum length.

2.4.2 Postal Code

  Contact postal codes are represented using character strings.  These
  strings have a specified minimum length and a specified maximum



Hollenbeck              Expires October 9, 2001                 [Page 4]

Internet-Draft            EPP Contact mapping              April 9, 2001


  length.

2.4.3 Country

  Contact country identifiers are represented using two-character
  identifiers specified in [ISO3166].

2.5 Telephone Numbers

  Contact telephone number structure requirements are defined in
  [E164a].  Telephone numbers described in this mapping are character
  strings that MUST begin with a plus sign ("+", ASCII value 0x002B),
  followed by a country code defined in [E164b], followed by a dot (".",
  ASCII value 0x002E), followed by a sequence of digits representing the
  telephone number.  An optional "x" attribute is provided to note
  telephone extension information.

2.6 E-Mail Addresses

  E-mail address syntax is defined in [RFC822].  This mapping does not
  prescribe minimum or maximum lengths for character strings used to
  represent e-mail addresses.

2.7 Dates and Times

  Date and time attribute values MUST be represented in Universal
  Coordinated Time (UTC). Both extended and truncated date and time
  forms defined in [ISO8601] MAY be used, though a server SHOULD use one
  form or the other consistently.

2.8 Authorization Identifiers

  Authorization identifiers are associated with contact objects to
  facilitate authorization of transfer requests.  Authorization
  identifiers use the transaction identifier syntax described in [EPP].
















Hollenbeck              Expires October 9, 2001                 [Page 5]

Internet-Draft            EPP Contact mapping              April 9, 2001


3. EPP Command mapping

  A detailed description of the EPP syntax and semantics can be found in
  [EPP].  The command mappings described here are specifically for use
  in provisioning and managing contact objects via EPP.

3.1 EPP Query Commands

  EPP provides three commands to retrieve contact information: <check>
  to determine if a contact object is known to the server, <info> to
  retrieve detailed information associated with a contact object, and
  <transfer> to retrieve contact object transfer status information.

3.1.1 EPP <check> Command

  The EPP <check> command is used to determine if a contact object is
  known to the server.  In addition to the standard EPP command
  elements, the <check> command MUST contain a <contact:check> element
  that identifies the contact namespace and the location of the contact
  schema.  The <contact:check> element SHALL contain the following child
  elements:

  - One or more <contact:roid> elements that contain the repository
  object identifier of the contact objects to be queried.

  Example <check> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <check>
  C:      <contact:check xmlns:contact="urn:iana:xml:ns:contact"
  C:       xsi:schemaLocation="urn:iana:xml:ns:contact contact.xsd">
  C:        <contact:roid>JD1234-VRSN</contact:roid>
  C:        <contact:roid>JD1233-VRSN</contact:roid>
  C:        <contact:roid>JD1232-VRSN</contact:roid>
  C:      </contact:check>
  C:    </check>
  C:    <unspec/>
  C:    <clTRID>ABC-12346</clTRID>
  C:  </command>
  C:</epp>

  When a <check> command has been processed successfully, the EPP
  <resData> element MUST contain a child <contact:chkData> element that
  identifies the contact namespace and the location of the contact



Hollenbeck              Expires October 9, 2001                 [Page 6]

Internet-Draft            EPP Contact mapping              April 9, 2001


  schema. The <contact:chkData> element SHALL contain the following
  child elements:

  - One or more <contact:cd> elements that contain the repository object
  identifier for the queried contact objects and an "x" attribute whose
  value identifies the object as either "+" for a known object or "-"
  for an unknown object.

  Example <check> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <contact:chkData xmlns:contact="urn:iana:xml:ns:contact"
  S:       xsi:schemaLocation="urn:iana:xml:ns:contact contact.xsd">
  S:        <contact:cd x="+">JD1234-VRSN</contact:cd>
  S:        <contact:cd x="-">JD1233-VRSN</contact:cd>
  S:        <contact:cd x="+">JD1232-VRSN</contact:cd>
  S:      </contact:chkData>
  S:    </resData>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12346</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <check> command can not be
  processed for any reason.

3.1.2 EPP <info> Command

  The EPP <info> command is used to retrieve information associated with
  a contact object.  In addition to the standard EPP command elements,
  the <info> command MUST contain a <contact:info> element that
  identifies the contact namespace and the location of the contact
  schema.  The <contact:info> element SHALL contain the following child
  elements:

  - A <contact:roid> element that contains the repository object
  identifier of the contact object to be queried.



Hollenbeck              Expires October 9, 2001                 [Page 7]

Internet-Draft            EPP Contact mapping              April 9, 2001



  Example <info> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <info>
  C:      <contact:info xmlns:contact="urn:iana:xml:ns:contact"
  C:       xsi:schemaLocation="urn:iana:xml:ns:contact contact.xsd">
  C:        <contact:roid>JD1234-VRSN</contact:roid>
  C:      </contact:info>
  C:    </info>
  C:    <unspec/>
  C:    <clTRID>ABC-12346</clTRID>
  C:  </command>
  C:</epp>

  When an <info> command has been processed successfully, the EPP
  <resData> element MUST contain a child <contact:infData> element that
  identifies the contact namespace and the location of the contact
  schema. The <contact:infData> element SHALL contain the following
  child elements:

  - A <contact:roid> element that contains the contact object's
  repository object identifier.

  - A <contact:ascii> element that contains child element social
  information represented in 7-bit US-ASCII.

  - A <contact:i15d> ("i15d" is short for "internationalized") element
  that contains child element social information represented in UTF-8
  characters other than those represented in the US-ASCII character set.
  The <contact:ascii> and <contact:i15d> elements SHALL contain the
  following child elements:

    - A <contact:name> element that contains the name of the individual
    or role represented by the contact.

    - An OPTIONAL <contact:org> element that contains the name of the
    organization with which the contact is affiliated.

    - A <contact:addr> element that contains address information
    associated with the contact.  A <contact:addr> element SHALL contain
    the following child elements:

      - One, two, or three <contact:street> elements that contain the



Hollenbeck              Expires October 9, 2001                 [Page 8]

Internet-Draft            EPP Contact mapping              April 9, 2001


      contact's street address.

      - A <contact:city> element that contains the contact's city.

      - An OPTIONAL <contact:sp> element that contains the contact's
      state or province.

      - A <contact:pc> element that contains the contact's postal code.

      - A <contact:cc> element that contains the contact's country code.

  - An OPTIONAL <contact:voice> element that contains the contact's
  voice telephone number.

  - An OPTIONAL <contact:fax> element that contains the contact's
  facsimile telephone number.

  - A <contact:email> element that contains the contact's e-mail
  address.

  - A <contact:clID> element that contains the identifier of the
  sponsoring client.

  - A <contact:crID> element that contains the identifier of the client
  that created the contact object.

  - A <contact:crDate> element that contains the date and time of
  contact object creation.

  - A <contact:upID> element that contains the identifier of the client
  that last updated the contact object.  This element MUST NOT be
  present if the contact has never been modified.

  - A <contact:upDate> element that contains the date and time of the
  most recent contact object modification.  This element MUST NOT be
  present if the contact object has never been modified.

  - A <contact:trDate> elements that contains the date and time of the
  most recent successful contact object transfer.  This element MUST NOT
  be provided if the contact object has never been transferred.

  - A <contact:auID> element derived from either the original contact
  object creation transaction or the most recent successful transfer
  transaction.  This element MUST NOT be provided if the querying client
  is not the current sponsoring client.






Hollenbeck              Expires October 9, 2001                 [Page 9]

Internet-Draft            EPP Contact mapping              April 9, 2001



  Example <info> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <contact:infData xmlns:contact="urn:iana:xml:ns:contact"
  S:       xsi:schemaLocation="urn:iana:xml:ns:contact contact.xsd">
  S:        <contact:roid>JD1234-VRSN</contact:roid>
  S:        <contact:ascii>
  S:          <contact:name>John Doe</contact:name>
  S:          <contact:org>Example Inc.</contact:org>
  S:          <contact:addr>
  S:            <contact:street>123 Example Dr.</contact:street>
  S:            <contact:street>Suite 100</contact:street>
  S:            <contact:city>Dulles</contact:city>
  S:            <contact:sp>VA</contact:sp>
  S:            <contact:pc>20166-6503</contact:pc>
  S:            <contact:cc>US</contact:cc>
  S:          </contact:addr>
  S:        </contact:ascii>
  S:        <contact:voice x="1234">+1.7035555555</contact:voice>
  S:        <contact:fax>+1.7035555556</contact:fax>
  S:        <contact:email>jdoe@example.com</contact:email>
  S:        <contact:clID>ClientY</contact:clID>
  S:        <contact:crID>ClientX</contact:crID>
  S:        <contact:crDate>1999-04-03T22:00:00.0Z</contact:crDate>
  S:        <contact:upID>ClientX</contact:upID>
  S:        <contact:upDate>1999-12-03T09:00:00.0Z</contact:upDate>
  S:        <contact:trDate>2000-04-08T09:00:00.0Z</contact:trDate>
  S:        <contact:auID>
  S:          <clTRID>ABC-12345</clTRID>
  S:          <svTRID>54321-XYZ</svTRID>
  S:        </contact:auID>
  S:      </contact:infData>
  S:    </resData>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12346</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>



Hollenbeck              Expires October 9, 2001                [Page 10]

Internet-Draft            EPP Contact mapping              April 9, 2001


  S:</epp>

  An EPP error response MUST be returned if an <info> command can not be
  processed for any reason.

3.1.3 EPP <transfer> Command

  The EPP <transfer> command provides a query operation that allows a
  client to determine real-time status of pending and completed transfer
  requests.  In addition to the standard EPP command elements, the
  <transfer> command MUST contain an "op" attribute with value "query",
  and a <contact:transferQ> element that identifies the contact
  namespace and the location of the contact schema.  The
  <contact:transferQ> element MUST contain the following child elements:

  - A <contact:roid> element that contains the repository object
  identifier of the contact object to be queried.

  Example <transfer> query command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <transfer op="query">
  C:      <contact:transferQ xmlns:contact="urn:iana:xml:ns:contact"
  C:       xsi:schemaLocation="urn:iana:xml:ns:contact contact.xsd">
  C:        <contact:roid>JD1234-VRSN</contact:roid>
  C:      </contact:transferQ>
  C:      <auID>
  C:        <clTRID>ABC-12345</clTRID>
  C:        <svTRID>54321-XYZ</svTRID>
  C:      </auID>
  C:    </transfer>
  C:    <unspec/>
  C:    <clTRID>ABC-12346</clTRID>
  C:  </command>
  C:</epp>

  When a <transfer> query command has been processed successfully, the
  EPP <resData> element MUST contain a child <contact:trnData> element
  that identifies the contact namespace and the location of the contact
  schema. The <contact:trnData> element SHALL contain the following
  child elements:

  - A <contact:roid> element that contains the contact object's
  repository object identifier.



Hollenbeck              Expires October 9, 2001                [Page 11]

Internet-Draft            EPP Contact mapping              April 9, 2001


  - A <contact:trStatus> element that contains the state of the most
  recent transfer request.  Valid values are "PENDING", "APPROVED",
  "REJECTED", "AUTO-APPROVED", "AUTO-REJECTED", and "CANCELLED".

  - A <contact:reID> element that contains the identifier of the client
  that requested the object transfer.

  - A <contact:reDate> element that contains the date and time that the
  transfer was requested.

  - A <contact:acID> element that contains the identifier of the client
  that SHOULD act upon the transfer request.

  - A <contact:acDate> element that contains the date and time of a
  required or completed response.  For a PENDING request, the value
  identifies the date and time by which a response is required before an
  automated response action MUST be taken by the server.  For all other
  status types, the value identifies the date and time when the request
  was completed.

  Example <transfer> query response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <contact:trnData xmlns:contact="urn:iana:xml:ns:contact"
  S:       xsi:schemaLocation="urn:iana:xml:ns:contact contact.xsd">
  S:        <contact:roid>JD1234-VRSN</contact:roid>
  S:        <contact:trStatus>PENDING</contact:trStatus>
  S:        <contact:reID>ClientX</contact:reID>
  S:        <contact:reDate>2000-06-06T22:00:00.0Z</contact:reDate>
  S:        <contact:acID>ClientY</contact:acID>
  S:        <contact:acDate>2000-06-11T22:00:00.0Z</contact:acDate>
  S:      </contact:trnData>
  S:    </resData>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12346</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>



Hollenbeck              Expires October 9, 2001                [Page 12]

Internet-Draft            EPP Contact mapping              April 9, 2001


  An EPP error response MUST be returned if a <transfer> query command
  can not be processed for any reason.

3.2 EPP Transform Commands

  EPP provides four commands to transform contact object information:
  <create> to create an instance of a contact object, <delete> to delete
  an instance of a contact object, <transfer> to manage contact object
  sponsorship changes, and <update> to change information associated
  with a contact object.  This document does not define a mapping for
  the EPP <renew> command.

3.2.1 EPP <create> Command

  The EPP <create> command provides a transform operation that allows a
  client to create a contact object.  In addition to the standard EPP
  command elements, the <create> command MUST contain a <contact:create>
  element that identifies the contact namespace and the location of the
  contact schema.  The <contact:create> element SHALL contain the
  following child elements:

  - A <contact:ascii> element that contains child element social
  information represented in 7-bit US-ASCII.

  - An OPTIONAL <contact:i15d> ("i15d" is short for "internationalized")
  element that contains child element social information represented in
  UTF-8 characters other than those represented in the US-ASCII
  character set. The <contact:ascii> and <contact:i15d> elements SHALL
  contain the following child elements:

    - A <contact:name> element that contains the name of the individual
    or role represented by the contact.

    - An OPTIONAL <contact:org> element that contains the name of the
    organization with which the contact is affiliated.

    - A <contact:addr> element that contains address information
    associated with the contact.  A <contact:addr> element SHALL contain
    the following child elements:

      - One, two, or three <contact:street> elements that contain the
      contact's street address.

      - A <contact:city> element that contains the contact's city.

      - An OPTIONAL <contact:sp> element that contains the contact's
      state or province.




Hollenbeck              Expires October 9, 2001                [Page 13]

Internet-Draft            EPP Contact mapping              April 9, 2001


      - A <contact:pc> element that contains the contact's postal code.

      - A <contact:cc> element that contains the contact's country code.

  - An OPTIONAL <contact:voice> element that contains the contact's
  voice telephone number.

  - An OPTIONAL <contact:fax> element that contains the contact's
  facsimile telephone number.

  - A <contact:email> element that contains the contact's e-mail
  address.

  Example <create> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <create>
  C:      <contact:create xmlns:contact="urn:iana:xml:ns:contact"
  C:       xsi:schemaLocation="urn:iana:xml:ns:contact contact.xsd">
  C:        <contact:ascii>
  C:          <contact:name>John Doe</contact:name>
  C:          <contact:org>Example Inc.</contact:org>
  C:          <contact:addr>
  C:            <contact:street>123 Example Dr.</contact:street>
  C:            <contact:street>Suite 100</contact:street>
  C:            <contact:city>Dulles</contact:city>
  C:            <contact:sp>VA</contact:sp>
  C:            <contact:pc>20166-6503</contact:pc>
  C:            <contact:cc>US</contact:cc>
  C:          </contact:addr>
  C:        </contact:ascii>
  C:        <contact:voice x="1234">+1.7035555555</contact:voice>
  C:        <contact:fax>+1.7035555556</contact:fax>
  C:        <contact:email>jdoe@example.com</contact:email>
  C:      </contact:create>
  C:    </create>
  C:    <unspec/>
  C:    <clTRID>ABC-12345</clTRID>
  C:  </command>
  C:</epp>

  When a <create> command has been processed successfully, the EPP
  <resData> element MUST contain a child <contact:creData> element that
  identifies the contact namespace and the location of the contact



Hollenbeck              Expires October 9, 2001                [Page 14]

Internet-Draft            EPP Contact mapping              April 9, 2001


  schema. The <contact:creData> element SHALL contain the following
  child elements:

  - A <contact:roid> element that contains the contact object's
  repository object identifier.

  Example <create> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <contact:creData xmlns:contact="urn:iana:xml:ns:contact"
  S:       xsi:schemaLocation="urn:iana:xml:ns:contact contact.xsd">
  S:        <contact:roid>JD1234-VRSN</contact:roid>
  S:      </contact:creData>
  S:    </resData>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12345</clTRID>
  S:      <svTRID>54321-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <create> command can not
  be processed for any reason.

3.2.2 EPP <delete> Command

  The EPP <delete> command provides a transform operation that allows a
  client to delete a contact object.  In addition to the standard EPP
  command elements, the <delete> command MUST contain a <contact:delete>
  element that identifies the contact namespace and the location of the
  contact schema.  The <contact:delete> element MUST contain the
  following child elements:

  - A <contact:roid> element that contains the repository object
  identifier of the contact object to be deleted.

  A contact object MUST NOT be deleted if it is associated with other
  known objects.  An associated contact MUST NOT be deleted until the
  association with other known objects has been broken.



Hollenbeck              Expires October 9, 2001                [Page 15]

Internet-Draft            EPP Contact mapping              April 9, 2001



  Example <delete> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <delete>
  C:      <contact:delete xmlns:contact="urn:iana:xml:ns:contact"
  C:       xsi:schemaLocation="urn:iana:xml:ns:contact contact.xsd">
  C:        <contact:roid>JD1234-VRSN</contact:roid>
  C:      </contact:delete>
  C:      <auID>
  C:        <clTRID>ABC-12345</clTRID>
  C:        <svTRID>54321-XYZ</svTRID>
  C:      </auID>
  C:    </delete>
  C:    <unspec/>
  C:    <clTRID>ABC-12346</clTRID>
  C:  </command>
  C:</epp>

  When a <delete> command has been processed successfully, a server MUST
  respond with an EPP response with no <resData> element.

  Example <delete> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12346</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <delete> command can not
  be processed for any reason.

3.2.3 EPP <renew> Command



Hollenbeck              Expires October 9, 2001                [Page 16]

Internet-Draft            EPP Contact mapping              April 9, 2001


  Renewal semantics do not apply to contact objects, so there is no
  mapping defined for the EPP <renew> command.

3.2.4 EPP <transfer> Command

  The EPP <transfer> command provides a transform operation that allows
  a client to manage requests to transfer the sponsorship of a contact
  object.  In addition to the standard EPP command elements, the
  <transfer> command MUST contain a <contact:transfer> element that
  identifies the contact namespace and the location of the contact
  schema. The <contact:transfer> element SHALL contain the following
  child elements:

  - A <contact:roid> element that contains the repository object
  identifier of the contact object for which a transfer request is to be
  created, approved, rejected, or cancelled.

  Every EPP <transfer> command MUST contain an "op" attribute that
  identifies the transfer operation to be performed.  Valid values,
  definitions, and authorizations for all attribute values are defined
  in [EPP].

  Every EPP <transfer> command MUST also contain an authorization
  identifier as described in [EPP].  It is important to note that the
  transaction identifier associated with successful transfer of a domain
  object becomes the authorization identifier required to transfer
  sponsorship of the domain object.  A client MUST retain all
  transaction identifiers associated with domain object creation and
  protect them from disclosure.  A client acting as a proxy for a
  registrant MUST provide a copy of the transaction identifier
  information to the registrant, who will need this information to
  request a domain transfer through a different client.



















Hollenbeck              Expires October 9, 2001                [Page 17]

Internet-Draft            EPP Contact mapping              April 9, 2001



  Example <transfer> request command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <transfer op="request">
  C:      <contact:transfer xmlns:contact="urn:iana:xml:ns:contact"
  C:       xsi:schemaLocation="urn:iana:xml:ns:contact contact.xsd">
  C:        <contact:roid>JD1234-VRSN</contact:roid>
  C:      </contact:transfer>
  C:      <auID>
  C:        <clTRID>ABC-12345</clTRID>
  C:        <svTRID>54321-XYZ</svTRID>
  C:      </auID>
  C:    </transfer>
  C:    <unspec/>
  C:    <clTRID>ABC-12346</clTRID>
  C:  </command>
  C:</epp>

  When a <transfer> command has been processed successfully, the EPP
  <resData> element MUST contain a child <contact:trnData> element that
  identifies the contact namespace and the location of the contact
  schema.  The <contact:trnData> element SHALL contain the same child
  elements defined for a transfer query response.























Hollenbeck              Expires October 9, 2001                [Page 18]

Internet-Draft            EPP Contact mapping              April 9, 2001



  Example <transfer> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <resData>
  S:      <contact:trnData xmlns:contact="urn:iana:xml:ns:contact"
  S:       xsi:schemaLocation="urn:iana:xml:ns:contact contact.xsd">
  S:        <contact:roid>JD1234-VRSN</contact:roid>
  S:        <contact:trStatus>PENDING</contact:trStatus>
  S:        <contact:reID>ClientX</contact:reID>
  S:        <contact:reDate>2000-06-08T22:00:00.0Z</contact:reDate>
  S:        <contact:acID>ClientY</contact:acID>
  S:        <contact:acDate>2000-06-13T22:00:00.0Z</contact:acDate>
  S:      </contact:trnData>
  S:    </resData>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12346</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <transfer> command can not
  be processed for any reason.

3.2.5 EPP <update> Command

  The EPP <update> command provides a transform operation that allows a
  client to modify the attributes of a contact object.  In addition to
  the standard EPP command elements, the <update> command MUST contain a
  <contact:update> element that identifies the contact namespace and the
  location of the contact schema. The <contact:update> element SHALL
  contain the following child elements:

  - A <contact:roid> element that contains the repository object
  identifier of the contact object to be updated.

  - A <contact:chg> element that contains object attribute values to be
  changed.  The <contact:chg> element SHALL contain the following
  OPTIONAL child elements:



Hollenbeck              Expires October 9, 2001                [Page 19]

Internet-Draft            EPP Contact mapping              April 9, 2001


    - A <contact:name> element that contains the name of the individual
    or role represented by the contact.

    - A <contact:org> element that contains the name of the organization
    with which the contact is affiliated.

    - A <contact:addr> element that contains address information
    associated with the contact.  A <contact:addr> element SHALL contain
    the following OPTIONAL child elements:

      - One, two, or three <contact:street> elements that contain the
      contact's street address.

      - A <contact:city> element that contains the contact's city.

      - A <contact:sp> element that contains the contact's state or
      province.

      - A <contact:pc> element that contains the contact's postal code.

      - A <contact:cc> element that contains the contact's country code.

    - A <contact:voice> element that contains the contact's voice
    telephone number.

    - A <contact:fax> element that contains the contact's facsimile
    telephone number.

    - A <contact:email> element that contains the contact's e-mail
    address.





















Hollenbeck              Expires October 9, 2001                [Page 20]

Internet-Draft            EPP Contact mapping              April 9, 2001



  Example <update> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xml:ns:epp"
  C:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  C:  <command>
  C:    <update>
  C:      <contact:update xmlns:contact="urn:iana:xml:ns:contact"
  C:       xsi:schemaLocation="urn:iana:xml:ns:contact contact.xsd">
  C:        <contact:roid>JD1234-VRSN</contact:roid>
  C:        <contact:chg>
  C:          <contact:ascii>
  C:            <contact:org/>
  C:            <contact:addr>
  C:              <contact:street>124 Example Dr.</contact:street>
  C:              <contact:street>Suite 200</contact:street>
  C:              <contact:city>Dulles</contact:city>
  C:              <contact:sp>VA</contact:sp>
  C:              <contact:pc>20166-6503</contact:pc>
  C:              <contact:cc>US</contact:cc>
  C:            </contact:addr>
  C:          </contact:ascii>
  C:          <contact:voice>+1.7034444444</contact:voice>
  C:          <contact:fax/>
  C:        </contact:chg>
  C:      </contact:update>
  C:      <auID>
  C:        <clTRID>ABC-12345</clTRID>
  C:        <svTRID>54321-XYZ</svTRID>
  C:      </auID>
  C:    </update>
  C:    <unspec/>
  C:    <clTRID>ABC-12346</clTRID>
  C:  </command>
  C:</epp>

  When an <update> command has been processed successfully, a server
  MUST respond with an EPP response with no <resData> element.











Hollenbeck              Expires October 9, 2001                [Page 21]

Internet-Draft            EPP Contact mapping              April 9, 2001



  Example <update> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xml:ns:epp"
  S:     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xml:ns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <msg>Command completed successfully</msg>
  S:    </result>
  S:    <unspec/>
  S:    <trID>
  S:      <clTRID>ABC-12346</clTRID>
  S:      <svTRID>54322-XYZ</svTRID>
  S:    </trID>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if an <update> command can not
  be processed for any reason.

4. Formal Syntax

  An EPP object mapping is specified in XML Schema notation.  The formal
  syntax presented here is a complete schema representation of the
  object mapping suitable for automated validation of EPP XML instances.

  <?xml version="1.0"?>

  <schema targetNamespace="urn:iana:xml:ns:contact"
          xmlns:contact="urn:iana:xml:ns:contact"
          xmlns:epp="urn:iana:xml:ns:epp"
          xmlns:eppcom="urn:iana:xml:ns:eppcom"
          xmlns="http://www.w3.org/2000/10/XMLSchema"
          elementFormDefault="qualified">

  <!--
  Import common element types.
  -->
    <import namespace="urn:iana:xml:ns:eppcom"
            schemaLocation="eppcom.xsd"/>
    <import namespace="urn:iana:xml:ns:epp"
            schemaLocation="epp.xsd"/>

    <annotation>
      <documentation>
        Extensible Provisioning Protocol v1.0



Hollenbeck              Expires October 9, 2001                [Page 22]

Internet-Draft            EPP Contact mapping              April 9, 2001


        contact provisioning schema.
      </documentation>
    </annotation>

  <!--
  Types used within an EPP greeting.
  -->
    <element name="svc" type="eppcom:emptyType"/>

  <!--
  Child elements found in EPP commands.
  -->
    <element name="check" type="contact:mIDType"/>
    <element name="create" type="contact:createType"/>
    <element name="delete" type="contact:sIDType"/>
    <element name="info" type="contact:sIDType"/>
    <element name="transfer" type="contact:sIDType"/>
    <element name="transferQ" type="contact:sIDType"/>
    <element name="update" type="contact:updateType"/>

  <!--
  Utility types.
  -->
    <simpleType name="orgType">
      <restriction base="string">
        <minLength value="0"/>
        <maxLength value="128"/>
      </restriction>
    </simpleType>

    <simpleType name="localeType">
      <restriction base="string">
        <minLength value="1"/>
        <maxLength value="64"/>
      </restriction>
    </simpleType>

    <simpleType name="pcType">
      <restriction base="string">
        <minLength value="1"/>
        <maxLength value="16"/>
      </restriction>
    </simpleType>

    <simpleType name="ccType">
      <restriction base="string">
        <length value="2"/>
      </restriction>



Hollenbeck              Expires October 9, 2001                [Page 23]

Internet-Draft            EPP Contact mapping              April 9, 2001


    </simpleType>

    <complexType name="e164Type">
      <simpleContent>
        <extension base = "contact:e164StringType">
          <attribute name="x" type="string" use="optional"/>
        </extension>
      </simpleContent>
    </complexType>

    <complexType name="e164OptType">
      <simpleContent>
        <extension base = "contact:e164OptStringType">
          <attribute name="x" type="string" use="optional"/>
        </extension>
      </simpleContent>
    </complexType>

    <simpleType name="e164StringType">
      <restriction base="string">
        <pattern value="+[0-9]{1,3}.[0-9]{1,12}"/>
      </restriction>
    </simpleType>

    <simpleType name="e164OptStringType">
      <restriction base="string">
        <pattern value="(+[0-9]{1,3}.[0-9]{1,12})?"/>
      </restriction>
    </simpleType>

    <simpleType name="nameType">
       <restriction base="string">
         <minLength value="1"/>
         <maxLength value="128"/>
       </restriction>
    </simpleType>

  <!--
  Child elements of the <create> and <info> commands.
  -->
    <complexType name="createType">
      <sequence>
        <element name="ascii" type="contact:multiDataType"/>
        <element name="i15d" type="contact:multiDataType"
         minOccurs="0"/>
        <element name="voice" type="contact:e164Type"/>
        <element name="fax" type="contact:e164OptType"
         minOccurs="0"/>



Hollenbeck              Expires October 9, 2001                [Page 24]

Internet-Draft            EPP Contact mapping              April 9, 2001


        <element name="email" type="string"/>
      </sequence>
    </complexType>

    <complexType name="multiDataType">
      <sequence>
        <element name="name" type="contact:nameType"/>
        <element name="org" type="contact:orgType"
         minOccurs="0"/>
        <element name="addr" type="contact:addrType"/>
      </sequence>
    </complexType>

    <complexType name="addrType">
      <sequence>
        <element name="street" type="contact:localeType"
         maxOccurs="3"/>
        <element name="city" type="contact:localeType"/>
        <element name="sp" type="contact:localeType"
         minOccurs="0"/>
        <element name="pc" type="contact:pcType"/>
        <element name="cc" type="contact:ccType"/>
      </sequence>
    </complexType>

  <!--
  Child element of commands that require only an identifier.
  -->
    <complexType name="sIDType">
      <sequence>
        <element name="roid" type="eppcom:roidType"/>
      </sequence>
    </complexType>

  <!--
  Child element of commands that accept multiple identifiers.
  -->
    <complexType name="mIDType">
      <sequence>
        <element name="roid" type="eppcom:roidType"
         maxOccurs="unbounded"/>
      </sequence>
    </complexType>

  <!--
  Child elements of the <update> command.
  -->
    <complexType name="updateType">



Hollenbeck              Expires October 9, 2001                [Page 25]

Internet-Draft            EPP Contact mapping              April 9, 2001


      <sequence>
        <element name="roid" type="eppcom:roidType"/>
        <element name="chg" type="contact:chgType"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  Attribute elements that can be changed.
  -->
    <complexType name="chgType">
      <sequence>
        <element name="ascii" type="contact:chgDataType"
         minOccurs="0"/>
        <element name="i15d" type="contact:chgDataType"
         minOccurs="0"/>
        <element name="voice" type="contact:e164Type"
         minOccurs="0"/>
        <element name="fax" type="contact:e164OptType"
         minOccurs="0"/>
        <element name="email" type="string"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  Attribute elements that can be changed.
  -->
    <complexType name="chgDataType">
      <sequence>
        <element name="name" type="contact:nameType"
         minOccurs="0"/>
        <element name="org" type="contact:orgType"
         minOccurs="0"/>
        <element name="addr" type="contact:addrType"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  Child response elements.
  -->
    <element name="chkData" type="contact:chkDataType"/>
    <element name="creData" type="contact:creDataType"/>
    <element name="infData" type="contact:infDataType"/>
    <element name="trnData" type="contact:trnDataType"/>

  <!--



Hollenbeck              Expires October 9, 2001                [Page 26]

Internet-Draft            EPP Contact mapping              April 9, 2001


  <check> response elements.
  -->
    <complexType name="chkDataType">
      <sequence>
        <element name="cd" type="contact:checkType"
         maxOccurs="unbounded"/>
      </sequence>
    </complexType>

    <complexType name="checkType">
      <simpleContent>
        <extension base = "eppcom:roidType">
          <attribute name="x" type="eppcom:checkStatusType"
           use="required"/>
        </extension>
      </simpleContent>
    </complexType>

  <!--
  <create> response elements.
  -->
    <complexType name="creDataType">
      <sequence>
        <element name="roid" type="eppcom:roidType"/>
      </sequence>
    </complexType>

  <!--
  <info> response elements.
  -->
    <complexType name="infDataType">
      <sequence>
        <element name="roid" type="eppcom:roidType"/>
        <element name="ascii" type="contact:multiDataType"/>
        <element name="i15d" type="contact:multiDataType"
         minOccurs="0"/>
        <element name="voice" type="contact:e164Type"/>
        <element name="fax" type="contact:e164Type"
         minOccurs="0"/>
        <element name="email" type="string"/>
        <element name="clID" type="eppcom:clIDType"/>
        <element name="crID" type="eppcom:clIDType"/>
        <element name="crDate" type="timeInstant"/>
        <element name="upID" type="eppcom:clIDType"
         minOccurs="0"/>
        <element name="upDate" type="timeInstant"
         minOccurs="0"/>
        <element name="trDate" type="timeInstant"



Hollenbeck              Expires October 9, 2001                [Page 27]

Internet-Draft            EPP Contact mapping              April 9, 2001


         minOccurs="0"/>
        <element name="auID" type="epp:trIDType"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  <transfer> response elements.
  -->
    <complexType name="trnDataType">
      <sequence>
        <element name="roid" type="eppcom:roidType"/>
        <element name="trStatus" type="eppcom:trStatusType"/>
        <element name="reID" type="eppcom:clIDType"/>
        <element name="reDate" type="timeInstant"/>
        <element name="acID" type="eppcom:clIDType"/>
        <element name="acDate" type="timeInstant"/>
        <element name="exDate" type="timeInstant"
         minOccurs="0"/>
      </sequence>
    </complexType>

  <!--
  End of schema.
  -->
  </schema>

























Hollenbeck              Expires October 9, 2001                [Page 28]

Internet-Draft            EPP Contact mapping              April 9, 2001


5. Internationalization Considerations

  EPP is represented in XML, which provides native support for encoding
  information using the double-byte Unicode character set and its more
  compact representations including UTF-8.  Compliant XML processors are
  required to understand both UTF-8 and raw Unicode character sets; XML
  also includes a provision for identifying other character sets through
  use of an "encoding" attribute in an <?xml?> processing instruction.
  The complete list of character set encoding identifiers is maintained
  by IANA and is described in [CHARSET] and [RFC1700].

  All date-time values presented via EPP MUST be expressed in Universal
  Coordinated Time.  The XML Schema "date" format allows use of time
  zone identifiers to indicate offsets from the zero meridian, but this
  option MUST NOT be used within EPP.  Both extended and truncated date
  and time forms defined in [ISO8601] MAY be used.

6. IANA Considerations

  XML schemas require a URI for unique identification.  Schemas MUST be
  registered to ensure URI uniqueness, but the IETF does not currently
  have a recommended repository for the registration of XML schemas.
  This document uses URNs to describe XML namespaces and XML schemas
  conforming to a registry mechanism described in [IANA-XML].

  IANA SHOULD maintain a registry of XML namespace and schema URI
  assignments.  Per policies described in [IANA], URI assignment
  requests SHOULD be reviewed by a designated expert, and values SHOULD
  be assigned only as a result of standards action taken by the IESG.

  This document requests assignment of the following URIs:

  urn:iana:xml:ns:contact: The XML namespace URI for this EPP contact
  mapping.

  urn:iana:xml:xmlschema:contact: The XML Schema URI for this EPP
  contact mapping.

7. Security Considerations

  The object mapping described in this document does not provide any
  security services beyond those specified by [EPP] and protocol layers
  used by EPP.








Hollenbeck              Expires October 9, 2001                [Page 29]

Internet-Draft            EPP Contact mapping              April 9, 2001


8. References

  [CHARSET] ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets

  [E164a] ITU-T Recommendation E.164: "The International Public
  Telecommunication Numbering Plan", May 1997.

  [E164b] Complement To ITU-T Recommendation E.164 (05/1997):  "List of
  ITU-T Recommendation E.164 assigned country codes", June 2000.

  [EPP] S. Hollenbeck: "Extensible Provisioning Protocol", draft-ietf-
  provref-epp-01.txt, work in progress.

  [IANA] T. Narten, H. Alvestrand: "Guidelines for Writing an IANA
  Considerations Section in RFCs", BCP 26, RFC 2434, October 1998.

  [ISO3166] ISO 3166-1: "Codes for the representation of names of
  countries and their subdivisions - Part 1: Country codes", October
  1997.

  [ISO8601] ISO 8601:1988 (E): "Data elements and interchange formats -
  Information interchange - Representation of dates and times - The
  International Organization for Standardization".

  [RFC822] D. Crocker: "Standard for the Format Of ARPA Internet Text
  Messages", RFC 822, August 1982.

  [RFC1700] J. Reynolds, J. Postel: "Assigned Numbers", STD 2, RFC 1700,
  October 1994.

  [RFC2119] S. Bradner: "Key Words for Use in RFCs to Indicate
  Requirement Levels", BCP 14, RFC 2119, March 1997.

  [RFC2279] F. Yergeau: "UTF-8, a transformation format of ISO 10646",
  RFC 2279, January 1998.

  [US-ASCII] Coded Character Set -- 7-bit American Standard Code for
  Information Interchange, ANSI X3.4-1986; also: ISO/IEC 646 (IRV).

  [XML] Editor T. Bray et al.: "Extensible Markup Language (XML) 1.0
  (Second Edition)", http://www.w3.org/TR/REC-xml, W3C Recommendation 6
  October 2000.

  [XMLS-1] Editor H. Thompson et al.: "XML Schema Part 1: Structures",
  http://www.w3.org/TR/xmlschema-1, W3C Candidate Recommendation 24
  October 2000.

  [XMLS-2] Editors P. Biron and A. Malhotra: "XML Schema Part 2:



Hollenbeck              Expires October 9, 2001                [Page 30]

Internet-Draft            EPP Contact mapping              April 9, 2001


  Datatypes", http://www.w3.org/TR/xmlschema-2, W3C Candidate
  Recommendation 24 October 2000.

















































Hollenbeck              Expires October 9, 2001                [Page 31]

Internet-Draft            EPP Contact mapping              April 9, 2001


9. Author's Address

  Scott Hollenbeck
  VeriSign Global Registry Services
  21345 Ridgetop Circle
  Dulles, VA 20166-6503
  USA
  shollenbeck@verisign.com











































Hollenbeck              Expires October 9, 2001                [Page 32]

Internet-Draft            EPP Contact mapping              April 9, 2001


A. Full Copyright Statement

  Copyright (C) The Internet Society 2001.  All Rights Reserved.

  This document and translations of it may be copied and furnished to
  others, and derivative works that comment on or otherwise explain it
  or assist in its implementation may be prepared, copied, published and
  distributed, in whole or in part, without restriction of any kind,
  provided that the above copyright notice and this paragraph are
  included on all such copies and derivative works.  However, this
  document itself may not be modified in any way, such as by removing
  the copyright notice or references to the Internet Society or other
  Internet organizations, except as needed for the purpose of developing
  Internet standards in which case the procedures for copyrights defined
  in the Internet Standards process must be followed, or as required to
  translate it into languages other than English.

  The limited permissions granted above are perpetual and will not be
  revoked by the Internet Society or its successors or assigns.

  This document and the information contained herein is provided on an
  "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
  TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
  NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN
  WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
  MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Acknowledgement

  Funding for the RFC Editor function is currently provided by the
  Internet Society.




















Hollenbeck              Expires October 9, 2001                [Page 33]