capability      =/ "X-DRAFT-W00-NOTIFY"
                        ;; [[Note to RFC Editor: change the capability
                        ;; name before publication]]

command-auth    =/ notify

notify          = "NOTIFY" SP
                        (notify-add / notify-set / notify-none)

notify-add      = "ADD" [status-indicator] SP event-groups
                        ; Add (prepend) registered notification
                        ; events to the list of notification
                        ; events. Newer events override older
                        ; events.
                        [[Alexey: what about "most specific" event
                        overriding a pattern?]]

notify-set      = "SET" [status-indicator] SP event-groups
                        ; Replace registered notification events
                        ; with the specified list of events

notify-none     = "NONE"
                        ; Cancel all registered notification
                        ; events. The client is not interested
                        ; in receiving any events.

status-indicator = SP "STATUS"

one-or-more-mailbox = mailbox / many-mailboxes

many-mailboxes = "(" mailbox *(SP mailbox) ")"

event-groups    = event-group *(SP event-group)

event-group     = "(" filter-mailboxes SP events ")"

filter-mailboxes = "selected" / "inboxes" / "personal" /
                        "subscribed" /
                        ( "subtree" SP one-or-more-mailbox ) /
                        ( "mailboxes" SP one-or-more-mailbox )

events          = ( "(" event *(SP event) ")" ) / "NONE"
                        ;; As in [MSGEVENT].
                        ;; "NONE" means that the client does not wish
                        ;; to receive any events for the specified
                        ;; mailboxes.

event           = message-event
                        / mailbox-event / user-event / event-ext

message-match-criteria = "(" search-key ")"

message-event   = ( "MessageNew" SP
                            "(" fetch-att *(SP fetch-att) ")"
                          SP message-match-criteria )
                        / "MessageExpunge"
                        / "FlagChange" SP message-match-criteria
                        / "AnnotationChange" SP message-match-criteria
                        ;; "MessageNew" includes "MessageAppend" from
                        ;; [MSGEVENT]. "FlagChange" is any of
                        ;; "MessageRead", "MessageTrash", "FlagsSet",
                        ;; "FlagsClear" [MSGEVENT]. "MessageExpunge"
                        ;; includes "MessageExpire" [MSGEVENT].
mailbox-event   = "MailboxCreate" / "MailboxDelete" /
                        "MailboxRename" /
                        "SubscriptionChange" / "MailboxMetadataChange"
                        / "QuotaChange" / "AdminMailbox"
                        ; "SubscriptionChange" includes
                        ; MailboxSubscribe and MailboxUnSubscribe

user-event      = "QuotaExceed" / "QuotaWithin"

event-ext       = atom
                        ;; For future extensions

oldname-extended-item =  "OLDNAME" SP "(" mailbox ")"
                        ;; Extended data item (mbox-list-extended-item)
                        ;; returned in a LIST response when a mailbox is
                        ;; renamed.
                        ;; Note 1: the OLDNAME tag can be returned
                        ;; with and without surrounding quotes, as per
                        ;; mbox-list-extended-item-tag production.

resp-text-code  =/ "NOTIFICATIONOVERFLOW"


