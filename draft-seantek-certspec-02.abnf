NSS              =   certspec-hash    /
                        certspec-content /
                        certspec-el      /
                        other-certspec-type ":" other-certspec-value

hexOctet         =   2HEXDIG

certspec-hash    =   "SHA-1"   ":" 20hexOctet /
                        "SHA-256" ":" 32hexOctet /
                        "SHA-384" ":" 48hexOctet /
                        "SHA-512" ":" 64hexOctet

certspec-content =   "hex"     ":" 1*hexOctet /
                        "base64"  ":" base64url  /
                                     base64relaxed

base64url        =   1*base64urlcharP
base64relaxed    =   1*(base64urlcharP / "+" / "/")  ; not pchar

base64urlchar    =   ALPHA / DIGIT / "-" / "_"

base64urlcharP   =   base64urlchar / pct-encoded     ; from RFC 3986

certspec-el      =   "issuersn" ":" distinguishedNameUC ";"
                                       serialNumber            /
                        "ski"      ":" 1*(hexOctet)

distinguishedNameUC  = 1*pchar                    /  ; from RFC 3986
                          distinguishedNameUCrelaxed

distinguishedNameUCrelaxed = 1*(pchar / WSP)         ; not pchar

serialNumber         = 1*hexOctet

certspec-type        = scheme                        ; from RFC 3986
certspec-value       = 1*pchar                       ; from RFC 3986

other-certspec-type  = certspec-type
other-certspec-value = certspec-value

                                 Figure 1

certspec-value = [ mediatype ] [ ";base64" ] "," data


certattrs      = query  ; from RFC 3986
                           ; *( pchar / "/" / "?" )

certpart       = "v" / "sn" / "sig" / "issuer" / "notBefore " /
                    "notAfter" / "subject" / "spki" /
                    "ext" *(":" extoid *(":" extpart)) /
                    "sigval" / other-certpart

extoid         = numericoid    ; from RFC 4512
extpart        = fragment      ; from RFC 3986
other-certpart = fragment      ; from RFC 3986


