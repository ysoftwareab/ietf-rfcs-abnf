


Internet                                                       R. Bonica
Internet-Draft                                                    D. Gan
Expires: December 11, 2006                              Juniper Networks
                                                             P. Nikander
                                           Ericsson Research Nomadic Lab
                                                               D. Tappan
                                                            C. Pignataro
                                                     Cisco Systems, Inc.
                                                            June 9, 2006


             Modifying ICMP to Support Multi-part Messages
                     draft-bonica-internet-icmp-06

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on December 11, 2006.

Copyright Notice

   Copyright (C) The Internet Society (2006).

Abstract

   This document redefines selected ICMPv4 messages to support multi-
   part operation.  A multi-part ICMP message carries all of the
   information that ICMP messages carried previously, as well as



Bonica, et al.          Expires December 11, 2006               [Page 1]

Internet-Draft          Multi-part ICMP Messages               June 2006


   additional information that applications may require.

   Multi-part messages are supported by an ICMP extension structure.
   The extension structure is situated at the end of the ICMP message.
   It includes an extension header followed by one or more extension
   objects.  Each extension object contains an object header and object
   payload.  All object headers share a common format.

   This document further redefines a subset of the above mentioned ICMP
   messages by specifying a length attribute.  Many of the ICMP messages
   to which an extension structure can be appended include and "original
   datagram" field.  The "original datagram" field contains the initial
   octets of the datagram to which the ICMP message is a response.
   Although the original datagram field is of variable length, the ICMP
   message does not include a field that specifies its length.
   Therefore, in order to facilitate message parsing, this draft
   allocates eight previously reserved bits to reflect the length of the
   "original datagram" field.

   The proposed modifications change the requirements for ICMPv4
   compliance.  The impact of these changes on compliant implementations
   is discussed, and new requirements for future implementations are
   presented.




























Bonica, et al.          Expires December 11, 2006               [Page 2]

Internet-Draft          Multi-part ICMP Messages               June 2006


Table of Contents

   1.  Conventions Used In This Document  . . . . . . . . . . . . . .  4
   2.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  4
   3.  Summary of Changes to ICMP . . . . . . . . . . . . . . . . . .  5
   4.  ICMP Extensibility . . . . . . . . . . . . . . . . . . . . . .  5
     4.1.  Destination Unreachable  . . . . . . . . . . . . . . . . .  7
     4.2.  Source Quench  . . . . . . . . . . . . . . . . . . . . . .  8
     4.3.  Time Exceeded  . . . . . . . . . . . . . . . . . . . . . .  9
     4.4.  Parameter Problem  . . . . . . . . . . . . . . . . . . . .  9
     4.5.  ICMP Messages That Can Be Extended . . . . . . . . . . . . 10
   5.  Backwards Compatibility  . . . . . . . . . . . . . . . . . . . 10
     5.1.  Classic Application Receives ICMP Message With
           Extensions . . . . . . . . . . . . . . . . . . . . . . . . 11
     5.2.  Non-compliant Application Receives ICMP Message With
           No Extensions  . . . . . . . . . . . . . . . . . . . . . . 12
     5.3.  Non-compliant Application Receives ICMP Message With
           Compliant Extensions . . . . . . . . . . . . . . . . . . . 13
     5.4.  Compliant Application Receives ICMP Message with No
           Extensions . . . . . . . . . . . . . . . . . . . . . . . . 13
     5.5.  Compliant Application Receives ICMP Message with
           Non-compliant Extensions . . . . . . . . . . . . . . . . . 13
   6.  The ICMP Extension Structure . . . . . . . . . . . . . . . . . 14
   7.  ICMP Extension Objects . . . . . . . . . . . . . . . . . . . . 14
   8.  Security Considerations  . . . . . . . . . . . . . . . . . . . 15
   9.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 15
   10. Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 16
   11. References . . . . . . . . . . . . . . . . . . . . . . . . . . 16
     11.1. Normative References . . . . . . . . . . . . . . . . . . . 16
     11.2. Informative References . . . . . . . . . . . . . . . . . . 16
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 18
   Intellectual Property and Copyright Statements . . . . . . . . . . 19



















Bonica, et al.          Expires December 11, 2006               [Page 3]

Internet-Draft          Multi-part ICMP Messages               June 2006


1.   Conventions Used In This Document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC2119 [1].


2.  Introduction

   This document redefines selected ICMP [2] messages to include an
   extension structure and a length attribute.  In this document, the
   term ICMP refers exclusively to ICMPv4.  Unless explicitly noted,
   ICMPv6 is NOT discussed in this memo.

   The extension structure supports multi-part ICMP operation.  Protocol
   designers can make an ICMP message carry additional information by
   encoding that information in an extension.

   This document also addresses a fundamental problem in ICMP
   extensibility.  Many of the ICMP messages addressed by this memo
   include an "original datagram" field.  The "original datagram" field
   contains the initial octets of the datagram to which the ICMP message
   is a response.  Although the "original datagram" field is of variable
   length, the ICMP message does not include a field that specifies its
   length.

   Application software infers the length of the "original datagram"
   field from the total length of the ICMP message.  If an extension
   structure were appended to the message without adding a length
   attribute for the "original datagram" field, the message would become
   unparsable.  Specifically, application software would not be able to
   determine where the "original datagram" field ends and where the
   extension structure begins.  Therefore, this document proposes a
   length attribute as well as an extension structure that is appended
   to the ICMP message.

   The current memo also addresses backwards compatibility with existing
   ICMP implementations that either do not implement the extensions
   defined herein or implement them without adding the required length
   attributes.  In particular, this draft addresses backwards
   compatibility with certain, widely deployed, MPLS-aware ICMP
   implementations that send the extensions defined herein without
   adding the required length attribute.

   The current memo does not define any ICMP extension objects.  It
   defines only the extension header and a common header that all
   extension objects share.  Reference [5] provides a sample application
   of the ICMP Extension Object.



Bonica, et al.          Expires December 11, 2006               [Page 4]

Internet-Draft          Multi-part ICMP Messages               June 2006


3.  Summary of Changes to ICMP

   The following is a summary of changes to ICMP that are proposed by
   this memo:

      An ICMP Extension Structure MAY be appended to ICMP Destination
      Unreachable, Source Quench, Time Exceeded, and Parameter Problem
      messages.

      These messages include an "original datagram" field, and the
      message formats are updated to specify a length attribute for the
      "original datagram" field.

      The "original datagram" field MUST include at least 128 octets.
      If the original datagram did not contain 128 octets, the "original
      datagram" field MUST be zero padded to 128 octets.

      The "original datagram" field MUST be zero padded to the nearest
      32-bit boundary.


4.  ICMP Extensibility

   RFC 792 defines the following ICMP message types:

      - Destination Unreachable

      - Time Exceeded

      - Parameter Problem

      - Source Quench

      - Redirect

      - Echo Request/Reply

      - Timestamp/Timestamp Reply

      - Information Request/Information Reply

   RFC 1191 [3] adds a "Next-Hop MTU" field to the Destination
   Unreachable message.  Subsequent RFCs define the following messages:

      - Address Mask Request/Reply [6]






Bonica, et al.          Expires December 11, 2006               [Page 5]

Internet-Draft          Multi-part ICMP Messages               June 2006


      - Router Solicitation/Advertisement [7]

      - Traceroute [8]

      - Domain Name Request/Reply [9]

      - Security Failure [10]

      - Experimental Mobility [11]

   Many ICMP messages are extensible as currently defined.  Protocol
   designers can extend ICMP messages by simply appending fields or data
   structures to them.

   The following ICMP messages are not extensible as currently defined:

      - Destination Unreachable

      - Source Quench

      - Time Exceeded

      - Parameter Problem

      - Redirect

      - Echo Request

      - Echo Reply

      - Domain Name Reply

   These ICMP messages contain an "original datagram" field which
   represents a portion of the original datagram to which the ICMP
   messages is a response.  As originally defined, this field includes
   the IP header plus the next eight octets of the original datagram.
   RFC 1812 [4] extends this field to contain as many octets as
   possible, without exceeding a limit of 576 octets for the entire ICMP
   message.

   Unfortunately, the "original datagram" field lacks a length
   attribute.  Application software infers the length of this field from
   the total length of the ICMP message.  If an extension structure were
   appended to the message without adding a length attribute for the
   "original datagram" field, the message would become unparsable.
   Specifically, application software would not be able to determine
   where the "original datagram" field ends and where the extension
   structure begins.



Bonica, et al.          Expires December 11, 2006               [Page 6]

Internet-Draft          Multi-part ICMP Messages               June 2006


   In order to solve this problem, this memo introduces an 8-bit length
   attribute to the following ICMP messages.

      - Destination Unreachable

      - Source Quench

      - Time Exceeded

      - Parameter Problem

   The length attribute MUST be specified when the ICMP Extension
   Structure is appended to the above mentioned ICMP messages.

   The length attribute represents the length of the "original datagram"
   field, measured in 32-bit words.  When the length attribute is
   specified, the "original datagram" field MUST be zero padded to the
   nearest 32-bit boundary.  Space for the length attribute is claimed
   from reserved octets, whose value was previously required to be zero.
   Because the sixth octet of each of the impacted ICMP messages was
   reserved for future use, this octet was selected as the location of
   the length attribute.

   In order the achieve backwards compatibility, when the ICMP Extension
   Structure is appended to an ICMP message and that ICMP message
   contains an "original datagram" field, the "original datagram" field
   MUST contain at least 128 octets.  If the original datagram did not
   contain 128 octets, the "original datagram" field MUST be zero padded
   to 128 octets.  (See Section 5.1 for rationale.)

   The following sub-sections depict length attribute as it has been
   introduced to selected ICMP messages.

4.1.  Destination Unreachable

   Figure 1 depicts the Destination Unreachable Message.















Bonica, et al.          Expires December 11, 2006               [Page 7]

Internet-Draft          Multi-part ICMP Messages               June 2006


       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |     Type      |     Code      |          Checksum             |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |     unused    |    Length     |         Next-Hop MTU          |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |      Internet Header + leading octets of original datagram    |
      |                                                               |
      |                           //                                  |
      |                                                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 1: Destination Unreachable

   The syntax and semantics of all fields are unchanged from RFC 792 and
   RFC 1191.  However, a length attribute is added to the second word.
   The length attribute represents length of the padded "original
   datagram" field, measured in 32-bit words.

4.2.  Source Quench

   Figure 2 depicts the Source Quench Message.



       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |     Type      |     Code      |          Checksum             |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |     unused    |    Length     |         unused                |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |      Internet Header + leading octets of original datagram    |
      |                                                               |
      |                           //                                  |
      |                                                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 2: Source Quench

   The syntax and semantics of all fields are unchanged from RFC 792,
   except for a length attribute which is added to the second word.  The
   length attribute represents length of the padded "original datagram"
   field, measured in 32-bit words.






Bonica, et al.          Expires December 11, 2006               [Page 8]

Internet-Draft          Multi-part ICMP Messages               June 2006


4.3.  Time Exceeded

   Figure 3 depicts the Time Exceeded Message.



       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |     Type      |     Code      |          Checksum             |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |     unused    |    Length     |          unused               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |      Internet Header + leading octets of original datagram    |
      |                                                               |
      |                           //                                  |
      |                                                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 3: Time Exceeded

   The syntax and semantics of all fields are unchanged from RFC 792,
   except for a length attribute which is added to the second word.  The
   length attribute represents length of the padded "original datagram"
   field, measured in 32-bit words.

4.4.  Parameter Problem

   Figure 4 depicts the Parameter Problem Message.



       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |     Type      |     Code      |          Checksum             |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |    Pointer    |    Length     |          unused               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |      Internet Header + leading octets of original datagram    |
      |                                                               |
      |                           //                                  |
      |                                                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 4: Parameter Problem

   The syntax and semantics of all fields are unchanged from RFC 792,



Bonica, et al.          Expires December 11, 2006               [Page 9]

Internet-Draft          Multi-part ICMP Messages               June 2006


   except for a length attribute which is added to the second word.  The
   length attribute represents length of the padded "original datagram"
   field, measured in 32-bit words.

4.5.  ICMP Messages That Can Be Extended

   An ICMP Extension Structure MAY be appended to ICMP Destination
   Unreachable, Source Quench, Time Exceeded, and Parameter Problem
   messages.  The ICMP Extension Structure cannot be appended to any of
   the other ICMP messages mentioned in Section 4.

   ICMP messages defined in the future should indicate whether or not
   they support the extension mechanism defined in this specification.
   It is recommended that all new messages employ some mechanism that
   allows later extensions.


5.  Backwards Compatibility

   ICMP messages can be categorized as follows:

      - Messages that do not include any ICMP extensions

      - Messages that include non-compliant ICMP extensions

      - Messages that includes compliant ICMP extensions

   Any ICMP implementation can send a message that does not include
   extensions.  ICMP implementations produced prior to 1999 are not
   known to send ICMP extensions.

   Some ICMP implementations, produced between 1999 and the present, may
   send a non-compliant version of ICMP extensions described in this
   memo.  Specifically, these implementations may append the ICMP
   Extension Structure to the Time Exceeded and Destination Unreachable
   messages.  When they do this, they send exactly 128 octets
   representing the original datagram, zero padding if required.  They
   also calculate checksums as described in this document.  However,
   they do not specify a length attribute to be associated with the
   "original datagram" field.

   It is assumed that ICMP implementations produced in the future will
   send ICMP extensions that are compliant with this specification.

   Likewise, applications that consume ICMP messages can be categorized
   as follows:





Bonica, et al.          Expires December 11, 2006              [Page 10]

Internet-Draft          Multi-part ICMP Messages               June 2006


      - Classic applications

      - Non-compliant applications

      - Compliant applications

   Classic applications do not parse extensions defined in this memo.
   They are insensitive to the length attribute that is associated with
   the "original datagram" field.

   Non-compliant implementations parse the extensions defined in this
   memo, but only in conjunction with the Time Expired and Destination
   Unreachable messages.  They require the "original datagram" field to
   contain exactly 128 octets and are insensitive to the length
   attribute that is associated with the "original datagram" field.
   Non-compliant applications were produced between 1999 and the
   present.

   Compliant applications comply fully with the specifications of this
   document.

   In order to demonstrate backwards compatibility, Table 1 describes
   how members of each application category would parse each category of
   ICMP message.

   +----------------+----------------+----------------+----------------+
   |                |  No Extensions |  Non-compliant |    Compliant   |
   |                |                |   Extensions   |   Extensions   |
   +----------------+----------------+----------------+----------------+
   | Classic        |        -       |   Section 5.1  |   Section 5.1  |
   | Application    |                |                |                |
   |                |                |                |                |
   | Non-compliant  |   Section 5.2  |        -       |   Section 5.3  |
   | Application    |                |                |                |
   |                |                |                |                |
   | Compliant      |   Section 5.4  |   Section 5.5  |        -       |
   | Application    |                |                |                |
   +----------------+----------------+----------------+----------------+

                                  Table 1

   In the table above, cells that contain a dash represent the nominal
   case and require no explanation.  In the following sections, we
   assume that the ICMP message type is "Time Exceeded".

5.1.  Classic Application Receives ICMP Message With Extensions

   When a classic application receives an ICMP message that includes



Bonica, et al.          Expires December 11, 2006              [Page 11]

Internet-Draft          Multi-part ICMP Messages               June 2006


   extensions, it will incorrectly interpret those extensions as being
   part of the "original datagram" field.  Fortunately, the extensions
   are guaranteed to begin at least 128 octets beyond the beginning of
   the "original datagram" field.  So, only those ICMP applications that
   process the 129th octet of the "original datagram" field will be
   adversely effected.  To date, no such applications have been
   identified.

5.2.  Non-compliant Application Receives ICMP Message With No Extensions

   When a non-compliant application receives a message that contains no
   extensions, the application examines the total length of the ICMP
   message.  If the total ICMP message length is less than the length of
   its IP header plus 144 octets, the application correctly determines
   that the message does not contain any extensions.

   The 144 octet sum is derived from 8 octets for the first two words of
   the ICMP Time Exceeded message, 128 octets for the "original
   datagram" field, 4 octets for the ICMP Extension Header and 4 octets
   for a single ICMP Object header.  All of these octets would be
   required if extensions were present.

   If the ICMP payload contains 144 octets or more, the application must
   examine the 137th octet to determine whether it represents a valid
   ICMP Extension Header.  In order to represent a valid Extension
   Header, it must contain a valid version number and checksum.  If it
   does not contain a valid version number and checksum, the application
   correctly determines that the message does not contain any
   extensions.

   Non-compliant applications assume that the ICMP Extension Structure
   begins on the 137th octet of the Time Exceeded message, after a 128
   octet field representing the padded "original datagram" message.

   It is possible that a non-compliant application will parse an ICMP
   message incorrectly under the following conditions:

      - the message does not contain extensions

      - the original datagram field contains 144 octets or more

      - selected octets of the original datagram field represent the
      correct values for an extension header version number and checksum

   Although this is possible, it is very unlikely.






Bonica, et al.          Expires December 11, 2006              [Page 12]

Internet-Draft          Multi-part ICMP Messages               June 2006


5.3.  Non-compliant Application Receives ICMP Message With Compliant
      Extensions

   When a non-compliant application receives a message that contains
   compliant ICMP extensions, it will parse those extensions correctly
   only if the "original datagram" field contains exactly 128 octets.
   This is because non-compliant applications are insensitive to the
   length attribute that is associated with the "original datagram"
   field.  (They assume its value to be 128.)

   Provided that the entire ICMP messages does not exceed 576 octets,
   there is no upper limit upon the length of the "original datagram"
   field.  However, each vendor will decide how many octets to include.
   Those wishing to be backward compatible with non-compliant TRACEROUTE
   implementations will include exactly 128 octets.  Those not requiring
   compatibility with non-compliant TRACEROUTE applications may include
   more octets.

5.4.  Compliant Application Receives ICMP Message with No Extensions

   When a compliant application receives an ICMP message, it examines
   the length attribute that is associated with the "original datagram"
   field.  If the length attribute is zero, the compliant application
   MUST determine that the message contains no extensions.

5.5.  Compliant Application Receives ICMP Message with Non-compliant
      Extensions

   When a compliant application receives an ICMP message, it examines
   the length attribute that is associated with the "original datagram"
   field.  If the length attribute is zero, the compliant application
   MUST determine that the message contains no extensions.  In this
   case, that determination is technically correct, but not backwards
   compatible with the non-compliant implementation that originated the
   ICMP message.

   So, to ease transition yet encourage compliant implementation,
   compliant TRACEROUTE implementations MAY include a non-default
   operation mode to also interpret non-compliant responses.
   Specifically, when a TRACEROUTE application operating in non-
   compliant mode receives an ICMP message that contains 144 octets or
   more in its payload and does not specify a length attribute, it will
   parse for a valid extension header beginning at octet 137.  If the
   application detects a valid version and checksum, it will treat the
   following octets as an extension structure.






Bonica, et al.          Expires December 11, 2006              [Page 13]

Internet-Draft          Multi-part ICMP Messages               June 2006


6.  The ICMP Extension Structure

   This memo proposes an optional ICMP Extension Structure that can be
   appended to any ICMP message, except for those that are disqualified
   in Section 4.5 of this document.

   The Extension Structure contains exactly one Extension Header
   followed by one or more objects.  Having received an ICMP message
   with extensions, application software MAY process selected objects
   while ignoring others.  The presence of an unrecognized object does
   not imply that an ICMP message is malformed.

   As stated in RFC 792, the total length of the ICMP message, including
   extensions, MUST NOT exceed 576 octets.  Figure 5 depicts the ICMP
   Extension Header.



       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |Version|      (Reserved)       |           Checksum            |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 5: ICMP Extension Header

   The fields of the ICMP Extension Header are as follows:

   Version: 4 bits

      ICMP extension version number.  This is version 2.

   Reserved: 12 bits

      Must be set to 0.

   Checksum: 16 bits

      The one's complement of the one's complement sum of the data
      structure, with the checksum field replaced by zero for the
      purpose of computing the checksum.  An all-zero value means that
      no checksum was transmitted.


7.  ICMP Extension Objects

   Each extension object contains one or more 32-bit words, representing
   an object header and payload.  All object headers share a common



Bonica, et al.          Expires December 11, 2006              [Page 14]

Internet-Draft          Multi-part ICMP Messages               June 2006


   format.  Figure 6 depicts the Object Header and payload.


       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |             Length            |   Class-Num   |   C-Type      |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |                                                               |
      |                   // (Object payload) //                      |
      |                                                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 6: Object Header and Payload

   An object header has the following fields:

   Length: 16 bits

      Length of the object, measured in octets, including the object
      header and object payload.

   Class-Num: 8 bits

      Identifies object class.

   C-Type: 8 bits

      Identifies object sub-type.


8.  Security Considerations

   Upon receipt of an ICMP message, application software must check it
   for syntactic correctness.  The extension checksum must be verified.
   Improperly specified length attributes and other syntax problems may
   result in buffer overruns.

   This memo does not define the conditions under which a router sends
   an ICMP message.  Therefore, it does not expose routers to any new
   denial of service attacks.  Routers may need to limit the rate at
   which ICMP messages are sent.


9.  IANA Considerations

   The ICMP Extension Object header contains two 8-bit fields: The
   Class-Num identifies the object class, and the C-Type identifies the



Bonica, et al.          Expires December 11, 2006              [Page 15]

Internet-Draft          Multi-part ICMP Messages               June 2006


   class sub-type.  Sub-type values are defined relative to a specific
   object class value, and are defined per-class.

   IANA should establish a registry of ICMP extension objects classes
   and class sub-types.  There are no values assigned within this
   document to maintain.  Object classes 0xF7 - 0xFF are reserved for
   private use.  Object class values are assignable on a first-come-
   first-serve.  The policy for assigning sub-type values should be
   defined in the document defining new class values.


10.  Acknowledgments

   Thanks to Joe Touch for his comments regarding this draft.


11.  References

11.1.  Normative References

   [1]  Bradner, S., "Key words for use in RFCs to Indicate Requirement
        Levels", BCP 14, RFC 2119, March 1997.

   [2]  Postel, J., "Internet Control Message Protocol", STD 5, RFC 792,
        September 1981.

   [3]  Mogul, J. and S. Deering, "Path MTU discovery", RFC 1191,
        November 1990.

   [4]  Baker, F., "Requirements for IP Version 4 Routers", RFC 1812,
        June 1995.

11.2.  Informative References

   [5]   Atlas, A., "ICMP Extensions for Unnumbered Interfaces",
         draft-atlas-icmp-unnumbered-01 (work in progress), March 2006.

   [6]   Mogul, J. and J. Postel, "Internet Standard Subnetting
         Procedure", STD 5, RFC 950, August 1985.

   [7]   Deering, S., "ICMP Router Discovery Messages", RFC 1256,
         September 1991.

   [8]   Malkin, G., "Traceroute Using an IP Option", RFC 1393,
         January 1993.

   [9]   Simpson, W., "ICMP Domain Name Messages", RFC 1788, April 1995.




Bonica, et al.          Expires December 11, 2006              [Page 16]

Internet-Draft          Multi-part ICMP Messages               June 2006


   [10]  Karn, P. and W. Simpson, "ICMP Security Failures Messages",
         RFC 2521, March 1999.

   [11]  Kempf, J., "Instructions for Seamoby and Experimental Mobility
         Protocol IANA Allocations", RFC 4065, July 2005.














































Bonica, et al.          Expires December 11, 2006              [Page 17]

Internet-Draft          Multi-part ICMP Messages               June 2006


Authors' Addresses

   Ronald P. Bonica
   Juniper Networks
   2251 Corporate Park Drive
   Herndon, VA  20171
   US

   Email: rbonica@juniper.net


   Der-Hwa Gan
   Juniper Networks
   1194 N. Mathilda Ave.
   Sunnyvale, CA  94089
   US

   Email: dhg@juniper.net


   Pekka Nikander
   Ericsson Research Nomadic Lab
   JORVAS  FIN-02420
   Finland

   Email: pekka.nikander@nomadiclab.com


   Daniel C. Tappan
   Cisco Systems, Inc.
   250 Apollo Drive
   Chelmsford, MA  01824
   US

   Email: tappan@cisco.com


   Carlos Pignataro
   Cisco Systems, Inc.
   7025 Kit Creek Road
   Research Triangle Park, N.C.  27709
   US

   Email: cpignata@cisco.com







Bonica, et al.          Expires December 11, 2006              [Page 18]

Internet-Draft          Multi-part ICMP Messages               June 2006


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Disclaimer of Validity

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Copyright Statement

   Copyright (C) The Internet Society (2006).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.




Bonica, et al.          Expires December 11, 2006              [Page 19]


