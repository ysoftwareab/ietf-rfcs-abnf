A9YXV0aA=="
mZmZA==")

A9YXV0aA==
sieveurl = sieveurl-server / sieveurl-list-scripts /
                    sieveurl-script

sieveurl-server = "sieve://" authority

sieveurl-list-scripts = "sieve://" authority ["/"]

sieveurl-script = "sieve://" authority "/"
                           [owner "/"] scriptname

authority = <defined in [URI-GEN]>

owner         = *ochar
                         ;; %-encoded version of [SASL] authorization
                         ;; identity (script owner) or "userid".
                         ;;
                         ;; Empty owner is used to reference
                         ;; global scripts.
                         ;;
                         ;; Note that ASCII characters such as " ", ";",
                         ;; "&", "=", "/" and "?" must be %-encoded
                         ;; as per rule specified in [URI-GEN].

scriptname    = 1*ochar
                         ;; %-encoded version of UTF-8 representation
                         ;; of the script name.
                         ;; Note that ASCII characters such as " ", ";",
                         ;; "&", "=", "/" and "?" must be %-encoded
                         ;; as per rule specified in [URI-GEN].

ochar         = unreserved / pct-encoded / sub-delims-sh /
                         ":" / "@"
                         ;; Same as [URI-GEN] 'pchar'
                         ;; but without ";", "&" and "=".

unreserved = <defined in [URI-GEN]>

pct-encoded = <defined in [URI-GEN]>

sub-delims-sh = "!" / "$" / "'" / "(" / ")" /
                         "*" / "+" / ","
                         ;; Same as [URI-GEN] sub-delims,
                         ;; but without ";", "&" and "=".
SAFE-CHAR             = %x01-09 / %x0B-0C / %x0E-21 / %x23-5B /
                            %x5D-7F
                            ;; any TEXT-CHAR except QUOTED-SPECIALS

QUOTED-CHAR           = SAFE-UTF8-CHAR / DQUOTE QUOTED-SPECIALS

QUOTED-SPECIALS       = DQUOTE / "\"

SAFE-UTF8-CHAR        = SAFE-CHAR / UTF8-2 / UTF8-3 / UTF8-4
                            ;; <UTF8-2>, <UTF8-3> and <UTF8-4>
                            ;; are defined in [UTF-8]

ATOM-CHAR             = "!" / %x23-27 / %x2A-5B / %x5D-7A / %x7C-7E
                            ;; Any CHAR except ATOM-SPECIALS

ATOM-SPECIALS         = "(" / ")" / "{" / SP / CTL /
                             QUOTED-SPECIALS

QUOTED-SPECIALS       = <"> / "\"

atom                  = 1*1024ATOM-CHAR

iana-token            = atom
                            ;; MUST be registered with IANA

auth-type             = DQUOTE auth-type-name DQUOTE

auth-type-name        = iana-token
                            ;; as defined in SASL [SASL]

command               = (command-any / command-auth /
                             command-nonauth) CRLF
                            ;; Modal based on state

command-any           = command-capability / command-logout /
                            command-noop
                            ;; Valid in all states

command-auth          = command-getscript / command-setactive /
                            command-listscripts / command-deletescript /
                            command-putscript / command-checkscript /
                            command-havespace /  /
                            command-renamescript /
                            command-unauthenticate
                            ;; Valid only in Authenticated state

command-nonauth       = command-authenticate / command-starttls
                            ;; Valid only when in Non-Authenticated
                            ;; state

command-authenticate  = "AUTHENTICATE" SP auth-type [SP string]
                            *(CRLF string)

command-capability    = "CAPABILITY"

command-deletescript  = "DELETESCRIPT" SP sieve-name

command-getscript     = "GETSCRIPT" SP sieve-name

command-havespace     = "HAVESPACE" SP sieve-name SP number

command-listscripts   = "LISTSCRIPTS"

command-noop          = "NOOP" [SP string]

command-logout        = "LOGOUT"

command-putscript     = "PUTSCRIPT" SP sieve-name SP sieve-script

command-checkscript   = "CHECKSCRIPT" SP sieve-script
sieve-script          = string

command-renamescript  = "RENAMESCRIPT" SP old-sieve-name SP
                            new-sieve-name

old-sieve-name        = sieve-name

new-sieve-name        = sieve-name

command-setactive     = "SETACTIVE" SP active-sieve-name

command-starttls      = "STARTTLS"

command-unauthenticate= "UNAUTHENTICATE"

extend-token          = atom
                            ;; MUST be defined by a standards track or
                            ;; IESG approved experimental protocol
                            ;; extension

extension-data        = extension-item *(SP extension-item)

extension-item        = extend-token / string / number /
                            "(" [extension-data] ")"

literal-c2s           = "{" number "+}" CRLF *OCTET
                            ;; The number represents the number of
                            ;; octets.
                            ;; This type of literal can only be sent
                            ;; from the client to the server.

literal-s2c           = "{" number "}" CRLF *OCTET
                            ;; Almost identical to literal-c2s,
                            ;; but with no '+' character.
                            ;; The number represents the number of
                            ;; octets.
                            ;; This type of literal can only be sent
                            ;; from the server to the client.

number                = 1*DIGIT
                            ;; A 32-bit unsigned number.
                            ;; (0 <= n < 4,294,967,296)

number-str            = string
                            ;; <number> encoded as a <string>.

quoted                = DQUOTE *1024QUOTED-CHAR DQUOTE
                            ;; limited to 1024 octets between the <">s
resp-code             = "AUTH-TOO-WEAK" / "ENCRYPT-NEEDED" /
                            "QUOTA" ["/" ("MAXSCRIPTS" / "MAXSIZE")] /
                            resp-code-sasl /
                            resp-code-referral /
                            "TRANSITION-NEEDED" / "TRYLATER" /
                            "ACTIVE" / "NONEXISTENT" /
                            "ALREADYEXISTS" / "WARNINGS" /
                            "TAG" SP string /
                            resp-code-ext

resp-code-referral    = "REFERRAL" SP sieveurl

resp-code-sasl        = "SASL" SP string

resp-code-name        = iana-token
                            ;; The response code name is hierarchical,
                            ;; separated by '/'.
                            ;; The response code name MUST NOT start
                            ;; with '/'.

resp-code-ext         = resp-code-name [SP extension-data]
                            ;; unknown response codes MUST be tolerated
                            ;; by the client.

response              = response-authenticate /
                            response-logout /
                            response-getscript /
                            response-setactive /
                            response-listscripts /
                            response-deletescript /
                            response-putscript /
                            response-checkscript /
                            response-capability /
                            response-havespace /
                            response-starttls /
                            response-renamescript /
                            response-noop /
                            response-unauthenticate

response-authenticate = *(string CRLF)
                            ((response-ok [response-capability]) /
                             response-nobye)
                            ;; <response-capability> is REQUIRED if a
                            ;; SASL security layer was negotiated and
                            ;; MUST be omitted otherwise.

response-capability   = *(single-capability) response-oknobye
single-capability     = capability-name [SP string] CRLF

capability-name       = string
                            ;; Note that literal-s2c is allowed.

initial-capabilities  = DQUOTE "IMPLEMENTATION" DQUOTE SP string /
                            DQUOTE "SASL" DQUOTE SP sasl-mechs /
                            DQUOTE "SIEVE" DQUOTE SP sieve-extensions /
                            DQUOTE "MAXREDIRECTS" DQUOTE SP number-str /
                            DQUOTE "NOTIFY" DQUOTE SP notify-mechs /
                            DQUOTE "STARTTLS" DQUOTE /
                            DQUOTE "LANGUAGE" DQUOTE SP language /
                            DQUOTE "VERSION" DQUOTE SP version /
                            DQUOTE "OWNER" DQUOTE SP string
                            ;; Each capability conforms to
                            ;; the syntax for single-capability.
                            ;; Also note that the capability name
                            ;; can be returned as either literal-s2c
                            ;; or quoted, even though only "quoted"
                            ;; string is shown above.
version = DQUOTE "1.0" DQUOTE

sasl-mechs = string
                 ; space separated list of SASL mechanisms,
                 ; each SASL mechanism name complies with rules
                 ; specified in [SASL].
                 ; Can be empty.

sieve-extensions = string
                 ; space separated list of supported SIEVE extensions,
                 ; can be empty.

language     = string
                 ; Contains <Language-Tag> from [RFC4646].

notify-mechs = string
                 ; space separated list of URI schema parts
                 ; for supported notification [NOTIFY] methods.
                 ; MUST NOT be empty.

response-deletescript = response-oknobye

response-getscript    = (sieve-script CRLF response-ok) /
                            response-nobye

response-havespace    = response-oknobye

response-listscripts  = *(sieve-name [SP "ACTIVE"] CRLF)
                            response-oknobye
                            ;; ACTIVE may only occur with one sieve-name

response-logout       = response-oknobye

response-unauthenticate= response-oknobye
                             ;; "NO" response can only be returned when
                             ;; the command is issued in a wrong state
                             ;; or has a wrong number of parameters

response-ok           = "OK" [SP "(" resp-code ")"]
                            [SP string] CRLF
                            ;; The string contains human readable text
                            ;; encoded as UTF-8.

response-nobye        = ("NO" / "BYE") [SP "(" resp-code ")"]
                            [SP string] CRLF
                            ;; The string contains human readable text
                            ;; encoded as UTF-8.

response-oknobye      = response-ok / response-nobye

response-noop         = response-ok

response-putscript    = response-oknobye

response-checkscript  = response-oknobye

response-renamescript = response-oknobye

response-setactive    = response-oknobye

response-starttls     = (response-ok response-capability) /
                            response-nobye

sieve-name            = string
                            ;; See Section 1.6 for the full list of
                            ;; prohibited characters.
                            ;; Empty string is not allowed.

active-sieve-name     = string
                            ;; See Section 1.6 for the full list of
                            ;; prohibited characters.
                            ;; This is similar to <sieve-name>, but
                            ;; empty string is allowed and has a special
                            ;; meaning.

string                = quoted / literal-c2s / literal-s2c
                            ;; literal-c2s is only allowed when sent
                            ;; from the client to the server.
                            ;; literal-s2c is only allowed when sent
                            ;; from the server to the client.
                            ;; quoted is allowed in either direction.


