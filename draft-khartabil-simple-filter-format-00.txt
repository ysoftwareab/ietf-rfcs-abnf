

SIMPLE                                                      H. Khartabil
Internet-Draft                                               M. Lonnfors
Expires: September 30, 2003                             J. Costa-Requena
                                                             E. Leppanen
                                                                   Nokia
                                                              April 2003


       An Extensible Markup Language (XML) Based Format for Event
                         Notification Filtering
                draft-khartabil-simple-filter-format-00

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups. Note that other
   groups may also distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on September 30, 2003.

Copyright Notice

   Copyright (C) The Internet Society (2003). All Rights Reserved.

Abstract

   The SIP event notification framework describes the usage of the
   Session Initiation Protocol (SIP) for subscriptions and notifications
   of changes to a state of a resource. The document does not describe a
   mechanism of how filtering of event notification information can be
   achieved.

   In order to enable this, a format is needed to enable the subscriber
   to choose when notifications are to be sent to it and what they are
   to contain. This document presents a solution in the form of an XML



Khartabil, et al.      Expires September 30, 2003               [Page 1]

Internet-Draft       XML Based Format for Filtering           April 2003


   document format.

Table of Contents

   1.      Conventions  . . . . . . . . . . . . . . . . . . . . . . .  3
   2.      Introduction . . . . . . . . . . . . . . . . . . . . . . .  3
   2.1     Motivation for Using XML . . . . . . . . . . . . . . . . .  4
   3.      Structure of XML-Encoded Filter Criteria . . . . . . . . .  4
   3.1     The <ev-filter-set> Root Element . . . . . . . . . . . . .  5
   3.2     The <ev-filter> Element  . . . . . . . . . . . . . . . . .  5
   3.3     The <what> Element . . . . . . . . . . . . . . . . . . . .  5
   3.3.1   Defining the Delivered Content . . . . . . . . . . . . . .  5
   3.4     The <trigger> Element  . . . . . . . . . . . . . . . . . .  6
   3.4.1   The <changed> Element  . . . . . . . . . . . . . . . . . .  6
   3.4.1.1 The "changed-from" Attribute . . . . . . . . . . . . . . .  7
   3.4.1.2 The "changed-to" Attribute . . . . . . . . . . . . . . . .  7
   3.4.1.3 The "changed-by" Attribute . . . . . . . . . . . . . . . .  7
   3.4.1.4 Combination of Attributes  . . . . . . . . . . . . . . . .  7
   3.4.2   The <added> Element  . . . . . . . . . . . . . . . . . . .  7
   3.4.3   The <removed> Element  . . . . . . . . . . . . . . . . . .  8
   4.      IANA Considerations  . . . . . . . . . . . . . . . . . . .  8
   5.      Examples . . . . . . . . . . . . . . . . . . . . . . . . .  8
   5.1     Filter Using <what> Element  . . . . . . . . . . . . . . .  8
   5.2     Filter Using <trigger> Element . . . . . . . . . . . . . .  8
   5.3     Filter Using <what> and <trigger> Elements . . . . . . . .  9
   6.      XML Schema for Filter Criteria . . . . . . . . . . . . . .  9
   7.      Security Requirements  . . . . . . . . . . . . . . . . . . 10
   8.      Acknowledgements . . . . . . . . . . . . . . . . . . . . . 11
           References . . . . . . . . . . . . . . . . . . . . . . . . 11
           Authors' Addresses . . . . . . . . . . . . . . . . . . . . 12
           Intellectual Property and Copyright Statements . . . . . . 14




















Khartabil, et al.      Expires September 30, 2003               [Page 2]

Internet-Draft       XML Based Format for Filtering           April 2003


1. Conventions

   In this document, the key words 'MUST', 'MUST NOT', 'REQUIRED',
   'SHALL', 'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'MAY',
   and 'OPTIONAL' are to be interpreted as described in RFC 2119 [1]
   and indicate requirement levels for compliant implementations.

2. Introduction

   SIP event notification is described in [5]. It defines a general
   framework for sending subscriptions and receiving notifications in
   SIP based systems.  It introduces the concept of event packages,
   which are concrete applications of the general event framework to a
   specific usage of events.

   Filtering is a mechanism for controlling the content of event
   notifications and for specifying the rules for when a notification
   should be sent. See requirements in [8] and [9].

   The filtering mechanism is expected to be particularly valuable to
   users of mobile wireless access devices. The characteristics of the
   devices typically include high latency, low bandwidth, low data
   processing capabilities, small display, and limited battery power.
   Such devices can benefit from the ability to filter the amount of
   information generated at the source of the event notification.

   It is stated in [5] that the notifier may send a NOTIFY at any time,
   but typically it is sent when the state of the resource changes. It
   also states that the notifications would contain the complete and
   current state of the resource authorized for a certain subscriber to
   see. The format of such resource state information is package
   specific. In this memo, we assume that the NOTIFY for any package
   contains an XML document.

   There is a separate approach for the rate limiting of SIP event
   notifications, namely the throttling mechanism [10]. This throttling
   mechanism allows the subscriber to specify a maximum rate at which
   event notifications are generated by a single notifier. The solution
   for such requirements is out of scope for this document.

   This document presents an XML format whereby a subscriber describes
   its preference when notifications are to be sent to it and what they
   are to contain. The scope of the "when" part is triggering.
   Triggering is defined as enabling a subscriber to specify triggering
   rules for notifications where the criteria are based on changes of
   the package specific state information, e.g., for the presence
   information document [4] the change in the value of the <status>
   element.



Khartabil, et al.      Expires September 30, 2003               [Page 3]

Internet-Draft       XML Based Format for Filtering           April 2003


2.1 Motivation for Using XML

   When trying to select the schema and protocol for defining the filter
   criteria, it can be found that there are several alternatives
   available. The best practice is to modularise the problem and work on
   smaller modules (the protocol and the filter information schema). The
   selection of the schema for defining the filter criteria requires a
   readable syntax with enough flexibility to define the semantics.

   Among the multiple possibilities (i.e. XML, Perl, TCL, CPL, etc), XML
   provides a generic framework for defining an XML schema for the
   filter criteria. The XML schema provides an extensible mechanism
   where the logic required for the filtering functionality can be
   built. A globally unique URI is associated to the XML schema
   specified for the filtering. The XML schema is shown as a namespace
   in a filter criteria.

   The XML also enables the use of XPath [16] for referencing items in
   an XML document (which is in the case of Presence [4] in the format
   of the PIDF).

   Some of the content-types of the event notifications are extensible
   XML documents, e.g. PIDF [2]. Since there is a need to reference the
   extensions in filters, a solution where fixed data element names of
   an XML document are referenced is not appropriate.

   In addition, by using XML the need for reliance on the transport
   protocol in order to interpret the filter criteria can be eliminated.

3. Structure of XML-Encoded Filter Criteria

   The filter criteria is an XML document [15] that MUST be well-formed
   and SHOULD be valid. The filter criteria XML documents MUST have the
   XML declaration and it SHOULD contain an encoding declaration in the
   XML declaration, for example; "<?XML version='1.0'
   encoding='UTF-8'?>". This specification makes use of XML namespaces
   for identifying the XML schema of the filter criteria documents and
   document fragments.

   The namespace identifier for elements defined by this specification
   is a URN [12], using the namespace identifier 'ietf' defined by [13]
   and extended by [11]. This urn is:
   urn:ietf:params:xml:ns:simple-filter+xml.

   This namespace declaration indicates the namespace on which the
   filter criteria are based on.





Khartabil, et al.      Expires September 30, 2003               [Page 4]

Internet-Draft       XML Based Format for Filtering           April 2003


3.1 The <ev-filter-set> Root Element

   The root element of the filter criteria is <ev-filter-set>.

   The <ev-filter-set> root element MUST contain the namespace mentioned
   above. This element MUST contain one or more <ev-filter> elements.

3.2 The <ev-filter> Element

   The <ev-filter> element is used to specify the content of an
   individual filter.

   <ev-filter> MUST have an 'id' attribute. The value of the 'id'
   attribute MUST be unique within the <ev-filter-set> root element.
   <ev-filter> MAY have an 'uri' attribute. The value of the 'uri'
   attribute is the URI of the resource that is being subscribed to.

   The URI of the resource is useful in cases where the 'eventlist'
   extension [6] is used with a package and different filter criteria
   are defined for one or more members of the list. The 'uri' attribute
   in the <ev-filter> element identifies the member within list to whom
   that specific filter criteria apply. If the <ev-filter> does not
   contain the 'uri' attribute, the filter criteria apply to all the
   members in the list unless a member of the list has its own filter
   criteria attributed by the 'uri' attribute.

   The <ev-filter> element MAY contain a <what> element and MAY contain
   one or more <trigger> elements, but MUST contain either the <what>
   element or the <trigger> element.

3.3 The <what> Element

   The <what> element is used to specify the content to be delivered to
   the subscriber. It does not specify the exact content but the rules
   that are used to construct that information.

3.3.1 Defining the Delivered Content

   It must be possible in the filter criteria to be able to select XML
   attributes and/or elements of the default information format specific
   to an event package. It must also be possible to reference any
   extensions to the default information formats that are valid for that
   event package.

   A general way to reference any items (XML elements and attributes) of
   the NOTIFY information document is specified. The referencing
   mechanism support hierarchy of the items since there may be several
   nested XML elements and attributes in the NOTIFY document.



Khartabil, et al.      Expires September 30, 2003               [Page 5]


   The preferred elements are indicated using the capabilities of XPath
   [16]. The XPath clause is stated in the value of the <what> element.
   The items addressed with the XPath are indicated with the expanded
   name, which means that the URI of the namespace referenced in the
   XPath expression is included in addition to the reference to the
   information element or attribute.

   The XPath expression needs to specifically request values of elements
   and attributes to be included in the newly constructed XML document.
   This means that specifying only the XML element or attribute path is
   not enough for receiving the values. This is achieved using the XPath
   "text()" function. This way of constructing XPath expressions makes
   it possible for the subscribers to retrieve the structure of an XML
   document with or without element or attribute values. For example, to
   request a tuple from a presence document that has a <basic> element
   with value 'open', and to request that the values of all the
   sub-elements in that tuple to be included in the constructed XML
   document, you need to specify an XPath expression that look like:

   //*[status/basic="open"]/descendant::* | //*[status/basic="open"]/
   ancestor-or-self::* | //*[status/basic="open"]/descendant::*/text() |
   //*[status/basic="open"]/ancestor-or-self::*/text()

3.4 The <trigger> Element

   The <trigger> element is used to identify the package specific
   changes that a resource has to encounter before a notification is
   delivered to the subscriber. It can appear more than once in a filter
   document. Multiple appearances of this element denotes the "OR"
   operation. This means that updates to a resource that satisfy any of
   the <trigger> elements criteria constitute a notification to be
   delivered.

   The <trigger> element MAY contain the <changed> element, the <added>
   element or the <removed>, but MUST contain at least one of the three
   elements. Any combination of the 3 elements is possible. Multiple
   appearances of those element within a <trigger>  element denotes the
   "AND" operation. This means that updates to a resource that satisfy
   ALL of the <changed>, <added> and <removed> elements' criteria within
   the <trigger> element constitute a notification to be delivered.

   The XPath expression in all the elements inside the <trigger> element
   may comtain a reference to an element/attribute or to the value of
   the element/attribute. Both are interpreted as references to the
   value.

3.4.1 The <changed> Element

   The <changed> element is used to identify the XML element or
   attribute, from the package specific XML document, that must change,



Khartabil, et al.      Expires September 30, 2003               [Page 6]

Internet-Draft       XML Based Format for Filtering           April 2003


   compared to the previous XML document, in order to activate the
   trigger and cause the NOTIFY to be delivered. The XML element or
   attribute is indicated using the capabilities of XPath. The XPath
   expression MUST only reference one element or attribute. [16].

   The <changed> element MAY contain the "changed-from" attribute,
   "changed-to" attribute, "changed-by" attribute, or any combination of
   the three.

3.4.1.1 The "changed-from" Attribute

   A trigger is active when the element or attribute identified with the
   <changed> element has changed from the value indicated by this
   attribute to a different value.

3.4.1.2 The "changed-to" Attribute

   A trigger is active when the element or attribute identified with the
   <changed> element has changed to the value indicated by this
   attribute from a different value.

3.4.1.3 The "changed-by" Attribute

   A trigger is active when the element or attribute identified with the
   <changed> element has changed by the value indicated by this
   attribute from a different value.

3.4.1.4 Combination of Attributes

   Any combination of the "changed-from", "changed-to", and "changed-by"
   attributes in the <changed> element is possible. For example, if the
   "changed-from" attribute was combined with the "changed-to" attribute
   it is interpreted as: the trigger is active when the XML element or
   attribute identified with the <changed> element has changed from the
   "changed-from" value to the "changed-to" value. Note that if the
   "changed-by" attribute is used in combination with the other
   attributes, the other attribute types MUST match the "changed-by"
   type of decimal.

3.4.2 The <added> Element

   The <added> element is used to trigger a NOTIFY when the element or
   attribute, identified in it, has been added to the new XML document
   in comparison to the previous XML document. It can be used, for
   example, by subscribers to learn of new services and/or capabilities
   subscribed to by the notifier, or services and/or capabilities that
   the notifier has now allowed the subscriber to see.




Khartabil, et al.      Expires September 30, 2003               [Page 7]

Internet-Draft       XML Based Format for Filtering           April 2003


3.4.3 The <removed> Element

   The <removed> element is used to trigger a NOTIFY when the element or
   attribute, identified in it, has been removed from the new XML
   document in comparison to the previous XML document.

4. IANA Considerations

   A new content type "application/simple-filter+xml" is defined to
   represent an XML MIME for the filter criteria.

   This specification follows the guidelines of RFC3023 [14]

   OPEN ISSUE: IANA registration template must be added later.

5. Examples

5.1 Filter Using <what> Element

   This XPath expression selects all the upper, lower and parallel level
   presence information elements that match the criteria (this means the
   whole tuple and the base element). That criteria are: select <label>
   elements that have a value beginning with "MMS", "SMS" or "IM". The
   <label> element is defined in [3] as extension to PIDF [2].

   <?xml version="1.0" encoding="UTF-8"?>
   <ev-filter-set xmlns="urn:ietf:params:xml:ns:simple-filter">
         <ev-filter id = "mess" uri="sip:presentity@domain.com">
   	      <what>
   //*[rpids:label="im" or rpids:label="sms" or rpids:label="mms"]/descendant-or-self::*  | //*[rpids:label="im" or rpids:label="sms" or rpids:label="mms"]/ancestor::*
               </what>
   	   </ev-filter>
   </ev-filter-set>


5.2 Filter Using <trigger> Element

   This filter selects notifications to be sent to the subscriber when a
   certain PIDF [2] tuple changes its <basic> status from CLOSED to
   OPEN.

   <?xml version="1.0" encoding="UTF-8"?>
   <ev-filter-set xmlns="urn:ietf:params:xml:ns:simple-filter">
        <ev-filter id = "open_mean" uri="sip:presentity@domain.com">
           <trigger>
                    <changed changed-from="CLOSED" changed-to="OPEN">//urn:ietf:params:xml:ns:cpim-pidf/presence/tuple/status/basic</changed>
           </trigger>
        </ev-filter>



Khartabil, et al.      Expires September 30, 2003               [Page 8]

Internet-Draft       XML Based Format for Filtering           April 2003


   </ev-filter-set>


5.3 Filter Using <what> and <trigger> Elements

   This filter selects watcher information notifications [7] to be sent
   when the pending subscription status has changed from "pending" to
   "terminated". In the notification, only the watchers that have a
   status of "terminated" and an event of "rejected" are included.

   <?xml version="1.0" encoding="UTF-8"?>
   <ev-filter-set xmlns="urn:ietf:params:xml:ns:simple-winfo-filter"
                       pkgdef="winfo">
         <ev-filter id = "filter_X" uri="sip:presentity@domain.com">
            <what>
   	         //*[(../@package="presence" and ((@status="terminated" and @event="rejected"))]/ancestor-or-self::*
            </what>
                <trigger>
                      <changed changed-from="pending" changed-to="terminated">//*[@status] </changed>
                </trigger>
         </ev-filter>
   </ev-filter-set>


6. XML Schema for Filter Criteria

   XML Schema Implementation (Normative)

   <!-- *********************************************************** -->

   <?xml version="1.0" encoding="UTF-8"?>

   <!-- *********************************************************** -->

   <xsd:schema targetNamespace="urn:ietf:params:xml:ns:simple-pres-filter"
   xmlns:xsd=http://www.w3.org/2001/XMLSchema/>
   <xsd:import namespace="http://www.w3.org/XML/1998/namespace"
     schemaLocation="http://www.w3.org/2001/xml.xsd">   <!--lang -->

   <xsd:annotation>
     <xsd:documentation xml:lang="en">
       XML Schema Definition for SIP Event Filtering.
     </xsd:documentation>
   </xsd:annotation>

   <!-- *********************************************************** -->

   <xsd:element name="ev-filter-set" type="EventFilterSetType"/>



Khartabil, et al.      Expires September 30, 2003               [Page 9]

Internet-Draft       XML Based Format for Filtering           April 2003


   <xsd:complexType name="EventFilterSetType">
     <xsd:sequence>
       <xsd:element name="ev-filter" type="EventFilterType"
                    minOccurs="1"    maxOccurs="unbounded"/>
     </xsd:sequence>
   </xsd:complexType>

   <!--  An event filter corresponds to the SIP URI indicated by its "uri" attribute. The URI defines the presentity or a list of presentities. -->

   <xsd:complexType name="EventFilterType">
      <xsd:sequence>
          <xsd:element name="what" type="xsd:string" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="trigger" type="TriggerType" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="id"  type="xsd:string" use="required"/>
      <xsd:attribute name="uri" type="xsd:anyURI" use="optional/>
   </xsd:complexType>

   <xsd:complexType name="TriggerType">
      <xsd:sequence>
          <xsd:element name="changed" type="ChangedType" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="added" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="removed" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>

    <xs:complexType name="ChangedType">
       <xs:simpleContent>
           <xs:extension base="xds:string">
              <xs:attribute name="changed-from" type="xsd:anySimpleType" use="optional"/>
              <xs:attribute name="changed-to" type="xsd:anySimpleType" use="optional"/>
              <xs:attribute name="changed-by" type="xsd:decimal" use="optional"/>
           </xs:extension>
       </xs:simpleContent>
    </xs:complexType>


   <!-- *********************************************************** -->

   </xsd:schema>

   <!-- *********************************************************** -->



7. Security Requirements

   The filters in the body in a SIP message has a significant effect on



Khartabil, et al.      Expires September 30, 2003              [Page 10]

Internet-Draft       XML Based Format for Filtering           April 2003


   the ways in which the request is handled at a server. As a result, it
   is especially important that messages containing this extension be
   authenticated and authorised.

   Processing of requests and looking up filter criteria requires a set
   of operations and searches, which can require some amount of
   computation. This enables a DoS attack whereby a user can send
   requests with substantial number of messages with large contents, in
   the hopes of overloading the server. To counter this, the server
   SHOULD only allow filters with no more than about 20 occurances of
   the <what>, <changed>, <added> and <removed> elements.

   Requests can reveal sensitive information about a UA's capabilities.
   If this information is sensitive, it SHOULD be encrypted using SIP S/
   MIME capabilities.

   All filtering related security measures discussed in [5] MUST be
   followed along with package specific security.

8. Acknowledgements

   The authors would like to thank Tim Moran and Sreenivas Addagatla for
   their valuable input.

References

   [1]   Bradner, S., "Key words for use in RFCs to Indicate Requirement
         Levels", BCP 14, RFC 2119, March 1997.

   [2]   Sugano, H., "CPIM Presence Information Data Format",
         draft-ietf-impp-cpim-pidf-07.txt, December 2002.

   [3]   Schulzrinne, H., "RPIDS -- Rich Presence Information Data
         Format for Presence Based on the Session Initiation Protocol
         (SIP)",  draft-schulzrinne-simple-rpids-01.txt, February 2003.

   [4]   Rosenberg, J., "Session Initiation Protocol (SIP) Extensions
         for Presence",  draft-ietf-simple-presence-10.txt, January
         2003.

   [5]   Roach, A., "Session Initiation Protocol (SIP)-Specific Event
         Notification", RFC 3265, June 2002.

   [6]   Roach, A., "A Session Initiation Protocol (SIP) Event
         Notification Extension for Collections",
         draft-ietf-simple-event-list-01.txt, March 2003.

   [7]   Rosenberg, J., "An Extensible Markup Language (XML) Based



Khartabil, et al.      Expires September 30, 2003              [Page 11]

Internet-Draft       XML Based Format for Filtering           April 2003


         Format for Watcher Information",
         draft-ietf-simple-winfo-format-04.txt, January 2003.

   [8]   Moran, T., "Requirements for Presence Specific Event
         Notification Filtering",
         draft-ietf-simple-pres-filter-reqs-00.txt, April 2003.

   [9]   Kiss, K., "Requirements for Filtering of Watcher Information",
         draft-ietf-simple-winfo-filter-reqs-00.txt, April 2003.

   [10]  Niemi, A., "Requirements for Limiting the Rate of Event
         Notifications",
         draft-niemi-sipping-event-throttle-reqs-01.txt, February 2003.

   [11]  Mealling, M., "The IETF XML Registry",
         draft-mealling-iana-xmlns-registry-04.txt, June 2002.

   [12]  Moats, R., "The URN Syntax", RFC 2141, May 1997.

   [13]  Moats, R., "The URN Namespace for IETF Documents", RFC 2648,
         August 1999.

   [14]  Murata, M., "XML Media Types", RFC 3023, March 1997.

   [15]  Bray, T., "Exensible Markup Language (XML) 1.0 (Second
         Edition)",  W3C CR CR-xml11-20011006, October 2000.

   [16]  Clark, J., "XML Path Language (XPath) Version 1.0",  W3C REC
         REC-xpath-19991116, November 1999.


Authors' Addresses

   Hisham Khartabil
   Nokia
   P.O. Box 321
   Helsinki
   Finland

   Phone: +358 7180 76161
   EMail: hisham.khartabil@nokia.com










Khartabil, et al.      Expires September 30, 2003              [Page 12]

Internet-Draft       XML Based Format for Filtering           April 2003


   Mikko Lonnfors
   Nokia
   Itamerenkatu 00180
   Helsinki
   Finland

   Phone: + 358 50 4836402
   EMail: mikko.lonnfors@nokia.com


   Jose Costa-Requena
   Nokia
   P.O. Box 321
   FIN-00045 NOKIA GROUP
   FINLAND

   Phone: +358 71800 8000
   EMail: jose.costa-requena@nokia.com


   Eva Leppanen
   Nokia
   P.O BOX 785
   Tampere
   Finland

   Phone: +358 7180 77066
   EMail: eva-maria.leppanen@nokia.com























Khartabil, et al.      Expires September 30, 2003              [Page 13]

Internet-Draft       XML Based Format for Filtering           April 2003


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights. Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11. Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard. Please address the information to the IETF Executive
   Director.


Full Copyright Statement

   Copyright (C) The Internet Society (2003). All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works. However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assignees.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION



Khartabil, et al.      Expires September 30, 2003              [Page 14]

Internet-Draft       XML Based Format for Filtering           April 2003


   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.











































Khartabil, et al.      Expires September 30, 2003              [Page 15]

