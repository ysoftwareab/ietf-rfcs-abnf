y = H(x)
       The binary string x is given to a function H, which produces a
       fixed-length output y.

i = 1
L = length
res = K(1)
i = i + 1
res = res | K(i)
pwd-seed = H(token | peer-ID | server-ID | password | counter)

pwd-value = KDF(pwd-seed, "EAP-pwd Hunting And Pecking", len(p))

found = 0
counter = 1
pwd-seed = H(token | peer-ID | server-ID | password | counter)
pwd-value = KDF(pwd-seed, "EAP-pwd Hunting And Pecking", len(p))
x = pwd-value
PWE = (x, y)
PWE = (x, p-y)
found = 1
counter = counter + 1
found = 0
counter = 1
pwd-seed = H(token | peer-ID | server-ID | password | counter)
pwd-value = KDF(pwd-seed, "EAP-pwd Hunting And Pecking", len(p))
pwe = pwd-value ^ ((p-1)/r) mod p
found = 1
counter = counter + 1
MK = H(ks | Confirm_P | Confirm_S)

MK = H(kp | Confirm_P | Confirm_S)


MK = H(ks | Confirm_P | Confirm_S)

MK = H(kp | Confirm_P | Confirm_S)


Method-ID = H(Ciphersuite | Scalar_P | Scalar_S)

Session-ID = Type-Code | Method-ID

PWE = q * G, for an ECC group

pwe = g^q mod p, for an FFC group

KS = (Scalar_P * q + p_mask) * s_rand * G

