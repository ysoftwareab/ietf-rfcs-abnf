labeledIKM = concat("RFCXXXX ", label, IKM)
labeledInfo = concat(encode_big_endian(L, 2),
                           "RFCXXXX ", label, info)
prk = LabeledExtract(zero(Nh), "dh", dh)
dh = DH(skE, pkR)
enc = Marshal(pkE)

pkRm = Marshal(pkR)
kemContext = concat(enc, pkRm)

zz = ExtractAndExpand(dh, kemContext)
pkE = Unmarshal(enc)
dh = DH(skR, pkE)

pkRm = Marshal(pk(skR))
kemContext = concat(enc, pkRm)

zz = ExtractAndExpand(dh, kemContext)
dh = concat(DH(skE, pkR), DH(skS, pkR))
enc = Marshal(pkE)

pkRm = Marshal(pkR)
pkSm = Marshal(pk(skS))
kemContext = concat(enc, pkRm, pkSm)

zz = ExtractAndExpand(dh, kemContext)
pkE = Unmarshal(enc)
dh = concat(DH(skR, pkE), DH(skR, pkS))

pkRm = Marshal(pk(skR))
pkSm = Marshal(pkS)
kemContext = concat(enc, pkRm, pkSm)

zz = ExtractAndExpand(dh, kemContext)
default_pkSm = zero(Npk)
default_psk = zero(Nh)
default_pskID = zero(0)

got_psk = (psk != default_psk and pskID != default_pskID)
no_psk = (psk == default_psk and pskID == default_pskID)
got_pkSm = (pkSm != default_pkSm)
no_pkSm = (pkSm == default_pkSm)

ciphersuite = concat(encode_big_endian(kem_id, 2),
                          encode_big_endian(kdf_id, 2),
                          encode_big_endian(aead_id, 2))
pskID_hash = LabeledExtract(zero(Nh), "pskID_hash", pskID)
info_hash = LabeledExtract(zero(Nh), "info", info)
context = concat(ciphersuite, mode, pskID_hash, info_hash)

psk = LabeledExtract(zero(Nh), "psk_hash", psk)

secret = LabeledExtract(psk, "zz", zz)
key = LabeledExpand(secret, "key", context, Nk)
nonce = LabeledExpand(secret, "nonce", context, Nn)
exporter_secret = LabeledExpand(secret, "exp", context, Nh)

zz = Decap(enc, skR)
zz = Decap(enc, skR)
zz = AuthDecap(enc, skR, pkS)
zz = AuthDecap(enc, skR, pkS)
encSeq = encode_big_endian(seq, Nn)
ct = Seal(self.key, self.Nonce(self.seq), aad, pt)
pt = Open(self.key, self.Nonce(self.seq), aad, ct)
ct = ctx.Seal(aad, pt)
ctx = Setup<MODE>R(enc, skR, info, ...)
ct = ctx.Seal(aad, pt)
ctx = SetupAuthPSKR(enc, skR, info, psk, pskID, pkS)
