






INTERNET DRAFT                                         Joel N. Weber II
                                                          June 20, 2003
                                              Expires December 20, 2003

               Secure Shell ``none'' Public Key Algorithm
                  draft-weber-secsh-pkalg-none-00.txt

   This document is an Internet-Draft and is subject to all the
   provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/1id-abstracts.html

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html

   The distribution of this memo is unlimited.  It is filed as draft-
   weber-secsh-pkalg-none-00.txt, and expires 20 December 2003.  Please
   send comments to the author or to ietf-ssh@netbsd.org


ABSTRACT

   This document describes the ``none'' public key encryption algorithm
   for the Secure Shell protocol, which is useful for rekeying when the
   server has no keys to support for non-GSSAPI key exchange and when
   GSSAPI credentials are expired, or for use in embedded systems where
   there is a desire to minimize the overhead of rekeying to prevent
   sequence number rollover.

INTRODUCTION

   The mechanisms currently defined for key exchange in the Secure Shell
   protocol all have the property of requiring host key verification.

   This is valuable at the begining of an ssh session, but key exchange
   is also used to rekey in the middle of a session to prevent problems
   with sequence number rollover.  Given that [SECSH] recommends



Weber          Secure Shell ``none'' Public Key Algorithm        [Page 1]






draft-weber-secsh-pkalg-none-00.txt                         June 20 2003


   rekeying based upon the need to prevent sequence number rollover, and
   does not describe any other expected threats, it may be reasonable to
   assume that PFS within a session is of limited importance.

   [SECSHGSS] defines a family of key exchange methods which can be used
   to do key exchange in the Secure Shell protocol using GSSAPI.  Some
   GSSAPI mechanisms, such as Kerberos 5, use credentials which expire,
   and will fail if the credentials expire.  The convention used is
   often to allow connections to remain active indefinitely as long as
   the credentials were valid at the time the connection was initiated.
   It is possible for a host which uses a GSSAPI mechanism to not have a
   host key which is usable with the diffie-hellman-group1-sha1 key
   exchange method.  In such a case, one may want to be able to rekey
   the session without having any host key available.

   There is also some concern about rekeying potentially being
   computationally intensive for some embedded devices, and removing the
   need to make a public key signature may be worthwhile.

   This document defines the use of the ``none'' host key algorithm with
   the diffie-hellman-group1-sha1 and similar key exchange algorithms
   that support the same set of host key algorithms.

GENERATING AND VERIFYING SIGNATURES

   When using the ``none'' algorithm, the server public key data and
   signature data sent from the server to the client is zero length, and
   the client verifies these things by ensuring that they are zero
   length.

APPLICABILITY

   The ``none'' algorithm MUST NOT be used for initial key exchange.  It
   MAY be used when rekeying.

SECURITY CONSIDERATIONS

   When using ``none'' for rekeying, an attacker who has compromised the
   symetric encryption keys can perform a man in the middle attack
   against the key exchange, in which the attacker does key exchange
   with the client, and does key exchange with the server, rather than
   allowing the client to do key exchange with the server.  If an
   algorithm other than ``none'' is used, the client will notice that
   such an attack has happened.  However, such an attack is believed to
   be essentially impossible to carry out, due to the use of strong
   symmetric encryption algorithms.

AUTHOR'S ADDRESS



Weber          Secure Shell ``none'' Public Key Algorithm        [Page 2]






draft-weber-secsh-pkalg-none-00.txt                         June 20 2003


   Joel N. Weber II
   185 Lowell St #2
   Somerville MA 02144-2629
   Email: weber@joelweber.com

NORMATIVE REFERENCES

   [SECSH] RFC-Editor: To be replaced by RFC number for draft-ietf-
   secsh-architecture

   [RFC2026] S. Bradner, RFC2026, BCP 9:  "The Internet Standard Process
   - Revision 3," October 1996, Obsoletes - RFC 1602, Status: Best
   Current Practice.

   [RFC2119] S. Bradner, RFC 2119, BCP 14: "Key words for use in RFCs to
   Indicate Requirement Levels", March 1997.

INFORMATIVE REFERENCES

   [SECSHGSS] RFC-Editor: To be replaced by RFC number for draft-ietf-
   secsh-gsskeyex

IPR NOTICES

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights.  Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11.  Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard.  Please address the information to the IETF Executive
   Director.

COPYRIGHT NOTICE

   Copyright (C) The Internet Society 2003. All Rights Reserved.




Weber          Secure Shell ``none'' Public Key Algorithm        [Page 3]






draft-weber-secsh-pkalg-none-00.txt                         June 20 2003


   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implmentation may be prepared, copied, published and
   distributed, in whole or in part, without restriction of any kind,
   provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.




























Weber          Secure Shell ``none'' Public Key Algorithm        [Page 4]



