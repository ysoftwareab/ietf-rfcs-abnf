reputon = "{" [ reputon-object
         *(value-separator reputon-object) ] "}"

reputon-object = "reputon" name-separator response-set

response-set = "{" reputon-element
         *(value-separator reputon-element) "}

reputon-element = rater-value / assertion-value / rated-value
                       / rating-value / conf-value / auth-value
                       / sample-value / gen-value / expire-value
                       / ext-value
         ; these can appear in any order, but MUST appear at most
         ; once each

rater-value = %x22 "rater" %x22 name-separator string

assertion-value = %x22 "assertion" %x22 name-separator string

rated-value = %x22 "rated" %x22 name-separator string

rating-value = %x22 "rating" %x22 name-separator number
         ; "number" MUST be between 0.0 and 1.0 inclusive

conf-value = %x22 "confidence" %x22 name-separator number
         ; "number" MUST be between 0.0 and 1.0 inclusive

auth-value = %x22 "rater-authenticity" %x22 name-separator number
         ; "number" MUST be between 0.0 and 1.0 inclusive

sample-value = %x22 "sample-size" %x22 name-separator int
         ; "int" MUST NOT be negative

gen-value = %x22 "generated" %x22 name-separator int
         ; "int" MUST NOT be negative

expire-value = %x22 "expires" %x22 name-separator int
         ; "int" MUST NOT be negative

ext-value = member
         ; specific syntax is specified in specific application
         ; registrations

