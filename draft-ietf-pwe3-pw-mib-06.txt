Internet Draft                                       David Zelig, Ed.
Expires: February 2006                             Corrigent Systems 
                                                                    
                                                Thomas D. Nadeau, Ed. 
                                                 Cisco Systems, Inc. 
                                                                     
                                                           July 2005 
 
 
           Pseudo Wire (PW) Management Information Base 
                  draft-ietf-pwe3-pw-mib-06.txt 
 

Status of this Memo

   By submitting this Internet-Draft, each author represents that
   any applicable patent or other IPR claims of which he or she is
   aware have been or will be disclosed, and any of which he or she
   becomes aware will be disclosed, in accordance with Section 6 of
   BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups. Note that other
   groups may also distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/1id-abstracts.html

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.



Abstract 
     
  This memo defines an experimental portion of the Management 
  Information Base for use with network management protocols in 
  the Internet community.  In particular, it describes managed 
  objects for modeling of Pseudo Wire Edge-to-Edge services 
  carried over a general Packet Switched Network.  


Table of Contents 
 
 
    Abstract.......................................................1 
 1  Introduction...................................................2 
 2  Terminology....................................................3 



Zelig & Nadeau, Ed.           Expires February 2006          [Page 1]

Internet Draft                PW-MPLS-STD-MIB               July 2005



 3  The Internet-Standard Management Framework.....................3 
 4   PWE3 MIB Modules Architecture ................................3 
 4.1  PW-STD-MIB Module Usage .....................................4 
 4.2  Relations to other PWE3 MIB modules .........................4
 5  Application of the Interface Group to the PW-ENET-STD-MIB......4 
 6  Example of the PW-STD-MIB Modules Usage........................5 
 7  PWE3 MIB Module Definitions....................................7 
 8  Security considerations.......................................52
 9   References...................................................54 
 9.1 Normative references.........................................54 
 9.2 Informative references.......................................56 
 10 Editors' Contact Information  ................................52
 11 Authors' Addresses............................................56 
 12 Intellectual Property Statement...............................57 
 13 Full Copyright Statement......................................56 
 14 IANA considerations...........................................54 
 14.1 IANA Considerations for PW-STD-MIB .........................54 
   
1.  Introduction 
     
  This memo defines a portion of the Management Information Base 
  (MIB) for use with network management protocols in the Internet 
  community. In particular, it defines a MIB module which can be
  used to manage pseudo wire (PW) services for transmission over 
  a packet Switched Network (PSN) [RFC3931][PWCNTRL]. This MIB
  module provides generic management of PWs which is common to 
  all types of PSN and PW services defined by the IETF PWE3 
  Working Group. 
      
  Comments should be made directly to the PWE3 mailing list at
  pwe3@ietf.org.
   
  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
  NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
  "OPTIONAL" in this document are to be interpreted as described in
  [RFC2119].
     
2. Terminology 
     
  This document adopts the definitions, acronyms and mechanisms
  described in [RFC3985]. Unless otherwise stated, the mechanisms of
  [RFC3985] apply and will not be re-described here.

     
3. The Internet-Standard Management Framework  
      
   For a detailed overview of the documents that describe the current
   Internet-Standard Management Framework, please refer to section 7 of
   RFC 3410 [RFC3410].



Zelig & Nadeau, Ed.           Expires February 2006          [Page 2]

Internet Draft                PW-MPLS-STD-MIB               July 2005




   Managed objects are accessed via a virtual information store, termed
   the Management Information Base or MIB.  MIB objects are generally
   accessed through the Simple Network Management Protocol (SNMP).
   Objects in the MIB are defined using the mechanisms defined in the
   Structure of Management Information (SMI).  This memo specifies a MIB
   module that is compliant to the SMIv2, which is described in STD 58,
   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580
   [RFC2580].    
     
4.  PWE3 MIB Modules Architecture 
     
    The MIB structure for defining a PW service is composed from three 
    types of MIB modules. 
     
    The first type is the PW MIB module, which configures general 
    parameters of the PW that are common to all types of emulated 
    services and PSN types. 
     
    The second type of modules is PSN type specific module. There is a 
    different module for each type of PSN. These modules associate the 
    PW with one or more "tunnels" that carry the service over the PSN. 
    These modules are defined in other documents.
     
    The third type of modules is service-specific module, which is 
    emulated signal type dependent. These modules are defined in other 
    documents. 
     
    [PWTC] defines some of the object types used in these modules. 
     
4.1  PW-STD-MIB Module Usage 
     
    An entry in the PW table (pwTable) MUST exist for all PW types 
    (ATM, FR, Ethernet, SONET, etc.). This table holds generic 
    parameters related to the PW creation and monitoring. 
     
    A conceptual row can be created in the pwTable by: 
     
    1) The operator creates a row in the PwTable when configuring 
    the node for a new service. This mode MUST be supported by the 
    agent, and MUST be used when creating a non-signaled PW (manually 
    assigned). 
     
    2) The agent when if a signaling message has been received from a 
    peer node for a combination of signaling identifications 
    parameters already unknown to the local node. This mode is 
    OPTIONAL. 
     
    3) The agent for PW created automatically due to some auto 



Zelig & Nadeau, Ed.           Expires February 2006          [Page 3]

Internet Draft                PW-MPLS-STD-MIB               July 2005



    discovery application, or based on configuration that is done 
    through non-SNMP applications. This mode is OPTIONAL. 
     
    - The agent creates the rows in the (locally supported) 
    performance tables and reverse mapping tables in PW MIB module. 
     
4.2.  Relations to other PWE3 MIB modules 
     
    - Based on the PSN type defined for the PW, rows are created in 
    PSN specific module and associated to the PW table by 
    the common pwindex. 
     
    - Based on the PW type defined for the PW, rows are created in 
    service-specific module and associated to 
    the PW table by the common pwindex. 
     
    - Unless all the necessary entries in the applicable tables have 
    been created and all the parameters have been consistently 

    configured in those tables, signaling cannot be performed from the 
    local node, and the pwOperStatus should report notPresent. 
     
5. Application of the Interface Group to the PW-ENET-STD-MIB 
     
    The PW itself is in general not an ifIndex as it's own, from agent 
    scalability reasons. In many cases the PW is associated via the 
    MIB tables to an ifIndex the VC is emulating. This ifIndex may 
    represent a physical entity - for example a PW emulating a SONET 
    path as in CEP: The PW itself is not an ifIndex, however the PW 
    MIB module associates the PW to the ifIndex of the path to be 
    emulated. In some cases, the PW will be associated to an ifIndex 
    representing a virtual interface.  An example is VPLS service 
    where the PW emulates a logical interface of a (logical) bridge. 
    The physical ports association to the VPLS service instance is 
    defined in non-PW MIBs in this case. 
     
    Exception to the above MAY exist in some services, where it is 
    convenient to manage the PW as an ifIndex in the ifTable. A 
    special ifType to represent a PW virtual interface (exact number 
    to be assigned by IANA) will be used in the ifTable in this case.  
     
    Note that the ifIndex that carry the PW toward/from the PSN is in 
    general not explicitly configured via PW MIB modules except in 
    rare cases. In most cases the PW is carried inside a PSN tunnel, 
    and the interfaces carrying the tunnel are specified in the 
    related MIBs that control the PSN tunnels. 
    
6. Example of the PW-STD-MIB Module Usage 
     



Zelig & Nadeau, Ed.           Expires February 2006          [Page 4]

Internet Draft                PW-MPLS-STD-MIB               July 2005



    In this section we provide an example of using the MIB objects 
    described in section 7 to set up a CEP PW over MPLS PSN. While 
    this example is not meant to illustrate every permutation of the 
    MIB, it is intended as an aid to understanding some of the key 
    concepts. It is meant to be read after going through the MIB 
    itself. 
    In this example a PW service for CEP is configured over an MPLS 
    PSN (MPLS-TE tunnel). It uses LDP as in [PWCNTRL] for service set-
    up. 
     
    In the PW MIB module: 
     
    In pwTable: 
    { 
       pwIndex               5, 
           
       pwType                cep, 
       pwOwner               pwIdFecSignaling, 
       pwPsnType             mpls, 
       pwSetUpPriority       0, -- Highest 
       pwHoldingPriority     0, -- Highest 
       pwInboundMode         loose, 
     
       pwPeerAddrType        ipv4, 
       pwPeerAddr            1.4.3.2, -- In this case equal to the  
                                        -- peer LDP entity IP addr 
       pwID                  10, 
       pwLocalGroupID        12, 
       .. 
     
       pwCwPreference       true,  --  Actually ignored for CEP 
       pwLocalIfMtu         0,      -- Do not send ifMtu parameter 
       pwLocalIfString      false,  -- Do not send interface string 
       pwCapabAdvert        0,      -- Does not support status  
                                      -- report to the peer. 
       pwRemoteGroupID      0xFFFF, -- Will be received by  
                                      -- signaling protocol 
       pwRemoteCwStatus     notKnownYet,  
       pwRemoteIfMtu        0, 
       pwRemoteIfString     "", 
       pwRemoteCapabilities notYetKnown,          
       ..    
       pwOutboundVcLabel    0xFFFF, -- Will be received by  
                                      -- signaling protocol 
       pwInboundVcLabel     0xFFFF, -- Will be set by signaling 
                                      -- protocol 
       pwName               "Example of CEP PW", 
       pwDescr              "", 
       .. 



Zelig & Nadeau, Ed.           Expires February 2006          [Page 5]

Internet Draft                PW-MPLS-STD-MIB               July 2005



     
       pwAdminStatus        up, 
       .. 
   }          
     
    For the operation in the service specific MIB module, see the 
    service specific MIB modules. 
     
7.  PWE3 MIB Module Definitions

 PW-STD-MIB DEFINITIONS ::= BEGIN 
    
   IMPORTS 
      NOTIFICATION-TYPE, MODULE-IDENTITY, OBJECT-TYPE, 
      Integer32, Unsigned32, Counter32, Counter64, TimeTicks 
         FROM SNMPv2-SMI                    -- [RFC2578]
    
      MODULE-COMPLIANCE, OBJECT-GROUP, NOTIFICATION-GROUP 
         FROM SNMPv2-CONF                   -- [RFC2580]
    
      TruthValue, RowStatus, StorageType, 
      TimeStamp 
         FROM SNMPv2-TC                     -- [RFC2579]
    
      SnmpAdminString 
         FROM SNMP-FRAMEWORK-MIB            -- [RFC3411]
        
      InterfaceIndexOrZero 
         FROM IF-MIB                        -- [RFC2863]
    
      InetAddressType, InetAddress 
         FROM INET-ADDRESS-MIB              -- [RFC4001]
    
      PerfCurrentCount, PerfIntervalCount 
         FROM PerfHist-TC-MIB               -- [RFC3593]
       
      HCPerfCurrentCount, HCPerfIntervalCount, HCPerfTimeElapsed, 
      HCPerfValidIntervals 
         FROM HC-PerfHist-TC-MIB            -- [RFC3705]

      PwIndexType, PwGroupID, PwIDType, PwOperStatusTC, PwTypeTC, 
      PwAttachmentIdentifierType, PwCwStatusTC, PwCapabilities,  
      PwStatus, PwFragSize, PwFragStatus, pwMIB 
         FROM PW-TC-STD-MIB                   
   ; 
    
   pwMIB MODULE-IDENTITY 
      LAST-UPDATED "200406021200Z"  -- 2 June 2004 12:00:00 GMT 
      ORGANIZATION "Pseudo Wire Edge to Edge Emulation (PWE3) Working 



Zelig & Nadeau, Ed.           Expires February 2006          [Page 6]

Internet Draft                PW-MPLS-STD-MIB               July 2005



                    Group" 
      CONTACT-INFO 
          " 
           David Zelig 
           E-mail: davidz@corrigent.com 
    
           Thomas D. Nadeau 
           Email:  tnadeau@cisco.com 
    
           The PWE3 Working Group (email distribution pwe3@ietf.org, 
           http://www.ietf.org/html.charters/pwe3-charter.html) 
           " 
    
      DESCRIPTION 
          "This MIB module contains managed object definitions for  
           Pseudo Wire operation as in [RFC3985][RFC3931][PWCNTRL].
           architecture', Martini, L., et al, 'Pseudowire Setup and  
           Maintenance using LDP', and Townsley, M., et al, 'Layer Two 
           Tunneling Protocol (Version 3)'. 
    
           This MIB module enables the use of any underlying packet  
           switched network (PSN). MIB nodules that will support 
           PW operations over specific PSN types are defined in  
           separate memos. 
    
           The indexes for this MIB module are also used to index the 
           PSN-specific tables and the PW-specific tables. The PW Type 
           dictates which PW-specific MIB module to use.  
     
           Copyright (C) The Internet Society (date).  This version 
           of this MIB module is part of RFC XXX;  see the RFC 
           itself for full legal notices. 
      -- RFC Ed.: replace XXX with actual RFC number & remove this note 
           " 
       
      -- Revision history. 
    
      REVISION 
          "200406021200Z"  -- 2 June 2004 12:00:00 GMT 
      DESCRIPTION 
          " published as draft-ietf-pw-mib-05. Changes from previous  
            drafts: 
            - FCS retention includes FCS size mismatch error. 
            - Allow configuration of peer address when signaling  
              protocol is not in use. 
            - Adding DEFVAL to PwFragSize. 
          " 
    
      REVISION 



Zelig & Nadeau, Ed.           Expires February 2006          [Page 7]

Internet Draft                PW-MPLS-STD-MIB               July 2005



          "200402031200Z"  -- 3 February 2004 12:00:00 GMT 
      DESCRIPTION 
          " published as draft-ietf-pw-mib-04. Changes from previous  
            draft: 
            - Adding an option for PW stitching - pwAttachedPwIndex. 
            - Removing unnecessary index from pwPeerMappingTable. 
            - Adding 32 bit counter support across performance tables. 
            - Changing pwIndexMappingVcIndex to read-create in order 
              to enable an option for EMS control on pwIndex. 
            - Add optional mapping of a pwIndex to an ifIndex. 
            - remove RowStatus from mapping table. 
            - Change time elapsed items to HCPerfTimeElapsed TC 
            - Change current and interval counters to their respective 
              TC from existing TC modules. 
            - Add disable/enable control for pwDeletedNotification. 
            - Change pwRemoteCwStatus to pwCwStatus, and it now 
              represent both the signaling status whether CW is to be 
              present or not.  
         " 
    
      REVISION 
          "200312101200Z"  -- 10 December 2003 12:00:00 EST 
      DESCRIPTION 
          " re-published as draft-ietf-pw-mib-03. Changes from 
   previous  
            draft: 
            - Changing textual convention back to TruthValue where 
              required for correct compilation. 
            - Editing description clauses. 
            - Adapting main description clause to MIB boilerplate. 
            - Adapt MIB names to STD-MIB naming convention. 
            - Add pwRemoteStatusCapable. 
            - Add PW delete notification. 
            - Add pwLastChanged. 
            - Clarify usage of pwIndexMappingTable. 
           " 
       
      REVISION 
          "200307211200Z"  -- 21 July 2003 12:00:00 EST 
      DESCRIPTION 
          " published as draft-ietf-pw-mib-02. Changes from previous  
            draft: 
            1) Aligned with draft-ietf-pwe3-control-protocol-02.txt 
            2) Add support for Generalized ID FEC Element option. 
            3) Add support for fragmentation status.  
            3) Add notifications and notification control. 
            4) Remove control word to service specific MIB modules. 
           "          
    



Zelig & Nadeau, Ed.           Expires February 2006          [Page 8]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      REVISION 
          "200205261200Z"  -- 26 May 2002 12:00:00 EST 
      DESCRIPTION 
          "Moved to draft-ietf-00 status. Changes from previous draft: 
           1) Change name of pwPriority to pwSetUpPriority and  
              added pwHoldingPriority. 
           2) Add pwIdMappingTable and pwPeersMappingTable to help  
              ordered query of the MIB tables for EMS applications. 
           3) Clarification to work in progress objects. 
           4) Editorial and typos in descriptions. 
           5) Added pwPerfTotalDiscontinuityTime and  
              pwPerfIntervalTimeElapsed.  
           6) Remove 32 bit counters. 
          " 
      REVISION 
          "200201301200Z"  -- 30 January 2002 12:00:00 EST 
      DESCRIPTION 
          " Changes from -01 draft: 
            1) Inbound and outbound clarification and name changes. 
            2) Removing pwPeerIpv4Addr and pwPeerIpv6Addr,   
               replacing them with pwPeerAddr and adding type for  
               address type selection. 
            3) Adding type for VC OperStatus. 
            4) Adding pwTimeElapsed and pwValidIntervals. 
             
          " 
      REVISION 
          "200111071200Z"  -- 7 November 2001 12:00:00 EST 
      DESCRIPTION 
         "Changes from -00 draft: 
         1) Remove VcInstance from tables indexes in order to simplify 
            the MIB. 
         2) Removing APS 1+1 table. 
         3) Changing hdlcCisco to hdlc in pwType. 
         4) Add description of VC label at pending PW signaling stage. 
         5) Add interval valid object in interval performance tables. 
         6) Remove VC APS notification. 
         7) Change 'conservative'/'liberal' to 'strict'/'loose'. 
         8) Add objects for interface MTU, use of control word, 
            interface string. 
         9) Ordering of objects based on functionality. 
         10) Update operation of pwOperStatus.  
         " 
    
      REVISION 
          "200107111200Z"  -- 11 July 2001 12:00:00 EST 
      DESCRIPTION 
         "draft-00 version" 
    



Zelig & Nadeau, Ed.           Expires February 2006          [Page 9]

Internet Draft                PW-MPLS-STD-MIB               July 2005



         ::= { pwMIB 799 } -- RFC Editor: To be assigned by IANA  
                              -- the value 2 is requested for this 
                              -- specific Module.  Please replace XXX
                              -- with the assigned value.
    
   -- Top-level components of this MIB. 
    
   -- Notifications 
   pwNotifications OBJECT IDENTIFIER  
                                 ::= { pwMIB 0 } 
   -- Tables, Scalars 
   pwObjects       OBJECT IDENTIFIER 
                                 ::= { pwMIB 1 } 
   -- Conformance 
   pwConformance   OBJECT IDENTIFIER  
                                 ::= { pwMIB 2 } 
    
   -- PW Virtual Connection (VC) Table 
    
   pwIndexNext OBJECT-TYPE 
      SYNTAX            Unsigned32 
      MAX-ACCESS        read-only 
      STATUS            current 
      DESCRIPTION 
          "This object contains an appropriate value to be used 
           for pwIndex when creating entries in the 
           pwTable. The value 0 indicates that no 
           unassigned entries are available.  To obtain the 
           value of pwIndex for a new entry in the 
           pwTable, the manager issues a management 
           protocol retrieval operation to obtain the current 
           value of pwIndex.  After each retrieval 
           operation, the agent should modify the value to 
           reflect the next unassigned index.  After a manager 
           retrieves a value the agent will determine through 
           its local policy when this index value will be made 
           available for reuse." 
      ::= { pwObjects 1 } 
    
    
   pwTable   OBJECT-TYPE 
      SYNTAX        SEQUENCE OF PwEntry 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
          "This table specifies information for configuring and 
           status monitoring which are common to all service types 
           and PSN types." 
    



Zelig & Nadeau, Ed.          Expires February 2006          [Page 10]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      ::= { pwObjects 2 } 
    
   pwEntry   OBJECT-TYPE 
      SYNTAX        PwEntry 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "A row in this table represents a pseudo wire (PW) virtual 
            connection (VC) across a packet network. It is indexed by 
            pwIndex, which uniquely identifying a singular  
            connection.  
            A row is created by the operator or by the agent if the PW 
            is created by non-SNMP application or due to autodiscovery  
            process. 
            None of the read-create objects values can be changed  
            when pwRowStatus is in the active(1) state. Changes are 
            allowed when the pwRowStatus is in notInService(2) or 
            notReady(3) states only.  
            If the operator need to change one of the values for an 
            active row (for example in order to fix a mismatch in 
            configuration between the local node and the peer), the 
            pwRowStatus should be first changed to notInService(2), 
            the objects may be changed now, and later to active(1)  
            in order to re-initiate the signaling process with the 
            new values in effect. 
            " 
      INDEX  { pwIndex } 
         ::= { pwTable 1 } 
    
   PwEntry ::= SEQUENCE { 
         pwIndex               PwIndexType, 
         pwType                PwTypeTC, 
         pwOwner               INTEGER, 
         pwPsnType             INTEGER, 
         pwSetUpPriority       Integer32, 
         pwHoldingPriority     Integer32, 
         pwPeerAddrType        InetAddressType, 
         pwPeerAddr            InetAddress, 
         pwAttachedPwIndex     PwIndexType, 
         pwIfIndex             InterfaceIndexOrZero, 
    
         pwID                  PwIDType, 
         pwLocalGroupID        PwGroupID, 
         pwGroupAttachmentID   PwAttachmentIdentifierType, 
         pwLocalAttachmentID   PwAttachmentIdentifierType, 
         pwPeerAttachmentID    PwAttachmentIdentifierType, 
    
         pwCwPreference        TruthValue,   
         pwLocalIfMtu          Unsigned32, 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 11]

Internet Draft                PW-MPLS-STD-MIB               July 2005



         pwLocalIfString       TruthValue,  
         pwLocalCapabAdvert    PwCapabilities, 
         pwRemoteGroupID       PwGroupID, 
         pwCwStatus            PwCwStatusTC,     
         pwRemoteIfMtu         Unsigned32, 
         pwRemoteIfString      SnmpAdminString, 
         pwRemoteCapabilities  PwCapabilities, 
    
         pwFragmentCfgSize     PwFragSize, 
         pwRmtFragCapability   PwFragStatus, 
         pwFcsRetentioncfg     INTEGER, 
         pwFcsRetentionStatus  BITS, 
    
         pwOutboundVcLabel     Unsigned32, 
         pwInboundVcLabel      Unsigned32, 
    
         pwName                SnmpAdminString, 
         pwDescr               SnmpAdminString, 
         pwCreateTime          TimeStamp, 
         pwUpTime              TimeTicks, 
         pwLastChange          TimeTicks, 
         pwAdminStatus         INTEGER, 
         pwOperStatus          PwOperStatusTC, 
         pwLocalStatus         PwStatus, 
         pwRemoteStatusCapable INTEGER, 
         pwRemoteStatus        PwStatus, 
    
         pwTimeElapsed         HCPerfTimeElapsed, 
         pwValidIntervals      HCPerfValidIntervals, 
         pwRowStatus           RowStatus, 
         pwStorageType         StorageType 
      } 
    
   pwIndex OBJECT-TYPE 
      SYNTAX        PwIndexType 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
          "Index for the conceptual row identifying a PW within  
           this PW Emulation table." 
      ::= { pwEntry 1 } 
    
   pwType OBJECT-TYPE 
      SYNTAX        PwTypeTC 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "This value indicate the service to be carried over 
           this PW.  



Zelig & Nadeau, Ed.          Expires February 2006          [Page 12]

Internet Draft                PW-MPLS-STD-MIB               July 2005



          " 
      ::= { pwEntry 2 } 
    
   pwOwner OBJECT-TYPE  
      SYNTAX   INTEGER { 
             manual                (1),  
             pwIdFecSignaling      (2), -- PW signaling with PW ID FEC 
             genFecSignaling       (3), -- Generalized attachment FEC  
             l2tpControlProtocol   (4), 
             other                 (5) 
                       } 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
           "Set by the operator to indicate the protocol responsible  
            for establishing this PW. Value 'manual' is used in all 
            cases where no maintenance protocol (PW signaling) is used  
            to set-up the PW, i.e. require configuration of entries in 
            the PW tables including PW labels, etc. The value  
            'pwIdFecSignaling' is used in case of signaling with the  
            Pwid FEC element with LDP signaling, and  
            'genFecSignaling' is used of the generalized FEC with LDP  
            is used for signaling purposes. 
            The value 'l2tpControlProtocol' indicate the use of L2TP  
            control protocol.  
            Value 'other' is used for other types of signaling."  
      ::= { pwEntry 3 } 
    
    
   pwPsnType OBJECT-TYPE  
      SYNTAX   INTEGER { 
          mpls       (1),  
          l2tp       (2), 
          ip         (3), 
          mplsOverIp (4),  
          gre        (5), 
          other      (6) 
                       } 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
           "Set by the operator to indicate the PSN type on which this  
            PW will be carried. Based on this object, the relevant PSN  
            table entries are created in the in the PSN specific MIB  
            modules. For example, if mpls(1) is defined, the agent  
            create an entry in pwMplsTable, which further define the  
            MPLS PSN configuration. 
           " 
      ::= { pwEntry 4 } 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 13]

Internet Draft                PW-MPLS-STD-MIB               July 2005



    
   pwSetUpPriority  OBJECT-TYPE 
      SYNTAX         Integer32 (0..7) 
      MAX-ACCESS     read-create 
      STATUS         current 
      DESCRIPTION 
           "This object define the relative set-up priority of the PW   
            in a lowest-to-highest fashion, where 0 is the highest  
            priority. PWs with the same priority are treated with 
            equal priority. Dropped VC will be set 'dormant' (as 
            indicated in pwOperStatus). 
            This value is significant if there are competing resources 
            between VCs and the implementation support this feature. 
            If not supported or not relevant, the value of zero MUST 
            be used."  
      DEFVAL 
          { 0 } 
      ::= { pwEntry 5 } 
    
   pwHoldingPriority  OBJECT-TYPE 
      SYNTAX         Integer32 (0..7) 
      MAX-ACCESS     read-create 
      STATUS         current 
      DESCRIPTION 
           "This object define the relative holding priority of the PW   
            in a lowest-to-highest fashion, where 0 is the highest  
            priority. PWs with the same priority are treated with 
            equal priority. Dropped VC will be set 'dormant' (as 
            indicated in pwOperStatus). 
            This value is significant if there are competing resources 
            between PWs and the implementation support this feature. 
            If not supported or not relevant, the value of zero MUST 
            be used."  
      DEFVAL 
          { 0 } 
      ::= { pwEntry 6 } 
    
    
   pwPeerAddrType OBJECT-TYPE 
      SYNTAX        InetAddressType 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
           "Denotes the address type of the peer node. It should be  
            set to 'unknown' if PE/PW maintenance protocol is not used 
            and the address is unknown." 
      DEFVAL        { ipv4 } 
      ::= { pwEntry 8 } 
    



Zelig & Nadeau, Ed.          Expires February 2006          [Page 14]

Internet Draft                PW-MPLS-STD-MIB               July 2005



   pwPeerAddr OBJECT-TYPE 
      SYNTAX        InetAddress 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
           "This object contain the value of the peer node address 
            of the PW/PE maintenance protocol entity. This object  
            SHOULD contain a value of all zeroes if not applicable  
            (pwPeerAddrType is 'unknown')." 
      ::= { pwEntry 9 } 
    
   pwAttachedPwIndex OBJECT-TYPE 
      SYNTAX        PwIndexType 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "If the PW is attached to another PW instead of a local  
           native service, this item indicates the pwIndex of the 
           attached PW, and the PW specific entry in the service MIB 
           module MUST not be created. Otherwise, this object MUST 
           be set to zero." 
      DEFVAL { 0 } 
             ::= { pwEntry 10 } 
    
   pwIfIndex OBJECT-TYPE 
      SYNTAX        InterfaceIndexOrZero 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "If the PW is represented in the ifTable as an ifIndex, this 
           item holds the ifIndex of the PW in the ifTable, otherwise  
           it MUST be set to zero." 
      DEFVAL { 0 } 
      ::= { pwEntry 11 } 
    
   pwID OBJECT-TYPE 
      SYNTAX        PwIDType 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "Used in the outgoing PW ID field within the 'Virtual 
           Circuit FEC Element'. 
           Applicable if pwOwner equal 'pwIdFecSignaling' or  
           'l2tpControlProtocol', should be set to zero otherwise." 
      REFERENCE 
          "Martini, et al, <draft-ietf-pwe3-control-protocol>." 
             ::= { pwEntry 12 } 
    
   pwLocalGroupID OBJECT-TYPE 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 15]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      SYNTAX        PwGroupID 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "Used in the Group ID field sent to the peer PWES  
           within the maintenance protocol used for PW setup. 
           Applicable if pwOwner equal 'pwIdFecSignaling' or  
           'l2tpControlProtocol', should be set to zero otherwise." 
      REFERENCE 
          "Martini, et al, <draft-ietf-pwe3-control-protocol>." 
      ::= { pwEntry 13 } 
    
   pwGroupAttachmentID OBJECT-TYPE 
      SYNTAX        PwAttachmentIdentifierType 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "This object is an octet string representing the attachment 
           group identifier (AGI) this PW belongs too, which typically  
           identifies the VPN ID. 
           Applicable if pwOwner equal 'genFecSignaling'. Should be  
           set to NULL (zero length) if not applicable." 
       REFERENCE 
          "Martini, et al, <draft-ietf-pwe3-control-protocol>." 
      ::= { pwEntry 14 } 
       
   pwLocalAttachmentID   OBJECT-TYPE 
      SYNTAX        PwAttachmentIdentifierType 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "This object is an octet string representing the local  
           forwarder attachment individual identifier (AII) to be  
           used by this PW. It is used as the SAII for outgoing  
           signaling messages and the TAII in the incoming messages  
           from the peer. 

           Applicable if pwOwner equal 'genFecSignaling'. Should be  
           set to NULL (zero length) if not applicable. " 
       REFERENCE 
          "Martini, et al, <draft-ietf-pwe3-control-protocol>." 
      ::= { pwEntry 15 } 
    
   pwPeerAttachmentID   OBJECT-TYPE 
      SYNTAX        PwAttachmentIdentifierType 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "This object is an octet string representing the peer  



Zelig & Nadeau, Ed.          Expires February 2006          [Page 16]

Internet Draft                PW-MPLS-STD-MIB               July 2005



           forwarder attachment individual identifier (AII) to be  
           used by this PW. It is used as the TAII for outgoing  
           signaling messages and the SAII in the incoming messages  
           from the peer. 
           Applicable if pwOwner equal 'genFecSignaling'. Should be  
           set to NULL (zero length) if not applicable. " 
       REFERENCE 
          "Martini, et al, <draft-ietf-pwe3-control-protocol>." 
      ::= { pwEntry 16 } 
    
   pwCwPreference OBJECT-TYPE 
      SYNTAX        TruthValue 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "Defines if the control word will be sent with each packet  
           by the local node. Some PW types mandate the use of  
           control word, and is such cases the value configured has  
           no effect on the existence of the control word." 
      REFERENCE 
          "Martini, et al, <draft-ietf-pwe3-control-protocol>." 
      DEFVAL 
          { false } 
      ::= { pwEntry 17 } 
    
   pwLocalIfMtu OBJECT-TYPE 
      SYNTAX        Unsigned32 (0..65535) 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "If not equal zero, the optional IfMtu object in the  
           signaling protocol will be sent with this value,  
           representing the locally supported MTU size over the  
           interface (or the virtual interface) associated with the  
           PW." 
      REFERENCE 
          "Martini, et al, <draft-ietf-pwe3-control-protocol>." 
      DEFVAL { 0 } 
      ::= { pwEntry 18 } 
    
   pwLocalIfString OBJECT-TYPE 
      SYNTAX        TruthValue 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "Each PW is associated to an interface (or a virtual  
           interface) in the ifTable of the node as part of the 
           service configuration. This object defines if the  
           maintenance protocol will send the interface's name as 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 17]

Internet Draft                PW-MPLS-STD-MIB               July 2005



           appears on the ifTable in the name object as part of the 
           maintenance protocol. If set to false, the optional  
           element will not be sent." 
      REFERENCE 
          "Martini, et al, <draft-ietf-pwe3-control-protocol>." 
      DEFVAL 
          { false } 
      ::= { pwEntry 19 } 
    
   pwLocalCapabAdvert OBJECT-TYPE 
      SYNTAX        PwCapabilities 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "Indicates the capabilities to be advertised by this node 
           to the peer." 
      REFERENCE 
          "Martini, et al, <draft-ietf-pwe3-control-protocol>." 
      ::= { pwEntry 20 } 
    
   pwRemoteGroupID OBJECT-TYPE 
      SYNTAX        PwGroupID 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "Obtained from the Group ID field as received via the  
           signaling protocol used for VC setup, zero if not used.  
           Value of 0xFFFF shall be used if the object is yet to be  
           defined by the PW maintenance protocol." 
      REFERENCE 
          "Martini, et al, <draft-ietf-pwe3-control-protocol>." 
      ::= { pwEntry 21 } 
    
   pwCwStatus OBJECT-TYPE 
      SYNTAX        PwCwStatusTC 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "If signaling is used for PW establishment, this object  
           indicates the status of the control word negotiation,  
           and in both signaling or manual configuration indicates  
           if CW is to be present or not for this PW. 
          " 
      REFERENCE 
          "Martini, et al, <draft-ietf-pwe3-control-protocol>. 
          " 
      ::= { pwEntry 22 } 
    
   pwRemoteIfMtu OBJECT-TYPE 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 18]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      SYNTAX        Unsigned32  
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "The remote interface MTU as (optionally) received from the 
           remote node via the maintenance protocol. Should be zero  
           if this parameter is not available or not used." 
      REFERENCE 
          "Martini, et al, <draft-ietf-pwe3-control-protocol>." 
      ::= { pwEntry 23 } 
    
   pwRemoteIfString OBJECT-TYPE 
      SYNTAX        SnmpAdminString (SIZE (0..80)) 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "Indicates the interface description string as received by 
           the maintenance protocol, MUST be NULL string if not  
           applicable or not known yet." 
      REFERENCE 
          "Martini, et al, <draft-ietf-pwe3-control-protocol>." 
      ::= { pwEntry 24 } 
    
   pwRemoteCapabilities OBJECT-TYPE 
      SYNTAX        PwCapabilities 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "Indicates the capabilities as advertised by the peer." 
      REFERENCE 
          "Martini, et al, <draft-ietf-pwe3-control-protocol>." 
      ::= { pwEntry 25 } 
    
   pwFragmentCfgSize OBJECT-TYPE 
      SYNTAX        PwFragSize 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "If set to value other than zero, indicates that  
           fragmentation is desired for this PW." 
      REFERENCE 
          "Malis A., Townsley M., 'PWE3 Fragmentation and Reassembly'  
           - work in progress" 
      DEFVAL 
          { 0 } -- I.e. fragmentation not desired 
      ::= { pwEntry 26 } 
    
   pwRmtFragCapability OBJECT-TYPE 
      SYNTAX        PwFragStatus 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 19]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "The status of the fragmentation based on the local  
           configuration and the peer capabilities as advertised by  
           the peer if control protocol is used." 
      REFERENCE 
          "Malis A., Townsley M., 'PWE3 Fragmentation and Reassembly'  
           - work in progress" 
      ::= { pwEntry 27 } 
    
   pwFcsRetentioncfg OBJECT-TYPE 
      SYNTAX        INTEGER { 
                    fcsRetentionDisable  (1), 
                    fcsRetentionEnable   (2) 
      } 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "The local configuration of FCS retention for this PW. FCS  
           retention can be configured for PW types HDLC, PPP and  
           Ethernet only. If the agent does not support FCS retention 
           the error should be configured in pwFcsRetentionStatus." 
      REFERENCE 
          "Malis A., et al.,  'PWE3 Frame Check Sequence Retention'  
           - work in progress" 
      DEFVAL { fcsRetentionDisable }  
     ::= { pwEntry 28 } 
    
   pwFcsRetentionStatus OBJECT-TYPE 
      SYNTAX   BITS { 
               remoteIndicationUnknown     (0), 
               remoteRequestFcsRetention   (1), 
               fcsRetentionEnabled         (2), 
               fcsRetentionDisabled        (3), 
               localFcsRetentionCfgErr     (4), 
               fcsRetentionFcsSizeMismatch (5) 
               }       
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
         "The status of the FCS retention negotiation process based on 
          local configuration and the remote advertisement. 
          remoteIndicationUnknown - set if a FEC has not been received 
          from the remote. 
          remoteRequestFcsRetention - indicates that the peer has  
          requested for FCS retention. FCS retention will be used if  
          the local node is capable and configured to use it for this 
          PW. 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 20]

Internet Draft                PW-MPLS-STD-MIB               July 2005



          fcsRetentionEnabled - FCS retention is enabled (both peers 
          were configured for FCS retention for signaled PW, or the  
          local node is configured and capable for FCS retention. 
          fcsRetentionDisabled - FCS retention is disabled (not  
          configured locally or not advertised by the peer). 
          localFcsRetentionCfgErr - Set if the local node has been 
          configured for FCS retention but is not capable to support 
          it. 
          fcsRetentionFcsSizeMismatch - Set if there is a FCS size  
          mismatch between the loacl and the peer node. 
         " 
      REFERENCE 
          "Malis A., et al.,  'PWE3 Frame Check Sequence Retention'  
           - work in progress" 
      ::= { pwEntry 29 } 
    
   pwOutboundVcLabel OBJECT-TYPE 
      SYNTAX        Unsigned32 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "The PW label used in the outbound direction (i.e. toward  
           the PSN). It may be set up manually if owner is 'manual'  
           or automatically otherwise. Examples: For MPLS PSN, it  
           represents the 20 bits of PW tag, for L2TP it represent  
           the 32 bits Session ID. 
           If the label is not yet known (signaling in process), the  
           object should return a value of 0xFFFF." 
     ::= { pwEntry 30 } 
    
   pwInboundVcLabel OBJECT-TYPE 
      SYNTAX        Unsigned32 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "The PW label used in the inbound direction (i.e. packets  
           received from the PSN. It may be set up manually if owner 
           is 'manual' or automatically otherwise.  
           Examples: For MPLS PSN, it represents the 20 bits of PW 
           tag, for L2TP it represent the 32 bits Session ID. 
           If the label is not yet known (signaling in process), the  
           object should return a value of 0xFFFF." 
      ::= { pwEntry 31 } 
    
   pwName  OBJECT-TYPE 
      SYNTAX        SnmpAdminString 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 21]

Internet Draft                PW-MPLS-STD-MIB               July 2005



          "The canonical name assigned to the PW." 
      ::= { pwEntry 32 } 
    
   pwDescr OBJECT-TYPE 
      SYNTAX        SnmpAdminString 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "A textual string containing information about the PW.  
           If there is no description this object contains a zero 
           length string." 
      ::= { pwEntry 33 } 
    
   pwCreateTime OBJECT-TYPE 
      SYNTAX        TimeStamp 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "System time when this PW was created." 
      ::= { pwEntry 34 } 
    
   pwUpTime  OBJECT-TYPE 
      SYNTAX        TimeTicks 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "Specifies the total time this PW operStatus has been  
           Up(1)." 
      ::= { pwEntry 35 } 
    
   pwLastChange OBJECT-TYPE 
      SYNTAX        TimeTicks 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
         "The value of sysUpTime at the time the PW entered 
          its current operational state.  If the current state was 
          entered prior to the last re-initialization of the local 
          network management subsystem, then this object contains a 
          zero value." 
      ::= { pwEntry 36 } 
    
   pwAdminStatus OBJECT-TYPE 
      SYNTAX   INTEGER { 
                   up(1),     -- ready to pass packets 
                   down(2), 
                   testing(3) -- in some test mode 
      } 




Zelig & Nadeau, Ed.          Expires February 2006          [Page 22]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "The desired operational status of this PW." 
      ::= { pwEntry 37 } 
    
   pwOperStatus OBJECT-TYPE 
      SYNTAX        PwOperStatusTC 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "This object indicates the operational status of the PW, it  
            does not reflect however the status of the CE bound  
            interface.  
            It is set to down only if pwNotForwarding,  
            psnFacingPwRxFault, or psnFacingPwTxFault indications are  
            set in pwLocalStatus or pwRemoteStatus.    
            It indicates 'lowerLayerDown' if the only reason for  
            not being in the 'up' state is either outer tunnel  
            or physical layer down of the network side is in the down  
            state. 
            All other states are declared base on the description in  
            the textual convention. 
            " 
      ::= { pwEntry 38 } 
    
   pwLocalStatus OBJECT-TYPE 
      SYNTAX        PwStatus 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "Indicates the status of the PW in the local node. 
            The various indications in this object should be  
            available independent of the ability of the local node to  
            advertise them or the remote node to accept these status 
            indications through the control protocol. 
           " 
      ::= { pwEntry 39 } 
    
   pwRemoteStatusCapable OBJECT-TYPE 
      SYNTAX        INTEGER { 
             notApplicable    (1), 
             notYetKnown      (2), 
             remoteCapable    (3), 
             remoteNotCapable (4)     
      } 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 23]

Internet Draft                PW-MPLS-STD-MIB               July 2005



           "Indicates the remote node capability to advertise the  
            PW status notification. 
            notAppicable should be reported for manually set PW, or  
            if the local node is not capable of sending the status  
            notification object. 
            notYetKnown should be reported if the signaling protocol  
            has not yet finished the process of capability  
            determination. 
            remoteCapable and remoteNotcapable should be reported  
            based on the initial signaling exchange that has  
            determined the remote node capability. 
          " 
      ::= { pwEntry 40 } 
    
   pwRemoteStatus OBJECT-TYPE 
      SYNTAX        PwStatus 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "Indicates the status of the PW as was advertised by the  
            remote. If the remote is not capable of advertising the  
            status object, or the local node is not able to accept  
            the status object through signaling, then the applicable  
            bit is 'pwNotForwarding' which is set if the remote has  
            sent label release or label withdraw for this PW. 
           " 
      ::= { pwEntry 41 } 
    
   pwTimeElapsed OBJECT-TYPE 
       SYNTAX  HCPerfTimeElapsed 
       MAX-ACCESS  read-only 
       STATUS  current 
       DESCRIPTION 
            "The number of seconds, including partial seconds, 
             that have elapsed since the beginning of the current 
             interval measurement period." 
       ::= { pwEntry 42 } 
    
   pwValidIntervals OBJECT-TYPE 
       SYNTAX  HCPerfValidIntervals 
       MAX-ACCESS  read-only 
       STATUS  current 
       DESCRIPTION 
          "The number of previous 15-minute intervals 
          for which data was collected." 
       ::= { pwEntry 43 } 
    
   pwRowStatus OBJECT-TYPE 
      SYNTAX        RowStatus 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 24]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "For creating, modifying, and deleting this row. None of the 
           read-create objects in the conceptual rows may be changed  
           when this object is in the active(1) state." 
       ::= { pwEntry 44 } 
    
   pwStorageType OBJECT-TYPE 
      SYNTAX        StorageType 
      MAX-ACCESS    read-create 
      STATUS        current 
      DESCRIPTION 
          "This variable indicates the storage type for this 
           object." 
       ::= { pwEntry 45 } 
    
   -- End of PW Virtual Connection Table 
    
   -- PW Performance Table. 
    
   pwPerfCurrentTable  OBJECT-TYPE 
      SYNTAX        SEQUENCE OF PwPerfCurrentEntry 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "This table provides per-PW performance information for  
            the current interval." 
      ::= { pwObjects 3 } 
    
   pwPerfCurrentEntry OBJECT-TYPE 
      SYNTAX        PwPerfCurrentEntry 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "An entry in this table is created by the agent for 
            every PW." 
      INDEX  { pwIndex } 
      ::= { pwPerfCurrentTable 1 } 
       
   PwPerfCurrentEntry ::= SEQUENCE { 
         pwPerfCurrentInHCPackets         HCPerfCurrentCount, 
         pwPerfCurrentInHCBytes           HCPerfCurrentCount, 
         pwPerfCurrentOutHCPackets        HCPerfCurrentCount, 
         pwPerfCurrentOutHCBytes          HCPerfCurrentCount, 
         pwPerfCurrentInPackets           PerfCurrentCount, 
         pwPerfCurrentInBytes             PerfCurrentCount, 
         pwPerfCurrentOutPackets          PerfCurrentCount, 
         pwPerfCurrentOutBytes            PerfCurrentCount 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 25]

Internet Draft                PW-MPLS-STD-MIB               July 2005



         } 
    
   pwPerfCurrentInHCPackets OBJECT-TYPE 
      SYNTAX        HCPerfCurrentCount  
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "High capacity counter for number of packets received by 
            the PW (from the PSN) in the current 15-minute interval.  
            This is the 64 bit version of pwPerfCurrentInPackets,  
            if pwPerfCurrentInHCPackets is supported according to  
            the rules spelled out in RFC2863." 
      ::= { pwPerfCurrentEntry 1 } 
                                  
   pwPerfCurrentInHCBytes OBJECT-TYPE 
      SYNTAX        HCPerfCurrentCount  
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "High capacity counter for number of bytes received by the  
            PW (from the PSN) in the current 15-minute interval.  
            This is the 64 bit version of pwPerfCurrentInBytes, if  
            pwPerfCurrentInHCBytes is supported according to the  
            rules spelled out in RFC2863." 
      ::= { pwPerfCurrentEntry 2 } 
    
   pwPerfCurrentOutHCPackets OBJECT-TYPE 
      SYNTAX        HCPerfCurrentCount 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "High capacity counter for number of packets forwarded by  
            the PW (to the PSN) in the current 15-minute interval. 
            This is the 64 bit version of pwPerfCurrentOutPackets,  
            if pwPerfCurrentOutHCPackets is supported according to  
            the rules spelled out in RFC2863." 
      ::= { pwPerfCurrentEntry 3 } 
    
   pwPerfCurrentOutHCBytes OBJECT-TYPE 
      SYNTAX        HCPerfCurrentCount 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "High capacity counter for number of bytes forwarded by  
            the PW (to the PSN) in the current 15-minute interval. 
            This is the 64 bit version of pwPerfCurrentOutBytes,  
            if pwPerfCurrentOutHCBytes is supported according to  
            the rules spelled out in RFC2863." 
      ::= { pwPerfCurrentEntry 4 } 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 26]

Internet Draft                PW-MPLS-STD-MIB               July 2005



    
   pwPerfCurrentInPackets OBJECT-TYPE 
      SYNTAX        PerfCurrentCount  
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "The counter for number of packets received by the PW (from 
            the PSN) in the current 15-minute interval.  
            This is the 32 bit version of pwPerfCurrentInHCPackets,  
            if pwPerfCurrentInHCPackets is supported according to  
            the rules spelled out in RFC2863." 
      ::= { pwPerfCurrentEntry 5 } 
                                  
   pwPerfCurrentInBytes OBJECT-TYPE 
      SYNTAX        PerfCurrentCount  
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "The counter for number of bytes received by the  
            PW (from the PSN) in the current 15-minute interval.  
            It MUST be equal to the least significant 32 bits of  
            pwPerfCurrentInHCBytes, if pwPerfCurrentInHCBytes is  
            supported according to the rules spelled out in RFC2863." 
      ::= { pwPerfCurrentEntry 6 } 
    
   pwPerfCurrentOutPackets OBJECT-TYPE 
      SYNTAX        PerfCurrentCount 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "The counter for number of packets forwarded by  
            the PW (to the PSN) in the current 15-minute interval. 
            It MUST be equal to the least significant 32 bits of  
            pwPerfCurrentOutHCPackets, if  
            pwPerfCurrentOutHCPackets is supported according to the 
            rules spelled out in RFC2863." 
      ::= { pwPerfCurrentEntry 7 } 
    
   pwPerfCurrentOutBytes OBJECT-TYPE 
      SYNTAX        PerfCurrentCount 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "The counter for number of bytes forwarded by  
            the PW (to the PSN) in the current 15-minute interval. 
            It MUST be equal to the least significant 32 bits of  
            pwPerfCurrentOutHCBytes, if pwPerfCurrentOutHCBytes is 
            supported according to the rules spelled out in RFC2863." 
      ::= { pwPerfCurrentEntry 8 } 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 27]

Internet Draft                PW-MPLS-STD-MIB               July 2005



    
   -- End of PW Perf current Table 
    
   -- PW Performance Interval Table. 
    
   pwPerfIntervalTable  OBJECT-TYPE 
      SYNTAX        SEQUENCE OF PwPerfIntervalEntry 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "This table provides per-PW performance information for  
            each interval." 
      ::= { pwObjects 4 } 
    
   pwPerfIntervalEntry OBJECT-TYPE 
      SYNTAX        PwPerfIntervalEntry 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "An entry in this table is created agent for every PW." 
      INDEX  { pwIndex, pwPerfIntervalNumber } 
      ::= { pwPerfIntervalTable 1 } 
       
   PwPerfIntervalEntry ::= SEQUENCE { 
         pwPerfIntervalNumber               Integer32, 
         pwPerfIntervalValidData            TruthValue, 
         pwPerfIntervalTimeElapsed          HCPerfTimeElapsed, 
         pwPerfIntervalInHCPackets          HCPerfIntervalCount, 
         pwPerfIntervalInHCBytes            HCPerfIntervalCount, 
         pwPerfIntervalOutHCPackets         HCPerfIntervalCount, 
         pwPerfIntervalOutHCBytes           HCPerfIntervalCount, 
         pwPerfIntervalInPackets            PerfIntervalCount, 
         pwPerfIntervalInBytes              PerfIntervalCount, 
         pwPerfIntervalOutPackets           PerfIntervalCount, 
         pwPerfIntervalOutBytes             PerfIntervalCount 
                           } 
    
   pwPerfIntervalNumber OBJECT-TYPE 
       SYNTAX  Integer32 (1..96) 
       MAX-ACCESS  not-accessible 
       STATUS  current 
       DESCRIPTION 
           "A number N, between 1 and 96, which identifies the 
            interval for which the set of statistics is available. 
            The interval identified by 1 is the most recently 
            completed 15 minute interval, and the interval identified 
            by N is the interval immediately preceding the one 
            identified by N-1. 
            The minimum range of N is 1 through 4. The default range 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 28]

Internet Draft                PW-MPLS-STD-MIB               July 2005



            is 1 to 32. The maximum range of N is 1 through 96. " 
      REFERENCE 
          "Tesink, K. 'Definitions of Managed Objects for the 
           SONET/SDH Interface Type', RFC 2558" 
      ::= { pwPerfIntervalEntry 1 } 
    
   pwPerfIntervalValidData OBJECT-TYPE 
      SYNTAX        TruthValue 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "This variable indicates if the data for this interval 
           is valid." 
      ::= { pwPerfIntervalEntry 2 } 
    
   pwPerfIntervalTimeElapsed OBJECT-TYPE 
       SYNTAX      HCPerfTimeElapsed  
       MAX-ACCESS  read-only 
       STATUS      current 
       DESCRIPTION 
         "The duration of this interval in seconds." 
       ::= { pwPerfIntervalEntry 3 } 
    
   pwPerfIntervalInHCPackets OBJECT-TYPE 
      SYNTAX        HCPerfIntervalCount 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "High capacity counter for number of packets received by 
            the PW (from the PSN) during the interval. This is the 64  
            bit version of pwPerfIntervalInPackets, if  
            pwPerfIntervalInHCPackets is supported according to the 
            rules spelled out in RFC2863." 
      ::= { pwPerfIntervalEntry 4 } 
    
   pwPerfIntervalInHCBytes OBJECT-TYPE 
      SYNTAX        HCPerfIntervalCount 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "High capacity counter for number of bytes received by the  
            PW (from the PSN) during the interval.  
            This is the 64 bit version of pwPerfIntervalInBytes, if  
            pwPerfIntervalInHCBytes is supported according to the  
            rules spelled out in RFC2863." 
      ::= { pwPerfIntervalEntry 5 } 
    
   pwPerfIntervalOutHCPackets OBJECT-TYPE 
      SYNTAX        HCPerfIntervalCount 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 29]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "High capacity counter for number of packets forwarded by  
            the PW (to the PSN) during the interval. 
            This is the 64 bit version of pwPerfIntervalOutPackets,  
            if pwPerfIntervalOutHCPackets is supported according to  
            the rules spelled out in RFC2863." 
      ::= { pwPerfIntervalEntry 6 } 
    
   pwPerfIntervalOutHCBytes OBJECT-TYPE 
      SYNTAX        HCPerfIntervalCount 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "High capacity counter for number of bytes forwarded by  
            the PW (to the PSN) during the interval. 
            This is the 64 bit version of pwPerfIntervalOutBytes,  
            if pwPerfIntervalOutHCBytes is supported according to  
            the rules spelled out in RFC2863." 
      ::= { pwPerfIntervalEntry 7 } 
    
   pwPerfIntervalInPackets OBJECT-TYPE 
      SYNTAX        PerfIntervalCount 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "This value represents the number of packets received  
           by this PW during the interval.  
           It MUST be equal to the least significant 32 bits of  
           pwPerfIntervalInHCPackets if pwPerfIntervalInHCPackets  
           is supported according to the rules spelled out in  
           RFC2863." 
      ::= { pwPerfIntervalEntry 8 } 
    
   pwPerfIntervalInBytes OBJECT-TYPE 
      SYNTAX        PerfIntervalCount 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "This value represents the number of bytes received  
           by this PW during the interval.  
           It MUST be equal to the least significant 32 bits of  
           if pwPerfIntervalInHCBytes is supported according to 
           the rules spelled out in RFC2863." 
      ::= { pwPerfIntervalEntry 9 } 
    
   pwPerfIntervalOutPackets OBJECT-TYPE 
      SYNTAX        PerfIntervalCount 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 30]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "This value represents the number of packets sent by this  
           PW during the interval.  
           It MUST be equal to the least significant 32 bits of  
           pwPerfIntervalOutHCPackets if  
           pwPerfIntervalOutHCPackets is supported according to the 
           rules spelled out in RFC2863." 
      ::= { pwPerfIntervalEntry 10 } 
    
   pwPerfIntervalOutBytes OBJECT-TYPE 
      SYNTAX        PerfIntervalCount 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "This value represents the number of bytes sent by this  
           PW during the interval.  
           It MUST be equal to the least significant 32  
           bits of pwPerfIntervalOutHCBytes 
           if pwPerfIntervalOutHCBytes is supported according to 
           the rules spelled out in RFC2863." 
      ::= { pwPerfIntervalEntry 11 } 
    
   -- End of PW Performance Interval Table 
    
   -- PW Performance Total Table. 
    
   pwPerfTotalTable  OBJECT-TYPE 
      SYNTAX        SEQUENCE OF PwPerfTotalEntry 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "This table provides per-PW Performance information from  
            PW start time or management application reset." 
      ::= { pwObjects 5 } 
    
   pwPerfTotalEntry OBJECT-TYPE 
      SYNTAX        PwPerfTotalEntry 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "An entry in this table is created by the agent for every  
            PW. 
             
            pwPerfTotalDiscontinuityTime indicates the time of the 
            last discontinuity in any of these objects." 
    
      INDEX  { pwIndex } 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 31]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      ::= { pwPerfTotalTable 1 } 
       
   PwPerfTotalEntry ::= SEQUENCE { 
         pwPerfTotalInHCPackets          Counter64, 
         pwPerfTotalInHCBytes            Counter64, 
         pwPerfTotalOutHCPackets         Counter64, 
         pwPerfTotalOutHCBytes           Counter64, 
         pwPerfTotalInPackets            Counter32, 
         pwPerfTotalInBytes              Counter32, 
         pwPerfTotalOutPackets           Counter32, 
         pwPerfTotalOutBytes             Counter32, 
         pwPerfTotalDiscontinuityTime    TimeStamp 
                           } 
    
   pwPerfTotalInHCPackets OBJECT-TYPE 
      SYNTAX        Counter64 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "High capacity counter for the total number of packets  
            received by the PW (from the PSN).  
            This is the 64 bit version of pwPerfTotalInPackets, if  
            pwPerfTotalInHCPackets is supported according to the 
            rules spelled out in RFC2863." 
      ::= { pwPerfTotalEntry 1 } 
    
   pwPerfTotalInHCBytes OBJECT-TYPE 
      SYNTAX        Counter64 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "High capacity counter for the total number of bytes 
            received by the PW (from the PSN).  
            This is the 64 bit version of pwPerfTotalInBytes, if  
            pwPerfTotalInHCBytes is supported according to the  
            rules spelled out in RFC2863." 
      ::= { pwPerfTotalEntry 2 } 
    
   pwPerfTotalOutHCPackets OBJECT-TYPE 
      SYNTAX        Counter64 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "High capacity counter for the total number of packets  
            forwarded by the PW (to the PSN). 
            This is the 64 bit version of pwPerfTotalOutPackets,  
            if pwPerfTotalOutHCPackets is supported according to  
            the rules spelled out in RFC2863." 
      ::= { pwPerfTotalEntry 3 } 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 32]

Internet Draft                PW-MPLS-STD-MIB               July 2005



    
   pwPerfTotalOutHCBytes OBJECT-TYPE 
      SYNTAX        Counter64 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "High capacity counter for the total number of bytes  
            forwarded by the PW (to the PSN). 
            This is the 64 bit version of pwPerfTotalOutBytes,  
            if pwPerfTotalOutHCBytes is supported according to  
            the rules spelled out in RFC2863." 
      ::= { pwPerfTotalEntry 4 } 
    
   pwPerfTotalInPackets OBJECT-TYPE 
      SYNTAX        Counter32 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "This value represents the total number of packets received  
           by this PW.  

           It MUST be equal to the least significant 32 bits of  
           pwPerfTotalInHCPackets if pwPerfTotalInHCPackets  
           is supported according to the rules spelled out in  
           RFC2863." 
      ::= { pwPerfTotalEntry 5 } 
    
   pwPerfTotalInBytes OBJECT-TYPE 
      SYNTAX        Counter32 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "This value represents the total number of bytes received  
           by this PW.  
           It MUST be equal to the least significant 32 bits of  
           if pwPerfTotalInHCBytes is supported according to 
           the rules spelled out in RFC2863." 
      ::= { pwPerfTotalEntry 6 } 
    
   pwPerfTotalOutPackets OBJECT-TYPE 
      SYNTAX        Counter32 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "This value represents the total number of packets sent by  
           this PW.  
           It MUST be equal to the least significant 32 bits of  
           pwPerfTotalOutHCPackets if pwPerfTotalOutHCPackets 
           is supported according to the rules spelled out in  



Zelig & Nadeau, Ed.          Expires February 2006          [Page 33]

Internet Draft                PW-MPLS-STD-MIB               July 2005



           RFC2863." 
      ::= { pwPerfTotalEntry 7 } 
    
   pwPerfTotalOutBytes OBJECT-TYPE 
      SYNTAX        Counter32 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "This value represents the total number of bytes sent by  
           this PW. 
           It MUST be equal to the least significant 32  
           bits of pwPerfTotalOutHCBytes 
           if pwPerfTotalOutHCBytes is supported according to 
           the rules spelled out in RFC2863." 
      ::= { pwPerfTotalEntry 8 } 
    
   pwPerfTotalDiscontinuityTime OBJECT-TYPE 
      SYNTAX      TimeStamp 
      MAX-ACCESS  read-only 
      STATUS      current 
      DESCRIPTION 
          "The value of sysUpTime on the most recent occasion at 
           which any one or more of this row Counter32 or 
           Counter64 suffered a discontinuity. If no such 
           discontinuities have occurred since the last re- 
           initialization of the local management subsystem, then 
           this object contains a zero value." 
      ::= { pwPerfTotalEntry 9 } 
    
   -- End of PW Perf Total Table 
    
   -- Error counter scalar  
    
   pwPerfTotalErrorPackets OBJECT-TYPE 
      SYNTAX        Counter32 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
           "Counter for number of error at the PW processing level,  
            for example packets received with unknown PW label." 
      ::= { pwObjects 6 } 
    
   -- Reverse mapping tables 
    
   -- The PW ID mapping table 
   pwIndexMappingTable  OBJECT-TYPE 
      SYNTAX        SEQUENCE OF PwIndexMappingEntry 
      MAX-ACCESS    not-accessible 
      STATUS        current 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 34]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      DESCRIPTION 
           "This table enables the reverse mapping the unique PWid 
            parameters <peer IP, PW type and PW ID> and the  
            pwIndex. The table is not applicable for PW created  
            manually or by using the generalized FEC." 
      ::= { pwObjects 7 } 
    
   pwIndexMappingEntry OBJECT-TYPE 
      SYNTAX        PwIndexMappingEntry 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "An entry in this table MUST be created by the agent for  
            every PW created by the pwTable for which pwOwner  
            equals pwIdFecSignaling." 
    
      INDEX  { pwIndexMappingVcType,  pwIndexMappingVcID, 
               pwIndexMappingPeerAddrType, pwIndexMappingPeerAddr 
               } 
      ::= { pwIndexMappingTable 1 } 
       
   PwIndexMappingEntry ::= SEQUENCE { 
         pwIndexMappingVcType        PwTypeTC, 
         pwIndexMappingVcID          PwIDType, 
         pwIndexMappingPeerAddrType  InetAddressType, 
         pwIndexMappingPeerAddr      InetAddress, 
         pwIndexMappingVcIndex       PwIndexType 
                          } 
    
   pwIndexMappingVcType OBJECT-TYPE 
      SYNTAX        PwTypeTC 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "The PW type (indicates the service) of this PW." 
      ::= { pwIndexMappingEntry 1 } 
    
   pwIndexMappingVcID OBJECT-TYPE 
      SYNTAX        PwIDType 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "The PW ID of this PW. Zero if the PW is configured  
            manually." 
      ::= { pwIndexMappingEntry 2 } 
    
   pwIndexMappingPeerAddrType OBJECT-TYPE 
      SYNTAX        InetAddressType 
      MAX-ACCESS    not-accessible 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 35]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      STATUS        current 
      DESCRIPTION 
           "IP address type of the peer node." 
      ::= { pwIndexMappingEntry 3 } 
    
   pwIndexMappingPeerAddr OBJECT-TYPE 
      SYNTAX        InetAddress 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "IP address type of the peer node." 
      ::= { pwIndexMappingEntry 4 } 
    
   pwIndexMappingVcIndex  OBJECT-TYPE 
      SYNTAX        PwIndexType 
      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "The value that represents the PW in the pwTable." 
      ::= { pwIndexMappingEntry 5 } 
    
   -- End of the PW ID mapping table 
    
   -- The peer mapping table 
    
   pwPeerMappingTable  OBJECT-TYPE 
      SYNTAX        SEQUENCE OF PwPeerMappingEntry 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "This table provides reverse mapping of the existing PW  
            based on PW type and PW ID ordering. This table is  
            typically useful for EMS ordered query of existing PWs." 
      ::= { pwObjects 8 } 
    
   pwPeerMappingEntry OBJECT-TYPE 
      SYNTAX        PwPeerMappingEntry 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "An entry in this table is created by the agent for every  
            PW configured in pwTable.

           Implementors need to be aware that if the value of
           the pwPeerMappingPeerAddr (an OID) or 
           pwPeerMappingVcID (an OID) (or both combined)
           has more than 111 sub-identifiers, then OIDs of column
           instances in this table will have more than 128
           sub-identifiers and cannot be accessed using SNMPv1,



Zelig & Nadeau, Ed.          Expires February 2006          [Page 36]

Internet Draft                PW-MPLS-STD-MIB               July 2005



           SNMPv2c, or SNMPv3." 
      INDEX  { pwPeerMappingPeerAddrType, pwPeerMappingPeerAddr, 
               pwPeerMappingVcType,  pwPeerMappingVcID }  
    
      ::= { pwPeerMappingTable 1 } 
       
   PwPeerMappingEntry ::= SEQUENCE { 
         pwPeerMappingPeerAddrType         InetAddressType, 
         pwPeerMappingPeerAddr             InetAddress, 
         pwPeerMappingVcType               PwTypeTC, 
         pwPeerMappingVcID                 PwIDType, 
         pwPeerMappingVcIndex              PwIndexType 
                          } 
    
   pwPeerMappingPeerAddrType OBJECT-TYPE 
      SYNTAX        InetAddressType 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "IP address type of the peer node." 
      ::= { pwPeerMappingEntry 1 } 
    
   pwPeerMappingPeerAddr OBJECT-TYPE 
      SYNTAX        InetAddress 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "IP address type of the peer node." 
      ::= { pwPeerMappingEntry 2 } 
    
   pwPeerMappingVcType OBJECT-TYPE 
      SYNTAX        PwTypeTC 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "The PW type (indicates the service) of this PW." 
      ::= { pwPeerMappingEntry 3 } 
    
   pwPeerMappingVcID OBJECT-TYPE 
      SYNTAX        PwIDType 
      MAX-ACCESS    not-accessible 
      STATUS        current 
      DESCRIPTION 
           "The PW ID of this PW. Zero if the PW is configured  
            manually." 
      ::= { pwPeerMappingEntry 4 } 
    
   pwPeerMappingVcIndex  OBJECT-TYPE 
      SYNTAX        PwIndexType 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 37]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      MAX-ACCESS    read-only 
      STATUS        current 
      DESCRIPTION 
          "The value that represents the PW in the pwTable." 
      ::= { pwPeerMappingEntry 5 } 
    
   -- End of the peer mapping table 
    
   -- End of reverse mapping tables 
    
   pwUpDownNotifEnable  OBJECT-TYPE 
      SYNTAX      TruthValue 
      MAX-ACCESS  read-write 
      STATUS      current 
      DESCRIPTION 
         "If this object is set to true(1), then it enables 
          the emission of pwUp and pwDown 
          notifications; otherwise these notifications are not 
          emitted." 
      REFERENCE 
         "See also [RFC3413] for explanation that 
          notifications are under the ultimate control of the 
          MIB module in this document." 
      DEFVAL { false } 
      ::= { pwObjects 9 } 
    
   pwDeletedNotifEnable  OBJECT-TYPE 
      SYNTAX      TruthValue 
      MAX-ACCESS  read-write 
      STATUS      current 
      DESCRIPTION 
         "If this object is set to true(1), then it enables the  
          emission of pwDeleted notification; otherwise this  
          notification is not emitted." 
      REFERENCE 
         "See also [RFC3413] for explanation that 
          notifications are under the ultimate control of the 
          MIB module in this document." 
      DEFVAL { false } 
      ::= { pwObjects 10 } 
    
   pwNotifRate  OBJECT-TYPE 
      SYNTAX      Unsigned32 
      MAX-ACCESS  read-write 
      STATUS      current 
      DESCRIPTION 
         "This object defines the maximum number of PW notifications 
          that can be emitted from the device per second." 
      ::= { pwObjects 11 } 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 38]

Internet Draft                PW-MPLS-STD-MIB               July 2005



    
   -- Notifications - PW 
    
   pwDown NOTIFICATION-TYPE 
      OBJECTS { pwOperStatus, --start of range 
                pwOperStatus  --end of range 
      } 
      STATUS  current 
      DESCRIPTION 
          "This notification is generated when the 
           pwOperStatus object for one or more contiguous 
           entries in pwTable are about to enter the 
           down(2) state from some other state. The included values 
           of pwOperStatus MUST all be set equal to this 
           down(2) state.  The two instances of pwOperStatus 
           in this notification indicate the range of indexes 
           that are affected.  Note that all the indexes of the 
           two ends of the range can be derived from the 
           instance identifiers of these two objects.  For 
           cases where a contiguous range of cross-connects 
           have transitioned into the down(2) state at roughly 
           the same time, the device SHOULD issue a single 
           notification for each range of contiguous indexes in 
           an effort to minimize the emission of a large number 
           of notifications.  If a notification has to be 
           issued for just a single cross-connect entry, then 
           the instance identifier (and values) of the two 
           pwOperStatus objects MUST be identical." 
      ::= { pwNotifications  1 } 
    
   pwUp NOTIFICATION-TYPE 
      OBJECTS { pwOperStatus, --start of range 
                pwOperStatus  --end of range 
      } 
      STATUS  current 
      DESCRIPTION 
          "This notification is generated when the 
           pwOperStatus object for one or more contiguous 
           entries in pwTable are about to enter the up(1) 
           state from some other state. The included values of 
           pwOperStatus MUST both be set equal to this 
           new state (i.e: up(1)).  The two instances of 
           pwOperStatus in this notification indicate the range 
           of indexes that are affected.  Note that all the indexes 
           of the two ends of the range can be derived from the 
           instance identifiers of these two objects.  For 
           cases where a contiguous range of cross-connects 
           have transitioned into the up(1) state at roughly 
           the same time, the device SHOULD issue a single 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 39]

Internet Draft                PW-MPLS-STD-MIB               July 2005



           notification for each range of contiguous indexes in 
           an effort to minimize the emission of a large number 
           of notifications.  If a notification has to be 
           issued for just a single cross-connect entry, then 
           the instance identifier (and values) of the two 
           pwOperStatus objects MUST be the identical." 
      ::= { pwNotifications 2 } 
    
   pwDeleted NOTIFICATION-TYPE 
      OBJECTS { pwType, 
                pwID, 
                pwPeerAddrType, 
                pwPeerAddr 
      } 
      STATUS  current 
      DESCRIPTION 
          "This notification is generated when the PW has been  
           deleted, i.e. when the pwRowStatus has been set to 
           destroy(6), the PW has been deleted by a non-MIB  
           application or due to auto discovery process. 
          " 
      ::= { pwNotifications  3 } 
    
   -- End of notifications. 
    
   -- conformance information 
    
   pwGroups      OBJECT IDENTIFIER ::= { pwConformance   1 } 
   pwCompliances OBJECT IDENTIFIER ::= { pwConformance   2 } 
    
    
   -- Compliance requirement for fully compliant implementations.  
    
   pwModuleFullCompliance MODULE-COMPLIANCE 
       STATUS  current 
       DESCRIPTION 
               "The compliance statement for agents that provide full 
                support for PW MIB Module. Such devices can 
                then be monitored and also be configured using 
                this MIB module." 
    
       MODULE  -- this module 
           MANDATORY-GROUPS { pwBasicGroup, 
                              pwPerformanceGeneralGroup, 
                              pwPeformanceTotalGroup }

      GROUP pwNotificationGroup  
      DESCRIPTION "This group is only mandatory for those 
                   implementations



Zelig & Nadeau, Ed.          Expires February 2006          [Page 40]

Internet Draft                PW-MPLS-STD-MIB               July 2005



                   which can efficiently implement the notifications
                   contained in this group."


      GROUP        pwPwIdGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support the PW ID FEC. 
                  " 
    
      GROUP        pwGeneralizedFecGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support the generalized PW FEC. 
                  " 
    
      GROUP        pwFcsGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support FCS retention." 
    
      GROUP        pwFragGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support PW fragmentation. 
                  " 
    
      GROUP        pwPwStatusGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support PW status notification. 
                  " 
    
      GROUP        pwGetNextGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   where the pwIndex may be any arbitrary value 
                   and the EMS would require retrieval of the next 
                   free index." 
    
      GROUP        pwPriorityGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support the controlling the PW setup and 
                   holding priority." 
    
      GROUP        pwAttachmentGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support attachment of two PWs (PW stitching)." 
    
      GROUP        pwHCPeformanceTotalGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   where at least one of the total performance  
                   counters wraps around too quickly based on the  
                   criteria specified in RFC 2863 for high-capacity 
                   counters." 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 41]

Internet Draft                PW-MPLS-STD-MIB               July 2005



    
      GROUP        pwPerformanceIntervalGeneralGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support PW performance gathering in 15 
                   minutes intervals." 
    
      GROUP        pwPeformanceIntervalGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support PW performance gathering in 15 
                   minutes intervals." 
    
      GROUP        pwHCPeformanceIntervalGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   where at least one of the interval performance  
                   counters wraps around too quickly based on the  
                   criteria specified in RFC 2863 for high-capacity 
                   counters." 
    
      GROUP        pwMappingTablesGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support reverse mapping of PW indexes to 
                   the pwIndex and the peer mapping table." 
    
      GROUP        pwNotificationControlGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support the PW notifications." 
    
      OBJECT       pwAdminStatus 
      SYNTAX       INTEGER { up(1), down(2) } 
      DESCRIPTION "The support of the value testing(3) is not  
                   required." 
    
      OBJECT       pwOperStatus 
      SYNTAX       INTEGER { up(1), down(2), notPresent(6), 
                   lowerLayerDown(7) } 
      DESCRIPTION "The support of the values testing(3), unknown(4), 
                   and dormant(5) is not required." 
    
      OBJECT       pwRowStatus 
      SYNTAX       RowStatus { active(1), notInService(2), 
                               notReady(3) } 
      WRITE-SYNTAX RowStatus { active(1), notInService(2), 
                               createAndGo(4), destroy(6) 
                             } 
      DESCRIPTION "Support for createAndWait is not required. Support 
                   of notReady is not required for implementations 
                   that do not support signaling, or if it is 
                   guaranteed that the conceptual row has all the 
                   required information to create the PW when the 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 42]

Internet Draft                PW-MPLS-STD-MIB               July 2005



                   row has been created by the agent." 
    
      OBJECT       pwPeerAddrType 
      SYNTAX       InetAddressType { unknown(0), ipv4(1) } 
      DESCRIPTION "Only unknown(0) and ipv4(1) is required." 
    
      OBJECT       pwPeerAddr 
      SYNTAX       InetAddress (SIZE(0|4)) 
      DESCRIPTION "An implementation is only required to support  
                   0, 4 address sizes." 
    
    
        ::= { pwCompliances 1 } 
    
   -- Compliance requirement for read only compliant implementations.  
    
   pwModuleReadOnlyCompliance MODULE-COMPLIANCE 
       STATUS  current 
       DESCRIPTION 
               "The compliance statement for agents that provide read 
                only support for PW MIB Module. Such devices can 
                then be monitored but cannot be configured using this 
                MIB module." 
    
       MODULE  -- this module 
           MANDATORY-GROUPS { pwBasicGroup, 
                              pwPeformanceTotalGroup } 
  
      GROUP pwNotificationGroup  
      DESCRIPTION "This group is only mandatory for those 
                   implementations
                   which can efficiently implement the notifications
                   contained in this group."

      GROUP        pwPwIdGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support the PW ID FEC. 
                  " 
    
      GROUP        pwGeneralizedFecGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support the generalized PW FEC. 
                  " 
    
      GROUP        pwFcsGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support FCS retention." 
    
      GROUP        pwFragGroup 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 43]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      DESCRIPTION "This group is only mandatory for implementations 
                   that support PW fragmentation. 
                  " 
    
      GROUP        pwPwStatusGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support PW status notification. 
                  " 
    
      GROUP        pwGetNextGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   where the pwIndex may be any arbitary value 
                   and the EMS would require retrieval of the next 
                   free index." 
    
      GROUP        pwPriorityGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support the controling the PW setup and 
                   holding priority." 
    
      GROUP        pwAttachmentGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support attachment of two PWs (PW stitching)." 
    
      GROUP        pwHCPeformanceTotalGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   where at least one of the total performance  
                   counters wraps around too quickly based on the  
                   criteria specified in RFC 2863 for high-capacity 
                   counters." 
    
      GROUP        pwPerformanceIntervalGeneralGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support PW performance gathering in 15 
                   minutes intervals." 
    
      GROUP        pwPeformanceIntervalGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support PW performance gathering in 15 
                   minutes intervals." 
    
      GROUP        pwHCPeformanceIntervalGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   where at least one of the interval performance  
                   counters wraps around too quickly based on the  
                   criteria specified in RFC 2863 for high-capacity 
                   counters." 
    
      GROUP        pwMappingTablesGroup 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 44]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      DESCRIPTION "This group is only mandatory for implementations 
                   that support reverse mapping of PW indexes to 
                   the pwIndex and the peer mapping table." 
    
      GROUP        pwNotificationControlGroup 
      DESCRIPTION "This group is only mandatory for implementations 
                   that support the PW notifications." 
    
      OBJECT       pwType 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwOwner 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwPsnType 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwSetUpPriority 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwHoldingPriority 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwPeerAddrType 
      SYNTAX       InetAddressType { unknown(0), ipv4(1) } 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required. Only unknown(0) and  
                   ipv4(1) is required." 
    
      OBJECT       pwPeerAddr 
      SYNTAX       InetAddress (SIZE(0|4)) 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required. An implementation  
                   is only required to support 0, 4 address sizes." 
    
      OBJECT       pwAttachedPwIndex 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwIfIndex 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwID 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 45]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwLocalGroupID 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwGroupAttachmentID 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwLocalAttachmentID 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 

      OBJECT       pwPeerAttachmentID 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwCwPreference 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwLocalIfMtu 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwLocalIfString 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwLocalCapabAdvert 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwFragmentCfgSize 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwFcsRetentioncfg 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwOutboundVcLabel 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwInboundVcLabel 
      MIN-ACCESS   read-only 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 46]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwName 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwDescr 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwAdminStatus 
      SYNTAX       INTEGER { up(1), down(2) } 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required. The support of value  
                   testing(3) is not required." 
    
      OBJECT       pwOperStatus 
      SYNTAX       INTEGER { up(1), down(2), notPresent(6),  
                   lowerLayerDown(7) } 
      DESCRIPTION "The support of the values testing(3), unknown(4), 
                   and is not required." 
    
      OBJECT       pwRowStatus 
      SYNTAX       RowStatus { active(1) } 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
    
      OBJECT       pwStorageType 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwUpDownNotifEnable 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwDeletedNotifEnable 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
      OBJECT       pwNotifRate 
      MIN-ACCESS   read-only 
      DESCRIPTION "Write access is not required." 
    
        ::= { pwCompliances 2 } 
    
   -- Units of conformance. 
    
   pwBasicGroup   OBJECT-GROUP  



Zelig & Nadeau, Ed.          Expires February 2006          [Page 47]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      OBJECTS { 
               pwType, 
               pwOwner, 
               pwPsnType, 
               pwPeerAddrType, 
               pwPeerAddr, 
               pwIfIndex, 
               pwID, 
               pwLocalGroupID, 
               pwCwPreference, 
               pwLocalIfMtu, 
               pwLocalIfString, 
               pwLocalCapabAdvert, 
               pwRemoteGroupID, 
               pwCwStatus, 
               pwRemoteIfMtu, 
               pwRemoteIfString, 
               pwOutboundVcLabel, 
               pwInboundVcLabel, 
               pwName, 
               pwDescr, 
               pwCreateTime, 
               pwUpTime, 
               pwLastChange, 
               pwAdminStatus, 
               pwOperStatus, 
               pwLocalStatus, 
               pwRowStatus, 
               pwStorageType 
             } 
                 
      STATUS  current 
      DESCRIPTION 
          "Collection of objects that are required in all  
           implementations that support the PW MIB module." 
      ::= { pwGroups 1 } 
    
   pwPwIdGroup   OBJECT-GROUP  
      OBJECTS { 
               pwID 
              } 
                 
      STATUS  current 
      DESCRIPTION 
          "Collection of objects required for PW ID configuration  
           and signaling." 
      ::= { pwGroups 2 } 
    
   pwGeneralizedFecGroup   OBJECT-GROUP  



Zelig & Nadeau, Ed.          Expires February 2006          [Page 48]

Internet Draft                PW-MPLS-STD-MIB               July 2005



      OBJECTS { 
               pwGroupAttachmentID, 
               pwLocalAttachmentID, 
               pwPeerAttachmentID 
             } 
                 
      STATUS  current 
      DESCRIPTION 
          "Collection of objects required for generalized FEC  
           configuration and signaling." 
      ::= { pwGroups 3 } 
    
   pwFcsGroup   OBJECT-GROUP  
      OBJECTS { 
               pwFcsRetentioncfg, 
               pwFcsRetentionStatus 
             } 
                 
      STATUS  current 
      DESCRIPTION 
          "Collection of objects required for FCS retention  
           configuration and signaling." 
      ::= { pwGroups 4 } 
    
   pwFragGroup   OBJECT-GROUP  
      OBJECTS { 
               pwFragmentCfgSize, 
               pwRmtFragCapability 
             } 
                 
      STATUS  current 
      DESCRIPTION 
          "Collection of objects required for fragmentation  
           configuration and signaling." 
      ::= { pwGroups 5 } 
    
   pwPwStatusGroup   OBJECT-GROUP  
      OBJECTS { 
               pwRemoteCapabilities, 
               pwRemoteStatusCapable, 
               pwRemoteStatus 
             } 
                 
      STATUS  current 
      DESCRIPTION 
          "Collection of objects required for PW status configuration 
           and signaling." 
      ::= { pwGroups 6 } 
    



Zelig & Nadeau, Ed.          Expires February 2006          [Page 49]

Internet Draft                PW-MPLS-STD-MIB               July 2005



   pwGetNextGroup   OBJECT-GROUP  
      OBJECTS { 
               pwIndexNext 
               } 
    
      STATUS  current 
      DESCRIPTION 
          "Collection of objects for getting the next available  
           index." 
      ::= { pwGroups 7 } 
    
   pwPriorityGroup   OBJECT-GROUP  
      OBJECTS { 
               pwSetUpPriority, 
               pwHoldingPriority 
               } 
    
      STATUS  current 
      DESCRIPTION 
          "Collection of objects for controlling the PW setup and 
           holding priority." 
      ::= { pwGroups 8 } 
    
   pwAttachmentGroup   OBJECT-GROUP  
      OBJECTS { 
               pwAttachedPwIndex 
               } 
    
      STATUS  current 
      DESCRIPTION 
          "Collection of objects for PW configuration 
           and signaling." 
      ::= { pwGroups 9 } 
    
   pwPerformanceGeneralGroup OBJECT-GROUP  
      OBJECTS { 
               pwPerfTotalDiscontinuityTime, 
               pwPerfTotalErrorPackets 
             } 
                 
      STATUS  current 
      DESCRIPTION 
          "Collection of general objects needed for managing the 
           total running performance parameters." 
      ::= { pwGroups 10 } 
    
   pwPeformanceTotalGroup OBJECT-GROUP  
      OBJECTS { 
               pwPerfTotalInPackets, 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 50]

Internet Draft                PW-MPLS-STD-MIB               July 2005



               pwPerfTotalInBytes, 
               pwPerfTotalOutPackets, 
               pwPerfTotalOutBytes 
             } 
                 
      STATUS  current 
      DESCRIPTION 
          "Collection of 32 bits objects needed for PW running total  
           performance collection." 
      ::= { pwGroups 11 } 
    
   pwHCPeformanceTotalGroup OBJECT-GROUP  
      OBJECTS { 
               pwPerfTotalInHCPackets, 
               pwPerfTotalInHCBytes, 
               pwPerfTotalOutHCPackets, 
               pwPerfTotalOutHCBytes 
             } 
                 
      STATUS  current 
      DESCRIPTION 
          "Collection of HC objects needed for PW running total  
           performance collection." 
      ::= { pwGroups 12 } 

   pwPerformanceIntervalGeneralGroup OBJECT-GROUP  
      OBJECTS { 
               pwTimeElapsed, 
               pwValidIntervals, 
               pwPerfIntervalValidData, 
               pwPerfIntervalTimeElapsed 
             } 
                 
      STATUS  current 
      DESCRIPTION 
          "Collection of general objects needed for managing the 
           interval performance parameters." 
      ::= { pwGroups 13 } 
    
   pwPeformanceIntervalGroup OBJECT-GROUP  
      OBJECTS { 
               pwPerfCurrentInPackets, 
               pwPerfCurrentInBytes, 
               pwPerfCurrentOutPackets, 
               pwPerfCurrentOutBytes, 
                
               pwPerfIntervalInPackets, 
               pwPerfIntervalInBytes, 
               pwPerfIntervalOutPackets, 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 51]

Internet Draft                PW-MPLS-STD-MIB               July 2005



               pwPerfIntervalOutBytes 
             } 
                 
      STATUS  current 
      DESCRIPTION 
          "Collection of 32 bits objects needed for PW performance  
           collection in 15 minutes intervals." 
      ::= { pwGroups 14 } 
    
   pwHCPeformanceIntervalGroup OBJECT-GROUP  
      OBJECTS { 
               pwPerfCurrentInHCPackets, 
               pwPerfCurrentInHCBytes, 
               pwPerfCurrentOutHCPackets, 
               pwPerfCurrentOutHCBytes, 
                
               pwPerfIntervalInHCPackets, 
               pwPerfIntervalInHCBytes, 
               pwPerfIntervalOutHCPackets, 
               pwPerfIntervalOutHCBytes 
             } 
                 
      STATUS  current 
      DESCRIPTION 
          "Collection of HC objects needed for PW performance  
           collection in 15 minutes intervals." 
      ::= { pwGroups 15 } 
    
   pwMappingTablesGroup OBJECT-GROUP  
      OBJECTS { 
               pwIndexMappingVcIndex, 
               pwPeerMappingVcIndex 
             } 
                 
      STATUS  current 
      DESCRIPTION 
          "Collection of objects contained in the reverse 
           mapping tables." 
      ::= { pwGroups 16 } 
    
   pwNotificationControlGroup OBJECT-GROUP 
      OBJECTS { 
               pwUpDownNotifEnable, 
               pwDeletedNotifEnable, 
               pwNotifRate 
             } 
    
      STATUS  current 
      DESCRIPTION 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 52]

Internet Draft                PW-MPLS-STD-MIB               July 2005



          "Collection of objects for controlling the PW 
           notifications." 
      ::= { pwGroups 17 } 
    
   pwNotificationGroup NOTIFICATION-GROUP 
      NOTIFICATIONS { 
               pwUp, 
               pwDown, 
               pwDeleted 
             } 
    
      STATUS  current 
      DESCRIPTION 
          "Collection PW notifications objects." 
      ::= { pwGroups 18 }      
    
   END   
     
8. Security Considerations 
    
    It is clear that this MIB module is potentially useful for 
    monitoring of PW capable PEs.  This MIB can also be used for 
    configuration of certain objects, and anything that can be 

    configured can be incorrectly configured, with potentially 
    disastrous results. 
        
    There are a number of management objects defined in this MIB 
    module with a MAX-ACCESS clause of read-write and/or read-create.  
    Such objects may be considered sensitive or vulnerable in some 
    network environments.  The support for SET operations in a non-
    secure environment without proper protection can have a negative 
    effect on network operations.  These are the tables and objects 
    and their sensitivity/vulnerability: 
     
     o    the pwTable contains objects to configure PW parameters on  
          a Provider Edge (PE) device. Unauthorized access to objects  
          in this table, could result in disruption of traffic on  
          the network.  The objects pwUpDownNotifEnable and  
          pwNotifRate control the reports from the network element  
          to the EMS. Unauthorized access to these objects could  
          result in disruption of configuration and status change  
          reporting, resulting mis-view of the network conditions.  
          The use of stronger mechanisms such as SNMPv3 security  
          should be considered where possible.  Specifically, 
          SNMPv3 VACM and USM MUST be used with any v3 agent which 
          implements this MIB module.  Administrators should consider  
          whether read access to these objects should be allowed,  
          since read access may be undesirable under certain  



Zelig & Nadeau, Ed.          Expires February 2006          [Page 53]

Internet Draft                PW-MPLS-STD-MIB               July 2005



          circumstances. 
     
    Some of the readable objects in this MIB module "i.e., objects 
    with a MAX-ACCESS other than not-accessible" may be considered 
    sensitive or vulnerable in some network environments.  It is thus 
    important to control even GET and/or NOTIFY access to these 
    objects and possibly to even encrypt the values of these objects 
    when sending them over the network via SNMP.  These are the tables 
    and objects and their sensitivity/vulnerability: 
     
      o    the pwTable, pwPerfCurrentTable, pwPerfIntervalTable, 
           pwPerfTotalTable, pwIndexMappingTable and  
           pwPeerMappingTable collectively show the pseudo wire  
           connectivity topology and its performance characteristics.   
           If an Administrator does not want to reveal this 
           information, then these tables should be 
           considered sensitive/vulnerable. 
     
    SNMP versions prior to SNMPv3 did not include adequate security. 
    Even if the network itself is secure "for example by using IPSec", 
    even then, there is no control as to who on the secure network is 
    allowed to access and GET/SET "read/change/create/delete" the 
    objects in this MIB module. 
     
    It is RECOMMENDED that implementers consider the security features 
    as provided by the SNMPv3 framework "see [RFC3410], section 8", 
    including full support for the SNMPv3 cryptographic mechanisms 
    "for authentication and privacy". 
     
    Further, deployment of SNMP versions prior to SNMPv3 is NOT 
    RECOMMENDED. Instead, it is RECOMMENDED to deploy SNMPv3 and to 
    enable cryptographic security.  It is then a customer/operator 
    responsibility to ensure that the SNMP entity giving access to an 
    instance of this MIB module, is properly configured to give access 
    to the objects only to those principals "users" that have 
    legitimate rights to indeed GET or SET "change/create/delete" 
    them. 
          
9. References 
     
9.1 Normative references 
   
  [PWTC]     Nadeau, T., Zelig, D., Ed., "Definitions for 
             Textual Conventions and OBJECT-IDENTITIES
             for Pseudo-Wires Management", 
             draft-ietf-pwe3-pw-tc-mib-07.txt, July 2005.
      
  [RFC3931]  Lau, J., Townsley, M., "Layer Two Tunneling Protocol 
             (Version 3) L2TPv3", RFC3931, March 2005. 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 54]

Internet Draft                PW-MPLS-STD-MIB               July 2005



   
  [PWCNTRL]   Martini et al, "Pseudowire Setup and Maintenance using 
              LDP", draft-ietf-pwe3-control-protocol-17.txt, 
              June 2005.   

  [RFC4001] Daniele, M., et al., "Textual Conventions for Internet 
            Network Addresses", RFC4001, February 2005.
   
  [RFC2578]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, 
              J.,Rose, M. and S. Waldbusser, "Structure of Management 
              Information Version 2 (SMIv2)", STD 58, RFC 2578, April   
              1999. 
   
  [RFC2579]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, 
               J., Rose, M. and S. Waldbusser, "Textual Conventions 
               for SMIv2", STD 58, RFC 2579, April 1999. 
   
  [RFC2580]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, 
               J., Rose, M. and S. Waldbusser, "Conformance Statements 
               for SMIv2", STD 58, RFC 2580, April 1999. 
   
  [RFC2863]   McCloghrie, K., F. Kastenholz,  "The Interfaces Group 
               MIB using SMIv2", RFC 2863, June 2000. 
   
  [RFC3413]   Levi, D., Meyer, P., Stewart, B., Simple Network 
               Management Protocol (SNMP) Applications, RFC 3413, 
               December 2002. 

  [RFC3593]   Tesink, K., "Textual Conventions for MIB Modules Using 
              Performance History Based on 15 Minute Intervals", 
              RFC 3593, September 2003. 
   
  [RFC3705]   Ray, B., Abbi, R., "Textual Conventions for MIB Modules 
              Using Performance History Based on 15 Minute 
              Intervals", RFC 3705, February 2004. 

  [RFC2021]   Waldbusser, S., "Remote Network Monitoring Management 
               Information Base Version 2 using SMIv2", RFC 2021, 
               January 1997. 
   
9.2 Informative references 

  [RFC3411]  Harrington, D., Presuhn, R., and B. Wijnen, "An
             Architecture for Describing Simple Network Management
             Protocol (SNMP) Management Frameworks", STD 62, RFC 3411,
             December 2002.

  [RFC3985]  Bryant, S., et al, "PWE3 Architecture",RFC2985, 
             March 2005



Zelig & Nadeau, Ed.          Expires February 2006          [Page 55]

Internet Draft                PW-MPLS-STD-MIB               July 2005




  [RFC2434]   Narten, T. and H. Alvestrand, "Guidelines for Writing 
              an IANA Considerations Section in RFCs", BCP: 26, 
              RFC2434, October 1998. 
     
  [RFC2119]  Bradner, S., "Key Words for use in RFCs to Indicate
             Requirement Levels", BCP 14, RFC2119, March 1997.
     
  [RFC3410]   Case, J., Mundy, R., Partain, D. and B. Stewart, 
              Introduction and Applicability Statements for Internet-
              Standard Management Framework", RFC 3410, December 
              2002. 

  [RFC3916]   Xiao, X., McPherson, D., Pate, P., "Requirements for 
              Pseudo-Wire Emulation Edge-to-Edge (PWE3)", RFC3916,
              September 2004

10. Editors' Contact Information

    David Zelig 
    Corrigent Systems 
    126, Yigal Alon st. 
    Tel Aviv, ISRAEL 
    Phone:  +972-3-6945273 
    Email:  davidz@corrigent.com 
     
    Thomas D. Nadeau  
    Cisco Systems, Inc.  
    300 Beaver Brook Road
    Boxboro, MA 01719
    Email: tnadeau@cisco.com  

11. Authors' Addresses 
          
    Dave Danenberg  
    Email: dave_danenberg@yahoo.com  
     
    Sharon Mantin 
    AxONLink (Israel) Ltd  
    9 Bareket St.  
    Petah Tikva 49517, Israel  
    Phone: +972-3-9263972  
    Email: sharon.mantin@axonlink.com 
    
12. Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in



Zelig & Nadeau, Ed.          Expires February 2006          [Page 56]

Internet Draft                PW-MPLS-STD-MIB               July 2005



   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at ietf-
   ipr@ietf.org.
 
     
13. Full Copyright Statement

    Copyright (C) The Internet Society (2005).  This document is
    subject to the rights, licenses and restrictions contained in BCP
    78, and except as set forth therein, the authors retain all their
    rights.

    This document and the information contained herein are provided
    on an "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE
    REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND
    THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT
    THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR
    ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A
    PARTICULAR PURPOSE.

14.  IANA Considerations 
   
  PWE3 related standards track PW modules should be 
  rooted under the pwMIB subtree.  The IANA is requested to manage 
  that namespace.  New assignments can only be made via a Standards 
  Action as specified in [RFC2434].

  IANA is requested to make a MIB OID assignment under the 
  pwMIB branch as specified in section 11.1. 
   
14.1  IANA Considerations for PW-STD-MIB 

  This document also requests IANA to assign { pwMIB 2 } to the 



Zelig & Nadeau, Ed.          Expires February 2006          [Page 57]

Internet Draft                PW-MPLS-STD-MIB               July 2005



  PW-STD-MIB module specified in this document.

Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.














































Zelig & Nadeau, Ed.          Expires February 2006          [Page 58]
