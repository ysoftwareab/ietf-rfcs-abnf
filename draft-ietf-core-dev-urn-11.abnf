devurn = "urn:dev:" body componentpart
body = macbody / owbody / orgbody / osbody / opsbody / otherbody
macbody = %s"mac:" hexstring
owbody = %s"ow:" hexstring
orgbody = %s"org:" posnumber "-" identifier *( ":"  identifier )
osbody = %s"os:" posnumber "-" serial *( ":"  identifier )
opsbody = %s"ops:" posnumber "-" product "-" serial *( ":"  identifier )
otherbody = subtype ":" identifier *( ":"  identifier )
subtype = LALPHA *(DIGIT / LALPHA)
identifier = 1*devunreserved
identifiernodash = 1*devunreservednodash
product = identifiernodash
serial = identifier
componentpart = *( "_" identifier )
devunreservednodash = ALPHA / DIGIT / "."
devunreserved = devunreservednodash / "-"
hexstring = 1*(hexdigit hexdigit)
hexdigit = DIGIT / "a" / "b" / "c" / "d" / "e" / "f"
posnumber = NZDIGIT *DIGIT
ALPHA =  %x41-5A / %x61-7A
LALPHA =  %x41-5A
NZDIGIT = %x31-39
DIGIT =  %x30-39

   The above syntax is represented in Augmented Backus-Naur Form (ABNF)
   form as defined in [RFC5234] and [RFC7405].  The syntax also copies
   the DIGIT and ALPHA rules originally defined in [RFC5234], exactly as
   defined there.

   The device identifier namespace includes five subtypes (see
   Section 4, and more may be defined in the future as specified in
   Section 7.

   The optional underscore-separated components at the end of the DEV
   URN depict individual aspects of a device.  The specific strings and
   their semantics are up to the designers of the device, but could be
   used to refer to specific interfaces or functions within the device.
   With the exception of the MAC-address and 1-Wire DEV URNs, each DEV
   URN may also contain optional colon-separated identifiers.  These are
   provided for extensibility.

   There are no special character encoding rules or considerations for
   conforming with the URN syntax, beyond those applicable for URNs in
   general [RFC8141], or the context where these URNs are carried (e.g.,
   inside JSON [RFC8259] or SenML [RFC8428]).  Due to the SenML RFC 8428
   Section 4.5.1 rules, it is not desirable to use percent-encoding in
   DEV URNs, and the subtypes defined in this specification do not
   really benefit from percent-encoding.  However, this specification
   does not deviate from the general syntax of URNs or their processing
   and normalization rules as specified in [RFC3986] and [RFC8141].

   DEV URNs do not use r-, q-, or f-components as defined in [RFC8141].

   Specific subtypes of DEV URNs may be validated through mechanisms
   discussed in Section 4.

   The string representation of the device identifier URN is fully
   compatible with the URN syntax.

