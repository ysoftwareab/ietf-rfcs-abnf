calprops   = 2*(

              ; 'prodid' and 'version' are both REQUIRED,
              ; but MUST NOT occur more than once.
              ;
                prodid /version /
   	   ;
              ; These are optional, but MUST NOT occur
              ; more than once.
              ;
                calscale        /
                method          /
                cmd             /
   	   ;
              ; Target is optional, and may occur more
              ; than once.
              ;
                target / other-props )
   	   ;
other-props  = *(x-prop) *(iana-prop) *(other-props)
   	   ;
iana-prop   = ; Any property registered by IANA directly or
                  ; included in an RFC that may be applied to
                  ; the component and within the rules published.
   	       ;
x-prop      = ; As defined in [iCAL]
   	       ;
methodp     = ; As defined in [iCAL]
                  ;
prodid      = ; As defined in [iCAL]
                  ;
calscale    = ; As defined in [iCAL]
                  ;
icalbody = calprops component

             ; If the "VCALENDAR" component contains the "CMD"
             ; property then the 'component' is optional:
             ;
             / calprops     ; Which MUST include a "CMD" property
             ;
component = ; As defined in [iCAL]


alarmc     = "BEGIN" ":" "VALARM" CRLF
   	       alarm-seq
                  other-props
   	       (audioprop / dispprop / emailprop / procprop)
   	       "END" ":" "VALARM" CRLF
                  ;
emailprop   = ; As definded in [iCAL]
                  ;
procprop    = ; As definded in [iCAL]
                  ;
dispprop    = ; As definded in [iCAL]
                  ;
audioprop   = ; As definded in [iCAL]
                  ;
alarm-seq   = "SEQUENCE" alarmseqparams ":" posint0 CRLF
                  ;
alarmseqparams = other-params [";" local-param] other-params
                  ;
                  ; Where DIGIT is defined in [iCAL]
                  ;
posint0     = 1*DIGIT
posint1     = posintfirst 1*DIGIT
                  ;
                  ; A number starting with 1 through 9.
                  ;
posintfirst = %x31-39
                  ;
other-params = *(";" xparam) *(";" iana-params) *(";" other-params)
                  ;
iana-params = ; Any parameter registered by IANA directly or
                  ; included in an RFC that may be applied to
                  ; the property and within the rules published.
                  ;
trigger    = "TRIGGER" 1*(";" enable-param) (trigrel / trigabs)
                ;
trigrel    = ; As defined in [iCAL]
                ;
trigabs    = ; As defined in [iCAL]


target="OWNER"/>) Related to the "CAL-OWNERS()" (Section 6.1.1.1)
capurl   = "cap://" csidpart [ "/" relcalid ]
                         ;
csidpart = hostport   ; As defined in Section 3.2.2 of RFC 2396
                         ;
relcalid = *uric      ; As defined in Section 2 of RFC 2396


cal-query  = "SELECT"   SP   cap-val  SP
   	       "FROM"     SP   comp-name SP
   	       "WHERE"    SP   cap-expr

   	     / "SELECT" SP cap-cols SP
   	       "FROM"   SP comp-name
                  ;
cap-val    = cap-cols / param
   	     / ( cap-val "," cap-val )
                  ;
   	       ; NOTE: there is NO space around the "," on
   	       ; the next line
cap-cols   = cap-col / ( cap-cols "," cap-col)
   	       / "*"
                  / "*.*" ; only valid when the target is a "VAGENDA"
                  ;
                  ; A 'cap-col' is:
                  ;
                  ; Any property name ('cap-prop') found in the component
   	       ; named in the 'comp-name' used in the "FROM" clause.
   	       ;
   	       ;   SELECT ORGANIZER FROM VEVENT ...
   	       ;
   	       ; OR
   	       ;
   	       ; A component name ('comp-name') of an existing component
                  ; contained inside of the 'comp-name' used in the "FROM"
                  ; clause.
   	       ;
   	       ;   SELECT VALARM FROM VEVENT ...
   	       ;
   	       ; OR
   	       ;
   	       ; A component name ('comp-name') of an existing
                  ; component contained inside of the 'comp-name' used
                  ; in the "FROM" clause followed by a property
                  ; name ('cap-prop') to be selected from that component.
                  ; (comp-name "." cap-prop)
   	       ;
   	       ;   SELECT VALARM.TRIGGER FROM VEVENT ...
                  ;
cap-col    = comp-name
                / comp-name "." cap-prop
                / cap-prop
                  ;
comp-name  = "VEVENT"  / "VTODO"     / "VJOURNAL" / "VFREEBUSY"
                / "VALARM"  / "DAYLIGHT"  / "STANDARD" / "VAGENDA"
                / "VCAR"    / "VCALSTORE" / "VQUERY"   / "VTIMEZONE"
                / "VRIGHT"  / x-comp    / iana-comp
                  ;
cap-prop   = ; A property that may be in the 'cap-comp' named
                  ; in the "SELECT" clause.
                  ;
cap-expr   = "(" cap-expr ")"
   	     / cap-term
                  ;
cap-term   = cap-expr SP cap-logical SP cap-expr
   	     / cap-factor
                  ;
cap-logical= "AND" / "OR"
                  ;
cap-factor = cap-colval SP cap-oper SP col-value
   	     / cap-colval SP "LIKE" SP col-value
   	     / cap-colval SP "NOT LIKE" SP col-value
   	     / cap-colval SP "IS NULL"
   	     / cap-colval SP "IS NOT NULL"
   	     / col-value SP "IN" cap-colval
   	     / col-value SP "NOT IN" cap-colval
   	     / "STATE()" "=" ( "BOOKED"
   			      / "UNPROCESSED"
   			      / "DELETED"
                                 / iana-state
                                 / x-state )
                  ;
iana-state  = ; Any state registered by IANA directly or
                  ; included in an RFC that may be applied to
                  ; the component and within the rules published.
                  ;
x-state    = ; Any experimental state that starts with
                  ; "x-" or "X-".
                  ;
cap-colval = cap-col /  param
                  ;
param      = "PARAM(" cap-col "," cap-param ")"
                  ;
cap-param  = ; Any parameter that may be contained in the cap-col
                  ; in the supplied PARAM() function
                  ;
col-value  = col-literal
   	     / "SELF()"
   	     / "CAL-OWNERS()"
   	     / "CAL-OWNERS(" cal-address ")"
   	     / "CURRENT-TARGET()"
                   ;
cal-address = ; A CALID as define by CAP
                   ;
col-literal = "'" literal-data "'"
                   ;
literal-data = ; Any data that matches the value type of the
   		; column that is being compared. That is you can
   		; not compare PRIORITY to "some string" because
   		; PRIORITY has a value type of integer. If it is
   		; not preceded by the LIKE element, any '%' and '_'
   		; characters in the literal data are not treated as
   		; wildcard characters and do not have to be backslash
   		; escaped.
   		;
   		; OR
   		;
   		; If the literal-data is preceded by the LIKE
   		; element it may also contain the '%' and '_'
   		; wildcard characters. And if the literal data
   		; that is comparing contains any '%' or '_'
   		; characters, they MUST BE backslash escaped as
   		; described in the notes below in order for them not
   		; to be treated as wildcard characters.
                   ;
                   ; And if the literal data contains any characters
                   ; that would have to be backslash escaped if
                   ; a property or parameter value then they must
                   ; be backslash escaped in the literal-data.
                   ; PLUS the quote character (') must be backslash
                   ; escaped. Example:
                   ;
                   ; ... WHERE SUBJECT = 'It\'s time to ski'
                   ;
cap-oper    = "="
   	      / "!="
   	      / "<"
   	      / ">"
   	      / "<="
   	      / ">="
                   ;
SP          = ; A single white space ASCII character
x-comp      = ; As defined in [iCAL] section 4.6
                   ;
iana-comp   = ; As defined in [iCAL] section 4.6
upn        = "@"
   	/ [ dot-atom-text ] "@" dot-atom-text
             ;
   	  ; dot-atom-text is defined in RFC 2822
             ;
             ;
dot-atom-text = ; As defined in [iCAL]


upn-filter    = "CAL-OWNERS()" /
   	        "NOT CAL-OWNERS()" /
   	        "*" /
   	     [ "*" / dot-atom-text ] "@" ( "*" / dot-atom-text )
                ;
   	     ; dot-atom-text is defined in RFC 2822


action-param     = ";" "ACTION" "=" ( "ASK" / "ABORT" )
                    ; If 'action-param' is supplied then
                    ; 'latency-param' MUST BE supplied.


enable-param       = "ENABLE" "=" boolean
                        ;
boolean            = ; As defined in [iCAL]


id-param         = ";" "ID" "=" unique-id
                    ; The text value supplied is a unique value
                    ; shared between the CUA and CS to uniquely
                    ; identify the instance of command in the
                    ; the current CUA session. The value has
                    ; no meaning to other CUAs or other sessions.
                    ;
unique-id        = ; text
                    ;
text		 = ; As defined in [iCAL].



latency-param    = ";" "LATENCY" "=" latency-sec
                    ; The value supplied in the time in seconds.
                    ; If 'latency-param' is supplied then
                    ; 'action-param' MUST BE supplied.
                    ;
latency-sec      = posint1

local-param        = "LOCAL" "=" boolean


localize-param   = ";" "LOCALIZE" "=" beep-localize
                    ;
beep-localize    = text ; As defined in [BEEP]
                    ; The value supplied MUST BE one value from the initial
                    ; [BEEP] greeting 'localize' attribute specifying
                    ; the locale to use for error messages during
                    ; this instance of the command sent.


option-param     = ";" "OPTIONS" "=" cmd-specific
                      ;
cmd-specific     = ; The value supplied is dependent on the
                      ; CMD value. See the specific CMDs for the
                      ; correct values to use for each CMD.

allow-conflict     = "ALLOW-CONFLICT" other-params ":" boolean CRLF


attcounter   = "ATT-COUNTER" other-params ":" cal-address CRLF


calid   = "CALID" other-params ":" relcalid CRLF


calmaster = "CALMASTER" other-params ":" uri CRLF
             ;
uri       = ; IANA registered uri as defined in [iCAL]

cap-version   = "CAP-VERSION" other-params ":" text CRLF


carid      = "CARID" other-params ":" text CRLF


car-level        = "CAR-LEVEL" ":" other-params ":" car-level-values
                      ;
car-level-values = ( "CAR-NONE" / "CAR-MIN" / "CAR-FULL-1"
                        / other-levels )
                      ;
other-levels     = ; Any name published in an RFC for a "CAR-LEVEL"
                      ; property value.


components     = "COMPONENTS" other-params ":" comp-list CRLF
                  ;
                  ; All of these MUST BE supplied only once.
                  ;
comp-list-req  = "VCALSTORE" "," "VCALENDAR" "," "VTIMEZONE" ","
                    "VREPLY"    "," "VAGENDA"   "," "STANDARD"  ","
                    "DAYLIGHT"
                  ; At least one MUST BE supplied. The same value
                  ; MUST NOT occur more than once.
                  ;
comp-list-min  = ( "," "VEVENT") / ( "," "VTODO") / ( "," "VJOURNAL" )
                  ; The same value MUST NOT occur
                  ; more than once. If "VCAR" is supplied then
                  ; "VRIGHT" must be supplied.
                  ;
comp-list-opt  = ( "," "VFREEBUSY" ) / ( "," "VALARM" )
                    / ( "," "VCAR" )    / ( "," "VRIGHT" )
                    / ( "," "VQUERY")   / ( "," x-comp )
                    / ( "," iana-comp )
                  ;
comp-list      = comp-list-req 1*3comp-list-min *(comp-list-opt)


csid = "CSID" other-params ":" capurl CRLF


decreed      = "DECREED" other-params ":" boolean CRLF


default-charset     = "DEFAULT-CHARSET" other-params ":" text
                         *( "," text) CRLF


default-locale     = "DEFAULT-LOCALE" other-params ":" language
                         *( "," language) CRLF
              ;
language = ; Text identifying a locale, as defined in [CHARPOL]


default-tzid       = "DEFAULT-TZID" other-params
                        ":" [tzidprefix] text
                        *("," [tzidprefix] text) CRLF
                        ;
txidprefix         = ; As defined in [iCAL]


defautl-vcars      = "DEFAULT-VCARS" other-params ":" text
                        *( "," text ) CRLF
deny       = "DENY" other-params ":" upn-filter CRLF


expand     = "EXPAND" other-params ":" ("TRUE" / "FALSE") CRLF


grant     = "GRANT" other-params ":" upn-filter CRLF


itip-version   = "ITIP-VERSION" other-params ":" text CRLF


max-comp-size   = "MAX-COMP-SIZE" other-params ":" posint0 CRLF


maxdate    = "MAXDATE" other-params ":" date-time CRLF


mindate    = "MINDATE" other-params ":" date-time CRLF
               ;
date-time = ; As defined in [iCAL]


multipart = "MULTIPART" other-params ":" text *( "," text) CRLF


name          = "NAME" nameparam ":" text CRLF
                   ;
nameparam     = other-params [ ";" languageparam ] other-params
                   ;
languageparam = ; As defined in [iCAL].


owner = "OWNER" other-params ":" upn CRLF


permmission  = "PERMISSION" other-params ":" permvalue CRLF
                 ;
permvalue = ( "SEARCH" / "CREATE" / "DELETE"
               / "MODIFY" / "MOVE" / all
               / iana-cmd / x-cmd )
                 ;
all         = "*"
                 ;
iana-cmd    = ; Any command registered by IANA directly or
                 ; included in an RFC that may be applied as
                 ; a command.
                 ;
x-cmd       = ; Any experimental command that starts with
                 ; "x-" or "X-".


query      = "QUERY" other-params ":" cal-query CRLF


queryid      = "QUERYID" other-params ":" text CRLF


query-level = "QUERY-LEVEL" other-params
                 ":" ( "CAL-QL-1" / "CAL-QL-NONE") CRLF


recur-accepted = "RECUR-ACCEPTED" other-params ":" boolean CRLF


recur-limit = "RECUR-LIMIT" other-params ":" posint1 CRLF
recur-expand = "RECUR-EXPAND" other-params ":" boolean CRLF


restriction      = "RESTRICTION" other-params ":" cal-query CRLF


scope      = "SCOPE" other-params ":" cal-query CRLF


stores-expanded   = "STORES-EXPANDED" other-params ":" boolean CRLF
target   = "TARGET" other-params ":" ( capurl / relcalid ) CRLF


transp      = "TRANSP" other-params ":" transvalue CRLF
               ;
transvalue  = "OPAQUE" ;Blocks or opaque on busy time searches.
               / "TRANSPARENT"    ;Transparent on busy time searches.
               / "TRANSPARENT-NOCONFLICT" ; Transparent on busy time
               ; searches and no other OPAQUE or OPAQUE-NOCONFLICT objects
               ; can overlap it.
               ;
               / "OPAQUE-NOCONFLICT"  ; Opaque on busy time
               ; searches and no other OPAQUE or OPAQUE-NOCONFLICT objects
               ; can overlap it.
               ;
               ; Default value is OPAQUE


agenda      = "BEGIN" ":" "VAGENDA" CRLF
                 agendaprop
                 *(icalobject)     ; as defined in [iCAL]
                 "END" ":" "VAGENDA" CRLF
                 ;
agendaprop  = *(
                 ; The following MUST occur exactly once.
                 ;
                   allow-conflict / relcalid / calscale / created
                 / default-charset / default-locale
                 / default-tzid / last-mod
                 ;
                 ; The following MUST occur at least once.
                 ; and the value MUST NOT be empty.
                 ;
                 / owner
                 ;
                 ; The following are optional,
                 ; and MAY occur more than once.
                 ;
                 / name / related-to / other-props / x-comp
               )

icalobject = ; As defined in [iCAL]
                ;
created    = ; As defined in [iCAL]
                ;
related-to = ; As defined in [iCAL]


agendac     = "BEGIN" ":" "VAGENDA" CRLF
                 agendacprop
                 *(icalobject)     ; as defined in [iCAL]
                 "END" ":" "VAGENDA" CRLF
                  ;
agendacprop  = *(
                  ; The following MUST occur exactly once.
                  ;
                    allow-conflict / relcalid / calscale
                  / default-charset / default-locale
                  / default-tzid
                  ;
                  ; The following MUST occur at least once.
                  ; and the value MUST NOT be empty.
                  ;
                  / owner
                  ;
                  ; The following are optional,
                  ; and MAY occur more than once.
                  ;
                  / name / related-to / other-props / x-comp
                 )


calstorec     = "BEGIN" ":" "VCALSTORE" CRLF
   	     calstoreprop
                *(vagendac)
   	     "END" ":" "VCALSTORE" CRLF
                 ;
calstoreprop  = *(
                     ; the following MUST occur exactly once
                     ;
                       allow-conflict / calscale / calmaster
                     / created / csid / default-charset
                     / default-locale / default-vcars
                     / default-tzid / last-mod / maxdate / mindate
                     ;
                     ; the following are optional,
                     ; and MAY occur more than once
                     ;
                     / name / related-to / other-props / x-comp
                    )
                  ;
vagendac     = ; As defined in [iCAL].
                  ;
last-mod     = ; As defined in [iCAL].


carc    =  "BEGIN" ":" "VCAR" CRLF
              carprop 1*rightc
              "END" ":" "VCAR" CRLF
           ;
carprop = 1*(
           ;
           ; 'carid' is REQUIRED,
           ; but MUST NOT occur more than once
           ;
            carid /
           ;
           ; the following are OPTIONAL,
           ; and MAY occur more than once
           ;
            name / decreed / other-props
           )


rightc    = "BEGIN" ":" "VRIGHT" CRLF
               rightprop
               "END" ":" "VRIGHT" CRLF
             ;
rightprop = 2*(
             ;
             ; either 'grant' or 'deny' MUST
             ; occur at least once
             ; and MAY occur more than once
             ;
              grant / deny /
             ;
             ; 'permission' MUST occur at least once
             ; and MAY occur more than once
             ;
              permission /
             ;
             ; the following are optional,
             ; and MAY occur more than once
             ;
              scope / restriction / other-props
          )


replyc           =  "BEGIN" ":" "VREPLY" CRLF
                       any-prop-or-comp
                       "END" ":" "VREPLY" CRLF
                    ;
any-prop-or-comp = ; Zero or more iana or experimental
                      ; properties and components, in any order.


queryc    =  "BEGIN" ":" "VQUERY" CRLF
                queryprop
                "END" ":" "VCAR" CRLF
             ;
queryprop = 1*(
             ;
             ; 'queryid' is OPTIONAL but MUST NOT occur
             ; more than once. If the "TARGET" property
             ; is supplied then the "QUERYID" property
             ; MUST BE supplied.
             ;
              queryid / target
             ;
             ; 'expand' is OPTIONAL but MUST NOT occur
             ; more than once.
             ;
              expand
             ;
             ; the following are OPTIONAL, and MAY occur
             ; more than once
             ;
             / name / other-props
             ;
             ; the following MUST occur at least once if
             ; queryid is not supplied.
             ;
             / query
           )


cmd              = "CMD" (
                      abort-cmd
                    / continue-cmd
                    / create-cmd
                    / delete-cmd
                    / generate-uid-cmd
                    / get-capability-cmd
                    / identify-cmd
                    / modify-cmd
                    / move-cmd
                    / reply-cmd
                    / search-cmd
                    / set-locale-cmd
                    / iana-cmd
                    / x-cmd
                     ) CRLF
                   ;
option-value    = "OPTION" "=" paramtext
                   ;
abort-cmd   = abortparam ":" "ABORT"
                ;
abortparam   = *(
                ;
   	     ; the following are optional,
   	     ; but MUST NOT occur more than once
                ;
   	       id-param
   	     / localize-param
                ;
   	     ; the following is optional,
   	     ; and MAY occur more than once
                ;
   	     / other-params
   	     )

abort-reply  = "BEGIN" ":" "VCALENDAR" CRLF
   		calprops
   		abort-vreply
   	       "END" ":" "VCALENDAR" CRLF
                ;
abort-vreply = "BEGIN" ":" "VREPLY" CRLF
   		rstatus
   		other-props
   		"END" ":" "VREPLY" CRLF



continue-cmd   = continueparam ":" "CONTINUE"
                  ;
continueparam  = *(
                  ;
                  ; the following are optional,
                  ; but MUST NOT occur more than once
                  ;
                     id-param
                   / localize-param
                   / latency-param
                  ;
                  ; the following MUST occur exactly once and only
                  ; when the latency-param has been supplied and
                  ; MUST NOT be supplied if the latency-param is
                  ; not supplied.
                  ;
                   / action-param
                  ;
                  ; the following are optional,
                  ; and MAY occur more than once
                  ;
                   / other-params
                   )

continue-reply   = "BEGIN" ":" "VCALENDAR" CRLF
                      calprops
                      continue-vreply
                      "END" ":" "VCALENDAR" CRLF
                    ;
continue-vreply  = "BEGIN" ":" "VREPLY" CRLF
                      rstatus
                      other-props
                      "END" ":" "VREPLY" CRLF



create-cmd     = createparam ":" "CREATE"
                  ;
createparam    = *(
                  ;
                  ; the following are optional,
                  ; but MUST NOT occur more than once
                  ;
                    id-param
                  / localize-param
                  / latency-param
                  ;
                  ; the following MUST occur exactly once and only
                  ; when the latency-param has been supplied and
                  ; MUST NOT be supplied if the latency-param is
                  ; not supplied.
                  ;
                  / action-param
                  ;
                  ; the following is optional,
                  ; and MAY occur more than once
                  ;
                  / other-params
                 )


create-reply   = "BEGIN" ":" "VCALENDAR" CRLF
                     creply-props
                     1*(create-vreply)
                     "END" ":" "VCALENDAR" CRLF
                  ;
create-vreply  = "BEGIN" ":" "VREPLY" CRLF
                    created-id
                    rstatus
                    other-props
                    "END" ":" "VREPLY" CRLF
                  ;
                  ; Where the id is appropriate for the
                  ; type of object created:
                  ;
                  ; VAGENDA = relcalid
                  ; VALARM = sequence
                  ; VCAR = carid
                  ; VEVENT, VFREEBUSY, VJOURNAL, VTODO = uid
                  ; VQUERY = queryid
                  ; VTIMEZONE = tzid
                  ; x-comp = x-id
                  ;
created-id    = ( relcalid / carid / uid / queryid /
                     tzid / sequence / x-id)
                   ;
tzid          = ; As defined in [iCAL]
                   ;
sequence      = ; As defined in [iCAL]
                   ;
uid           = ; As defined in [iCAL]
                   ;
x-id          = ; An ID for an x-component.
                   ;
creply-props  = 4*(
                   ; These are REQUIRED and MUST NOT occur
                   ; more than once.
                   ;
                    prodid /version / target / reply-cmd
                   ;
                   ; These are optional, and may occur more
                   ; than once.
                   ;
                    other-props )


create-object = "BEGIN" ":" "VCALENDAR" CRLF
                 ; If 'calprops' contain the "METHOD" property
                 ; then this 'create-object' component MUST
                 ; conform to [iTIP] restrictions.
                 ;
                 ; calprops MUST include 'create-cmd'
                 ;
                   calprops
                   other-props
                   1*(create-comp)
                   "END" ":" "VCALENDAR" CRLF

                 ; NOTE: The 'VCALSTORE' component is not included in
                 ; 'create-comp' as it is out of scope for CAP to create
                 ; a new CS.
                 ;
create-comp =  agendac / carc / queryc
                  / timezonec / freebusyc
                  / eventc / todoc / journalc
                  / iana-comp / x-comp
                 ;
freebusyc    = ; As defined in [iCAL]
                  ;
eventc       = ; As defined in [iCAL]
                  ;
journalc     = ; As defined in [iCAL]
                  ;
timezonec    = ; As defined in [iCAL]
                  ;
todoc        = ; As defined in [iCAL]


delete-cmd   = deleteparam ":" "DELETE"
                ;
deleteparam  = *(
                ;
                ; the following are optional,
                ; but MUST NOT occur more than once
                ;
                 id-param
                / localize-param
                / latency-param
                / option-param "MARK"
                ;
                ; The following MUST occur exactly once and only
                ; when the latency-param has been supplied and
                ; MUST NOT be supplied if the latency-param is
                ; not supplied.
                ;
                / action-param
                ;
                ; the following is optional,
                ; and MAY occur more than once
                ;
                / other-params
               )


delete-reply   = "BEGIN" ":" "VCALENDAR" CRLF
                    calprops   ; MUST include 'reply-cmd'
                    *(delete-vreply)
                    "END" ":" "VCALENDAR" CRLF
   	       ;
delete-vreply  = "BEGIN" ":" "VREPLY" CRLF
                    deleted-id
                    rstatus
                    "END" ":" "VREPLY" CRLF
                  ;
                  ; Where the id is appropriate for the
                  ; type of object deleted:
                  ;
                  ; VAGENDA = relcalid
                  ; VCAR = carid
                  ; VEVENT, VFREEBUSY, VJOURNAL, VTODO = uid
                  ; VQUERY = queryid
                  ; ALARM = sequence
                  ; VTIMEZONE = tzid
                  ; x-comp = x-id
                  ; An instance = uid recurid
                  ;
deleted-id    = ( relcalid / carid / uid / uid recurid
                  / queryid / tzid / sequence / x-id )


generate-uid-cmd   = genuidparam ":" "GENERATE-UID"
                      ;
genuidparam        = *(
                      ;
                      ; The following are optional,
                      ; but MUST NOT occur more than once.
                      ;
                        id-param
                      / localize-param
                      / latency-param
                      ;
                      ; The following MUST occur exactly once and only
                      ; when the latency-param has been supplied and
                      ; MUST NOT be supplied if the latency-param is
                      ; not supplied.
                      ;
                      / action-param
                      ;
                      ; The following is optional,
                      ; and MAY occur more than once.
                      ;
                      / other-params
                      ;
                      ; The following MUST BE supplied exactly once.
                      ; The value specifies the number of UIDs to
                      ; be returned.
                      ;
                      / option-param posint1
                    )


gen-reply   = "BEGIN" ":" "VCALENDAR" CRLF
                 calprops              ; Which MUST include 'reply-cmd'
                 1*(gen-vreply)
                 "END" ":" "VCALENDAR" CRLF


gen-vreply  = "BEGIN" ":" "VREPLY" CRLF
                 1*(uid)
                 rstatus
                 "END" ":" "VREPLY" CRLF


get-capability-cmd   = capibiltyparam ":" "GET-CAPABILITY"
                      ;
capibiltyparam     = *(
                      ;
                      ; the following are optional,
                      ; but MUST NOT occur more than once
                      ;
                       id-param / localize-param / latency-param
                      ;
                      ; the following MUST occur exactly once and only
                      ; when the latency-param has been supplied and
                      ; MUST NOT be supplied if the latency-param is
                      ; not supplied.
                      ;
                      / action-param
                      ;
                      ; the following is optional,
                      ; and MAY occur more than once
                      ;
                      / other-params
                      )


cap-vreply     = "BEGIN" ":" "VCALENDAR" CRLF
                   ; The following properties may be in any order.
                   ;
                   prodid
                   version
                   reply-cmd
                   other-props
                   "BEGIN" ":" "VREPLY" CRLF
                   ; The following properties may be in any order.
                   ;
                   cap-version
                   car-level
                   components
                   stores-expanded
                   maxdate
                   mindate
                   itip-version
                   max-comp-size
                   multipart
                   query-level
                   recur-accepted
                   recur-expand
                   recur-limit
                   other-props
                  "END" ":" "VREPLY" CRLF
                  "END" ":" "VCALENDAR" CRLF

      Example:

      I: Content-Type: text/calendar
      I:
      I: BEGIN:VCALENDAR
      I: VERSION:2.0
      I: PRODID:-//someone's prodid
      I: CMD;ID=unique-per-cua-125:GET-CAPABILITY
      I: END:VCALENDAR

      L: Content-Type: text/calendar
      L:
      L: BEGIN:VCALENDAR
      L: VERSION:2.0
      L: PRODID:-//someone's prodid
      L: CMD;ID=unique-per-cua-125:REPLY
      L: BEGIN:VREPLY
      L: CAP-VERSION:1.0
      L: PRODID:The CS prodid
      L: QUERY-LEVEL:CAL-QL-1
      L: CAR-LEVEL:CAR-FULL-1
      L: MAXDATE:99991231T235959Z
      L: MINDATE:00000101T000000Z
      L: MAX-COMPONENT-SIZE:0
      L: COMPONENTS:VCALENDAR,VTODO,VJOURNAL,VEVENT,VCAR,
      L:  VALARM,VFREEBUSY,VTIMEZONE,STANDARD,DAYLIGHT,VREPLY
      L: ITIP-VERSION:2446
      L: RECUR-ACCEPTED:TRUE
      L: RECUR-EXPAND:TRUE
      L: RECUR-LIMIT:0
      L: STORES-EXPANDED:FALSE
      L: X-INET-PRIVATE-COMMANDS:1.0
      L: END:VREPLY
      L: END:VCALENDAR



identify-cmd    = identifyparam ":" "IDENTIFY"
                        ;
identifyparam   = *(
                        ;
                        ; the following are optional,
                        ; but MUST NOT occur more than once
                        ;
                          id-param
                        / localize-param
                        / latency-param
                        ;
                        ; the following MUST occur exactly once and only
                        ; when the latency-param has been supplied and
                        ; MUST NOT be supplied if the latency-param is
                        ; not supplied.
                        ;
                        / action-param
                        ;
                        ; the following is optional,
                        ; and MAY occur more than once
                        ;
                        / other-params
                        ;
                        ; The value is the UPN of the requested
                        ; identity. If option is  not supplied it is
                        ; a request to return to the original authenticated
                        ; identity.
                        ;
                        / option-param upn
                        )

         Response:

            A "REQUEST-STATUS" property wrapped in a "VREPLY" component with only one of the following
            request-status codes:

                  2.0 Successful.

                  6.4 Identity not permitted. VCAR restriction.


modify-cmd   = modifyparam ":" "MODIFY"
                        ;
modifyparam   = *(
                        ;
                        ; the following are optional,
                        ; but MUST NOT occur more than once
                        ;
                          id-param
                        / localize-param
                        / latency-param
                        ;
                        ; the following MUST occur exactly once and only
                        ; when the latency-param has been supplied and
                        ; MUST NOT be supplied if the latency-param is
                        ; not supplied.
                        ;
                        / action-param
                        ;
                        ; the following is optional,
                        ; and MAY occur more than once
                        ;
                        / other-params
                        )


move-cmd   = moveparam ":" "MOVE"
                        ;
moveparam   = *(
                        ;
                        ; the following are optional,
                        ; but MUST NOT occur more than once
                        ;
                          id-param
                        / localize-param
                        / latency-param
                        ;
                        ; the following MUST occur exactly once and only
                        ; when the latency-param has been supplied and
                        ; MUST NOT be supplied if the latency-param is
                        ; not supplied.
                        ;
                        / action-param
                        ;
                        ; the following is optional,
                        ; and MAY occur more than once
                        ;
                        / other-params
                        ;
                        )


move-reply  = "BEGIN" ":" "VCALENDAR" CRLF
                          calprops
                          1*(move-vreply)
                         "END" ":" "VCALENDAR" CRLF


move-vreply  = "BEGIN" ":" "VREPLY" CRLF
                          move-id
                           rstatus
                         "END" ":" "VREPLY" CRLF

                         ; Where the id is appropriate for the
                         ; type of object moved:
                         ;
                         ; VAGENDA = relcalid
                         ; VCAR = carid
                         ; VEVENT, VFREEBUSY, VJOURNAL, VTODO = uid
                         ; VQUERY = queryid
                         ; ALARM = sequence
                         ; An instance = uid recurid
                         ; x-comp = x-id
                         ;
move-id    =  ( relcalid / carid / uid / uid recurid
                          / queryid / tzid / sequence / x-id)


reply-cmd    = replyparam ":" "REPLY"
                        ;
replyparam    = *(
                        ;
   	             ; The 'id' parameter value MUST BE exactly the
                        ; same as the value sent in the original
                        ; CMD property. If the original CMD did
                        ; not have an 'id' parameter, then the 'id'
                        ; MUST NOT be supplied in the REPLY.
                        ;
                        id-param
                        ;
                        ; the following is optional,
                        ; and MAY occur more than once
                        ;
                        / other-params
                        )



search-cmd   = searchparam ":" "SEARCH"
                        ;
searchparam   = *(
                        ;
                        ; the following are optional,
                        ; but MUST NOT occur more than once
                        ;
                          id-param
                        / localize-param
                        / latency-param
                        ;
                        ; the following MUST occur exactly once and only
                        ; when the latency-param has been supplied and
                        ; MUST NOT be supplied if the latency-param is
                        ; not supplied.
                        ;
                        / action-param
                        ;
                        ; the following is optional,
                        ; and MAY occur more than once
                        ;
                        / other-params
                        )


setlocale-cmd   = setlocaleparam ":" "SET-LOCALE"
                           ;
setlocaleparam   = *(
                           ;
                           ; the following are optional,
                           ; but MUST NOT occur more than once
                           ;
                             id-param
                           / localize-param
                           / latency-param
                           / setlocale-option
                           ;
                           ; the following MUST occur exactly once and only
                           ; when the latency-param has been supplied and
                           ; MUST NOT be supplied if the latency-param is
                           ; not supplied.
                           ;
                           / action-param
                           ;
                           ; the following is optional,
                           ; and MAY occur more than once
                           ;
                           / other-params )

setlocale-option   = option-param newlocale
                            ;
newlocale    = ; Any locale supplied in the initial [BEEP]
                              ; "greeting" "localize" parameter and
                              ; and any charset supported by the CS
                              ; and listed in the DEFAULT-CHARSET property
                              ; of the VCALSTORE.


setlocale-reply  = "BEGIN" ":" "VCALENDAR" CRLF
                              calprops
                              1*(setlocale-vreply)
                             "END" ":" "VCALENDAR" CRLF

setlocale-vreply  = "BEGIN" ":" "VREPLY" CRLF
                              rstatus
                              "END" ":" "VREPLY" CRLF



timeout-cmd   = timeoutparam ":" "TIMEOUT"

timeoutparam   = *(
                        ; the following are optional,
                        ; but MUST NOT occur more than once
                          id-param
                        / localize-param
                        / other-params
                        )



