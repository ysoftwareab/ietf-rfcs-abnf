SPF-record  = version *( 1*SP ( directive | modifier ) )

v=spf1 +mx +a:colo.example.com/28 -all
    
v=spf1 +mx +a:colo.example.com/28 -all
   
version = "v=spf" version-number
version-number = 1*DIGIT

SPF-record  = version *( 1*SP ( directive / modifier ) ) *SP
 
version     = "v=spf" 1*DIGIT
     
prefix      = "+" / "-" / "?" / "~"

directive   = [prefix] mechanism
mechanism   = name [ ":" macro-string ] *[ '/' *DIGIT ]
modifier    = name "=" macro-string
name        = alpha *( alpha / digit / "-" / "_" / "." )
   
v=spf1 +mx -all

v=spf1 +mx redirect=_spf.example.com
        
all = "all"

v=spf1 +mx +a -all

include = "include" ":" domain-spec

pass     => match,         return the prefix value for "include"
fail     => no match,      continue processing
softfail => no match,      continue processing
neutral  => no match,      continue processing
error    => throw error,   abort processing, return error
unknown  => throw unknown, abort processing, return unknown
none     => throw unknown, abort processing, return unknown

A = "a" [ ":" domain-spec ] [ dual-cidr-length ]

MX = "mx" [ ":" domain-spec ] [ dual-cidr-length ]
    
PTR = "ptr" [ ":" domain-spec ]

IP4             = "ip4" ":" ip4-network [ ip4-cidr-length ]
IP6             = "ip6" ":" ip6-network [ ip6-cidr-length ]
ip4-cidr-length = "/" 1*DIGIT
ip6-cidr-length = "/" 1*DIGIT

ip4-network    = dotted-quad notation
ip6-network    = conventional IPv6 notation

exists = "exists" ":" domain-spec

v=spf1 exists:%{ir}.%{l1r+-}._spf.%{d} -all
   
redirect = "redirect" "=" domain-spec

explanation = "exp" "=" domain-spec

v=spf1 mx -all exp=explain._spf.%{d}

accreditation = 'accredit' '=' domain-spec

accredit=%{d}.accreditation-provider.example.com
accredit=%{ir}.accreditation-provider.example.com

v=spf1 a mx ptr domainkeys:_dk.%{d} -all

header = "Received-SPF:" 1*SP result [ 1*SP "(" comment ")" ]
                 *( 1*SP key-value-pair )

result = "pass" / "fail" / "error" / "softfail" / "neutral" /
                 "none" / "unknown" / unknown-mechanisms

unknown-mechanisms = "unknown" *( 1*SP [prefix] mechanism )

key-value-pair = 1*VCHAR "=" *(WSP / VCHAR) ";"

comment = [ smtp-receiver-hostname ": " comment-string ]

receiver=mybox.example.org; client-ip=192.0.2.1;
envelope-from=<myname@example.com>; helo=foo.example.com;
       
receiver=mybox.example.org;
client-ip=192.0.2.1;
envelope-from=<myname@example.com>;
helo=foo.example.com;
            
macro-string = *( macro-char / VCHAR )
macro-char   = ( "%{" ALPHA transformer *delimiter "}" )
                    / "%%" / "%_" / "%-"
transformer  = [ *DIGIT ] [ "r" ]
delimiter    = "." / "-" / "+" / "," / "/" / "_" / "="

l = local-part of responsible-sender
s = responsible-sender
o = responsible-domain
d = current-domain
i = SMTP client IP (nibble format when an IPv6 address)
p = SMTP client domain name
v = client IP version string: "in-addr" for ipv4 or "ip6" for ipv6
h = HELO/EHLO domain
r = receiving domain

c = SMTP client IP (easily readable format)
t = current timestamp in UTC epoch seconds notation

SPF-record  = version *( 1*SP ( directive / modifier ) ) *SP

version     = "v=spf" 1*DIGIT
    
directive	= [ prefix ] mechanism    
prefix      = "+" / "-" / "?" / "~"
modifier    = redirect / explanation / unknown-modifier
redirect    = "redirect" "=" domain-spec
explanation = "exp" "=" domain-spec
unknown-modifier = name "=" macro-string
    
mechanism   = ( all / include
                   / A / MX / PTR / IP4 / IP6 / exists
                   / extension )

all          = "all"
include      = "include"  ":" domain-spec
A            = "a"      [ ":" domain-spec ] [ dual-cidr-length ]
MX           = "mx"     [ ":" domain-spec ] [ dual-cidr-length ]
PTR          = "ptr"    [ ":" domain-spec ]
IP4          = "ip4"      ":" ip4-network   [ ip4-cidr-length ]
IP6          = "ip6"      ":" ip6-network   [ ip6-cidr-length ]
exists       = "exists"   ":" domain-spec

extension    = name [ ":" macro-string ]

ip4-network  = as in [RFC2373] [15], e.g. 192.0.2.0
ip6-network  = as in [RFC2373] [15], e.g. 12AB:0:0:CD30

domain-spec  = domain-name / macro-string
domain-name  = domain-part *( "." domain-part ) [ "." ]
domain-part  = as defined in [RFC1034]
   
dual-cidr-length = [ ip4-cidr-length ] [ "/" ip6-cidr-length ]
ip4-cidr-length  = "/" 1*DIGIT
ip6-cidr-length  = "/" 1*DIGIT

macro-string = *( macro-char / VCHAR )
macro-char   = ( "%{" ALPHA transformer *delimiter "}" )
                   / "%%" / "%_" / "%-"
transformer  = [ *DIGIT ] [ "r" ]
name        = alpha *( alpha / digit / "-" / "_" / "." )
delimiter   = "." / "-" / "+" / "," / "/" / "_" / "="
    
