R = {r(m,dm)| dm not equal to 0 for all m}


R = {(4,1), (5,-1)}


R = {(3, 2), (5, -2)}


RI = 1;


D = RI - S; # compute displacement


newS = get_next_arrival(); # subroutine called*
m = minimum (minimum (window), minimum (buffer));


RI = m;
newS = new sequence from arriving stream;
newE = smallest sequence number in TW;
S = first sequence number in window;
E = first sequence number in EW;


k = first sequence number in EW; # k is a temporary variable.


k = first sequence number in EW;
B = number of occupied slots in buffer;
newS = get_next_arrival(); # subroutine called*
newS = new sequence from arriving stream;
DT = BT = 4.


IPDV = Delay(SrcNum)-Delay(SrcNum-1)..."


