





AAA Working Group                                         Pat R. Calhoun
Internet-Draft                                      Black Storm Networks
Category: Standards Track                                 William Bulley
<draft-ietf-aaa-diameter-nasreq-08.txt>              Merit Network, Inc.
                                                         Allan C. Rubens
                                                       Tut Systems, Inc.
                                                               Jeff Haag
                                                               Glen Zorn
                                                     Cisco Systems, Inc.
                                                           November 2001



                      Diameter NASREQ Application



Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.  Internet-Drafts are working
   documents of the Internet Engineering Task Force (IETF), its areas,
   and its working groups.  Note that other groups may also distribute
   working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at:

      http://www.ietf.org/ietf/1id-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at:

      http://www.ietf.org/shadow.html.

   This document is an individual contribution for consideration by the
   AAA Working Group of the Internet Engineering Task Force.  Comments
   should be submitted to the diameter@diameter.org mailing list.

   Distribution of this memo is unlimited.

   Copyright   (C) The Internet Society 2001.  All Rights Reserved.






Calhoun et al.              expires May 2002                    [Page 1]





Internet-Draft                                             November 2001


Abstract

   This document describes the Diameter application that is used for AAA
   in a PPP/SLIP Dial-Up and Terminal Server Access environment.  This
   application, combined with the base protocol, satisfies the
   requirements defined in the NASREQ AAA criteria specification and the
   ROAMOPS AAA Criteria specification.

   Given that it is expected that initial deployments of the Diameter
   protocol in a dial-up environment will include legacy systems, this
   application was carefully designed to ease the burden of servers that
   must perform protocol conversion between RADIUS and Diameter.  This
   is achieved by re-using the RADIUS address space, eliminating the
   need to perform attribute lookups.


Table of Contents

      1.0  Introduction
            1.1  Requirements language
            1.2  Advertising application support
      2.0  Supported AVPs
            2.1  Diameter AVPs
                  2.1.1  NAS-Filter-Rule AVP
                  2.1.2  NAS-Session-Key AVP
                  2.1.3  NAS-Key-Direction AVP
                  2.1.4  NAS-Key-Type AVP
                  2.1.5  NAS-Key-Data AVP
                  2.1.6  NAS-Key-Binding AVP
                  2.1.7  NAS-Key-Lifetime AVP
                  2.1.8  NAS-IV AVP
            2.2  Legacy RADIUS Attributes
                  2.2.1  NAS-IP-Address AVP
                  2.2.2  NAS-Identifier AVP
                  2.2.3  State AVP
      3.0  Legacy RADIUS Authentication Support
            3.1  Command-Codes Values
                  3.1.1  AA-Request (AAR) Command
                        3.1.1.1  User-Password AVP
                        3.1.1.2  CHAP-Auth AVP
                        3.1.1.3  CHAP-Ident AVP
                        3.1.1.4  CHAP-Algorithm AVP
                        3.1.1.5  CHAP-Response AVP
                        3.1.1.6  CHAP-Challenge AVP
                        3.1.1.7  ARAP-Password AVP
                  3.1.2  AA-Answer (AAA) Command
                        3.1.2.1  ARAP-Challenge-Response AVP
                        3.1.2.2  Password-Retry AVP



Calhoun et al.              expires May 2002                    [Page 2]





Internet-Draft                                             November 2001


                        3.1.2.3  Prompt AVP
            3.2  Reply-Message AVP
      4.0  Extensible Authentication Protocol Support
            4.1  Alternative Uses
            4.2  Command-Codes Values
                  4.2.1  Diameter-EAP-Request (DER) Command
                  4.2.2  Diameter-EAP-Answer (DEA) Command
            4.3  EAP-Payload AVP
      5.0  Diameter Session Termination
      6.0  Call and Session Information
            6.1  NAS-Port AVP
            6.2  Filter-Id AVP
            6.3  Callback-Number AVP
            6.4  Callback-Id AVP
            6.5  Idle-Timeout AVP
            6.6  Called-Station-Id AVP
            6.7  Calling-Station-Id AVP
            6.8  NAS-Port-Type AVP
            6.9  Port-Limit AVP
            6.10 Connect-Info AVP
      7.0  Service Specific Authorization AVPs
            7.1  Service-Type AVP
            7.2  Framed Access Authorization AVPs
                  7.2.1  Framed-Protocol AVP
                  7.2.2  Framed-Routing AVP
                  7.2.3  Framed-MTU AVP
                  7.2.4  Framed-Compression AVP
                  7.2.5  IP Access
                        7.2.5.1  Framed-IP-Address AVP
                        7.2.5.2  Framed-IP-Netmask AVP
                        7.2.5.3  Framed-IP-Route AVP
                        7.2.5.4  Framed-Interface-Id AVP
                        7.2.5.5  Framed-IPv6-Prefix AVP
                        7.2.5.6  Framed-IPv6-Route AVP
                        7.2.5.7  Framed-IPv6-Pool AVP
                  7.2.6  IPX Access
                  7.2.6.1  Framed-IPX-Network AVP
                  7.2.7  Appletalk Access
                        7.2.7.1  Framed-AppleTalk-Link AVP
                        7.2.7.2  Framed-AppleTalk-Network AVP
                        7.2.7.3  Framed-AppleTalk-Zone AVP
                  7.2.8  ARAP Access
                        7.2.8.1  ARAP-Features AVP
                        7.2.8.2  ARAP-Zone-Access AVP
                        7.2.8.3  ARAP-Security AVP
                        7.2.8.4  ARAP-Security-Data AVP
            7.3  Non-Framed Access Authorization AVPs
                  7.3.1  Login-IP-Host AVP



Calhoun et al.              expires May 2002                    [Page 3]





Internet-Draft                                             November 2001


                  7.3.2  Login-Service AVP
                  7.3.3  TCP Services
                        7.3.3.1  Login-TCP-Port AVP
                  7.3.4  LAT Services
                        7.3.4.1  Login-LAT-Service AVP
                        7.3.4.2  Login-LAT-Node AVP
                        7.3.4.3  Login-LAT-Group AVP
                        7.3.4.4  Login-LAT-Port AVP
            7.4  Tunneling AVP
                        7.4.1  Tunnel-Type AVP
                        7.4.2  Tunnel-Medium-Type AVP
                        7.4.3  Tunnel-Client-Endpoint AVP
                        7.4.4  Tunnel-Server-Endpoint AVP
                        7.4.5  Tunnel-Password AVP
                        7.4.6  Tunnel-Private-Group-ID AVP
                        7.4.7  Tunnel-Assignment-ID AVP
                        7.4.8  Tunnel-Preference AVP
                        7.4.9  Tunnel-Client-Auth-ID AVP
                        7.4.10 Tunnel-Server-Auth-ID AVP
      8.0  Accounting Considerations
            8.1  Accounting-Input-Extended-Octets AVP
            8.2  Accounting-Output-Extended-Octets AVP
            8.3  Accounting-Session-Time AVP
            8.4  Accounting-Input-Extended-Packets AVP
            8.5  Accounting-Output-Extended-Packets AVP
            8.6  Accounting-Authentication-Type AVP
            8.7  Acct-Tunnel-Connection AVP
            8.8  Acct-Tunnel-Packets-Lost AVP
            8.9  Accounting-EAP-Auth-Method AVP
      9.0  RADIUS/Diameter Protocol Interactions
            9.1  RADIUS request forwarded as Diameter request
            9.2  Diameter request forwarded as RADIUS request
      10.0  AVP Occurrence Table
            10.1  NASREQ Command AVP Table
            10.2  Accounting AVP Table
                  10.2.1  Framed Access
                  10.2.2  Non-Framed Access
      11.0  IANA Considerations
            11.1  Command Codes
            11.2  AVP Codes
            11.3  Application Identifier
            11.4  NAS-Key-Binding AVP Values
            11.5  NAS-Key-Direction AVP Values
            11.6  NAS-Key-Type AVP Values
            11.7  CHAP-Algorithm AVP Values
      12.0  Security Considerations
      13.0  References
      14.0  Acknowledgements



Calhoun et al.              expires May 2002                    [Page 4]





Internet-Draft                                             November 2001


      15.0  Authors' Addresses
      16.0  Full Copyright Statement
      17.0  Expiration Date


1.0  Introduction

   This document describes the Diameter application that is used for AAA
   in a PPP/SLIP Dial-Up and Terminal Server Access environment.  This
   application, combined with the base protocol [2], satisfies the
   requirements defined in the NASREQ AAA criteria specification [24]
   and the ROAMOPS AAA Criteria specification [4].

   This document is divided into three main sections. The first section
   defines the Diameter Command-Codes and AVPs that are needed to
   support legacy authentication protocols, those that are typically
   supported by RADIUS [1] servers. The second section defines the
   Command-Codes and AVPs necessary for a Diameter node to support PPP's
   Extensible Authentication Protocol (EAP) [25].  The third section
   contains the Authorization AVPs that are needed for the various
   services offered by a NAS, such as PPP dial-in, terminal server and
   tunneling applications, such as L2TP [16].

   Given that it is expected that initial deployments of the Diameter
   protocol in a dial-up environment will include legacy systems, this
   application was carefully designed to ease the burden of servers that
   must perform protocol conversion between RADIUS and Diameter.  This
   is achieved by re-using the RADIUS address space, eliminating the
   need to perform attribute lookups.


1.1  Requirements language

   In this document, the key words "MAY", "MUST", "MUST NOT",
   "optional", "recommended", "SHOULD", and "SHOULD NOT", are to be
   interpreted as described in [12].


1.2  Advertising application support

   Diameter nodes conforming to this specification MAY advertise support
   by including the value of one (1) in the Auth-Application-Id or the
   Acct-Application-Id AVP of the Capabilities-Exchange-Request and
   Capabilities-Exchange-Answer command [2].


2.0  Supported AVPs




Calhoun et al.              expires May 2002                    [Page 5]





Internet-Draft                                             November 2001


   This section lists all of the Diameter AVPs and the legacy RADIUS
   attributes supported by this application.


2.1  Diameter AVPs

   This section will define all of the AVPs that are not backward
   compatible with the RADIUS protocol [1]. A Diameter message that
   includes one of these AVPs MAY cause interoperability issues should
   the request traverse a AAA node that only supports the RADIUS
   protocol. However, the Diameter protocol SHOULD NOT be hampered from
   future developments due to the existing installed base.

   The following table describes the Diameter AVPs defined in the NASREQ
   application, their AVP Code values, types, possible flag values and
   whether the AVP MAY be encrypted.

   Due to space constraints, the short form IPFiltrRule is used to
   represent IPFilterRule.

                                            +---------------------+
                                            |    AVP Flag rules   |
                                            |----+-----+----+-----|----+
                   AVP  Section             |    |     |SHLD| MUST|MAY |
   Attribute Name  Code Defined  Value Type |MUST| MAY | NOT|  NOT|Encr|
   -----------------------------------------|----+-----+----+-----|----|
   EAP-Payload      402  4.3     OctetString| M  |  P  |    |  V  | Y  |
   NAS-Filter-Rule  400  2.1.1   IPFiltrRule| M  |  P  |    |  V  | Y  |
   NAS-Key-Binding  404  2.1.6   Enumerated | M  |  P  |    |  V  | Y  |
   NAS-Key-Data     405  2.1.5   OctetString| M  |  P  |    |  V  | N  |
   NAS-Key-         406  2.1.3   Enumerated | M  |  P  |    |  V  | N  |
      Direction                             |    |     |    |     |    |
   NAS-Key-Type     407  2.1.4   Enumerated | M  |  P  |    |  V  | N  |
   NAS-Key-Lifetime 409  2.1.7   Unsigned32 | M  |  P  |    |  V  | N  |
   NAS-IV           410  2.1.8   OctetString| M  |  P  |    |  V  | N  |
   NAS-Session-Key  408  2.1.2   Grouped    | M  |  P  |    |  V  | Y  |
   Tunneling        403  7.4     Grouped    | M  |  P  |    |  V  | N  |


2.1.1  NAS-Filter-Rule AVP

   The NAS-Filter-Rule AVP (AVP Code 400) is of type IPFilterRule, and
   provides filter rules that need to be configured on the NAS for the
   user. One or more such AVPs MAY be present in an authorization
   response.


2.1.2  NAS-Session-Key AVP



Calhoun et al.              expires May 2002                    [Page 6]





Internet-Draft                                             November 2001


   The NAS-Session-Key AVP (AVP Code 408) is of type Grouped, and
   contains a session key distributed from Diameter servers to clients.
   The keys MAY be used for integrity and/or confidentiality protection
   between the NAS and the user. The keys MAY be distributed to the user
   as part of an EAP authentication exchange. Its Data field has the
   following ABNF grammar:

      NAS-Session-Key ::= < AVP Header: 408 >
                          { NAS-Key-Direction }
                          { NAS-Key-Type }
                          { NAS-Key }
                          { NAS-Key-Data }
                          [ NAS-Key-Binding ]
                          [ NAS-Key-Lifetime ]
                          [ NAS-IV ]
                        * [ AVP ]

   If strong authentication and confidentiality of the session keys is
   required, it is recommended that the CMS security application [13] be
   used to protect the NAS-Session-Key AVP.

   The NAS-Session-Key AVP MAY appear zero or more times in the AAA and
   DEA messages. When more than one NAS-Session-Key AVP is present in a
   message, either the NAS-Key-Type or the NAS-Key-Direction AVPs MUST
   have different values. Otherwise, the AVPs would conflict with each
   other.

   If the optional NAS-Key-Lifetime AVP (see section 2.1.7, below) is
   not present, then the lifetime of the NAS-Session-Key AVP is found in
   the Authorization-Lifetime AVP. If a re-authorization request is
   received prior to the expiration of the lifetime, new keys will need
   to be established.


2.1.3  NAS-Key-Direction AVP

   The NAS-Key-Direction AVP (AVP Code 406) is of type Enumerated, and
   specifies the direction that the traffic is to be protected with the
   key. The following values are supported:

      BIDIRECTIONAL              1
         The key is used in both directions

      UPLINK                     2
         The key is used for traffic from the user

      DOWNLINK                   3
         The key is used for traffic sent to user



Calhoun et al.              expires May 2002                    [Page 7]





Internet-Draft                                             November 2001


2.1.4  NAS-Key-Type AVP

   The NAS-Key-Type AVP (AVP Code 407) is of type Enumerated, and
   specifies how the key is to be used. The following values are
   supported:

      CIPHER_KEY                 1
         The key is used to encrypt data

      INTEGRITY_KEY              2
         The key is used to authenticate the data

      MASTER_CIPHER_KEY          3
         The master cipher is used to derive further cipher keys

      MASTER_INTEGRITY_KEY       4
         The master integrity is used to derive further integrity keys

      MASTER_KEY                 5
         The master can be used to derive any type of keys, but is not
         guaranteed to be useful for any particular crypto system.
         Additional processing will be required, and is not specified in
         this document.


2.1.5  NAS-Key-Data AVP

   The NAS-Key-Data AVP (AVP Code 405) is of type OctetString and
   contains the session key to be used between the user and the access
   device.


2.1.6  NAS-Key-Binding AVP

   The NAS-Key-Binding AVP (AVP Code 404) is of type Enumerated, and
   specifies the purpose for the key. A Diameter client MAY include this
   AVP in a request to specify to the Diameter server the type of key it
   desires. Responses that include the NAS-Session-Key AVP MUST include
   this AVP which is used to specify the type of key found in the MAS-
   Key-Data AVP. The following values are supported:

      DES                        1
         The key created is used to secure links using DES

      3DES                       2
         The key created is used to secure links using Triple DES

      RC4-40                     3



Calhoun et al.              expires May 2002                    [Page 8]





Internet-Draft                                             November 2001


         The key created is used to secure links using RC4 using 40-bit
         keys

      RC4-128                    4
         The key created is used to secure links using RC4 with 128-bit
         keys


2.1.7  NAS-Key-Lifetime AVP

   The NAS-Key-Lifetime AVP (AVP Code 409) is of type Unsigned32 and
   represents the period of time (in seconds) for which the session key
   is valid.  The session key MUST NOT be used if the lifetime has
   expired; if the key lifetime expires while the session to which it
   applies is still active, either the session key MUST be changed or
   the or the session MUST be terminated.


2.1.8  NAS-IV AVP

   The NAS-IV AVP (AVP Code 410) is of type OctetString.  Its contents
   MAY be used as an initialization vector (IV) by cryptographic
   algorithms (e.g., block ciphers).


2.2  Legacy RADIUS Attributes

   The Diameter protocol reserves the first 255 AVP identifiers for
   "legacy RADIUS" support. The following table contains the RADIUS
   attributes supported by this Diameter application, their AVP code
   values, types, possible flag values and whether the AVP MAY be
   encrypted. RADIUS attributes not listed are not supported by the
   Diameter protocol.

   Due to space constraints, the short form DiamIdent is used to
   represent DiameterIdentity.















Calhoun et al.              expires May 2002                    [Page 9]





Internet-Draft                                             November 2001


                                            +---------------------+
                                            |    AVP Flag rules   |
                                            |----+-----+----+-----|----+
                   AVP  Section             |    |     |SHLD| MUST|MAY |
   Attribute Name  Code Defined  Value Type |MUST| MAY | NOT|  NOT|Encr|
   -----------------------------------------|----+-----+----+-----|----|
   Accounting-       45  8.6     Unsigned32 | M  |  P  |    |  V  | Y  |
     Authentication-Type                    |    |     |    |     |    |
   Accounting-EAP-  401  8.9     Enumerated | M  |  P  |    |  V  | Y  |
     Auth-Method                            |    |     |    |     |    |
   Accounting-Input- 42  8.1     Unsigned64 | M  |  P  |    |  V  | Y  |
     Extended-Octets                        |    |     |    |     |    |
   Accounting-Input- 47  8.4     Unsigned64 | M  |  P  |    |  V  | Y  |
     Extended-Packets                       |    |     |    |     |    |
   Accounting-       43  8.2     Unsigned64 | M  |  P  |    |  V  | Y  |
     Output-Extended-Octets                 |    |     |    |     |    |
   Accounting-       48  8.5     Unsigned64 | M  |  P  |    |  V  | Y  |
     Output-Extended-Packets                |    |     |    |     |    |
   Accounting-       46  8.3     Unsigned32 | M  |  P  |    |  V  | Y  |
     Session-Time                           |    |     |    |     |    |
   Acct-Tunnel-      68  8.7     OctetString| M  |  P  |    |  V  | Y  |
     Connection                             |    |     |    |     |    |
   Acct-Tunnel-      86  8.8     Unsigned32 | M  |  P  |    |  V  | Y  |
     Packets-Lost                           |    |     |    |     |    |
   ARAP-Challenge-   84  3.1.2.1 OctetString| M  |  P  |    |  V  | Y  |
     Response                               |    |     |    |     |    |
   ARAP-Features     71  7.2.8.1 OctetString| M  |  P  |    |  V  | Y  |
   ARAP-Password     70  3.1.1.7 OctetString| M  |  P  |    |  V  | Y  |
   ARAP-Security     73  7.2.8.3 Unsigned32 | M  |  P  |    |  V  | Y  |
   ARAP-Security-    74  7.2.8.4 OctetString| M  |  P  |    |  V  | Y  |
     Data                                   |    |     |    |     |    |
   ARAP-Zone-Access  72  7.2.8.2 Enumerated | M  |  P  |    |  V  | Y  |
   Callback-Id       20  6.4     UTF8String | M  |  P  |    |  V  | Y  |
   Callback-Number   19  6.3     UTF8String | M  |  P  |    |  V  | Y  |
   Called-Station-Id 30  6.6     UTF8String | M  |  P  |    |  V  | Y  |
   Calling-Station-  31  6.7     UTF8String | M  |  P  |    |  V  | Y  |
     Id                                     |    |     |    |     |    |
   CHAP-Auth        409  3.1.1.2 Grouped    | M  |  P  |    |  V  | Y  |
   CHAP-Algorithm   412  3.1.1.4 Enumerated | M  |  P  |    |  V  | Y  |
   CHAP-Challenge    60  3.1.1.6 OctetString| M  |  P  |    |  V  | Y  |
   CHAP-Ident       410  3.1.1.3 OctetString| M  |  P  |    |  V  | Y  |
   CHAP-Response    411  3.1.1.5 OctetString| M  |  P  |    |  V  | Y  |
   Connect-Info      77  6.10    UTF8String | M  |  P  |    |  V  | Y  |
   Filter-Id         11  6.2     UTF8String | M  |  P  |    |  V  | Y  |
   Framed-Appletalk- 37  7.2.7.1 Unsigned32 | M  |  P  |    |  V  | Y  |
     Link                                   |    |     |    |     |    |
   Framed-Appletalk- 38  7.2.7.2 Unsigned32 | M  |  P  |    |  V  | Y  |
     Network                                |    |     |    |     |    |



Calhoun et al.              expires May 2002                   [Page 10]





Internet-Draft                                             November 2001


                                            +---------------------+
                                            |    AVP Flag rules   |
                                            |----+-----+----+-----|----+
                   AVP  Section             |    |     |SHLD| MUST|MAY |
   Attribute Name  Code Defined  Value Type |MUST| MAY | NOT|  NOT|Encr|
   -----------------------------------------|----+-----+----+-----|----|
   Framed-Appletalk- 39  7.2.7.3 OctetString| M  |  P  |    |  V  | Y  |
     Zone                                   |    |     |    |     |    |
   Framed-           13  7.2.4   Enumerated | M  |  P  |    |  V  | Y  |
     Compression                            |    |     |    |     |    |
   Framed-           96  7.2.5.4 Unsigned64 | M  |  P  |    |  V  | Y  |
     Interface-Id                           |    |     |    |     |    |
   Framed-IPv6-Pool 100  7.2.5.7 UTF8String | M  |  P  |    |  V  | Y  |
   Framed-IPv6-      97  7.2.5.5 IPAddress  | M  |  P  |    |  V  | Y  |
     Prefix                                 |    |     |    |     |    |
   Framed-IPv6-      99  7.2.5.6 UTF8String | M  |  P  |    |  V  | Y  |
     Route                                  |    |     |    |     |    |
   Framed-IP-Address  8  7.2.5.1 IPAddress  | M  |  P  |    |  V  | Y  |
   Framed-IP-Netmask  9  7.2.5.2 IPAddress  | M  |  P  |    |  V  | Y  |
   Framed-IP-Route   22  7.2.5.3 UTF8String | M  |  P  |    |  V  | Y  |
   Framed-IPX-       23  7.2.6.1 UTF8String | M  |  P  |    |  V  | Y  |
     Network                                |    |     |    |     |    |
   Framed-MTU        12  7.2.3   Unsigned32 | M  |  P  |    |  V  | Y  |
   Framed-Protocol    7  7.2.1   Enumerated | M  |  P  |    |  V  | Y  |
   Framed-Routing    10  7.2.2   Enumerated | M  |  P  |    |  V  | Y  |
   Idle-Timeout      28  6.5     Unsigned32 | M  |  P  |    |  V  | Y  |
   Login-IP-Host     14  7.3.1   IPAddress  | M  |  P  |    |  V  | Y  |
   Login-LAT-Group   36  7.3.4.3 OctetString| M  |  P  |    |  V  | Y  |
   Login-LAT-Node    35  7.3.4.2 OctetString| M  |  P  |    |  V  | Y  |
   Login-LAT-Port    63  7.3.4.4 OctetString| M  |  P  |    |  V  | Y  |
   Login-LAT-Service 34  7.3.4.1 OctetString| M  |  P  |    |  V  | Y  |
   Login-Service     15  7.3.2   Enumerated | M  |  P  |    |  V  | Y  |
   Login-TCP-Port    16  7.3.3.1 Unsigned32 | M  |  P  |    |  V  | Y  |
   NAS-Identifier    32  2.2.2   DiamIdent  | M  |  P  |    |  V  | Y  |
   NAS-IP-Address     4  2.2.1   IPAddress  | M  |  P  |    |  V  | Y  |
   NAS-Port           5  6.1     Unsigned32 | M  |  P  |    |  V  | Y  |
   NAS-Port-Type     61  6.8     Unsigned32 | M  |  P  |    |  V  | Y  |
   Password-Retry    75  3.1.2.2 Unsigned32 | M  |  P  |    |  V  | Y  |
   Port-Limit        62  6.9     Unsigned32 | M  |  P  |    |  V  | Y  |
   Prompt            76  3.1.2.3 Enumerated | M  |  P  |    |  V  | Y  |
   Reply-Message     18  3.2     UTF8String | M  |  P  |    |  V  | Y  |
   Service-Type       6  7.1     Enumerated | M  |  P  |    |  V  | Y  |
   State             24  2.2.3   OctetString| M  |  P  |    |  V  | Y  |
   Tunnel-           82  7.4.7   OctetString| M  |  P  |    |  V  | Y  |
     Assignment-Id                          |    |     |    |     |    |
   Tunnel-Client-    90  7.4.9   Unsigned32 | M  |  P  |    |  V  | Y  |
     Auth-ID                                |    |     |    |     |    |




Calhoun et al.              expires May 2002                   [Page 11]





Internet-Draft                                             November 2001


                                            +---------------------+
                                            |    AVP Flag rules   |
                                            |----+-----+----+-----|----+
                   AVP  Section             |    |     |SHLD| MUST|MAY |
   Attribute Name  Code Defined  Value Type |MUST| MAY | NOT|  NOT|Encr|
   -----------------------------------------|----+-----+----+-----|----|
   Tunnel-Client-    66  7.4.3   UTF8String | M  |  P  |    |  V  | Y  |
     Endpoint                               |    |     |    |     |    |
   Tunnel-Medium-    65  7.4.2   Enumerated | M  |  P  |    |  V  | Y  |
     Type                                   |    |     |    |     |    |
   Tunnel-Password   69  7.4.5   OctetString| M  |  P  |    |  V  | Y  |
   Tunnel-Preference 83  7.4.8   Unsigned32 | M  |  P  |    |  V  | Y  |
   Tunnel-Private-   81  7.4.6   UTF8String | M  |  P  |    |  V  | Y  |
     Group-ID                               |    |     |    |     |    |
   Tunnel-Server-    91  7.4.10  OctetString| M  |  P  |    |  V  | Y  |
     Auth-ID                                |    |     |    |     |    |
   Tunnel-Server-    67  7.4.4   UTF8String | M  |  P  |    |  V  | Y  |
     Endpoint                               |    |     |    |     |    |
   Tunnel-Type       64  7.4.1   Enumerated | M  |  P  |    |  V  | Y  |
   User-Password      2  3.1.1.1 OctetString| M  |  P  |    |  V  | Y  |

   The AVPs defined in this section SHOULD only used when a
   Diameter/RADIUS gateway function is invoked, and are not used in the
   Diameter protocol.


2.2.1  NAS-IP-Address AVP

   The NAS-IP-Address AVP (AVP Code 4) [1] is of type IPAddress, and
   contains the IP Address of the NAS providing service to the user.
   When this AVP is present, the Origin-Host AVP DOES NOT represent the
   NAS providing service to the user. Note that this AVP SHOULD only
   added by a RADIUS/Diameter protocol gateway (see Section 9.0).


2.2.2  NAS-Identifier AVP

   The NAS-Identifier AVP (AVP Code 32) [1] is of type DiameterIdentity,
   and contains the Identity of the NAS providing service to the user.
   When this AVP is present, the Origin-Host AVP DOES NOT represent the
   NAS providing service to the user. Note that this AVP SHOULD only
   added by a RADIUS/Diameter protocol gateway (see Section 9.0).


2.2.3  State AVP

   The State AVP (AVP Code 24) is of type OctetString and is used to
   transmit the contents of the RADIUS State attribute, and no



Calhoun et al.              expires May 2002                   [Page 12]





Internet-Draft                                             November 2001


   interpretation of the  contents should be made.  Note that this AVP
   SHOULD only added by a RADIUS/Diameter protocol gateway (see Section
   9.0).


3.0  Legacy RADIUS Authentication Support

   This section defines the new Command-Code [2] values required to
   support the legacy authentication protocols (i.e. PAP, CHAP), as well
   as the AVPs that are necessary to carry the authentication
   information in the Diameter protocol. The functionality defined here
   provides a RADIUS-like AAA service, over a more reliable and secure
   transport, as defined in the base protocol [2].

   Unlike the RADIUS protocol [1], the Diameter protocol does not
   require authentication information to be contained in a request from
   the client. Therefore, it is possible to send a request for
   authorization only. The type of service depends upon the Auth-
   Request-Type AVP. This difference MAY cause operational issues in
   environments that need RADIUS interoperability, and it MAY be
   necessary that protocol conversion gateways add some authentication
   information when transmitting to a RADIUS server.

   The Diameter protocol allows for users to be periodically re-
   authenticated and/or re-authorized. In such instances, the Session-Id
   AVP in the AAR message MUST be the same as the one present in the
   original authentication/authorization message. A Diameter server
   informs the NAS of the authorized session lifetime via the Session-
   Timeout AVP [1].

   A NAS MUST re-authenticate and/or authorize after the period provided
   by the server. Furthermore, it is possible for Diameter servers to
   issue an unsolicited re-authentication and/or re-authorization by
   issuing an Re-Auth-Request message to the NAS. Upon receipt of such a
   message, the NAS is instructed to issue a request to re-authenticate
   and/or re-authorize the client.


3.1  Command-Codes Values

   This section defines new Command-Code [2] values that MUST be
   supported by all Diameter implementations that conform to this
   specification. The following Command Codes are defined in this
   section:







Calhoun et al.              expires May 2002                   [Page 13]





Internet-Draft                                             November 2001


      Command-Name             Abbrev.    Code       Reference
      --------------------------------------------------------
      AA-Answer                 AAA       265          3.1.2
      AA-Request                AAR       265          3.1.1


3.1.1  AA-Request (AAR) Command

   The AA-Request message (AAR), indicated by the Command-Code field set
   to 265 and the 'R' bit set in the Command Flags field, is used in
   order to request authentication and/or authorization for a given PPP
   user. The type of request is identified through the Auth-Request-Type
   AVP, and the default mode is both authentication and authorization.

   If Authentication is requested the User-Name attribute SHOULD be
   present, as well as any additional authentication AVPs that would
   carry the password information. A request for authorization only
   SHOULD include the information from which the authorization will be
   performed, such as the User-Name, or DNIS and ANI AVPs. Certain
   networks MAY use different AVPs for authorization purposes. A request
   for authorization will include some AVPs defined in sections 2.0, 6.0
   and 7.0.

   It is possible for a single session to be authorized only first, then
   followed by an authentication request. However, the inverse SHOULD
   NOT be permitted.

   This AA-Request message MAY be the result of a multi-round
   authentication exchange, which occurs when the AAA is received with
   the Result-Code AVP set to DIAMETER_MULTI_ROUND_AUTH. A subsequent
   AAR message SHOULD be sent, with the User-Password AVP that includes
   the user's response to the prompt, and MUST include any State AVPs
   that were present in the AAA.

   Message Format
















Calhoun et al.              expires May 2002                   [Page 14]





Internet-Draft                                             November 2001


      <AA-Request> ::= < Diameter Header: 265, REQ, PXY >
                       < Session-Id >
                       { Auth-Application-Id }
                       { Origin-Host }
                       { Origin-Realm }
                       { Destination-Realm }
                       { Auth-Request-Type }
                       { Service-Type }
                       { NAS-IP-Address }
                       { NAS-Port }
                       [ Origin-State-Id ]
                       [ Destination-Host ]
                       [ NAS-Identifier ]
                       [ NAS-Port-Type ]
                       [ Port-Limit ]
                       [ User-Name ]
                       [ User-Password ]
                       [ Idle-Timeout ]
                       [ State ]
                       [ Authorization-Lifetime ]
                       [ Auth-Grace-Period ]
                       [ Auth-Session-State ]
                       [ Session-Timeout ]
                       [ NAS-Key-Binding ]
                       [ Callback-Number ]
                       [ Called-Station-Id ]
                       [ Calling-Station-Id ]
                       [ Connect-Info ]
                       [ CHAP-Auth ]
                       [ CHAP-Challenge ]
                     * [ Framed-Compression ]
                       [ Framed-Interface-Id ]
                     * [ Framed-IPv6-Prefix ]
                       [ Framed-IPv6-Pool ]
                     * [ Framed-IPv6-Route ]
                       [ Framed-IP-Address ]
                       [ Framed-IP-Netmask ]
                       [ Framed-Protocol ]
                       [ Framed-Routing ]
                       [ ARAP-Password ]
                       [ ARAP-Security ]
                     * [ ARAP-Security-Data ]
                     * [ Login-IP-Host ]
                       [ Login-LAT-Group ]
                       [ Login-LAT-Node ]
                       [ Login-LAT-Port ]
                       [ Login-LAT-Service ]
                     * [ Tunneling ]



Calhoun et al.              expires May 2002                   [Page 15]





Internet-Draft                                             November 2001


                     * [ AVP ]
                     * [ Proxy-Info ]
                     * [ Route-Record ]


3.1.1.1  User-Password AVP

   The User-Password AVP (AVP Code 2) is of type OctetString and
   contains the password of the user to be authenticated, or the user's
   input in a multi-round authentication exchange.

   The User-Password AVP MUST be encrypted using the methods described
   in [13], or where [13] isn't applied, the whole DIAMETER message flow
   MUST be encrypted using IPsec and/or TLS as described in [2].  Unless
   this AVP is used for one-time passwords, the User-Password AVP SHOULD
   NOT be used in non-trusted proxy environments.

   The clear-text password (prior to encryption) MUST NOT be longer than
   128 bytes in length.


3.1.1.2  CHAP-Auth AVP

   The CHAP-Auth AVP (AVP Code 409) is of type Grouped and contains the
   information necessary to authenticate a user using the PPP Challenge-
   Handshake Authentication Protocol (CHAP) [6]. If the CHAP-Auth AVP is
   found in a message, the CHAP-Challenge AVP (see section 3.1.1.6) MUST
   be present as well. The AVP containing the CHAP response depends upon
   the value of the CHAP-Algorithm AVP (see section 3.1.1.4 for more
   info). Its Data field has the following ABNF grammar:

      CHAP-Auth  ::= < AVP Header: 409 >
                     { CHAP-Algorithm }
                     { CHAP-Ident }
                     [ CHAP-Response ]
                     [ AVP ]


3.1.1.3  CHAP-Ident AVP

   The CHAP-Ident AVP (AVP Code 410) is of type OctetString and contains
   the one octet CHAP Identifier used in the computation of the CHAP
   response [6].


3.1.1.4  CHAP-Algorithm AVP

   The CHAP-Algorithm AVP (AVP Code 412) is of type Enumerated and



Calhoun et al.              expires May 2002                   [Page 16]





Internet-Draft                                             November 2001


   contains the algorithm identifier used in the computation of the CHAP
   response [6]. The following values are currently supported:

      CHAP with MD5       5
         The CHAP response is computed using the procedure decribed in
         [6].  The CHAP-Response AVP MUST be present in the CHAP-Auth
         AVP.


3.1.1.5  CHAP-Response AVP

   The CHAP-Response AVP (AVP Code 411) is of type OctetString and
   contains the 16 octet authentication data provided by the user in
   response to the CHAP challenge [16]. The actual computation of the
   CHAP response can be found in [6].


3.1.1.6  CHAP-Challenge AVP

   The CHAP-Challenge AVP (AVP Code 60) is of type OctetString and
   contains the CHAP Challenge sent by the NAS to a PPP Challenge-
   Handshake Authentication Protocol (CHAP) [6] user.


3.1.1.7  ARAP-Password AVP

   The ARAP-Password AVP (AVP Code 70) is of type OctetString and is
   only present when the Framed-Protocol AVP (see Section 7.2.1) is
   included in the message and is set to ARAP. This AVP MUST NOT be
   present if either the User-Password or the CHAP-Auth AVP is present.
   See [32] for more information on the contents of this AVP.


3.1.2  AA-Answer (AAA) Command

   The AA-Answer (AAA) message, indicated by the Command-Code field set
   to 265 and the 'R' bit cleared in the Command Flags field, is sent in
   response to the AA-Request message. If authorization was requested, a
   successful response will include the authorization AVPs appropriate
   for the service being provided, as defined in section 2.0, 6.0 and
   7.0

   For authentication exchanges that require more than a single round
   trip, the server MUST set the Result-Code AVP to
   DIAMETER_MULTI_ROUND_AUTH. An AAA message with this result code MAY
   include one or more Reply-Message and MAY include zero or one State
   AVPs.  When possible, authentication mechanisms that include more
   than a single authentication round trip SHOULD use EAP (see section



Calhoun et al.              expires May 2002                   [Page 17]





Internet-Draft                                             November 2001


   4.0)

   If the Reply-Message AVP was present, the access device SHOULD
   display the text message to the user, and MUST prompt the user for a
   response.  If the access device is unable to prompt the user for a
   new response, which could be achieved via PAP, it MUST treat this
   answer as an error, and deny access.

   Message Format

      <AA-Answer> ::= < Diameter Header: 265, PXY >
                      < Session-Id >
                      { Auth-Application-Id }
                      { Auth-Request-Type }
                      { Result-Code }
                      { Origin-Host }
                      { Origin-Realm }
                      { Service-Type }
                      [ User-Name ]
                      [ Error-Message ]
                      [ Error-Reporting-Host ]
                      [ Idle-Timeout ]
                      [ Authorization-Lifetime ]
                      [ Auth-Grace-Period ]
                      [ Auth-Session-State ]
                      [ Re-Auth-Request-Type ]
                      [ Session-Timeout ]
                      [ State ]
                    * [ Reply-Message ]
                      [ Origin-State-Id ]
                    * [ Filter-Id ]
                    * [ NAS-Session-Key ]
                      [ Password-Retry ]
                      [ Prompt ]
                      [ ARAP-Challenge-Response ]
                      [ ARAP-Features ]
                      [ ARAP-Zone-Access ]
                      [ Callback-Id ]
                      [ Callback-Number ]
                      [ Framed-Appletalk-Link ]
                    * [ Framed-Appletalk-Network ]
                      [ Framed-Appletalk-Zone ]
                    * [ Framed-Compression ]
                      [ Framed-Interface-Id ]
                    * [ Framed-IPv6-Prefix ]
                      [ Framed-IPv6-Pool ]
                    * [ Framed-IPv6-Route ]




Calhoun et al.              expires May 2002                   [Page 18]





Internet-Draft                                             November 2001


                      [ Framed-IP-Address ]
                      [ Framed-IP-Netmask ]
                    * [ Login-IP-Host ]
                      [ Login-LAT-Group ]
                      [ Login-LAT-Node ]
                      [ Login-LAT-Port ]
                      [ Login-LAT-Service ]
                    * [ Login-Service ]
                    * [ Login-TCP-Port ]
                    * [ NAS-Filter-Rule ]
                    * [ Tunneling ]
                    * [ Redirect-Host ]
                      [ Redirect-Host-Usage ]
                      [ Redirect-Max-Cache-Time ]
                    * [ AVP ]
                    * [ Proxy-Info ]


3.1.2.1  ARAP-Challenge-Response AVP

   The ARAP-Challenge-Response AVP (AVP Code 84) is of type OctetString
   and is only present when the Framed-Protocol AVP (see Section 7.2.1)
   is included in the message and is set to ARAP. This AVP contains an 8
   octet response to the dial-in client's challenge. The RADIUS server
   calculates this value by taking the dial-in client's challenge from
   the high order 8 octets of the ARAP-Password AVP and performing DES
   encryption on this value with the authenticating user's password as
   the key. If the user's password is less than 8 octets in length, the
   password is padded at the end with NULL octets to a length of 8
   before using it as a key.


3.1.2.2  Password-Retry AVP

   The Password-Retry AVP (AVP Code 75) is of type Unsigned32 and MAY be
   included in the AA-Answer if the Result-Code indicates an
   authentication failure. The value of this AVP indicates how many
   authentication attempts a user may be permitted before being
   disconnected. This AVP is primarily intended for use when the Framed-
   Protocol AVP (see Section 7.2.1) is set to ARAP.


3.1.2.3  Prompt AVP

   The Prompt AVP (AVP Code 76) is of type Enumerated, and MAY be
   present in the AA-Answer message. When present, it is used by the NAS
   to determine whether the user's response, when entered, should be
   echoed.



Calhoun et al.              expires May 2002                   [Page 19]





Internet-Draft                                             November 2001


   The supported values are listed in [34].


3.2  Reply-Message AVP

   The Reply-Message AVP (AVP Code 18) is of type UTF8String, and
   contains text which MAY be displayed to the user.  When used in an
   AA-Answer message with a successful Result-Code AVP it indicates the
   success message. When found in the same message with a Result-Code
   other than Diameter-SUCCESS it contains the failure message.

   The Reply-Message AVP MAY indicate a dialog message to prompt the
   user before another AA-Request attempt. When used in an AA-Answer, it
   MAY indicate a dialog message to prompt the user for a response.

   Multiple Reply-Message's MAY be included and if any are displayed,
   they MUST be displayed in the same order as they appear in the
   message.


4.0  Extensible Authentication Protocol Support

   The Extensible Authentication Protocol (EAP), described in [25],
   provides a standard mechanism for support of extensible
   authentication methods. Through the use of EAP, support for a number
   of authentication schemes may be added, including smart and token
   cards, Kerberos, Public Key, One Time Passwords, and others.

   This section describes the Command-Codes values and AVPs that are
   required for an EAP payload to be encapsulated within the Diameter
   protocol. Since authentication occurs between the EAP client and its
   home Diameter server, end-to-end authentication is achieved, reducing
   the possibility for fraudulent authentication, such as replay and
   man-in-the-middle attacks. End-to-end authentication also provides
   for mutual (bi-directional) authentication, which is not possible
   with PAP and CHAP in a roaming PPP environment.

   The EAP conversation between the authenticating peer and the access
   device begins with the initiation of EAP within a link layer, such as
   PPP or 802.1x. Once EAP has been initiated, the access device will
   typically send to the Diameter server a Diameter-EAP-Request message
   with a NULL EAP-Payload AVP, signifying an EAP-Start. The Port number
   and the identity of the access device (e.g. Origin-Host or NAS-
   Identifier) MUST be included in the Diameter-EAP-Request message.

   If the Diameter home server supports EAP, it MUST respond with a
   Diameter-EAP-Answer message containing an EAP-Payload AVP that
   includes an encapsulated EAP payload [25], and the Result-Code AVP



Calhoun et al.              expires May 2002                   [Page 20]





Internet-Draft                                             November 2001


   set to DIAMETER_MULTI_ROUND_AUTH, signifying that a subsequent
   request is expected. The EAP payload is forwarded by the access
   device to the EAP client.

   The initial Diameter-EAP-Answer in a multi-round exchange normally
   includes an EAP-Request/Identity, requesting the EAP client to
   identify itself. Upon receipt of the EAP client's EAP-Response [25],
   the access device will then issue a second Diameter-EAP-Request
   message, with the client's EAP payload encapsulated within the EAP-
   Payload AVP.

   A preferred approach is for the access device to issue the EAP-
   Request/Identity message to the EAP client, and forward the EAP-
   Response/Identity packet, encapsulated within the EAP-Payload AVP, as
   a Diameter-EAP-Request to the Diameter server. This alternative
   reduces the number of Diameter message round trips, and is compatible
   with roaming environments, since the Destination-Realm is needed by
   Diameter agents for routing purposes. Note that this alternative
   cannot be universally employed, as there are circumstances where a
   user's identity is not needed (such as when authorization occurs
   based on a calling or called phone number).

   The conversation continues until the Diameter server sends a
   Diameter-EAP-Answer with a Result-Code AVP indicating success or
   failure, and an optional EAP-Payload. The Result-Code AVP is used by
   the access device to determine whether service is to be provided to
   the EAP client. The access device MUST NOT rely on the contents of
   the optional EAP-Payload to determine whether service is to be
   provided.

   A Diameter-EAP-Answer message containing an EAP-Payload of type EAP-
   Success or EAP-Failure MUST NOT have the Result-Code AVP set to
   DIAMETER_MULTI_ROUND_AUTH.

   If authorization was requested, a successful Diameter-EAP-Answer MUST
   also include the appropriate authorization AVPs required for the
   service requested (see sections 2.0, 6.0 and 7.0). Diameter-EAP-
   Answer messages whose Result-Code AVP is set to
   DIAMETER_MULTI_ROUND_AUTH MAY include authorization AVPs.

   Unless the access device interprets the EAP-Response/Identity packet
   returned by the authenticating peer, it will not have access to the
   user's identity. Therefore, the Diameter Server SHOULD return the
   user's identity by inserting it in the User-Name attribute of
   subsequent Diameter-EAP-Answer packets. Without the user's identity,
   the Session-Id AVP MAY be used for accounting and billing, however
   operationally this MAY be very difficult to manage.




Calhoun et al.              expires May 2002                   [Page 21]





Internet-Draft                                             November 2001


   A home Diameter server MAY request EAP re-authentication by issuing
   the Re-Auth-Request [2] message to the Diameter client.

   Should an EAP authentication session be interrupted due to a home
   server failure, the session MAY be directed to an alternate server,
   but the authentication session will have to be restarted from the
   beginning.

   If a response is received with the Result-Code set to
   DIAMETER_COMMAND_UNSUPPORTED [2], it is an indication that the
   Diameter server in the home realm does not support EAP. If possible,
   the access device MAY attempt to negotiate another authentication
   protocol, such as PAP or CHAP. An access device SHOULD be cautious
   when determining whether a less secure authentication protocol will
   be used, since this could be a result of a bidding down attack.


4.1  Alternative uses

   Currently the conversation between the backend authentication server
   and the Diameter server is proprietary because of lack of
   standardization. In order to increase standardization and provide
   interoperability between Diameter vendors and backend security
   vendors, it is recommended that Diameter-encapsulated EAP be used for
   this conversation.

   This has the advantage of allowing the Diameter server to support EAP
   without the need for authentication-specific code within the Diameter
   server. Authentication-specific code can then reside on a backend
   authentication server instead.

   In the case where Diameter-encapsulated EAP is used in a conversation
   between a Diameter server and a backend authentication server, the
   latter will typically return an Diameter-EAP-Answer/EAP-Payload/EAP-
   Success message without inclusion of the expected authorization AVPs
   required in a successful response. This means that the Diameter
   server MUST add these attributes prior to sending an Diameter-EAP-
   Answer/EAP-Payload/EAP-Success message to the access device.


4.2  Command-Codes Values

   This section defines new Command-Code [2] values that MUST be
   supported by all Diameter implementations conforming to this
   specification. The following Command Codes are defined in this
   section:





Calhoun et al.              expires May 2002                   [Page 22]





Internet-Draft                                             November 2001


      Command-Name             Abbrev.    Code       Reference
      --------------------------------------------------------
      Diameter-EAP-Answer       DEA       268          4.2.2
      Diameter-EAP-Request      DER       268          4.2.1



4.2.1  Diameter-EAP-Request (DER) Command

   The Diameter-EAP-Request (DER) command, indicated by the Command-Code
   field set to 268 and the 'R' bit set in the Command Flags field, is
   sent by a Diameter client to a Diameter server and conveys an EAP-
   Response [25] from the EAP client. The Diameter-EAP-Request MUST
   contain one EAP-Payload AVP, which contains the actual EAP payload.
   An EAP-Payload AVP with no data MAY be sent to the Diameter server to
   initiate an EAP authentication session.

   The DER message MAY be the result of a multi-round authentication
   exchange, which occurs when the DEA is received with the Result-Code
   AVP set to DIAMETER_MULTI_ROUND_AUTH. A subsequent DER message MUST
   include any State AVPs that were present in the DEA. For re-
   authentication, it is recommended that the Identity request be
   skipped in order to reduce the number of authentication round trips.
   This is only possible when the user's identity is already known by
   the home Diameter server.


   Message Format

      <Diameter-EAP-Request> ::= < Diameter Header: 268, REQ, PXY >
                                 < Session-Id >
                                 { Auth-Application-Id }
                                 { Origin-Host }
                                 { Origin-Realm }
                                 { Destination-Realm }
                                 { Auth-Request-Type }
                                 { Service-Type }
                                 { NAS-IP-Address }
                                 { NAS-Port }
                                 { EAP-Payload }
                                 [ Destination-Host ]
                                 [ Authorization-Lifetime ]
                                 [ Auth-Grace-Period ]
                                 [ Auth-Session-State ]
                                 [ Session-Timeout ]
                                 [ User-Name ]





Calhoun et al.              expires May 2002                   [Page 23]





Internet-Draft                                             November 2001


                                 [ Idle-Timeout ]
                                 [ NAS-Identifier ]
                                 [ NAS-Port-Type ]
                                 [ Port-Limit ]
                                 [ State ]
                                 [ Origin-State-Id ]
                                 [ NAS-Key-Binding ]
                                 [ Callback-Number ]
                                 [ Called-Station-Id ]
                                 [ Calling-Station-Id ]
                                 [ Connect-Info ]
                               * [ Framed-Compression ]
                                 [ Framed-Interface-Id ]
                               * [ Framed-IPv6-Prefix ]
                                 [ Framed-IPv6-Pool ]
                               * [ Framed-IPv6-Route ]
                                 [ Framed-IP-Address ]
                                 [ Framed-IP-Netmask ]
                                 [ Framed-Protocol ]
                                 [ Framed-Routing ]
                                 [ Tunneling ]
                               * [ AVP ]
                               * [ Proxy-Info ]
                               * [ Route-Record ]


4.2.2  Diameter-EAP-Answer (DEA) Command

   The Diameter-EAP-Answer (DEA) message, indicated by the Command-Code
   field set to 268 and the 'R' bit cleared in the Command Flags field,
   is sent by the Diameter server to the client for one of the following
   reasons:

      1) The message is part of a multi-round authentication exchange,
         and the server is expecting a subsequent Diameter-EAP-Request.
         This is indicated by setting the Result-Code to
         DIAMETER_MULTI_ROUND_AUTH, and MAY include zero or more State
         AVPs.
      2) the EAP client has been successfully authenticated and
         authorized, in which case the message MUST include the Result-
         Code AVP indicating success, and SHOULD include an EAP-Payload
         of type EAP-Success.  This event MUST cause the access device
         to provide service to the EAP client.
      3) The EAP client has not been successfully authenticated and/or
         authorized, and the Result-Code AVP is set to indicate failure.
         This message SHOULD include an EAP-Payload, but this AVP is not
         used to determine whether service is to be provided.




Calhoun et al.              expires May 2002                   [Page 24]





Internet-Draft                                             November 2001


   If the message from the Diameter client included a request for
   authorization, a successful response MUST include the authorization
   AVPs that are relevant to the service being provided.

   Message Format

      <Diameter-EAP-Answer> ::= < Diameter Header: 268, PXY >
                                < Session-Id >
                                { Auth-Application-Id }
                                { Result-Code }
                                { Origin-Host }
                                { Origin-Realm }
                                { Auth-Request-Type }
                                { Service-Type }
                                [ Error-Reporting-Host ]
                                [ EAP-Payload ]
                                [ User-Name ]
                                [ Idle-Timeout ]
                                [ Authorization-Lifetime ]
                                [ Auth-Grace-Period ]
                                [ Auth-Session-State ]
                                [ Re-Auth-Request-Type ]
                                [ Session-Timeout ]
                                [ Origin-State-Id ]
                              * [ NAS-Session-Key ]
                                [ Callback-Id ]
                                [ Callback-Number ]
                                [ Framed-Appletalk-Link ]
                              * [ Framed-Appletalk-Network ]
                                [ Framed-Appletalk-Zone ]
                              * [ Framed-Compression ]
                                [ Framed-Interface-Id ]
                              * [ Framed-IPv6-Prefix ]
                                [ Framed-IPv6-Pool ]
                              * [ Framed-IPv6-Route ]
                                [ Framed-IP-Address ]
                                [ Framed-IP-Netmask ]
                              * [ Framed-IP-Route ]
                                [ Framed-IPX-Network ]
                                [ Framed-MTU ]
                              * [ NAS-Filter-Rule ]
                              * [ Tunneling ]
                              * [ Redirect-Host ]
                                [ Redirect-Host-Usage ]
                                [ Redirect-Max-Cache-Time ]
                              * [ AVP ]
                              * [ Proxy-Info ]




Calhoun et al.              expires May 2002                   [Page 25]





Internet-Draft                                             November 2001


4.3  EAP-Payload AVP

   The EAP-Payload AVP (AVP Code 402) is of type OctetString and is used
   to encapsulate the actual EAP payload [25] that is being exchanged
   between the EAP client and the home Diameter server.


5.0  Diameter Session Termination

   When a Network Access Server (NAS) receives an indication that a
   user's session is being disconnected (e.g. LCP Terminate is
   received), the NAS MUST issue a Session-Termination-Request (STR) [2]
   to its Diameter Server. This will ensure that any resources
   maintained on the servers is freed appropriately.

   Further, a NAS that receives a Abort-Session-Request (ASR) [2] MUST
   issue an STR if the session requested is active, and disconnect the
   PPP (or tunneling) session.


6.0  Call and Session Information

   This section contains the authorization AVPs that are needed to
   identify call and session information, and allows the server to set
   constraints on a session.


6.1  NAS-Port AVP

   The NAS-Port AVP (AVP Code 5) is of type Unsigned32 and contains the
   physical port number of the NAS which is authenticating the user, and
   is normally only present in an authentication and/or authorization
   request. Note that this is using "port" in its sense of a physical
   connection on the NAS, not in the sense of a TCP or UDP port number.
   Either NAS-Port or NAS-Port-Type (AVP Code 61) or both SHOULD be
   present in the request, if the NAS differentiates among its ports.


6.2  Filter-Id AVP

   The Filter-Id AVP (AVP Code 11) is of type UTF8String, and contains
   the name of the filter list for this user. Zero or more Filter-Id
   AVPs MAY be sent in an authorization answer.

   Identifying a filter list by name allows the filter to be used on
   different NASes without regard to filter-list implementation details.
   However, this AVP is not roaming friendly since filter naming differs
   from one service provider to another.



Calhoun et al.              expires May 2002                   [Page 26]





Internet-Draft                                             November 2001


   In non-RADIUS environments, it is strongly recommended that the NAS-
   Filter-Rule AVP be used instead.


6.3  Callback-Number AVP

   The Callback-Number AVP (AVP Code 19) is of type UTF8String, and
   contains a dialing string to be used for callback.  It MAY be used in
   an authentication and/or authorization request as a hint to the
   server that a Callback service is desired, but the server is not
   required to honor the hint in the corresponding response.

   The codification of the range of allowed usage of this field is
   outside the scope of this specification.


6.4  Callback-Id AVP

   The Callback-Id AVP (AVP Code 20) is of type UTF8String, and contains
   the name of a place to be called, to be interpreted by the NAS. This
   AVP MAY be present in an authentication and/or authorization
   response.

   This AVP is not roaming friendly since it assumes that the Callback-
   Id is configured on the NAS. It is therefore preferable to use the
   Callback-Number AVP instead.


6.5  Idle-Timeout AVP

   The Idle-Timeout AVP (AVP Code 28) is of type Unsigned32 and sets the
   maximum number of consecutive seconds of idle connection allowed to
   the user before termination of the session or prompt. It MAY be used
   in an authentication and/or authorization request (or challenge) as a
   hint to the server that an idle timeout is desired, but the server is
   not required to honor the hint in the corresponding response.


6.6  Called-Station-Id AVP

   The Called-Station-Id AVP (AVP Code 30) is of type UTF8String, and
   allows the NAS to send in the request the phone number that the user
   called, using Dialed Number Identification (DNIS) or a similar
   technology. Note that this may be different from the phone number the
   call comes in on. It SHOULD only be present in authentication and/or
   authorization requests.

   If the Auth-Request-Type AVP is set to authorization-only and the



Calhoun et al.              expires May 2002                   [Page 27]





Internet-Draft                                             November 2001


   User-Name AVP is absent, the Diameter Server MAY perform
   authorization based on this field. This can be used by a NAS to
   request whether a call should be answered based on the DNIS.

   The codification of the range of allowed usage of this field is
   outside the scope of this specification.


6.7  Calling-Station-Id AVP

   The Calling-Station-Id AVP (AVP Code 31) is of type UTF8String, and
   allows the NAS to send in the request the phone number that the call
   came from, using Automatic Number Identification (ANI) or a similar
   technology. It SHOULD only be present in authentication and/or
   authorization requests.


   If the Auth-Request-Type AVP is set to authorization-only and the
   User-Name AVP is absent, the Diameter Server MAY perform
   authorization based on this field. This can be used by a NAS to
   request whether a call should be answered based on the ANI.

   The codification of the range of allowed usage of this field is
   outside the scope of this specification.


6.8  NAS-Port-Type AVP

   The NAS-Port-Type AVP (AVP Code 61) is of type Unsigned32 and
   contains the type of the physical port of the NAS which is
   authenticating the user. It can be used instead of or in addition to
   the NAS-Port (5) AVP.  This AVP SHOULD only be used in authentication
   and/or authorization requests. This AVP MAY be combined with the NAS-
   Port AVP to assist in differentiating its ports.

   The supported values are defined in [34].


6.9  Port-Limit AVP

   The Port-Limit AVP (AVP Code 62) is of type Unsigned32 and sets the
   maximum number of ports to be provided to the user by the NAS.  It
   MAY be used in an authentication and/or authorization request as a
   hint to the server that multilink PPP [9] service is desired, but the
   server is not required to honor the hint in the corresponding
   response.





Calhoun et al.              expires May 2002                   [Page 28]





Internet-Draft                                             November 2001


6.10  Connect-Info AVP

   The Connect-Info AVP (AVP Code 77) is of type UTF8String, and is sent
   in the AA-Request message, and indicates the nature of the user's
   connection. The connection speed SHOULD be included at the beginning
   of the first Connect-Info AVP in the message.  If the transmit and
   receive connection speeds differ, they may both be included in the
   first AVP with the transmit speed first (the speed the NAS modem
   transmits at), a slash (/), the receive speed, then optionally other
   information.


7.0  Service Specific Authorization AVPs

   This section contains the RADIUS authorization AVPs that are
   supported in the Diameter protocol. The Service-Type AVP MUST be
   present in all messages, and based on the value of the Service-Type
   AVP, additional AVPs defined in sections 7.2, 7.3 and 7.4 MAY be
   present.


7.1  Service-Type AVP

   The Service-Type AVP (AVP Code 6) is of type Enumerated and contains
   the type of service the user has requested, or the type of service to
   be provided.  One such AVP MAY be present in an authentication and/or
   authorization request or response. A NAS is not required to implement
   all of these service types, and MUST treat unknown or unsupported
   Service-Types as though a response with a Result-Code other than
   Diameter-SUCCESS had been received instead.

   When used in a request, the Service-Type AVP SHOULD be considered to
   be a hint to the server that the NAS has reason to believe the user
   would prefer the kind of service indicated, but the server is not
   required to honor the hint. The following values have been defined
   for the Service-Type AVP:

   The complete list of defined values can be found in [1] and [34]. The
   following values are extracted from [1], and are listed here since
   they are further qualified:

      Login               1
         The user should be connected to a host. The message MAY include
         additional AVPs defined in section 7.3.

      Framed              2
         A Framed Protocol should be started for the User, such as PPP
         or SLIP. The message MAY include additional AVPs defined in



Calhoun et al.              expires May 2002                   [Page 29]





Internet-Draft                                             November 2001


         section 7.2, or 7.4 for tunneling services.

      Callback Login      3
         The user should be disconnected and called back, then connected
         to a host. The message MAY include additional AVPs defined in
         section 7.3.

      Callback Framed     4
         The user should be disconnected and called back, then a Framed
         Protocol should be started for the User, such as PPP or SLIP.
         The message MAY include additional AVPs defined in section 7.2,
         or 7.4 for tunneling services.


7.2  Framed Access Authorization AVPs

   This section contains the authorization AVPs that are necessary to
   support framed access, such as PPP, SLIP, etc. AVPs defined in this
   section MAY be present in a message if the Service-Type AVP was set
   to "Framed" or "Callback Framed".


7.2.1  Framed-Protocol AVP

   The Framed-Protocol AVP (AVP Code 7) is of type Enumerated and
   contains the framing to be used for framed access. This AVP MAY be
   present in both requests and responses. The supported values are
   listed in [34].


7.2.2  Framed-Routing AVP

   The Framed-Routing AVP (AVP Code 10) is of type Enumerated and
   contains the routing method for the user, when the user is a router
   to a network.  This AVP SHOULD only be present in authorization
   responses. The supported values are listed in [34].


7.2.3  Framed-MTU AVP

   The Framed-MTU AVP (AVP Code 12) is of type Unsigned32 and contains
   the Maximum Transmission Unit to be configured for the user, when it
   is not negotiated by some other means (such as PPP). This AVP SHOULD
   only be present in authorization responses. The MTU value MUST be
   between the range of 64 and 65535.


7.2.4  Framed-Compression AVP



Calhoun et al.              expires May 2002                   [Page 30]





Internet-Draft                                             November 2001


   The Framed-Compression AVP (AVP Code 13) is of type Enumerated and
   contains the compression protocol to be used for the link. It MAY be
   used in an authorization request as a hint to the server that a
   specific compression type is desired, but the server is not required
   to honor the hint in the corresponding response.

   More than one compression protocol AVP MAY be sent. It is the
   responsibility of the NAS to apply the proper compression protocol to
   appropriate link traffic.

   The supported values are listed in [34].


7.2.5  IP Access

   The AVPs defined in this section are used when the user requests, or
   is being granted, access to IP. They are only present if the Framed-
   Protocol AVP (see Section 7.2.1) is set to PPP, SLIP, Gandalf
   proprietarySingleLink/MultiLink protocol, or X.75 Synchronous.


7.2.5.1  Framed-IP-Address AVP

   The Framed-IP-Address AVP (AVP Code 8) is of type IPAddress and
   contains the address to be configured for the user. It MAY be used in
   an authorization request as a hint to the server that a specific
   address is desired, but the server is not required to honor the hint
   in the corresponding response.

   Two addresses have special significance; 0xFFFFFFFF and 0xFFFFFFFE.
   The value 0xFFFFFFFF indicates that the NAS should allow the user to
   select an address (e.g. Negotiated). The value 0xFFFFFFFE indicates
   that the NAS should select an address for the user (e.g. Assigned
   from a pool of addresses kept by the NAS).


7.2.5.2  Framed-IP-Netmask AVP

   The Framed-IP-Netmask AVP (AVP Code 9) is of type IPAddress and
   contains the IP netmask to be configured for the user when the user
   is a router to a network.  It MAY be used in an authorization request
   as a hint to the server that a specific netmask is desired, but the
   server is not required to honor the hint in the corresponding
   response. This AVP MUST be present in a response if the request
   included this AVP with a value of 0xFFFFFFFF.


7.2.5.3  Framed-IP-Route AVP



Calhoun et al.              expires May 2002                   [Page 31]





Internet-Draft                                             November 2001


   The Framed-IP-Route AVP (AVP Code 22) is of type UTF8String, and
   contains the routing information to be configured for the user on the
   NAS. Zero or more such AVPs MAY be present in an authorization
   response.

   The string MUST contain a destination prefix in dotted quad form
   optionally followed by a slash and a decimal length specifier stating
   how many high order bits of the prefix should be used. That is
   followed by a space, a gateway address in dotted quad form, a space,
   and one or more metrics separated by spaces. For example,
   "192.168.1.0/24 192.168.1.1 1".

   The length specifier may be omitted in which case it should default
   to 8 bits for class A prefixes, 16 bits for class B prefixes, and 24
   bits for class C prefixes. For example, "192.168.1.0 192.168.1.1 1".

   Whenever the gateway address is specified as "0.0.0.0" the IP address
   of the user SHOULD be used as the gateway address.


7.2.5.4  Framed-Interface-Id AVP

   The Framed-Interface-Id AVP (AVP Code 96) is of type Unsigned64 and
   contains the IPv6 interface identifier to be configured for the user.
   It MAY be used in authorization requests as a hint to the server that
   a specific interface id is desired, but the server is not required to
   honor the hint in the corresponding response.


7.2.5.5  Framed-IPv6-Prefix AVP

   The Framed-IPv6-Prefix AVP (AVP Code 97) is of type IPAddress and
   contains the IPv6 prefix to be configured for the user. One or more
   AVPs MAY be used in authorization requests as a hint to the server
   that a specific IPv6 prefixes are desired, but the server is not
   required to honor the hint in the corresponding response.


7.2.5.6  Framed-IPv6-Route AVP

   The Framed-IPv6-Route AVP (AVP Code 99) is of type UTF8String, and
   contains the routing information to be configured for the user on the
   NAS. Zero or more such AVPs MAY be present in an authorization
   response.

   The string MUST contain an IPv6 address prefix followed by a slash
   and a decimal length specifier stating how many high order bits of
   the prefix should be used. That is followed by a space, a gateway



Calhoun et al.              expires May 2002                   [Page 32]





Internet-Draft                                             November 2001


   address in hexadecimal notation, a space, and one or more metrics
   separated by spaces. For example:
      "2000:0:0:106::/64 2000::106:a00:20ff:fe99:a998 1".

   Whenever the gateway address is the IPv6 unspecified address the IP
   address of the user SHOULD be used as the gateway address, such as:
      "2000:0:0:106::/64 :: 1".


7.2.5.7  Framed-IPv6-Pool AVP

   The Framed-IPv6-Pool AVP (AVP Code 100) is of type UTF8String, and
   contains the name of an assigned pool that SHOULD be used to assign
   an IPv6 prefix for the user. If the access device does not support
   multiple prefix pools, it MUST ignore this AVP.


7.2.6  IPX Access

   The AVPs defined in this section are used when the user requests, or
   is being granted, access to IPX. They are only present if the Framed-
   Protocol AVP (see Section 7.2.1) is set to PPP, Xylogics proprietary
   IPX/SLIP, Gandalf proprietarySingleLink/MultiLink protocol, or X.75
   Synchronous.


7.2.6.1  Framed-IPX-Network AVP

   The Framed-IPX-Network AVP (AVP Code 23) is of type UTF8String, and
   contains the IPX Network number to be configured for the user. It MAY
   be used in an authorization request as a hint to the server that a
   specific address is desired, but the server is not required to honor
   the hint in the corresponding response.

   Two addresses have special significance; 0xFFFFFFFF and 0xFFFFFFFE.
   The value 0xFFFFFFFF indicates that the NAS should allow the user to
   select an address (e.g. Negotiated). The value 0xFFFFFFFE indicates
   that the NAS should select an address for the user (e.g. assigned
   from a pool of one or more IPX networks kept by the NAS).


7.2.7  Appletalk Access

   The AVPs defined in this section are used when the user requests, or
   is being granted, access to Appletalk. They are only present if the
   Framed-Protocol AVP (see Section 7.2.1) is set to PPP, Gandalf
   proprietary SingleLink/MultiLink protocol, or X.75 Synchronous.




Calhoun et al.              expires May 2002                   [Page 33]





Internet-Draft                                             November 2001


7.2.7.1  Framed-AppleTalk-Link AVP

   The Framed-AppleTalk-Link AVP (AVP Code 37) is of type Unsigned32 and
   contains the AppleTalk network number which should be used for the
   serial link to the user, which is another AppleTalk router. This AVP
   MUST only be present in an authorization response and is never used
   when the user is not another router.

   Despite the size of the field, values range from zero to 65535. The
   special value of zero indicates that this is an unnumbered serial
   link.  A value of one to 65535 means that the serial line between the
   NAS and the user should be assigned that value as an AppleTalk
   network number.


7.2.7.2  Framed-AppleTalk-Network AVP

   The Framed-AppleTalk-Network AVP (AVP Code 38) is of type Unsigned32
   and contains the AppleTalk Network number which the NAS should probe
   to allocate an AppleTalk node for the user.  This AVP MUST only be
   present in an authorization response and is never used when the user
   is not another router. Multiple instances of this AVP indicate that
   the NAS may probe using any of the network numbers specified.

   Despite the size of the field, values range from zero to 65535. The
   special value zero indicates that the NAS should assign a network for
   the user, using its default cable range. A value between one and
   65535 (inclusive) indicates the AppleTalk Network the NAS should
   probe to find an address for the user.


7.2.7.3  Framed-AppleTalk-Zone AVP

   The Framed-AppleTalk-Zone AVP (AVP Code 39) is of type OctetString
   and contains the AppleTalk Default Zone to be used for this user.
   This AVP MUST only be present in an authorization response. Multiple
   instances of this AVP in the same message are not allowed.

   The codification of the range of allowed usage of this field is
   outside the scope of this specification.


7.2.8  ARAP Access

   The AVPs defined in this section are used when the user requests, or
   is being granted, access to ARAP. They are only present if the
   Framed-Protocol AVP (see Section 7.2.1) is set to AppleTalk Remote
   Access Protocol (ARAP).



Calhoun et al.              expires May 2002                   [Page 34]





Internet-Draft                                             November 2001


7.2.8.1  ARAP-Features AVP

   The ARAP-Features AVP (AVP Code 71) is of type OctetString, and MAY
   be present in the AA-Accept message if the Framed-Protocol AVP is set
   to the value of ARAP. See [32] for more information of the format of
   this AVP.


7.2.8.2  ARAP-Zone-Access AVP

   The ARAP-Zone-Access AVP (AVP Code 72) is of type Enumerated, and MAY
   be present in the AA-Accept message if the Framed-Protocol AVP is set
   to the value of ARAP.

   The supported values are listed in [34], and are defined in [32].


7.2.8.3  ARAP-Security AVP

   The ARAP-Security AVP (AVP Code 73) is of type Unsigned32, and MAY be
   present in the AA-Answer message if the Framed-Protocol AVP is set to
   the value of ARAP, and the Result-Code AVP is set to
   DIAMETER_MULTI_ROUND_AUTH.  See [32] for more information of the
   format of this AVP.


7.2.8.4  ARAP-Security-Data AVP

   The ARAP-Security AVP (AVP Code 74) is of type OctetString, and MAY
   be present in the AA-Request or AA-Answer message if the Framed-
   Protocol AVP is set to the value of ARAP, and the Result-Code AVP is
   set to DIAMETER_MULTI_ROUND_AUTH. This AVP contains the security
   module challenge or response associated with the ARAP Security Module
   specified in ARAP-Security.


7.3  Non-Framed Access Authorization AVPs

   This section contains the authorization AVPs that are needed to
   support terminal server functionality. AVPs defined in this section
   MAY be present in a message if the Service-Type AVP was set to
   "Login" or "Callback Login".


7.3.1  Login-IP-Host AVP

   The Login-IP-Host AVP (AVP Code 14) is of type IPAddress and contains
   the system with which to connect the user, when the Login-Service AVP



Calhoun et al.              expires May 2002                   [Page 35]





Internet-Draft                                             November 2001


   is included. It MAY be used in an authorization request as a hint to
   the server that a specific host is desired, but the server is not
   required to honor the hint in the corresponding response.

   Two addresses have special significance; 0xFFFFFFFF and 0xFFFFFFFE.
   The value 0xFFFFFFFF indicates that the NAS SHOULD allow the user to
   select an address. The value zero indicates that the NAS SHOULD
   select a host to connect the user to.


7.3.2  Login-Service AVP

   The Login-Service AVP (AVP Code 15) is of type Enumerated and
   contains the service which should be used to connect the user to the
   login host.  This AVP SHOULD only be present in authorization
   responses.

   The supported values are listed in [34].


7.3.3  TCP Services

   The AVP described in this section MAY be present if the Login-Service
   AVP is set to Telnet, Rlogin, TCP Clear or TCP Clear Quiet.


7.3.3.1  Login-TCP-Port AVP

   The Login-TCP-Port AVP (AVP Code 16) is of type Unsigned32 and
   contains the TCP port with which the user is to be connected, when
   the Login-Service AVP is also present. This AVP SHOULD only be
   present in authorization responses. The value MUST NOT be greater
   than 65535.


7.3.4  LAT Services

   The AVP described in this section MAY be present if the Login-Service
   AVP is set to LAT.


7.3.4.1  Login-LAT-Service AVP

   The Login-LAT-Service AVP (AVP Code 34) is of type OctetString and
   contains the system with which the user is to be connected by LAT. It
   MAY be used in an authorization request as a hint to the server that
   a specific service is desired, but the server is not required to
   honor the hint in the corresponding response. This AVP MUST only be



Calhoun et al.              expires May 2002                   [Page 36]





Internet-Draft                                             November 2001


   present in the response if the Login-Service AVP states that LAT is
   desired.

   Administrators use the service attribute when dealing with clustered
   systems, such as a VAX or Alpha cluster. In such an environment
   several different time sharing hosts share the same resources (disks,
   printers, etc.), and administrators often configure each to offer
   access (service) to each of the shared resources. In this case, each
   host in the cluster advertises its services through LAT broadcasts.

   Sophisticated users often know which service providers (machines) are
   faster and tend to use a node name when initiating a LAT connection.
   Alternately, some administrators want particular users to use certain
   machines as a primitive form of load balancing (although LAT knows
   how to do load balancing itself).

   The String field contains the identity of the LAT service to use.
   The LAT Architecture allows this string to contain $ (dollar), -
   (hyphen), . (period), _ (underscore), numerics, upper and lower case
   alphabetics, and the ISO Latin-1 character set extension [8]. All LAT
   string comparisons are case insensitive.


7.3.4.2  Login-LAT-Node AVP

   The Login-LAT-Node AVP (AVP Code 35) is of type OctetString and
   contains the Node with which the user is to be automatically
   connected by LAT.  It MAY be used in an authorization request as a
   hint to the server that a specific LAT node is desired, but the
   server is not required to honor the hint in the corresponding
   response. This AVP MUST only be present in a response if the Service-
   Type AVP is set to LAT.

   The String field contains the identity of the LAT service to use.
   The LAT Architecture allows this string to contain $ (dollar), -
   (hyphen), . (period), _ (underscore), numerics, upper and lower case
   alphabetics, and the ISO Latin-1 character set extension [8]. All LAT
   string comparisons are case insensitive.


7.3.4.3  Login-LAT-Group AVP

   The Login-LAT-Group AVP (AVP Code 36) is of type OctetString and
   contains a string identifying the LAT group codes which this user is
   authorized to use. It MAY be used in an authorization request as a
   hint to the server that a specific group is desired, but the server
   is not required to honor the hint in the corresponding response. This
   AVP MUST only be present in a response if the Service-Type AVP is set



Calhoun et al.              expires May 2002                   [Page 37]





Internet-Draft                                             November 2001


   to LAT.

   LAT supports 256 different group codes, which LAT uses as a form of
   access rights. LAT encodes the group codes as a 256 bit bitmap.

   Administrators can assign one or more of the group code bits at the
   LAT service provider; it will only accept LAT connections that have
   these group codes set in the bit map. The administrators assign a
   bitmap of authorized group codes to each user; LAT gets these from
   the operating system, and uses these in its requests to the service
   providers.

   The codification of the range of allowed usage of this field is
   outside the scope of this specification.


7.3.4.4  Login-LAT-Port AVP

   The Login-LAT-Port AVP (AVP Code 63) is of type OctetString and
   contains the Port with which the user is to be connected by LAT. It
   MAY be used in an authorization request as a hint to the server that
   a specific port is desired, but the server is not required to honor
   the hint in the corresponding response. This AVP MUST only be present
   in a response if the Service-Type AVP is set to LAT.

   The String field contains the identity of the LAT service to use.
   The LAT Architecture allows this string to contain $ (dollar), -
   (hyphen), . (period), _ (underscore), numerics, upper and lower case
   alphabetics, and the ISO Latin-1 character set extension [8]. All LAT
   string comparisons are case insensitive.


7.4  Tunneling AVP

   The Tunneling AVP (AVP Code 403) is of type Grouped and contains AVPs
   used to describe a tunnel. Its Data field has the following ABNF
   grammar:

      Tunneling     ::= < AVP Header: 403 >
                        { Tunnel-Type }
                        { Tunnel-Medium-Type }
                        { Tunnel-Client-Endpoint }
                        { Tunnel-Server-Endpoint }
                        [ Tunnel-Preference ]
                        [ Tunnel-Client-Auth-ID ]
                        [ Tunnel-Server-Auth-ID ]
                        [ Tunnel-Assignment-ID ]
                        [ Tunnel-Password ]



Calhoun et al.              expires May 2002                   [Page 38]





Internet-Draft                                             November 2001


                        [ Tunnel-Private-Group-ID ]


7.4.1  Tunnel-Type AVP

   The Tunnel-Type AVP (AVP Code 64) is of type Enumerated and contains
   the tunneling protocol(s) to be used (in the case of a tunnel
   initiator) or the tunneling protocol in use (in the case of a tunnel
   terminator).  It MAY be used in an authorization request as a hint to
   the server that a specific tunnel type is desired, but the server is
   not required to honor the hint in the corresponding response.

   The Tunnel-Type SHOULD also be present in the corresponding ADIF
   Record within the Accounting-Request.

   A tunnel initiator is not required to implement any of these tunnel
   types; if a tunnel initiator receives a response that contains only
   unknown or unsupported Tunnel-Types, the tunnel initiator MUST behave
   as though a response was received with the Result-Code indicating a
   failure.

   The supported values are listed in [34].


7.4.2  Tunnel-Medium-Type AVP

   The Tunnel-Medium-Type AVP (AVP Code 65) is of type Enumerated and
   contains the transport medium to use when creating a tunnel for those
   protocols (such as L2TP) that can operate over multiple transports.
   It MAY be used in an authorization request as a hint to the server
   that a specific medium is desired, but the server is not required to
   honor the hint in the corresponding response.

   The Value field contains one of the values listed under "Address
   Family Numbers" in [10]. The value of most importance is (1) for IPv4
   and (2) for IPv6.


7.4.3  Tunnel-Client-Endpoint AVP

   The Tunnel-Client-Endpoint AVP (AVP Code 66) is of type UTF8String,
   and contains the address of the initiator end of the tunnel. It MAY
   be used in an authorization request as a hint to the server that a
   specific endpoint is desired, but the server is not required to honor
   the hint in the corresponding response.

   This AVP SHOULD be included in the ADIF Record of the corresponding
   Accounting-Request messages, in which case it indicates the address



Calhoun et al.              expires May 2002                   [Page 39]





Internet-Draft                                             November 2001


   from which the tunnel was initiated. This AVP, along with the Tunnel-
   Server-Endpoint and Session-Id AVP [2], MAY be used to provide a
   globally unique means to identify a tunnel for accounting and
   auditing purposes.

   If Tunnel-Medium-Type is IPv4 (1), then this string is either the
   fully qualified domain name (FQDN) of the tunnel client machine, or
   it is a "dotted-decimal" IP address.  Conformant implementations MUST
   support the dotted-decimal format and SHOULD support the FQDN format
   for IP addresses.

   If Tunnel-Medium-Type is IPv6 (2), then this string is either the
   FQDN of the tunnel client machine, or it is a text representation of
   the address in either the preferred or alternate form [5].
   Conformant implementations MUST support the preferred form and SHOULD
   support both the alternate text form and the FQDN format for IPv6
   addresses.

   If Tunnel-Medium-Type is neither IPv4 nor IPv6, this string is a tag
   referring to configuration data local to the Diameter client that
   describes the interface and medium-specific address to use.


7.4.4  Tunnel-Server-Endpoint AVP

   The Tunnel-Server-Endpoint AVP (AVP Code 67) is of UTF8String, and
   contains the address of the server end of the tunnel. It MAY be used
   in an authorization request as a hint to the server that a specific
   endpoint is desired, but the server is not required to honor the hint
   in the corresponding response.

   This AVP SHOULD be included in the ADIF Record of the corresponding
   Accounting-Request messages, in which case it indicates the address
   from which the tunnel was initiated. This AVP, along with the Tunnel-
   Client-Endpoint and Session-Id AVP [2], MAY be used to provide a
   globally unique means to identify a tunnel for accounting and
   auditing purposes.

   If Tunnel-Medium-Type is IPv4 (1), then this string is either the
   fully qualified domain name (FQDN) of the tunnel client machine, or
   it is a "dotted-decimal" IP address.  Conformant implementations MUST
   support the dotted-decimal format and SHOULD support the FQDN format
   for IP addresses.

   If Tunnel-Medium-Type is IPv6 (2), then this string is either the
   FQDN of the tunnel client machine, or it is a text representation of
   the address in either the preferred or alternate form [5].
   Conformant implementations MUST support the preferred form and SHOULD



Calhoun et al.              expires May 2002                   [Page 40]





Internet-Draft                                             November 2001


   support both the alternate text form and the FQDN format for IPv6
   addresses.

   If Tunnel-Medium-Type is not IPv4 or IPv6, this string is a tag
   referring to configuration data local to the Diameter client that
   describes the interface and medium-specific address to use.


7.4.5  Tunnel-Password AVP

   The Tunnel-Password AVP (AVP Code 69) is of type OctetString and may
   contain a password to be used to authenticate to a remote server.
   This AVP MUST only be present in authorization responses in an
   encrypted form, using one of the methods described in [2] and [13].


7.4.6  Tunnel-Private-Group-ID AVP

   The Tunnel-Private-Group-ID AVP (AVP Code 81) is of type UTF8String,
   and contains the group ID for a particular tunneled session. The
   Tunnel-Private-Group-ID AVP MAY be included in an authorization
   request if the tunnel initiator can pre-determine the group resulting
   from a particular connection and SHOULD be included in the
   authorization response if this tunnel session is to be treated as
   belonging to a particular private group. Private groups may be used
   to associate a tunneled session with a particular group of users.
   For example, it MAY be used to facilitate routing of unregistered IP
   addresses through a particular interface.  This value SHOULD be
   included the corresponding ADIF-Record in the Accounting-Request
   which pertain to a tunneled session.


7.4.7  Tunnel-Assignment-ID AVP

   The Tunnel-Assignment-ID AVP (AVP Code 82) is of type OctetString and
   is used to indicate to the tunnel initiator the particular tunnel to
   which a session is to be assigned.  Some tunneling protocols, such as
   PPTP [14] and L2TP, allow for sessions between the same two tunnel
   endpoints to be multiplexed over the same tunnel and also for a given
   session to utilize its own dedicated tunnel. This attribute provides
   a mechanism for Diameter to be used to inform the tunnel initiator
   (e.g.  PAC, LAC) whether to assign the session to a multiplexed
   tunnel or to a separate tunnel. Furthermore, it allows for sessions
   sharing multiplexed tunnels to be assigned to different multiplexed
   tunnels.

   A particular tunneling implementation may assign differing
   characteristics to particular tunnels.  For example, different



Calhoun et al.              expires May 2002                   [Page 41]





Internet-Draft                                             November 2001


   tunnels may be assigned different QOS parameters.  Such tunnels may
   be used to carry either individual or multiple sessions.  The Tunnel-
   Assignment-ID attribute thus allows the Diameter server to indicate
   that a particular session is to be assigned to a tunnel that provides
   an appropriate level of service.  It is expected that any QOS-related
   Diameter tunneling attributes defined in the future that accompany
   this attribute will be associated by the tunnel initiator with the ID
   given by this attribute.  In the meantime, any semantic given to a
   particular ID string is a matter left to local configuration in the
   tunnel initiator.

   The Tunnel-Assignment-ID AVP is of significance only to Diameter and
   the tunnel initiator.  The ID it specifies is intended to be of only
   local use to Diameter and the tunnel initiator. The ID assigned by
   the tunnel initiator is not conveyed to the tunnel peer.

   This attribute MAY be included in authorization responses. The tunnel
   initiator receiving this attribute MAY choose to ignore it and assign
   the session to an arbitrary multiplexed or non-multiplexed tunnel
   between the desired endpoints.  This attribute SHOULD also be
   included in the corresponding ADIF-Record in the Accounting-Request
   messages which pertain to a tunneled session.

   If a tunnel initiator supports the Tunnel-Assignment-ID AVP, then it
   should assign a session to a tunnel in the following manner:

      - If this AVP is present and a tunnel exists between the specified
        endpoints with the specified ID, then the session should be
        assigned to that tunnel.

      - If this AVP is present and no tunnel exists between the
        specified endpoints with the specified ID, then a new tunnel
        should be established for the session and the specified ID
        should be associated with the new tunnel.

      - If this AVP is not present, then the session is assigned to an
        unnamed tunnel.  If an unnamed tunnel does not yet exist between
        the specified endpoints then it is established and used for this
        and subsequent sessions established without the Tunnel-
        Assignment-ID attribute.  A tunnel initiator MUST NOT assign a
        session for which a Tunnel-Assignment-ID AVP was not specified
        to a named tunnel (i.e. one that was initiated by a session
        specifying this AVP).

   Note that the same ID may be used to name different tunnels if such
   tunnels are between different endpoints.





Calhoun et al.              expires May 2002                   [Page 42]





Internet-Draft                                             November 2001


7.4.8  Tunnel-Preference AVP

   The Tunnel-Preference AVP (AVP Code 83) is of type Unsigned32 and is
   used to identify the relative preference assigned to each tunnel when
   more than one set of tunneling AVPs is returned within separate
   Grouped-AVP AVPs. It MAY be used in an authorization request as a
   hint to the server that a specific preference is desired, but the
   server is not required to honor the hint in the corresponding
   response.

   For example, suppose that AVPs describing two tunnels are returned by
   the server, one with a Tunnel-Type of PPTP and the other with a
   Tunnel-Type of L2TP.  If the tunnel initiator supports only one of
   the Tunnel-Types returned, it will initiate a tunnel of that type.
   If, however, it supports both tunnel protocols, it SHOULD use the
   value of the Tunnel-Preference AVP to decide which tunnel should be
   started.  The tunnel having the numerically lowest value in the Value
   field of this AVP SHOULD be given the highest preference.  The values
   assigned to two or more instances of the Tunnel-Preference AVP within
   a given authorization response MAY be identical.  In this case, the
   tunnel initiator SHOULD use locally configured metrics to decide
   which set of AVPs to use.


7.4.9  Tunnel-Client-Auth-ID AVP

   The Tunnel-Client-Auth-ID AVP (AVP Code 90) is of type Unsigned32 and
   specifies the name used by the tunnel initiator during the
   authentication phase of tunnel establishment.  It MAY be used in an
   authorization request as a hint to the server that a specific
   preference is desired, but the server is not required to honor the
   hint in the corresponding response. This AVP MUST be present in the
   authorization response if an authentication name other than the
   default is desired. This AVP SHOULD be included in the corresponding
   ADIF-Record of the Accounting-Request messages which pertain to a
   tunneled session.


7.4.10  Tunnel-Server-Auth-ID AVP

   The Tunnel-Server-Auth-ID AVP (AVP Code 91) is of type OctetString
   and specifies the name used by the tunnel terminator during the
   authentication phase of tunnel establishment. It MAY be used in an
   authorization request as a hint to the server that a specific
   preference is desired, but the server is not required to honor the
   hint in the corresponding response. This AVP MUST be present in the
   authorization response if an authentication name other than the
   default is desired. This AVP SHOULD be included in the corresponding



Calhoun et al.              expires May 2002                   [Page 43]





Internet-Draft                                             November 2001


   ADIF-Record of the Accounting-Request messages which pertain to a
   tunneled session.


8.0  Accounting AVPs

   This section contains a description of the AVPs defined in this
   document that are to be included in Diameter accounting messages [2].


8.1  Accounting-Input-Extended-Octets AVP

   The Accounting-Input-Extended-Octets AVP (AVP Code 363) is of type
   Unsigned64, and contains the number of octets in IP packets received
   by the user.


8.2  Accounting-Output-Extended-Octets AVP

   The Accounting-Output-Extended-Octets AVP (AVP Code 364) is of type
   Unsigned64, and contains the number of octets in IP packets sent to
   the user.


8.3  Accounting-Session-Time AVP

   The Accounting-Session-Time AVP (AVP Code 46) is of type Unsigned32,
   and indicates the length of the current session in seconds.


8.4  Accounting-Input-Extended-Packets AVP

   The Accounting-Input-Extended-Packets (AVP Code 365) is of type
   Unsigned64, and contains the number of IP packets received by the
   user.


8.5  Accounting-Output-Extended-Packets AVP

   The Accounting-Output-Extended-Packets (AVP Code 366) is of type
   Unsigned64, and contains the number of IP packets sent to the user.


8.6  Accounting-Authentication-Type AVP

   The Accounting-Authentication-Type AVP (AVP Code 45) is of type
   Unsigned32, and specifies how the user was authenticated. The
   supported values are listed in [34].



Calhoun et al.              expires May 2002                   [Page 44]





Internet-Draft                                             November 2001


8.7  Acct-Tunnel-Connection AVP

   The Acct-Tunnel-Connection AVP (AVP Code 68) is of type OctetString,
   and contains the identifier assigned to the tunnel session. This AVP,
   along with the Tunnel-Client-Endpoint and Tunnel-Server-Endpoint
   AVPs, may be used to provide a means to uniquely identify a tunnel
   session for auditing purposes.

   The format of the identifier in this AVP depends upon the value of
   the Tunnel-Type AVP. For example, to fully identify an L2TP tunnel
   connection, the L2TP Tunnel ID and Call ID might be encoded in this
   field. The exact encoding of this field is implementation dependent.


8.8  Acct-Tunnel-Packets-Lost AVP

   The Acct-Tunnel-Packets-Lost AVP (AVP Code 86) is of type Unsigned32
   and contains the number of packets lost on a given link.


8.9  Accounting-EAP-Auth-Method AVP

   This Accounting-EAP-Auth-Method AVP (AVP Code 401) is of type
   Enumerated, and uses the EAP Type name space defined in [25].


9.0  RADIUS/Diameter Protocol Interactions

   This section describes some basic guidelines that may be used by
   servers that act as protocol gateways. Note that this document does
   not restrict implementations from creating other methods, as long as
   the bridging function doesn't break the RADIUS nor the Diameter
   protocol.

   There are essentially two different situations that must be handled;
   one where a RADIUS request is received that must be forwarded as a
   Diameter request, and the inverse. Note that this section uses two
   different terms; AVP and attribute. The former is used to signify a
   Diameter AVP, while the latter is used to signify a RADIUS attribute.


9.1  RADIUS request forwarded as Diameter request

   This section describes the actions that should be followed when a
   protocol Gateway receives a RADIUS message that is to be translated
   to a Diameter message.

   It is important to note that RADIUS servers are inherently stateless,



Calhoun et al.              expires May 2002                   [Page 45]





Internet-Draft                                             November 2001


   and this section maintains that assumption. It is quite possible for
   the RADIUS messages that comprises the session (i.e. authentication
   and accounting messages) be handled by different protocol gateways in
   the proxy network.  Therefore a RADIUS->Diameter protocol gateway
   cannot maintain session state information.

   When a protocol gateway receives a RADIUS message, the following
   steps should be taken:

      - If the NAS-IP-Address attribute is present in the RADIUS
        message, the name MUST be translated to its corresponding FQDN,
        and encoded in the Diameter message's Origin-Host AVP. If the
        NAS-Identifier attribute is present, the data can be used in the
        Origin-Host AVP.
      - The Origin-Host AVP is added with the local server's identity.
        This will ensure that the corresponding response will be
        returned to the correct gateway server. The aaa protocol
        specified in the identity would be set to "radius".
      - The Destination-Realm AVP is created from the information found
        in the RADIUS User-Name attribute.
      - If the RADIUS CHAP-Password attribute is present, the Ident and
        Data portion of the attribute are used to create the CHAP-Auth
        Grouped AVP.
      - The Gateway Server must maintain state information relevant to
        the RADIUS request, such as the Identifier field in the RADIUS
        header, any existing RADIUS Proxy-State attribute as well as the
        source IP address and port number of the UDP packet. These may
        be maintained locally in a state table, or may be saved in a
        Proxy-Info AVP.
      - If the Acct-Session-Id attribute was found in the request, the
        contents are inserted in the Acct-Session-Id AVP.
      - If the RADIUS request contained a State attribute, and the
        prefix of the data is "Diameter/", the data following the prefix
        contains the Diameter Session-Id. If no such attributes are
        present, and the RADIUS command is an Access-Request, a new
        Session-Id is created. The Session-Id is included in the
        Session-Id AVP.
      - If the RADIUS message received is an Accounting-Request, with
        the Acct-Status-Type attribute set to STOP, the local server
        MUST issue a Session-Termination-Request message once the
        Diameter Accounting-Answer has been received.
      - If the RADIUS message contains the Accounting-Input-Octets,
        Accounting-Input-Packets, Accounting-Output-Octets or
        Accounting-Output-Packets, these attributes must be converted to
        the Diameter equivalent ones. Further, if the Acct-Input-
        Gigawords or Acct-Output-Gigawords attributes are present, these
        must be used to properly compute the Diameter accounting AVPs.




Calhoun et al.              expires May 2002                   [Page 46]





Internet-Draft                                             November 2001


   The corresponding Diameter response is always guaranteed to be
   received by the same protocol gateway that translated the original
   request, due to the contents of the Origin-Host AVP in the Diameter
   request. The following steps are applied to the response message
   during the Diameter to RADIUS translation:

      - If the Diameter Command-Code is set to AA-Answer and the Result-
        Code AVP is set to DIAMETER_MULTI_ROUND_AUTH, the gateway must
        send a RADIUS Access-Challenge with the Diameter Session-Id and
        the Origin-Host AVPs encapsulated in the RADIUS State attribute,
        with the prefix "Diameter/". This is necessary in order to
        ensure that the protocol gateway that will receive the
        subsequent RADIUS Access-Request will have access to the Session
        Identifier, and be able to set the Destination-Host to the
        correct value. If the Multi-Round-Time-Out AVP is present, the
        value of the AVP MUST be inserted in the RADIUS Session-Timeout
        AVP.
      - If the Command-Code is set to AA-Answer, the Diameter Session-Id
        AVP is saved in a new RADIUS Class attribute, whose format
        consists of the string "Diameter/" followed by the Diameter
        Session Identifier. This will ensure that the subsequent
        Accounting messages, which could be received by any protocol
        gateway, would have access to the original Diameter Session
        Identifier.
      - If a Proxy-State attribute was present in the RADIUS request,
        the same attribute is added in the response. This information
        may be found in the Proxy-Info AVP, or in a local state table.
      - If state information regarding the RADIUS request was saved in a
        Proxy-Info AVP, the RADIUS Identifier and UDP IP Address and
        port number are extracted and used in issuing the RADIUS reply.


9.2  Diameter request forwarded as RADIUS request

   When a server receives a Diameter request that is to be forwarded to
   a RADIUS entity, the following steps are an example of the steps that
   may be followed:

      - The Origin-Host AVP's value is inserted in the NAS-Identifier
        attribute.
      - The following information MUST be present in the corresponding
        Diameter response, and therefore MUST be saved either in a local
        state table, or it MAY be encoded in a RADIUS Proxy-State
        attribute:
           1. Origin-Host AVP
           2. Session-Id AVP
           3. Proxy-Info AVP
           4. Route-Record AVPs (in the proper order)



Calhoun et al.              expires May 2002                   [Page 47]





Internet-Draft                                             November 2001


           5. Any other AVP that MUST be present in the response, and
              has no corresponding RADIUS attribute.
            - If the CHAP-Auth AVP is present, the Grouped AVPs are used
              to create the RADIUS CHAP-Password.
            - If the Accounting-Input-Extended-Octets, Accounting-Input-
              Extended-Packets, Accounting-Output-Extended-Octets or
              Accounting-Output-Extended-Packets AVPs are present, these
              must be translated to the corresponding RADIUS attributes.
              Further, the the Diameter AVPs do not fit within a 32-bit
              RADIUS attribute, the RADIUS Acct-Input-Gigawords and
              Acct-Output-Gigawords must be used.

   When the corresponding response is received by the gateway server,
   which is guaranteed in the RADIUS protocol, the following steps may
   be followed:

      - If the RADIUS code is set to Access-Challenge, a Diameter AA-
        Answer message is created with the Result-Code set to
        DIAMETER_MULTI_ROUND_AUTH. If the Session-Timeout AVP is present
        in the RADIUS message, its value is inserted in the Multi-Round-
        Time-Out AVP.
      - If a Proxy-Info AVP is present, extract the encoded information,
        otherwise retrieve the information from the local state table.
      - The request's Origin-Host information is added to the
        Destination-Host AVP.
      - The Session-Id information is added to the Session-Id AVP.
      - The Route-Record AVPs MUST be added to the Diameter message, in
        the same order they were present in the request.
      - If a Proxy-Info AVP was present in the request, the same AVP
        MUST be added to the response.
      - If the RADIUS State attributes are present, these attributes
        must be present in the Diameter response.
      - Any other AVPs that were saved, and MUST be present in the
        response, are added to the message.


10.0  AVP Occurrence Table

   The following tables presents the AVPs defined in this document, and
   specifies in which Diameter messages they MAY, or MAY NOT be present.
   Note that AVPs that can only be present within a Grouped AVP are not
   represented in this table.

   The table uses the following symbols:
      0      The AVP MUST NOT be present in the message.
      0+     Zero or more instances of the AVP MAY be present in the
            message.
      0-1    Zero or one instance of the AVP MAY be present in the



Calhoun et al.              expires May 2002                   [Page 48]





Internet-Draft                                             November 2001


            message.
      1     One instance of the AVP MUST be present in the message.


10.1  NASREQ Command AVP Table

   The table in this section is limited to the Command Codes defined in
   this specification.

                                 +-----------------------+
                                 |      Command-Code     |
                                 |-----+-----+-----+-----+
   Attribute Name                | AAR | AAA | DER | DEA |
   ------------------------------|-----+-----+-----+-----|
   ARAP-Challenge-Response       | 0   | 0-1 | 0   | 0-1 |
   ARAP-Features                 | 0   | 0-1 | 0   | 0-1 |
   ARAP-Password                 | 0-1 | 0   | 0   | 0   |
   ARAP-Security                 | 0-1 | 0   | 0   | 0   |
   ARAP-Security-Data            | 0+  | 0   | 0   | 0   |
   ARAP-Zone-Access              | 0   | 0-1 | 0   | 0-1 |
   Auth-Application-Id           | 1   | 1   | 1   | 1   |
   Auth-Grace-Period             | 0-1 | 0-1 | 0-1 | 0-1 |
   Auth-Session-State            | 0-1 | 0-1 | 0-1 | 0-1 |
   Authorization-Lifetime        | 0-1 | 0-1 | 0-1 | 0-1 |
   Callback-Id                   | 0   | 0-1 | 0   | 0-1 |
   Callback-Number               | 0-1 | 0-1 | 0-1 | 0-1 |
   Called-Station-Id             | 0-1 | 0   | 0-1 | 0   |
   Calling-Station-Id            | 0-1 | 0   | 0-1 | 0   |
   CHAP-Auth                     | 0-1 | 0   | 0   | 0   |
   CHAP-Challenge                | 0-1 | 0   | 0   | 0   |
   Connect-Info                  | 0-1 | 0   | 0-1 | 0   |
   Destination-Host              | 0+  | 0   | 0+  | 0   |
   Destination-Realm             | 1   | 0   | 1   | 0   |
   EAP-Payload                   | 0   | 0   | 1   | 1   |
   Error-Message                 | 0   | 0-1 | 0   | 0-1 |
   Error-Reporting-Host          | 0   | 0-1 | 0   | 0+  |
   Filter-Id                     | 0   | 0+  | 0   | 0+  |
   Framed-Appletalk-Link         | 0   | 0-1 | 0   | 0-1 |
   Framed-Appletalk-Network      | 0   | 0+  | 0   | 0+  |
   Framed-Appletalk-Zone         | 0   | 0-1 | 0   | 0-1 |
   Framed-Compression            | 0+  | 0+  | 0+  | 0+  |
   Framed-Interface-Id           | 0-1 | 0-1 | 0-1 | 0-1 |
   Framed-IPv6-Prefix            | 0+  | 0+  | 0+  | 0+  |
   Framed-IPv6-Pool              | 0-1 | 0-1 | 0-1 | 0-1 |
   Framed-IPv6-Route             | 0+  | 0+  | 0+  | 0+  |
   Framed-IP-Address             | 0-1 | 0-1 | 0-1 | 0-1 |
   Framed-IP-Netmask             | 0-1 | 0-1 | 0-1 | 0-1 |




Calhoun et al.              expires May 2002                   [Page 49]





Internet-Draft                                             November 2001


                                 +-----------------------+
                                 |      Command-Code     |
                                 |-----+-----+-----+-----+
   Attribute Name                | AAR | AAA | DER | DEA |
   ------------------------------|-----+-----+-----+-----|
   Framed-IP-Route               | 0   | 0+  | 0   | 0+  |
   Framed-IPX-Network            | 0   | 0-1 | 0   | 0-1 |
   Framed-MTU                    | 0   | 0-1 | 0   | 0-1 |
   Framed-Protocol               | 0-1 | 0   | 0-1 | 0   |
   Framed-Routing                | 0-1 | 0   | 0-1 | 0   |
   Idle-Timeout                  | 0-1 | 0-1 | 0-1 | 0-1 |
   Login-IP-Host                 | 0+  | 0+  | 0   | 0   |
   Login-LAT-Group               | 0-1 | 0-1 | 0   | 0   |
   Login-LAT-Node                | 0-1 | 0-1 | 0   | 0   |
   Login-LAT-Port                | 0-1 | 0-1 | 0   | 0   |
   Login-LAT-Service             | 0-1 | 0-1 | 0   | 0   |
   Login-Service                 | 0   | 0+  | 0   | 0   |
   Login-TCP-Port                | 0   | 0+  | 0   | 0   |
   NAS-Filter-Rule               | 0   | 0+  | 0   | 0+  |
   NAS-IP-Address                | 1   | 0   | 1   | 0   |
   NAS-Key-Binding               | 0-1 | 0   | 0-1 | 0   |
   NAS-Port                      | 1   | 0   | 1   | 0   |
   NAS-Port-Type                 | 0-1 | 0   | 0-1 | 0   |
   NAS-Session-Key               | 0   | 0+  | 0   | 0+  |
   Origin-Host                   | 1   | 1   | 1   | 1   |
   Origin-Realm                  | 1   | 1   | 1   | 1   |
   Origin-State-Id               | 0-1 | 0-1 | 0-1 | 0-1 |
   Password-Retry                | 0   | 0-1 | 0   | 0   |
   Port-Limit                    | 0-1 | 0   | 0-1 | 0   |
   Prompt                        | 0   | 0-1 | 0   | 0   |
   Proxy-Info                    | 0+  | 0+  | 0+  | 0+  |
   Redirect-Host                 | 0   | 0+  | 0   | 0+  |
   Redirect-Host-Usage           | 0   | 0-1 | 0   | 0-1 |
   Redirect-Max-Cache-Time       | 0   | 0-1 | 0   | 0-1 |
   Reply-Message                 | 0   | 0   | 0   | 0   |
   Result-Code                   | 0   | 1   | 0   | 1   |
   Re-Auth-Request-Type          | 0   | 0-1 | 0   | 0-1 |
   Route-Record                  | 0+  | 0   | 0+  | 0   |
   Service-Type                  | 1   | 1   | 1   | 1   |
   Session-Id                    | 1   | 1   | 1   | 1   |
   Session-Timeout               | 0-1 | 0-1 | 0   | 0-1 |
   State                         | 0-1 | 0-1 | 0   | 0-1 |
   Tunneling                     | 0+  | 0+  | 0+  | 0+  |
   User-Name                     | 0-1 | 0-1 | 0-1 | 0-1 |
   User-Password                 | 0-1 | 0   | 0   | 0   |


10.2  Accounting AVP Table



Calhoun et al.              expires May 2002                   [Page 50]





Internet-Draft                                             November 2001


   The tables in this section are used to represent which AVPs defined
   in this document are to be present in the Accounting messages,
   defined in [1].


   10.2.1  Framed Access

   The table in this section is used when the Service-Type specifies
   Framed Access.

                                          +-----------+
                                          |  Command  |
                                          |    Code   |
                                          |-----+-----+
   Attribute Name                         | ACR | ACA |
   ---------------------------------------|-----+-----+
   Accounting-Authentication-Type         | 1   | 0-1 |
   Accounting-EAP-Auth-Method             | 1   | 0-1 |
   Accounting-Input-Extended-Octets       | 1   | 1   |
   Accounting-Input-Extended-Packets      | 1   | 1   |
   Accounting-Output-Extended-Octets      | 1   | 1   |
   Accounting-Output-Extended-Packets     | 1   | 1   |
   Accounting-Session-Time                | 1   | 1   |
   Accounting-State                       | 0   | 0   |
   Acct-Tunnel-Connection                 | 0-1 | 0-1 |
   Acct-Tunnel-Packets-Lost               | 0-1 | 0-1 |
   Framed-AppleTalk-Link                  | 0-1 | 0-1 |
   Framed-AppleTalk-Network               | 0-1 | 0-1 |
   Framed-AppleTalk-Zone                  | 0-1 | 0-1 |
   Framed-Compression                     | 0-1 | 0-1 |
   Framed-IP-Address                      | 0-1 | 0-1 |




















Calhoun et al.              expires May 2002                   [Page 51]





Internet-Draft                                             November 2001


                                 +-----------+
                                 |  Command  |
                                 |    Code   |
                                 |-----+-----+
   Attribute Name                | ACR | ACA |
   ------------------------------|-----+-----+
   Framed-IP-Netmask             | 0-1 | 0-1 |
   Framed-IPX-Network            | 0-1 | 0-1 |
   Framed-MTU                    | 0-1 | 0-1 |
   Framed-Protocol               | 0-1 | 0-1 |
   Framed-Route                  | 0-1 | 0-1 |
   Framed-Routing                | 0-1 | 0-1 |
   Service-Type                  | 1   | 1   |
   Tunnel-Assignment-ID          | 0-1 | 0-1 |
   Tunnel-Client-Endpoint        | 0-1 | 0-1 |
   Tunnel-Medium-Type            | 0-1 | 0-1 |
   Tunnel-Private-Group-ID       | 0-1 | 0-1 |
   Tunnel-Server-Endpoint        | 0-1 | 0-1 |
   Tunnel-Type                   | 0-1 | 0-1 |
   ------------------------------|-----+-----+


   10.2.2  Non-Framed Access

   The table in this section is used when the Service-Type specifies
   Non-Framed Access.

























Calhoun et al.              expires May 2002                   [Page 52]





Internet-Draft                                             November 2001


                                          +-----------+
                                          |  Command  |
                                          |    Code   |
                                          |-----+-----+
   Attribute Name                         | ACR | ACA |
   ---------------------------------------|-----+-----+
   Accounting-Authentication-Type         | 1   | 0-1 |
   Accounting-Input-Extended-Octets       | 1   | 1   |
   Accounting-Input-Extended-Packets      | 1   | 1   |
   Accounting-Output-Extended-Octets      | 1   | 1   |
   Accounting-Output-Extended-Packets     | 1   | 1   |
   Accounting-Session-Time                | 1   | 1   |
   Accounting-State                       | 0   | 0   |
   Login-IP-Host                          | 0-1 | 0-1 |
   Login-LAT-Service                      | 0-1 | 0-1 |
   Login-LAT-Node                         | 0-1 | 0-1 |
   Login-LAT-Group                        | 0-1 | 0-1 |
   Login-LAT-Port                         | 0-1 | 0-1 |
   Login-Service                          | 0-1 | 0-1 |
   Login-TCP-Port                         | 0-1 | 0-1 |
   Service-Type                           | 1   | 1   |
   ---------------------------------------|-----+-----+


11.0  IANA Considerations

   This section contains the namespaces that have either been created in
   this specification, or the values assigned to existing namespaces
   managed by IANA.


11.1  Command Codes

   This specification assigns the values 265 and 268 from the Command
   Code namespace defined in [2].  See sections 3.1 and 4.2 for the
   assignment of the namespace in this specification.


11.2  AVP Codes

   This specification assigns the values 363-366 and 400-412 from the
   AVP Code namespace defined in [2]. See section 2.1 for the assignment
   of the namespace in this specification.

   This specification also makes use of AVPs in the 0-255 range, which
   are defined in [34].





Calhoun et al.              expires May 2002                   [Page 53]





Internet-Draft                                             November 2001


11.3  Application Identifier

   This specification assigns the value one (1) to the Application
   Identifier namespace defined in [1]. See section 1.2 for more
   information.


11.4  NAS-Key-Binding AVP Values

   As defined in Section 2.1.6, the NAS-Key-Binding AVP (AVP Code 404)
   defines the values 1-4. All remaining values, other than zero, are
   available for assignment via a Designated Expert [12].


11.5  NAS-Key-Direction AVP Values

   As defined in Section 2.1.3, the NAS-Key-Direction AVP (AVP Code 406)
   defines the values 1-3. All remaining values, other than zero, are
   available for assignment via IETF Consensus [12].


11.6  NAS-Key-Type AVP Values

   As defined in Section 2.1.4, the NAS-Key-Type AVP (AVP Code 407)
   defines the values 1-5. All remaining values, other than zero, are
   available for assignment via IETF Consensus [12].


11.7  CHAP-Algorithm AVP Values

   As defined in Section 3.1.1.4, the CHAP-Algorithm AVP (AVP Code 412)
   uses the values of the "PPP AUTHENTICATION ALGORITHMS" namespace
   defined in [6].


12.0  Security Considerations

   This document does not contain any security protocol, but does
   discuss how PPP authentication protocols can be carried within the
   Diameter protocol. The PPP authentication protocols that are
   described are PAP, CHAP and EAP.

   The use of PAP SHOULD be discouraged, since it exposes user's
   passwords to possibly non-trusted entities. PAP is also frequently
   used for use with One-Time Passwords (OTP), which does not expose any
   security risks. However, it is highly recommended that OTP be
   supported through the EAP protocol.




Calhoun et al.              expires May 2002                   [Page 54]





Internet-Draft                                             November 2001


   This document also describes how CHAP can be carried within the
   Diameter protocol, which is required for backward RADIUS
   compatibility. The CHAP protocol, as used in a RADIUS environment,
   facilitates authentication replay attacks, and therefore SHOULD NOT
   be used when EAP is available.

   This specification also defines a method by which the home Diameter
   server can create and distribute registration keys to be used to
   authenticate link layer messages (e.g. PPP ECP). The keys SHOULD be
   be protected using the methods defined in [13].


13.0  References


[1]  C. Rigney, A. Rubens, W. Simpson, S. Willens, "Remote Authentica-
     tion Dial In User Service (RADIUS)", RFC 2865, June 2000.

[2]  P. Calhoun, H. Akhtar, J. Arkko, E. Guttman, A. Rubens, "Diameter
     Base Protocol", draft-ietf-aaa-diameter-08.txt, IETF work in
     progress, November 2001.

[3]  Aboba, Beadles, "The Network Access Identifier." RFC 2486.  January
     1999.

[4]  Aboba, Zorn, "Criteria for Evaluating Roaming Protocols", RFC 2477,
     January 1999.

[5]  Hinden, R., Deering, S., "IP Version 6 Addressing Architecture",
     RFC 2373, July 1998

[6]  W. Simpson, "PPP Challenge Handshake Authentication Protocol
     (CHAP)", RFC 1994, August 1996.

[7]  Jacobson, "Compressing TCP/IP headers for low-speed serial links",
     RFC 1144, February 1990.

[8]  ISO 8859. International Standard -- Information Processing -- 8-bit
     Single-Byte Coded Graphic Character Sets -- Part 1: Latin Alphabet
     No. 1, ISO 8859-1:1987.  <URL:http://www.iso.ch/cate/d16338.html>

[9]  Sklower, Lloyd, McGregor, Carr, "The PPP Multilink Protocol (MP)",
     RFC 1717, November 1994.

[10] Reynolds, J., Postel, J., "Assigned Numbers", STD 2, RFC 1700,
     October 1994





Calhoun et al.              expires May 2002                   [Page 55]





Internet-Draft                                             November 2001


[11] G. Zorn, B. Aboba, D. Mitton, "RADIUS Accounting Modifications for
     Tunnel Protocol Support", RFC 2867, June 2000.

[12] S. Bradner, "Key words for use in RFCs to Indicate Requirement Lev-
     els", BCP 14, RFC 2119, March 1997.

[13] P. Calhoun, W. Bulley, S. Farrell, "Diameter CMS Security Applica-
     tion", draft-ietf-aaa-diameter-cms-sec-03.txt, IETF work in
     progress, November 2001.

[14] Hamzeh, K., Pall, G., Verthein, W., Taarud, J., Little, W., Zorn,
     G., "Point-to-Point Tunneling Protocol (PPTP)", RFC 2637, July 1999

[15] Valencia, A., Littlewood, M., Kolar, T., "Cisco Layer Two Forward-
     ing (Protocol) 'L2F'", RFC 2341, May 1998

[16] Townsley, W. M., Valencia, A., Rubens, A., Pall, G. S., Zorn, G.,
     Palter, B., "Layer Two Tunneling Protocol (L2TP)", RFC 2661, August
     1999

[17] Hamzeh, K., "Ascend Tunnel Management Protocol - ATMP", RFC 2107,
     February 1997

[18] Kent, S., Atkinson, R., "Security Architecture for the Internet
     Protocol", RFC 2401, November 1998

[19] Perkins, C., "IP Encapsulation within IP", RFC 2003, October 1996

[20] Perkins, C., "Minimal Encapsulation within IP", RFC 2004, October
     1996

[21] Atkinson, R., "IP Encapsulating Security Payload (ESP)", RFC 1827,
     August 1995

[22] Hanks, S., Li, T., Farinacci, D., Traina, P., "Generic Routing
     Encapsulation (GRE)", RFC 1701, October 1994

[23] Simpson, W., "IP in IP Tunneling", RFC 1853, October 1995

[24] M. Beadles, D. Mitton, "Criteria for Evaluating Network Access
     Server Protocols", RFC 3169, September 2001.

[25] L. J. Blunk, J. R. Vollbrecht, "PPP Extensible Authentication Pro-
     tocol (EAP)." RFC 2284, March 1998.

[26] G. Pall, G. Zorn, "Microsoft Point-To-Point Encryption (MPPE) Pro-
     tocol", RFC 3078, March 2001.




Calhoun et al.              expires May 2002                   [Page 56]





Internet-Draft                                             November 2001


[27] Narten, Alvestrand, "Guidelines for Writing an IANA Considerations
     Section in RFCs", BCP 26, RFC 2434, October 1998

[28] G. Zorn, D. Mitton, B. Aboba, "RADIUS Accounting Modifications for
     Tunnel Protocol Support", RFC 2867, June 2000.

[29] F. Yergeau, "UTF-8, a transformation format of ISO 10646", RFC
     2279, January 1998.

[30] P. Calhoun, C. Perkins, "Diameter Mobile IP Application", draft-
     ietf-aaa-diameter-mobileip-08.txt, IETF work in progress, November
     2001.

[31] G. Zorn, D. Leifer, A. Rubens, J. Shriver, M. Holdrege, I. Goyret,
     "RADIUS Attributes for Tunnel Protocol Support", RFC 2868, June
     2000.

[32] C. Rigney, W. Willats, P. Calhoun, "RADIUS Extensions", RFC 2869,
     June 2000.

[33] G. Zorn, D. Leifer, A. Rubens, J. Shriver, M. Holdrege, I. Goyret,
     "RADIUS Attributes for Tunnel Protocol Support", RFC 2868, June
     2000.

[34] IANA, "RADIUS Types", http://www.isi.edu/in-notes/iana/assign-
     ments/radius-types

[35] C. Rigney, "RADIUS Accounting", RFC 2866, June 2000.

[36] K. Sklower, G. Meyer, "The PPP DES Encryption Protocol, Version 2
     (DESE-bis)", RFC 2419, September 1998.

[37] H. Kummert, "The PPP Triple-DES Encryption Protocol (3DESE)", RFC
     2402, September 1998.

[38] B. Aboba, G. Zorn, D. Mitton, "RADIUS and IPv6", RFC 3162, August
     2001.

[39] Information technology - Telecommunications and information
     exchange between systems - Local and metropolitan area networks -
     Specific Requirements Part 11:  Wireless LAN Medium Access Control
     (MAC) and Physical Layer (PHY) Specifications, IEEE Std.
     802.11-1999, 1999.


14.0  Acknowledgements

   The authors would like to thank Carl Rigney, Allan C. Rubens, William



Calhoun et al.              expires May 2002                   [Page 57]





Internet-Draft                                             November 2001


   Allen Simpson, and Steve Willens for their work on the original
   RADIUS, from which much of the concepts in this specification were
   derived; Carl Rigney and Ward Willats for [32]; Bernard Aboba and
   Dave Mitton for [38]; Dory Leifer, John Shriver, Matt Holdrege and
   Ignacio Goyret for their work on [33]. This document stole text and
   concepts from both [32] and [33]. Thanks goes to Carl Williams for
   providing IPv6 specific text.

   The authors would also like to acknowledge the following people for
   their contributions in the development of the Diameter protocol:

   Bernard Aboba, Jari Arkko, William Bulley, Daniel C. Fox, Lol Grant,
   Nancy Greene, Peter Heitman, Paul Krumviede, Fergal Ladley, Ryan
   Moats, Victor Muslin, Kenneth Peirce, Sumit Vakil, John R. Vollbrecht
   and Jeff Weisberg

   Finally, Pat Calhoun would like to thank Sun Microsystems since most
   of the effort put into this document was done while he was in their
   employ.


15.0  Authors' Addresses

   Questions about this memo can be directed to:

      Pat R. Calhoun
      Black Storm Networks
      250 Cambridge Avenue, Suite 200
      Palo Alto, California, 94306
      USA

       Phone:  +1 650-617-2932
         Fax:  +1 650-786-6445
      E-mail:  pcalhoun@diameter.org


      William Bulley
      Merit Network, Inc.
      Building One, Suite 2000
      4251 Plymouth Road
      Ann Arbor, Michigan  48105-2785
      USA

       Phone:  +1 734-764-9993
         Fax:  +1 734-647-3185
      E-mail:  web@merit.edu





Calhoun et al.              expires May 2002                   [Page 58]





Internet-Draft                                             November 2001


      Allan C. Rubens
      Tut Systems, Inc.
      220 E. Huron, Suite 260
      Ann Arbor, MI 48104
      USA

       Phone:  +1 734-995-1697
      E-Mail:  arubens@tutsys.com


      Jeff Haag
      Cisco Systems
      7025 Kit Creek Road
      PO Box 14987
      Research Triangle Park, NC 27709

       Phone:  1-919-392-2353
      E-Mail:  haag@cisco.com


     Glen Zorn
     Cisco Systems, Inc.
     500 108th Avenue N.E., Suite 500
     Bellevue, WA 98004
     USA

      Phone:  +1 425 471 4861
     E-Mail:  gwz@cisco.com


16.0  Full Copyright Statement

   Copyright (C) The Internet Society (2001).  All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works. However, this docu-
   ment itself may not be modified in any way, such as by removing the
   copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of develop-
   ing Internet standards in which case the procedures for copyrights
   defined in the Internet Standards process must be followed, or as
   required to translate it into languages other than English. The lim-
   ited permissions granted above are perpetual and will not be revoked
   by the Internet Society or its successors or assigns. This document



Calhoun et al.              expires May 2002                   [Page 59]





Internet-Draft                                             November 2001


   and the information contained herein is provided on an "AS IS" basis
   and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DIS-
   CLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
   TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT
   INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR
   FITNESS FOR A PARTICULAR PURPOSE.


17.0  Expiration Date

   This memo is filed as <draft-ietf-aaa-diameter-nasreq-08.txt> and
   expires in May 2002.







































Calhoun et al.              expires May 2002                   [Page 60]


