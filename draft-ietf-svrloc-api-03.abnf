config-file   =  line-list
line-list     =  line / line line-list
line          =  property-line / comment-line
comment-line  =  ( "#" / ";" ) 1*allchar newline
property-line =  property newline
property      =  prop | prop "." property
prop          =  1*char
value         =  integer / boolean / vector / string
integer       =  1*DIGIT
boolean       =  "true" / "false" / "TRUE" / "FALSE"
newline       =  CR / ( CRLF )
vector        =  "[" value-list "]"
value-list    =  value / value "," value-list
string        =  1*allchar
char          =  DIGIT / ALPHA / other
other         =  %x21-%x2f / %x3a-%x40 /
                       %x5b-%x60 / %7b-%7e
allchar       =  char / HT / SP / escape
escape        =  "\" HEXDIG HEXDIG
                       ; Used for reserved characters


addresses     =  line-list
addresses     =  "[" addr-list "]"
addr-list     =  addr / addr "," addr-list
addr          =  addrrep [ "[" scope-list "]" ]
addrrep       =  ipv4-addr / ipv6-addr / fqdn
ipv4-addr     =  1*3DIGIT 3( "." 1*3DIGIT )
ipv6-addr     =  64HEXDIGIT
fqdn          =  ALPHA / ALPHA *[ anum / "-" ] anum
anum          =  ALPHA / DIGIT
scope-list    =  scope / scope "," scope-list
scope         =  1*allchar
                             =  ; See grammar of Section 2.1


value         =  sc-key-list
sc-key-list   =  sc key / sc key "," sc-key-list
sc            =  1*allchars
                                ; Scope, as Section 2.1
key           =  4*r64char
r64char       =  ALPHA / DIGIT / "+" / "/" / "="


ser-file      =  reg-list
reg-list      =  reg / reg reg-list
reg           =  creg / ser-reg
creg          =  comment-line ser-reg
comment-line  =  ( "#" / ";" ) 1*allchar newline
ser-reg       =  url-props attr-list newline
url-props     =  service-url sep lang
sep           =  *WSP "," *WSP
service-url   =  ;The registration's service:  URL. See
                       ; [16] for syntax.
language      =  2*3ALPHA [ "-" 1*ALPHA ]
                       ;RFC 1766 Language Tag see [14].
attr-list     =  attr-def / attr-def attr-list
attr-def      =  attr / keyword
keyword       =  attr-id
attr          =  attr-id assgn-op attr-val-list newline
assgn-op      =  *WSP "=" *WSP
attr          =  ;Attribute id, see [15] for syntax.
attr-val-list =  attr-val / attr-val sep attr-val-list
attr-val      =  ;Attribute value, see [15] for syntax.
char          =  DIGIT / ALPHA / other
                       ;'other' defined in section 2.1.
allchar       =  char / WSP


SLP_LIFETIME_NONE = 0,
SLP_LIFETIME_DEFAULT = 108000,
SLP_LIFETIME_PERMANENT = -1
SLP_OK                           = 0,
SLP_LANGUAGE_NOT_SUPPORTED       = -1,
SLP_PARSE_ERROR                  = -2,
SLP_INVALID_REGISTRATION         = -3,
SLP_SCOPE_NOT_SUPPORTED          = -4,
SLP_AUTHENTICATION_INVALID       = -6,
SLP_AUTHENTICATION_FAILED        = -7,
SLP_INTERNAL_ERROR               = -8,
SLP_NOT_IMPLEMENTED              = -17,
SLP_BUFFER_OVERFLOW              = -18,
SLP_NETWORK_TIMED_OUT            = -19,
SLP_NETWORK_INIT_FAILED          = -20,
SLP_MEMORY_ALLOC_FAILED          = -21,
SLP_PARAMETER_BAD                = -22,
SLP_NETWORK_ERROR                = -23,
SLP_INTERNAL_SYSTEM_ERROR        = -24

err = SLPReg(sh,&surl,pcScopeList,pcAttrs);

err = SLPFindSrvs(sh,pcSrvType,pcScopeList,pcFilter,&surl,1);

err = SLPParseSrvURL(&surl, &pSrvAccessPt);

err =
     SLPFindSrvs(sh,surl.s_pcURL,pcScopeList,pcAttrFilter,pcAttrVals,MAXBUF);

adv = ServiceLocationManager.getAdvertiser("en");

tr = TemplateRegistry.getTemplateRegistry();

loc = ServiceLocationManager.getLocator("en");

services = loc.findServices("service:printer",'''',scopes,query);

