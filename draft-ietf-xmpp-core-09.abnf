to='shakespeare.lit'
xmlns='jabber:client'
version='1.0'>
from='shakespeare.lit'
id='id_123456789'
xmlns='jabber:client'
version='1.0'>
to='romeo@shakespeare.lit'>
to='juliet@shakespeare.lit'>
to='shakespeare.lit'
xmlns='jabber:client'
version='1.0'>
from='shakespeare.lit'
id='id_123456789'
xmlns='jabber:client'
version='1.0'>
xmlns='jabber:client'
to='capulet.com'
version='1.0'>

xmlns='jabber:client'
id='12345678'
version='1.0'>
xmlns='jabber:client'
to='capulet.com'
version='1.0'>
xmlns='jabber:client'
id='12345678'
version='1.0'>
xmlns='jabber:server'
version='1.0'>

xmlns='jabber:server'
id='12345678'
version='1.0'>
xmlns='jabber:server'
version='1.0'>
xmlns='jabber:server'
id='12345678'
version='1.0'>
xmlns='jabber:client'
to='domain'
version='1.0'>

xmlns='jabber:client'
id='12345678'
from='domain'
version='1.0'>

xmlns='urn:ietf:params:xml:ns:xmpp-sasl'
mechanism='DIGEST-MD5'/>

realm="cataclysm.cx",nonce="OA6MG9tEQGm2hh",\
qop="auth",charset=utf-8,algorithm=md5-sess

jIxNDNhZjcsY2hhcnNldD11dGYtOA==
username="rob",realm="cataclysm.cx",\
nonce="OA6MG9tEQGm2hh",cnonce="OA6MHXh6VqTrRk",\
nc=00000001,qop=auth,digest-uri="xmpp/cataclysm.cx",\
response=d388dad90d4bbd760a152321f2143af7,charset=utf-8,\
authzid="rob@cataclysm.cx/myResource"

cnNwYXV0aD1lYTQwZjYwMzM1YzQyN2I1NTI3Yjg0ZGJhYmNkZmZmZA==
rspauth=ea40f60335c427b5527b84dbabcdfffd
xmlns='jabber:client'
to='domain'
version='1.0'>

xmlns='jabber:client'
id='12345678'
from='domain'
version='1.0'>


xmlns='jabber:server'
version='1.0'>
xmlns='jabber:server'
id='12345678'
version='1.0'>

xmlns='urn:ietf:params:xml:ns:xmpp-sasl'
mechanism='DIGEST-MD5'/>

realm="cataclysm.cx",nonce="OA6MG9tEQGm2hh",\
qop="auth",charset=utf-8,algorithm=md5-sess

OAo=
realm="cataclysm.cx",nonce="OA6MG9tEQGm2hh",cnonce="OA6MHXh6VqTrRk",\
nc=00000001,qop=auth,digest-uri="xmpp/cataclysm.cx",\
response=d388dad90d4bbd760a152321f2143af7,charset=utf-8

cnNwYXV0aD1lYTQwZjYwMzM1YzQyN2I1NTI3Yjg0ZGJhYmNkZmZmZA==
rspauth=ea40f60335c427b5527b84dbabcdfffd

xmlns='jabber:server'
version='1.0'>

xmlns='jabber:client'
id='12345678'
version='1.0'>
xmlns='jabber:server'
xmlns='jabber:server'
id='457F9224A0...'>

        Note: Receiving Server is NOT REQUIRED to reply, and SHOULD NOT
        reply if there exists an established session between Receiving
        Server and the hostname asserted by Originating Server.  The
        'to' and 'from' attributes are NOT REQUIRED on the root stream
        element.  If the namespace name is incorrect, then Originating
        Server MUST generate an <invalid-namespace/> stream error
        condition and terminate both the stream and the underlying TCP
        connection.

to='Receiving Server'
from='Originating Server'>
xmlns='jabber:server'
xmlns='jabber:server'
id='1251A342B...'>

        Note: if the namespace name is incorrect, then Receiving Server
        MUST generate an <invalid-namespace/> stream error condition and
        terminate both the stream and the underlying TCP connection
        between it and Authoritative Server.  If the ID does not match
        that provided by Receiving Server in Step 3, then Receiving
        Server MUST generate an <invalid-id/> stream error condition and
        terminate both the stream and the underlying TCP connection
        between it and Authoritative Server.  If either of the foregoing
        stream errors occurs between Receiving Server and Authoritative
        Server, then Receiving Server MUST generate a <remote-
        connection-failed/> stream error condition and terminate both
        the stream and the underlying TCP connection between it and
        Originating Server.

from='Receiving Server'
to='Originating Server'
id='457F9224A0...'>
from='Originating Server'
to='Receiving Server'
type='valid'
id='457F9224A0...'/>

         or

from='Originating Server'
to='Receiving Server'
type='invalid'
id='457F9224A0...'/>

        Note: if the ID does not match that provided by Receiving Server
        in Step 3, then Receiving Server MUST generate an <invalid-id/>
        stream error condition and terminate both the stream and the
        underlying TCP connection.  If the value of the 'to' address
        does not match a hostname recognized by Receiving Server, then
        Receiving Server MUST generate a <host-unknown/> stream error
        condition and terminate both the stream and the underlying TCP
        connection.  If the value of the 'from' address does not match
        the hostname represented by Originating Server when opening the
        TCP connection (or any validated domain), then Receiving Server
        MUST generate a <nonmatching-hosts/> stream error condition and
        terminate both the stream and the underlying TCP connection.

from='Receiving Server'
to='Originating Server'
type='valid'/>

        Note: At this point the connection has either been validated via
        a type='valid', or reported as invalid.  If the connection is
        invalid, then Receiving Server MUST terminate both the stream
        and the underlying TCP connection.  If the connection is
        validated, data can be sent by Originating Server and read by
        Receiving Server; before that, all data stanzas sent to
        Receiving Server SHOULD be silently dropped.

targetNamespace='http://etherx.jabber.org/streams'
xmlns='http://etherx.jabber.org/streams'
elementFormDefault='qualified'>

namespace='jabber:client'
maxOccurs='1'/>
namespace='jabber:server'
maxOccurs='1'/>
namespace='##other'
minOccurs='0'
maxOccurs='unbounded'/>
targetNamespace='urn:ietf:params:xml:ns:xmpp-tls'
xmlns='urn:ietf:params:xml:ns:xmpp-tls'
elementFormDefault='qualified'>

targetNamespace='urn:ietf:params:xml:ns:xmpp-sasl'
xmlns='urn:ietf:params:xml:ns:xmpp-sasl'
elementFormDefault='qualified'>

type='xs:string' use='optional'/>
targetNamespace='jabber:server:dialback'
xmlns='jabber:server:dialback'
elementFormDefault='qualified'>
targetNamespace='jabber:client'
xmlns='jabber:client'
elementFormDefault='qualified'>

minOccurs='0' maxOccurs='unbounded'/>
minOccurs='0' maxOccurs='unbounded'/>
namespace='##other'
minOccurs='0'
maxOccurs='unbounded'/>
type='xmlLangType' use='optional'/>
type='xmlLangType' use='optional'/>
type='xmlLangType' use='optional'/>
minOccurs='0' maxOccurs='unbounded'/>
namespace='##other'
minOccurs='0'
maxOccurs='unbounded'/>
type='xmlLangType' use='optional'/>
type='xmlLangType' use='optional'/>
namespace='##other'
minOccurs='0'
maxOccurs='unbounded'/>
targetNamespace='http://www.jabber.org/protocol'
xmlns='http://www.jabber.org/protocol'
elementFormDefault='qualified'>

minOccurs='0' maxOccurs='unbounded'/>
minOccurs='0' maxOccurs='unbounded'/>
namespace='##other'
minOccurs='0'
maxOccurs='unbounded'/>
type='xmlLangType' use='optional'/>
type='xmlLangType' use='optional'/>
type='xmlLangType' use='optional'/>
minOccurs='0' maxOccurs='unbounded'/>
namespace='##other'
minOccurs='0'
maxOccurs='unbounded'/>
type='xmlLangType' use='optional'/>
type='xmlLangType' use='optional'/>
namespace='##other'
minOccurs='0'
maxOccurs='unbounded'/>
targetNamespace='urn:ietf:params:xml:ns:xmpp-streams'
xmlns='urn:ietf:params:xml:ns:xmpp-streams'
elementFormDefault='qualified'>

namespace='##other'
minOccurs='0'
maxOccurs='1'/>
targetNamespace='urn:ietf:params:xml:ns:xmpp-stanzas'
xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'
elementFormDefault='qualified'>

namespace='##other'
minOccurs='0'
maxOccurs='1'/>
