
   IPS                                                    Kevin Gibbons
   Internet Draft                                            Josh Tseng
   <draft-ietf-ips-isns-mib-05.txt>                      Nishan Systems
   Category: standards-track
   Expires: January 2004                                  Tom McSweeney
                                                                    IBM


                                                               July 2003



                  Definitions of Managed Objects for iSNS
                      (Internet Storage Name Service)

Status of this Memo

   This document is an Internet-Draft and is subject to all provisions
   of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six
   months and may be updated, replaced, or obsoleted by other
   documents at any time.  It is inappropriate to use Internet-Drafts
   as reference material or to cite them other than as "work in
   progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/1id-abstracts.html.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

Copyright Notice

   Copyright (C) The Internet Society (2003). All Rights Reserved.

Abstract

   The iSNS protocol provides storage name service functionality on an
   IP network which is being used for iSCSI or iFCP storage. This
   draft provides a mechanism to monitor and control iSNS Client and
   Servers, including information about registered objects in an iSNS
   Server.

   This memo is a product of the IP Storage (IPS) working group within
   the Internet Engineering Task Force.  Comments are solicited and
   should be addressed to the working group's mailing list at
   ips@ece.cmu.edu and/or the authors.


   Gibbons               Expires January 2004                        1

   Internet Draft              iSNS MIB                      July 2003

Table of Contents

   Status of this Memo...............................................1
   Copyright Notice..................................................1
   Abstract..........................................................1
   1.  The Internet-Standard Management Framework....................3
   2.  Introduction..................................................3
   3.  Technical Description.........................................3
   3.1  iSNS Registered Objects......................................3
   3.2  iSNS MIB Structure...........................................4
   3.3  iSNS Server Info.............................................5
   3.3.1  Discovery Domain Set (DDS).................................5
   3.3.2  Discovery Domain (DD)......................................5
   3.3.3  Registered Storage Objects.................................5
   3.3.3.1  Registered Entities......................................5
   3.3.3.2  Registered Portals.......................................5
   3.3.3.3  Registered Portal Groups.................................5
   3.3.3.4  Registered iSCSI Nodes...................................6
   3.3.3.5  Registered FC Ports......................................6
   3.3.3.6  Registered FC Nodes......................................6
   3.4  iSNS Client Info.............................................6
   3.5  iSNS Notifications...........................................6
   4.  Draft History.................................................6
   5.  MIB Definition................................................8
   6.  Security Considerations......................................83
   7.  Normative References.........................................83
   8.  Non-Normative References.....................................85
   9.  Authors∆ Addresses...........................................85
   10.  Full Copyright Statement....................................86






















   Gibbons               Expires January 2004                        2

   Internet Draft              iSNS MIB                      July 2003


1.  The Internet-Standard Management Framework

   For a detailed overview of the documents that describe the current
   Internet-Standard Management Framework, please refer to section 7
   of RFC 3410 [RFC3410].

   Managed objects are accessed via a virtual information store,
   termed the Management Information Base or MIB.  MIB objects are
   generally accessed through the Simple Network Management Protocol
   (SNMP).  Objects in the MIB are defined using the mechanisms
   defined in the Structure of Management Information (SMI).  This
   memo specifies a MIB module that is compliant to the SMIv2, which
   is described in STD 58, RFC 2578 [RFC2578], STD 58, RFC 2579
   [RFC2579] and STD 58, RFC 2580 [RFC2580].

2.  Introduction

   The iSNS protocol can be used by IP based storage devices for
   dynamic registration and discovery of storage devices in the
   network [isns001].  It has the capability to group devices into
   storage Discovery Domains.  The iSNS MIB is designed to allow SNMP
   to be used to monitor and manage iSNS servers and Clients to
   provide iSNS capabilities.

3.  Technical Description

3.1  iSNS Registered Objects

   The following entity relationship figure indicates the objects that
   can be registered in the iSNS, and their relationship to each
   other.

                    +--------------+    +-----------+
                    |    NETWORK   |1  *|           |
                    |    ENTITY    |----|  PORTAL   |
                    |              |    |           |
                    +--------------+    +-----------+
                            |1            |1  |*
                            |             |   |
                            |             |*  |
                            |   +----------+  |
                            |   |  PORTAL  |  |
                            |   |  GROUP   |  |
                            |   +----------+  |
                            |    |*           |
                            |    |            |
                            |*   |1           |*
   +-----------+    +--------------+    +-----------+    +-----------+
   |    FC     |1  *|   STORAGE    |*  *| DISCOVERY |*  *| DISCOVERY |
   |  DEVICE   |----|    NODE      |----|  DOMAIN   |----|  DOMAIN   |
   |           |    |              |    |           |    |    SET    |
   +-----------+    +--------------+    +-----------+    +-----------+


   Gibbons               Expires January 2004                        3

   Internet Draft              iSNS MIB                      July 2003

                * represents 0 to many possible relationships

3.2  iSNS MIB Structure

   The MIB is divided into sections for iSNS server information, iSNS
   server registered objects information, iSNS client information, and
   iSNS notifications.

   +--------------+    +--------------+
   | MANAGED iSNS |1  *| CONTROL NODE |
   |    SERVER    |----|    INFO      |
   |     INFO     |    |              |
   +--------------+    +--------------+
          |1    |1
          |     |      +--------------+
          |     |     *|  DDS AND DD  |
          |     +------|     INFO     |
          |            |              |
          |            +--------------+
          |
          |            +------------+
          |           *| REGISTERED |
          +------------|  OBJECTS   |
                       |    INFO    |
                       +------------+

   +--------------+    +------------+
   | MANAGED iSNS |1  *| CONFIGURED |
   |    CLIENT    |----|  SERVERS   |
   |     INFO     |    |            |
   +--------------+    +------------+
          |1    |1
          |     |      +------------+
          |     |     *| DISCOVERED |
          |     +------|  SERVERS   |
          |            |            |
          |            +------------+
          |
          |            +------------+
          |           *| REGISTERED |
          +------------|  ENTITIES  |
                       |            |
                       +------------+

   +-----------------+
   |     iSNS        |
   |  NOTIFICATION   |
   |     INFO        |
   +-----------------+

   The sections that are required to implement for an iSNS Server and
   iSNS Client are listed in the MIB compliance section.



   Gibbons               Expires January 2004                        4

   Internet Draft              iSNS MIB                      July 2003

3.3  iSNS Server Info

   The isnsSrvrInfo section provides the ability to monitor and manage
   multiple iSNS Server instances.   The isnsSrvrInstTable table
   provides information on each server instance.

3.3.1  Discovery Domain Set (DDS)

   The isnsDdsInfo section provides information on the registered
   Discovery Domain Sets, and their DDS members, for a specific iSNS
   Server instance.  DDSs provide a method to group registered
   Discovery Domains.  As described in the iSNS Specification
   [isns001], a DDS can be enabled or disabled.  Discovery Domains
   that are contained in an enabled DDS are enforced by an iSNS
   Server.  If the server has enabled SNMP control, this section
   allows DDSs to be created, modified, and deleted.

3.3.2  Discovery Domain (DD)

   The isnsDdInfo section provides information on the registered
   Discovery Domains, and their DD members, for a specific iSNS Server
   instance.  Discovery Domains are collections of storage nodes and
   portals that are allowed to discover one another.  DD members can
   be iSCSI nodes, Entity Portals, or iFCP nodes. If the server has
   enabled SNMP control, this section allows DDs to be created,
   modified, and deleted.

3.3.3  Registered Storage Objects

   The isnsReg section provides information on the registered storage
   objects for a specific iSNS Server instance.  This section is
   divided into subsections for Entities, Portals, iSCSI Nodes, as
   well as iFCP Port and Node information.

3.3.3.1  Registered Entities

   The isnsRegEntityInfo section provides information on the
   registered entities.  Entities are collections of storage nodes and
   portals.

3.3.3.2  Registered Portals

   The isnsRegPortalInfo section provides information on the
   registered portals for a specific iSNS Server instance.  Portals
   are logical IP-Address, TCP/UDP Port pairs that provide access to
   storage nodes contained in the associated Entity.

3.3.3.3  Registered Portal Groups

   The isnsRegPortalGroupInfo section provides information on the
   registered portal groups for a specific iSNS Server instance.
   Portal Groups provide a mapping between Portals and iSCSI Storage
   Nodes contained in an Entity.


   Gibbons               Expires January 2004                        5

   Internet Draft              iSNS MIB                      July 2003

3.3.3.4  Registered iSCSI Nodes

   The isnsRegIsciNodeInfo section provides information on the
   registered iSCSI Nodes for a specific iSNS Server instance. The
   iSCSI nodes are individual storage targets or initiators.

3.3.3.5  Registered FC Ports

   The isnsRegFcPortInfo section provides information on the
   registered FC Ports for a specific iSNS Server instance. The FC
   Ports are ports associated with an iFCP gateway.

3.3.3.6  Registered FC Nodes

   The isnsRegFcNodeInfo section provides information on the
   registered FC Nodes for a specific iSNS Server instance. The FC
   nodes are individual storage devices associated with an iFCP
   gateway.

3.4  iSNS Client Info

   The isnsClntInfo section provides the ability to monitor and manage
   multiple iSNS Client instances.

3.5  iSNS Notifications

   The isnsNotification section provides SNMP notifications for both
   iSNS Client and iSNS Server state changes.

4.  Draft History

   This section describes the changes to the MIB that have occurred
   during the standards process, and will be removed prior to
   completion.

         -- Revision History
         REVISION "0307220000Z"
         DESCRIPTION " v1.9 (7/22/03) changes:
               Added Portal Group objects for iSCSI and iSNS drft 20
               Added support for multiple server and client
                 instances
               Updated reference versions
                     "
         REVISION "0301100000Z"
         DESCRIPTION " v1.8 (1/10/03) changes:
               added PPN attribute for support of iSNS draft 16
               Updated reference versions
                     "
         REVISION "0212100000Z"
         DESCRIPTION " v1.7 (12/10/02) changes:
               Changed unicastCfg name to addrCfg
               Corrected typographical errors
               Updated reference versions
                     "

   Gibbons               Expires January 2004                        6

   Internet Draft              iSNS MIB                      July 2003

         REVISION "0210010000Z"
         DESCRIPTION " v1.6 (10/01/02) changes:
               Added support for portals that are explicitly
                  added to a discovery domain.
               Made all revision dates snmp compliant.
                     "
         REVISION "0205150000Z"
         DESCRIPTION " v1.5 (05/15/02) changes:
               Modified based on feedback from Keith McCloghrie
                  and others.
               Aligned design and included new FC Mgt MIB.
               Added support for attributes in iSNS Spec v10.
               Added REFERENCES and clarified object value
                  ranges.
               Added Notification/Traps to the MIB.
               Used BITS construct for all bitmaps.
               Modifed FC Port table - was iFCP Node table
               Moved Id Next variables above table it is used
                  for.
               Removed vendor specific options for iSNS control.
                     "
         REVISION "0111200000Z"
         DESCRIPTION " v1.4 (11/15/01) changes:
               Modified structures based on feedback from Keith
               McCloghrie and others in the IPS working group.
               We would like to thank Keith McCloghrie for his
               extensive feedback.
                     "
         REVISION "0110100000Z"
         DESCRIPTION " v1.3 (10/10/01) changes:
               added attributes to be consistent with the latest
               iSNS Specification.
                     "
         REVISION "0108140000Z"
         DESCRIPTION " v1.2 (8/14/01) changes:
               corrected format issues detected by SMICNG.
                     "
         REVISION "0108100000Z"
         DESCRIPTION " v1.1 (8/10/01) changes:
               removed unused isnsObjInfo branch.
               removed table indexes that are available in other
                 tables.
               moved DD Member Status to the control branch.
               reversed the order of the Portal indexes.
               placed range limitations on EidId and
                 IscsiNameId.
               updated variable descriptions.
               removed table entries that were redundant with
                 table indexes.
                     "
         REVISION "0107100000Z"
         DESCRIPTION " v1.0 (7/10/01) The initial revision of
                this module."


   Gibbons               Expires January 2004                        7

   Internet Draft              iSNS MIB                      July 2003

5.  MIB Definition

   ISNS-MGMT-MIB DEFINITIONS ::= BEGIN
   --
   --  Internet Storage Name Service (iSNS)
   --  Management Information Base
   --
   IMPORTS
       Unsigned32,
       Integer32,
       MODULE-IDENTITY,
       OBJECT-TYPE,
       NOTIFICATION-TYPE,
       TimeTicks,
   -- some compilers want BITS imported
   --  BITS,
       experimental
            FROM SNMPv2-SMI

       OBJECT-GROUP,
       NOTIFICATION-GROUP,
       MODULE-COMPLIANCE
            FROM SNMPv2-CONF

       TEXTUAL-CONVENTION,
       DateAndTime,
       TruthValue,
       RowStatus
            FROM SNMPv2-TC

   --  From RFC 2571
       SnmpAdminString
            FROM SNMP-FRAMEWORK-MIB

   --  From RFC 2851
       InetAddressType,
       InetAddress
            FROM INET-ADDRESS-MIB

   --  From IETF Fibre Channel Management MIB, RFC TBD
   --  <draft-ietf-ips-fcmgmt-mib-03.txt> to be included
   --  after RFC assigned
   --    FcNameIdOrZero,
   --    FcAddressId
   --         FROM FC-MGMT-MIB
         ;

   isnsMgmtMIB  MODULE-IDENTITY
         LAST-UPDATED "200307100000Z"
         ORGANIZATION "IETF IPS Working Group"
         CONTACT-INFO "
           Attn: Kevin Gibbons
                 Nishan Systems
                 3850 North First Street

   Gibbons               Expires January 2004                        8

   Internet Draft              iSNS MIB                      July 2003

                 San Jose, CA 95134
                 USA
                 Tel: +1 408 519-3700
                 Fax: +1 408 519-3705
                 Email: kgibbons@nishansystems.com

                 Josh Tseng
                 Nishan Systems
                 3850 North First Street
                 San Jose, CA 95134
                 USA
                 Tel: +1 408 519-3700
                 Fax: +1 408 519-3705
                 Email: jtseng@nishansystems.com

                 Tom McSweeney
                 IBM Corporation
                 600 Park Offices Drive
                 Research Triangle Park, NC 27709
                 USA
                 Tel: +1 919 855-5169
                 Email: tommcs@us.ibm.com
                       "
         DESCRIPTION "The MIB for internet Storage Name Service
                      (iSNS) Management."

         -- Revision History
         REVISION "200307220000Z"
         DESCRIPTION " v1.9 (7/22/03) changes:
               Added Portal Group objects for iSCSI and iSNS drft
                 20
               Added support for multiple server and client
                 instances
               Updated reference versions
                     "
         REVISION "200301100000Z"
         DESCRIPTION " v1.8 (1/10/03) changes:
               added PPN attribute for support of iSNS draft 16
               Updated reference versions
                     "
         REVISION "200212100000Z"
         DESCRIPTION " v1.7 (12/10/02) changes:
               Changed unicastCfg name to addrCfg
               Corrected typographical errors
               Updated reference versions
                     "
         REVISION "200210010000Z"
         DESCRIPTION " v1.6 (10/01/02) changes:
               Added support for portals that are explicitly
                  added to a discovery domain.
               Made all revision dates snmp compliant.
                     "
         REVISION "200205150000Z"
         DESCRIPTION " v1.5 (05/15/02) changes:

   Gibbons               Expires January 2004                        9

   Internet Draft              iSNS MIB                      July 2003

               Modified based on feedback from Keith McCloghrie
                  and others.
               Aligned design and included new FC Mgt MIB.
               Added support for attributes in iSNS Spec v10.
               Added REFERENCES and clarified object value
                  ranges.
               Added Notification/Traps to the MIB.
               Used BITS construct for all bitmaps.
               Modifed FC Port table - was iFCP Node table
               Moved Id Next variables above table it is used
                  for.
               Removed vendor specific options for iSNS control.
                     "
         REVISION "200111200000Z"
         DESCRIPTION " v1.4 (11/15/01) changes:
               Modified structures based on feedback from Keith
               McCloghrie and others in the IPS working group.
               We would like to thank Keith McCloghrie for his
               extensive feedback.
                     "
         REVISION "200110100000Z"
         DESCRIPTION " v1.3 (10/10/01) changes:
               added attributes to be consistent with the latest
               iSNS Specification.
                     "
         REVISION "200108140000Z"
         DESCRIPTION " v1.2 (8/14/01) changes:
               corrected format issues detected by SMICNG.
                     "
         REVISION "200108100000Z"
         DESCRIPTION " v1.1 (8/10/01) changes:
               removed unused isnsObjInfo branch.
               removed table indexes that are available in other
                 tables.
               moved DD Member Status to the control branch.
               reversed the order of the Portal indexes.
               placed range limitations on EidId and
                 IscsiNameId.
               updated variable descriptions.
               removed table entries that were redundant with
                 table indexes.
                     "
         REVISION "200107100000Z"
         DESCRIPTION " v1.0 (7/10/01) The initial revision of
                this module."
        -- no IETF branch yet assigned
              ::=  { experimental 4370 }

   --
   --  The following two Textual Conventions are from
   --  <draft-ietf-ips-fcmgmt-mib-03.txt>, and are to
   --  be included when RFC assigned
   --


   Gibbons               Expires January 2004                       10

   Internet Draft              iSNS MIB                      July 2003

   FcNameIdOrZero ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The World Wide Name (WWN) associated with a Fibre Channel
    (FC) entity.  WWNs were initially defined as 64-bits in
    length.  The latest definition (for future use) is 128-bits
    long.  The zero-length string value is used in circumstances
    where the WWN is unassigned/unknown."
       SYNTAX         OCTET STRING (SIZE(0 | 8 | 16))

   FcAddressId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "A Fibre Channel Address ID, a 24-bit value unique within
    the address space of a Fabric."
       SYNTAX         OCTET STRING (SIZE(0 | 3))

   -- end of <draft-ietf-ips-fcmgmt-mib-03.txt> TC's to be included

   DiscoveryDomainSetId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The unique Discovery Domain Set Identifier associated with a
    Discovery Domain Set (DDS)."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         Unsigned32 ( 1 .. 4294967295 )

   IsnsDdsStatusId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The bitmap indicating the status of a Discovery Domain
    Set (DDS) registered in the iSNS.
                 Bit           Status
              ---------       ---------
              All Others       RESERVED
                  31           enabled

    If bit(31) is set to  true then the DDS is Enabled.  If set
    to false the the DDS is disabled."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         BITS {
                         reserved0(0),
                         reserved1(1),
                         reserved2(2),
                         reserved3(3),
                         reserved4(4),
                         reserved5(5),
                         reserved6(6),
                         reserved7(7),
                         reserved8(8),
                         reserved9(9),
                         reserved10(10),
                         reserved11(11),
                         reserved12(12),

   Gibbons               Expires January 2004                       11

   Internet Draft              iSNS MIB                      July 2003

                         reserved13(13),
                         reserved14(14),
                         reserved15(15),
                         reserved16(16),
                         reserved17(17),
                         reserved18(18),
                         reserved19(19),
                         reserved20(20),
                         reserved21(21),
                         reserved22(22),
                         reserved23(23),
                         reserved24(24),
                         reserved25(25),
                         reserved26(26),
                         reserved27(27),
                         reserved28(28),
                         reserved29(29),
                         reserved30(30),
                         enabled(31)
                           }

   DiscoveryDomainId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The unique Discovery Domain Identifier (DD_ID) associated
    with each Discovery Domain (DD).  This can be used to
    uniquely index and reference a DD.  New storage nodes
    are automatically added to the default DD if
    isnsSrvrInstDfltDdDdsStatus is set to inDefaultDdAndDds."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         Unsigned32 ( 1 .. 4294967295 )

   DdFeatureBitmapId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The bitmap indicating the types of features
    each Discovery Domain (DD) has.
                 Bit           Status
              ---------       ---------
              All Others       RESERVED
                 31            Boot List

    Boot List: this feature indicates that the targets
    in this DD provide boot capabilities for the member
    initiators.

    Setting a bit to true (1) indicates the feature is
    enabled."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         BITS {
                         reserved0(0),
                         reserved1(1),
                         reserved2(2),
                         reserved3(3),

   Gibbons               Expires January 2004                       12

   Internet Draft              iSNS MIB                      July 2003

                         reserved4(4),
                         reserved5(5),
                         reserved6(6),
                         reserved7(7),
                         reserved8(8),
                         reserved9(9),
                         reserved10(10),
                         reserved11(11),
                         reserved12(12),
                         reserved13(13),
                         reserved14(14),
                         reserved15(15),
                         reserved16(16),
                         reserved17(17),
                         reserved18(18),
                         reserved19(19),
                         reserved20(20),
                         reserved21(21),
                         reserved22(22),
                         reserved23(23),
                         reserved24(24),
                         reserved25(25),
                         reserved26(26),
                         reserved27(27),
                         reserved28(28),
                         reserved29(29),
                         reserved30(30),
                         bootlist(31)
                        }

   DdDdsModificationBitmap ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The methods that can be used to modify the Discovery
    Domain and Discovery Domain Sets in the iSNS Server
    instance.
        Bit Field            Flag Description
        ---------   ------------------------------------
            0       SNMP protocol is allowed to modify DD's/DDS's
            1       Control Nodes are allowed
            2       Target iSCSI Nodes are allowed
            3       Initiator iSCSI Nodes are allowed
            4       Target iFCP Ports are allowed
            5       Initiator iFCP Ports are allowed

    Setting a bit to true (1) indicates the feature is
    enabled."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 3"
       SYNTAX         BITS {
                         snmpEnabled(0),
                         controlNode(1),
                         targetIscsiNode(2),
                         initiatorIscsiNode(3),
                         targetIfcpNode(4),

   Gibbons               Expires January 2004                       13

   Internet Draft              iSNS MIB                      July 2003

                         initiatorIfcpNode(5)
                           }

   SrvrInstIndexIdOr0 ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The identifier for the unique integer iSNS server index.
    Each managed server is uniquely identified by the instance
    index in the MIB."
       SYNTAX         Unsigned32 ( 0 .. 4294967295 )

   EntityIndexId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The identifier for the unique integer Entity Index
    associated with a storage entity."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         Unsigned32 ( 1 .. 4294967295 )

   EntityProtocolId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The type of protocol that is supported by this entity.

              Type Value       Entity Type
              ----------       -----------
                 1             No Protocol
                 2             iSCSI
                 3             iFCP
               All Others      Reserved
   "
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         INTEGER { noProtocol(1),
                                iSCSI(2),
                                iFCP(3) }

   PortalGroupIndexId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The identifier for the unique integer Portal Group Index
    associated with a Portal Group object."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         Unsigned32 ( 1 .. 4294967295 )

   PortalIndexId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The identifier for the unique integer Portal Index
    associated with a storage portal."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         Unsigned32 ( 1 .. 4294967295 )

   PortalPortId ::= TEXTUAL-CONVENTION
       STATUS         current

   Gibbons               Expires January 2004                       14

   Internet Draft              iSNS MIB                      July 2003

       DESCRIPTION
   "The UDP or TCP port number being used by a Portal for an
    Entity."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX             Integer32 ( 0 .. 65535 )

   PortalPortTypeId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The UDP or TCP port type being used by a Portal for an
    Entity."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         INTEGER { udp(1), tcp(2) }

   PortalGroupTagOr0Id ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The tag that uniquely identifies a Portal Group in an Entity
    object."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         Integer32 ( 0 .. 65535 )

   PortalSecurityBitmapId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "Indicates security attribute settings for the Portal as
    registered in the Portal Security Bitmap attribute.  The
    valid bit must be set in order for this attribute to contain
    valid information.  The definition of the bitmap is based on
    the iSNS Specification.

    Setting a bit to true (1) indicates the feature is
    enabled."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX        BITS {
                         reserved0(0),
                         reserved1(1),
                         reserved2(2),
                         reserved3(3),
                         reserved4(4),
                         reserved5(5),
                         reserved6(6),
                         reserved7(7),
                         reserved8(8),
                         reserved9(9),
                         reserved10(10),
                         reserved11(11),
                         reserved12(12),
                         reserved13(13),
                         reserved14(14),
                         reserved15(15),
                         reserved16(16),
                         reserved17(17),
                         reserved18(18),

   Gibbons               Expires January 2004                       15

   Internet Draft              iSNS MIB                      July 2003

                         reserved19(19),
                         reserved20(20),
                         reserved21(21),
                         reserved22(22),
                         reserved23(23),
                         reserved24(24),
                         tunnelModePreferred(25),
                         transportModePreferred(26),
                         pfsEnabled(27),
                         agressiveModeEnabled(28),
                         mainModeEnabled(29),
                         ikeIpsecEnabled(30),
                         bitmapVALID(31)
                        }

   NodeIndexId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The identifier for the unique integer Node Index associated
    with a storage node."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         Unsigned32 ( 1 .. 4294967295 )

   NodeIndexIdOr0 ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The identifier for the unique integer Node Index associated
    with a storage node, or the value 0."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         Unsigned32 ( 0 .. 4294967295 )

   NodeTypeId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The Node Type bit-map defining the functions of this node.
                  Bit         Node Type
              ---------       ---------
              All Others       RESERVED
                 29            Control
                 30            Initiator
                 31            Target
   "
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         BITS {
                         reserved0(0),
                         reserved1(1),
                         reserved2(2),
                         reserved3(3),
                         reserved4(4),
                         reserved5(5),
                         reserved6(6),
                         reserved7(7),
                         reserved8(8),
                         reserved9(9),

   Gibbons               Expires January 2004                       16

   Internet Draft              iSNS MIB                      July 2003

                         reserved10(10),
                         reserved11(11),
                         reserved12(12),
                         reserved13(13),
                         reserved14(14),
                         reserved15(15),
                         reserved16(16),
                         reserved17(17),
                         reserved18(18),
                         reserved19(19),
                         reserved20(20),
                         reserved21(21),
                         reserved22(22),
                         reserved23(23),
                         reserved24(24),
                         reserved25(25),
                         reserved26(26),
                         reserved27(27),
                         reserved28(28),
                         control(29),
                         initiator(30),
                         target(31)
                        }

   CosBitmapId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The Class of Service bitmap for a node.
        Bit Field          Flag Description
        ---------          ----------------
        All others         RESERVED
           28              Delivery Confirmation Provided
           29              Delivery Confirmation Not Provided

    Setting a bit to true (1) indicates the feature is
    enabled."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         BITS {
                         reserved0(0),
                         reserved1(1),
                         reserved2(2),
                         reserved3(3),
                         reserved4(4),
                         reserved5(5),
                         reserved6(6),
                         reserved7(7),
                         reserved8(8),
                         reserved9(9),
                         reserved10(10),
                         reserved11(11),
                         reserved12(12),
                         reserved13(13),
                         reserved14(14),
                         reserved15(15),

   Gibbons               Expires January 2004                       17

   Internet Draft              iSNS MIB                      July 2003

                         reserved16(16),
                         reserved17(17),
                         reserved18(18),
                         reserved19(19),
                         reserved20(20),
                         reserved21(21),
                         reserved22(22),
                         reserved23(23),
                         reserved24(24),
                         reserved25(25),
                         reserved26(26),
                         reserved27(27),
                         class3(28),
                         class2(29)
                                      }

   ScnBitmapId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The State Change Notification (SCN) bitmap for a node.
        Bit Field          Flag Description
        ---------          ----------------
        All others         RESERVED
           24              INITIATOR AND SELF INFORMATION ONLY
           25              TARGET AND SELF INFORMATION ONLY
           26              MANAGEMENT REGISTRATION/SCN
           27              OBJECT REMOVED
           28              OBJECT ADDED
           29              OBJECT UPDATED
           30              DD/DDS MEMBER REMOVED (MGT REG/SCN
                             ONLY)
           31              DD/DDS MEMBER ADDED (MGT REG/SCN
                             ONLY)

    Setting a bit to true (1) indicates the feature is
    enabled."
       REFERENCE      "draft-ietf-ips-iSNS-20.txt, Section 6"
       SYNTAX         BITS {
                         reserved0(0),
                         reserved1(1),
                         reserved2(2),
                         reserved3(3),
                         reserved4(4),
                         reserved5(5),
                         reserved6(6),
                         reserved7(7),
                         reserved8(8),
                         reserved9(9),
                         reserved10(10),
                         reserved11(11),
                         reserved12(12),
                         reserved13(13),
                         reserved14(14),
                         reserved15(15),

   Gibbons               Expires January 2004                       18

   Internet Draft              iSNS MIB                      July 2003

                         reserved16(16),
                         reserved17(17),
                         reserved18(18),
                         reserved19(19),
                         reserved20(20),
                         reserved21(21),
                         reserved22(22),
                         reserved23(23),
                         initiatorAndSelfOnly(24),
                         targetAndSelfOnly(25),
                         managementRegistrationScn(26),
                         objectRemoved(27),
                         objectAdded(28),
                         objectUpdated(29),
                         ddOrDdsMemberRemoved(30),
                         ddOrDdsMemberAdded(31)
                        }

   SrvrDscvryMthdId ::= TEXTUAL-CONVENTION
       STATUS         current
       DESCRIPTION
   "The method of server discovery that is being used
    by an iSNS client instance, or is currently supported
    by an iSNS server instance."
       SYNTAX         INTEGER {
                    dhcp(1),
                    slp(2),
                    multicastGroupHb(3),
                    broadcastHb(4),
                    cfgdServerList(5),
                    other(6)
                               }

   --
   -- Internet Storage Name Service Management
   --

   isnsObj                     OBJECT IDENTIFIER ::=
                                   { isnsMgmtMIB 1 }
   isnsConformance             OBJECT IDENTIFIER ::=
                                   { isnsMgmtMIB 2 }

   --
   -- iSNS Server instance objects --------------------
   --

   isnsSrvrInfo OBJECT IDENTIFIER ::= { isnsObj 1 }

   isnsSrvrInstTable               OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsSrvrInstEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "This table provides a list of the iSNS server instances

   Gibbons               Expires January 2004                       19

   Internet Draft              iSNS MIB                      July 2003

    that are managed by this agent."
       ::= { isnsSrvrInfo 1 }

   isnsSrvrInstEntry OBJECT-TYPE
       SYNTAX                  IsnsSrvrInstEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "This is a row in the iSNS server instance table.  The number
    of rows is dependent on the number of iSNS server instances
    that are being managed by this agent."
       INDEX   { isnsSrvrInstIndex }
       ::= { isnsSrvrInstTable 1 }

   IsnsSrvrInstEntry ::=
       SEQUENCE {
          isnsSrvrInstIndex              SrvrInstIndexIdOr0,
          isnsSrvrInstName               SnmpAdminString,
          isnsSrvrInstIsnsVersion        Integer32,
          isnsSrvrInstVendorInfo         SnmpAdminString,
          isnsSrvrInstPhyIndex           Unsigned32,
          isnsSrvrInstTcpPort            Integer32,
          isnsSrvrInstUdpPort            Integer32,
          isnsSrvrInstUptime             TimeTicks,
          isnsSrvrInstRole               INTEGER,
          isnsSrvrInstDiscMthdEnbld      SrvrDscvryMthdId,
          isnsSrvrInstDiscMcGrpType      InetAddressType,
          isnsSrvrInstDiscMcGrp          InetAddress,
          isnsSrvrInstCntrlNodeAuth      INTEGER,
          isnsSrvrInstEsiNonRespThrshld  Integer32,
          isnsSrvrInstEnblCntrlNdeMgtScn TruthValue,
          isnsSrvrInstDfltDdDdsStatus    INTEGER,
          isnsSrvrInstUpdateDdDdsSpprtd  DdDdsModificationBitmap,
          isnsSrvrInstUpdateDdDdsEnbld   DdDdsModificationBitmap
                }

   isnsSrvrInstIndex           OBJECT-TYPE
       SYNTAX                  SrvrInstIndexIdOr0
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The instance of this iSNS Server being managed.  Each
    managed server is uniquely identified by the instance index
    in the MIB."
       ::= { isnsSrvrInstEntry 1 }

   isnsSrvrInstName            OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..255))
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "A name that can be assigned to the iSNS Server instance.
    If not configured, the value is an empty string."
       ::= { isnsSrvrInstEntry 2 }

   Gibbons               Expires January 2004                       20

   Internet Draft              iSNS MIB                      July 2003


   isnsSrvrInstIsnsVersion     OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSNS version value as contained in messages received
    from the current primary server.  The header of each iSNSP
    message contains the iSNS version of the sender.  If
    unknown the reported value is 0."
       REFERENCE               "draft-ietf-ips-iSNS-20.txt"
       DEFVAL                  { 1 }
       ::= { isnsSrvrInstEntry 3 }

   isnsSrvrInstVendorInfo      OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..255))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSNS server vendor name and version information.  This
    variable is comma delimited.  The format of the variable
    string is as follows:
    Vendor Name, Vendor Version, Vendor Defined Information.
          Field           Description
        ---------       ----------------
       Vendor Name      The name of the vendor
       Vendor Version   The version of the vendor product
       Vendor Defined   This follows the second comma in the
                        string, if one exists, and is vendor
                        defined
    If not configured, the value of this variable is an empty
    string."
       ::= { isnsSrvrInstEntry 4 }

   isnsSrvrInstPhyIndex        OBJECT-TYPE
       SYNTAX                  Unsigned32 (0..2147483647)
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "An index indicating the location of this iSNS Server within
    a larger entity, if one exists.  If supported, this is the
    entPhysicalIndex from the Entity MIB (Version 2), that this
    iSNS Server is currently using.  If not supported it is
    either an index into a chassis MIB, as supported by the
    system, or 0."
       REFERENCE               "draft-ietf-ips-iSNS-20.txt"
       ::= { isnsSrvrInstEntry 5 }

   isnsSrvrInstTcpPort         OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "Indicates the TCP port this iSNS instance is accepting

   Gibbons               Expires January 2004                       21

   Internet Draft              iSNS MIB                      July 2003

    iSNSP messages on, generally the iSNS well known port.
    The well known TCP port for iSNSP is 3205.  If TCP is
    not supported by this server instance, then the value
    is 0."
       ::= { isnsSrvrInstEntry 6 }

   isnsSrvrInstUdpPort         OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "Indicates the UDP port this iSNS instance is accepting
    iSNSP messages on, generally the iSNS well known port.
    The well known UDP port for iSNSP is 3205.  If UDP is
    not supported by this server instance, then the value
    is 0."
       ::= { isnsSrvrInstEntry 7 }

   isnsSrvrInstUptime          OBJECT-TYPE
        SYNTAX                 TimeTicks
        MAX-ACCESS             read-only
        STATUS                 current
        DESCRIPTION
   "The time that this iSNS Server instance has been active.  In
    otherwords, the time since last reinitialization."
       ::= { isnsSrvrInstEntry 8 }

   isnsSrvrInstRole            OBJECT-TYPE
        SYNTAX                 INTEGER { notSet(0),
                                         server(1),
                                         serverNotPrimary(2) }
        MAX-ACCESS             read-only
        STATUS                 current
        DESCRIPTION
   "The current operational mode of this iSNS Server instance.
          Value             Description
        ---------         ----------------
         notSet           The iSNS server role is not configured.
         server           The iSNS server instance is operating
                          as a primary iSNS server.
         serverNotPrimary The iSNS server instance can be a
                          primary iSNS server, but is not
                          currently acting as a primary."
       ::= { isnsSrvrInstEntry 9 }

   isnsSrvrInstDiscMthdEnbld   OBJECT-TYPE
       SYNTAX                  SrvrDscvryMthdId
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "Indicates the primary discovery processes currently
    enabled on this iSNS server instance.  This can be
    used by a client to discover and then register with
    the primary iSNS server.  Additional methods of

   Gibbons               Expires January 2004                       22

   Internet Draft              iSNS MIB                      July 2003

    discovery may also be supported."
       ::= { isnsSrvrInstEntry 10 }

   isnsSrvrInstDiscMcGrpType   OBJECT-TYPE
       SYNTAX                  InetAddressType
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "The type of Inet address in isnsSrvrInstDiscMcGrp. If not
    set, then the value is unknown(0)."
       ::= { isnsSrvrInstEntry 11 }

   isnsSrvrInstDiscMcGrp       OBJECT-TYPE
       SYNTAX                  InetAddress
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "The multicast group that iSNS Heartbeat messages are
    sent to if multicast based discovery has been enabled
    for this server instance.  If not configured, then
    the value is an empty string."
       ::= { isnsSrvrInstEntry 12 }

   isnsSrvrInstEsiNonRespThrshld OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "ESI Non-Response Threshold - determines the number of ESI
    messages that will be sent without receiving a response
    before an entity is deregistered from the iSNS database.
    If set to 0 then Entities will never be deregistered due to
    non-receipt of ESI messages."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 3.4"
       DEFVAL                  { 3 }
       ::= { isnsSrvrInstEntry 13 }

   isnsSrvrInstEnblCntrlNdeMgtScn OBJECT-TYPE
       SYNTAX                  TruthValue
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "Enable Management SCN for Control Node - enable the option
    for a control node to register for and receive Management
    SCNs sent by this server."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 3.4"
       DEFVAL                  { true }
       ::= { isnsSrvrInstEntry 14 }

   isnsSrvrInstCntrlNodeAuth   OBJECT-TYPE
       SYNTAX                  INTEGER { anyNode(1),
                                         viewNodes(2),
                                         modifyNodes(3),
                                         noSnmpAccess(4) }

   Gibbons               Expires January 2004                       23

   Internet Draft              iSNS MIB                      July 2003

       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "Control Nodes can be configured to receive management SCNs
    indicating network updates, including information on
    modification to DDs and DDSs.  This object indicates if
    SNMP has access to control node information and, if it does,
    which type of storage nodes can register with the server
    instance as a control node.  Possible values for this
    variable are:
          Value              Description
        ---------          ----------------
        anyNode      Any storage node MAY register as a control node
        viewNodes    Specified nodes MAY register as control nodes,
                     SNMP view only
        modifyNodes  Specified nodes MAY register as control nodes,
                     SNMP CAN modify list of nodes
        noSnmpAccess Control node information is not accessible
                     via SNMP
    If only specified nodes are allowed to register as control
    nodes, and SNMP is allowed to modify the list of control
    nodes, then they SHALL be listed in the
    isnsCntlNodeIscsiTable and isnsCntlNodeFcPortTable.
    If SNMP is not allowed to view or modify the list of control
    nodes, then this variable SHALL be set to noSnmpAccess."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 3.4"
       ::= { isnsSrvrInstEntry 15 }

   isnsSrvrInstDfltDdDdsStatus OBJECT-TYPE
       SYNTAX                  INTEGER { inNoDomain(1),
                                         inDefaultDdAndDds(2) }
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "This indicates the Discovery Domain (DD) and Discovery Domain
    Set (DDS) membership status for a new device when registerd in
    the iSNS server instance. Either the new device will not be in a
    DD/DDS, or will be placed into a default DD and default DDS.
    The default setting is inNoDomain."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 3.4"
       DEFVAL                  { inNoDomain }
       ::= { isnsSrvrInstEntry 16 }

   isnsSrvrInstUpdateDdDdsSpprtd OBJECT-TYPE
       SYNTAX                  DdDdsModificationBitmap
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The methods that this iSNS server instance supports
    to modify Discovery Domains and Discovery Domain Sets.
        Bit Field            Flag Description
        ---------   ------------------------------------
            0       SNMP protocol is allowed to modify
                    DD's/DDS's

   Gibbons               Expires January 2004                       24

   Internet Draft              iSNS MIB                      July 2003

            1       Control Nodes are allowed
            2       Target iSCSI Nodes are allowed
            3       Initiator iSCSI Nodes are allowed
            4       Target iFCP Ports are allowed
            5       Initiator iFCP Ports are allowed

    If a bit is true (1) then the flag is enabled.  If no
    method to change a DD is supported, then the bitmap
    is set to 0.  Two methods generally supported are SNMP
    and Control Nodes."
       REFERENCE  "draft-ietf-ips-iSNS-20.txt, Section 3.4"
       ::= { isnsSrvrInstEntry 17 }

   isnsSrvrInstUpdateDdDdsEnbld OBJECT-TYPE
       SYNTAX                  DdDdsModificationBitmap
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "This indicates the methods this server instance allows
    for modifying Discovery Domains and Discovery Domain Sets.
        Bit Field            Flag Description
        ---------   ------------------------------------
            0       SNMP protocol is allowed to modify DD's/DDS's
            1       Control Nodes are allowed
            2       Target iSCSI Nodes are allowed
            3       Initiator iSCSI Nodes are allowed
            4       Target iFCP Ports are allowed
            5       Initiator iFCP Ports are allowed

    If a bit is true (1) then the mode is enabled.  If no
    methods to change a DD are enabled, then the bitmap
    is set to 0."
       REFERENCE  "draft-ietf-ips-iSNS-20.txt, Sec 2.2.2 and 3.4"
       ::= { isnsSrvrInstEntry 18 }

   --
   -- Count of objects currently registered in server instance
   --

   isnsNumObjTable             OBJECT-TYPE
       SYNTAX                  SEQUENCE OF
                                 IsnsNumObjEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Table providing the number of objects of each
    type in the iSNS server instance.  This table
    is optional to implement.  The number of entries
    is dependent upon the number of iSNS server instances
    being managed."
       ::= { isnsSrvrInfo 2 }

   isnsNumObjEntry             OBJECT-TYPE
       SYNTAX                  IsnsNumObjEntry

   Gibbons               Expires January 2004                       25

   Internet Draft              iSNS MIB                      July 2003

       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Entry of an iSNS server instance."
        INDEX    { isnsSrvrInstIndex }
        ::= { isnsNumObjTable 1 }

   IsnsNumObjEntry ::= SEQUENCE      {
        isnsNumDds             Unsigned32,
        isnsNumDd              Unsigned32,
        isnsNumEntities        Unsigned32,
        isnsNumPortals         Unsigned32,
        isnsNumPortalGroups    Unsigned32,
        isnsNumIscsiNodes      Unsigned32,
        isnsNumFcPorts         Unsigned32,
        isnsNumFcNodes         Unsigned32
                                      }

   isnsNumDds                  OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The current total number of Discovery Domain Sets
    in this iSNS instance.  This is the number of rows
    in the isnsSrvrDdsTable."
       ::= { isnsNumObjEntry 1 }

   isnsNumDd                   OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The current total number of Discovery Domains
    in this iSNS instance.  This is the number of rows in the
    isnsSrvrDdTable."
       ::= { isnsNumObjEntry 2 }

   isnsNumEntities             OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The current number of Entities registered in this
    iSNS server instance.  This is the number of rows in
    the isnsRegEntityTable for this instance."
       ::= { isnsNumObjEntry 3 }

   isnsNumPortals              OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The current total number of Portals registered in iSNS.

   Gibbons               Expires January 2004                       26

   Internet Draft              iSNS MIB                      July 2003

    This is the number of rows in isnsRegPortalTable."
       ::= { isnsNumObjEntry 4 }

   isnsNumPortalGroups         OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The current total number of Portal Groups registered in
    iSNS.  This is the number of rows in
    isnsRegPortalGroupTable."
       ::= { isnsNumObjEntry 5 }

   isnsNumIscsiNodes           OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The current total number of iSCSI node entries registered in
    the iSNS.  This is the number rows in isnsRegIscsiNodeTable."
       ::= { isnsNumObjEntry 6 }

   isnsNumFcPorts              OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The current total number of FC Port entries registered in the
    iSNS.  This is the number of rows in isnsRegFcPortTable."
       ::= { isnsNumObjEntry 7 }

   isnsNumFcNodes              OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The current total number of FC node entries registered in the
    iSNS. This is the number of rows in isnsRegFcNodeTable."
       ::= { isnsNumObjEntry 8 }

   --
   -- Next available object identifier in each iSNS Server
   -- instance
   --

   isnsNextIdxTable            OBJECT-TYPE
       SYNTAX                  SEQUENCE OF
                                 IsnsNextIdxEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The next available Discovery Domain Set Identifier,
    Discovey Domain Identifier, iSCSI Index, Portal Group Index,
    and Portal Index for the specified iSNS server instance.

   Gibbons               Expires January 2004                       27

   Internet Draft              iSNS MIB                      July 2003

    This is used for object creation through SNMP for the
    respective object types.  Indexes are used for objects that
    have unique names that are too long or unwieldy for use as
    an SNMP index.  The number of entries is dependent upon
    the number of iSNS server instances being managed."
       ::= { isnsSrvrInfo 3 }

   isnsNextIdxEntry            OBJECT-TYPE
       SYNTAX                    IsnsNextIdxEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Entry of an iSNS server instance."
        INDEX    { isnsSrvrInstIndex }
        ::= { isnsNextIdxTable 1 }

   IsnsNextIdxEntry ::= SEQUENCE   {
          isnsNextIdxDds         DiscoveryDomainSetId,
          isnsNextIdxDd          DiscoveryDomainId,
          isnsNextIdxIscsiNode   NodeIndexIdOr0,
          isnsNextIdxPortal      PortalIndexId
                                   }

   isnsNextIdxDds              OBJECT-TYPE
       SYNTAX                  DiscoveryDomainSetId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "This object returns the next available DDS ID that MAY
    be used for DDS creation for this iSNS server instance.
    The user should read and use the value of isnsNextIdxDds
    before performing a isnsDdsTable row creation.  The
    isnsNextIdxDds value returned MAY be used as the index
    value when creating a new row in the isnsDdsTable.  Use
    of this variable reduces the chance for an index
    conflict.  Each GET / GET NEXT of this variable will
    return a different value."
       ::= { isnsNextIdxEntry 1 }

   isnsNextIdxDd               OBJECT-TYPE
       SYNTAX                  DiscoveryDomainId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "This object returns the next available DD ID that MAY
    be used for DD creation for this iSNS server instance.
    The user should read and use the value of isnsNextIdxDd
    before performing a isnsDdTable row creation.  The
    isnsNextIdxDd value returned MAY be used as the index
    value when creating a new row in the isnsDdTable.  Use
    of this variable reduces the chance for an index
    conflict.  Each GET / GET NEXT of this variable will
    return a different value."
       ::= { isnsNextIdxEntry 2 }

   Gibbons               Expires January 2004                       28

   Internet Draft              iSNS MIB                      July 2003


   isnsNextIdxIscsiNode        OBJECT-TYPE
       SYNTAX                  NodeIndexIdOr0
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The next available iSCSI node index for adding an
    unregistered iSCSI node to a Discovery Domain. The
    iSCSI node index used for a specific iSCSI node
    name is persistent across server reinitializations
    when the iSCSI node is a member of a Discovery
    Domain (DD). This variable is used when an iSCSI
    node is to be added to a Discovery Domain prior to
    it being registered in the server using the iSNS
    protocol.  Registered iSCSI nodes have an entry in
    the isnsRegIscsiNodeTable.  If an iSCSI node is
    already registered in the server or is already
    a member of a Discovery Domain, then it will already
    have an iSCSI node index, and the index MUST be used
    for any additional DD membership registrations.  If
    iSCSI is not supported by this iSNS Server instance,
    and this object is implemented, then this object
    SHALL return 0."
       ::= { isnsNextIdxEntry 3 }

   isnsNextIdxPortal          OBJECT-TYPE
       SYNTAX                 PortalIndexId
       MAX-ACCESS             read-only
       STATUS                 current
       DESCRIPTION
   "The next available portal index for adding an unregistered
    portal to a discovery domain. The portal index used for a
    specific portal is persistent across server reinitializations
    only when the portal is an explicit member of a Discovery
    Domain (DD). This variable is used when a portal is to be
    explicitly added to a Discovery Domain prior to it being
    registered in the server using the iSNS protocol.  Registered
    portals have an entry in the isnsRegPortalTable.  If a portal
    is already registered in the server, or is already a member
    of a Discovery Domain, then it will already have a portal
    index.  The same portal index MUST be used for any additional
    DD membership registrations of the same portal."
       ::= { isnsNextIdxEntry 4 }

   --
   -- Control node information
   --

   isnsCntlNodeInfo     OBJECT IDENTIFIER ::= { isnsSrvrInfo 4 }

   --
   -- Specific iSCSI Nodes authorized to register as Control Nodes
   --


   Gibbons               Expires January 2004                       29

   Internet Draft              iSNS MIB                      July 2003

   isnsCntlNodeIscsiTable      OBJECT-TYPE
       SYNTAX                  SEQUENCE OF
                                 IsnsCntlNodeIscsiEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Specified iSCSI Nodes that can register as control nodes.
    The number of rows is dependent on the number of possible
    iSCSI Control Nodes, and if SNMP is enabled to view control
    node information, as indicated by isnsSrvrInstCntrlNodeAuth.
    This table is accesible and usable to view and/or modify the
    set of control nodes if isnsSrvrInstCntrlNodeAuth is set to
    the viewNodes or modifyNodes value."
       ::= { isnsCntlNodeInfo 1 }

   isnsCntlNodeIscsiEntry      OBJECT-TYPE
       SYNTAX                  IsnsCntlNodeIscsiEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "This is an iSCSI Control Node entry for a specific iSNS
    server instance."
        INDEX          { isnsSrvrInstIndex,
                         isnsCntlNodeIscsiNodeIdx }
        ::= { isnsCntlNodeIscsiTable 1 }

   IsnsCntlNodeIscsiEntry ::= SEQUENCE {
        isnsCntlNodeIscsiNodeIdx       NodeIndexId,
        isnsCntlNodeIscsiNodeName      SnmpAdminString,
        isnsCntlNodeIscsiRowStatus     RowStatus
                                       }

   isnsCntlNodeIscsiNodeIdx    OBJECT-TYPE
       SYNTAX                  NodeIndexId
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The iSCSI Index for the storage node authorized to act
    as a control node."
        ::= { isnsCntlNodeIscsiEntry 1 }

   isnsCntlNodeIscsiNodeName   OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..223))
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "The iSCSI Name of the initiator or target associated with
    the storage node.  The iSCSI Name can not be longer then
    223 bytes.  The iSNS server internal maximum size is 224
    bytes to provide NULL termination.  This is the iSCSI Node
    Name for the storage node authorized to act as a control
    node."
        ::= { isnsCntlNodeIscsiEntry 2 }


   Gibbons               Expires January 2004                       30

   Internet Draft              iSNS MIB                      July 2003

   isnsCntlNodeIscsiRowStatus  OBJECT-TYPE
        SYNTAX                 RowStatus
        MAX-ACCESS             read-create
        STATUS                 current
        DESCRIPTION
   "This indicates the status of this entry in the
    table."
        ::= { isnsCntlNodeIscsiEntry 3 }

   --
   -- Specific FC Ports authorized to register as Control Nodes
   --

   isnsCntlNodeFcPortTable     OBJECT-TYPE
       SYNTAX                  SEQUENCE OF
                                 IsnsCntlNodeFcPortEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Specified FC Ports that can register as control nodes.  The
    number of rows is dependent on the number of possible FC
    Port Control Nodes, and if SNMP is enabled to view control
    node information, as indicated by isnsSrvrInstCntrlNodeAuth.
    This table is accesible and usable to view and/or modify the
    set of control nodes if isnsSrvrInstCntrlNodeAuth is set to
    the viewNodes or modifyNodes value."
       ::= { isnsCntlNodeInfo 2 }

   isnsCntlNodeFcPortEntry     OBJECT-TYPE
       SYNTAX                  IsnsCntlNodeFcPortEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "FC Port control node entry."
        INDEX          { isnsSrvrInstIndex,
                         isnsCntlNodeFcPortName }
        ::= { isnsCntlNodeFcPortTable 1 }

   IsnsCntlNodeFcPortEntry ::= SEQUENCE     {
        isnsCntlNodeFcPortName          FcNameIdOrZero,
        isnsCntlNodeFcPortRowStatus     RowStatus
                                            }

   isnsCntlNodeFcPortName      OBJECT-TYPE
       SYNTAX                  FcNameIdOrZero
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "FC Port that can be a control node."
        ::= { isnsCntlNodeFcPortEntry 1 }

   isnsCntlNodeFcPortRowStatus OBJECT-TYPE
       SYNTAX                  RowStatus
       MAX-ACCESS              read-create

   Gibbons               Expires January 2004                       31

   Internet Draft              iSNS MIB                      July 2003

       STATUS                  current
       DESCRIPTION
   "This indicates the status of this entry in the
    table."
        ::= { isnsCntlNodeFcPortEntry 2 }

   --
   -- Discovery Domain Set information
   --

   isnsDdsInfo     OBJECT IDENTIFIER ::= { isnsSrvrInfo 5 }

   --
   -- Discovery Domain Set Registrations --------------------
   --

   isnsDdsTable                OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsDdsEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "A table containing configuration information for each
    Discovery Domain Set (DDS) registered in the iSNS server
    instance. The number of rows in the table is dependent
    on the number of DDSs registered in the specified iSNS
    server instance.  A DDS can be created in the iSNS Server
    by creating a row in this table.  The index value should
    be determined by using isnsNextIdxDds variable to determine
    the next available index."
       ::= { isnsDdsInfo 1 }

   isnsDdsEntry                OBJECT-TYPE
       SYNTAX                  IsnsDdsEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Information on one Discovery Domain Set (DDS) registered
    in the iSNS server instance.  The isnsNextIdxDds variable
    is used to determine the next isnsDdsId that should be
    used for row creation.  During creation of a row, if a
    symbolic name is not provided in isnsDdsSymbolicName, then
    a unique symbolic name will be provided by the iSNS server.
    The creation and deletion of DDS's should be carefully
    handled so as to not disrupt a DDS created by a storage
    entity through the iSNS protocol directly."
       INDEX   { isnsSrvrInstIndex, isnsDdsId}
       ::= { isnsDdsTable 1 }

   IsnsDdsEntry ::=
       SEQUENCE {
          isnsDdsId             DiscoveryDomainSetId,
          isnsDdsSymbolicName   SnmpAdminString,
          isnsDdsStatus         IsnsDdsStatusId,
          isnsDdsRowStatus      RowStatus

   Gibbons               Expires January 2004                       32

   Internet Draft              iSNS MIB                      July 2003

                }

   isnsDdsId                   OBJECT-TYPE
       SYNTAX                  DiscoveryDomainSetId
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The ID that refers to this Discovery Domain Set and
    index to the table."
       ::= { isnsDdsEntry 1 }

   isnsDdsSymbolicName         OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..255))
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "The Discovery Domain Set Symbolic Name field contains
    a unique variable length description (up to 255 bytes)
    that is associated with the DDS.  If a Symbolic Name is
    not provided, then one will be generated by the iSNS
    server."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsDdsEntry 2 }

   isnsDdsStatus               OBJECT-TYPE
       SYNTAX                  IsnsDdsStatusId
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "The bitmap indicating the status of a Discovery Domain
    Set (DDS) registered in the iSNS.
                 Bit           Status
              ---------       ---------
              All Others       RESERVED
                  31           enabled

    If bit(31) is set to  true then the DDS is Enabled.  If set
    to false the the DDS is disabled."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       DEFVAL                  { { enabled } }
       ::= { isnsDdsEntry 3 }

   isnsDdsRowStatus            OBJECT-TYPE
       SYNTAX                  RowStatus
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "This object indicates the status of this Discovery
    Domain Set row.  The normal state for a DDS is active."
       ::= { isnsDdsEntry 4 }

   --
   -- Discovery Domain Set Members --------------------
   --

   Gibbons               Expires January 2004                       33

   Internet Draft              iSNS MIB                      July 2003


   --
   -- DDS Membership Assignment
   --

   isnsDdsMemberTable          OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsDdsMemberEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "A table containing Discovery Domains (DDs) that have
    been assigned to specific Discovery Domain Sets (DDSs).
    The number of rows in the table is dependent on the
    number of DD to DDS relationships in the iSNS instance."
       ::= { isnsDdsInfo 2 }

   isnsDdsMemberEntry              OBJECT-TYPE
       SYNTAX                  IsnsDdsMemberEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The mapping of one Discovery Domain (DD) to a Discovery
    Domain Set (DDS).  This indicates the DD is a member of
    the DDS.  To create a row, isnsDdsId contains the
    DDS ID of the DDS, and isnsDdsDdId contains the DD ID of
    the DD which will be a member of the DDS.  If a DDS is
    deleted, then each entry associating the DDS with a DD is
    removed.  The addition/deletion of DD's in a DDS should be
    carefully handled so as to not disrupt a DDS created by a
    storage entity through the iSNS protocol directly."
       INDEX   { isnsSrvrInstIndex,
                 isnsDdsId,
                 isnsDdsMemberDdId }
       ::= { isnsDdsMemberTable 1 }

   IsnsDdsMemberEntry ::=
       SEQUENCE {
          isnsDdsMemberDdId       DiscoveryDomainId,
          isnsDdsMemberRowStatus  RowStatus
                }

   isnsDdsMemberDdId           OBJECT-TYPE
       SYNTAX                  DiscoveryDomainId
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The ID that identifies the Discovery Domain
    which is a member of the Discovery Domain Set."
       ::= { isnsDdsMemberEntry 1 }

   isnsDdsMemberRowStatus      OBJECT-TYPE
       SYNTAX                  RowStatus
       MAX-ACCESS              read-create
       STATUS                  current

   Gibbons               Expires January 2004                       34

   Internet Draft              iSNS MIB                      July 2003

       DESCRIPTION
   "This object indicates the status of this entry."
       ::= { isnsDdsMemberEntry 2 }

   --
   -- Discovery Domain information
   --

   isnsDdInfo     OBJECT IDENTIFIER ::= { isnsSrvrInfo 6 }

   --
   -- Discovery Domain Registrations ----------------------------
   --

   isnsDdTable                 OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsDdEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "A table containing configuration information for each
    Discovery Domain (DD) registered in the iSNS.  The number
    of rows in the table is dependent on the number of DDs
    registered in the iSNS instance.  A DD can be created
    in the iSNS Server by creating a row in this table.
    The index value should be determined by using
    isnsNextIdxDd variable to determine the next available
    index"
       ::= { isnsDdInfo 1 }

   isnsDdEntry                 OBJECT-TYPE
       SYNTAX                  IsnsDdEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Information on a Discovery Domain (DD) registered in
    the iSNS server instance.  The isnsNextIdxDd variable is
    used to determine the next isnsDdId value that should be
    used for row creation.  During creation of a row, if a
    symbolic name is not provided in isnsDdSymbolicName, then
    a unique symbolic name will be provided by the iSNS server.
    The creation and deletion of DD's should be carefully
    handled so as to not disrupt a DD created by a storage
    entity through the iSNS protocol directly."
       INDEX   { isnsSrvrInstIndex, isnsDdId}
       ::= { isnsDdTable 1 }

   IsnsDdEntry::=
       SEQUENCE {
          isnsDdId             DiscoveryDomainId,
          isnsDdSymbolicName   SnmpAdminString,
          isnsDdFeatures       DdFeatureBitmapId,
          isnsDdRowStatus      RowStatus
                }


   Gibbons               Expires January 2004                       35

   Internet Draft              iSNS MIB                      July 2003

   isnsDdId                    OBJECT-TYPE
       SYNTAX                  DiscoveryDomainId
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The ID that refers to this Discovery Domain, and the
    index to the table."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsDdEntry 1 }

   isnsDdSymbolicName          OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..255))
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "The Discovery Domain Symbolic Name field contains a
    unique variable length description (up to 255 bytes)
    that is associated with the DD."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsDdEntry 2 }

   isnsDdFeatures              OBJECT-TYPE
       SYNTAX                  DdFeatureBitmapId
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "The Discovery Domain Features field contains a bitmap
    indicating the features of this DD.
        Bit            DD Feature
       ---------       ---------
       All Others      RESERVED
         31            bootlist

    Boot List: this feature indicates that the targets
    in this DD provide boot capabilities for the member
    initiators.

    Setting a bit to true (1) indicates the feature is
    enabled.  By default no DD features are enabled."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsDdEntry 3 }

   isnsDdRowStatus             OBJECT-TYPE
       SYNTAX                  RowStatus
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "This object indicates the status of this entry."
       ::= { isnsDdEntry 4 }

   --
   -- Discovery Domain Members --------------------
   --


   Gibbons               Expires January 2004                       36

   Internet Draft              iSNS MIB                      July 2003

   --
   -- DD iSCSI Node Membership Assignment
   --

   isnsDdIscsiMemberTable      OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsDdIscsiMemberEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "A table containing iSCSI node indexes that have been
    assigned to specific DDs in this iSNS server instance.  The
    number of rows in the table is dependent on the number of
    relationships between iSCSI Nodes and DDs registered in the
    iSNS instance."
       ::= { isnsDdInfo 2 }

   isnsDdIscsiMemberEntry      OBJECT-TYPE
       SYNTAX                  IsnsDdIscsiMemberEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The mapping of one iSCSI Node to a Discovery Domain to
    indicate membership in the DD.  The indexes are the iSNS
    server instance, the DD ID of the Discovery Domain, and
    the iSCSI Node Index of the  iSCSI Node.

    For iSCSI nodes already registered in the server, the
    isnsDdMemberIscsiIdx for a specific isnsDdIscsiNodeName is
    obtained from the isnsRegIscsiNodeTable.

    For unregistered iSCSI nodes, if they are already a member of
    other Discovery Domains, then the same isnsDdMemberIscsiIdx
    value MUST be used in this DD.  If the unregistered iSCSI
    node is not already a member of another Discovery Domain, then
    the variable isnsNextIdxIscsiNode is used to obtain a valid
    isnsDdMemberIscsiIdx value.

    If a DD is removed from the iSNS, then all entries associating
    nodes with the DD are removed."
       INDEX   { isnsSrvrInstIndex,
                 isnsDdId,
                 isnsDdMemberIscsiIdx }
       ::= { isnsDdIscsiMemberTable 1 }

   IsnsDdIscsiMemberEntry::=
       SEQUENCE {
          isnsDdMemberIscsiIdx     NodeIndexId,
          isnsDdMemberIscsiName    SnmpAdminString,
          isnsDdMemberIsRegistered TruthValue,
          isnsDdMemberRowStatus    RowStatus
                }

   isnsDdMemberIscsiIdx        OBJECT-TYPE
       SYNTAX                  NodeIndexId

   Gibbons               Expires January 2004                       37

   Internet Draft              iSNS MIB                      July 2003

       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The iSCSI node index for this member node entry.  This
    index is used to uniquely indicate this table entry,
    and provides a 1 to 1 mapping to a node name.  The
    iSCSI node name is too long to be used for an index
    directly.  The iSCSI node index used for a specific
    iSCSI node name MUST be indentical in all DDs, and is
    persistent across server reinitializations when the
    iSCSI node is a member of a Discovery Domain (DD)."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsDdIscsiMemberEntry 1 }

   isnsDdMemberIscsiName       OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..223))
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "The iSCSI Name associated with the storage node.  The
    iSCSI Name can not be longer then 223 bytes.  The iSNS
    server internal maximum size is 224 bytes to provide
    NULL termination.  This is the iSCSI Name for the storage
    node that is a member of the DD.  This value maps 1 to 1
    to the isnsDdMemberIscsiIdx node index.  The iSCSI Name
    field is too long to be easily used for an index directly.
    The node index used for a specific node name is only
    persistent across iSNS server reinitializations for nodes
    that are in a Discovery Domain (DD) or are registered
    control nodes.  This value is only required during row
    creation if the storage node is not yet registered in the
    iSNS server instance.  If the storage node is not yet
    registered, then the iSCSI Name MUST be provided with the
    iSCSI node index during row creation in order to create the
    1 to 1 mapping."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsDdIscsiMemberEntry 2 }

   isnsDdMemberIsRegistered    OBJECT-TYPE
       SYNTAX                  TruthValue
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "This indicates whether this member of the DD is currently
    registered in the iSNS Server instance.  iSCSI Storage
    Node members do not need to be currently registered in
    order for their iSCSI Name and Index to be added to
    a DD."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6.11"
       ::= { isnsDdIscsiMemberEntry 3 }

   isnsDdMemberRowStatus      OBJECT-TYPE
       SYNTAX                 RowStatus
       MAX-ACCESS             read-create

   Gibbons               Expires January 2004                       38

   Internet Draft              iSNS MIB                      July 2003

       STATUS                 current
       DESCRIPTION
   "This object indicates the status of this entry."
       ::= { isnsDdIscsiMemberEntry 4 }

   --
   -- DD Portal Membership Assignment
   --

   isnsDdPortalMemberTable    OBJECT-TYPE
       SYNTAX                 SEQUENCE OF IsnsDdPortalMemberEntry
       MAX-ACCESS             not-accessible
       STATUS                 current
       DESCRIPTION
   "A table containing indexes portal objects that have been
    explicitly assigned to specific DDs.  Explicit assignment of
    a portal to a DD is only done when a specific set of portals
    are prefered for use within a DD.  Otherwise, for iSCSI, the
    Portal Group Object should be used for identifying which portals
    provide access to which storage nodes. The number of rows in the
    table is dependent on the number of explicit relationships
    between portals and DDs registered in the iSNS."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsDdInfo 3 }

   isnsDdPortalMemberEntry    OBJECT-TYPE
       SYNTAX                 IsnsDdPortalMemberEntry
       MAX-ACCESS             not-accessible
       STATUS                 current
       DESCRIPTION
   "Each entry indicates an explicit addition of a portal to a
    discovery domain.  The explicit addition of an entity portal
    to a discovery domain indicates the portal is preferred for
    access to nodes of the entity for this discovery domain.  Portal
    Group objects are used in iSCSI to indicate mapping of portals
    to nodes across all discovery domains. Portals that have been
    explicitly mapped a discovery domain will be returned as part
    of a query that is scoped to that discovery domain.  If no
    portal of an entity has been explicitly mapped to a discovery
    domain, then all portals of the entity that provide access to
    a storage node are returned as part of a query.  The table
    indexes are the server instance, the DD ID of the Discovery
    Domain, and the Portal Index of the portal.

    For registered portals, the isnsDdPortalPrtlIdx for a specific
    isnsDdPortalAddr and isnsDdPortalPort is obtained from the
    isnsRegPortalTable.

    For unregistered portals, if they are already a member of other
    Discovery Domains, the same isnsDdPortalIdx MUST be used.  For
    unregistered portals, if they are not already a member of other
    Discovery Domains, the variable isnsNextIdxPortal is used to
    obtain a valid isnsDdPortalIdx.


   Gibbons               Expires January 2004                       39

   Internet Draft              iSNS MIB                      July 2003

    If a DD is removed from the iSNS, then all entries associating
    portals with the DD are removed."
       INDEX   { isnsSrvrInstIndex,
                 isnsDdId,
                 isnsDdMemberPortalIdx }
       ::= { isnsDdPortalMemberTable 1 }

   IsnsDdPortalMemberEntry ::=
       SEQUENCE {
          isnsDdMemberPortalIdx        PortalIndexId,
          isnsDdMemberPortalAddrType   InetAddressType,
          isnsDdMemberPortalAddr       InetAddress,
          isnsDdMemberPortalPortType   PortalPortTypeId,
          isnsDdMemberPortalPort       PortalPortId,
          isnsDdMemberPortalIsRegistered TruthValue,
          isnsDdMemberPortalRowStatus  RowStatus
                }

   isnsDdMemberPortalIdx      OBJECT-TYPE
       SYNTAX                 PortalIndexId
       MAX-ACCESS             not-accessible
       STATUS                 current
       DESCRIPTION
   "The index for a portal explicitly contained in the discovery
    domain.  The Portal Index used for a specific portal
    IP-address and port number pair is only persistent across
    reboots for portals that have been explicitly added to a
    Discovery Domain (DD).  If a portal is not explicitly
    registered in any DD, then the index used for a portal can
    change after a server reinitialization."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsDdPortalMemberEntry 1 }

   isnsDdMemberPortalAddrType OBJECT-TYPE
       SYNTAX                 InetAddressType
       MAX-ACCESS             read-create
       STATUS                 current
       DESCRIPTION
   "The type of Inet address in isnsDdMemberPortalAddr."
       ::= { isnsDdPortalMemberEntry 2 }

   isnsDdMemberPortalAddr     OBJECT-TYPE
       SYNTAX                 InetAddress
       MAX-ACCESS             read-create
       STATUS                 current
       DESCRIPTION
   "The Inet Address for the portal as defined in
    the iSNS Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsDdPortalMemberEntry 3 }

   isnsDdMemberPortalPortType OBJECT-TYPE
       SYNTAX                 PortalPortTypeId
       MAX-ACCESS             read-create

   Gibbons               Expires January 2004                       40

   Internet Draft              iSNS MIB                      July 2003

       STATUS                 current
       DESCRIPTION
   "The port type for the portal, either UDP or TCP, as
    defined in the iSNS Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsDdPortalMemberEntry 4 }

   isnsDdMemberPortalPort     OBJECT-TYPE
       SYNTAX                 PortalPortId
       MAX-ACCESS             read-create
       STATUS                 current
       DESCRIPTION
   "The port number for the portal as defined in the
    iSNS Specification.  Whether the portal type is TCP
    or UDP is indicated by isnsDdPortalPortType."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsDdPortalMemberEntry 5 }

   isnsDdMemberPortalIsRegistered OBJECT-TYPE
       SYNTAX                  TruthValue
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "This indicates whether this member of the DD is currently
    registered in the iSNS Server instance.  Portals that are
    DD members do not need to be currently registered in
    order for them to be added to a DD."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6.11"
       ::= { isnsDdPortalMemberEntry 6 }

   isnsDdMemberPortalRowStatus  OBJECT-TYPE
       SYNTAX                 RowStatus
       MAX-ACCESS             read-create
       STATUS                 current
       DESCRIPTION
   "This object indicates the status of this entry."
       ::= { isnsDdPortalMemberEntry 7 }

   --
   -- DD FC Port Membership Assignment
   --

   isnsDdFcPortMemberTable    OBJECT-TYPE
       SYNTAX                 SEQUENCE OF IsnsDdFcPortMemberEntry
       MAX-ACCESS             not-accessible
       STATUS                 current
       DESCRIPTION
   "A table containing FC Port World Wide Names (WWN) that
    have been assigned to specific DDs.  The number of rows
    in the table is dependent on the number of relationships
    between FC Ports and DDs registered in the iSNS."
       ::= { isnsDdInfo 4 }

   isnsDdFcPortMemberEntry    OBJECT-TYPE

   Gibbons               Expires January 2004                       41

   Internet Draft              iSNS MIB                      July 2003

       SYNTAX                 IsnsDdFcPortMemberEntry
       MAX-ACCESS             not-accessible
       STATUS                 current
       DESCRIPTION
   "The association of one FC Port with a Discovery Domain.
    Membership of an FC Port in a Discovery Domain is
    indicated by creating a row for the appropriate DD ID
    and FC Port WWN.  If a DD is removed from the iSNS, then
    entries associating nodes with the DD are removed."
       INDEX   { isnsSrvrInstIndex,
                 isnsDdId,
                 isnsDdMemberFcPortName }
       ::= { isnsDdFcPortMemberTable 1 }

   IsnsDdFcPortMemberEntry ::=
       SEQUENCE {
          isnsDdMemberFcPortName   FcNameIdOrZero,
          isnsDdMemberFcIsRegistered TruthValue,
          isnsDdMemberFcRowStatus  RowStatus
       }

   isnsDdMemberFcPortName     OBJECT-TYPE
       SYNTAX                 FcNameIdOrZero
       MAX-ACCESS             not-accessible
       STATUS                 current
       DESCRIPTION
   "The Port WWN the FC Port that is a member of the DD.
    The value MUST be a valid FC WWN, as per FC-GS-3."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsDdFcPortMemberEntry 1 }

   isnsDdMemberFcIsRegistered  OBJECT-TYPE
       SYNTAX                  TruthValue
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "This indicates whether this member of the DD is currently
    registered in the iSNS Server instance.  FC Ports that are
    DD members do not need to be currently registered in
    order for them to be added to a DD."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6.11"
       ::= { isnsDdFcPortMemberEntry 2 }

   isnsDdMemberFcRowStatus    OBJECT-TYPE
       SYNTAX                 RowStatus
       MAX-ACCESS             read-create
       STATUS                 current
       DESCRIPTION
   "This object indicates the status of this entry."
       ::= { isnsDdFcPortMemberEntry 3 }

   --
   --  Registered Device Information
   --

   Gibbons               Expires January 2004                       42

   Internet Draft              iSNS MIB                      July 2003


   isnsReg    OBJECT IDENTIFIER ::= { isnsSrvrInfo 7 }

   isnsRegEntityInfo           OBJECT IDENTIFIER
                                  ::= { isnsReg    1 }

   --
   -- iSNS Registered Entities Table
   --

   isnsRegEntityTable          OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsRegEntityEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "A table containing the registered Entity objects in the iSNS
    server instance.  The number of entries in the table is
    dependent on the number of Entity objects registered in the
    iSNS server instance.  All Entity objects are registered in
    the iSNS using the iSNS protocol."
       ::= { isnsRegEntityInfo 1 }

   isnsRegEntityEntry          OBJECT-TYPE
       SYNTAX                  IsnsRegEntityEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Information on one registered Entity object in the iSNS."
       INDEX   { isnsSrvrInstIndex,
                 isnsRegEntityIdx }
       ::= { isnsRegEntityTable 1 }

   IsnsRegEntityEntry ::=
       SEQUENCE {
          isnsRegEntityIdx            EntityIndexId,
          isnsRegEntityEID            SnmpAdminString,
          isnsRegEntityProtocol       EntityProtocolId,
          isnsRegEntityMgtAddrType    InetAddressType,
          isnsRegEntityMgtAddr        InetAddress,
          isnsRegEntityTimestamp      DateAndTime,
          isnsRegEntityVersionMin     Integer32,
          isnsRegEntityVersionMax     Integer32,
          isnsRegEntityRegPeriod      Unsigned32
               }

   isnsRegEntityIdx            OBJECT-TYPE
       SYNTAX                  EntityIndexId
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The Entity Index for this entity.  This integer based index
    is assigned by the iSNS server when an Entity is initially
    registered. The Entity Index can be used to represent a
    registered Entity object in situations where the Entity EID

   Gibbons               Expires January 2004                       43

   Internet Draft              iSNS MIB                      July 2003

    would be too long/unwieldy."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegEntityEntry 1 }

   isnsRegEntityEID            OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..255))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The EID is a unique Entity object identifier (EID) as
    specified in the iSNS Specification.  This is the iSNS
    Entity Identifier for this Entity object."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegEntityEntry 2 }

   isnsRegEntityProtocol       OBJECT-TYPE
       SYNTAX                  EntityProtocolId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSNS Entity Protocol is an enumerated value which
    indicates the type of nodes that are contained within it.

              Type Value       Entity Type
              ----------       -----------
                 1             No Protocol
                 2             iSCSI
                 3             iFCP
               All Others      To Be Assigend by IANA

    The No Protocol value is used to indicate that the Network
    Entity does not support an IP block storage protocol."
       REFERENCE  "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegEntityEntry 3 }

   isnsRegEntityMgtAddrType    OBJECT-TYPE
       SYNTAX                  InetAddressType
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The type of Inet address in isnsRegEntityMgtAddr."
       ::= { isnsRegEntityEntry 4 }

   isnsRegEntityMgtAddr        OBJECT-TYPE
       SYNTAX                  InetAddress
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSNS Management IP Address for the Entity object."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegEntityEntry 5 }

   isnsRegEntityTimestamp      OBJECT-TYPE
       SYNTAX                  DateAndTime

   Gibbons               Expires January 2004                       44

   Internet Draft              iSNS MIB                      July 2003

       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSNS Entity Registration Timestamp for the Entity object.
    This is the most recent date and time that the Entity object,
    and objects contained in the object, were registered or
    updated."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegEntityEntry 6 }

   isnsRegEntityVersionMin     OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSNS Entity Protocol Version Range minimum value.  A
    value of x'FF' is a wildcard value indicating no minimum to
    the protocol versions supported by this Entity.  Entity
    registrations with isnsRegEntityProtocol set to No Protocol
    always have a minimum version of 0."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegEntityEntry 7 }

   isnsRegEntityVersionMax     OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSNS Entity Protocol Version Range maximum value.  A
    value of x'FF' is a wildcard value indicating no maximum to
    the protocol versions supported by this Entity.  Entity
    registrations with isnsRegEntityProtocol set to No Protocol
    always have a maximum version of 0."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegEntityEntry 8 }

   isnsRegEntityRegPeriod      OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSNS Entity Status Inquiry (ESI) registration period
    which indicates the maximum time, in seconds, that the
    registration will be maintained without receipt of an iSNSP
    message from the entity.  If the Registration Period is set
    to 0, then the Entity SHALL NOT be deregistered due to no
    contact with the entity."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegEntityEntry 9 }

   --
   -- Entity Number of Objects Information
   --


   Gibbons               Expires January 2004                       45

   Internet Draft              iSNS MIB                      July 2003

   isnsRegEntityNumObjTable    OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsRegEntityNumObjEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "A table containing information on the number of objects
    associated with a registered Entityr in the iSNS server
    instance.  This table is optional to implement.  The number of
    entries in the table is dependent on the number of Entity
    objects registered in the iSNS."
       ::= { isnsRegEntityInfo 2 }

   isnsRegEntityNumObjEntry    OBJECT-TYPE
       SYNTAX                  IsnsRegEntityNumObjEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Information on the number of objects associated with a
    registered Entity object in an iSNS server instance."
       INDEX   { isnsSrvrInstIndex,
                 isnsRegEntityIdx }
       ::= { isnsRegEntityNumObjTable 1 }

   IsnsRegEntityNumObjEntry ::=
       SEQUENCE {
          isnsRegEntityInfoNumPortals      Unsigned32,
          isnsRegEntityInfoNumPortalGroups Unsigned32,
          isnsRegEntityInfoNumIscsiNodes   Unsigned32,
          isnsRegEntityInfoNumFcPorts      Unsigned32,
          isnsRegEntityInfoNumFcNodes      Unsigned32
               }

   isnsRegEntityInfoNumPortals OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The number of Portals associated with this Entity."
       ::= { isnsRegEntityNumObjEntry 1 }

   isnsRegEntityInfoNumPortalGroups OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The number of Portal Groups associated with this Entity."
       ::= { isnsRegEntityNumObjEntry 2 }

   isnsRegEntityInfoNumIscsiNodes OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The number of iSCSI Storage Nodes associated with this

   Gibbons               Expires January 2004                       46

   Internet Draft              iSNS MIB                      July 2003

    Entity."
       ::= { isnsRegEntityNumObjEntry 3 }

   isnsRegEntityInfoNumFcPorts OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The number of FC Ports associated with this Entity."
       ::= { isnsRegEntityNumObjEntry 4 }

   isnsRegEntityInfoNumFcNodes OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The number of FC Nodes associated with this Entity."
       ::= { isnsRegEntityNumObjEntry 5 }


   --
   -- iSNS Registered Portal Information
   --

   isnsRegPortalInfo           OBJECT IDENTIFIER
                                  ::= { isnsReg  2 }

   --
   -- iSNS Registered Portal Table
   --

   isnsRegPortalTable          OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsRegPortalEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "A table containing the registered Portals in the iSNS.
    The number of entries is dependent on the number of
    Portals registered in the iSNS."
       ::= { isnsRegPortalInfo 1 }

   isnsRegPortalEntry          OBJECT-TYPE
       SYNTAX                  IsnsRegPortalEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Information on one registered Entity Portal in the iSNS.
    The Entity Index is part of the table index to quickly
    find Portals that support a specific Entity."
       INDEX   { isnsSrvrInstIndex,
                 isnsRegEntityIdx,
                 isnsRegPortalPrtlIdx }
       ::= { isnsRegPortalTable 1 }


   Gibbons               Expires January 2004                       47

   Internet Draft              iSNS MIB                      July 2003

   IsnsRegPortalEntry ::=
       SEQUENCE {
          isnsRegPortalPrtlIdx        PortalIndexId,
          isnsRegPortalAddrType       InetAddressType,
          isnsRegPortalAddr           InetAddress,
          isnsRegPortalPortType       PortalPortTypeId,
          isnsRegPortalPort           PortalPortId,
          isnsRegPortalSymName        SnmpAdminString,
          isnsRegPortalEsiInterval    Unsigned32,
          isnsRegPortalEsiPortType    PortalPortTypeId,
          isnsRegPortalEsiPort        PortalPortId,
          isnsRegPortalScnPortType    PortalPortTypeId,
          isnsRegPortalScnPort        PortalPortId,
          isnsRegPortalSecurityInfo   PortalSecurityBitmapId
               }

   isnsRegPortalPrtlIdx        OBJECT-TYPE
       SYNTAX                  PortalIndexId
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The Portal Index for this node.  The index is created by the
    iSNS server for mapping between objects.  The Portal Index
    used for a specific portal IP-address and port number pair
    is only persistent across reboots for portals that have been
    explicitly added to a Discovery Domain (DD).  If a portal is
    not explicitly registered in any DD, then the index used for
    a portal can change after a server reinitialization."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPortalEntry 1 }

   isnsRegPortalAddrType       OBJECT-TYPE
       SYNTAX                  InetAddressType
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The type of Inet address in isnsRegPortalAddr."
       ::= { isnsRegPortalEntry 2 }

   isnsRegPortalAddr           OBJECT-TYPE
       SYNTAX                  InetAddress
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The Inet Address for this Portal as defined in
    the iSNS Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPortalEntry 3 }

   isnsRegPortalPortType       OBJECT-TYPE
       SYNTAX                  PortalPortTypeId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION

   Gibbons               Expires January 2004                       48

   Internet Draft              iSNS MIB                      July 2003

   "The port type for this Portal, either UDP or TCP, as
    defined in the iSNS Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPortalEntry 4 }

   isnsRegPortalPort           OBJECT-TYPE
       SYNTAX                  PortalPortId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The port number for this Portal as defined in the
    iSNS Specification.  Whether the Portal type is TCP
    or UDP is indicated by isnsRegPortalPortType."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPortalEntry 5 }

   isnsRegPortalSymName        OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..255))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The optional Symbolic Name for this Portal as defined in
    the iSNS Specification.  If not provided then the string
    SHALL be zero length."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPortalEntry 6 }

   isnsRegPortalEsiInterval    OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The Entity Status Inquiry (ESI) Interval for this Portal
    as defined in the iSNS Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPortalEntry 7 }

   isnsRegPortalEsiPortType    OBJECT-TYPE
       SYNTAX                  PortalPortTypeId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The port type for the ESI Port, either UDP or TCP, as
    defined in the iSNS Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPortalEntry 8 }

   isnsRegPortalEsiPort        OBJECT-TYPE
       SYNTAX                  PortalPortId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The TCP or UDP port number used for ESI monitoring.  Whether
    the port type is TCP or UDP is indicated by

   Gibbons               Expires January 2004                       49

   Internet Draft              iSNS MIB                      July 2003

    isnsRegPortalEsiPortType."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPortalEntry 9 }

   isnsRegPortalScnPortType    OBJECT-TYPE
       SYNTAX                  PortalPortTypeId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The port type for the SCN Port, either UDP or TCP, as
    defined in the iSNS Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPortalEntry 10 }

   isnsRegPortalScnPort        OBJECT-TYPE
       SYNTAX                  PortalPortId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The TCP or UDP port used to receive SCN messages from the
    iSNS server.  Whether the port type is TCP or UDP is
    indicated by isnsRegPortalScnPortType."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPortalEntry 11 }

   isnsRegPortalSecurityInfo   OBJECT-TYPE
       SYNTAX                  PortalSecurityBitmapId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "Indicates security attribute settings for the Portal as
    registered in the Portal Security Bitmap attribute.  The bit
    for bitmapVALID must be set in order for this attribute to
    contain valid information.

    Setting a bit to true (1) indicates the feature is
    enabled."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPortalEntry 12 }

   --
   -- iSNS Registered Portal Group Information
   --

   isnsRegPortalGroupInfo      OBJECT IDENTIFIER
                                  ::= { isnsReg  3 }

   --
   -- iSNS Registered Portal Group (PG) Table
   --

   isnsRegPgTable              OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsRegPgEntry
       MAX-ACCESS              not-accessible

   Gibbons               Expires January 2004                       50

   Internet Draft              iSNS MIB                      July 2003

       STATUS                  current
       DESCRIPTION
   "A table containing the registered Portal Groups (PGs) in
    the iSNS server instance.  The number of entries is
    dependent on the number of Portal Groups registered in
    the iSNS."
       ::= { isnsRegPortalGroupInfo 1 }

   isnsRegPgEntry              OBJECT-TYPE
       SYNTAX                  IsnsRegPgEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Information on one registered Portal Group in the iSNS
    server instance.  The Entity Index is part of the table
    index to quickly find Portal Groups that support Portals
    and iSCSI Storage Nodes in a specific Entity."
       INDEX   { isnsSrvrInstIndex,
                 isnsRegEntityIdx,
                 isnsRegPgIdx }
       ::= { isnsRegPgTable 1 }

   IsnsRegPgEntry ::=
       SEQUENCE {
          isnsRegPgIdx                PortalGroupIndexId,
          isnsRegPgIscsiNodeIdx       NodeIndexId,
          isnsRegPgIscsiName          SnmpAdminString,
          isnsRegPgPortalPrtlIdx      PortalIndexId,
          isnsRegPgPortalAddrType     InetAddressType,
          isnsRegPgPortalAddr         InetAddress,
          isnsRegPgPortalPortType     PortalPortTypeId,
          isnsRegPgPortalPort         PortalPortId,
          isnsRegPgPGT                PortalGroupTagOr0Id
                }

   isnsRegPgIdx                OBJECT-TYPE
       SYNTAX                  PortalGroupIndexId
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The PG Index for this node.  The index is created by the
    iSNS server instance for uniquely identifying objects.
    The PG object is registered at the same time a Portal or
    Storage Node is registered using the iSNS protocol."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPgEntry 1 }

   isnsRegPgIscsiNodeIdx       OBJECT-TYPE
       SYNTAX                  NodeIndexId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSCSI Node Index for the node associated with this PG.
    This index can be used to reference the

   Gibbons               Expires January 2004                       51

   Internet Draft              iSNS MIB                      July 2003

    isnsRegIscsiNodeTable."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPgEntry 2 }

   isnsRegPgIscsiName          OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..223))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSCSI Name of the initiator or target associated with
    the storage node.  The iSCSI Name can not be longer then
    223 bytes.  The iSNS server internal maximum size is 224
    bytes to provide NULL termination.  This is the PG iSCSI Name
    that uniquely identifies the iSCSI Storage Node that is
    associated with this PG."
       ::= { isnsRegPgEntry 3 }

   isnsRegPgPortalPrtlIdx      OBJECT-TYPE
       SYNTAX                  PortalIndexId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The Portal Index for the Portal associated with this PG.
    This index can be used to reference the isnsRegPortalTable."
       ::= { isnsRegPgEntry 4 }

   isnsRegPgPortalAddrType     OBJECT-TYPE
       SYNTAX                  InetAddressType
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The type of Inet address in isnsRegPgPortalAddr."
       ::= { isnsRegPgEntry 5 }

   isnsRegPgPortalAddr         OBJECT-TYPE
       SYNTAX                  InetAddress
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The Inet Address for the Portal that is associated with
    the PG."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPgEntry 6 }

   isnsRegPgPortalPortType     OBJECT-TYPE
       SYNTAX                  PortalPortTypeId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The port type, either UDP or TCP, for the Portal that
    is associated with this PG object."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPgEntry 7 }


   Gibbons               Expires January 2004                       52

   Internet Draft              iSNS MIB                      July 2003

   isnsRegPgPortalPort         OBJECT-TYPE
       SYNTAX                  PortalPortId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The port number for the Portal that is associated with
    this PG object.  Whether the Portal type is TCP
    or UDP is indicated by isnsRegPgPortalPortType."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPgEntry 8 }

   isnsRegPgPGT                OBJECT-TYPE
       SYNTAX                  PortalGroupTagOr0Id
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The Portal Group Tag (PGT) for the PG object in the iSNS
    server instance.  This indicates the tag value that the
    Portal uses for access to the iSCSI Storage Node.  The
    PGT is used for coordinated access between multiple
    Portals, as described in the iSCSI Spec.  The value of 0
    indicates a NULL value, or no association."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegPgEntry 9 }

   --
   -- iSNS Registered iSCSI Node Information
   --

   isnsRegIscsiNodeInfo  OBJECT IDENTIFIER ::= { isnsReg  4 }

   --
   -- iSNS Registered iSCSI Node Table
   --

   isnsRegIscsiNodeTable       OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsRegIscsiNodeEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "A table containing the registered iSCSI Nodes in the iSNS
    server instance.  Storage devices register using the iSNS
    protocol.  While a device cannot be registered in an iSNS
    server using SNMP, an entry can be deleted in order to
    remove 'stale' entries. The number of entries is related
    to the number of iSCSI nodes registered in the iSNS."
       ::= { isnsRegIscsiNodeInfo 1 }

   isnsRegIscsiNodeEntry       OBJECT-TYPE
       SYNTAX                  IsnsRegIscsiNodeEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Information on one iSCSI node that has been registered in

   Gibbons               Expires January 2004                       53

   Internet Draft              iSNS MIB                      July 2003

    the iSNS server instance.  The RowStatus variable provides
    a method to delete registered nodes that were not properly
    deregistered / removed through iSNSP.  New rows cannot be
    added through SNMP."
       INDEX { isnsSrvrInstIndex,
               isnsRegEntityIdx,
               isnsRegIscsiNodeIdx }
       ::= { isnsRegIscsiNodeTable 1 }

   IsnsRegIscsiNodeEntry ::= SEQUENCE {
       isnsRegIscsiNodeIdx            NodeIndexId,
       isnsRegIscsiNodeName           SnmpAdminString,
       isnsRegIscsiNodeType           NodeTypeId,
       isnsRegIscsiNodeAlias          SnmpAdminString,
       isnsRegIscsiNodeScnBitmap      ScnBitmapId,
       isnsRegIscsiNodeWwnToken       FcNameIdOrZero,
       isnsRegIscsiNodeAuthMethod     SnmpAdminString
                                    }

   isnsRegIscsiNodeIdx         OBJECT-TYPE
       SYNTAX                  NodeIndexId
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The Node Index for this node.  The index is created by the
    iSNS server for mapping between objects.  The node index
    used for a specific node name is only persistent across
    reboots for nodes that are in a Discovery Domain (DD).  If
    a node is not registered in any DD, then the index used for
    a node can change after a server reinitialization."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegIscsiNodeEntry 1 }

   isnsRegIscsiNodeName        OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..223))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSCSI Name of the initiator or target associated with
    the storage node.  The iSCSI Name can not be longer then
    223 bytes.  The iSNS server internal maximum size is 224
    bytes to provide NULL termination.  This is the iSCSI Name
    that uniquely identifies the initiator, initiator/target,
    target, or control node in the network."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegIscsiNodeEntry 2 }

   isnsRegIscsiNodeType        OBJECT-TYPE
       SYNTAX                  NodeTypeId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The Node Type bit-map defining the functions of this
    iSCSI node.

   Gibbons               Expires January 2004                       54

   Internet Draft              iSNS MIB                      July 2003

                  Bit         Node Type
              ---------       ---------
              All Others       RESERVED
                 29            Control
                 30            Initiator
                 31            Target
   "
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegIscsiNodeEntry 3 }

   isnsRegIscsiNodeAlias       OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..255))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The Alias name of the iSCSI node.  This is a variable-length
    text-based description of up to 255 bytes."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegIscsiNodeEntry 4 }

   isnsRegIscsiNodeScnBitmap   OBJECT-TYPE
       SYNTAX                  ScnBitmapId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The State Change Notification (SCN) bitmap for a node.
        Bit Field          Flag Description
        ---------          ----------------
        All others         RESERVED
           24              INITIATOR AND SELF INFORMATION ONLY
           25              TARGET AND SELF INFORMATION ONLY
           26              MANAGEMENT REGISTRATION/SCN
           27              OBJECT REMOVED
           28              OBJECT ADDED
           29              OBJECT UPDATED
           30              DD/DDS MEMBER RMVD (MGT REG/SCN ONLY)
           31              DD/DDS MEMBER ADDED (MGT REG/SCN ONLY)

    Setting a bit to true (1) indicates the flag is
    enabled."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegIscsiNodeEntry 5 }

   isnsRegIscsiNodeWwnToken    OBJECT-TYPE
       SYNTAX                  FcNameIdOrZero
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "This contains an optional globally unique 64-bit integer value
    that can be used to represent the World Wide Node Name of the
    iSCSI device in a Fibre Channel fabric. This identifier is
    used during the device registration process, and MUST conform
    to the requirements in [FC-FS]."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"

   Gibbons               Expires January 2004                       55

   Internet Draft              iSNS MIB                      July 2003

       ::= { isnsRegIscsiNodeEntry 6 }

   isnsRegIscsiNodeAuthMethod  OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..255))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "This attribute contains a null-terminated string containing
    UTF-8 text listing the iSCSI authentication methods enabled
    for this iSCSI Node, in order of preference.  The text values
    used to identify iSCSI authentication methods are embedded in
    this string attribute and delineated by a comma.  The text
    values are identical to those found in the main iSCSI draft;
    additional vendor-specific text values are also possible."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegIscsiNodeEntry 7 }

   --
   -- iSNS Registered FC Port Information
   --

   isnsRegFcPortInfo           OBJECT IDENTIFIER
                                      ::= { isnsReg  5 }

   --
   -- iSNS Registered FC Port Table
   --

   isnsRegFcPortTable          OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsRegFcPortEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Information on registered FC Ports in the iSNS."
       ::= { isnsRegFcPortInfo 1 }

   isnsRegFcPortEntry          OBJECT-TYPE
       SYNTAX                   IsnsRegFcPortEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Information on one FC Port that has been registered in
    iSNS."
       INDEX { isnsSrvrInstIndex,
               isnsRegEntityIdx,
               isnsRegFcPortWwpn }
       ::= { isnsRegFcPortTable 1 }

   IsnsRegFcPortEntry ::= SEQUENCE {
       isnsRegFcPortWwpn              FcNameIdOrZero,
       isnsRegFcPortID                FcAddressId,
       isnsRegFcPortType              Integer32,
       isnsRegFcPortSymName           SnmpAdminString,
       isnsRegFcPortFabricPortWwn     FcNameIdOrZero,

   Gibbons               Expires January 2004                       56

   Internet Draft              iSNS MIB                      July 2003

       isnsRegFcPortHA                FcAddressId,
       isnsRegFcPortAddrType          InetAddressType,
       isnsRegFcPortAddr              InetAddress,
       isnsRegFcPortFcCos             CosBitmapId,
       isnsRegFcPortFc4Types          OCTET STRING,
       isnsRegFcPortFc4Descr          OCTET STRING,
       isnsRegFcPortFc4Features       OCTET STRING,
       isnsRegFcPortScnBitmap         ScnBitmapId,
       isnsRegFcPortRole              NodeTypeId,
       isnsRegFcPortFcNodeWwn         FcNameIdOrZero,
       isnsRegFcPortPpnWwn            FcNameIdOrZero
                                   }

   isnsRegFcPortWwpn           OBJECT-TYPE
       SYNTAX                  FcNameIdOrZero
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The FC Port's World Wide Port Name as defined in the iSNS
    Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcPortEntry 1 }

   isnsRegFcPortID             OBJECT-TYPE
       SYNTAX                  FcAddressId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The FC Port's Port ID as defined in the iSNS Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcPortEntry 2 }

   isnsRegFcPortType           OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The FC Port Port Type as defined in the iSNS Specification
    and the Fibre Channel FC-GS-3 Specification.  Current values
    are as shown below:
           unknown      (0),
           nPort        (1),
           nlPort       (2),
           fNlPort      (3),
           fPort        (129),     -- x'81'
           flPort       (130),     -- x'82'
           ePort        (132),     -- x'84'
           bPort        (133),     -- x'85'
           mFcpPort     (65297),   -- x'FF11'
           iFcpPort     (65298),   -- x'FF12'
           unknownEnd   (65535)
    ."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcPortEntry 3 }

   Gibbons               Expires January 2004                       57

   Internet Draft              iSNS MIB                      July 2003


   isnsRegFcPortSymName      OBJECT-TYPE
       SYNTAX                SnmpAdminString (SIZE (0..255))
       MAX-ACCESS            read-only
       STATUS                current
       DESCRIPTION
   "The optional FC Port Port Symbolic Name as defined in the
    iSNS Specification.  If not provided then the string SHALL
    be zero length."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcPortEntry 4 }

   isnsRegFcPortFabricPortWwn  OBJECT-TYPE
       SYNTAX                  FcNameIdOrZero
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The Fabric Port WWN for this entry as defined in the iSNS
    Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
      ::= { isnsRegFcPortEntry 5 }

   isnsRegFcPortHA             OBJECT-TYPE
       SYNTAX                  FcAddressId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The FC Port Hard Address as defined in the iSNS
    Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcPortEntry 6 }

   isnsRegFcPortAddrType       OBJECT-TYPE
       SYNTAX                  InetAddressType
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The type of Inet address in the isnsRegFcPortAddr."
       ::= { isnsRegFcPortEntry 7 }

   isnsRegFcPortAddr           OBJECT-TYPE
       SYNTAX                  InetAddress
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The FC Port Inet Address as defined in the iSNS
    Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcPortEntry 8 }

   isnsRegFcPortFcCos          OBJECT-TYPE
       SYNTAX                  CosBitmapId
       MAX-ACCESS              read-only
       STATUS                  current

   Gibbons               Expires January 2004                       58

   Internet Draft              iSNS MIB                      July 2003

       DESCRIPTION
   "The FC Port Class of Service as defined in the iSNS
    Specification."
       REFERENCE  "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcPortEntry 9 }

   isnsRegFcPortFc4Types       OBJECT-TYPE
       SYNTAX                  OCTET STRING (SIZE (32))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The FC Port FC-4 Types as defined in the iSNS
    Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcPortEntry 10 }

   isnsRegFcPortFc4Descr       OBJECT-TYPE
       SYNTAX                  OCTET STRING(SIZE(0..255))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The FC Port FC-4 Descriptors as defined in the iSNS
    Specification."
        REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
      ::= { isnsRegFcPortEntry 11 }

   isnsRegFcPortFc4Features    OBJECT-TYPE
       SYNTAX                  OCTET STRING (SIZE (128))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The FC Port FC-4 Features as defined in the iSNS
    Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcPortEntry 12 }

   isnsRegFcPortScnBitmap      OBJECT-TYPE
       SYNTAX                  ScnBitmapId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The State Change Notification (SCN) bitmap for a FC Port.
        Bit Field          Flag Description
        ---------          ----------------
        All others         RESERVED
           24              INITIATOR AND SELF INFORMATION ONLY
           25              TARGET AND SELF INFORMATION ONLY
           26              MANAGEMENT REGISTRATION/SCN
           27              OBJECT REMOVED
           28              OBJECT ADDED
           29              OBJECT UPDATED
           30              DD/DDS MEMBER RMVD (MGT REG/SCN ONLY)
           31              DD/DDS MEMBER ADDED (MGT REG/SCN ONLY)


   Gibbons               Expires January 2004                       59

   Internet Draft              iSNS MIB                      July 2003

    Setting a bit to true (1) indicates the flag is
    enabled."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcPortEntry 13 }

   isnsRegFcPortRole           OBJECT-TYPE
       SYNTAX                  NodeTypeId
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The Node Type bit-map defining the functions of this FC Port.
                  Bit         Node Type
              ---------       ---------
              All Others       RESERVED
                 29            Control
                 30            Initiator
                 31            Target
   "
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcPortEntry 14 }

   isnsRegFcPortFcNodeWwn      OBJECT-TYPE
       SYNTAX                  FcNameIdOrZero
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The FC Node WWN of the FC Node that has been associated with
    this FC Port as defined in the iSNS Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcPortEntry 15 }

   isnsRegFcPortPpnWwn         OBJECT-TYPE
       SYNTAX                  FcNameIdOrZero
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The Permanent Port Name attribute is the FC Port Name WWPN of
    the first Storage Node registered in the iSNS Database that is
    associated with a particular FC Device (FC Node).  The PPN of
    all subsequent Storage Node registrations that are associated
    with that FC Device (FC Node) SHALL be set to the FC Port Name
    WWPN of the first Storage Node, as defined in the iSNS
    Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcPortEntry 16 }

   --
   -- iSNS Registered FC Node Information
   --

   isnsRegFcNodeInfo     OBJECT IDENTIFIER ::= { isnsReg  6 }

   --
   -- iSNS Registered FC Node Table

   Gibbons               Expires January 2004                       60

   Internet Draft              iSNS MIB                      July 2003

   --

   isnsRegFcNodeTable          OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsRegFcNodeEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "A table containing the registered FC Nodes in the iSNS."
       ::= { isnsRegFcNodeInfo 1 }

   isnsRegFcNodeEntry          OBJECT-TYPE
       SYNTAX                  IsnsRegFcNodeEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Information on one registered FC node that has been regisered
    in the iSNS."
       INDEX { isnsSrvrInstIndex,
                isnsRegFcNodeWwn }
       ::= { isnsRegFcNodeTable 1 }

   IsnsRegFcNodeEntry ::= SEQUENCE {
       isnsRegFcNodeWwn            FcNameIdOrZero,
       isnsRegFcNodeSymName        SnmpAdminString,
       isnsRegFcNodeAddrType       InetAddressType,
       isnsRegFcNodeAddr           InetAddress,
       isnsRegFcNodeIPA            OCTET STRING,
       isnsRegFcNodeProxyIscsiName SnmpAdminString
                                   }

   isnsRegFcNodeWwn            OBJECT-TYPE
       SYNTAX                  FcNameIdOrZero
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The FC Node World Wide Node Name as defined in the iSNS
    Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcNodeEntry 1 }

   isnsRegFcNodeSymName        OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..255))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The optional FC Node Symbolic Name of the node as
    defined in the iSNS Specification.  This is a
    variable-length text-based description.  If not
    provided then the string SHALL be zero length."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcNodeEntry 2 }

   isnsRegFcNodeAddrType       OBJECT-TYPE
       SYNTAX                  InetAddressType

   Gibbons               Expires January 2004                       61

   Internet Draft              iSNS MIB                      July 2003

       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The type of Inet address in isnsRegFcNodeAddr."
       ::= { isnsRegFcNodeEntry 3 }

   isnsRegFcNodeAddr           OBJECT-TYPE
       SYNTAX                  InetAddress
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The FC Node Inet address of the node as defined in the
    iSNS Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcNodeEntry 4 }

   isnsRegFcNodeIPA            OBJECT-TYPE
       SYNTAX                  OCTET STRING (SIZE(8))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The object identifies the FC Initial Process Associator
    of the node as defined in the iSNS Specification."
       REFERENCE "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcNodeEntry 5 }

   isnsRegFcNodeProxyIscsiName OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..223))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSCSI Name used to represent the FC Node in the IP
    network. It is used as a pointer to the matching iSCSI Name
    entry in the iSNS server.  Its value is usually registered
    by an FC-iSCSI gateway connecting the IP network to the
    fabric containing the FC device."
       REFERENCE  "draft-ietf-ips-iSNS-20.txt, Section 6"
       ::= { isnsRegFcNodeEntry 6 }

   --
   -- Basic information for the FC Node object
   --

   isnsRegFcNodeInfoTable      OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsRegFcNodeInfoEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "A table containing basic information on registered FC Nodes
    in the iSNS.  The number of entries in the table is dependent
    on the number of FC Nodes registered in the iSNS."
       ::= { isnsRegFcNodeInfo 2 }

   isnsRegFcNodeInfoEntry      OBJECT-TYPE

   Gibbons               Expires January 2004                       62

   Internet Draft              iSNS MIB                      July 2003

       SYNTAX                  IsnsRegFcNodeInfoEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Information on one FC Node that has been registered in the
    iSNS."
       INDEX   { isnsSrvrInstIndex,
                  isnsRegFcNodeWwn }
       ::= { isnsRegFcNodeInfoTable 1 }

   IsnsRegFcNodeInfoEntry ::=
       SEQUENCE {
          isnsRegFcNodeInfoNumFcPorts   Unsigned32
              }

   isnsRegFcNodeInfoNumFcPorts OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The number of FC Ports associated with this FC Node."
       ::= { isnsRegFcNodeInfoEntry 1 }

   --
   --  Mapping from FC Node to Entity - FC Port
   --

   isnsRegFcNodePortTable      OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsRegFcNodePortEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "A table containing the FC Nodes to associated iFCP Ports and
    Entity object mapping in the iSNS."
       ::= { isnsRegFcNodeInfo 3 }

   isnsRegFcNodePortEntry      OBJECT-TYPE
       SYNTAX                  IsnsRegFcNodePortEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Information on one mapping from an FC Port and Entity to an
    FC node registered in the iSNS."
       INDEX { isnsSrvrInstIndex,
                isnsRegFcNodeWwn,
               isnsRegFcPortWwpn }
       ::= { isnsRegFcNodePortTable 1 }

   IsnsRegFcNodePortEntry ::= SEQUENCE {
           isnsRegFcNodePortEntityEIdx EntityIndexId
                                       }

   isnsRegFcNodePortEntityEIdx OBJECT-TYPE
       SYNTAX                  EntityIndexId

   Gibbons               Expires January 2004                       63

   Internet Draft              iSNS MIB                      July 2003

       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The Entity Index for the Entity object associated with the
    FC Port and FC Node."
       ::= { isnsRegFcNodePortEntry 1 }

   --
   -- iSNS Client instance objects --------------------
   --

   isnsClntInfo OBJECT IDENTIFIER ::= { isnsObj 2 }

   isnsClntInstTable               OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsClntInstEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "This table list the iSNS Client instances managed by this
    agent."
       ::= { isnsClntInfo 1 }

   isnsClntInstEntry OBJECT-TYPE
       SYNTAX                  IsnsClntInstEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "An entry in the iSNS Client table.  The number or rows in
    the table is dependent on the number of iSNS Client instances
    managed by this agent."
       INDEX   { isnsClntInstIndex }
       ::= { isnsClntInstTable 1 }

   IsnsClntInstEntry ::=
       SEQUENCE {
          isnsClntInstIndex           Unsigned32,
          isnsClntInstName            SnmpAdminString,
          isnsClntInstIsnsVersion     Integer32,
          isnsClntInstVendorInfo      SnmpAdminString,
          isnsClntInstPhyIndex        Unsigned32,
          isnsClntInstTcpPort         Integer32,
          isnsClntInstUdpPort         Integer32,
          isnsClntInstUptime          TimeTicks,
          isnsClntInstDiscMthdEnbld   SrvrDscvryMthdId,
          isnsClntInstDiscMcGrpType   InetAddressType,
          isnsClntInstDiscMcGrp       InetAddress
                }

   isnsClntInstIndex     OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The instance of this iSNS Client being managed.  Each

   Gibbons               Expires January 2004                       64

   Internet Draft              iSNS MIB                      July 2003

    managed client is uniquely identified by the instance index
    in the MIB."
       ::= { isnsClntInstEntry 1 }

   isnsClntInstName      OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..255))
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "A name that can be assigned to the iSNS Client instance.
    If not configured, the value is an empty string."
       ::= { isnsClntInstEntry 2 }

   isnsClntInstIsnsVersion     OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSNS version value as contained in messages received
    from the current primary server.  The header of each iSNSP
    message contains the iSNS version of the sender.  If
    unknown the reported value is 0."
       REFERENCE               "draft-ietf-ips-iSNS-20.txt"
       ::= { isnsClntInstEntry 3 }

   isnsClntInstVendorInfo      OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..255))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSNS client vendor name and version information.  This
    variable is comma delimited.  The format of the variable
    string is as follows:
    Vendor Name, Vendor Version, Vendor Defined Information.
          Field           Description
        ---------       ----------------
       Vendor Name      The name of the vendor
       Vendor Version   The version of the vendor product
       Vendor Defined   This follows the second comma in the
                        string, if one exists, and is vendor
                        defined
    If not configured, the value of this variable is an empty
    string."
       ::= { isnsClntInstEntry 4 }

   isnsClntInstPhyIndex        OBJECT-TYPE
       SYNTAX                  Unsigned32 (0..2147483647)
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "An index indicating the location of this iSNS client within
    a larger entity, if one exists.  If supported, this is the
    entPhysicalIndex from the Entity MIB (Version 2), that this
    iSNS client is currently using.  If not supported it is

   Gibbons               Expires January 2004                       65

   Internet Draft              iSNS MIB                      July 2003

    either an index into a chassis MIB, as supported by the
    system, or 0."
       REFERENCE               "draft-ietf-ips-iSNS-20.txt"
       ::= { isnsClntInstEntry 5 }

   isnsClntInstTcpPort         OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "Indicates the TCP port this iSNS instance is accepting
    iSNSP messages on, generally the iSNS well known port.
    The well known TCP port for iSNSP is 3205.  If not set,
    then the value is 0."
       ::= { isnsClntInstEntry 6 }

   isnsClntInstUdpPort         OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "Indicates the UDP port this iSNS instance is accepting
    iSNSP messages on, generally the iSNS well known port.
    The well known UDP port for iSNSP is 3205.  If not set,
    or UDP is not supported by this server instance, then
    the value is 0."
       ::= { isnsClntInstEntry 7 }

   isnsClntInstUptime          OBJECT-TYPE
        SYNTAX                 TimeTicks
        MAX-ACCESS             read-only
        STATUS                 current
        DESCRIPTION
   "The time that this iSNS Server instance has been active.  In
    otherwords, the time since last reinitialization."
       ::= { isnsClntInstEntry 8 }

   isnsClntInstDiscMthdEnbld   OBJECT-TYPE
       SYNTAX                  SrvrDscvryMthdId
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "Indicates the primary discovery process currently
    enabled on this iSNS client instance.  This allows
    the discovery process currently used by a client to
    be modified."
       ::= { isnsClntInstEntry 9 }

   isnsClntInstDiscMcGrpType   OBJECT-TYPE
       SYNTAX                  InetAddressType
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "The type of Inet address in isnsClntInstDiscMcGrp. If not

   Gibbons               Expires January 2004                       66

   Internet Draft              iSNS MIB                      July 2003

    set, then the value is unknown(0)."
       ::= { isnsClntInstEntry 10 }

   isnsClntInstDiscMcGrp       OBJECT-TYPE
       SYNTAX                  InetAddress
       MAX-ACCESS              read-write
       STATUS                  current
       DESCRIPTION
   "The multicast group that iSNS Heartbeat messages are
    listened for, if multicast based discovery has been enabled
    for this client instance.  If not configured, then
    the value is an empty string."
       ::= { isnsClntInstEntry 11 }

   --
   -- iSNS primary address table for user configured
   -- addresses
   --

   isnsClntSrvrCfgTable        OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsClntSrvrCfgEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "iSNS Address table for direct user configuration.  If
    configured adddress server discovery is being used, this
    table provides an ordered list of addresses that should be
    checked for an iSNS server. The number of rows is dependent
    on the number of possible primary servers that the user
    configures."
       ::= { isnsClntInfo 2 }

   isnsClntSrvrCfgEntry        OBJECT-TYPE
       SYNTAX                  IsnsClntSrvrCfgEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Information on one iSNS server entry that has been added to
    the server configuration table.  Entries can be created
    using a configuration address and adddress type."
        INDEX          { isnsClntInstIndex,
                         isnsClntSrvrCfgIndex }
        ::= { isnsClntSrvrCfgTable 1 }

   IsnsClntSrvrCfgEntry ::= SEQUENCE   {
        isnsClntSrvrCfgIndex          Unsigned32,
        isnsClntSrvrCfgMgdSrvrInst    Unsigned32,
        isnsClntSrvrCfgAddrType       InetAddressType,
        isnsClntSrvrCfgAddr           InetAddress,
        isnsClntSrvrCfgTcpPort        Integer32,
        isnsClntSrvrCfgUdpPort        Integer32,
        isnsClntSrvrCfgPriority       Integer32,
        isnsClntSrvrCfgTimeout        Integer32,
        isnsClntSrvrCfgRetries        Integer32,

   Gibbons               Expires January 2004                       67

   Internet Draft              iSNS MIB                      July 2003

        isnsClntSrvrCfgRowStatus      RowStatus
                                       }

   isnsClntSrvrCfgIndex        OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 1 .. 255 )
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "This is an index for each iSNS Server that has been
    configured.  Each iSNS server in the user configured
    network should be in this table."
        ::= { isnsClntSrvrCfgEntry 1 }

   isnsClntSrvrCfgMgdSrvrInst  OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "If the configured server is managed by this agent, then
    this is the value of the isnsSrvrInstIndex.  Otherwise, the
    value is 0."
        ::= { isnsClntSrvrCfgEntry 2 }

   isnsClntSrvrCfgAddrType     OBJECT-TYPE
       SYNTAX                  InetAddressType
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "The type of Inet address in isnsClntSrvrCfgAddr."
        ::= { isnsClntSrvrCfgEntry 3 }

   isnsClntSrvrCfgAddr         OBJECT-TYPE
       SYNTAX                  InetAddress
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "Identifies the IP address of the iSNS server.  Each
    potential iSNS server in the user configured network
    should be in this table."
       ::= { isnsClntSrvrCfgEntry 4 }

   isnsClntSrvrCfgTcpPort      OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "Indicates the TCP port the configured iSNS server uses.
    The well known TCP port for iSNSP is 3205.  If the
    value is 0 then the well known TCP port is used."
       DEFVAL                  { 3205 }
       ::= { isnsClntSrvrCfgEntry 5 }

   isnsClntSrvrCfgUdpPort      OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )

   Gibbons               Expires January 2004                       68

   Internet Draft              iSNS MIB                      July 2003

       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "Indicates the UDP port the configured iSNS server uses.
    The well known UDP port for iSNSP is 3205.  If the
    value is 0 then the well known UDP port is used."
       DEFVAL                  { 3205 }
       ::= { isnsClntSrvrCfgEntry 6 }

   isnsClntSrvrCfgPriority     OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 100 )
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "The priority of this entry in the table.  The client should
    attempt to locate/register the highest priority entry first."
       DEFVAL                  { 50 }
       ::= { isnsClntSrvrCfgEntry 7 }

   isnsClntSrvrCfgTimeout      OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 300 )
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "The timeout value, in seconds, for attempting to register
    with this entry in the table.  After a timeout, another
    retry is attempted until the number of retries as listed
    in the object isnsClntSrvrCfgRetries have been attempted."
       DEFVAL                  { 5 }
       ::= { isnsClntSrvrCfgEntry 8 }

   isnsClntSrvrCfgRetries      OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 10 )
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "The number of retries that should be used for attempting
    to register with this entry in the table."
       DEFVAL                  { 3 }
       ::= { isnsClntSrvrCfgEntry 9 }

   isnsClntSrvrCfgRowStatus    OBJECT-TYPE
        SYNTAX                 RowStatus
        MAX-ACCESS             read-create
       STATUS                  current
        DESCRIPTION
   "This indicates the status of this entry in the
    table. This item can be used to determine if the
    entry is a valid value."
       ::= { isnsClntSrvrCfgEntry 10 }

   --
   -- iSNS primary address table listing discovered
   -- servers for each instance.

   Gibbons               Expires January 2004                       69

   Internet Draft              iSNS MIB                      July 2003

   --

   isnsClntDscvrdSrvrTable     OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsClntDscvrdSrvrEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "iSNS Address table for unicast communication configuration.
    If confifured adddress server discovery is being used, this
    table provides an ordered list of addresses that should be
    checked for an iSNS server. The number of rows is dependent
    on the number of possible primary servers that the user
    configures."
       ::= { isnsClntInfo 3 }

   isnsClntDscvrdSrvrEntry     OBJECT-TYPE
       SYNTAX                  IsnsClntDscvrdSrvrEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "Information on one iSNS server entry that has been added to
    the server configuration table.  Entries can be created
    using a configuration address and adddress type."
        INDEX          { isnsClntInstIndex,
                         isnsClntDscvrdSrvrIndex }
        ::= { isnsClntDscvrdSrvrTable 1 }

   IsnsClntDscvrdSrvrEntry ::= SEQUENCE   {
        isnsClntDscvrdSrvrIndex         Unsigned32,
        isnsClntDscvrdSrvrAddrType      InetAddressType,
        isnsClntDscvrdSrvrAddr          InetAddress,
        isnsClntDscvrdSrvrTcpPort       Integer32,
        isnsClntDscvrdSrvrUdpPort       Integer32,
        isnsClntDscvrdSrvrIsnsVersion   Integer32,
        isnsClntDscvrdSrvrCfgSrvrInst   Unsigned32,
        isnsClntDscvrdSrvrMgdSrvrInst   Unsigned32
                                          }

   isnsClntDscvrdSrvrIndex     OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 1 .. 4294967295 )
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "This indicates the order in the list of iSNS server
    IP Address entries.  Each iSNS server in the user
    configured network should be in this table.  The client
    should initially attempt to connect with a server at index
    1, and then attempt the next entry, and so on, wrapping
    around at the end of the list, until a successful
    connection is made."
        ::= { isnsClntDscvrdSrvrEntry 1 }

   isnsClntDscvrdSrvrAddrType  OBJECT-TYPE
       SYNTAX                  InetAddressType

   Gibbons               Expires January 2004                       70

   Internet Draft              iSNS MIB                      July 2003

       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "The type of Inet address in isnsClntDscvrdSrvrAddr."
       ::= { isnsClntDscvrdSrvrEntry 2 }

   isnsClntDscvrdSrvrAddr      OBJECT-TYPE
       SYNTAX                  InetAddress
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "Identifies the IP address of the iSNS server.  Each
    potential iSNS server in the user configured network
    should be in this table."
       ::= { isnsClntDscvrdSrvrEntry 3 }

   isnsClntDscvrdSrvrTcpPort   OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "Indicates the TCP port the configured iSNS server uses.
    The well known TCP port for iSNSP is 3205.  If the
    value is 0 then the well known TCP port is used."
       DEFVAL                  { 3205 }
       ::= { isnsClntDscvrdSrvrEntry 4 }

   isnsClntDscvrdSrvrUdpPort   OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "Indicates the UDP port the configured iSNS server uses.
    The well known UDP port for iSNSP is 3205.  If the
    value is 0 then the well known UDP port is used."
       DEFVAL                  { 3205 }
       ::= { isnsClntDscvrdSrvrEntry 5 }

   isnsClntDscvrdSrvrIsnsVersion   OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 100 )
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "The iSNS version of the disovered version."
       ::= { isnsClntDscvrdSrvrEntry 6 }

   isnsClntDscvrdSrvrCfgSrvrInst OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 255 )
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "If the discovered server is a configured server for this
    iSNS Client instance, then this is the value of the
    isnsClntSrvrCfgIndex in the table isnsClntSrvrCfgTable.

   Gibbons               Expires January 2004                       71

   Internet Draft              iSNS MIB                      July 2003

    Otherwise, the value is 0."
       ::= { isnsClntDscvrdSrvrEntry 7 }

   isnsClntDscvrdSrvrMgdSrvrInst   OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-create
       STATUS                  current
       DESCRIPTION
   "If the discovered server is managed by this agent, then
    this is the value of the isnsSrvrInstIndex.  Otherwise, the
    value is 0."
       ::= { isnsClntDscvrdSrvrEntry 8 }

   --
   -- Registered Entities supported
   --

   isnsClntRegEntityTable      OBJECT-TYPE
       SYNTAX                  SEQUENCE OF IsnsClntRegEntityEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "The Entity Index in the managed iSNS Server instance that this
    entity is registered in.  This can be used to identify all
    registered objects in managed iSNS Servers that are supported by
    this iSNS Client instance."
       ::= { isnsClntInfo 4 }

   isnsClntRegEntityEntry      OBJECT-TYPE
       SYNTAX                  IsnsClntRegEntityEntry
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION
   "This represents an Entity registered in a managed iSNS
    Server instance that is supported by this iSNS Client
    instance.  The number of rows is dependent on the
    number of Entities supported by  each iSNS Client
    instance that are registered with managed iSNS Server
    instances."
        INDEX          { isnsClntInstIndex,
                         isnsSrvrInstIndex,
                         isnsClntRegEntityIdx }
        ::= { isnsClntRegEntityTable 1 }

   IsnsClntRegEntityEntry ::= SEQUENCE   {
        isnsClntRegEntityIdx            Unsigned32,
        isnsClntRegEntityProtocol       Unsigned32
                                          }

   isnsClntRegEntityIdx        OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              not-accessible
       STATUS                  current
       DESCRIPTION

   Gibbons               Expires January 2004                       72

   Internet Draft              iSNS MIB                      July 2003

   "The Entity Index in the managed iSNS Server instance that
    this entity is registered.  This can be used to identify
    all registered objects supported by the iSNS Client
    instance."
        ::= { isnsClntRegEntityEntry 1 }

   isnsClntRegEntityProtocol   OBJECT-TYPE
       SYNTAX                  Unsigned32 ( 0 .. 4294967295 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The iSNS Entity Protocol is an enumerated value which
    indicates the type of nodes that are contained within it.

         Type Value Entity Type
         ---------- -----------
              1     No Protocol
              2     iSCSI
              3     iFCP
         All Others To Be Assigend by IANA

    The No Protocol value is used to indicate that the Network
    Entity does not support an IP block storage protocol."
        ::= { isnsClntRegEntityEntry 2 }

   --
   -- iSNS Notification Block --------------------------------
   --

   isnsNotification            OBJECT IDENTIFIER
                                     ::= { isnsObj 3 }

   isnsNotificationInfo        OBJECT IDENTIFIER
                                     ::= { isnsNotification 1 }

   isnsInstInfo                OBJECT-TYPE
       SYNTAX                  SnmpAdminString (SIZE (0..80))
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "Textual information about the iSNS server or client
    notification.  An example is: iSNS Client Started, or iSNS
    Server Started, information that would be included in the
    appropriate notification."
       ::= { isnsNotificationInfo 1 }

   isnsAddrTypeNotifctn        OBJECT-TYPE
       SYNTAX                  InetAddressType
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "The type of Inet address in isnsSrvrAddrNotifctn."
       ::= { isnsNotificationInfo 2 }


   Gibbons               Expires January 2004                       73

   Internet Draft              iSNS MIB                      July 2003

   isnsAddrNotifctn            OBJECT-TYPE
       SYNTAX                  InetAddress
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "Identifies the IP address of the iSNS server."
       ::= { isnsNotificationInfo 3 }

   isnsTcpPortNotifctn         OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "Indicates the TCP port the iSNS server is using,
    or 0 if TCP based registrations are not supported."
       ::= { isnsNotificationInfo 4 }

   isnsUdpPortNotifctn         OBJECT-TYPE
       SYNTAX                  Integer32 ( 0 .. 65535 )
       MAX-ACCESS              read-only
       STATUS                  current
       DESCRIPTION
   "Indicates the UDP port the iSNS server is using,
    or 0 if UDP based registrations are not supported."
       ::= { isnsNotificationInfo 5 }

   isnsNotificationPrefix OBJECT IDENTIFIER
                              ::= { isnsNotification 0 }

   isnsServerStart             NOTIFICATION-TYPE
       OBJECTS {
           isnsInstInfo,
           isnsAddrTypeNotifctn,
           isnsAddrNotifctn,
           isnsTcpPortNotifctn,
           isnsUdpPortNotifctn
               }
       STATUS                  current
       DESCRIPTION
   "This notification is sent when an iSNS server begins
    operation.  The objects provide the following:
           isnsInstInfo         : iSNS server textual information
           isnsAddrTypeNotifctn : iSNS server address type
           isnsAddrNotifctn     : iSNS server address
           isnsTcpPortNotifctn  : iSNS server TCP Port
           isnsUdpPortNotifctn  : iSNS server UDP Port
   "
       ::= { isnsNotificationPrefix 1 }

   isnsServerShutdown          NOTIFICATION-TYPE
       OBJECTS {
           isnsInstInfo,
           isnsAddrTypeNotifctn,
           isnsAddrNotifctn,

   Gibbons               Expires January 2004                       74

   Internet Draft              iSNS MIB                      July 2003

           isnsTcpPortNotifctn,
           isnsUdpPortNotifctn
               }
       STATUS                  current
       DESCRIPTION
   "This notification is sent when an iSNS server is
    shutdown.  The objects provide the following:
           isnsInstInfo         : iSNS server textual information
           isnsAddrTypeNotifctn : iSNS server address type
           isnsAddrNotifctn     : iSNS server address
           isnsTcpPortNotifctn  : iSNS server TCP Port
           isnsUdpPortNotifctn  : iSNS server UDP Port
   "
       ::= { isnsNotificationPrefix 2 }

   isnsClientStart             NOTIFICATION-TYPE
       OBJECTS {
           isnsInstInfo,
           isnsAddrTypeNotifctn,
           isnsAddrNotifctn,
           isnsTcpPortNotifctn,
           isnsUdpPortNotifctn
               }
       STATUS                  current
       DESCRIPTION
   "This notification is sent when an iSNS client begins
    operation.  The objects provide the following:
           isnsInstInfo         : iSNS client textual information
           isnsAddrTypeNotifctn : iSNS client address type
           isnsAddrNotifctn     : iSNS client address
           isnsTcpPortNotifctn  : iSNS client TCP Port
           isnsUdpPortNotifctn  : iSNS client UDP Port
   "
       ::= { isnsNotificationPrefix 3 }

   isnsClientInitalRegistration  NOTIFICATION-TYPE
       OBJECTS {
           isnsInstInfo,
           isnsAddrTypeNotifctn,
           isnsAddrNotifctn,
           isnsTcpPortNotifctn,
           isnsUdpPortNotifctn
               }
       STATUS                  current
       DESCRIPTION
   "This notification is sent when an iSNS client begins
    operation.  The objects provide the following:
           isnsInstInfo         : iSNS client textual information
           isnsAddrTypeNotifctn : iSNS server address type
           isnsAddrNotifctn     : iSNS server address
           isnsTcpPortNotifctn  : iSNS server TCP Port (if used)
           isnsUdpPortNotifctn  : iSNS server UDP Port (if used)
   "
       ::= { isnsNotificationPrefix 4 }

   Gibbons               Expires January 2004                       75

   Internet Draft              iSNS MIB                      July 2003


   isnsClientLostConnection    NOTIFICATION-TYPE
       OBJECTS {
           isnsInstInfo,
           isnsAddrTypeNotifctn,
           isnsAddrNotifctn,
           isnsTcpPortNotifctn,
           isnsUdpPortNotifctn
               }
       STATUS                  current
       DESCRIPTION
   "This notification is sent when an iSNS client loses
    connection with an iSNS Server.  The objects provide the
    following:
           isnsInstInfo         : iSNS client textual information
           isnsAddrTypeNotifctn : iSNS server address type
           isnsAddrNotifctn     : iSNS server address
           isnsTcpPortNotifctn  : iSNS server TCP Port (if used)
           isnsUdpPortNotifctn  : iSNS server UDP Port (if used)
   "
       ::= { isnsNotificationPrefix 5 }

   ------------------------------------------------------------

   isnsGroups OBJECT IDENTIFIER ::= { isnsConformance 1 }

   isnsServerAttributesGroup      OBJECT-GROUP
       OBJECTS {
          isnsSrvrInstName,
          isnsSrvrInstIsnsVersion,
          isnsSrvrInstVendorInfo,
          isnsSrvrInstPhyIndex,
          isnsSrvrInstTcpPort,
          isnsSrvrInstUdpPort,
          isnsSrvrInstUptime,
          isnsSrvrInstRole,
          isnsSrvrInstDiscMthdEnbld,
          isnsSrvrInstDiscMcGrpType,
          isnsSrvrInstDiscMcGrp,
          isnsSrvrInstCntrlNodeAuth,
          isnsSrvrInstEsiNonRespThrshld,
          isnsSrvrInstEnblCntrlNdeMgtScn,
          isnsSrvrInstDfltDdDdsStatus,
          isnsSrvrInstUpdateDdDdsSpprtd,
          isnsSrvrInstUpdateDdDdsEnbld
               }
       STATUS                  current
       DESCRIPTION
   "iSNS Server attributes."
          ::= { isnsGroups 1 }

   isnsServerNumObjGroup      OBJECT-GROUP
       OBJECTS {
          isnsNumDds,

   Gibbons               Expires January 2004                       76

   Internet Draft              iSNS MIB                      July 2003

          isnsNumDd,
          isnsNumEntities,
          isnsNumPortals,
          isnsNumPortalGroups,
          isnsNumIscsiNodes,
          isnsNumFcPorts,
          isnsNumFcNodes,
          isnsRegEntityInfoNumPortals,
          isnsRegEntityInfoNumPortalGroups,
          isnsRegEntityInfoNumIscsiNodes,
          isnsRegEntityInfoNumFcPorts,
          isnsRegEntityInfoNumFcNodes,
          isnsRegFcNodeInfoNumFcPorts
               }
       STATUS                  current
       DESCRIPTION
   "iSNS Server objects indicating then number of objects
    registered or contained in an Entity.  These objects
    are optional to implement."
          ::= { isnsGroups 2 }

   isnsServerNextIdxGroup      OBJECT-GROUP
       OBJECTS {
          isnsNextIdxDds,
          isnsNextIdxDd,
          isnsNextIdxIscsiNode,
          isnsNextIdxPortal
               }
       STATUS                  current
       DESCRIPTION
   "iSNS Server number of objects registered."
          ::= { isnsGroups 3 }

   isnsServerIscsiCntlNodeGroup    OBJECT-GROUP
       OBJECTS {
          isnsCntlNodeIscsiNodeName,
          isnsCntlNodeIscsiRowStatus
               }
       STATUS                  current
       DESCRIPTION
   "iSNS Server iSCSI control node objects."
          ::= { isnsGroups 4 }

   isnsServerIfcpCntlNodeGroup    OBJECT-GROUP
       OBJECTS {
          isnsCntlNodeFcPortRowStatus
               }
       STATUS                  current
       DESCRIPTION
   "iSNS Server iFCP control node objects."
          ::= { isnsGroups 5 }

   isnsServerIscsiDdsDdObjGroup   OBJECT-GROUP
       OBJECTS {

   Gibbons               Expires January 2004                       77

   Internet Draft              iSNS MIB                      July 2003

          isnsDdsSymbolicName,
          isnsDdsStatus,
          isnsDdsRowStatus,
          isnsDdsMemberRowStatus,
          isnsDdSymbolicName,
          isnsDdFeatures,
          isnsDdRowStatus,
          isnsDdMemberIscsiName,
          isnsDdMemberIsRegistered,
          isnsDdMemberRowStatus,
          isnsDdMemberPortalAddrType,
          isnsDdMemberPortalAddr,
          isnsDdMemberPortalPortType,
          isnsDdMemberPortalPort,
          isnsDdMemberPortalRowStatus,
          isnsDdMemberPortalIsRegistered
               }
       STATUS                  current
       DESCRIPTION
   "iSNS Server DDS and DD objects for iSCSI."
          ::= { isnsGroups 6 }

   isnsServerIfcpDdsDdObjGroup    OBJECT-GROUP
       OBJECTS {
          isnsDdsSymbolicName,
          isnsDdsStatus,
          isnsDdsRowStatus,
          isnsDdsMemberRowStatus,
          isnsDdSymbolicName,
          isnsDdFeatures,
          isnsDdRowStatus,
          isnsDdMemberPortalAddrType,
          isnsDdMemberPortalAddr,
          isnsDdMemberPortalPortType,
          isnsDdMemberPortalPort,
          isnsDdMemberPortalRowStatus,
          isnsDdMemberPortalIsRegistered,
          isnsDdMemberFcIsRegistered,
          isnsDdMemberFcRowStatus
               }
       STATUS                  current
       DESCRIPTION
   "iSNS Server DDS and DD objects for iFCP."
          ::= { isnsGroups 7 }

   isnsServerRegIscsiObjGroup   OBJECT-GROUP
       OBJECTS {
          isnsRegEntityEID,
          isnsRegEntityProtocol,
          isnsRegEntityMgtAddrType,
          isnsRegEntityMgtAddr,
          isnsRegEntityTimestamp,
          isnsRegEntityVersionMin,
          isnsRegEntityVersionMax,

   Gibbons               Expires January 2004                       78

   Internet Draft              iSNS MIB                      July 2003

          isnsRegEntityRegPeriod,
          isnsRegEntityInfoNumPortals,
          isnsRegEntityInfoNumPortalGroups,
          isnsRegEntityInfoNumIscsiNodes,
          isnsRegEntityInfoNumFcPorts,
          isnsRegEntityInfoNumFcNodes,
          isnsRegPortalAddrType,
          isnsRegPortalAddr,
          isnsRegPortalPortType,
          isnsRegPortalPort,
          isnsRegPortalSymName,
          isnsRegPortalEsiInterval,
          isnsRegPortalEsiPortType,
          isnsRegPortalEsiPort,
          isnsRegPortalScnPortType,
          isnsRegPortalScnPort,
          isnsRegPortalSecurityInfo,
          isnsRegPgIscsiNodeIdx,
          isnsRegPgIscsiName,
          isnsRegPgPortalPrtlIdx,
          isnsRegPgPortalAddrType,
          isnsRegPgPortalAddr,
          isnsRegPgPortalPortType,
          isnsRegPgPortalPort,
          isnsRegPgPGT,
          isnsRegIscsiNodeName,
          isnsRegIscsiNodeType,
          isnsRegIscsiNodeAlias,
          isnsRegIscsiNodeScnBitmap,
          isnsRegIscsiNodeWwnToken,
          isnsRegIscsiNodeAuthMethod
               }
       STATUS                  current
       DESCRIPTION
   "iSNS Server registered iSCSI objects."
          ::= { isnsGroups 8 }

   isnsServerRegIfcpObjGroup    OBJECT-GROUP
       OBJECTS {
          isnsRegEntityEID,
          isnsRegEntityProtocol,
          isnsRegEntityMgtAddrType,
          isnsRegEntityMgtAddr,
          isnsRegEntityTimestamp,
          isnsRegEntityVersionMin,
          isnsRegEntityVersionMax,
          isnsRegEntityRegPeriod,
          isnsRegEntityInfoNumPortals,
          isnsRegEntityInfoNumPortalGroups,
          isnsRegEntityInfoNumIscsiNodes,
          isnsRegEntityInfoNumFcPorts,
          isnsRegEntityInfoNumFcNodes,
          isnsRegPortalAddrType,
          isnsRegPortalAddr,

   Gibbons               Expires January 2004                       79

   Internet Draft              iSNS MIB                      July 2003

          isnsRegPortalPortType,
          isnsRegPortalPort,
          isnsRegPortalSymName,
          isnsRegPortalEsiInterval,
          isnsRegPortalEsiPortType,
          isnsRegPortalEsiPort,
          isnsRegPortalScnPortType,
          isnsRegPortalScnPort,
          isnsRegPortalSecurityInfo,
          isnsRegFcPortID,
          isnsRegFcPortType,
          isnsRegFcPortSymName,
          isnsRegFcPortFabricPortWwn,
          isnsRegFcPortHA,
          isnsRegFcPortAddrType,
          isnsRegFcPortAddr,
          isnsRegFcPortFcCos,
          isnsRegFcPortFc4Types,
          isnsRegFcPortFc4Descr,
          isnsRegFcPortFc4Features,
          isnsRegFcPortScnBitmap,
          isnsRegFcPortRole,
          isnsRegFcPortFcNodeWwn,
          isnsRegFcPortPpnWwn,
          isnsRegFcNodeSymName,
          isnsRegFcNodeAddrType,
          isnsRegFcNodeAddr,
          isnsRegFcNodeIPA,
          isnsRegFcNodeProxyIscsiName,
          isnsRegFcNodePortEntityEIdx
               }
       STATUS                  current
       DESCRIPTION
   "iSNS Server registered iFCP objects."
          ::= { isnsGroups 9 }

   isnsClientAttributesGroup      OBJECT-GROUP
       OBJECTS {
          isnsClntInstName,
          isnsClntInstIsnsVersion,
          isnsClntInstVendorInfo,
          isnsClntInstPhyIndex,
          isnsClntInstTcpPort,
          isnsClntInstUdpPort,
          isnsClntInstUptime,
          isnsClntInstDiscMthdEnbld,
          isnsClntInstDiscMcGrpType,
          isnsClntInstDiscMcGrp,
          isnsClntSrvrCfgAddrType,
          isnsClntSrvrCfgMgdSrvrInst,
          isnsClntSrvrCfgAddr,
          isnsClntSrvrCfgTcpPort,
          isnsClntSrvrCfgUdpPort,
          isnsClntSrvrCfgPriority,

   Gibbons               Expires January 2004                       80

   Internet Draft              iSNS MIB                      July 2003

          isnsClntSrvrCfgTimeout,
          isnsClntSrvrCfgRetries,
          isnsClntSrvrCfgRowStatus,
          isnsClntDscvrdSrvrAddrType,
          isnsClntDscvrdSrvrAddr,
          isnsClntDscvrdSrvrTcpPort,
          isnsClntDscvrdSrvrUdpPort,
          isnsClntDscvrdSrvrIsnsVersion,
          isnsClntDscvrdSrvrCfgSrvrInst,
          isnsClntDscvrdSrvrMgdSrvrInst,
          isnsClntRegEntityProtocol
               }
       STATUS                  current
       DESCRIPTION
   "iSNS Client attributes."
          ::= { isnsGroups 10 }

   isnsNotificationObjGroup    OBJECT-GROUP
       OBJECTS {
          isnsInstInfo,
          isnsAddrTypeNotifctn,
          isnsAddrNotifctn,
          isnsTcpPortNotifctn,
          isnsUdpPortNotifctn
               }
       STATUS                  current
       DESCRIPTION
   "iSNS Notification objects."
          ::= { isnsGroups 11 }

   isnsServerNotificationGroup  NOTIFICATION-GROUP
       NOTIFICATIONS {
          isnsServerStart,
          isnsServerShutdown
                     }
       STATUS                  current
       DESCRIPTION
   "iSNS Server Notification objects."
          ::= { isnsGroups 12 }

   isnsClientNotificationGroup  NOTIFICATION-GROUP
       NOTIFICATIONS {
          isnsClientStart,
          isnsClientInitalRegistration,
          isnsClientLostConnection
               }
       STATUS                  current
       DESCRIPTION
   "iSNS Client Notification objects."
          ::= { isnsGroups 13 }

   --
   -- Compliance Information
   --

   Gibbons               Expires January 2004                       81

   Internet Draft              iSNS MIB                      July 2003


   isnsCompliances OBJECT IDENTIFIER ::= { isnsConformance 2 }

   isnsIscsiServerComplianceV1 MODULE-COMPLIANCE
       STATUS                  current
       DESCRIPTION
   "Initial compliance statement for an iSNS server
    providing support to iSCSI clients."
       MODULE       -- this module
       MANDATORY-GROUPS {
           isnsServerAttributesGroup,
           isnsServerNextIdxGroup,
           isnsServerIscsiCntlNodeGroup,
           isnsServerIscsiDdsDdObjGroup,
           isnsServerRegIscsiObjGroup,
           isnsNotificationObjGroup,
           isnsServerNotificationGroup
                        }
       ::= { isnsCompliances 1 }

   isnsIscsiClientComplianceV1 MODULE-COMPLIANCE
       STATUS                  current
       DESCRIPTION
   "Initial compliance statement for an iSNS Client
    supporting iSCSI devices."
       MODULE       -- this module
       MANDATORY-GROUPS {
           isnsClientAttributesGroup,
           isnsNotificationObjGroup,
           isnsClientNotificationGroup
                        }
       ::= { isnsCompliances 2 }

   isnsIfcpServerComplianceV1 MODULE-COMPLIANCE
       STATUS                  current
       DESCRIPTION
   "Initial compliance statement for an iSNS server
    providing support to iFCP Clients."
       MODULE       -- this module
       MANDATORY-GROUPS {
           isnsServerAttributesGroup,
           isnsServerNextIdxGroup,
           isnsServerIfcpCntlNodeGroup,
           isnsServerIfcpDdsDdObjGroup,
           isnsServerRegIfcpObjGroup,
           isnsNotificationObjGroup,
           isnsServerNotificationGroup
                        }
       ::= { isnsCompliances 3 }

   isnsIfcpClientComplianceV1 MODULE-COMPLIANCE
       STATUS                  current
       DESCRIPTION
   "Initial compliance statement for an iSNS Client

   Gibbons               Expires January 2004                       82

   Internet Draft              iSNS MIB                      July 2003

    suporting iFCP gateways."
       MODULE       -- this module
       MANDATORY-GROUPS {
           isnsClientAttributesGroup,
           isnsNotificationObjGroup,
           isnsClientNotificationGroup
                        }
       ::= { isnsCompliances 4 }

   isnsServerComplianceV1 MODULE-COMPLIANCE
       STATUS                  current
       DESCRIPTION
   "This set of groups is required for full implementation
    by an iSNS Server if it has the resources to keep
    track of the number of objects registered in the server
    over time."
       MODULE       -- this module
       MANDATORY-GROUPS {
           isnsServerNumObjGroup
                        }
       ::= { isnsCompliances 5 }

   END

6.  Security Considerations

   There are a number of management objects defined in this MIB that
   have a MAX-ACCESS clause of read-write and/or read-create.  Such
   objects may be considered sensitive or vulnerable in some network
   environments.  The support for SET operations in a non-secure
   environment without proper protection can have a negative effect on
   network operations.

   SNMPv1 by itself is not a secure environment.  Even if the network
   itself is secure (for example by using IPSec), even then, there is
   no control as to who on the secure network is allowed to access and
   GET/SET (read/change/create/delete) the objects in this MIB.

   It is recommended that the implementers consider the security
   features as provided by the SNMPv3 framework.  Specifically, the
   use of the User-based Security Model RFC 2574 [RFC2574] and the
   View-based Access Control Model RFC 2575 [RFC2575] is recommended.

   It is then a customer/user responsibility to ensure that the SNMP
   entity giving access to an instance of this MIB, is properly
   configured to give access to the objects only to those principals
   (users) that have legitimate rights to indeed GET or SET
   (change/create/delete) them.

7.  Normative References

   [isns001]   Josh Tseng, Kevin Gibbons, Franco Travostino, Curt Du
               Laney, Joe Souza "iSNS Internet Storage Name Service",
               <draft-ietf-ips-isns-20.txt>, Expires December 2003

   Gibbons               Expires January 2004                       83

   Internet Draft              iSNS MIB                      July 2003


   [iscsi01]   Julian Satran, Kalman Meth, Costa Sapuntzakis,
               Mallikarjun Chadalapaka, Efri Zeidner, "iSCSIˆ, <draft-
               ietf-ips-iscsi-20.txt>, Expires August 2003

   [FCMGT01]   K. McCloghrie, "Fibre Channel Management MIB ",
               <draft-ietf-ips-fcmgmt-mib-04.txt>, Expires August
               2003.

   [RFC2851]   M. Daniele, B. Haberman, S. Routhier, J. Schoenwaelder
               "Textual Conventions for Internet Network Addresses",
               RFC 2851, June 2000.

   [RFC2571]   Harrington, D., Presuhn, R., and B. Wijnen, "An
               Architecture for Describing SNMP Management
               Frameworks", RFC 2571, April 1999.

   [RFC1901]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
               "Introduction to Community-based SNMPv2", RFC 1901,
               January 1996.

   [RFC1155]   Rose, M., and K. McCloghrie, "Structure and
               Identification of Management Information for TCP/IP-
               based Internets", STD 16, RFC 1155, May 1990.

   [RFC1212]   Rose, M., and K. McCloghrie, "Concise MIB Definitions",
               STD 16, RFC 1212, March 1991.

   [RFC1215]   M. Rose, "A Convention for Defining Traps for use with
               the SNMP", RFC 1215, March 1991.

   [RFC2578]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,
               J., Rose, M., and S. Waldbusser, "Structure of
               Management Information Version 2 (SMIv2)", STD 58, RFC
               2578, April 1999.

   [RFC2579]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,
               J., Rose, M., and S. Waldbusser, "Textual Conventions
               for SMIv2", STD 58, RFC 2579, April 1999.

   [RFC2580]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,
               J., Rose, M., and S. Waldbusser, "Conformance
               Statements for SMIv2", STD 58, RFC 2580, April 1999.

   [RFC1157]   Case, J., Fedor, M., Schoffstall, M., and J. Davin,
               "Simple Network Management Protocol", STD 15, RFC 1157,
               May 1990.

   [RFC1906]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
               "Transport Mappings for Version 2 of the Simple Network
               Management Protocol (SNMPv2)", RFC 1906, January 1996.

   [RFC2572]   Case, J., Harrington D., Presuhn R., and B. Wijnen,
               "Message Processing and Dispatching for the Simple

   Gibbons               Expires January 2004                       84

   Internet Draft              iSNS MIB                      July 2003

               Network Management Protocol (SNMP)", RFC 2572, April
               1999.

   [RFC2574]   Blumenthal, U., and B. Wijnen, "User-based Security
               Model (USM) for version 3 of the Simple Network
               Management Protocol (SNMPv3)", RFC 2574, April 1999.

   [RFC1905]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
               "Protocol Operations for Version 2 of the Simple
               Network Management Protocol (SNMPv2)", RFC 1905,
               January 1996.

   [RFC2573]   Levi, D., Meyer, P., and B. Stewart, "SNMPv3
               Applications", RFC 2573, April 1999.

   [RFC2575]   Wijnen, B., Presuhn, R., and K. McCloghrie, "View-based
               Access Control Model (VACM) for the Simple Network
               Management Protocol (SNMP)", RFC 2575, April 1999.

   [RFC2570]   Case, J., Mundy, R., Partain, D., and B. Stewart,
               "Introduction to Version 3 of the Internet-standard
               Network Management Framework", RFC 2570, April 1999.

8.  Non-Normative References

   [ISCSI01]   M. Bakke, et al, "Definitions of Managed Objects for
               iSCSI" <draft-ietf-ips-iscsi-mib-09.txt>, Expires
               August 2003.

   [ISCSI02]   M. Bakke, et al, "iSCSI Naming and Discovery" <draft-
               ietf-ips-iscsi-name-disc-10.txt>, Expires December
               2003.

   [T11FCGS3]  Fibre Channel - Generic Services 3, NCITS 348-2000.


9.  Authors∆ Addresses

          Kevin Gibbons
          E-mail: kgibbons@nishansystems.com,
          Josh Tseng
          E-mail: jtseng@nishansystems.com,
          Postal: Nishan Systems
          3850 North First Street
          San Jose, CA 95134-1702
          USA

          Tel: (408) 519-3700
          Fax: (408) 519-3705


          Tom McSweeney
          Postal: IBM Corporation
          600 Park Offices Drive

   Gibbons               Expires January 2004                       85

   Internet Draft              iSNS MIB                      July 2003

          Research Triangle Park, NC 27709
          USA

          Tel: (919) 855-5169

          E-mail: tommcs@us.ibm.com

10.  Full Copyright Statement

   "Copyright (C) The Internet Society 2003. All Rights Reserved. This
   document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain
   it or assist in its implementation may be prepared, copied,
   published and distributed, in whole or in part, without restriction
   of any kind, provided that the above copyright notice and this
   paragraph are included on all such copies and derivative works.
   However, this document itself may not be modified in any way, such
   as by removing the copyright notice or references to the Internet
   Society or other Internet organizations, except as needed for the
   purpose of developing Internet standards in which case the
   procedures for copyrights defined in the Internet Standards process
   must be followed, or as required to translate it into languages
   other than English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.

   This document and the information contained herein is provided on
   An "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE."






















   Gibbons               Expires January 2004                       86
