K1 = E(Key, n-fold(Constant))
K2 = E(Key, K1)
K3 = E(Key, K2)
K4 = ...

C1 =    E(Ke, conf | plaintext | pad, oldstate.ivec)
H1 = HMAC(Ki, conf | plaintext | pad)
ciphertext =  C1 | H1
Kc = DK(base-key, usage | 0x99);
Ke = DK(base-key, usage | 0xAA);
Ki = DK(base-key, usage | 0x55);




key = key XOR 0xF0;
odd = 1;
s = string | salt;
tempkey = NULL;
odd = 1;
tempkey = tempkey XOR 8byteblock;
tempkey = key_correction(tempkey);
key = key_correction(DES-CBC-check(s,tempkey));
type = 0;
type = params[0];
ivec=oldstate)
checksum = md5(confounder | 0000...
                                            | msg | pad)

newstate = last block of des-cbc output

newstate = last block of ciphertext

ivec=oldstate)
checksum = md4(confounder | 0000...
                                            | msg | pad)

newstate = last block of des-cbc output

newstate = last block of ciphertext

ivec=oldstate)
checksum = crc(confounder | 00000000
                                            | msg | pad)

newstate = last block of des-cbc output

newstate = last block of ciphertext

s = passwordString + salt
tmpKey = random-to-key(168-fold(s))
key = DK (tmpKey, KerberosConstant)

ivec=0)

ivec=0)

