

Internet Draft                                              A. H. Li
draft-ietf-avt-evrc-01.txt                                      UCLA
February 18, 2000                                             Editor 
Expires: July 2001


              An RTP Payload Format for EVRC Speech

STATUS OF THIS MEMO

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups. Note that other
   groups may also distribute working documents as Internet- Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet- Drafts as reference
   material or to cite them other than as work in progress.

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at 
   http://www.ietf.org/shadow.html.

ABSTRACT

   This document describes the RTP payload format for Enhanced Variable
   Rate Codec (EVRC) Speech.  The packet format supports variable
   interleaving to reduce the effect of packet loss on Speech
   quality. In additional, the non-interleaving format is also
   supported.


1 Introduction

   This document describes how compressed EVRC speech as produced by the
   EVRC CODEC [1] may be formatted for use as an RTP payload type.  A
   method is provided to interleave the output of the compressor to
   reduce quality degradation due to lost packets. Furthermore, the
   sender may choose various interleave settings based on the importance
   of low end-to-end delay versus greater tolerance for lost packets.

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [3].


2 Background

   The Electronic Industries Association (EIA) & Telecommunications
   Industry Association (TIA) standard IS-127 [1] defines a speech
   compression algorithm for use in cdma2000 applications.  IS-127, or
   EVRC is the emerging speech codec standard for cdma2000.

   The EVRC CODEC [1] compresses each 20 milliseconds of 8000 Hz, 16-
   bit sampled input speech into one of three different size output
   frames: Rate 1 (171 bits), Rate 1/2 (80 bits), or Rate 1/8 (16 bits).
   The CODEC chooses the output frame rate based on analysis of the
   input speech and the current operating mode (either normal or one of
   several reduced rates).  For typical speech patterns, this results in
   an average output of 4.2 K bits/sec for normal mode and lower for
   reduced rate modes.


3 RTP/EVRC Packet Format

   The RTP timestamp is in 1/8000 of a second units.  The RTP payload
   data for the EVRC CODEC has one of the following 2 formats
   conditional on whether the receiver uses interleaving and/or bundling
   or sends one codec frame per packet:

   For the case where interleaving is in use and/or multiple codec data
   frames are present in a single RTP packet the RTP packet format is as
   follows:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                      RTP Header [2]                           |
   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
   |RR | LLL | NNN |                                               |
   +-+-+-+-+-+-+-+-+         one or more codec data frames         +
   |                             ....                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   For the case when interleaving is not used and a single codec data
   frame is present in a single RTP packet the RTP packet format is as
   follows:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                      RTP Header [2]                           |
   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
   |                                                               |
   +              one codec data frames            +-+-+-+-+-+-+-+-+
   |                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   The RTP header has the expected values as described in [2].  The
   extension bit is not set and this payload type MUST never have the
   marker bit set.  The codec data frames are aligned on octet
   boundaries.  When interleaving is in use and/or multiple codec data
   frames are present in a single RTP packet, the timestamp is, as
   always, that of the oldest data represented in the RTP packet.  The
   other fields have the following meaning:

   Reserved (RR): 2 bit
      MUST be set to zero by sender, SHOULD be ignored by receiver.

   Interleave (LLL): 3 bits
      MUST have a value between 0 and 5 inclusive.  The remaining two
      values (6 and 7) MUST not be used by senders.  If this field is
      non-zero, interleaving is enabled.  All receivers MUST support
      interleaving.  Senders MAY support interleaving.  Senders that do
      not support interleaving MUST set field LLL and NNN to zero.

   Interleave Index (NNN): 3 bits
      MUST have a value less than or equal to the value of LLL.  Values
      of NNN greater than the value of LLL are invalid.

   Interleaving/Bundling indication can be determined at the receiver by
   detecting the presence of a 1 in the first bit of the RTP packet
   payload.

3.1 Receiving Invalid Values

   On receipt of an RTP packet with an invalid value of the LLL or NNN
   field, the RTP packet MUST be treated as lost by the receiver for the
   purpose of generating erasure frames as described in section 4.

3.2 CODEC data frame format

   The output of the EVRC CODEC must be converted into CODEC data frames
   for inclusion in the RTP payload as follows:

   a. Octet 0 of the CODEC data frame indicates whether interleaving is
      present, if rate reduction is desired, and the rate of the codec
      frame.  The format of the octet is indicated below:

       0 1 2 3 4 5 6 7
      +-+-+-+-+-+-+-+-+
      |I|R| frame type|
      +-+-+-+-+-+-+-+-+

      Interleaving Disabled (I): 1 bit
         This bit indicates whether the interleaving byte is present.
         This bit MUST be set to 1 if the interleaving byte is missing
         (i.e., interleaving/bundling is not used), otherwise it MUST 
         be set to 0.  Note: if the first bit of the first RTP payload 
         octet is zero this byte is the interleaving byte, otherwise it
         is octet zero of the EVRC payload.

      Reduce Rate (R): 1 bit
         Setting the 'R' bit indicates that this packet is requesting a
         reduced codec rate for the reverse direction. When the 'R' bit 
         is not set the packet is requesting that the codec resume 
         normal operation.  In the case of packet loss the codec should 
         continue to operate in the mode indicated by the last packet 
         received.

      Frame Type: 6 bits
         The frame type values are described in the table below and the
         size of the associated packet is indicated in the table below:

         Value   RATE      TOTAL CODEC data frame size (in octets)
         ---------------------------------------------------------
           0     Blank      1    
           1     1/8        3    
           3     1/2       11    
           4     1         23    
          14     Erasure    1    (SHOULD NOT be transmitted by sender)

         Receipt of a CODEC data frame with a reserved value in octet 0
         MUST be considered invalid data as described in 3.1.  All 
         values not listed in the above table MUST be considered 
         reserved.

   b. The bits as numbered in the standard [1] from highest to lowest
      are packed into octets.  The highest numbered bit (170 for Rate
      1, 79 for Rate 1/2 and 15 for Rate 1/8) is placed in the most
      significant bit (Internet bit 0) of octet 1 of the CODEC data
      frame, the second highest bit is placed in the second most
      significant bit of the first octet, the third highest in the
      third most significant bit of the first octet, and so on.  This
      continues until all of the bits have been placed in the CODEC
      data frame.  The remaining unused bits of the last octet of the
      CODEC data frame MUST be set to zero (note that this is only
      applicable to rate 1 frames as the others fit completely into a
      whole number of octets).
      
      Here is a detail of how a Rate 1 frame is converted into a CODEC
      data frame:
      
      Octet 0 of the data frame has value 4 (see table above) indicating
      the total data frame length (including octet 0) is 23 octets.
      Bits 169 through 0 from the standard Rate 1 frame are placed as
      indicated with bits marked with "Z" being set to zero.  The Rate
      1/8 and 1/2 standard frames are converted similarly but do not
      require zero padding because they align on octet boundaries.

                       Rate 1 CODEC data frame (bytes 0 - 3)

       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      | | |           |1|1|1|1|1|1|1|1|1|1|1|1|1|1|1|1|1|1|1|1|1|1|1|1|
      |I|R| 3(Rate 1) |7|6|6|6|6|6|6|6|6|6|6|5|5|5|5|5|5|5|5|5|5|4|4|4|
      | | |           |0|9|8|7|6|5|4|3|2|1|0|9|8|7|6|5|4|3|2|1|0|9|8|7|
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                       Rate 1 CODEC data frame (bytes 20 - 22)

       1                   1                   1                   1
       6                   7                   8                   9
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |1|1|1|1|1|1|1|1|1| | | | | | | | | | | | | | | |
      |8|7|6|5|4|3|2|1|0|9|8|7|6|5|4|3|2|1|0|Z|Z|Z|Z|Z|
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

3.3 Bundling CODEC data frames

   As indicated in section 3, more than one CODEC data frame MAY be
   included in a single RTP packet by a sender.  Receivers MUST handle
   bundles of up to 10 CODEC data frames in a single RTP packet.

   Furthermore, senders have the following additional restrictions:

   o  MUST not bundle more CODEC data frames in a single RTP packet than
      will fit in the MTU of the RTP transport protocol.  For the
      purpose of computing the maximum bundling value, all CODEC data
      frames should be assumed to have the Rate 1 size.

   o  MUST never bundle more than 10 CODEC data frames in a single RTP
      packet.

   o  Once beginning transmission with a given SSRC and given bundling
      value, MUST NOT increase the bundling value.  If the bundling
      value needs to be increased, a new SSRC number MUST be used.

   o  MAY decrease the bundling value only between interleave groups (see
      section 3.4).  If the bundling value is decreased, it MUST NOT be
      increased (even to the original value), although it may be
      decreased again at a later time.

3.3.1 Determining the number of bundled CODEC data frames

   Since no count is transmitted as part of the RTP payload and the
   CODEC data frames have differing lengths, the only way to determine
   how many CODEC data frames are present in the RTP packet is to
   examine octet 0 of each CODEC data frame in sequence until the end of
   the RTP packet is reached.

3.4 Interleaving CODEC data frames

   Interleaving is meaningful only when more than one CODEC data frame
   is bundled into a single RTP packet.

   All receivers MUST support interleaving.  Senders MAY support
   interleaving.

   Given a time-ordered sequence of output frames from the EVRC CODEC 
   numbered 0..n, a bundling value B, and an interleave value L where 
   n = B * (L+1) - 1, the output frames are placed into RTP packets as 
   follows (the values of the fields LLL and NNN are indicated for 
   each RTP packet):

   First RTP Packet in Interleave group:
      LLL=L, NNN=0
      Frame 0, Frame L+1, Frame 2(L+1), Frame 3(L+1), ... for a total of
      B frames

   Second RTP Packet in Interleave group:
      LLL=L, NNN=1
      Frame 1, Frame 1+L+1, Frame 1+2(L+1), Frame 1+3(L+1), ... for a
      total of B frames

   This continues to the last RTP packet in the interleave group:

   L+1 RTP Packet in Interleave group:
      LLL=L, NNN=L
      Frame L, Frame L+L+1, Frame L+2(L+1), Frame L+3(L+1), ... for a
      total of B frames

   Senders MUST transmit in timestamp-increasing order.  Furthermore,
   within each interleave group, the RTP packets making up the
   interleave group MUST be transmitted in value-increasing order of the
   NNN field.  While this does not guarantee reduced end-to-end delay on
   the receiving end, when packets are delivered in order by the
   underlying transport, delay will be reduced to the minimum possible.

   Additionally, senders have the following restrictions:

   o  Once beginning transmission with a given SSRC and given interleave
      value, MUST NOT increase the interleave value.  If the interleave
      value needs to be increased, a new SSRC number MUST be used.

   o  MAY decrease the interleave value only between interleave groups.
      If the interleave value is decreased, it MUST NOT be increased
      (even to the original value), although it may be decreased again
      at a later time.

3.5 Finding Interleave Group Boundaries

   Given an RTP packet with sequence number S, interleave value (field
   LLL) L, and interleave index value (field NNN) N, the interleave
   group consists of RTP packets with sequence numbers from S-N to S-N+L
   inclusive.  In other words, the Interleave group always consists of
   L+1 RTP packets with sequential sequence numbers.  The bundling value
   for all RTP packets in an interleave group MUST be the same.

   The receiver determines the expected bundling value for all RTP
   packets in an interleave group by the number of CODEC data frames
   bundled in the first RTP packet of the interleave group received.
   Note that this may not be the first RTP packet of the interleave
   group sent if packets are delivered out of order by the underlying
   transport.

   On receipt of an RTP packet in an interleave group with other than
   the expected bundling value, the receiver MAY discard CODEC data
   frames off the end of the RTP packet or add erasure CODEC data frames
   to the end of the packet in order to manufacture a substitute packet
   with the expected bundling value.  The receiver MAY instead choose to
   discard the whole interleave group and play silence.

3.6 Switching from Interleaved/Bundled Mode to Single EVRC CODEC data
    Frame Per Packet Mode

   o  If both bundling and interleaving have been reduced to a single
      CODEC data frame per packet then the sender should switch to the
      non-inter- leaved/non-bundled RTP payload type description.

   o  Once switching transmission from interleaved/bundled packet mode to
      single CODEC data frame per packet mode, the sender MUST NOT
      return to interleave/bundling mode without a new SSRC number being
      used.

3.7 Reconstructing Interleaved Speech

   Given an RTP sequence number ordered set of RTP packets in an
   interleave group numbered 0..L, where L is the interleave value and B
   is the bundling value, and CODEC data frames within each RTP packet
   that are numbered in order from first to last with the numbers 1..B,
   the original, time-ordered sequence of output frames from the CODEC
   may be reconstructed as follows:

   First L+1 frames:
      Frame 0 from packet 0 of interleave group
      Frame 0 from packet 1 of interleave group
      And so on up to...
      Frame 0 from packet L of interleave group

   Second L+1 frames:
      Frame 1 from packet 0 of interleave group
      Frame 1 from packet 1 of interleave group
      And so on up to...
      Frame 1 from packet L of interleave group

   And so on up to...

   Bth L+1 frames:
      Frame B from packet 0 of interleave group
      Frame B from packet 1 of interleave group
      And so on up to...
      Frame B from packet L of interleave group

3.7.1 Additional Receiver Responsibility

   Assume that the receiver has begun playing frames from an interleave
   group.  The time has come to play frame x from packet n of the
   interleave group.  Further assume that packet n of the interleave
   group has not been received.  As described in section 4, an erasure
   frame will be sent to the EVRC CODEC.

   Now, assume that packet n of the interleave group arrives before
   frame x+1 of that packet is needed.  Receivers SHOULD use frame x+1
   of the newly received packet n rather than substituting an erasure
   frame.  In other words, just because packet n wasn't available the
   first time it was needed to reconstruct the interleaved speech, the
   receiver SHOULD NOT assume it's not available when it's subsequently
   needed for interleaved speech reconstruction.


4 Handling lost RTP packets

   The EVRC CODEC supports the notion of erasure frames.  These are
   frames that for whatever reason are not available.  When
   reconstructing interleaved speech or playing back non-interleaved
   speech, erasure frames MUST be fed to the EVRC CODEC for all of the
   missing packets.

   Receivers MUST use the timestamp clock to determine how many CODEC
   data frames are missing.  Each CODEC data frame advances the
   timestamp clock EXACTLY 160 counts.

   Since the bundling value may vary (it can only decrease), the
   timestamp clock is the only reliable way to calculate exactly how
   many CODEC data frames are missing when a packet is dropped.

   Specifically when reconstructing interleaved speech, a missing RTP
   packet in the interleave group should be treated as containing B
   erasure CODEC data frames where B is the bundling value for that
   interleave group.


5 Implementation Issues and Design Rationale

5.1 Interleaving Length

   The EVRC CODEC interpolates the missing speech content when given an
   erasure frame.  However, the best quality is perceived by the
   listener when erasure frames are not consecutive.  This makes
   interleaving desirable as it increases speech quality when dropped
   packets are more likely.

   On the other hand, interleaving can greatly increase the end-to-end
   delay.  Where an interactive session is desired, the non-interleaved/
   non-bundled RTP payload type is recommended.

   When end-to-end delay is not a concern, a bundling value of at least
   4 and an interleave (field LLL) value of 4 or 5 is recommended
   subject to MTU limitations.

   The restrictions on senders set forth in sections 3.3 and 3.4
   guarantee that after receipt of the first payload packet from the
   sender, the receiver can allocate a well-known amount of buffer space
   that will be sufficient for all future reception from the same SSRC
   value.  Less buffer space may be required at some point in the future
   if the sender decreases the bundling value or interleave, but never
   more buffer space.  This prevents the possibility of the receiver
   needing to allocate more buffer space (with the possible result that
   none is available) should the bundling value or interleave value be
   increased by the sender.  Also, were the interleave or bundling value
   to increase, the receiver could be forced to pause playback while it
   receives the additional packets necessary for playback at an
   increased bundling value or increased interleave.

5.2 Outbound Signaling of Interleaving

   Even though interleaving of the payload data is signaled by the first 
   bit of Octet 0 of codec data frame, it does not prevent using 
   outbound signal to convey this information if desired. One example 
   would be using different payload type to distinguish interleaved 
   payload data from non-interleaved payload data. In such 
   implementations, two payload type can be signaled - one for 
   interleaved packets and the other one for non-interleaved packets. 
   The receiver can process the RTP packets by the payload type, and 
   simply ignore the I bit (Interleaving Disabled) in the payload packets 
   itself. In addition, the receiver can cross check it against the 
   payload type to improve the robustness.
   
5.3 Byte Alignment of the Codec Data Frames

   Because the length of the full rate codec output frame is 171 bits,
   5 bits of padding are added at the end of the full rate codec data
   frames to make them byte aligned. One suggested potential change is 
   to shortening the frame type field in the Octec 0 by 3 bits to 
   eliminate the padding bits at the end of the full rate codec data 
   frames. This will not benefit the half and eighth rate frames.
   
   Assuming the typical EVRC codec output scenario as follows:
   
                            Full rate      Half rate     Eighth rate
       Percentage              45%             5%            50%
       Frame Length (byte)     23             11              3
       Saving (byte)            1              0              0
       
   It can be estimated that the overall saving this approach will bring
   is 3.6% ((1 * 45%) / (23 * 45% + 11 * 5% + 3 * 50%)). Note: This 
   number may not be accurate if considering the additional RTP and any
   other additional headers of the packet.
   
   Also, there are the following concerns about this approach:

   * The bit shifting operation over the full length of the codec data
     will add the computation complexity of the algorithm;
   * This payload type is not particularly designed for over-the-air 
     link where efficiency is one of the primiary concerns;
   * The non-byte-aligned format is orthogonal to the design of the 
     payload format, and there is not enough evidence of application 
     scenarios to justify the diversification of formats.

   After these considerations, it is decided that the non-byte-aligned
   format is not taken at this time.   


6. The EVRC MIME Type Registration 

   The MIME-name for the EVRC codec is allocated from the IETF tree
   since EVRC is expected to be a widely used codec for voice-over-IP
   applications.

   Media Type Name:     audio 

   Media Subtype Name:  EVRC 

   Required Parameters: none 

   Optional parameters for RTP mode: 

     ptime:    Defined as usual for RTP audio. 

     maxframes: Maximum number of EVRC speech frames in one RTP packet.
     The receiver may set this parameter in order to limit buffering
     requirements or delay.

   Optional parameters for storage mode: none 

   Encoding considerations for RTP mode: see section 4 and section 5 of
   this document.

   Encoding considerations for storage mode: The EVRC speech frames are
   packed into consecutive compound EVRC payloads, see section 4 and
   section 5. The compound EVRC payloads must be stored in sequential
   order. This implies that the first octet after payload n must be the
   first octet of payload (n+1).  Furthermore, missing frames and
   non-received frames during non-speech period must be encapsulated
   into a compound EVRC payload as blank frames or erasures.  Each
   receiving entity that accepts this MIME type must be able to decode
   all EVRC coding modes.

   Security considerations: see section 8 "Security Considerations".
    
   Public specification: this document. 
    
   Additional information for storage mode: 
      Magic number: none 
      File extensions: evc, EVC 
      Macintosh file type code: none 
      Object identifier or OID: none 
    
   Intended usage: COMMON. It is expected that many VoIP applications 
   (as well as mobile applications) will use this type. 
    
    
7. Mapping to SDP Parameters 
    
   Please note that this chapter applies to the RTP mode only. 
    
   Parameters are mapped to SDP [5] as usual. 
   Example usage in SDP: 
     m = audio 49120 RTP/EVRC 97 
     a = rtpmap:97 EVRC 
     a = fmtp:97 maxframes = 2 
    
    
8 Security Considerations

   RTP packets using the payload format defined in this specification
   are subject to the security considerations discussed in the RTP
   specification [2], and any appropriate profile (for example [4]).
   This implies that confidentiality of the media streams is achieved by
   encryption.  Because the data compression used with this payload
   format is applied end-to-end, encryption may be performed after
   compression so there is no conflict between the two operations.

   A potential denial-of-service threat exists for data encodings using
   compression techniques that have non-uniform receiver-end
   computational load.  The attacker can inject pathological datagrams
   into the stream which are complex to decode and cause the receiver to
   be overloaded.  However, this encoding does not exhibit any
   significant non-uniformity.

   As with any IP-based protocol, in some circumstances, a receiver may
   be overloaded simply by the receipt of too many packets, either
   desired or undesired.  Network-layer authentication may be used to
   discard packets from undesired sources, but the processing cost of
   the authentication itself may be too high.  In a multicast
   environment, pruning of specific sources may be implemented in 
   future versions of IGMP [6] and in multicast routing protocols to 
   allow a receiver to select which sources are allowed to reach it.


9 Acknowledgements

   The editor thanks the following authors for contributions to this 
   document:    J. D. Villasenor, D.S. Park, J.H. Park, K. Miller, 
   S. C. Greer, D. Leon, N. Leung, K. J. McKay, M. Lioy, T. Hiller, 
   P. J. McCann, M. D. Turner, A. Rajkumar, and Dan Gal.


10 References

   [1]  TIA/EIA/IS-127, "Enhanced Variable Rate Codec, Speech Service         
        Option 3 for Wideband Spread Spectrum Digital Systems", January 
        1997.

   [2]  Schulzrinne, H., Casner, S., Frederick, R. and V. Jacobson,
        "RTP:  A Transport Protocol for Real-Time Applications", RFC
        1889, January 1996.

   [3]  Bradner, S., "Key words for use in RFCs to Indicate Requirement
        Levels", BCP 14, RFC 2119, March 1997.

   [4]  Schulzrinne, H., "RTP Profile for Audio and Video Conferences
        with Minimal Control", RFC 1890, January 1996.

   [5]  M. Handley and V. Jacobson, "SDP: Session Description Protocol", 
        RFC 2327, April 1998.

   [6]  Deering, S., "Host Extensions for IP Multicasting", STD 5, RFC
        1112, August 1989.
      
        
11 Authors' Address

   Adam H. Li
   Image Communication Lab
   Electrical Engineering Department
   University of California
   Los Angeles, CA 90095
   USA
   Phone: +1 310 825 5178
   EMail: adamli@icsl.ucla.edu
   
   John D. Villasenor
   Image Communication Lab
   Electrical Engineering Department
   University of California
   Los Angeles, CA 90095
   USA
   Phone: +1 310 825 0228
   EMail: villa@icsl.ucla.edu
   
   Dong-Seek Park
   Samsung Electronics
   Suwon, Kyungki  442-742
   Korea
   Phone: +82 31 200 3674
   Email: dspark@samsung.com
   
   Jeong-Hoon Park
   Samsung Electronics
   Suwon, Kyungki  442-742
   Korea
   Phone: +82 31 200 3747
   Email: dspark@samsung.com
   
   Keith Miller
   Nokia
   6000 Connection Drive 
   Irving, Texas 75039 
   USA
   Phone: +1 972 894 4296
   Email: keith.miller@nokia.com

   S. Craig Greer
   Nokia
   6000 Connection Drive 
   Irving, Texas 75039 
   USA
   Phone: +1 972 894 4867
   Email: craig.greer@nokia.com
   
   David Leon
   Nokia
   6000 Connection Drive 
   Irving, Texas 75039 
   USA
   Phone: +1 972 374 1860
   Email: david.leon@nokia.com

   Marcello Lioy
   QUALCOMM, Incorporated
   5775 Morehouse Drive 
   San Diego, CA 92121 
   USA
   Phone: +1 858 651 8220
   Email: mlioy@qualcomm.com

   Nikolai Leung
   QUALCOMM, Incorporated
   7710 Takoma Ave. 
   Takoma Park, MD 20912 
   USA
   Phone: +1 703 346 8351
   Email: nleung@qualcomm.com

   Kyle J. McKay
   QUALCOMM, Incorporated
   5775 Morehouse Drive
   San Diego, CA 92121-1714
   USA
   Phone: +1 858 587 1121
   EMail: kylem@qualcomm.com

   Tom Hiller 
   Lucent Technologies 
   Room 2F-218 
   263 Shuman Drive 
   Naperville, IL 60137 
   USA
   Phone: +1 630 979 7673 
   Email: tom.hiller@lucent.com 
    
   Peter J. McCann 
   Lucent Technologies 
   Room 2Z-305 
   263 Shuman Drive 
   Naperville, IL 60137 
   USA
   Phone: +1 630 713 9359 
   Email: mccap@lucent.com 
    
   Michael D. Turner 
   Lucent Technologies 
   Room 2A-203 
   67 Whippany Rd 
   Whippany, NJ 07981 
   USA
   Phone: +1 973 386 3579 
   Email: mdturner@lucent.com 
 
   Ajay Rajkumar 
   Lucent Technologies 
   Room 1A-235 
   67 Whippany Rd 
   Whippany, NJ 07981 
   USA
   Phone: +1 973 386 5249 
   Email: ajayrajkumar@lucent.com 

   Dan Gal
   Lucent Technologies
   67 Whippany Rd 
   Whippany, NJ 07981 
   USA
   Phone: +1 973 428 7734
   Email: dgal@lucent.com

    
