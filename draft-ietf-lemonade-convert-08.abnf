section-convert =  "CONVERT" SP convert-params

section-msgtext =/ section-convert
    
convert-params = "(" (quoted-to-mime-type / default-conversion)
                       [SP "(" transcoding-params ")"] ")" 

quoted-to-mime-type = DQUOTE to-mime-type DQUOTE

transcoding-params  = transcoding-param 
                            *(SP transcoding-param) 

transcoding-param  = transcoding-param-name SP
                           transcoding-param-value 
    
transcoding-param-name = astring
               ; <transcod-param-name-nq> represented as a quoted,
               ; literal or atom. Note that
               ; <transcod-param-name-nq> allows for "%" which is
               ; not allowed in atoms. Such values must be
               ; represented as quoted or literal.

transcod-param-name-nq = Feature-tag
               ; Feature-tag is defined in [MEDIAFEAT-REG].

transcoding-param-value = astring 
    
default-conversion = "NIL"

fetch-att =/ "CONVERT.SIZE" convert-size-section

msg-att-static =/ "CONVERT.SIZE" convert-size-section SP number

convert-size-section = "[" section-part SP convert-params "]"

section-binary =   "[" [section-binary-spec] "]"

section-binary-spec = section-part ["." section-convert] /
                                section-convert
                              ; Note that conversion of a top level
                              ; multipart/* is allowed.

msg-att-static =/ "BODYPARTSTRUCTURE" section SP body

resp-text-code =/ "TEMPFAIL" /
                            bad-params-resp-code /
                            missing-params-resp-code /

mimetype-and-params = from-concrete-mime-type SP to-mime-type
              SP "(" transcoding-params ")"
              ; The values can't include the ']' character, as this
              ; non-terminal is returned in an IMAP response code.

bad-params-resp-code = "BADPARAMETERS"
                                 1*(SP mimetype-and-params)

missing-params-resp-code = "MISSINGPARAMETERS" SP
                                 1*(SP mimetype-and-params)
    
convert-entry-req = available-conversions /
                             available-transcoding-parameters 
     
available-conversions = "/convert/" from-mime-type "/types"

any-mime-type  = "@"

from-mime-type = (type-name "/" any-mime-type) /
                          concrete-mime-type
                          ; "type/@" or "type/subtype" 
                          ; type-name is defined in [MIME-MTSRP].

concrete-mime-type = type-name "/" subtype-name  
                          ; i.e.  "type/subtype".
                          ; type-name and subtype-name
                          ; are defined in [MIME-MTSRP].

from-concrete-mime-type = concrete-mime-type
    
to-mime-type = concrete-mime-type
    
available-transcoding-parameters = "/convert/"
                          from-concrete-mime-type "/"
                          to-mime-type "/params"
            ; Name of an annotation containing transcoding parameters.
            ; i.e. /convert/frmtype/frmsubtype/totype/tosubtype/params.

types-shared-value = from-concrete-mime-type
                              *(";" from-concrete-mime-type)
    
params-shared-value = transcoding-param-name
                               *(";" transcoding-param-name)


