start = COSE_Messages / COSE_Key / COSE_KeySet / Internal_Types

Internal_Types = Sig_structure / Enc_structure / MAC_structure /
           COSE_KDF_Context

label = int / tstr
values = any

COSE_Messages = COSE_Untagged_Message / COSE_Tagged_Message

COSE_Untagged_Message = COSE_Sign / COSE_Sign1 /
       COSE_Encrypt / COSE_Encrypt1 /
       COSE_Mac / COSE_Mac0

COSE_Tagged_Message = COSE_Sign_Tagged / COSE_Sign1_Tagged /
       COSE_Encrypt_Tagged / COSE_Encrypt1_Tagged /
       COSE_Mac_Tagged / COSE_Mac0_Tagged

Headers = (
       protected : bstr,                  ; Contains a header_map
       unprotected : header_map
header_map = {
       Generic_Headers,
       ; Algorithm_Headers,
       * label => values
Generic_Headers = (
       ? 1 => int / tstr,  ; algorithm identifier
       ? 2 => [+label],    ; criticality
       ? 3 => tstr / int,  ; content type
       ? 4 => bstr,        ; key identifier
       ? 5 => bstr,        ; IV
       ? 6 => bstr,        ; Partial IV
       ? 7 => COSE_Signature / [+COSE_Signature] ; Counter signature
COSE_Sign_Tagged = #6.991(COSE_Sign) ; Replace 991 with TBD1

COSE_Sign = [
       Headers,
       payload : bstr / nil,
       signatures : [+ COSE_Signature]
COSE_Signature =  [
       Headers,
       signature : bstr
COSE_Sign1_Tagged = #6.997(COSE_Sign1) ; Replace 997 with TBD7

COSE_Sign1 = [
       Headers,
       payload : bstr / nil,
       signature : bstr
Sig_structure = [
       context: "Signature" / "Signature1" / "CounterSignature",
       body_protected: bstr,
       ? sign_protected: bstr,
       external_aad: bstr,
       payload: bstr
COSE_Encrypt_Tagged = #6.992(COSE_Encrypt) ; Replace 992 with TBD2

COSE_Encrypt = [
       Headers,
       ciphertext: bstr / nil,
       recipients: [+COSE_recipient]
COSE_recipient = [
       Headers,
       ciphertext: bstr / nil,
       ? recipients: [+COSE_recipient]
COSE_Encrypt1_Tagged = #6.993(COSE_Encrypt1) ; Replace 993 with TBD3

COSE_Encrypt1 = [
       Headers,
       ciphertext: bstr / nil,
Enc_structure = [
       context : "Encrypt" / "Encrypt1" / "Enc_Recipient" /
           "Mac_Recipient" / "Rec_Recipient",
       protected: bstr,
       external_aad: bstr
COSE_Mac_Tagged = #6.994(COSE_Mac)         ; Replace 994 with TBD4

COSE_Mac = [
      Headers,
      payload: bstr / nil,
      tag: bstr,
      recipients: [+COSE_recipient]
COSE_Mac0_Tagged = #6.996(COSE_Mac0)    ; Replace 996 with TBD6

COSE_Mac0 = [
      Headers,
      payload: bstr / nil,
      tag: bstr,
MAC_structure = [
        context: "MAC" / "MAC0",
        protected: bstr,
        external_aad: bstr,
        payload: bstr
COSE_Key = {
key_kty => tstr / int,
COSE_KeySet = [+COSE_Key]
key_kty=1
key_kid=2
key_alg=3
key_ops=4

signature = Sign(message content, key)

valid = Verification(message content, key, signature)

Signature = I2OSP(R, n) | I2OSP(S, n)
tag = MAC_Create(message content, key)

valid = MAC_Verify(message content, key, tag)

ciphertext = Encrypt(message content, key, additional data)

PartyInfo = (
       ? nonce : bstr / int,
       ? identity : bstr,
       ? other : bstr,
COSE_KDF_Context = [
       AlgorithmID : int / tstr,
       PartyUInfo : [ PartyInfo ],
       PartyVInfo : [ PartyInfo ],
       SuppPubInfo : [
           keyDataLength : uint,
           protected : bstr,
           ? other : bstr
       ],
       ? SuppPrivInfo : bstr
