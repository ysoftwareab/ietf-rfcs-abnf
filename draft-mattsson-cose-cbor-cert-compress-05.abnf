CBORCertificate = [
   TBSCertificate,
   issuerSignatureValue : bytes,
TBSCertificate = (
   cborCertificateType : int,
   certificateSerialNumber : CertificateSerialNumber,
   issuer : Name,
   validityNotBefore : Time,
   validityNotAfter : Time / null,
   subject : Name,
   subjectPublicKeyAlgorithm : Algorithm,
   subjectPublicKey : bytes,
   extensions : Extensions,
   issuerSignatureAlgorithm : Algorithm,
CertificateSerialNumber = ~biguint

Name = [ * [ + Attribute ] ] / text / bytes

Attribute = ( attributeType : int, attributeValue : text )

Time = ~time

Algorithm = int / oid

Extensions = [ * Extension ] / int

Extension = (
   extensionID : int / oid,
   ? critical : bool,        ; present if and only if extensionID is an oid
   extensionValue : any,     ; type known from extensionID
extensionValue = -1, and if 'cA' = true and 'pathLenConstraint' is
ExtValueEKU = [ + int / oid ] / int

GeneralNames = [ + GeneralName ] / text
GeneralName = ( GeneralNameType : int, GeneralNameValue : any )

KeyIdentifier = bytes

ExtValueAIA = [ + ( ocsp : 1 // caIssuers : 2 , uri : text ) ]

