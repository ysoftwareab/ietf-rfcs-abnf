start = COSE_MSG / COSE_Key / COSE_KeySet

label = int / tstr
values = any

COSE_MSG = COSE_Sign /
       COSE_encrypt /
       COSE_mac

COSE_Tagged_MSG = #6.999(COSE_MSG)   ; Replace 999 with TBD1

msg_type_reserved=0
msg_type_signed=1
msg_type_encrypted=2
msg_type_mac=3

header_map = {+ label => any }

Headers = (
       protected : bstr,                  ; Contains a header_map
       unprotected : header_map
COSE_Sign = [
       msg_type: msg_type_signed,
       Headers,
       payload : bstr,
       signatures : [+ COSE_signature]
COSE_signature =  [
       Headers,
       signature : bstr
Sig_structure = [
       body_protected: bstr,
       sign_protected: bstr,
       external_aad: bstr,
       payload: bstr
COSE_encrypt = [
       msg_type: msg_type_encrypted,
       COSE_encrypt_fields
COSE_encrypt_fields = (
       Headers,
       ciphertext: bstr,
       ? recipients: [+[COSE_encrypt_fields]]
Enc_structure = [
       protected: bstr,
       external_aad: bstr
COSE_mac = [
      msg_type: msg_type_mac,
      Headers,
      payload: bstr,
      tag: bstr,
      recipients: [+[COSE_encrypt_fields]]
MAC_structure = [
        protected: bstr,
        external_aad: bstr,
        payload: bstr
COSE_Key = {
key_kty => tstr / int,
COSE_KeySet = [+COSE_Key]

key_kty=1
key_kid=2
key_alg=3
key_ops=4

key_ops_sign=1
key_ops_verify=2
key_ops_encrypt=3
key_ops_decrypt=4
key_ops_wrap=5
key_ops_unwrap=6
key_ops_agree=7

signature = Sign(message content, key)

valid = Verification(message content, key, signature)


Signature = I2OSP(R, n) | I2OSP(S, n)
tag = MAC_Create(message content, key)

valid = MAC_Verify(message content, key, tag)


ciphertext = Encrypt(message content, key, additional data)

COSE_KDF_Context = [
       AlgorithmID : int / tstr,
       PartyUInfo : [
           ? nonce : bstr / int,
           ? identity : bstr,
           ? other : bstr
       ],
       PartyVInfo : [
           ? nonce : bstr,
           ? identity : bstr / tstr,
           ? other : bstr
       ],
       SuppPubInfo : [
           keyDataLength : uint,
           protected : bstr,
           ? other : bstr
       ],
       ? SuppPrivInfo : bstr
