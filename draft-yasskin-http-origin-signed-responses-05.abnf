Signature = sh-param-list

sig=*MEUCIQDXlI2gN3RNBlgFiuRNFpZXcDIaUpX6HIEwcZEc0cZYLAIga9DsVOMM+g5YpwEBdGW3sS+bvnmAJJiSMwhuBdqp5UY=*;
integrity="digest/mi-sha256";
validity-url="https://example.com/resource.validity.1511128380";
cert-url="https://example.com/oldcerts";
cert-sha256=*W7uB969dFW3Mb5ZefPS9Tq5ZbH5iSmOILpjv2qEArmI=*;
date=1511128380; expires=1511733180,
sig=*MEQCIGjZRqTRf9iKNkGFyzRMTFgwf/BrY2ZNIP/dykhUV0aYAiBTXg+8wujoT4n/W+cNgb7pGqQvIUGYZ8u8HZJ5YH26Qg=*;
integrity="digest/mi-sha256";
validity-url="https://example.com/resource.validity.1511128380";
cert-url="https://example.com/newcerts";
cert-sha256=*J/lEm9kNRODdCmINbvitpvdYKNQ+YgBj99DlYp4fEXw=*;
date=1511128380; expires=1511733180,
sig=*lGZVaJJM5f2oGczFlLmBdKTDL+QADza4BgeO494ggACYJOvrof6uh5OJCcwKrk7DK+LBch0jssDYPp5CLc1SDA=*
integrity="digest/mi-sha256";
validity-url="https://example.com/resource.validity.1511128380";
ed25519key=*zsSevyFsxyZHiUluVBDd4eypdRLTqyWRVOJuuKUz+A8=*
date=1511128380; expires=1511733180,
sig=*MEYCIQCNxJzn6Rh2fNxsobktir8TkiaJYQFhWTuWI1i4PewQaQIhAMs2TVjc4rTshDtXbgQEOwgj2mRXALhfXPztXgPupii+=*;
integrity="digest/mi-sha256";
validity-url="https://thirdparty.example.com/resource.validity.1511161860";
cert-url="https://thirdparty.example.com/certs";
cert-sha256=*UeOwUPkvxlGRTyvHcsMUN0A2oNsZbU8EUvg8A9ZAnNc=*;
date=1511133060; expires=1511478660,
   There are 4 signatures: 2 from different secp256r1 certificates
   within "https://example.com/", one using a raw ed25519 public key
   that's also controlled by "example.com", and a fourth using a
   secp256r1 certificate owned by "thirdparty.example.com".

   All 4 signatures rely on the "Digest" response header with the mi-
   sha256 digest algorithm to guard the integrity of the response
   payload.

   The signatures include a "validity-url" that includes the first time
   the resource was seen.  This allows multiple versions of a resource
   at the same URL to be updated with new signatures, which allows
   clients to avoid transferring extra data while the old versions don't
   have known security bugs.

   The certificates at "https://example.com/oldcerts" and
   "https://example.com/newcerts" have "subjectAltName"s of
   "example.com", meaning that if they and their signatures validate,
   the exchange can be trusted as having an origin of
   "https://example.com/".  The publisher might be using two
   certificates because their readers have disjoint sets of roots in
   their trust stores.

   The publisher signed with all three certificates at the same time, so
   they share a validity range: 7 days starting at 2017-11-19 21:53 UTC.

   The publisher then requested an additional signature from
   "thirdparty.example.com", which did some validation or processing and
   then signed the resource at 2017-11-19 23:11 UTC.
   "thirdparty.example.com" only grants 4-day signatures, so clients
   will need to re-validate more often.

cert-chain = [
     "&#128220;&#9939;", ; U+1F4DC U+26D3
     + {
       cert: bytes,
       ? ocsp: bytes,
       ? sct: bytes,
       * tstr => any,
     }
validity = {
     ? signatures: [ + bytes ]
     ? update: {
       ? size: uint,
     }
sig=*MEUCIQ...*;
validity-url="https://example.com/resource.validity.1511157180";
cert-url="https://example.com/oldcerts";
date=1511128380; expires=1511733180,
sig=*MEQCIG...*;
validity-url="https://example.com/resource.validity.1511157180";
cert-url="https://example.com/newcerts";
date=1511128380; expires=1511733180,
sig=*MEYCIQ...*;
validity-url="https://thirdparty.example.com/resource.validity.1511161860";
cert-url="https://thirdparty.example.com/certs";
date=1511478660; expires=1511824260

   At 2017-11-27 11:02 UTC, "sig1" and "sig2" have expired, but
   "thirdpartysig" doesn't exipire until 23:11 that night, so the client
   needs to fetch "https://example.com/resource.validity.1511157180"
   (the "validity-url" of "sig1" and "sig2") if it wishes to update
   those signatures.  This URL might contain:
sig=*MEQCIC...*;
validity-url="https://example.com/resource.validity.1511157180";
cert-url="https://example.com/newcerts";
date=1511733180; expires=1512337980,
sig=*MEYCIQ...*;
validity-url="https://thirdparty.example.com/resource.validity.1511161860";
cert-url="https://thirdparty.example.com/certs";
date=1511478660; expires=1511824260

   "https://example.com/resource.validity.1511157180" could also expand
   the set of signatures if its "signatures" array contained more than 2
   elements.

Accept-Signature = sh-param-list

integrity="...">" tag.

Signed-Headers = sh-list
list = version *( "," version )") The server is then expected to
physicalsrc="https://distributor.com/O.com/img.png">

