

          Internet Draft             FDDI MIB                 March 1993


                         FDDI Management Information Base

                            8 March 12:10:00 EST 1993
                                   Version 3.0


                      Draft Expiration Date: September 1993


                                 Jeffrey D. Case

                           The University of Tennessee
                          Department of Computer Science
                                  107 Ayres Hall
                           Knoxville, Tennessee  37996
                                  (615) 974-5067

                                       and

                           SNMP Research, Incorporated
                           3001 Kimberlin Heights Road
                           Knoxville, Tennessee  37920
                                  (615) 573-1434

                                 case@CS.UTK.EDU


                                 Anil Rijsinghani
                          Digital Equipment Corporation
                                  (508) 952-3520

                             anil@levers.enet.dec.com






          1.  Status of this Memo

          This draft document will be submitted to the RFC editor as an
          experimental extension to the SNMP MIB.  It is anticipated
          that a subsequent version of this memo will eventually
          supersede RFC 1285.  Distribution of this memo is unlimited.
          Please send comments to the authors.





          J. D. Case/A. Rijsinghani                             [Page 1]





          Internet Draft             FDDI MIB                 March 1993


          This document is an Internet Draft.  Internet Drafts are
          working documents of the Internet Engineering Task Force
          (IETF), its Areas, and its Working Groups. Note that other
          groups may also distribute working documents as Internet
          Drafts.

          Internet Drafts are draft documents valid for a maximum of six
          months. Internet Drafts may be updated, replaced, or obsoleted
          by other documents at any time.  It is not appropriate to use
          Internet Drafts as reference material or to cite them other
          than as a "working draft" or "work in progress."

          Please check the I-D abstract listing contained in each
          Internet Draft directory to learn the current status of this
          or any other Internet Draft.


          2.  Abstract

          This memo defines an experimental portion of the Management
          Information Base (MIB) for use with network management
          protocols in TCP/IP-based internets.  In particular, it
          defines objects for managing devices which implement the FDDI,
          as specified in the ANSI SMT 7.3 draft standard.

          This memo does not specify a standard for the Internet
          community.























          J. D. Case/A. Rijsinghani                             [Page 2]





          Internet Draft             FDDI MIB                 March 1993


          3.  Historical Perspective

          As reported in RFC 1052, IAB Recommendations for the
          Development of Internet Network Management Standards [1], a
          two-prong strategy for network management of TCP/IP-based
          internets was undertaken.  In the short-term, the Simple
          Network Management Protocol (SNMP), defined in RFC 1067, was
          to be used to manage nodes in the Internet community.  In the
          long-term, the use of the OSI network management framework was
          to be examined.  Two documents were produced to define the
          management information: RFC 1065, which defined the Structure
          of Management Information (SMI), and RFC 1066, which defined
          the Management Information Base (MIB).  Both of these
          documents were designed so as to be compatible with both the
          SNMP and the OSI network management framework.

          This strategy was quite successful in the short-term:
          Internet-based network management technology was fielded, by
          both the research and commercial communities, within a few
          months.  As a result of this, portions of the Internet
          community became network manageable in a timely fashion.

          As reported in RFC 1109, Report of the Second Ad Hoc Network
          Management Review Group [2], the requirements of the SNMP and
          the OSI network management frameworks were more different than
          anticipated.  As such, the requirement for compatibility
          between the SMI/MIB and both frameworks was suspended.  This
          action permitted the operational network management framework,
          based on the SNMP, to respond to new operational needs in the
          Internet community by producing MIB-II.

          In May of 1990, the core documents were elevated to "Standard
          Protocols" with "Recommended" status.  As such, the Internet-
          standard network management framework consists of: Structure
          and Identification of Management Information for TCP/IP-based
          internets, RFC 1155 [3], which describes how managed objects
          contained in the MIB are defined; Management Information Base
          for Network Management of TCP/IP-based internets, which
          describes the managed objects contained in the MIB, RFC 1156
          [4]; and, the Simple Network Management Protocol, RFC 1157
          [5], which defines the protocol used to manage these objects.

          Consistent with the IAB directive to produce simple, workable
          systems in the short-term, the list of managed objects defined
          in the Internet-standard MIB was derived by taking only those





          J. D. Case/A. Rijsinghani                             [Page 3]





          Internet Draft             FDDI MIB                 March 1993


          elements which are considered essential.  However, the SMI
          defined three extensibility mechanisms: one, the addition of
          new standard objects through the definitions of new versions
          of the MIB; two, the addition of widely-available but non-
          standard objects through the experimental subtree; and three,
          the addition of private objects through the enterprises
          subtree.  Such additional objects can not only be used for
          vendor-specific elements, but also for experimentation as
          required to further the knowledge of which other objects are
          essential.

          This memo defines extensions to the MIB using the second
          method.  It contains definitions of managed objects used for
          experimentation.




































          J. D. Case/A. Rijsinghani                             [Page 4]





          Internet Draft             FDDI MIB                 March 1993


          4.  Objects

          Managed objects are accessed via a virtual information store,
          termed the Management Information Base or MIB.  Objects in the
          MIB are defined using the subset of Abstract Syntax Notation
          One (ASN.1) [5] defined in the SMI.  In particular, each
          object has a name, a syntax, and an encoding.  The name is an
          object identifier, an administratively assigned name, which
          specifies an object type.  The object type together with an
          object instance serves to uniquely identify a specific
          instantiation of the object.  For human convenience, we often
          use a textual string, termed the OBJECT DESCRIPTOR, to also
          refer to the object type.

          The syntax of an object type defines the abstract data
          structure corresponding to that object type.  The ASN.1
          language is used for this purpose.  However, the SMI [1]
          purposely restricts the ASN.1 constructs which may be used.
          These restrictions are explicitly made for simplicity.

          The encoding of an object type is simply how that object type
          is represented using the object type's syntax.  Implicitly
          tied to the notion of an object type's syntax and encoding is
          how the object type is represented when being transmitted on
          the network.

          The SMI specifies the use of the basic encoding rules of ASN.1
          [6], subject to the additional requirements imposed by the
          SNMP.


          4.1.  Format of Definitions

          Section 6 contains contains the specification of all object
          types contained in this MIB module.  The object types are
          defined using the conventions defined in the SMI, as amended
          by the extensions specified in [7].













          J. D. Case/A. Rijsinghani                             [Page 5]





          Internet Draft             FDDI MIB                 March 1993


          5.  Overview

          This document defines the managed objects for FDDI devices
          which are to be accessible via the Simple Network Management
          Protocol (SNMP).  At present, this applies to these values of
          the ifType variable in the Internet-standard MIB:

               fddi(15)

          For these interfaces, the value of the ifSpecific variable in
          the MIB-II [4] has the OBJECT IDENTIFIER value:

               smt73    OBJECT IDENTIFIER ::= { experimental 8 73 }

          The definitions of the objects presented here draws heavily
          from related work in the ANSI X3T9.5 committee and the SMT
          subcommittee of that committee [8].  In fact, the definitions
          of the managed objects in this document are, to the maximum
          extent possible, identical to those identified by the ANSI
          committee.  The semantics of each managed object should be the
          same with syntactic changes made as necessary to recast the
          objects in terms of the Internet-standard SMI and MIB so as to
          be compatible with the SNMP.  Examples of these syntactic
          changes include remapping booleans to enumerated integers,
          remapping bit strings to octet strings, and the like.  In
          addition, the naming of the objects was changed to achieve
          compatibility.

          These minimal syntactic changes with no semantic changes
          should allow implementations of SNMP manageable FDDI systems
          to share instrumentation with other network management schemes
          and thereby minimize implementation cost.  In addition, the
          translation of information conveyed by managed objects from
          one network management scheme to another is eased by these
          shared definitions.

          Only the essential variables, as indicated by their mandatory
          status in the ANSI specification were retained in this
          document.  The importance of variables which have an optional
          status in the ANSI specification were perceived as being less
          widely accepted.









          J. D. Case/A. Rijsinghani                             [Page 6]





          Internet Draft             FDDI MIB                 March 1993


          5.1.  Textual Conventions

          Several new datatypes are introduced as a textual convention
          in this MIB document.  These textual conventions enhance the
          readability of the document and ease comparisons with its ANSI
          counterpart.  It should be noted that the introduction of the
          following textual conventions has no effect on either the
          syntax nor the semantics of any managed objects.  The use of
          these is merely an artifact of the explanatory method used.
          Objects defined in terms of one of these methods are always
          encoded by means of the rules that define the primitive type.
          Hence, no changes to the SMI or the SNMP are necessary to
          accommodate these textual conventions which are adopted merely
          for the convenience of readers and writers in pursuit of the
          elusive goal of clear, concise, and unambiguous MIB documents.


          6.  Changes from RFC-1285

          The changes from RFC-1285 to this document, based on changes
          from ANSI SMT 6.2 to SMT 7.3, were so numerous that this MIB
          is located on a different branch of the MIB tree.  No
          assumptions should be made about compatibility with RFC-1285.



























          J. D. Case/A. Rijsinghani                             [Page 7]





          Internet Draft             FDDI MIB                 March 1993


          7.  Object Definitions

          RFCxxxx-MIB DEFINITIONS ::= BEGIN

          IMPORTS
                  experimental, Counter
                      FROM RFC1155-SMI
                  OBJECT-TYPE
                      FROM RFC-1212;

          --  This MIB module uses the extended OBJECT-TYPE macro as
          --  defined in [7].


          -- this is the FDDI MIB module

          fddi    OBJECT IDENTIFIER ::= { experimental 8 }
          smt73   OBJECT IDENTIFIER ::= { fddi 73 }
































          J. D. Case/A. Rijsinghani                             [Page 8]





          Internet Draft             FDDI MIB                 March 1993


          -- textual conventions

          FddiTimeNano ::= INTEGER (0..2147483647)
          -- This data type specifies 1 nanosecond units as
          -- an integer value.
          --
          -- NOTE: The encoding is normal integer representation, not
          -- two's complement.  Since this type is used for variables
          -- which are encoded as TimerTwosComplement in the ANSI
          -- specification, two operations need to be performed on such
          -- variables to convert from ANSI form to SNMP form:
          --
          -- 1) Convert from two's complement to normal integer representation
          -- 2) Multiply by 80 to convert from 80 nsec to 1 nsec units
          --
          -- No resolution is lost.  Moreover, the objects for which this
          -- data type is used effectively do not lose any range due to the
          -- lower maximum value since they do not require the full range.
          --
          -- Example: If smt73MACTReq had a value of 8 ms, it would
          -- be stored in ANSI TimerTwosComplement format as 0xFFFE7960
          -- [8 ms is 100000 in 80 nsec units, which is then converted to
          -- two's complement] but be reported as 8000000 in SNMP since it
          -- is encoded here as FddiTimeNano.

          FddiTimeMilli ::= INTEGER (0..2147483647)
          -- This data type is used for some FDDI timers. It specifies
          -- time in 1 millisecond units, in normal integer representation.

          FddiResourceId ::= INTEGER (0..65535)
          -- This data type is used to refer to an instance of a  MAC,
          -- PORT, or PATH Resource ID.  Indexing begins
          -- at 1.  Zero is used to indicate the absence of a resource.

          FddiSMTStationIdType ::= OCTET STRING (SIZE (8))
          -- The unique identifier for the FDDI station.  This is a
          -- string of 8 octets, represented as X' yy yy xx xx xx xx xx xx'
          -- with the low order 6 octet (xx) from a unique IEEE
          -- assigned address.  The high order two bits of the IEEE
          -- address, the group address bit and the administration bit
          -- (Universal/Local) bit should both be zero.  The first two
          -- octets, the yy octets, are implementor-defined.
          --
          -- The representation of the address portion of the station id
          -- is in the IEEE (ANSI/IEEE P802.1A) canonical notation for





          J. D. Case/A. Rijsinghani                             [Page 9]





          Internet Draft             FDDI MIB                 March 1993


          -- 48 bit addresses.  The canonical form is a 6-octet string
          -- where the first octet contains the first 8 bits of the
          -- address, with the I/G(Individual/Group) address bit as the
          -- least significant bit and the  U/L (Universal/Local) bit
          -- as the next more significant bit, and so on.  Note that
          -- addresses in the ANSI FDDI standard SMT frames are
          -- represented in FDDI MAC order.

          FddiMACLongAddressType ::= OCTET STRING (SIZE (6))
          -- The representation of long MAC addresses as management
          -- values is in the IEEE (ANSI/IEEE P802.1A) canonical
          -- notation for 48 bit addresses.  The canonical form is a
          -- 6-octet string where the first octet contains the first 8
          -- bits of the address, with the I/G (Individual/Group)
          -- address bit as the least significant bit and the  U/L
          -- (Universal/Local) bit as the next more significant bit,
          -- and so on.  Note that the addresses in the SMT frames are
          -- represented in FDDI MAC order.
































          J. D. Case/A. Rijsinghani                            [Page 10]





          Internet Draft             FDDI MIB                 March 1993


          -- groups in the FDDI MIB module

          smt73SMT          OBJECT IDENTIFIER ::= { smt73 1 }

          smt73MAC          OBJECT IDENTIFIER ::= { smt73 2 }

          smt73MACCounters  OBJECT IDENTIFIER ::= { smt73 3 }

          smt73PATH         OBJECT IDENTIFIER ::= { smt73 4 }

          smt73PORT         OBJECT IDENTIFIER ::= { smt73 5 }







































          J. D. Case/A. Rijsinghani                            [Page 11]





          Internet Draft             FDDI MIB                 March 1993


          -- the SMT group
          -- Implementation of the SMT group is mandatory for all
          -- systems which implement manageable FDDI subsystems.

          smt73SMTNumber OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of SMT implementations (regardless of
                      their current state) on this network management
                      application entity.  The value for this variable
                      must remain constant at least from one re-
                      initialization of the entity's network management
                      system to the next re-initialization."
              ::= { smt73SMT  1 }


          -- the SMT table

          smt73SMTTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF Smt73SMTEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A list of SMT entries.  The number of entries
                      shall not exceed the value of smt73SMTNumber."
              ::= { smt73SMT  2 }

          smt73SMTEntry OBJECT-TYPE
              SYNTAX  Smt73SMTEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "An SMT entry containing information common to a
                      given SMT."
              INDEX   { smt73SMTIndex }
              ::= { smt73SMTTable 1 }

          Smt73SMTEntry ::=
              SEQUENCE {
                  smt73SMTIndex
                      INTEGER,
                  smt73SMTStationId
                      FddiSMTStationIdType,





          J. D. Case/A. Rijsinghani                            [Page 12]





          Internet Draft             FDDI MIB                 March 1993


                  smt73SMTOpVersionId
                      INTEGER,
                  smt73SMTHiVersionId
                      INTEGER,
                  smt73SMTLoVersionId
                      INTEGER,
                  smt73SMTUserData
                      OCTET STRING,
                  smt73SMTMIBVersionId
                      INTEGER,
                  smt73SMTMACCts
                      INTEGER,
                  smt73SMTNonMasterCts
                      INTEGER,
                  smt73SMTMasterCts
                      INTEGER,
                  smt73SMTAvailablePaths
                      INTEGER,
                  smt73SMTConfigCapabilities
                      INTEGER,
                  smt73SMTConfigPolicy
                      INTEGER,
                  smt73SMTConnectionPolicy
                      INTEGER,
                  smt73SMTTNotify
                      INTEGER,
                  smt73SMTStatRptPolicy
                      INTEGER,
                  smt73SMTTraceMaxExpiration
                      FddiTimeMilli,
                  smt73SMTBypassPresent
                      INTEGER,
                  smt73SMTECMState
                      INTEGER,
                  smt73SMTCFState
                      INTEGER,
                  smt73SMTRemoteDisconnectFlag
                      INTEGER,
                  smt73SMTStationStatus
                      INTEGER,
                  smt73SMTPeerWrapFlag
                      INTEGER,
                  smt73SMTTimeStamp
                      FddiTimeMilli,
                  smt73SMTTransitionTimeStamp





          J. D. Case/A. Rijsinghani                            [Page 13]





          Internet Draft             FDDI MIB                 March 1993


                      FddiTimeMilli,
                  smt73SMTStationAction
                      INTEGER
              }

          smt73SMTIndex OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A unique value for each SMT.  The value for each
                      SMT must remain constant at least from one re-
                      initialization of the entity's network management
                      system to the next re-initialization."
              ::= { smt73SMTEntry 1 }

          smt73SMTStationId OBJECT-TYPE
              SYNTAX  FddiSMTStationIdType -- OCTET STRING (SIZE (8))
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Used to uniquely identify an FDDI station."
              REFERENCE
                      "ANSI { fddiSMT 11 }"
              ::= { smt73SMTEntry 2 }

          smt73SMTOpVersionId OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The version that this station is using for its
                      operation (refer to ANSI 7.1.2.2). The value of
                      this variable is 2 for this SMT revision."
              REFERENCE
                      "ANSI { fddiSMT 13 }"
              ::= { smt73SMTEntry 3 }

          smt73SMTHiVersionId OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The highest version of SMT that this station
                      supports (refer to ANSI 7.1.2.2)."





          J. D. Case/A. Rijsinghani                            [Page 14]





          Internet Draft             FDDI MIB                 March 1993


              REFERENCE
                      "ANSI { fddiSMT 14 }"
              ::= { smt73SMTEntry 4 }

          smt73SMTLoVersionId OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The lowest version of SMT that this station
                      supports (refer to ANSI 7.1.2.2)."
              REFERENCE
                      "ANSI { fddiSMT 15 }"
              ::= { smt73SMTEntry 5 }

          smt73SMTUserData OBJECT-TYPE
              SYNTAX  OCTET STRING (SIZE (32))
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "This variable contains 32 octets of user defined
                      information. The information shall be an ASCII
                      string."
              REFERENCE
                      "ANSI { fddiSMT 17 }"
              ::= { smt73SMTEntry 6 }

          smt73SMTMIBVersionId OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The version of the FDDI MIB of this station.  The
                      value of this variable is 1 for this SMT
                      revision."
              REFERENCE
                      "ANSI { fddiSMT 18 }"
              ::= { smt73SMTEntry 7 }

          smt73SMTMACCts OBJECT-TYPE
              SYNTAX  INTEGER (0..255)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of MACs in this station or





          J. D. Case/A. Rijsinghani                            [Page 15]





          Internet Draft             FDDI MIB                 March 1993


                      concentrator."
              REFERENCE
                      "ANSI { fddiSMT 21 }"
              ::= { smt73SMTEntry 8 }

          smt73SMTNonMasterCts OBJECT-TYPE
              SYNTAX  INTEGER (0..2)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of this variable is the number of A, B,
                      and S ports in this station or concentrator."
              REFERENCE
                      "ANSI { fddiSMT 22 }"
              ::= { smt73SMTEntry 9 }

          smt73SMTMasterCts OBJECT-TYPE
              SYNTAX  INTEGER (0..255)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of M Ports in a node. If the node is
                      not a concentrator, the value of the variable is
                      zero."
              REFERENCE
                      "ANSI { fddiSMT 23 }"
              ::= { smt73SMTEntry 10 }

          smt73SMTAvailablePaths OBJECT-TYPE
              SYNTAX  INTEGER (0..7)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A value that indicates the PATH types available
                      in the station.

                      The value is a sum.  This value initially takes
                      the value zero, then for each type of PATH that
                      this node has available, 2 raised to a power is
                      added to the sum.  The powers are according to the
                      following table:

                               Path   Power
                            Primary     0
                          Secondary     1





          J. D. Case/A. Rijsinghani                            [Page 16]





          Internet Draft             FDDI MIB                 March 1993


                              Local     2

                      For example, a station having Primary and Local
                      PATHs available would have a value of 5 (2**0 +
                      2**2)."
              REFERENCE
                      "ANSI { fddiSMT 24 }"
              ::= { smt73SMTEntry 11 }

          smt73SMTConfigCapabilities OBJECT-TYPE
              SYNTAX  INTEGER (0..3)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A value that indicates the configuration
                      capabilities of a node. The 'Hold Available' bit
                      indicates the support of the optional Hold
                      Function, which is controlled by
                      fddiSMTConfigPolicy.  The 'CF-Wrap-AB' bit
                      indicates that the station has the capability of
                      performing a wrap_ab (refer to ANSI SMT 9.7.2.2).

                      The value is a sum.  This value initially takes
                      the value zero, then for each of the configuration
                      policies currently enforced on the node, 2 raised
                      to a power is added to the sum.  The powers are
                      according to the following table:

                                 Policy   Power
                          holdAvailable     0
                             CF-Wrap-AB     1 "
              REFERENCE
                      "ANSI { fddiSMT 25 }"
              ::= { smt73SMTEntry 12 }

          smt73SMTConfigPolicy OBJECT-TYPE
              SYNTAX  INTEGER (0..1)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "A value that indicates the configuration policies
                      currently desired in a node.  'Hold' is one of the
                      terms used for the Hold Flag, an optional ECM flag
                      used to enable the optional Hold policy.






          J. D. Case/A. Rijsinghani                            [Page 17]





          Internet Draft             FDDI MIB                 March 1993


                      The value is a sum.  This value initially takes
                      the value zero, then for each of the configuration
                      policies currently enforced on the node, 2 raised
                      to a power is added to the sum.  The powers are
                      according to the following table:

                                     Policy   Power
                          configurationhold     0 "
              REFERENCE
                      "ANSI { fddiSMT 26 }"
              ::= { smt73SMTEntry 13 }

          smt73SMTConnectionPolicy OBJECT-TYPE
              SYNTAX  INTEGER (32768..65535)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "A value representing the connection policies in
                      effect in a node. A station sets the corresponding
                      bit for each of the connection types that it
                      rejects. The letter designations, X and Y, in the
                      'rejectX-Y' names have the following significance:
                      X represents the PC-Type of the local PORT and Y
                      represents the PC_Type of the adjacent PORT
                      (PC_Neighbor). The evaluation of Connection-
                      Policy (PC-Type, PC-Neighbor) is done to determine
                      the setting of T- Val(3) in the PC-Signalling
                      sequence (refer to ANSI 9.6.3). Note that Bit 15,
                      (rejectM-M), is always set and cannot be cleared.

                      The value is a sum.  This value initially takes
                      the value zero, then for each of the connection
                      policies currently enforced on the node, 2 raised
                      to a power is added to the sum.  The powers are
                      according to the following table:

                             Policy   Power
                          rejectA-A     0
                          rejectA-B     1
                          rejectA-S     2
                          rejectA-M     3
                          rejectB-A     4
                          rejectB-B     5
                          rejectB-S     6
                          rejectB-M     7





          J. D. Case/A. Rijsinghani                            [Page 18]





          Internet Draft             FDDI MIB                 March 1993


                          rejectS-A     8
                          rejectS-B     9
                          rejectS-S     10
                          rejectS-M     11
                          rejectM-A     12
                          rejectM-B     13
                          rejectM-S     14
                          rejectM-M     15 "
              REFERENCE
                      "ANSI { fddiSMT 27 }"
              ::= { smt73SMTEntry 14 }

          smt73SMTTNotify OBJECT-TYPE
              SYNTAX  INTEGER (2..30)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The timer, expressed in seconds, used in the
                      Neighbor Notification protocol. It has a range of
                      2 seconds to 30 seconds, and its default value is
                      30 seconds (refer to ANSI SMT 8.2)."
              REFERENCE
                      "ANSI { fddiSMT 29 }"
              ::= { smt73SMTEntry 15 }

          smt73SMTStatRptPolicy OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "If true, indicates that the node will generate
                      Status Reporting Frames for its implemented events
                      and conditions. It has an initial value of true.
                      This variable determines the value of the
                      SR_Enable Flag (refer to ANSI SMT 8.3.2.1)."
              REFERENCE
                      "ANSI { fddiSMT 30 }"
              ::= { smt73SMTEntry 16 }

          smt73SMTTraceMaxExpiration OBJECT-TYPE
              SYNTAX  FddiTimeMilli
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "Reference Trace_Max (refer to ANSI SMT





          J. D. Case/A. Rijsinghani                            [Page 19]





          Internet Draft             FDDI MIB                 March 1993


                      9.4.4.2.2)."
              REFERENCE
                      "ANSI { fddiSMT 31 }"
              ::= { smt73SMTEntry 17 }

          smt73SMTBypassPresent OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A flag indicating if the station has a bypass on
                      its AB port pair."
              REFERENCE
                      "ANSI { fddiSMT 34 }"
              ::= { smt73SMTEntry 18 }

          smt73SMTECMState OBJECT-TYPE
              SYNTAX  INTEGER {
                          ec0(1), -- Out
                          ec1(2), -- In
                          ec2(3), -- Trace
                          ec3(4), -- Leave
                          ec4(5), -- Path_Test
                          ec5(6), -- Insert
                          ec6(7), -- Check
                          ec7(8)  -- Deinsert
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Indicates the current state of the ECM state
                      machine (refer to ANSI SMT 9.5.2)."
              REFERENCE
                      "ANSI { fddiSMT 41 }"
              ::= { smt73SMTEntry 19 }

          smt73SMTCFState OBJECT-TYPE
              SYNTAX  INTEGER {
                          cf0(1),   -- isolated
                          cf1(2),   -- local_a
                          cf2(3),   -- local_b
                          cf3(4),   -- local_ab
                          cf4(5),   -- local_s
                          cf5(6),   -- wrap_a
                          cf6(7),   -- wrap_b





          J. D. Case/A. Rijsinghani                            [Page 20]





          Internet Draft             FDDI MIB                 March 1993


                          cf7(8),   -- wrap_ab
                          cf8(9),   -- wrap_s
                          cf9(10),  -- c_wrap_a
                          cf10(11), -- c_wrap_b
                          cf11(12), -- c_wrap_s
                          cf12(13)  -- thru
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The attachment configuration for the station or
                      concentrator (refer to ANSI SMT 9.7.2.2)."
              REFERENCE
                      "ANSI { fddiSMT 42 }"
              ::= { smt73SMTEntry 20 }

          smt73SMTRemoteDisconnectFlag OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A flag indicating that the station was remotely
                      disconnected from the network as a result of
                      receiving an fddiSMTAction, disconnect (refer to
                      ANSI SMT 6.4.5.3) in a Parameter Management Frame.
                      A station requires a Connect Action to rejoin and
                      clear the flag (refer to ANSI SMT 6.4.5.2)."
              REFERENCE
                      "ANSI { fddiSMT 44 }"
              ::= { smt73SMTEntry 21 }

          smt73SMTStationStatus OBJECT-TYPE
              SYNTAX  INTEGER { concatenated(1), separated(2), thru(3) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The current status of the primary and secondary
                      paths within this station."
              REFERENCE
                      "ANSI { fddiSMT 45 }"
              ::= { smt73SMTEntry 22 }

          smt73SMTPeerWrapFlag OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }
              ACCESS  read-only





          J. D. Case/A. Rijsinghani                            [Page 21]





          Internet Draft             FDDI MIB                 March 1993


              STATUS  mandatory
              DESCRIPTION
                      "This variable assumes the value of the
                      PeerWrapFlag in CFM (refer to ANSI SMT
                      9.7.2.4.4)."
              REFERENCE
                      "ANSI { fddiSMT 46 }"
              ::= { smt73SMTEntry 23 }

          smt73SMTTimeStamp OBJECT-TYPE
              SYNTAX  FddiTimeMilli
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable assumes the value of TimeStamp
                      (refer to ANSI SMT 8.3.2.1)."
              REFERENCE
                      "ANSI { fddiSMT 51 }"
              ::= { smt73SMTEntry 24 }

          smt73SMTTransitionTimeStamp OBJECT-TYPE
              SYNTAX  FddiTimeMilli
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable assumes the value of
                      TransitionTimeStamp (refer to ANSI SMT 8.3.2.1)."
              REFERENCE
                      "ANSI { fddiSMT 52 }"
              ::= { smt73SMTEntry 25 }

          smt73SMTStationAction OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),               -- none of the following
                          connect(2),
                          disconnect(3),
                          path-Test(4),
                          self-Test(5),
                          disable-a(6),
                          disable-b(7),
                          disable-m(8)
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION





          J. D. Case/A. Rijsinghani                            [Page 22]





          Internet Draft             FDDI MIB                 March 1993


                      "This object, when read, always returns a value of
                      other(1).  The behavior of setting this variable
                      to each of the acceptable values is as follows:

                           other(1): Results in a badValue error.
                           connect(2): Generates a Connect signal to ECM
                                to begin a connection sequence. The
                                fddiSMTRemoteDisconnectFlag is cleared
                                on the setting of this variable to 1.
                                See ANSI Ref 9.4.2.
                           disconnect(3): Generates a Disconnect signal
                                to ECM and sets the
                                fddiSMTRemoteDIsconnectFlag. see ANSI
                                Ref 9.4.2.
                           path-Test(4): Initiates a station Path_Test.
                                The Path_Test variable (see ANSI Ref
                                9.4.1) is set to 'Testing'. The results
                                of this action are not specified in this
                                standard.
                           self-Test(5): Initiates a station Self_Test.
                                The results of this action are not
                                specified in this standard.
                           disable-a(6): Causes a PC_Disable on the A
                                port if the A port mode is peer.
                           disable-b(7): Causes a PC_Disable on the B
                                port if the B port mode is peer.
                           disable-m(8): Causes a PC_Disable on all M
                                ports.

                      Attempts to set this object to all other values
                      results in a badValue error.  The result of
                      setting this variable to path-Test(4) or self-
                      Test(5) is implementation-specific."
              REFERENCE
                      "ANSI { fddiSMT 60 }"
              ::= { smt73SMTEntry 26 }














          J. D. Case/A. Rijsinghani                            [Page 23]





          Internet Draft             FDDI MIB                 March 1993


          -- the MAC group
          -- Implementation of the MAC Group is mandatory for all
          -- systems which implement manageable FDDI subsystems.

          smt73MACNumber OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of MAC implementations (across
                      all SMTs) on this network management application
                      entity.  The value for this variable must remain
                      constant at least from one re-initialization of
                      the entity's network management system to the next
                      re-initialization."
              ::= { smt73MAC  1 }


          -- the MAC table

          smt73MACTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF Smt73MACEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A list of MAC entries.  The number of entries
                      shall not exceed the value of smt73MACNumber."
              ::= { smt73MAC  2 }

          smt73MACEntry OBJECT-TYPE
              SYNTAX  Smt73MACEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A MAC entry containing information common to a
                      given MAC."
              INDEX   { smt73MACSMTIndex, smt73MACIndex }
              ::= { smt73MACTable 1 }

          Smt73MACEntry ::=
              SEQUENCE {
                  smt73MACSMTIndex
                          INTEGER,
                  smt73MACIndex
                          INTEGER,





          J. D. Case/A. Rijsinghani                            [Page 24]





          Internet Draft             FDDI MIB                 March 1993


                  smt73MACIfIndex
                          INTEGER,
                  smt73MACFrameStatusFunctions
                          INTEGER,
                  smt73MACTMaxCapability
                          FddiTimeNano,
                  smt73MACTVXCapability
                          FddiTimeNano,
                  smt73MACAvailablePaths
                          INTEGER,
                  smt73MACCurrentPath
                          INTEGER,
                  smt73MACUpstreamNbr
                          FddiMACLongAddressType,
                  smt73MACDownstreamNbr
                          FddiMACLongAddressType,
                  smt73MACOldUpstreamNbr
                          FddiMACLongAddressType,
                  smt73MACOldDownstreamNbr
                          FddiMACLongAddressType,
                  smt73MACDupAddrTest
                          INTEGER,
                  smt73MACRequestedPaths
                          INTEGER,
                  smt73MACDownstreamPORTType
                          INTEGER,
                  smt73MACSMTAddress
                          FddiMACLongAddressType,
                  smt73MACTReq
                          FddiTimeNano,
                  smt73MACTNeg
                          FddiTimeNano,
                  smt73MACTMax
                          FddiTimeNano,
                  smt73MACTvxValue
                          FddiTimeNano,
                  smt73MACFrameCts
                          Counter,
                  smt73MACCopiedCts
                          Counter,
                  smt73MACTransmitCts
                          Counter,
                  smt73MACErrorCts
                          Counter,
                  smt73MACLostCts





          J. D. Case/A. Rijsinghani                            [Page 25]





          Internet Draft             FDDI MIB                 March 1993


                          Counter,
                  smt73MACFrameErrorThreshold
                          INTEGER,
                  smt73MACFrameErrorRatio
                          INTEGER,
                  smt73MACRMTState
                          INTEGER,
                  smt73MACDaFlag
                          INTEGER,
                  smt73MACUnaDaFlag
                          INTEGER,
                  smt73MACFrameErrorFlag
                          INTEGER,
                  smt73MACMAUnitdataAvailable
                          INTEGER,
                  smt73MACHardwarePresent
                          INTEGER,
                  smt73MACMAUnitdataEnable
                          INTEGER
              }


          smt73MACSMTIndex OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of the SMT index associated with this
                      MAC."
              ::= { smt73MACEntry 1 }

          smt73MACIndex OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Index variable for uniquely identifying the MAC
                      object instances, which is the same as the
                      corresponding resource index in SMT."
              REFERENCE
                      "ANSI { fddiMAC 34 }"
              ::= { smt73MACEntry 2 }

          smt73MACIfIndex OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)





          J. D. Case/A. Rijsinghani                            [Page 26]





          Internet Draft             FDDI MIB                 March 1993


              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of the MIB-II ifIndex corresponding to
                      this MAC.  If none is applicable, 0 is returned."
              REFERENCE
                      "MIB-II"
              ::= { smt73MACEntry 3 }

          smt73MACFrameStatusFunctions OBJECT-TYPE
              SYNTAX  INTEGER (0..7)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Indicates the MAC's optional Frame Status
                      processing functions.

                      The value is a sum.  This value initially takes
                      the value zero, then for each function present, 2
                      raised to a power is added to the sum.  The powers
                      are according to the following table:

                           function   Power
                       fs-repeating     0
                         fs-setting     1
                        fs-clearing     2 "
              REFERENCE
                      "ANSI { fddiMAC 11 }"
              ::= { smt73MACEntry 4 }

          smt73MACTMaxCapability OBJECT-TYPE
              SYNTAX  FddiTimeNano
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Indicates the maximum time value of fddiMACTMax
                      that this MAC can support."
              REFERENCE
                      "ANSI { fddiMAC 13 }"
              ::= { smt73MACEntry 5 }

          smt73MACTVXCapability OBJECT-TYPE
              SYNTAX  FddiTimeNano
              ACCESS  read-only
              STATUS  mandatory





          J. D. Case/A. Rijsinghani                            [Page 27]





          Internet Draft             FDDI MIB                 March 1993


              DESCRIPTION
                      "Indicates the maximum time value of
                      fddiMACTvxValue that this MAC can support."
              REFERENCE
                      "ANSI { fddiMAC 14 }"
              ::= { smt73MACEntry 6 }

          smt73MACAvailablePaths OBJECT-TYPE
              SYNTAX  INTEGER (0..7)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Indicates the paths available for this MAC (refer
                      to ANSI SMT 9.7.7).

                      The value is a sum.  This value initially takes
                      the value zero, then for each type of PATH that
                      this MAC has available, 2 raised to a power is
                      added to the sum.  The powers are according to the
                      following table:

                               Path   Power
                            Primary     0
                          Secondary     1
                              Local     2 "
              REFERENCE
                      "ANSI { fddiMAC 22 }"
              ::= { smt73MACEntry 7 }

          smt73MACCurrentPath OBJECT-TYPE
              SYNTAX  INTEGER {
                          isolated(1),
                          local(2),
                          secondary(3),
                          primary(4),
                          concatenated(5),
                          thru(6)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Indicates the Path into which this MAC is
                      currently inserted (refer to ANSI 9.7.7)."
              REFERENCE
                      "ANSI { fddiMAC 23 }"





          J. D. Case/A. Rijsinghani                            [Page 28]





          Internet Draft             FDDI MIB                 March 1993


              ::= { smt73MACEntry 8 }

          smt73MACUpstreamNbr OBJECT-TYPE
              SYNTAX  FddiMACLongAddressType -- OCTET STRING (SIZE (6))
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The MAC's upstream neighbor's long individual MAC
                      address. It has an initial value of the SMT-
                      Unknown-MAC Address and is only modified as
                      specified by the Neighbor Information Frame
                      protocol (refer to ANSI SMT 7.2.1 and 8.2)."
              REFERENCE
                      "ANSI { fddiMAC 24 }"
              ::= { smt73MACEntry 9 }

          smt73MACDownstreamNbr OBJECT-TYPE
              SYNTAX  FddiMACLongAddressType -- OCTET STRING (SIZE (6))
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The MAC's downstream neighbor's long individual
                      MAC address. It has an initial value of the SMT-
                      Unknown-MAC Address and is only modified as
                      specified by the Neighbor Information Frame
                      protocol (refer to ANSI SMT 7.2.1 and 8.2)."
              REFERENCE
                      "ANSI { fddiMAC 25 }"
              ::= { smt73MACEntry 10 }

          smt73MACOldUpstreamNbr OBJECT-TYPE
              SYNTAX  FddiMACLongAddressType -- OCTET STRING (SIZE (6))
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The previous value of the MAC's upstream
                      neighbor's long individual MAC address. It has an
                      initial value of the SMT-Unknown- MAC Address and
                      is only modified as specified by the Neighbor
                      Information Frame protocol (refer to ANSI SMT
                      7.2.1 and 8.2)."
              REFERENCE
                      "ANSI { fddiMAC 26 }"
              ::= { smt73MACEntry 11 }






          J. D. Case/A. Rijsinghani                            [Page 29]





          Internet Draft             FDDI MIB                 March 1993


          smt73MACOldDownstreamNbr OBJECT-TYPE
              SYNTAX  FddiMACLongAddressType -- OCTET STRING (SIZE (6))
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The previous value of the MAC's downstream
                      neighbor's long individual MAC address. It has an
                      initial value of the SMT- Unknown-MAC Address and
                      is only modified as specified by the Neighbor
                      Information Frame protocol (refer to ANSI SMT
                      7.2.1 and 8.2)."
              REFERENCE
                      "ANSI { fddiMAC 27 }"
              ::= { smt73MACEntry 12 }

          smt73MACDupAddrTest OBJECT-TYPE
              SYNTAX  INTEGER { none(1), pass(2), fail(3) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The Duplicate Address Test flag, Dup_Addr_Test
                      (refer to ANSI 8.2)."
              REFERENCE
                      "ANSI { fddiMAC 29 }"
              ::= { smt73MACEntry 13 }

          smt73MACRequestedPaths OBJECT-TYPE
              SYNTAX  INTEGER  (0..255)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "List of permitted Paths which specifies the
                      Path(s) into which the MAC may be inserted (refer
                      to ansi SMT 9.7).

                      The value is a sum which represents the individual
                      paths that are desired.  This value initially
                      takes the value zero, then for each type of PATH
                      that this node is, 2 raised to a power is added to
                      the sum.  The powers are according to the
                      following table:

                                         Path   Power
                                        local     0
                          secondary-alternate     1





          J. D. Case/A. Rijsinghani                            [Page 30]





          Internet Draft             FDDI MIB                 March 1993


                            primary-alternate     2
                       concatenated-alternate     3
                          secondary-preferred     4
                            primary-preferred     5
                       concatenated-preferred     6
                                         thru     7 "
              REFERENCE
                      "ANSI { fddiMAC 32 }"
              ::= { smt73MACEntry 14 }

          smt73MACDownstreamPORTType OBJECT-TYPE
              SYNTAX  INTEGER { a(1), b(2), s(3), m(4), none(5) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Indicates the PC-Type of the first port that is
                      downstream of this MAC (the exit port)."
              REFERENCE
                      "ANSI { fddiMAC 33 }"
              ::= { smt73MACEntry 15 }

          smt73MACSMTAddress OBJECT-TYPE
              SYNTAX  FddiMACLongAddressType -- OCTET STRING (SIZE (6))
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The 48-bit individual address of the MAC used for
                      SMT frames."
              REFERENCE
                      "ANSI { fddiMAC 41 }"
              ::= { smt73MACEntry 16 }

          smt73MACTReq OBJECT-TYPE
              SYNTAX  FddiTimeNano
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable is the T_Req_value passed to the
                      MAC.  Without having detected a duplicate, the
                      time value of this variable shall assume the
                      maximum supported time value which is less than or
                      equal to the time value of fddiPATHMaxT-Req.  When
                      a MAC has an address detected as a duplicate, it
                      may use a time value for this variable greater
                      than the time value of fddiPATHTMaxLowerBound.  A





          J. D. Case/A. Rijsinghani                            [Page 31]





          Internet Draft             FDDI MIB                 March 1993


                      station shall cause claim when the new T_Req may
                      cause the value of T_Neg to change in the claim
                      process, (i.e., time value new T_Req < T_Neg, or
                      old T_Req = T_Neg)."
              REFERENCE
                      "ANSI { fddiMAC 51 }"
              ::= { smt73MACEntry 17 }

          smt73MACTNeg OBJECT-TYPE
              SYNTAX  FddiTimeNano
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "It is reported as a FddiTimeNano number."
              REFERENCE
                      "ANSI { fddiMAC 52 }"
              ::= { smt73MACEntry 18 }

          smt73MACTMax OBJECT-TYPE
              SYNTAX  FddiTimeNano
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable is the T_Max_value passed to the
                      MAC.  The time value of this variable shall assume
                      the minimum suported time value which is greater
                      than or equal to the time value of fddiPATHT-
                      MaxLowerBound"
              REFERENCE
                      "ANSI { fddiMAC 53 }"
              ::= { smt73MACEntry 19 }

          smt73MACTvxValue OBJECT-TYPE
              SYNTAX  FddiTimeNano
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable is the TVX_value passed to the MAC.
                      The time value of this variable shall assume the
                      minimum suported time value which is greater than
                      or equal to the time value of
                      fddiPATHTVXLowerBound."
              REFERENCE
                      "ANSI { fddiMAC 54 }"
              ::= { smt73MACEntry 20 }





          J. D. Case/A. Rijsinghani                            [Page 32]





          Internet Draft             FDDI MIB                 March 1993


          smt73MACFrameCts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of the number of frames received by this
                      MAC (refer to ANSI MAC 7.5.1)."
              REFERENCE
                      "ANSI { fddiMAC 71 }"
              ::= { smt73MACEntry 21 }

          smt73MACCopiedCts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count that should as closely as possible match
                      the number of frames addressed to (A bit set) and
                      successfully copied into the station's receive
                      buffers (C bit set) by this MAC (refer to ANSI MAC
                      7.5). Note that this count does not include MAC
                      frames."
              REFERENCE
                      "ANSI { fddiMAC 72 }"
              ::= { smt73MACEntry 22 }

          smt73MACTransmitCts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count that should as closely as possible match
                      the number of frames transmitted by this MAC
                      (refer to ANSI MAC 7.5).  Note that this count
                      does not include MAC frames."
              REFERENCE
                      "ANSI { fddiMAC 73 }"
              ::= { smt73MACEntry 23 }

          smt73MACErrorCts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of the number of frames that were





          J. D. Case/A. Rijsinghani                            [Page 33]





          Internet Draft             FDDI MIB                 March 1993


                      detected in error by this MAC that had not been
                      detected in error by another MAC (refer to ANSI
                      MAC 7.5.2)."
              REFERENCE
                      "ANSI { fddiMAC 81 }"
              ::= { smt73MACEntry 24 }

          smt73MACLostCts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count of the number of instances that this MAC
                      detected a format error during frame reception
                      such that the frame was stripped (refer to ANSI
                      MAC 7.5.3)."
              REFERENCE
                      "ANSI { fddiMAC 82 }"
              ::= { smt73MACEntry 25 }

          smt73MACFrameErrorThreshold OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "A threshold for determining when a MAC Condition
                      report (see ANSI 8.3.1.1) shall be generated.
                      Stations not supporting variable thresholds shall
                      have a value of 0 and a range of (0..0)."
              REFERENCE
                      "ANSI { fddiMAC 95 }"
              ::= { smt73MACEntry 26 }

          smt73MACFrameErrorRatio OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable is the value of the ratio,

                       ((delta fddiMACLostCts + delta fddiMACErrorCts) /
                       (delta fddiMACFrameCts + delta fddiMACLostCts ))
                       * 2**16 "
              REFERENCE
                      "ANSI { fddiMAC 96 }"





          J. D. Case/A. Rijsinghani                            [Page 34]





          Internet Draft             FDDI MIB                 March 1993


              ::= { smt73MACEntry 27 }

          smt73MACRMTState OBJECT-TYPE
              SYNTAX  INTEGER {
                          rm0(1), -- Isolated
                          rm1(2), -- Non_Op
                          rm2(3), -- Ring_Op
                          rm3(4), -- Detect
                          rm4(5), -- Non_Op_Dup
                          rm5(6), -- Ring_Op_Dup
                          rm6(7), -- Directed
                          rm7(8)  -- Trace
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Indicates the current state of the RMT State
                      Machine (refer to ANSI 10.3.2)."
              REFERENCE
                      "ANSI { fddiMAC 111 }"
              ::= { smt73MACEntry 28 }

          smt73MACDaFlag OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The RMT flag Duplicate Address Flag, DA_Flag
                      (refer to ANSI 10.2.1.2)."
              REFERENCE
                      "ANSI { fddiMAC 112 }"
              ::= { smt73MACEntry 29 }

          smt73MACUnaDaFlag OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A flag, UNDA_Flag (refer to ANSI 8.2.2.1), set
                      when the upstream neighbor reports a duplicate
                      address condition. Cleared when the condition
                      clears."
              REFERENCE
                      "ANSI { fddiMAC 113 }"
              ::= { smt73MACEntry 30 }





          J. D. Case/A. Rijsinghani                            [Page 35]





          Internet Draft             FDDI MIB                 March 1993


          smt73MACFrameErrorFlag OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Indicates the MAC Frame Error Condition is
                      present when set. Cleared when the condition
                      clears and on station initialization."
              REFERENCE
                      "ANSI { fddiMAC 114 }"
              ::= { smt73MACEntry 31 }

          smt73MACMAUnitdataAvailable OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable shall take on the value of the
                      MAC_Avail flag defined in RMT."
              REFERENCE
                      "ANSI { fddiMAC 116 }"
              ::= { smt73MACEntry 32 }

          smt73MACHardwarePresent OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable indicates the presence of
                      underlying hardware support for this MAC object.
                      If the value of this object is false(2), the
                      reporting of the objects in this entry may be
                      handled in an implementation-specific manner."
              REFERENCE
                      "ANSI { fddiMAC 117 }"
              ::= { smt73MACEntry 33 }

          smt73MACMAUnitdataEnable OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "This attribute determines the value of the
                      MA_UNITDATA_Enable flag in RMT.  The default and
                      initial value of this flag is true(1)."





          J. D. Case/A. Rijsinghani                            [Page 36]





          Internet Draft             FDDI MIB                 March 1993


              REFERENCE
                      "ANSI { fddiMAC 118 }"
              ::= { smt73MACEntry 34 }















































          J. D. Case/A. Rijsinghani                            [Page 37]





          Internet Draft             FDDI MIB                 March 1993


          -- the Enhanced MAC Counters group
          -- Implementation of the this Group is optional


          -- the MAC Counters table

          smt73MACCountersTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF Smt73MACCountersEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A list of MAC Counters entries.  The number of
                      entries shall not exceed the value of
                      smt73MACNumber."
              ::= { smt73MACCounters  1 }

          smt73MACCountersEntry OBJECT-TYPE
              SYNTAX  Smt73MACCountersEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A MAC Counters entry containing information
                      common to a given MAC."
              INDEX   { smt73MACSMTIndex, smt73MACIndex }
              ::= { smt73MACCountersTable 1 }

          Smt73MACCountersEntry ::=
              SEQUENCE {
                  smt73MACTokenCts
                          Counter,
                  smt73MACTvxExpiredCts
                          Counter,
                  smt73MACNotCopiedCts
                          Counter,
                  smt73MACLateCts
                          Counter,
                  smt73MACRingOpCts
                          Counter,
                  smt73MACNotCopiedRatio
                          INTEGER,
                  smt73MACNotCopiedFlag
                          INTEGER,
                  smt73MACNotCopiedThreshold
                          INTEGER
              }





          J. D. Case/A. Rijsinghani                            [Page 38]





          Internet Draft             FDDI MIB                 March 1993


          smt73MACTokenCts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count that should as closely as possible match
                      the number of times the station has received a
                      token (total of non- restricted and restricted) on
                      this MAC (see ANSI MAC 7.4). This count is
                      valuable for determination of network load."
              REFERENCE
                      "ANSI { fddiMAC 74 }"
              ::= { smt73MACCountersEntry 1 }

          smt73MACTvxExpiredCts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count that should as closely as possible match
                      the number of times that TVX has expired."
              REFERENCE
                      "ANSI { fddiMAC 83 }"
              ::= { smt73MACCountersEntry 2 }

          smt73MACNotCopiedCts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count that should as closely as possible match
                      the number of frames that were addressed to this
                      MAC but were not copied into its receive buffers
                      (see ANSI MAC 7.5). For example, this might occur
                      due to local buffer congestion. Because of
                      implementation considerations, this count may not
                      match the actual number of frames not copied. It
                      is not a requirement that this count be exact.
                      Note that this count does not include MAC frames."
              REFERENCE
                      "ANSI { fddiMAC 84 }"
              ::= { smt73MACCountersEntry 3 }

          smt73MACLateCts OBJECT-TYPE
              SYNTAX  Counter





          J. D. Case/A. Rijsinghani                            [Page 39]





          Internet Draft             FDDI MIB                 March 1993


              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A count that should as closely as possible match
                      the number of TRT expirations since this MAC was
                      reset or a token was received (refer to ANSI MAC
                      7.4.5)."
              REFERENCE
                      "ANSI { fddiMAC 85 }"
              ::= { smt73MACCountersEntry 4 }

          smt73MACRingOpCts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                       "The count of the number of times the ring has
                      entered the 'Ring_Operational' state from the
                      'Ring Not Operational' state.  This count is
                      updated when a SM_MA_STATUS.Indication of a change
                      in the Ring_Operational status occurs (refer to
                      ANSI 6.1.4). Because of implementation
                      considerations, this count may be less than the
                      actual RingOp_Ct. It is not a requirement that
                      this count be exact."
              REFERENCE
                      "ANSI { fddiMAC 86 }"
              ::= { smt73MACCountersEntry 5 }

          smt73MACNotCopiedRatio OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable is the value of the ratio:

                       (delta fddiMACNotCopiedCts /
                       (delta fddiMACCopiedCts +
                         delta fddiMACNotCopiedCts )) * 2**16 "
              REFERENCE
                      "ANSI { fddiMAC 105 }"
              ::= { smt73MACCountersEntry 6 }

          smt73MACNotCopiedFlag OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }





          J. D. Case/A. Rijsinghani                            [Page 40]





          Internet Draft             FDDI MIB                 March 1993


              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Indicates that the Not Copied condition is
                      present when read as true(1).  Set to false(2)
                      when the condition clears and on station
                      initialization."
              REFERENCE
                      "ANSI { fddiMAC 115 }"
              ::= { smt73MACCountersEntry 7 }

          smt73MACNotCopiedThreshold OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "A threshold for determining when a MAC condition
                      report shall be generated.  Stations not
                      supporting variable thresholds shall have a value
                      of 0 and a range of (0..0)."
              REFERENCE
                      "ANSI { fddiMAC 103 }"
              ::= { smt73MACCountersEntry 8 }



























          J. D. Case/A. Rijsinghani                            [Page 41]





          Internet Draft             FDDI MIB                 March 1993


          -- the PATH group
          -- Implementation of the PATH group is mandatory for all
          -- systems which implement manageable FDDI subsystems.

          smt73PATHNumber OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of PATHs possible (across all
                      SMTs) on this network management application
                      entity.  The value for this variable must remain
                      constant at least from one re-initialization of
                      the entity's network management system to the next
                      re-initialization."
              ::= { smt73PATH  1 }


          -- the PATH table

          smt73PATHTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF Smt73PATHEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A list of PATH entries.  The number of entries
                      shall not exceed the value of smt73PATHNumber."
              ::= { smt73PATH  2 }

          smt73PATHEntry OBJECT-TYPE
              SYNTAX  Smt73PATHEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A PATH entry containing information common to a
                      given PATH."
              INDEX   { smt73PATHSMTIndex, smt73PATHIndex }
              ::= { smt73PATHTable 1 }

          Smt73PATHEntry ::=
              SEQUENCE {
                  smt73PATHSMTIndex
                          INTEGER,
                  smt73PATHIndex
                          INTEGER,





          J. D. Case/A. Rijsinghani                            [Page 42]





          Internet Draft             FDDI MIB                 March 1993


                  smt73PATHTVXLowerBound
                          FddiTimeNano,
                  smt73PATHTMaxLowerBound
                          FddiTimeNano,
                  smt73PATHMaxTReq
                          FddiTimeNano
              }

          smt73PATHSMTIndex OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of the SMT index associated with this
                      PATH."
              ::= { smt73PATHEntry 1 }


          smt73PATHIndex OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Index variable for uniquely identifying the
                      primary, secondary and local PATH object
                      instances. Local PATH object instances are
                      represented with integer values 3 to 255."
              REFERENCE
                      "ANSI { fddiPATH 11 }"
              ::= { smt73PATHEntry 2 }

          smt73PATHTVXLowerBound OBJECT-TYPE
              SYNTAX  FddiTimeNano
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "Specifies the minimum time value of
                      fddiMACTvxValue that shall be used by any MAC that
                      is configured in this path. The operational value
                      of fddiMACTvxValue is managed by settting this
                      variable.  This variable has the time value range
                      of:

                      0 < smt73PATHTVXLowerBound < smt73PATHMaxTReq






          J. D. Case/A. Rijsinghani                            [Page 43]





          Internet Draft             FDDI MIB                 March 1993


                      Changes to this variable shall either satisfy the
                      time value relationship:

                      smt73PATHTVXLowerBound <= smt73MACTVXCapability

                      of each of the MACs currently on the path, or be
                      considered out of range.  The initial value of
                      smt73PATHTVXLowerBound shall be 2.500 msec."
              REFERENCE
                      "ANSI { fddiPATH 21 }"
              ::= { smt73PATHEntry 3 }

          smt73PATHTMaxLowerBound OBJECT-TYPE
              SYNTAX  FddiTimeNano
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "Specifies the minimum time value of fddiMACTMax
                      that shall be used by any MAC that is configured
                      in this path.  The operational value of
                      fddiMACTMax is managed by setting this variable.
                      This variable has the time value range of:

                      smt73PATHMaxTReq <= smt73PATHTMaxLowerBound

                      and an absolute time value range of:

                      10 msec <= smt73PATHTMaxLowerBound

                      Changes to this variable shall either satisfy the
                      time value relationship:

                      smt73PATHTMaxLowerBound < smt73MACTMaxCapability

                      of each of the MACs currently on the path, or be
                      considered out of range.  The initial value of
                      smt73PATHTMaxLowerBound shall be 165 msec."
              REFERENCE
                      "ANSI { fddiPATH 22 }"
              ::= { smt73PATHEntry 4 }

          smt73PATHMaxTReq OBJECT-TYPE
              SYNTAX  FddiTimeNano
              ACCESS  read-write
              STATUS  mandatory





          J. D. Case/A. Rijsinghani                            [Page 44]





          Internet Draft             FDDI MIB                 March 1993


              DESCRIPTION
                      "Specifies the maximum time value of fddiMACT-Req
                      that shall be used by any MAC that is configured
                      in this path.  The operational value of fddiMACT-
                      Req is managed by setting this variable.  This
                      variable has the time value range of:

                      smt73PATHTVXLowerBound < smt73PATHMaxTReq <=
                                               smt73PATHTMaxLowerBound.

                      The default value of smt73PATHMaxTReq is 165
                      msec."
              REFERENCE
                      "ANSI { fddiPATH 23 }"
              ::= { smt73PATHEntry 5 }


          -- the PATH Configuration table

          smt73PATHConfigTable OBJECT-TYPE
              SYNTAX SEQUENCE OF Smt73PATHConfigEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                      "A table of Path configuration entries.  This
                      table lists all the resources that may be in this
                      Path."
              REFERENCE
                      "ANSI { fddiPATH 18 }"
              ::= { smt73PATH 3 }

          smt73PATHConfigEntry OBJECT-TYPE
              SYNTAX Smt73PATHConfigEntry
              ACCESS not-accessible
              STATUS mandatory
              DESCRIPTION
                      "A collection of objects containing information
                      for a given PATH Configuration entry."
              INDEX { smt73PATHConfigSMTIndex, smt73PATHConfigPATHIndex,
                      smt73PATHConfigTokenOrder }
              ::= { smt73PATHConfigTable 1 }

          Smt73PATHConfigEntry ::=
              SEQUENCE {
                  smt73PATHConfigSMTIndex





          J. D. Case/A. Rijsinghani                            [Page 45]





          Internet Draft             FDDI MIB                 March 1993


                      INTEGER,
                  smt73PATHConfigPATHIndex
                      INTEGER,
                  smt73PATHConfigTokenOrder
                      INTEGER,
                  smt73PATHConfigResourceType
                      INTEGER,
                  smt73PATHConfigResourceIndex
                      INTEGER,
                  smt73PATHConfigCurrentPath
                      INTEGER
              }

          smt73PATHConfigSMTIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                      "The value of the SMT index associated with this
                      configuration entry."
              ::= { smt73PATHConfigEntry 1 }

          smt73PATHConfigPATHIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                      "The value of the PATH resource index associated
                      with this configuration entry."
              ::= { smt73PATHConfigEntry 2 }

          smt73PATHConfigTokenOrder OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                      "An object associated with Token order for this
                      entry.  Thus if the token passes resources a, b, c
                      and d, in that order, then the value of this
                      object for these resources would be 1, 2, 3 and 4
                      respectively."
              ::= { smt73PATHConfigEntry 3 }

          smt73PATHConfigResourceType OBJECT-TYPE
              SYNTAX INTEGER { mac(2), port(4) }





          J. D. Case/A. Rijsinghani                            [Page 46]





          Internet Draft             FDDI MIB                 March 1993


              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                      "The type of resource associated with this
                      configuration entry."
              ::= { smt73PATHConfigEntry 4 }

          smt73PATHConfigResourceIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                      "The value of the SMT resource index used to refer
                      to the instance of this MAC or Port resource."
              ::= { smt73PATHConfigEntry 5 }

          smt73PATHConfigCurrentPath OBJECT-TYPE
              SYNTAX INTEGER {
                       isolated(1), local(2), secondary(3), primary(4),
                       concatenated(5), thru(6)
                     }
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                      "The current insertion status for this resource on
                      this Path."
              ::= { smt73PATHConfigEntry 6 }























          J. D. Case/A. Rijsinghani                            [Page 47]





          Internet Draft             FDDI MIB                 March 1993


          -- the PORT group
          -- Implementation of the PORT group is mandatory for all
          -- systems which implement manageable FDDI subsystems.

          smt73PORTNumber OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of PORT implementations (across
                      all SMTs) on this network management application
                      entity.  The value for this variable must remain
                      constant at least from one re-initialization of
                      the entity's network management system to the next
                      re-initialization."
              ::= { smt73PORT  1 }


          -- the PORT table

          smt73PORTTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF Smt73PORTEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A list of PORT entries.  The number of entries
                      shall not exceed the value of smt73PORTNumber."
              ::= { smt73PORT  2 }

          smt73PORTEntry OBJECT-TYPE
              SYNTAX  Smt73PORTEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A PORT entry containing information common to a
                      given PORT."
              INDEX   { smt73PORTSMTIndex, smt73PORTIndex }
              ::= { smt73PORTTable 1 }

          Smt73PORTEntry ::=
              SEQUENCE {
                  smt73PORTSMTIndex
                          INTEGER,
                  smt73PORTIndex
                          INTEGER,





          J. D. Case/A. Rijsinghani                            [Page 48]





          Internet Draft             FDDI MIB                 March 1993


                  smt73PORTMyType
                          INTEGER,
                  smt73PORTNeighborType
                          INTEGER,
                  smt73PORTConnectionPolicies
                          INTEGER,
                  smt73PORTMACIndicated
                          INTEGER,
                  smt73PORTCurrentPath
                          INTEGER,
                  smt73PORTRequestedPaths
                          OCTET STRING,
                  smt73PORTMACPlacement
                          FddiResourceId,
                  smt73PORTAvailablePaths
                          INTEGER,
                  smt73PORTPMDClass
                          INTEGER,
                  smt73PORTConnectionCapabilities
                          INTEGER,
                  smt73PORTBSFlag
                          INTEGER,
                  smt73PORTLCTFailCts
                          Counter,
                  smt73PORTLerEstimate
                          INTEGER,
                  smt73PORTLemRejectCts
                          Counter,
                  smt73PORTLemCts
                          Counter,
                  smt73PORTLerCutoff
                          INTEGER,
                  smt73PORTLerAlarm
                          INTEGER,
                  smt73PORTConnectState
                          INTEGER,
                  smt73PORTPCMState
                          INTEGER,
                  smt73PORTPCWithhold
                          INTEGER,
                  smt73PORTLerFlag
                          INTEGER,
                  smt73PORTHardwarePresent
                          INTEGER,
                  smt73PORTAction





          J. D. Case/A. Rijsinghani                            [Page 49]





          Internet Draft             FDDI MIB                 March 1993


                          INTEGER
              }

          smt73PORTSMTIndex OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of the SMT index associated with this
                      PORT."
              ::= { smt73PORTEntry 1 }

          smt73PORTIndex OBJECT-TYPE
              SYNTAX  INTEGER (1..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A unique value for each PORT within a given SMT,
                      which is the same as the corresponding resource
                      index in SMT.  The value for each PORT must remain
                      constant at least from one re-initialization of
                      the entity's network management system to the next
                      re-initialization."
              REFERENCE
                      "ANSI { fddiPORT 29 }"
              ::= { smt73PORTEntry 2 }

          smt73PORTMyType OBJECT-TYPE
              SYNTAX  INTEGER { a(1), b(2), s(3), m(4), none(5) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of the PORT's PC_Type (refer to ANSI
                      9.4.1, and 9.6.3.2)."
              REFERENCE
                      "ANSI { fddiPORT 12 }"
              ::= { smt73PORTEntry 3 }

          smt73PORTNeighborType OBJECT-TYPE
              SYNTAX  INTEGER { a(1), b(2), s(3), m(4), none(5) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The type of the remote PORT as determined in PCM.
                      This variable has an initial value of none, and is





          J. D. Case/A. Rijsinghani                            [Page 50]





          Internet Draft             FDDI MIB                 March 1993


                      only modified in PC_RCode(3)_Actions (refer to
                      ANSI SMT 9.6.3.2)."
              REFERENCE
                      "ANSI { fddiPORT 13 }"
              ::= { smt73PORTEntry 4 }

          smt73PORTConnectionPolicies OBJECT-TYPE
              SYNTAX  INTEGER (0..3)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "A value representing the PORT's connection
                      policies desired in the node. The value of pc-
                      mac-lct is a term used in the PC_MAC_LCT Flag (see
                      9.4.3.2).  The value of pc-mac-loop is a term used
                      in the PC_MAC_Loop Flag.

                      The value is a sum.  This value initially takes
                      the value zero, then for each PORT policy, 2
                      raised to a power is added to the sum.  The powers
                      are according to the following table:

                                    Policy   Power
                                pc-mac-lct     0
                               pc-mac-loop     1 "
              REFERENCE
                      "ANSI { fddiPORT 14 }"
              ::= { smt73PORTEntry 5 }

          smt73PORTMACIndicated OBJECT-TYPE
              SYNTAX  INTEGER {
                          tVal9FalseRVal9False(1),
                          tVal9FalseRVal9True(2),
                          tVal9TrueRVal9False(3),
                          tVal9TrueRVal9True(4)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The indications (T_Val(9), R_Val(9)) in PC-
                      Signalling, of the intent to place a MAC in the
                      output token path to a PORT (refer to ANSI SMT
                      9.6.3.2.)."
              REFERENCE
                      "ANSI { fddiPORT 15 }"





          J. D. Case/A. Rijsinghani                            [Page 51]





          Internet Draft             FDDI MIB                 March 1993


              ::= { smt73PORTEntry 6 }

          smt73PORTCurrentPath OBJECT-TYPE
              SYNTAX  INTEGER {
                          ce0(1), -- isolated
                          ce1(2), -- local
                          ce2(3), -- secondary
                          ce3(4), -- primary
                          ce4(5), -- concatenated
                          ce5(6)  -- thru
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Indicates the Path(s) into which this PORT is
                      currently inserted."
              REFERENCE
                      "ANSI { fddiPORT 16 }"
              ::= { smt73PORTEntry 7 }

          smt73PORTRequestedPaths OBJECT-TYPE
              SYNTAX  OCTET STRING (SIZE (3))
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "This variable is a list of permitted Paths where
                      each list element defines the Port's permitted
                      Paths.  The first octet corresponds to 'none', the
                      second octet to 'tree', and the third octet to
                      'peer'."
              REFERENCE
                      "ANSI { fddiPORT 17 }"
              ::= { smt73PORTEntry 8 }

          smt73PORTMACPlacement OBJECT-TYPE
              SYNTAX  FddiResourceId -- INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Indicates the MAC, if any, whose transmit path
                      exits the station via this PORT. The value shall
                      be zero if there is no MAC associated with the
                      PORT. Otherwise, the MACIndex of the MAC will be
                      the value of the variable."
              REFERENCE





          J. D. Case/A. Rijsinghani                            [Page 52]





          Internet Draft             FDDI MIB                 March 1993


                      "ANSI { fddiPORT 18 }"
              ::= { smt73PORTEntry 9 }

          smt73PORTAvailablePaths OBJECT-TYPE
              SYNTAX  INTEGER (0..7)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "Indicates the Paths which are available to this
                      Port. In the absence of faults, the A and B Ports
                      will always have both the Primary and Secondary
                      Paths available.

                      The value is a sum.  This value initially takes
                      the value zero, then for each type of PATH that
                      this port has available, 2 raised to a power is
                      added to the sum.  The powers are according to the
                      following table:

                               Path   Power
                            Primary     0
                          Secondary     1
                              Local     2 "
              REFERENCE
                      "ANSI { fddiPORT 19 }"
              ::= { smt73PORTEntry 10 }

          smt73PORTPMDClass OBJECT-TYPE
              SYNTAX  INTEGER {
                              multimode(1),
                              single-mode1(2),
                              single-mode2(3),
                              sonet(4),
                              low-cost-fiber(5),
                              twisted-pair(6),
                              unknown(7),
                              unspecified(8)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable indicates the type of PMD entity
                      associated with this port."
              REFERENCE
                      "ANSI { fddiPORT 22 }"





          J. D. Case/A. Rijsinghani                            [Page 53]





          Internet Draft             FDDI MIB                 March 1993


              ::= { smt73PORTEntry 11 }

          smt73PORTConnectionCapabilities OBJECT-TYPE
              SYNTAX  INTEGER (0..3)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A value that indicates the connection
                      capabilities of the port. The pc-mac-lct bit
                      indicates that the station has the capability of
                      setting the PC_MAC_LCT Flag. The pc-mac-loop bit
                      indicates that the station has the capability of
                      setting the PC_MAC_Loop Flag (refer to ANSI
                      9.4.3.2).

                      The value is a sum.  This value initially takes
                      the value zero, then for each capability that this
                      port has, 2 raised to a power is added to the sum.
                      The powers are according to the following table:

                         capability   Power
                         pc-mac-lct     0
                        pc-mac-loop     1 "
              REFERENCE
                      "ANSI { fddiPORT 23 }"
              ::= { smt73PORTEntry 12 }

          smt73PORTBSFlag OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable assumes the value of the BS_Flag
                      (refer to ANSI SMT 9.4.3.3)."
              REFERENCE
                      "ANSI { fddiPORT 33 }"
              ::= { smt73PORTEntry 13 }

          smt73PORTLCTFailCts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The count of the consecutive times the link
                      confidence test (LCT) has failed during connection





          J. D. Case/A. Rijsinghani                            [Page 54]





          Internet Draft             FDDI MIB                 March 1993


                      management (refer to ANSI 9.4.1)."
              REFERENCE
                      "ANSI { fddiPORT 42 }"
              ::= { smt73PORTEntry 14 }

          smt73PORTLerEstimate OBJECT-TYPE
              SYNTAX  INTEGER (4..15)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A long term average link error rate. It ranges
                      from 10**-4 to 10**-15 and is reported as the
                      absolute value of the base 10 logarithm (refer to
                      ANSI SMT 9.4.7.5.)."
              REFERENCE
                      "ANSI { fddiPORT 51 }"
              ::= { smt73PORTEntry 15 }

          smt73PORTLemRejectCts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A link error monitoring count of the times that a
                      link has been rejected."
              REFERENCE
                      "ANSI { fddiPORT 52 }"
              ::= { smt73PORTEntry 16 }

          smt73PORTLemCts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The aggregate link error monitor error count, set
                      to zero only on station initialization."
              REFERENCE
                      "ANSI { fddiPORT 53 }"
              ::= { smt73PORTEntry 17 }

          smt73PORTLerCutoff OBJECT-TYPE
              SYNTAX  INTEGER (4..15)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION





          J. D. Case/A. Rijsinghani                            [Page 55]





          Internet Draft             FDDI MIB                 March 1993


                       "The link error rate estimate at which a link
                      connection will be broken. It ranges from 10**-4
                      to 10**-15 and is reported as the absolute value
                      of the base 10 logarithm (default of 7)."
              REFERENCE
                      "ANSI { fddiPORT 58 }"
              ::= { smt73PORTEntry 18 }

          smt73PORTLerAlarm OBJECT-TYPE
              SYNTAX  INTEGER (4..15)
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The link error rate estimate at which a link
                      connection will generate an alarm. It ranges from
                      10**-4 to 10**-15 and is reported as the absolute
                      value of the base 10 logarithm of the estimate
                      (default of 8)."
              REFERENCE
                      "ANSI { fddiPORT 59 }"
              ::= { smt73PORTEntry 19 }

          smt73PORTConnectState OBJECT-TYPE
              SYNTAX  INTEGER {
                          disabled(1),
                          connecting(2),
                          standby(3),
                          active(4)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "An indication of the connect state of this PORT
                      and is equal to the value of Connect_State (refer
                      to ANSI 9.4.1)"
              REFERENCE
                      "ANSI { fddiPORT 61 }"
              ::= { smt73PORTEntry 20 }

          smt73PORTPCMState OBJECT-TYPE
              SYNTAX  INTEGER {
                          pc0(1), -- Off
                          pc1(2), -- Break
                          pc2(3), -- Trace
                          pc3(4), -- Connect





          J. D. Case/A. Rijsinghani                            [Page 56]





          Internet Draft             FDDI MIB                 March 1993


                          pc4(5), -- Next
                          pc5(6), -- Signal
                          pc6(7), -- Join
                          pc7(8), -- Verify
                          pc8(9), -- Active
                          pc9(10) -- Maint
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The state of this Port's PCM state machine refer
                      to ANSI SMT 9.6.2)."
              REFERENCE
                      "ANSI { fddiPORT 62 }"
              ::= { smt73PORTEntry 21 }

          smt73PORTPCWithhold OBJECT-TYPE
              SYNTAX  INTEGER {
                           none(1),
                           m-m(2),
                           otherincompatible(3),
                           pathnotavailable(4)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of PC_Withhold (refer to ANSI SMT
                      9.4.1)."
              REFERENCE
                      "ANSI { fddiPORT 63 }"
              ::= { smt73PORTEntry 22 }

          smt73PORTLerFlag OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The condition becomes active when the value of
                      fddiPORTLerEstimate is less than or equal to
                      fddiPORTLerAlarm. This will be reported with the
                      Status Report Frames (SRF) (refer to ANSI SMT
                       7.2.7 and 8.3)."
              REFERENCE
                      "ANSI { fddiPORT 64 }"
              ::= { smt73PORTEntry 23 }





          J. D. Case/A. Rijsinghani                            [Page 57]





          Internet Draft             FDDI MIB                 March 1993


          smt73PORTHardwarePresent OBJECT-TYPE
              SYNTAX  INTEGER { true(1), false(2) }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "This variable indicates the presence of
                      underlying hardware support for this Port object.
                      If the value of this object is false(2), the
                      reporting of the objects in this entry may be
                      handled in an implementation-specific manner."
              REFERENCE
                      "ANSI { fddiPORT 65 }"
              ::= { smt73PORTEntry 24 }

          smt73PORTAction OBJECT-TYPE
              SYNTAX  INTEGER {
                      other(1),           -- none of the following
                      maintPORT(2),
                      enablePORT(3),
                      disablePORT(4),
                      startPORT(5),
                      stopPORT(6)
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "Causes a Control signal to be generated with a
                      control_action of 'Signal' and the 'variable'
                      parameter set with the appropriate value (i.e.,
                      PC_Maint, PC_Enable, PC_Disable, PC_Start, or
                      PC_Stop) (refer to ANSI 9.4.2)."
              REFERENCE
                      "ANSI { fddiPORT 70 }"
              ::= { smt73PORTEntry 25 }
















          J. D. Case/A. Rijsinghani                            [Page 58]





          Internet Draft             FDDI MIB                 March 1993


          END

















































          J. D. Case/A. Rijsinghani                            [Page 59]





          Internet Draft             FDDI MIB                 March 1993


          8.  Acknowledgements

          This document was produced by the IETF FDDI MIB working group:





               Steve Adams, Digital Equipment Corporation
               Hossein Alaee, 3Com Corporation
               Haggar Alsaleh, Bell Northern Research
               William Anderson, Mitre Corporation
               Alan Apt, Addison-Wesley
               Mary Artibee, Silicon Graphics
               Karen Auerbach, Epilogue Technologies
               Doug Bagnall, Apollo/Hewlett Packard
               Chet Birger, Coral Network Corporation
               Pablo Brenner, Fibronics
               Howard Brown, Cabletron
               Jack Brown, US Army Computer Engineering Center
               Eric Brunner
               Jeff Case, The University of Tennessee
               Tammy Chan, Fibercom
               Asheem Chandna, AT&T
               Cho Y. Chang, Apollo/Hewlett Packard
               Chris Chiotasso, Fibronics
               Paul Ciarfella, Digital Equipment Corporation
               John Cook, Chipcom
               Don Coolidge, Silicon Graphics
               Burt Cyr, Unisys
               James R. Davin, Massachusetts Institute of Technology
               Nabil Damouny
               Nadya El-Afandi, Network Systems Corporation
               Hunaid Engineer, Cray Research
               Jeff Fitzgerald, Fibercom
               Richard Fox, Synoptics
               Stan Froyd, ACC
               Debbie Futcher, U.S. Naval Surface Warfare Center
               Joseph Golio, Cray Research
               Jeremy Greene, Coral
               Brian D. Handspicker, Digital Equipment Corporation
               Peter Hayden, Digital Equipment Corporation
               Scott Hiles, U.S. Naval Surface Warfare Center
               Greg Jones, Data General
               Satish Joshi, SynOptics Communications





          J. D. Case/A. Rijsinghani                            [Page 60]





          Internet Draft             FDDI MIB                 March 1993


               Jayant Kadambi, AT&T Bell Labs
               Joanna Karwowska, Data General
               Frank Kastenholz, Interlan
               Jim Kinder, Fibercom
               Christopher Kolb, PSI
               Cheryl Krupczak, NCR
               Peter Lin, Vitalink
               Then Liu
               John R. LoVerso, Concurrent Computer Corporation
               Ron Mackey, Distributed Systems International, Inc.
               Gary Malkin, Proteon
               Bruce McClure, Synernetics
               Keith McCloghrie, Hughes Lan Systems
               Donna McMaster, SynOptics
               John O'Hara, Massachusetts Institute of Technology
               Dave Perkins, SynOptics Communications
               James E. Reeves, SynOptics Communications
               Jim Reinstedler, Ungermann-Bass
               Radhi Renous, Fibronics
               Anil Rijsinghani, Digital Equipment Corporation
               Bob Rolla, Synernetics
               Nelson Ronkin, Synernetics
               Marshall T. Rose, Performance Systems International, Inc.
               Milt Roselinsky, CMC
               Jon Saperia, Digital Equipment Corporation
               Greg Satz, cisco Systems
               Steven Senum, Network Systems Corporation
               Jim Sheridan, IBM Corporation
               Jeffrey Schiller, MIT
               Dror Shindelman, Fibronics
               Mark Sleeper, Sparta
               Craig Smelser, Digital Equipment Corporation
               Lou Steinberg, IBM Corporation
               Mary Jane Strohl, Apollo/Hewlett Packard
               Sally Tarquinio, Mitre Corporation
               Kaj Tesink, Bellcore
               Ian Thomas, Chipcom
               Dean Throop, Data General
               Bill Townsend, Xylogics
               Ahmet H. Tuncay, SynOptics Communications
               Mike Turico, Motorola
               Chris VandenBerg, ACC
               Sudhanshu Verma, Hewlett Packard
               Joe Vermeulen, UNISYS
               David Waiteman, BBN





          J. D. Case/A. Rijsinghani                            [Page 61]





          Internet Draft             FDDI MIB                 March 1993


               Bert Williams, Synernetics
               Mark Wood, Distributed Systems International, Inc.
               Y. C. Yang
               Denis Yaro, Sun Microsystems
               Jeff Young, Cray Research

          The author gratefully acknowledges the labors of Judi Talley
          and David Reid of SNMP Research, Inc. for their editorial
          assistance in the preparation of this document.

          9.  References

          [1]  M.T. Rose and K. McCloghrie, Structure and Identification
               of Management Information for TCP/IP-based internets,
               Internet Working Group Request for Comments 1155.
               Network Information Center, SRI International, Menlo
               Park, California, (May, 1990).

          [2]  K. McCloghrie and M.T. Rose, Management Information Base
               for Network Management of TCP/IP-based internets,
               Internet Working Group Request for Comments 1156.
               Network Information Center, SRI International, Menlo
               Park, California, (May, 1990).

          [3]  J.D. Case, M.S. Fedor, M.L. Schoffstall, and J.R. Davin,
               Simple Network Management Protocol, Internet Working
               Group Request for Comments 1157.  Network Information
               Center, SRI International, Menlo Park, California, (May,
               1990).

          [4]  M.T. Rose (editor), Management Information Base for
               Network Management of TCP/IP-based internets, Internet
               Working Group Request for Comments 1213.  Network
               Information Center, SRI International, Menlo Park,
               California, (March, 1991).

          [5]  Information processing systems - Open Systems
               Interconnection - Specification of Abstract Syntax
               Notation One (ASN.1), International Organization for
               Standardization.  International Standard 8824, (December,
               1987).

          [6]  Information processing systems - Open Systems
               Interconnection - Specification of Basic Encoding Rules
               for Abstract Notation One (ASN.1), International





          J. D. Case/A. Rijsinghani                            [Page 62]





          Internet Draft             FDDI MIB                 March 1993


               Organization for Standardization.  International Standard
               8825, (December, 1987).

          [7]  M.T. Rose, K. McCloghrie (editors), Concise MIB
               Definitions, Internet Working Group Request for Comments
               1212.  Network Information Center, SRI International,
               Menlo Park, California, (March, 1991).

          [9]  American National Standards Institute, FDDI Station
               Management (SMT), Draft Proposed American National
               Standard, American National Standards Institute,
               X3T9.5/84-49 REV 7.3.






































          J. D. Case/A. Rijsinghani                            [Page 63]





          Internet Draft             FDDI MIB                 March 1993


          Table of Contents


          1 Status of this Memo ...................................    1
          2 Abstract ..............................................    2
          3 Historical Perspective ................................    3
          4 Objects ...............................................    5
          4.1 Format of Definitions ...............................    5
          5 Overview ..............................................    6
          5.1 Textual Conventions .................................    7
          6 Changes from RFC-1285 .................................    7
          7 Object Definitions ....................................    8
          6.1 The SMT Group .......................................   12
          6.2 The MAC Group .......................................   24
          6.3 The PATH Group ......................................   42
          6.4 The PORT Group ......................................   48
          8 Acknowledgements ......................................   60
          9 References ............................................   62
































          J. D. Case/A. Rijsinghani                            [Page 64]

