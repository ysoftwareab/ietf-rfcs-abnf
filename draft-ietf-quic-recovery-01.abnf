handshake_count = 0;
tlp_count = 0;
rto_count = 0;
reordering_threshold = kReorderingThreshold;
use_time_loss = false;
smoothed_rtt = 0;
rttvar = 0;

alarm_duration = max(1.5 * smoothed_rtt, kMinTLPTimeout) << handshake_count;
alarm_duration = 0.25 x smoothed_rtt;
alarm_duration = max(1.5 x smoothed_rtt + kDelayedAckTimeout,
                             2 x smoothed_rtt);
alarm_duration = max (kMinTLPTimeout, 2 x smoothed_rtt);
alarm_duration = max(kMinRTOTimeout, smoothed_rtt + 4 x rttvar);
alarm_duration = loss_detection_alarm.get_delay() << 1;
rtt_sample = now - sent_packets[ack.largest_acked]
smoothed_rtt = rtt_sample
rttvar = rtt_sample / 2
rttvar = 3/4 * rttvar + 1/4 * (smoothed_rtt - rtt_sample)
smoothed_rtt = 7/8 * smoothed_rtt + 1/8 * rtt_sample

handshake_count = 0;
tlp_count = 0;
rto_count = 0;
lost_packets = DetectLostPackets(acked_packet);
lost_packets = {};
