real              =  zero
real              =/ negative-infinity
real              =/ negative-zero
real              =/ positive-zero
real              =/ positive-infinity
real              =/ signaling-nan
real              =/ quiet-nan
real              =/ realnumber

negative-infinity =  %x2D.49.6E.66.69,6E.69.74.79   ; "-Infinity"
negative-zero     =  %x2D.5A.65.72.6F               ; "-Zero"
zero              =  %x30.2E.30                     ; "0.0"
positive-zero     =  %x2B.5A.65.72.6F               ; "+Zero"
positive-infinity =  %x2B.49.6E.66.69,6E.69.74.79   ; "+Infinity"
signaling-nan       =  %4E.61.4E.53                   ; "NaNS"
quiet-nan         =  %4E.61.4E.51                   ; "NaNQ"

realnumber        =  mantissa exponent

mantissa          =  ( positive-number [ "." *decimal-digit ])
mantissa          =/ ( "0." *("0") positive-number )

exponent          =  "E" ( "0" / ( [ "-" ] positive-number ) )

positive-number   =  non-zero-digit *decimal-digit

decimal-digit       =  %x30-39
non-zero-digit    =  %x31-39
llidl           = *( s  / resource-def / variant-def )

resource-def    = res-name s res-transaction
res-name        = "%%" s name
res-transaction = res-get / res-getput / res-getputdel / res-post
res-get         = "<<" s value
res-getput      = "<>" s value
res-getputdel   = "<x>" s value
res-post        = res-request s res-response
res-request     = "->" s value
res-response    = "<-" s value

variant-def     = "&" name s "=" s value
value           =  type / array / map / selector / variant

type            =  %x75.6E.64.65.66     ; "undef"
type            =/ %x73.74.72.69.6E.67  ; "string"
type            =/ %x62.6F.6F.6C        ; "bool"
type            =/ %x69.6E.74           ; "int"
type            =/ %x72.65.61.6C        ; "real"
type            =/ %x64.61.74.65        ; "date"
type            =/ %x75.72.69           ; "uri"
type            =/ %x75.75.69.64        ; "uuid"
type            =/ %x62.69.6E.61.72.79  ; "binary"

array           =  "[" s value-list s "]"
array           =/ "[" s value-list s "..." s "]"

map             =  "{" s member-list s "}"
map             =/ "{" s "$" s ":" s value s "}"

value-list      = value [ s "," [ s value-list ] ]

member-list     = member [ s "," [ s member-list ] ]
member          = name s ":" s value

selector        =  quote name quote
selector        =/ %x74.72.75.65        ; "true"
selector        =/ %x66.61.6C.73.65     ; "false"
selector        =/ 1*digit

variant         = "&" name


s               = *( tab / newline / sp / comment )
comment         = ";" *char newline
newline         = lf / cr / (cr lf)

tab             = %x0009
lf              = %x000A
cr              = %x000D
sp              = %x0020
quote           = %x0022
digit           = %x0030-0039
char            = %x09 / %x20-D7FF / %xE000-FFFD / %x10000-10FFFF

name            = name_start *name_continue
name_start      = id_start    / "_"
name_continue   = id_continue / "_" / "/"
id_start        = %x0041-005A / %x0061-007A ; ALPHA
id_continue     = id_start / %x0030-0039    ; DIGIT
