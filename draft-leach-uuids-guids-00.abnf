UUID                   = <time_low> "-" <time_mid> "-"
                           <time_high_and_version> "-"
                           <clock_seq_and_reserved>
                           <clock_seq_low> "-" <node>
time_low               = 4*<hexOctet>
time_mid               = 2*<hexOctet>
time_high_and_version  = 2*<hexOctet>
clock_seq_and_reserved = <hexOctet>
clock_seq_low          = <hexOctet>
node                   = 6*<hexOctet
hexOctet               = <hexDigit> <hexDigit>
hexDigit =
          "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
          | "a" | "b" | "c" | "d" | "e" | "f"
          | "A" | "B" | "C" | "D" | "E" | "F"

uuid1 = u >> 16;
uuid2 = u & 0xFFFF;
v1 = v >> 16;
v2 = v & 0xFFFF;
temp = uuid2 * v2;
temp = uuid1 * v2 + (temp >> 16);
temp = uuid2 * v1 + (temp & 0xFFFF);
rand_m = 971;
rand_ia = 11113;
rand_ib = 104322;
rand_irand = 4181;
seed  =  t.lo        & 0xFFFF;
rand_irand = (rand_irand * rand_m) + rand_ia + rand_ib;
clock_seq = read_clock();
clock_seq = true_random();
clock_seq = (clock_seq + 1) % (CLOCK_SEQ_LAST + 1);
time_adjust = 0;
time_adjust = 0;
got_no_time = 1;
