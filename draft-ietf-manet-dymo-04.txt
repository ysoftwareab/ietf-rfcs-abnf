


Mobile Ad hoc Networks Working                               I. Chakeres
Group                                                             Boeing
Internet-Draft                                                C. Perkins
Expires: September 6, 2006                                         Nokia
                                                           March 5, 2006


                 Dynamic MANET On-demand (DYMO) Routing
                        draft-ietf-manet-dymo-04

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on September 6, 2006.

Copyright Notice

   Copyright (C) The Internet Society (2006).

Abstract

   The Dynamic MANET On-demand (DYMO) routing protocol is intended for
   use by mobile nodes in wireless multihop networks.  It offers
   adaptation to changing network topology and determines unicast routes
   between nodes within the network on-demand.






Chakeres & Perkins      Expires September 6, 2006               [Page 1]

Internet-Draft                    DYMO                        March 2006


Table of Contents

   1.  Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .  4

   2.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  5

   3.  Data Structures  . . . . . . . . . . . . . . . . . . . . . . .  8
     3.1.  Route Table Entry  . . . . . . . . . . . . . . . . . . . .  8
     3.2.  DYMO Messages  . . . . . . . . . . . . . . . . . . . . . . 10
       3.2.1.  Generalized MANET Packet and Message Structure . . . . 10
       3.2.2.  Routing Message (RM) . . . . . . . . . . . . . . . . . 10
       3.2.3.  Route Error (RERR) . . . . . . . . . . . . . . . . . . 12

   4.  Detailed Operation . . . . . . . . . . . . . . . . . . . . . . 14
     4.1.  Sequence Numbers . . . . . . . . . . . . . . . . . . . . . 14
       4.1.1.  Maintaining a Sequence Number  . . . . . . . . . . . . 14
       4.1.2.  Incrementing a Sequence Number . . . . . . . . . . . . 14
       4.1.3.  Sequence Number Rollover . . . . . . . . . . . . . . . 14
       4.1.4.  Actions After Sequence Number Loss . . . . . . . . . . 14
     4.2.  DYMO Routing Table Operations  . . . . . . . . . . . . . . 14
       4.2.1.  Creating or Updating a Route Table Entry from
               Routing Message Information  . . . . . . . . . . . . . 14
       4.2.2.  Route Table Entry Timeouts . . . . . . . . . . . . . . 16
     4.3.  Routing Message  . . . . . . . . . . . . . . . . . . . . . 16
       4.3.1.  Routing Message Creation . . . . . . . . . . . . . . . 16
       4.3.2.  Routing Message Processing . . . . . . . . . . . . . . 16
       4.3.3.  Appending Additional Routing Information  to an
               Existing Routing Message . . . . . . . . . . . . . . . 17
     4.4.  Route Discovery  . . . . . . . . . . . . . . . . . . . . . 18
     4.5.  Route Maintenance  . . . . . . . . . . . . . . . . . . . . 18
       4.5.1.  Active Link Monitoring . . . . . . . . . . . . . . . . 18
       4.5.2.  Updating Route Lifetimes . . . . . . . . . . . . . . . 19
       4.5.3.  Route Error Generation . . . . . . . . . . . . . . . . 19
       4.5.4.  Route Error Processing . . . . . . . . . . . . . . . . 20
     4.6.  General DYMO Packet and Message Processing . . . . . . . . 21
       4.6.1.  Packet Processing  . . . . . . . . . . . . . . . . . . 21
       4.6.2.  Generic Message Pre-processing . . . . . . . . . . . . 21
       4.6.3.  Processing Unknown Message and TLV Types . . . . . . . 21
       4.6.4.  Generic Message Post-processing  . . . . . . . . . . . 21
       4.6.5.  DYMO Control Packet Transmission . . . . . . . . . . . 21
     4.7.  Routing Prefix . . . . . . . . . . . . . . . . . . . . . . 21
     4.8.  Simple Internet Attachment and Gatewaying  . . . . . . . . 22
     4.9.  Multiple Interfaces  . . . . . . . . . . . . . . . . . . . 22
     4.10. Packet Generation Limits . . . . . . . . . . . . . . . . . 23

   5.  Configuration Parameters . . . . . . . . . . . . . . . . . . . 24

   6.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 25



Chakeres & Perkins      Expires September 6, 2006               [Page 2]

Internet-Draft                    DYMO                        March 2006


   7.  Security Considerations  . . . . . . . . . . . . . . . . . . . 26

   8.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 27

   9.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 28
     9.1.  Normative References . . . . . . . . . . . . . . . . . . . 28
     9.2.  Informative References . . . . . . . . . . . . . . . . . . 28

   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 29
   Intellectual Property and Copyright Statements . . . . . . . . . . 30









































Chakeres & Perkins      Expires September 6, 2006               [Page 3]

Internet-Draft                    DYMO                        March 2006


1.  Overview

   The Dynamic MANET On-demand (DYMO) routing protocol enables reactive,
   multihop routing between participating nodes that wish to
   communicate.  The basic operations of the DYMO protocol are route
   discovery and route management.  During route discovery the
   originating node initiates dissemination of a Route Request (RREQ)
   throughout the network to find the target node.  During this
   dissemination process, each intermediate node records a route to the
   originating node.  When the target node receives the RREQ, it
   responds with a Route Reply (RREP) unicast toward the originating
   node.  Each node that receives the RREP records a route to the target
   node, and then the RREP is unicast toward the originating node.  When
   the originating node receives the RREP, routes have then been
   established between the originating node and the target node in both
   directions.

   In order to react to changes in the network topology nodes maintain
   their routes and monitor their links.  When a data packet is received
   for a route or link that is no longer available the source of the
   packet is notified.  A Route Error (RERR) is sent to the packet
   source to indicate the current route is broken.  Once the source
   receives the RERR, it can perform route discovery if it still has
   packets to deliver.

   In order to enable extension of the base specification, DYMO uses the
   generalized MANET packet and message format [5].  Additionally, by
   following the defined default behavior for nodes not understanding a
   particular type of information, future enhancements are handled in an
   understood and predetermined fashion.

   DYMO uses sequence numbers as they have been proven to ensure loop
   freedom [3].  Sequence numbers enable nodes to determine the order of
   DYMO route discovery messages, thereby avoiding use of stale routing
   information.

   All DYMO messages conform to the generalized MANET message and packet
   format [5] and are transmitted via UDP on port TBD.













Chakeres & Perkins      Expires September 6, 2006               [Page 4]

Internet-Draft                    DYMO                        March 2006


2.  Terminology



      DYMO Sequence Number (SeqNum)

         A DYMO Sequence Number is 16-bit number maintained by each
         node, and it is used to ensure loop-free routes.



      Hop Count (HopCnt)

         The number of hops a particular message or piece of information
         has traversed.



      IP Destination Address (IPDestinationAddress)

         The destination of a packet, determined by examining the IP
         header.



      IP Source Address (IPSourceAddress)

         The source of a packet, determined by examining the IP header.



      MANETcast

         Packet transmission to all neighboring MANET routers.
         MANETcast packets should be sent with an IPDestinationAddress
         of IPv4 TBD (IPv6 TBD), the MANETcastAddress.



      Originator (Orig)

         The Originator is the node that created a Routing Message in an
         effort to disseminate and possibly learn new routing
         information.







Chakeres & Perkins      Expires September 6, 2006               [Page 5]

Internet-Draft                    DYMO                        March 2006


      Prefix

         A Prefix indicates that an address is a network address, rather
         than a host address.  If a Prefix is omitted, the address is
         assumed to be a host address.



      Routing Message (RM)

         A DYMO message that is used to distribute routing information.



      Route Invalidation

         Disabling the use of a route; causing it to be unavailable for
         forwarding data.



      Route Reply (RREP)

         Upon receiving a RREQ during route discovery, the target node
         generates a Route Reply (RREP).  A RREP is used to disseeminate
         routing information on how to reach the Target.  A RREP is a RM
         with a unicast IPDestinationAddress, indicating that this RM is
         to be unicast hop-by-hop toward the Target.



      Route Error (RERR)

         A node generates a Route Error (RERR) to disseminate that it
         does not have correct routing information about a particular
         destination, or set of destinations.  A RERR is most often
         generated in response to a request to forward a data packet for
         which the current node does not have a valid route.



      Route Request (RREQ)

         A node generates a Route Request (RREQ) to discover a valid
         route to a particular destination (Target).  A RREQ is used to
         disseminate routing information on how to reach the Originator
         of the RREQ.  A RREQ is simply a RM with the MANETcastAddress
         in the IPDestinationAddress field of the IP packet, causing



Chakeres & Perkins      Expires September 6, 2006               [Page 6]

Internet-Draft                    DYMO                        March 2006


         distribution to all neighboring DYMO routers.



      Target

         The Target is the ultimate destination of a message.  For RREQ
         this will be the desired destination.  For RREP this will be
         the Originator of the RREQ.



      Valid Route

         A known route where the Route.ValidTimeout is greater than the
         current time.



































Chakeres & Perkins      Expires September 6, 2006               [Page 7]

Internet-Draft                    DYMO                        March 2006


3.  Data Structures

3.1.  Route Table Entry

   The route table entry is a conceptual data structure.
   Implementations may use any internal representation that conforms to
   the semantics of a route as specified in this document.

   o  Route.DestAddress

   o  Route.DeleteTimeout

   o  Route.HopCnt

   o  Route.IsGateway

   o  Route.NextHopAddress

   o  Route.NextHopInterface

   o  Route.Prefix

   o  Route.SeqNum

   o  Route.ValidTimeout

      These fields are defined as follows:

      Route Node Address (Route.DestAddress)

         The IP address of the node associated with the routing table
         entry.



      Route Delete Timeout (Route.DeleteTimeout)

         If the time current is after Route.DeleteTimeout the
         corresponding routing table entry MUST be deleted.



      Route Hop Count (Route.HopCnt)

         The number of intermediate node hops before reaching the
         Route.DestAddress.





Chakeres & Perkins      Expires September 6, 2006               [Page 8]

Internet-Draft                    DYMO                        March 2006




      Route Is Gateway (Route.IsGateway)

         1-bit selector indicating whether the Route.DestAddress is a
         gateway, see Section 4.8.



      Route Next Hop Address (Route.NextHopAddress)

         The IP address of the next node on the path toward the
         Route.DestAddress.



      Route Next Hop Interface (Route.NextHopInterface)

         The interface used to send packets toward the
         Route.DestAddress.



      Route Prefix (Route.Prefix)

         8-bit field that specifies the size of the subnet reachable
         through the Route.DestAddress, see Section 4.7.  The definition
         of the Prefix field is different for gateways; entries with
         Route.IsGateway set to one (1), see Section 4.8.



      Route Sequence Number (Route.SeqNum)

         The sequence number of the Route.DestAddress, zero (0) if
         unknown.



      Route.ValidTimeout

         The time at which a route table entry is scheduled to be
         invalidated.  The routing table entry is no longer considered
         valid if the current time is after Route.ValidTimeout.







Chakeres & Perkins      Expires September 6, 2006               [Page 9]

Internet-Draft                    DYMO                        March 2006


3.2.  DYMO Messages

3.2.1.  Generalized MANET Packet and Message Structure

   All DYMO messages conform to the generalized packet and message
   format as described in [5].

3.2.2.  Routing Message (RM)

   Routing messages are used to disseminate routing information.  The
   two message types are RREQ and RREP and they have the same general
   format.  RREQ messages require a response, while RREP are responses
   to RREQ.

   Routing message creation and processing are described in Section 4.3.

   Example Simple RREQ/RREP Routing Message

        0                   1                   2                   3
        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |   msg-type    |  RSRV |U|N|0|1|           msg-size            |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |    msg-ttl    |  msg-hopcnt   |      msg-tlv-block-size=0     |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |  Head Length  |             Head              |Number Tails=2 |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |   TailOrig    |  TailTarget   |        tlv-block-size         |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |DYMOSEQNUM-type|          TLV Length           |   Orig.SeqNum.:
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       :.Orig.SeqNum   |         Target.SeqNum         |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 1

   o  RM conform to the generalized message format.

   o  msg-type = DYMO-RREQ or DYMO-RREP

   o  msg-semantics

      *  RM indicate inclusion of msg-ttl and msg-hop-count in msg-
         header-info, by setting bit 1

   o  msg-header-info





Chakeres & Perkins      Expires September 6, 2006              [Page 10]

Internet-Draft                    DYMO                        March 2006


      *  RM contains msg-ttl

      *  RM contains msg-hop-count

   o  add-block entries

      *  RM contain 1 and only 1 address marked as Originator - If no
         address is marked as the originator the first address is
         assumed to be the Originator

      *  if the RM is unicast (the IPDestinationAddress is a unicast
         address), RM contain 1 and only 1 address marked as Target
         (Target) - if no address is marked the second address is
         assumed to be the Target

   o  add-tlv

      *  RM contain the DYMO Sequence Number of the Originator
         (Orig.SeqNum) in a DYMO Sequence Number tlv

      *  RM should contain the SeqNum for each address.  If the SeqNum
         is not included a value of Zero (0) is assumed.  For the Target
         the SeqNum will be the Last Known SeqNum (Target.SeqNum) or
         Zero (0) to indicate that only the Target can reply

      *  RM should contain the HopCnt for each address.  If HopCnt is
         not included, it is assumed to be zero (unknown).  For the
         Target the HopCnt should be the Last Known HopCnt
         (Target.HopCnt)

      *  RM should contain a Prefix for each address that is not a host
         address.  If a prefix is not included in conjunction with an
         address, it is assumed zero (host address only).  For more
         information on advertising a Prefix see Section 4.7.

      *  RM should contain a Gateway tlv for an address that is a
         gateway.  If gateway indicator is not included in association
         with an address, the address is assumed to not be a gateway.
         For more information on gateway operation see Section 4.8.












Chakeres & Perkins      Expires September 6, 2006              [Page 11]

Internet-Draft                    DYMO                        March 2006


3.2.3.  Route Error (RERR)

   Example Simple RERR Message

        0                   1                   2                   3
        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       | rerr-msg-type |  RSRV |U|N|0|1|           msg-size            |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |    msg-ttl    |  msg-hopcnt   |      msg-tlv-block-size=0     |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |  Head Length  |             Head              |Number Tails=1 |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |     Tail1     |       tlv-block-size          |dymo-seqnum-typ|
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |          TLV Length           |          Tail1.SeqNum         |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 2

   o  RERR conform to the generalized message format.

   o  msg-type = DYMO-RERR

   o  msg-semantics

      *  RERR indicates inclusion of msg-ttl and msg-hop-count in msg-
         header-info, using bit 1

   o  msg-header-info

      *  RERR contain msg-ttl

      *  RERR contain msg-hop-count

   o  add-block entries

      *  All addresses are considered unreachable unless marked
         otherwise

   o  add-tlvs

      *  RERR should contain SeqNum for each unreachable node.  If the
         SeqNum is not included in the message it is assumed to be zero
         (unknown)

      *  RERR should contain the Last Known HopCnt for each unreachable
         node.  If the HopCnt is not included in the message it is



Chakeres & Perkins      Expires September 6, 2006              [Page 12]

Internet-Draft                    DYMO                        March 2006


         assumed to be zero (unknown)


















































Chakeres & Perkins      Expires September 6, 2006              [Page 13]

Internet-Draft                    DYMO                        March 2006


4.  Detailed Operation

4.1.  Sequence Numbers

4.1.1.  Maintaining a Sequence Number

   DYMO requires each node in the network to maintain its own DYMO
   sequence number (OwnSeqNum), a 16-bit unsigned integer.  The
   circumstances for a node to change its OwnSeqNum are described in
   Section 4.3.1.

4.1.2.  Incrementing a Sequence Number

   When a node increments its OwnSeqNum (as described in Section 4.3.1
   and Section 4.3.2) it MUST do so by treating the sequence number
   value as if it was an unsigned number.  The sequence number zero (0)
   is reserved and is used in several DYMO data structures to represent
   an unknown sequence number.

4.1.3.  Sequence Number Rollover

   If the sequence number has been assigned to be the largest possible
   number representable as a 16-bit unsigned integer (i.e., 65535), then
   the sequence number MUST be set to 256 when incremented.  Setting the
   sequence number to 256 allows other nodes to detect that the number
   has rolled over and the node has not lost its sequence number.

4.1.4.  Actions After Sequence Number Loss

   A node SHOULD maintain its sequence number in persistent storage.

   If a node's OwnSeqNum is lost, it must take certain actions to avoid
   creating routing loops.  To prevent this possibility after sequence
   number loss a node MUST wait for at least ROUTE_DELETE_PERIOD before
   fully participating in the DYMO routing protocol.  If a DYMO control
   message is received during this waiting period, the node SHOULD
   process it normally but MUST not transmit or retransmit any RM.  If a
   data packet is received for forwarding to another destination during
   this waiting period the node MUST generate a RERR message indicating
   that this route is not available and reset its waiting period.  RERR
   generation is described in Section 4.5.3.  At the end of the waiting
   period a node sets its sequence number to one (1).

4.2.  DYMO Routing Table Operations

4.2.1.  Creating or Updating a Route Table Entry from Routing Message
        Information




Chakeres & Perkins      Expires September 6, 2006              [Page 14]

Internet-Draft                    DYMO                        March 2006


   While processing a RM, as described in Section 4.3.2, a node checks
   its routing table for an entry to the Node.Address using longest-
   prefix matching [6].  In the event that no matching entry is found,
   an entry is created.

   If a matching entry is found, the routing information about
   Node.Address contained in this RM is NOT stale if the result of
   subtracting the Route.SeqNum from Node.SeqNum is equal to zero (0)
   using signed 16-bit arithmetic but it SHOULD be disregarded if:

   o  the Route.ValidTimeout has not passed and Node.HopCnt is greater
      than or equal to Route.HopCnt, OR

   o  the Route.ValidTimeout has passed and Node.HopCnt is greater than
      Route.HopCnt plus one (1).

   If the information associated with this Node.Address is stale or
   disregarded and this Node.Address is the Originator then this DYMO
   message MUST be dropped.  For other Node.Addresses that are stale or
   disregarded, the information is simply removed from the RM.  Removing
   stale and disregarded routing informations ensures that unused
   information is not propagated further.

   If the route information for Node.Address is not stale or
   disregarded, then the following actions occur to the route table
   entry for Node.Address:

   1.  the Route.HopCnt is set to the Node.HopCnt,

   2.  the Route.IsGateway is set to the G-bit,

   3.  the Route.NextHopAddress is set to the node that transmitted this
       DYMO packet (IPSourceAddress),

   4.  the Route.NextHopInterface is set to the interface that this DYMO
       packet was received on,

   5.  the Route.Prefix is set to Node.Prefix,,

   6.  the Route.SeqNum is set to the Node.SeqNum,

   7.  and the Route.ValidTimeout is set to the current time +
       ROUTE_TIMEOUT.

   If a valid route exists to Node.Address at this point, the route can
   be used to send any queued data packets and to fulfill any
   outstanding route requests.




Chakeres & Perkins      Expires September 6, 2006              [Page 15]

Internet-Draft                    DYMO                        March 2006


4.2.2.  Route Table Entry Timeouts

   If the current time is after Route.DeleteTimeout the corresponding
   routing table entry MUST be deleted.

   If the current time is later than a routing entry's
   Route.ValidTimeout, the route is stale and it is not be used to route
   packets.  The information in invalid entries can still be used for
   filling fields in outgoing RM with last known values.

4.3.  Routing Message

4.3.1.  Routing Message Creation

   When a node creates a RREQ it SHOULD increment its OwnSeqNum by one
   according to the rules specified in Section 4.1.2.  When a node
   creates a RREP in response to a RREQ, it MUST increment its OwnSeqNum
   under the following conditions:

   o  Target.SeqNum is greater than OwnSeqNum OR

   o  Target.SeqNum is equal to OwnSeqNum AND Target.HopCnt is unknown
      OR

   o  Target.SeqNum is equal to OwnSeqNum AND Orig.HopCnt is unknown OR

   o  Target.SeqNum is equal to OwnSeqNum AND Target.HopCnt (the last
      know hop count value) is less than to Orig.HopCnt (the number of
      hops traversed by this RREQ to reach the target).

   In either case (both RREQ and RREP), the node MUST add the
   Orig.Address to the add-block and the Orig.SeqNum to the add-tlv-
   block.  It sets the Orig.Address to its own address.  The Orig.SeqNum
   is the node's OwnSeqNum.  The node MAY advertise a prefix using the
   Prefix add-tlv, as described in Section 4.7.  Otherwise, the Prefix
   add-tlv is not included.  The node MAY advertise it is a gateway by
   using a gateway add-tlv, as described in Section 4.8.  Otherwise, the
   gateway add-tlv is not included.  The msg-ttl SHOULD be set to
   NET_DIAMETER, but MAY be set smaller.  The msg-hopcnt is set to zero
   (0). the case of RREQ, the msg-ttl MAY be set in accordance with an
   expanding ring search as described in [2] to limit the RREQ
   propagation to a subset of the network and possibly reduce route
   discovery overhead.

4.3.2.  Routing Message Processing

   After general message pre-processing (Section 4.6.2), a route to the
   Originator is then created or updated, as described in Section 4.2.1.



Chakeres & Perkins      Expires September 6, 2006              [Page 16]

Internet-Draft                    DYMO                        March 2006


   If a valid route to the Originator is not created or updated then the
   message MUST be dropped.

   Each additional address in the address block(s) SHOULD be processed
   except the Target.  For each of these addresses the Node.HopCnt
   associated with the address is incremented by one (1) if it exists
   and is not zero, then a route is created or updated as defined in
   Section 4.2.1.  The updating of the HopCnt occurs after processing.
   Each address resulting in a valid route entry may alleviate a future
   route discovery.  Any addresses that do not yield a valid route or
   that are not processed MUST be removed from the RM.  Only valid
   routing information is propagated within RM messages.

   If this node is the Target AND this is a RREQ, this node responds
   with a RREP.  The Target creates a new RREP as described in
   Section 4.3.1.  The Target.Address in the new RM is set to the
   Orig.Address from the RM currently being processed.  The
   Target.HopCnt is the hop count for the Orig.Address.  The
   IPDestinationAddress is set to the Route.NextHopAddress for the
   Orig.Address of the current RM being processed.  The Target.SeqNum is
   set to Route.SeqNum for Orig.Address from the current RM being
   processed.  Then the new RM undergoes post-processing, according to
   Section 4.6.4.

   After processing a RM, a node MAY append its routing information to
   the RM, according to the process described in Section 4.3.3.  The
   additional routing information will reduce route discoveries to this
   node.  If all nodes along the path append their information path
   information will also be available.

   If this node is not the Target.Address and this is a RREQ the current
   RM SHOULD be MANETcast.  If this node is not the Target Address and
   this is a RREP the current RM SHOULD be unicast to the next hop
   address on the route to the Target.

   If this node is the Target.Address, the current message is processed,
   but this message is not forwarded or retransmitted.

4.3.3.  Appending Additional Routing Information  to an Existing Routing
        Message

   Appending routing information will alleviate route discovery attempts
   to this node from other nodes that process the resultant RM
   information.  Nodes MAY append a their routing information to a RM
   processed if they believe that this additional routing information
   will alleviate future RREQ.

   Prior to appending their address to a RM, a node MUST increment its



Chakeres & Perkins      Expires September 6, 2006              [Page 17]

Internet-Draft                    DYMO                        March 2006


   OwnSeqNum as defined in Section 4.1.2.  Then it appends its IP
   address and OwnSeqNum.  It MAY also append its Prefix and G-bit to
   the RM.  This Node.HopCnt is set to one (1) if included.  Several
   length fields MUST also be adjusted to include the newly inserted
   information.

4.4.  Route Discovery

   A node generates a Route Request (RREQ) to discover a route to a
   particular destination (Target).  If a sequence number is known for
   the Target it is placed in the RREQ.  Otherwise, Target.SeqNum
   assumed to be unknown by processing nodes.  A Target.SeqNum of zero
   (0) MAY be set to indicate that only the destination may respond to
   this RREQ.  If a previous value of the HopCnt is known for the Target
   it is placed in a corresponding add-tlv HopCnt.  Otherwise, the
   HopCnt is not included.  The IPDestinationAddress is set to the
   MANETcastAddress.  Then the RM is transmitted according to the
   procedure defined in Section 4.6.5.

   After issuing a RREQ, the originating node waits for a route to be
   created to the Target.  If a route is not found within RREQ_WAIT_TIME
   milliseconds, this node MAY again try to discover a route by issuing
   another RREQ.

   To reduce congestion in a network, repeated attempts at route
   discovery for a particular Target SHOULD utilize a binary exponential
   backoff.  The first time a node issues a RREQ, it waits
   RREQ_WAIT_TIME milliseconds for a route to the Target.  If a route is
   not found within that time, the node MAY send another RREQ.  If a
   route is not found within two (2) times the current waiting time,
   another RREQ may be sent, up to a total of RREQ_TRIES.  For each
   additional attempt, the waiting time for the previous RREQ is
   multiplied by two (2) so that the waiting time conforms to a binary
   exponential backoff.

   Data packets awaiting a route SHOULD be buffered.

   If a route discovery has been attempted RREQ_TRIES times without
   receiving a route to the Target, all data packets destined for the
   corresponding Target SHOULD be dropped from the buffer and a
   Destination Unreachable ICMP message SHOULD be delivered to the
   application.

4.5.  Route Maintenance

4.5.1.  Active Link Monitoring

   Before a route can be used for forwarding a packet, it MUST be



Chakeres & Perkins      Expires September 6, 2006              [Page 18]

Internet-Draft                    DYMO                        March 2006


   checked to make sure that the route is still valid.  If the
   Route.ValidTimeout is earlier than the current time, the packet
   cannot be forwarded, and a RERR message MUST be generated (see
   section Section 4.5.3).  In this case, the Route.DeleteTimeout is set
   to Route.ValidTimeout + ROUTE_DELETE_TIMEOUT.

   If the current time is after Route.DeleteTimeout, then the route MUST
   be deleted, though a route MAY be deleted at any time.

   Nodes MUST monitor links on active routes.  This may be accomplished
   by one or several mechanisms.  Including:

   o  Link layer feedback

   o  Hello messages

   o  Neighbor discovery

   o  Route timeout

   o  Other monitoring mechanisms or heuristics

   Upon detecting a link break the detecting node MUST set the
   Route.ValidTimeout to the current time for all active routes
   utilizing the broken link.

   A RERR MUST be issued if a data packet is received and it cannot be
   delivered to the next hop.  RERR generation is described in
   Section 4.5.3.  A RERR MAY be issued after detecting a broken link of
   an active route to quickly notify nodes that a link break occurred
   and a route or routes are no longer available.  If a route has not
   been used, a RERR SHOULD NOT be generated unless generation is
   expected to reduce future control traffic.

4.5.2.  Updating Route Lifetimes

   To avoid route timeouts for active routes, a node MUST update the
   Route.ValidTimeout to the IPSourceAddress to be the current time +
   ROUTE_TIMEOUT upon receiving a data packet.

   To avoid route timeouts for active routes, a node SHOULD update the
   Route.ValidTimeout to the IPDestinationAddress to be the current time
   + ROUTE_TIMEOUT upon successfully transmitting a packet to the next
   hop.

4.5.3.  Route Error Generation

   When a data packet is received for a destination without a valid



Chakeres & Perkins      Expires September 6, 2006              [Page 19]

Internet-Draft                    DYMO                        March 2006


   routing table entry, a Route Error (RERR) MUST be generated by this
   node.  A RERR informs the source that the route does not exist, is no
   longer available, or is now invalid.

   In a new RERR, the address of unreachable node (IPDestinationAddress)
   from the data packet is inserted.  If a value for the unreachable
   node's SeqNum is known, it is placed in the RERR; otherwise, if
   unknown it will be assumed to be zero (0).  The msg-ttl SHOULD be set
   to NET_DIAMETER, but may be set smaller to limit the scope of the
   RERR.  The msg-hopcnt is set to zero (0).  The IPDestinationAddress
   is set to the MANETcastAddress.  This option will notify the maximum
   number of nodes of the broken link.

   Additional unreachable nodes that required the same unavailable link
   (routes with the same Route.NextHopAddress and
   Route.NextHopInterface) MAY be added to the RERR.  For each
   unreachable node the Address is appended.  The SeqNum if know should
   also be included.  Appending additional routing information notifies
   each processing node of additional routes that are no longer
   available.

   The RERR is then processed as described in Section 4.6.5.

4.5.4.  Route Error Processing

   When a node processes a RERR, it SHOULD set the Route.ValidTimeout to
   the current time for each Address that meets all of the following
   conditions:

   1.  The Route.NextHopAddress is the same as the RERR IPSourceAddress.

   2.  The Route.NextHopInterface is the same as the interface on which
       the RERR was received.

   3.  The Node.SeqNum is zero (0), unknown, OR the result of
       subtracting Route.SeqNum from Node.SeqNum is less than or equal
       to zero using signed 16-bit arithmetic.

   Each Node.Address that did not result in a change to
   Route.ValidTimeout SHOULD be removed from the RERR, since propagation
   of this information should not result in any benefit.

   Prior to post processing a node MAY remove any unreachable node
   address and its associated information to decrease the message size.

   If this node is the Target and the IPDestinationAddress is its own
   Address then it may stop processing.




Chakeres & Perkins      Expires September 6, 2006              [Page 20]

Internet-Draft                    DYMO                        March 2006


   If at least one unreachable node address remains in the RERR it
   SHOULD be handled as described in Section 4.6.4 to continue
   notification of nodes effected by the broken link.  Otherwise, the
   RERR is dropped.

4.6.  General DYMO Packet and Message Processing

4.6.1.  Packet Processing

   The length of IP addresses (32-bits for IPv4 and 128-bits for IPv6)
   inside DYMO messages are dependent on the IP packet header.  For
   example, if the IP header uses IPv6 addresses then all messages and
   addresses contained in the payload use IPv6 addresses.

4.6.2.  Generic Message Pre-processing

   Each message undergoes pre-processing before the message specific
   processing occurs.  During pre-processing, the msg-ttl is decremented
   by one (1) and the msg-hopcnt is incremented by one (1).

4.6.3.  Processing Unknown Message and TLV Types

   We expect the next version of the generalized MANET packet and
   message format [5] to include message semantic bits and tlv semantic
   bits to control the behavior of unknown types.

4.6.4.  Generic Message Post-processing

   If the msg-ttl of any message is zero (0) after processing it MUST be
   dropped.

4.6.5.  DYMO Control Packet Transmission

   Packet transmission and re-transmission are controlled by the
   IPDestinationAddress.  If the IPDestinationAddress is a unicast
   address, the packet IPDestinationAddress is replaced by the
   Route.NextHopAddress from a route table lookup for the Target.  If a
   route for the Target is unknown or invalid the packet is dropped and
   a RERR SHOULD be generated.

   For all currently defined DYMO packets the IPTTL (IPMaxCount) SHOULD
   be set to 1 (IPTTL=1), since all DYMO packet communications are
   exchanged between direct neighbors only.

4.7.  Routing Prefix

   Any node MAY advertise connectivity to a subset of node addresses
   within its address space by using a Prefix tlv [5].  The nodes (other



Chakeres & Perkins      Expires September 6, 2006              [Page 21]

Internet-Draft                    DYMO                        March 2006


   than the advertising node) within the advertised Prefix SHOULD NOT
   participate in the MANET and MUST be reachable by forwarding packets
   to the node advertising connectivity.  For example, 192.168.1.1 with
   a prefix of 16 indicates all nodes with the prefix 192.168.X.X are
   reachable through 192.168.1.1.

   The meaning of the Prefix field is altered for routes to the gateway;
   Route.IsGateway is one (1).  If the G-bit is set the Prefix in
   association with the IP address indicates that all nodes outside the
   subnet are reachable via the gateway node.  For example, a route to a
   gateway with IP address 192.168.1.1 and a prefix of 16 indicates that
   all nodes with an IP address NOT matching 192.168.X.X are reachable
   via this node.

4.8.  Simple Internet Attachment and Gatewaying

   Simple Internet attachment consists of a network of MANET nodes
   connected to the Internet via a single gateway node.  The gateway is
   responsible for responding to RREQs for Targets outside its
   configured MANET subnet, as well as delivering packets to
   destinations outside the MANET.

   MANET nodes wishing to be reachable from nodes in the Internet MUST
   have IP addresses within the gateway's configured and advertised
   MANET subnet.  Given a node with a globally routeable address or
   care-of address handled by the gateway, the gateway is responsible
   for routing and forwarding packets received from the Internet
   destined for nodes inside its MANET subnet.

   Since many nodes may commonly wish to communicate with the gateway,
   the gateway SHOULD indicate to nodes that it is a gateway by using
   the gateway tlv in any RM created or processed.  The gateway tlv
   indicates to nodes in the MANET that the Node.Address is attached to
   the Internet and is capable of routing data packets to all nodes
   outside of the configured MANET subnet, defined by the Node.Address
   and Node.Prefix fields.

4.9.  Multiple Interfaces

   It is likely that DYMO will be used with multiple wireless
   interfaces; therefore, the particular interface over which packets
   arrive must be known whenever a packet is received.  Whenever a new
   route is created, the interface through which the Route.Address can
   be reached is also recorded in the route table entry.

   When multiple interfaces are available, a node transmitting a
   MANETcast packet SHOULD send the packet on all interfaces that have
   been configured for DYMO operation.



Chakeres & Perkins      Expires September 6, 2006              [Page 22]

Internet-Draft                    DYMO                        March 2006


4.10.  Packet Generation Limits

   To avoid congestion, a node SHOULD NOT transmit more than RATE_LIMIT
   control messages per second.  RREQ packets SHOULD be discarded before
   RREP or RERR packets.














































Chakeres & Perkins      Expires September 6, 2006              [Page 23]

Internet-Draft                    DYMO                        March 2006


5.  Configuration Parameters

   Here are some default parameter values for DYMO:

      Parameter Name Suggested Value

      --------------------------- ---------------

      NET_DIAMETER 10

      RATE_LIMIT 10

      ROUTE_TIMEOUT 5000 milliseconds

      ROUTE_DELETE_TIMEOUT 5*ROUTE_TIMEOUT

      RREQ_WAIT_TIME 1000 milliseconds

      RREQ_TRIES 3

   For large networks or networks with frequent topology changes the
   default DYMO parameters should be adjusted using either
   experimentally determined values or dynamic adaptation.  For example,
   in networks with infrequent topology changes ROUTE_TIMEOUT may be set
   to a much larger value.

   It is assumed that all nodes in the network share the same parameter
   settings.  Different parameter values for ROUTE_TIMEOUT or
   ROUTE_DELETE_TIMEOUT in addition to arbitrary packet delays may
   result in frequent route breaks or routing loops.





















Chakeres & Perkins      Expires September 6, 2006              [Page 24]

Internet-Draft                    DYMO                        March 2006


6.  IANA Considerations

   DYMO defines several message-types and tlv-types.  A new registry
   will be created for the values for the various type fields, and the
   following values will be assigned:

      msg-type Value

      -------------------------------- -------

      Route Request (DYMO-RREQ) 8 - TBD

      Route Reply (DYMO-RREP) 9 - TBD

      Route Error (DYMO-RERR) 10 - TBD

      address-tlv Value

      -------------------------------- -----

      DYMO SeqNum (multivalue) 20 - TBD

      HopCnt (multivalue) 21 - TBD

      Prefix (multivalue) 0 [5]

      Gateway (zero length) 22 - TBD

      Originator 23 - TBD

      Target 24 - TBD

   Future values of the Type will be allocated using standard actions as
   described in [1].  For future Types that are unicast hop-by-hop
   (packets not sent to the MANETcastAddress), these Types MUST include
   the Target.Address field.















Chakeres & Perkins      Expires September 6, 2006              [Page 25]

Internet-Draft                    DYMO                        March 2006


7.  Security Considerations

   Currently, DYMO does not specify any special security measures.
   Routing protocols, however, are prime targets for impersonation
   attacks.  In networks where the node membership is not known, it is
   difficult to determine the occurrence of impersonation attacks, and
   security prevention techniques are difficult at best.  However, when
   the network membership is known and there is a danger of such
   attacks, DYMO messages must be protected by the use of authentication
   techniques, such as those involving generation of unforgeable and
   cryptographically strong message digests or digital signatures.
   While DYMO does not place restrictions on the authentication
   mechanism used for this purpose, IPsec Authentication Message (AH) is
   an appropriate choice for cases where the nodes share an appropriate
   security association that enables the use of AH.

   In particular, RM messages SHOULD be authenticated to avoid creation
   of spurious routes to a destination.  Otherwise, an attacker could
   masquerade as that destination and maliciously deny service to the
   destination and/or maliciously inspect and consume traffic intended
   for delivery to the destination.  RERR messages, while slightly less
   dangerous, SHOULD be authenticated in order to prevent malicious
   nodes from disrupting active routes between communicating nodes.

   If the mobile nodes in the ad hoc network have pre-established
   security associations, the purposes for which the security
   associations are created should include that of authorizing the
   processing of DYMO control packets.  Given this understanding, the
   mobile nodes should be able to use the same authentication mechanisms
   based on their IP addresses as they would have used otherwise.





















Chakeres & Perkins      Expires September 6, 2006              [Page 26]

Internet-Draft                    DYMO                        March 2006


8.  Acknowledgments

   DYMO is a descendant of the design of previous MANET reactive
   protocols, especially AODV [2] and DSR [4].  Changes to previous
   MANET reactive protocols stem from research and implementation
   experiences.  Thanks to Elizabeth Belding-Royer for her long time
   authorship of DYMO.  Additional thanks to Luke Klein-Berndt, Pedro
   Ruiz, Fransisco Ros and Koojana Kuladinithi for reviewing of DYMO, as
   well as several specification suggestions.










































Chakeres & Perkins      Expires September 6, 2006              [Page 27]

Internet-Draft                    DYMO                        March 2006


9.  References

9.1.  Normative References

   [1]  Narten, T. and H. Alvestrand, "Guidelines for Writing an IANA
        Considerations Section in RFCs", RFC 2434, BCP 26, October 1998.

   [2]  Perkins, C., Belding-Royer, E., and S. Das, "Ad hoc On-demand
        Distance Vector (AODV) Routing", RFC 3561, July 2003.

   [6]  Baker, R., "Requirements for IP Version 4 Routers", RFC 1812,
        June 1995.

9.2.  Informative References

   [3]  Perkins, C. and E. Belding-Royer, "Ad hoc On-Demand Distance
        Vector (AODV) Routing", Proceedings of the 2nd IEEE Workshop on
        Mobile Computing Systems and Applications, New Orleans, LA, pp.
        90-100, February 1999.

   [4]  Johnson, D. and D. Maltz, "Dynamic Source Routing (DSR) in Ad
        hoc Networks", In Mobile Computing, Chapter 5, pp. 153-181,
        1996.

   [5]  Clausen, T., Dearlove, C., and J. Dean, "Generalized MANET
        Packet/Message Format", February 2006.

























Chakeres & Perkins      Expires September 6, 2006              [Page 28]

Internet-Draft                    DYMO                        March 2006


Authors' Addresses

   Ian Chakeres
   Boeing Phantom Works
   The Boeing Company
   P.O. Box 3707 Mailcode 7L-49
   Seattle, WA  98124-2207
   USA

   Email: ian.chakeres@gmail.com


   Charlie Perkins
   Nokia Research Center
   313 Fairchild Drive
   Mountain View, CA  94043
   USA

   Phone: +1-650-625-2986
   Fax:   +1-650-625-2502
   Email: charlie.perkins@nokia.com






























Chakeres & Perkins      Expires September 6, 2006              [Page 29]

Internet-Draft                    DYMO                        March 2006


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Disclaimer of Validity

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Copyright Statement

   Copyright (C) The Internet Society (2006).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.




Chakeres & Perkins      Expires September 6, 2006              [Page 30]

