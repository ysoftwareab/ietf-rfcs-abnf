skicalparameters  =

                / item             ; specific resource being qualified
                / nsref            ; reference valuelist URI pointer
                / skirole          ; qualify property values

                ; the following are members of the optimeset

                / opterm           ; period of optime validity
                / opseasons        ; reoccurring periods of optimes
                / opdays           ; reoccurring days of optimes
                / ophours          ; reoccurring hours of optimes
                / opminutes        ; reoccurring minutes of optimes


optimeset   =    [ ";" opterm] [ ";" opseasons]
                             [ ";" opdays] [ ";" ophours]
                             [ ";" opminutes]
optermparam       =   ";" "OPTERM" "="
                            (d-period-explicit / d-period-start)

d-period-explicit =   (date-time / date) "/" ((date-time
                            / date) /  ( "THISANDPRIOR" / "THISANDFUTURE"))

d-period-start    =   (date-time / date) "/" ((date-time
                            / date) /  ( termdur-value ))

date-time     =   date "T" time
date          =   date-value

date-value    =   date-fullyear date-month date-mday
date-fullyear =   4DIGIT
date-month    =   2DIGIT    ; 01- 12
date-mday     =   2DIGIT    ; O1-28, 01-29, 01-30, 01-31

time          =   time-hour time-minute time-second [time-utc]

time-hour     = 2DIGIT        ;00-23
time-minute   = 2DIGIT        ;00-59
time-second   = 2DIGIT        ;00-60
                                    ; The "60" value is used to
                                    ; account for "leap" seconds.

time-utc      = ( "Z" ) / (( "+" / "-") time-hour
                      [ ":" time-minute] ))

termdur-value  = (["+"] / "-") "P" (dur-date / dur month /
                       dur-time / dur-week / dur-year )

dur-date   = dur-day [dur-time]
dur-time   = "T" (dur-hour / dur-minute / dur-second)
dur-year   = 1*DIGIT "Y"
dur-month  = 1*DIGIT "M"
dur-week   = 1*DIGIT "W"
dur-hour   = 1*DIGIT "H" [dur-minute]
dur-minute = 1*DIGIT "M" [dur-second]
dur-second = 1*DIGIT "S"
dur-day    = 1*DIGIT "D"


opseasonsparam   =  ";"  "OPSEASONS" "="
                           (s-period-explicit / s-period-start)
                          *[ "," (s-period-explicit / s-period-start) ]

s-period-explicit   = impyeardatetime "/" impyeardatetime

s-period-start      = impyeardatetime "/" seasonsdur-value

impyeardatetime   = "--"  date-month  date-mday
                          [ "T" time ]

date-month    =   2DIGIT    ; 01- 12
date-mday     =   2DIGIT    ; O1-28, 01-29, 01-30, 01-31

time          =   time-hour time-minute time-second [time-utc]

time-hour     = 2DIGIT        ;00-23
time-minute   = 2DIGIT        ;00-59
time-second   = 2DIGIT        ;00-60
                                    ; The "60" value is used to
                                    ; account for "leap" seconds.

time-utc      = ( "Z" ) / (( "+" / "-") time-hour
                      [ ":" time-minute] ))

seasonsdur-value  = (["+"] / "-") "P" (dur-date / dur-month /
                           dur-time / dur-week)

dur-date   = dur-day [dur-time]
dur-time   = "T" (dur-hour / dur-minute / dur-second)
dur-month  = 1*DIGIT "M"
dur-week   = 1*DIGIT "W"
dur-hour   = 1*DIGIT "H" [dur-minute]
dur-minute = 1*DIGIT "M" [dur-second]
dur-second = 1*DIGIT "S"
dur-day    = 1*DIGIT "D"

opdaysparam  =  ";"
                      ( dayparam / monthdayparam / yeardayparam )

dayparam     =  "BYDAY" "="   weekday / weekdayint  [timeparam]
                      *[ "," weekday [timeparam]]

weekday    = "SU" / "MO" / "TU" / "WE" / "TH" / "FR" / "SA"
        ;Corresponding to SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY,
        ;FRIDAY, and SATURDAY days of the week.

weekdayint = weekday "-" weekday
           ; weekdayint can be used to define an interval of days
           ; such as "MO"-"FR" - everyday from Monday to Friday.

monthdayparam = "BYMONTHDAY" "=" ordmoday [timeparam]
                      *[ "," ordmoday [timeparam]]

ordmoday   = 1DIGIT / 2DIGIT       ;1 to 31


yeardayparam  =  "BYYEARDAY" "=" ordyrday [timeparam]
                       *[ "," ordyrday [timeparam]]

ordyrday   = 1DIGIT / 2DIGIT / 3DIGIT      ;1 to 366

timeparam    =  "(" (d-period-explicit / d-period-start)
                      *[ "," (d-period-explicit / d-period-start) ]
                      ")"
d-period-explicit   =   time "/" time
        ; [ISO 8601] complete representation basic format for a period of
        ; time consisting of a start and end.

d-period-start      =   time "/" daydur-value
        ; [ISO 8601] complete representation basic format for a period of
        ; time consisting of a start and positive duration of time.

time  = time-hour time-minute time-second [time-utc]

time-hour          = 2DIGIT        ;00-23
time-minute        = 2DIGIT        ;00-59
time-second        = 2DIGIT        ;00-60
time-utc      = ( "Z" ) / (( "+" / "-") time-hour
                        [ ":" time-minute] ))


daydur-value  = (["+"] / "-") "P" (dur-date / dur-time / dur-week)

dur-date   = dur-day [dur-time]
dur-time   = "T" (dur-hour / dur-minute / dur-second)
dur-week   = 1*DIGIT "W"
dur-hour   = 1*DIGIT "H" [dur-minute]
dur-minute = 1*DIGIT "M" [dur-second]
dur-second = 1*DIGIT "S"
dur-day    = 1*DIGIT "D"

OPHOURS=100000Z/120000Z,130000/173000:The front Box-Office
ophoursparam      =   "OPHOURS" "=" (period-explicit / period-start)
                            *[ "," (period-explicit / period-start) ]

period-explicit   =   time "/" time


period-start      =   time "/" dur-value

time  = time-hour time-minute time-second [time-utc]

time-hour          = 2DIGIT        ;00-23
time-minute        = 2DIGIT        ;00-59
time-second        = 2DIGIT        ;00-60
time-utc        = ( "Z" ) / (( "+" / "-") time-hour
                        [ ":" time-minute] ))

daydur-value  = (["+"] / "-") "P" (dur-date / dur-time / dur-week)

dur-date   = dur-day [dur-time]
dur-time   = "T" (dur-hour / dur-minute / dur-second)
dur-week   = 1*DIGIT "W"
dur-hour   = 1*DIGIT "H" [dur-minute]
dur-minute = 1*DIGIT "M" [dur-second]
dur-second = 1*DIGIT "S"
dur-day    = 1*DIGIT "D"

opminutesparam    =   ";" "OPMINUTES" "=" minutevalue
                            *[ ";" minutevalue]
minutevalue       =  (m-period-explicit / m-period-start)

m-period-explicit =   dquote minute-time dquote "/"
                            dquote minute-time dquote

m-period-start    =   minute-time "/" m-dur-value

m-minute-time     =   time-minute  time-second [ "." fraction]

time-minute       =    2DIGIT        ;00-59
time-second       =    2DIGIT        ;00-60

fraction          =    1*DIGIT
                             ; as many digits as desired may be used
m-dur-value       =    (["+"] / "-") "P" dur-time

dur-time   = "T" (dur-minute / dur-second / dur-fraction)


dur-minute     = 1*DIGIT "M" [dur-second]
dur-second     = 1*DIGIT "S" [dur-fraction]
dur-fraction   = 1*DIGIT "."

itemparam  = (
                    ( "ITEM" "=" ) / ( "PRXITEM "=" prefix ":" ) text
                    )

prefix     = 1*( ) ; one or more letters matching the declared
                            prefix of a NAMESPACE property value

nsrefparam  =  NSREF "=" prefix

prefix      = 1*( ) ;  one or more letters matching the declared
                          ;  prefix of a NAMESPACE property value

Skiroleparam  = (
                      (( "SKIROLE" "="  ) /
                       ( "PRXSKIROLE" "=" prefix ":" ))
                      DQUOTE text DQUOTE )

                     ; It is RECOMMENDED that the text value be
                     ; chosen from a list, as described in
sampleskirolelist =       (   "PERFORMER"        /     "HOSTESS"       /
                                    "COMPOSER"         /     "CONDUCTOR"     /
                                    "SALES MANAGER"    /     "SPECIALIST"    /
                                    "EDITOR"           /     "PRODUCER"      /
                                    "GUIDE"            /     "SPEAKER"       /
                                    "CHAIR"            /     "PRESENT"       /
                                    "REFERENCED"       /     "INVITED"       )

                     ; as used with the THINGS property

sampleskirolelist2 =     (   "PRESENT"           /   "EXHIBITED"   /
                                   "FOR-SALE"          /   "FOR-AUCTION"  /
                                   "FOR-HIRE"          /   "APPRAISED"     /
                                   "PREMIERED"         /   "DEMONSTRATED" )

                     ; as used with the THINKS property

sampleskirolelist3 =     (   "STUDIED"           /   "REFERENCED"   /
                                   "SUPPORTED"         /   "DEBATED"      /
                                   "CRITICIZED"        )

                               )

component  =  (
                      / optimec
                      )



optimec     = "BEGIN" ":" "OPTIME" CRLF
                     optimeprop *alarmc
                     "END" ":" "OPTIME" CRLF

optimeprop  = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   class / created / description /  geo /

                   last-mod / location / organizer / priority /
                   dtstamp / seq / status / summary / transp /
                   uid / url / recurid / skicalver

                   ; the following are optional,
                   ; and MAY occur more than once

                   attach / attendee / categories / comment /
                   dtopen / contact / related / resources / x-prop


                   )

SEASONS=--0915/--1220,--0110/0522;BYDAYS
eventprop  =    /  *(

                          ; the following are optional,
                          ; but MUST NOT occur more than once

                          publisher / skuid / whurl

                          ; the following are optional,
                          ; and MAY occur more than once

                          access / actions / bookings /
                          control / directions / namespace /
                          orientation / partrel / paymethod /
                          persons / placename / price /
                          prohibited / promo / recommended
                          required / skicalver / skilang
                          things / thinks / title

                         )

title       =    "TITLE" titleparam ":" text CRLF

                        ; It is RECOMMENDED, when feasible, that the
                        ; text value be chosen from a list,
                        ; as described in
titleparam  =    *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once

                        (";" languageparam ) / (";" nsrefparam ) /
                        ( optimesetparam ) /

                        ; the following is optional,
                        ; and MAY occur more than once

                        (";" xparam)

                        )

persons    =       "PERSONS" personsparam ":" text CRLF

                     ; It is RECOMMENDED that the text value be
                        ; chosen from a list, as described in
personsparam  =    *(
                          ; the following is optional,
                          ; but MUST NOT occur more than once

                        (";" languageparam ) /(";" skiroleparam ) /
                        (";" nsrefparam ) / (";" optimesetparam ) /

                          ; the following is optional,
                          ; and MAY occur more than once

                          (";" xparam)

                        )

thinks       =       "THINKS" thinksparam ":" text CRLF

                           ; It is RECOMMENDED that the text value be
                           ; chosen from a list, as described in
thinksparam  =       *(

                           ; the following is optional,
                           ; but MUST NOT occur more than once

                           (";" languageparam ) /(";" skiroleparam ) /
                           (";" nsrefparam )    /(";" optimesetparam ) /

                             ; the following is optional,
                             ; and MAY occur more than once

                           (";" xparam)

                        )

things             = "THINGS" thingsparam ":" text CRLF
                       ; It is RECOMMENDED that the text value be
                        ; chosen from a list, as described in
thingsparam      = *(

                     ; the following is optional,
                     ; but MUST NOT occur more than once

                       (";" languageparam ) / (";" skiroleparam ) /
                       (";" nsrefparam )    / (";" optimesetparam ) /

                       ; the following is optional,
                       ; and MAY occur more than once

                       (";" xparam)

                     )

actions         =    "ACTIONS" actionsparam ":" text CRLF

                     ; It is RECOMMENDED that the text value be
                     ; chosen from a list, as described in
actionsparam      = *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once

                     (";" languageparam )  / (";" nsrefparam ) /
                     (";" optimesetparam ) /

                     ; the following is optional,
                     ; and MAY occur more than once

                      (";" xparam)

                     )

partrel            =   "PARTREL" partrelparam ":" text CRLF

partrelparam       =    *(

                     ; the following is optional,
                     ; but MUST NOT occur more than once

                     (";" languageparam ) / (";" cnparam )    /
                     (";" reltypeparam)   / (";" nsrefparam ) /
                     (";" optimesetparam ) /
                     ; the following is optional,
                     ; and MAY occur more than once

                     (";" xparam)

                     )

skilang            =   "SKILANG" skilangparam ":" language CRLF

skilangparam       =    *(

                         ; the following is optional,
                         ; but MUST NOT occur more than once

                         (";" optimesetparam ) / (";" itemparam) /

                         ; the following is optional,
                         ; and MAY occur more than once

                         (";" xparam)

                         )

language          =    <Text identifying a language, as defined in
orientation       =    "ORIENTATION" orientationparam ":" text CRLF

                     ; It is RECOMMENDED that the text value be
                        ; chosen from a list, as described in
orientationparam  = *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once

                        (";" orienttypeparam ) /



orienttypeparam   = (( "ORIENTTYPE" "=" text) /
                           ( "PRXORIENTTYPE" "=" prefix "::" text )  /

                          (";" languageparam )  / (";" nsrefparam ) /
                          (";" optimesetparam ) / (";" itemparam) /

                     ; It is RECOMMENDED that the text value be
                     ; chosen from a list, as described in
whurl         =   "WHURL" whurlparam ":" uri CRLF

whurlparam    =   *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once
                        (";" languageparam ) / (";" nsrefparam )

                        ; the following is optional,
                        ; and MAY occur more than once

                        (";" xparam)
                        )

skuid         =   "SKUID"  skuidparam ":" text CRLF

skuidparam    =   *(

                       ; the following is optional,
                       ; but MUST NOT occur more than once
                       (";" languageparam ) / (";" nsrefparam )

                  ; the following is optional,
                  ; and MAY occur more than once

                    (";" xparam)
                  )

dtopen    = "DTOPEN" opentimeparam ":" TEXT CRLF

opentimeparam  = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   ( optimeset / (";" languageparam ) /
                   (";" nsrefparam ) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   *(";" xparam)

                   )

venue        =    "VENUE" venueparam ":" venuetype CRLF

venueparam   =    *(

                  ; the following is optional,
                     ; and MAY occur more than once

                  (";" xparam)
                      )

venuetype      =   "Internet"      /
                         "Radio"         /
                         "TV"            /
                         "Outdoors"      /
                         "Indoors"       /
                         "Travel-transit"

directions       = "DIRECTIONS" directionsparam ":" text CRLF

directionsparam  = *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once

                        (";" languageparam ) / (";" altrepparam ) /
                        (";" travelbyparam) / (";" geo-path) /
                        (";" nsrefparam ) /
                        ; the following is optional,
                        ; and MAY occur more than once

                        (";" xparam)
                        )

travelbyparam    = "TRAVELBY" "="
                        ("walk" / "bicycle" / "boat" / "car" / "rail" /
                         "air" / "public_transportation" /
                         "frequency" / "uri" )


            ; Implementers who do not intend to have a complex GUI for
            ; various types of directions could concatenate all DIRECTIONS
            ; fields which have a TRAVELBY parameter into one DIRECTIONS field
            ; without a TRAVELBY parameter

geo-path          =    "GEO-PATH" "=" 1*(float "," float ",")
                             (float "," float)

                     ; machine readable directions
                     ; coordinate pair sequence approaching destination

placename       =    "PLACENAME" placeparam ":" text CRLF

                           ; It is RECOMMENDED that the text value be
                           ; chosen from a list, as described in
placeparam       =    *(

                     ; the following is optional,
                     ; but MUST NOT occur more than once

                     (";" languageparam ) / (";" nsrefparam ) /

                     ; the following is optional,
                     ; and MAY occur more than once

                     (";" xparam)
                         )

requirements       =    "REQUIRED" requireparam ":" text CRLF

                     ; It is RECOMMENDED that the text value be
                        ; chosen from a list, as described in
requireparam = *(

                     ; the following is optional,
                        ; but MUST NOT occur more than once

                     (";" languageparam ) / (";" altrepparam )
                     (";" nsrefparam ) /
                     ; the following is optional,
                        ; and MAY occur more than once

                     (";" xparam)
                         )

Recommended       =    "RECOMMENDED" recommendedparam ":" text CRLF

                        ; It is RECOMMENDED that the text value be
                        ; chosen from a list, as described in
recommendedparam =    *(

                        ; the following is optional,
                           ; but MUST NOT occur more than once

                        (";" languageparam ) / (";" altrepparam )
                        (";" nsrefparam ) /
                        ; the following is optional,
                           ; and MAY occur more than once

                        (";" xparam)
                            )

prohibited       =    "PROHIBITED" prohibitedparam ":" text CRLF

                        ; It is RECOMMENDED that the text value be
                           ; chosen from a list, as described in
prohibitedparam       =    *(

                        ; the following is optional,
                           ; but MUST NOT occur more than once

                        (";" languageparam ) / (";" altrepparam ) /
                        (";" nsrefparam ) /

                        ; the following is optional,
                           ; and MAY occur more than once

                        (";" xparam)
                            )

price             =    "PRICE" priceparam ":" price CRLF

priceparam        = *(

                             ; the following is optional,
                             ; but MUST NOT occur more than once

                        (";" languageparam ) / (";" altrepparam ) /
                        (";" itemparam) / (";" currencyparam)
                        (";" nsrefparam ) /

                         )



                        ; The text value COULD be
                        ; chosen from a list, as described in
price             =    float

currencyparam     =   "CURRENCY" "=" <currency code as
                           defined in
bookings        =    "BOOKINGS" bookingsparam ":" text CRLF

bookingsparam   =    *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once

                        (";" languageparam ) / (";" altrepparam ) /
                        (";" optimeset) / (";" nsrefparam ) /
                        (";"  itemparam )  /

                        ; the following is optional,
                        ; and MAY occur more than once

                        (";" xparam)


access  =  "ACCESS" itemparam ":" boolean CRLF

                      ; It is RECOMMENDED that the text value be
                      ; chosen from a list, as described in
paymethod    =    "PAYMETHOD" paymethodparam ":" text CRLF

                        ; It is RECOMMENDED that the text value be
                        ; chosen from a list, as described in
paymethodparam      =   *(

                        ; the following is optional,
                        ; but MUST NOT occur more than once

                        (";" altrepparam ) / (";" nsrefparam ) /
                        (";" itemparam )   / (";" optimeset )  /
                        ; the following is optional,
                        ; and MAY occur more than once

                        (";" xparam)

                        )

promo          =    "PROMO" promoparam ":" [ TEXT ] CRLF

promoparam     =    *(

                     ; the following is optional,
                     ; but MUST NOT occur more than once

                     (";" altrepparam) / (";" languageparam)  /
                     (";" nsrefparam) /  (";" itemparam) /
                     ; the following is optional,
                     ; and MAY occur more than once

                     (";" xparam)

                     )

control          =    "CONTROL" controlparam ":"   uri CRLF

                       ; the value MAY be a MAILTO URI, as defined
                       ; by
controlparam     =    *(

                     ; the following is optional,
                     ; but MUST NOT occur more than once


                     (";" languageparam ) / (";" cnparam )    /
                     (";" skiroleparam)   / (";" altrepparam) /
                     (";" nsrefparam )    / (";"  itemparam ) /
                     (";"  optimeset )    /

                       ; It is highly RECOMMENDED that SKiCal
                       ; objects actually
                       ; use the cnparam since some applications will not
                       ; bother to read the altrep'ed vCard.
                       ; the following is optional,
                       ; and MAY occur more than once
                       (";" xparam)

                       )

publisher       = "PUBLISHER" publisherparam ":" mailto CRLF

publisherparam  =    *(

                     ; the following is optional,
                     ; but MUST NOT occur more than once

                     (";" cnparam ) / (";" nsrefparam )  /
                     (";" skiroleparam)   / (";" altrepparam) /


                     ; the following is optional,
                     ; and MAY occur more than once

                     (";" xparam)

                     )

skicalver    = "SKICALVER" skicalverparam ":" vervalue CRLF

skicalverparam   = *(";" xparam)

vervalue   = "1.0"         ;This memo
                   / maxver
                   / (minver ";" maxver)

minver     = <A IANA registered SKiCal version identifier>

maxver     = <A IANA registered SkiCal version identifier>

namespace       =  "NAMESPACE" namespaceparam ":" uri CRLF

namespaceparam  =  ";" "PREFIX" "=" prefix

prefix          =  text

                         ; the following is optional,
                         ; but MUST NOT occur more than once

                         (";" languageparam ) /

                         ; the following is optional,
                         ; and MAY occur more than once

                         (";" xparam)

                         )

WKST=MO;BYDAY=MO,TU,WE,TH,FR,SA
