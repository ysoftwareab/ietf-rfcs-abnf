TAInformationTBS={
cacert=(
COSE_Sign = [
          Headers,
          payload : bstr / nil,
          signatures : [+ COSE_Signature]
COSE_Signature =  [
          Headers,
          signature : bstr
COSE_Encrypt = [
          Headers,
          ciphertext : bstr / nil,
          recipients : [+COSE_recipient]
COSE_recipient = [
          Headers,
          ciphertext : bstr / nil,
          ? recipients : [+COSE_recipient]
GetDeviceStateTBSRequest={
         ver              :   tstr,     ;1.0
         rid              :   tstr,     ;Unique request ID
         tid              :   tstr,     ;transaction ID
         ocspdat          :   bstr,     ;OCSP stapling data of TSM certificate
         icaocspdat       :   bstr,     ;OCSP stapling data for TSM CA certificates
         supportedsigalgs :   bstr,     ;comma separated signing algorithms

GetDeviceTEEStateTBSResponse={
         ver              :     1.0,
         status           :     pass/fail,
         rid              :     tstr,        ;the request ID from the request message
         tid              :     tstr,        ;transaction ID
         signerreq        :     true/false   ;whether TSM needs to send signer data again in subsequent messages
         edsi             :     bstr         ;Encrypted CBOR dsi information

dsi={
   tfwdata    :   tfwdata,
   tee        :   tee,
    }

tfwdata={
tee ={
sdlist ={
sd=[
talist=[
teeaiklist=[*teeaiklist]

teeaiklist=[
CreateSDRequest={
         ver              :     1.0,
         rid              :     tstr,         ;Unique request ID
         tid              :     tstr,         ;Transaction ID
         tee              :     tstr,         ; OCSP stapling data of TSM certificate
         nextdsi          :     true/false,
         dsihash          :     bstr,         ;hash of DSI returned in the prior query
         content          :     content,      ;his piece of data will beencrypted
      }

content ={
         spid             :     tstr,         ;SP ID value
         sdname           :     tstr,         ;SD name for the domain to be created
         spcert           :     tstr,         ;SP certificate
         tsmid            :     tstr,         ;An identifiable attribute of the TSM certificate
         did              :     bstr,         ;SHA256 hash of the TEE cert
CreateSDTBSResponse={
         ver              :     1.0,         ;version
         status           :     bstr,        ;operation result
         rid              :     tstr,        ;Unique request ID
         tid              :     tstr,        ;Transaction ID
         content          :     content,     ;this piece of data will beencrypted
      }

content ={
         reason           :     bstr,        ;failure reason detail
         did              :     bstr,        ;the device id received from the request
         sdname           :     tstr,        ;SD name for the domain to be created
         teespaik         :     bstr,        ;SP certificate
         dsi              :     bstr,        ;Updated TEE state, including all SD owned by this TSM
InstallTATBSRequest={
         ver              :     1.0,
         rid              :     tstr,         ;Unique request ID
         tid              :     tstr,         ;Transaction ID
         tee              :     tstr,         ; OCSP stapling data of TSM certificate
         nextdsi          :     true/false,
         dsihash          :     bstr,         ;hash of DSI returned in the prior query
         content          :     content,      ;this piece of data will beencrypted
         encrypted_ta     :     encrypted_ta  ;encrypted_ta
      }

content ={
         tsmid            :     tstr,         ;TSM ID previously assigned to the SD
         spid             :     tstr,         ;SPID value
         sdname           :     tstr,         ;SD name for the domain to install the TA
         spcert           :     bstr,         ;SP certificate
         taid             :     tstr,         ;TA identifier
encrypted_ta={
         key           :   bstr,    ;A 256-bit symmetric key encrypted by TEEspaik public key
         iv            :   bstr,    ;hex of 16 random bytes
         alg           :   tstr,    ;encryption algoritm. AESCBC by default.
         ciphertadata  :   bstr,    ;encrypted TA binary data
         cipherpdata   :   bstr,    ;encrypted TA personalization data
InstallTATBSResponse={
         ver              :     1.0,
         status           :     bstr,         ;operation result
         rid              :     tstr,         ;Unique request ID
         tid              :     tstr,         ;Transaction ID
         content          :     content,      ;this piece of data will be encrypted
      }

content ={
         reason           :     bstr,         ;failure reason detail
         did              :     bstr,         ;the device id received from the request
         dsi              :     tstr,         ;the device id hash
