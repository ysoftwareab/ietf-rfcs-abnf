


Network Working Group                                         F. Templin
Internet-Draft                                                     Nokia
Expires: September 24, 2003                               March 26, 2003


               Path MTU Support for IPv6-in-IPv4 Tunnels
                     draft-templin-tunnelmtu-00.txt

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups. Note that other
   groups may also distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on September 24, 2003.

Copyright Notice

   Copyright (C) The Internet Society (2003). All Rights Reserved.

Abstract

   This document specifies a means for IPv6-in-IPv4 tunnels to
   participate in IPv6 path MTU discovery. Also specified is a means for
   the tunnel decapsulator to inform the encapsulator of appropriate
   per-neighbor MTU values using IPv6 neighbor discovery.












Templin                Expires September 24, 2003               [Page 1]

Internet-Draft                 Tunnel MTU                     March 2003


Table of Contents

   1. Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . 3
   2. Static MTU Determination . . . . . . . . . . . . . . . . . . . . 3
   3. Dynamic MTU Determination  . . . . . . . . . . . . . . . . . . . 3
   4. Additional Notes . . . . . . . . . . . . . . . . . . . . . . . . 6
   5. IANA Considerations  . . . . . . . . . . . . . . . . . . . . . . 6
   6. Security considerations  . . . . . . . . . . . . . . . . . . . . 6
   7. Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . . 6
      Normative References . . . . . . . . . . . . . . . . . . . . . . 7
      Informative References . . . . . . . . . . . . . . . . . . . . . 8
      Author's Address . . . . . . . . . . . . . . . . . . . . . . . . 8
      Intellectual Property and Copyright Statements . . . . . . . . . 9






































Templin                Expires September 24, 2003               [Page 2]

Internet-Draft                 Tunnel MTU                     March 2003


1. Introduction

   IPv6-in-IPv4 tunnels use IPv4 as a link layer for IPv6. The tunnel
   encapsulator and decapsulator are IPv6 neighbors, but packets inside
   the tunnel may traverse multiple IPv4 forwarding hops. Thus the MTU
   of the IPv4 path within the tunnel determines the IPv6 MTU for the
   tunnel.

   Packets that are too large to traverse the tunnel must be discarded
   with an ICMPv6 "packet too big" message [RFC2463] returned to the
   source, as required by IPv6 Path MTU discovery [RFC1981]. But,
   reliance on IPv4 path MTU discovery [RFC1191] within the tunnel can
   lead to black holes that are difficult to diagnose [RFC2923]. Thus,
   an alternate means for IPv6-in-IPv4 tunnels to participate in IPv6
   path MTU discovery is needed and specified in this document.

2. Static MTU Determination

   IPv6-in-IPv4 tunnels that do not implement a dynamic MTU
   determination mechanism (see: Section 3) should use an interface MTU,
   i.e. "LinkMTU" ([RFC2461], section 6.3.2), that is no larger than the
   smallest known Effective MTU to Receive (EMTU_R) ([RFC1122], section
   3.3.2) for all potential decapsulators. The tunnel encapsulator sends
   all IPv6 packets that are no larger than LinkMTU with the DF bit not
   set in the encapsulating IPv4 header. Other packets are discarded,
   with an ICMPv6 "packet too big" message returned to the sender.

   LinkMTU must be at least 1280 bytes (the minimum IPv6 MTU [RFC2460])
   and should otherwise be chosen to minimize IPv4 fragmentation within
   the tunnel. For example, when all potential decapsulators are known
   to have an EMTU_R of 10KB and the IPv4 network is known to support
   large MTUs, the encapsulator may use LinkMTU values as large as 10KB
   (minus overhead for encapsulation). Conversely, when excessive IPv4
   fragmentation is anticipated along some paths, LinkMTU should be set
   to a smaller value.

   All IPv6 packets with multicast/anycast destination addresses use the
   static MTU determination specified above.

3. Dynamic MTU Determination

   IPv6-in-IPv4 tunnels appear as a single hop at the IPv6 level with
   (possibly) multiple IPv4 hops occurring inside the tunnel. IPv4 path
   MTU discovery [RFC1191] uses ICMPv4 "fragmentation needed" messages
   which may not provide enough information for stateless translation to
   ICMPv6 ([RFC0792], [RFC1812], section 4.3.2.3). Additionally, ICMPv4
   "fragmentation needed" messages can be spoofed, filtered, or not sent
   at all by some forwarding nodes. Thus, IPv4 path MTU discovery may



Templin                Expires September 24, 2003               [Page 3]

Internet-Draft                 Tunnel MTU                     March 2003


   result in black holes that are difficult to diagnose [RFC2923].

   When RFC 1191 path MTU discovery is deemed inadequate, dynamic tunnel
   MTU determination may be implemented as follows:

3.1 Interface Initialization

   The encapsulator sets LinkMTU for the tunnel interface to the MTU of
   the underlying IPv4 link, minus overhead for IPv6-in-IPv4
   encapsulation. If the tunnel is configured over multiple underlying
   IPv4 links, the largest underlying link MTU is used and
   locally-generated ICMPv6 "packet too big" messages may result from
   within the tunnel interface. The encapsulator additionally keeps a
   link layer cache of per-neighbor MTU values, e.g., as ancillary data
   in the IPv6 neighbor cache, in the IPv4 path MTU discovery cache,
   etc.

3.2 Tunnel Endpoint Negotiation

   When the encapsulator has a large IPv6 packet to send to a
   decapsulator for which there is no per-neighbor cache state, it
   performs an initial Neighbor Solicitation/Neighbor Advertisement
   exchange as in ([RFC2461], sections 7.2.2-7.2.3). If the decapsulator
   implements the dynamic MTU determination specified herein, it returns
   a Neighbor Advertisement message containing an MTU option [NDISCMTU]
   with a value to be used as the initial MTU estimate. If the Neighbor
   Advertisement message does NOT contain an MTU option, the
   encapsulator instead uses the static MTU determination specified in
   Section 2 or an alternate dynamic MTU determination method (e.g.,
   Section 3.5) for this decapsulator.

3.3 Encapsulator Actions

   The encapsulator sends packets with the DF bit NOT set in the
   encapsulating IPv4 header with the expectation that the decapsulator
   will send an unsolicited Neighbor Advertisement message with an MTU
   option [NDISCMTU] if IPv4 fragmentation occurs inside the tunnel.

   The encapsulator can probe the tunnel path MTU by null-padding
   ordinary IPv6 data packets, i.e., by inflating the length field in
   the IPv4 header ([MECH], section 3.5). When the encapsulator receives
   an unsolicited Neighbor Advertisement message with an MTU option, it
   records the value in the per-neighbor MTU cache described above.

   As in the static case, IPv6 packets that are larger than the tunnel
   interface LinkMTU are discarded with an ICMPv6 "packet too big"
   message returned to the sender. In the dynamic case, the encapsulator
   also performs these actions for IPv6 packts that are larger than the



Templin                Expires September 24, 2003               [Page 4]

Internet-Draft                 Tunnel MTU                     March 2003


   MTU value for the decapsulator in the neighbor cache.

3.4 Decapsulator Actions

   The decapsulator monitors fragmented IPv4 packets arriving from the
   tunnel. If a fragmented packet arrives, the decapsulator sends an
   unsolicited Neighbor Advertisement message with an MTU option
   [NDISCMTU] to inform the encapsulator of a new MTU value. The new
   value is chosen such that subsequent packets from the encapsulator
   will not incur IPv4 fragmentation.

   If the IPv4 first fragment does not fully contain the encapsulated
   IPv6 packet (i.e., if fragmentation was NOT due to padding bytes),
   the decapsulator also discards the packet and sends an ICMPv6 "packet
   too big" message to the source. This action is taken even if the
   decapsulator could correctly reassemble the packet, since IPv6
   packets are not permitted to be fragmented by the network.

3.5 Alternate Method

   When the decapsulator does not implement the above specified scheme,
   or when the above-specified scheme is not desired, the encapsulator
   can probe the path MTU to the decapsulator using an alternate method,
   e.g., as specified below.

   In this method, the encapsulator sets the DF bit in the IPv4 header
   of probe packets. Probe packets may be sent either when the
   encapsulator forwards a large data packet to the decapsulator (i.e.,
   on-demand) or when the path MTU for the decapsulator has not been
   verified for some time (i.e., periodic). IPv6 Neighbor Solicitation
   (NS) or ICMPv6 ECHO_REQUEST packets with padding bytes added could be
   used for this purpose, since successful delivery results in a
   positive acknowledgement that the probe succeeded vis-a-vis a
   response from the decapsulator.

   While probing, the encapsulator maintains a queue of packets that use
   the decapsulator as the IPv6 next-hop. If the probe succeeds, packets
   in the queue that are no larger than the probe size are sent to the
   decapsulator. If the probe fails, packets that are larger than the
   last known successful probe are dropped and an ICMPv6 "packet too
   big" message returned to the sender [RFC1981]. The queue should be
   large enough to buffer the (delay*bandwidth) product for the
   round-trip time to the decapsulator. When smaller queues are used,
   loss of packets that are too big for the yet-to-be-determined path
   MTU may occur with no ICMPv6 "packet too big" message returned. Such
   loss may occur only in rare instances, but may result in
   unpredictable behavior in senders that base their adaptation solely
   on ICMPv6 "packet too big" messages.



Templin                Expires September 24, 2003               [Page 5]

Internet-Draft                 Tunnel MTU                     March 2003


4. Additional Notes

   1.  A "MinMTU" value must be supported by all nodes for multicast/
       anycast using the static MTU determination scheme. (The dynamic
       MTU determination scheme applies only for unicast.) MinMTU is
       configured such that: 1280 <= MinMTU <= LinkMTU.

   2.  The specifications above are easily extended to include
       differentiated service (DS) information to provide accurate MTU
       estimates when multipath routing is used.

   3.  To avoid superfluous probing based on counting down/up by small
       increments, plateau tables (e.g., [RFC1191], section 7) should be
       used when the actual MTU value is indeterminant.

   4.  Some forwarding nodes may have broken/non-existent IPv4
       fragmentation implementations. Thus, the fragmentation-sensing
       method described above may be susceptible to black holes along
       some forwarding paths. The encapsulator can avoid black holes by
       periodically sending locally-fragmented probe packets to elicit
       responses from decapsulators.

   5.  When the fragmentation sensing scheme is used, some
       implementations may wish to send only probe packets with the DF
       bit not set and all other packets with the DF bit *set* in order
       to generate IPv4 "fragmentation needed" messages from the
       network. This method has the advantage that packets that are too
       big are discarded before reaching the decapsulator, but is
       susceptible to the same denial-of-service attacks as for IPv4
       path MTU discovery.


5. IANA Considerations

   N/A

6. Security considerations

   Security issues are the same as for IPv6 neighbor discovery.
   Works-in-progress from the IETF SEcuring NEighbor Discovery (SEND)
   working group may provide future solutions.

7. Acknowledgements

   Most of the ideas expressed in this document are not new and borrow
   from earlier mailing list discussions. The fragmentation-sensing
   method (described in Section 3.1 through Section 3.4) was inspired by
   a scheme proposed by Charles Lynn on the TCP-IP discussion list in



Templin                Expires September 24, 2003               [Page 6]

Internet-Draft                 Tunnel MTU                     March 2003


   November 1987. The alternate method (descrbed in Section 3.5) bears
   close relation to a scheme proposed by Dave Borman on the IPng
   mailing list in August 1999. Other ideas in the draft may have
   borrowed to some extent from discussions on the IETF MTU Discovery WG
   mailing list from November 1989 - February 1995 and discussions on
   the IETF NGTRANS WG mailing list in August 2002.

   The author would like to acknowledge certain individuals for helpful
   discussion on this subject, including Ralph Droms, Tim Gleeson,
   Jun-ichiro itojun Hagino, Bob Hinden, Christian Huitema, Kevin Lahey,
   Matt Mathis, Jeff Mogul, Erik Nordmark, Dave Thaler, Lixia Zhang and
   the members of the Nokia NRC/COM Mountain View team.

Normative References

   [MECH]     Gilligan, R. and E. Nordmark, "Basic Transition Mechanisms
              for IPv6 Hosts and Routers", draft-ietf-v6ops-mech-v2-00
              (work in progress), February 2003.

   [NDISCMTU]
              Templin, F., "MTU Issues in IPv6 Neighbor Discovery",
              draft-templin-ndiscmtu-00 (work in progress), February
              2003.

   [RFC0792]  Postel, J., "Internet Control Message Protocol", STD 5,
              RFC 792, September 1981.

   [RFC1122]  Braden, R., "Requirements for Internet Hosts -
              Communication Layers", STD 3, RFC 1122, October 1989.

   [RFC1191]  Mogul, J. and S. Deering, "Path MTU discovery", RFC 1191,
              November 1990.

   [RFC1812]  Baker, F., "Requirements for IP Version 4 Routers", RFC
              1812, June 1995.

   [RFC1981]  McCann, J., Deering, S. and J. Mogul, "Path MTU Discovery
              for IP version 6", RFC 1981, August 1996.

   [RFC2460]  Deering, S. and R. Hinden, "Internet Protocol, Version 6
              (IPv6) Specification", RFC 2460, December 1998.

   [RFC2461]  Narten, T., Nordmark, E. and W. Simpson, "Neighbor
              Discovery for IP Version 6 (IPv6)", RFC 2461, December
              1998.

   [RFC2463]  Conta, A. and S. Deering, "Internet Control Message
              Protocol (ICMPv6) for the Internet Protocol Version 6



Templin                Expires September 24, 2003               [Page 7]

Internet-Draft                 Tunnel MTU                     March 2003


              (IPv6) Specification", RFC 2463, December 1998.

Informative References

   [RFC2923]  Lahey, K., "TCP Problems with Path MTU Discovery", RFC
              2923, September 2000.


Author's Address

   Fred L. Templin
   Nokia
   313 Fairchild Drive
   Mountain View, CA  94110
   US

   Phone: +1 650 625 2331
   EMail: ftemplin@iprg.nokia.com

































Templin                Expires September 24, 2003               [Page 8]

Internet-Draft                 Tunnel MTU                     March 2003


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights. Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11. Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard. Please address the information to the IETF Executive
   Director.


Full Copyright Statement

   Copyright (C) The Internet Society (2003). All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works. However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assignees.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION



Templin                Expires September 24, 2003               [Page 9]

Internet-Draft                 Tunnel MTU                     March 2003


   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.











































Templin                Expires September 24, 2003              [Page 10]


