w=w<<i
w=w+c[j]
w=w/94

error = FALSE;

iReadBytes = 9;
iConvertedBytes = 11;
iWrittenBytes = 11;
iConvertedBytes = NTEEncode(cReadBuffer, iReadBytes,
                                            cWriteBuffer);
iWrittenBytes = fwrite(cWriteBuffer, 1, 
iReadBytes = 11;
iConvertedBytes = 9;
iWrittenBytes = 9;
iConvertedBytes = NTEDecode(cReadBuffer, iReadBytes,
                                            cWriteBuffer);
iWrittenBytes = fwrite(cWriteBuffer, 1, 
error = TRUE;
error = TRUE;
error = TRUE;
iResNum = 0;
iCounter = 0;
wBlock = cInBuffer[iCounter++]; /* 1st in */
cBlock = cInBuffer[iCounter++]; /* 2nd in */
wBlock = (wBlock << 5) | (cBlock >> 3);
wBlock = (wBlock << 3) | (cBlock & 0x07);
cBlock = cInBuffer[iCounter++]; /* 3rd in */
wBlock = (wBlock << 3) | (cBlock >> 5);
wBlock = (wBlock << 5) | (cBlock & 0x1f);
cBlock = cInBuffer[iCounter++]; /* 4th in */
wBlock = (wBlock << 2) | (cBlock >> 6);
wBlock = (wBlock << 6) | (cBlock & 0x3f);
cBlock = cInBuffer[iCounter++]; /* 5th in */
wBlock = (wBlock << 7) | (cBlock >> 1);
wBlock = (wBlock << 1) | (cBlock & 0x01);
cBlock = cInBuffer[iCounter++]; /* 6th in */
wBlock = (wBlock << 5) | (cBlock >> 3);
wBlock = (wBlock << 3) | (cBlock & 0x07);
cBlock = cInBuffer[iCounter++]; /* 7th in */
wBlock = (wBlock << 4) | (cBlock >> 4);
wBlock = (wBlock << 4) | (cBlock & 0x0f);
cBlock = cInBuffer[iCounter++]; /* 8th in */
wBlock = (wBlock << 2) | (cBlock >> 6);
wBlock = (wBlock << 6) | (cBlock & 0x3f);
cBlock = cInBuffer[iCounter++]; /* 9th in */
wBlock = (wBlock << 1) | (cBlock >> 7);
wBlock = (wBlock << 6) | ((cBlock >> 1) & 0x3f);
wBlock = (wBlock << 1) | (cBlock & 0x01);
iCounter = 0;
wBlock = cInBuffer[iCounter++]; /* 1st in */
wBlock = wBlock << 5;
cBlock = cInBuffer[iCounter++]; /* 2nd in */
wBlock = wBlock | (cBlock >> 3);
wBlock = ((wBlock << 3) | (cBlock & 0x07)) << 3;
cBlock = cInBuffer[iCounter++]; /* 3rd in */
wBlock = wBlock | (cBlock >> 5);
wBlock = ((wBlock << 5) | (cBlock & 0x1f)) << 2;
cBlock = cInBuffer[iCounter++]; /* 4th in */
wBlock = wBlock | (cBlock >> 6);
wBlock = (wBlock << 6) | (cBlock & 0x3f);
cBlock = cInBuffer[iCounter++]; /* 5th in */
wBlock = (wBlock << 7) | (cBlock >> 1);
wBlock = ((wBlock << 1) | (cBlock & 0x01)) << 5;
cBlock = cInBuffer[iCounter++]; /* 6th in */
wBlock = wBlock | (cBlock >> 3);
wBlock = ((wBlock << 3) | (cBlock & 0x07)) << 4;
cBlock = cInBuffer[iCounter++]; /* 7th in */
wBlock = wBlock | (cBlock >> 4);
wBlock = ((wBlock << 4) | (cBlock & 0x0f)) << 2;
cBlock = cInBuffer[iCounter++]; /* 8th in */
wBlock = wBlock | (cBlock >> 6);
wBlock = ((wBlock << 6) | (cBlock & 0x3f)) << 1;
wB = *wBlock;
cResult = (*wBlock % 94) + 33;
iResNum = 9;
iPos = 11;
wBlock = cInBuffer[--iPos] - 33; /* 11th in */
cBlock = wBlock & 0x01;
wBlock = ((wBlock >> 1) * 94) + (cInBuffer[--iPos] - 33); /* 
cBlock = ((wBlock & 0x3f) << 1) | cBlock;
wBlock = ((wBlock >> 6) * 94) + (cInBuffer[--iPos] - 33); /* 9th 
cBlock = ((wBlock & 0x01) << 7) | cBlock;
cBlock = (wBlock >> 1) & 0x3f;
wBlock = ((wBlock >> 7) * 94) + (cInBuffer[--iPos] - 33); /* 8th 
cBlock = ((wBlock & 0x03) << 6) | cBlock;
cBlock = (wBlock >> 2) & 0x0f;
wBlock = ((wBlock >> 6) * 94) + (cInBuffer[--iPos] - 33); /* 7th 
cBlock = ((wBlock & 0x0f) << 4) | cBlock;
cBlock = (wBlock >> 4) & 0x07;
wBlock = ((wBlock >> 7) * 94) + (cInBuffer[--iPos] - 33); /* 6th 
cBlock = ((wBlock & 0x1f) << 3) | cBlock;
cBlock = (wBlock >> 5) & 0x01;
wBlock = ((wBlock >> 6) * 94) + (cInBuffer[--iPos] - 33); /* 5th 
cBlock = ((wBlock & 0x7f) << 1) | cBlock;
wBlock = ((wBlock >> 7) * 94) + (cInBuffer[--iPos] - 33); /* 4th 
cBlock = wBlock & 0x3f;
wBlock = ((wBlock >> 6) * 94) + (cInBuffer[--iPos] - 33); /* 3rd 
cBlock = ((wBlock & 0x03) << 6) | cBlock;
cBlock = (wBlock >> 2) & 0x1f;
wBlock = ((wBlock >> 7) * 94) + (cInBuffer[--iPos] - 33); /* 2nd 
cBlock = ((wBlock & 0x07) << 5) | cBlock;
cBlock = (wBlock >> 3) & 0x07;
wBlock = ((wBlock >> 6) * 94) + (cInBuffer[--iPos] - 33); /* 1st 
cBlock = ((wBlock & 0x1f) << 3) | cBlock;
cBlock = wBlock >> 5;
iResNum = 9 - iResNum;
iPos = iInBufferSize;
wBlock = cInBuffer[--iPos] - 33; /* last in */
cBlock = 0;
iResNum = 8;
wBlock = ((wBlock >> 6) * 94) + (cInBuffer[--iPos] - 33); /* 
cBlock = ((wBlock >> 1) & 0x3f);
wBlock = wBlock >> 7;
wBlock = (wBlock * 94) + (cInBuffer[--iPos] - 33); /* 8th in 
cBlock = ((wBlock & 0x03) << 6) | cBlock;
cBlock = ((wBlock >> 2) & 0x0f);
wBlock = wBlock >> 6;
wBlock = (wBlock * 94) + (cInBuffer[--iPos] - 33); /* 7th in 
cBlock = ((wBlock & 0x0f) << 4) | cBlock;
cBlock = ((wBlock >> 4) & 0x07);
wBlock = wBlock >> 7;
wBlock = (wBlock * 94) + (cInBuffer[--iPos] - 33); /* 6th in 
cBlock = ((wBlock & 0x1f) << 3) | cBlock;
cBlock = ((wBlock >> 5) & 0x01);
wBlock = wBlock >> 6;
wBlock = (wBlock * 94) + (cInBuffer[--iPos] - 33); /* 5th in 
cBlock = ((wBlock & 0x7f) << 1) | cBlock;
wBlock = wBlock >> 7;
wBlock = (wBlock * 94) + (cInBuffer[--iPos] - 33); /* 4th in 
cBlock = wBlock & 0x3f;
wBlock = wBlock >> 6;
wBlock = (wBlock * 94) + (cInBuffer[--iPos] - 33); /* 3rd in 
cBlock = ((wBlock & 0x03) << 6) | cBlock;
cBlock = ((wBlock >> 2) & 0x1f);
wBlock = wBlock >> 7;
wBlock = (wBlock * 94) + (cInBuffer[--iPos] - 33); /* 2nd in 
cBlock = ((wBlock & 0x07) << 5) | cBlock;
cBlock = ((wBlock >> 3) & 0x07);
wBlock = wBlock >> 6;
wBlock = (wBlock * 94) + (cInBuffer[--iPos] - 33); /* 1st in 
cBlock = ((wBlock & 0x1f) << 3) | cBlock;
wBlock = wBlock >> 5;
