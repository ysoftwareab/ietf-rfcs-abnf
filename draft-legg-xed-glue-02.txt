INTERNET-DRAFT                                                   S. Legg
draft-legg-xed-glue-02.txt                           Adacel Technologies
Intended Category: Standards Track                             D. Prager
                                                       Deakin University
                                                           June 15, 2004


         The XML Enabled Directory: Schema Language Integration

    Copyright (C) The Internet Society (2004). All Rights Reserved.

   Status of this Memo


   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as
   Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress".

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   Distribution of this document is unlimited.  Technical discussion of
   this document should take place on the XED developers mailing list
   <xeddev@adacel.com>.  Please send editorial comments directly to the
   editor <steven.legg@adacel.com.au>.

   This Internet-Draft expires on 15 December 2004.


Abstract

   This document defines the means by which an Abstract Syntax Notation
   One (ASN.1) specification can incorporate the definitions of types
   and elements in specifications written in other Extensible Markup
   Language (XML) schema languages.  References to XML Schema types and
   elements, RELAX NG named patterns and elements, and Document Type



Legg & Prager           Expires 15 December 2004                [Page 1]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


   Declaration element types are supported.

Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  2
   2.  Conventions. . . . . . . . . . . . . . . . . . . . . . . . . .  2
   3.  Representing Markup as ASN.1 Values. . . . . . . . . . . . . .  3
   4.  Supporting ASN.1 Types . . . . . . . . . . . . . . . . . . . .  5
       4.1.  The AnyURI Type. . . . . . . . . . . . . . . . . . . . .  5
       4.2.  The NCName Type. . . . . . . . . . . . . . . . . . . . .  6
       4.3.  The Name Type. . . . . . . . . . . . . . . . . . . . . .  6
   5.  Referencing Foreign Types. . . . . . . . . . . . . . . . . . .  6
       5.1.  Referencing Type Definitions . . . . . . . . . . . . . .  6
       5.2.  DTD Element Types as Types . . . . . . . . . . . . . . .  8
   6.  Referencing Foreign Elements . . . . . . . . . . . . . . . . .  9
       6.1.  Referencing Element Definitions. . . . . . . . . . . . . 10
       6.2.  DTD Element Types as Elements. . . . . . . . . . . . . . 11
   7.  Security Considerations. . . . . . . . . . . . . . . . . . . . 12
   8.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 12
   9.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 12
       9.1.  Normative References . . . . . . . . . . . . . . . . . . 12
       9.2.  Informative References . . . . . . . . . . . . . . . . . 13
   Appendix A. ASN.1 for Schema Language Integration. . . . . . . . . 14
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 15
   Full Copyright Statement . . . . . . . . . . . . . . . . . . . . . 16

1.  Introduction

   This document defines the means by which an Abstract Syntax Notation
   One (ASN.1) [X680] specification can incorporate the definitions of
   types and elements in specifications written in other Extensible
   Markup Language (XML) [XML] schema languages.  References to
   XML Schema [XSD1] types and elements, RELAX NG [RNG] named patterns
   and elements, and Document Type Declaration (DTD) [XML] element types
   are supported.

   Non-ASN.1 definitions are supported by first defining an ASN.1 type
   whose values can contain arbitrary markup, and then defining
   constraints on that type to restrict the content to specific
   nominated datatypes from non-ASN.1 schema definitions.

   The ASN.1 definitions in this document are consolidated in
   Appendix A.

2.  Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", and "MAY" in this document are



Legg & Prager           Expires 15 December 2004                [Page 2]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


   to be interpreted as described in BCP 14, RFC 2119 [BCP14].  The key
   word "OPTIONAL" is exclusively used with its ASN.1 meaning.

   This specification makes use of definitions from the XML Information
   Set (Infoset) [ISET].  The term "element" shall be taken to mean an
   Infoset element information item.  The term "attribute" shall be
   taken to mean an Infoset attribute information item.

   A reference to a ASN.1 production [X680] (e.g., Value,
   UserDefinedConstraint) is a reference to the text in an ASN.1
   specification corresponding to that production.

3.  Representing Markup as ASN.1 Values

   A value of the AnyType ASN.1 type holds arbitrary content of an
   element (but not the start-tag and end-tag, or empty-element tag),
   plus the context required to correctly interpret that content.

      AnyType ::= CHOICE {
          text    [0] SEQUENCE {
              prolog      [0] UTF8String (SIZE(1..MAX)) OPTIONAL,
              context     [1] UTF8String (SIZE(1..MAX)) OPTIONAL,
              attributes  [2] UTF8String (SIZE(1..MAX)) OPTIONAL,
              content     [3] UTF8String (SIZE(1..MAX)) OPTIONAL } }
      }

   The text alternative of the AnyType CHOICE type provides for the
   [attributes] and [children] of an element to be represented as
   verbatim text using the UTF-8 character encoding.  The CHOICE allows
   for one or more alternative compact representations of the content of
   elements to be supported in a future specification.

   With respect to some element whose content is represented by a value
   of the text alternative of the AnyType type:

    - the prolog component of the value contains, from the XML document
      containing the element, the text corresponding to the prolog
      production [XML], or the sufficient (well-formed and valid) part
      thereof to define the entity references appearing in the context,
      attributes and content components of the value,

    - the context component of the value contains a whitespace separated
      list of the [namespace attributes] of the ancestors of the
      element, if any, plus any [attributes] of the ancestor elements
      which are inherited by their element children,

    - the attributes component of the value contains text corresponding
      to the [attributes] of the element, if any,



Legg & Prager           Expires 15 December 2004                [Page 3]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


    - the content component of the value contains the text of the
      content of the element between the start-tag and end-tag.  The
      component is absent if there are no characters between the
      start-tag and end-tag, or if the element uses an empty-element
      tag.

   Leading and trailing whitespace corresponding to the S production
   [XML] in the prolog, context and attributes components MAY be
   omitted.  Multiple whitespace characters corresponding to the S
   production in the prolog, context and attributes components MAY be
   replaced with a single space character.

   Any entity references in the context, attributes and content
   components MAY be replaced by their replacement text so that the
   prolog component can be omitted.

   If the prolog component is absent then XML version 1.0 is assumed.

   Note that the Robust XML Encoding Rules [RXER] have special
   provisions for encoding values of the AnyType type.  For other
   encoding rules, values of the AnyType type are encoded according to
   the ASN.1 type definition of AnyType.

   Example

      Consider the following XML document:

         <?xml version='1.0'?>
         <!DOCTYPE root [
             <!ENTITY TRUE 'true'>
         ]>
         <root xmlns:ns="http://www.example.com/SLI">
          <example ns:foo="1" bar="0">
           <this>&TRUE;</this>
           <that/>
          </example>
         </root>

      The AnyType value corresponding to the content of the <example>
      element is, in ASN.1 value notation [X680]:

         text:{
             prolog     { "<?xml version='1.0'?>", lf,
                          "<!DOCTYPE root [", lf
                          "    <!ENTITY TRUE 'true'>", lf
                          "]>", lf },
             context    "xmlns:ns=""http://www.example.com/SLI""",
             attributes " ns:foo=""1"" bar=""0""",



Legg & Prager           Expires 15 December 2004                [Page 4]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


             content    { lf,
                          "  <this>&TRUE;</this>", lf,
                          "  <that/>", lf, " " }
         }

      The following AnyType value is also an acceptable representation
      of the content of the <example> element:

         text:{
             context    "xmlns:ns=""http://www.example.com/SLI""",
             attributes "bar=""0"" ns:foo=""1""",
             content    { lf,
                          "  <this>true</this>", lf,
                          "  <that/>", lf, " " }
         }

   By itself the AnyType ASN.1 type imposes no datatype restriction on
   the markup contained by its values, and is therefore analogous to the
   XML Schema anyType [XSD1].

   There is no ASN.1 notation that can directly impose the constraint
   that a value of the AnyType type must conform to the markup allowed
   by a specific non-ASN.1 definition.  However, UserDefinedConstraint
   notation [X682] can be exploited to provide parameters to nominated
   predefined constraints that have the desired effect.  A predefined
   constraint is identified by an OBJECT IDENTIFIER value passed as a
   parameter in a UserDefinedConstraint.

   Though the UserDefinedConstraint notation does not express the
   semantics of a constraint, multi-schema aware ASN.1 tools can
   recognize particular OBJECT IDENTIFIER values (defined later in this
   document) and behave appropriately.  These OBJECT IDENTIFIER values
   have id-constraint as a common prefix.

      id-constraint OBJECT IDENTIFIER ::=
          { iso(1) 2 36 79672281 xed(3) constraint(1) }

4.  Supporting ASN.1 Types

   This section defines ASN.1 types that support the application of
   constraints on the markup allowed in values of the AnyType ASN.1
   type.

4.1.  The AnyURI Type

   A value of the AnyURI ASN.1 type is a URI character string [URI].

      AnyURI ::= UTF8String (CONSTRAINED BY



Legg & Prager           Expires 15 December 2004                [Page 5]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


                  { -- conforms to the format of a URI -- })

4.2.  The NCName Type

   A value of the NCName ASN.1 type is a character string conforming to
   the NCName production of Namespaces in XML [XMLNS].

      NCName ::= UTF8String (CONSTRAINED BY
                     { -- conforms to the NCName production of
                       -- Namespaces in XML -- })

4.3.  The Name Type

   A value of the Name ASN.1 type is a character string conforming to
   the Name production of XML [XML].

      Name ::= UTF8String (CONSTRAINED BY
                     { -- conforms to the Name production of XML -- })

5.  Referencing Foreign Types

   To incorporate a non-ASN.1 datatype into an ASN.1 specification it is
   necessary to constraint values of the AnyType ASN.1 type to contain
   only markup valid with respect to that datatype.

   XML Schema and RELAX NG both have distinct definitional forms for
   elements and types (named patterns in RELAX NG).  A DTD element type
   declaration can be regarded as defining either a complete element, or
   the content of an element (i.e., a type).

5.1.  Referencing Type Definitions

   The values of the AnyType ASN.1 type can be restricted to conform to
   a specific XML Schema named type or RELAX NG named pattern by
   applying a UserDefinedConstraint containing the value of
   id-constraint-xml-type as a parameter.

      id-constraint-xml-type OBJECT IDENTIFIER ::= { id-constraint 0 }

   A UserDefinedConstraint in which an OBJECT IDENTIFIER with the value
   of id-constraint-xml-type is used MUST satisfy all of the following
   conditions:

   a) there SHALL be three or four UserDefinedConstraintParameters,

   b) the first UserDefinedConstraintParameter SHALL be a Value of the
      OBJECT IDENTIFIER ASN.1 type and that Value SHALL be the same as
      id-constraint-xml-type,



Legg & Prager           Expires 15 December 2004                [Page 6]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


   c) the second UserDefinedConstraintParameter SHALL be a Value of the
      AnyURI ASN.1 type (possibly an empty string),

   d) the third UserDefinedConstraintParameter SHALL be a Value of the
      NCName ASN.1 type,

   e) the fourth UserDefinedConstraintParameter, if present, SHALL be a
      Value of the AnyURI ASN.1 type,

   f) taken together the second and third UserDefinedConstraintParameter
      SHALL be the namespace name and local name [XMLNS] of either an
      XML Schema type definition or a RELAX NG named pattern.

   The fourth UserDefinedConstraintParameter is used when the namespace
   name and local name reference is ambiguous, i.e., refers to
   definitions in more than one schema document.  This situation would
   occur, for example, when importing types with the same name from
   independently developed XML Schemas defined without a target
   namespace.  The value of the fourth UserDefinedConstraintParameter is
   a URI that indicates the intended schema document, either an
   XML Schema specification or a RELAX NG specification.

   Example

      AnyType (CONSTRAINED BY {
                  OBJECT IDENTIFIER:
                      { iso(1) 2 36 79672281 xed(3) constraint(1) 0 },
                  AnyURI:"http://www.w3.org/2001/XMLSchema",
                  NCName:"decimal" })

   The XML-Type and XML-Type-From-Schema parameterized types [X683] are
   defined so that XML Schema named types and RELAX NG named patterns
   can be more conveniently referenced.

      XML-Type { AnyURI:namespace, NCName:name } ::= AnyType
          (CONSTRAINED BY { OBJECT IDENTIFIER:id-constraint-xml-type,
              AnyURI:namespace, NCName:name })

      XML-Type-From-Schema { AnyURI:namespace, NCName:name,
              AnyURI:schemaIdentity } ::= AnyType
          (CONSTRAINED BY { OBJECT IDENTIFIER:id-constraint-xml-type,
              AnyURI:namespace, NCName:name, AnyURI:schemaIdentity })

   Example

      The following notation is sufficient to incorporate the
      xsd:decimal XML Schema type as the member type in a SEQUENCE OF
      type definition:



Legg & Prager           Expires 15 December 2004                [Page 7]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


         SEQUENCE OF number
             XML-Type { "http://www.w3.org/2001/XMLSchema", "decimal" }

      Note that the ASN.1 Schema [ASD] translation of this ASN.1 type
      provides a more natural way to reference the XML Schema decimal
      type:

         <type xmlns:xsd="http://www.w3.org/2001/XMLSchema">
          <sequenceOf/>
           <element name="number" type="xsd:decimal"/>
          </sequenceOf>
         </type>

   The XML-Type parameterized type cannot be used if the URI of a schema
   document is required to disambiguate the namespace name and local
   name.  The XML-Type-From-Schema parameterized type can be used
   instead.

5.2.  DTD Element Types as Types

   The values of the AnyType ASN.1 type can be restricted to conform to
   the content specified by a nominated DTD element type declaration by
   applying a UserDefinedConstraint containing the value of
   id-constraint-dtd-type as a parameter.

      id-constraint-dtd-type OBJECT IDENTIFIER ::= { id-constraint 2 }

   A UserDefinedConstraint in which an OBJECT IDENTIFIER with the value
   of id-constraint-dtd-type is used MUST satisfy all of the following
   conditions:

   a) there SHALL be three UserDefinedConstraintParameters,

   b) the first UserDefinedConstraintParameter SHALL be a Value of the
      OBJECT IDENTIFIER ASN.1 type and that Value SHALL be the same as
      id-constraint-dtd-type,

   c) the second UserDefinedConstraintParameter SHALL be a Value of the
      AnyURI ASN.1 type specifying the system identifier of an external
      DTD subset [XML],

   d) the third UserDefinedConstraintParameter SHALL be a Value of the
      Name ASN.1 type specifying an element type declaration in the
      external DTD subset nominated by the second parameter.

   Example

      Suppose that the following external DTD subset has been defined



Legg & Prager           Expires 15 December 2004                [Page 8]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


      with a system identifier of "http://www.example.com/inventory":

         <?xml version='1.0'?>
         <!ELEMENT product EMPTY>
         <!ATTLIST product
             name       CDATA #IMPLIED
             partNumber CDATA #REQUIRED
             quantity   CDATA #REQUIRED >

      Values of AnyType can be restricted to conform to the content
      specified by the product element type declaration using the
      following notation:

         AnyType (CONSTRAINED BY {
                     OBJECT IDENTIFIER:
                         { iso(1) 2 36 79672281 xed(3) constraint(1) 2 },
                     AnyURI:"http://www.example.com/inventory",
                     Name:"product" })

   The DTD-Type parameterized type [X683] is defined so that DTD element
   type declarations can be more conveniently referenced.

      DTD-Type { AnyURI:schemaIdentity, Name:name } ::= AnyType
          (CONSTRAINED BY { OBJECT IDENTIFIER:id-constraint-dtd-type,
              AnyURI:schemaIdentity, Name:name })

   Example

      The following ASN.1 notation is sufficient to incorporate the
      product element type into an ASN.1 specification as the member
      type in a SEQUENCE OF type definition:

         SEQUENCE OF inventoryItem
             DTD-Type { "http://www.example.com/inventory", "product" }

   Note that when an element type declaration is referenced as a type,
   the Name of the element type declaration does not contribute to the
   RXER encoding of values of the resulting type.  For example, child
   elements in the RXER encoding of values of the above SEQUENCE OF type
   would resemble the following:

      <inventoryItem name="hammer" partNumber="1543" quantity="29"/>

6.  Referencing Foreign Elements

   ASN.1 does not have a construct analogous to a global element
   definition, hence there is no analogy in ASN.1 for referencing a
   global element definition (though there is in ASN.1 Schema).



Legg & Prager           Expires 15 December 2004                [Page 9]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


   The AnyType ASN.1 type represents the content of an element.  To
   import an element from a non-ASN.1 specification it is necessary to
   regard that element as the child element of a notional type whose
   content model permits only the imported element.

   The notional type is arbitrarily chosen to be a choice type.

   The notional type does not define any attributes therefore the
   attributes component of a value of the text alternative of AnyType
   would normally be empty, or contain only namespace declaration
   attributes.

6.1.  Referencing Element Definitions

   The values of the AnyType ASN.1 type can be restricted to conform to
   a notional choice type containing a specific XML Schema element or
   RELAX NG element by applying a UserDefinedConstraint containing the
   value of id-constraint-xml-element as a parameter.

      id-constraint-xml-element OBJECT IDENTIFIER ::= { id-constraint 1 }

   A UserDefinedConstraint in which an OBJECT IDENTIFIER with the value
   of id-constraint-xml-element is used MUST satisfy all of the
   following conditions:

   a) there SHALL be three or four UserDefinedConstraintParameters,

   b) the first UserDefinedConstraintParameter SHALL be a Value of the
      OBJECT IDENTIFIER ASN.1 type and that Value SHALL be the same as
      id-constraint-xml-element,

   c) the second UserDefinedConstraintParameter SHALL be a Value of the
      AnyURI ASN.1 type (possibly an empty string),

   d) the third UserDefinedConstraintParameter SHALL be a Value of the
      NCName ASN.1 type,

   e) the fourth UserDefinedConstraintParameter, if present, SHALL be a
      Value of the AnyURI ASN.1 type,

   f) taken together the second and third UserDefinedConstraintParameter
      SHALL be the namespace name and local name [XMLNS] of either an
      XML Schema element definition or a RELAX NG element definition.

   The fourth UserDefinedConstraintParameter is used when the namespace
   name and local name reference is ambiguous.  Its value is a URI that
   indicates the intended schema document, either an XML Schema
   specification or a RELAX NG specification.



Legg & Prager           Expires 15 December 2004               [Page 10]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


   Example

      AnyType (CONSTRAINED BY {
                  OBJECT IDENTIFIER:
                      { iso(1) 2 36 79672281 xed(3) constraint(1) 1 },
                  AnyURI:"http://www.example.com/IPO",
                  NCName:"purchaseOrder" })

   The Contained-XML-Element and Contained-XML-Element-From-Schema
   parameterized types are defined so that XML Schema global elements
   and RELAX NG elements can be more conveniently referenced.

      Contained-XML-Element
        { AnyURI:namespace, NCName:name } ::= AnyType
          (CONSTRAINED BY { OBJECT IDENTIFIER:id-constraint-xml-element,
              AnyURI:namespace, NCName:name })

      Contained-XML-Element-From-Schema { AnyURI:namespace, NCName:name,
              AnyURI:schemaIdentity } ::= AnyType
          (CONSTRAINED BY { OBJECT IDENTIFIER:id-constraint-xml-element,
              AnyURI:namespace, NCName:name, AnyURI:schemaIdentity })

   The Contained-XML-Element type cannot be used if the URI of a schema
   document is required to disambiguate the target namespace and name.
   The Contained-XML-Element-From-Schema parameterized type can be used
   instead.

6.2.  DTD Element Types as Elements

   The values of the AnyType ASN.1 type can be restricted to conform to
   a notional choice type containing an element with the name and
   content specified by a nominated DTD element type declaration by
   applying a UserDefinedConstraint containing the value of
   id-constraint-dtd-element as a parameter.

      id-constraint-dtd-element OBJECT IDENTIFIER ::= { id-constraint 3 }

   A UserDefinedConstraint in which an OBJECT IDENTIFIER with the value
   of id-constraint-dtd-element is used MUST satisfy all of the
   following conditions:

   a) there SHALL be three UserDefinedConstraintParameters,

   b) the first UserDefinedConstraintParameter SHALL be a Value of the
      OBJECT IDENTIFIER ASN.1 type and that Value SHALL be the same as
      id-constraint-dtd-element,

   c) the second UserDefinedConstraintParameter SHALL be a Value of the



Legg & Prager           Expires 15 December 2004               [Page 11]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


      AnyURI ASN.1 type specifying the system identifier of an external
      DTD subset,

   d) the third UserDefinedConstraintParameter SHALL be a Value of the
      Name ASN.1 type specifying an element type declaration in the
      external DTD subset nominated by the second parameter.

   Example

      AnyType (CONSTRAINED BY {
                  OBJECT IDENTIFIER:
                      { iso(1) 2 36 79672281 xed(3) constraint(1) 3 },
                  AnyURI:"http://www.example.com/inventory",
                  Name:"product" })

   The Contained-DTD-Element parameterized type is defined so that DTD
   element type declarations can be more conveniently referenced.

      Contained-DTD-Element
        { AnyURI:schemaIdentity, Name:name } ::= AnyType
          (CONSTRAINED BY { OBJECT IDENTIFIER:id-constraint-dtd-element,
              AnyURI:schemaIdentity, Name:name })

7.  Security Considerations

   Values of the AnyType type potentially hold the content of elements
   for which the Canonical XML [CXML] representation must be
   recoverable.  Such recovery is needed for the verification of digital
   signatures.  The rules governing the representation of the content of
   an element in an AnyType value are compatible with Canonical XML.
   Implementors must be careful not to introduce any further changes
   which would make it impossible to recover the Canonical XML
   representation.

8.  Acknowledgements

   This document and the technology it describes are a product of a
   joint research project between Adacel Technologies Limited and Deakin
   University on leveraging existing directory technology to produce an
   XML-based directory service.

9.  References

9.1.  Normative References

   [BCP14]  Bradner, S., "Key words for use in RFCs to Indicate
            Requirement Levels", BCP 14, RFC 2119, March 1997.




Legg & Prager           Expires 15 December 2004               [Page 12]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


   [URI]    Berners-Lee, T., Fielding, R. and L. Masinter, "Uniform
            Resource Identifiers (URI): Generic Syntax", RFC 2396,
            August 1998.

   [RXER]   Legg, S. and D. Prager, "Robust XML Encoding Rules for ASN.1
            Types", draft-legg-xed-rxer-xx.txt, a work in progress, June
            2004.

   [X680]   ITU-T Recommendation X.680 (07/02) | ISO/IEC 8824-1:2002,
            Information technology - Abstract Syntax Notation One
            (ASN.1): Specification of basic notation

   [X682]   ITU-T Recommendation X.682 (07/02) | ISO/IEC 8824-3:2002,
            Information technology - Abstract Syntax Notation One
            (ASN.1): Constraint specification

   [X683]   ITU-T Recommendation X.683 (07/02) | ISO/IEC 8824-4:2002,
            Information technology - Abstract Syntax Notation One
            (ASN.1): Parameterization of ASN.1 specifications

   [XML]    Bray, T., Paoli, J., Sperberg-McQueen, C., Maler, E. and F.
            Yergeau, "Extensible Markup Language (XML) 1.0 (Third
            Edition)", W3C Recommendation,
            http://www.w3.org/TR/2004/REC-xml-20040204, February 2004.

   [XMLNS]  Bray, T., Hollander, D. and A. Layman, "Namespaces in XML",
            http://www.w3.org/TR/1999/REC-xml-names-19990114, January
            1999.

   [ISET]   Cowan, J. and R. Tobin, "XML Information Set", W3C
            Recommendation, http://www.w3.org/TR/2001/REC-xml-
            infoset-20011024, October 2001.

   [CXML]   Boyer, J., "Canonical XML Version 1.0", W3C Recommendation,
            http://www.w3.org/TR/2001/REC-xml-c14n-20010315, March 2001.

   [XSD1]   Thompson, H., Beech, D., Maloney, M. and N. Mendelsohn, "XML
            Schema Part 1: Structures", W3C Recommendation,
            http://www.w3.org/TR/2001/REC-xmlschema-1-20010502, May
            2001.

   [RNG]    Clark, J. and M. Makoto, "RELAX NG Tutorial", OASIS
            Committee Specification, http://www.oasis-
            open.org/committees/relax-ng/tutorial-20011203.html,
            December 2001.

9.2.  Informative References




Legg & Prager           Expires 15 December 2004               [Page 13]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


   [ASD]    Legg, S. and D. Prager, "ASN.1 Schema: An XML Representation
            for ASN.1 Specifications", draft-legg-xed-asd-xx.txt, a work
            in progress, December 2003.

Appendix A. ASN.1 for Schema Language Integration

   This appendix is normative.

   SchemaLanguageIntegration
       {iso(1) 2 36 79672281 xed(3) module(0) sli(1)}

   -- Copyright (C) The Internet Society (2004). This version of
   --  this ASN.1 module is part of RFC XXXX; see the RFC itself
   --  for full legal notices.

   DEFINITIONS
   IMPLICIT TAGS EXTENSIBILITY IMPLIED ::= BEGIN

   -- The non-parameterized types exported by this module belong
   -- to the namespace http://xmled.info/ns/ASN.1 .

   EXPORTS AnyType, AnyURI, NCName, Name,
       XML-Type{}, XML-Type-From-Schema{}, DTD-Type{},
       Contained-XML-Element{},
       Contained-XML-Element-From-Schema{}
       Contained-DTD-Element{};

   AnyType ::= CHOICE {
       text    [0] SEQUENCE {
           prolog      [0] UTF8String (SIZE(1..MAX)) OPTIONAL,
           context     [1] UTF8String (SIZE(1..MAX)) OPTIONAL,
           attributes  [2] UTF8String (SIZE(1..MAX)) OPTIONAL,
           content     [3] UTF8String (SIZE(1..MAX)) OPTIONAL } }

   AnyURI ::= UTF8String (CONSTRAINED BY
                  { -- conforms to the format of a URI -- })

   NCName ::= UTF8String (CONSTRAINED BY
                  { -- conforms to the NCName production of
                    -- Namespaces in XML -- })

   Name ::= UTF8String (CONSTRAINED BY
                  { -- conforms to the Name production of XML -- })

   id-constraint OBJECT IDENTIFIER ::=
       { iso(1) 2 36 79672281 xed(3) constraint(1) }

   id-constraint-xml-type    OBJECT IDENTIFIER ::= { id-constraint 0 }



Legg & Prager           Expires 15 December 2004               [Page 14]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


   id-constraint-xml-element OBJECT IDENTIFIER ::= { id-constraint 1 }
   id-constraint-dtd-type    OBJECT IDENTIFIER ::= { id-constraint 2 }
   id-constraint-dtd-element OBJECT IDENTIFIER ::= { id-constraint 3 }

   XML-Type { AnyURI:namespace, NCName:name } ::= AnyType
       (CONSTRAINED BY { OBJECT IDENTIFIER:id-constraint-xml-type,
           AnyURI:namespace, NCName:name })

   XML-Type-From-Schema { AnyURI:namespace, NCName:name,
           AnyURI:schemaIdentity } ::= AnyType
       (CONSTRAINED BY { OBJECT IDENTIFIER:id-constraint-xml-type,
           AnyURI:namespace, NCName:name, AnyURI:schemaIdentity })

   DTD-Type { AnyURI:schemaIdentity, Name:name } ::= AnyType
       (CONSTRAINED BY { OBJECT IDENTIFIER:id-constraint-dtd-type,
           AnyURI:schemaIdentity, Name:name })

   Contained-XML-Element
     { AnyURI:namespace, NCName:name } ::= AnyType
       (CONSTRAINED BY { OBJECT IDENTIFIER:id-constraint-xml-element,
           AnyURI:namespace, NCName:name })

   Contained-XML-Element-From-Schema { AnyURI:namespace, NCName:name,
           AnyURI:schemaIdentity } ::= AnyType
       (CONSTRAINED BY { OBJECT IDENTIFIER:id-constraint-xml-element,
           AnyURI:namespace, NCName:name, AnyURI:schemaIdentity })

   Contained-DTD-Element
     { AnyURI:schemaIdentity, Name:name } ::= AnyType
       (CONSTRAINED BY { OBJECT IDENTIFIER:id-constraint-dtd-element,
           AnyURI:schemaIdentity, Name:name })

   END

Authors' Addresses

   Dr. Steven Legg
   Adacel Technologies Ltd.
   250 Bay Street
   Brighton, Victoria 3186
   AUSTRALIA

   Phone: +61 3 8530 7710
     Fax: +61 3 8530 7888
   EMail: steven.legg@adacel.com.au

   Dr. Daniel Prager
   C/o Professor Lynn Batten



Legg & Prager           Expires 15 December 2004               [Page 15]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


   Department of Computing and Mathematics
   Deakin University
   Geelong, Victoria 3217
   AUSTRALIA

   EMail: dan@layabout.net
   EMail: lmbatten@deakin.edu.au

Full Copyright Statement

   Copyright (C) The Internet Society (2004).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.

Changes in Draft 01




Legg & Prager           Expires 15 December 2004               [Page 16]

INTERNET-DRAFT      XED: Schema Language Integration       June 15, 2004


   The Directory XML Encoding Rules (DXER) have been renamed to the
   Robust XML Encoding Rules (RXER).

Changes in Draft 02

   The AnyType ASN.1 type has been revised to be a CHOICE whose only
   alternative is the previously defined SEQUENCE type.  The change will
   permit a future specification to more easily introduce alternative
   compact encodings for the content of elements.

   The mechanism for incorporating DTD element type declarations was not
   adequate to deal with DTDs using namespaces.  The parameterized types
   DTD-Type and Contained-DTD-Element have been defined, along with
   Name, id-constraint-dtd-type and id-constraint-dtd-element, to allow
   element types in such DTDs to be referenced.  See Section 5.2 and
   Section 6.2.



































Legg & Prager           Expires 15 December 2004               [Page 17]


