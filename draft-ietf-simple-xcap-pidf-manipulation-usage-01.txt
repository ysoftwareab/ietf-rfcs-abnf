


SIMPLE WG                                                     M. Isomaki
Internet-Draft                                               E. Leppanen
Expires: December 22, 2004                                         Nokia
                                                           June 23, 2004


   An Extensible Markup Language (XML) Configuration Access Protocol
        (XCAP) Usage for Manipulating Presence Document Contents
           draft-ietf-simple-xcap-pidf-manipulation-usage-01

Status of this Memo

   By submitting this Internet-Draft, I certify that any applicable
   patent or other IPR claims of which I am aware have been disclosed,
   and any of which I become aware will be disclosed, in accordance with
   RFC 3668.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as
   Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on December 22, 2004.

Copyright Notice

   Copyright (C) The Internet Society (2004).  All Rights Reserved.

Abstract

   This document describes a usage of the Extensible Markup Language
   (XML) Configuration Access Protocol (XCAP) for manipulating the
   contents of Presence Information Data Format (PIDF) based presence
   document.  It is intended to be used in Session Initiation Protocol
   (SIP) based presence systems, where the Event State Compositor can
   use the XCAP-manipulated presence document as one of the inputs based
   on which it builds the overall presence state for the presentity.




Isomaki & Leppanen     Expires December 22, 2004                [Page 1]

Internet-Draft    XCAP Usage for Manipulating Presence DocumentJune 2004


Table of Contents

   1.   Introduction . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.   Conventions  . . . . . . . . . . . . . . . . . . . . . . . .   4
   3.   Relationship with Presence State Published Using SIP
        PUBLISH  . . . . . . . . . . . . . . . . . . . . . . . . . .   4
   4.   Application Usage ID . . . . . . . . . . . . . . . . . . . .   5
   5.   Structure of Manipulated Presence Information  . . . . . . .   5
   6.   Additional Constraints . . . . . . . . . . . . . . . . . . .   6
   7.   Naming Conventions . . . . . . . . . . . . . . . . . . . . .   6
   8.   Authorization Policies . . . . . . . . . . . . . . . . . . .   6
   9.   XML Schema . . . . . . . . . . . . . . . . . . . . . . . . .   6
   10.  Example Document . . . . . . . . . . . . . . . . . . . . . .   6
   11.  Security Considerations  . . . . . . . . . . . . . . . . . .   7
   12.  IANA Considerations  . . . . . . . . . . . . . . . . . . . .   8
     12.1   XCAP Application Usage ID  . . . . . . . . . . . . . . .   8
   13.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . .   8
   14.  Document Change History  . . . . . . . . . . . . . . . . . .   8
     14.1   Changes since
            draft-ietf-simple-xcap-pidf-manipulation-usage-00  . . .   8
   15.  References . . . . . . . . . . . . . . . . . . . . . . . . .   8
   15.1   Normative References . . . . . . . . . . . . . . . . . . .   8
   15.2   Informative References . . . . . . . . . . . . . . . . . .   9
        Authors' Addresses . . . . . . . . . . . . . . . . . . . . .  10
        Intellectual Property and Copyright Statements . . . . . . .  11


























Isomaki & Leppanen     Expires December 22, 2004                [Page 2]

Internet-Draft    XCAP Usage for Manipulating Presence DocumentJune 2004


1.  Introduction

   The Session Initiation Protocol (SIP) for Instant Messaging and
   Presence (SIMPLE) specifications allow a user, called a watcher, to
   subscribe to another user, called a presentity, in order to learn
   their presence information [8].

   A SIP based mechanism, SIP PUBLISH method, has been defined for
   publishing presence state [4].  However, SIP PUBLISH has a limited
   scope and does not address all the requirements for setting presence
   state.  First, it only allows a single Presence User Agent (PUA) to
   publish its view of the presence state, independently of and without
   the possibility to learn about the states set by other PUAs.  Since
   each PUA is typically tied to a single physical device, this means
   that it is hard to set device independent presence state using SIP
   PUBLISH.  Second, SIP PUBLISH creates a soft state which expires
   after the negotiated lifetime unless it is refreshed.  This makes it
   unsuitable for setting state that should prevail even without active
   refreshing.  There are several use cases where setting of permanent
   presence state that can be manipulated independent of any device is
   needed.  For instance presentity's e-mail (mailto: URI) and WWW
   homepage (http: URI) address are this kind of information.  Similarly
   a user might want to set information, such as a note, that should
   constitute his presence information in the absence of any active
   publications, i.e.  serve as a sort of default presence state.
   SIMPLE based presence systems thus require a mechanism to complement
   SIP PUBLISH in order to address these use cases.

   XML Configuration Access Protocol (XCAP) [2] allows a client to read,
   write and modify application configuration data, stored in XML format
   on a server.  The data has no expiration time, so it must be
   explicitly inserted and deleted.  The protocol allows multiple
   clients to manipulate the data, provided that they are authorized to
   do so.  XCAP is already used in SIMPLE based presence systems for
   manipulation of presence lists and presence authorization policies.
   This makes XCAP an ideal choice for doing device independent presence
   document manipulation.

   This document defines an XML Configuration Access Protocol (XCAP)
   application usage for manipulating the contents of presence document.
   Presence Information Document Format (PIDF) [3] is used as the
   presence document format, since event state compositor already has to
   support it, as it is used in SIP PUBLISH.

   Section 3 describes in more detail how the presence document
   manipulated with XCAP is related to soft state publishing done with
   SIP PUBLISH.




Isomaki & Leppanen     Expires December 22, 2004                [Page 3]

Internet-Draft    XCAP Usage for Manipulating Presence DocumentJune 2004


   XCAP requires application usages to standardize several pieces of
   information, including a unique application usage ID (AUID), and an
   XML schema for the manipulated data.  These are specified starting
   from the Section 4.

2.  Conventions

   In this document, the key words 'MUST', 'MUST NOT', 'REQUIRED',
   'SHALL', 'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'MAY',
   and 'OPTIONAL' are to be interpreted as described in RFC 2119 [1]
   and indicate requirement levels for compliant implementations.

   Comprehensive terminology of presence and event state publishing is
   provided in Session Initiation Protocol (SIP) Extension for Event
   State Publication [4].

3.  Relationship with Presence State Published Using SIP PUBLISH

   The framework for publishing presence state is introduced in SIMPLE
   Presence Publication Requirements [11].  A central part of the
   framework is the event state compositor element whose function is to
   compose presence information received from several sources into a
   single coherent presence document.

   The presence state manipulated with XCAP can be seen as one of the
   information sources for the compositor to be combined with the soft
   state information published using SIP PUBLISH.  This is illustrated
   in Figure 1.  It is expected that in the normal case there can be
   several PUAs publishing their separate views with SIP PUBLISH, but
   only a single XCAP manipulated presence document.  As shown in the
   figure, there can be multiple XCAP clients (for instance in different
   physical devices) manipulating the same document on the XCAP server,
   but this still creates only one input to the event state compositor.

   As individual inputs the presence states set by XCAP and SIP PUBLISH
   are completely separated and it is not possible to directly
   manipulate the state set by one mechanism with the other.  How the
   compositor treats XCAP based inputs with respect to SIP PUBLISH based
   inputs is a matter of compositor policy, which is beyond the scope of
   this specification.  Since the SIP PUBLISH specification already
   mandates the compositor to be able to construct the overall presence
   state from multiple inputs which may contain non-orthogonal (or in
   some ways even conflicting) information, this XCAP usage does not
   impose any new requirements on the compositor functionality.  One
   reasonable compositor policy is that the XCAP manipulated presence
   document is used as the default presence state in absence of any soft
   state set by SIP PUBLISH, and the soft state augments or overrides
   the default state.



Isomaki & Leppanen     Expires December 22, 2004                [Page 4]




               +---------------+         +------------+
               |   Event State |         |  Presence  |<-- SIP SUBSCRIBE
               |   Compositor  +---------+  Agent     |--> SIP NOTIFY
               |               |         |   (PA)     |
               +-------+-------+         +------------+
                 ^     ^     ^
                 |     |     |
                 |     |     |       +---------------+
        +--------+     |     +-------|  XCAP server  |
        |              |             +-------+-------+
        |              |                 ^         ^
        | SIP Publish  |                 |  XCAP   |
        |              |                 |         |
     +--+--+        +--+--+         +-------+   +-------+
     | PUA |        | PUA |         | XCAP  |   | XCAP  |
     |     |        |     |         | client|   | client|
     +-----+        +-----+         +-------+   +-------+


      Figure 1: Framework for Presence Publishing and Event State
                              Composition


   The protocol interface between XCAP server and the event state
   compositor is not specified here.

4.  Application Usage ID

   XCAP requires application usages to define a unique application usage
   ID (AUID) in either the IETF tree or a vendor tree.  This
   specification defines the 'pidf-manipulation' AUID within the IETF
   tree, via the IANA registration in the Section 12.

5.  Structure of Manipulated Presence Information

   The XML [7] format of the presence information (PIDF) is defined in
   CPIM Presence Information Data Format [3].  The PIDF also defines a
   mechanism for extending presence information.

   The PIDF defines the presence information to consist of the root
   element 'presence'.  The 'presence' element can contain 'tuple'
   elements which contain a mandatory 'status' element, a communication
   mean specific presence attribute and other markups.  Additionally,
   the presence information can contain other presentity level
   information outside tuples.

   The namespace URI for PIDF is 'urn:ietf:params:xml:ns:pidf'.




Isomaki & Leppanen     Expires December 22, 2004                [Page 5]

Internet-Draft    XCAP Usage for Manipulating Presence DocumentJune 2004


6.  Additional Constraints

   There are no constraints on the document beyond those described in
   the XML schemas (PIDF and its extensions) and in the description of
   CPIM PIDF [3].

7.  Naming Conventions

   There are no naming conventions beyond the possible conventions
   defined in CPIM PIDF [3] that need to be defined for this application
   usage.

8.  Authorization Policies

   This application usage does not modify the default XCAP authorization
   policy, which allows only a user (owner) to read, write or modify
   their own documents.  A server can allow privileged users to modify
   documents that they do not own, but the establishment and indication
   of such policies is outside the scope of this document.

9.  XML Schema

   The XML schema definition for the presence information can be found
   from CPIM PIDF [3].  PIDF based presence information can contain
   extensions as e.g., RPID: Rich Presence Extensions to the Presence
   Information Data Format (PIDF) which XML schema is defined in [9].

10.  Example Document

   The section provides an example of presence document provided by an
   XCAP Client to an XCAP Server.  The presence document illustrates the
   situation where a (human) presentity has left for vacation, and
   before that has set his presence information such that he is only
   available via cellular phone and e-mail.  In the absence of any
   published soft state information, this would be the sole input to the
   compositor forming the presence document.  The example document
   contain PIDF extensions specified in RPID: Rich Presence Extensions
   to the Presence Information Data Format (PIDF) [9] and CIPID: Contact
   Information in Presence Information Data Format [10].


   <?xml version="1.0" encoding="UTF-8"?>
         <presence xmlns="urn:ietf:params:xml:ns:pidf"
              xmlns:es="urn:ietf:params:xml:ns:pidf:status:rpid-status"
              xmlns:et="urn:ietf:params:xml:ns:pidf:rpid-tuple"
              xmlns:ci="urn:ietf:params:xml:ns:pidf:cipid"
              entity="pres:someone@example.com">




Isomaki & Leppanen     Expires December 22, 2004                [Page 6]

Internet-Draft    XCAP Usage for Manipulating Presence DocumentJune 2004


           <tuple id="18x765">
             <status>
               <basic>open</basic>
               <es:activities>
   	            <es:activity>Vacation</es:activity>
               </es:activities>
             </status>
             <et:class>auth-A</et:class>
             <et:contact-type>presentity</et:contact-type>
             <ci:homepage>http://www.example.com/~someone</ci:homepage>
             <timestamp>2004-02-06T16:49:29Z</timestamp>
             <note>I'm available only by e-mail and GSM phone.</note>
           </tuple>

           <tuple id="8eg92m">
             <status>
               <basic>open</basic>
   	     <es:idle/>
             </status>
             <et:class>auth-1</et:class>
             <et:contact-type>service</et:contact-type>
             <note>cellphone</note>
             <contact priority="0.5">tel:+358506767</contact>
           </tuple>

           <tuple id="8eg92n">
             <status>
               <basic>open</basic>
   	     <es:idle/>
             </status>
             <et:class>auth-1</et:class>
             <et:contact-type>service</et:contact-type>
             <note>I'm reading mail a couple of times a week</note>
             <contact priority="1.0">mailto:someone@example.com</contact>
           </tuple>
         </presence>



11.  Security Considerations

   A presence document may contain information that is highly sensitive.
   Its delivery to watchers needs to happen strictly according to the
   relevant authorization policies.  It is also important that only
   authorized clients are able to manipulate the presence information.

   The XCAP base specification mandates that all XCAP servers MUST
   implement HTTP Authentication: Basic and Digest Access Authentication



Isomaki & Leppanen     Expires December 22, 2004                [Page 7]

Internet-Draft    XCAP Usage for Manipulating Presence DocumentJune 2004


   [5].  Furthermore, XCAP servers MUST implement HTTP over TLS [6].  It
   is recommended that administrators of XCAP servers use an HTTPS URI
   as the XCAP root services URI, so that the digest client
   authentication occurs over TLS.  By using these means, XCAP client
   and server can ensure the confidentiality and integrity of the XCAP
   presence document manipulation operations, and that only authorized
   clients are allowed to perform them.

12.  IANA Considerations

   There is an IANA consideration associated with this specification.

12.1  XCAP Application Usage ID

   This section registers a new XCAP Application Usage ID (AUID)
   according to the IANA procedures defined in [2].

   Name of the AUID: pidf-manipulation

   Description: Pidf-manipulation application usage defines how XCAP is
   used to manipulate the contents of PIDF based presence documents.

13.  Acknowledgements

   The authors would like to thank Jonathan Rosenberg, Aki Niemi, Mikko
   Lonnfors, Oliver Biot, Alex Audu, Krisztian Kiss, Jose Costa-Requena
   and George Foti for their comments.

14.  Document Change History

14.1  Changes since draft-ietf-simple-xcap-pidf-manipulation-usage-00

   The following changes were made since the last version:

   o  Editorial changes and corrections based on review comments.

   o  References updated.

   o  SIP SUBSCRIBE/NOTIFY arrows in the figure 1 corrected.

   o  Change history added.


15.  References

15.1  Normative References

   [1]  Bradner, S., "Key words for use in RFCs to Indicate Requirement



Isomaki & Leppanen     Expires December 22, 2004                [Page 8]

Internet-Draft    XCAP Usage for Manipulating Presence DocumentJune 2004


        Levels", BCP 14, RFC 2119, March 1997.

   [2]  Rosenberg, J., "The Extensible Markup Language (XML)
        Configuration Access Protocol (XCAP)",
        draft-ietf-simple-xcap-02 (work in progress), February 2004.

   [3]  Sugano, H., "CPIM presence information data format",
        draft-ietf-impp-cpim-pidf-08, May 2003.

   [4]  Niemi, A., "An Event State Publication Extension for Session
        Initiation Protocol (SIP)",  draft-ietf-sip-publish-04.txt, May
        2004.

   [5]  Franks, J., "HTTP Authentication: Basic and Digest Access
        Authentication", RFC 2617, June 1999.

   [6]  Rescorla, E., "HTTP Over TLS", RFC 2818, May 2000.

15.2  Informative References

   [7]   Bray, T., "Extensible Markup Language (XML) 1.0 (Second
         edition)", W3C REC REC-xml-20001006, October 2000.

   [8]   Rosenberg, J., "Session Initiation Protocol (SIP) Extensions
         for Presence",  draft-ietf-simple-presence-10.txt (work in
         progress), January 2003.

   [9]   Schulzrinne, H., "RPID: Rich Presence Extensions to the
         Presence Information Data Format (PIDF)",
         draft-ietf-simple-rpid-03.txt (work in progress), March 2004.

   [10]  Schulzrinne, H., "CIPID: Contact Information in Presence
         Information Data Format",  draft-ietf-simple-cipid-01.txt (work
         in progress), March 2004.

   [11]  Campbell, B., "SIMPLE Presence Publication Requirements",
         draft-ietf-simple-publish-reqs-00 (work in progress), February
         2003.













Isomaki & Leppanen     Expires December 22, 2004                [Page 9]

Internet-Draft    XCAP Usage for Manipulating Presence DocumentJune 2004


Authors' Addresses

   Markus Isomaki
   Nokia
   Itamerenkatu 11-13
   00180 Helsinki
   Finland

   Phone:
   EMail: markus.isomaki@nokia.com


   Eva Leppanen
   Nokia
   P.O BOX 785
   Tampere
   Finland

   Phone:
   EMail: eva-maria.leppanen@nokia.com































Isomaki & Leppanen     Expires December 22, 2004               [Page 10]

Internet-Draft    XCAP Usage for Manipulating Presence DocumentJune 2004


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Disclaimer of Validity

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Copyright Statement

   Copyright (C) The Internet Society (2004).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.




Isomaki & Leppanen     Expires December 22, 2004               [Page 11]




