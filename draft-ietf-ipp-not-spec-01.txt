INTERNET-DRAFT
<draft-ietf-ipp-not-spec-01.txt>                             S. Isaacson
                                                            Novell, Inc.
                                                               J. Martin
                                                              Underscore
                                                                R. deBry
                                               Utah Valley State College
                                                             T. Hastings
                                                       Xerox Corporation
                                                             M. Shepherd
                                                       Xerox Corporation
                                                              R. Bergman
                                                      Dataproducts Corp.
                                                        October 14, 1999

 Internet Printing Protocol/1.1:  IPP Event Notification Specification

    Copyright (C) The Internet Society (1999). All Rights Reserved.

Status of this Memo

This document is an Internet-Draft and is in full conformance with all
provisions of Section 10 of [RFC2026].  Internet-Drafts are working
documents of the Internet Engineering Task Force (IETF), its areas, and
its working groups.  Note that other groups may also distribute working
documents as Internet-Drafts.

Internet-Drafts are draft documents valid for a maximum of six months
and may be updated, replaced, or obsoleted by other documents at any
time.  It is inappropriate to use Internet-Drafts as reference material
or to cite them other than as "work in progress".

The list of current Internet-Drafts can be accessed at
http://www.ietf.org/ietf/1id-abstracts.txt

The list of Internet-Draft Shadow Directories can be accessed as
http://www.ietf.org/shadow.html.

Abstract

This document describes an extension to the IPP/1.0 & IPP/1.1 model that
allows a client to subscribe to printing related events. Subscriptions
include "Per-Job subscriptions" and "Per-Printer subscriptions".  One or
more Per-Job Submission subscriptions are specified by the client when
submitting a job.  Additional Per-Job and Per-Printer subscriptions are
created by performing separate explicit Create-Job-Subscription Create-
Printer-Subscription operations, respectively.  Subscriptions are
modeled as Subscription objects.  Four other operations are defined for
subscription objects:  get attributes, get subscriptions, renew a
subscription, and cancel a subscription.

A subscription request and the Subscription object includes:  the names
of Job and/or Printer events, the Notification Recipient URL, the text
format if Human Consumable notification is requested, possibly some
opaque data, and the charset and natural language.  In addition, the


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman           [page 1]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


subscription request includes:  the requested lease time and persistency
for the subscription.  When the event occurs, a notification is
generated and delivered using the information specified in the
subscription.


The full set of IPP documents includes:

  Design Goals for an Internet Printing Protocol [IPP-REQ]
  Rationale for the Structure and Model and Protocol for the Internet
     Printing Protocol [IPP-RAT]
  Internet Printing Protocol/1.1: Model and Semantics  [IPP-MOD]
  Internet Printing Protocol/1.1: Encoding and Transport [IPP-PRO]
  Internet Printing Protocol/1.1: Implementer's Guide [IPP-IIG]
  Mapping between LPD and IPP Protocols [IPP LPD]

The "Design Goals for an Internet Printing Protocol" document takes a
broad look at distributed printing functionality, and it enumerates
real-life scenarios that help to clarify the features that need to be
included in a printing protocol for the Internet.  It identifies
requirements for three types of users: end users, operators, and
administrators.  It calls out a subset of end user requirements that are
satisfied in IPP/1.0.  Operator and administrator requirements are out
of scope for version 1.0.  A few OPTIONAL operator operations have been
added to IPP/1.1.

The "Rationale for the Structure and Model and Protocol for the Internet
Printing Protocol" document describes IPP from a high level view,
defines a roadmap for the various documents that form the suite of IPP
specifications, and gives background and rationale for the IETF working
group's major decisions.

The "Internet Printing Protocol/1.1: Model and Semantics", describes a
simplified model with abstract objects, their attributes, and their
operations that are independent of encoding and transport. It introduces
a Printer and a Job object. The Job object optionally supports multiple
documents per Job. It also addresses security, internationalization, and
directory issues.

The "Internet Printing Protocol/1.1: Encoding and Transport" document is
a formal mapping of the abstract operations and attributes defined in
the model document onto HTTP/1.1.  It defines the encoding rules for a
new Internet MIME media type called "application/ipp".  This document
also defines the rules for transporting over HTTP a message body whose
Content-Type is "application/ipp".  This document defines a new scheme
named 'ipp' for identifying IPP printers and jobs.  Finally, this
document defines interoperability rules for supporting IPP/1.0 clients.

The "Internet Printing Protocol/1.1: Implementer's Guide" document gives
insight and advice to implementers of IPP clients and IPP objects.  It
is intended to help them understand IPP/1.1 and some of the
considerations that may assist them in the design of their client and/or


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman           [page 2]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


IPP object implementations.  For example, a typical order of processing
requests is given, including error checking.  Motivation for some of the
specification decisions is also included.

The "Mapping between LPD and IPP Protocols" document gives some advice
to implementers of gateways between IPP and LPD (Line Printer Daemon)
implementations.














































Isaacson, Martin, deBry, Hastings, Shepherd, Bergman           [page 3]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999



                           Table of Contents

1 Introduction.......................................................7

  1.1Notification Overview..........................................7

2 Model for Per-Job and Per-Printer Subscription and Event Notification
  10

  2.1Model for Per-Job Subscription and Notification...............10
  2.2Model for Per-Printer Subscription and Notification...........11
  2.3Relationship between the Printer object and the Notification
  Delivery Service..................................................12
     2.3.1 Use of a Notification Service transparently to clients...12
     2.3.2 Use of Notification Service transparently to the IPP Printer
           13

3 Terminology.......................................................14

  3.1Conformance Terminology.......................................14
  3.2Other terminology.............................................14

4 Object Model for Notification.....................................17

  4.1Object relationships..........................................18

5 Subscription Object attributes....................................19

  5.1notify-recipient (uri)........................................21
  5.2notify-events (1setOf type2 keyword)..........................22
  5.3notify-text-format (mimeMediaType)............................25
  5.4subscriber-user-data (octetString(63))........................25
  5.5notify-charset (charset)......................................26
  5.6notify-natural-language (naturalLanguage).....................26
  5.7request-id....................................................26
  5.8subscription-id (integer (1:MAX)).............................26
  5.9notify-lease-expiration-time (integer(0:MAX)).................27
  5.10 printer-uri (uri)............................................27
  5.11 subscriber-user-name (name(MAX)).............................27
  5.12 notify-printer-up-time (integer(1:MAX))......................28
  5.13 notify-persistence-granted (boolean).........................28

6 Printer Description Attributes related to Notification............28

  6.1notify-schemes-supported (1setOf uriScheme)...................29
  6.2notify-events-default (1setOf type2 keyword)..................29
  6.3notify-events-supported (1setOf type2 keyword)................30
  6.4max-events-supported (integer(5:MAX)).........................30
  6.5notify-text-format-supported (1setOf mimeMediaType)...........30
  6.6max-job-subscriptions-supported (integer(1:MAX))..............31
  6.7max-printer-subscriptions-supported (integer(0:MAX))..........31
  6.8notify-lease-time-supported (rangeOfInteger(0:MAX))...........31
  6.9notify-lease-time-default (integer(0:MAX))....................31
  6.10 persistent-jobs-supported (boolean)..........................32
  6.11 persistent-subscriptions-supported (boolean).................32
  6.12 printer-state-change-time (integer(1:MAX))...................32
  6.13 printer-state-change-date-time (dateTime)....................32

7 Notification Content..............................................32


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman           [page 4]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


  7.1Notification content MIME media type formats..................33
  7.2Machine Consumable form.......................................33
  7.3Human Consumable form.........................................33
  7.4Notification content attributes common to Job and Printer events
      34
  7.5Additional Notification content attributes for Job events only 36
  7.6Additional Notification content attributes for Printer events
  only 37

8 Operations for notification.......................................37

  8.1Operations for Per-Job Subscriptions only.....................37
     8.1.1 Job Creation Operations (Create-Job, Print-Job, Print-URI)
     and Validate-Job................................................37
     8.1.2 Create-Job-Subscription operation........................40
  8.2Operations for Per-Printer Subscriptions only.................42
     8.2.1 Create-Printer-Subscription operation....................42
  8.3Common Operations for Per-Job and Per-Printer Subscriptions...45
     8.3.1 Get-Subscription-Attributes operation....................45
     8.3.2 Get-Subscriptions operation..............................46
     8.3.3 Renew-Subscription operation.............................47
     8.3.4 Cancel- Subscription operation...........................48

9 Comparison of Per-Job versus Per-Printer Subscriptions............49

10   Conformance Requirements........................................49

11   IANA Considerations.............................................50

12   Internationalization Considerations.............................50

13   Security Considerations.........................................50

14   Status Codes....................................................51

  14.1 'successful-ok-ignored-subscriptions' (0x0003)...............51
  14.2 client-error-uri-notification-scheme-not-supported (0x04??)..52
  14.3 server-error-too-many-subscriptions (0x04??).................52
  14.4 server-error-too-many-events (0x04??)........................52

15   Additions to the IPP Encoding and Transport Document............52

16   References......................................................53

17   Author's Addresses..............................................55

18   Appendix C: Full Copyright Statement............................56













Isaacson, Martin, deBry, Hastings, Shepherd, Bergman           [page 5]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


                                 Tables

Table 1 - Summary of Per-Job and Per-Printer Subscription operations..9

Table 2 - Subscription object attributes.............................20

Table 3 - Printer Description attributes associated with Notification29

Table 4 - Common Job and Printer Notification content attributes.....34

Table 5 - Additional Notification content attributes for Job events only
    .................................................................36

Table 6 - Additional Notification content attributes for Printer events
   only.............................................................37

Table 7 - Member attributes of the "job-notify" collection operation
   attribute........................................................38

Table 8 - Conformance Requirements for Operations....................50

                                Figures

Figure 1 - Client-Printer Per-Job Subscription and Notification Model10

Figure 2 - Client-Server-Printer Per-Job Subscription and Notification
   Model............................................................11

Figure 3 - Client-Printer Per-Printer Subscription and Notification
   Model............................................................12

Figure 4 - Opaque Use of a Notification Service Transparent to the
   Client...........................................................13

Figure 5 - Use of a Notification Service transparent to the IPP Printer
    .................................................................14

Figure 6 - Object Model for Notification.............................18























Isaacson, Martin, deBry, Hastings, Shepherd, Bergman           [page 6]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999




1  Introduction


This IPP notification specification is an extension to IPP/1.0 [RFC2568,
RFC2569] and IPP/1.1 [ipp-mod, ipp-pro].  This document in combination
with the following documents is intended to meet the notification
requirements described in [ipp-not-req]:

     Internet Printing Protocol/1.1:  "Collection Attribute Syntax"
     [ipp-coll]
     Internet Printing Protocol/1.1:  "Job Progress Attributes" [ipp-
     prog]
     Internet Printing Protocol/1.1:  "Notification Change History"
     [ipp-not-hist]
In addition, each notification delivery method, whether REQUIRED or
OPTIONAL, is described in separate documents:
     Internet Printing Protocol/1.1:  "Notification Delivery Method xxx
     [TBD]
     Internet Printing Protocol/1.1:  "Notification Delivery Method yyy
     [TBD]


The rest of this document is laid out as follows:

     - The rest of Section 1.1 is an overview of IPP Notification.

     - Section 2 is the model for network entities that use IPP
     notification, including clients (desktop and servers), IPP Printers
     (servers and devices), and Notification Recipients.

     - Section 3 is the terminology used throughout the document.

     - Section 4 is the object model for notification, including Job,
     Printer, and Subscription objects.

     - Section 5 and 6 defines the notification attributes for each of
     the Subscription and Printer objects.

     - Section 7 defines the content of Human Consumable and Machine
     Consumable Event Notification contents.

     - Sections 8 and 9 define the Per-Job and Per-Printer Subscription
     operations.

     - Section 10 and 11 define the conformance requirements and IANA
     requirements, respectively.

     - Section 12 - 14 cover Internationalization, Security, and Status
     codes.


1.1 Notification Overview

A client can establish an event notification subscription so that when
one of the specified events occurs, an asynchronous Notification is sent
to a specified Notification Recipient.


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman           [page 7]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


One or more Per-Job Submission subscriptions are specified by the client
when submitting a job.  One or more Per-Job or Per-Printer subscriptions
are created by performing separate explicit Create-Job-Subscription or
Create-Printer-Subscriptions operations, respectively.

A Per-Job or Per-Printer subscription request includes:

  1. the names of Job and/or Printer events that are of interest to the
     Notification Recipient

  2. the delivery method and address to use to deliver the notification
     to one Notification Recipient

  3. if Human Consumable notification content is to be sent, which text
     format

  4. some opaque data that the subscriber wants to be sent to the
     Notification Recipient in the Notification, perhaps to identify
     either the subscriber or the ultimate recipient

  5. the charset to use in the Notification, if it is to be different
     than the one used in the request that created the subscription

  6. the natural language to use in the Human Consumable Notification,
     if it is to be different than the one used in the request that
     created the subscription

  7. the requested lease time in seconds for the subscription

  8. whether or not the subscription is requested to be persistent
     across power cycles.

For Per-Job subscriptions, a client requests job and printer event
notification using the "job-notify" operation attribute when creating a
job with any of the Job Creation operation: Print-Job, Print-URI, and
Create-Job.  The "job-notify" operation attributes may be submitted to
the Validate-Job in order to be validated.  .  The "job-notify"
operation attribute contains one or more collection values, each
consisting of a number of member attributes that specify a subscription,
so that a Job can have more than one Per-Job subscription.  The
'collection' is a new attribute syntax (see [ipp-coll]).  The member
attributes of each collection value are copied to separate Subscription
objects to populate the corresponding Subscription Description
attributes.

For Per-Printer subscriptions and Per-Job subscriptions created after
the Job has been created, a client requests job and printer event
notification using new operations independent of any job.  The Printer
keeps each subscription in a separate Subscription object.  The Create-
Job-Subscription and Create-Printer-Subscription operations create an
instance of the Subscription object supplying these new operation
attributes and returns a subscription-id (analogous to a job-id for a
Job object).  These operation attributes are copied to the Subscription
object as Subscription Description attributes and so may be queried
using the Get-Subscription-Attributes and Get-Subscriptions operations.
The subscriber requests a lease time for each Per-Printer subscription


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman           [page 8]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


which MAY be infinite.  The Printer grants a lease time according to its
configured policy.  A client MUST renew the Subscription before the
granted lease time expires using the Renew-Subscription operation.

Table 1 summarizes the Per-Job and Per-Printer Subscription operations
and their salient input operation attributes.

  Table 1 - Summary of Per-Job and Per-Printer Subscription operations

Operation:          Per- Per-  salient inputs beside printer-uri:
                     Job  Prin
                           ter

Print-Job, Print-   yes  no    1setOf {recipient, [events,] [text-
URI, Create-Job                 format,] [user-data,] [charset,]
                                 [natural-language]}

Validate-Job        yes  no    1setOf {recipient, [events,] [text-
                                 format,] [user-data,] [charset,]
                                 [natural-language]}

Create-Printer-     no   yes   recipient, [events,] [text-format,]
Subscription                    [user-data,] [charset,] [natural-
                                 language,] [lease-time-requested,]
                                 [persistence-requested]

Create-Job-         yes  no    recipient, job-id, [events,] [text-
Subscription                    format,] [user-data,] [charset,]
                                 [natural-language,]

Get-Subscription-   yes  yes   subscription-id, [requested-
Attributes                      attributes]

Get-Subscriptions   yes  yes   [job-id], [my-subscriptions,]
                                 [requested-attributes]

Renew-Subscription  yes  yes   subscription-id, [lease time-
                                 requested]

Cancel-Subscription yes  yes   subscription-id


There are two steps that IPP notification must take regarding each event
. an internal event recording, and an external notification:

     1) As an events occurs, the printer internally records in the job
     objects and the printer objects those events which are required to
     be supported by the system and those that are subscribed to by a
     notification recipient.

     2) As an events occurs, the Printer searches the set of
     subscriptions for any interest in that event.  As the Printer finds
     that some notification recipient is interested in that event (the
     notification recipient is subscribed to the event), the "request-
     id" sequence number for that event is incremented and a
     notification is generated and delivered using the methods and
     target addresses identified in the subscription.  The "request-id"
     sequence number permits a Notification Recipient to detect


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman           [page 9]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


     duplicate notifications due either to duplicate subscriptions or
     retries and to detect dropped notifications.


2  Model for Per-Job and Per-Printer Subscription and Event Notification


2.1 Model for Per-Job Subscription and Notification

Per-Job subscriptions are created by a client (desktop or server acting
as a client) as part of creation of the job in an IPP Printer (printing
device or server).  More than one subscription may be submitted with a
job.  Additional subscriptions may be associated with the job using the
Create-Job-Subscription operation.  The IPP Printer object delivers a
Notifications to the Notification Recipient supplied by the Client in
each subscription.  A Notification Recipient can be the Job submitter or
a third party.

Figure 1 shows the Per-Job subscription notification model for a simple
Client - Printer relationship.


embedded printer:
                                        output device or server
     desktop or server                     +---------------+
        +--------+                         |  ###########  |
        | client |---IPP job submission------># Printer #  |
        +--------+  Per-Job subscription   |  # Object  #  |
     +------------+                        |  #####|#####  |
     |Notification|                        +-------|-------+
     |Recipient   |<-----IPP Notifications---------+
     +------------+    (Job and/or Printer events)

 Figure 1 - Client-Printer Per-Job Subscription and Notification Model

Figure 2 shows a (spooling or non-spooling) Server that implements two
Printer objects (1 and 2) that represent two devices.  The devices A and
B in turn each implement an IPP Printer object (3 and 4, respectively).
The Server implementation has three choices for how to support Per-Job
subscriptions to the client (and itself):

     1.forward the Per-Job subscriptions to the down stream IPP Printer
       and let it perform the notification directly to the Notification
       Recipients supplied by the Client (Notifications(C)) and use
       Per-Printer Subscriptions for the Server's own purposes.

     2.save the client-supplied Per-Job subscription on the Job object
       in the server and substitute its own Per-Job subscription with
       the Server as the Notification Recipient (Notifications(B)).
       Then the Server relays Notifications to the client-supplied
       Notification Recipients (Notifications(A)).

     3.A combination of 1 and 2 in which the Server adds its own Per-
       Job subscriptions to those supplied by the client.  Thus the IPP
       Job that goes to Printer object 4 has a combination of


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 10]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


       subscription information from both the Client and the Server.
       This latter approach is sometimes called "piggy-backing" because
       the Server is adding its Per-Job subscription information to
       that supplied by the client.  Piggy-backing is especially
       useful, if device B also accepts (IPP or non-IPP) requests from
       other servers.  Then when all the jobs from Server S have been
       completed by device B, there will be no more Job events sent to
       Server S.  (Server S could still maintain a long term Per-
       Printer subscription with Printer D to that Server S can have
       Printer B's state track (shadow) that of Printer D or Server S
       could poll Printer D when queried about Printer B).


                                                          device A
                           server S                    +------------+
                        +------------+                 | ###########|
+--------+   IPP Job    | ###########|    IPP Job      | # Printer #|
| client |--submission---># Printer #|---submission-----># Object 3#|
+--------+   Per-Job    | # Object 1#|    Per-Job      | ###########|
           subscription | ###########|   subscription  +------------+
                        |            |                    device B
+--------+   IPP Job    | ###########|                 +------------+
| client |--submission---># Printer #|    IPP Job      | ###########|
+--------+   Per-Job    | # Object 2#|---submission-----># Printer #|
           subscription | ###|#######|    Per-Job      | # Object 4#|
                        +----|---^---+   subscription  | ####|#|####|
+--------+                   |   |                     +-----|-|----+
|Notific-|<-Notifications(A)-+   +--- Notifications(B)-------+ |
|ation Re|<----------------Notifications(C)--------------------+
|cipient |
+--------+

 Figure 2 - Client-Server-Printer Per-Job Subscription and Notification
                                 Model


2.2 Model for Per-Printer Subscription and Notification

Per-Printer subscriptions are created by a client (an end user, an
operator, or a server acting as a client) using a Create-Printer-
Subscription operation that is independent of Job Submission.  The
Printer object (printing device or server) creates a Subscription object
to hold the attributes supplied by the subscriber.  The client creates
separate Per-Printer subscriptions if more than one Notification
Recipient is desired.  The Printer delivers Notifications to the
Notification Recipient specified by each Per-Printer subscription.  A
Notification Recipient may be the subscriber or a third party.  Figure 3
shows the Per-Printer subscription notification model for the Client -
Printer relationship where the client may be an end user, an operator,
or a server acting as a client.





Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 11]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999



       desktop or server                    server or printing device
                                                   +---------------+
       +--------+                                  |  ###########  |
       | client |---Create-Printer-Subscription------># Printer #  |
       +--------+    (Per-Printer subscription)    |  # Object  #  |
                                                   |  #####|#####  |
    +------------+                                 +-------|-------+
    |Notification|<----------IPP Notifications-------------+
    |Recipient   |    (Job and/or Printer events)
    +------------+

  Figure 3 - Client-Printer Per-Printer Subscription and Notification
                                 Model


2.3 Relationship between the Printer object and the Notification
    Delivery Service

The IPP Notification model does not mandate that the IPP Printer object
implement the full semantics of subscription, report generation, and
multiple delivery methods itself.  This section describes two methods of
using third party notification services.  The first is transparent to
the client and the second is transparent to the IPP Printer.

2.3.1 Use of a Notification Service transparently to clients

An implementation may be configured to use some other notification
service to either (1) delivery the Notifications to the Notification
Recipient(s) specified in the IPP Subscription or (2) keep the
Subscriptions, accept events, possibly format the notification in the
natural language of the Notification Recipient when a Human Consumable
text format is used, and deliver the Notifications to the Notification
Recipient(s) indicated in the IPP Subscription.  Figure 4 shows this
partitioning.




















Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 12]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999



                                        output device or server
     desktop or server                     +---------------+
        +--------+                         |  ###########  |
        | client |---IPP subscription--------># Printer #  |
        +--------+                         |  # Object  #  |
                                           |  #####|#####  |
                                           +-------|-------+
                                                   | Subscriptions
                                            *******| OR Events
     +------------+                        *       |
     |Notification|                       * +------v--------+
     |Recipient   |<--IPP Notifications-----| Notification  |
     +------------+                      *  | Service       |
                                         *  +---------------+
                                         *
     *** = Implementation configuration opaque boundary


   Figure 4 - Opaque Use of a Notification Service Transparent to the
                                 Client

In any case, the interface between the IPP Printer and the other
notification service is outside the scope of this document and is
intended to be transparent to the client and this specification.

2.3.2 Use of Notification Service transparently to the IPP Printer

Another way that a Notification Service can be used is if the
Notification Recipient indicated in the IPP Subscription is a
notification service (transparent to the IPP Printer), which in turn
forwards the Notification to the Ultimate Notification Recipient using
additional parameters in the IPP Subscription (URI parameters or
subscriber user data).  In such cases, the Ultimate Notification
Recipient has also subscribed directly with the other notification
service (by means outside this document).  As far as the IPP Printer is
concerned, the IPP Subscription indicated that the IPP Printer is to
delivery Notifications to the Notification Recipient (Notification
Service) using the specified notification delivery method.  The method
that the Notification Recipient uses for delivering the notification to
the Ultimate Notification Recipient is beyond the scope of this document
and is transparent to the IPP Printer.  However, the client does have to
know how to pass additional information to the Notification Recipient in
the IPP Subscription using either extra parameters in the URI or
subscriber user data.  Examples of this latter approach are paging,
immediate messaging services, and NOS vendors infrastructure.  Figure 5
shows this approach.







Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 13]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999



       desktop or server                    server or printing device
                                                   +---------------+
       +--------+                                  |  ###########  |
       | client |----------IPP Subscriptions---------># Printer #  |
       +--------+                                  |  # Object  #  |
                                                   |  #####|#####  |
+------------+     +------------+                  +-------|-------+
|Ultimate    |     |Notification|<---IPP Notifications-----+
|Notification|<----|Recipient   |
|Recipient   |     +------------+
+------------+     (Notification Service)

Figure 5 - Use of a Notification Service transparent to the IPP Printer


3  Terminology


This section defines terminology used throughout this document.


3.1 Conformance Terminology

  Capitalized terms, such as MUST, MUST NOT, REQUIRED, SHOULD, SHOULD
     NOT, MAY, NEED NOT, and OPTIONAL, have special meaning relating to
     conformance to this specification.  These terms are defined in
     [ipp-mod section 13.1 on conformance terminology, most of which is
     taken from RFC 2119 [RFC2119].
          Since support of this entire notification specification is
          OPTIONAL for conformance to IPP/1.0 or IPP/1.1, the use of the
          term REQUIRED (R) in this document means "REQUIRED if this
          notification specification is implemented".  Likewise, the
          term RECOMMENDED means "RECOMMENDED if this notification
          specification is implemented" and OPTIONAL (O) means OPTIONAL
          if this notification specification is implemented.
  READ-ONLY - indicates an attribute that MUST NOT be settable using
     the Set-Job-Attributes or Set-Printer-Attributes operations (see
     [ipp-set2]).

3.2 Other terminology

  Job Submitting End User  - A human end user who submits a print job
     to an IPP Printer.  This person may or may not be within the same
     security domain as the Printer. This person may or may not be
     geographically near the printer.
  Administrator - A human user who established policy for and
     configures the print system.
  Operator - A human user who carries out the policy established by the
     Administrator and controls the day to day running of the print
     system.
  Job Submitting Application - An application (for example, a batch
     application), acting on behalf of a Job Submitting End User, which
     submits a print job to an IPP Printer. The application may or may


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 14]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


     not be within the same security domain as the Printer. This
     application may or may not be geographically near the printer.
  Security Domain - The set of network components which can communicate
     without going through a proxy or firewall. A security domain may be
     geographically very large, for example - anyplace within IBM.COM.
  IPP Client (or client) - The software component (desktop or server)
     that sends an IPP operation request to an IPP Printer object
     (server or printing device) and accepts the resulting operation
     response from the IPP Printer object.
  Job Recipient - A human who is the ultimate consumer of the print
     job. In many cases this will be the same person as the Job
     Submitting End User, but need not be.
     Example:  If I use IPP to print a document on a printer in a
     business partner's office, I am the Job Submitting End User, while
     the person I intend the document for in my business partner's
     office is the Job Recipient.  Since one of the goals of IPP is to
     be able to print near the Job Recipient of the printed output, we
     would normally expect that person to be in the same security domain
     as, and geographically near, the Printer. However, this may not
     always be the case. For example, I submit a print job across the
     Internet to a Kinko's print shop. I am both the Submitting End User
     and the Job Recipient, but I am neither near nor in the same
     security domain as the Printer.
  Job Recipient Proxy  - A human acting on behalf of the Job Recipient.
     In particular, the Job Recipient Proxy physically picks up the
     printed document from the Printer, if the Job Recipient cannot
     perform that function. The Proxy is by definition geographically
     near and in the same security domain as the printer.
     Example:  I submit a print job from home to be printed on a printer
     at work. I'd like my secretary to pick up the print job and put it
     on my desk. In this case,  I am acting as both Job Submitting End
     User and Job Recipient. My secretary is acting as a Job Recipient
     Proxy
  Notification Subscriber (or Subscriber) - A client that requests the
     IPP Printer to send Event Notifications to one or more Notification
     Recipients.  A Notification Subscriber may be:
     1.a Job Submitting End User or Job Submitting Application (desktop
       or server) that is submitting a job or
     2.an End User, an Operator, or an Administrator that is not
       submitting a job.
  Subscription  - A request by a Notification Subscriber to the IPP
     Printer to send Event Notifications to a specified Notification
     Recipient when the event occur.  A Subscription is represented as a
     set of attributes that indicate the "what, where, who, and how" for
     notification.  Notifications are generated for certain events
     (what) and delivered using various delivery methods (how) to
     certain addresses (where and who).
  Per-Job Subscription - A Subscription that a client specifies as part
     of a create job operation (Print-Job, Print-URI, Create-Job), a
     Validate-Job operation, or an explicit Create-Job-Subscription
     operation with a Job object as the target.

Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 15]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


  Per-Printer Subscription - A Subscription that a client specifies
     using an explicit Create-Printer-Subscription operation with a
     Printer object as the target.
  Notification Source - The entity that sends Event Notifications.  It
     MAY be the IPP Printer itself or the IPP Printer MAY be configured
     to use a Notification Service to delivery Notifications
     transparently to the subscribing clients  (see Figure 4).
  Notification Recipient  - The entity identified as a recipient within
     a subscription that receives IPP Notifications about Job and/or
     Printer events  (see Figure 4 and Figure 5).   A Notification
     Recipient may be a: Job Submitting End User, Job Submitting
     Application (desktop or server), Job Recipient, Job Recipient
     Proxy, a Notification Service, an Operator, or Administrator, etc.,
     and their representative or log file or usage statistics gathering
     application or other active or passive entities.
  Ultimate Notification Recipient - The entity to which the
     Notification Recipient (stores and) forwards an IPP Notification
     when the Notification Recipient is a Notification Service (see
     Figure 5).
  Event  - An event is some occurrence (either expected or unexpected)
     within the printing system of a change of state, condition, or
     configuration of a Job or Printer object.  A property of an event
     is that it only occurs at one instant in time and does not span the
     time the physical event takes place.  For instance, jam-occurred
     and jam-cleared are two distinct events.  The jam-occurred event is
     reported only when the jam initially occurs and only if there is
     one or more event subscriptions outstanding for that event.

     Events can be classified along two dimensions:
       - Either as Job Events or Printer Events, and
       - Either as Errors, Warnings, or Reports

     A Job event is some interesting state change in the Job object, and
     a Printer event is some interesting change in the Printer object.

     A report event is purely informational, such as 'job-completed' or
     'accepting-jobs'.  A warning is not serious and processing
     continues.  An error is serious and either the job is aborted or
     the printer stops.  These are typical uses of the terms report,
     warning, and error, although the actual usage is implementation
     dependent.

     An event occurs for a job or printer whether any entity has
     subscribed to be notified for that event or not.  A notification is
     only generated depending on the set of subscriptions outstanding.

  Notification  - When an event occurs, a Notification is generated
     that fully describes the event (what the event was, where it
     occurred, when it occurred, etc.).  Notifications are delivered to
     each Notification Recipient that has a subscription that includes
     the event, if any.  The Notification is delivered to the address of

Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 16]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


     the Notification Recipient using the notification delivery method
     defined in the subscription.  However, a Notification is sent ONLY
     if there is a corresponding subscription.
  Notification Delivery Method (or Delivery Method for short) -
     Notifications are delivered using a method, such as email, TCP/IP,
     etc.
  Immediate Notification - Notifications that are delivered using a
     delivery method which is not store-and-forward (e.g. TCP
     connection, UDP datagram). This can be on the order of several
     minutes subject to network latency.
  Store and Forward Notification  - A Notification which are not
     necessarily delivered to Notification Recipients immediately, but
     is queued for delivery by some intermediate network application,
     for later retrieval.  Email and Instant Messaging services are
     examples of a store and forward notification delivery method.
  Human Consumable Notification - Notifications that are intended to be
     consumed by human End Users only.  They are simple text that has
     been localized for the Notification Recipient as specified in the
     subscription.  Programs are not intended to parse Human Consumable
     Notification, since it is localized and the content depends on
     implementation.  There is no standardized format.
  Machine Consumable Notification - Notifications that are intended for
     consumption by a program only.  They use the encoding of an IPP
     response.  The Notification Recipient must localize the contents,
     if displaying it to a human.

4  Object Model for Notification


This section describes the notification object model that adds a
REQUIRED Subscription object which together with the Job and Printer
object provide the complete notification semantics.





















Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 17]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


The object relationships can be seen pictorially as:


   Subscription objects (Per-Printer Subscriptions)     Printer object
   +----+                                                +------------+
   | s1 |<---------------------------------------------->|            |
   +----++                                               |            |
    | s2 |<--------------------------------------------->|     p1     |
    +----++                                              |            |
     | s3 |<-------------------------------------------->|            |
     +----+                                              +------------+
                    Job objects
                     +---------+
                     |         |
     +----+          |   j1    |
     | s4 |<-------->|         |
     +----+          |         |
                     |         |     s4 is a Per-Job subscription object
                     ++--------++
                      |         |
       +----+         |   j2    |
       | s5 |<------->|         |
       +----++        |         |
        | s6 |<------>|         |     s5 and s6 are Per-Job subscription
        +----+        ++--------++                  objects
                       |         |
                       |   j3    |
                       |         |
                       |         |          <----> indicates association
                       +---------+

                Figure 6 - Object Model for Notification

     s1, s2, and s3 are Per-Printer Subscription objects and can
     identify Printer and/or Job events.

     s4, s5, and s6 are Per-Job subscription objects and can identify
     Printer and/or Job events.


4.1 Object relationships

The object relationships can be stated as follows:

  1. The Printer object contains zero or more Per-Printer Subscription
     objects (p1 contains s1-s3 Per-Printer Subscription objects).

  2. Each Per-Printer Subscription object (s1, s2, and s3) is contained
     in one Printer object (p1) and each represents one Per-Printer
     subscription.

  3. Each "Per-Printer" Subscription object identifies one or more Job
     and/or Printer events.  Such Job events are for all jobs on the
     Printer.  Such Printer events are for any Printer event, no matter
     which job is processing and when no jobs are processing.


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 18]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


  4. A Job object is associated with zero or more Per-Job subscription
     objects.  Job j1 is associated with Per-Job subscription object s4,
     Job j2 is associated with Per-Job subscription objects s5 and s6,
     and Job j3 is not associated with any Per-Job subscription object.
     Note:  the IPP notification interface semantics are defined so that
     an implementation MAY associate Per-Job Subscription objects with
     Job objects by having the Job objects actually contain its
     associated Per-Job Subscription objects or MAY just use some
     internal bi-directional linking mechanism between the Job and
     Subscription objects.  Either implementation technique is
     transparent to the client.

  5. Each "Per-Job" subscription object identifies one or more Job
     and/or Printer events.  Such Job events are only for this job
     (different than "per-Printer" Subscriptions).  Such Printer events
     are for any Printer event, no matter which job and when no jobs are
     processing (same as for "per-Printer" Subscriptions).

  6. A Per-Printer Subscription object cannot be contained in or
     associated with more than one Printer object.

  7. A Per-Job Subscription object cannot be contained in or associated
     with more than one Job object.


5  Subscription Object attributes


The following notification attributes are defined for the Subscription
object.  The definitions of the object attributes are specified here so
that they can be referred to from the subsequence definitions of the
operations that set them.























Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 19]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


                Table 2 - Subscription object attributes

   Subscription object attributes:    Print READ-ONLY, set by:
                                       er
                                       suppo
                                       rt

   notify-recipient (uri)             REQUI client - Job Creation,
                                       RED   Create-Job-Subscription,
                                              and Create-Printer-
                                              Subscription

   notify-events (1setOf type2        REQUI client - Job Creation,
   keyword)                           RED   Create-Job-Subscription,
                                              and Create-Printer-
                                              Subscription

   notify-text-format (mimeMediaType) REQUI client - Job Creation,
                                       RED   Create-Job-Subscription,
                                              and Create-Printer-
                                              Subscription

   subscriber-user-data               REQUI client - Job Creation,
   (octetString(63))                  RED   Create-Job-Subscription,
                                              and Create-Printer-
                                              Subscription

   notify-charset (charset)           OOPTI client - Job Creation,
                                       ONAL  Create-Job-Subscription,
                                              and Create-Printer-
                                              Subscription

   notify-natural-languages (1setOf   OOPTI client - Job Creation,
   naturalLanguage)                   ONAL  Create-Job-Subscription,
                                              and Create-Printer-
                                              Subscription


   request-id (integer(0:MAX))        REQUI initialized to 0,
                                       RED   incremented by Printer -
                                              beginning of each event


   subscription-id (integer(1:MAX))   REQUI Printer - Job Creation,
                                       RED   Create-Job-Subscription,
                                              and Create-Printer-
                                              Subscription

   notify-lease-expiration-time       REQUI Printer - Job Creation
   (integer(0:MAX))                   RED   (set to 0) and Create-
                                              Printer-Subscription,
                                              Renew-Subscription

   printer-uri (uri)                  REQUI Printer - Job Creation,
                                       RED   Create-Job-Subscription,
                                              and Create-Printer-
                                              Subscription


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 20]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


   subscriber-user-name (name(MAX))   OPTIO Printer - Job Creation,
                                       NAL   Create-Job-Subscription,
                                              and Create-Printer-
                                              Subscription


   notify-printer-up-time             REQUI Printer - returned by
   (integer(1:MAX))                   RED   Create-Printer-
                                              Subscription, Get-
                                              Subscription-Attributes,
                                              and Get-Subscriptions

   notify-persistence-granted         REQUI Printer - returned by
   (boolean)                          RED   Create-Job-Subscription
                                              and Create-Printer-
                                              Subscription

Note:  The Subscription object does not contain the "job-id"
Subscription Description attribute.  The Get-Subscriptions operation has
the "job-id" as an input operation attribute, so the "job-id" isn't
returned in the response.  If an implementation needs such a link
between Subscription objects and Job objects, then it keeps such a link
as in internal attribute.  The intent is that whether Per-Job
Subscription objects are actually contained in a Job object or are just
associated with them in some way is IMPLEMENTATION DEPENDENT and is
transparent to the client.


5.1 notify-recipient (uri)

This REQUIRED READ-ONLY Subscription object attribute describes both
where (the address of the Notification Recipient) and how (the delivery
method) notifications are to be delivered to the Notification Recipient
when any of the events specified in the "notify-events" attribute occur.

There are potentially many different notification delivery methods for
IPP notifications, standardized as well as proprietary.  This document
does not define any of these delivery mechanisms;  they will each be
described in separate complementary documents.

Each of the notification delivery method documents must provide at least
the following information:

  1) The URI scheme used.

  2) The supported and default delivery format, and if not one of the
     specified types in Section 5.3, description of the notification
     content.

  3)Any content length restrictions imposed by the delivery protocol.

  4) The latency of the delivery protocol used.

  5)The reliability of the transport and delivery protocol used.

  6)  The security aspects of the transport and delivery protocol used,
     e.g. how it is handled in firewalls.


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 21]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


  7) How the delivery protocol is initiated, e.g. does it have to be
     initiated by the receiving user (pull), or is it initiated by the
     notification service (push).

ISSUE 1 -  Once a number of delivery solutions have been developed and
evaluated, we may want to make one or several of them REQUIRED for
implementation to ensure a minimum set of interoperability.  Which one
or ones should be REQUIRED?


5.2 notify-events (1setOf type2 keyword)

This REQUIRED READ-ONLY Subscription object attribute identifies the job
and/or printer events that are to be delivered to the Notification
Recipient as Notifications as defined in section 7.  If the client did
not supply this attribute when supplying the subscription, the Printer
object populates this attribute with its "notify-events-default"
attribute value (see section 6.2).

There are both job events and printer events.  Each job and printer
event is assigned a keyword to use in this attribute and in the
Notification.

The events are defined to be disjoint.

A Printer MUST support the events indicated as "REQUIRED".

The standard job event keyword values are:

  'none':  REQUIRED - no notifications of any events (an IPP object can
     use this value to indicate that it is configured not to support
     event notification; a client would not subscribe to this event).
  'job-created':  REQUIRED - the Printer object has accepted  a job
     creation operation (Print-Job, Print-URI, or Create-Job) and the
     job's "time-at-creation" attribute value is set (see [ipp-mod]
     section 4.3.14.1).  The Printer puts the job in the 'pending',
     'pending-held' or 'processing' states.
     Note:  This event is separate from the 'job-state-changed' event so
     that it can be subscribed to without having to get every job state
     change event for a Notification Recipient that is only interested
     in when the job is first created.
  'job-completed':  REQUIRED - the job has reached one of the completed
     states, i.e., the value of the job's "job-state" attribute has
     changed to: 'completed', 'aborted', or 'canceled'.  The Job's
     "time-at-completed" and "date-time-at-completed" (if supported)
     attributes are set (see [ipp-mod] section 4.3.14).
     Note:  This event is separate from 'job-state-changed' so that it
     can be subscribed to without having to get every job state change
     event for a Notification Recipient that is only interested in when
     the job is completed.
  'job-state-changed':  REQUIRED - the job has changed from any state
     to any other state and/or a value has been added or removed from
     the job's "job-state-reasons" attribute, except when the job is
     created or when the job moves to any of the "completed" job states
     ('completed', 'aborted', or 'canceled').


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 22]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999



     This event also indicates that one or more values have been added
     to or removed from the Job's "job-state-reasons" attribute, such as
     'job-queued' or 'job-printing', whether or not the job's state has
     changed.  If job state reasons are added when the job is created,
     only the 'job-created' event is generated, in order to keep the
     events disjoint.  If job state reasons are added or removed when
     the job is completed, only the 'job-completed' event is generated,
     in order to keep the events disjoint.

     A client that wants to subscribe to all job state changes,
     including creation and completion, includes the 'job-created',
     'job-state-changed', and 'job-completed' in the notification
     subscription.  When a job is finally removed from the Job History
     (see [ipp-mod] 4.3.7.1) no event is generated, i.e., neither a
     'job-state-changed' event nor a 'job-purged' event is generated.
  'job-config-changed':  OPTIONAL . when the configuration of a job has
     changed, i.e., the value of the "job-message-from-operator" or any
     of the non-READ-ONLY Job attributes have changed, such as any of
     the job template attributes or the "job-name" attribute.
     Typically, such a change is the result of the user or the operator
     performing a Set-Job-Attributes operation (see [ipp-set2]) on the
     Job object.  The client performs a Get-Job-Attributes to find out
     the new values of the changed attributes.  This event is useful for
     GUI clients and drivers to update the job information to the user.
  'job-purged':  OPTIONAL - when a 'not-completed' job (i.e., not
     'completed', 'canceled', or 'aborted') was purged from the printer
     using the Purge-Jobs operation.  No event, including this event, is
     generated when a job is aged out of the Job History or moved out
     explicitly with the Purge-Jobs operation.
  'job-progress' - a sheet or copy has completed.  See separate [ipp-
     prog] spec.


The standard Printer event keywords values are:

  'none':  REQUIRED - no notification of any events (an IPP object can
     use this value to indicate that it is configured not to support
     event notification; a client would not subscribe to this event).
  'printer-restarted':  OPTIONAL - when the printer is powered up or
     the Restart-Printer operation is performed (see [ipp-set2]).
     Note:  This event is separate from the 'printer-state-changed'
     event so that it can be subscribed to without having to get every
     printer state change event, for a Notification Recipient that is
     only interested in when the Printer first comes up.
  'printer-shutdown':  OPTIONAL - when the device is being powered down
     or the Shutdown-Printer operation has been performed with either
     power-off or standby options (see [ipp-set2]).
     Note:  This event is separate from 'printer-state-changed' so that
     it can be subscribed to without having to get every Printer state
     change event, for a Notification Recipient that is only interested
     in when the Printer is powered down or shutdown.


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 23]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


  'printer-state-changed':  REQUIRED - the Printer changed state, i.e.,
     the value of the Printer's "printer-state", "printer-state-reasons"
     (whether "printer-state" changed or not), and/or "printer-is-
     accepting-jobs" attributes changed, except when the Printer starts
     up or is shutdown.  If printer state reasons are added when the
     Printer is started up, only the 'printer-restarted' event is
     generated, in order to keep the events disjoint.  If printer state
     reasons are added or removed when the printer is powered-down or
     shutdown, only the 'printer-shutdown' event is generated, in order
     to keep the events disjoint.

     A client that wants to subscribe to all printer state changes,
     including restart and power-down/shutdown, includes the 'printer-
     restarted', 'printer-state-changed', and 'printer-shutdown' in the
     notification subscription.
  'printer-media-changed':  OPTIONAL . when the media loaded on a
     printer has been changed, i.e., the "media-ready" attribute has
     changed.  This event includes both an actual media change and
     filling an empty input tray with the same or different media.  The
     client must check the "media-ready" Printer attribute (see [ipp-
     mod] section 4.2.11) separately to find out what new media was
     loaded or filled.
  'printer-config-changed':  OPTIONAL . when the configuration of a
     Printer has changed, i.e., the value of the "printer-message-from-
     operator" or any non-READ-ONLY Printer attribute has changed,
     except for "media-ready" (which has its own event), whether through
     the Set-Printer-Attributes operation or by other means and whether
     initiated by a human or not.  For example, any "xxx-supported",
     "xxx-default", "printer-message-from-operator", etc. values have
     changed.  The client has to perform a Get-Printer-Attributes to
     find out the new values of these changed attributes.  This event is
     useful for GUI clients and drivers to update the available printer
     capabilities to the user.
  'printer-queue-changed': OPTIONAL - the order of jobs in the
     Printer's queue has changed, so that an application that is
     monitoring the queue can perform a Get-Jobs operation to determine
     the new order.  This event does not include when a job enters the
     queue (the 'job-created' event covers that) and does not include
     when a job leaves the queue (the 'job-completed' event covers
     that).
  'printer-no-longer-full':  OPTIONAL . when the Printer can now accept
     a Print-Job, Print-URI, Create-Job, Send-Document, or Send-URI
     request.  This event is used when there is more than one client
     feeding a printer/server (fan-in), and the Printer may still be
     printing but has acquired more buffer space to accept jobs.  This
     event only occurs when the Printer did not have room to accept jobs
     previously and rejected a Print-Job, Print-URI, Create-Job, Send-
     Document, or Send-URI operation.
  'printer-almost-idle':  OPTIONAL . when the Printer needs another Job
     in order to stay busy.  This event is used when a spooler is
     feeding more than one printer/server (fan-out), and the spooler

Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 24]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


     holds jobs until a Printer requests them, rather than committing
     jobs to IPP Printers before it is necessary.  This event MAY be
     used by a Printer implementation to request a new job from any
     subscribers sufficiently ahead of time so that the device does not
     run out of work between jobs.



5.3 notify-text-format (mimeMediaType)

This REQUIRED READ-ONLY Subscription object attribute indicates the type
of Human Consumable format content that is to be sent in the
notifications, instead of the Machine Consumable format defined for the
notification scheme, if any.  Most delivery methods are defined to have
a particular Machine Consumable forms of notification content type and
to permit Human Consumable forms as well.  An implementation MAY support
one or more Human Consumable formats, i.e., 'text' MIME media types, for
those delivery methods that permit the Human Consumable form.

If the 'text' MIME media type registration permits a charset parameter,
than such a specification MUST be used (instead of the "notify-charset"
attribute) in order to indicate the charset to be used in the
notification content.

If the Subscriber did not supply this attribute when requesting the
subscription, the Printer object populates this Subscription object
attribute with either the 'none' value or one of the values of the
Printer's "notify-text-format-supported" attribute (see section 6.5),
depending on whether or not the delivery method specified in the
"notify-recipient" attribute is defined to have a Machine Consumable
format (usual), respectively.  In the latter case, the value selected
depends on the implementation.

Standard mimeMediaType values are:

     'none':  Indicates that the notification content is not to be any
     of the text types, i.e., that the Machine Consumable, not the Human
     Consumable, form is to be sent.  If the client omits supplying this
     attribute, the meaning is the same as if the client supplied the
     'none' value.

     'text/plain; charset=utf-8':  A plain text document in ISO 10646
          represented as UTF-8 [RFC2279] as defined in section 7.

     'text/html':  An HTML document [rfc????].



5.4 subscriber-user-data (octetString(63))

This REQUIRED READ-ONLY Subscription object attribute holds opaque
information being sent from the Subscriber to the Notification
Recipient, such as the identify of the Subscriber or a path or index to
some Subscriber information.  Or it MAY contain a key that the
Notification Recipient needs in order to process the Notification, such


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 25]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


as the ultimate recipient, if the Notification Recipient is a general
application that in turn forwards notifications and the ultimate
recipient isn't included in the value of the "notify-recipient"
attribute.  An Instant Messaging Service is an example of such a general
application where the "subscriber-user-data" might be the user's id for
that messaging service and the "notification-recipient" is the URL of
the messaging service.


5.5 notify-charset (charset)

This OPTIONAL READ-ONLY Subscription object attribute specifies the
charset to be used in the Notification content sent to the Notification
Recipient, whether the notification content is Machine Consumable or
Human Consumable.  This attribute MUST NOT be used when the "notify-
text-format" attribute value specifies the charset parameter in its MIME
media type value, e.g., 'text/plain; charset=utf-8'.


5.6 notify-natural-language (naturalLanguage)

This OPTIONAL READ-ONLY Subscription object attribute specifies the
natural language for the IPP object to use in the Notification content
that is sent to the Notification Recipient, whether the notification
content is Machine Consumable or Human Consumable.


5.7 request-id

This REQUIRED READ-ONLY Subscription object attribute holds the most
recent request-id sequence number delivered in a Notification content to
the Notification Recipient.  A value of 0 indicates that no
Notifications have been sent for this subscription.  The first request-
id sent for a subscription MUST be 1.  Each Notification Recipient has
its own monotonically increasing series of request-ids, i.e., no gaps,
in order to be able to detect a missing notification.


5.8 subscription-id (integer (1:MAX))

This REQUIRED READ-ONLY Subscription object attribute uniquely
identifies this Subscription object instance on this Printer object or
this Job object.  The Printer object, on acceptance of a Create-Job-
Subscription or Create-Printer-Subscription request, generates an ID
which identifies the new Subscription object on that Printer or Job.
The Printer returns the value of the "subscription-id" attribute as part
of the response to a Create-Job-Subscription or Create-Printer-
Subscription request.  The 0 value is not included to allow for
compatibility with "job-id" and with SNMP index values which also cannot
be 0.

It is RECOMMENDED that Per-Printer Subscription objects be persistent.
Then the Subscription objects including the subscription-id remains
unique across power-cycles.  Even if an implementation does not make
Per-Printer subscription objects persist, the implementation SHOULD make
every attempt not to re-use subscription ids that subscribers might


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 26]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


still think are valid.  In other words, the Printer SHOULD at least keep
the next subscription-id to be assigned in non-volatile memory.  Note:
it is assumed that Per-Job subscriptions are persistent if Jobs are
persistent, in order to be consistent with the persistency of Job
objects.  The [ipp-mod] RECOMMENDS that Job objects be persistent.


5.9 notify-lease-expiration-time (integer(0:MAX))

This REQUIRED READ-ONLY Subscription object attribute specifies the time
in the future when the subscription lease will expire, i.e., the
"printer-up-time" value at which the lease will expire.  When the
Printer object creates a Per-Printer Subscription object, it populates
this attribute with the appropriate value.  When the indicated time
arrives, the Printer MUST delete the Per-Printer Subscription object.
Per-Job Subscription objects always return a value of 0 since Per-Job
Subscriptions don't have a lease, but exist for the life-time of the Job
instead.

A client is able to extend a lease of a Per-Printer subscription using
the Renew-Subscription operation (see section 8.3.3).  A value of 0
indicates an infinite time, if such a policy is supported as indicated
in the "notify-lease-time-supported" (integer(0:MAX)) Printer
Description attribute (see section 6.8) and the subscriber is authorized
to request an infinite lease.  A Per-Job subscription cannot be renewed.

Note: In order to compute the number of seconds remaining in a Per-
Printer Subscription lease, a client can subtract the "notify-printer-
up-time" Subscription object attribute (see section 5.12) from the
"notify-lease-expiration-time" Subscription object attribute.


5.10printer-uri (uri)

This REQUIRED READ-ONLY Subscription object attribute identifies the
Printer object that created this Subscription object.  When a Printer
object creates a Subscription object, it populates this attribute with
the Printer object URI that was used in the create request.  This
attribute permits a client to identify the Printer object URI that was
used to create this Subscription object, i.e., what security scheme was
used.


5.11subscriber-user-name (name(MAX))

This OPTIONAL READ-ONLY Subscription object attribute contains the name
of the user that created the Subscription object.  The Printer object
sets this attribute to the most authenticated printable name that it can
obtain from the authentication service over which the IPP operation was
received.  This attribute is intended to help a human user determine for
which Per-Printer Subscriptions they are the Subscriber.  Only if such
is not available, does the Printer object use the value supplied by the
client in the "requesting-user-name" operation attribute of the create
operation (see [IPP-MOD] Sections 4.4.2, 4.4.3, and 8).  For Per-Job
subscriptions created as part of the Job creation operation, the value


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 27]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


of the "subscriber-user-name" is the same as the "job-originating-user-
name" Job attribute (see [ipp-mod] section 4.3.6).

The value of the "subscriber-user-name" is implementation dependent when
a server accepts a request and forwards it to a downstream IPP Printer
(see Figure 2 and the [ipp-iig]).

Note:  The Printer object needs to keep an internal originating user id
of some form, typically as a credential of a principal, with the
Subscription object.  Since such an internal attribute is
implementation-dependent and not of interest to clients, it is not
specified as a Subscription Description attribute.  This originating
user id is used for authorization checks (if any) on all subsequent
operations.


5.12notify-printer-up-time (integer(1:MAX))

This REQUIRED READ-ONLY Subscription object attribute indicates the
amount of time (in seconds) that the Printer implementation has been up
and running.  This attribute is an alias for the Printer's "printer-up-
time" attribute" (see [ipp-mod] section 4.4.29), in an analogous way
that the Job's "job-printer-up-time" is an alias for "printer-up-time"
(see [ipp-mod] section 4.3.13.4).

Note:  A client can request this attribute in a Get-Subscription-
Attributes or Get-Subscriptions request and use the value returned in
combination with the "notify-lease-expiration-time" (see section 5.9) in
order to display wall clock time equivalent to the user.  The difference
between this attribute and the 'integer' value of the "notify-lease-
expiration-time" attribute is the number of seconds in the future that
the subscription will expire.  A client can compute the wall-clock time
at which the subscription will expire by adding this difference to the
client.s wall-clock time.


5.13notify-persistence-granted (boolean)

This REQUIRED Subscription object attribute whether or not the Per-Job
or Per-Printer Subscription is persistent, i.e., saved across power
cycles in an implementation-define manner.


6  Printer Description Attributes related to Notification


This section defines the Printer Description attributes that are related
to Notification.  Table 3 lists the Printer Description attributes and
indicates the Printer support required for conformance:  "R" indicates
REQUIRED, "O" indicates OPTIONAL, and "CR" indicates CONDITIONALLY
REQUIRED, i.e., required if Human Consumable notification formats are
supported.





Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 28]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


 Table 3 - Printer Description attributes associated with Notification

     Printer object attributes:            Print READ-ONLY, set by:
                                            er
                                            suppo
                                            rt

     notify-schemes-supported (1setOf      R     Administrator/implem
     uriScheme)                                   entation

     notify-events-default (1setOf type2   R     Administrator/implem
     keyword)                                     entation

     notify-events-supported (1setOf type2 R     Administrator/implem
     keyword)                                     entation

     max-events-supported (integer(5:MAX)) R     Administrator/implem
                                                   entation

     notify-text-format-supported (1setOf  CR    Administrator/implem
     mimeMediaType)                               entation

     max-job-subscriptions-supported       R     Administrator/implem
     (integer(1:MAX))                             entation

     max-printer-subscriptions-supported   R     Administrator/implem
     (integer(0:MAX))                             entation

     notify-lease-time-supported           R     Administrator/implem
     (rangeOfInteger(0:MAX))                      entation

     notify-lease-time-default             R     Administrator/implem
     (integer(0:MAX))                             entation

     persistent-jobs-supported (boolean)   O     Administrator/implem
                                                   entation

     persistent-subscriptions-supported    O     Administrator/implem
     (boolean)                                    entation

     printer-state-change-time             O     Administrator/implem
     (integer(1:MAX))                             entation

     printer-state-change-date-time        O     Administrator/implem
     (dateTime)                                   entation



6.1 notify-schemes-supported (1setOf uriScheme)

This REQUIRED Printer attribute describes the notification delivery
methods supported by this Printer object. Standard values are defined in
Section 5.1).


6.2 notify-events-default (1setOf type2 keyword)

This REQUIRED Printer attribute identifies the event values if the
client does not supply the "notify-events" operation attribute in either
a Job creation request, Create-Job-Subscription, or the Create-Printer-



Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 29]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


Subscription request.  Any value in this attribute MUST also appear in
the notify-events-supported attribute, i.e., be a supported event.


6.3 notify-events-supported (1setOf type2 keyword)

This REQUIRED Printer attribute identifies the events supported by this
Printer object for both Per-Job and Per-Printer subscriptions which MUST
be the same.  Standard values are defined in Section 5.2.


6.4 max-events-supported (integer(5:MAX))

This REQUIRED Printer attribute specifies the maximum number of events
that are supported in a single Per-Job or Per-Printer subscription which
must be the same.  A Printer MUST support at least 5 events per
subscription, so that clients can depend on at least 5 events in a
single subscription.  If the number of events supplied by a client in a
subscription exceed this number, the Printer rejects the request and
returns the 'server-error-too-many-events (see section 14.4).  If
notification is not supported, this attribute MUST NOT be supported.


6.5 notify-text-format-supported (1setOf mimeMediaType)

This CONDITIONALLY REQUIRED Printer attributes identifies the MIME media
types supported for Human Consumable notification content for those
notification delivery methods that support Human Consumable format (most
do).  If an implementation supports any Human Consumable formats, it
MUST support this attribute and MUST support those Human Consumable
formats for all notification delivery methods that permit a Human
Consumable format.  If the implementation does not support any Human
Consumable MIME media types, then the 'none' MUST be the only value of
this attribute or this attribute MUST NOT be supported at all.

A client can determine what formats are supported for a notify-scheme as
follows.  The implementation contains a hard coding of the Machine
Consumable format (obtained from the specification).  If the hard coding
(obtained from the specification) prohibits a Human Consumable format
for the notify-scheme, or the printer doesn't support the "notify-text-
format-supported" attribute, there are no Human Consumable  formats for
any notify-scheme.  Otherwise, the attribute "notify-text-formats-
supported" specifies the supported mime types for those delivery schemes
that are supported and permit a Human Consumable format.

Note:  The rationale for the "notify-text-format-supported" attribute is
that the Machine Consumable format seems easy to pick for each notify-
scheme and thus easy to document.  It is easy for a printer to support
most Machine Consumable formats.  It is much harder to support a Human
Consumable format because of localization issues.  Once the code is
written to support a particular Human Consumable format, it is easy to
transmit it on any of the supported notify-schemes.  Thus, if a vendor
decides to support a notify-scheme, it has already committed to
implement the Machine Consumable format.  This may be simple if existing



Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 30]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


code can be reused, e.g. application/ipp and or more difficult if new
code must be written, e.g. it is SNMP.


6.6 max-job-subscriptions-supported (integer(1:MAX))

This REQUIRED Printer attribute specifies the maximum number of Per-Job
subscriptions that are supported for a job, i.e., the maximum number of
collection values for the "job-notify" operation attribute, and/or the
maximum number of subsequent Create-Job-Subscription operation requests
in combination for a job.  A value of 0 indicates no effective maximum.
A Printer MUST support at least 1 Per-Job subscription.  If the number
of Per-Job subscriptions supplied by a client in a Job Creation request
exceeds the value of this attribute or would exceed some implementation-
defined total number of Per-Job Subscriptions for the Printer, the
Printer MUST accept the Job Creation and ignore the excess
subscriptions.  If a subsequent Create-Job-Subscription request would
exceed this number, the Printer rejects the request and returns the
'server-error-too-many-subscriptions' (see section 14.3).


6.7 max-printer-subscriptions-supported (integer(0:MAX))

This REQUIRED Printer attribute specifies the maximum number of Per-
Printer subscriptions that are supported by multiple Create-Printer-
Subscription requests, i.e., the maximum number of un-expired Per-
Printer Subscription objects that the Printer supports at a time.  A
value of 0 indicates no effective maximum.  A Printer MUST support at
least 1 Per-Printer subscription.  If the number of Per-Printer
subscriptions exceeds the value of this attribute or would exceed some
implementation-defined total number of Per-Printer Subscriptions for the
Printer (if any), the Printer rejects the Create-Printer-Subscription
request and returns the 'server-error-too-many-subscriptions' (see
section 14.3).


6.8 notify-lease-time-supported (rangeOfInteger(0:MAX))

This REQUIRED Printer attribute specifies the range of values in seconds
that are supported for the "notify-lease-time-requested" operation
attribute in a Create-Printer-Subscription or Renew-Subscription request
for a Per-Printer subscription.  When the lease time expires for a Per-
Printer Subscription without renewing, the Printer MUST delete the
Subscription object.  If the client requests a value outside this range,
the Printer MUST grant a value that is in this range (see section 5.9).
A value of 0 indicates an infinite lease, i.e., one that does not
expire.


6.9 notify-lease-time-default (integer(0:MAX))

This REQUIRED Printer attribute specifies the value of the lease time
that the Printer object has been configured to assume if the client does
not supply a "notify-lease-time-requested" operation attribute in the
Create-Printer-Subscription or Renew-Subscription requests.


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 31]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


6.10persistent-jobs-supported (boolean)

This OPTIONAL Printer attribute indicates whether or not the Printer
supports persistent Jobs, i.e., Jobs object that are preserved across
power cycles.  If Jobs are persistent, then Per-Job Subscriptions MUST
also be persistent, since they are part of the Job object.  It is
RECOMMENDED that Jobs (and Per-Job Subscriptions) be persistent.


6.11persistent-subscriptions-supported (boolean)

This OPTIONAL Printer attribute indicates whether or not the Printer
supports persistent Per-Printer Subscriptions, i.e., Subscription
objects that are preserved across power cycles.  When this value is
'true' the implementation MAY support some that are persistent and some
that are not.  If the value is 'false' or the attribute is not
supported, Per-Printer Subscriptions MUST NOT be persistent.  It is
RECOMMENDED that Per-Printer subscriptions be persistent.


6.12printer-state-change-time (integer(1:MAX))

This OPTIONAL Printer attribute records the time, i.e., copy of the
Printer's "printer-up-time" attribute, that the Printer's "printer-
state" attribute was last changed.  On power-up, the Printer populates
the "printer-state-change-time" from its "printer-up-time" attribute, so
that it always has a value.


6.13printer-state-change-date-time (dateTime)

This OPTIONAL Printer attribute records the date and time, i.e., copy of
the Printer's "printer-current-time" attribute, that the Printer's
"printer-state" attribute was last changed.  On power-up, the Printer
populates the "printer-state-change-date-time" from its "printer-
current-time" attribute, so that it always has a value.


7  Notification Content


This section defines the Notification content that is sent to a
Notification Recipient when an event occurs.  The Notification MAY be
sent by the IPP Printer or a third party Notification Service (see
section 2.3).

There are two notification content types: Machine Consumable and Human
Consumable, i.e., 'text' MIME media type.  For most notification
delivery methods both content types are defined.  Each Notification
Content type will either define one specific Machine Consumable form
(usual) or indicate that no Machine Consumable form is defined.  In
addition, each Notification Content type will indicates whether (usual)
or not Human Consumable forms are permitted.  But the definition will
not define the Human Consumable forms.  For those Human Consumable forms
that a Printer implementation supports as indicated in the Printer's
"notify-text-format-supported" attribute, it MUST support for all



Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 32]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


Notification Content formats supported that permit Human Consumable
form.


7.1 Notification content MIME media type formats

This section defines the Notification content that the Notification
Source sends asynchronously to each Notification Recipient based on the
subscription information stored with the subscription.  The Notification
is either in a Machine Consumable or Human Consumable form.


7.2 Machine Consumable form

If the notification delivery method is defined to have a Machine
Consumable form and that form is defined to be the 'application/ipp'
MIME media type [ipp-mod], then the following rules apply:

The notification content MUST use the 'application/ipp' MIME media type
[ipp-mod] using the Get-Job-Attributes response encoding for job events
and Get-Printer-Attributes response for printer events.  The attributes
listed in sections 7.4 and 7.5 are sent in an notification for Job
events.  The attributes listed in sections 7.4 and 7.6 are sent in an
notification for Printer events.  For any 'text' or 'name' attribute
value in any notification, the charset and natural language rules that
apply to all IPP operations apply to these attributes as well, since
they are represented as operation responses.  The Unsupported Attributes
Group in the response is not sent.  If the values of any of the
attributes sent in an notification content are not known, the value sent
in the report content is the out-of-band 'unknown' value, rather than
omitting the attribute (see the beginning of [ipp-mod] section 4.1).

Issue 2 -  Should we change the Notification Model to allow notification
delivery methods that are request and response (in addition to the
current model which has only one-directional notification delivery using
the 'application/ipp' operation response format?

Issue 3 -  If  the answer to Issue 2 is yes, should we change the format
of the notification content using 'application/ipp' to always be a (new)
Send-Notification operation request, whether the scheme returns a
response or not?

An implementation MAY extend the contents of the Machine Consumable
notification by adding additional attributes.


7.3 Human Consumable form

If the notification delivery method is defined to permit Human
Consumable forms then the following RECOMMENDATIONS apply:

The text message SHOULD include information about the attributes in
sections 7.4 and 7.5 for job events or in sections 7.4 and 7.6 for
printer events.  This information is localized according to the
information about natural language and charset in the subscription.




Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 33]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


An implementation MAY extend the contents of a Human Consumable
notification by adding additional information.


7.4 Notification content attributes common to Job and Printer events

This section lists the parameters and attributes that are included in
both Job and Printer event Notifications.  Some events do not include
all of these attributes as shown in Table 4.  Each notification content
contains a single Job or Printer event, whether that event was
subscribed using the Job Submission Subscription mechanism or the Per-
Printer subscription mechanism.  If either kind of subscription
subscribed to both Job and Printer events, then they will be sent as
separate Job notification content and Printer notification contents to
the same Notification Recipient.  References of the form "mod m.n.o"
refer to [ipp-mod] sections.

Table 4 lists the attributes that are defined for use in Notifications
and indicates the Printer support required for conformance:  "R"
indicates REQUIRED and "O" indicates OPTIONAL.

    Table 4 - Common Job and Printer Notification content attributes

                                     Reference     Events

Attributes                                       'job-      all
                                                 progress'  others

                                                 R          R
1. version-number (integer         mod 3.1.1
  (0:32767))

                                                 R          R
2. status-code (integer            mod 3.1.1
  (0:32767))

3. request-id (integer (0:MAX))    5.7 & mod     R          R
                                   3.1.1

4. attributes-charset (charset)    5.5 & mod     R          R
                                   3.1.4

5. attributes-natural-language     5.6 & mod     R          R
  (naturalLanguage)               3.1.4

                                                 R          R
6. printer-uri (uri)               5.10

                                                             R
7. printer-name (name(127))        mod 4.4.4

                                                 R          R**
8. job-id (integer(1:MAX))         mod 4.3.2

                                                             R**
9. job-name (name(MAX))            mod 4.3.5











Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 34]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


                                     Reference     Events

Attributes                                       'job-      all
                                                 progress'  others

10.trigger-event (type2 keyword)   5.2           R          R

11.trigger-time                                  R          R
  (integer(MIN:MAX))

12.trigger-date-time (dateTime)                              O

13.subscription-id                 5.8           R          R
  (integer(1:MAX))

                                                 O          O
14.subscriber-user-name            5.11
  (name(MAX))

15.subscriber-user-data            5.4           R          R
  (octetString(63))

Attribute Notes:

"status-code" - a value of 600 for a Job event and 601 for a Printer
     event.

"request-id" - the sequence number for this subscription, starting at 1
     for each subscription.

"attributes-charset" - the value comes from the "notify-charset"
     attribute in the Subscription object.

"attributes-natural-language" - the value comes from the "notify-
     natural-language" attribute in the Subscription object.

"printer-uri" - the value comes from the "job-printer-uri" Job attribute
     for Per-Job subscriptions.

**"job-id" and "job-name" - included in Printer event Notifications only
     for Per-Job subscriptions.

"trigger-event" - the event that caused this Notification to be
     delivered.

"trigger-time" - the "printer-up-time" value when the event occurred.

"trigger-date-time" - the "printer-current-time" value when the event
     occurred - OPTIONAL to support.

"job-name" - SNMP delivery method can truncate to less than 255 octets,
     since the Notification needs to fit into 484 octets or so on some
     transports that SNMP is defined for.

"subscription-id" - the unique identifier for the Subscription object on
     this Printer.


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 35]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


"subscriber-user-name" - the subscriber user name that created the
     Subscription object.  SNMP delivery method can truncate to less
     than 255 octets, since the Notification needs to fit into 484
     octets or so on some transports that SNMP is defined for.

"subscriber-user-data" - opaque user data that may identify either the
     Subscriber and/or the ultimate Notification Recipient.


7.5 Additional Notification content attributes for Job events only

Table 5 lists the additional attributes that are included only in Job
event Notifications and indicates the Printer support required for
conformance:  "R" indicates REQUIRED, "O" indicates OPTIONAL, and "CR"
indicates CONDITIONALLY REQUIRED, i.e., REQUIRED in a Notification if
the corresponding Job attributes are supported.  Some events do not
include all of these attributes as shown in Table 5.

Table 5 - Additional Notification content attributes for Job events only

                                                   Events

Attributes                              Reference 'job-  'job-   all
                                                   progre complet othe
                                                   ss'    ed'     rs

16.job-state (type1 enum)               mod 4.3.7 R      R       R

17.job-state-reasons (1setOf type2      mod 4.3.8 R      R       R
  keyword)

18.job-k-octets-processed               mod       O      O
  (integer(0:MAX))                      4.3.18.1

19.job-impressions-completed            mod       CR     CR
  (integer(0:MAX))                      4.3.18.2

20.job-media-sheets-completed           mod       CR     CR
  (integer(0:MAX))                      4.3.18.3

21.job-collation-type (type2 enum)      [ipp-     R
                                        prog]

22.sheet-completed-copy-number          [ipp-     R
  (integer(-2:MAX))                     prog]

23.sheet-completed-document-            [ipp-     R
  number(integer(-2:MAX))               prog]

24.impressions-interpreted (integer(-   [ipp-     R
  2:MAX))                               prog]

25.impressions-completed-current-copy   [ipp-     R
  (integer(-2:MAX))                     prog]







Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 36]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


7.6 Additional Notification content attributes for Printer events only

Table 6 lists the additional attributes that are included only in
Printer event Notifications and indicates the Printer support required
for conformance:  "R" indicates REQUIRED and "O" indicates OPTIONAL.

Table 6 - Additional Notification content attributes for Printer events
                                  only

                                                      Events

Attributes                              Reference all printer
                                                   events

26.printer-state (type1 enum)           mod       R
                                        4.4.11

27.printer-state-reasons (1setOf type2  mod       R
  keyword)                              4.4.12

28.printer-is-accepting-jobs (boolean)  mod       R
                                        4.4.23



8  Operations for notification


This section defines all of the operations for notification.


8.1 Operations for Per-Job Subscriptions only

This section defines the operation requests and responses that are
related to Per-Job subscriptions and its Subscription object.   Section
8.3 defines the REQUIRED operation requests and responses associated
with the REQUIRED Per-Printer subscription and its Subscription object.

8.1.1 Job Creation Operations (Create-Job, Print-Job, Print-URI) and
     Validate-Job

The usual method for a client to associate one subscription with a Job
is to specify the subscription when the job is created.  For a Per-Job
Subscription, the client supplies the "job-notify (1setOf collection)"
operation attribute with the member attributes listed in Table 7 with
any of the job creation operations (Create-Job, Print-Job, Print-URI),
plus Validate-Job (which doesn't create a job or subscription).  If the
client does not supply the "job-notify" attribute in the create
operation, there is no subscription made (either implicitly or
explicitly).

If a Printer does not support this notification specification, then it
MUST ignore the "job-notify" operation attribute and return it in the
response indicated as an attribute that is not supported.  See [ipp-mod]
section 3.1.7 for details on returning Unsupported Attributes.




Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 37]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


  Table 7 - Member attributes of the "job-notify" collection operation
                               attribute

Member attribute of "job-notify"      Referen  REQUIRED  Printer
collection                            ce       in        support
                                               request

notify-recipient (uri)                5.1      yes       REQUIRED

notify-events (1setOf type2 keyword)  5.2      no        REQUIRED

notify-text-format (mimeMediaType)    5.3      no        REQUIRED

subscriber-user-data                  5.4      no        REQUIRED
(octetString(63))

notify-charset (charset)              5.5      no        OPTIONAL

notify-natural-language               5.6      no        OPTIONAL
(naturalLanguage)


See the referenced sections for a definition of these operation
attributes, since they are copied to the Subscription object as the
Subscription Description attributes described in section 5.

The following rules apply to Per-Job subscriptions created as part of
the Job Creation operations:

1.Any subscription can contain job events, printer events, or both.

2.The Job Submission Subscription is only valid while the job is "not-
  completed".  The job is "not-completed" while it is in the 'pending',
  'pending-held', 'processing', and 'processing-stopped' states.  The
  job changes from being "not-completed" to "retained" when it is done
  processing and enters any of the 'completed', 'canceled', or
  'aborted' states.  The job becomes "not-completed" again when it is
  restarted using the Restart-Job operation (see [ipp-mod]).

3.Since no job is created for the Validate-Job operation, the only
  purpose of supplying the subscription operation attributes in the
  Validate-Job operation is to validate that the values are supported;
  the Printer object does not establish a notification subscription as
  a result of the Validate-Job operation.

4.Since a Job Submission Subscription is included within a job
  submission operation, any interest in job events is limited to "this
  job" only (the Job object created because of this job creation
  operation).  There is no mechanism to subscribe to events for all
  jobs or specifically some job other than this job in a create
  operation.  But see the Create-Printer-Subscription operation
  (section 8.2.1) for an explicit operation to subscribe for job and/or
  printer events independently of any particular job submission, i.e.,
  Per-Printer subscriptions.

5.Event reporting only occurs when a notification recipient has
  specified a subscription to any event(s).



Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 38]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


6.The notification implementation MAY allow an administrator to
  configure a policy on what events may be dropped.

7.If the OPTIONAL "notify-charset" attribute is not supported or the
  supplied value is not supported, the IPP Printer MUST return the
  attribute in the Unsupported Attributes Group but still accept the
  operation, as with all Job create operations.  In this case, the
  Printer MUST use the natural language supplied in the "attributes-
  charset" Job creation operation attribute, if that natural language
  value is supported by the Printer, else the Printer object MUST use
  the Printer's "charset-configured" value.  See the Print-Job
  operation in [ipp-mod].

8.If the OPTIONAL "notify-natural-language" attribute is not supported
  or the supplied value is not supported, the IPP Printer MUST return
  the attribute in the Unsupported Attributes Group but still accept
  the operation, as with all Job create operations.  In this case, the
  Printer MUST use the natural language supplied in the "attributes-
  natural-language" Job creation operation attribute, if that natural
  language value is supported by the Printer, else the Printer object
  MUST use the Printer's "natural-language-configured" value.  See the
  Print-Job operation in [ipp-mod].

9.If a collection contains other unrecognized, unsupported member
  attributes and/or conflicting values, the attribute returned in the
  Unsupported Group is a collection containing the unrecognized,
  unsupported member attributes, and/or conflicting values. The Printer
  MUST return the unrecognized member attributes with the out-of-band
  value of 'unsupported'.  The Printer MUST return the unsupported
  member attributes and conflicting values with their unsupported
  values.  See [ipp-coll].

10.  If the number of events supplied in the "notify-events" attribute
  exceeds the Printer's "max-events-supported" attribute, the Printer
  MUST accept the request with the status code 'successful-ok-ignored-
  or-substituted-attributes' and return the "job-notify" collection in
  the Unsupported Attributes Group with only the "job-events" member
  attribute containing the events that exceed the maximum.

11.  If the Per-Job subscriptions would exceed the limit of Per-Job
  subscriptions supported per job as specified by the Printer's "max-
  job-subscriptions-supported" attribute or would exceed some
  implementation-defined limit on the total number of Per-Job
  subscriptions for the Printer (if any), the Printer MUST accept the
  request with the status code 'successful-ok-ignored-subscriptions',
  MUST return the "job-notify" attribute in the Unsupported Attributes
  Group with only the collection value(s) that represent the excess
  subscriptions that are being ignored, and MUST perform the Job
  Creation operation (see section 8.1.1), since the job can still be
  printed.

  If the job is accepted and one or more subscriptions are ignored, the
  status code returned is 'successful-ok-ignored-subscriptions.  This
  status code is returned even if other job attributes are unsupported

Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 39]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


  or in conflict.  That is, if an IPP Printer finds a warning that
  would allow it to return 'successful-ok-ignored-subscriptions' and
  either 'successful-ok-ignored-or-substituted-attributes' and/or
  'successful-ok-conflicting-attributes', it must return 'successful-
  ok-ignored-subscriptions'.  In other words, the precedence for
  returning success codes is: 'successful-ok-ignored-subscriptions',
  'successful-ok-conflicting-attributes', and 'successful-ok-ignored-
  or-substituted-attributes'.

8.1.2Create-Job-Subscription operation

The OPTIONNAL Create-Job-Subscription operation creates a Per-Job
Subscription object .  The client can specify one or more job and/or
printer events to be delivered as notifications to one Notification
Recipient.  For the Per-Job subscription objects, the Job events are for
this job only.  The printer events are any events generated by that
Printer for any job or when no job is involved at all (same as for Per-
Job Subscriptions).

The Printer returns a subscription id and the length of time for which
it has granted a lease for the subscription.

A client can unsubscribe using the Cancel-Subscription operation
(section 8.3.4) and the subscription id.

Two Create-Job-Subscription operations with the same events and same
Notification Recipient MUST be kept as distinct subscriptions and be
assigned distinct subscription ids.  A Printer MUST allow such duplicate
subscriptions such that Cancel-Subscription doesn't unsubscribe both
subscriptions and MUST send the Notifications twice to the Notification
Recipient, since the "request-id" is supposed to count monotonically for
each subscription.

If the Printer has a bounded set of concurrent Per-Job subscriptions and
the request would exceed that bound, the Printer rejects the operation
and returns the 'server-error-too-many-subscriptions' status code.  The
client SHOULD try again later.

Access Rights:  To create Per-Job subscription objects, the
authenticated user (see [IPP-MOD] section 8.3) performing this operation
MUST either be the job owner or have operator or administrator access
rights for the Printer object (see [IPP-MOD] sections 1 and 8.5).
Otherwise the IPP object MUST reject the operation and return: client-
error-forbidden, client-error-not-authenticated, and client-error-not-
authorized as appropriate.











Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 40]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


Request:
   Group 1: Operation Attributes                   Printer
                                                    support
        "attributes-charset" (charset)             REQUIRED
        "attributes-natural-language"              REQUIRED
        (naturalLanguage)
        "printer-uri" (uri)                        REQUIRED
        "job-id" (integer(1:MAX))                  REQUIRED
        ["requesting-user-name" (name(MAX))]       RECOMMENDED
        "notify-recipient" (uri)                   REQUIRED
        ["notify-events" (1setOf type2 keyword)]   REQUIRED
        ["notify-text-format" (mimeMediaType)]     REQUIRED
        ["subscriber-user-data" (octetString(63))] REQUIRED
        ["notify-charset" (charset)]               OPTIONAL
        ["notify-natural-language"                 OPTIONAL
        (naturalLanguage)]
        ["notify-persistence-requested" (boolean)] OPTIONAL
Response:
   Group 1: Operation Attributes                   Printer
                                                    Support
         "status-code" (type2 enum)                REQUIRED
         "attributes-charset" (charset)            REQUIRED
         "attributes-natural-language"             REQUIRED
        (naturalLanguage)
        ["status-message" (text(255))]             OPTIONAL
        ["detailed-status-message" (text(MAX))]    OPTIONAL
         "subscription-id"  (integer(1:MAX))       REQUIRED
         "notify-persistence-granted" (boolean)    REQUIRED
   Group 2: Unsupported Attributes                 REQUIRED

Attribute Notes:

"job-id" (integer(1:MAX)) - the client MUST supply this attribute in
     order to create a Per-Job subscription for the Job identified by
     the "job-id" value.

     Note:  Unlike all other operations on the Job object, the "job-uri"
     operation attribute is not defined for use with this operation.

     ISSUE 4 - Ok that "job-uri" isn't defined for use with the Create-
     Job-Subscription operation?

"notify-recipient" (uri) - the client MUST supply this attribute in
     order to have a subscription.

"notify-event" (1setOf type2 keyword) - if the client does not supply
     this attribute, the Printer populates the "notify-events"
     Subscription Description attribute from its "notify-events-default"
     Printer Description attribute.

"notify-text-format" (mimeMediaType) - if the client supplies this
     attribute, the value indicates which Human Consumable text format


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 41]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


     is requested for use in the Notification using the delivery method
     that the client supplies in the "notify-recipient" attribute.  If
     the client does not supply this attribute, the Machine-Consumable
     form of the delivery method that the client supplies in the
     "notify-recipient" attribute is used.

"notify-persistence-requested" (boolean) - whether or not the Per-Job
     Subscription is to be persistent, i.e., saved across power cycles.
     Note: Persistent trap registrations is a client option in SNMPv3
     [RFC2573].

"notify-persistence-granted" (boolean) - whether or not this
     Subscription object instance is persistent.  This attribute MUST be
     returned whether "notify-persistence-requested" is supported or
     not, so that the client knows which.



8.2 Operations for Per-Printer Subscriptions only

This section defines the operation requests and responses associated
with the Per-Printer subscription and its Subscription object.

8.2.1 Create-Printer-Subscription operation

The REQUIRED Create-Printer-Subscription operation creates a Per-Printer
Subscription object .  The client can specify one or more job and/or
printer events to be delivered as notifications to one Notification
Recipient.  For the Per-Printer subscription objects, the job events are
for any job submitted to the Printer.  The printer events are any events
generated by that Printer for any job or when no job is involved at all.

The Printer returns a subscription id and the time at which the
subscription lease expires (which may be earlier or later than the
client requested).

The client must renew the Per-Printer subscription using the Renew-
Subscription operation (see section 8.3.3) before the lease runs out in
order to maintain the subscription.  A client can unsubscribe using the
Cancel-Subscription operation (section 8.3.4) and the subscription id.

Two Create-Printer-Subscription operations with the same events and same
Notification Recipient MUST be kept as distinct subscriptions and be
assigned distinct subscription ids.  A Printer MUST allow such duplicate
subscriptions such that Cancel-Subscription doesn't unsubscribe both
subscriptions and MUST send the Notifications twice to the Notification
Recipient, since the "request-id" is supposed to count monotonically for
each subscription.

If the Printer has a bounded set of concurrent Per-Printer subscriptions
and the request would exceed that bound, the Printer rejects the
operation and returns the 'server-error-too-many-subscriptions' status
code.  The client SHOULD try again later.



Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 42]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


Access Rights:  To create Per-Printer subscription objects, the
authenticated user performing this operation MUST have Per-Printer
subscription rights for this Printer.  Otherwise the IPP object MUST
reject the operation and return: client-error-forbidden, client-error-
not-authenticated, and client-error-not-authorized as appropriate.

Request:
   Group 1: Operation Attributes                   Printer
                                                    support
        "attributes-charset" (charset)             REQUIRED
        "attributes-natural-language"              REQUIRED
        (naturalLanguage)
        "printer-uri" (uri)                        REQUIRED

        ["requesting-user-name" (name(MAX))]       RECOMMENDED
        "notify-recipient" (uri)                   REQUIRED
        ["notify-events" (1setOf type2 keyword)]   REQUIRED
        ["notify-text-format" (mimeMediaType)]     REQUIRED
        ["subscriber-user-data" (octetString(63))] REQUIRED
        ["notify-charset" (charset)]               OPTIONAL
        ["notify-natural-language"                 OPTIONAL
        (naturalLanguage)]
        ["notify-lease-time-requested"             REQUIRED
        (integer(0:MAX))]
        ["notify-persistence-requested" (boolean)] OPTIONAL
Response:
   Group 1: Operation Attributes                   Printer
                                                    Support
         "status-code" (type2 enum)                REQUIRED
         "attributes-charset" (charset)            REQUIRED
         "attributes-natural-language"             REQUIRED
        (naturalLanguage)
        ["status-message" (text(255))]             OPTIONAL
        ["detailed-status-message" (text(MAX))]    OPTIONAL
         "subscription-id"  (integer(1:MAX))       REQUIRED
         "notify-lease-expiration-time"            REQUIRED
        (integer(0:MAX))
         "notify-printer-up-time" (integer(1:MAX)) REQUIRED
         "notify-persistence-granted" (boolean)    REQUIRED
   Group 2: Unsupported Attributes                 REQUIRED

ISSUE 5 - Ok that we aren't passing the operation attributes that are
     copied to the Subscription object in the new Subscription object
     attributes group?  Some of the "notify-xxx" attributes aren't
     Subscription object attributes.

Attribute Notes:

"notify-recipient" (uri) - the client MUST supply this attribute in
     order to have a subscription.




Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 43]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


"notify-lease-time-requested" (integer(0:MAX) - the number of seconds
     requested for the subscription lease.  A value of 0 indicates a
     request that the Per-Printer Subscription lease never expire.
     Supplying a 0 value MAY require authentication in order to be used,
     if 0 is supported at all.
     If the client does not supply this attribute, the Printer uses its
     "notify-lease-time-default" Printer Description attribute value
     (see section 6.9).

"notify-event" (1setOf type2 keyword) - if the client does not supply
     this attribute, the Printer populates the "notify-events"
     Subscription Description attribute from its "notify-events-default"
     Printer Description attribute.

"notify-text-format" (mimeMediaType) - if the client supplies this
     attribute, the value indicates which Human Consumable text format
     is requested for use in the Notification using the delivery method
     that the client supplies in the "notify-recipient" attribute.  If
     the client does not supply this attribute, the Machine-Consumable
     form of the delivery method that the client supplies in the
     "notify-recipient" attribute is used.

"notify-persistence-requested" (boolean) - whether or not the Per-
     Printer Subscription is to be persistent, i.e., saved across power
     cycles.  Note: Persistent trap registrations is a client option in
     SNMPv3 [RFC2573].

"notify-lease-expiration-time" (integer(0:MAX)) - The Printer object
     MUST return this attribute which is the time in the future at which
     the subscription lease will expire, i.e., the "printer-up-time"
     value (in time ticks - see [ipp-mod] section 4.4.29) at which the
     Printer will delete the Subscription.  A value of 0 indicates that
     the lease subscription will never expire.

"notify-printer-up-time" (integer(1:MAX)) - The Printer object MUST
     return this attribute which is an alias for the Printer's "printer-
     up-time" Printer Description attribute.  The client subtracts this
     value from the "notify-lease-expiration-time" value returned in
     order to determine the number of second in the future that the
     subscription will expire.  This computed value may be less than the
     requester requested in the "notify-lease-time-requested" if it was
     greater than the MAX supported or more than the requester requested
     if it was less than the MIN supported, as indicated in the
     Printer's "notify-lease-time-supported" (rangeOfInteger(0:MAX))
     attribute (see section 6.8).

"notify-persistence-granted" - whether or not this Subscription object
     instance is persistent.  This attribute MUST be returned whether
     "notify-persistence-requested" is supported or not, so that the
     client knows which.


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 44]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999





8.3 Common Operations for Per-Job and Per-Printer Subscriptions

This section defines the operations that are common to both Per-Job and
     Per-Printer subscriptions.

8.3.1 Get-Subscription-Attributes operation

The REQUIRED Get-Subscription-Attributes returns the requested
attributes of the identified Subscription object.  See section 5.

Request:
   Group 1: Operation Attributes                   Printer
                                                    support
         "attributes-charset" (charset)            REQUIRED
         "attributes-natural-language"             REQUIRED
        (naturalLanguage)
         "printer-uri" (uri)                       REQUIRED
        ["requesting-user-name" (name(MAX))]       RECOMMENDED
         "subscription-id"  (integer(1:MAX))       REQUIRED
        ["requested-attributes" (1setOf type2      REQUIRED
        keyword)]
Response:
   Group 1: Operation Attributes                   Printer
                                                    support
        "status-code" (type2 enum)                 REQUIRED
        "attributes-charset" (charset)             REQUIRED
        "attributes-natural-language"              REQUIRED
        (naturalLanguage)
        ["status-message" (text(255))]             OPTIONAL
        ["detailed-status-message (text(MAX))]     OPTIONAL
   Group 2: Unsupported Attributes                 REQUIRED
   Group 3: <the requested Subscription object     REQUIRED
   attributes>

This operation is similar to the Get-Printer-Attributes operation.  If
the client omits the "requested-attributes" operation attribute, the
Printer MUST respond as if the client had supplied the 'all' value,
i.e., return all of the attributes supported for the Subscription
object.













Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 45]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


8.3.2 Get-Subscriptions operation

The REQUIRED Get-Subscriptions operation returns  the requested
attributes of the Subscription objects (see section 5).

Request:
   Group 1: Operation Attributes                   Printer
                                                    support
        "attributes-charset" (charset)             REQUIRED
        "attributes-natural-language"              REQUIRED
        (naturalLanguage)
        "printer-uri" (uri)                        REQUIRED
        ["job-id" (integer(1:MAX))]                REQUIRED
        ["requesting-user-name" (name(MAX))]       RECOMMENDED
        ["limit" (integer(1:MAX))]                 REQUIRED
        ["requested-attributes" (1setOf type2      REQUIRED
        keyword)]
        ["my-subscriptions" (boolean)]             REQUIRED
Response:
   Group 1: Operation Attributes                   Printer
                                                    support
        "status-code" (type2 enum)                 REQUIRED
        "attributes-charset" (charset)             REQUIRED
        "attributes-natural-language"              REQUIRED
        (naturalLanguage)
        ["status-message" (text)]                  OPTIONAL
        ["detailed-status-message" (text(MAX))]    OPTIONAL
   Group 2: Unsupported Attributes                 REQUIRED
   Group 3 to N:<the requested Subscription        REQUIRED
   Attributes for each Subscription object in a
   separate group>


Attribute Notes:

This operation is similar to the Get-Jobs operation (see [ipp-mod]).  If
the client wants any attributes returned, including the "subscription-
id", it must include the attribute keyword name in the "requested-
attributes" operation attribute.  If the "requested-attributes.
operation attribute is omitted, the Printer MUST respond as if the
client supplied the value: 'subscription-id'.

"job-id" (integer(1:MAX)) - If the client supplies this attribute, all
     of the Per-Job Subscription objects for the identified job are
     candidates for return.  It this attribute is omitted, all of the
     Per-Printer Subscription objects are candidates for return.

"my-subscriptions" (boolean) - If the client supplies the "my-
     subscriptions" with a 'false' value or omits it, the Printer
     returns all subscriptions, subject to the security policy in force.

Groups 3 to N: Subscription Object Attributes:  The Printer object
     responds with one set of Subscription Object Attributes for each


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 46]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


     returned Subscription object.  The Printer object ignores (does not
     respond with) any requested attribute or value which is not
     supported or which is restricted by the security policy in force,
     including whether the requesting user is the user that created the
     Subscription object (subscribing user) or not (see [ipp-mod]
     section 8).

8.3.3 Renew-Subscription operation

The REQUIRED Renew-Subscription operation permits a client to request
the IPP Printer to extend the lease on a Subscription object instance.
There is no way to renew a Per-Job subscription, since they are
automatically canceled after the job completes and no longer has any
documents, i.e., the job is no longer retained (see [ipp-mod] section
4.3.7.2).  If the requested subscription object is a Per-Job
subscription, the Printer MUST grant an infinite lease by returning a 0
value for the "notify-lease-expiration-time".

Access Rights: The authenticated user (see [IPP-MOD] section 8.3)
performing this operation MUST either be the owner of the Subscription
object or have operator or administrator access rights for the Printer
object (see [IPP-MOD] sections 1 and 8.5).  Otherwise the IPP object
MUST reject the operation and return: client-error-forbidden, client-
error-not-authenticated, and client-error-not-authorized as appropriate.

Request:
   Group 1: Operation Attributes                   Printer
                                                    support
        "attributes-charset" (charset)             REQUIRED
        "attributes-natural-language"              REQUIRED
        (naturalLanguage)
        "printer-uri" (uri)                        REQUIRED
        ["requesting-user-name" (name(MAX))]       RECOMMENDED
        "subscription-id"  (integer(1:MAX))        REQUIRED
        ["notify-lease-time-requested"             REQUIRED
        (integer(0:MAX))]
Response:
   Group 1: Operation Attributes                   Printer
                                                    support
        "status-code" (type2 enum)                 REQUIRED
        "attributes-charset" (charset)             REQUIRED
        "attributes-natural-language"              REQUIRED
        (naturalLanguage)
        ["status-message" (text(255))]             OPTIONAL
        ["detailed-status-message" (text(MAX))]    OPTIONAL
         "notify-lease-expiration-time"            REQUIRED
        (integer(0:MAX))
         "notify-printer-up-time" (integer(1:MAX)) REQUIRED
   Group 2: Unsupported Attributes                 REQUIRED

Attribute Notes:




Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 47]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


"notify-lease-time-requested" (integer(0:MAX) - the number of seconds
     requested for the Per-Printer subscription lease.  Same as Create-
     Printer-Subscriptions (see section 8.2.1).

"notify-lease-expiration-time" - the time in the future when the
     subscription will expire.  Same as for the Create-Printer-
     Subscription operation  (see section 8.2.1).

"notify-printer-up-time" - the Printer object MUST return this attribute
     which is an alias for the Printer's "printer-up-time" Printer
     Description attribute.  The client subtracts this value from the
     "notify-lease-expiration-time" value returned in order to determine
     the number of second in the future that the subscription will
     expire (see further explanation in section 8.2.1).

Note:  There is no way to change any of the Subscription object
attributes, except the "notify-lease-expiration-time" attribute (using
the Renew-Subscription operation).  In order to change other attributes,
a client can create a new Subscription object and then use the Cancel-
Subscription operation to cancel the old one (or do this in the other
order, in case there is a limit on the number of Subscription object
instances, as long as a short window with no Notifications is ok).

Note:  There is no need to renew a Per-Job Subscription, since it is
effectively the time that the Job is active (see section 8.1).

8.3.4 Cancel- Subscription operation

The REQUIRED Cancel- Subscription operation allows a client to remove a
Subscription object.  No more Notifications are delivered for that
Subscription.  Once performed, there is no way to use that Subscription
in the future.  Subscription-ids should not be reused immediately, so
that a stale reference situation is not created.  Same as for Cancel-Job
and job-ids.

Access Rights: The authenticated user (see [IPP-MOD] section 8.3)
performing this operation MUST either be the owner of the Subscription
object or have operator or administrator access rights for the Printer
object (see [IPP-MOD] sections 1 and 8.5).  Otherwise the IPP object
MUST reject the operation and return: client-error-forbidden, client-
error-not-authenticated, and client-error-not-authorized as appropriate.

Request:
   Group 1: Operation Attributes                   Printer
                                                    support
        "attributes-charset" (charset)             REQUIRED
        "attributes-natural-language"              REQUIRED
        (naturalLanguage)
        "printer-uri" (uri)                        REQUIRED
        ["requesting-user-name" (name(MAX))]       RECOMMENDED
        "subscription-id" (integer(1:MAX))         REQUIRED
Response:




Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 48]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


   Group 1: Operation Attributes                   Printer
                                                    support
        "status-code" (type2 enum)                 REQUIRED
        "attributes-charset" (charset)             REQUIRED
        "attributes-natural-language"              REQUIRED
        (naturalLanguage)
        ["status-message" (text(255))]             OPTIONAL
        ["detailed-status-message" (text(MAX))]    OPTIONAL
   Group 2: Unsupported Attributes                 REQUIRED



9  Comparison of Per-Job versus Per-Printer Subscriptions


Per-Job and Per-Printer subscriptions are quite similar.  Either type of
subscription can subscribe to Job events, Printer events, or both.  Both
types of subscriptions can be queried using the Get-Subscriptions and
Get-Subscription-Attributes operations and canceled using the Cancel-
Subscription operation.  Both types of subscriptions create Subscription
objects which have the same attributes defined.  However, there are some
semantic differences between Per-Job subscriptions and Per-Printer
subscriptions.  A Per-Job Submission Subscription is established by the
client when submitting a job and after creating the job using the
Create-Job-Subscription operation by specifying the "job-id" of the job.
A Per-Printer  Subscription is established between a client and a
Printer using the Create-Printer-Subscription operation.  Some specific
differences are:

1.A client usually creates a Per-Job subscription as part of the Job
  Creation operations (Create-Job, Print-Job, and Print-URI), rather
  than using the OPTIONAL Create-Job-Subscription operation, especially
  since some Printer implementations MAY not support the Create-Job-
  Subscription operation, since it is OPTIONAL.

2.For Per-Job subscriptions, the subscription is only valid while the
  job is "not-complete" (see sections 7.4 and 7.5) while for the Per-
  Printer subscriptions, the subscription is valid until the time (in
  seconds) that the Printer returned in the "notify-lease-expiration-
  time" operation attribute expires.

3.Job Events in a Per-Job subscription apply only to "one job" (the Job
  created by the job creation  operation or references by the Create-
  Job-Subscription operation) while Job Events in a Per-Printer
  subscription apply to ALL jobs contained in the IPP Printer object.



10 Conformance Requirements


This section further enhances the Conformance Requirements detailed in
[IPP-MOD] section 5.  Extensions made to the events herein must be made
such that new events or event attributes are backward compatible to


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 49]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


clients who implemented early versions of this notification
specification.

It is OPTIONAL to implement this Event Notification specification.  If
implemented, IPP objects MUST support all of the REQUIRED object
attributes as defined in this document in the indicated sections.

If IPP Notification is implemented, the operations described in this
document must be supported as described in Table 8:

           Table 8 - Conformance Requirements for Operations

    Attribute                                     Conformance
                                                   requirements
    "job-notify" in Job Creation operations       REQUIRED
    (section 8.1.1)
    Create-Printer-Subscription (section 8.2.1)   REQUIRED
    Create-Job-Subscription (section 8.1.2)       OPTIONAL
    Get-Subscription-Attributes (section 8.3.1)   REQUIRED
    Get-Subscriptions (section 8.3.2)             REQUIRED
    Renew-Subscription (section 8.3.3)            REQUIRED
    Cancel-Subscription (section 8.3.4)           REQUIRED


11 IANA Considerations


IANA will be called on to register URL schemes for notification delivery
for use in the "notification-recipient" attribute, using the same
procedures outlined in [ipp-mod].


12 Internationalization Considerations


This IPP notification specification continues the internationalization
of [ipp-mod] for attributes containing text strings and names.  A
subscribing client can specify a different natural language and charset
for each Notification content delivered to a Notification Recipient.

The Human Consumable Notification content is a 'text/plain; charset=utf-
8' by default where the Notification Sender has localized the text
message as requested by the subscriber for the intended Notification
Recipient.


13 Security Considerations


By far the biggest security concern is the abuse of notification:
sending unwanted notifications to third parties (i.e., spam).  The
problem is made worse by notification addresses that may be
redistributed to multiple parties (e.g. mailing lists).  There exist
scenarios where third party notification is required (see Scenario #2
and #3 in [ipp-not-req]).  The fully secure solution would require
active agreement of all recipients before sending out anything.
However, requirement #9 in [ipp-req] (.There is no requirement for IPP

Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 50]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


Printer receiving the print request to validate the identity of an event
recipient.) argues against this.  Certain systems may decide to disallow
third party notifications (a traditional fax model).

Clients submitting notification requests to the IPP Printer has the same
security issues as submitting an IPP/1.1 print job request.  The same
mechanisms used by IPP/1.1 can therefore be used by the client
notification submission.  Operations that require authentication can use
the HTTP authentication.  Operations that require privacy can use the
HTTP/TLS privacy.

The notification access control model should be similar to the IPP
access control model for Jobs.  Creating a Per-Printer Notification
Subscription object is associated with a user.  Only the creator or an
operator can cancel the subscription.  The system may limit the listing
of items to only those items owned by the user.  Some subscriptions
(e.g. those that have a lifetime longer than a job) can be done only by
privileged users (users having operator and/or administrator access
rights), if that is the authorization policy.

The standard security concerns (delivery to the right user, privacy of
content, tamper proof content) apply to the notification delivery.  IPP
should use the security mechanism of the delivery method used.  Some
delivery mechanisms are more secure than others.  Therefore, sensitive
notifications should use the delivery method that has the strongest
security.


14 Status Codes


The following status codes are defined as extensions for notification:


14.1'successful-ok-ignored-subscriptions' (0x0003)

The number of subscriptions supplied in a Job Creation operation
(Create-Job, Print-Job, Print-URI) exceeds either the limit of Per-Job
subscriptions supported per job as specified by the Printer's "max-job-
subscriptions-supported" attribute or some implementation-defined limit
on the total number of Per-Job subscriptions for the Printer (if any).
The Printer MUST accept the request with this status code, MUST return
the "job-notify" attribute in the Unsupported Attributes Group with only
the collection value(s) that represent the excess subscriptions that are
being ignored, and MUST perform the Job Creation operation (see section
8.1.1), since the job can still be printed.

This status code is returned even if other job attributes are
unsupported or in conflict.  That is, if an IPP Printer finds a warning
that would allow it to return  'successful-ok-ignored-subscriptions' and
either 'successful-ok-ignored-or-substituted-attributes' and/or
'successful-ok-conflicting-attributes', it must return 'successful-ok-
ignored-subscriptions'.  In other words, the precedence for returning
success codes is: 'successful-ok-ignored-subscriptions', 'successful-ok-



Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 51]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


conflicting-attributes', and 'successful-ok-ignored-or-substituted-
attributes'.


14.2client-error-uri-notification-scheme-not-supported (0x04??)

The scheme of the client-supplied URI in a "notify-recipient" operation
attribute in a Create-Printer-Subscription or Create-Printer-
Subscription operation is not supported.  See [ipp-mod] section 3.1.7.

There is no corresponding Per-Job subscription error for a Job Creation
operation, since the Printer object MUST ignore any errors in the "job-
notify" operation attribute, MUST return the "notify-recipient"
attribute in the Unsupported Attributes Group, and perform the Job
Creation operation (see section 8.1.1), since the job can still be
printed.


14.3server-error-too-many-subscriptions (0x04??)

The bounded set of concurrent Per-Printer subscriptions supported by the
Printer object would be exceeded if this request were accepted.

Note:  There is no corresponding Per-Job subscription error, since the
Printer object MUST ignore any errors in the "job-notify" operation
attribute and perform the Job Creation operation (see section 8.1.1),
since the job can still be printed.


14.4server-error-too-many-events (0x04??)

The client supplied more events in the "notify-events" operation
attribute in a Create-Job-Subscription or Create-Printer-Subscription
operation than the Printer supports, as indicated in its "max-events-
supported" attribute (see section 6.4).

There is no corresponding Per-Job subscription error for a Job Creation
operation, since the Printer object MUST ignore any errors in the "job-
notify" operation attribute, MUST return the "notify-events" attribute
in the Unsupported Attributes Group with only the excess events that are
being ignored, and perform the Job Creation operation (see section
8.1.1), since the job can still be printed.


15 Additions to the IPP Encoding and Transport Document


The Subscription object tag needs to be assigned in section 3.7.1
Delimiter Tags:

3.7.1 Delimiter Tags


The following table specifies the values for the delimiter tags:


   Tag Value (Hex)   Delimiter

   0x00              reserved


Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 52]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999



   Tag Value (Hex)   Delimiter

   0x01              operation-attributes-tag
   0x02              job-attributes-tag
   0x03              end-of-attributes-tag
   0x04              printer-attributes-tag
   0x05              unsupported-attributes-tag
   0x06              subscription-attributes-tag
   0x07-0x0e         reserved for future delimiters
   0x0F              reserved for future chunking-end-of-attributes-
                      tag

When an xxx-attributes-tag occurs in the protocol, it MUST mean that
zero or more following attributes up to the next delimiter tag are
attributes belonging to group xxx as defined in the model document,
where xxx is operation, job, printer, unsupported, subscription.

Doing substitution for xxx in the above paragraph, this means the
following. When an operation-attributes-tag occurs in the protocol, it
MUST mean that the zero or more following attributes up to the next
delimiter tag are operation attributes as defined in the model document.
When an job-attributes-tag occurs in the protocol, it MUST mean that the
zero or more following attributes up to the next delimiter tag are job
attributes or job template attributes as defined in the model document.
When a printer-attributes-tag occurs in the protocol, it MUST mean that
the zero or more following attributes up to the next delimiter tag are
printer attributes as defined in the model document. When an
unsupported-attributes-tag occurs in the protocol, it MUST mean that the
zero or more following attributes up to the next delimiter tag are
unsupported attributes as defined in the model document.  When a
subscription-attributes-tag occurs in the protocol, it MUST mean that
the zero or more following attributes up to the next delimiter tag are
subscription attributes as defined in the [ipp-not] document.

Add a reference to [ipp-not].


16 References

[ipp-coll]
     deBry, R., , Hastings, T., Herriot, R., "Internet Printing
     Protocol/1.1: collection attribute syntax", <draft-ietf-ipp-
     collection-00.doc>, work in progress, September 9, 1999.

[ipp-iig]
     Hastings, T., Manros, C., "Internet Printing Protocol/1.1:  <draft-
     ietf-ipp-implementers-guide-v11-00.txt>, work in progress,
     September 27, 1999.





Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 53]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


[ipp-mod]
     deBry, R., Hastings, T., Herriot, R., Isaacson, S., Powell, P.,
     "Internet Printing Protocol/1.1: Model and Semantics", < draft-
     ietf-ipp-model-v11-04.txt>, work in progress, June 23, 1999.

[ipp-not-hist]
     deBry, R., Lewis, H., Hastings, T., "Internet Printing
     Protocol/1.1: Requirements for IPP Notifications", <draft-ietf-ipp-
     not-change-history-00.doc>, work in progress, August 22, 1999.

[ipp-not-req]
     deBry, R., Lewis, H., Hastings, T., "Internet Printing
     Protocol/1.1: Requirements for IPP Notifications", <draft-ietf-ipp-
     not-03.txt>, work in progress, August 11, 1999.

[ipp-pro]
     Herriot, R., Butler, S., Moore, P., Tuner, R., "Internet Printing
     Protocol/1.1: Encoding and Transport", <draft-ietf-ipp-protocol-
     v11-03.txt>, work in progress, June, 1999.

[ipp-prog]
     Hastings, T., Bergman, R., Lewis, H., "Proposed Job Progress
          Attributes for IPP", <draft-ietf-ipp-prog.txt>  work in
          progress, May 18, 1999.

[ipp-set2]
     Kugler, C., , Hastings, T., "Internet Printing Protocol/1.1:
     Additional Operations, Set 2", <draft-ietf-ipp-set2.txt>, work in
     progress, August 22, 1999.

[RFC2046]
     Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types.
     N. Freed & N. Borenstein. November 1996. (Obsoletes RFC1521,
     RFC1522, RFC1590), RFC 2046.

[RFC2119]
     S. Bradner, "Key words for use in RFCs to Indicate Requirement
     Levels", RFC 2119 , March 1997

[RFC2279]
     F. Yergeau , "UTF-8, a transformation format of ISO 10646", RFC
     2279. January 1998.

[RFC2566]
     deBry, R., , Hastings, T., Herriot, R., Isaacson, S., Powell, P.,
     "Internet Printing Protocol/1.0: Model and Semantics", RFC 2566,
     April 1999.

[RFC2639]
     Hastings, T., Manros, C., "Internet Printing Protocol/1.0:
     Implementer's Guide", RFC 2639, July 1999.

Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 54]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


17 Author's Addresses

   Scott A. Isaacson (Editor)
   Novell, Inc.
   122 E 1700 S
   Provo, UT  84606

   Phone: 801-861-7366
   Fax: 801-861-2517
   e-mail: sisaacson@novell.com

   Tom Hastings
   Xerox Corporation
   737 Hawaii St.  ESAE 231
   El Segundo, CA  90245

   Phone: 310-333-6413
   Fax: 310-333-5514
   e-mail: hastings@cp10.es.xerox.com

   Roger deBry
   Utah Valley State College
   Orem, UT 84058

   Phone: (801) 222-8000
   EMail: debryro@uvsc.edu

   Jay Martin
   e-mail: jkm@underscore.com

   Michael Shepherd
   Xerox Corporation
   800 Phillips Road  MS 128-51E
   Webster, NY  14450

   Phone: 716-422-2338
   Fax: 716-265-8871
   e-mail: mshepherd@crt.xerox.com

   Ron Bergman (Editor)
   Dataproducts Corp.
   1757 Tapo Canyon Road
   Simi Valley, CA 93063-3394

   Phone: 805-578-4421
   Fax:  805-578-4001
   Email: rbergman@dpc.com





Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 55]
                   Expires April 14, 2000




INTERNET-DRAFT IPP/1.1 Event Notification Specification    Oct 14, 1999


18 Appendix C: Full Copyright Statement

Copyright (C) The Internet Society (1998,1999). All Rights Reserved

This document and translations of it may be copied and furnished to
others, and derivative works that comment on or otherwise explain it or
assist in its implementation may be prepared, copied, published and
distributed, in whole or in part, without restriction of any kind,
provided that the above copyright notice and this paragraph are included
on all such copies and derivative works.  However, this document itself
may not be modified in any way, such as by removing the copyright notice
or references to the Internet Society or other Internet organizations,
except as needed for the purpose of developing Internet standards in
which case the procedures for copyrights defined in the Internet
Standards process must be followed, or as required to translate it into
languages other than English.

The limited permissions granted above are perpetual and will not be
revoked by the Internet Society or its successors or assigns.

This document and the information contained herein is provided on an "AS
IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK
FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT
LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT
INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR
FITNESS FOR A PARTICULAR PURPOSE.



























Isaacson, Martin, deBry, Hastings, Shepherd, Bergman          [page 56]
                   Expires April 14, 2000
